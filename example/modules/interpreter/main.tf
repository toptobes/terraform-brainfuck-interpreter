########################################################################
# This file was auto-generated by the Terrafuck CLI                    #
# https://github.com/toptobes/terrform-brainfuck-interpreter           #
#                                                                      #
# (please send help I'm locked in his basement being forced to re-type #
# all of this by hand each time the CLI is called or he won't feed me) #
########################################################################

variable "code" {}

variable "tape" {}

variable "tape_ptr" {}

variable "code_ptr" {}

variable "input" {}

variable "output" {}

variable "bracket_lut" {}

locals {
  ascii_lookup = { for i in range(0, 255) : jsondecode(format("\"\\u%04x\"", i)) => i }

  input_0 = var.input

  iter_0 = {
    output      = var.output
    tape        = var.tape
    tape_ptr    = var.tape_ptr
    code_ptr    = var.code_ptr
    steps_taken = 0
  }
}

locals {
  code_1 = (try(local.iter_0.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_0.code_ptr, local.iter_0.code_ptr + 2)
    : [null])

  input_1 = (local.code_1[0] == ","
    ? substr(local.input_0, local.code_1[1], -1)
    : local.input_0)

  iter_1 = try(local.iter_0.code_ptr >= length(var.code), true) ? local.iter_0 : {
    output = (local.code_1[0] == "."
      ? "${local.iter_0.output}${join("", [for _ in range(local.code_1[1]) : jsondecode(format("\"\\u%04x\"", local.iter_0.tape[local.iter_0.tape_ptr]))])}"
      : local.iter_0.output)
    
    tape = (
      local.code_1[0] == "+"
        ? [for i, b in local.iter_0.tape : (i == local.iter_0.tape_ptr ? (b + local.code_1[1]) % 256 : b)] :
      local.code_1[0] == "-"
        ? [for i, b in local.iter_0.tape : (i == local.iter_0.tape_ptr ? (b - local.code_1[1] + 256) % 256 : b)] :
      local.code_1[0] == ","
        ? [for i, b in local.iter_0.tape : (i == local.iter_0.tape_ptr ? local.ascii_lookup[substr(local.input_1, 0, 1)] : b)]
        : local.iter_0.tape)

    tape_ptr = (
      local.code_1[0] == "<"
        ? local.iter_0.tape_ptr - local.code_1[1] :
      local.code_1[0] == ">"
        ? local.iter_0.tape_ptr + local.code_1[1]
        : local.iter_0.tape_ptr)

    code_ptr = 2 + (
      local.code_1[0] == "["
        ? local.iter_0.tape[local.iter_0.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_0.code_ptr)] : local.iter_0.code_ptr :
      local.code_1[0] == "]"
        ? local.iter_0.tape[local.iter_0.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_0.code_ptr)] : local.iter_0.code_ptr
        : local.iter_0.code_ptr)

    steps_taken = 1 + local.iter_0.steps_taken
  }
}

locals {
  code_2 = (try(local.iter_1.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1.code_ptr, local.iter_1.code_ptr + 2)
    : [null])

  input_2 = (local.code_2[0] == ","
    ? substr(local.input_1, local.code_2[1], -1)
    : local.input_1)

  iter_2 = try(local.iter_1.code_ptr >= length(var.code), true) ? local.iter_1 : {
    output = (local.code_2[0] == "."
      ? "${local.iter_1.output}${join("", [for _ in range(local.code_2[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1.tape[local.iter_1.tape_ptr]))])}"
      : local.iter_1.output)
    
    tape = (
      local.code_2[0] == "+"
        ? [for i, b in local.iter_1.tape : (i == local.iter_1.tape_ptr ? (b + local.code_2[1]) % 256 : b)] :
      local.code_2[0] == "-"
        ? [for i, b in local.iter_1.tape : (i == local.iter_1.tape_ptr ? (b - local.code_2[1] + 256) % 256 : b)] :
      local.code_2[0] == ","
        ? [for i, b in local.iter_1.tape : (i == local.iter_1.tape_ptr ? local.ascii_lookup[substr(local.input_2, 0, 1)] : b)]
        : local.iter_1.tape)

    tape_ptr = (
      local.code_2[0] == "<"
        ? local.iter_1.tape_ptr - local.code_2[1] :
      local.code_2[0] == ">"
        ? local.iter_1.tape_ptr + local.code_2[1]
        : local.iter_1.tape_ptr)

    code_ptr = 2 + (
      local.code_2[0] == "["
        ? local.iter_1.tape[local.iter_1.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1.code_ptr)] : local.iter_1.code_ptr :
      local.code_2[0] == "]"
        ? local.iter_1.tape[local.iter_1.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1.code_ptr)] : local.iter_1.code_ptr
        : local.iter_1.code_ptr)

    steps_taken = 1 + local.iter_1.steps_taken
  }
}

locals {
  code_3 = (try(local.iter_2.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_2.code_ptr, local.iter_2.code_ptr + 2)
    : [null])

  input_3 = (local.code_3[0] == ","
    ? substr(local.input_2, local.code_3[1], -1)
    : local.input_2)

  iter_3 = try(local.iter_2.code_ptr >= length(var.code), true) ? local.iter_2 : {
    output = (local.code_3[0] == "."
      ? "${local.iter_2.output}${join("", [for _ in range(local.code_3[1]) : jsondecode(format("\"\\u%04x\"", local.iter_2.tape[local.iter_2.tape_ptr]))])}"
      : local.iter_2.output)
    
    tape = (
      local.code_3[0] == "+"
        ? [for i, b in local.iter_2.tape : (i == local.iter_2.tape_ptr ? (b + local.code_3[1]) % 256 : b)] :
      local.code_3[0] == "-"
        ? [for i, b in local.iter_2.tape : (i == local.iter_2.tape_ptr ? (b - local.code_3[1] + 256) % 256 : b)] :
      local.code_3[0] == ","
        ? [for i, b in local.iter_2.tape : (i == local.iter_2.tape_ptr ? local.ascii_lookup[substr(local.input_3, 0, 1)] : b)]
        : local.iter_2.tape)

    tape_ptr = (
      local.code_3[0] == "<"
        ? local.iter_2.tape_ptr - local.code_3[1] :
      local.code_3[0] == ">"
        ? local.iter_2.tape_ptr + local.code_3[1]
        : local.iter_2.tape_ptr)

    code_ptr = 2 + (
      local.code_3[0] == "["
        ? local.iter_2.tape[local.iter_2.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_2.code_ptr)] : local.iter_2.code_ptr :
      local.code_3[0] == "]"
        ? local.iter_2.tape[local.iter_2.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_2.code_ptr)] : local.iter_2.code_ptr
        : local.iter_2.code_ptr)

    steps_taken = 1 + local.iter_2.steps_taken
  }
}

locals {
  code_4 = (try(local.iter_3.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_3.code_ptr, local.iter_3.code_ptr + 2)
    : [null])

  input_4 = (local.code_4[0] == ","
    ? substr(local.input_3, local.code_4[1], -1)
    : local.input_3)

  iter_4 = try(local.iter_3.code_ptr >= length(var.code), true) ? local.iter_3 : {
    output = (local.code_4[0] == "."
      ? "${local.iter_3.output}${join("", [for _ in range(local.code_4[1]) : jsondecode(format("\"\\u%04x\"", local.iter_3.tape[local.iter_3.tape_ptr]))])}"
      : local.iter_3.output)
    
    tape = (
      local.code_4[0] == "+"
        ? [for i, b in local.iter_3.tape : (i == local.iter_3.tape_ptr ? (b + local.code_4[1]) % 256 : b)] :
      local.code_4[0] == "-"
        ? [for i, b in local.iter_3.tape : (i == local.iter_3.tape_ptr ? (b - local.code_4[1] + 256) % 256 : b)] :
      local.code_4[0] == ","
        ? [for i, b in local.iter_3.tape : (i == local.iter_3.tape_ptr ? local.ascii_lookup[substr(local.input_4, 0, 1)] : b)]
        : local.iter_3.tape)

    tape_ptr = (
      local.code_4[0] == "<"
        ? local.iter_3.tape_ptr - local.code_4[1] :
      local.code_4[0] == ">"
        ? local.iter_3.tape_ptr + local.code_4[1]
        : local.iter_3.tape_ptr)

    code_ptr = 2 + (
      local.code_4[0] == "["
        ? local.iter_3.tape[local.iter_3.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_3.code_ptr)] : local.iter_3.code_ptr :
      local.code_4[0] == "]"
        ? local.iter_3.tape[local.iter_3.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_3.code_ptr)] : local.iter_3.code_ptr
        : local.iter_3.code_ptr)

    steps_taken = 1 + local.iter_3.steps_taken
  }
}

locals {
  code_5 = (try(local.iter_4.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_4.code_ptr, local.iter_4.code_ptr + 2)
    : [null])

  input_5 = (local.code_5[0] == ","
    ? substr(local.input_4, local.code_5[1], -1)
    : local.input_4)

  iter_5 = try(local.iter_4.code_ptr >= length(var.code), true) ? local.iter_4 : {
    output = (local.code_5[0] == "."
      ? "${local.iter_4.output}${join("", [for _ in range(local.code_5[1]) : jsondecode(format("\"\\u%04x\"", local.iter_4.tape[local.iter_4.tape_ptr]))])}"
      : local.iter_4.output)
    
    tape = (
      local.code_5[0] == "+"
        ? [for i, b in local.iter_4.tape : (i == local.iter_4.tape_ptr ? (b + local.code_5[1]) % 256 : b)] :
      local.code_5[0] == "-"
        ? [for i, b in local.iter_4.tape : (i == local.iter_4.tape_ptr ? (b - local.code_5[1] + 256) % 256 : b)] :
      local.code_5[0] == ","
        ? [for i, b in local.iter_4.tape : (i == local.iter_4.tape_ptr ? local.ascii_lookup[substr(local.input_5, 0, 1)] : b)]
        : local.iter_4.tape)

    tape_ptr = (
      local.code_5[0] == "<"
        ? local.iter_4.tape_ptr - local.code_5[1] :
      local.code_5[0] == ">"
        ? local.iter_4.tape_ptr + local.code_5[1]
        : local.iter_4.tape_ptr)

    code_ptr = 2 + (
      local.code_5[0] == "["
        ? local.iter_4.tape[local.iter_4.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_4.code_ptr)] : local.iter_4.code_ptr :
      local.code_5[0] == "]"
        ? local.iter_4.tape[local.iter_4.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_4.code_ptr)] : local.iter_4.code_ptr
        : local.iter_4.code_ptr)

    steps_taken = 1 + local.iter_4.steps_taken
  }
}

locals {
  code_6 = (try(local.iter_5.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_5.code_ptr, local.iter_5.code_ptr + 2)
    : [null])

  input_6 = (local.code_6[0] == ","
    ? substr(local.input_5, local.code_6[1], -1)
    : local.input_5)

  iter_6 = try(local.iter_5.code_ptr >= length(var.code), true) ? local.iter_5 : {
    output = (local.code_6[0] == "."
      ? "${local.iter_5.output}${join("", [for _ in range(local.code_6[1]) : jsondecode(format("\"\\u%04x\"", local.iter_5.tape[local.iter_5.tape_ptr]))])}"
      : local.iter_5.output)
    
    tape = (
      local.code_6[0] == "+"
        ? [for i, b in local.iter_5.tape : (i == local.iter_5.tape_ptr ? (b + local.code_6[1]) % 256 : b)] :
      local.code_6[0] == "-"
        ? [for i, b in local.iter_5.tape : (i == local.iter_5.tape_ptr ? (b - local.code_6[1] + 256) % 256 : b)] :
      local.code_6[0] == ","
        ? [for i, b in local.iter_5.tape : (i == local.iter_5.tape_ptr ? local.ascii_lookup[substr(local.input_6, 0, 1)] : b)]
        : local.iter_5.tape)

    tape_ptr = (
      local.code_6[0] == "<"
        ? local.iter_5.tape_ptr - local.code_6[1] :
      local.code_6[0] == ">"
        ? local.iter_5.tape_ptr + local.code_6[1]
        : local.iter_5.tape_ptr)

    code_ptr = 2 + (
      local.code_6[0] == "["
        ? local.iter_5.tape[local.iter_5.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_5.code_ptr)] : local.iter_5.code_ptr :
      local.code_6[0] == "]"
        ? local.iter_5.tape[local.iter_5.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_5.code_ptr)] : local.iter_5.code_ptr
        : local.iter_5.code_ptr)

    steps_taken = 1 + local.iter_5.steps_taken
  }
}

locals {
  code_7 = (try(local.iter_6.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_6.code_ptr, local.iter_6.code_ptr + 2)
    : [null])

  input_7 = (local.code_7[0] == ","
    ? substr(local.input_6, local.code_7[1], -1)
    : local.input_6)

  iter_7 = try(local.iter_6.code_ptr >= length(var.code), true) ? local.iter_6 : {
    output = (local.code_7[0] == "."
      ? "${local.iter_6.output}${join("", [for _ in range(local.code_7[1]) : jsondecode(format("\"\\u%04x\"", local.iter_6.tape[local.iter_6.tape_ptr]))])}"
      : local.iter_6.output)
    
    tape = (
      local.code_7[0] == "+"
        ? [for i, b in local.iter_6.tape : (i == local.iter_6.tape_ptr ? (b + local.code_7[1]) % 256 : b)] :
      local.code_7[0] == "-"
        ? [for i, b in local.iter_6.tape : (i == local.iter_6.tape_ptr ? (b - local.code_7[1] + 256) % 256 : b)] :
      local.code_7[0] == ","
        ? [for i, b in local.iter_6.tape : (i == local.iter_6.tape_ptr ? local.ascii_lookup[substr(local.input_7, 0, 1)] : b)]
        : local.iter_6.tape)

    tape_ptr = (
      local.code_7[0] == "<"
        ? local.iter_6.tape_ptr - local.code_7[1] :
      local.code_7[0] == ">"
        ? local.iter_6.tape_ptr + local.code_7[1]
        : local.iter_6.tape_ptr)

    code_ptr = 2 + (
      local.code_7[0] == "["
        ? local.iter_6.tape[local.iter_6.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_6.code_ptr)] : local.iter_6.code_ptr :
      local.code_7[0] == "]"
        ? local.iter_6.tape[local.iter_6.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_6.code_ptr)] : local.iter_6.code_ptr
        : local.iter_6.code_ptr)

    steps_taken = 1 + local.iter_6.steps_taken
  }
}

locals {
  code_8 = (try(local.iter_7.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_7.code_ptr, local.iter_7.code_ptr + 2)
    : [null])

  input_8 = (local.code_8[0] == ","
    ? substr(local.input_7, local.code_8[1], -1)
    : local.input_7)

  iter_8 = try(local.iter_7.code_ptr >= length(var.code), true) ? local.iter_7 : {
    output = (local.code_8[0] == "."
      ? "${local.iter_7.output}${join("", [for _ in range(local.code_8[1]) : jsondecode(format("\"\\u%04x\"", local.iter_7.tape[local.iter_7.tape_ptr]))])}"
      : local.iter_7.output)
    
    tape = (
      local.code_8[0] == "+"
        ? [for i, b in local.iter_7.tape : (i == local.iter_7.tape_ptr ? (b + local.code_8[1]) % 256 : b)] :
      local.code_8[0] == "-"
        ? [for i, b in local.iter_7.tape : (i == local.iter_7.tape_ptr ? (b - local.code_8[1] + 256) % 256 : b)] :
      local.code_8[0] == ","
        ? [for i, b in local.iter_7.tape : (i == local.iter_7.tape_ptr ? local.ascii_lookup[substr(local.input_8, 0, 1)] : b)]
        : local.iter_7.tape)

    tape_ptr = (
      local.code_8[0] == "<"
        ? local.iter_7.tape_ptr - local.code_8[1] :
      local.code_8[0] == ">"
        ? local.iter_7.tape_ptr + local.code_8[1]
        : local.iter_7.tape_ptr)

    code_ptr = 2 + (
      local.code_8[0] == "["
        ? local.iter_7.tape[local.iter_7.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_7.code_ptr)] : local.iter_7.code_ptr :
      local.code_8[0] == "]"
        ? local.iter_7.tape[local.iter_7.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_7.code_ptr)] : local.iter_7.code_ptr
        : local.iter_7.code_ptr)

    steps_taken = 1 + local.iter_7.steps_taken
  }
}

locals {
  code_9 = (try(local.iter_8.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_8.code_ptr, local.iter_8.code_ptr + 2)
    : [null])

  input_9 = (local.code_9[0] == ","
    ? substr(local.input_8, local.code_9[1], -1)
    : local.input_8)

  iter_9 = try(local.iter_8.code_ptr >= length(var.code), true) ? local.iter_8 : {
    output = (local.code_9[0] == "."
      ? "${local.iter_8.output}${join("", [for _ in range(local.code_9[1]) : jsondecode(format("\"\\u%04x\"", local.iter_8.tape[local.iter_8.tape_ptr]))])}"
      : local.iter_8.output)
    
    tape = (
      local.code_9[0] == "+"
        ? [for i, b in local.iter_8.tape : (i == local.iter_8.tape_ptr ? (b + local.code_9[1]) % 256 : b)] :
      local.code_9[0] == "-"
        ? [for i, b in local.iter_8.tape : (i == local.iter_8.tape_ptr ? (b - local.code_9[1] + 256) % 256 : b)] :
      local.code_9[0] == ","
        ? [for i, b in local.iter_8.tape : (i == local.iter_8.tape_ptr ? local.ascii_lookup[substr(local.input_9, 0, 1)] : b)]
        : local.iter_8.tape)

    tape_ptr = (
      local.code_9[0] == "<"
        ? local.iter_8.tape_ptr - local.code_9[1] :
      local.code_9[0] == ">"
        ? local.iter_8.tape_ptr + local.code_9[1]
        : local.iter_8.tape_ptr)

    code_ptr = 2 + (
      local.code_9[0] == "["
        ? local.iter_8.tape[local.iter_8.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_8.code_ptr)] : local.iter_8.code_ptr :
      local.code_9[0] == "]"
        ? local.iter_8.tape[local.iter_8.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_8.code_ptr)] : local.iter_8.code_ptr
        : local.iter_8.code_ptr)

    steps_taken = 1 + local.iter_8.steps_taken
  }
}

locals {
  code_10 = (try(local.iter_9.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_9.code_ptr, local.iter_9.code_ptr + 2)
    : [null])

  input_10 = (local.code_10[0] == ","
    ? substr(local.input_9, local.code_10[1], -1)
    : local.input_9)

  iter_10 = try(local.iter_9.code_ptr >= length(var.code), true) ? local.iter_9 : {
    output = (local.code_10[0] == "."
      ? "${local.iter_9.output}${join("", [for _ in range(local.code_10[1]) : jsondecode(format("\"\\u%04x\"", local.iter_9.tape[local.iter_9.tape_ptr]))])}"
      : local.iter_9.output)
    
    tape = (
      local.code_10[0] == "+"
        ? [for i, b in local.iter_9.tape : (i == local.iter_9.tape_ptr ? (b + local.code_10[1]) % 256 : b)] :
      local.code_10[0] == "-"
        ? [for i, b in local.iter_9.tape : (i == local.iter_9.tape_ptr ? (b - local.code_10[1] + 256) % 256 : b)] :
      local.code_10[0] == ","
        ? [for i, b in local.iter_9.tape : (i == local.iter_9.tape_ptr ? local.ascii_lookup[substr(local.input_10, 0, 1)] : b)]
        : local.iter_9.tape)

    tape_ptr = (
      local.code_10[0] == "<"
        ? local.iter_9.tape_ptr - local.code_10[1] :
      local.code_10[0] == ">"
        ? local.iter_9.tape_ptr + local.code_10[1]
        : local.iter_9.tape_ptr)

    code_ptr = 2 + (
      local.code_10[0] == "["
        ? local.iter_9.tape[local.iter_9.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_9.code_ptr)] : local.iter_9.code_ptr :
      local.code_10[0] == "]"
        ? local.iter_9.tape[local.iter_9.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_9.code_ptr)] : local.iter_9.code_ptr
        : local.iter_9.code_ptr)

    steps_taken = 1 + local.iter_9.steps_taken
  }
}

locals {
  code_11 = (try(local.iter_10.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_10.code_ptr, local.iter_10.code_ptr + 2)
    : [null])

  input_11 = (local.code_11[0] == ","
    ? substr(local.input_10, local.code_11[1], -1)
    : local.input_10)

  iter_11 = try(local.iter_10.code_ptr >= length(var.code), true) ? local.iter_10 : {
    output = (local.code_11[0] == "."
      ? "${local.iter_10.output}${join("", [for _ in range(local.code_11[1]) : jsondecode(format("\"\\u%04x\"", local.iter_10.tape[local.iter_10.tape_ptr]))])}"
      : local.iter_10.output)
    
    tape = (
      local.code_11[0] == "+"
        ? [for i, b in local.iter_10.tape : (i == local.iter_10.tape_ptr ? (b + local.code_11[1]) % 256 : b)] :
      local.code_11[0] == "-"
        ? [for i, b in local.iter_10.tape : (i == local.iter_10.tape_ptr ? (b - local.code_11[1] + 256) % 256 : b)] :
      local.code_11[0] == ","
        ? [for i, b in local.iter_10.tape : (i == local.iter_10.tape_ptr ? local.ascii_lookup[substr(local.input_11, 0, 1)] : b)]
        : local.iter_10.tape)

    tape_ptr = (
      local.code_11[0] == "<"
        ? local.iter_10.tape_ptr - local.code_11[1] :
      local.code_11[0] == ">"
        ? local.iter_10.tape_ptr + local.code_11[1]
        : local.iter_10.tape_ptr)

    code_ptr = 2 + (
      local.code_11[0] == "["
        ? local.iter_10.tape[local.iter_10.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_10.code_ptr)] : local.iter_10.code_ptr :
      local.code_11[0] == "]"
        ? local.iter_10.tape[local.iter_10.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_10.code_ptr)] : local.iter_10.code_ptr
        : local.iter_10.code_ptr)

    steps_taken = 1 + local.iter_10.steps_taken
  }
}

locals {
  code_12 = (try(local.iter_11.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_11.code_ptr, local.iter_11.code_ptr + 2)
    : [null])

  input_12 = (local.code_12[0] == ","
    ? substr(local.input_11, local.code_12[1], -1)
    : local.input_11)

  iter_12 = try(local.iter_11.code_ptr >= length(var.code), true) ? local.iter_11 : {
    output = (local.code_12[0] == "."
      ? "${local.iter_11.output}${join("", [for _ in range(local.code_12[1]) : jsondecode(format("\"\\u%04x\"", local.iter_11.tape[local.iter_11.tape_ptr]))])}"
      : local.iter_11.output)
    
    tape = (
      local.code_12[0] == "+"
        ? [for i, b in local.iter_11.tape : (i == local.iter_11.tape_ptr ? (b + local.code_12[1]) % 256 : b)] :
      local.code_12[0] == "-"
        ? [for i, b in local.iter_11.tape : (i == local.iter_11.tape_ptr ? (b - local.code_12[1] + 256) % 256 : b)] :
      local.code_12[0] == ","
        ? [for i, b in local.iter_11.tape : (i == local.iter_11.tape_ptr ? local.ascii_lookup[substr(local.input_12, 0, 1)] : b)]
        : local.iter_11.tape)

    tape_ptr = (
      local.code_12[0] == "<"
        ? local.iter_11.tape_ptr - local.code_12[1] :
      local.code_12[0] == ">"
        ? local.iter_11.tape_ptr + local.code_12[1]
        : local.iter_11.tape_ptr)

    code_ptr = 2 + (
      local.code_12[0] == "["
        ? local.iter_11.tape[local.iter_11.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_11.code_ptr)] : local.iter_11.code_ptr :
      local.code_12[0] == "]"
        ? local.iter_11.tape[local.iter_11.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_11.code_ptr)] : local.iter_11.code_ptr
        : local.iter_11.code_ptr)

    steps_taken = 1 + local.iter_11.steps_taken
  }
}

locals {
  code_13 = (try(local.iter_12.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_12.code_ptr, local.iter_12.code_ptr + 2)
    : [null])

  input_13 = (local.code_13[0] == ","
    ? substr(local.input_12, local.code_13[1], -1)
    : local.input_12)

  iter_13 = try(local.iter_12.code_ptr >= length(var.code), true) ? local.iter_12 : {
    output = (local.code_13[0] == "."
      ? "${local.iter_12.output}${join("", [for _ in range(local.code_13[1]) : jsondecode(format("\"\\u%04x\"", local.iter_12.tape[local.iter_12.tape_ptr]))])}"
      : local.iter_12.output)
    
    tape = (
      local.code_13[0] == "+"
        ? [for i, b in local.iter_12.tape : (i == local.iter_12.tape_ptr ? (b + local.code_13[1]) % 256 : b)] :
      local.code_13[0] == "-"
        ? [for i, b in local.iter_12.tape : (i == local.iter_12.tape_ptr ? (b - local.code_13[1] + 256) % 256 : b)] :
      local.code_13[0] == ","
        ? [for i, b in local.iter_12.tape : (i == local.iter_12.tape_ptr ? local.ascii_lookup[substr(local.input_13, 0, 1)] : b)]
        : local.iter_12.tape)

    tape_ptr = (
      local.code_13[0] == "<"
        ? local.iter_12.tape_ptr - local.code_13[1] :
      local.code_13[0] == ">"
        ? local.iter_12.tape_ptr + local.code_13[1]
        : local.iter_12.tape_ptr)

    code_ptr = 2 + (
      local.code_13[0] == "["
        ? local.iter_12.tape[local.iter_12.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_12.code_ptr)] : local.iter_12.code_ptr :
      local.code_13[0] == "]"
        ? local.iter_12.tape[local.iter_12.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_12.code_ptr)] : local.iter_12.code_ptr
        : local.iter_12.code_ptr)

    steps_taken = 1 + local.iter_12.steps_taken
  }
}

locals {
  code_14 = (try(local.iter_13.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_13.code_ptr, local.iter_13.code_ptr + 2)
    : [null])

  input_14 = (local.code_14[0] == ","
    ? substr(local.input_13, local.code_14[1], -1)
    : local.input_13)

  iter_14 = try(local.iter_13.code_ptr >= length(var.code), true) ? local.iter_13 : {
    output = (local.code_14[0] == "."
      ? "${local.iter_13.output}${join("", [for _ in range(local.code_14[1]) : jsondecode(format("\"\\u%04x\"", local.iter_13.tape[local.iter_13.tape_ptr]))])}"
      : local.iter_13.output)
    
    tape = (
      local.code_14[0] == "+"
        ? [for i, b in local.iter_13.tape : (i == local.iter_13.tape_ptr ? (b + local.code_14[1]) % 256 : b)] :
      local.code_14[0] == "-"
        ? [for i, b in local.iter_13.tape : (i == local.iter_13.tape_ptr ? (b - local.code_14[1] + 256) % 256 : b)] :
      local.code_14[0] == ","
        ? [for i, b in local.iter_13.tape : (i == local.iter_13.tape_ptr ? local.ascii_lookup[substr(local.input_14, 0, 1)] : b)]
        : local.iter_13.tape)

    tape_ptr = (
      local.code_14[0] == "<"
        ? local.iter_13.tape_ptr - local.code_14[1] :
      local.code_14[0] == ">"
        ? local.iter_13.tape_ptr + local.code_14[1]
        : local.iter_13.tape_ptr)

    code_ptr = 2 + (
      local.code_14[0] == "["
        ? local.iter_13.tape[local.iter_13.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_13.code_ptr)] : local.iter_13.code_ptr :
      local.code_14[0] == "]"
        ? local.iter_13.tape[local.iter_13.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_13.code_ptr)] : local.iter_13.code_ptr
        : local.iter_13.code_ptr)

    steps_taken = 1 + local.iter_13.steps_taken
  }
}

locals {
  code_15 = (try(local.iter_14.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_14.code_ptr, local.iter_14.code_ptr + 2)
    : [null])

  input_15 = (local.code_15[0] == ","
    ? substr(local.input_14, local.code_15[1], -1)
    : local.input_14)

  iter_15 = try(local.iter_14.code_ptr >= length(var.code), true) ? local.iter_14 : {
    output = (local.code_15[0] == "."
      ? "${local.iter_14.output}${join("", [for _ in range(local.code_15[1]) : jsondecode(format("\"\\u%04x\"", local.iter_14.tape[local.iter_14.tape_ptr]))])}"
      : local.iter_14.output)
    
    tape = (
      local.code_15[0] == "+"
        ? [for i, b in local.iter_14.tape : (i == local.iter_14.tape_ptr ? (b + local.code_15[1]) % 256 : b)] :
      local.code_15[0] == "-"
        ? [for i, b in local.iter_14.tape : (i == local.iter_14.tape_ptr ? (b - local.code_15[1] + 256) % 256 : b)] :
      local.code_15[0] == ","
        ? [for i, b in local.iter_14.tape : (i == local.iter_14.tape_ptr ? local.ascii_lookup[substr(local.input_15, 0, 1)] : b)]
        : local.iter_14.tape)

    tape_ptr = (
      local.code_15[0] == "<"
        ? local.iter_14.tape_ptr - local.code_15[1] :
      local.code_15[0] == ">"
        ? local.iter_14.tape_ptr + local.code_15[1]
        : local.iter_14.tape_ptr)

    code_ptr = 2 + (
      local.code_15[0] == "["
        ? local.iter_14.tape[local.iter_14.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_14.code_ptr)] : local.iter_14.code_ptr :
      local.code_15[0] == "]"
        ? local.iter_14.tape[local.iter_14.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_14.code_ptr)] : local.iter_14.code_ptr
        : local.iter_14.code_ptr)

    steps_taken = 1 + local.iter_14.steps_taken
  }
}

locals {
  code_16 = (try(local.iter_15.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_15.code_ptr, local.iter_15.code_ptr + 2)
    : [null])

  input_16 = (local.code_16[0] == ","
    ? substr(local.input_15, local.code_16[1], -1)
    : local.input_15)

  iter_16 = try(local.iter_15.code_ptr >= length(var.code), true) ? local.iter_15 : {
    output = (local.code_16[0] == "."
      ? "${local.iter_15.output}${join("", [for _ in range(local.code_16[1]) : jsondecode(format("\"\\u%04x\"", local.iter_15.tape[local.iter_15.tape_ptr]))])}"
      : local.iter_15.output)
    
    tape = (
      local.code_16[0] == "+"
        ? [for i, b in local.iter_15.tape : (i == local.iter_15.tape_ptr ? (b + local.code_16[1]) % 256 : b)] :
      local.code_16[0] == "-"
        ? [for i, b in local.iter_15.tape : (i == local.iter_15.tape_ptr ? (b - local.code_16[1] + 256) % 256 : b)] :
      local.code_16[0] == ","
        ? [for i, b in local.iter_15.tape : (i == local.iter_15.tape_ptr ? local.ascii_lookup[substr(local.input_16, 0, 1)] : b)]
        : local.iter_15.tape)

    tape_ptr = (
      local.code_16[0] == "<"
        ? local.iter_15.tape_ptr - local.code_16[1] :
      local.code_16[0] == ">"
        ? local.iter_15.tape_ptr + local.code_16[1]
        : local.iter_15.tape_ptr)

    code_ptr = 2 + (
      local.code_16[0] == "["
        ? local.iter_15.tape[local.iter_15.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_15.code_ptr)] : local.iter_15.code_ptr :
      local.code_16[0] == "]"
        ? local.iter_15.tape[local.iter_15.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_15.code_ptr)] : local.iter_15.code_ptr
        : local.iter_15.code_ptr)

    steps_taken = 1 + local.iter_15.steps_taken
  }
}

locals {
  code_17 = (try(local.iter_16.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_16.code_ptr, local.iter_16.code_ptr + 2)
    : [null])

  input_17 = (local.code_17[0] == ","
    ? substr(local.input_16, local.code_17[1], -1)
    : local.input_16)

  iter_17 = try(local.iter_16.code_ptr >= length(var.code), true) ? local.iter_16 : {
    output = (local.code_17[0] == "."
      ? "${local.iter_16.output}${join("", [for _ in range(local.code_17[1]) : jsondecode(format("\"\\u%04x\"", local.iter_16.tape[local.iter_16.tape_ptr]))])}"
      : local.iter_16.output)
    
    tape = (
      local.code_17[0] == "+"
        ? [for i, b in local.iter_16.tape : (i == local.iter_16.tape_ptr ? (b + local.code_17[1]) % 256 : b)] :
      local.code_17[0] == "-"
        ? [for i, b in local.iter_16.tape : (i == local.iter_16.tape_ptr ? (b - local.code_17[1] + 256) % 256 : b)] :
      local.code_17[0] == ","
        ? [for i, b in local.iter_16.tape : (i == local.iter_16.tape_ptr ? local.ascii_lookup[substr(local.input_17, 0, 1)] : b)]
        : local.iter_16.tape)

    tape_ptr = (
      local.code_17[0] == "<"
        ? local.iter_16.tape_ptr - local.code_17[1] :
      local.code_17[0] == ">"
        ? local.iter_16.tape_ptr + local.code_17[1]
        : local.iter_16.tape_ptr)

    code_ptr = 2 + (
      local.code_17[0] == "["
        ? local.iter_16.tape[local.iter_16.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_16.code_ptr)] : local.iter_16.code_ptr :
      local.code_17[0] == "]"
        ? local.iter_16.tape[local.iter_16.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_16.code_ptr)] : local.iter_16.code_ptr
        : local.iter_16.code_ptr)

    steps_taken = 1 + local.iter_16.steps_taken
  }
}

locals {
  code_18 = (try(local.iter_17.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_17.code_ptr, local.iter_17.code_ptr + 2)
    : [null])

  input_18 = (local.code_18[0] == ","
    ? substr(local.input_17, local.code_18[1], -1)
    : local.input_17)

  iter_18 = try(local.iter_17.code_ptr >= length(var.code), true) ? local.iter_17 : {
    output = (local.code_18[0] == "."
      ? "${local.iter_17.output}${join("", [for _ in range(local.code_18[1]) : jsondecode(format("\"\\u%04x\"", local.iter_17.tape[local.iter_17.tape_ptr]))])}"
      : local.iter_17.output)
    
    tape = (
      local.code_18[0] == "+"
        ? [for i, b in local.iter_17.tape : (i == local.iter_17.tape_ptr ? (b + local.code_18[1]) % 256 : b)] :
      local.code_18[0] == "-"
        ? [for i, b in local.iter_17.tape : (i == local.iter_17.tape_ptr ? (b - local.code_18[1] + 256) % 256 : b)] :
      local.code_18[0] == ","
        ? [for i, b in local.iter_17.tape : (i == local.iter_17.tape_ptr ? local.ascii_lookup[substr(local.input_18, 0, 1)] : b)]
        : local.iter_17.tape)

    tape_ptr = (
      local.code_18[0] == "<"
        ? local.iter_17.tape_ptr - local.code_18[1] :
      local.code_18[0] == ">"
        ? local.iter_17.tape_ptr + local.code_18[1]
        : local.iter_17.tape_ptr)

    code_ptr = 2 + (
      local.code_18[0] == "["
        ? local.iter_17.tape[local.iter_17.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_17.code_ptr)] : local.iter_17.code_ptr :
      local.code_18[0] == "]"
        ? local.iter_17.tape[local.iter_17.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_17.code_ptr)] : local.iter_17.code_ptr
        : local.iter_17.code_ptr)

    steps_taken = 1 + local.iter_17.steps_taken
  }
}

locals {
  code_19 = (try(local.iter_18.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_18.code_ptr, local.iter_18.code_ptr + 2)
    : [null])

  input_19 = (local.code_19[0] == ","
    ? substr(local.input_18, local.code_19[1], -1)
    : local.input_18)

  iter_19 = try(local.iter_18.code_ptr >= length(var.code), true) ? local.iter_18 : {
    output = (local.code_19[0] == "."
      ? "${local.iter_18.output}${join("", [for _ in range(local.code_19[1]) : jsondecode(format("\"\\u%04x\"", local.iter_18.tape[local.iter_18.tape_ptr]))])}"
      : local.iter_18.output)
    
    tape = (
      local.code_19[0] == "+"
        ? [for i, b in local.iter_18.tape : (i == local.iter_18.tape_ptr ? (b + local.code_19[1]) % 256 : b)] :
      local.code_19[0] == "-"
        ? [for i, b in local.iter_18.tape : (i == local.iter_18.tape_ptr ? (b - local.code_19[1] + 256) % 256 : b)] :
      local.code_19[0] == ","
        ? [for i, b in local.iter_18.tape : (i == local.iter_18.tape_ptr ? local.ascii_lookup[substr(local.input_19, 0, 1)] : b)]
        : local.iter_18.tape)

    tape_ptr = (
      local.code_19[0] == "<"
        ? local.iter_18.tape_ptr - local.code_19[1] :
      local.code_19[0] == ">"
        ? local.iter_18.tape_ptr + local.code_19[1]
        : local.iter_18.tape_ptr)

    code_ptr = 2 + (
      local.code_19[0] == "["
        ? local.iter_18.tape[local.iter_18.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_18.code_ptr)] : local.iter_18.code_ptr :
      local.code_19[0] == "]"
        ? local.iter_18.tape[local.iter_18.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_18.code_ptr)] : local.iter_18.code_ptr
        : local.iter_18.code_ptr)

    steps_taken = 1 + local.iter_18.steps_taken
  }
}

locals {
  code_20 = (try(local.iter_19.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_19.code_ptr, local.iter_19.code_ptr + 2)
    : [null])

  input_20 = (local.code_20[0] == ","
    ? substr(local.input_19, local.code_20[1], -1)
    : local.input_19)

  iter_20 = try(local.iter_19.code_ptr >= length(var.code), true) ? local.iter_19 : {
    output = (local.code_20[0] == "."
      ? "${local.iter_19.output}${join("", [for _ in range(local.code_20[1]) : jsondecode(format("\"\\u%04x\"", local.iter_19.tape[local.iter_19.tape_ptr]))])}"
      : local.iter_19.output)
    
    tape = (
      local.code_20[0] == "+"
        ? [for i, b in local.iter_19.tape : (i == local.iter_19.tape_ptr ? (b + local.code_20[1]) % 256 : b)] :
      local.code_20[0] == "-"
        ? [for i, b in local.iter_19.tape : (i == local.iter_19.tape_ptr ? (b - local.code_20[1] + 256) % 256 : b)] :
      local.code_20[0] == ","
        ? [for i, b in local.iter_19.tape : (i == local.iter_19.tape_ptr ? local.ascii_lookup[substr(local.input_20, 0, 1)] : b)]
        : local.iter_19.tape)

    tape_ptr = (
      local.code_20[0] == "<"
        ? local.iter_19.tape_ptr - local.code_20[1] :
      local.code_20[0] == ">"
        ? local.iter_19.tape_ptr + local.code_20[1]
        : local.iter_19.tape_ptr)

    code_ptr = 2 + (
      local.code_20[0] == "["
        ? local.iter_19.tape[local.iter_19.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_19.code_ptr)] : local.iter_19.code_ptr :
      local.code_20[0] == "]"
        ? local.iter_19.tape[local.iter_19.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_19.code_ptr)] : local.iter_19.code_ptr
        : local.iter_19.code_ptr)

    steps_taken = 1 + local.iter_19.steps_taken
  }
}

locals {
  code_21 = (try(local.iter_20.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_20.code_ptr, local.iter_20.code_ptr + 2)
    : [null])

  input_21 = (local.code_21[0] == ","
    ? substr(local.input_20, local.code_21[1], -1)
    : local.input_20)

  iter_21 = try(local.iter_20.code_ptr >= length(var.code), true) ? local.iter_20 : {
    output = (local.code_21[0] == "."
      ? "${local.iter_20.output}${join("", [for _ in range(local.code_21[1]) : jsondecode(format("\"\\u%04x\"", local.iter_20.tape[local.iter_20.tape_ptr]))])}"
      : local.iter_20.output)
    
    tape = (
      local.code_21[0] == "+"
        ? [for i, b in local.iter_20.tape : (i == local.iter_20.tape_ptr ? (b + local.code_21[1]) % 256 : b)] :
      local.code_21[0] == "-"
        ? [for i, b in local.iter_20.tape : (i == local.iter_20.tape_ptr ? (b - local.code_21[1] + 256) % 256 : b)] :
      local.code_21[0] == ","
        ? [for i, b in local.iter_20.tape : (i == local.iter_20.tape_ptr ? local.ascii_lookup[substr(local.input_21, 0, 1)] : b)]
        : local.iter_20.tape)

    tape_ptr = (
      local.code_21[0] == "<"
        ? local.iter_20.tape_ptr - local.code_21[1] :
      local.code_21[0] == ">"
        ? local.iter_20.tape_ptr + local.code_21[1]
        : local.iter_20.tape_ptr)

    code_ptr = 2 + (
      local.code_21[0] == "["
        ? local.iter_20.tape[local.iter_20.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_20.code_ptr)] : local.iter_20.code_ptr :
      local.code_21[0] == "]"
        ? local.iter_20.tape[local.iter_20.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_20.code_ptr)] : local.iter_20.code_ptr
        : local.iter_20.code_ptr)

    steps_taken = 1 + local.iter_20.steps_taken
  }
}

locals {
  code_22 = (try(local.iter_21.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_21.code_ptr, local.iter_21.code_ptr + 2)
    : [null])

  input_22 = (local.code_22[0] == ","
    ? substr(local.input_21, local.code_22[1], -1)
    : local.input_21)

  iter_22 = try(local.iter_21.code_ptr >= length(var.code), true) ? local.iter_21 : {
    output = (local.code_22[0] == "."
      ? "${local.iter_21.output}${join("", [for _ in range(local.code_22[1]) : jsondecode(format("\"\\u%04x\"", local.iter_21.tape[local.iter_21.tape_ptr]))])}"
      : local.iter_21.output)
    
    tape = (
      local.code_22[0] == "+"
        ? [for i, b in local.iter_21.tape : (i == local.iter_21.tape_ptr ? (b + local.code_22[1]) % 256 : b)] :
      local.code_22[0] == "-"
        ? [for i, b in local.iter_21.tape : (i == local.iter_21.tape_ptr ? (b - local.code_22[1] + 256) % 256 : b)] :
      local.code_22[0] == ","
        ? [for i, b in local.iter_21.tape : (i == local.iter_21.tape_ptr ? local.ascii_lookup[substr(local.input_22, 0, 1)] : b)]
        : local.iter_21.tape)

    tape_ptr = (
      local.code_22[0] == "<"
        ? local.iter_21.tape_ptr - local.code_22[1] :
      local.code_22[0] == ">"
        ? local.iter_21.tape_ptr + local.code_22[1]
        : local.iter_21.tape_ptr)

    code_ptr = 2 + (
      local.code_22[0] == "["
        ? local.iter_21.tape[local.iter_21.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_21.code_ptr)] : local.iter_21.code_ptr :
      local.code_22[0] == "]"
        ? local.iter_21.tape[local.iter_21.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_21.code_ptr)] : local.iter_21.code_ptr
        : local.iter_21.code_ptr)

    steps_taken = 1 + local.iter_21.steps_taken
  }
}

locals {
  code_23 = (try(local.iter_22.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_22.code_ptr, local.iter_22.code_ptr + 2)
    : [null])

  input_23 = (local.code_23[0] == ","
    ? substr(local.input_22, local.code_23[1], -1)
    : local.input_22)

  iter_23 = try(local.iter_22.code_ptr >= length(var.code), true) ? local.iter_22 : {
    output = (local.code_23[0] == "."
      ? "${local.iter_22.output}${join("", [for _ in range(local.code_23[1]) : jsondecode(format("\"\\u%04x\"", local.iter_22.tape[local.iter_22.tape_ptr]))])}"
      : local.iter_22.output)
    
    tape = (
      local.code_23[0] == "+"
        ? [for i, b in local.iter_22.tape : (i == local.iter_22.tape_ptr ? (b + local.code_23[1]) % 256 : b)] :
      local.code_23[0] == "-"
        ? [for i, b in local.iter_22.tape : (i == local.iter_22.tape_ptr ? (b - local.code_23[1] + 256) % 256 : b)] :
      local.code_23[0] == ","
        ? [for i, b in local.iter_22.tape : (i == local.iter_22.tape_ptr ? local.ascii_lookup[substr(local.input_23, 0, 1)] : b)]
        : local.iter_22.tape)

    tape_ptr = (
      local.code_23[0] == "<"
        ? local.iter_22.tape_ptr - local.code_23[1] :
      local.code_23[0] == ">"
        ? local.iter_22.tape_ptr + local.code_23[1]
        : local.iter_22.tape_ptr)

    code_ptr = 2 + (
      local.code_23[0] == "["
        ? local.iter_22.tape[local.iter_22.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_22.code_ptr)] : local.iter_22.code_ptr :
      local.code_23[0] == "]"
        ? local.iter_22.tape[local.iter_22.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_22.code_ptr)] : local.iter_22.code_ptr
        : local.iter_22.code_ptr)

    steps_taken = 1 + local.iter_22.steps_taken
  }
}

locals {
  code_24 = (try(local.iter_23.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_23.code_ptr, local.iter_23.code_ptr + 2)
    : [null])

  input_24 = (local.code_24[0] == ","
    ? substr(local.input_23, local.code_24[1], -1)
    : local.input_23)

  iter_24 = try(local.iter_23.code_ptr >= length(var.code), true) ? local.iter_23 : {
    output = (local.code_24[0] == "."
      ? "${local.iter_23.output}${join("", [for _ in range(local.code_24[1]) : jsondecode(format("\"\\u%04x\"", local.iter_23.tape[local.iter_23.tape_ptr]))])}"
      : local.iter_23.output)
    
    tape = (
      local.code_24[0] == "+"
        ? [for i, b in local.iter_23.tape : (i == local.iter_23.tape_ptr ? (b + local.code_24[1]) % 256 : b)] :
      local.code_24[0] == "-"
        ? [for i, b in local.iter_23.tape : (i == local.iter_23.tape_ptr ? (b - local.code_24[1] + 256) % 256 : b)] :
      local.code_24[0] == ","
        ? [for i, b in local.iter_23.tape : (i == local.iter_23.tape_ptr ? local.ascii_lookup[substr(local.input_24, 0, 1)] : b)]
        : local.iter_23.tape)

    tape_ptr = (
      local.code_24[0] == "<"
        ? local.iter_23.tape_ptr - local.code_24[1] :
      local.code_24[0] == ">"
        ? local.iter_23.tape_ptr + local.code_24[1]
        : local.iter_23.tape_ptr)

    code_ptr = 2 + (
      local.code_24[0] == "["
        ? local.iter_23.tape[local.iter_23.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_23.code_ptr)] : local.iter_23.code_ptr :
      local.code_24[0] == "]"
        ? local.iter_23.tape[local.iter_23.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_23.code_ptr)] : local.iter_23.code_ptr
        : local.iter_23.code_ptr)

    steps_taken = 1 + local.iter_23.steps_taken
  }
}

locals {
  code_25 = (try(local.iter_24.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_24.code_ptr, local.iter_24.code_ptr + 2)
    : [null])

  input_25 = (local.code_25[0] == ","
    ? substr(local.input_24, local.code_25[1], -1)
    : local.input_24)

  iter_25 = try(local.iter_24.code_ptr >= length(var.code), true) ? local.iter_24 : {
    output = (local.code_25[0] == "."
      ? "${local.iter_24.output}${join("", [for _ in range(local.code_25[1]) : jsondecode(format("\"\\u%04x\"", local.iter_24.tape[local.iter_24.tape_ptr]))])}"
      : local.iter_24.output)
    
    tape = (
      local.code_25[0] == "+"
        ? [for i, b in local.iter_24.tape : (i == local.iter_24.tape_ptr ? (b + local.code_25[1]) % 256 : b)] :
      local.code_25[0] == "-"
        ? [for i, b in local.iter_24.tape : (i == local.iter_24.tape_ptr ? (b - local.code_25[1] + 256) % 256 : b)] :
      local.code_25[0] == ","
        ? [for i, b in local.iter_24.tape : (i == local.iter_24.tape_ptr ? local.ascii_lookup[substr(local.input_25, 0, 1)] : b)]
        : local.iter_24.tape)

    tape_ptr = (
      local.code_25[0] == "<"
        ? local.iter_24.tape_ptr - local.code_25[1] :
      local.code_25[0] == ">"
        ? local.iter_24.tape_ptr + local.code_25[1]
        : local.iter_24.tape_ptr)

    code_ptr = 2 + (
      local.code_25[0] == "["
        ? local.iter_24.tape[local.iter_24.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_24.code_ptr)] : local.iter_24.code_ptr :
      local.code_25[0] == "]"
        ? local.iter_24.tape[local.iter_24.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_24.code_ptr)] : local.iter_24.code_ptr
        : local.iter_24.code_ptr)

    steps_taken = 1 + local.iter_24.steps_taken
  }
}

locals {
  code_26 = (try(local.iter_25.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_25.code_ptr, local.iter_25.code_ptr + 2)
    : [null])

  input_26 = (local.code_26[0] == ","
    ? substr(local.input_25, local.code_26[1], -1)
    : local.input_25)

  iter_26 = try(local.iter_25.code_ptr >= length(var.code), true) ? local.iter_25 : {
    output = (local.code_26[0] == "."
      ? "${local.iter_25.output}${join("", [for _ in range(local.code_26[1]) : jsondecode(format("\"\\u%04x\"", local.iter_25.tape[local.iter_25.tape_ptr]))])}"
      : local.iter_25.output)
    
    tape = (
      local.code_26[0] == "+"
        ? [for i, b in local.iter_25.tape : (i == local.iter_25.tape_ptr ? (b + local.code_26[1]) % 256 : b)] :
      local.code_26[0] == "-"
        ? [for i, b in local.iter_25.tape : (i == local.iter_25.tape_ptr ? (b - local.code_26[1] + 256) % 256 : b)] :
      local.code_26[0] == ","
        ? [for i, b in local.iter_25.tape : (i == local.iter_25.tape_ptr ? local.ascii_lookup[substr(local.input_26, 0, 1)] : b)]
        : local.iter_25.tape)

    tape_ptr = (
      local.code_26[0] == "<"
        ? local.iter_25.tape_ptr - local.code_26[1] :
      local.code_26[0] == ">"
        ? local.iter_25.tape_ptr + local.code_26[1]
        : local.iter_25.tape_ptr)

    code_ptr = 2 + (
      local.code_26[0] == "["
        ? local.iter_25.tape[local.iter_25.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_25.code_ptr)] : local.iter_25.code_ptr :
      local.code_26[0] == "]"
        ? local.iter_25.tape[local.iter_25.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_25.code_ptr)] : local.iter_25.code_ptr
        : local.iter_25.code_ptr)

    steps_taken = 1 + local.iter_25.steps_taken
  }
}

locals {
  code_27 = (try(local.iter_26.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_26.code_ptr, local.iter_26.code_ptr + 2)
    : [null])

  input_27 = (local.code_27[0] == ","
    ? substr(local.input_26, local.code_27[1], -1)
    : local.input_26)

  iter_27 = try(local.iter_26.code_ptr >= length(var.code), true) ? local.iter_26 : {
    output = (local.code_27[0] == "."
      ? "${local.iter_26.output}${join("", [for _ in range(local.code_27[1]) : jsondecode(format("\"\\u%04x\"", local.iter_26.tape[local.iter_26.tape_ptr]))])}"
      : local.iter_26.output)
    
    tape = (
      local.code_27[0] == "+"
        ? [for i, b in local.iter_26.tape : (i == local.iter_26.tape_ptr ? (b + local.code_27[1]) % 256 : b)] :
      local.code_27[0] == "-"
        ? [for i, b in local.iter_26.tape : (i == local.iter_26.tape_ptr ? (b - local.code_27[1] + 256) % 256 : b)] :
      local.code_27[0] == ","
        ? [for i, b in local.iter_26.tape : (i == local.iter_26.tape_ptr ? local.ascii_lookup[substr(local.input_27, 0, 1)] : b)]
        : local.iter_26.tape)

    tape_ptr = (
      local.code_27[0] == "<"
        ? local.iter_26.tape_ptr - local.code_27[1] :
      local.code_27[0] == ">"
        ? local.iter_26.tape_ptr + local.code_27[1]
        : local.iter_26.tape_ptr)

    code_ptr = 2 + (
      local.code_27[0] == "["
        ? local.iter_26.tape[local.iter_26.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_26.code_ptr)] : local.iter_26.code_ptr :
      local.code_27[0] == "]"
        ? local.iter_26.tape[local.iter_26.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_26.code_ptr)] : local.iter_26.code_ptr
        : local.iter_26.code_ptr)

    steps_taken = 1 + local.iter_26.steps_taken
  }
}

locals {
  code_28 = (try(local.iter_27.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_27.code_ptr, local.iter_27.code_ptr + 2)
    : [null])

  input_28 = (local.code_28[0] == ","
    ? substr(local.input_27, local.code_28[1], -1)
    : local.input_27)

  iter_28 = try(local.iter_27.code_ptr >= length(var.code), true) ? local.iter_27 : {
    output = (local.code_28[0] == "."
      ? "${local.iter_27.output}${join("", [for _ in range(local.code_28[1]) : jsondecode(format("\"\\u%04x\"", local.iter_27.tape[local.iter_27.tape_ptr]))])}"
      : local.iter_27.output)
    
    tape = (
      local.code_28[0] == "+"
        ? [for i, b in local.iter_27.tape : (i == local.iter_27.tape_ptr ? (b + local.code_28[1]) % 256 : b)] :
      local.code_28[0] == "-"
        ? [for i, b in local.iter_27.tape : (i == local.iter_27.tape_ptr ? (b - local.code_28[1] + 256) % 256 : b)] :
      local.code_28[0] == ","
        ? [for i, b in local.iter_27.tape : (i == local.iter_27.tape_ptr ? local.ascii_lookup[substr(local.input_28, 0, 1)] : b)]
        : local.iter_27.tape)

    tape_ptr = (
      local.code_28[0] == "<"
        ? local.iter_27.tape_ptr - local.code_28[1] :
      local.code_28[0] == ">"
        ? local.iter_27.tape_ptr + local.code_28[1]
        : local.iter_27.tape_ptr)

    code_ptr = 2 + (
      local.code_28[0] == "["
        ? local.iter_27.tape[local.iter_27.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_27.code_ptr)] : local.iter_27.code_ptr :
      local.code_28[0] == "]"
        ? local.iter_27.tape[local.iter_27.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_27.code_ptr)] : local.iter_27.code_ptr
        : local.iter_27.code_ptr)

    steps_taken = 1 + local.iter_27.steps_taken
  }
}

locals {
  code_29 = (try(local.iter_28.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_28.code_ptr, local.iter_28.code_ptr + 2)
    : [null])

  input_29 = (local.code_29[0] == ","
    ? substr(local.input_28, local.code_29[1], -1)
    : local.input_28)

  iter_29 = try(local.iter_28.code_ptr >= length(var.code), true) ? local.iter_28 : {
    output = (local.code_29[0] == "."
      ? "${local.iter_28.output}${join("", [for _ in range(local.code_29[1]) : jsondecode(format("\"\\u%04x\"", local.iter_28.tape[local.iter_28.tape_ptr]))])}"
      : local.iter_28.output)
    
    tape = (
      local.code_29[0] == "+"
        ? [for i, b in local.iter_28.tape : (i == local.iter_28.tape_ptr ? (b + local.code_29[1]) % 256 : b)] :
      local.code_29[0] == "-"
        ? [for i, b in local.iter_28.tape : (i == local.iter_28.tape_ptr ? (b - local.code_29[1] + 256) % 256 : b)] :
      local.code_29[0] == ","
        ? [for i, b in local.iter_28.tape : (i == local.iter_28.tape_ptr ? local.ascii_lookup[substr(local.input_29, 0, 1)] : b)]
        : local.iter_28.tape)

    tape_ptr = (
      local.code_29[0] == "<"
        ? local.iter_28.tape_ptr - local.code_29[1] :
      local.code_29[0] == ">"
        ? local.iter_28.tape_ptr + local.code_29[1]
        : local.iter_28.tape_ptr)

    code_ptr = 2 + (
      local.code_29[0] == "["
        ? local.iter_28.tape[local.iter_28.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_28.code_ptr)] : local.iter_28.code_ptr :
      local.code_29[0] == "]"
        ? local.iter_28.tape[local.iter_28.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_28.code_ptr)] : local.iter_28.code_ptr
        : local.iter_28.code_ptr)

    steps_taken = 1 + local.iter_28.steps_taken
  }
}

locals {
  code_30 = (try(local.iter_29.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_29.code_ptr, local.iter_29.code_ptr + 2)
    : [null])

  input_30 = (local.code_30[0] == ","
    ? substr(local.input_29, local.code_30[1], -1)
    : local.input_29)

  iter_30 = try(local.iter_29.code_ptr >= length(var.code), true) ? local.iter_29 : {
    output = (local.code_30[0] == "."
      ? "${local.iter_29.output}${join("", [for _ in range(local.code_30[1]) : jsondecode(format("\"\\u%04x\"", local.iter_29.tape[local.iter_29.tape_ptr]))])}"
      : local.iter_29.output)
    
    tape = (
      local.code_30[0] == "+"
        ? [for i, b in local.iter_29.tape : (i == local.iter_29.tape_ptr ? (b + local.code_30[1]) % 256 : b)] :
      local.code_30[0] == "-"
        ? [for i, b in local.iter_29.tape : (i == local.iter_29.tape_ptr ? (b - local.code_30[1] + 256) % 256 : b)] :
      local.code_30[0] == ","
        ? [for i, b in local.iter_29.tape : (i == local.iter_29.tape_ptr ? local.ascii_lookup[substr(local.input_30, 0, 1)] : b)]
        : local.iter_29.tape)

    tape_ptr = (
      local.code_30[0] == "<"
        ? local.iter_29.tape_ptr - local.code_30[1] :
      local.code_30[0] == ">"
        ? local.iter_29.tape_ptr + local.code_30[1]
        : local.iter_29.tape_ptr)

    code_ptr = 2 + (
      local.code_30[0] == "["
        ? local.iter_29.tape[local.iter_29.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_29.code_ptr)] : local.iter_29.code_ptr :
      local.code_30[0] == "]"
        ? local.iter_29.tape[local.iter_29.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_29.code_ptr)] : local.iter_29.code_ptr
        : local.iter_29.code_ptr)

    steps_taken = 1 + local.iter_29.steps_taken
  }
}

locals {
  code_31 = (try(local.iter_30.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_30.code_ptr, local.iter_30.code_ptr + 2)
    : [null])

  input_31 = (local.code_31[0] == ","
    ? substr(local.input_30, local.code_31[1], -1)
    : local.input_30)

  iter_31 = try(local.iter_30.code_ptr >= length(var.code), true) ? local.iter_30 : {
    output = (local.code_31[0] == "."
      ? "${local.iter_30.output}${join("", [for _ in range(local.code_31[1]) : jsondecode(format("\"\\u%04x\"", local.iter_30.tape[local.iter_30.tape_ptr]))])}"
      : local.iter_30.output)
    
    tape = (
      local.code_31[0] == "+"
        ? [for i, b in local.iter_30.tape : (i == local.iter_30.tape_ptr ? (b + local.code_31[1]) % 256 : b)] :
      local.code_31[0] == "-"
        ? [for i, b in local.iter_30.tape : (i == local.iter_30.tape_ptr ? (b - local.code_31[1] + 256) % 256 : b)] :
      local.code_31[0] == ","
        ? [for i, b in local.iter_30.tape : (i == local.iter_30.tape_ptr ? local.ascii_lookup[substr(local.input_31, 0, 1)] : b)]
        : local.iter_30.tape)

    tape_ptr = (
      local.code_31[0] == "<"
        ? local.iter_30.tape_ptr - local.code_31[1] :
      local.code_31[0] == ">"
        ? local.iter_30.tape_ptr + local.code_31[1]
        : local.iter_30.tape_ptr)

    code_ptr = 2 + (
      local.code_31[0] == "["
        ? local.iter_30.tape[local.iter_30.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_30.code_ptr)] : local.iter_30.code_ptr :
      local.code_31[0] == "]"
        ? local.iter_30.tape[local.iter_30.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_30.code_ptr)] : local.iter_30.code_ptr
        : local.iter_30.code_ptr)

    steps_taken = 1 + local.iter_30.steps_taken
  }
}

locals {
  code_32 = (try(local.iter_31.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_31.code_ptr, local.iter_31.code_ptr + 2)
    : [null])

  input_32 = (local.code_32[0] == ","
    ? substr(local.input_31, local.code_32[1], -1)
    : local.input_31)

  iter_32 = try(local.iter_31.code_ptr >= length(var.code), true) ? local.iter_31 : {
    output = (local.code_32[0] == "."
      ? "${local.iter_31.output}${join("", [for _ in range(local.code_32[1]) : jsondecode(format("\"\\u%04x\"", local.iter_31.tape[local.iter_31.tape_ptr]))])}"
      : local.iter_31.output)
    
    tape = (
      local.code_32[0] == "+"
        ? [for i, b in local.iter_31.tape : (i == local.iter_31.tape_ptr ? (b + local.code_32[1]) % 256 : b)] :
      local.code_32[0] == "-"
        ? [for i, b in local.iter_31.tape : (i == local.iter_31.tape_ptr ? (b - local.code_32[1] + 256) % 256 : b)] :
      local.code_32[0] == ","
        ? [for i, b in local.iter_31.tape : (i == local.iter_31.tape_ptr ? local.ascii_lookup[substr(local.input_32, 0, 1)] : b)]
        : local.iter_31.tape)

    tape_ptr = (
      local.code_32[0] == "<"
        ? local.iter_31.tape_ptr - local.code_32[1] :
      local.code_32[0] == ">"
        ? local.iter_31.tape_ptr + local.code_32[1]
        : local.iter_31.tape_ptr)

    code_ptr = 2 + (
      local.code_32[0] == "["
        ? local.iter_31.tape[local.iter_31.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_31.code_ptr)] : local.iter_31.code_ptr :
      local.code_32[0] == "]"
        ? local.iter_31.tape[local.iter_31.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_31.code_ptr)] : local.iter_31.code_ptr
        : local.iter_31.code_ptr)

    steps_taken = 1 + local.iter_31.steps_taken
  }
}

locals {
  code_33 = (try(local.iter_32.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_32.code_ptr, local.iter_32.code_ptr + 2)
    : [null])

  input_33 = (local.code_33[0] == ","
    ? substr(local.input_32, local.code_33[1], -1)
    : local.input_32)

  iter_33 = try(local.iter_32.code_ptr >= length(var.code), true) ? local.iter_32 : {
    output = (local.code_33[0] == "."
      ? "${local.iter_32.output}${join("", [for _ in range(local.code_33[1]) : jsondecode(format("\"\\u%04x\"", local.iter_32.tape[local.iter_32.tape_ptr]))])}"
      : local.iter_32.output)
    
    tape = (
      local.code_33[0] == "+"
        ? [for i, b in local.iter_32.tape : (i == local.iter_32.tape_ptr ? (b + local.code_33[1]) % 256 : b)] :
      local.code_33[0] == "-"
        ? [for i, b in local.iter_32.tape : (i == local.iter_32.tape_ptr ? (b - local.code_33[1] + 256) % 256 : b)] :
      local.code_33[0] == ","
        ? [for i, b in local.iter_32.tape : (i == local.iter_32.tape_ptr ? local.ascii_lookup[substr(local.input_33, 0, 1)] : b)]
        : local.iter_32.tape)

    tape_ptr = (
      local.code_33[0] == "<"
        ? local.iter_32.tape_ptr - local.code_33[1] :
      local.code_33[0] == ">"
        ? local.iter_32.tape_ptr + local.code_33[1]
        : local.iter_32.tape_ptr)

    code_ptr = 2 + (
      local.code_33[0] == "["
        ? local.iter_32.tape[local.iter_32.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_32.code_ptr)] : local.iter_32.code_ptr :
      local.code_33[0] == "]"
        ? local.iter_32.tape[local.iter_32.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_32.code_ptr)] : local.iter_32.code_ptr
        : local.iter_32.code_ptr)

    steps_taken = 1 + local.iter_32.steps_taken
  }
}

locals {
  code_34 = (try(local.iter_33.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_33.code_ptr, local.iter_33.code_ptr + 2)
    : [null])

  input_34 = (local.code_34[0] == ","
    ? substr(local.input_33, local.code_34[1], -1)
    : local.input_33)

  iter_34 = try(local.iter_33.code_ptr >= length(var.code), true) ? local.iter_33 : {
    output = (local.code_34[0] == "."
      ? "${local.iter_33.output}${join("", [for _ in range(local.code_34[1]) : jsondecode(format("\"\\u%04x\"", local.iter_33.tape[local.iter_33.tape_ptr]))])}"
      : local.iter_33.output)
    
    tape = (
      local.code_34[0] == "+"
        ? [for i, b in local.iter_33.tape : (i == local.iter_33.tape_ptr ? (b + local.code_34[1]) % 256 : b)] :
      local.code_34[0] == "-"
        ? [for i, b in local.iter_33.tape : (i == local.iter_33.tape_ptr ? (b - local.code_34[1] + 256) % 256 : b)] :
      local.code_34[0] == ","
        ? [for i, b in local.iter_33.tape : (i == local.iter_33.tape_ptr ? local.ascii_lookup[substr(local.input_34, 0, 1)] : b)]
        : local.iter_33.tape)

    tape_ptr = (
      local.code_34[0] == "<"
        ? local.iter_33.tape_ptr - local.code_34[1] :
      local.code_34[0] == ">"
        ? local.iter_33.tape_ptr + local.code_34[1]
        : local.iter_33.tape_ptr)

    code_ptr = 2 + (
      local.code_34[0] == "["
        ? local.iter_33.tape[local.iter_33.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_33.code_ptr)] : local.iter_33.code_ptr :
      local.code_34[0] == "]"
        ? local.iter_33.tape[local.iter_33.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_33.code_ptr)] : local.iter_33.code_ptr
        : local.iter_33.code_ptr)

    steps_taken = 1 + local.iter_33.steps_taken
  }
}

locals {
  code_35 = (try(local.iter_34.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_34.code_ptr, local.iter_34.code_ptr + 2)
    : [null])

  input_35 = (local.code_35[0] == ","
    ? substr(local.input_34, local.code_35[1], -1)
    : local.input_34)

  iter_35 = try(local.iter_34.code_ptr >= length(var.code), true) ? local.iter_34 : {
    output = (local.code_35[0] == "."
      ? "${local.iter_34.output}${join("", [for _ in range(local.code_35[1]) : jsondecode(format("\"\\u%04x\"", local.iter_34.tape[local.iter_34.tape_ptr]))])}"
      : local.iter_34.output)
    
    tape = (
      local.code_35[0] == "+"
        ? [for i, b in local.iter_34.tape : (i == local.iter_34.tape_ptr ? (b + local.code_35[1]) % 256 : b)] :
      local.code_35[0] == "-"
        ? [for i, b in local.iter_34.tape : (i == local.iter_34.tape_ptr ? (b - local.code_35[1] + 256) % 256 : b)] :
      local.code_35[0] == ","
        ? [for i, b in local.iter_34.tape : (i == local.iter_34.tape_ptr ? local.ascii_lookup[substr(local.input_35, 0, 1)] : b)]
        : local.iter_34.tape)

    tape_ptr = (
      local.code_35[0] == "<"
        ? local.iter_34.tape_ptr - local.code_35[1] :
      local.code_35[0] == ">"
        ? local.iter_34.tape_ptr + local.code_35[1]
        : local.iter_34.tape_ptr)

    code_ptr = 2 + (
      local.code_35[0] == "["
        ? local.iter_34.tape[local.iter_34.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_34.code_ptr)] : local.iter_34.code_ptr :
      local.code_35[0] == "]"
        ? local.iter_34.tape[local.iter_34.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_34.code_ptr)] : local.iter_34.code_ptr
        : local.iter_34.code_ptr)

    steps_taken = 1 + local.iter_34.steps_taken
  }
}

locals {
  code_36 = (try(local.iter_35.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_35.code_ptr, local.iter_35.code_ptr + 2)
    : [null])

  input_36 = (local.code_36[0] == ","
    ? substr(local.input_35, local.code_36[1], -1)
    : local.input_35)

  iter_36 = try(local.iter_35.code_ptr >= length(var.code), true) ? local.iter_35 : {
    output = (local.code_36[0] == "."
      ? "${local.iter_35.output}${join("", [for _ in range(local.code_36[1]) : jsondecode(format("\"\\u%04x\"", local.iter_35.tape[local.iter_35.tape_ptr]))])}"
      : local.iter_35.output)
    
    tape = (
      local.code_36[0] == "+"
        ? [for i, b in local.iter_35.tape : (i == local.iter_35.tape_ptr ? (b + local.code_36[1]) % 256 : b)] :
      local.code_36[0] == "-"
        ? [for i, b in local.iter_35.tape : (i == local.iter_35.tape_ptr ? (b - local.code_36[1] + 256) % 256 : b)] :
      local.code_36[0] == ","
        ? [for i, b in local.iter_35.tape : (i == local.iter_35.tape_ptr ? local.ascii_lookup[substr(local.input_36, 0, 1)] : b)]
        : local.iter_35.tape)

    tape_ptr = (
      local.code_36[0] == "<"
        ? local.iter_35.tape_ptr - local.code_36[1] :
      local.code_36[0] == ">"
        ? local.iter_35.tape_ptr + local.code_36[1]
        : local.iter_35.tape_ptr)

    code_ptr = 2 + (
      local.code_36[0] == "["
        ? local.iter_35.tape[local.iter_35.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_35.code_ptr)] : local.iter_35.code_ptr :
      local.code_36[0] == "]"
        ? local.iter_35.tape[local.iter_35.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_35.code_ptr)] : local.iter_35.code_ptr
        : local.iter_35.code_ptr)

    steps_taken = 1 + local.iter_35.steps_taken
  }
}

locals {
  code_37 = (try(local.iter_36.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_36.code_ptr, local.iter_36.code_ptr + 2)
    : [null])

  input_37 = (local.code_37[0] == ","
    ? substr(local.input_36, local.code_37[1], -1)
    : local.input_36)

  iter_37 = try(local.iter_36.code_ptr >= length(var.code), true) ? local.iter_36 : {
    output = (local.code_37[0] == "."
      ? "${local.iter_36.output}${join("", [for _ in range(local.code_37[1]) : jsondecode(format("\"\\u%04x\"", local.iter_36.tape[local.iter_36.tape_ptr]))])}"
      : local.iter_36.output)
    
    tape = (
      local.code_37[0] == "+"
        ? [for i, b in local.iter_36.tape : (i == local.iter_36.tape_ptr ? (b + local.code_37[1]) % 256 : b)] :
      local.code_37[0] == "-"
        ? [for i, b in local.iter_36.tape : (i == local.iter_36.tape_ptr ? (b - local.code_37[1] + 256) % 256 : b)] :
      local.code_37[0] == ","
        ? [for i, b in local.iter_36.tape : (i == local.iter_36.tape_ptr ? local.ascii_lookup[substr(local.input_37, 0, 1)] : b)]
        : local.iter_36.tape)

    tape_ptr = (
      local.code_37[0] == "<"
        ? local.iter_36.tape_ptr - local.code_37[1] :
      local.code_37[0] == ">"
        ? local.iter_36.tape_ptr + local.code_37[1]
        : local.iter_36.tape_ptr)

    code_ptr = 2 + (
      local.code_37[0] == "["
        ? local.iter_36.tape[local.iter_36.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_36.code_ptr)] : local.iter_36.code_ptr :
      local.code_37[0] == "]"
        ? local.iter_36.tape[local.iter_36.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_36.code_ptr)] : local.iter_36.code_ptr
        : local.iter_36.code_ptr)

    steps_taken = 1 + local.iter_36.steps_taken
  }
}

locals {
  code_38 = (try(local.iter_37.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_37.code_ptr, local.iter_37.code_ptr + 2)
    : [null])

  input_38 = (local.code_38[0] == ","
    ? substr(local.input_37, local.code_38[1], -1)
    : local.input_37)

  iter_38 = try(local.iter_37.code_ptr >= length(var.code), true) ? local.iter_37 : {
    output = (local.code_38[0] == "."
      ? "${local.iter_37.output}${join("", [for _ in range(local.code_38[1]) : jsondecode(format("\"\\u%04x\"", local.iter_37.tape[local.iter_37.tape_ptr]))])}"
      : local.iter_37.output)
    
    tape = (
      local.code_38[0] == "+"
        ? [for i, b in local.iter_37.tape : (i == local.iter_37.tape_ptr ? (b + local.code_38[1]) % 256 : b)] :
      local.code_38[0] == "-"
        ? [for i, b in local.iter_37.tape : (i == local.iter_37.tape_ptr ? (b - local.code_38[1] + 256) % 256 : b)] :
      local.code_38[0] == ","
        ? [for i, b in local.iter_37.tape : (i == local.iter_37.tape_ptr ? local.ascii_lookup[substr(local.input_38, 0, 1)] : b)]
        : local.iter_37.tape)

    tape_ptr = (
      local.code_38[0] == "<"
        ? local.iter_37.tape_ptr - local.code_38[1] :
      local.code_38[0] == ">"
        ? local.iter_37.tape_ptr + local.code_38[1]
        : local.iter_37.tape_ptr)

    code_ptr = 2 + (
      local.code_38[0] == "["
        ? local.iter_37.tape[local.iter_37.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_37.code_ptr)] : local.iter_37.code_ptr :
      local.code_38[0] == "]"
        ? local.iter_37.tape[local.iter_37.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_37.code_ptr)] : local.iter_37.code_ptr
        : local.iter_37.code_ptr)

    steps_taken = 1 + local.iter_37.steps_taken
  }
}

locals {
  code_39 = (try(local.iter_38.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_38.code_ptr, local.iter_38.code_ptr + 2)
    : [null])

  input_39 = (local.code_39[0] == ","
    ? substr(local.input_38, local.code_39[1], -1)
    : local.input_38)

  iter_39 = try(local.iter_38.code_ptr >= length(var.code), true) ? local.iter_38 : {
    output = (local.code_39[0] == "."
      ? "${local.iter_38.output}${join("", [for _ in range(local.code_39[1]) : jsondecode(format("\"\\u%04x\"", local.iter_38.tape[local.iter_38.tape_ptr]))])}"
      : local.iter_38.output)
    
    tape = (
      local.code_39[0] == "+"
        ? [for i, b in local.iter_38.tape : (i == local.iter_38.tape_ptr ? (b + local.code_39[1]) % 256 : b)] :
      local.code_39[0] == "-"
        ? [for i, b in local.iter_38.tape : (i == local.iter_38.tape_ptr ? (b - local.code_39[1] + 256) % 256 : b)] :
      local.code_39[0] == ","
        ? [for i, b in local.iter_38.tape : (i == local.iter_38.tape_ptr ? local.ascii_lookup[substr(local.input_39, 0, 1)] : b)]
        : local.iter_38.tape)

    tape_ptr = (
      local.code_39[0] == "<"
        ? local.iter_38.tape_ptr - local.code_39[1] :
      local.code_39[0] == ">"
        ? local.iter_38.tape_ptr + local.code_39[1]
        : local.iter_38.tape_ptr)

    code_ptr = 2 + (
      local.code_39[0] == "["
        ? local.iter_38.tape[local.iter_38.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_38.code_ptr)] : local.iter_38.code_ptr :
      local.code_39[0] == "]"
        ? local.iter_38.tape[local.iter_38.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_38.code_ptr)] : local.iter_38.code_ptr
        : local.iter_38.code_ptr)

    steps_taken = 1 + local.iter_38.steps_taken
  }
}

locals {
  code_40 = (try(local.iter_39.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_39.code_ptr, local.iter_39.code_ptr + 2)
    : [null])

  input_40 = (local.code_40[0] == ","
    ? substr(local.input_39, local.code_40[1], -1)
    : local.input_39)

  iter_40 = try(local.iter_39.code_ptr >= length(var.code), true) ? local.iter_39 : {
    output = (local.code_40[0] == "."
      ? "${local.iter_39.output}${join("", [for _ in range(local.code_40[1]) : jsondecode(format("\"\\u%04x\"", local.iter_39.tape[local.iter_39.tape_ptr]))])}"
      : local.iter_39.output)
    
    tape = (
      local.code_40[0] == "+"
        ? [for i, b in local.iter_39.tape : (i == local.iter_39.tape_ptr ? (b + local.code_40[1]) % 256 : b)] :
      local.code_40[0] == "-"
        ? [for i, b in local.iter_39.tape : (i == local.iter_39.tape_ptr ? (b - local.code_40[1] + 256) % 256 : b)] :
      local.code_40[0] == ","
        ? [for i, b in local.iter_39.tape : (i == local.iter_39.tape_ptr ? local.ascii_lookup[substr(local.input_40, 0, 1)] : b)]
        : local.iter_39.tape)

    tape_ptr = (
      local.code_40[0] == "<"
        ? local.iter_39.tape_ptr - local.code_40[1] :
      local.code_40[0] == ">"
        ? local.iter_39.tape_ptr + local.code_40[1]
        : local.iter_39.tape_ptr)

    code_ptr = 2 + (
      local.code_40[0] == "["
        ? local.iter_39.tape[local.iter_39.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_39.code_ptr)] : local.iter_39.code_ptr :
      local.code_40[0] == "]"
        ? local.iter_39.tape[local.iter_39.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_39.code_ptr)] : local.iter_39.code_ptr
        : local.iter_39.code_ptr)

    steps_taken = 1 + local.iter_39.steps_taken
  }
}

locals {
  code_41 = (try(local.iter_40.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_40.code_ptr, local.iter_40.code_ptr + 2)
    : [null])

  input_41 = (local.code_41[0] == ","
    ? substr(local.input_40, local.code_41[1], -1)
    : local.input_40)

  iter_41 = try(local.iter_40.code_ptr >= length(var.code), true) ? local.iter_40 : {
    output = (local.code_41[0] == "."
      ? "${local.iter_40.output}${join("", [for _ in range(local.code_41[1]) : jsondecode(format("\"\\u%04x\"", local.iter_40.tape[local.iter_40.tape_ptr]))])}"
      : local.iter_40.output)
    
    tape = (
      local.code_41[0] == "+"
        ? [for i, b in local.iter_40.tape : (i == local.iter_40.tape_ptr ? (b + local.code_41[1]) % 256 : b)] :
      local.code_41[0] == "-"
        ? [for i, b in local.iter_40.tape : (i == local.iter_40.tape_ptr ? (b - local.code_41[1] + 256) % 256 : b)] :
      local.code_41[0] == ","
        ? [for i, b in local.iter_40.tape : (i == local.iter_40.tape_ptr ? local.ascii_lookup[substr(local.input_41, 0, 1)] : b)]
        : local.iter_40.tape)

    tape_ptr = (
      local.code_41[0] == "<"
        ? local.iter_40.tape_ptr - local.code_41[1] :
      local.code_41[0] == ">"
        ? local.iter_40.tape_ptr + local.code_41[1]
        : local.iter_40.tape_ptr)

    code_ptr = 2 + (
      local.code_41[0] == "["
        ? local.iter_40.tape[local.iter_40.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_40.code_ptr)] : local.iter_40.code_ptr :
      local.code_41[0] == "]"
        ? local.iter_40.tape[local.iter_40.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_40.code_ptr)] : local.iter_40.code_ptr
        : local.iter_40.code_ptr)

    steps_taken = 1 + local.iter_40.steps_taken
  }
}

locals {
  code_42 = (try(local.iter_41.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_41.code_ptr, local.iter_41.code_ptr + 2)
    : [null])

  input_42 = (local.code_42[0] == ","
    ? substr(local.input_41, local.code_42[1], -1)
    : local.input_41)

  iter_42 = try(local.iter_41.code_ptr >= length(var.code), true) ? local.iter_41 : {
    output = (local.code_42[0] == "."
      ? "${local.iter_41.output}${join("", [for _ in range(local.code_42[1]) : jsondecode(format("\"\\u%04x\"", local.iter_41.tape[local.iter_41.tape_ptr]))])}"
      : local.iter_41.output)
    
    tape = (
      local.code_42[0] == "+"
        ? [for i, b in local.iter_41.tape : (i == local.iter_41.tape_ptr ? (b + local.code_42[1]) % 256 : b)] :
      local.code_42[0] == "-"
        ? [for i, b in local.iter_41.tape : (i == local.iter_41.tape_ptr ? (b - local.code_42[1] + 256) % 256 : b)] :
      local.code_42[0] == ","
        ? [for i, b in local.iter_41.tape : (i == local.iter_41.tape_ptr ? local.ascii_lookup[substr(local.input_42, 0, 1)] : b)]
        : local.iter_41.tape)

    tape_ptr = (
      local.code_42[0] == "<"
        ? local.iter_41.tape_ptr - local.code_42[1] :
      local.code_42[0] == ">"
        ? local.iter_41.tape_ptr + local.code_42[1]
        : local.iter_41.tape_ptr)

    code_ptr = 2 + (
      local.code_42[0] == "["
        ? local.iter_41.tape[local.iter_41.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_41.code_ptr)] : local.iter_41.code_ptr :
      local.code_42[0] == "]"
        ? local.iter_41.tape[local.iter_41.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_41.code_ptr)] : local.iter_41.code_ptr
        : local.iter_41.code_ptr)

    steps_taken = 1 + local.iter_41.steps_taken
  }
}

locals {
  code_43 = (try(local.iter_42.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_42.code_ptr, local.iter_42.code_ptr + 2)
    : [null])

  input_43 = (local.code_43[0] == ","
    ? substr(local.input_42, local.code_43[1], -1)
    : local.input_42)

  iter_43 = try(local.iter_42.code_ptr >= length(var.code), true) ? local.iter_42 : {
    output = (local.code_43[0] == "."
      ? "${local.iter_42.output}${join("", [for _ in range(local.code_43[1]) : jsondecode(format("\"\\u%04x\"", local.iter_42.tape[local.iter_42.tape_ptr]))])}"
      : local.iter_42.output)
    
    tape = (
      local.code_43[0] == "+"
        ? [for i, b in local.iter_42.tape : (i == local.iter_42.tape_ptr ? (b + local.code_43[1]) % 256 : b)] :
      local.code_43[0] == "-"
        ? [for i, b in local.iter_42.tape : (i == local.iter_42.tape_ptr ? (b - local.code_43[1] + 256) % 256 : b)] :
      local.code_43[0] == ","
        ? [for i, b in local.iter_42.tape : (i == local.iter_42.tape_ptr ? local.ascii_lookup[substr(local.input_43, 0, 1)] : b)]
        : local.iter_42.tape)

    tape_ptr = (
      local.code_43[0] == "<"
        ? local.iter_42.tape_ptr - local.code_43[1] :
      local.code_43[0] == ">"
        ? local.iter_42.tape_ptr + local.code_43[1]
        : local.iter_42.tape_ptr)

    code_ptr = 2 + (
      local.code_43[0] == "["
        ? local.iter_42.tape[local.iter_42.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_42.code_ptr)] : local.iter_42.code_ptr :
      local.code_43[0] == "]"
        ? local.iter_42.tape[local.iter_42.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_42.code_ptr)] : local.iter_42.code_ptr
        : local.iter_42.code_ptr)

    steps_taken = 1 + local.iter_42.steps_taken
  }
}

locals {
  code_44 = (try(local.iter_43.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_43.code_ptr, local.iter_43.code_ptr + 2)
    : [null])

  input_44 = (local.code_44[0] == ","
    ? substr(local.input_43, local.code_44[1], -1)
    : local.input_43)

  iter_44 = try(local.iter_43.code_ptr >= length(var.code), true) ? local.iter_43 : {
    output = (local.code_44[0] == "."
      ? "${local.iter_43.output}${join("", [for _ in range(local.code_44[1]) : jsondecode(format("\"\\u%04x\"", local.iter_43.tape[local.iter_43.tape_ptr]))])}"
      : local.iter_43.output)
    
    tape = (
      local.code_44[0] == "+"
        ? [for i, b in local.iter_43.tape : (i == local.iter_43.tape_ptr ? (b + local.code_44[1]) % 256 : b)] :
      local.code_44[0] == "-"
        ? [for i, b in local.iter_43.tape : (i == local.iter_43.tape_ptr ? (b - local.code_44[1] + 256) % 256 : b)] :
      local.code_44[0] == ","
        ? [for i, b in local.iter_43.tape : (i == local.iter_43.tape_ptr ? local.ascii_lookup[substr(local.input_44, 0, 1)] : b)]
        : local.iter_43.tape)

    tape_ptr = (
      local.code_44[0] == "<"
        ? local.iter_43.tape_ptr - local.code_44[1] :
      local.code_44[0] == ">"
        ? local.iter_43.tape_ptr + local.code_44[1]
        : local.iter_43.tape_ptr)

    code_ptr = 2 + (
      local.code_44[0] == "["
        ? local.iter_43.tape[local.iter_43.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_43.code_ptr)] : local.iter_43.code_ptr :
      local.code_44[0] == "]"
        ? local.iter_43.tape[local.iter_43.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_43.code_ptr)] : local.iter_43.code_ptr
        : local.iter_43.code_ptr)

    steps_taken = 1 + local.iter_43.steps_taken
  }
}

locals {
  code_45 = (try(local.iter_44.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_44.code_ptr, local.iter_44.code_ptr + 2)
    : [null])

  input_45 = (local.code_45[0] == ","
    ? substr(local.input_44, local.code_45[1], -1)
    : local.input_44)

  iter_45 = try(local.iter_44.code_ptr >= length(var.code), true) ? local.iter_44 : {
    output = (local.code_45[0] == "."
      ? "${local.iter_44.output}${join("", [for _ in range(local.code_45[1]) : jsondecode(format("\"\\u%04x\"", local.iter_44.tape[local.iter_44.tape_ptr]))])}"
      : local.iter_44.output)
    
    tape = (
      local.code_45[0] == "+"
        ? [for i, b in local.iter_44.tape : (i == local.iter_44.tape_ptr ? (b + local.code_45[1]) % 256 : b)] :
      local.code_45[0] == "-"
        ? [for i, b in local.iter_44.tape : (i == local.iter_44.tape_ptr ? (b - local.code_45[1] + 256) % 256 : b)] :
      local.code_45[0] == ","
        ? [for i, b in local.iter_44.tape : (i == local.iter_44.tape_ptr ? local.ascii_lookup[substr(local.input_45, 0, 1)] : b)]
        : local.iter_44.tape)

    tape_ptr = (
      local.code_45[0] == "<"
        ? local.iter_44.tape_ptr - local.code_45[1] :
      local.code_45[0] == ">"
        ? local.iter_44.tape_ptr + local.code_45[1]
        : local.iter_44.tape_ptr)

    code_ptr = 2 + (
      local.code_45[0] == "["
        ? local.iter_44.tape[local.iter_44.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_44.code_ptr)] : local.iter_44.code_ptr :
      local.code_45[0] == "]"
        ? local.iter_44.tape[local.iter_44.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_44.code_ptr)] : local.iter_44.code_ptr
        : local.iter_44.code_ptr)

    steps_taken = 1 + local.iter_44.steps_taken
  }
}

locals {
  code_46 = (try(local.iter_45.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_45.code_ptr, local.iter_45.code_ptr + 2)
    : [null])

  input_46 = (local.code_46[0] == ","
    ? substr(local.input_45, local.code_46[1], -1)
    : local.input_45)

  iter_46 = try(local.iter_45.code_ptr >= length(var.code), true) ? local.iter_45 : {
    output = (local.code_46[0] == "."
      ? "${local.iter_45.output}${join("", [for _ in range(local.code_46[1]) : jsondecode(format("\"\\u%04x\"", local.iter_45.tape[local.iter_45.tape_ptr]))])}"
      : local.iter_45.output)
    
    tape = (
      local.code_46[0] == "+"
        ? [for i, b in local.iter_45.tape : (i == local.iter_45.tape_ptr ? (b + local.code_46[1]) % 256 : b)] :
      local.code_46[0] == "-"
        ? [for i, b in local.iter_45.tape : (i == local.iter_45.tape_ptr ? (b - local.code_46[1] + 256) % 256 : b)] :
      local.code_46[0] == ","
        ? [for i, b in local.iter_45.tape : (i == local.iter_45.tape_ptr ? local.ascii_lookup[substr(local.input_46, 0, 1)] : b)]
        : local.iter_45.tape)

    tape_ptr = (
      local.code_46[0] == "<"
        ? local.iter_45.tape_ptr - local.code_46[1] :
      local.code_46[0] == ">"
        ? local.iter_45.tape_ptr + local.code_46[1]
        : local.iter_45.tape_ptr)

    code_ptr = 2 + (
      local.code_46[0] == "["
        ? local.iter_45.tape[local.iter_45.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_45.code_ptr)] : local.iter_45.code_ptr :
      local.code_46[0] == "]"
        ? local.iter_45.tape[local.iter_45.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_45.code_ptr)] : local.iter_45.code_ptr
        : local.iter_45.code_ptr)

    steps_taken = 1 + local.iter_45.steps_taken
  }
}

locals {
  code_47 = (try(local.iter_46.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_46.code_ptr, local.iter_46.code_ptr + 2)
    : [null])

  input_47 = (local.code_47[0] == ","
    ? substr(local.input_46, local.code_47[1], -1)
    : local.input_46)

  iter_47 = try(local.iter_46.code_ptr >= length(var.code), true) ? local.iter_46 : {
    output = (local.code_47[0] == "."
      ? "${local.iter_46.output}${join("", [for _ in range(local.code_47[1]) : jsondecode(format("\"\\u%04x\"", local.iter_46.tape[local.iter_46.tape_ptr]))])}"
      : local.iter_46.output)
    
    tape = (
      local.code_47[0] == "+"
        ? [for i, b in local.iter_46.tape : (i == local.iter_46.tape_ptr ? (b + local.code_47[1]) % 256 : b)] :
      local.code_47[0] == "-"
        ? [for i, b in local.iter_46.tape : (i == local.iter_46.tape_ptr ? (b - local.code_47[1] + 256) % 256 : b)] :
      local.code_47[0] == ","
        ? [for i, b in local.iter_46.tape : (i == local.iter_46.tape_ptr ? local.ascii_lookup[substr(local.input_47, 0, 1)] : b)]
        : local.iter_46.tape)

    tape_ptr = (
      local.code_47[0] == "<"
        ? local.iter_46.tape_ptr - local.code_47[1] :
      local.code_47[0] == ">"
        ? local.iter_46.tape_ptr + local.code_47[1]
        : local.iter_46.tape_ptr)

    code_ptr = 2 + (
      local.code_47[0] == "["
        ? local.iter_46.tape[local.iter_46.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_46.code_ptr)] : local.iter_46.code_ptr :
      local.code_47[0] == "]"
        ? local.iter_46.tape[local.iter_46.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_46.code_ptr)] : local.iter_46.code_ptr
        : local.iter_46.code_ptr)

    steps_taken = 1 + local.iter_46.steps_taken
  }
}

locals {
  code_48 = (try(local.iter_47.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_47.code_ptr, local.iter_47.code_ptr + 2)
    : [null])

  input_48 = (local.code_48[0] == ","
    ? substr(local.input_47, local.code_48[1], -1)
    : local.input_47)

  iter_48 = try(local.iter_47.code_ptr >= length(var.code), true) ? local.iter_47 : {
    output = (local.code_48[0] == "."
      ? "${local.iter_47.output}${join("", [for _ in range(local.code_48[1]) : jsondecode(format("\"\\u%04x\"", local.iter_47.tape[local.iter_47.tape_ptr]))])}"
      : local.iter_47.output)
    
    tape = (
      local.code_48[0] == "+"
        ? [for i, b in local.iter_47.tape : (i == local.iter_47.tape_ptr ? (b + local.code_48[1]) % 256 : b)] :
      local.code_48[0] == "-"
        ? [for i, b in local.iter_47.tape : (i == local.iter_47.tape_ptr ? (b - local.code_48[1] + 256) % 256 : b)] :
      local.code_48[0] == ","
        ? [for i, b in local.iter_47.tape : (i == local.iter_47.tape_ptr ? local.ascii_lookup[substr(local.input_48, 0, 1)] : b)]
        : local.iter_47.tape)

    tape_ptr = (
      local.code_48[0] == "<"
        ? local.iter_47.tape_ptr - local.code_48[1] :
      local.code_48[0] == ">"
        ? local.iter_47.tape_ptr + local.code_48[1]
        : local.iter_47.tape_ptr)

    code_ptr = 2 + (
      local.code_48[0] == "["
        ? local.iter_47.tape[local.iter_47.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_47.code_ptr)] : local.iter_47.code_ptr :
      local.code_48[0] == "]"
        ? local.iter_47.tape[local.iter_47.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_47.code_ptr)] : local.iter_47.code_ptr
        : local.iter_47.code_ptr)

    steps_taken = 1 + local.iter_47.steps_taken
  }
}

locals {
  code_49 = (try(local.iter_48.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_48.code_ptr, local.iter_48.code_ptr + 2)
    : [null])

  input_49 = (local.code_49[0] == ","
    ? substr(local.input_48, local.code_49[1], -1)
    : local.input_48)

  iter_49 = try(local.iter_48.code_ptr >= length(var.code), true) ? local.iter_48 : {
    output = (local.code_49[0] == "."
      ? "${local.iter_48.output}${join("", [for _ in range(local.code_49[1]) : jsondecode(format("\"\\u%04x\"", local.iter_48.tape[local.iter_48.tape_ptr]))])}"
      : local.iter_48.output)
    
    tape = (
      local.code_49[0] == "+"
        ? [for i, b in local.iter_48.tape : (i == local.iter_48.tape_ptr ? (b + local.code_49[1]) % 256 : b)] :
      local.code_49[0] == "-"
        ? [for i, b in local.iter_48.tape : (i == local.iter_48.tape_ptr ? (b - local.code_49[1] + 256) % 256 : b)] :
      local.code_49[0] == ","
        ? [for i, b in local.iter_48.tape : (i == local.iter_48.tape_ptr ? local.ascii_lookup[substr(local.input_49, 0, 1)] : b)]
        : local.iter_48.tape)

    tape_ptr = (
      local.code_49[0] == "<"
        ? local.iter_48.tape_ptr - local.code_49[1] :
      local.code_49[0] == ">"
        ? local.iter_48.tape_ptr + local.code_49[1]
        : local.iter_48.tape_ptr)

    code_ptr = 2 + (
      local.code_49[0] == "["
        ? local.iter_48.tape[local.iter_48.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_48.code_ptr)] : local.iter_48.code_ptr :
      local.code_49[0] == "]"
        ? local.iter_48.tape[local.iter_48.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_48.code_ptr)] : local.iter_48.code_ptr
        : local.iter_48.code_ptr)

    steps_taken = 1 + local.iter_48.steps_taken
  }
}

locals {
  code_50 = (try(local.iter_49.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_49.code_ptr, local.iter_49.code_ptr + 2)
    : [null])

  input_50 = (local.code_50[0] == ","
    ? substr(local.input_49, local.code_50[1], -1)
    : local.input_49)

  iter_50 = try(local.iter_49.code_ptr >= length(var.code), true) ? local.iter_49 : {
    output = (local.code_50[0] == "."
      ? "${local.iter_49.output}${join("", [for _ in range(local.code_50[1]) : jsondecode(format("\"\\u%04x\"", local.iter_49.tape[local.iter_49.tape_ptr]))])}"
      : local.iter_49.output)
    
    tape = (
      local.code_50[0] == "+"
        ? [for i, b in local.iter_49.tape : (i == local.iter_49.tape_ptr ? (b + local.code_50[1]) % 256 : b)] :
      local.code_50[0] == "-"
        ? [for i, b in local.iter_49.tape : (i == local.iter_49.tape_ptr ? (b - local.code_50[1] + 256) % 256 : b)] :
      local.code_50[0] == ","
        ? [for i, b in local.iter_49.tape : (i == local.iter_49.tape_ptr ? local.ascii_lookup[substr(local.input_50, 0, 1)] : b)]
        : local.iter_49.tape)

    tape_ptr = (
      local.code_50[0] == "<"
        ? local.iter_49.tape_ptr - local.code_50[1] :
      local.code_50[0] == ">"
        ? local.iter_49.tape_ptr + local.code_50[1]
        : local.iter_49.tape_ptr)

    code_ptr = 2 + (
      local.code_50[0] == "["
        ? local.iter_49.tape[local.iter_49.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_49.code_ptr)] : local.iter_49.code_ptr :
      local.code_50[0] == "]"
        ? local.iter_49.tape[local.iter_49.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_49.code_ptr)] : local.iter_49.code_ptr
        : local.iter_49.code_ptr)

    steps_taken = 1 + local.iter_49.steps_taken
  }
}

locals {
  code_51 = (try(local.iter_50.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_50.code_ptr, local.iter_50.code_ptr + 2)
    : [null])

  input_51 = (local.code_51[0] == ","
    ? substr(local.input_50, local.code_51[1], -1)
    : local.input_50)

  iter_51 = try(local.iter_50.code_ptr >= length(var.code), true) ? local.iter_50 : {
    output = (local.code_51[0] == "."
      ? "${local.iter_50.output}${join("", [for _ in range(local.code_51[1]) : jsondecode(format("\"\\u%04x\"", local.iter_50.tape[local.iter_50.tape_ptr]))])}"
      : local.iter_50.output)
    
    tape = (
      local.code_51[0] == "+"
        ? [for i, b in local.iter_50.tape : (i == local.iter_50.tape_ptr ? (b + local.code_51[1]) % 256 : b)] :
      local.code_51[0] == "-"
        ? [for i, b in local.iter_50.tape : (i == local.iter_50.tape_ptr ? (b - local.code_51[1] + 256) % 256 : b)] :
      local.code_51[0] == ","
        ? [for i, b in local.iter_50.tape : (i == local.iter_50.tape_ptr ? local.ascii_lookup[substr(local.input_51, 0, 1)] : b)]
        : local.iter_50.tape)

    tape_ptr = (
      local.code_51[0] == "<"
        ? local.iter_50.tape_ptr - local.code_51[1] :
      local.code_51[0] == ">"
        ? local.iter_50.tape_ptr + local.code_51[1]
        : local.iter_50.tape_ptr)

    code_ptr = 2 + (
      local.code_51[0] == "["
        ? local.iter_50.tape[local.iter_50.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_50.code_ptr)] : local.iter_50.code_ptr :
      local.code_51[0] == "]"
        ? local.iter_50.tape[local.iter_50.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_50.code_ptr)] : local.iter_50.code_ptr
        : local.iter_50.code_ptr)

    steps_taken = 1 + local.iter_50.steps_taken
  }
}

locals {
  code_52 = (try(local.iter_51.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_51.code_ptr, local.iter_51.code_ptr + 2)
    : [null])

  input_52 = (local.code_52[0] == ","
    ? substr(local.input_51, local.code_52[1], -1)
    : local.input_51)

  iter_52 = try(local.iter_51.code_ptr >= length(var.code), true) ? local.iter_51 : {
    output = (local.code_52[0] == "."
      ? "${local.iter_51.output}${join("", [for _ in range(local.code_52[1]) : jsondecode(format("\"\\u%04x\"", local.iter_51.tape[local.iter_51.tape_ptr]))])}"
      : local.iter_51.output)
    
    tape = (
      local.code_52[0] == "+"
        ? [for i, b in local.iter_51.tape : (i == local.iter_51.tape_ptr ? (b + local.code_52[1]) % 256 : b)] :
      local.code_52[0] == "-"
        ? [for i, b in local.iter_51.tape : (i == local.iter_51.tape_ptr ? (b - local.code_52[1] + 256) % 256 : b)] :
      local.code_52[0] == ","
        ? [for i, b in local.iter_51.tape : (i == local.iter_51.tape_ptr ? local.ascii_lookup[substr(local.input_52, 0, 1)] : b)]
        : local.iter_51.tape)

    tape_ptr = (
      local.code_52[0] == "<"
        ? local.iter_51.tape_ptr - local.code_52[1] :
      local.code_52[0] == ">"
        ? local.iter_51.tape_ptr + local.code_52[1]
        : local.iter_51.tape_ptr)

    code_ptr = 2 + (
      local.code_52[0] == "["
        ? local.iter_51.tape[local.iter_51.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_51.code_ptr)] : local.iter_51.code_ptr :
      local.code_52[0] == "]"
        ? local.iter_51.tape[local.iter_51.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_51.code_ptr)] : local.iter_51.code_ptr
        : local.iter_51.code_ptr)

    steps_taken = 1 + local.iter_51.steps_taken
  }
}

locals {
  code_53 = (try(local.iter_52.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_52.code_ptr, local.iter_52.code_ptr + 2)
    : [null])

  input_53 = (local.code_53[0] == ","
    ? substr(local.input_52, local.code_53[1], -1)
    : local.input_52)

  iter_53 = try(local.iter_52.code_ptr >= length(var.code), true) ? local.iter_52 : {
    output = (local.code_53[0] == "."
      ? "${local.iter_52.output}${join("", [for _ in range(local.code_53[1]) : jsondecode(format("\"\\u%04x\"", local.iter_52.tape[local.iter_52.tape_ptr]))])}"
      : local.iter_52.output)
    
    tape = (
      local.code_53[0] == "+"
        ? [for i, b in local.iter_52.tape : (i == local.iter_52.tape_ptr ? (b + local.code_53[1]) % 256 : b)] :
      local.code_53[0] == "-"
        ? [for i, b in local.iter_52.tape : (i == local.iter_52.tape_ptr ? (b - local.code_53[1] + 256) % 256 : b)] :
      local.code_53[0] == ","
        ? [for i, b in local.iter_52.tape : (i == local.iter_52.tape_ptr ? local.ascii_lookup[substr(local.input_53, 0, 1)] : b)]
        : local.iter_52.tape)

    tape_ptr = (
      local.code_53[0] == "<"
        ? local.iter_52.tape_ptr - local.code_53[1] :
      local.code_53[0] == ">"
        ? local.iter_52.tape_ptr + local.code_53[1]
        : local.iter_52.tape_ptr)

    code_ptr = 2 + (
      local.code_53[0] == "["
        ? local.iter_52.tape[local.iter_52.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_52.code_ptr)] : local.iter_52.code_ptr :
      local.code_53[0] == "]"
        ? local.iter_52.tape[local.iter_52.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_52.code_ptr)] : local.iter_52.code_ptr
        : local.iter_52.code_ptr)

    steps_taken = 1 + local.iter_52.steps_taken
  }
}

locals {
  code_54 = (try(local.iter_53.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_53.code_ptr, local.iter_53.code_ptr + 2)
    : [null])

  input_54 = (local.code_54[0] == ","
    ? substr(local.input_53, local.code_54[1], -1)
    : local.input_53)

  iter_54 = try(local.iter_53.code_ptr >= length(var.code), true) ? local.iter_53 : {
    output = (local.code_54[0] == "."
      ? "${local.iter_53.output}${join("", [for _ in range(local.code_54[1]) : jsondecode(format("\"\\u%04x\"", local.iter_53.tape[local.iter_53.tape_ptr]))])}"
      : local.iter_53.output)
    
    tape = (
      local.code_54[0] == "+"
        ? [for i, b in local.iter_53.tape : (i == local.iter_53.tape_ptr ? (b + local.code_54[1]) % 256 : b)] :
      local.code_54[0] == "-"
        ? [for i, b in local.iter_53.tape : (i == local.iter_53.tape_ptr ? (b - local.code_54[1] + 256) % 256 : b)] :
      local.code_54[0] == ","
        ? [for i, b in local.iter_53.tape : (i == local.iter_53.tape_ptr ? local.ascii_lookup[substr(local.input_54, 0, 1)] : b)]
        : local.iter_53.tape)

    tape_ptr = (
      local.code_54[0] == "<"
        ? local.iter_53.tape_ptr - local.code_54[1] :
      local.code_54[0] == ">"
        ? local.iter_53.tape_ptr + local.code_54[1]
        : local.iter_53.tape_ptr)

    code_ptr = 2 + (
      local.code_54[0] == "["
        ? local.iter_53.tape[local.iter_53.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_53.code_ptr)] : local.iter_53.code_ptr :
      local.code_54[0] == "]"
        ? local.iter_53.tape[local.iter_53.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_53.code_ptr)] : local.iter_53.code_ptr
        : local.iter_53.code_ptr)

    steps_taken = 1 + local.iter_53.steps_taken
  }
}

locals {
  code_55 = (try(local.iter_54.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_54.code_ptr, local.iter_54.code_ptr + 2)
    : [null])

  input_55 = (local.code_55[0] == ","
    ? substr(local.input_54, local.code_55[1], -1)
    : local.input_54)

  iter_55 = try(local.iter_54.code_ptr >= length(var.code), true) ? local.iter_54 : {
    output = (local.code_55[0] == "."
      ? "${local.iter_54.output}${join("", [for _ in range(local.code_55[1]) : jsondecode(format("\"\\u%04x\"", local.iter_54.tape[local.iter_54.tape_ptr]))])}"
      : local.iter_54.output)
    
    tape = (
      local.code_55[0] == "+"
        ? [for i, b in local.iter_54.tape : (i == local.iter_54.tape_ptr ? (b + local.code_55[1]) % 256 : b)] :
      local.code_55[0] == "-"
        ? [for i, b in local.iter_54.tape : (i == local.iter_54.tape_ptr ? (b - local.code_55[1] + 256) % 256 : b)] :
      local.code_55[0] == ","
        ? [for i, b in local.iter_54.tape : (i == local.iter_54.tape_ptr ? local.ascii_lookup[substr(local.input_55, 0, 1)] : b)]
        : local.iter_54.tape)

    tape_ptr = (
      local.code_55[0] == "<"
        ? local.iter_54.tape_ptr - local.code_55[1] :
      local.code_55[0] == ">"
        ? local.iter_54.tape_ptr + local.code_55[1]
        : local.iter_54.tape_ptr)

    code_ptr = 2 + (
      local.code_55[0] == "["
        ? local.iter_54.tape[local.iter_54.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_54.code_ptr)] : local.iter_54.code_ptr :
      local.code_55[0] == "]"
        ? local.iter_54.tape[local.iter_54.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_54.code_ptr)] : local.iter_54.code_ptr
        : local.iter_54.code_ptr)

    steps_taken = 1 + local.iter_54.steps_taken
  }
}

locals {
  code_56 = (try(local.iter_55.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_55.code_ptr, local.iter_55.code_ptr + 2)
    : [null])

  input_56 = (local.code_56[0] == ","
    ? substr(local.input_55, local.code_56[1], -1)
    : local.input_55)

  iter_56 = try(local.iter_55.code_ptr >= length(var.code), true) ? local.iter_55 : {
    output = (local.code_56[0] == "."
      ? "${local.iter_55.output}${join("", [for _ in range(local.code_56[1]) : jsondecode(format("\"\\u%04x\"", local.iter_55.tape[local.iter_55.tape_ptr]))])}"
      : local.iter_55.output)
    
    tape = (
      local.code_56[0] == "+"
        ? [for i, b in local.iter_55.tape : (i == local.iter_55.tape_ptr ? (b + local.code_56[1]) % 256 : b)] :
      local.code_56[0] == "-"
        ? [for i, b in local.iter_55.tape : (i == local.iter_55.tape_ptr ? (b - local.code_56[1] + 256) % 256 : b)] :
      local.code_56[0] == ","
        ? [for i, b in local.iter_55.tape : (i == local.iter_55.tape_ptr ? local.ascii_lookup[substr(local.input_56, 0, 1)] : b)]
        : local.iter_55.tape)

    tape_ptr = (
      local.code_56[0] == "<"
        ? local.iter_55.tape_ptr - local.code_56[1] :
      local.code_56[0] == ">"
        ? local.iter_55.tape_ptr + local.code_56[1]
        : local.iter_55.tape_ptr)

    code_ptr = 2 + (
      local.code_56[0] == "["
        ? local.iter_55.tape[local.iter_55.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_55.code_ptr)] : local.iter_55.code_ptr :
      local.code_56[0] == "]"
        ? local.iter_55.tape[local.iter_55.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_55.code_ptr)] : local.iter_55.code_ptr
        : local.iter_55.code_ptr)

    steps_taken = 1 + local.iter_55.steps_taken
  }
}

locals {
  code_57 = (try(local.iter_56.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_56.code_ptr, local.iter_56.code_ptr + 2)
    : [null])

  input_57 = (local.code_57[0] == ","
    ? substr(local.input_56, local.code_57[1], -1)
    : local.input_56)

  iter_57 = try(local.iter_56.code_ptr >= length(var.code), true) ? local.iter_56 : {
    output = (local.code_57[0] == "."
      ? "${local.iter_56.output}${join("", [for _ in range(local.code_57[1]) : jsondecode(format("\"\\u%04x\"", local.iter_56.tape[local.iter_56.tape_ptr]))])}"
      : local.iter_56.output)
    
    tape = (
      local.code_57[0] == "+"
        ? [for i, b in local.iter_56.tape : (i == local.iter_56.tape_ptr ? (b + local.code_57[1]) % 256 : b)] :
      local.code_57[0] == "-"
        ? [for i, b in local.iter_56.tape : (i == local.iter_56.tape_ptr ? (b - local.code_57[1] + 256) % 256 : b)] :
      local.code_57[0] == ","
        ? [for i, b in local.iter_56.tape : (i == local.iter_56.tape_ptr ? local.ascii_lookup[substr(local.input_57, 0, 1)] : b)]
        : local.iter_56.tape)

    tape_ptr = (
      local.code_57[0] == "<"
        ? local.iter_56.tape_ptr - local.code_57[1] :
      local.code_57[0] == ">"
        ? local.iter_56.tape_ptr + local.code_57[1]
        : local.iter_56.tape_ptr)

    code_ptr = 2 + (
      local.code_57[0] == "["
        ? local.iter_56.tape[local.iter_56.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_56.code_ptr)] : local.iter_56.code_ptr :
      local.code_57[0] == "]"
        ? local.iter_56.tape[local.iter_56.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_56.code_ptr)] : local.iter_56.code_ptr
        : local.iter_56.code_ptr)

    steps_taken = 1 + local.iter_56.steps_taken
  }
}

locals {
  code_58 = (try(local.iter_57.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_57.code_ptr, local.iter_57.code_ptr + 2)
    : [null])

  input_58 = (local.code_58[0] == ","
    ? substr(local.input_57, local.code_58[1], -1)
    : local.input_57)

  iter_58 = try(local.iter_57.code_ptr >= length(var.code), true) ? local.iter_57 : {
    output = (local.code_58[0] == "."
      ? "${local.iter_57.output}${join("", [for _ in range(local.code_58[1]) : jsondecode(format("\"\\u%04x\"", local.iter_57.tape[local.iter_57.tape_ptr]))])}"
      : local.iter_57.output)
    
    tape = (
      local.code_58[0] == "+"
        ? [for i, b in local.iter_57.tape : (i == local.iter_57.tape_ptr ? (b + local.code_58[1]) % 256 : b)] :
      local.code_58[0] == "-"
        ? [for i, b in local.iter_57.tape : (i == local.iter_57.tape_ptr ? (b - local.code_58[1] + 256) % 256 : b)] :
      local.code_58[0] == ","
        ? [for i, b in local.iter_57.tape : (i == local.iter_57.tape_ptr ? local.ascii_lookup[substr(local.input_58, 0, 1)] : b)]
        : local.iter_57.tape)

    tape_ptr = (
      local.code_58[0] == "<"
        ? local.iter_57.tape_ptr - local.code_58[1] :
      local.code_58[0] == ">"
        ? local.iter_57.tape_ptr + local.code_58[1]
        : local.iter_57.tape_ptr)

    code_ptr = 2 + (
      local.code_58[0] == "["
        ? local.iter_57.tape[local.iter_57.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_57.code_ptr)] : local.iter_57.code_ptr :
      local.code_58[0] == "]"
        ? local.iter_57.tape[local.iter_57.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_57.code_ptr)] : local.iter_57.code_ptr
        : local.iter_57.code_ptr)

    steps_taken = 1 + local.iter_57.steps_taken
  }
}

locals {
  code_59 = (try(local.iter_58.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_58.code_ptr, local.iter_58.code_ptr + 2)
    : [null])

  input_59 = (local.code_59[0] == ","
    ? substr(local.input_58, local.code_59[1], -1)
    : local.input_58)

  iter_59 = try(local.iter_58.code_ptr >= length(var.code), true) ? local.iter_58 : {
    output = (local.code_59[0] == "."
      ? "${local.iter_58.output}${join("", [for _ in range(local.code_59[1]) : jsondecode(format("\"\\u%04x\"", local.iter_58.tape[local.iter_58.tape_ptr]))])}"
      : local.iter_58.output)
    
    tape = (
      local.code_59[0] == "+"
        ? [for i, b in local.iter_58.tape : (i == local.iter_58.tape_ptr ? (b + local.code_59[1]) % 256 : b)] :
      local.code_59[0] == "-"
        ? [for i, b in local.iter_58.tape : (i == local.iter_58.tape_ptr ? (b - local.code_59[1] + 256) % 256 : b)] :
      local.code_59[0] == ","
        ? [for i, b in local.iter_58.tape : (i == local.iter_58.tape_ptr ? local.ascii_lookup[substr(local.input_59, 0, 1)] : b)]
        : local.iter_58.tape)

    tape_ptr = (
      local.code_59[0] == "<"
        ? local.iter_58.tape_ptr - local.code_59[1] :
      local.code_59[0] == ">"
        ? local.iter_58.tape_ptr + local.code_59[1]
        : local.iter_58.tape_ptr)

    code_ptr = 2 + (
      local.code_59[0] == "["
        ? local.iter_58.tape[local.iter_58.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_58.code_ptr)] : local.iter_58.code_ptr :
      local.code_59[0] == "]"
        ? local.iter_58.tape[local.iter_58.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_58.code_ptr)] : local.iter_58.code_ptr
        : local.iter_58.code_ptr)

    steps_taken = 1 + local.iter_58.steps_taken
  }
}

locals {
  code_60 = (try(local.iter_59.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_59.code_ptr, local.iter_59.code_ptr + 2)
    : [null])

  input_60 = (local.code_60[0] == ","
    ? substr(local.input_59, local.code_60[1], -1)
    : local.input_59)

  iter_60 = try(local.iter_59.code_ptr >= length(var.code), true) ? local.iter_59 : {
    output = (local.code_60[0] == "."
      ? "${local.iter_59.output}${join("", [for _ in range(local.code_60[1]) : jsondecode(format("\"\\u%04x\"", local.iter_59.tape[local.iter_59.tape_ptr]))])}"
      : local.iter_59.output)
    
    tape = (
      local.code_60[0] == "+"
        ? [for i, b in local.iter_59.tape : (i == local.iter_59.tape_ptr ? (b + local.code_60[1]) % 256 : b)] :
      local.code_60[0] == "-"
        ? [for i, b in local.iter_59.tape : (i == local.iter_59.tape_ptr ? (b - local.code_60[1] + 256) % 256 : b)] :
      local.code_60[0] == ","
        ? [for i, b in local.iter_59.tape : (i == local.iter_59.tape_ptr ? local.ascii_lookup[substr(local.input_60, 0, 1)] : b)]
        : local.iter_59.tape)

    tape_ptr = (
      local.code_60[0] == "<"
        ? local.iter_59.tape_ptr - local.code_60[1] :
      local.code_60[0] == ">"
        ? local.iter_59.tape_ptr + local.code_60[1]
        : local.iter_59.tape_ptr)

    code_ptr = 2 + (
      local.code_60[0] == "["
        ? local.iter_59.tape[local.iter_59.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_59.code_ptr)] : local.iter_59.code_ptr :
      local.code_60[0] == "]"
        ? local.iter_59.tape[local.iter_59.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_59.code_ptr)] : local.iter_59.code_ptr
        : local.iter_59.code_ptr)

    steps_taken = 1 + local.iter_59.steps_taken
  }
}

locals {
  code_61 = (try(local.iter_60.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_60.code_ptr, local.iter_60.code_ptr + 2)
    : [null])

  input_61 = (local.code_61[0] == ","
    ? substr(local.input_60, local.code_61[1], -1)
    : local.input_60)

  iter_61 = try(local.iter_60.code_ptr >= length(var.code), true) ? local.iter_60 : {
    output = (local.code_61[0] == "."
      ? "${local.iter_60.output}${join("", [for _ in range(local.code_61[1]) : jsondecode(format("\"\\u%04x\"", local.iter_60.tape[local.iter_60.tape_ptr]))])}"
      : local.iter_60.output)
    
    tape = (
      local.code_61[0] == "+"
        ? [for i, b in local.iter_60.tape : (i == local.iter_60.tape_ptr ? (b + local.code_61[1]) % 256 : b)] :
      local.code_61[0] == "-"
        ? [for i, b in local.iter_60.tape : (i == local.iter_60.tape_ptr ? (b - local.code_61[1] + 256) % 256 : b)] :
      local.code_61[0] == ","
        ? [for i, b in local.iter_60.tape : (i == local.iter_60.tape_ptr ? local.ascii_lookup[substr(local.input_61, 0, 1)] : b)]
        : local.iter_60.tape)

    tape_ptr = (
      local.code_61[0] == "<"
        ? local.iter_60.tape_ptr - local.code_61[1] :
      local.code_61[0] == ">"
        ? local.iter_60.tape_ptr + local.code_61[1]
        : local.iter_60.tape_ptr)

    code_ptr = 2 + (
      local.code_61[0] == "["
        ? local.iter_60.tape[local.iter_60.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_60.code_ptr)] : local.iter_60.code_ptr :
      local.code_61[0] == "]"
        ? local.iter_60.tape[local.iter_60.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_60.code_ptr)] : local.iter_60.code_ptr
        : local.iter_60.code_ptr)

    steps_taken = 1 + local.iter_60.steps_taken
  }
}

locals {
  code_62 = (try(local.iter_61.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_61.code_ptr, local.iter_61.code_ptr + 2)
    : [null])

  input_62 = (local.code_62[0] == ","
    ? substr(local.input_61, local.code_62[1], -1)
    : local.input_61)

  iter_62 = try(local.iter_61.code_ptr >= length(var.code), true) ? local.iter_61 : {
    output = (local.code_62[0] == "."
      ? "${local.iter_61.output}${join("", [for _ in range(local.code_62[1]) : jsondecode(format("\"\\u%04x\"", local.iter_61.tape[local.iter_61.tape_ptr]))])}"
      : local.iter_61.output)
    
    tape = (
      local.code_62[0] == "+"
        ? [for i, b in local.iter_61.tape : (i == local.iter_61.tape_ptr ? (b + local.code_62[1]) % 256 : b)] :
      local.code_62[0] == "-"
        ? [for i, b in local.iter_61.tape : (i == local.iter_61.tape_ptr ? (b - local.code_62[1] + 256) % 256 : b)] :
      local.code_62[0] == ","
        ? [for i, b in local.iter_61.tape : (i == local.iter_61.tape_ptr ? local.ascii_lookup[substr(local.input_62, 0, 1)] : b)]
        : local.iter_61.tape)

    tape_ptr = (
      local.code_62[0] == "<"
        ? local.iter_61.tape_ptr - local.code_62[1] :
      local.code_62[0] == ">"
        ? local.iter_61.tape_ptr + local.code_62[1]
        : local.iter_61.tape_ptr)

    code_ptr = 2 + (
      local.code_62[0] == "["
        ? local.iter_61.tape[local.iter_61.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_61.code_ptr)] : local.iter_61.code_ptr :
      local.code_62[0] == "]"
        ? local.iter_61.tape[local.iter_61.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_61.code_ptr)] : local.iter_61.code_ptr
        : local.iter_61.code_ptr)

    steps_taken = 1 + local.iter_61.steps_taken
  }
}

locals {
  code_63 = (try(local.iter_62.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_62.code_ptr, local.iter_62.code_ptr + 2)
    : [null])

  input_63 = (local.code_63[0] == ","
    ? substr(local.input_62, local.code_63[1], -1)
    : local.input_62)

  iter_63 = try(local.iter_62.code_ptr >= length(var.code), true) ? local.iter_62 : {
    output = (local.code_63[0] == "."
      ? "${local.iter_62.output}${join("", [for _ in range(local.code_63[1]) : jsondecode(format("\"\\u%04x\"", local.iter_62.tape[local.iter_62.tape_ptr]))])}"
      : local.iter_62.output)
    
    tape = (
      local.code_63[0] == "+"
        ? [for i, b in local.iter_62.tape : (i == local.iter_62.tape_ptr ? (b + local.code_63[1]) % 256 : b)] :
      local.code_63[0] == "-"
        ? [for i, b in local.iter_62.tape : (i == local.iter_62.tape_ptr ? (b - local.code_63[1] + 256) % 256 : b)] :
      local.code_63[0] == ","
        ? [for i, b in local.iter_62.tape : (i == local.iter_62.tape_ptr ? local.ascii_lookup[substr(local.input_63, 0, 1)] : b)]
        : local.iter_62.tape)

    tape_ptr = (
      local.code_63[0] == "<"
        ? local.iter_62.tape_ptr - local.code_63[1] :
      local.code_63[0] == ">"
        ? local.iter_62.tape_ptr + local.code_63[1]
        : local.iter_62.tape_ptr)

    code_ptr = 2 + (
      local.code_63[0] == "["
        ? local.iter_62.tape[local.iter_62.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_62.code_ptr)] : local.iter_62.code_ptr :
      local.code_63[0] == "]"
        ? local.iter_62.tape[local.iter_62.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_62.code_ptr)] : local.iter_62.code_ptr
        : local.iter_62.code_ptr)

    steps_taken = 1 + local.iter_62.steps_taken
  }
}

locals {
  code_64 = (try(local.iter_63.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_63.code_ptr, local.iter_63.code_ptr + 2)
    : [null])

  input_64 = (local.code_64[0] == ","
    ? substr(local.input_63, local.code_64[1], -1)
    : local.input_63)

  iter_64 = try(local.iter_63.code_ptr >= length(var.code), true) ? local.iter_63 : {
    output = (local.code_64[0] == "."
      ? "${local.iter_63.output}${join("", [for _ in range(local.code_64[1]) : jsondecode(format("\"\\u%04x\"", local.iter_63.tape[local.iter_63.tape_ptr]))])}"
      : local.iter_63.output)
    
    tape = (
      local.code_64[0] == "+"
        ? [for i, b in local.iter_63.tape : (i == local.iter_63.tape_ptr ? (b + local.code_64[1]) % 256 : b)] :
      local.code_64[0] == "-"
        ? [for i, b in local.iter_63.tape : (i == local.iter_63.tape_ptr ? (b - local.code_64[1] + 256) % 256 : b)] :
      local.code_64[0] == ","
        ? [for i, b in local.iter_63.tape : (i == local.iter_63.tape_ptr ? local.ascii_lookup[substr(local.input_64, 0, 1)] : b)]
        : local.iter_63.tape)

    tape_ptr = (
      local.code_64[0] == "<"
        ? local.iter_63.tape_ptr - local.code_64[1] :
      local.code_64[0] == ">"
        ? local.iter_63.tape_ptr + local.code_64[1]
        : local.iter_63.tape_ptr)

    code_ptr = 2 + (
      local.code_64[0] == "["
        ? local.iter_63.tape[local.iter_63.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_63.code_ptr)] : local.iter_63.code_ptr :
      local.code_64[0] == "]"
        ? local.iter_63.tape[local.iter_63.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_63.code_ptr)] : local.iter_63.code_ptr
        : local.iter_63.code_ptr)

    steps_taken = 1 + local.iter_63.steps_taken
  }
}

locals {
  code_65 = (try(local.iter_64.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_64.code_ptr, local.iter_64.code_ptr + 2)
    : [null])

  input_65 = (local.code_65[0] == ","
    ? substr(local.input_64, local.code_65[1], -1)
    : local.input_64)

  iter_65 = try(local.iter_64.code_ptr >= length(var.code), true) ? local.iter_64 : {
    output = (local.code_65[0] == "."
      ? "${local.iter_64.output}${join("", [for _ in range(local.code_65[1]) : jsondecode(format("\"\\u%04x\"", local.iter_64.tape[local.iter_64.tape_ptr]))])}"
      : local.iter_64.output)
    
    tape = (
      local.code_65[0] == "+"
        ? [for i, b in local.iter_64.tape : (i == local.iter_64.tape_ptr ? (b + local.code_65[1]) % 256 : b)] :
      local.code_65[0] == "-"
        ? [for i, b in local.iter_64.tape : (i == local.iter_64.tape_ptr ? (b - local.code_65[1] + 256) % 256 : b)] :
      local.code_65[0] == ","
        ? [for i, b in local.iter_64.tape : (i == local.iter_64.tape_ptr ? local.ascii_lookup[substr(local.input_65, 0, 1)] : b)]
        : local.iter_64.tape)

    tape_ptr = (
      local.code_65[0] == "<"
        ? local.iter_64.tape_ptr - local.code_65[1] :
      local.code_65[0] == ">"
        ? local.iter_64.tape_ptr + local.code_65[1]
        : local.iter_64.tape_ptr)

    code_ptr = 2 + (
      local.code_65[0] == "["
        ? local.iter_64.tape[local.iter_64.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_64.code_ptr)] : local.iter_64.code_ptr :
      local.code_65[0] == "]"
        ? local.iter_64.tape[local.iter_64.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_64.code_ptr)] : local.iter_64.code_ptr
        : local.iter_64.code_ptr)

    steps_taken = 1 + local.iter_64.steps_taken
  }
}

locals {
  code_66 = (try(local.iter_65.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_65.code_ptr, local.iter_65.code_ptr + 2)
    : [null])

  input_66 = (local.code_66[0] == ","
    ? substr(local.input_65, local.code_66[1], -1)
    : local.input_65)

  iter_66 = try(local.iter_65.code_ptr >= length(var.code), true) ? local.iter_65 : {
    output = (local.code_66[0] == "."
      ? "${local.iter_65.output}${join("", [for _ in range(local.code_66[1]) : jsondecode(format("\"\\u%04x\"", local.iter_65.tape[local.iter_65.tape_ptr]))])}"
      : local.iter_65.output)
    
    tape = (
      local.code_66[0] == "+"
        ? [for i, b in local.iter_65.tape : (i == local.iter_65.tape_ptr ? (b + local.code_66[1]) % 256 : b)] :
      local.code_66[0] == "-"
        ? [for i, b in local.iter_65.tape : (i == local.iter_65.tape_ptr ? (b - local.code_66[1] + 256) % 256 : b)] :
      local.code_66[0] == ","
        ? [for i, b in local.iter_65.tape : (i == local.iter_65.tape_ptr ? local.ascii_lookup[substr(local.input_66, 0, 1)] : b)]
        : local.iter_65.tape)

    tape_ptr = (
      local.code_66[0] == "<"
        ? local.iter_65.tape_ptr - local.code_66[1] :
      local.code_66[0] == ">"
        ? local.iter_65.tape_ptr + local.code_66[1]
        : local.iter_65.tape_ptr)

    code_ptr = 2 + (
      local.code_66[0] == "["
        ? local.iter_65.tape[local.iter_65.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_65.code_ptr)] : local.iter_65.code_ptr :
      local.code_66[0] == "]"
        ? local.iter_65.tape[local.iter_65.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_65.code_ptr)] : local.iter_65.code_ptr
        : local.iter_65.code_ptr)

    steps_taken = 1 + local.iter_65.steps_taken
  }
}

locals {
  code_67 = (try(local.iter_66.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_66.code_ptr, local.iter_66.code_ptr + 2)
    : [null])

  input_67 = (local.code_67[0] == ","
    ? substr(local.input_66, local.code_67[1], -1)
    : local.input_66)

  iter_67 = try(local.iter_66.code_ptr >= length(var.code), true) ? local.iter_66 : {
    output = (local.code_67[0] == "."
      ? "${local.iter_66.output}${join("", [for _ in range(local.code_67[1]) : jsondecode(format("\"\\u%04x\"", local.iter_66.tape[local.iter_66.tape_ptr]))])}"
      : local.iter_66.output)
    
    tape = (
      local.code_67[0] == "+"
        ? [for i, b in local.iter_66.tape : (i == local.iter_66.tape_ptr ? (b + local.code_67[1]) % 256 : b)] :
      local.code_67[0] == "-"
        ? [for i, b in local.iter_66.tape : (i == local.iter_66.tape_ptr ? (b - local.code_67[1] + 256) % 256 : b)] :
      local.code_67[0] == ","
        ? [for i, b in local.iter_66.tape : (i == local.iter_66.tape_ptr ? local.ascii_lookup[substr(local.input_67, 0, 1)] : b)]
        : local.iter_66.tape)

    tape_ptr = (
      local.code_67[0] == "<"
        ? local.iter_66.tape_ptr - local.code_67[1] :
      local.code_67[0] == ">"
        ? local.iter_66.tape_ptr + local.code_67[1]
        : local.iter_66.tape_ptr)

    code_ptr = 2 + (
      local.code_67[0] == "["
        ? local.iter_66.tape[local.iter_66.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_66.code_ptr)] : local.iter_66.code_ptr :
      local.code_67[0] == "]"
        ? local.iter_66.tape[local.iter_66.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_66.code_ptr)] : local.iter_66.code_ptr
        : local.iter_66.code_ptr)

    steps_taken = 1 + local.iter_66.steps_taken
  }
}

locals {
  code_68 = (try(local.iter_67.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_67.code_ptr, local.iter_67.code_ptr + 2)
    : [null])

  input_68 = (local.code_68[0] == ","
    ? substr(local.input_67, local.code_68[1], -1)
    : local.input_67)

  iter_68 = try(local.iter_67.code_ptr >= length(var.code), true) ? local.iter_67 : {
    output = (local.code_68[0] == "."
      ? "${local.iter_67.output}${join("", [for _ in range(local.code_68[1]) : jsondecode(format("\"\\u%04x\"", local.iter_67.tape[local.iter_67.tape_ptr]))])}"
      : local.iter_67.output)
    
    tape = (
      local.code_68[0] == "+"
        ? [for i, b in local.iter_67.tape : (i == local.iter_67.tape_ptr ? (b + local.code_68[1]) % 256 : b)] :
      local.code_68[0] == "-"
        ? [for i, b in local.iter_67.tape : (i == local.iter_67.tape_ptr ? (b - local.code_68[1] + 256) % 256 : b)] :
      local.code_68[0] == ","
        ? [for i, b in local.iter_67.tape : (i == local.iter_67.tape_ptr ? local.ascii_lookup[substr(local.input_68, 0, 1)] : b)]
        : local.iter_67.tape)

    tape_ptr = (
      local.code_68[0] == "<"
        ? local.iter_67.tape_ptr - local.code_68[1] :
      local.code_68[0] == ">"
        ? local.iter_67.tape_ptr + local.code_68[1]
        : local.iter_67.tape_ptr)

    code_ptr = 2 + (
      local.code_68[0] == "["
        ? local.iter_67.tape[local.iter_67.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_67.code_ptr)] : local.iter_67.code_ptr :
      local.code_68[0] == "]"
        ? local.iter_67.tape[local.iter_67.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_67.code_ptr)] : local.iter_67.code_ptr
        : local.iter_67.code_ptr)

    steps_taken = 1 + local.iter_67.steps_taken
  }
}

locals {
  code_69 = (try(local.iter_68.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_68.code_ptr, local.iter_68.code_ptr + 2)
    : [null])

  input_69 = (local.code_69[0] == ","
    ? substr(local.input_68, local.code_69[1], -1)
    : local.input_68)

  iter_69 = try(local.iter_68.code_ptr >= length(var.code), true) ? local.iter_68 : {
    output = (local.code_69[0] == "."
      ? "${local.iter_68.output}${join("", [for _ in range(local.code_69[1]) : jsondecode(format("\"\\u%04x\"", local.iter_68.tape[local.iter_68.tape_ptr]))])}"
      : local.iter_68.output)
    
    tape = (
      local.code_69[0] == "+"
        ? [for i, b in local.iter_68.tape : (i == local.iter_68.tape_ptr ? (b + local.code_69[1]) % 256 : b)] :
      local.code_69[0] == "-"
        ? [for i, b in local.iter_68.tape : (i == local.iter_68.tape_ptr ? (b - local.code_69[1] + 256) % 256 : b)] :
      local.code_69[0] == ","
        ? [for i, b in local.iter_68.tape : (i == local.iter_68.tape_ptr ? local.ascii_lookup[substr(local.input_69, 0, 1)] : b)]
        : local.iter_68.tape)

    tape_ptr = (
      local.code_69[0] == "<"
        ? local.iter_68.tape_ptr - local.code_69[1] :
      local.code_69[0] == ">"
        ? local.iter_68.tape_ptr + local.code_69[1]
        : local.iter_68.tape_ptr)

    code_ptr = 2 + (
      local.code_69[0] == "["
        ? local.iter_68.tape[local.iter_68.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_68.code_ptr)] : local.iter_68.code_ptr :
      local.code_69[0] == "]"
        ? local.iter_68.tape[local.iter_68.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_68.code_ptr)] : local.iter_68.code_ptr
        : local.iter_68.code_ptr)

    steps_taken = 1 + local.iter_68.steps_taken
  }
}

locals {
  code_70 = (try(local.iter_69.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_69.code_ptr, local.iter_69.code_ptr + 2)
    : [null])

  input_70 = (local.code_70[0] == ","
    ? substr(local.input_69, local.code_70[1], -1)
    : local.input_69)

  iter_70 = try(local.iter_69.code_ptr >= length(var.code), true) ? local.iter_69 : {
    output = (local.code_70[0] == "."
      ? "${local.iter_69.output}${join("", [for _ in range(local.code_70[1]) : jsondecode(format("\"\\u%04x\"", local.iter_69.tape[local.iter_69.tape_ptr]))])}"
      : local.iter_69.output)
    
    tape = (
      local.code_70[0] == "+"
        ? [for i, b in local.iter_69.tape : (i == local.iter_69.tape_ptr ? (b + local.code_70[1]) % 256 : b)] :
      local.code_70[0] == "-"
        ? [for i, b in local.iter_69.tape : (i == local.iter_69.tape_ptr ? (b - local.code_70[1] + 256) % 256 : b)] :
      local.code_70[0] == ","
        ? [for i, b in local.iter_69.tape : (i == local.iter_69.tape_ptr ? local.ascii_lookup[substr(local.input_70, 0, 1)] : b)]
        : local.iter_69.tape)

    tape_ptr = (
      local.code_70[0] == "<"
        ? local.iter_69.tape_ptr - local.code_70[1] :
      local.code_70[0] == ">"
        ? local.iter_69.tape_ptr + local.code_70[1]
        : local.iter_69.tape_ptr)

    code_ptr = 2 + (
      local.code_70[0] == "["
        ? local.iter_69.tape[local.iter_69.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_69.code_ptr)] : local.iter_69.code_ptr :
      local.code_70[0] == "]"
        ? local.iter_69.tape[local.iter_69.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_69.code_ptr)] : local.iter_69.code_ptr
        : local.iter_69.code_ptr)

    steps_taken = 1 + local.iter_69.steps_taken
  }
}

locals {
  code_71 = (try(local.iter_70.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_70.code_ptr, local.iter_70.code_ptr + 2)
    : [null])

  input_71 = (local.code_71[0] == ","
    ? substr(local.input_70, local.code_71[1], -1)
    : local.input_70)

  iter_71 = try(local.iter_70.code_ptr >= length(var.code), true) ? local.iter_70 : {
    output = (local.code_71[0] == "."
      ? "${local.iter_70.output}${join("", [for _ in range(local.code_71[1]) : jsondecode(format("\"\\u%04x\"", local.iter_70.tape[local.iter_70.tape_ptr]))])}"
      : local.iter_70.output)
    
    tape = (
      local.code_71[0] == "+"
        ? [for i, b in local.iter_70.tape : (i == local.iter_70.tape_ptr ? (b + local.code_71[1]) % 256 : b)] :
      local.code_71[0] == "-"
        ? [for i, b in local.iter_70.tape : (i == local.iter_70.tape_ptr ? (b - local.code_71[1] + 256) % 256 : b)] :
      local.code_71[0] == ","
        ? [for i, b in local.iter_70.tape : (i == local.iter_70.tape_ptr ? local.ascii_lookup[substr(local.input_71, 0, 1)] : b)]
        : local.iter_70.tape)

    tape_ptr = (
      local.code_71[0] == "<"
        ? local.iter_70.tape_ptr - local.code_71[1] :
      local.code_71[0] == ">"
        ? local.iter_70.tape_ptr + local.code_71[1]
        : local.iter_70.tape_ptr)

    code_ptr = 2 + (
      local.code_71[0] == "["
        ? local.iter_70.tape[local.iter_70.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_70.code_ptr)] : local.iter_70.code_ptr :
      local.code_71[0] == "]"
        ? local.iter_70.tape[local.iter_70.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_70.code_ptr)] : local.iter_70.code_ptr
        : local.iter_70.code_ptr)

    steps_taken = 1 + local.iter_70.steps_taken
  }
}

locals {
  code_72 = (try(local.iter_71.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_71.code_ptr, local.iter_71.code_ptr + 2)
    : [null])

  input_72 = (local.code_72[0] == ","
    ? substr(local.input_71, local.code_72[1], -1)
    : local.input_71)

  iter_72 = try(local.iter_71.code_ptr >= length(var.code), true) ? local.iter_71 : {
    output = (local.code_72[0] == "."
      ? "${local.iter_71.output}${join("", [for _ in range(local.code_72[1]) : jsondecode(format("\"\\u%04x\"", local.iter_71.tape[local.iter_71.tape_ptr]))])}"
      : local.iter_71.output)
    
    tape = (
      local.code_72[0] == "+"
        ? [for i, b in local.iter_71.tape : (i == local.iter_71.tape_ptr ? (b + local.code_72[1]) % 256 : b)] :
      local.code_72[0] == "-"
        ? [for i, b in local.iter_71.tape : (i == local.iter_71.tape_ptr ? (b - local.code_72[1] + 256) % 256 : b)] :
      local.code_72[0] == ","
        ? [for i, b in local.iter_71.tape : (i == local.iter_71.tape_ptr ? local.ascii_lookup[substr(local.input_72, 0, 1)] : b)]
        : local.iter_71.tape)

    tape_ptr = (
      local.code_72[0] == "<"
        ? local.iter_71.tape_ptr - local.code_72[1] :
      local.code_72[0] == ">"
        ? local.iter_71.tape_ptr + local.code_72[1]
        : local.iter_71.tape_ptr)

    code_ptr = 2 + (
      local.code_72[0] == "["
        ? local.iter_71.tape[local.iter_71.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_71.code_ptr)] : local.iter_71.code_ptr :
      local.code_72[0] == "]"
        ? local.iter_71.tape[local.iter_71.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_71.code_ptr)] : local.iter_71.code_ptr
        : local.iter_71.code_ptr)

    steps_taken = 1 + local.iter_71.steps_taken
  }
}

locals {
  code_73 = (try(local.iter_72.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_72.code_ptr, local.iter_72.code_ptr + 2)
    : [null])

  input_73 = (local.code_73[0] == ","
    ? substr(local.input_72, local.code_73[1], -1)
    : local.input_72)

  iter_73 = try(local.iter_72.code_ptr >= length(var.code), true) ? local.iter_72 : {
    output = (local.code_73[0] == "."
      ? "${local.iter_72.output}${join("", [for _ in range(local.code_73[1]) : jsondecode(format("\"\\u%04x\"", local.iter_72.tape[local.iter_72.tape_ptr]))])}"
      : local.iter_72.output)
    
    tape = (
      local.code_73[0] == "+"
        ? [for i, b in local.iter_72.tape : (i == local.iter_72.tape_ptr ? (b + local.code_73[1]) % 256 : b)] :
      local.code_73[0] == "-"
        ? [for i, b in local.iter_72.tape : (i == local.iter_72.tape_ptr ? (b - local.code_73[1] + 256) % 256 : b)] :
      local.code_73[0] == ","
        ? [for i, b in local.iter_72.tape : (i == local.iter_72.tape_ptr ? local.ascii_lookup[substr(local.input_73, 0, 1)] : b)]
        : local.iter_72.tape)

    tape_ptr = (
      local.code_73[0] == "<"
        ? local.iter_72.tape_ptr - local.code_73[1] :
      local.code_73[0] == ">"
        ? local.iter_72.tape_ptr + local.code_73[1]
        : local.iter_72.tape_ptr)

    code_ptr = 2 + (
      local.code_73[0] == "["
        ? local.iter_72.tape[local.iter_72.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_72.code_ptr)] : local.iter_72.code_ptr :
      local.code_73[0] == "]"
        ? local.iter_72.tape[local.iter_72.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_72.code_ptr)] : local.iter_72.code_ptr
        : local.iter_72.code_ptr)

    steps_taken = 1 + local.iter_72.steps_taken
  }
}

locals {
  code_74 = (try(local.iter_73.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_73.code_ptr, local.iter_73.code_ptr + 2)
    : [null])

  input_74 = (local.code_74[0] == ","
    ? substr(local.input_73, local.code_74[1], -1)
    : local.input_73)

  iter_74 = try(local.iter_73.code_ptr >= length(var.code), true) ? local.iter_73 : {
    output = (local.code_74[0] == "."
      ? "${local.iter_73.output}${join("", [for _ in range(local.code_74[1]) : jsondecode(format("\"\\u%04x\"", local.iter_73.tape[local.iter_73.tape_ptr]))])}"
      : local.iter_73.output)
    
    tape = (
      local.code_74[0] == "+"
        ? [for i, b in local.iter_73.tape : (i == local.iter_73.tape_ptr ? (b + local.code_74[1]) % 256 : b)] :
      local.code_74[0] == "-"
        ? [for i, b in local.iter_73.tape : (i == local.iter_73.tape_ptr ? (b - local.code_74[1] + 256) % 256 : b)] :
      local.code_74[0] == ","
        ? [for i, b in local.iter_73.tape : (i == local.iter_73.tape_ptr ? local.ascii_lookup[substr(local.input_74, 0, 1)] : b)]
        : local.iter_73.tape)

    tape_ptr = (
      local.code_74[0] == "<"
        ? local.iter_73.tape_ptr - local.code_74[1] :
      local.code_74[0] == ">"
        ? local.iter_73.tape_ptr + local.code_74[1]
        : local.iter_73.tape_ptr)

    code_ptr = 2 + (
      local.code_74[0] == "["
        ? local.iter_73.tape[local.iter_73.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_73.code_ptr)] : local.iter_73.code_ptr :
      local.code_74[0] == "]"
        ? local.iter_73.tape[local.iter_73.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_73.code_ptr)] : local.iter_73.code_ptr
        : local.iter_73.code_ptr)

    steps_taken = 1 + local.iter_73.steps_taken
  }
}

locals {
  code_75 = (try(local.iter_74.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_74.code_ptr, local.iter_74.code_ptr + 2)
    : [null])

  input_75 = (local.code_75[0] == ","
    ? substr(local.input_74, local.code_75[1], -1)
    : local.input_74)

  iter_75 = try(local.iter_74.code_ptr >= length(var.code), true) ? local.iter_74 : {
    output = (local.code_75[0] == "."
      ? "${local.iter_74.output}${join("", [for _ in range(local.code_75[1]) : jsondecode(format("\"\\u%04x\"", local.iter_74.tape[local.iter_74.tape_ptr]))])}"
      : local.iter_74.output)
    
    tape = (
      local.code_75[0] == "+"
        ? [for i, b in local.iter_74.tape : (i == local.iter_74.tape_ptr ? (b + local.code_75[1]) % 256 : b)] :
      local.code_75[0] == "-"
        ? [for i, b in local.iter_74.tape : (i == local.iter_74.tape_ptr ? (b - local.code_75[1] + 256) % 256 : b)] :
      local.code_75[0] == ","
        ? [for i, b in local.iter_74.tape : (i == local.iter_74.tape_ptr ? local.ascii_lookup[substr(local.input_75, 0, 1)] : b)]
        : local.iter_74.tape)

    tape_ptr = (
      local.code_75[0] == "<"
        ? local.iter_74.tape_ptr - local.code_75[1] :
      local.code_75[0] == ">"
        ? local.iter_74.tape_ptr + local.code_75[1]
        : local.iter_74.tape_ptr)

    code_ptr = 2 + (
      local.code_75[0] == "["
        ? local.iter_74.tape[local.iter_74.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_74.code_ptr)] : local.iter_74.code_ptr :
      local.code_75[0] == "]"
        ? local.iter_74.tape[local.iter_74.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_74.code_ptr)] : local.iter_74.code_ptr
        : local.iter_74.code_ptr)

    steps_taken = 1 + local.iter_74.steps_taken
  }
}

locals {
  code_76 = (try(local.iter_75.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_75.code_ptr, local.iter_75.code_ptr + 2)
    : [null])

  input_76 = (local.code_76[0] == ","
    ? substr(local.input_75, local.code_76[1], -1)
    : local.input_75)

  iter_76 = try(local.iter_75.code_ptr >= length(var.code), true) ? local.iter_75 : {
    output = (local.code_76[0] == "."
      ? "${local.iter_75.output}${join("", [for _ in range(local.code_76[1]) : jsondecode(format("\"\\u%04x\"", local.iter_75.tape[local.iter_75.tape_ptr]))])}"
      : local.iter_75.output)
    
    tape = (
      local.code_76[0] == "+"
        ? [for i, b in local.iter_75.tape : (i == local.iter_75.tape_ptr ? (b + local.code_76[1]) % 256 : b)] :
      local.code_76[0] == "-"
        ? [for i, b in local.iter_75.tape : (i == local.iter_75.tape_ptr ? (b - local.code_76[1] + 256) % 256 : b)] :
      local.code_76[0] == ","
        ? [for i, b in local.iter_75.tape : (i == local.iter_75.tape_ptr ? local.ascii_lookup[substr(local.input_76, 0, 1)] : b)]
        : local.iter_75.tape)

    tape_ptr = (
      local.code_76[0] == "<"
        ? local.iter_75.tape_ptr - local.code_76[1] :
      local.code_76[0] == ">"
        ? local.iter_75.tape_ptr + local.code_76[1]
        : local.iter_75.tape_ptr)

    code_ptr = 2 + (
      local.code_76[0] == "["
        ? local.iter_75.tape[local.iter_75.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_75.code_ptr)] : local.iter_75.code_ptr :
      local.code_76[0] == "]"
        ? local.iter_75.tape[local.iter_75.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_75.code_ptr)] : local.iter_75.code_ptr
        : local.iter_75.code_ptr)

    steps_taken = 1 + local.iter_75.steps_taken
  }
}

locals {
  code_77 = (try(local.iter_76.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_76.code_ptr, local.iter_76.code_ptr + 2)
    : [null])

  input_77 = (local.code_77[0] == ","
    ? substr(local.input_76, local.code_77[1], -1)
    : local.input_76)

  iter_77 = try(local.iter_76.code_ptr >= length(var.code), true) ? local.iter_76 : {
    output = (local.code_77[0] == "."
      ? "${local.iter_76.output}${join("", [for _ in range(local.code_77[1]) : jsondecode(format("\"\\u%04x\"", local.iter_76.tape[local.iter_76.tape_ptr]))])}"
      : local.iter_76.output)
    
    tape = (
      local.code_77[0] == "+"
        ? [for i, b in local.iter_76.tape : (i == local.iter_76.tape_ptr ? (b + local.code_77[1]) % 256 : b)] :
      local.code_77[0] == "-"
        ? [for i, b in local.iter_76.tape : (i == local.iter_76.tape_ptr ? (b - local.code_77[1] + 256) % 256 : b)] :
      local.code_77[0] == ","
        ? [for i, b in local.iter_76.tape : (i == local.iter_76.tape_ptr ? local.ascii_lookup[substr(local.input_77, 0, 1)] : b)]
        : local.iter_76.tape)

    tape_ptr = (
      local.code_77[0] == "<"
        ? local.iter_76.tape_ptr - local.code_77[1] :
      local.code_77[0] == ">"
        ? local.iter_76.tape_ptr + local.code_77[1]
        : local.iter_76.tape_ptr)

    code_ptr = 2 + (
      local.code_77[0] == "["
        ? local.iter_76.tape[local.iter_76.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_76.code_ptr)] : local.iter_76.code_ptr :
      local.code_77[0] == "]"
        ? local.iter_76.tape[local.iter_76.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_76.code_ptr)] : local.iter_76.code_ptr
        : local.iter_76.code_ptr)

    steps_taken = 1 + local.iter_76.steps_taken
  }
}

locals {
  code_78 = (try(local.iter_77.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_77.code_ptr, local.iter_77.code_ptr + 2)
    : [null])

  input_78 = (local.code_78[0] == ","
    ? substr(local.input_77, local.code_78[1], -1)
    : local.input_77)

  iter_78 = try(local.iter_77.code_ptr >= length(var.code), true) ? local.iter_77 : {
    output = (local.code_78[0] == "."
      ? "${local.iter_77.output}${join("", [for _ in range(local.code_78[1]) : jsondecode(format("\"\\u%04x\"", local.iter_77.tape[local.iter_77.tape_ptr]))])}"
      : local.iter_77.output)
    
    tape = (
      local.code_78[0] == "+"
        ? [for i, b in local.iter_77.tape : (i == local.iter_77.tape_ptr ? (b + local.code_78[1]) % 256 : b)] :
      local.code_78[0] == "-"
        ? [for i, b in local.iter_77.tape : (i == local.iter_77.tape_ptr ? (b - local.code_78[1] + 256) % 256 : b)] :
      local.code_78[0] == ","
        ? [for i, b in local.iter_77.tape : (i == local.iter_77.tape_ptr ? local.ascii_lookup[substr(local.input_78, 0, 1)] : b)]
        : local.iter_77.tape)

    tape_ptr = (
      local.code_78[0] == "<"
        ? local.iter_77.tape_ptr - local.code_78[1] :
      local.code_78[0] == ">"
        ? local.iter_77.tape_ptr + local.code_78[1]
        : local.iter_77.tape_ptr)

    code_ptr = 2 + (
      local.code_78[0] == "["
        ? local.iter_77.tape[local.iter_77.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_77.code_ptr)] : local.iter_77.code_ptr :
      local.code_78[0] == "]"
        ? local.iter_77.tape[local.iter_77.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_77.code_ptr)] : local.iter_77.code_ptr
        : local.iter_77.code_ptr)

    steps_taken = 1 + local.iter_77.steps_taken
  }
}

locals {
  code_79 = (try(local.iter_78.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_78.code_ptr, local.iter_78.code_ptr + 2)
    : [null])

  input_79 = (local.code_79[0] == ","
    ? substr(local.input_78, local.code_79[1], -1)
    : local.input_78)

  iter_79 = try(local.iter_78.code_ptr >= length(var.code), true) ? local.iter_78 : {
    output = (local.code_79[0] == "."
      ? "${local.iter_78.output}${join("", [for _ in range(local.code_79[1]) : jsondecode(format("\"\\u%04x\"", local.iter_78.tape[local.iter_78.tape_ptr]))])}"
      : local.iter_78.output)
    
    tape = (
      local.code_79[0] == "+"
        ? [for i, b in local.iter_78.tape : (i == local.iter_78.tape_ptr ? (b + local.code_79[1]) % 256 : b)] :
      local.code_79[0] == "-"
        ? [for i, b in local.iter_78.tape : (i == local.iter_78.tape_ptr ? (b - local.code_79[1] + 256) % 256 : b)] :
      local.code_79[0] == ","
        ? [for i, b in local.iter_78.tape : (i == local.iter_78.tape_ptr ? local.ascii_lookup[substr(local.input_79, 0, 1)] : b)]
        : local.iter_78.tape)

    tape_ptr = (
      local.code_79[0] == "<"
        ? local.iter_78.tape_ptr - local.code_79[1] :
      local.code_79[0] == ">"
        ? local.iter_78.tape_ptr + local.code_79[1]
        : local.iter_78.tape_ptr)

    code_ptr = 2 + (
      local.code_79[0] == "["
        ? local.iter_78.tape[local.iter_78.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_78.code_ptr)] : local.iter_78.code_ptr :
      local.code_79[0] == "]"
        ? local.iter_78.tape[local.iter_78.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_78.code_ptr)] : local.iter_78.code_ptr
        : local.iter_78.code_ptr)

    steps_taken = 1 + local.iter_78.steps_taken
  }
}

locals {
  code_80 = (try(local.iter_79.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_79.code_ptr, local.iter_79.code_ptr + 2)
    : [null])

  input_80 = (local.code_80[0] == ","
    ? substr(local.input_79, local.code_80[1], -1)
    : local.input_79)

  iter_80 = try(local.iter_79.code_ptr >= length(var.code), true) ? local.iter_79 : {
    output = (local.code_80[0] == "."
      ? "${local.iter_79.output}${join("", [for _ in range(local.code_80[1]) : jsondecode(format("\"\\u%04x\"", local.iter_79.tape[local.iter_79.tape_ptr]))])}"
      : local.iter_79.output)
    
    tape = (
      local.code_80[0] == "+"
        ? [for i, b in local.iter_79.tape : (i == local.iter_79.tape_ptr ? (b + local.code_80[1]) % 256 : b)] :
      local.code_80[0] == "-"
        ? [for i, b in local.iter_79.tape : (i == local.iter_79.tape_ptr ? (b - local.code_80[1] + 256) % 256 : b)] :
      local.code_80[0] == ","
        ? [for i, b in local.iter_79.tape : (i == local.iter_79.tape_ptr ? local.ascii_lookup[substr(local.input_80, 0, 1)] : b)]
        : local.iter_79.tape)

    tape_ptr = (
      local.code_80[0] == "<"
        ? local.iter_79.tape_ptr - local.code_80[1] :
      local.code_80[0] == ">"
        ? local.iter_79.tape_ptr + local.code_80[1]
        : local.iter_79.tape_ptr)

    code_ptr = 2 + (
      local.code_80[0] == "["
        ? local.iter_79.tape[local.iter_79.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_79.code_ptr)] : local.iter_79.code_ptr :
      local.code_80[0] == "]"
        ? local.iter_79.tape[local.iter_79.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_79.code_ptr)] : local.iter_79.code_ptr
        : local.iter_79.code_ptr)

    steps_taken = 1 + local.iter_79.steps_taken
  }
}

locals {
  code_81 = (try(local.iter_80.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_80.code_ptr, local.iter_80.code_ptr + 2)
    : [null])

  input_81 = (local.code_81[0] == ","
    ? substr(local.input_80, local.code_81[1], -1)
    : local.input_80)

  iter_81 = try(local.iter_80.code_ptr >= length(var.code), true) ? local.iter_80 : {
    output = (local.code_81[0] == "."
      ? "${local.iter_80.output}${join("", [for _ in range(local.code_81[1]) : jsondecode(format("\"\\u%04x\"", local.iter_80.tape[local.iter_80.tape_ptr]))])}"
      : local.iter_80.output)
    
    tape = (
      local.code_81[0] == "+"
        ? [for i, b in local.iter_80.tape : (i == local.iter_80.tape_ptr ? (b + local.code_81[1]) % 256 : b)] :
      local.code_81[0] == "-"
        ? [for i, b in local.iter_80.tape : (i == local.iter_80.tape_ptr ? (b - local.code_81[1] + 256) % 256 : b)] :
      local.code_81[0] == ","
        ? [for i, b in local.iter_80.tape : (i == local.iter_80.tape_ptr ? local.ascii_lookup[substr(local.input_81, 0, 1)] : b)]
        : local.iter_80.tape)

    tape_ptr = (
      local.code_81[0] == "<"
        ? local.iter_80.tape_ptr - local.code_81[1] :
      local.code_81[0] == ">"
        ? local.iter_80.tape_ptr + local.code_81[1]
        : local.iter_80.tape_ptr)

    code_ptr = 2 + (
      local.code_81[0] == "["
        ? local.iter_80.tape[local.iter_80.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_80.code_ptr)] : local.iter_80.code_ptr :
      local.code_81[0] == "]"
        ? local.iter_80.tape[local.iter_80.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_80.code_ptr)] : local.iter_80.code_ptr
        : local.iter_80.code_ptr)

    steps_taken = 1 + local.iter_80.steps_taken
  }
}

locals {
  code_82 = (try(local.iter_81.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_81.code_ptr, local.iter_81.code_ptr + 2)
    : [null])

  input_82 = (local.code_82[0] == ","
    ? substr(local.input_81, local.code_82[1], -1)
    : local.input_81)

  iter_82 = try(local.iter_81.code_ptr >= length(var.code), true) ? local.iter_81 : {
    output = (local.code_82[0] == "."
      ? "${local.iter_81.output}${join("", [for _ in range(local.code_82[1]) : jsondecode(format("\"\\u%04x\"", local.iter_81.tape[local.iter_81.tape_ptr]))])}"
      : local.iter_81.output)
    
    tape = (
      local.code_82[0] == "+"
        ? [for i, b in local.iter_81.tape : (i == local.iter_81.tape_ptr ? (b + local.code_82[1]) % 256 : b)] :
      local.code_82[0] == "-"
        ? [for i, b in local.iter_81.tape : (i == local.iter_81.tape_ptr ? (b - local.code_82[1] + 256) % 256 : b)] :
      local.code_82[0] == ","
        ? [for i, b in local.iter_81.tape : (i == local.iter_81.tape_ptr ? local.ascii_lookup[substr(local.input_82, 0, 1)] : b)]
        : local.iter_81.tape)

    tape_ptr = (
      local.code_82[0] == "<"
        ? local.iter_81.tape_ptr - local.code_82[1] :
      local.code_82[0] == ">"
        ? local.iter_81.tape_ptr + local.code_82[1]
        : local.iter_81.tape_ptr)

    code_ptr = 2 + (
      local.code_82[0] == "["
        ? local.iter_81.tape[local.iter_81.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_81.code_ptr)] : local.iter_81.code_ptr :
      local.code_82[0] == "]"
        ? local.iter_81.tape[local.iter_81.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_81.code_ptr)] : local.iter_81.code_ptr
        : local.iter_81.code_ptr)

    steps_taken = 1 + local.iter_81.steps_taken
  }
}

locals {
  code_83 = (try(local.iter_82.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_82.code_ptr, local.iter_82.code_ptr + 2)
    : [null])

  input_83 = (local.code_83[0] == ","
    ? substr(local.input_82, local.code_83[1], -1)
    : local.input_82)

  iter_83 = try(local.iter_82.code_ptr >= length(var.code), true) ? local.iter_82 : {
    output = (local.code_83[0] == "."
      ? "${local.iter_82.output}${join("", [for _ in range(local.code_83[1]) : jsondecode(format("\"\\u%04x\"", local.iter_82.tape[local.iter_82.tape_ptr]))])}"
      : local.iter_82.output)
    
    tape = (
      local.code_83[0] == "+"
        ? [for i, b in local.iter_82.tape : (i == local.iter_82.tape_ptr ? (b + local.code_83[1]) % 256 : b)] :
      local.code_83[0] == "-"
        ? [for i, b in local.iter_82.tape : (i == local.iter_82.tape_ptr ? (b - local.code_83[1] + 256) % 256 : b)] :
      local.code_83[0] == ","
        ? [for i, b in local.iter_82.tape : (i == local.iter_82.tape_ptr ? local.ascii_lookup[substr(local.input_83, 0, 1)] : b)]
        : local.iter_82.tape)

    tape_ptr = (
      local.code_83[0] == "<"
        ? local.iter_82.tape_ptr - local.code_83[1] :
      local.code_83[0] == ">"
        ? local.iter_82.tape_ptr + local.code_83[1]
        : local.iter_82.tape_ptr)

    code_ptr = 2 + (
      local.code_83[0] == "["
        ? local.iter_82.tape[local.iter_82.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_82.code_ptr)] : local.iter_82.code_ptr :
      local.code_83[0] == "]"
        ? local.iter_82.tape[local.iter_82.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_82.code_ptr)] : local.iter_82.code_ptr
        : local.iter_82.code_ptr)

    steps_taken = 1 + local.iter_82.steps_taken
  }
}

locals {
  code_84 = (try(local.iter_83.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_83.code_ptr, local.iter_83.code_ptr + 2)
    : [null])

  input_84 = (local.code_84[0] == ","
    ? substr(local.input_83, local.code_84[1], -1)
    : local.input_83)

  iter_84 = try(local.iter_83.code_ptr >= length(var.code), true) ? local.iter_83 : {
    output = (local.code_84[0] == "."
      ? "${local.iter_83.output}${join("", [for _ in range(local.code_84[1]) : jsondecode(format("\"\\u%04x\"", local.iter_83.tape[local.iter_83.tape_ptr]))])}"
      : local.iter_83.output)
    
    tape = (
      local.code_84[0] == "+"
        ? [for i, b in local.iter_83.tape : (i == local.iter_83.tape_ptr ? (b + local.code_84[1]) % 256 : b)] :
      local.code_84[0] == "-"
        ? [for i, b in local.iter_83.tape : (i == local.iter_83.tape_ptr ? (b - local.code_84[1] + 256) % 256 : b)] :
      local.code_84[0] == ","
        ? [for i, b in local.iter_83.tape : (i == local.iter_83.tape_ptr ? local.ascii_lookup[substr(local.input_84, 0, 1)] : b)]
        : local.iter_83.tape)

    tape_ptr = (
      local.code_84[0] == "<"
        ? local.iter_83.tape_ptr - local.code_84[1] :
      local.code_84[0] == ">"
        ? local.iter_83.tape_ptr + local.code_84[1]
        : local.iter_83.tape_ptr)

    code_ptr = 2 + (
      local.code_84[0] == "["
        ? local.iter_83.tape[local.iter_83.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_83.code_ptr)] : local.iter_83.code_ptr :
      local.code_84[0] == "]"
        ? local.iter_83.tape[local.iter_83.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_83.code_ptr)] : local.iter_83.code_ptr
        : local.iter_83.code_ptr)

    steps_taken = 1 + local.iter_83.steps_taken
  }
}

locals {
  code_85 = (try(local.iter_84.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_84.code_ptr, local.iter_84.code_ptr + 2)
    : [null])

  input_85 = (local.code_85[0] == ","
    ? substr(local.input_84, local.code_85[1], -1)
    : local.input_84)

  iter_85 = try(local.iter_84.code_ptr >= length(var.code), true) ? local.iter_84 : {
    output = (local.code_85[0] == "."
      ? "${local.iter_84.output}${join("", [for _ in range(local.code_85[1]) : jsondecode(format("\"\\u%04x\"", local.iter_84.tape[local.iter_84.tape_ptr]))])}"
      : local.iter_84.output)
    
    tape = (
      local.code_85[0] == "+"
        ? [for i, b in local.iter_84.tape : (i == local.iter_84.tape_ptr ? (b + local.code_85[1]) % 256 : b)] :
      local.code_85[0] == "-"
        ? [for i, b in local.iter_84.tape : (i == local.iter_84.tape_ptr ? (b - local.code_85[1] + 256) % 256 : b)] :
      local.code_85[0] == ","
        ? [for i, b in local.iter_84.tape : (i == local.iter_84.tape_ptr ? local.ascii_lookup[substr(local.input_85, 0, 1)] : b)]
        : local.iter_84.tape)

    tape_ptr = (
      local.code_85[0] == "<"
        ? local.iter_84.tape_ptr - local.code_85[1] :
      local.code_85[0] == ">"
        ? local.iter_84.tape_ptr + local.code_85[1]
        : local.iter_84.tape_ptr)

    code_ptr = 2 + (
      local.code_85[0] == "["
        ? local.iter_84.tape[local.iter_84.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_84.code_ptr)] : local.iter_84.code_ptr :
      local.code_85[0] == "]"
        ? local.iter_84.tape[local.iter_84.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_84.code_ptr)] : local.iter_84.code_ptr
        : local.iter_84.code_ptr)

    steps_taken = 1 + local.iter_84.steps_taken
  }
}

locals {
  code_86 = (try(local.iter_85.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_85.code_ptr, local.iter_85.code_ptr + 2)
    : [null])

  input_86 = (local.code_86[0] == ","
    ? substr(local.input_85, local.code_86[1], -1)
    : local.input_85)

  iter_86 = try(local.iter_85.code_ptr >= length(var.code), true) ? local.iter_85 : {
    output = (local.code_86[0] == "."
      ? "${local.iter_85.output}${join("", [for _ in range(local.code_86[1]) : jsondecode(format("\"\\u%04x\"", local.iter_85.tape[local.iter_85.tape_ptr]))])}"
      : local.iter_85.output)
    
    tape = (
      local.code_86[0] == "+"
        ? [for i, b in local.iter_85.tape : (i == local.iter_85.tape_ptr ? (b + local.code_86[1]) % 256 : b)] :
      local.code_86[0] == "-"
        ? [for i, b in local.iter_85.tape : (i == local.iter_85.tape_ptr ? (b - local.code_86[1] + 256) % 256 : b)] :
      local.code_86[0] == ","
        ? [for i, b in local.iter_85.tape : (i == local.iter_85.tape_ptr ? local.ascii_lookup[substr(local.input_86, 0, 1)] : b)]
        : local.iter_85.tape)

    tape_ptr = (
      local.code_86[0] == "<"
        ? local.iter_85.tape_ptr - local.code_86[1] :
      local.code_86[0] == ">"
        ? local.iter_85.tape_ptr + local.code_86[1]
        : local.iter_85.tape_ptr)

    code_ptr = 2 + (
      local.code_86[0] == "["
        ? local.iter_85.tape[local.iter_85.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_85.code_ptr)] : local.iter_85.code_ptr :
      local.code_86[0] == "]"
        ? local.iter_85.tape[local.iter_85.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_85.code_ptr)] : local.iter_85.code_ptr
        : local.iter_85.code_ptr)

    steps_taken = 1 + local.iter_85.steps_taken
  }
}

locals {
  code_87 = (try(local.iter_86.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_86.code_ptr, local.iter_86.code_ptr + 2)
    : [null])

  input_87 = (local.code_87[0] == ","
    ? substr(local.input_86, local.code_87[1], -1)
    : local.input_86)

  iter_87 = try(local.iter_86.code_ptr >= length(var.code), true) ? local.iter_86 : {
    output = (local.code_87[0] == "."
      ? "${local.iter_86.output}${join("", [for _ in range(local.code_87[1]) : jsondecode(format("\"\\u%04x\"", local.iter_86.tape[local.iter_86.tape_ptr]))])}"
      : local.iter_86.output)
    
    tape = (
      local.code_87[0] == "+"
        ? [for i, b in local.iter_86.tape : (i == local.iter_86.tape_ptr ? (b + local.code_87[1]) % 256 : b)] :
      local.code_87[0] == "-"
        ? [for i, b in local.iter_86.tape : (i == local.iter_86.tape_ptr ? (b - local.code_87[1] + 256) % 256 : b)] :
      local.code_87[0] == ","
        ? [for i, b in local.iter_86.tape : (i == local.iter_86.tape_ptr ? local.ascii_lookup[substr(local.input_87, 0, 1)] : b)]
        : local.iter_86.tape)

    tape_ptr = (
      local.code_87[0] == "<"
        ? local.iter_86.tape_ptr - local.code_87[1] :
      local.code_87[0] == ">"
        ? local.iter_86.tape_ptr + local.code_87[1]
        : local.iter_86.tape_ptr)

    code_ptr = 2 + (
      local.code_87[0] == "["
        ? local.iter_86.tape[local.iter_86.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_86.code_ptr)] : local.iter_86.code_ptr :
      local.code_87[0] == "]"
        ? local.iter_86.tape[local.iter_86.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_86.code_ptr)] : local.iter_86.code_ptr
        : local.iter_86.code_ptr)

    steps_taken = 1 + local.iter_86.steps_taken
  }
}

locals {
  code_88 = (try(local.iter_87.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_87.code_ptr, local.iter_87.code_ptr + 2)
    : [null])

  input_88 = (local.code_88[0] == ","
    ? substr(local.input_87, local.code_88[1], -1)
    : local.input_87)

  iter_88 = try(local.iter_87.code_ptr >= length(var.code), true) ? local.iter_87 : {
    output = (local.code_88[0] == "."
      ? "${local.iter_87.output}${join("", [for _ in range(local.code_88[1]) : jsondecode(format("\"\\u%04x\"", local.iter_87.tape[local.iter_87.tape_ptr]))])}"
      : local.iter_87.output)
    
    tape = (
      local.code_88[0] == "+"
        ? [for i, b in local.iter_87.tape : (i == local.iter_87.tape_ptr ? (b + local.code_88[1]) % 256 : b)] :
      local.code_88[0] == "-"
        ? [for i, b in local.iter_87.tape : (i == local.iter_87.tape_ptr ? (b - local.code_88[1] + 256) % 256 : b)] :
      local.code_88[0] == ","
        ? [for i, b in local.iter_87.tape : (i == local.iter_87.tape_ptr ? local.ascii_lookup[substr(local.input_88, 0, 1)] : b)]
        : local.iter_87.tape)

    tape_ptr = (
      local.code_88[0] == "<"
        ? local.iter_87.tape_ptr - local.code_88[1] :
      local.code_88[0] == ">"
        ? local.iter_87.tape_ptr + local.code_88[1]
        : local.iter_87.tape_ptr)

    code_ptr = 2 + (
      local.code_88[0] == "["
        ? local.iter_87.tape[local.iter_87.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_87.code_ptr)] : local.iter_87.code_ptr :
      local.code_88[0] == "]"
        ? local.iter_87.tape[local.iter_87.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_87.code_ptr)] : local.iter_87.code_ptr
        : local.iter_87.code_ptr)

    steps_taken = 1 + local.iter_87.steps_taken
  }
}

locals {
  code_89 = (try(local.iter_88.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_88.code_ptr, local.iter_88.code_ptr + 2)
    : [null])

  input_89 = (local.code_89[0] == ","
    ? substr(local.input_88, local.code_89[1], -1)
    : local.input_88)

  iter_89 = try(local.iter_88.code_ptr >= length(var.code), true) ? local.iter_88 : {
    output = (local.code_89[0] == "."
      ? "${local.iter_88.output}${join("", [for _ in range(local.code_89[1]) : jsondecode(format("\"\\u%04x\"", local.iter_88.tape[local.iter_88.tape_ptr]))])}"
      : local.iter_88.output)
    
    tape = (
      local.code_89[0] == "+"
        ? [for i, b in local.iter_88.tape : (i == local.iter_88.tape_ptr ? (b + local.code_89[1]) % 256 : b)] :
      local.code_89[0] == "-"
        ? [for i, b in local.iter_88.tape : (i == local.iter_88.tape_ptr ? (b - local.code_89[1] + 256) % 256 : b)] :
      local.code_89[0] == ","
        ? [for i, b in local.iter_88.tape : (i == local.iter_88.tape_ptr ? local.ascii_lookup[substr(local.input_89, 0, 1)] : b)]
        : local.iter_88.tape)

    tape_ptr = (
      local.code_89[0] == "<"
        ? local.iter_88.tape_ptr - local.code_89[1] :
      local.code_89[0] == ">"
        ? local.iter_88.tape_ptr + local.code_89[1]
        : local.iter_88.tape_ptr)

    code_ptr = 2 + (
      local.code_89[0] == "["
        ? local.iter_88.tape[local.iter_88.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_88.code_ptr)] : local.iter_88.code_ptr :
      local.code_89[0] == "]"
        ? local.iter_88.tape[local.iter_88.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_88.code_ptr)] : local.iter_88.code_ptr
        : local.iter_88.code_ptr)

    steps_taken = 1 + local.iter_88.steps_taken
  }
}

locals {
  code_90 = (try(local.iter_89.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_89.code_ptr, local.iter_89.code_ptr + 2)
    : [null])

  input_90 = (local.code_90[0] == ","
    ? substr(local.input_89, local.code_90[1], -1)
    : local.input_89)

  iter_90 = try(local.iter_89.code_ptr >= length(var.code), true) ? local.iter_89 : {
    output = (local.code_90[0] == "."
      ? "${local.iter_89.output}${join("", [for _ in range(local.code_90[1]) : jsondecode(format("\"\\u%04x\"", local.iter_89.tape[local.iter_89.tape_ptr]))])}"
      : local.iter_89.output)
    
    tape = (
      local.code_90[0] == "+"
        ? [for i, b in local.iter_89.tape : (i == local.iter_89.tape_ptr ? (b + local.code_90[1]) % 256 : b)] :
      local.code_90[0] == "-"
        ? [for i, b in local.iter_89.tape : (i == local.iter_89.tape_ptr ? (b - local.code_90[1] + 256) % 256 : b)] :
      local.code_90[0] == ","
        ? [for i, b in local.iter_89.tape : (i == local.iter_89.tape_ptr ? local.ascii_lookup[substr(local.input_90, 0, 1)] : b)]
        : local.iter_89.tape)

    tape_ptr = (
      local.code_90[0] == "<"
        ? local.iter_89.tape_ptr - local.code_90[1] :
      local.code_90[0] == ">"
        ? local.iter_89.tape_ptr + local.code_90[1]
        : local.iter_89.tape_ptr)

    code_ptr = 2 + (
      local.code_90[0] == "["
        ? local.iter_89.tape[local.iter_89.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_89.code_ptr)] : local.iter_89.code_ptr :
      local.code_90[0] == "]"
        ? local.iter_89.tape[local.iter_89.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_89.code_ptr)] : local.iter_89.code_ptr
        : local.iter_89.code_ptr)

    steps_taken = 1 + local.iter_89.steps_taken
  }
}

locals {
  code_91 = (try(local.iter_90.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_90.code_ptr, local.iter_90.code_ptr + 2)
    : [null])

  input_91 = (local.code_91[0] == ","
    ? substr(local.input_90, local.code_91[1], -1)
    : local.input_90)

  iter_91 = try(local.iter_90.code_ptr >= length(var.code), true) ? local.iter_90 : {
    output = (local.code_91[0] == "."
      ? "${local.iter_90.output}${join("", [for _ in range(local.code_91[1]) : jsondecode(format("\"\\u%04x\"", local.iter_90.tape[local.iter_90.tape_ptr]))])}"
      : local.iter_90.output)
    
    tape = (
      local.code_91[0] == "+"
        ? [for i, b in local.iter_90.tape : (i == local.iter_90.tape_ptr ? (b + local.code_91[1]) % 256 : b)] :
      local.code_91[0] == "-"
        ? [for i, b in local.iter_90.tape : (i == local.iter_90.tape_ptr ? (b - local.code_91[1] + 256) % 256 : b)] :
      local.code_91[0] == ","
        ? [for i, b in local.iter_90.tape : (i == local.iter_90.tape_ptr ? local.ascii_lookup[substr(local.input_91, 0, 1)] : b)]
        : local.iter_90.tape)

    tape_ptr = (
      local.code_91[0] == "<"
        ? local.iter_90.tape_ptr - local.code_91[1] :
      local.code_91[0] == ">"
        ? local.iter_90.tape_ptr + local.code_91[1]
        : local.iter_90.tape_ptr)

    code_ptr = 2 + (
      local.code_91[0] == "["
        ? local.iter_90.tape[local.iter_90.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_90.code_ptr)] : local.iter_90.code_ptr :
      local.code_91[0] == "]"
        ? local.iter_90.tape[local.iter_90.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_90.code_ptr)] : local.iter_90.code_ptr
        : local.iter_90.code_ptr)

    steps_taken = 1 + local.iter_90.steps_taken
  }
}

locals {
  code_92 = (try(local.iter_91.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_91.code_ptr, local.iter_91.code_ptr + 2)
    : [null])

  input_92 = (local.code_92[0] == ","
    ? substr(local.input_91, local.code_92[1], -1)
    : local.input_91)

  iter_92 = try(local.iter_91.code_ptr >= length(var.code), true) ? local.iter_91 : {
    output = (local.code_92[0] == "."
      ? "${local.iter_91.output}${join("", [for _ in range(local.code_92[1]) : jsondecode(format("\"\\u%04x\"", local.iter_91.tape[local.iter_91.tape_ptr]))])}"
      : local.iter_91.output)
    
    tape = (
      local.code_92[0] == "+"
        ? [for i, b in local.iter_91.tape : (i == local.iter_91.tape_ptr ? (b + local.code_92[1]) % 256 : b)] :
      local.code_92[0] == "-"
        ? [for i, b in local.iter_91.tape : (i == local.iter_91.tape_ptr ? (b - local.code_92[1] + 256) % 256 : b)] :
      local.code_92[0] == ","
        ? [for i, b in local.iter_91.tape : (i == local.iter_91.tape_ptr ? local.ascii_lookup[substr(local.input_92, 0, 1)] : b)]
        : local.iter_91.tape)

    tape_ptr = (
      local.code_92[0] == "<"
        ? local.iter_91.tape_ptr - local.code_92[1] :
      local.code_92[0] == ">"
        ? local.iter_91.tape_ptr + local.code_92[1]
        : local.iter_91.tape_ptr)

    code_ptr = 2 + (
      local.code_92[0] == "["
        ? local.iter_91.tape[local.iter_91.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_91.code_ptr)] : local.iter_91.code_ptr :
      local.code_92[0] == "]"
        ? local.iter_91.tape[local.iter_91.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_91.code_ptr)] : local.iter_91.code_ptr
        : local.iter_91.code_ptr)

    steps_taken = 1 + local.iter_91.steps_taken
  }
}

locals {
  code_93 = (try(local.iter_92.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_92.code_ptr, local.iter_92.code_ptr + 2)
    : [null])

  input_93 = (local.code_93[0] == ","
    ? substr(local.input_92, local.code_93[1], -1)
    : local.input_92)

  iter_93 = try(local.iter_92.code_ptr >= length(var.code), true) ? local.iter_92 : {
    output = (local.code_93[0] == "."
      ? "${local.iter_92.output}${join("", [for _ in range(local.code_93[1]) : jsondecode(format("\"\\u%04x\"", local.iter_92.tape[local.iter_92.tape_ptr]))])}"
      : local.iter_92.output)
    
    tape = (
      local.code_93[0] == "+"
        ? [for i, b in local.iter_92.tape : (i == local.iter_92.tape_ptr ? (b + local.code_93[1]) % 256 : b)] :
      local.code_93[0] == "-"
        ? [for i, b in local.iter_92.tape : (i == local.iter_92.tape_ptr ? (b - local.code_93[1] + 256) % 256 : b)] :
      local.code_93[0] == ","
        ? [for i, b in local.iter_92.tape : (i == local.iter_92.tape_ptr ? local.ascii_lookup[substr(local.input_93, 0, 1)] : b)]
        : local.iter_92.tape)

    tape_ptr = (
      local.code_93[0] == "<"
        ? local.iter_92.tape_ptr - local.code_93[1] :
      local.code_93[0] == ">"
        ? local.iter_92.tape_ptr + local.code_93[1]
        : local.iter_92.tape_ptr)

    code_ptr = 2 + (
      local.code_93[0] == "["
        ? local.iter_92.tape[local.iter_92.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_92.code_ptr)] : local.iter_92.code_ptr :
      local.code_93[0] == "]"
        ? local.iter_92.tape[local.iter_92.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_92.code_ptr)] : local.iter_92.code_ptr
        : local.iter_92.code_ptr)

    steps_taken = 1 + local.iter_92.steps_taken
  }
}

locals {
  code_94 = (try(local.iter_93.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_93.code_ptr, local.iter_93.code_ptr + 2)
    : [null])

  input_94 = (local.code_94[0] == ","
    ? substr(local.input_93, local.code_94[1], -1)
    : local.input_93)

  iter_94 = try(local.iter_93.code_ptr >= length(var.code), true) ? local.iter_93 : {
    output = (local.code_94[0] == "."
      ? "${local.iter_93.output}${join("", [for _ in range(local.code_94[1]) : jsondecode(format("\"\\u%04x\"", local.iter_93.tape[local.iter_93.tape_ptr]))])}"
      : local.iter_93.output)
    
    tape = (
      local.code_94[0] == "+"
        ? [for i, b in local.iter_93.tape : (i == local.iter_93.tape_ptr ? (b + local.code_94[1]) % 256 : b)] :
      local.code_94[0] == "-"
        ? [for i, b in local.iter_93.tape : (i == local.iter_93.tape_ptr ? (b - local.code_94[1] + 256) % 256 : b)] :
      local.code_94[0] == ","
        ? [for i, b in local.iter_93.tape : (i == local.iter_93.tape_ptr ? local.ascii_lookup[substr(local.input_94, 0, 1)] : b)]
        : local.iter_93.tape)

    tape_ptr = (
      local.code_94[0] == "<"
        ? local.iter_93.tape_ptr - local.code_94[1] :
      local.code_94[0] == ">"
        ? local.iter_93.tape_ptr + local.code_94[1]
        : local.iter_93.tape_ptr)

    code_ptr = 2 + (
      local.code_94[0] == "["
        ? local.iter_93.tape[local.iter_93.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_93.code_ptr)] : local.iter_93.code_ptr :
      local.code_94[0] == "]"
        ? local.iter_93.tape[local.iter_93.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_93.code_ptr)] : local.iter_93.code_ptr
        : local.iter_93.code_ptr)

    steps_taken = 1 + local.iter_93.steps_taken
  }
}

locals {
  code_95 = (try(local.iter_94.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_94.code_ptr, local.iter_94.code_ptr + 2)
    : [null])

  input_95 = (local.code_95[0] == ","
    ? substr(local.input_94, local.code_95[1], -1)
    : local.input_94)

  iter_95 = try(local.iter_94.code_ptr >= length(var.code), true) ? local.iter_94 : {
    output = (local.code_95[0] == "."
      ? "${local.iter_94.output}${join("", [for _ in range(local.code_95[1]) : jsondecode(format("\"\\u%04x\"", local.iter_94.tape[local.iter_94.tape_ptr]))])}"
      : local.iter_94.output)
    
    tape = (
      local.code_95[0] == "+"
        ? [for i, b in local.iter_94.tape : (i == local.iter_94.tape_ptr ? (b + local.code_95[1]) % 256 : b)] :
      local.code_95[0] == "-"
        ? [for i, b in local.iter_94.tape : (i == local.iter_94.tape_ptr ? (b - local.code_95[1] + 256) % 256 : b)] :
      local.code_95[0] == ","
        ? [for i, b in local.iter_94.tape : (i == local.iter_94.tape_ptr ? local.ascii_lookup[substr(local.input_95, 0, 1)] : b)]
        : local.iter_94.tape)

    tape_ptr = (
      local.code_95[0] == "<"
        ? local.iter_94.tape_ptr - local.code_95[1] :
      local.code_95[0] == ">"
        ? local.iter_94.tape_ptr + local.code_95[1]
        : local.iter_94.tape_ptr)

    code_ptr = 2 + (
      local.code_95[0] == "["
        ? local.iter_94.tape[local.iter_94.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_94.code_ptr)] : local.iter_94.code_ptr :
      local.code_95[0] == "]"
        ? local.iter_94.tape[local.iter_94.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_94.code_ptr)] : local.iter_94.code_ptr
        : local.iter_94.code_ptr)

    steps_taken = 1 + local.iter_94.steps_taken
  }
}

locals {
  code_96 = (try(local.iter_95.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_95.code_ptr, local.iter_95.code_ptr + 2)
    : [null])

  input_96 = (local.code_96[0] == ","
    ? substr(local.input_95, local.code_96[1], -1)
    : local.input_95)

  iter_96 = try(local.iter_95.code_ptr >= length(var.code), true) ? local.iter_95 : {
    output = (local.code_96[0] == "."
      ? "${local.iter_95.output}${join("", [for _ in range(local.code_96[1]) : jsondecode(format("\"\\u%04x\"", local.iter_95.tape[local.iter_95.tape_ptr]))])}"
      : local.iter_95.output)
    
    tape = (
      local.code_96[0] == "+"
        ? [for i, b in local.iter_95.tape : (i == local.iter_95.tape_ptr ? (b + local.code_96[1]) % 256 : b)] :
      local.code_96[0] == "-"
        ? [for i, b in local.iter_95.tape : (i == local.iter_95.tape_ptr ? (b - local.code_96[1] + 256) % 256 : b)] :
      local.code_96[0] == ","
        ? [for i, b in local.iter_95.tape : (i == local.iter_95.tape_ptr ? local.ascii_lookup[substr(local.input_96, 0, 1)] : b)]
        : local.iter_95.tape)

    tape_ptr = (
      local.code_96[0] == "<"
        ? local.iter_95.tape_ptr - local.code_96[1] :
      local.code_96[0] == ">"
        ? local.iter_95.tape_ptr + local.code_96[1]
        : local.iter_95.tape_ptr)

    code_ptr = 2 + (
      local.code_96[0] == "["
        ? local.iter_95.tape[local.iter_95.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_95.code_ptr)] : local.iter_95.code_ptr :
      local.code_96[0] == "]"
        ? local.iter_95.tape[local.iter_95.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_95.code_ptr)] : local.iter_95.code_ptr
        : local.iter_95.code_ptr)

    steps_taken = 1 + local.iter_95.steps_taken
  }
}

locals {
  code_97 = (try(local.iter_96.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_96.code_ptr, local.iter_96.code_ptr + 2)
    : [null])

  input_97 = (local.code_97[0] == ","
    ? substr(local.input_96, local.code_97[1], -1)
    : local.input_96)

  iter_97 = try(local.iter_96.code_ptr >= length(var.code), true) ? local.iter_96 : {
    output = (local.code_97[0] == "."
      ? "${local.iter_96.output}${join("", [for _ in range(local.code_97[1]) : jsondecode(format("\"\\u%04x\"", local.iter_96.tape[local.iter_96.tape_ptr]))])}"
      : local.iter_96.output)
    
    tape = (
      local.code_97[0] == "+"
        ? [for i, b in local.iter_96.tape : (i == local.iter_96.tape_ptr ? (b + local.code_97[1]) % 256 : b)] :
      local.code_97[0] == "-"
        ? [for i, b in local.iter_96.tape : (i == local.iter_96.tape_ptr ? (b - local.code_97[1] + 256) % 256 : b)] :
      local.code_97[0] == ","
        ? [for i, b in local.iter_96.tape : (i == local.iter_96.tape_ptr ? local.ascii_lookup[substr(local.input_97, 0, 1)] : b)]
        : local.iter_96.tape)

    tape_ptr = (
      local.code_97[0] == "<"
        ? local.iter_96.tape_ptr - local.code_97[1] :
      local.code_97[0] == ">"
        ? local.iter_96.tape_ptr + local.code_97[1]
        : local.iter_96.tape_ptr)

    code_ptr = 2 + (
      local.code_97[0] == "["
        ? local.iter_96.tape[local.iter_96.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_96.code_ptr)] : local.iter_96.code_ptr :
      local.code_97[0] == "]"
        ? local.iter_96.tape[local.iter_96.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_96.code_ptr)] : local.iter_96.code_ptr
        : local.iter_96.code_ptr)

    steps_taken = 1 + local.iter_96.steps_taken
  }
}

locals {
  code_98 = (try(local.iter_97.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_97.code_ptr, local.iter_97.code_ptr + 2)
    : [null])

  input_98 = (local.code_98[0] == ","
    ? substr(local.input_97, local.code_98[1], -1)
    : local.input_97)

  iter_98 = try(local.iter_97.code_ptr >= length(var.code), true) ? local.iter_97 : {
    output = (local.code_98[0] == "."
      ? "${local.iter_97.output}${join("", [for _ in range(local.code_98[1]) : jsondecode(format("\"\\u%04x\"", local.iter_97.tape[local.iter_97.tape_ptr]))])}"
      : local.iter_97.output)
    
    tape = (
      local.code_98[0] == "+"
        ? [for i, b in local.iter_97.tape : (i == local.iter_97.tape_ptr ? (b + local.code_98[1]) % 256 : b)] :
      local.code_98[0] == "-"
        ? [for i, b in local.iter_97.tape : (i == local.iter_97.tape_ptr ? (b - local.code_98[1] + 256) % 256 : b)] :
      local.code_98[0] == ","
        ? [for i, b in local.iter_97.tape : (i == local.iter_97.tape_ptr ? local.ascii_lookup[substr(local.input_98, 0, 1)] : b)]
        : local.iter_97.tape)

    tape_ptr = (
      local.code_98[0] == "<"
        ? local.iter_97.tape_ptr - local.code_98[1] :
      local.code_98[0] == ">"
        ? local.iter_97.tape_ptr + local.code_98[1]
        : local.iter_97.tape_ptr)

    code_ptr = 2 + (
      local.code_98[0] == "["
        ? local.iter_97.tape[local.iter_97.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_97.code_ptr)] : local.iter_97.code_ptr :
      local.code_98[0] == "]"
        ? local.iter_97.tape[local.iter_97.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_97.code_ptr)] : local.iter_97.code_ptr
        : local.iter_97.code_ptr)

    steps_taken = 1 + local.iter_97.steps_taken
  }
}

locals {
  code_99 = (try(local.iter_98.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_98.code_ptr, local.iter_98.code_ptr + 2)
    : [null])

  input_99 = (local.code_99[0] == ","
    ? substr(local.input_98, local.code_99[1], -1)
    : local.input_98)

  iter_99 = try(local.iter_98.code_ptr >= length(var.code), true) ? local.iter_98 : {
    output = (local.code_99[0] == "."
      ? "${local.iter_98.output}${join("", [for _ in range(local.code_99[1]) : jsondecode(format("\"\\u%04x\"", local.iter_98.tape[local.iter_98.tape_ptr]))])}"
      : local.iter_98.output)
    
    tape = (
      local.code_99[0] == "+"
        ? [for i, b in local.iter_98.tape : (i == local.iter_98.tape_ptr ? (b + local.code_99[1]) % 256 : b)] :
      local.code_99[0] == "-"
        ? [for i, b in local.iter_98.tape : (i == local.iter_98.tape_ptr ? (b - local.code_99[1] + 256) % 256 : b)] :
      local.code_99[0] == ","
        ? [for i, b in local.iter_98.tape : (i == local.iter_98.tape_ptr ? local.ascii_lookup[substr(local.input_99, 0, 1)] : b)]
        : local.iter_98.tape)

    tape_ptr = (
      local.code_99[0] == "<"
        ? local.iter_98.tape_ptr - local.code_99[1] :
      local.code_99[0] == ">"
        ? local.iter_98.tape_ptr + local.code_99[1]
        : local.iter_98.tape_ptr)

    code_ptr = 2 + (
      local.code_99[0] == "["
        ? local.iter_98.tape[local.iter_98.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_98.code_ptr)] : local.iter_98.code_ptr :
      local.code_99[0] == "]"
        ? local.iter_98.tape[local.iter_98.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_98.code_ptr)] : local.iter_98.code_ptr
        : local.iter_98.code_ptr)

    steps_taken = 1 + local.iter_98.steps_taken
  }
}

locals {
  code_100 = (try(local.iter_99.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_99.code_ptr, local.iter_99.code_ptr + 2)
    : [null])

  input_100 = (local.code_100[0] == ","
    ? substr(local.input_99, local.code_100[1], -1)
    : local.input_99)

  iter_100 = try(local.iter_99.code_ptr >= length(var.code), true) ? local.iter_99 : {
    output = (local.code_100[0] == "."
      ? "${local.iter_99.output}${join("", [for _ in range(local.code_100[1]) : jsondecode(format("\"\\u%04x\"", local.iter_99.tape[local.iter_99.tape_ptr]))])}"
      : local.iter_99.output)
    
    tape = (
      local.code_100[0] == "+"
        ? [for i, b in local.iter_99.tape : (i == local.iter_99.tape_ptr ? (b + local.code_100[1]) % 256 : b)] :
      local.code_100[0] == "-"
        ? [for i, b in local.iter_99.tape : (i == local.iter_99.tape_ptr ? (b - local.code_100[1] + 256) % 256 : b)] :
      local.code_100[0] == ","
        ? [for i, b in local.iter_99.tape : (i == local.iter_99.tape_ptr ? local.ascii_lookup[substr(local.input_100, 0, 1)] : b)]
        : local.iter_99.tape)

    tape_ptr = (
      local.code_100[0] == "<"
        ? local.iter_99.tape_ptr - local.code_100[1] :
      local.code_100[0] == ">"
        ? local.iter_99.tape_ptr + local.code_100[1]
        : local.iter_99.tape_ptr)

    code_ptr = 2 + (
      local.code_100[0] == "["
        ? local.iter_99.tape[local.iter_99.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_99.code_ptr)] : local.iter_99.code_ptr :
      local.code_100[0] == "]"
        ? local.iter_99.tape[local.iter_99.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_99.code_ptr)] : local.iter_99.code_ptr
        : local.iter_99.code_ptr)

    steps_taken = 1 + local.iter_99.steps_taken
  }
}

locals {
  code_101 = (try(local.iter_100.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_100.code_ptr, local.iter_100.code_ptr + 2)
    : [null])

  input_101 = (local.code_101[0] == ","
    ? substr(local.input_100, local.code_101[1], -1)
    : local.input_100)

  iter_101 = try(local.iter_100.code_ptr >= length(var.code), true) ? local.iter_100 : {
    output = (local.code_101[0] == "."
      ? "${local.iter_100.output}${join("", [for _ in range(local.code_101[1]) : jsondecode(format("\"\\u%04x\"", local.iter_100.tape[local.iter_100.tape_ptr]))])}"
      : local.iter_100.output)
    
    tape = (
      local.code_101[0] == "+"
        ? [for i, b in local.iter_100.tape : (i == local.iter_100.tape_ptr ? (b + local.code_101[1]) % 256 : b)] :
      local.code_101[0] == "-"
        ? [for i, b in local.iter_100.tape : (i == local.iter_100.tape_ptr ? (b - local.code_101[1] + 256) % 256 : b)] :
      local.code_101[0] == ","
        ? [for i, b in local.iter_100.tape : (i == local.iter_100.tape_ptr ? local.ascii_lookup[substr(local.input_101, 0, 1)] : b)]
        : local.iter_100.tape)

    tape_ptr = (
      local.code_101[0] == "<"
        ? local.iter_100.tape_ptr - local.code_101[1] :
      local.code_101[0] == ">"
        ? local.iter_100.tape_ptr + local.code_101[1]
        : local.iter_100.tape_ptr)

    code_ptr = 2 + (
      local.code_101[0] == "["
        ? local.iter_100.tape[local.iter_100.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_100.code_ptr)] : local.iter_100.code_ptr :
      local.code_101[0] == "]"
        ? local.iter_100.tape[local.iter_100.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_100.code_ptr)] : local.iter_100.code_ptr
        : local.iter_100.code_ptr)

    steps_taken = 1 + local.iter_100.steps_taken
  }
}

locals {
  code_102 = (try(local.iter_101.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_101.code_ptr, local.iter_101.code_ptr + 2)
    : [null])

  input_102 = (local.code_102[0] == ","
    ? substr(local.input_101, local.code_102[1], -1)
    : local.input_101)

  iter_102 = try(local.iter_101.code_ptr >= length(var.code), true) ? local.iter_101 : {
    output = (local.code_102[0] == "."
      ? "${local.iter_101.output}${join("", [for _ in range(local.code_102[1]) : jsondecode(format("\"\\u%04x\"", local.iter_101.tape[local.iter_101.tape_ptr]))])}"
      : local.iter_101.output)
    
    tape = (
      local.code_102[0] == "+"
        ? [for i, b in local.iter_101.tape : (i == local.iter_101.tape_ptr ? (b + local.code_102[1]) % 256 : b)] :
      local.code_102[0] == "-"
        ? [for i, b in local.iter_101.tape : (i == local.iter_101.tape_ptr ? (b - local.code_102[1] + 256) % 256 : b)] :
      local.code_102[0] == ","
        ? [for i, b in local.iter_101.tape : (i == local.iter_101.tape_ptr ? local.ascii_lookup[substr(local.input_102, 0, 1)] : b)]
        : local.iter_101.tape)

    tape_ptr = (
      local.code_102[0] == "<"
        ? local.iter_101.tape_ptr - local.code_102[1] :
      local.code_102[0] == ">"
        ? local.iter_101.tape_ptr + local.code_102[1]
        : local.iter_101.tape_ptr)

    code_ptr = 2 + (
      local.code_102[0] == "["
        ? local.iter_101.tape[local.iter_101.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_101.code_ptr)] : local.iter_101.code_ptr :
      local.code_102[0] == "]"
        ? local.iter_101.tape[local.iter_101.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_101.code_ptr)] : local.iter_101.code_ptr
        : local.iter_101.code_ptr)

    steps_taken = 1 + local.iter_101.steps_taken
  }
}

locals {
  code_103 = (try(local.iter_102.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_102.code_ptr, local.iter_102.code_ptr + 2)
    : [null])

  input_103 = (local.code_103[0] == ","
    ? substr(local.input_102, local.code_103[1], -1)
    : local.input_102)

  iter_103 = try(local.iter_102.code_ptr >= length(var.code), true) ? local.iter_102 : {
    output = (local.code_103[0] == "."
      ? "${local.iter_102.output}${join("", [for _ in range(local.code_103[1]) : jsondecode(format("\"\\u%04x\"", local.iter_102.tape[local.iter_102.tape_ptr]))])}"
      : local.iter_102.output)
    
    tape = (
      local.code_103[0] == "+"
        ? [for i, b in local.iter_102.tape : (i == local.iter_102.tape_ptr ? (b + local.code_103[1]) % 256 : b)] :
      local.code_103[0] == "-"
        ? [for i, b in local.iter_102.tape : (i == local.iter_102.tape_ptr ? (b - local.code_103[1] + 256) % 256 : b)] :
      local.code_103[0] == ","
        ? [for i, b in local.iter_102.tape : (i == local.iter_102.tape_ptr ? local.ascii_lookup[substr(local.input_103, 0, 1)] : b)]
        : local.iter_102.tape)

    tape_ptr = (
      local.code_103[0] == "<"
        ? local.iter_102.tape_ptr - local.code_103[1] :
      local.code_103[0] == ">"
        ? local.iter_102.tape_ptr + local.code_103[1]
        : local.iter_102.tape_ptr)

    code_ptr = 2 + (
      local.code_103[0] == "["
        ? local.iter_102.tape[local.iter_102.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_102.code_ptr)] : local.iter_102.code_ptr :
      local.code_103[0] == "]"
        ? local.iter_102.tape[local.iter_102.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_102.code_ptr)] : local.iter_102.code_ptr
        : local.iter_102.code_ptr)

    steps_taken = 1 + local.iter_102.steps_taken
  }
}

locals {
  code_104 = (try(local.iter_103.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_103.code_ptr, local.iter_103.code_ptr + 2)
    : [null])

  input_104 = (local.code_104[0] == ","
    ? substr(local.input_103, local.code_104[1], -1)
    : local.input_103)

  iter_104 = try(local.iter_103.code_ptr >= length(var.code), true) ? local.iter_103 : {
    output = (local.code_104[0] == "."
      ? "${local.iter_103.output}${join("", [for _ in range(local.code_104[1]) : jsondecode(format("\"\\u%04x\"", local.iter_103.tape[local.iter_103.tape_ptr]))])}"
      : local.iter_103.output)
    
    tape = (
      local.code_104[0] == "+"
        ? [for i, b in local.iter_103.tape : (i == local.iter_103.tape_ptr ? (b + local.code_104[1]) % 256 : b)] :
      local.code_104[0] == "-"
        ? [for i, b in local.iter_103.tape : (i == local.iter_103.tape_ptr ? (b - local.code_104[1] + 256) % 256 : b)] :
      local.code_104[0] == ","
        ? [for i, b in local.iter_103.tape : (i == local.iter_103.tape_ptr ? local.ascii_lookup[substr(local.input_104, 0, 1)] : b)]
        : local.iter_103.tape)

    tape_ptr = (
      local.code_104[0] == "<"
        ? local.iter_103.tape_ptr - local.code_104[1] :
      local.code_104[0] == ">"
        ? local.iter_103.tape_ptr + local.code_104[1]
        : local.iter_103.tape_ptr)

    code_ptr = 2 + (
      local.code_104[0] == "["
        ? local.iter_103.tape[local.iter_103.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_103.code_ptr)] : local.iter_103.code_ptr :
      local.code_104[0] == "]"
        ? local.iter_103.tape[local.iter_103.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_103.code_ptr)] : local.iter_103.code_ptr
        : local.iter_103.code_ptr)

    steps_taken = 1 + local.iter_103.steps_taken
  }
}

locals {
  code_105 = (try(local.iter_104.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_104.code_ptr, local.iter_104.code_ptr + 2)
    : [null])

  input_105 = (local.code_105[0] == ","
    ? substr(local.input_104, local.code_105[1], -1)
    : local.input_104)

  iter_105 = try(local.iter_104.code_ptr >= length(var.code), true) ? local.iter_104 : {
    output = (local.code_105[0] == "."
      ? "${local.iter_104.output}${join("", [for _ in range(local.code_105[1]) : jsondecode(format("\"\\u%04x\"", local.iter_104.tape[local.iter_104.tape_ptr]))])}"
      : local.iter_104.output)
    
    tape = (
      local.code_105[0] == "+"
        ? [for i, b in local.iter_104.tape : (i == local.iter_104.tape_ptr ? (b + local.code_105[1]) % 256 : b)] :
      local.code_105[0] == "-"
        ? [for i, b in local.iter_104.tape : (i == local.iter_104.tape_ptr ? (b - local.code_105[1] + 256) % 256 : b)] :
      local.code_105[0] == ","
        ? [for i, b in local.iter_104.tape : (i == local.iter_104.tape_ptr ? local.ascii_lookup[substr(local.input_105, 0, 1)] : b)]
        : local.iter_104.tape)

    tape_ptr = (
      local.code_105[0] == "<"
        ? local.iter_104.tape_ptr - local.code_105[1] :
      local.code_105[0] == ">"
        ? local.iter_104.tape_ptr + local.code_105[1]
        : local.iter_104.tape_ptr)

    code_ptr = 2 + (
      local.code_105[0] == "["
        ? local.iter_104.tape[local.iter_104.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_104.code_ptr)] : local.iter_104.code_ptr :
      local.code_105[0] == "]"
        ? local.iter_104.tape[local.iter_104.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_104.code_ptr)] : local.iter_104.code_ptr
        : local.iter_104.code_ptr)

    steps_taken = 1 + local.iter_104.steps_taken
  }
}

locals {
  code_106 = (try(local.iter_105.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_105.code_ptr, local.iter_105.code_ptr + 2)
    : [null])

  input_106 = (local.code_106[0] == ","
    ? substr(local.input_105, local.code_106[1], -1)
    : local.input_105)

  iter_106 = try(local.iter_105.code_ptr >= length(var.code), true) ? local.iter_105 : {
    output = (local.code_106[0] == "."
      ? "${local.iter_105.output}${join("", [for _ in range(local.code_106[1]) : jsondecode(format("\"\\u%04x\"", local.iter_105.tape[local.iter_105.tape_ptr]))])}"
      : local.iter_105.output)
    
    tape = (
      local.code_106[0] == "+"
        ? [for i, b in local.iter_105.tape : (i == local.iter_105.tape_ptr ? (b + local.code_106[1]) % 256 : b)] :
      local.code_106[0] == "-"
        ? [for i, b in local.iter_105.tape : (i == local.iter_105.tape_ptr ? (b - local.code_106[1] + 256) % 256 : b)] :
      local.code_106[0] == ","
        ? [for i, b in local.iter_105.tape : (i == local.iter_105.tape_ptr ? local.ascii_lookup[substr(local.input_106, 0, 1)] : b)]
        : local.iter_105.tape)

    tape_ptr = (
      local.code_106[0] == "<"
        ? local.iter_105.tape_ptr - local.code_106[1] :
      local.code_106[0] == ">"
        ? local.iter_105.tape_ptr + local.code_106[1]
        : local.iter_105.tape_ptr)

    code_ptr = 2 + (
      local.code_106[0] == "["
        ? local.iter_105.tape[local.iter_105.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_105.code_ptr)] : local.iter_105.code_ptr :
      local.code_106[0] == "]"
        ? local.iter_105.tape[local.iter_105.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_105.code_ptr)] : local.iter_105.code_ptr
        : local.iter_105.code_ptr)

    steps_taken = 1 + local.iter_105.steps_taken
  }
}

locals {
  code_107 = (try(local.iter_106.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_106.code_ptr, local.iter_106.code_ptr + 2)
    : [null])

  input_107 = (local.code_107[0] == ","
    ? substr(local.input_106, local.code_107[1], -1)
    : local.input_106)

  iter_107 = try(local.iter_106.code_ptr >= length(var.code), true) ? local.iter_106 : {
    output = (local.code_107[0] == "."
      ? "${local.iter_106.output}${join("", [for _ in range(local.code_107[1]) : jsondecode(format("\"\\u%04x\"", local.iter_106.tape[local.iter_106.tape_ptr]))])}"
      : local.iter_106.output)
    
    tape = (
      local.code_107[0] == "+"
        ? [for i, b in local.iter_106.tape : (i == local.iter_106.tape_ptr ? (b + local.code_107[1]) % 256 : b)] :
      local.code_107[0] == "-"
        ? [for i, b in local.iter_106.tape : (i == local.iter_106.tape_ptr ? (b - local.code_107[1] + 256) % 256 : b)] :
      local.code_107[0] == ","
        ? [for i, b in local.iter_106.tape : (i == local.iter_106.tape_ptr ? local.ascii_lookup[substr(local.input_107, 0, 1)] : b)]
        : local.iter_106.tape)

    tape_ptr = (
      local.code_107[0] == "<"
        ? local.iter_106.tape_ptr - local.code_107[1] :
      local.code_107[0] == ">"
        ? local.iter_106.tape_ptr + local.code_107[1]
        : local.iter_106.tape_ptr)

    code_ptr = 2 + (
      local.code_107[0] == "["
        ? local.iter_106.tape[local.iter_106.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_106.code_ptr)] : local.iter_106.code_ptr :
      local.code_107[0] == "]"
        ? local.iter_106.tape[local.iter_106.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_106.code_ptr)] : local.iter_106.code_ptr
        : local.iter_106.code_ptr)

    steps_taken = 1 + local.iter_106.steps_taken
  }
}

locals {
  code_108 = (try(local.iter_107.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_107.code_ptr, local.iter_107.code_ptr + 2)
    : [null])

  input_108 = (local.code_108[0] == ","
    ? substr(local.input_107, local.code_108[1], -1)
    : local.input_107)

  iter_108 = try(local.iter_107.code_ptr >= length(var.code), true) ? local.iter_107 : {
    output = (local.code_108[0] == "."
      ? "${local.iter_107.output}${join("", [for _ in range(local.code_108[1]) : jsondecode(format("\"\\u%04x\"", local.iter_107.tape[local.iter_107.tape_ptr]))])}"
      : local.iter_107.output)
    
    tape = (
      local.code_108[0] == "+"
        ? [for i, b in local.iter_107.tape : (i == local.iter_107.tape_ptr ? (b + local.code_108[1]) % 256 : b)] :
      local.code_108[0] == "-"
        ? [for i, b in local.iter_107.tape : (i == local.iter_107.tape_ptr ? (b - local.code_108[1] + 256) % 256 : b)] :
      local.code_108[0] == ","
        ? [for i, b in local.iter_107.tape : (i == local.iter_107.tape_ptr ? local.ascii_lookup[substr(local.input_108, 0, 1)] : b)]
        : local.iter_107.tape)

    tape_ptr = (
      local.code_108[0] == "<"
        ? local.iter_107.tape_ptr - local.code_108[1] :
      local.code_108[0] == ">"
        ? local.iter_107.tape_ptr + local.code_108[1]
        : local.iter_107.tape_ptr)

    code_ptr = 2 + (
      local.code_108[0] == "["
        ? local.iter_107.tape[local.iter_107.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_107.code_ptr)] : local.iter_107.code_ptr :
      local.code_108[0] == "]"
        ? local.iter_107.tape[local.iter_107.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_107.code_ptr)] : local.iter_107.code_ptr
        : local.iter_107.code_ptr)

    steps_taken = 1 + local.iter_107.steps_taken
  }
}

locals {
  code_109 = (try(local.iter_108.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_108.code_ptr, local.iter_108.code_ptr + 2)
    : [null])

  input_109 = (local.code_109[0] == ","
    ? substr(local.input_108, local.code_109[1], -1)
    : local.input_108)

  iter_109 = try(local.iter_108.code_ptr >= length(var.code), true) ? local.iter_108 : {
    output = (local.code_109[0] == "."
      ? "${local.iter_108.output}${join("", [for _ in range(local.code_109[1]) : jsondecode(format("\"\\u%04x\"", local.iter_108.tape[local.iter_108.tape_ptr]))])}"
      : local.iter_108.output)
    
    tape = (
      local.code_109[0] == "+"
        ? [for i, b in local.iter_108.tape : (i == local.iter_108.tape_ptr ? (b + local.code_109[1]) % 256 : b)] :
      local.code_109[0] == "-"
        ? [for i, b in local.iter_108.tape : (i == local.iter_108.tape_ptr ? (b - local.code_109[1] + 256) % 256 : b)] :
      local.code_109[0] == ","
        ? [for i, b in local.iter_108.tape : (i == local.iter_108.tape_ptr ? local.ascii_lookup[substr(local.input_109, 0, 1)] : b)]
        : local.iter_108.tape)

    tape_ptr = (
      local.code_109[0] == "<"
        ? local.iter_108.tape_ptr - local.code_109[1] :
      local.code_109[0] == ">"
        ? local.iter_108.tape_ptr + local.code_109[1]
        : local.iter_108.tape_ptr)

    code_ptr = 2 + (
      local.code_109[0] == "["
        ? local.iter_108.tape[local.iter_108.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_108.code_ptr)] : local.iter_108.code_ptr :
      local.code_109[0] == "]"
        ? local.iter_108.tape[local.iter_108.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_108.code_ptr)] : local.iter_108.code_ptr
        : local.iter_108.code_ptr)

    steps_taken = 1 + local.iter_108.steps_taken
  }
}

locals {
  code_110 = (try(local.iter_109.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_109.code_ptr, local.iter_109.code_ptr + 2)
    : [null])

  input_110 = (local.code_110[0] == ","
    ? substr(local.input_109, local.code_110[1], -1)
    : local.input_109)

  iter_110 = try(local.iter_109.code_ptr >= length(var.code), true) ? local.iter_109 : {
    output = (local.code_110[0] == "."
      ? "${local.iter_109.output}${join("", [for _ in range(local.code_110[1]) : jsondecode(format("\"\\u%04x\"", local.iter_109.tape[local.iter_109.tape_ptr]))])}"
      : local.iter_109.output)
    
    tape = (
      local.code_110[0] == "+"
        ? [for i, b in local.iter_109.tape : (i == local.iter_109.tape_ptr ? (b + local.code_110[1]) % 256 : b)] :
      local.code_110[0] == "-"
        ? [for i, b in local.iter_109.tape : (i == local.iter_109.tape_ptr ? (b - local.code_110[1] + 256) % 256 : b)] :
      local.code_110[0] == ","
        ? [for i, b in local.iter_109.tape : (i == local.iter_109.tape_ptr ? local.ascii_lookup[substr(local.input_110, 0, 1)] : b)]
        : local.iter_109.tape)

    tape_ptr = (
      local.code_110[0] == "<"
        ? local.iter_109.tape_ptr - local.code_110[1] :
      local.code_110[0] == ">"
        ? local.iter_109.tape_ptr + local.code_110[1]
        : local.iter_109.tape_ptr)

    code_ptr = 2 + (
      local.code_110[0] == "["
        ? local.iter_109.tape[local.iter_109.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_109.code_ptr)] : local.iter_109.code_ptr :
      local.code_110[0] == "]"
        ? local.iter_109.tape[local.iter_109.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_109.code_ptr)] : local.iter_109.code_ptr
        : local.iter_109.code_ptr)

    steps_taken = 1 + local.iter_109.steps_taken
  }
}

locals {
  code_111 = (try(local.iter_110.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_110.code_ptr, local.iter_110.code_ptr + 2)
    : [null])

  input_111 = (local.code_111[0] == ","
    ? substr(local.input_110, local.code_111[1], -1)
    : local.input_110)

  iter_111 = try(local.iter_110.code_ptr >= length(var.code), true) ? local.iter_110 : {
    output = (local.code_111[0] == "."
      ? "${local.iter_110.output}${join("", [for _ in range(local.code_111[1]) : jsondecode(format("\"\\u%04x\"", local.iter_110.tape[local.iter_110.tape_ptr]))])}"
      : local.iter_110.output)
    
    tape = (
      local.code_111[0] == "+"
        ? [for i, b in local.iter_110.tape : (i == local.iter_110.tape_ptr ? (b + local.code_111[1]) % 256 : b)] :
      local.code_111[0] == "-"
        ? [for i, b in local.iter_110.tape : (i == local.iter_110.tape_ptr ? (b - local.code_111[1] + 256) % 256 : b)] :
      local.code_111[0] == ","
        ? [for i, b in local.iter_110.tape : (i == local.iter_110.tape_ptr ? local.ascii_lookup[substr(local.input_111, 0, 1)] : b)]
        : local.iter_110.tape)

    tape_ptr = (
      local.code_111[0] == "<"
        ? local.iter_110.tape_ptr - local.code_111[1] :
      local.code_111[0] == ">"
        ? local.iter_110.tape_ptr + local.code_111[1]
        : local.iter_110.tape_ptr)

    code_ptr = 2 + (
      local.code_111[0] == "["
        ? local.iter_110.tape[local.iter_110.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_110.code_ptr)] : local.iter_110.code_ptr :
      local.code_111[0] == "]"
        ? local.iter_110.tape[local.iter_110.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_110.code_ptr)] : local.iter_110.code_ptr
        : local.iter_110.code_ptr)

    steps_taken = 1 + local.iter_110.steps_taken
  }
}

locals {
  code_112 = (try(local.iter_111.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_111.code_ptr, local.iter_111.code_ptr + 2)
    : [null])

  input_112 = (local.code_112[0] == ","
    ? substr(local.input_111, local.code_112[1], -1)
    : local.input_111)

  iter_112 = try(local.iter_111.code_ptr >= length(var.code), true) ? local.iter_111 : {
    output = (local.code_112[0] == "."
      ? "${local.iter_111.output}${join("", [for _ in range(local.code_112[1]) : jsondecode(format("\"\\u%04x\"", local.iter_111.tape[local.iter_111.tape_ptr]))])}"
      : local.iter_111.output)
    
    tape = (
      local.code_112[0] == "+"
        ? [for i, b in local.iter_111.tape : (i == local.iter_111.tape_ptr ? (b + local.code_112[1]) % 256 : b)] :
      local.code_112[0] == "-"
        ? [for i, b in local.iter_111.tape : (i == local.iter_111.tape_ptr ? (b - local.code_112[1] + 256) % 256 : b)] :
      local.code_112[0] == ","
        ? [for i, b in local.iter_111.tape : (i == local.iter_111.tape_ptr ? local.ascii_lookup[substr(local.input_112, 0, 1)] : b)]
        : local.iter_111.tape)

    tape_ptr = (
      local.code_112[0] == "<"
        ? local.iter_111.tape_ptr - local.code_112[1] :
      local.code_112[0] == ">"
        ? local.iter_111.tape_ptr + local.code_112[1]
        : local.iter_111.tape_ptr)

    code_ptr = 2 + (
      local.code_112[0] == "["
        ? local.iter_111.tape[local.iter_111.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_111.code_ptr)] : local.iter_111.code_ptr :
      local.code_112[0] == "]"
        ? local.iter_111.tape[local.iter_111.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_111.code_ptr)] : local.iter_111.code_ptr
        : local.iter_111.code_ptr)

    steps_taken = 1 + local.iter_111.steps_taken
  }
}

locals {
  code_113 = (try(local.iter_112.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_112.code_ptr, local.iter_112.code_ptr + 2)
    : [null])

  input_113 = (local.code_113[0] == ","
    ? substr(local.input_112, local.code_113[1], -1)
    : local.input_112)

  iter_113 = try(local.iter_112.code_ptr >= length(var.code), true) ? local.iter_112 : {
    output = (local.code_113[0] == "."
      ? "${local.iter_112.output}${join("", [for _ in range(local.code_113[1]) : jsondecode(format("\"\\u%04x\"", local.iter_112.tape[local.iter_112.tape_ptr]))])}"
      : local.iter_112.output)
    
    tape = (
      local.code_113[0] == "+"
        ? [for i, b in local.iter_112.tape : (i == local.iter_112.tape_ptr ? (b + local.code_113[1]) % 256 : b)] :
      local.code_113[0] == "-"
        ? [for i, b in local.iter_112.tape : (i == local.iter_112.tape_ptr ? (b - local.code_113[1] + 256) % 256 : b)] :
      local.code_113[0] == ","
        ? [for i, b in local.iter_112.tape : (i == local.iter_112.tape_ptr ? local.ascii_lookup[substr(local.input_113, 0, 1)] : b)]
        : local.iter_112.tape)

    tape_ptr = (
      local.code_113[0] == "<"
        ? local.iter_112.tape_ptr - local.code_113[1] :
      local.code_113[0] == ">"
        ? local.iter_112.tape_ptr + local.code_113[1]
        : local.iter_112.tape_ptr)

    code_ptr = 2 + (
      local.code_113[0] == "["
        ? local.iter_112.tape[local.iter_112.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_112.code_ptr)] : local.iter_112.code_ptr :
      local.code_113[0] == "]"
        ? local.iter_112.tape[local.iter_112.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_112.code_ptr)] : local.iter_112.code_ptr
        : local.iter_112.code_ptr)

    steps_taken = 1 + local.iter_112.steps_taken
  }
}

locals {
  code_114 = (try(local.iter_113.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_113.code_ptr, local.iter_113.code_ptr + 2)
    : [null])

  input_114 = (local.code_114[0] == ","
    ? substr(local.input_113, local.code_114[1], -1)
    : local.input_113)

  iter_114 = try(local.iter_113.code_ptr >= length(var.code), true) ? local.iter_113 : {
    output = (local.code_114[0] == "."
      ? "${local.iter_113.output}${join("", [for _ in range(local.code_114[1]) : jsondecode(format("\"\\u%04x\"", local.iter_113.tape[local.iter_113.tape_ptr]))])}"
      : local.iter_113.output)
    
    tape = (
      local.code_114[0] == "+"
        ? [for i, b in local.iter_113.tape : (i == local.iter_113.tape_ptr ? (b + local.code_114[1]) % 256 : b)] :
      local.code_114[0] == "-"
        ? [for i, b in local.iter_113.tape : (i == local.iter_113.tape_ptr ? (b - local.code_114[1] + 256) % 256 : b)] :
      local.code_114[0] == ","
        ? [for i, b in local.iter_113.tape : (i == local.iter_113.tape_ptr ? local.ascii_lookup[substr(local.input_114, 0, 1)] : b)]
        : local.iter_113.tape)

    tape_ptr = (
      local.code_114[0] == "<"
        ? local.iter_113.tape_ptr - local.code_114[1] :
      local.code_114[0] == ">"
        ? local.iter_113.tape_ptr + local.code_114[1]
        : local.iter_113.tape_ptr)

    code_ptr = 2 + (
      local.code_114[0] == "["
        ? local.iter_113.tape[local.iter_113.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_113.code_ptr)] : local.iter_113.code_ptr :
      local.code_114[0] == "]"
        ? local.iter_113.tape[local.iter_113.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_113.code_ptr)] : local.iter_113.code_ptr
        : local.iter_113.code_ptr)

    steps_taken = 1 + local.iter_113.steps_taken
  }
}

locals {
  code_115 = (try(local.iter_114.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_114.code_ptr, local.iter_114.code_ptr + 2)
    : [null])

  input_115 = (local.code_115[0] == ","
    ? substr(local.input_114, local.code_115[1], -1)
    : local.input_114)

  iter_115 = try(local.iter_114.code_ptr >= length(var.code), true) ? local.iter_114 : {
    output = (local.code_115[0] == "."
      ? "${local.iter_114.output}${join("", [for _ in range(local.code_115[1]) : jsondecode(format("\"\\u%04x\"", local.iter_114.tape[local.iter_114.tape_ptr]))])}"
      : local.iter_114.output)
    
    tape = (
      local.code_115[0] == "+"
        ? [for i, b in local.iter_114.tape : (i == local.iter_114.tape_ptr ? (b + local.code_115[1]) % 256 : b)] :
      local.code_115[0] == "-"
        ? [for i, b in local.iter_114.tape : (i == local.iter_114.tape_ptr ? (b - local.code_115[1] + 256) % 256 : b)] :
      local.code_115[0] == ","
        ? [for i, b in local.iter_114.tape : (i == local.iter_114.tape_ptr ? local.ascii_lookup[substr(local.input_115, 0, 1)] : b)]
        : local.iter_114.tape)

    tape_ptr = (
      local.code_115[0] == "<"
        ? local.iter_114.tape_ptr - local.code_115[1] :
      local.code_115[0] == ">"
        ? local.iter_114.tape_ptr + local.code_115[1]
        : local.iter_114.tape_ptr)

    code_ptr = 2 + (
      local.code_115[0] == "["
        ? local.iter_114.tape[local.iter_114.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_114.code_ptr)] : local.iter_114.code_ptr :
      local.code_115[0] == "]"
        ? local.iter_114.tape[local.iter_114.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_114.code_ptr)] : local.iter_114.code_ptr
        : local.iter_114.code_ptr)

    steps_taken = 1 + local.iter_114.steps_taken
  }
}

locals {
  code_116 = (try(local.iter_115.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_115.code_ptr, local.iter_115.code_ptr + 2)
    : [null])

  input_116 = (local.code_116[0] == ","
    ? substr(local.input_115, local.code_116[1], -1)
    : local.input_115)

  iter_116 = try(local.iter_115.code_ptr >= length(var.code), true) ? local.iter_115 : {
    output = (local.code_116[0] == "."
      ? "${local.iter_115.output}${join("", [for _ in range(local.code_116[1]) : jsondecode(format("\"\\u%04x\"", local.iter_115.tape[local.iter_115.tape_ptr]))])}"
      : local.iter_115.output)
    
    tape = (
      local.code_116[0] == "+"
        ? [for i, b in local.iter_115.tape : (i == local.iter_115.tape_ptr ? (b + local.code_116[1]) % 256 : b)] :
      local.code_116[0] == "-"
        ? [for i, b in local.iter_115.tape : (i == local.iter_115.tape_ptr ? (b - local.code_116[1] + 256) % 256 : b)] :
      local.code_116[0] == ","
        ? [for i, b in local.iter_115.tape : (i == local.iter_115.tape_ptr ? local.ascii_lookup[substr(local.input_116, 0, 1)] : b)]
        : local.iter_115.tape)

    tape_ptr = (
      local.code_116[0] == "<"
        ? local.iter_115.tape_ptr - local.code_116[1] :
      local.code_116[0] == ">"
        ? local.iter_115.tape_ptr + local.code_116[1]
        : local.iter_115.tape_ptr)

    code_ptr = 2 + (
      local.code_116[0] == "["
        ? local.iter_115.tape[local.iter_115.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_115.code_ptr)] : local.iter_115.code_ptr :
      local.code_116[0] == "]"
        ? local.iter_115.tape[local.iter_115.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_115.code_ptr)] : local.iter_115.code_ptr
        : local.iter_115.code_ptr)

    steps_taken = 1 + local.iter_115.steps_taken
  }
}

locals {
  code_117 = (try(local.iter_116.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_116.code_ptr, local.iter_116.code_ptr + 2)
    : [null])

  input_117 = (local.code_117[0] == ","
    ? substr(local.input_116, local.code_117[1], -1)
    : local.input_116)

  iter_117 = try(local.iter_116.code_ptr >= length(var.code), true) ? local.iter_116 : {
    output = (local.code_117[0] == "."
      ? "${local.iter_116.output}${join("", [for _ in range(local.code_117[1]) : jsondecode(format("\"\\u%04x\"", local.iter_116.tape[local.iter_116.tape_ptr]))])}"
      : local.iter_116.output)
    
    tape = (
      local.code_117[0] == "+"
        ? [for i, b in local.iter_116.tape : (i == local.iter_116.tape_ptr ? (b + local.code_117[1]) % 256 : b)] :
      local.code_117[0] == "-"
        ? [for i, b in local.iter_116.tape : (i == local.iter_116.tape_ptr ? (b - local.code_117[1] + 256) % 256 : b)] :
      local.code_117[0] == ","
        ? [for i, b in local.iter_116.tape : (i == local.iter_116.tape_ptr ? local.ascii_lookup[substr(local.input_117, 0, 1)] : b)]
        : local.iter_116.tape)

    tape_ptr = (
      local.code_117[0] == "<"
        ? local.iter_116.tape_ptr - local.code_117[1] :
      local.code_117[0] == ">"
        ? local.iter_116.tape_ptr + local.code_117[1]
        : local.iter_116.tape_ptr)

    code_ptr = 2 + (
      local.code_117[0] == "["
        ? local.iter_116.tape[local.iter_116.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_116.code_ptr)] : local.iter_116.code_ptr :
      local.code_117[0] == "]"
        ? local.iter_116.tape[local.iter_116.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_116.code_ptr)] : local.iter_116.code_ptr
        : local.iter_116.code_ptr)

    steps_taken = 1 + local.iter_116.steps_taken
  }
}

locals {
  code_118 = (try(local.iter_117.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_117.code_ptr, local.iter_117.code_ptr + 2)
    : [null])

  input_118 = (local.code_118[0] == ","
    ? substr(local.input_117, local.code_118[1], -1)
    : local.input_117)

  iter_118 = try(local.iter_117.code_ptr >= length(var.code), true) ? local.iter_117 : {
    output = (local.code_118[0] == "."
      ? "${local.iter_117.output}${join("", [for _ in range(local.code_118[1]) : jsondecode(format("\"\\u%04x\"", local.iter_117.tape[local.iter_117.tape_ptr]))])}"
      : local.iter_117.output)
    
    tape = (
      local.code_118[0] == "+"
        ? [for i, b in local.iter_117.tape : (i == local.iter_117.tape_ptr ? (b + local.code_118[1]) % 256 : b)] :
      local.code_118[0] == "-"
        ? [for i, b in local.iter_117.tape : (i == local.iter_117.tape_ptr ? (b - local.code_118[1] + 256) % 256 : b)] :
      local.code_118[0] == ","
        ? [for i, b in local.iter_117.tape : (i == local.iter_117.tape_ptr ? local.ascii_lookup[substr(local.input_118, 0, 1)] : b)]
        : local.iter_117.tape)

    tape_ptr = (
      local.code_118[0] == "<"
        ? local.iter_117.tape_ptr - local.code_118[1] :
      local.code_118[0] == ">"
        ? local.iter_117.tape_ptr + local.code_118[1]
        : local.iter_117.tape_ptr)

    code_ptr = 2 + (
      local.code_118[0] == "["
        ? local.iter_117.tape[local.iter_117.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_117.code_ptr)] : local.iter_117.code_ptr :
      local.code_118[0] == "]"
        ? local.iter_117.tape[local.iter_117.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_117.code_ptr)] : local.iter_117.code_ptr
        : local.iter_117.code_ptr)

    steps_taken = 1 + local.iter_117.steps_taken
  }
}

locals {
  code_119 = (try(local.iter_118.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_118.code_ptr, local.iter_118.code_ptr + 2)
    : [null])

  input_119 = (local.code_119[0] == ","
    ? substr(local.input_118, local.code_119[1], -1)
    : local.input_118)

  iter_119 = try(local.iter_118.code_ptr >= length(var.code), true) ? local.iter_118 : {
    output = (local.code_119[0] == "."
      ? "${local.iter_118.output}${join("", [for _ in range(local.code_119[1]) : jsondecode(format("\"\\u%04x\"", local.iter_118.tape[local.iter_118.tape_ptr]))])}"
      : local.iter_118.output)
    
    tape = (
      local.code_119[0] == "+"
        ? [for i, b in local.iter_118.tape : (i == local.iter_118.tape_ptr ? (b + local.code_119[1]) % 256 : b)] :
      local.code_119[0] == "-"
        ? [for i, b in local.iter_118.tape : (i == local.iter_118.tape_ptr ? (b - local.code_119[1] + 256) % 256 : b)] :
      local.code_119[0] == ","
        ? [for i, b in local.iter_118.tape : (i == local.iter_118.tape_ptr ? local.ascii_lookup[substr(local.input_119, 0, 1)] : b)]
        : local.iter_118.tape)

    tape_ptr = (
      local.code_119[0] == "<"
        ? local.iter_118.tape_ptr - local.code_119[1] :
      local.code_119[0] == ">"
        ? local.iter_118.tape_ptr + local.code_119[1]
        : local.iter_118.tape_ptr)

    code_ptr = 2 + (
      local.code_119[0] == "["
        ? local.iter_118.tape[local.iter_118.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_118.code_ptr)] : local.iter_118.code_ptr :
      local.code_119[0] == "]"
        ? local.iter_118.tape[local.iter_118.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_118.code_ptr)] : local.iter_118.code_ptr
        : local.iter_118.code_ptr)

    steps_taken = 1 + local.iter_118.steps_taken
  }
}

locals {
  code_120 = (try(local.iter_119.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_119.code_ptr, local.iter_119.code_ptr + 2)
    : [null])

  input_120 = (local.code_120[0] == ","
    ? substr(local.input_119, local.code_120[1], -1)
    : local.input_119)

  iter_120 = try(local.iter_119.code_ptr >= length(var.code), true) ? local.iter_119 : {
    output = (local.code_120[0] == "."
      ? "${local.iter_119.output}${join("", [for _ in range(local.code_120[1]) : jsondecode(format("\"\\u%04x\"", local.iter_119.tape[local.iter_119.tape_ptr]))])}"
      : local.iter_119.output)
    
    tape = (
      local.code_120[0] == "+"
        ? [for i, b in local.iter_119.tape : (i == local.iter_119.tape_ptr ? (b + local.code_120[1]) % 256 : b)] :
      local.code_120[0] == "-"
        ? [for i, b in local.iter_119.tape : (i == local.iter_119.tape_ptr ? (b - local.code_120[1] + 256) % 256 : b)] :
      local.code_120[0] == ","
        ? [for i, b in local.iter_119.tape : (i == local.iter_119.tape_ptr ? local.ascii_lookup[substr(local.input_120, 0, 1)] : b)]
        : local.iter_119.tape)

    tape_ptr = (
      local.code_120[0] == "<"
        ? local.iter_119.tape_ptr - local.code_120[1] :
      local.code_120[0] == ">"
        ? local.iter_119.tape_ptr + local.code_120[1]
        : local.iter_119.tape_ptr)

    code_ptr = 2 + (
      local.code_120[0] == "["
        ? local.iter_119.tape[local.iter_119.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_119.code_ptr)] : local.iter_119.code_ptr :
      local.code_120[0] == "]"
        ? local.iter_119.tape[local.iter_119.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_119.code_ptr)] : local.iter_119.code_ptr
        : local.iter_119.code_ptr)

    steps_taken = 1 + local.iter_119.steps_taken
  }
}

locals {
  code_121 = (try(local.iter_120.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_120.code_ptr, local.iter_120.code_ptr + 2)
    : [null])

  input_121 = (local.code_121[0] == ","
    ? substr(local.input_120, local.code_121[1], -1)
    : local.input_120)

  iter_121 = try(local.iter_120.code_ptr >= length(var.code), true) ? local.iter_120 : {
    output = (local.code_121[0] == "."
      ? "${local.iter_120.output}${join("", [for _ in range(local.code_121[1]) : jsondecode(format("\"\\u%04x\"", local.iter_120.tape[local.iter_120.tape_ptr]))])}"
      : local.iter_120.output)
    
    tape = (
      local.code_121[0] == "+"
        ? [for i, b in local.iter_120.tape : (i == local.iter_120.tape_ptr ? (b + local.code_121[1]) % 256 : b)] :
      local.code_121[0] == "-"
        ? [for i, b in local.iter_120.tape : (i == local.iter_120.tape_ptr ? (b - local.code_121[1] + 256) % 256 : b)] :
      local.code_121[0] == ","
        ? [for i, b in local.iter_120.tape : (i == local.iter_120.tape_ptr ? local.ascii_lookup[substr(local.input_121, 0, 1)] : b)]
        : local.iter_120.tape)

    tape_ptr = (
      local.code_121[0] == "<"
        ? local.iter_120.tape_ptr - local.code_121[1] :
      local.code_121[0] == ">"
        ? local.iter_120.tape_ptr + local.code_121[1]
        : local.iter_120.tape_ptr)

    code_ptr = 2 + (
      local.code_121[0] == "["
        ? local.iter_120.tape[local.iter_120.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_120.code_ptr)] : local.iter_120.code_ptr :
      local.code_121[0] == "]"
        ? local.iter_120.tape[local.iter_120.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_120.code_ptr)] : local.iter_120.code_ptr
        : local.iter_120.code_ptr)

    steps_taken = 1 + local.iter_120.steps_taken
  }
}

locals {
  code_122 = (try(local.iter_121.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_121.code_ptr, local.iter_121.code_ptr + 2)
    : [null])

  input_122 = (local.code_122[0] == ","
    ? substr(local.input_121, local.code_122[1], -1)
    : local.input_121)

  iter_122 = try(local.iter_121.code_ptr >= length(var.code), true) ? local.iter_121 : {
    output = (local.code_122[0] == "."
      ? "${local.iter_121.output}${join("", [for _ in range(local.code_122[1]) : jsondecode(format("\"\\u%04x\"", local.iter_121.tape[local.iter_121.tape_ptr]))])}"
      : local.iter_121.output)
    
    tape = (
      local.code_122[0] == "+"
        ? [for i, b in local.iter_121.tape : (i == local.iter_121.tape_ptr ? (b + local.code_122[1]) % 256 : b)] :
      local.code_122[0] == "-"
        ? [for i, b in local.iter_121.tape : (i == local.iter_121.tape_ptr ? (b - local.code_122[1] + 256) % 256 : b)] :
      local.code_122[0] == ","
        ? [for i, b in local.iter_121.tape : (i == local.iter_121.tape_ptr ? local.ascii_lookup[substr(local.input_122, 0, 1)] : b)]
        : local.iter_121.tape)

    tape_ptr = (
      local.code_122[0] == "<"
        ? local.iter_121.tape_ptr - local.code_122[1] :
      local.code_122[0] == ">"
        ? local.iter_121.tape_ptr + local.code_122[1]
        : local.iter_121.tape_ptr)

    code_ptr = 2 + (
      local.code_122[0] == "["
        ? local.iter_121.tape[local.iter_121.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_121.code_ptr)] : local.iter_121.code_ptr :
      local.code_122[0] == "]"
        ? local.iter_121.tape[local.iter_121.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_121.code_ptr)] : local.iter_121.code_ptr
        : local.iter_121.code_ptr)

    steps_taken = 1 + local.iter_121.steps_taken
  }
}

locals {
  code_123 = (try(local.iter_122.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_122.code_ptr, local.iter_122.code_ptr + 2)
    : [null])

  input_123 = (local.code_123[0] == ","
    ? substr(local.input_122, local.code_123[1], -1)
    : local.input_122)

  iter_123 = try(local.iter_122.code_ptr >= length(var.code), true) ? local.iter_122 : {
    output = (local.code_123[0] == "."
      ? "${local.iter_122.output}${join("", [for _ in range(local.code_123[1]) : jsondecode(format("\"\\u%04x\"", local.iter_122.tape[local.iter_122.tape_ptr]))])}"
      : local.iter_122.output)
    
    tape = (
      local.code_123[0] == "+"
        ? [for i, b in local.iter_122.tape : (i == local.iter_122.tape_ptr ? (b + local.code_123[1]) % 256 : b)] :
      local.code_123[0] == "-"
        ? [for i, b in local.iter_122.tape : (i == local.iter_122.tape_ptr ? (b - local.code_123[1] + 256) % 256 : b)] :
      local.code_123[0] == ","
        ? [for i, b in local.iter_122.tape : (i == local.iter_122.tape_ptr ? local.ascii_lookup[substr(local.input_123, 0, 1)] : b)]
        : local.iter_122.tape)

    tape_ptr = (
      local.code_123[0] == "<"
        ? local.iter_122.tape_ptr - local.code_123[1] :
      local.code_123[0] == ">"
        ? local.iter_122.tape_ptr + local.code_123[1]
        : local.iter_122.tape_ptr)

    code_ptr = 2 + (
      local.code_123[0] == "["
        ? local.iter_122.tape[local.iter_122.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_122.code_ptr)] : local.iter_122.code_ptr :
      local.code_123[0] == "]"
        ? local.iter_122.tape[local.iter_122.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_122.code_ptr)] : local.iter_122.code_ptr
        : local.iter_122.code_ptr)

    steps_taken = 1 + local.iter_122.steps_taken
  }
}

locals {
  code_124 = (try(local.iter_123.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_123.code_ptr, local.iter_123.code_ptr + 2)
    : [null])

  input_124 = (local.code_124[0] == ","
    ? substr(local.input_123, local.code_124[1], -1)
    : local.input_123)

  iter_124 = try(local.iter_123.code_ptr >= length(var.code), true) ? local.iter_123 : {
    output = (local.code_124[0] == "."
      ? "${local.iter_123.output}${join("", [for _ in range(local.code_124[1]) : jsondecode(format("\"\\u%04x\"", local.iter_123.tape[local.iter_123.tape_ptr]))])}"
      : local.iter_123.output)
    
    tape = (
      local.code_124[0] == "+"
        ? [for i, b in local.iter_123.tape : (i == local.iter_123.tape_ptr ? (b + local.code_124[1]) % 256 : b)] :
      local.code_124[0] == "-"
        ? [for i, b in local.iter_123.tape : (i == local.iter_123.tape_ptr ? (b - local.code_124[1] + 256) % 256 : b)] :
      local.code_124[0] == ","
        ? [for i, b in local.iter_123.tape : (i == local.iter_123.tape_ptr ? local.ascii_lookup[substr(local.input_124, 0, 1)] : b)]
        : local.iter_123.tape)

    tape_ptr = (
      local.code_124[0] == "<"
        ? local.iter_123.tape_ptr - local.code_124[1] :
      local.code_124[0] == ">"
        ? local.iter_123.tape_ptr + local.code_124[1]
        : local.iter_123.tape_ptr)

    code_ptr = 2 + (
      local.code_124[0] == "["
        ? local.iter_123.tape[local.iter_123.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_123.code_ptr)] : local.iter_123.code_ptr :
      local.code_124[0] == "]"
        ? local.iter_123.tape[local.iter_123.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_123.code_ptr)] : local.iter_123.code_ptr
        : local.iter_123.code_ptr)

    steps_taken = 1 + local.iter_123.steps_taken
  }
}

locals {
  code_125 = (try(local.iter_124.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_124.code_ptr, local.iter_124.code_ptr + 2)
    : [null])

  input_125 = (local.code_125[0] == ","
    ? substr(local.input_124, local.code_125[1], -1)
    : local.input_124)

  iter_125 = try(local.iter_124.code_ptr >= length(var.code), true) ? local.iter_124 : {
    output = (local.code_125[0] == "."
      ? "${local.iter_124.output}${join("", [for _ in range(local.code_125[1]) : jsondecode(format("\"\\u%04x\"", local.iter_124.tape[local.iter_124.tape_ptr]))])}"
      : local.iter_124.output)
    
    tape = (
      local.code_125[0] == "+"
        ? [for i, b in local.iter_124.tape : (i == local.iter_124.tape_ptr ? (b + local.code_125[1]) % 256 : b)] :
      local.code_125[0] == "-"
        ? [for i, b in local.iter_124.tape : (i == local.iter_124.tape_ptr ? (b - local.code_125[1] + 256) % 256 : b)] :
      local.code_125[0] == ","
        ? [for i, b in local.iter_124.tape : (i == local.iter_124.tape_ptr ? local.ascii_lookup[substr(local.input_125, 0, 1)] : b)]
        : local.iter_124.tape)

    tape_ptr = (
      local.code_125[0] == "<"
        ? local.iter_124.tape_ptr - local.code_125[1] :
      local.code_125[0] == ">"
        ? local.iter_124.tape_ptr + local.code_125[1]
        : local.iter_124.tape_ptr)

    code_ptr = 2 + (
      local.code_125[0] == "["
        ? local.iter_124.tape[local.iter_124.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_124.code_ptr)] : local.iter_124.code_ptr :
      local.code_125[0] == "]"
        ? local.iter_124.tape[local.iter_124.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_124.code_ptr)] : local.iter_124.code_ptr
        : local.iter_124.code_ptr)

    steps_taken = 1 + local.iter_124.steps_taken
  }
}

locals {
  code_126 = (try(local.iter_125.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_125.code_ptr, local.iter_125.code_ptr + 2)
    : [null])

  input_126 = (local.code_126[0] == ","
    ? substr(local.input_125, local.code_126[1], -1)
    : local.input_125)

  iter_126 = try(local.iter_125.code_ptr >= length(var.code), true) ? local.iter_125 : {
    output = (local.code_126[0] == "."
      ? "${local.iter_125.output}${join("", [for _ in range(local.code_126[1]) : jsondecode(format("\"\\u%04x\"", local.iter_125.tape[local.iter_125.tape_ptr]))])}"
      : local.iter_125.output)
    
    tape = (
      local.code_126[0] == "+"
        ? [for i, b in local.iter_125.tape : (i == local.iter_125.tape_ptr ? (b + local.code_126[1]) % 256 : b)] :
      local.code_126[0] == "-"
        ? [for i, b in local.iter_125.tape : (i == local.iter_125.tape_ptr ? (b - local.code_126[1] + 256) % 256 : b)] :
      local.code_126[0] == ","
        ? [for i, b in local.iter_125.tape : (i == local.iter_125.tape_ptr ? local.ascii_lookup[substr(local.input_126, 0, 1)] : b)]
        : local.iter_125.tape)

    tape_ptr = (
      local.code_126[0] == "<"
        ? local.iter_125.tape_ptr - local.code_126[1] :
      local.code_126[0] == ">"
        ? local.iter_125.tape_ptr + local.code_126[1]
        : local.iter_125.tape_ptr)

    code_ptr = 2 + (
      local.code_126[0] == "["
        ? local.iter_125.tape[local.iter_125.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_125.code_ptr)] : local.iter_125.code_ptr :
      local.code_126[0] == "]"
        ? local.iter_125.tape[local.iter_125.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_125.code_ptr)] : local.iter_125.code_ptr
        : local.iter_125.code_ptr)

    steps_taken = 1 + local.iter_125.steps_taken
  }
}

locals {
  code_127 = (try(local.iter_126.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_126.code_ptr, local.iter_126.code_ptr + 2)
    : [null])

  input_127 = (local.code_127[0] == ","
    ? substr(local.input_126, local.code_127[1], -1)
    : local.input_126)

  iter_127 = try(local.iter_126.code_ptr >= length(var.code), true) ? local.iter_126 : {
    output = (local.code_127[0] == "."
      ? "${local.iter_126.output}${join("", [for _ in range(local.code_127[1]) : jsondecode(format("\"\\u%04x\"", local.iter_126.tape[local.iter_126.tape_ptr]))])}"
      : local.iter_126.output)
    
    tape = (
      local.code_127[0] == "+"
        ? [for i, b in local.iter_126.tape : (i == local.iter_126.tape_ptr ? (b + local.code_127[1]) % 256 : b)] :
      local.code_127[0] == "-"
        ? [for i, b in local.iter_126.tape : (i == local.iter_126.tape_ptr ? (b - local.code_127[1] + 256) % 256 : b)] :
      local.code_127[0] == ","
        ? [for i, b in local.iter_126.tape : (i == local.iter_126.tape_ptr ? local.ascii_lookup[substr(local.input_127, 0, 1)] : b)]
        : local.iter_126.tape)

    tape_ptr = (
      local.code_127[0] == "<"
        ? local.iter_126.tape_ptr - local.code_127[1] :
      local.code_127[0] == ">"
        ? local.iter_126.tape_ptr + local.code_127[1]
        : local.iter_126.tape_ptr)

    code_ptr = 2 + (
      local.code_127[0] == "["
        ? local.iter_126.tape[local.iter_126.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_126.code_ptr)] : local.iter_126.code_ptr :
      local.code_127[0] == "]"
        ? local.iter_126.tape[local.iter_126.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_126.code_ptr)] : local.iter_126.code_ptr
        : local.iter_126.code_ptr)

    steps_taken = 1 + local.iter_126.steps_taken
  }
}

locals {
  code_128 = (try(local.iter_127.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_127.code_ptr, local.iter_127.code_ptr + 2)
    : [null])

  input_128 = (local.code_128[0] == ","
    ? substr(local.input_127, local.code_128[1], -1)
    : local.input_127)

  iter_128 = try(local.iter_127.code_ptr >= length(var.code), true) ? local.iter_127 : {
    output = (local.code_128[0] == "."
      ? "${local.iter_127.output}${join("", [for _ in range(local.code_128[1]) : jsondecode(format("\"\\u%04x\"", local.iter_127.tape[local.iter_127.tape_ptr]))])}"
      : local.iter_127.output)
    
    tape = (
      local.code_128[0] == "+"
        ? [for i, b in local.iter_127.tape : (i == local.iter_127.tape_ptr ? (b + local.code_128[1]) % 256 : b)] :
      local.code_128[0] == "-"
        ? [for i, b in local.iter_127.tape : (i == local.iter_127.tape_ptr ? (b - local.code_128[1] + 256) % 256 : b)] :
      local.code_128[0] == ","
        ? [for i, b in local.iter_127.tape : (i == local.iter_127.tape_ptr ? local.ascii_lookup[substr(local.input_128, 0, 1)] : b)]
        : local.iter_127.tape)

    tape_ptr = (
      local.code_128[0] == "<"
        ? local.iter_127.tape_ptr - local.code_128[1] :
      local.code_128[0] == ">"
        ? local.iter_127.tape_ptr + local.code_128[1]
        : local.iter_127.tape_ptr)

    code_ptr = 2 + (
      local.code_128[0] == "["
        ? local.iter_127.tape[local.iter_127.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_127.code_ptr)] : local.iter_127.code_ptr :
      local.code_128[0] == "]"
        ? local.iter_127.tape[local.iter_127.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_127.code_ptr)] : local.iter_127.code_ptr
        : local.iter_127.code_ptr)

    steps_taken = 1 + local.iter_127.steps_taken
  }
}

locals {
  code_129 = (try(local.iter_128.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_128.code_ptr, local.iter_128.code_ptr + 2)
    : [null])

  input_129 = (local.code_129[0] == ","
    ? substr(local.input_128, local.code_129[1], -1)
    : local.input_128)

  iter_129 = try(local.iter_128.code_ptr >= length(var.code), true) ? local.iter_128 : {
    output = (local.code_129[0] == "."
      ? "${local.iter_128.output}${join("", [for _ in range(local.code_129[1]) : jsondecode(format("\"\\u%04x\"", local.iter_128.tape[local.iter_128.tape_ptr]))])}"
      : local.iter_128.output)
    
    tape = (
      local.code_129[0] == "+"
        ? [for i, b in local.iter_128.tape : (i == local.iter_128.tape_ptr ? (b + local.code_129[1]) % 256 : b)] :
      local.code_129[0] == "-"
        ? [for i, b in local.iter_128.tape : (i == local.iter_128.tape_ptr ? (b - local.code_129[1] + 256) % 256 : b)] :
      local.code_129[0] == ","
        ? [for i, b in local.iter_128.tape : (i == local.iter_128.tape_ptr ? local.ascii_lookup[substr(local.input_129, 0, 1)] : b)]
        : local.iter_128.tape)

    tape_ptr = (
      local.code_129[0] == "<"
        ? local.iter_128.tape_ptr - local.code_129[1] :
      local.code_129[0] == ">"
        ? local.iter_128.tape_ptr + local.code_129[1]
        : local.iter_128.tape_ptr)

    code_ptr = 2 + (
      local.code_129[0] == "["
        ? local.iter_128.tape[local.iter_128.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_128.code_ptr)] : local.iter_128.code_ptr :
      local.code_129[0] == "]"
        ? local.iter_128.tape[local.iter_128.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_128.code_ptr)] : local.iter_128.code_ptr
        : local.iter_128.code_ptr)

    steps_taken = 1 + local.iter_128.steps_taken
  }
}

locals {
  code_130 = (try(local.iter_129.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_129.code_ptr, local.iter_129.code_ptr + 2)
    : [null])

  input_130 = (local.code_130[0] == ","
    ? substr(local.input_129, local.code_130[1], -1)
    : local.input_129)

  iter_130 = try(local.iter_129.code_ptr >= length(var.code), true) ? local.iter_129 : {
    output = (local.code_130[0] == "."
      ? "${local.iter_129.output}${join("", [for _ in range(local.code_130[1]) : jsondecode(format("\"\\u%04x\"", local.iter_129.tape[local.iter_129.tape_ptr]))])}"
      : local.iter_129.output)
    
    tape = (
      local.code_130[0] == "+"
        ? [for i, b in local.iter_129.tape : (i == local.iter_129.tape_ptr ? (b + local.code_130[1]) % 256 : b)] :
      local.code_130[0] == "-"
        ? [for i, b in local.iter_129.tape : (i == local.iter_129.tape_ptr ? (b - local.code_130[1] + 256) % 256 : b)] :
      local.code_130[0] == ","
        ? [for i, b in local.iter_129.tape : (i == local.iter_129.tape_ptr ? local.ascii_lookup[substr(local.input_130, 0, 1)] : b)]
        : local.iter_129.tape)

    tape_ptr = (
      local.code_130[0] == "<"
        ? local.iter_129.tape_ptr - local.code_130[1] :
      local.code_130[0] == ">"
        ? local.iter_129.tape_ptr + local.code_130[1]
        : local.iter_129.tape_ptr)

    code_ptr = 2 + (
      local.code_130[0] == "["
        ? local.iter_129.tape[local.iter_129.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_129.code_ptr)] : local.iter_129.code_ptr :
      local.code_130[0] == "]"
        ? local.iter_129.tape[local.iter_129.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_129.code_ptr)] : local.iter_129.code_ptr
        : local.iter_129.code_ptr)

    steps_taken = 1 + local.iter_129.steps_taken
  }
}

locals {
  code_131 = (try(local.iter_130.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_130.code_ptr, local.iter_130.code_ptr + 2)
    : [null])

  input_131 = (local.code_131[0] == ","
    ? substr(local.input_130, local.code_131[1], -1)
    : local.input_130)

  iter_131 = try(local.iter_130.code_ptr >= length(var.code), true) ? local.iter_130 : {
    output = (local.code_131[0] == "."
      ? "${local.iter_130.output}${join("", [for _ in range(local.code_131[1]) : jsondecode(format("\"\\u%04x\"", local.iter_130.tape[local.iter_130.tape_ptr]))])}"
      : local.iter_130.output)
    
    tape = (
      local.code_131[0] == "+"
        ? [for i, b in local.iter_130.tape : (i == local.iter_130.tape_ptr ? (b + local.code_131[1]) % 256 : b)] :
      local.code_131[0] == "-"
        ? [for i, b in local.iter_130.tape : (i == local.iter_130.tape_ptr ? (b - local.code_131[1] + 256) % 256 : b)] :
      local.code_131[0] == ","
        ? [for i, b in local.iter_130.tape : (i == local.iter_130.tape_ptr ? local.ascii_lookup[substr(local.input_131, 0, 1)] : b)]
        : local.iter_130.tape)

    tape_ptr = (
      local.code_131[0] == "<"
        ? local.iter_130.tape_ptr - local.code_131[1] :
      local.code_131[0] == ">"
        ? local.iter_130.tape_ptr + local.code_131[1]
        : local.iter_130.tape_ptr)

    code_ptr = 2 + (
      local.code_131[0] == "["
        ? local.iter_130.tape[local.iter_130.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_130.code_ptr)] : local.iter_130.code_ptr :
      local.code_131[0] == "]"
        ? local.iter_130.tape[local.iter_130.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_130.code_ptr)] : local.iter_130.code_ptr
        : local.iter_130.code_ptr)

    steps_taken = 1 + local.iter_130.steps_taken
  }
}

locals {
  code_132 = (try(local.iter_131.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_131.code_ptr, local.iter_131.code_ptr + 2)
    : [null])

  input_132 = (local.code_132[0] == ","
    ? substr(local.input_131, local.code_132[1], -1)
    : local.input_131)

  iter_132 = try(local.iter_131.code_ptr >= length(var.code), true) ? local.iter_131 : {
    output = (local.code_132[0] == "."
      ? "${local.iter_131.output}${join("", [for _ in range(local.code_132[1]) : jsondecode(format("\"\\u%04x\"", local.iter_131.tape[local.iter_131.tape_ptr]))])}"
      : local.iter_131.output)
    
    tape = (
      local.code_132[0] == "+"
        ? [for i, b in local.iter_131.tape : (i == local.iter_131.tape_ptr ? (b + local.code_132[1]) % 256 : b)] :
      local.code_132[0] == "-"
        ? [for i, b in local.iter_131.tape : (i == local.iter_131.tape_ptr ? (b - local.code_132[1] + 256) % 256 : b)] :
      local.code_132[0] == ","
        ? [for i, b in local.iter_131.tape : (i == local.iter_131.tape_ptr ? local.ascii_lookup[substr(local.input_132, 0, 1)] : b)]
        : local.iter_131.tape)

    tape_ptr = (
      local.code_132[0] == "<"
        ? local.iter_131.tape_ptr - local.code_132[1] :
      local.code_132[0] == ">"
        ? local.iter_131.tape_ptr + local.code_132[1]
        : local.iter_131.tape_ptr)

    code_ptr = 2 + (
      local.code_132[0] == "["
        ? local.iter_131.tape[local.iter_131.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_131.code_ptr)] : local.iter_131.code_ptr :
      local.code_132[0] == "]"
        ? local.iter_131.tape[local.iter_131.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_131.code_ptr)] : local.iter_131.code_ptr
        : local.iter_131.code_ptr)

    steps_taken = 1 + local.iter_131.steps_taken
  }
}

locals {
  code_133 = (try(local.iter_132.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_132.code_ptr, local.iter_132.code_ptr + 2)
    : [null])

  input_133 = (local.code_133[0] == ","
    ? substr(local.input_132, local.code_133[1], -1)
    : local.input_132)

  iter_133 = try(local.iter_132.code_ptr >= length(var.code), true) ? local.iter_132 : {
    output = (local.code_133[0] == "."
      ? "${local.iter_132.output}${join("", [for _ in range(local.code_133[1]) : jsondecode(format("\"\\u%04x\"", local.iter_132.tape[local.iter_132.tape_ptr]))])}"
      : local.iter_132.output)
    
    tape = (
      local.code_133[0] == "+"
        ? [for i, b in local.iter_132.tape : (i == local.iter_132.tape_ptr ? (b + local.code_133[1]) % 256 : b)] :
      local.code_133[0] == "-"
        ? [for i, b in local.iter_132.tape : (i == local.iter_132.tape_ptr ? (b - local.code_133[1] + 256) % 256 : b)] :
      local.code_133[0] == ","
        ? [for i, b in local.iter_132.tape : (i == local.iter_132.tape_ptr ? local.ascii_lookup[substr(local.input_133, 0, 1)] : b)]
        : local.iter_132.tape)

    tape_ptr = (
      local.code_133[0] == "<"
        ? local.iter_132.tape_ptr - local.code_133[1] :
      local.code_133[0] == ">"
        ? local.iter_132.tape_ptr + local.code_133[1]
        : local.iter_132.tape_ptr)

    code_ptr = 2 + (
      local.code_133[0] == "["
        ? local.iter_132.tape[local.iter_132.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_132.code_ptr)] : local.iter_132.code_ptr :
      local.code_133[0] == "]"
        ? local.iter_132.tape[local.iter_132.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_132.code_ptr)] : local.iter_132.code_ptr
        : local.iter_132.code_ptr)

    steps_taken = 1 + local.iter_132.steps_taken
  }
}

locals {
  code_134 = (try(local.iter_133.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_133.code_ptr, local.iter_133.code_ptr + 2)
    : [null])

  input_134 = (local.code_134[0] == ","
    ? substr(local.input_133, local.code_134[1], -1)
    : local.input_133)

  iter_134 = try(local.iter_133.code_ptr >= length(var.code), true) ? local.iter_133 : {
    output = (local.code_134[0] == "."
      ? "${local.iter_133.output}${join("", [for _ in range(local.code_134[1]) : jsondecode(format("\"\\u%04x\"", local.iter_133.tape[local.iter_133.tape_ptr]))])}"
      : local.iter_133.output)
    
    tape = (
      local.code_134[0] == "+"
        ? [for i, b in local.iter_133.tape : (i == local.iter_133.tape_ptr ? (b + local.code_134[1]) % 256 : b)] :
      local.code_134[0] == "-"
        ? [for i, b in local.iter_133.tape : (i == local.iter_133.tape_ptr ? (b - local.code_134[1] + 256) % 256 : b)] :
      local.code_134[0] == ","
        ? [for i, b in local.iter_133.tape : (i == local.iter_133.tape_ptr ? local.ascii_lookup[substr(local.input_134, 0, 1)] : b)]
        : local.iter_133.tape)

    tape_ptr = (
      local.code_134[0] == "<"
        ? local.iter_133.tape_ptr - local.code_134[1] :
      local.code_134[0] == ">"
        ? local.iter_133.tape_ptr + local.code_134[1]
        : local.iter_133.tape_ptr)

    code_ptr = 2 + (
      local.code_134[0] == "["
        ? local.iter_133.tape[local.iter_133.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_133.code_ptr)] : local.iter_133.code_ptr :
      local.code_134[0] == "]"
        ? local.iter_133.tape[local.iter_133.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_133.code_ptr)] : local.iter_133.code_ptr
        : local.iter_133.code_ptr)

    steps_taken = 1 + local.iter_133.steps_taken
  }
}

locals {
  code_135 = (try(local.iter_134.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_134.code_ptr, local.iter_134.code_ptr + 2)
    : [null])

  input_135 = (local.code_135[0] == ","
    ? substr(local.input_134, local.code_135[1], -1)
    : local.input_134)

  iter_135 = try(local.iter_134.code_ptr >= length(var.code), true) ? local.iter_134 : {
    output = (local.code_135[0] == "."
      ? "${local.iter_134.output}${join("", [for _ in range(local.code_135[1]) : jsondecode(format("\"\\u%04x\"", local.iter_134.tape[local.iter_134.tape_ptr]))])}"
      : local.iter_134.output)
    
    tape = (
      local.code_135[0] == "+"
        ? [for i, b in local.iter_134.tape : (i == local.iter_134.tape_ptr ? (b + local.code_135[1]) % 256 : b)] :
      local.code_135[0] == "-"
        ? [for i, b in local.iter_134.tape : (i == local.iter_134.tape_ptr ? (b - local.code_135[1] + 256) % 256 : b)] :
      local.code_135[0] == ","
        ? [for i, b in local.iter_134.tape : (i == local.iter_134.tape_ptr ? local.ascii_lookup[substr(local.input_135, 0, 1)] : b)]
        : local.iter_134.tape)

    tape_ptr = (
      local.code_135[0] == "<"
        ? local.iter_134.tape_ptr - local.code_135[1] :
      local.code_135[0] == ">"
        ? local.iter_134.tape_ptr + local.code_135[1]
        : local.iter_134.tape_ptr)

    code_ptr = 2 + (
      local.code_135[0] == "["
        ? local.iter_134.tape[local.iter_134.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_134.code_ptr)] : local.iter_134.code_ptr :
      local.code_135[0] == "]"
        ? local.iter_134.tape[local.iter_134.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_134.code_ptr)] : local.iter_134.code_ptr
        : local.iter_134.code_ptr)

    steps_taken = 1 + local.iter_134.steps_taken
  }
}

locals {
  code_136 = (try(local.iter_135.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_135.code_ptr, local.iter_135.code_ptr + 2)
    : [null])

  input_136 = (local.code_136[0] == ","
    ? substr(local.input_135, local.code_136[1], -1)
    : local.input_135)

  iter_136 = try(local.iter_135.code_ptr >= length(var.code), true) ? local.iter_135 : {
    output = (local.code_136[0] == "."
      ? "${local.iter_135.output}${join("", [for _ in range(local.code_136[1]) : jsondecode(format("\"\\u%04x\"", local.iter_135.tape[local.iter_135.tape_ptr]))])}"
      : local.iter_135.output)
    
    tape = (
      local.code_136[0] == "+"
        ? [for i, b in local.iter_135.tape : (i == local.iter_135.tape_ptr ? (b + local.code_136[1]) % 256 : b)] :
      local.code_136[0] == "-"
        ? [for i, b in local.iter_135.tape : (i == local.iter_135.tape_ptr ? (b - local.code_136[1] + 256) % 256 : b)] :
      local.code_136[0] == ","
        ? [for i, b in local.iter_135.tape : (i == local.iter_135.tape_ptr ? local.ascii_lookup[substr(local.input_136, 0, 1)] : b)]
        : local.iter_135.tape)

    tape_ptr = (
      local.code_136[0] == "<"
        ? local.iter_135.tape_ptr - local.code_136[1] :
      local.code_136[0] == ">"
        ? local.iter_135.tape_ptr + local.code_136[1]
        : local.iter_135.tape_ptr)

    code_ptr = 2 + (
      local.code_136[0] == "["
        ? local.iter_135.tape[local.iter_135.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_135.code_ptr)] : local.iter_135.code_ptr :
      local.code_136[0] == "]"
        ? local.iter_135.tape[local.iter_135.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_135.code_ptr)] : local.iter_135.code_ptr
        : local.iter_135.code_ptr)

    steps_taken = 1 + local.iter_135.steps_taken
  }
}

locals {
  code_137 = (try(local.iter_136.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_136.code_ptr, local.iter_136.code_ptr + 2)
    : [null])

  input_137 = (local.code_137[0] == ","
    ? substr(local.input_136, local.code_137[1], -1)
    : local.input_136)

  iter_137 = try(local.iter_136.code_ptr >= length(var.code), true) ? local.iter_136 : {
    output = (local.code_137[0] == "."
      ? "${local.iter_136.output}${join("", [for _ in range(local.code_137[1]) : jsondecode(format("\"\\u%04x\"", local.iter_136.tape[local.iter_136.tape_ptr]))])}"
      : local.iter_136.output)
    
    tape = (
      local.code_137[0] == "+"
        ? [for i, b in local.iter_136.tape : (i == local.iter_136.tape_ptr ? (b + local.code_137[1]) % 256 : b)] :
      local.code_137[0] == "-"
        ? [for i, b in local.iter_136.tape : (i == local.iter_136.tape_ptr ? (b - local.code_137[1] + 256) % 256 : b)] :
      local.code_137[0] == ","
        ? [for i, b in local.iter_136.tape : (i == local.iter_136.tape_ptr ? local.ascii_lookup[substr(local.input_137, 0, 1)] : b)]
        : local.iter_136.tape)

    tape_ptr = (
      local.code_137[0] == "<"
        ? local.iter_136.tape_ptr - local.code_137[1] :
      local.code_137[0] == ">"
        ? local.iter_136.tape_ptr + local.code_137[1]
        : local.iter_136.tape_ptr)

    code_ptr = 2 + (
      local.code_137[0] == "["
        ? local.iter_136.tape[local.iter_136.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_136.code_ptr)] : local.iter_136.code_ptr :
      local.code_137[0] == "]"
        ? local.iter_136.tape[local.iter_136.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_136.code_ptr)] : local.iter_136.code_ptr
        : local.iter_136.code_ptr)

    steps_taken = 1 + local.iter_136.steps_taken
  }
}

locals {
  code_138 = (try(local.iter_137.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_137.code_ptr, local.iter_137.code_ptr + 2)
    : [null])

  input_138 = (local.code_138[0] == ","
    ? substr(local.input_137, local.code_138[1], -1)
    : local.input_137)

  iter_138 = try(local.iter_137.code_ptr >= length(var.code), true) ? local.iter_137 : {
    output = (local.code_138[0] == "."
      ? "${local.iter_137.output}${join("", [for _ in range(local.code_138[1]) : jsondecode(format("\"\\u%04x\"", local.iter_137.tape[local.iter_137.tape_ptr]))])}"
      : local.iter_137.output)
    
    tape = (
      local.code_138[0] == "+"
        ? [for i, b in local.iter_137.tape : (i == local.iter_137.tape_ptr ? (b + local.code_138[1]) % 256 : b)] :
      local.code_138[0] == "-"
        ? [for i, b in local.iter_137.tape : (i == local.iter_137.tape_ptr ? (b - local.code_138[1] + 256) % 256 : b)] :
      local.code_138[0] == ","
        ? [for i, b in local.iter_137.tape : (i == local.iter_137.tape_ptr ? local.ascii_lookup[substr(local.input_138, 0, 1)] : b)]
        : local.iter_137.tape)

    tape_ptr = (
      local.code_138[0] == "<"
        ? local.iter_137.tape_ptr - local.code_138[1] :
      local.code_138[0] == ">"
        ? local.iter_137.tape_ptr + local.code_138[1]
        : local.iter_137.tape_ptr)

    code_ptr = 2 + (
      local.code_138[0] == "["
        ? local.iter_137.tape[local.iter_137.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_137.code_ptr)] : local.iter_137.code_ptr :
      local.code_138[0] == "]"
        ? local.iter_137.tape[local.iter_137.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_137.code_ptr)] : local.iter_137.code_ptr
        : local.iter_137.code_ptr)

    steps_taken = 1 + local.iter_137.steps_taken
  }
}

locals {
  code_139 = (try(local.iter_138.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_138.code_ptr, local.iter_138.code_ptr + 2)
    : [null])

  input_139 = (local.code_139[0] == ","
    ? substr(local.input_138, local.code_139[1], -1)
    : local.input_138)

  iter_139 = try(local.iter_138.code_ptr >= length(var.code), true) ? local.iter_138 : {
    output = (local.code_139[0] == "."
      ? "${local.iter_138.output}${join("", [for _ in range(local.code_139[1]) : jsondecode(format("\"\\u%04x\"", local.iter_138.tape[local.iter_138.tape_ptr]))])}"
      : local.iter_138.output)
    
    tape = (
      local.code_139[0] == "+"
        ? [for i, b in local.iter_138.tape : (i == local.iter_138.tape_ptr ? (b + local.code_139[1]) % 256 : b)] :
      local.code_139[0] == "-"
        ? [for i, b in local.iter_138.tape : (i == local.iter_138.tape_ptr ? (b - local.code_139[1] + 256) % 256 : b)] :
      local.code_139[0] == ","
        ? [for i, b in local.iter_138.tape : (i == local.iter_138.tape_ptr ? local.ascii_lookup[substr(local.input_139, 0, 1)] : b)]
        : local.iter_138.tape)

    tape_ptr = (
      local.code_139[0] == "<"
        ? local.iter_138.tape_ptr - local.code_139[1] :
      local.code_139[0] == ">"
        ? local.iter_138.tape_ptr + local.code_139[1]
        : local.iter_138.tape_ptr)

    code_ptr = 2 + (
      local.code_139[0] == "["
        ? local.iter_138.tape[local.iter_138.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_138.code_ptr)] : local.iter_138.code_ptr :
      local.code_139[0] == "]"
        ? local.iter_138.tape[local.iter_138.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_138.code_ptr)] : local.iter_138.code_ptr
        : local.iter_138.code_ptr)

    steps_taken = 1 + local.iter_138.steps_taken
  }
}

locals {
  code_140 = (try(local.iter_139.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_139.code_ptr, local.iter_139.code_ptr + 2)
    : [null])

  input_140 = (local.code_140[0] == ","
    ? substr(local.input_139, local.code_140[1], -1)
    : local.input_139)

  iter_140 = try(local.iter_139.code_ptr >= length(var.code), true) ? local.iter_139 : {
    output = (local.code_140[0] == "."
      ? "${local.iter_139.output}${join("", [for _ in range(local.code_140[1]) : jsondecode(format("\"\\u%04x\"", local.iter_139.tape[local.iter_139.tape_ptr]))])}"
      : local.iter_139.output)
    
    tape = (
      local.code_140[0] == "+"
        ? [for i, b in local.iter_139.tape : (i == local.iter_139.tape_ptr ? (b + local.code_140[1]) % 256 : b)] :
      local.code_140[0] == "-"
        ? [for i, b in local.iter_139.tape : (i == local.iter_139.tape_ptr ? (b - local.code_140[1] + 256) % 256 : b)] :
      local.code_140[0] == ","
        ? [for i, b in local.iter_139.tape : (i == local.iter_139.tape_ptr ? local.ascii_lookup[substr(local.input_140, 0, 1)] : b)]
        : local.iter_139.tape)

    tape_ptr = (
      local.code_140[0] == "<"
        ? local.iter_139.tape_ptr - local.code_140[1] :
      local.code_140[0] == ">"
        ? local.iter_139.tape_ptr + local.code_140[1]
        : local.iter_139.tape_ptr)

    code_ptr = 2 + (
      local.code_140[0] == "["
        ? local.iter_139.tape[local.iter_139.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_139.code_ptr)] : local.iter_139.code_ptr :
      local.code_140[0] == "]"
        ? local.iter_139.tape[local.iter_139.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_139.code_ptr)] : local.iter_139.code_ptr
        : local.iter_139.code_ptr)

    steps_taken = 1 + local.iter_139.steps_taken
  }
}

locals {
  code_141 = (try(local.iter_140.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_140.code_ptr, local.iter_140.code_ptr + 2)
    : [null])

  input_141 = (local.code_141[0] == ","
    ? substr(local.input_140, local.code_141[1], -1)
    : local.input_140)

  iter_141 = try(local.iter_140.code_ptr >= length(var.code), true) ? local.iter_140 : {
    output = (local.code_141[0] == "."
      ? "${local.iter_140.output}${join("", [for _ in range(local.code_141[1]) : jsondecode(format("\"\\u%04x\"", local.iter_140.tape[local.iter_140.tape_ptr]))])}"
      : local.iter_140.output)
    
    tape = (
      local.code_141[0] == "+"
        ? [for i, b in local.iter_140.tape : (i == local.iter_140.tape_ptr ? (b + local.code_141[1]) % 256 : b)] :
      local.code_141[0] == "-"
        ? [for i, b in local.iter_140.tape : (i == local.iter_140.tape_ptr ? (b - local.code_141[1] + 256) % 256 : b)] :
      local.code_141[0] == ","
        ? [for i, b in local.iter_140.tape : (i == local.iter_140.tape_ptr ? local.ascii_lookup[substr(local.input_141, 0, 1)] : b)]
        : local.iter_140.tape)

    tape_ptr = (
      local.code_141[0] == "<"
        ? local.iter_140.tape_ptr - local.code_141[1] :
      local.code_141[0] == ">"
        ? local.iter_140.tape_ptr + local.code_141[1]
        : local.iter_140.tape_ptr)

    code_ptr = 2 + (
      local.code_141[0] == "["
        ? local.iter_140.tape[local.iter_140.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_140.code_ptr)] : local.iter_140.code_ptr :
      local.code_141[0] == "]"
        ? local.iter_140.tape[local.iter_140.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_140.code_ptr)] : local.iter_140.code_ptr
        : local.iter_140.code_ptr)

    steps_taken = 1 + local.iter_140.steps_taken
  }
}

locals {
  code_142 = (try(local.iter_141.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_141.code_ptr, local.iter_141.code_ptr + 2)
    : [null])

  input_142 = (local.code_142[0] == ","
    ? substr(local.input_141, local.code_142[1], -1)
    : local.input_141)

  iter_142 = try(local.iter_141.code_ptr >= length(var.code), true) ? local.iter_141 : {
    output = (local.code_142[0] == "."
      ? "${local.iter_141.output}${join("", [for _ in range(local.code_142[1]) : jsondecode(format("\"\\u%04x\"", local.iter_141.tape[local.iter_141.tape_ptr]))])}"
      : local.iter_141.output)
    
    tape = (
      local.code_142[0] == "+"
        ? [for i, b in local.iter_141.tape : (i == local.iter_141.tape_ptr ? (b + local.code_142[1]) % 256 : b)] :
      local.code_142[0] == "-"
        ? [for i, b in local.iter_141.tape : (i == local.iter_141.tape_ptr ? (b - local.code_142[1] + 256) % 256 : b)] :
      local.code_142[0] == ","
        ? [for i, b in local.iter_141.tape : (i == local.iter_141.tape_ptr ? local.ascii_lookup[substr(local.input_142, 0, 1)] : b)]
        : local.iter_141.tape)

    tape_ptr = (
      local.code_142[0] == "<"
        ? local.iter_141.tape_ptr - local.code_142[1] :
      local.code_142[0] == ">"
        ? local.iter_141.tape_ptr + local.code_142[1]
        : local.iter_141.tape_ptr)

    code_ptr = 2 + (
      local.code_142[0] == "["
        ? local.iter_141.tape[local.iter_141.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_141.code_ptr)] : local.iter_141.code_ptr :
      local.code_142[0] == "]"
        ? local.iter_141.tape[local.iter_141.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_141.code_ptr)] : local.iter_141.code_ptr
        : local.iter_141.code_ptr)

    steps_taken = 1 + local.iter_141.steps_taken
  }
}

locals {
  code_143 = (try(local.iter_142.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_142.code_ptr, local.iter_142.code_ptr + 2)
    : [null])

  input_143 = (local.code_143[0] == ","
    ? substr(local.input_142, local.code_143[1], -1)
    : local.input_142)

  iter_143 = try(local.iter_142.code_ptr >= length(var.code), true) ? local.iter_142 : {
    output = (local.code_143[0] == "."
      ? "${local.iter_142.output}${join("", [for _ in range(local.code_143[1]) : jsondecode(format("\"\\u%04x\"", local.iter_142.tape[local.iter_142.tape_ptr]))])}"
      : local.iter_142.output)
    
    tape = (
      local.code_143[0] == "+"
        ? [for i, b in local.iter_142.tape : (i == local.iter_142.tape_ptr ? (b + local.code_143[1]) % 256 : b)] :
      local.code_143[0] == "-"
        ? [for i, b in local.iter_142.tape : (i == local.iter_142.tape_ptr ? (b - local.code_143[1] + 256) % 256 : b)] :
      local.code_143[0] == ","
        ? [for i, b in local.iter_142.tape : (i == local.iter_142.tape_ptr ? local.ascii_lookup[substr(local.input_143, 0, 1)] : b)]
        : local.iter_142.tape)

    tape_ptr = (
      local.code_143[0] == "<"
        ? local.iter_142.tape_ptr - local.code_143[1] :
      local.code_143[0] == ">"
        ? local.iter_142.tape_ptr + local.code_143[1]
        : local.iter_142.tape_ptr)

    code_ptr = 2 + (
      local.code_143[0] == "["
        ? local.iter_142.tape[local.iter_142.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_142.code_ptr)] : local.iter_142.code_ptr :
      local.code_143[0] == "]"
        ? local.iter_142.tape[local.iter_142.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_142.code_ptr)] : local.iter_142.code_ptr
        : local.iter_142.code_ptr)

    steps_taken = 1 + local.iter_142.steps_taken
  }
}

locals {
  code_144 = (try(local.iter_143.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_143.code_ptr, local.iter_143.code_ptr + 2)
    : [null])

  input_144 = (local.code_144[0] == ","
    ? substr(local.input_143, local.code_144[1], -1)
    : local.input_143)

  iter_144 = try(local.iter_143.code_ptr >= length(var.code), true) ? local.iter_143 : {
    output = (local.code_144[0] == "."
      ? "${local.iter_143.output}${join("", [for _ in range(local.code_144[1]) : jsondecode(format("\"\\u%04x\"", local.iter_143.tape[local.iter_143.tape_ptr]))])}"
      : local.iter_143.output)
    
    tape = (
      local.code_144[0] == "+"
        ? [for i, b in local.iter_143.tape : (i == local.iter_143.tape_ptr ? (b + local.code_144[1]) % 256 : b)] :
      local.code_144[0] == "-"
        ? [for i, b in local.iter_143.tape : (i == local.iter_143.tape_ptr ? (b - local.code_144[1] + 256) % 256 : b)] :
      local.code_144[0] == ","
        ? [for i, b in local.iter_143.tape : (i == local.iter_143.tape_ptr ? local.ascii_lookup[substr(local.input_144, 0, 1)] : b)]
        : local.iter_143.tape)

    tape_ptr = (
      local.code_144[0] == "<"
        ? local.iter_143.tape_ptr - local.code_144[1] :
      local.code_144[0] == ">"
        ? local.iter_143.tape_ptr + local.code_144[1]
        : local.iter_143.tape_ptr)

    code_ptr = 2 + (
      local.code_144[0] == "["
        ? local.iter_143.tape[local.iter_143.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_143.code_ptr)] : local.iter_143.code_ptr :
      local.code_144[0] == "]"
        ? local.iter_143.tape[local.iter_143.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_143.code_ptr)] : local.iter_143.code_ptr
        : local.iter_143.code_ptr)

    steps_taken = 1 + local.iter_143.steps_taken
  }
}

locals {
  code_145 = (try(local.iter_144.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_144.code_ptr, local.iter_144.code_ptr + 2)
    : [null])

  input_145 = (local.code_145[0] == ","
    ? substr(local.input_144, local.code_145[1], -1)
    : local.input_144)

  iter_145 = try(local.iter_144.code_ptr >= length(var.code), true) ? local.iter_144 : {
    output = (local.code_145[0] == "."
      ? "${local.iter_144.output}${join("", [for _ in range(local.code_145[1]) : jsondecode(format("\"\\u%04x\"", local.iter_144.tape[local.iter_144.tape_ptr]))])}"
      : local.iter_144.output)
    
    tape = (
      local.code_145[0] == "+"
        ? [for i, b in local.iter_144.tape : (i == local.iter_144.tape_ptr ? (b + local.code_145[1]) % 256 : b)] :
      local.code_145[0] == "-"
        ? [for i, b in local.iter_144.tape : (i == local.iter_144.tape_ptr ? (b - local.code_145[1] + 256) % 256 : b)] :
      local.code_145[0] == ","
        ? [for i, b in local.iter_144.tape : (i == local.iter_144.tape_ptr ? local.ascii_lookup[substr(local.input_145, 0, 1)] : b)]
        : local.iter_144.tape)

    tape_ptr = (
      local.code_145[0] == "<"
        ? local.iter_144.tape_ptr - local.code_145[1] :
      local.code_145[0] == ">"
        ? local.iter_144.tape_ptr + local.code_145[1]
        : local.iter_144.tape_ptr)

    code_ptr = 2 + (
      local.code_145[0] == "["
        ? local.iter_144.tape[local.iter_144.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_144.code_ptr)] : local.iter_144.code_ptr :
      local.code_145[0] == "]"
        ? local.iter_144.tape[local.iter_144.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_144.code_ptr)] : local.iter_144.code_ptr
        : local.iter_144.code_ptr)

    steps_taken = 1 + local.iter_144.steps_taken
  }
}

locals {
  code_146 = (try(local.iter_145.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_145.code_ptr, local.iter_145.code_ptr + 2)
    : [null])

  input_146 = (local.code_146[0] == ","
    ? substr(local.input_145, local.code_146[1], -1)
    : local.input_145)

  iter_146 = try(local.iter_145.code_ptr >= length(var.code), true) ? local.iter_145 : {
    output = (local.code_146[0] == "."
      ? "${local.iter_145.output}${join("", [for _ in range(local.code_146[1]) : jsondecode(format("\"\\u%04x\"", local.iter_145.tape[local.iter_145.tape_ptr]))])}"
      : local.iter_145.output)
    
    tape = (
      local.code_146[0] == "+"
        ? [for i, b in local.iter_145.tape : (i == local.iter_145.tape_ptr ? (b + local.code_146[1]) % 256 : b)] :
      local.code_146[0] == "-"
        ? [for i, b in local.iter_145.tape : (i == local.iter_145.tape_ptr ? (b - local.code_146[1] + 256) % 256 : b)] :
      local.code_146[0] == ","
        ? [for i, b in local.iter_145.tape : (i == local.iter_145.tape_ptr ? local.ascii_lookup[substr(local.input_146, 0, 1)] : b)]
        : local.iter_145.tape)

    tape_ptr = (
      local.code_146[0] == "<"
        ? local.iter_145.tape_ptr - local.code_146[1] :
      local.code_146[0] == ">"
        ? local.iter_145.tape_ptr + local.code_146[1]
        : local.iter_145.tape_ptr)

    code_ptr = 2 + (
      local.code_146[0] == "["
        ? local.iter_145.tape[local.iter_145.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_145.code_ptr)] : local.iter_145.code_ptr :
      local.code_146[0] == "]"
        ? local.iter_145.tape[local.iter_145.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_145.code_ptr)] : local.iter_145.code_ptr
        : local.iter_145.code_ptr)

    steps_taken = 1 + local.iter_145.steps_taken
  }
}

locals {
  code_147 = (try(local.iter_146.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_146.code_ptr, local.iter_146.code_ptr + 2)
    : [null])

  input_147 = (local.code_147[0] == ","
    ? substr(local.input_146, local.code_147[1], -1)
    : local.input_146)

  iter_147 = try(local.iter_146.code_ptr >= length(var.code), true) ? local.iter_146 : {
    output = (local.code_147[0] == "."
      ? "${local.iter_146.output}${join("", [for _ in range(local.code_147[1]) : jsondecode(format("\"\\u%04x\"", local.iter_146.tape[local.iter_146.tape_ptr]))])}"
      : local.iter_146.output)
    
    tape = (
      local.code_147[0] == "+"
        ? [for i, b in local.iter_146.tape : (i == local.iter_146.tape_ptr ? (b + local.code_147[1]) % 256 : b)] :
      local.code_147[0] == "-"
        ? [for i, b in local.iter_146.tape : (i == local.iter_146.tape_ptr ? (b - local.code_147[1] + 256) % 256 : b)] :
      local.code_147[0] == ","
        ? [for i, b in local.iter_146.tape : (i == local.iter_146.tape_ptr ? local.ascii_lookup[substr(local.input_147, 0, 1)] : b)]
        : local.iter_146.tape)

    tape_ptr = (
      local.code_147[0] == "<"
        ? local.iter_146.tape_ptr - local.code_147[1] :
      local.code_147[0] == ">"
        ? local.iter_146.tape_ptr + local.code_147[1]
        : local.iter_146.tape_ptr)

    code_ptr = 2 + (
      local.code_147[0] == "["
        ? local.iter_146.tape[local.iter_146.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_146.code_ptr)] : local.iter_146.code_ptr :
      local.code_147[0] == "]"
        ? local.iter_146.tape[local.iter_146.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_146.code_ptr)] : local.iter_146.code_ptr
        : local.iter_146.code_ptr)

    steps_taken = 1 + local.iter_146.steps_taken
  }
}

locals {
  code_148 = (try(local.iter_147.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_147.code_ptr, local.iter_147.code_ptr + 2)
    : [null])

  input_148 = (local.code_148[0] == ","
    ? substr(local.input_147, local.code_148[1], -1)
    : local.input_147)

  iter_148 = try(local.iter_147.code_ptr >= length(var.code), true) ? local.iter_147 : {
    output = (local.code_148[0] == "."
      ? "${local.iter_147.output}${join("", [for _ in range(local.code_148[1]) : jsondecode(format("\"\\u%04x\"", local.iter_147.tape[local.iter_147.tape_ptr]))])}"
      : local.iter_147.output)
    
    tape = (
      local.code_148[0] == "+"
        ? [for i, b in local.iter_147.tape : (i == local.iter_147.tape_ptr ? (b + local.code_148[1]) % 256 : b)] :
      local.code_148[0] == "-"
        ? [for i, b in local.iter_147.tape : (i == local.iter_147.tape_ptr ? (b - local.code_148[1] + 256) % 256 : b)] :
      local.code_148[0] == ","
        ? [for i, b in local.iter_147.tape : (i == local.iter_147.tape_ptr ? local.ascii_lookup[substr(local.input_148, 0, 1)] : b)]
        : local.iter_147.tape)

    tape_ptr = (
      local.code_148[0] == "<"
        ? local.iter_147.tape_ptr - local.code_148[1] :
      local.code_148[0] == ">"
        ? local.iter_147.tape_ptr + local.code_148[1]
        : local.iter_147.tape_ptr)

    code_ptr = 2 + (
      local.code_148[0] == "["
        ? local.iter_147.tape[local.iter_147.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_147.code_ptr)] : local.iter_147.code_ptr :
      local.code_148[0] == "]"
        ? local.iter_147.tape[local.iter_147.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_147.code_ptr)] : local.iter_147.code_ptr
        : local.iter_147.code_ptr)

    steps_taken = 1 + local.iter_147.steps_taken
  }
}

locals {
  code_149 = (try(local.iter_148.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_148.code_ptr, local.iter_148.code_ptr + 2)
    : [null])

  input_149 = (local.code_149[0] == ","
    ? substr(local.input_148, local.code_149[1], -1)
    : local.input_148)

  iter_149 = try(local.iter_148.code_ptr >= length(var.code), true) ? local.iter_148 : {
    output = (local.code_149[0] == "."
      ? "${local.iter_148.output}${join("", [for _ in range(local.code_149[1]) : jsondecode(format("\"\\u%04x\"", local.iter_148.tape[local.iter_148.tape_ptr]))])}"
      : local.iter_148.output)
    
    tape = (
      local.code_149[0] == "+"
        ? [for i, b in local.iter_148.tape : (i == local.iter_148.tape_ptr ? (b + local.code_149[1]) % 256 : b)] :
      local.code_149[0] == "-"
        ? [for i, b in local.iter_148.tape : (i == local.iter_148.tape_ptr ? (b - local.code_149[1] + 256) % 256 : b)] :
      local.code_149[0] == ","
        ? [for i, b in local.iter_148.tape : (i == local.iter_148.tape_ptr ? local.ascii_lookup[substr(local.input_149, 0, 1)] : b)]
        : local.iter_148.tape)

    tape_ptr = (
      local.code_149[0] == "<"
        ? local.iter_148.tape_ptr - local.code_149[1] :
      local.code_149[0] == ">"
        ? local.iter_148.tape_ptr + local.code_149[1]
        : local.iter_148.tape_ptr)

    code_ptr = 2 + (
      local.code_149[0] == "["
        ? local.iter_148.tape[local.iter_148.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_148.code_ptr)] : local.iter_148.code_ptr :
      local.code_149[0] == "]"
        ? local.iter_148.tape[local.iter_148.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_148.code_ptr)] : local.iter_148.code_ptr
        : local.iter_148.code_ptr)

    steps_taken = 1 + local.iter_148.steps_taken
  }
}

locals {
  code_150 = (try(local.iter_149.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_149.code_ptr, local.iter_149.code_ptr + 2)
    : [null])

  input_150 = (local.code_150[0] == ","
    ? substr(local.input_149, local.code_150[1], -1)
    : local.input_149)

  iter_150 = try(local.iter_149.code_ptr >= length(var.code), true) ? local.iter_149 : {
    output = (local.code_150[0] == "."
      ? "${local.iter_149.output}${join("", [for _ in range(local.code_150[1]) : jsondecode(format("\"\\u%04x\"", local.iter_149.tape[local.iter_149.tape_ptr]))])}"
      : local.iter_149.output)
    
    tape = (
      local.code_150[0] == "+"
        ? [for i, b in local.iter_149.tape : (i == local.iter_149.tape_ptr ? (b + local.code_150[1]) % 256 : b)] :
      local.code_150[0] == "-"
        ? [for i, b in local.iter_149.tape : (i == local.iter_149.tape_ptr ? (b - local.code_150[1] + 256) % 256 : b)] :
      local.code_150[0] == ","
        ? [for i, b in local.iter_149.tape : (i == local.iter_149.tape_ptr ? local.ascii_lookup[substr(local.input_150, 0, 1)] : b)]
        : local.iter_149.tape)

    tape_ptr = (
      local.code_150[0] == "<"
        ? local.iter_149.tape_ptr - local.code_150[1] :
      local.code_150[0] == ">"
        ? local.iter_149.tape_ptr + local.code_150[1]
        : local.iter_149.tape_ptr)

    code_ptr = 2 + (
      local.code_150[0] == "["
        ? local.iter_149.tape[local.iter_149.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_149.code_ptr)] : local.iter_149.code_ptr :
      local.code_150[0] == "]"
        ? local.iter_149.tape[local.iter_149.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_149.code_ptr)] : local.iter_149.code_ptr
        : local.iter_149.code_ptr)

    steps_taken = 1 + local.iter_149.steps_taken
  }
}

locals {
  code_151 = (try(local.iter_150.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_150.code_ptr, local.iter_150.code_ptr + 2)
    : [null])

  input_151 = (local.code_151[0] == ","
    ? substr(local.input_150, local.code_151[1], -1)
    : local.input_150)

  iter_151 = try(local.iter_150.code_ptr >= length(var.code), true) ? local.iter_150 : {
    output = (local.code_151[0] == "."
      ? "${local.iter_150.output}${join("", [for _ in range(local.code_151[1]) : jsondecode(format("\"\\u%04x\"", local.iter_150.tape[local.iter_150.tape_ptr]))])}"
      : local.iter_150.output)
    
    tape = (
      local.code_151[0] == "+"
        ? [for i, b in local.iter_150.tape : (i == local.iter_150.tape_ptr ? (b + local.code_151[1]) % 256 : b)] :
      local.code_151[0] == "-"
        ? [for i, b in local.iter_150.tape : (i == local.iter_150.tape_ptr ? (b - local.code_151[1] + 256) % 256 : b)] :
      local.code_151[0] == ","
        ? [for i, b in local.iter_150.tape : (i == local.iter_150.tape_ptr ? local.ascii_lookup[substr(local.input_151, 0, 1)] : b)]
        : local.iter_150.tape)

    tape_ptr = (
      local.code_151[0] == "<"
        ? local.iter_150.tape_ptr - local.code_151[1] :
      local.code_151[0] == ">"
        ? local.iter_150.tape_ptr + local.code_151[1]
        : local.iter_150.tape_ptr)

    code_ptr = 2 + (
      local.code_151[0] == "["
        ? local.iter_150.tape[local.iter_150.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_150.code_ptr)] : local.iter_150.code_ptr :
      local.code_151[0] == "]"
        ? local.iter_150.tape[local.iter_150.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_150.code_ptr)] : local.iter_150.code_ptr
        : local.iter_150.code_ptr)

    steps_taken = 1 + local.iter_150.steps_taken
  }
}

locals {
  code_152 = (try(local.iter_151.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_151.code_ptr, local.iter_151.code_ptr + 2)
    : [null])

  input_152 = (local.code_152[0] == ","
    ? substr(local.input_151, local.code_152[1], -1)
    : local.input_151)

  iter_152 = try(local.iter_151.code_ptr >= length(var.code), true) ? local.iter_151 : {
    output = (local.code_152[0] == "."
      ? "${local.iter_151.output}${join("", [for _ in range(local.code_152[1]) : jsondecode(format("\"\\u%04x\"", local.iter_151.tape[local.iter_151.tape_ptr]))])}"
      : local.iter_151.output)
    
    tape = (
      local.code_152[0] == "+"
        ? [for i, b in local.iter_151.tape : (i == local.iter_151.tape_ptr ? (b + local.code_152[1]) % 256 : b)] :
      local.code_152[0] == "-"
        ? [for i, b in local.iter_151.tape : (i == local.iter_151.tape_ptr ? (b - local.code_152[1] + 256) % 256 : b)] :
      local.code_152[0] == ","
        ? [for i, b in local.iter_151.tape : (i == local.iter_151.tape_ptr ? local.ascii_lookup[substr(local.input_152, 0, 1)] : b)]
        : local.iter_151.tape)

    tape_ptr = (
      local.code_152[0] == "<"
        ? local.iter_151.tape_ptr - local.code_152[1] :
      local.code_152[0] == ">"
        ? local.iter_151.tape_ptr + local.code_152[1]
        : local.iter_151.tape_ptr)

    code_ptr = 2 + (
      local.code_152[0] == "["
        ? local.iter_151.tape[local.iter_151.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_151.code_ptr)] : local.iter_151.code_ptr :
      local.code_152[0] == "]"
        ? local.iter_151.tape[local.iter_151.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_151.code_ptr)] : local.iter_151.code_ptr
        : local.iter_151.code_ptr)

    steps_taken = 1 + local.iter_151.steps_taken
  }
}

locals {
  code_153 = (try(local.iter_152.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_152.code_ptr, local.iter_152.code_ptr + 2)
    : [null])

  input_153 = (local.code_153[0] == ","
    ? substr(local.input_152, local.code_153[1], -1)
    : local.input_152)

  iter_153 = try(local.iter_152.code_ptr >= length(var.code), true) ? local.iter_152 : {
    output = (local.code_153[0] == "."
      ? "${local.iter_152.output}${join("", [for _ in range(local.code_153[1]) : jsondecode(format("\"\\u%04x\"", local.iter_152.tape[local.iter_152.tape_ptr]))])}"
      : local.iter_152.output)
    
    tape = (
      local.code_153[0] == "+"
        ? [for i, b in local.iter_152.tape : (i == local.iter_152.tape_ptr ? (b + local.code_153[1]) % 256 : b)] :
      local.code_153[0] == "-"
        ? [for i, b in local.iter_152.tape : (i == local.iter_152.tape_ptr ? (b - local.code_153[1] + 256) % 256 : b)] :
      local.code_153[0] == ","
        ? [for i, b in local.iter_152.tape : (i == local.iter_152.tape_ptr ? local.ascii_lookup[substr(local.input_153, 0, 1)] : b)]
        : local.iter_152.tape)

    tape_ptr = (
      local.code_153[0] == "<"
        ? local.iter_152.tape_ptr - local.code_153[1] :
      local.code_153[0] == ">"
        ? local.iter_152.tape_ptr + local.code_153[1]
        : local.iter_152.tape_ptr)

    code_ptr = 2 + (
      local.code_153[0] == "["
        ? local.iter_152.tape[local.iter_152.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_152.code_ptr)] : local.iter_152.code_ptr :
      local.code_153[0] == "]"
        ? local.iter_152.tape[local.iter_152.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_152.code_ptr)] : local.iter_152.code_ptr
        : local.iter_152.code_ptr)

    steps_taken = 1 + local.iter_152.steps_taken
  }
}

locals {
  code_154 = (try(local.iter_153.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_153.code_ptr, local.iter_153.code_ptr + 2)
    : [null])

  input_154 = (local.code_154[0] == ","
    ? substr(local.input_153, local.code_154[1], -1)
    : local.input_153)

  iter_154 = try(local.iter_153.code_ptr >= length(var.code), true) ? local.iter_153 : {
    output = (local.code_154[0] == "."
      ? "${local.iter_153.output}${join("", [for _ in range(local.code_154[1]) : jsondecode(format("\"\\u%04x\"", local.iter_153.tape[local.iter_153.tape_ptr]))])}"
      : local.iter_153.output)
    
    tape = (
      local.code_154[0] == "+"
        ? [for i, b in local.iter_153.tape : (i == local.iter_153.tape_ptr ? (b + local.code_154[1]) % 256 : b)] :
      local.code_154[0] == "-"
        ? [for i, b in local.iter_153.tape : (i == local.iter_153.tape_ptr ? (b - local.code_154[1] + 256) % 256 : b)] :
      local.code_154[0] == ","
        ? [for i, b in local.iter_153.tape : (i == local.iter_153.tape_ptr ? local.ascii_lookup[substr(local.input_154, 0, 1)] : b)]
        : local.iter_153.tape)

    tape_ptr = (
      local.code_154[0] == "<"
        ? local.iter_153.tape_ptr - local.code_154[1] :
      local.code_154[0] == ">"
        ? local.iter_153.tape_ptr + local.code_154[1]
        : local.iter_153.tape_ptr)

    code_ptr = 2 + (
      local.code_154[0] == "["
        ? local.iter_153.tape[local.iter_153.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_153.code_ptr)] : local.iter_153.code_ptr :
      local.code_154[0] == "]"
        ? local.iter_153.tape[local.iter_153.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_153.code_ptr)] : local.iter_153.code_ptr
        : local.iter_153.code_ptr)

    steps_taken = 1 + local.iter_153.steps_taken
  }
}

locals {
  code_155 = (try(local.iter_154.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_154.code_ptr, local.iter_154.code_ptr + 2)
    : [null])

  input_155 = (local.code_155[0] == ","
    ? substr(local.input_154, local.code_155[1], -1)
    : local.input_154)

  iter_155 = try(local.iter_154.code_ptr >= length(var.code), true) ? local.iter_154 : {
    output = (local.code_155[0] == "."
      ? "${local.iter_154.output}${join("", [for _ in range(local.code_155[1]) : jsondecode(format("\"\\u%04x\"", local.iter_154.tape[local.iter_154.tape_ptr]))])}"
      : local.iter_154.output)
    
    tape = (
      local.code_155[0] == "+"
        ? [for i, b in local.iter_154.tape : (i == local.iter_154.tape_ptr ? (b + local.code_155[1]) % 256 : b)] :
      local.code_155[0] == "-"
        ? [for i, b in local.iter_154.tape : (i == local.iter_154.tape_ptr ? (b - local.code_155[1] + 256) % 256 : b)] :
      local.code_155[0] == ","
        ? [for i, b in local.iter_154.tape : (i == local.iter_154.tape_ptr ? local.ascii_lookup[substr(local.input_155, 0, 1)] : b)]
        : local.iter_154.tape)

    tape_ptr = (
      local.code_155[0] == "<"
        ? local.iter_154.tape_ptr - local.code_155[1] :
      local.code_155[0] == ">"
        ? local.iter_154.tape_ptr + local.code_155[1]
        : local.iter_154.tape_ptr)

    code_ptr = 2 + (
      local.code_155[0] == "["
        ? local.iter_154.tape[local.iter_154.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_154.code_ptr)] : local.iter_154.code_ptr :
      local.code_155[0] == "]"
        ? local.iter_154.tape[local.iter_154.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_154.code_ptr)] : local.iter_154.code_ptr
        : local.iter_154.code_ptr)

    steps_taken = 1 + local.iter_154.steps_taken
  }
}

locals {
  code_156 = (try(local.iter_155.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_155.code_ptr, local.iter_155.code_ptr + 2)
    : [null])

  input_156 = (local.code_156[0] == ","
    ? substr(local.input_155, local.code_156[1], -1)
    : local.input_155)

  iter_156 = try(local.iter_155.code_ptr >= length(var.code), true) ? local.iter_155 : {
    output = (local.code_156[0] == "."
      ? "${local.iter_155.output}${join("", [for _ in range(local.code_156[1]) : jsondecode(format("\"\\u%04x\"", local.iter_155.tape[local.iter_155.tape_ptr]))])}"
      : local.iter_155.output)
    
    tape = (
      local.code_156[0] == "+"
        ? [for i, b in local.iter_155.tape : (i == local.iter_155.tape_ptr ? (b + local.code_156[1]) % 256 : b)] :
      local.code_156[0] == "-"
        ? [for i, b in local.iter_155.tape : (i == local.iter_155.tape_ptr ? (b - local.code_156[1] + 256) % 256 : b)] :
      local.code_156[0] == ","
        ? [for i, b in local.iter_155.tape : (i == local.iter_155.tape_ptr ? local.ascii_lookup[substr(local.input_156, 0, 1)] : b)]
        : local.iter_155.tape)

    tape_ptr = (
      local.code_156[0] == "<"
        ? local.iter_155.tape_ptr - local.code_156[1] :
      local.code_156[0] == ">"
        ? local.iter_155.tape_ptr + local.code_156[1]
        : local.iter_155.tape_ptr)

    code_ptr = 2 + (
      local.code_156[0] == "["
        ? local.iter_155.tape[local.iter_155.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_155.code_ptr)] : local.iter_155.code_ptr :
      local.code_156[0] == "]"
        ? local.iter_155.tape[local.iter_155.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_155.code_ptr)] : local.iter_155.code_ptr
        : local.iter_155.code_ptr)

    steps_taken = 1 + local.iter_155.steps_taken
  }
}

locals {
  code_157 = (try(local.iter_156.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_156.code_ptr, local.iter_156.code_ptr + 2)
    : [null])

  input_157 = (local.code_157[0] == ","
    ? substr(local.input_156, local.code_157[1], -1)
    : local.input_156)

  iter_157 = try(local.iter_156.code_ptr >= length(var.code), true) ? local.iter_156 : {
    output = (local.code_157[0] == "."
      ? "${local.iter_156.output}${join("", [for _ in range(local.code_157[1]) : jsondecode(format("\"\\u%04x\"", local.iter_156.tape[local.iter_156.tape_ptr]))])}"
      : local.iter_156.output)
    
    tape = (
      local.code_157[0] == "+"
        ? [for i, b in local.iter_156.tape : (i == local.iter_156.tape_ptr ? (b + local.code_157[1]) % 256 : b)] :
      local.code_157[0] == "-"
        ? [for i, b in local.iter_156.tape : (i == local.iter_156.tape_ptr ? (b - local.code_157[1] + 256) % 256 : b)] :
      local.code_157[0] == ","
        ? [for i, b in local.iter_156.tape : (i == local.iter_156.tape_ptr ? local.ascii_lookup[substr(local.input_157, 0, 1)] : b)]
        : local.iter_156.tape)

    tape_ptr = (
      local.code_157[0] == "<"
        ? local.iter_156.tape_ptr - local.code_157[1] :
      local.code_157[0] == ">"
        ? local.iter_156.tape_ptr + local.code_157[1]
        : local.iter_156.tape_ptr)

    code_ptr = 2 + (
      local.code_157[0] == "["
        ? local.iter_156.tape[local.iter_156.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_156.code_ptr)] : local.iter_156.code_ptr :
      local.code_157[0] == "]"
        ? local.iter_156.tape[local.iter_156.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_156.code_ptr)] : local.iter_156.code_ptr
        : local.iter_156.code_ptr)

    steps_taken = 1 + local.iter_156.steps_taken
  }
}

locals {
  code_158 = (try(local.iter_157.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_157.code_ptr, local.iter_157.code_ptr + 2)
    : [null])

  input_158 = (local.code_158[0] == ","
    ? substr(local.input_157, local.code_158[1], -1)
    : local.input_157)

  iter_158 = try(local.iter_157.code_ptr >= length(var.code), true) ? local.iter_157 : {
    output = (local.code_158[0] == "."
      ? "${local.iter_157.output}${join("", [for _ in range(local.code_158[1]) : jsondecode(format("\"\\u%04x\"", local.iter_157.tape[local.iter_157.tape_ptr]))])}"
      : local.iter_157.output)
    
    tape = (
      local.code_158[0] == "+"
        ? [for i, b in local.iter_157.tape : (i == local.iter_157.tape_ptr ? (b + local.code_158[1]) % 256 : b)] :
      local.code_158[0] == "-"
        ? [for i, b in local.iter_157.tape : (i == local.iter_157.tape_ptr ? (b - local.code_158[1] + 256) % 256 : b)] :
      local.code_158[0] == ","
        ? [for i, b in local.iter_157.tape : (i == local.iter_157.tape_ptr ? local.ascii_lookup[substr(local.input_158, 0, 1)] : b)]
        : local.iter_157.tape)

    tape_ptr = (
      local.code_158[0] == "<"
        ? local.iter_157.tape_ptr - local.code_158[1] :
      local.code_158[0] == ">"
        ? local.iter_157.tape_ptr + local.code_158[1]
        : local.iter_157.tape_ptr)

    code_ptr = 2 + (
      local.code_158[0] == "["
        ? local.iter_157.tape[local.iter_157.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_157.code_ptr)] : local.iter_157.code_ptr :
      local.code_158[0] == "]"
        ? local.iter_157.tape[local.iter_157.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_157.code_ptr)] : local.iter_157.code_ptr
        : local.iter_157.code_ptr)

    steps_taken = 1 + local.iter_157.steps_taken
  }
}

locals {
  code_159 = (try(local.iter_158.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_158.code_ptr, local.iter_158.code_ptr + 2)
    : [null])

  input_159 = (local.code_159[0] == ","
    ? substr(local.input_158, local.code_159[1], -1)
    : local.input_158)

  iter_159 = try(local.iter_158.code_ptr >= length(var.code), true) ? local.iter_158 : {
    output = (local.code_159[0] == "."
      ? "${local.iter_158.output}${join("", [for _ in range(local.code_159[1]) : jsondecode(format("\"\\u%04x\"", local.iter_158.tape[local.iter_158.tape_ptr]))])}"
      : local.iter_158.output)
    
    tape = (
      local.code_159[0] == "+"
        ? [for i, b in local.iter_158.tape : (i == local.iter_158.tape_ptr ? (b + local.code_159[1]) % 256 : b)] :
      local.code_159[0] == "-"
        ? [for i, b in local.iter_158.tape : (i == local.iter_158.tape_ptr ? (b - local.code_159[1] + 256) % 256 : b)] :
      local.code_159[0] == ","
        ? [for i, b in local.iter_158.tape : (i == local.iter_158.tape_ptr ? local.ascii_lookup[substr(local.input_159, 0, 1)] : b)]
        : local.iter_158.tape)

    tape_ptr = (
      local.code_159[0] == "<"
        ? local.iter_158.tape_ptr - local.code_159[1] :
      local.code_159[0] == ">"
        ? local.iter_158.tape_ptr + local.code_159[1]
        : local.iter_158.tape_ptr)

    code_ptr = 2 + (
      local.code_159[0] == "["
        ? local.iter_158.tape[local.iter_158.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_158.code_ptr)] : local.iter_158.code_ptr :
      local.code_159[0] == "]"
        ? local.iter_158.tape[local.iter_158.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_158.code_ptr)] : local.iter_158.code_ptr
        : local.iter_158.code_ptr)

    steps_taken = 1 + local.iter_158.steps_taken
  }
}

locals {
  code_160 = (try(local.iter_159.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_159.code_ptr, local.iter_159.code_ptr + 2)
    : [null])

  input_160 = (local.code_160[0] == ","
    ? substr(local.input_159, local.code_160[1], -1)
    : local.input_159)

  iter_160 = try(local.iter_159.code_ptr >= length(var.code), true) ? local.iter_159 : {
    output = (local.code_160[0] == "."
      ? "${local.iter_159.output}${join("", [for _ in range(local.code_160[1]) : jsondecode(format("\"\\u%04x\"", local.iter_159.tape[local.iter_159.tape_ptr]))])}"
      : local.iter_159.output)
    
    tape = (
      local.code_160[0] == "+"
        ? [for i, b in local.iter_159.tape : (i == local.iter_159.tape_ptr ? (b + local.code_160[1]) % 256 : b)] :
      local.code_160[0] == "-"
        ? [for i, b in local.iter_159.tape : (i == local.iter_159.tape_ptr ? (b - local.code_160[1] + 256) % 256 : b)] :
      local.code_160[0] == ","
        ? [for i, b in local.iter_159.tape : (i == local.iter_159.tape_ptr ? local.ascii_lookup[substr(local.input_160, 0, 1)] : b)]
        : local.iter_159.tape)

    tape_ptr = (
      local.code_160[0] == "<"
        ? local.iter_159.tape_ptr - local.code_160[1] :
      local.code_160[0] == ">"
        ? local.iter_159.tape_ptr + local.code_160[1]
        : local.iter_159.tape_ptr)

    code_ptr = 2 + (
      local.code_160[0] == "["
        ? local.iter_159.tape[local.iter_159.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_159.code_ptr)] : local.iter_159.code_ptr :
      local.code_160[0] == "]"
        ? local.iter_159.tape[local.iter_159.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_159.code_ptr)] : local.iter_159.code_ptr
        : local.iter_159.code_ptr)

    steps_taken = 1 + local.iter_159.steps_taken
  }
}

locals {
  code_161 = (try(local.iter_160.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_160.code_ptr, local.iter_160.code_ptr + 2)
    : [null])

  input_161 = (local.code_161[0] == ","
    ? substr(local.input_160, local.code_161[1], -1)
    : local.input_160)

  iter_161 = try(local.iter_160.code_ptr >= length(var.code), true) ? local.iter_160 : {
    output = (local.code_161[0] == "."
      ? "${local.iter_160.output}${join("", [for _ in range(local.code_161[1]) : jsondecode(format("\"\\u%04x\"", local.iter_160.tape[local.iter_160.tape_ptr]))])}"
      : local.iter_160.output)
    
    tape = (
      local.code_161[0] == "+"
        ? [for i, b in local.iter_160.tape : (i == local.iter_160.tape_ptr ? (b + local.code_161[1]) % 256 : b)] :
      local.code_161[0] == "-"
        ? [for i, b in local.iter_160.tape : (i == local.iter_160.tape_ptr ? (b - local.code_161[1] + 256) % 256 : b)] :
      local.code_161[0] == ","
        ? [for i, b in local.iter_160.tape : (i == local.iter_160.tape_ptr ? local.ascii_lookup[substr(local.input_161, 0, 1)] : b)]
        : local.iter_160.tape)

    tape_ptr = (
      local.code_161[0] == "<"
        ? local.iter_160.tape_ptr - local.code_161[1] :
      local.code_161[0] == ">"
        ? local.iter_160.tape_ptr + local.code_161[1]
        : local.iter_160.tape_ptr)

    code_ptr = 2 + (
      local.code_161[0] == "["
        ? local.iter_160.tape[local.iter_160.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_160.code_ptr)] : local.iter_160.code_ptr :
      local.code_161[0] == "]"
        ? local.iter_160.tape[local.iter_160.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_160.code_ptr)] : local.iter_160.code_ptr
        : local.iter_160.code_ptr)

    steps_taken = 1 + local.iter_160.steps_taken
  }
}

locals {
  code_162 = (try(local.iter_161.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_161.code_ptr, local.iter_161.code_ptr + 2)
    : [null])

  input_162 = (local.code_162[0] == ","
    ? substr(local.input_161, local.code_162[1], -1)
    : local.input_161)

  iter_162 = try(local.iter_161.code_ptr >= length(var.code), true) ? local.iter_161 : {
    output = (local.code_162[0] == "."
      ? "${local.iter_161.output}${join("", [for _ in range(local.code_162[1]) : jsondecode(format("\"\\u%04x\"", local.iter_161.tape[local.iter_161.tape_ptr]))])}"
      : local.iter_161.output)
    
    tape = (
      local.code_162[0] == "+"
        ? [for i, b in local.iter_161.tape : (i == local.iter_161.tape_ptr ? (b + local.code_162[1]) % 256 : b)] :
      local.code_162[0] == "-"
        ? [for i, b in local.iter_161.tape : (i == local.iter_161.tape_ptr ? (b - local.code_162[1] + 256) % 256 : b)] :
      local.code_162[0] == ","
        ? [for i, b in local.iter_161.tape : (i == local.iter_161.tape_ptr ? local.ascii_lookup[substr(local.input_162, 0, 1)] : b)]
        : local.iter_161.tape)

    tape_ptr = (
      local.code_162[0] == "<"
        ? local.iter_161.tape_ptr - local.code_162[1] :
      local.code_162[0] == ">"
        ? local.iter_161.tape_ptr + local.code_162[1]
        : local.iter_161.tape_ptr)

    code_ptr = 2 + (
      local.code_162[0] == "["
        ? local.iter_161.tape[local.iter_161.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_161.code_ptr)] : local.iter_161.code_ptr :
      local.code_162[0] == "]"
        ? local.iter_161.tape[local.iter_161.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_161.code_ptr)] : local.iter_161.code_ptr
        : local.iter_161.code_ptr)

    steps_taken = 1 + local.iter_161.steps_taken
  }
}

locals {
  code_163 = (try(local.iter_162.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_162.code_ptr, local.iter_162.code_ptr + 2)
    : [null])

  input_163 = (local.code_163[0] == ","
    ? substr(local.input_162, local.code_163[1], -1)
    : local.input_162)

  iter_163 = try(local.iter_162.code_ptr >= length(var.code), true) ? local.iter_162 : {
    output = (local.code_163[0] == "."
      ? "${local.iter_162.output}${join("", [for _ in range(local.code_163[1]) : jsondecode(format("\"\\u%04x\"", local.iter_162.tape[local.iter_162.tape_ptr]))])}"
      : local.iter_162.output)
    
    tape = (
      local.code_163[0] == "+"
        ? [for i, b in local.iter_162.tape : (i == local.iter_162.tape_ptr ? (b + local.code_163[1]) % 256 : b)] :
      local.code_163[0] == "-"
        ? [for i, b in local.iter_162.tape : (i == local.iter_162.tape_ptr ? (b - local.code_163[1] + 256) % 256 : b)] :
      local.code_163[0] == ","
        ? [for i, b in local.iter_162.tape : (i == local.iter_162.tape_ptr ? local.ascii_lookup[substr(local.input_163, 0, 1)] : b)]
        : local.iter_162.tape)

    tape_ptr = (
      local.code_163[0] == "<"
        ? local.iter_162.tape_ptr - local.code_163[1] :
      local.code_163[0] == ">"
        ? local.iter_162.tape_ptr + local.code_163[1]
        : local.iter_162.tape_ptr)

    code_ptr = 2 + (
      local.code_163[0] == "["
        ? local.iter_162.tape[local.iter_162.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_162.code_ptr)] : local.iter_162.code_ptr :
      local.code_163[0] == "]"
        ? local.iter_162.tape[local.iter_162.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_162.code_ptr)] : local.iter_162.code_ptr
        : local.iter_162.code_ptr)

    steps_taken = 1 + local.iter_162.steps_taken
  }
}

locals {
  code_164 = (try(local.iter_163.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_163.code_ptr, local.iter_163.code_ptr + 2)
    : [null])

  input_164 = (local.code_164[0] == ","
    ? substr(local.input_163, local.code_164[1], -1)
    : local.input_163)

  iter_164 = try(local.iter_163.code_ptr >= length(var.code), true) ? local.iter_163 : {
    output = (local.code_164[0] == "."
      ? "${local.iter_163.output}${join("", [for _ in range(local.code_164[1]) : jsondecode(format("\"\\u%04x\"", local.iter_163.tape[local.iter_163.tape_ptr]))])}"
      : local.iter_163.output)
    
    tape = (
      local.code_164[0] == "+"
        ? [for i, b in local.iter_163.tape : (i == local.iter_163.tape_ptr ? (b + local.code_164[1]) % 256 : b)] :
      local.code_164[0] == "-"
        ? [for i, b in local.iter_163.tape : (i == local.iter_163.tape_ptr ? (b - local.code_164[1] + 256) % 256 : b)] :
      local.code_164[0] == ","
        ? [for i, b in local.iter_163.tape : (i == local.iter_163.tape_ptr ? local.ascii_lookup[substr(local.input_164, 0, 1)] : b)]
        : local.iter_163.tape)

    tape_ptr = (
      local.code_164[0] == "<"
        ? local.iter_163.tape_ptr - local.code_164[1] :
      local.code_164[0] == ">"
        ? local.iter_163.tape_ptr + local.code_164[1]
        : local.iter_163.tape_ptr)

    code_ptr = 2 + (
      local.code_164[0] == "["
        ? local.iter_163.tape[local.iter_163.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_163.code_ptr)] : local.iter_163.code_ptr :
      local.code_164[0] == "]"
        ? local.iter_163.tape[local.iter_163.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_163.code_ptr)] : local.iter_163.code_ptr
        : local.iter_163.code_ptr)

    steps_taken = 1 + local.iter_163.steps_taken
  }
}

locals {
  code_165 = (try(local.iter_164.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_164.code_ptr, local.iter_164.code_ptr + 2)
    : [null])

  input_165 = (local.code_165[0] == ","
    ? substr(local.input_164, local.code_165[1], -1)
    : local.input_164)

  iter_165 = try(local.iter_164.code_ptr >= length(var.code), true) ? local.iter_164 : {
    output = (local.code_165[0] == "."
      ? "${local.iter_164.output}${join("", [for _ in range(local.code_165[1]) : jsondecode(format("\"\\u%04x\"", local.iter_164.tape[local.iter_164.tape_ptr]))])}"
      : local.iter_164.output)
    
    tape = (
      local.code_165[0] == "+"
        ? [for i, b in local.iter_164.tape : (i == local.iter_164.tape_ptr ? (b + local.code_165[1]) % 256 : b)] :
      local.code_165[0] == "-"
        ? [for i, b in local.iter_164.tape : (i == local.iter_164.tape_ptr ? (b - local.code_165[1] + 256) % 256 : b)] :
      local.code_165[0] == ","
        ? [for i, b in local.iter_164.tape : (i == local.iter_164.tape_ptr ? local.ascii_lookup[substr(local.input_165, 0, 1)] : b)]
        : local.iter_164.tape)

    tape_ptr = (
      local.code_165[0] == "<"
        ? local.iter_164.tape_ptr - local.code_165[1] :
      local.code_165[0] == ">"
        ? local.iter_164.tape_ptr + local.code_165[1]
        : local.iter_164.tape_ptr)

    code_ptr = 2 + (
      local.code_165[0] == "["
        ? local.iter_164.tape[local.iter_164.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_164.code_ptr)] : local.iter_164.code_ptr :
      local.code_165[0] == "]"
        ? local.iter_164.tape[local.iter_164.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_164.code_ptr)] : local.iter_164.code_ptr
        : local.iter_164.code_ptr)

    steps_taken = 1 + local.iter_164.steps_taken
  }
}

locals {
  code_166 = (try(local.iter_165.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_165.code_ptr, local.iter_165.code_ptr + 2)
    : [null])

  input_166 = (local.code_166[0] == ","
    ? substr(local.input_165, local.code_166[1], -1)
    : local.input_165)

  iter_166 = try(local.iter_165.code_ptr >= length(var.code), true) ? local.iter_165 : {
    output = (local.code_166[0] == "."
      ? "${local.iter_165.output}${join("", [for _ in range(local.code_166[1]) : jsondecode(format("\"\\u%04x\"", local.iter_165.tape[local.iter_165.tape_ptr]))])}"
      : local.iter_165.output)
    
    tape = (
      local.code_166[0] == "+"
        ? [for i, b in local.iter_165.tape : (i == local.iter_165.tape_ptr ? (b + local.code_166[1]) % 256 : b)] :
      local.code_166[0] == "-"
        ? [for i, b in local.iter_165.tape : (i == local.iter_165.tape_ptr ? (b - local.code_166[1] + 256) % 256 : b)] :
      local.code_166[0] == ","
        ? [for i, b in local.iter_165.tape : (i == local.iter_165.tape_ptr ? local.ascii_lookup[substr(local.input_166, 0, 1)] : b)]
        : local.iter_165.tape)

    tape_ptr = (
      local.code_166[0] == "<"
        ? local.iter_165.tape_ptr - local.code_166[1] :
      local.code_166[0] == ">"
        ? local.iter_165.tape_ptr + local.code_166[1]
        : local.iter_165.tape_ptr)

    code_ptr = 2 + (
      local.code_166[0] == "["
        ? local.iter_165.tape[local.iter_165.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_165.code_ptr)] : local.iter_165.code_ptr :
      local.code_166[0] == "]"
        ? local.iter_165.tape[local.iter_165.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_165.code_ptr)] : local.iter_165.code_ptr
        : local.iter_165.code_ptr)

    steps_taken = 1 + local.iter_165.steps_taken
  }
}

locals {
  code_167 = (try(local.iter_166.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_166.code_ptr, local.iter_166.code_ptr + 2)
    : [null])

  input_167 = (local.code_167[0] == ","
    ? substr(local.input_166, local.code_167[1], -1)
    : local.input_166)

  iter_167 = try(local.iter_166.code_ptr >= length(var.code), true) ? local.iter_166 : {
    output = (local.code_167[0] == "."
      ? "${local.iter_166.output}${join("", [for _ in range(local.code_167[1]) : jsondecode(format("\"\\u%04x\"", local.iter_166.tape[local.iter_166.tape_ptr]))])}"
      : local.iter_166.output)
    
    tape = (
      local.code_167[0] == "+"
        ? [for i, b in local.iter_166.tape : (i == local.iter_166.tape_ptr ? (b + local.code_167[1]) % 256 : b)] :
      local.code_167[0] == "-"
        ? [for i, b in local.iter_166.tape : (i == local.iter_166.tape_ptr ? (b - local.code_167[1] + 256) % 256 : b)] :
      local.code_167[0] == ","
        ? [for i, b in local.iter_166.tape : (i == local.iter_166.tape_ptr ? local.ascii_lookup[substr(local.input_167, 0, 1)] : b)]
        : local.iter_166.tape)

    tape_ptr = (
      local.code_167[0] == "<"
        ? local.iter_166.tape_ptr - local.code_167[1] :
      local.code_167[0] == ">"
        ? local.iter_166.tape_ptr + local.code_167[1]
        : local.iter_166.tape_ptr)

    code_ptr = 2 + (
      local.code_167[0] == "["
        ? local.iter_166.tape[local.iter_166.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_166.code_ptr)] : local.iter_166.code_ptr :
      local.code_167[0] == "]"
        ? local.iter_166.tape[local.iter_166.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_166.code_ptr)] : local.iter_166.code_ptr
        : local.iter_166.code_ptr)

    steps_taken = 1 + local.iter_166.steps_taken
  }
}

locals {
  code_168 = (try(local.iter_167.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_167.code_ptr, local.iter_167.code_ptr + 2)
    : [null])

  input_168 = (local.code_168[0] == ","
    ? substr(local.input_167, local.code_168[1], -1)
    : local.input_167)

  iter_168 = try(local.iter_167.code_ptr >= length(var.code), true) ? local.iter_167 : {
    output = (local.code_168[0] == "."
      ? "${local.iter_167.output}${join("", [for _ in range(local.code_168[1]) : jsondecode(format("\"\\u%04x\"", local.iter_167.tape[local.iter_167.tape_ptr]))])}"
      : local.iter_167.output)
    
    tape = (
      local.code_168[0] == "+"
        ? [for i, b in local.iter_167.tape : (i == local.iter_167.tape_ptr ? (b + local.code_168[1]) % 256 : b)] :
      local.code_168[0] == "-"
        ? [for i, b in local.iter_167.tape : (i == local.iter_167.tape_ptr ? (b - local.code_168[1] + 256) % 256 : b)] :
      local.code_168[0] == ","
        ? [for i, b in local.iter_167.tape : (i == local.iter_167.tape_ptr ? local.ascii_lookup[substr(local.input_168, 0, 1)] : b)]
        : local.iter_167.tape)

    tape_ptr = (
      local.code_168[0] == "<"
        ? local.iter_167.tape_ptr - local.code_168[1] :
      local.code_168[0] == ">"
        ? local.iter_167.tape_ptr + local.code_168[1]
        : local.iter_167.tape_ptr)

    code_ptr = 2 + (
      local.code_168[0] == "["
        ? local.iter_167.tape[local.iter_167.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_167.code_ptr)] : local.iter_167.code_ptr :
      local.code_168[0] == "]"
        ? local.iter_167.tape[local.iter_167.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_167.code_ptr)] : local.iter_167.code_ptr
        : local.iter_167.code_ptr)

    steps_taken = 1 + local.iter_167.steps_taken
  }
}

locals {
  code_169 = (try(local.iter_168.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_168.code_ptr, local.iter_168.code_ptr + 2)
    : [null])

  input_169 = (local.code_169[0] == ","
    ? substr(local.input_168, local.code_169[1], -1)
    : local.input_168)

  iter_169 = try(local.iter_168.code_ptr >= length(var.code), true) ? local.iter_168 : {
    output = (local.code_169[0] == "."
      ? "${local.iter_168.output}${join("", [for _ in range(local.code_169[1]) : jsondecode(format("\"\\u%04x\"", local.iter_168.tape[local.iter_168.tape_ptr]))])}"
      : local.iter_168.output)
    
    tape = (
      local.code_169[0] == "+"
        ? [for i, b in local.iter_168.tape : (i == local.iter_168.tape_ptr ? (b + local.code_169[1]) % 256 : b)] :
      local.code_169[0] == "-"
        ? [for i, b in local.iter_168.tape : (i == local.iter_168.tape_ptr ? (b - local.code_169[1] + 256) % 256 : b)] :
      local.code_169[0] == ","
        ? [for i, b in local.iter_168.tape : (i == local.iter_168.tape_ptr ? local.ascii_lookup[substr(local.input_169, 0, 1)] : b)]
        : local.iter_168.tape)

    tape_ptr = (
      local.code_169[0] == "<"
        ? local.iter_168.tape_ptr - local.code_169[1] :
      local.code_169[0] == ">"
        ? local.iter_168.tape_ptr + local.code_169[1]
        : local.iter_168.tape_ptr)

    code_ptr = 2 + (
      local.code_169[0] == "["
        ? local.iter_168.tape[local.iter_168.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_168.code_ptr)] : local.iter_168.code_ptr :
      local.code_169[0] == "]"
        ? local.iter_168.tape[local.iter_168.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_168.code_ptr)] : local.iter_168.code_ptr
        : local.iter_168.code_ptr)

    steps_taken = 1 + local.iter_168.steps_taken
  }
}

locals {
  code_170 = (try(local.iter_169.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_169.code_ptr, local.iter_169.code_ptr + 2)
    : [null])

  input_170 = (local.code_170[0] == ","
    ? substr(local.input_169, local.code_170[1], -1)
    : local.input_169)

  iter_170 = try(local.iter_169.code_ptr >= length(var.code), true) ? local.iter_169 : {
    output = (local.code_170[0] == "."
      ? "${local.iter_169.output}${join("", [for _ in range(local.code_170[1]) : jsondecode(format("\"\\u%04x\"", local.iter_169.tape[local.iter_169.tape_ptr]))])}"
      : local.iter_169.output)
    
    tape = (
      local.code_170[0] == "+"
        ? [for i, b in local.iter_169.tape : (i == local.iter_169.tape_ptr ? (b + local.code_170[1]) % 256 : b)] :
      local.code_170[0] == "-"
        ? [for i, b in local.iter_169.tape : (i == local.iter_169.tape_ptr ? (b - local.code_170[1] + 256) % 256 : b)] :
      local.code_170[0] == ","
        ? [for i, b in local.iter_169.tape : (i == local.iter_169.tape_ptr ? local.ascii_lookup[substr(local.input_170, 0, 1)] : b)]
        : local.iter_169.tape)

    tape_ptr = (
      local.code_170[0] == "<"
        ? local.iter_169.tape_ptr - local.code_170[1] :
      local.code_170[0] == ">"
        ? local.iter_169.tape_ptr + local.code_170[1]
        : local.iter_169.tape_ptr)

    code_ptr = 2 + (
      local.code_170[0] == "["
        ? local.iter_169.tape[local.iter_169.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_169.code_ptr)] : local.iter_169.code_ptr :
      local.code_170[0] == "]"
        ? local.iter_169.tape[local.iter_169.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_169.code_ptr)] : local.iter_169.code_ptr
        : local.iter_169.code_ptr)

    steps_taken = 1 + local.iter_169.steps_taken
  }
}

locals {
  code_171 = (try(local.iter_170.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_170.code_ptr, local.iter_170.code_ptr + 2)
    : [null])

  input_171 = (local.code_171[0] == ","
    ? substr(local.input_170, local.code_171[1], -1)
    : local.input_170)

  iter_171 = try(local.iter_170.code_ptr >= length(var.code), true) ? local.iter_170 : {
    output = (local.code_171[0] == "."
      ? "${local.iter_170.output}${join("", [for _ in range(local.code_171[1]) : jsondecode(format("\"\\u%04x\"", local.iter_170.tape[local.iter_170.tape_ptr]))])}"
      : local.iter_170.output)
    
    tape = (
      local.code_171[0] == "+"
        ? [for i, b in local.iter_170.tape : (i == local.iter_170.tape_ptr ? (b + local.code_171[1]) % 256 : b)] :
      local.code_171[0] == "-"
        ? [for i, b in local.iter_170.tape : (i == local.iter_170.tape_ptr ? (b - local.code_171[1] + 256) % 256 : b)] :
      local.code_171[0] == ","
        ? [for i, b in local.iter_170.tape : (i == local.iter_170.tape_ptr ? local.ascii_lookup[substr(local.input_171, 0, 1)] : b)]
        : local.iter_170.tape)

    tape_ptr = (
      local.code_171[0] == "<"
        ? local.iter_170.tape_ptr - local.code_171[1] :
      local.code_171[0] == ">"
        ? local.iter_170.tape_ptr + local.code_171[1]
        : local.iter_170.tape_ptr)

    code_ptr = 2 + (
      local.code_171[0] == "["
        ? local.iter_170.tape[local.iter_170.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_170.code_ptr)] : local.iter_170.code_ptr :
      local.code_171[0] == "]"
        ? local.iter_170.tape[local.iter_170.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_170.code_ptr)] : local.iter_170.code_ptr
        : local.iter_170.code_ptr)

    steps_taken = 1 + local.iter_170.steps_taken
  }
}

locals {
  code_172 = (try(local.iter_171.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_171.code_ptr, local.iter_171.code_ptr + 2)
    : [null])

  input_172 = (local.code_172[0] == ","
    ? substr(local.input_171, local.code_172[1], -1)
    : local.input_171)

  iter_172 = try(local.iter_171.code_ptr >= length(var.code), true) ? local.iter_171 : {
    output = (local.code_172[0] == "."
      ? "${local.iter_171.output}${join("", [for _ in range(local.code_172[1]) : jsondecode(format("\"\\u%04x\"", local.iter_171.tape[local.iter_171.tape_ptr]))])}"
      : local.iter_171.output)
    
    tape = (
      local.code_172[0] == "+"
        ? [for i, b in local.iter_171.tape : (i == local.iter_171.tape_ptr ? (b + local.code_172[1]) % 256 : b)] :
      local.code_172[0] == "-"
        ? [for i, b in local.iter_171.tape : (i == local.iter_171.tape_ptr ? (b - local.code_172[1] + 256) % 256 : b)] :
      local.code_172[0] == ","
        ? [for i, b in local.iter_171.tape : (i == local.iter_171.tape_ptr ? local.ascii_lookup[substr(local.input_172, 0, 1)] : b)]
        : local.iter_171.tape)

    tape_ptr = (
      local.code_172[0] == "<"
        ? local.iter_171.tape_ptr - local.code_172[1] :
      local.code_172[0] == ">"
        ? local.iter_171.tape_ptr + local.code_172[1]
        : local.iter_171.tape_ptr)

    code_ptr = 2 + (
      local.code_172[0] == "["
        ? local.iter_171.tape[local.iter_171.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_171.code_ptr)] : local.iter_171.code_ptr :
      local.code_172[0] == "]"
        ? local.iter_171.tape[local.iter_171.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_171.code_ptr)] : local.iter_171.code_ptr
        : local.iter_171.code_ptr)

    steps_taken = 1 + local.iter_171.steps_taken
  }
}

locals {
  code_173 = (try(local.iter_172.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_172.code_ptr, local.iter_172.code_ptr + 2)
    : [null])

  input_173 = (local.code_173[0] == ","
    ? substr(local.input_172, local.code_173[1], -1)
    : local.input_172)

  iter_173 = try(local.iter_172.code_ptr >= length(var.code), true) ? local.iter_172 : {
    output = (local.code_173[0] == "."
      ? "${local.iter_172.output}${join("", [for _ in range(local.code_173[1]) : jsondecode(format("\"\\u%04x\"", local.iter_172.tape[local.iter_172.tape_ptr]))])}"
      : local.iter_172.output)
    
    tape = (
      local.code_173[0] == "+"
        ? [for i, b in local.iter_172.tape : (i == local.iter_172.tape_ptr ? (b + local.code_173[1]) % 256 : b)] :
      local.code_173[0] == "-"
        ? [for i, b in local.iter_172.tape : (i == local.iter_172.tape_ptr ? (b - local.code_173[1] + 256) % 256 : b)] :
      local.code_173[0] == ","
        ? [for i, b in local.iter_172.tape : (i == local.iter_172.tape_ptr ? local.ascii_lookup[substr(local.input_173, 0, 1)] : b)]
        : local.iter_172.tape)

    tape_ptr = (
      local.code_173[0] == "<"
        ? local.iter_172.tape_ptr - local.code_173[1] :
      local.code_173[0] == ">"
        ? local.iter_172.tape_ptr + local.code_173[1]
        : local.iter_172.tape_ptr)

    code_ptr = 2 + (
      local.code_173[0] == "["
        ? local.iter_172.tape[local.iter_172.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_172.code_ptr)] : local.iter_172.code_ptr :
      local.code_173[0] == "]"
        ? local.iter_172.tape[local.iter_172.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_172.code_ptr)] : local.iter_172.code_ptr
        : local.iter_172.code_ptr)

    steps_taken = 1 + local.iter_172.steps_taken
  }
}

locals {
  code_174 = (try(local.iter_173.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_173.code_ptr, local.iter_173.code_ptr + 2)
    : [null])

  input_174 = (local.code_174[0] == ","
    ? substr(local.input_173, local.code_174[1], -1)
    : local.input_173)

  iter_174 = try(local.iter_173.code_ptr >= length(var.code), true) ? local.iter_173 : {
    output = (local.code_174[0] == "."
      ? "${local.iter_173.output}${join("", [for _ in range(local.code_174[1]) : jsondecode(format("\"\\u%04x\"", local.iter_173.tape[local.iter_173.tape_ptr]))])}"
      : local.iter_173.output)
    
    tape = (
      local.code_174[0] == "+"
        ? [for i, b in local.iter_173.tape : (i == local.iter_173.tape_ptr ? (b + local.code_174[1]) % 256 : b)] :
      local.code_174[0] == "-"
        ? [for i, b in local.iter_173.tape : (i == local.iter_173.tape_ptr ? (b - local.code_174[1] + 256) % 256 : b)] :
      local.code_174[0] == ","
        ? [for i, b in local.iter_173.tape : (i == local.iter_173.tape_ptr ? local.ascii_lookup[substr(local.input_174, 0, 1)] : b)]
        : local.iter_173.tape)

    tape_ptr = (
      local.code_174[0] == "<"
        ? local.iter_173.tape_ptr - local.code_174[1] :
      local.code_174[0] == ">"
        ? local.iter_173.tape_ptr + local.code_174[1]
        : local.iter_173.tape_ptr)

    code_ptr = 2 + (
      local.code_174[0] == "["
        ? local.iter_173.tape[local.iter_173.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_173.code_ptr)] : local.iter_173.code_ptr :
      local.code_174[0] == "]"
        ? local.iter_173.tape[local.iter_173.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_173.code_ptr)] : local.iter_173.code_ptr
        : local.iter_173.code_ptr)

    steps_taken = 1 + local.iter_173.steps_taken
  }
}

locals {
  code_175 = (try(local.iter_174.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_174.code_ptr, local.iter_174.code_ptr + 2)
    : [null])

  input_175 = (local.code_175[0] == ","
    ? substr(local.input_174, local.code_175[1], -1)
    : local.input_174)

  iter_175 = try(local.iter_174.code_ptr >= length(var.code), true) ? local.iter_174 : {
    output = (local.code_175[0] == "."
      ? "${local.iter_174.output}${join("", [for _ in range(local.code_175[1]) : jsondecode(format("\"\\u%04x\"", local.iter_174.tape[local.iter_174.tape_ptr]))])}"
      : local.iter_174.output)
    
    tape = (
      local.code_175[0] == "+"
        ? [for i, b in local.iter_174.tape : (i == local.iter_174.tape_ptr ? (b + local.code_175[1]) % 256 : b)] :
      local.code_175[0] == "-"
        ? [for i, b in local.iter_174.tape : (i == local.iter_174.tape_ptr ? (b - local.code_175[1] + 256) % 256 : b)] :
      local.code_175[0] == ","
        ? [for i, b in local.iter_174.tape : (i == local.iter_174.tape_ptr ? local.ascii_lookup[substr(local.input_175, 0, 1)] : b)]
        : local.iter_174.tape)

    tape_ptr = (
      local.code_175[0] == "<"
        ? local.iter_174.tape_ptr - local.code_175[1] :
      local.code_175[0] == ">"
        ? local.iter_174.tape_ptr + local.code_175[1]
        : local.iter_174.tape_ptr)

    code_ptr = 2 + (
      local.code_175[0] == "["
        ? local.iter_174.tape[local.iter_174.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_174.code_ptr)] : local.iter_174.code_ptr :
      local.code_175[0] == "]"
        ? local.iter_174.tape[local.iter_174.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_174.code_ptr)] : local.iter_174.code_ptr
        : local.iter_174.code_ptr)

    steps_taken = 1 + local.iter_174.steps_taken
  }
}

locals {
  code_176 = (try(local.iter_175.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_175.code_ptr, local.iter_175.code_ptr + 2)
    : [null])

  input_176 = (local.code_176[0] == ","
    ? substr(local.input_175, local.code_176[1], -1)
    : local.input_175)

  iter_176 = try(local.iter_175.code_ptr >= length(var.code), true) ? local.iter_175 : {
    output = (local.code_176[0] == "."
      ? "${local.iter_175.output}${join("", [for _ in range(local.code_176[1]) : jsondecode(format("\"\\u%04x\"", local.iter_175.tape[local.iter_175.tape_ptr]))])}"
      : local.iter_175.output)
    
    tape = (
      local.code_176[0] == "+"
        ? [for i, b in local.iter_175.tape : (i == local.iter_175.tape_ptr ? (b + local.code_176[1]) % 256 : b)] :
      local.code_176[0] == "-"
        ? [for i, b in local.iter_175.tape : (i == local.iter_175.tape_ptr ? (b - local.code_176[1] + 256) % 256 : b)] :
      local.code_176[0] == ","
        ? [for i, b in local.iter_175.tape : (i == local.iter_175.tape_ptr ? local.ascii_lookup[substr(local.input_176, 0, 1)] : b)]
        : local.iter_175.tape)

    tape_ptr = (
      local.code_176[0] == "<"
        ? local.iter_175.tape_ptr - local.code_176[1] :
      local.code_176[0] == ">"
        ? local.iter_175.tape_ptr + local.code_176[1]
        : local.iter_175.tape_ptr)

    code_ptr = 2 + (
      local.code_176[0] == "["
        ? local.iter_175.tape[local.iter_175.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_175.code_ptr)] : local.iter_175.code_ptr :
      local.code_176[0] == "]"
        ? local.iter_175.tape[local.iter_175.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_175.code_ptr)] : local.iter_175.code_ptr
        : local.iter_175.code_ptr)

    steps_taken = 1 + local.iter_175.steps_taken
  }
}

locals {
  code_177 = (try(local.iter_176.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_176.code_ptr, local.iter_176.code_ptr + 2)
    : [null])

  input_177 = (local.code_177[0] == ","
    ? substr(local.input_176, local.code_177[1], -1)
    : local.input_176)

  iter_177 = try(local.iter_176.code_ptr >= length(var.code), true) ? local.iter_176 : {
    output = (local.code_177[0] == "."
      ? "${local.iter_176.output}${join("", [for _ in range(local.code_177[1]) : jsondecode(format("\"\\u%04x\"", local.iter_176.tape[local.iter_176.tape_ptr]))])}"
      : local.iter_176.output)
    
    tape = (
      local.code_177[0] == "+"
        ? [for i, b in local.iter_176.tape : (i == local.iter_176.tape_ptr ? (b + local.code_177[1]) % 256 : b)] :
      local.code_177[0] == "-"
        ? [for i, b in local.iter_176.tape : (i == local.iter_176.tape_ptr ? (b - local.code_177[1] + 256) % 256 : b)] :
      local.code_177[0] == ","
        ? [for i, b in local.iter_176.tape : (i == local.iter_176.tape_ptr ? local.ascii_lookup[substr(local.input_177, 0, 1)] : b)]
        : local.iter_176.tape)

    tape_ptr = (
      local.code_177[0] == "<"
        ? local.iter_176.tape_ptr - local.code_177[1] :
      local.code_177[0] == ">"
        ? local.iter_176.tape_ptr + local.code_177[1]
        : local.iter_176.tape_ptr)

    code_ptr = 2 + (
      local.code_177[0] == "["
        ? local.iter_176.tape[local.iter_176.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_176.code_ptr)] : local.iter_176.code_ptr :
      local.code_177[0] == "]"
        ? local.iter_176.tape[local.iter_176.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_176.code_ptr)] : local.iter_176.code_ptr
        : local.iter_176.code_ptr)

    steps_taken = 1 + local.iter_176.steps_taken
  }
}

locals {
  code_178 = (try(local.iter_177.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_177.code_ptr, local.iter_177.code_ptr + 2)
    : [null])

  input_178 = (local.code_178[0] == ","
    ? substr(local.input_177, local.code_178[1], -1)
    : local.input_177)

  iter_178 = try(local.iter_177.code_ptr >= length(var.code), true) ? local.iter_177 : {
    output = (local.code_178[0] == "."
      ? "${local.iter_177.output}${join("", [for _ in range(local.code_178[1]) : jsondecode(format("\"\\u%04x\"", local.iter_177.tape[local.iter_177.tape_ptr]))])}"
      : local.iter_177.output)
    
    tape = (
      local.code_178[0] == "+"
        ? [for i, b in local.iter_177.tape : (i == local.iter_177.tape_ptr ? (b + local.code_178[1]) % 256 : b)] :
      local.code_178[0] == "-"
        ? [for i, b in local.iter_177.tape : (i == local.iter_177.tape_ptr ? (b - local.code_178[1] + 256) % 256 : b)] :
      local.code_178[0] == ","
        ? [for i, b in local.iter_177.tape : (i == local.iter_177.tape_ptr ? local.ascii_lookup[substr(local.input_178, 0, 1)] : b)]
        : local.iter_177.tape)

    tape_ptr = (
      local.code_178[0] == "<"
        ? local.iter_177.tape_ptr - local.code_178[1] :
      local.code_178[0] == ">"
        ? local.iter_177.tape_ptr + local.code_178[1]
        : local.iter_177.tape_ptr)

    code_ptr = 2 + (
      local.code_178[0] == "["
        ? local.iter_177.tape[local.iter_177.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_177.code_ptr)] : local.iter_177.code_ptr :
      local.code_178[0] == "]"
        ? local.iter_177.tape[local.iter_177.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_177.code_ptr)] : local.iter_177.code_ptr
        : local.iter_177.code_ptr)

    steps_taken = 1 + local.iter_177.steps_taken
  }
}

locals {
  code_179 = (try(local.iter_178.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_178.code_ptr, local.iter_178.code_ptr + 2)
    : [null])

  input_179 = (local.code_179[0] == ","
    ? substr(local.input_178, local.code_179[1], -1)
    : local.input_178)

  iter_179 = try(local.iter_178.code_ptr >= length(var.code), true) ? local.iter_178 : {
    output = (local.code_179[0] == "."
      ? "${local.iter_178.output}${join("", [for _ in range(local.code_179[1]) : jsondecode(format("\"\\u%04x\"", local.iter_178.tape[local.iter_178.tape_ptr]))])}"
      : local.iter_178.output)
    
    tape = (
      local.code_179[0] == "+"
        ? [for i, b in local.iter_178.tape : (i == local.iter_178.tape_ptr ? (b + local.code_179[1]) % 256 : b)] :
      local.code_179[0] == "-"
        ? [for i, b in local.iter_178.tape : (i == local.iter_178.tape_ptr ? (b - local.code_179[1] + 256) % 256 : b)] :
      local.code_179[0] == ","
        ? [for i, b in local.iter_178.tape : (i == local.iter_178.tape_ptr ? local.ascii_lookup[substr(local.input_179, 0, 1)] : b)]
        : local.iter_178.tape)

    tape_ptr = (
      local.code_179[0] == "<"
        ? local.iter_178.tape_ptr - local.code_179[1] :
      local.code_179[0] == ">"
        ? local.iter_178.tape_ptr + local.code_179[1]
        : local.iter_178.tape_ptr)

    code_ptr = 2 + (
      local.code_179[0] == "["
        ? local.iter_178.tape[local.iter_178.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_178.code_ptr)] : local.iter_178.code_ptr :
      local.code_179[0] == "]"
        ? local.iter_178.tape[local.iter_178.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_178.code_ptr)] : local.iter_178.code_ptr
        : local.iter_178.code_ptr)

    steps_taken = 1 + local.iter_178.steps_taken
  }
}

locals {
  code_180 = (try(local.iter_179.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_179.code_ptr, local.iter_179.code_ptr + 2)
    : [null])

  input_180 = (local.code_180[0] == ","
    ? substr(local.input_179, local.code_180[1], -1)
    : local.input_179)

  iter_180 = try(local.iter_179.code_ptr >= length(var.code), true) ? local.iter_179 : {
    output = (local.code_180[0] == "."
      ? "${local.iter_179.output}${join("", [for _ in range(local.code_180[1]) : jsondecode(format("\"\\u%04x\"", local.iter_179.tape[local.iter_179.tape_ptr]))])}"
      : local.iter_179.output)
    
    tape = (
      local.code_180[0] == "+"
        ? [for i, b in local.iter_179.tape : (i == local.iter_179.tape_ptr ? (b + local.code_180[1]) % 256 : b)] :
      local.code_180[0] == "-"
        ? [for i, b in local.iter_179.tape : (i == local.iter_179.tape_ptr ? (b - local.code_180[1] + 256) % 256 : b)] :
      local.code_180[0] == ","
        ? [for i, b in local.iter_179.tape : (i == local.iter_179.tape_ptr ? local.ascii_lookup[substr(local.input_180, 0, 1)] : b)]
        : local.iter_179.tape)

    tape_ptr = (
      local.code_180[0] == "<"
        ? local.iter_179.tape_ptr - local.code_180[1] :
      local.code_180[0] == ">"
        ? local.iter_179.tape_ptr + local.code_180[1]
        : local.iter_179.tape_ptr)

    code_ptr = 2 + (
      local.code_180[0] == "["
        ? local.iter_179.tape[local.iter_179.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_179.code_ptr)] : local.iter_179.code_ptr :
      local.code_180[0] == "]"
        ? local.iter_179.tape[local.iter_179.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_179.code_ptr)] : local.iter_179.code_ptr
        : local.iter_179.code_ptr)

    steps_taken = 1 + local.iter_179.steps_taken
  }
}

locals {
  code_181 = (try(local.iter_180.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_180.code_ptr, local.iter_180.code_ptr + 2)
    : [null])

  input_181 = (local.code_181[0] == ","
    ? substr(local.input_180, local.code_181[1], -1)
    : local.input_180)

  iter_181 = try(local.iter_180.code_ptr >= length(var.code), true) ? local.iter_180 : {
    output = (local.code_181[0] == "."
      ? "${local.iter_180.output}${join("", [for _ in range(local.code_181[1]) : jsondecode(format("\"\\u%04x\"", local.iter_180.tape[local.iter_180.tape_ptr]))])}"
      : local.iter_180.output)
    
    tape = (
      local.code_181[0] == "+"
        ? [for i, b in local.iter_180.tape : (i == local.iter_180.tape_ptr ? (b + local.code_181[1]) % 256 : b)] :
      local.code_181[0] == "-"
        ? [for i, b in local.iter_180.tape : (i == local.iter_180.tape_ptr ? (b - local.code_181[1] + 256) % 256 : b)] :
      local.code_181[0] == ","
        ? [for i, b in local.iter_180.tape : (i == local.iter_180.tape_ptr ? local.ascii_lookup[substr(local.input_181, 0, 1)] : b)]
        : local.iter_180.tape)

    tape_ptr = (
      local.code_181[0] == "<"
        ? local.iter_180.tape_ptr - local.code_181[1] :
      local.code_181[0] == ">"
        ? local.iter_180.tape_ptr + local.code_181[1]
        : local.iter_180.tape_ptr)

    code_ptr = 2 + (
      local.code_181[0] == "["
        ? local.iter_180.tape[local.iter_180.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_180.code_ptr)] : local.iter_180.code_ptr :
      local.code_181[0] == "]"
        ? local.iter_180.tape[local.iter_180.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_180.code_ptr)] : local.iter_180.code_ptr
        : local.iter_180.code_ptr)

    steps_taken = 1 + local.iter_180.steps_taken
  }
}

locals {
  code_182 = (try(local.iter_181.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_181.code_ptr, local.iter_181.code_ptr + 2)
    : [null])

  input_182 = (local.code_182[0] == ","
    ? substr(local.input_181, local.code_182[1], -1)
    : local.input_181)

  iter_182 = try(local.iter_181.code_ptr >= length(var.code), true) ? local.iter_181 : {
    output = (local.code_182[0] == "."
      ? "${local.iter_181.output}${join("", [for _ in range(local.code_182[1]) : jsondecode(format("\"\\u%04x\"", local.iter_181.tape[local.iter_181.tape_ptr]))])}"
      : local.iter_181.output)
    
    tape = (
      local.code_182[0] == "+"
        ? [for i, b in local.iter_181.tape : (i == local.iter_181.tape_ptr ? (b + local.code_182[1]) % 256 : b)] :
      local.code_182[0] == "-"
        ? [for i, b in local.iter_181.tape : (i == local.iter_181.tape_ptr ? (b - local.code_182[1] + 256) % 256 : b)] :
      local.code_182[0] == ","
        ? [for i, b in local.iter_181.tape : (i == local.iter_181.tape_ptr ? local.ascii_lookup[substr(local.input_182, 0, 1)] : b)]
        : local.iter_181.tape)

    tape_ptr = (
      local.code_182[0] == "<"
        ? local.iter_181.tape_ptr - local.code_182[1] :
      local.code_182[0] == ">"
        ? local.iter_181.tape_ptr + local.code_182[1]
        : local.iter_181.tape_ptr)

    code_ptr = 2 + (
      local.code_182[0] == "["
        ? local.iter_181.tape[local.iter_181.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_181.code_ptr)] : local.iter_181.code_ptr :
      local.code_182[0] == "]"
        ? local.iter_181.tape[local.iter_181.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_181.code_ptr)] : local.iter_181.code_ptr
        : local.iter_181.code_ptr)

    steps_taken = 1 + local.iter_181.steps_taken
  }
}

locals {
  code_183 = (try(local.iter_182.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_182.code_ptr, local.iter_182.code_ptr + 2)
    : [null])

  input_183 = (local.code_183[0] == ","
    ? substr(local.input_182, local.code_183[1], -1)
    : local.input_182)

  iter_183 = try(local.iter_182.code_ptr >= length(var.code), true) ? local.iter_182 : {
    output = (local.code_183[0] == "."
      ? "${local.iter_182.output}${join("", [for _ in range(local.code_183[1]) : jsondecode(format("\"\\u%04x\"", local.iter_182.tape[local.iter_182.tape_ptr]))])}"
      : local.iter_182.output)
    
    tape = (
      local.code_183[0] == "+"
        ? [for i, b in local.iter_182.tape : (i == local.iter_182.tape_ptr ? (b + local.code_183[1]) % 256 : b)] :
      local.code_183[0] == "-"
        ? [for i, b in local.iter_182.tape : (i == local.iter_182.tape_ptr ? (b - local.code_183[1] + 256) % 256 : b)] :
      local.code_183[0] == ","
        ? [for i, b in local.iter_182.tape : (i == local.iter_182.tape_ptr ? local.ascii_lookup[substr(local.input_183, 0, 1)] : b)]
        : local.iter_182.tape)

    tape_ptr = (
      local.code_183[0] == "<"
        ? local.iter_182.tape_ptr - local.code_183[1] :
      local.code_183[0] == ">"
        ? local.iter_182.tape_ptr + local.code_183[1]
        : local.iter_182.tape_ptr)

    code_ptr = 2 + (
      local.code_183[0] == "["
        ? local.iter_182.tape[local.iter_182.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_182.code_ptr)] : local.iter_182.code_ptr :
      local.code_183[0] == "]"
        ? local.iter_182.tape[local.iter_182.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_182.code_ptr)] : local.iter_182.code_ptr
        : local.iter_182.code_ptr)

    steps_taken = 1 + local.iter_182.steps_taken
  }
}

locals {
  code_184 = (try(local.iter_183.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_183.code_ptr, local.iter_183.code_ptr + 2)
    : [null])

  input_184 = (local.code_184[0] == ","
    ? substr(local.input_183, local.code_184[1], -1)
    : local.input_183)

  iter_184 = try(local.iter_183.code_ptr >= length(var.code), true) ? local.iter_183 : {
    output = (local.code_184[0] == "."
      ? "${local.iter_183.output}${join("", [for _ in range(local.code_184[1]) : jsondecode(format("\"\\u%04x\"", local.iter_183.tape[local.iter_183.tape_ptr]))])}"
      : local.iter_183.output)
    
    tape = (
      local.code_184[0] == "+"
        ? [for i, b in local.iter_183.tape : (i == local.iter_183.tape_ptr ? (b + local.code_184[1]) % 256 : b)] :
      local.code_184[0] == "-"
        ? [for i, b in local.iter_183.tape : (i == local.iter_183.tape_ptr ? (b - local.code_184[1] + 256) % 256 : b)] :
      local.code_184[0] == ","
        ? [for i, b in local.iter_183.tape : (i == local.iter_183.tape_ptr ? local.ascii_lookup[substr(local.input_184, 0, 1)] : b)]
        : local.iter_183.tape)

    tape_ptr = (
      local.code_184[0] == "<"
        ? local.iter_183.tape_ptr - local.code_184[1] :
      local.code_184[0] == ">"
        ? local.iter_183.tape_ptr + local.code_184[1]
        : local.iter_183.tape_ptr)

    code_ptr = 2 + (
      local.code_184[0] == "["
        ? local.iter_183.tape[local.iter_183.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_183.code_ptr)] : local.iter_183.code_ptr :
      local.code_184[0] == "]"
        ? local.iter_183.tape[local.iter_183.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_183.code_ptr)] : local.iter_183.code_ptr
        : local.iter_183.code_ptr)

    steps_taken = 1 + local.iter_183.steps_taken
  }
}

locals {
  code_185 = (try(local.iter_184.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_184.code_ptr, local.iter_184.code_ptr + 2)
    : [null])

  input_185 = (local.code_185[0] == ","
    ? substr(local.input_184, local.code_185[1], -1)
    : local.input_184)

  iter_185 = try(local.iter_184.code_ptr >= length(var.code), true) ? local.iter_184 : {
    output = (local.code_185[0] == "."
      ? "${local.iter_184.output}${join("", [for _ in range(local.code_185[1]) : jsondecode(format("\"\\u%04x\"", local.iter_184.tape[local.iter_184.tape_ptr]))])}"
      : local.iter_184.output)
    
    tape = (
      local.code_185[0] == "+"
        ? [for i, b in local.iter_184.tape : (i == local.iter_184.tape_ptr ? (b + local.code_185[1]) % 256 : b)] :
      local.code_185[0] == "-"
        ? [for i, b in local.iter_184.tape : (i == local.iter_184.tape_ptr ? (b - local.code_185[1] + 256) % 256 : b)] :
      local.code_185[0] == ","
        ? [for i, b in local.iter_184.tape : (i == local.iter_184.tape_ptr ? local.ascii_lookup[substr(local.input_185, 0, 1)] : b)]
        : local.iter_184.tape)

    tape_ptr = (
      local.code_185[0] == "<"
        ? local.iter_184.tape_ptr - local.code_185[1] :
      local.code_185[0] == ">"
        ? local.iter_184.tape_ptr + local.code_185[1]
        : local.iter_184.tape_ptr)

    code_ptr = 2 + (
      local.code_185[0] == "["
        ? local.iter_184.tape[local.iter_184.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_184.code_ptr)] : local.iter_184.code_ptr :
      local.code_185[0] == "]"
        ? local.iter_184.tape[local.iter_184.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_184.code_ptr)] : local.iter_184.code_ptr
        : local.iter_184.code_ptr)

    steps_taken = 1 + local.iter_184.steps_taken
  }
}

locals {
  code_186 = (try(local.iter_185.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_185.code_ptr, local.iter_185.code_ptr + 2)
    : [null])

  input_186 = (local.code_186[0] == ","
    ? substr(local.input_185, local.code_186[1], -1)
    : local.input_185)

  iter_186 = try(local.iter_185.code_ptr >= length(var.code), true) ? local.iter_185 : {
    output = (local.code_186[0] == "."
      ? "${local.iter_185.output}${join("", [for _ in range(local.code_186[1]) : jsondecode(format("\"\\u%04x\"", local.iter_185.tape[local.iter_185.tape_ptr]))])}"
      : local.iter_185.output)
    
    tape = (
      local.code_186[0] == "+"
        ? [for i, b in local.iter_185.tape : (i == local.iter_185.tape_ptr ? (b + local.code_186[1]) % 256 : b)] :
      local.code_186[0] == "-"
        ? [for i, b in local.iter_185.tape : (i == local.iter_185.tape_ptr ? (b - local.code_186[1] + 256) % 256 : b)] :
      local.code_186[0] == ","
        ? [for i, b in local.iter_185.tape : (i == local.iter_185.tape_ptr ? local.ascii_lookup[substr(local.input_186, 0, 1)] : b)]
        : local.iter_185.tape)

    tape_ptr = (
      local.code_186[0] == "<"
        ? local.iter_185.tape_ptr - local.code_186[1] :
      local.code_186[0] == ">"
        ? local.iter_185.tape_ptr + local.code_186[1]
        : local.iter_185.tape_ptr)

    code_ptr = 2 + (
      local.code_186[0] == "["
        ? local.iter_185.tape[local.iter_185.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_185.code_ptr)] : local.iter_185.code_ptr :
      local.code_186[0] == "]"
        ? local.iter_185.tape[local.iter_185.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_185.code_ptr)] : local.iter_185.code_ptr
        : local.iter_185.code_ptr)

    steps_taken = 1 + local.iter_185.steps_taken
  }
}

locals {
  code_187 = (try(local.iter_186.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_186.code_ptr, local.iter_186.code_ptr + 2)
    : [null])

  input_187 = (local.code_187[0] == ","
    ? substr(local.input_186, local.code_187[1], -1)
    : local.input_186)

  iter_187 = try(local.iter_186.code_ptr >= length(var.code), true) ? local.iter_186 : {
    output = (local.code_187[0] == "."
      ? "${local.iter_186.output}${join("", [for _ in range(local.code_187[1]) : jsondecode(format("\"\\u%04x\"", local.iter_186.tape[local.iter_186.tape_ptr]))])}"
      : local.iter_186.output)
    
    tape = (
      local.code_187[0] == "+"
        ? [for i, b in local.iter_186.tape : (i == local.iter_186.tape_ptr ? (b + local.code_187[1]) % 256 : b)] :
      local.code_187[0] == "-"
        ? [for i, b in local.iter_186.tape : (i == local.iter_186.tape_ptr ? (b - local.code_187[1] + 256) % 256 : b)] :
      local.code_187[0] == ","
        ? [for i, b in local.iter_186.tape : (i == local.iter_186.tape_ptr ? local.ascii_lookup[substr(local.input_187, 0, 1)] : b)]
        : local.iter_186.tape)

    tape_ptr = (
      local.code_187[0] == "<"
        ? local.iter_186.tape_ptr - local.code_187[1] :
      local.code_187[0] == ">"
        ? local.iter_186.tape_ptr + local.code_187[1]
        : local.iter_186.tape_ptr)

    code_ptr = 2 + (
      local.code_187[0] == "["
        ? local.iter_186.tape[local.iter_186.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_186.code_ptr)] : local.iter_186.code_ptr :
      local.code_187[0] == "]"
        ? local.iter_186.tape[local.iter_186.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_186.code_ptr)] : local.iter_186.code_ptr
        : local.iter_186.code_ptr)

    steps_taken = 1 + local.iter_186.steps_taken
  }
}

locals {
  code_188 = (try(local.iter_187.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_187.code_ptr, local.iter_187.code_ptr + 2)
    : [null])

  input_188 = (local.code_188[0] == ","
    ? substr(local.input_187, local.code_188[1], -1)
    : local.input_187)

  iter_188 = try(local.iter_187.code_ptr >= length(var.code), true) ? local.iter_187 : {
    output = (local.code_188[0] == "."
      ? "${local.iter_187.output}${join("", [for _ in range(local.code_188[1]) : jsondecode(format("\"\\u%04x\"", local.iter_187.tape[local.iter_187.tape_ptr]))])}"
      : local.iter_187.output)
    
    tape = (
      local.code_188[0] == "+"
        ? [for i, b in local.iter_187.tape : (i == local.iter_187.tape_ptr ? (b + local.code_188[1]) % 256 : b)] :
      local.code_188[0] == "-"
        ? [for i, b in local.iter_187.tape : (i == local.iter_187.tape_ptr ? (b - local.code_188[1] + 256) % 256 : b)] :
      local.code_188[0] == ","
        ? [for i, b in local.iter_187.tape : (i == local.iter_187.tape_ptr ? local.ascii_lookup[substr(local.input_188, 0, 1)] : b)]
        : local.iter_187.tape)

    tape_ptr = (
      local.code_188[0] == "<"
        ? local.iter_187.tape_ptr - local.code_188[1] :
      local.code_188[0] == ">"
        ? local.iter_187.tape_ptr + local.code_188[1]
        : local.iter_187.tape_ptr)

    code_ptr = 2 + (
      local.code_188[0] == "["
        ? local.iter_187.tape[local.iter_187.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_187.code_ptr)] : local.iter_187.code_ptr :
      local.code_188[0] == "]"
        ? local.iter_187.tape[local.iter_187.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_187.code_ptr)] : local.iter_187.code_ptr
        : local.iter_187.code_ptr)

    steps_taken = 1 + local.iter_187.steps_taken
  }
}

locals {
  code_189 = (try(local.iter_188.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_188.code_ptr, local.iter_188.code_ptr + 2)
    : [null])

  input_189 = (local.code_189[0] == ","
    ? substr(local.input_188, local.code_189[1], -1)
    : local.input_188)

  iter_189 = try(local.iter_188.code_ptr >= length(var.code), true) ? local.iter_188 : {
    output = (local.code_189[0] == "."
      ? "${local.iter_188.output}${join("", [for _ in range(local.code_189[1]) : jsondecode(format("\"\\u%04x\"", local.iter_188.tape[local.iter_188.tape_ptr]))])}"
      : local.iter_188.output)
    
    tape = (
      local.code_189[0] == "+"
        ? [for i, b in local.iter_188.tape : (i == local.iter_188.tape_ptr ? (b + local.code_189[1]) % 256 : b)] :
      local.code_189[0] == "-"
        ? [for i, b in local.iter_188.tape : (i == local.iter_188.tape_ptr ? (b - local.code_189[1] + 256) % 256 : b)] :
      local.code_189[0] == ","
        ? [for i, b in local.iter_188.tape : (i == local.iter_188.tape_ptr ? local.ascii_lookup[substr(local.input_189, 0, 1)] : b)]
        : local.iter_188.tape)

    tape_ptr = (
      local.code_189[0] == "<"
        ? local.iter_188.tape_ptr - local.code_189[1] :
      local.code_189[0] == ">"
        ? local.iter_188.tape_ptr + local.code_189[1]
        : local.iter_188.tape_ptr)

    code_ptr = 2 + (
      local.code_189[0] == "["
        ? local.iter_188.tape[local.iter_188.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_188.code_ptr)] : local.iter_188.code_ptr :
      local.code_189[0] == "]"
        ? local.iter_188.tape[local.iter_188.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_188.code_ptr)] : local.iter_188.code_ptr
        : local.iter_188.code_ptr)

    steps_taken = 1 + local.iter_188.steps_taken
  }
}

locals {
  code_190 = (try(local.iter_189.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_189.code_ptr, local.iter_189.code_ptr + 2)
    : [null])

  input_190 = (local.code_190[0] == ","
    ? substr(local.input_189, local.code_190[1], -1)
    : local.input_189)

  iter_190 = try(local.iter_189.code_ptr >= length(var.code), true) ? local.iter_189 : {
    output = (local.code_190[0] == "."
      ? "${local.iter_189.output}${join("", [for _ in range(local.code_190[1]) : jsondecode(format("\"\\u%04x\"", local.iter_189.tape[local.iter_189.tape_ptr]))])}"
      : local.iter_189.output)
    
    tape = (
      local.code_190[0] == "+"
        ? [for i, b in local.iter_189.tape : (i == local.iter_189.tape_ptr ? (b + local.code_190[1]) % 256 : b)] :
      local.code_190[0] == "-"
        ? [for i, b in local.iter_189.tape : (i == local.iter_189.tape_ptr ? (b - local.code_190[1] + 256) % 256 : b)] :
      local.code_190[0] == ","
        ? [for i, b in local.iter_189.tape : (i == local.iter_189.tape_ptr ? local.ascii_lookup[substr(local.input_190, 0, 1)] : b)]
        : local.iter_189.tape)

    tape_ptr = (
      local.code_190[0] == "<"
        ? local.iter_189.tape_ptr - local.code_190[1] :
      local.code_190[0] == ">"
        ? local.iter_189.tape_ptr + local.code_190[1]
        : local.iter_189.tape_ptr)

    code_ptr = 2 + (
      local.code_190[0] == "["
        ? local.iter_189.tape[local.iter_189.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_189.code_ptr)] : local.iter_189.code_ptr :
      local.code_190[0] == "]"
        ? local.iter_189.tape[local.iter_189.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_189.code_ptr)] : local.iter_189.code_ptr
        : local.iter_189.code_ptr)

    steps_taken = 1 + local.iter_189.steps_taken
  }
}

locals {
  code_191 = (try(local.iter_190.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_190.code_ptr, local.iter_190.code_ptr + 2)
    : [null])

  input_191 = (local.code_191[0] == ","
    ? substr(local.input_190, local.code_191[1], -1)
    : local.input_190)

  iter_191 = try(local.iter_190.code_ptr >= length(var.code), true) ? local.iter_190 : {
    output = (local.code_191[0] == "."
      ? "${local.iter_190.output}${join("", [for _ in range(local.code_191[1]) : jsondecode(format("\"\\u%04x\"", local.iter_190.tape[local.iter_190.tape_ptr]))])}"
      : local.iter_190.output)
    
    tape = (
      local.code_191[0] == "+"
        ? [for i, b in local.iter_190.tape : (i == local.iter_190.tape_ptr ? (b + local.code_191[1]) % 256 : b)] :
      local.code_191[0] == "-"
        ? [for i, b in local.iter_190.tape : (i == local.iter_190.tape_ptr ? (b - local.code_191[1] + 256) % 256 : b)] :
      local.code_191[0] == ","
        ? [for i, b in local.iter_190.tape : (i == local.iter_190.tape_ptr ? local.ascii_lookup[substr(local.input_191, 0, 1)] : b)]
        : local.iter_190.tape)

    tape_ptr = (
      local.code_191[0] == "<"
        ? local.iter_190.tape_ptr - local.code_191[1] :
      local.code_191[0] == ">"
        ? local.iter_190.tape_ptr + local.code_191[1]
        : local.iter_190.tape_ptr)

    code_ptr = 2 + (
      local.code_191[0] == "["
        ? local.iter_190.tape[local.iter_190.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_190.code_ptr)] : local.iter_190.code_ptr :
      local.code_191[0] == "]"
        ? local.iter_190.tape[local.iter_190.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_190.code_ptr)] : local.iter_190.code_ptr
        : local.iter_190.code_ptr)

    steps_taken = 1 + local.iter_190.steps_taken
  }
}

locals {
  code_192 = (try(local.iter_191.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_191.code_ptr, local.iter_191.code_ptr + 2)
    : [null])

  input_192 = (local.code_192[0] == ","
    ? substr(local.input_191, local.code_192[1], -1)
    : local.input_191)

  iter_192 = try(local.iter_191.code_ptr >= length(var.code), true) ? local.iter_191 : {
    output = (local.code_192[0] == "."
      ? "${local.iter_191.output}${join("", [for _ in range(local.code_192[1]) : jsondecode(format("\"\\u%04x\"", local.iter_191.tape[local.iter_191.tape_ptr]))])}"
      : local.iter_191.output)
    
    tape = (
      local.code_192[0] == "+"
        ? [for i, b in local.iter_191.tape : (i == local.iter_191.tape_ptr ? (b + local.code_192[1]) % 256 : b)] :
      local.code_192[0] == "-"
        ? [for i, b in local.iter_191.tape : (i == local.iter_191.tape_ptr ? (b - local.code_192[1] + 256) % 256 : b)] :
      local.code_192[0] == ","
        ? [for i, b in local.iter_191.tape : (i == local.iter_191.tape_ptr ? local.ascii_lookup[substr(local.input_192, 0, 1)] : b)]
        : local.iter_191.tape)

    tape_ptr = (
      local.code_192[0] == "<"
        ? local.iter_191.tape_ptr - local.code_192[1] :
      local.code_192[0] == ">"
        ? local.iter_191.tape_ptr + local.code_192[1]
        : local.iter_191.tape_ptr)

    code_ptr = 2 + (
      local.code_192[0] == "["
        ? local.iter_191.tape[local.iter_191.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_191.code_ptr)] : local.iter_191.code_ptr :
      local.code_192[0] == "]"
        ? local.iter_191.tape[local.iter_191.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_191.code_ptr)] : local.iter_191.code_ptr
        : local.iter_191.code_ptr)

    steps_taken = 1 + local.iter_191.steps_taken
  }
}

locals {
  code_193 = (try(local.iter_192.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_192.code_ptr, local.iter_192.code_ptr + 2)
    : [null])

  input_193 = (local.code_193[0] == ","
    ? substr(local.input_192, local.code_193[1], -1)
    : local.input_192)

  iter_193 = try(local.iter_192.code_ptr >= length(var.code), true) ? local.iter_192 : {
    output = (local.code_193[0] == "."
      ? "${local.iter_192.output}${join("", [for _ in range(local.code_193[1]) : jsondecode(format("\"\\u%04x\"", local.iter_192.tape[local.iter_192.tape_ptr]))])}"
      : local.iter_192.output)
    
    tape = (
      local.code_193[0] == "+"
        ? [for i, b in local.iter_192.tape : (i == local.iter_192.tape_ptr ? (b + local.code_193[1]) % 256 : b)] :
      local.code_193[0] == "-"
        ? [for i, b in local.iter_192.tape : (i == local.iter_192.tape_ptr ? (b - local.code_193[1] + 256) % 256 : b)] :
      local.code_193[0] == ","
        ? [for i, b in local.iter_192.tape : (i == local.iter_192.tape_ptr ? local.ascii_lookup[substr(local.input_193, 0, 1)] : b)]
        : local.iter_192.tape)

    tape_ptr = (
      local.code_193[0] == "<"
        ? local.iter_192.tape_ptr - local.code_193[1] :
      local.code_193[0] == ">"
        ? local.iter_192.tape_ptr + local.code_193[1]
        : local.iter_192.tape_ptr)

    code_ptr = 2 + (
      local.code_193[0] == "["
        ? local.iter_192.tape[local.iter_192.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_192.code_ptr)] : local.iter_192.code_ptr :
      local.code_193[0] == "]"
        ? local.iter_192.tape[local.iter_192.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_192.code_ptr)] : local.iter_192.code_ptr
        : local.iter_192.code_ptr)

    steps_taken = 1 + local.iter_192.steps_taken
  }
}

locals {
  code_194 = (try(local.iter_193.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_193.code_ptr, local.iter_193.code_ptr + 2)
    : [null])

  input_194 = (local.code_194[0] == ","
    ? substr(local.input_193, local.code_194[1], -1)
    : local.input_193)

  iter_194 = try(local.iter_193.code_ptr >= length(var.code), true) ? local.iter_193 : {
    output = (local.code_194[0] == "."
      ? "${local.iter_193.output}${join("", [for _ in range(local.code_194[1]) : jsondecode(format("\"\\u%04x\"", local.iter_193.tape[local.iter_193.tape_ptr]))])}"
      : local.iter_193.output)
    
    tape = (
      local.code_194[0] == "+"
        ? [for i, b in local.iter_193.tape : (i == local.iter_193.tape_ptr ? (b + local.code_194[1]) % 256 : b)] :
      local.code_194[0] == "-"
        ? [for i, b in local.iter_193.tape : (i == local.iter_193.tape_ptr ? (b - local.code_194[1] + 256) % 256 : b)] :
      local.code_194[0] == ","
        ? [for i, b in local.iter_193.tape : (i == local.iter_193.tape_ptr ? local.ascii_lookup[substr(local.input_194, 0, 1)] : b)]
        : local.iter_193.tape)

    tape_ptr = (
      local.code_194[0] == "<"
        ? local.iter_193.tape_ptr - local.code_194[1] :
      local.code_194[0] == ">"
        ? local.iter_193.tape_ptr + local.code_194[1]
        : local.iter_193.tape_ptr)

    code_ptr = 2 + (
      local.code_194[0] == "["
        ? local.iter_193.tape[local.iter_193.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_193.code_ptr)] : local.iter_193.code_ptr :
      local.code_194[0] == "]"
        ? local.iter_193.tape[local.iter_193.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_193.code_ptr)] : local.iter_193.code_ptr
        : local.iter_193.code_ptr)

    steps_taken = 1 + local.iter_193.steps_taken
  }
}

locals {
  code_195 = (try(local.iter_194.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_194.code_ptr, local.iter_194.code_ptr + 2)
    : [null])

  input_195 = (local.code_195[0] == ","
    ? substr(local.input_194, local.code_195[1], -1)
    : local.input_194)

  iter_195 = try(local.iter_194.code_ptr >= length(var.code), true) ? local.iter_194 : {
    output = (local.code_195[0] == "."
      ? "${local.iter_194.output}${join("", [for _ in range(local.code_195[1]) : jsondecode(format("\"\\u%04x\"", local.iter_194.tape[local.iter_194.tape_ptr]))])}"
      : local.iter_194.output)
    
    tape = (
      local.code_195[0] == "+"
        ? [for i, b in local.iter_194.tape : (i == local.iter_194.tape_ptr ? (b + local.code_195[1]) % 256 : b)] :
      local.code_195[0] == "-"
        ? [for i, b in local.iter_194.tape : (i == local.iter_194.tape_ptr ? (b - local.code_195[1] + 256) % 256 : b)] :
      local.code_195[0] == ","
        ? [for i, b in local.iter_194.tape : (i == local.iter_194.tape_ptr ? local.ascii_lookup[substr(local.input_195, 0, 1)] : b)]
        : local.iter_194.tape)

    tape_ptr = (
      local.code_195[0] == "<"
        ? local.iter_194.tape_ptr - local.code_195[1] :
      local.code_195[0] == ">"
        ? local.iter_194.tape_ptr + local.code_195[1]
        : local.iter_194.tape_ptr)

    code_ptr = 2 + (
      local.code_195[0] == "["
        ? local.iter_194.tape[local.iter_194.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_194.code_ptr)] : local.iter_194.code_ptr :
      local.code_195[0] == "]"
        ? local.iter_194.tape[local.iter_194.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_194.code_ptr)] : local.iter_194.code_ptr
        : local.iter_194.code_ptr)

    steps_taken = 1 + local.iter_194.steps_taken
  }
}

locals {
  code_196 = (try(local.iter_195.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_195.code_ptr, local.iter_195.code_ptr + 2)
    : [null])

  input_196 = (local.code_196[0] == ","
    ? substr(local.input_195, local.code_196[1], -1)
    : local.input_195)

  iter_196 = try(local.iter_195.code_ptr >= length(var.code), true) ? local.iter_195 : {
    output = (local.code_196[0] == "."
      ? "${local.iter_195.output}${join("", [for _ in range(local.code_196[1]) : jsondecode(format("\"\\u%04x\"", local.iter_195.tape[local.iter_195.tape_ptr]))])}"
      : local.iter_195.output)
    
    tape = (
      local.code_196[0] == "+"
        ? [for i, b in local.iter_195.tape : (i == local.iter_195.tape_ptr ? (b + local.code_196[1]) % 256 : b)] :
      local.code_196[0] == "-"
        ? [for i, b in local.iter_195.tape : (i == local.iter_195.tape_ptr ? (b - local.code_196[1] + 256) % 256 : b)] :
      local.code_196[0] == ","
        ? [for i, b in local.iter_195.tape : (i == local.iter_195.tape_ptr ? local.ascii_lookup[substr(local.input_196, 0, 1)] : b)]
        : local.iter_195.tape)

    tape_ptr = (
      local.code_196[0] == "<"
        ? local.iter_195.tape_ptr - local.code_196[1] :
      local.code_196[0] == ">"
        ? local.iter_195.tape_ptr + local.code_196[1]
        : local.iter_195.tape_ptr)

    code_ptr = 2 + (
      local.code_196[0] == "["
        ? local.iter_195.tape[local.iter_195.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_195.code_ptr)] : local.iter_195.code_ptr :
      local.code_196[0] == "]"
        ? local.iter_195.tape[local.iter_195.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_195.code_ptr)] : local.iter_195.code_ptr
        : local.iter_195.code_ptr)

    steps_taken = 1 + local.iter_195.steps_taken
  }
}

locals {
  code_197 = (try(local.iter_196.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_196.code_ptr, local.iter_196.code_ptr + 2)
    : [null])

  input_197 = (local.code_197[0] == ","
    ? substr(local.input_196, local.code_197[1], -1)
    : local.input_196)

  iter_197 = try(local.iter_196.code_ptr >= length(var.code), true) ? local.iter_196 : {
    output = (local.code_197[0] == "."
      ? "${local.iter_196.output}${join("", [for _ in range(local.code_197[1]) : jsondecode(format("\"\\u%04x\"", local.iter_196.tape[local.iter_196.tape_ptr]))])}"
      : local.iter_196.output)
    
    tape = (
      local.code_197[0] == "+"
        ? [for i, b in local.iter_196.tape : (i == local.iter_196.tape_ptr ? (b + local.code_197[1]) % 256 : b)] :
      local.code_197[0] == "-"
        ? [for i, b in local.iter_196.tape : (i == local.iter_196.tape_ptr ? (b - local.code_197[1] + 256) % 256 : b)] :
      local.code_197[0] == ","
        ? [for i, b in local.iter_196.tape : (i == local.iter_196.tape_ptr ? local.ascii_lookup[substr(local.input_197, 0, 1)] : b)]
        : local.iter_196.tape)

    tape_ptr = (
      local.code_197[0] == "<"
        ? local.iter_196.tape_ptr - local.code_197[1] :
      local.code_197[0] == ">"
        ? local.iter_196.tape_ptr + local.code_197[1]
        : local.iter_196.tape_ptr)

    code_ptr = 2 + (
      local.code_197[0] == "["
        ? local.iter_196.tape[local.iter_196.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_196.code_ptr)] : local.iter_196.code_ptr :
      local.code_197[0] == "]"
        ? local.iter_196.tape[local.iter_196.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_196.code_ptr)] : local.iter_196.code_ptr
        : local.iter_196.code_ptr)

    steps_taken = 1 + local.iter_196.steps_taken
  }
}

locals {
  code_198 = (try(local.iter_197.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_197.code_ptr, local.iter_197.code_ptr + 2)
    : [null])

  input_198 = (local.code_198[0] == ","
    ? substr(local.input_197, local.code_198[1], -1)
    : local.input_197)

  iter_198 = try(local.iter_197.code_ptr >= length(var.code), true) ? local.iter_197 : {
    output = (local.code_198[0] == "."
      ? "${local.iter_197.output}${join("", [for _ in range(local.code_198[1]) : jsondecode(format("\"\\u%04x\"", local.iter_197.tape[local.iter_197.tape_ptr]))])}"
      : local.iter_197.output)
    
    tape = (
      local.code_198[0] == "+"
        ? [for i, b in local.iter_197.tape : (i == local.iter_197.tape_ptr ? (b + local.code_198[1]) % 256 : b)] :
      local.code_198[0] == "-"
        ? [for i, b in local.iter_197.tape : (i == local.iter_197.tape_ptr ? (b - local.code_198[1] + 256) % 256 : b)] :
      local.code_198[0] == ","
        ? [for i, b in local.iter_197.tape : (i == local.iter_197.tape_ptr ? local.ascii_lookup[substr(local.input_198, 0, 1)] : b)]
        : local.iter_197.tape)

    tape_ptr = (
      local.code_198[0] == "<"
        ? local.iter_197.tape_ptr - local.code_198[1] :
      local.code_198[0] == ">"
        ? local.iter_197.tape_ptr + local.code_198[1]
        : local.iter_197.tape_ptr)

    code_ptr = 2 + (
      local.code_198[0] == "["
        ? local.iter_197.tape[local.iter_197.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_197.code_ptr)] : local.iter_197.code_ptr :
      local.code_198[0] == "]"
        ? local.iter_197.tape[local.iter_197.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_197.code_ptr)] : local.iter_197.code_ptr
        : local.iter_197.code_ptr)

    steps_taken = 1 + local.iter_197.steps_taken
  }
}

locals {
  code_199 = (try(local.iter_198.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_198.code_ptr, local.iter_198.code_ptr + 2)
    : [null])

  input_199 = (local.code_199[0] == ","
    ? substr(local.input_198, local.code_199[1], -1)
    : local.input_198)

  iter_199 = try(local.iter_198.code_ptr >= length(var.code), true) ? local.iter_198 : {
    output = (local.code_199[0] == "."
      ? "${local.iter_198.output}${join("", [for _ in range(local.code_199[1]) : jsondecode(format("\"\\u%04x\"", local.iter_198.tape[local.iter_198.tape_ptr]))])}"
      : local.iter_198.output)
    
    tape = (
      local.code_199[0] == "+"
        ? [for i, b in local.iter_198.tape : (i == local.iter_198.tape_ptr ? (b + local.code_199[1]) % 256 : b)] :
      local.code_199[0] == "-"
        ? [for i, b in local.iter_198.tape : (i == local.iter_198.tape_ptr ? (b - local.code_199[1] + 256) % 256 : b)] :
      local.code_199[0] == ","
        ? [for i, b in local.iter_198.tape : (i == local.iter_198.tape_ptr ? local.ascii_lookup[substr(local.input_199, 0, 1)] : b)]
        : local.iter_198.tape)

    tape_ptr = (
      local.code_199[0] == "<"
        ? local.iter_198.tape_ptr - local.code_199[1] :
      local.code_199[0] == ">"
        ? local.iter_198.tape_ptr + local.code_199[1]
        : local.iter_198.tape_ptr)

    code_ptr = 2 + (
      local.code_199[0] == "["
        ? local.iter_198.tape[local.iter_198.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_198.code_ptr)] : local.iter_198.code_ptr :
      local.code_199[0] == "]"
        ? local.iter_198.tape[local.iter_198.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_198.code_ptr)] : local.iter_198.code_ptr
        : local.iter_198.code_ptr)

    steps_taken = 1 + local.iter_198.steps_taken
  }
}

locals {
  code_200 = (try(local.iter_199.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_199.code_ptr, local.iter_199.code_ptr + 2)
    : [null])

  input_200 = (local.code_200[0] == ","
    ? substr(local.input_199, local.code_200[1], -1)
    : local.input_199)

  iter_200 = try(local.iter_199.code_ptr >= length(var.code), true) ? local.iter_199 : {
    output = (local.code_200[0] == "."
      ? "${local.iter_199.output}${join("", [for _ in range(local.code_200[1]) : jsondecode(format("\"\\u%04x\"", local.iter_199.tape[local.iter_199.tape_ptr]))])}"
      : local.iter_199.output)
    
    tape = (
      local.code_200[0] == "+"
        ? [for i, b in local.iter_199.tape : (i == local.iter_199.tape_ptr ? (b + local.code_200[1]) % 256 : b)] :
      local.code_200[0] == "-"
        ? [for i, b in local.iter_199.tape : (i == local.iter_199.tape_ptr ? (b - local.code_200[1] + 256) % 256 : b)] :
      local.code_200[0] == ","
        ? [for i, b in local.iter_199.tape : (i == local.iter_199.tape_ptr ? local.ascii_lookup[substr(local.input_200, 0, 1)] : b)]
        : local.iter_199.tape)

    tape_ptr = (
      local.code_200[0] == "<"
        ? local.iter_199.tape_ptr - local.code_200[1] :
      local.code_200[0] == ">"
        ? local.iter_199.tape_ptr + local.code_200[1]
        : local.iter_199.tape_ptr)

    code_ptr = 2 + (
      local.code_200[0] == "["
        ? local.iter_199.tape[local.iter_199.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_199.code_ptr)] : local.iter_199.code_ptr :
      local.code_200[0] == "]"
        ? local.iter_199.tape[local.iter_199.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_199.code_ptr)] : local.iter_199.code_ptr
        : local.iter_199.code_ptr)

    steps_taken = 1 + local.iter_199.steps_taken
  }
}

locals {
  code_201 = (try(local.iter_200.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_200.code_ptr, local.iter_200.code_ptr + 2)
    : [null])

  input_201 = (local.code_201[0] == ","
    ? substr(local.input_200, local.code_201[1], -1)
    : local.input_200)

  iter_201 = try(local.iter_200.code_ptr >= length(var.code), true) ? local.iter_200 : {
    output = (local.code_201[0] == "."
      ? "${local.iter_200.output}${join("", [for _ in range(local.code_201[1]) : jsondecode(format("\"\\u%04x\"", local.iter_200.tape[local.iter_200.tape_ptr]))])}"
      : local.iter_200.output)
    
    tape = (
      local.code_201[0] == "+"
        ? [for i, b in local.iter_200.tape : (i == local.iter_200.tape_ptr ? (b + local.code_201[1]) % 256 : b)] :
      local.code_201[0] == "-"
        ? [for i, b in local.iter_200.tape : (i == local.iter_200.tape_ptr ? (b - local.code_201[1] + 256) % 256 : b)] :
      local.code_201[0] == ","
        ? [for i, b in local.iter_200.tape : (i == local.iter_200.tape_ptr ? local.ascii_lookup[substr(local.input_201, 0, 1)] : b)]
        : local.iter_200.tape)

    tape_ptr = (
      local.code_201[0] == "<"
        ? local.iter_200.tape_ptr - local.code_201[1] :
      local.code_201[0] == ">"
        ? local.iter_200.tape_ptr + local.code_201[1]
        : local.iter_200.tape_ptr)

    code_ptr = 2 + (
      local.code_201[0] == "["
        ? local.iter_200.tape[local.iter_200.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_200.code_ptr)] : local.iter_200.code_ptr :
      local.code_201[0] == "]"
        ? local.iter_200.tape[local.iter_200.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_200.code_ptr)] : local.iter_200.code_ptr
        : local.iter_200.code_ptr)

    steps_taken = 1 + local.iter_200.steps_taken
  }
}

locals {
  code_202 = (try(local.iter_201.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_201.code_ptr, local.iter_201.code_ptr + 2)
    : [null])

  input_202 = (local.code_202[0] == ","
    ? substr(local.input_201, local.code_202[1], -1)
    : local.input_201)

  iter_202 = try(local.iter_201.code_ptr >= length(var.code), true) ? local.iter_201 : {
    output = (local.code_202[0] == "."
      ? "${local.iter_201.output}${join("", [for _ in range(local.code_202[1]) : jsondecode(format("\"\\u%04x\"", local.iter_201.tape[local.iter_201.tape_ptr]))])}"
      : local.iter_201.output)
    
    tape = (
      local.code_202[0] == "+"
        ? [for i, b in local.iter_201.tape : (i == local.iter_201.tape_ptr ? (b + local.code_202[1]) % 256 : b)] :
      local.code_202[0] == "-"
        ? [for i, b in local.iter_201.tape : (i == local.iter_201.tape_ptr ? (b - local.code_202[1] + 256) % 256 : b)] :
      local.code_202[0] == ","
        ? [for i, b in local.iter_201.tape : (i == local.iter_201.tape_ptr ? local.ascii_lookup[substr(local.input_202, 0, 1)] : b)]
        : local.iter_201.tape)

    tape_ptr = (
      local.code_202[0] == "<"
        ? local.iter_201.tape_ptr - local.code_202[1] :
      local.code_202[0] == ">"
        ? local.iter_201.tape_ptr + local.code_202[1]
        : local.iter_201.tape_ptr)

    code_ptr = 2 + (
      local.code_202[0] == "["
        ? local.iter_201.tape[local.iter_201.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_201.code_ptr)] : local.iter_201.code_ptr :
      local.code_202[0] == "]"
        ? local.iter_201.tape[local.iter_201.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_201.code_ptr)] : local.iter_201.code_ptr
        : local.iter_201.code_ptr)

    steps_taken = 1 + local.iter_201.steps_taken
  }
}

locals {
  code_203 = (try(local.iter_202.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_202.code_ptr, local.iter_202.code_ptr + 2)
    : [null])

  input_203 = (local.code_203[0] == ","
    ? substr(local.input_202, local.code_203[1], -1)
    : local.input_202)

  iter_203 = try(local.iter_202.code_ptr >= length(var.code), true) ? local.iter_202 : {
    output = (local.code_203[0] == "."
      ? "${local.iter_202.output}${join("", [for _ in range(local.code_203[1]) : jsondecode(format("\"\\u%04x\"", local.iter_202.tape[local.iter_202.tape_ptr]))])}"
      : local.iter_202.output)
    
    tape = (
      local.code_203[0] == "+"
        ? [for i, b in local.iter_202.tape : (i == local.iter_202.tape_ptr ? (b + local.code_203[1]) % 256 : b)] :
      local.code_203[0] == "-"
        ? [for i, b in local.iter_202.tape : (i == local.iter_202.tape_ptr ? (b - local.code_203[1] + 256) % 256 : b)] :
      local.code_203[0] == ","
        ? [for i, b in local.iter_202.tape : (i == local.iter_202.tape_ptr ? local.ascii_lookup[substr(local.input_203, 0, 1)] : b)]
        : local.iter_202.tape)

    tape_ptr = (
      local.code_203[0] == "<"
        ? local.iter_202.tape_ptr - local.code_203[1] :
      local.code_203[0] == ">"
        ? local.iter_202.tape_ptr + local.code_203[1]
        : local.iter_202.tape_ptr)

    code_ptr = 2 + (
      local.code_203[0] == "["
        ? local.iter_202.tape[local.iter_202.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_202.code_ptr)] : local.iter_202.code_ptr :
      local.code_203[0] == "]"
        ? local.iter_202.tape[local.iter_202.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_202.code_ptr)] : local.iter_202.code_ptr
        : local.iter_202.code_ptr)

    steps_taken = 1 + local.iter_202.steps_taken
  }
}

locals {
  code_204 = (try(local.iter_203.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_203.code_ptr, local.iter_203.code_ptr + 2)
    : [null])

  input_204 = (local.code_204[0] == ","
    ? substr(local.input_203, local.code_204[1], -1)
    : local.input_203)

  iter_204 = try(local.iter_203.code_ptr >= length(var.code), true) ? local.iter_203 : {
    output = (local.code_204[0] == "."
      ? "${local.iter_203.output}${join("", [for _ in range(local.code_204[1]) : jsondecode(format("\"\\u%04x\"", local.iter_203.tape[local.iter_203.tape_ptr]))])}"
      : local.iter_203.output)
    
    tape = (
      local.code_204[0] == "+"
        ? [for i, b in local.iter_203.tape : (i == local.iter_203.tape_ptr ? (b + local.code_204[1]) % 256 : b)] :
      local.code_204[0] == "-"
        ? [for i, b in local.iter_203.tape : (i == local.iter_203.tape_ptr ? (b - local.code_204[1] + 256) % 256 : b)] :
      local.code_204[0] == ","
        ? [for i, b in local.iter_203.tape : (i == local.iter_203.tape_ptr ? local.ascii_lookup[substr(local.input_204, 0, 1)] : b)]
        : local.iter_203.tape)

    tape_ptr = (
      local.code_204[0] == "<"
        ? local.iter_203.tape_ptr - local.code_204[1] :
      local.code_204[0] == ">"
        ? local.iter_203.tape_ptr + local.code_204[1]
        : local.iter_203.tape_ptr)

    code_ptr = 2 + (
      local.code_204[0] == "["
        ? local.iter_203.tape[local.iter_203.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_203.code_ptr)] : local.iter_203.code_ptr :
      local.code_204[0] == "]"
        ? local.iter_203.tape[local.iter_203.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_203.code_ptr)] : local.iter_203.code_ptr
        : local.iter_203.code_ptr)

    steps_taken = 1 + local.iter_203.steps_taken
  }
}

locals {
  code_205 = (try(local.iter_204.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_204.code_ptr, local.iter_204.code_ptr + 2)
    : [null])

  input_205 = (local.code_205[0] == ","
    ? substr(local.input_204, local.code_205[1], -1)
    : local.input_204)

  iter_205 = try(local.iter_204.code_ptr >= length(var.code), true) ? local.iter_204 : {
    output = (local.code_205[0] == "."
      ? "${local.iter_204.output}${join("", [for _ in range(local.code_205[1]) : jsondecode(format("\"\\u%04x\"", local.iter_204.tape[local.iter_204.tape_ptr]))])}"
      : local.iter_204.output)
    
    tape = (
      local.code_205[0] == "+"
        ? [for i, b in local.iter_204.tape : (i == local.iter_204.tape_ptr ? (b + local.code_205[1]) % 256 : b)] :
      local.code_205[0] == "-"
        ? [for i, b in local.iter_204.tape : (i == local.iter_204.tape_ptr ? (b - local.code_205[1] + 256) % 256 : b)] :
      local.code_205[0] == ","
        ? [for i, b in local.iter_204.tape : (i == local.iter_204.tape_ptr ? local.ascii_lookup[substr(local.input_205, 0, 1)] : b)]
        : local.iter_204.tape)

    tape_ptr = (
      local.code_205[0] == "<"
        ? local.iter_204.tape_ptr - local.code_205[1] :
      local.code_205[0] == ">"
        ? local.iter_204.tape_ptr + local.code_205[1]
        : local.iter_204.tape_ptr)

    code_ptr = 2 + (
      local.code_205[0] == "["
        ? local.iter_204.tape[local.iter_204.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_204.code_ptr)] : local.iter_204.code_ptr :
      local.code_205[0] == "]"
        ? local.iter_204.tape[local.iter_204.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_204.code_ptr)] : local.iter_204.code_ptr
        : local.iter_204.code_ptr)

    steps_taken = 1 + local.iter_204.steps_taken
  }
}

locals {
  code_206 = (try(local.iter_205.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_205.code_ptr, local.iter_205.code_ptr + 2)
    : [null])

  input_206 = (local.code_206[0] == ","
    ? substr(local.input_205, local.code_206[1], -1)
    : local.input_205)

  iter_206 = try(local.iter_205.code_ptr >= length(var.code), true) ? local.iter_205 : {
    output = (local.code_206[0] == "."
      ? "${local.iter_205.output}${join("", [for _ in range(local.code_206[1]) : jsondecode(format("\"\\u%04x\"", local.iter_205.tape[local.iter_205.tape_ptr]))])}"
      : local.iter_205.output)
    
    tape = (
      local.code_206[0] == "+"
        ? [for i, b in local.iter_205.tape : (i == local.iter_205.tape_ptr ? (b + local.code_206[1]) % 256 : b)] :
      local.code_206[0] == "-"
        ? [for i, b in local.iter_205.tape : (i == local.iter_205.tape_ptr ? (b - local.code_206[1] + 256) % 256 : b)] :
      local.code_206[0] == ","
        ? [for i, b in local.iter_205.tape : (i == local.iter_205.tape_ptr ? local.ascii_lookup[substr(local.input_206, 0, 1)] : b)]
        : local.iter_205.tape)

    tape_ptr = (
      local.code_206[0] == "<"
        ? local.iter_205.tape_ptr - local.code_206[1] :
      local.code_206[0] == ">"
        ? local.iter_205.tape_ptr + local.code_206[1]
        : local.iter_205.tape_ptr)

    code_ptr = 2 + (
      local.code_206[0] == "["
        ? local.iter_205.tape[local.iter_205.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_205.code_ptr)] : local.iter_205.code_ptr :
      local.code_206[0] == "]"
        ? local.iter_205.tape[local.iter_205.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_205.code_ptr)] : local.iter_205.code_ptr
        : local.iter_205.code_ptr)

    steps_taken = 1 + local.iter_205.steps_taken
  }
}

locals {
  code_207 = (try(local.iter_206.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_206.code_ptr, local.iter_206.code_ptr + 2)
    : [null])

  input_207 = (local.code_207[0] == ","
    ? substr(local.input_206, local.code_207[1], -1)
    : local.input_206)

  iter_207 = try(local.iter_206.code_ptr >= length(var.code), true) ? local.iter_206 : {
    output = (local.code_207[0] == "."
      ? "${local.iter_206.output}${join("", [for _ in range(local.code_207[1]) : jsondecode(format("\"\\u%04x\"", local.iter_206.tape[local.iter_206.tape_ptr]))])}"
      : local.iter_206.output)
    
    tape = (
      local.code_207[0] == "+"
        ? [for i, b in local.iter_206.tape : (i == local.iter_206.tape_ptr ? (b + local.code_207[1]) % 256 : b)] :
      local.code_207[0] == "-"
        ? [for i, b in local.iter_206.tape : (i == local.iter_206.tape_ptr ? (b - local.code_207[1] + 256) % 256 : b)] :
      local.code_207[0] == ","
        ? [for i, b in local.iter_206.tape : (i == local.iter_206.tape_ptr ? local.ascii_lookup[substr(local.input_207, 0, 1)] : b)]
        : local.iter_206.tape)

    tape_ptr = (
      local.code_207[0] == "<"
        ? local.iter_206.tape_ptr - local.code_207[1] :
      local.code_207[0] == ">"
        ? local.iter_206.tape_ptr + local.code_207[1]
        : local.iter_206.tape_ptr)

    code_ptr = 2 + (
      local.code_207[0] == "["
        ? local.iter_206.tape[local.iter_206.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_206.code_ptr)] : local.iter_206.code_ptr :
      local.code_207[0] == "]"
        ? local.iter_206.tape[local.iter_206.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_206.code_ptr)] : local.iter_206.code_ptr
        : local.iter_206.code_ptr)

    steps_taken = 1 + local.iter_206.steps_taken
  }
}

locals {
  code_208 = (try(local.iter_207.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_207.code_ptr, local.iter_207.code_ptr + 2)
    : [null])

  input_208 = (local.code_208[0] == ","
    ? substr(local.input_207, local.code_208[1], -1)
    : local.input_207)

  iter_208 = try(local.iter_207.code_ptr >= length(var.code), true) ? local.iter_207 : {
    output = (local.code_208[0] == "."
      ? "${local.iter_207.output}${join("", [for _ in range(local.code_208[1]) : jsondecode(format("\"\\u%04x\"", local.iter_207.tape[local.iter_207.tape_ptr]))])}"
      : local.iter_207.output)
    
    tape = (
      local.code_208[0] == "+"
        ? [for i, b in local.iter_207.tape : (i == local.iter_207.tape_ptr ? (b + local.code_208[1]) % 256 : b)] :
      local.code_208[0] == "-"
        ? [for i, b in local.iter_207.tape : (i == local.iter_207.tape_ptr ? (b - local.code_208[1] + 256) % 256 : b)] :
      local.code_208[0] == ","
        ? [for i, b in local.iter_207.tape : (i == local.iter_207.tape_ptr ? local.ascii_lookup[substr(local.input_208, 0, 1)] : b)]
        : local.iter_207.tape)

    tape_ptr = (
      local.code_208[0] == "<"
        ? local.iter_207.tape_ptr - local.code_208[1] :
      local.code_208[0] == ">"
        ? local.iter_207.tape_ptr + local.code_208[1]
        : local.iter_207.tape_ptr)

    code_ptr = 2 + (
      local.code_208[0] == "["
        ? local.iter_207.tape[local.iter_207.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_207.code_ptr)] : local.iter_207.code_ptr :
      local.code_208[0] == "]"
        ? local.iter_207.tape[local.iter_207.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_207.code_ptr)] : local.iter_207.code_ptr
        : local.iter_207.code_ptr)

    steps_taken = 1 + local.iter_207.steps_taken
  }
}

locals {
  code_209 = (try(local.iter_208.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_208.code_ptr, local.iter_208.code_ptr + 2)
    : [null])

  input_209 = (local.code_209[0] == ","
    ? substr(local.input_208, local.code_209[1], -1)
    : local.input_208)

  iter_209 = try(local.iter_208.code_ptr >= length(var.code), true) ? local.iter_208 : {
    output = (local.code_209[0] == "."
      ? "${local.iter_208.output}${join("", [for _ in range(local.code_209[1]) : jsondecode(format("\"\\u%04x\"", local.iter_208.tape[local.iter_208.tape_ptr]))])}"
      : local.iter_208.output)
    
    tape = (
      local.code_209[0] == "+"
        ? [for i, b in local.iter_208.tape : (i == local.iter_208.tape_ptr ? (b + local.code_209[1]) % 256 : b)] :
      local.code_209[0] == "-"
        ? [for i, b in local.iter_208.tape : (i == local.iter_208.tape_ptr ? (b - local.code_209[1] + 256) % 256 : b)] :
      local.code_209[0] == ","
        ? [for i, b in local.iter_208.tape : (i == local.iter_208.tape_ptr ? local.ascii_lookup[substr(local.input_209, 0, 1)] : b)]
        : local.iter_208.tape)

    tape_ptr = (
      local.code_209[0] == "<"
        ? local.iter_208.tape_ptr - local.code_209[1] :
      local.code_209[0] == ">"
        ? local.iter_208.tape_ptr + local.code_209[1]
        : local.iter_208.tape_ptr)

    code_ptr = 2 + (
      local.code_209[0] == "["
        ? local.iter_208.tape[local.iter_208.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_208.code_ptr)] : local.iter_208.code_ptr :
      local.code_209[0] == "]"
        ? local.iter_208.tape[local.iter_208.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_208.code_ptr)] : local.iter_208.code_ptr
        : local.iter_208.code_ptr)

    steps_taken = 1 + local.iter_208.steps_taken
  }
}

locals {
  code_210 = (try(local.iter_209.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_209.code_ptr, local.iter_209.code_ptr + 2)
    : [null])

  input_210 = (local.code_210[0] == ","
    ? substr(local.input_209, local.code_210[1], -1)
    : local.input_209)

  iter_210 = try(local.iter_209.code_ptr >= length(var.code), true) ? local.iter_209 : {
    output = (local.code_210[0] == "."
      ? "${local.iter_209.output}${join("", [for _ in range(local.code_210[1]) : jsondecode(format("\"\\u%04x\"", local.iter_209.tape[local.iter_209.tape_ptr]))])}"
      : local.iter_209.output)
    
    tape = (
      local.code_210[0] == "+"
        ? [for i, b in local.iter_209.tape : (i == local.iter_209.tape_ptr ? (b + local.code_210[1]) % 256 : b)] :
      local.code_210[0] == "-"
        ? [for i, b in local.iter_209.tape : (i == local.iter_209.tape_ptr ? (b - local.code_210[1] + 256) % 256 : b)] :
      local.code_210[0] == ","
        ? [for i, b in local.iter_209.tape : (i == local.iter_209.tape_ptr ? local.ascii_lookup[substr(local.input_210, 0, 1)] : b)]
        : local.iter_209.tape)

    tape_ptr = (
      local.code_210[0] == "<"
        ? local.iter_209.tape_ptr - local.code_210[1] :
      local.code_210[0] == ">"
        ? local.iter_209.tape_ptr + local.code_210[1]
        : local.iter_209.tape_ptr)

    code_ptr = 2 + (
      local.code_210[0] == "["
        ? local.iter_209.tape[local.iter_209.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_209.code_ptr)] : local.iter_209.code_ptr :
      local.code_210[0] == "]"
        ? local.iter_209.tape[local.iter_209.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_209.code_ptr)] : local.iter_209.code_ptr
        : local.iter_209.code_ptr)

    steps_taken = 1 + local.iter_209.steps_taken
  }
}

locals {
  code_211 = (try(local.iter_210.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_210.code_ptr, local.iter_210.code_ptr + 2)
    : [null])

  input_211 = (local.code_211[0] == ","
    ? substr(local.input_210, local.code_211[1], -1)
    : local.input_210)

  iter_211 = try(local.iter_210.code_ptr >= length(var.code), true) ? local.iter_210 : {
    output = (local.code_211[0] == "."
      ? "${local.iter_210.output}${join("", [for _ in range(local.code_211[1]) : jsondecode(format("\"\\u%04x\"", local.iter_210.tape[local.iter_210.tape_ptr]))])}"
      : local.iter_210.output)
    
    tape = (
      local.code_211[0] == "+"
        ? [for i, b in local.iter_210.tape : (i == local.iter_210.tape_ptr ? (b + local.code_211[1]) % 256 : b)] :
      local.code_211[0] == "-"
        ? [for i, b in local.iter_210.tape : (i == local.iter_210.tape_ptr ? (b - local.code_211[1] + 256) % 256 : b)] :
      local.code_211[0] == ","
        ? [for i, b in local.iter_210.tape : (i == local.iter_210.tape_ptr ? local.ascii_lookup[substr(local.input_211, 0, 1)] : b)]
        : local.iter_210.tape)

    tape_ptr = (
      local.code_211[0] == "<"
        ? local.iter_210.tape_ptr - local.code_211[1] :
      local.code_211[0] == ">"
        ? local.iter_210.tape_ptr + local.code_211[1]
        : local.iter_210.tape_ptr)

    code_ptr = 2 + (
      local.code_211[0] == "["
        ? local.iter_210.tape[local.iter_210.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_210.code_ptr)] : local.iter_210.code_ptr :
      local.code_211[0] == "]"
        ? local.iter_210.tape[local.iter_210.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_210.code_ptr)] : local.iter_210.code_ptr
        : local.iter_210.code_ptr)

    steps_taken = 1 + local.iter_210.steps_taken
  }
}

locals {
  code_212 = (try(local.iter_211.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_211.code_ptr, local.iter_211.code_ptr + 2)
    : [null])

  input_212 = (local.code_212[0] == ","
    ? substr(local.input_211, local.code_212[1], -1)
    : local.input_211)

  iter_212 = try(local.iter_211.code_ptr >= length(var.code), true) ? local.iter_211 : {
    output = (local.code_212[0] == "."
      ? "${local.iter_211.output}${join("", [for _ in range(local.code_212[1]) : jsondecode(format("\"\\u%04x\"", local.iter_211.tape[local.iter_211.tape_ptr]))])}"
      : local.iter_211.output)
    
    tape = (
      local.code_212[0] == "+"
        ? [for i, b in local.iter_211.tape : (i == local.iter_211.tape_ptr ? (b + local.code_212[1]) % 256 : b)] :
      local.code_212[0] == "-"
        ? [for i, b in local.iter_211.tape : (i == local.iter_211.tape_ptr ? (b - local.code_212[1] + 256) % 256 : b)] :
      local.code_212[0] == ","
        ? [for i, b in local.iter_211.tape : (i == local.iter_211.tape_ptr ? local.ascii_lookup[substr(local.input_212, 0, 1)] : b)]
        : local.iter_211.tape)

    tape_ptr = (
      local.code_212[0] == "<"
        ? local.iter_211.tape_ptr - local.code_212[1] :
      local.code_212[0] == ">"
        ? local.iter_211.tape_ptr + local.code_212[1]
        : local.iter_211.tape_ptr)

    code_ptr = 2 + (
      local.code_212[0] == "["
        ? local.iter_211.tape[local.iter_211.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_211.code_ptr)] : local.iter_211.code_ptr :
      local.code_212[0] == "]"
        ? local.iter_211.tape[local.iter_211.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_211.code_ptr)] : local.iter_211.code_ptr
        : local.iter_211.code_ptr)

    steps_taken = 1 + local.iter_211.steps_taken
  }
}

locals {
  code_213 = (try(local.iter_212.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_212.code_ptr, local.iter_212.code_ptr + 2)
    : [null])

  input_213 = (local.code_213[0] == ","
    ? substr(local.input_212, local.code_213[1], -1)
    : local.input_212)

  iter_213 = try(local.iter_212.code_ptr >= length(var.code), true) ? local.iter_212 : {
    output = (local.code_213[0] == "."
      ? "${local.iter_212.output}${join("", [for _ in range(local.code_213[1]) : jsondecode(format("\"\\u%04x\"", local.iter_212.tape[local.iter_212.tape_ptr]))])}"
      : local.iter_212.output)
    
    tape = (
      local.code_213[0] == "+"
        ? [for i, b in local.iter_212.tape : (i == local.iter_212.tape_ptr ? (b + local.code_213[1]) % 256 : b)] :
      local.code_213[0] == "-"
        ? [for i, b in local.iter_212.tape : (i == local.iter_212.tape_ptr ? (b - local.code_213[1] + 256) % 256 : b)] :
      local.code_213[0] == ","
        ? [for i, b in local.iter_212.tape : (i == local.iter_212.tape_ptr ? local.ascii_lookup[substr(local.input_213, 0, 1)] : b)]
        : local.iter_212.tape)

    tape_ptr = (
      local.code_213[0] == "<"
        ? local.iter_212.tape_ptr - local.code_213[1] :
      local.code_213[0] == ">"
        ? local.iter_212.tape_ptr + local.code_213[1]
        : local.iter_212.tape_ptr)

    code_ptr = 2 + (
      local.code_213[0] == "["
        ? local.iter_212.tape[local.iter_212.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_212.code_ptr)] : local.iter_212.code_ptr :
      local.code_213[0] == "]"
        ? local.iter_212.tape[local.iter_212.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_212.code_ptr)] : local.iter_212.code_ptr
        : local.iter_212.code_ptr)

    steps_taken = 1 + local.iter_212.steps_taken
  }
}

locals {
  code_214 = (try(local.iter_213.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_213.code_ptr, local.iter_213.code_ptr + 2)
    : [null])

  input_214 = (local.code_214[0] == ","
    ? substr(local.input_213, local.code_214[1], -1)
    : local.input_213)

  iter_214 = try(local.iter_213.code_ptr >= length(var.code), true) ? local.iter_213 : {
    output = (local.code_214[0] == "."
      ? "${local.iter_213.output}${join("", [for _ in range(local.code_214[1]) : jsondecode(format("\"\\u%04x\"", local.iter_213.tape[local.iter_213.tape_ptr]))])}"
      : local.iter_213.output)
    
    tape = (
      local.code_214[0] == "+"
        ? [for i, b in local.iter_213.tape : (i == local.iter_213.tape_ptr ? (b + local.code_214[1]) % 256 : b)] :
      local.code_214[0] == "-"
        ? [for i, b in local.iter_213.tape : (i == local.iter_213.tape_ptr ? (b - local.code_214[1] + 256) % 256 : b)] :
      local.code_214[0] == ","
        ? [for i, b in local.iter_213.tape : (i == local.iter_213.tape_ptr ? local.ascii_lookup[substr(local.input_214, 0, 1)] : b)]
        : local.iter_213.tape)

    tape_ptr = (
      local.code_214[0] == "<"
        ? local.iter_213.tape_ptr - local.code_214[1] :
      local.code_214[0] == ">"
        ? local.iter_213.tape_ptr + local.code_214[1]
        : local.iter_213.tape_ptr)

    code_ptr = 2 + (
      local.code_214[0] == "["
        ? local.iter_213.tape[local.iter_213.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_213.code_ptr)] : local.iter_213.code_ptr :
      local.code_214[0] == "]"
        ? local.iter_213.tape[local.iter_213.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_213.code_ptr)] : local.iter_213.code_ptr
        : local.iter_213.code_ptr)

    steps_taken = 1 + local.iter_213.steps_taken
  }
}

locals {
  code_215 = (try(local.iter_214.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_214.code_ptr, local.iter_214.code_ptr + 2)
    : [null])

  input_215 = (local.code_215[0] == ","
    ? substr(local.input_214, local.code_215[1], -1)
    : local.input_214)

  iter_215 = try(local.iter_214.code_ptr >= length(var.code), true) ? local.iter_214 : {
    output = (local.code_215[0] == "."
      ? "${local.iter_214.output}${join("", [for _ in range(local.code_215[1]) : jsondecode(format("\"\\u%04x\"", local.iter_214.tape[local.iter_214.tape_ptr]))])}"
      : local.iter_214.output)
    
    tape = (
      local.code_215[0] == "+"
        ? [for i, b in local.iter_214.tape : (i == local.iter_214.tape_ptr ? (b + local.code_215[1]) % 256 : b)] :
      local.code_215[0] == "-"
        ? [for i, b in local.iter_214.tape : (i == local.iter_214.tape_ptr ? (b - local.code_215[1] + 256) % 256 : b)] :
      local.code_215[0] == ","
        ? [for i, b in local.iter_214.tape : (i == local.iter_214.tape_ptr ? local.ascii_lookup[substr(local.input_215, 0, 1)] : b)]
        : local.iter_214.tape)

    tape_ptr = (
      local.code_215[0] == "<"
        ? local.iter_214.tape_ptr - local.code_215[1] :
      local.code_215[0] == ">"
        ? local.iter_214.tape_ptr + local.code_215[1]
        : local.iter_214.tape_ptr)

    code_ptr = 2 + (
      local.code_215[0] == "["
        ? local.iter_214.tape[local.iter_214.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_214.code_ptr)] : local.iter_214.code_ptr :
      local.code_215[0] == "]"
        ? local.iter_214.tape[local.iter_214.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_214.code_ptr)] : local.iter_214.code_ptr
        : local.iter_214.code_ptr)

    steps_taken = 1 + local.iter_214.steps_taken
  }
}

locals {
  code_216 = (try(local.iter_215.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_215.code_ptr, local.iter_215.code_ptr + 2)
    : [null])

  input_216 = (local.code_216[0] == ","
    ? substr(local.input_215, local.code_216[1], -1)
    : local.input_215)

  iter_216 = try(local.iter_215.code_ptr >= length(var.code), true) ? local.iter_215 : {
    output = (local.code_216[0] == "."
      ? "${local.iter_215.output}${join("", [for _ in range(local.code_216[1]) : jsondecode(format("\"\\u%04x\"", local.iter_215.tape[local.iter_215.tape_ptr]))])}"
      : local.iter_215.output)
    
    tape = (
      local.code_216[0] == "+"
        ? [for i, b in local.iter_215.tape : (i == local.iter_215.tape_ptr ? (b + local.code_216[1]) % 256 : b)] :
      local.code_216[0] == "-"
        ? [for i, b in local.iter_215.tape : (i == local.iter_215.tape_ptr ? (b - local.code_216[1] + 256) % 256 : b)] :
      local.code_216[0] == ","
        ? [for i, b in local.iter_215.tape : (i == local.iter_215.tape_ptr ? local.ascii_lookup[substr(local.input_216, 0, 1)] : b)]
        : local.iter_215.tape)

    tape_ptr = (
      local.code_216[0] == "<"
        ? local.iter_215.tape_ptr - local.code_216[1] :
      local.code_216[0] == ">"
        ? local.iter_215.tape_ptr + local.code_216[1]
        : local.iter_215.tape_ptr)

    code_ptr = 2 + (
      local.code_216[0] == "["
        ? local.iter_215.tape[local.iter_215.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_215.code_ptr)] : local.iter_215.code_ptr :
      local.code_216[0] == "]"
        ? local.iter_215.tape[local.iter_215.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_215.code_ptr)] : local.iter_215.code_ptr
        : local.iter_215.code_ptr)

    steps_taken = 1 + local.iter_215.steps_taken
  }
}

locals {
  code_217 = (try(local.iter_216.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_216.code_ptr, local.iter_216.code_ptr + 2)
    : [null])

  input_217 = (local.code_217[0] == ","
    ? substr(local.input_216, local.code_217[1], -1)
    : local.input_216)

  iter_217 = try(local.iter_216.code_ptr >= length(var.code), true) ? local.iter_216 : {
    output = (local.code_217[0] == "."
      ? "${local.iter_216.output}${join("", [for _ in range(local.code_217[1]) : jsondecode(format("\"\\u%04x\"", local.iter_216.tape[local.iter_216.tape_ptr]))])}"
      : local.iter_216.output)
    
    tape = (
      local.code_217[0] == "+"
        ? [for i, b in local.iter_216.tape : (i == local.iter_216.tape_ptr ? (b + local.code_217[1]) % 256 : b)] :
      local.code_217[0] == "-"
        ? [for i, b in local.iter_216.tape : (i == local.iter_216.tape_ptr ? (b - local.code_217[1] + 256) % 256 : b)] :
      local.code_217[0] == ","
        ? [for i, b in local.iter_216.tape : (i == local.iter_216.tape_ptr ? local.ascii_lookup[substr(local.input_217, 0, 1)] : b)]
        : local.iter_216.tape)

    tape_ptr = (
      local.code_217[0] == "<"
        ? local.iter_216.tape_ptr - local.code_217[1] :
      local.code_217[0] == ">"
        ? local.iter_216.tape_ptr + local.code_217[1]
        : local.iter_216.tape_ptr)

    code_ptr = 2 + (
      local.code_217[0] == "["
        ? local.iter_216.tape[local.iter_216.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_216.code_ptr)] : local.iter_216.code_ptr :
      local.code_217[0] == "]"
        ? local.iter_216.tape[local.iter_216.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_216.code_ptr)] : local.iter_216.code_ptr
        : local.iter_216.code_ptr)

    steps_taken = 1 + local.iter_216.steps_taken
  }
}

locals {
  code_218 = (try(local.iter_217.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_217.code_ptr, local.iter_217.code_ptr + 2)
    : [null])

  input_218 = (local.code_218[0] == ","
    ? substr(local.input_217, local.code_218[1], -1)
    : local.input_217)

  iter_218 = try(local.iter_217.code_ptr >= length(var.code), true) ? local.iter_217 : {
    output = (local.code_218[0] == "."
      ? "${local.iter_217.output}${join("", [for _ in range(local.code_218[1]) : jsondecode(format("\"\\u%04x\"", local.iter_217.tape[local.iter_217.tape_ptr]))])}"
      : local.iter_217.output)
    
    tape = (
      local.code_218[0] == "+"
        ? [for i, b in local.iter_217.tape : (i == local.iter_217.tape_ptr ? (b + local.code_218[1]) % 256 : b)] :
      local.code_218[0] == "-"
        ? [for i, b in local.iter_217.tape : (i == local.iter_217.tape_ptr ? (b - local.code_218[1] + 256) % 256 : b)] :
      local.code_218[0] == ","
        ? [for i, b in local.iter_217.tape : (i == local.iter_217.tape_ptr ? local.ascii_lookup[substr(local.input_218, 0, 1)] : b)]
        : local.iter_217.tape)

    tape_ptr = (
      local.code_218[0] == "<"
        ? local.iter_217.tape_ptr - local.code_218[1] :
      local.code_218[0] == ">"
        ? local.iter_217.tape_ptr + local.code_218[1]
        : local.iter_217.tape_ptr)

    code_ptr = 2 + (
      local.code_218[0] == "["
        ? local.iter_217.tape[local.iter_217.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_217.code_ptr)] : local.iter_217.code_ptr :
      local.code_218[0] == "]"
        ? local.iter_217.tape[local.iter_217.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_217.code_ptr)] : local.iter_217.code_ptr
        : local.iter_217.code_ptr)

    steps_taken = 1 + local.iter_217.steps_taken
  }
}

locals {
  code_219 = (try(local.iter_218.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_218.code_ptr, local.iter_218.code_ptr + 2)
    : [null])

  input_219 = (local.code_219[0] == ","
    ? substr(local.input_218, local.code_219[1], -1)
    : local.input_218)

  iter_219 = try(local.iter_218.code_ptr >= length(var.code), true) ? local.iter_218 : {
    output = (local.code_219[0] == "."
      ? "${local.iter_218.output}${join("", [for _ in range(local.code_219[1]) : jsondecode(format("\"\\u%04x\"", local.iter_218.tape[local.iter_218.tape_ptr]))])}"
      : local.iter_218.output)
    
    tape = (
      local.code_219[0] == "+"
        ? [for i, b in local.iter_218.tape : (i == local.iter_218.tape_ptr ? (b + local.code_219[1]) % 256 : b)] :
      local.code_219[0] == "-"
        ? [for i, b in local.iter_218.tape : (i == local.iter_218.tape_ptr ? (b - local.code_219[1] + 256) % 256 : b)] :
      local.code_219[0] == ","
        ? [for i, b in local.iter_218.tape : (i == local.iter_218.tape_ptr ? local.ascii_lookup[substr(local.input_219, 0, 1)] : b)]
        : local.iter_218.tape)

    tape_ptr = (
      local.code_219[0] == "<"
        ? local.iter_218.tape_ptr - local.code_219[1] :
      local.code_219[0] == ">"
        ? local.iter_218.tape_ptr + local.code_219[1]
        : local.iter_218.tape_ptr)

    code_ptr = 2 + (
      local.code_219[0] == "["
        ? local.iter_218.tape[local.iter_218.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_218.code_ptr)] : local.iter_218.code_ptr :
      local.code_219[0] == "]"
        ? local.iter_218.tape[local.iter_218.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_218.code_ptr)] : local.iter_218.code_ptr
        : local.iter_218.code_ptr)

    steps_taken = 1 + local.iter_218.steps_taken
  }
}

locals {
  code_220 = (try(local.iter_219.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_219.code_ptr, local.iter_219.code_ptr + 2)
    : [null])

  input_220 = (local.code_220[0] == ","
    ? substr(local.input_219, local.code_220[1], -1)
    : local.input_219)

  iter_220 = try(local.iter_219.code_ptr >= length(var.code), true) ? local.iter_219 : {
    output = (local.code_220[0] == "."
      ? "${local.iter_219.output}${join("", [for _ in range(local.code_220[1]) : jsondecode(format("\"\\u%04x\"", local.iter_219.tape[local.iter_219.tape_ptr]))])}"
      : local.iter_219.output)
    
    tape = (
      local.code_220[0] == "+"
        ? [for i, b in local.iter_219.tape : (i == local.iter_219.tape_ptr ? (b + local.code_220[1]) % 256 : b)] :
      local.code_220[0] == "-"
        ? [for i, b in local.iter_219.tape : (i == local.iter_219.tape_ptr ? (b - local.code_220[1] + 256) % 256 : b)] :
      local.code_220[0] == ","
        ? [for i, b in local.iter_219.tape : (i == local.iter_219.tape_ptr ? local.ascii_lookup[substr(local.input_220, 0, 1)] : b)]
        : local.iter_219.tape)

    tape_ptr = (
      local.code_220[0] == "<"
        ? local.iter_219.tape_ptr - local.code_220[1] :
      local.code_220[0] == ">"
        ? local.iter_219.tape_ptr + local.code_220[1]
        : local.iter_219.tape_ptr)

    code_ptr = 2 + (
      local.code_220[0] == "["
        ? local.iter_219.tape[local.iter_219.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_219.code_ptr)] : local.iter_219.code_ptr :
      local.code_220[0] == "]"
        ? local.iter_219.tape[local.iter_219.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_219.code_ptr)] : local.iter_219.code_ptr
        : local.iter_219.code_ptr)

    steps_taken = 1 + local.iter_219.steps_taken
  }
}

locals {
  code_221 = (try(local.iter_220.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_220.code_ptr, local.iter_220.code_ptr + 2)
    : [null])

  input_221 = (local.code_221[0] == ","
    ? substr(local.input_220, local.code_221[1], -1)
    : local.input_220)

  iter_221 = try(local.iter_220.code_ptr >= length(var.code), true) ? local.iter_220 : {
    output = (local.code_221[0] == "."
      ? "${local.iter_220.output}${join("", [for _ in range(local.code_221[1]) : jsondecode(format("\"\\u%04x\"", local.iter_220.tape[local.iter_220.tape_ptr]))])}"
      : local.iter_220.output)
    
    tape = (
      local.code_221[0] == "+"
        ? [for i, b in local.iter_220.tape : (i == local.iter_220.tape_ptr ? (b + local.code_221[1]) % 256 : b)] :
      local.code_221[0] == "-"
        ? [for i, b in local.iter_220.tape : (i == local.iter_220.tape_ptr ? (b - local.code_221[1] + 256) % 256 : b)] :
      local.code_221[0] == ","
        ? [for i, b in local.iter_220.tape : (i == local.iter_220.tape_ptr ? local.ascii_lookup[substr(local.input_221, 0, 1)] : b)]
        : local.iter_220.tape)

    tape_ptr = (
      local.code_221[0] == "<"
        ? local.iter_220.tape_ptr - local.code_221[1] :
      local.code_221[0] == ">"
        ? local.iter_220.tape_ptr + local.code_221[1]
        : local.iter_220.tape_ptr)

    code_ptr = 2 + (
      local.code_221[0] == "["
        ? local.iter_220.tape[local.iter_220.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_220.code_ptr)] : local.iter_220.code_ptr :
      local.code_221[0] == "]"
        ? local.iter_220.tape[local.iter_220.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_220.code_ptr)] : local.iter_220.code_ptr
        : local.iter_220.code_ptr)

    steps_taken = 1 + local.iter_220.steps_taken
  }
}

locals {
  code_222 = (try(local.iter_221.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_221.code_ptr, local.iter_221.code_ptr + 2)
    : [null])

  input_222 = (local.code_222[0] == ","
    ? substr(local.input_221, local.code_222[1], -1)
    : local.input_221)

  iter_222 = try(local.iter_221.code_ptr >= length(var.code), true) ? local.iter_221 : {
    output = (local.code_222[0] == "."
      ? "${local.iter_221.output}${join("", [for _ in range(local.code_222[1]) : jsondecode(format("\"\\u%04x\"", local.iter_221.tape[local.iter_221.tape_ptr]))])}"
      : local.iter_221.output)
    
    tape = (
      local.code_222[0] == "+"
        ? [for i, b in local.iter_221.tape : (i == local.iter_221.tape_ptr ? (b + local.code_222[1]) % 256 : b)] :
      local.code_222[0] == "-"
        ? [for i, b in local.iter_221.tape : (i == local.iter_221.tape_ptr ? (b - local.code_222[1] + 256) % 256 : b)] :
      local.code_222[0] == ","
        ? [for i, b in local.iter_221.tape : (i == local.iter_221.tape_ptr ? local.ascii_lookup[substr(local.input_222, 0, 1)] : b)]
        : local.iter_221.tape)

    tape_ptr = (
      local.code_222[0] == "<"
        ? local.iter_221.tape_ptr - local.code_222[1] :
      local.code_222[0] == ">"
        ? local.iter_221.tape_ptr + local.code_222[1]
        : local.iter_221.tape_ptr)

    code_ptr = 2 + (
      local.code_222[0] == "["
        ? local.iter_221.tape[local.iter_221.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_221.code_ptr)] : local.iter_221.code_ptr :
      local.code_222[0] == "]"
        ? local.iter_221.tape[local.iter_221.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_221.code_ptr)] : local.iter_221.code_ptr
        : local.iter_221.code_ptr)

    steps_taken = 1 + local.iter_221.steps_taken
  }
}

locals {
  code_223 = (try(local.iter_222.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_222.code_ptr, local.iter_222.code_ptr + 2)
    : [null])

  input_223 = (local.code_223[0] == ","
    ? substr(local.input_222, local.code_223[1], -1)
    : local.input_222)

  iter_223 = try(local.iter_222.code_ptr >= length(var.code), true) ? local.iter_222 : {
    output = (local.code_223[0] == "."
      ? "${local.iter_222.output}${join("", [for _ in range(local.code_223[1]) : jsondecode(format("\"\\u%04x\"", local.iter_222.tape[local.iter_222.tape_ptr]))])}"
      : local.iter_222.output)
    
    tape = (
      local.code_223[0] == "+"
        ? [for i, b in local.iter_222.tape : (i == local.iter_222.tape_ptr ? (b + local.code_223[1]) % 256 : b)] :
      local.code_223[0] == "-"
        ? [for i, b in local.iter_222.tape : (i == local.iter_222.tape_ptr ? (b - local.code_223[1] + 256) % 256 : b)] :
      local.code_223[0] == ","
        ? [for i, b in local.iter_222.tape : (i == local.iter_222.tape_ptr ? local.ascii_lookup[substr(local.input_223, 0, 1)] : b)]
        : local.iter_222.tape)

    tape_ptr = (
      local.code_223[0] == "<"
        ? local.iter_222.tape_ptr - local.code_223[1] :
      local.code_223[0] == ">"
        ? local.iter_222.tape_ptr + local.code_223[1]
        : local.iter_222.tape_ptr)

    code_ptr = 2 + (
      local.code_223[0] == "["
        ? local.iter_222.tape[local.iter_222.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_222.code_ptr)] : local.iter_222.code_ptr :
      local.code_223[0] == "]"
        ? local.iter_222.tape[local.iter_222.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_222.code_ptr)] : local.iter_222.code_ptr
        : local.iter_222.code_ptr)

    steps_taken = 1 + local.iter_222.steps_taken
  }
}

locals {
  code_224 = (try(local.iter_223.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_223.code_ptr, local.iter_223.code_ptr + 2)
    : [null])

  input_224 = (local.code_224[0] == ","
    ? substr(local.input_223, local.code_224[1], -1)
    : local.input_223)

  iter_224 = try(local.iter_223.code_ptr >= length(var.code), true) ? local.iter_223 : {
    output = (local.code_224[0] == "."
      ? "${local.iter_223.output}${join("", [for _ in range(local.code_224[1]) : jsondecode(format("\"\\u%04x\"", local.iter_223.tape[local.iter_223.tape_ptr]))])}"
      : local.iter_223.output)
    
    tape = (
      local.code_224[0] == "+"
        ? [for i, b in local.iter_223.tape : (i == local.iter_223.tape_ptr ? (b + local.code_224[1]) % 256 : b)] :
      local.code_224[0] == "-"
        ? [for i, b in local.iter_223.tape : (i == local.iter_223.tape_ptr ? (b - local.code_224[1] + 256) % 256 : b)] :
      local.code_224[0] == ","
        ? [for i, b in local.iter_223.tape : (i == local.iter_223.tape_ptr ? local.ascii_lookup[substr(local.input_224, 0, 1)] : b)]
        : local.iter_223.tape)

    tape_ptr = (
      local.code_224[0] == "<"
        ? local.iter_223.tape_ptr - local.code_224[1] :
      local.code_224[0] == ">"
        ? local.iter_223.tape_ptr + local.code_224[1]
        : local.iter_223.tape_ptr)

    code_ptr = 2 + (
      local.code_224[0] == "["
        ? local.iter_223.tape[local.iter_223.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_223.code_ptr)] : local.iter_223.code_ptr :
      local.code_224[0] == "]"
        ? local.iter_223.tape[local.iter_223.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_223.code_ptr)] : local.iter_223.code_ptr
        : local.iter_223.code_ptr)

    steps_taken = 1 + local.iter_223.steps_taken
  }
}

locals {
  code_225 = (try(local.iter_224.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_224.code_ptr, local.iter_224.code_ptr + 2)
    : [null])

  input_225 = (local.code_225[0] == ","
    ? substr(local.input_224, local.code_225[1], -1)
    : local.input_224)

  iter_225 = try(local.iter_224.code_ptr >= length(var.code), true) ? local.iter_224 : {
    output = (local.code_225[0] == "."
      ? "${local.iter_224.output}${join("", [for _ in range(local.code_225[1]) : jsondecode(format("\"\\u%04x\"", local.iter_224.tape[local.iter_224.tape_ptr]))])}"
      : local.iter_224.output)
    
    tape = (
      local.code_225[0] == "+"
        ? [for i, b in local.iter_224.tape : (i == local.iter_224.tape_ptr ? (b + local.code_225[1]) % 256 : b)] :
      local.code_225[0] == "-"
        ? [for i, b in local.iter_224.tape : (i == local.iter_224.tape_ptr ? (b - local.code_225[1] + 256) % 256 : b)] :
      local.code_225[0] == ","
        ? [for i, b in local.iter_224.tape : (i == local.iter_224.tape_ptr ? local.ascii_lookup[substr(local.input_225, 0, 1)] : b)]
        : local.iter_224.tape)

    tape_ptr = (
      local.code_225[0] == "<"
        ? local.iter_224.tape_ptr - local.code_225[1] :
      local.code_225[0] == ">"
        ? local.iter_224.tape_ptr + local.code_225[1]
        : local.iter_224.tape_ptr)

    code_ptr = 2 + (
      local.code_225[0] == "["
        ? local.iter_224.tape[local.iter_224.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_224.code_ptr)] : local.iter_224.code_ptr :
      local.code_225[0] == "]"
        ? local.iter_224.tape[local.iter_224.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_224.code_ptr)] : local.iter_224.code_ptr
        : local.iter_224.code_ptr)

    steps_taken = 1 + local.iter_224.steps_taken
  }
}

locals {
  code_226 = (try(local.iter_225.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_225.code_ptr, local.iter_225.code_ptr + 2)
    : [null])

  input_226 = (local.code_226[0] == ","
    ? substr(local.input_225, local.code_226[1], -1)
    : local.input_225)

  iter_226 = try(local.iter_225.code_ptr >= length(var.code), true) ? local.iter_225 : {
    output = (local.code_226[0] == "."
      ? "${local.iter_225.output}${join("", [for _ in range(local.code_226[1]) : jsondecode(format("\"\\u%04x\"", local.iter_225.tape[local.iter_225.tape_ptr]))])}"
      : local.iter_225.output)
    
    tape = (
      local.code_226[0] == "+"
        ? [for i, b in local.iter_225.tape : (i == local.iter_225.tape_ptr ? (b + local.code_226[1]) % 256 : b)] :
      local.code_226[0] == "-"
        ? [for i, b in local.iter_225.tape : (i == local.iter_225.tape_ptr ? (b - local.code_226[1] + 256) % 256 : b)] :
      local.code_226[0] == ","
        ? [for i, b in local.iter_225.tape : (i == local.iter_225.tape_ptr ? local.ascii_lookup[substr(local.input_226, 0, 1)] : b)]
        : local.iter_225.tape)

    tape_ptr = (
      local.code_226[0] == "<"
        ? local.iter_225.tape_ptr - local.code_226[1] :
      local.code_226[0] == ">"
        ? local.iter_225.tape_ptr + local.code_226[1]
        : local.iter_225.tape_ptr)

    code_ptr = 2 + (
      local.code_226[0] == "["
        ? local.iter_225.tape[local.iter_225.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_225.code_ptr)] : local.iter_225.code_ptr :
      local.code_226[0] == "]"
        ? local.iter_225.tape[local.iter_225.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_225.code_ptr)] : local.iter_225.code_ptr
        : local.iter_225.code_ptr)

    steps_taken = 1 + local.iter_225.steps_taken
  }
}

locals {
  code_227 = (try(local.iter_226.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_226.code_ptr, local.iter_226.code_ptr + 2)
    : [null])

  input_227 = (local.code_227[0] == ","
    ? substr(local.input_226, local.code_227[1], -1)
    : local.input_226)

  iter_227 = try(local.iter_226.code_ptr >= length(var.code), true) ? local.iter_226 : {
    output = (local.code_227[0] == "."
      ? "${local.iter_226.output}${join("", [for _ in range(local.code_227[1]) : jsondecode(format("\"\\u%04x\"", local.iter_226.tape[local.iter_226.tape_ptr]))])}"
      : local.iter_226.output)
    
    tape = (
      local.code_227[0] == "+"
        ? [for i, b in local.iter_226.tape : (i == local.iter_226.tape_ptr ? (b + local.code_227[1]) % 256 : b)] :
      local.code_227[0] == "-"
        ? [for i, b in local.iter_226.tape : (i == local.iter_226.tape_ptr ? (b - local.code_227[1] + 256) % 256 : b)] :
      local.code_227[0] == ","
        ? [for i, b in local.iter_226.tape : (i == local.iter_226.tape_ptr ? local.ascii_lookup[substr(local.input_227, 0, 1)] : b)]
        : local.iter_226.tape)

    tape_ptr = (
      local.code_227[0] == "<"
        ? local.iter_226.tape_ptr - local.code_227[1] :
      local.code_227[0] == ">"
        ? local.iter_226.tape_ptr + local.code_227[1]
        : local.iter_226.tape_ptr)

    code_ptr = 2 + (
      local.code_227[0] == "["
        ? local.iter_226.tape[local.iter_226.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_226.code_ptr)] : local.iter_226.code_ptr :
      local.code_227[0] == "]"
        ? local.iter_226.tape[local.iter_226.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_226.code_ptr)] : local.iter_226.code_ptr
        : local.iter_226.code_ptr)

    steps_taken = 1 + local.iter_226.steps_taken
  }
}

locals {
  code_228 = (try(local.iter_227.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_227.code_ptr, local.iter_227.code_ptr + 2)
    : [null])

  input_228 = (local.code_228[0] == ","
    ? substr(local.input_227, local.code_228[1], -1)
    : local.input_227)

  iter_228 = try(local.iter_227.code_ptr >= length(var.code), true) ? local.iter_227 : {
    output = (local.code_228[0] == "."
      ? "${local.iter_227.output}${join("", [for _ in range(local.code_228[1]) : jsondecode(format("\"\\u%04x\"", local.iter_227.tape[local.iter_227.tape_ptr]))])}"
      : local.iter_227.output)
    
    tape = (
      local.code_228[0] == "+"
        ? [for i, b in local.iter_227.tape : (i == local.iter_227.tape_ptr ? (b + local.code_228[1]) % 256 : b)] :
      local.code_228[0] == "-"
        ? [for i, b in local.iter_227.tape : (i == local.iter_227.tape_ptr ? (b - local.code_228[1] + 256) % 256 : b)] :
      local.code_228[0] == ","
        ? [for i, b in local.iter_227.tape : (i == local.iter_227.tape_ptr ? local.ascii_lookup[substr(local.input_228, 0, 1)] : b)]
        : local.iter_227.tape)

    tape_ptr = (
      local.code_228[0] == "<"
        ? local.iter_227.tape_ptr - local.code_228[1] :
      local.code_228[0] == ">"
        ? local.iter_227.tape_ptr + local.code_228[1]
        : local.iter_227.tape_ptr)

    code_ptr = 2 + (
      local.code_228[0] == "["
        ? local.iter_227.tape[local.iter_227.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_227.code_ptr)] : local.iter_227.code_ptr :
      local.code_228[0] == "]"
        ? local.iter_227.tape[local.iter_227.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_227.code_ptr)] : local.iter_227.code_ptr
        : local.iter_227.code_ptr)

    steps_taken = 1 + local.iter_227.steps_taken
  }
}

locals {
  code_229 = (try(local.iter_228.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_228.code_ptr, local.iter_228.code_ptr + 2)
    : [null])

  input_229 = (local.code_229[0] == ","
    ? substr(local.input_228, local.code_229[1], -1)
    : local.input_228)

  iter_229 = try(local.iter_228.code_ptr >= length(var.code), true) ? local.iter_228 : {
    output = (local.code_229[0] == "."
      ? "${local.iter_228.output}${join("", [for _ in range(local.code_229[1]) : jsondecode(format("\"\\u%04x\"", local.iter_228.tape[local.iter_228.tape_ptr]))])}"
      : local.iter_228.output)
    
    tape = (
      local.code_229[0] == "+"
        ? [for i, b in local.iter_228.tape : (i == local.iter_228.tape_ptr ? (b + local.code_229[1]) % 256 : b)] :
      local.code_229[0] == "-"
        ? [for i, b in local.iter_228.tape : (i == local.iter_228.tape_ptr ? (b - local.code_229[1] + 256) % 256 : b)] :
      local.code_229[0] == ","
        ? [for i, b in local.iter_228.tape : (i == local.iter_228.tape_ptr ? local.ascii_lookup[substr(local.input_229, 0, 1)] : b)]
        : local.iter_228.tape)

    tape_ptr = (
      local.code_229[0] == "<"
        ? local.iter_228.tape_ptr - local.code_229[1] :
      local.code_229[0] == ">"
        ? local.iter_228.tape_ptr + local.code_229[1]
        : local.iter_228.tape_ptr)

    code_ptr = 2 + (
      local.code_229[0] == "["
        ? local.iter_228.tape[local.iter_228.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_228.code_ptr)] : local.iter_228.code_ptr :
      local.code_229[0] == "]"
        ? local.iter_228.tape[local.iter_228.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_228.code_ptr)] : local.iter_228.code_ptr
        : local.iter_228.code_ptr)

    steps_taken = 1 + local.iter_228.steps_taken
  }
}

locals {
  code_230 = (try(local.iter_229.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_229.code_ptr, local.iter_229.code_ptr + 2)
    : [null])

  input_230 = (local.code_230[0] == ","
    ? substr(local.input_229, local.code_230[1], -1)
    : local.input_229)

  iter_230 = try(local.iter_229.code_ptr >= length(var.code), true) ? local.iter_229 : {
    output = (local.code_230[0] == "."
      ? "${local.iter_229.output}${join("", [for _ in range(local.code_230[1]) : jsondecode(format("\"\\u%04x\"", local.iter_229.tape[local.iter_229.tape_ptr]))])}"
      : local.iter_229.output)
    
    tape = (
      local.code_230[0] == "+"
        ? [for i, b in local.iter_229.tape : (i == local.iter_229.tape_ptr ? (b + local.code_230[1]) % 256 : b)] :
      local.code_230[0] == "-"
        ? [for i, b in local.iter_229.tape : (i == local.iter_229.tape_ptr ? (b - local.code_230[1] + 256) % 256 : b)] :
      local.code_230[0] == ","
        ? [for i, b in local.iter_229.tape : (i == local.iter_229.tape_ptr ? local.ascii_lookup[substr(local.input_230, 0, 1)] : b)]
        : local.iter_229.tape)

    tape_ptr = (
      local.code_230[0] == "<"
        ? local.iter_229.tape_ptr - local.code_230[1] :
      local.code_230[0] == ">"
        ? local.iter_229.tape_ptr + local.code_230[1]
        : local.iter_229.tape_ptr)

    code_ptr = 2 + (
      local.code_230[0] == "["
        ? local.iter_229.tape[local.iter_229.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_229.code_ptr)] : local.iter_229.code_ptr :
      local.code_230[0] == "]"
        ? local.iter_229.tape[local.iter_229.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_229.code_ptr)] : local.iter_229.code_ptr
        : local.iter_229.code_ptr)

    steps_taken = 1 + local.iter_229.steps_taken
  }
}

locals {
  code_231 = (try(local.iter_230.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_230.code_ptr, local.iter_230.code_ptr + 2)
    : [null])

  input_231 = (local.code_231[0] == ","
    ? substr(local.input_230, local.code_231[1], -1)
    : local.input_230)

  iter_231 = try(local.iter_230.code_ptr >= length(var.code), true) ? local.iter_230 : {
    output = (local.code_231[0] == "."
      ? "${local.iter_230.output}${join("", [for _ in range(local.code_231[1]) : jsondecode(format("\"\\u%04x\"", local.iter_230.tape[local.iter_230.tape_ptr]))])}"
      : local.iter_230.output)
    
    tape = (
      local.code_231[0] == "+"
        ? [for i, b in local.iter_230.tape : (i == local.iter_230.tape_ptr ? (b + local.code_231[1]) % 256 : b)] :
      local.code_231[0] == "-"
        ? [for i, b in local.iter_230.tape : (i == local.iter_230.tape_ptr ? (b - local.code_231[1] + 256) % 256 : b)] :
      local.code_231[0] == ","
        ? [for i, b in local.iter_230.tape : (i == local.iter_230.tape_ptr ? local.ascii_lookup[substr(local.input_231, 0, 1)] : b)]
        : local.iter_230.tape)

    tape_ptr = (
      local.code_231[0] == "<"
        ? local.iter_230.tape_ptr - local.code_231[1] :
      local.code_231[0] == ">"
        ? local.iter_230.tape_ptr + local.code_231[1]
        : local.iter_230.tape_ptr)

    code_ptr = 2 + (
      local.code_231[0] == "["
        ? local.iter_230.tape[local.iter_230.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_230.code_ptr)] : local.iter_230.code_ptr :
      local.code_231[0] == "]"
        ? local.iter_230.tape[local.iter_230.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_230.code_ptr)] : local.iter_230.code_ptr
        : local.iter_230.code_ptr)

    steps_taken = 1 + local.iter_230.steps_taken
  }
}

locals {
  code_232 = (try(local.iter_231.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_231.code_ptr, local.iter_231.code_ptr + 2)
    : [null])

  input_232 = (local.code_232[0] == ","
    ? substr(local.input_231, local.code_232[1], -1)
    : local.input_231)

  iter_232 = try(local.iter_231.code_ptr >= length(var.code), true) ? local.iter_231 : {
    output = (local.code_232[0] == "."
      ? "${local.iter_231.output}${join("", [for _ in range(local.code_232[1]) : jsondecode(format("\"\\u%04x\"", local.iter_231.tape[local.iter_231.tape_ptr]))])}"
      : local.iter_231.output)
    
    tape = (
      local.code_232[0] == "+"
        ? [for i, b in local.iter_231.tape : (i == local.iter_231.tape_ptr ? (b + local.code_232[1]) % 256 : b)] :
      local.code_232[0] == "-"
        ? [for i, b in local.iter_231.tape : (i == local.iter_231.tape_ptr ? (b - local.code_232[1] + 256) % 256 : b)] :
      local.code_232[0] == ","
        ? [for i, b in local.iter_231.tape : (i == local.iter_231.tape_ptr ? local.ascii_lookup[substr(local.input_232, 0, 1)] : b)]
        : local.iter_231.tape)

    tape_ptr = (
      local.code_232[0] == "<"
        ? local.iter_231.tape_ptr - local.code_232[1] :
      local.code_232[0] == ">"
        ? local.iter_231.tape_ptr + local.code_232[1]
        : local.iter_231.tape_ptr)

    code_ptr = 2 + (
      local.code_232[0] == "["
        ? local.iter_231.tape[local.iter_231.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_231.code_ptr)] : local.iter_231.code_ptr :
      local.code_232[0] == "]"
        ? local.iter_231.tape[local.iter_231.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_231.code_ptr)] : local.iter_231.code_ptr
        : local.iter_231.code_ptr)

    steps_taken = 1 + local.iter_231.steps_taken
  }
}

locals {
  code_233 = (try(local.iter_232.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_232.code_ptr, local.iter_232.code_ptr + 2)
    : [null])

  input_233 = (local.code_233[0] == ","
    ? substr(local.input_232, local.code_233[1], -1)
    : local.input_232)

  iter_233 = try(local.iter_232.code_ptr >= length(var.code), true) ? local.iter_232 : {
    output = (local.code_233[0] == "."
      ? "${local.iter_232.output}${join("", [for _ in range(local.code_233[1]) : jsondecode(format("\"\\u%04x\"", local.iter_232.tape[local.iter_232.tape_ptr]))])}"
      : local.iter_232.output)
    
    tape = (
      local.code_233[0] == "+"
        ? [for i, b in local.iter_232.tape : (i == local.iter_232.tape_ptr ? (b + local.code_233[1]) % 256 : b)] :
      local.code_233[0] == "-"
        ? [for i, b in local.iter_232.tape : (i == local.iter_232.tape_ptr ? (b - local.code_233[1] + 256) % 256 : b)] :
      local.code_233[0] == ","
        ? [for i, b in local.iter_232.tape : (i == local.iter_232.tape_ptr ? local.ascii_lookup[substr(local.input_233, 0, 1)] : b)]
        : local.iter_232.tape)

    tape_ptr = (
      local.code_233[0] == "<"
        ? local.iter_232.tape_ptr - local.code_233[1] :
      local.code_233[0] == ">"
        ? local.iter_232.tape_ptr + local.code_233[1]
        : local.iter_232.tape_ptr)

    code_ptr = 2 + (
      local.code_233[0] == "["
        ? local.iter_232.tape[local.iter_232.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_232.code_ptr)] : local.iter_232.code_ptr :
      local.code_233[0] == "]"
        ? local.iter_232.tape[local.iter_232.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_232.code_ptr)] : local.iter_232.code_ptr
        : local.iter_232.code_ptr)

    steps_taken = 1 + local.iter_232.steps_taken
  }
}

locals {
  code_234 = (try(local.iter_233.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_233.code_ptr, local.iter_233.code_ptr + 2)
    : [null])

  input_234 = (local.code_234[0] == ","
    ? substr(local.input_233, local.code_234[1], -1)
    : local.input_233)

  iter_234 = try(local.iter_233.code_ptr >= length(var.code), true) ? local.iter_233 : {
    output = (local.code_234[0] == "."
      ? "${local.iter_233.output}${join("", [for _ in range(local.code_234[1]) : jsondecode(format("\"\\u%04x\"", local.iter_233.tape[local.iter_233.tape_ptr]))])}"
      : local.iter_233.output)
    
    tape = (
      local.code_234[0] == "+"
        ? [for i, b in local.iter_233.tape : (i == local.iter_233.tape_ptr ? (b + local.code_234[1]) % 256 : b)] :
      local.code_234[0] == "-"
        ? [for i, b in local.iter_233.tape : (i == local.iter_233.tape_ptr ? (b - local.code_234[1] + 256) % 256 : b)] :
      local.code_234[0] == ","
        ? [for i, b in local.iter_233.tape : (i == local.iter_233.tape_ptr ? local.ascii_lookup[substr(local.input_234, 0, 1)] : b)]
        : local.iter_233.tape)

    tape_ptr = (
      local.code_234[0] == "<"
        ? local.iter_233.tape_ptr - local.code_234[1] :
      local.code_234[0] == ">"
        ? local.iter_233.tape_ptr + local.code_234[1]
        : local.iter_233.tape_ptr)

    code_ptr = 2 + (
      local.code_234[0] == "["
        ? local.iter_233.tape[local.iter_233.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_233.code_ptr)] : local.iter_233.code_ptr :
      local.code_234[0] == "]"
        ? local.iter_233.tape[local.iter_233.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_233.code_ptr)] : local.iter_233.code_ptr
        : local.iter_233.code_ptr)

    steps_taken = 1 + local.iter_233.steps_taken
  }
}

locals {
  code_235 = (try(local.iter_234.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_234.code_ptr, local.iter_234.code_ptr + 2)
    : [null])

  input_235 = (local.code_235[0] == ","
    ? substr(local.input_234, local.code_235[1], -1)
    : local.input_234)

  iter_235 = try(local.iter_234.code_ptr >= length(var.code), true) ? local.iter_234 : {
    output = (local.code_235[0] == "."
      ? "${local.iter_234.output}${join("", [for _ in range(local.code_235[1]) : jsondecode(format("\"\\u%04x\"", local.iter_234.tape[local.iter_234.tape_ptr]))])}"
      : local.iter_234.output)
    
    tape = (
      local.code_235[0] == "+"
        ? [for i, b in local.iter_234.tape : (i == local.iter_234.tape_ptr ? (b + local.code_235[1]) % 256 : b)] :
      local.code_235[0] == "-"
        ? [for i, b in local.iter_234.tape : (i == local.iter_234.tape_ptr ? (b - local.code_235[1] + 256) % 256 : b)] :
      local.code_235[0] == ","
        ? [for i, b in local.iter_234.tape : (i == local.iter_234.tape_ptr ? local.ascii_lookup[substr(local.input_235, 0, 1)] : b)]
        : local.iter_234.tape)

    tape_ptr = (
      local.code_235[0] == "<"
        ? local.iter_234.tape_ptr - local.code_235[1] :
      local.code_235[0] == ">"
        ? local.iter_234.tape_ptr + local.code_235[1]
        : local.iter_234.tape_ptr)

    code_ptr = 2 + (
      local.code_235[0] == "["
        ? local.iter_234.tape[local.iter_234.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_234.code_ptr)] : local.iter_234.code_ptr :
      local.code_235[0] == "]"
        ? local.iter_234.tape[local.iter_234.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_234.code_ptr)] : local.iter_234.code_ptr
        : local.iter_234.code_ptr)

    steps_taken = 1 + local.iter_234.steps_taken
  }
}

locals {
  code_236 = (try(local.iter_235.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_235.code_ptr, local.iter_235.code_ptr + 2)
    : [null])

  input_236 = (local.code_236[0] == ","
    ? substr(local.input_235, local.code_236[1], -1)
    : local.input_235)

  iter_236 = try(local.iter_235.code_ptr >= length(var.code), true) ? local.iter_235 : {
    output = (local.code_236[0] == "."
      ? "${local.iter_235.output}${join("", [for _ in range(local.code_236[1]) : jsondecode(format("\"\\u%04x\"", local.iter_235.tape[local.iter_235.tape_ptr]))])}"
      : local.iter_235.output)
    
    tape = (
      local.code_236[0] == "+"
        ? [for i, b in local.iter_235.tape : (i == local.iter_235.tape_ptr ? (b + local.code_236[1]) % 256 : b)] :
      local.code_236[0] == "-"
        ? [for i, b in local.iter_235.tape : (i == local.iter_235.tape_ptr ? (b - local.code_236[1] + 256) % 256 : b)] :
      local.code_236[0] == ","
        ? [for i, b in local.iter_235.tape : (i == local.iter_235.tape_ptr ? local.ascii_lookup[substr(local.input_236, 0, 1)] : b)]
        : local.iter_235.tape)

    tape_ptr = (
      local.code_236[0] == "<"
        ? local.iter_235.tape_ptr - local.code_236[1] :
      local.code_236[0] == ">"
        ? local.iter_235.tape_ptr + local.code_236[1]
        : local.iter_235.tape_ptr)

    code_ptr = 2 + (
      local.code_236[0] == "["
        ? local.iter_235.tape[local.iter_235.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_235.code_ptr)] : local.iter_235.code_ptr :
      local.code_236[0] == "]"
        ? local.iter_235.tape[local.iter_235.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_235.code_ptr)] : local.iter_235.code_ptr
        : local.iter_235.code_ptr)

    steps_taken = 1 + local.iter_235.steps_taken
  }
}

locals {
  code_237 = (try(local.iter_236.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_236.code_ptr, local.iter_236.code_ptr + 2)
    : [null])

  input_237 = (local.code_237[0] == ","
    ? substr(local.input_236, local.code_237[1], -1)
    : local.input_236)

  iter_237 = try(local.iter_236.code_ptr >= length(var.code), true) ? local.iter_236 : {
    output = (local.code_237[0] == "."
      ? "${local.iter_236.output}${join("", [for _ in range(local.code_237[1]) : jsondecode(format("\"\\u%04x\"", local.iter_236.tape[local.iter_236.tape_ptr]))])}"
      : local.iter_236.output)
    
    tape = (
      local.code_237[0] == "+"
        ? [for i, b in local.iter_236.tape : (i == local.iter_236.tape_ptr ? (b + local.code_237[1]) % 256 : b)] :
      local.code_237[0] == "-"
        ? [for i, b in local.iter_236.tape : (i == local.iter_236.tape_ptr ? (b - local.code_237[1] + 256) % 256 : b)] :
      local.code_237[0] == ","
        ? [for i, b in local.iter_236.tape : (i == local.iter_236.tape_ptr ? local.ascii_lookup[substr(local.input_237, 0, 1)] : b)]
        : local.iter_236.tape)

    tape_ptr = (
      local.code_237[0] == "<"
        ? local.iter_236.tape_ptr - local.code_237[1] :
      local.code_237[0] == ">"
        ? local.iter_236.tape_ptr + local.code_237[1]
        : local.iter_236.tape_ptr)

    code_ptr = 2 + (
      local.code_237[0] == "["
        ? local.iter_236.tape[local.iter_236.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_236.code_ptr)] : local.iter_236.code_ptr :
      local.code_237[0] == "]"
        ? local.iter_236.tape[local.iter_236.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_236.code_ptr)] : local.iter_236.code_ptr
        : local.iter_236.code_ptr)

    steps_taken = 1 + local.iter_236.steps_taken
  }
}

locals {
  code_238 = (try(local.iter_237.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_237.code_ptr, local.iter_237.code_ptr + 2)
    : [null])

  input_238 = (local.code_238[0] == ","
    ? substr(local.input_237, local.code_238[1], -1)
    : local.input_237)

  iter_238 = try(local.iter_237.code_ptr >= length(var.code), true) ? local.iter_237 : {
    output = (local.code_238[0] == "."
      ? "${local.iter_237.output}${join("", [for _ in range(local.code_238[1]) : jsondecode(format("\"\\u%04x\"", local.iter_237.tape[local.iter_237.tape_ptr]))])}"
      : local.iter_237.output)
    
    tape = (
      local.code_238[0] == "+"
        ? [for i, b in local.iter_237.tape : (i == local.iter_237.tape_ptr ? (b + local.code_238[1]) % 256 : b)] :
      local.code_238[0] == "-"
        ? [for i, b in local.iter_237.tape : (i == local.iter_237.tape_ptr ? (b - local.code_238[1] + 256) % 256 : b)] :
      local.code_238[0] == ","
        ? [for i, b in local.iter_237.tape : (i == local.iter_237.tape_ptr ? local.ascii_lookup[substr(local.input_238, 0, 1)] : b)]
        : local.iter_237.tape)

    tape_ptr = (
      local.code_238[0] == "<"
        ? local.iter_237.tape_ptr - local.code_238[1] :
      local.code_238[0] == ">"
        ? local.iter_237.tape_ptr + local.code_238[1]
        : local.iter_237.tape_ptr)

    code_ptr = 2 + (
      local.code_238[0] == "["
        ? local.iter_237.tape[local.iter_237.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_237.code_ptr)] : local.iter_237.code_ptr :
      local.code_238[0] == "]"
        ? local.iter_237.tape[local.iter_237.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_237.code_ptr)] : local.iter_237.code_ptr
        : local.iter_237.code_ptr)

    steps_taken = 1 + local.iter_237.steps_taken
  }
}

locals {
  code_239 = (try(local.iter_238.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_238.code_ptr, local.iter_238.code_ptr + 2)
    : [null])

  input_239 = (local.code_239[0] == ","
    ? substr(local.input_238, local.code_239[1], -1)
    : local.input_238)

  iter_239 = try(local.iter_238.code_ptr >= length(var.code), true) ? local.iter_238 : {
    output = (local.code_239[0] == "."
      ? "${local.iter_238.output}${join("", [for _ in range(local.code_239[1]) : jsondecode(format("\"\\u%04x\"", local.iter_238.tape[local.iter_238.tape_ptr]))])}"
      : local.iter_238.output)
    
    tape = (
      local.code_239[0] == "+"
        ? [for i, b in local.iter_238.tape : (i == local.iter_238.tape_ptr ? (b + local.code_239[1]) % 256 : b)] :
      local.code_239[0] == "-"
        ? [for i, b in local.iter_238.tape : (i == local.iter_238.tape_ptr ? (b - local.code_239[1] + 256) % 256 : b)] :
      local.code_239[0] == ","
        ? [for i, b in local.iter_238.tape : (i == local.iter_238.tape_ptr ? local.ascii_lookup[substr(local.input_239, 0, 1)] : b)]
        : local.iter_238.tape)

    tape_ptr = (
      local.code_239[0] == "<"
        ? local.iter_238.tape_ptr - local.code_239[1] :
      local.code_239[0] == ">"
        ? local.iter_238.tape_ptr + local.code_239[1]
        : local.iter_238.tape_ptr)

    code_ptr = 2 + (
      local.code_239[0] == "["
        ? local.iter_238.tape[local.iter_238.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_238.code_ptr)] : local.iter_238.code_ptr :
      local.code_239[0] == "]"
        ? local.iter_238.tape[local.iter_238.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_238.code_ptr)] : local.iter_238.code_ptr
        : local.iter_238.code_ptr)

    steps_taken = 1 + local.iter_238.steps_taken
  }
}

locals {
  code_240 = (try(local.iter_239.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_239.code_ptr, local.iter_239.code_ptr + 2)
    : [null])

  input_240 = (local.code_240[0] == ","
    ? substr(local.input_239, local.code_240[1], -1)
    : local.input_239)

  iter_240 = try(local.iter_239.code_ptr >= length(var.code), true) ? local.iter_239 : {
    output = (local.code_240[0] == "."
      ? "${local.iter_239.output}${join("", [for _ in range(local.code_240[1]) : jsondecode(format("\"\\u%04x\"", local.iter_239.tape[local.iter_239.tape_ptr]))])}"
      : local.iter_239.output)
    
    tape = (
      local.code_240[0] == "+"
        ? [for i, b in local.iter_239.tape : (i == local.iter_239.tape_ptr ? (b + local.code_240[1]) % 256 : b)] :
      local.code_240[0] == "-"
        ? [for i, b in local.iter_239.tape : (i == local.iter_239.tape_ptr ? (b - local.code_240[1] + 256) % 256 : b)] :
      local.code_240[0] == ","
        ? [for i, b in local.iter_239.tape : (i == local.iter_239.tape_ptr ? local.ascii_lookup[substr(local.input_240, 0, 1)] : b)]
        : local.iter_239.tape)

    tape_ptr = (
      local.code_240[0] == "<"
        ? local.iter_239.tape_ptr - local.code_240[1] :
      local.code_240[0] == ">"
        ? local.iter_239.tape_ptr + local.code_240[1]
        : local.iter_239.tape_ptr)

    code_ptr = 2 + (
      local.code_240[0] == "["
        ? local.iter_239.tape[local.iter_239.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_239.code_ptr)] : local.iter_239.code_ptr :
      local.code_240[0] == "]"
        ? local.iter_239.tape[local.iter_239.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_239.code_ptr)] : local.iter_239.code_ptr
        : local.iter_239.code_ptr)

    steps_taken = 1 + local.iter_239.steps_taken
  }
}

locals {
  code_241 = (try(local.iter_240.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_240.code_ptr, local.iter_240.code_ptr + 2)
    : [null])

  input_241 = (local.code_241[0] == ","
    ? substr(local.input_240, local.code_241[1], -1)
    : local.input_240)

  iter_241 = try(local.iter_240.code_ptr >= length(var.code), true) ? local.iter_240 : {
    output = (local.code_241[0] == "."
      ? "${local.iter_240.output}${join("", [for _ in range(local.code_241[1]) : jsondecode(format("\"\\u%04x\"", local.iter_240.tape[local.iter_240.tape_ptr]))])}"
      : local.iter_240.output)
    
    tape = (
      local.code_241[0] == "+"
        ? [for i, b in local.iter_240.tape : (i == local.iter_240.tape_ptr ? (b + local.code_241[1]) % 256 : b)] :
      local.code_241[0] == "-"
        ? [for i, b in local.iter_240.tape : (i == local.iter_240.tape_ptr ? (b - local.code_241[1] + 256) % 256 : b)] :
      local.code_241[0] == ","
        ? [for i, b in local.iter_240.tape : (i == local.iter_240.tape_ptr ? local.ascii_lookup[substr(local.input_241, 0, 1)] : b)]
        : local.iter_240.tape)

    tape_ptr = (
      local.code_241[0] == "<"
        ? local.iter_240.tape_ptr - local.code_241[1] :
      local.code_241[0] == ">"
        ? local.iter_240.tape_ptr + local.code_241[1]
        : local.iter_240.tape_ptr)

    code_ptr = 2 + (
      local.code_241[0] == "["
        ? local.iter_240.tape[local.iter_240.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_240.code_ptr)] : local.iter_240.code_ptr :
      local.code_241[0] == "]"
        ? local.iter_240.tape[local.iter_240.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_240.code_ptr)] : local.iter_240.code_ptr
        : local.iter_240.code_ptr)

    steps_taken = 1 + local.iter_240.steps_taken
  }
}

locals {
  code_242 = (try(local.iter_241.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_241.code_ptr, local.iter_241.code_ptr + 2)
    : [null])

  input_242 = (local.code_242[0] == ","
    ? substr(local.input_241, local.code_242[1], -1)
    : local.input_241)

  iter_242 = try(local.iter_241.code_ptr >= length(var.code), true) ? local.iter_241 : {
    output = (local.code_242[0] == "."
      ? "${local.iter_241.output}${join("", [for _ in range(local.code_242[1]) : jsondecode(format("\"\\u%04x\"", local.iter_241.tape[local.iter_241.tape_ptr]))])}"
      : local.iter_241.output)
    
    tape = (
      local.code_242[0] == "+"
        ? [for i, b in local.iter_241.tape : (i == local.iter_241.tape_ptr ? (b + local.code_242[1]) % 256 : b)] :
      local.code_242[0] == "-"
        ? [for i, b in local.iter_241.tape : (i == local.iter_241.tape_ptr ? (b - local.code_242[1] + 256) % 256 : b)] :
      local.code_242[0] == ","
        ? [for i, b in local.iter_241.tape : (i == local.iter_241.tape_ptr ? local.ascii_lookup[substr(local.input_242, 0, 1)] : b)]
        : local.iter_241.tape)

    tape_ptr = (
      local.code_242[0] == "<"
        ? local.iter_241.tape_ptr - local.code_242[1] :
      local.code_242[0] == ">"
        ? local.iter_241.tape_ptr + local.code_242[1]
        : local.iter_241.tape_ptr)

    code_ptr = 2 + (
      local.code_242[0] == "["
        ? local.iter_241.tape[local.iter_241.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_241.code_ptr)] : local.iter_241.code_ptr :
      local.code_242[0] == "]"
        ? local.iter_241.tape[local.iter_241.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_241.code_ptr)] : local.iter_241.code_ptr
        : local.iter_241.code_ptr)

    steps_taken = 1 + local.iter_241.steps_taken
  }
}

locals {
  code_243 = (try(local.iter_242.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_242.code_ptr, local.iter_242.code_ptr + 2)
    : [null])

  input_243 = (local.code_243[0] == ","
    ? substr(local.input_242, local.code_243[1], -1)
    : local.input_242)

  iter_243 = try(local.iter_242.code_ptr >= length(var.code), true) ? local.iter_242 : {
    output = (local.code_243[0] == "."
      ? "${local.iter_242.output}${join("", [for _ in range(local.code_243[1]) : jsondecode(format("\"\\u%04x\"", local.iter_242.tape[local.iter_242.tape_ptr]))])}"
      : local.iter_242.output)
    
    tape = (
      local.code_243[0] == "+"
        ? [for i, b in local.iter_242.tape : (i == local.iter_242.tape_ptr ? (b + local.code_243[1]) % 256 : b)] :
      local.code_243[0] == "-"
        ? [for i, b in local.iter_242.tape : (i == local.iter_242.tape_ptr ? (b - local.code_243[1] + 256) % 256 : b)] :
      local.code_243[0] == ","
        ? [for i, b in local.iter_242.tape : (i == local.iter_242.tape_ptr ? local.ascii_lookup[substr(local.input_243, 0, 1)] : b)]
        : local.iter_242.tape)

    tape_ptr = (
      local.code_243[0] == "<"
        ? local.iter_242.tape_ptr - local.code_243[1] :
      local.code_243[0] == ">"
        ? local.iter_242.tape_ptr + local.code_243[1]
        : local.iter_242.tape_ptr)

    code_ptr = 2 + (
      local.code_243[0] == "["
        ? local.iter_242.tape[local.iter_242.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_242.code_ptr)] : local.iter_242.code_ptr :
      local.code_243[0] == "]"
        ? local.iter_242.tape[local.iter_242.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_242.code_ptr)] : local.iter_242.code_ptr
        : local.iter_242.code_ptr)

    steps_taken = 1 + local.iter_242.steps_taken
  }
}

locals {
  code_244 = (try(local.iter_243.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_243.code_ptr, local.iter_243.code_ptr + 2)
    : [null])

  input_244 = (local.code_244[0] == ","
    ? substr(local.input_243, local.code_244[1], -1)
    : local.input_243)

  iter_244 = try(local.iter_243.code_ptr >= length(var.code), true) ? local.iter_243 : {
    output = (local.code_244[0] == "."
      ? "${local.iter_243.output}${join("", [for _ in range(local.code_244[1]) : jsondecode(format("\"\\u%04x\"", local.iter_243.tape[local.iter_243.tape_ptr]))])}"
      : local.iter_243.output)
    
    tape = (
      local.code_244[0] == "+"
        ? [for i, b in local.iter_243.tape : (i == local.iter_243.tape_ptr ? (b + local.code_244[1]) % 256 : b)] :
      local.code_244[0] == "-"
        ? [for i, b in local.iter_243.tape : (i == local.iter_243.tape_ptr ? (b - local.code_244[1] + 256) % 256 : b)] :
      local.code_244[0] == ","
        ? [for i, b in local.iter_243.tape : (i == local.iter_243.tape_ptr ? local.ascii_lookup[substr(local.input_244, 0, 1)] : b)]
        : local.iter_243.tape)

    tape_ptr = (
      local.code_244[0] == "<"
        ? local.iter_243.tape_ptr - local.code_244[1] :
      local.code_244[0] == ">"
        ? local.iter_243.tape_ptr + local.code_244[1]
        : local.iter_243.tape_ptr)

    code_ptr = 2 + (
      local.code_244[0] == "["
        ? local.iter_243.tape[local.iter_243.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_243.code_ptr)] : local.iter_243.code_ptr :
      local.code_244[0] == "]"
        ? local.iter_243.tape[local.iter_243.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_243.code_ptr)] : local.iter_243.code_ptr
        : local.iter_243.code_ptr)

    steps_taken = 1 + local.iter_243.steps_taken
  }
}

locals {
  code_245 = (try(local.iter_244.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_244.code_ptr, local.iter_244.code_ptr + 2)
    : [null])

  input_245 = (local.code_245[0] == ","
    ? substr(local.input_244, local.code_245[1], -1)
    : local.input_244)

  iter_245 = try(local.iter_244.code_ptr >= length(var.code), true) ? local.iter_244 : {
    output = (local.code_245[0] == "."
      ? "${local.iter_244.output}${join("", [for _ in range(local.code_245[1]) : jsondecode(format("\"\\u%04x\"", local.iter_244.tape[local.iter_244.tape_ptr]))])}"
      : local.iter_244.output)
    
    tape = (
      local.code_245[0] == "+"
        ? [for i, b in local.iter_244.tape : (i == local.iter_244.tape_ptr ? (b + local.code_245[1]) % 256 : b)] :
      local.code_245[0] == "-"
        ? [for i, b in local.iter_244.tape : (i == local.iter_244.tape_ptr ? (b - local.code_245[1] + 256) % 256 : b)] :
      local.code_245[0] == ","
        ? [for i, b in local.iter_244.tape : (i == local.iter_244.tape_ptr ? local.ascii_lookup[substr(local.input_245, 0, 1)] : b)]
        : local.iter_244.tape)

    tape_ptr = (
      local.code_245[0] == "<"
        ? local.iter_244.tape_ptr - local.code_245[1] :
      local.code_245[0] == ">"
        ? local.iter_244.tape_ptr + local.code_245[1]
        : local.iter_244.tape_ptr)

    code_ptr = 2 + (
      local.code_245[0] == "["
        ? local.iter_244.tape[local.iter_244.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_244.code_ptr)] : local.iter_244.code_ptr :
      local.code_245[0] == "]"
        ? local.iter_244.tape[local.iter_244.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_244.code_ptr)] : local.iter_244.code_ptr
        : local.iter_244.code_ptr)

    steps_taken = 1 + local.iter_244.steps_taken
  }
}

locals {
  code_246 = (try(local.iter_245.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_245.code_ptr, local.iter_245.code_ptr + 2)
    : [null])

  input_246 = (local.code_246[0] == ","
    ? substr(local.input_245, local.code_246[1], -1)
    : local.input_245)

  iter_246 = try(local.iter_245.code_ptr >= length(var.code), true) ? local.iter_245 : {
    output = (local.code_246[0] == "."
      ? "${local.iter_245.output}${join("", [for _ in range(local.code_246[1]) : jsondecode(format("\"\\u%04x\"", local.iter_245.tape[local.iter_245.tape_ptr]))])}"
      : local.iter_245.output)
    
    tape = (
      local.code_246[0] == "+"
        ? [for i, b in local.iter_245.tape : (i == local.iter_245.tape_ptr ? (b + local.code_246[1]) % 256 : b)] :
      local.code_246[0] == "-"
        ? [for i, b in local.iter_245.tape : (i == local.iter_245.tape_ptr ? (b - local.code_246[1] + 256) % 256 : b)] :
      local.code_246[0] == ","
        ? [for i, b in local.iter_245.tape : (i == local.iter_245.tape_ptr ? local.ascii_lookup[substr(local.input_246, 0, 1)] : b)]
        : local.iter_245.tape)

    tape_ptr = (
      local.code_246[0] == "<"
        ? local.iter_245.tape_ptr - local.code_246[1] :
      local.code_246[0] == ">"
        ? local.iter_245.tape_ptr + local.code_246[1]
        : local.iter_245.tape_ptr)

    code_ptr = 2 + (
      local.code_246[0] == "["
        ? local.iter_245.tape[local.iter_245.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_245.code_ptr)] : local.iter_245.code_ptr :
      local.code_246[0] == "]"
        ? local.iter_245.tape[local.iter_245.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_245.code_ptr)] : local.iter_245.code_ptr
        : local.iter_245.code_ptr)

    steps_taken = 1 + local.iter_245.steps_taken
  }
}

locals {
  code_247 = (try(local.iter_246.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_246.code_ptr, local.iter_246.code_ptr + 2)
    : [null])

  input_247 = (local.code_247[0] == ","
    ? substr(local.input_246, local.code_247[1], -1)
    : local.input_246)

  iter_247 = try(local.iter_246.code_ptr >= length(var.code), true) ? local.iter_246 : {
    output = (local.code_247[0] == "."
      ? "${local.iter_246.output}${join("", [for _ in range(local.code_247[1]) : jsondecode(format("\"\\u%04x\"", local.iter_246.tape[local.iter_246.tape_ptr]))])}"
      : local.iter_246.output)
    
    tape = (
      local.code_247[0] == "+"
        ? [for i, b in local.iter_246.tape : (i == local.iter_246.tape_ptr ? (b + local.code_247[1]) % 256 : b)] :
      local.code_247[0] == "-"
        ? [for i, b in local.iter_246.tape : (i == local.iter_246.tape_ptr ? (b - local.code_247[1] + 256) % 256 : b)] :
      local.code_247[0] == ","
        ? [for i, b in local.iter_246.tape : (i == local.iter_246.tape_ptr ? local.ascii_lookup[substr(local.input_247, 0, 1)] : b)]
        : local.iter_246.tape)

    tape_ptr = (
      local.code_247[0] == "<"
        ? local.iter_246.tape_ptr - local.code_247[1] :
      local.code_247[0] == ">"
        ? local.iter_246.tape_ptr + local.code_247[1]
        : local.iter_246.tape_ptr)

    code_ptr = 2 + (
      local.code_247[0] == "["
        ? local.iter_246.tape[local.iter_246.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_246.code_ptr)] : local.iter_246.code_ptr :
      local.code_247[0] == "]"
        ? local.iter_246.tape[local.iter_246.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_246.code_ptr)] : local.iter_246.code_ptr
        : local.iter_246.code_ptr)

    steps_taken = 1 + local.iter_246.steps_taken
  }
}

locals {
  code_248 = (try(local.iter_247.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_247.code_ptr, local.iter_247.code_ptr + 2)
    : [null])

  input_248 = (local.code_248[0] == ","
    ? substr(local.input_247, local.code_248[1], -1)
    : local.input_247)

  iter_248 = try(local.iter_247.code_ptr >= length(var.code), true) ? local.iter_247 : {
    output = (local.code_248[0] == "."
      ? "${local.iter_247.output}${join("", [for _ in range(local.code_248[1]) : jsondecode(format("\"\\u%04x\"", local.iter_247.tape[local.iter_247.tape_ptr]))])}"
      : local.iter_247.output)
    
    tape = (
      local.code_248[0] == "+"
        ? [for i, b in local.iter_247.tape : (i == local.iter_247.tape_ptr ? (b + local.code_248[1]) % 256 : b)] :
      local.code_248[0] == "-"
        ? [for i, b in local.iter_247.tape : (i == local.iter_247.tape_ptr ? (b - local.code_248[1] + 256) % 256 : b)] :
      local.code_248[0] == ","
        ? [for i, b in local.iter_247.tape : (i == local.iter_247.tape_ptr ? local.ascii_lookup[substr(local.input_248, 0, 1)] : b)]
        : local.iter_247.tape)

    tape_ptr = (
      local.code_248[0] == "<"
        ? local.iter_247.tape_ptr - local.code_248[1] :
      local.code_248[0] == ">"
        ? local.iter_247.tape_ptr + local.code_248[1]
        : local.iter_247.tape_ptr)

    code_ptr = 2 + (
      local.code_248[0] == "["
        ? local.iter_247.tape[local.iter_247.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_247.code_ptr)] : local.iter_247.code_ptr :
      local.code_248[0] == "]"
        ? local.iter_247.tape[local.iter_247.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_247.code_ptr)] : local.iter_247.code_ptr
        : local.iter_247.code_ptr)

    steps_taken = 1 + local.iter_247.steps_taken
  }
}

locals {
  code_249 = (try(local.iter_248.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_248.code_ptr, local.iter_248.code_ptr + 2)
    : [null])

  input_249 = (local.code_249[0] == ","
    ? substr(local.input_248, local.code_249[1], -1)
    : local.input_248)

  iter_249 = try(local.iter_248.code_ptr >= length(var.code), true) ? local.iter_248 : {
    output = (local.code_249[0] == "."
      ? "${local.iter_248.output}${join("", [for _ in range(local.code_249[1]) : jsondecode(format("\"\\u%04x\"", local.iter_248.tape[local.iter_248.tape_ptr]))])}"
      : local.iter_248.output)
    
    tape = (
      local.code_249[0] == "+"
        ? [for i, b in local.iter_248.tape : (i == local.iter_248.tape_ptr ? (b + local.code_249[1]) % 256 : b)] :
      local.code_249[0] == "-"
        ? [for i, b in local.iter_248.tape : (i == local.iter_248.tape_ptr ? (b - local.code_249[1] + 256) % 256 : b)] :
      local.code_249[0] == ","
        ? [for i, b in local.iter_248.tape : (i == local.iter_248.tape_ptr ? local.ascii_lookup[substr(local.input_249, 0, 1)] : b)]
        : local.iter_248.tape)

    tape_ptr = (
      local.code_249[0] == "<"
        ? local.iter_248.tape_ptr - local.code_249[1] :
      local.code_249[0] == ">"
        ? local.iter_248.tape_ptr + local.code_249[1]
        : local.iter_248.tape_ptr)

    code_ptr = 2 + (
      local.code_249[0] == "["
        ? local.iter_248.tape[local.iter_248.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_248.code_ptr)] : local.iter_248.code_ptr :
      local.code_249[0] == "]"
        ? local.iter_248.tape[local.iter_248.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_248.code_ptr)] : local.iter_248.code_ptr
        : local.iter_248.code_ptr)

    steps_taken = 1 + local.iter_248.steps_taken
  }
}

locals {
  code_250 = (try(local.iter_249.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_249.code_ptr, local.iter_249.code_ptr + 2)
    : [null])

  input_250 = (local.code_250[0] == ","
    ? substr(local.input_249, local.code_250[1], -1)
    : local.input_249)

  iter_250 = try(local.iter_249.code_ptr >= length(var.code), true) ? local.iter_249 : {
    output = (local.code_250[0] == "."
      ? "${local.iter_249.output}${join("", [for _ in range(local.code_250[1]) : jsondecode(format("\"\\u%04x\"", local.iter_249.tape[local.iter_249.tape_ptr]))])}"
      : local.iter_249.output)
    
    tape = (
      local.code_250[0] == "+"
        ? [for i, b in local.iter_249.tape : (i == local.iter_249.tape_ptr ? (b + local.code_250[1]) % 256 : b)] :
      local.code_250[0] == "-"
        ? [for i, b in local.iter_249.tape : (i == local.iter_249.tape_ptr ? (b - local.code_250[1] + 256) % 256 : b)] :
      local.code_250[0] == ","
        ? [for i, b in local.iter_249.tape : (i == local.iter_249.tape_ptr ? local.ascii_lookup[substr(local.input_250, 0, 1)] : b)]
        : local.iter_249.tape)

    tape_ptr = (
      local.code_250[0] == "<"
        ? local.iter_249.tape_ptr - local.code_250[1] :
      local.code_250[0] == ">"
        ? local.iter_249.tape_ptr + local.code_250[1]
        : local.iter_249.tape_ptr)

    code_ptr = 2 + (
      local.code_250[0] == "["
        ? local.iter_249.tape[local.iter_249.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_249.code_ptr)] : local.iter_249.code_ptr :
      local.code_250[0] == "]"
        ? local.iter_249.tape[local.iter_249.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_249.code_ptr)] : local.iter_249.code_ptr
        : local.iter_249.code_ptr)

    steps_taken = 1 + local.iter_249.steps_taken
  }
}

locals {
  code_251 = (try(local.iter_250.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_250.code_ptr, local.iter_250.code_ptr + 2)
    : [null])

  input_251 = (local.code_251[0] == ","
    ? substr(local.input_250, local.code_251[1], -1)
    : local.input_250)

  iter_251 = try(local.iter_250.code_ptr >= length(var.code), true) ? local.iter_250 : {
    output = (local.code_251[0] == "."
      ? "${local.iter_250.output}${join("", [for _ in range(local.code_251[1]) : jsondecode(format("\"\\u%04x\"", local.iter_250.tape[local.iter_250.tape_ptr]))])}"
      : local.iter_250.output)
    
    tape = (
      local.code_251[0] == "+"
        ? [for i, b in local.iter_250.tape : (i == local.iter_250.tape_ptr ? (b + local.code_251[1]) % 256 : b)] :
      local.code_251[0] == "-"
        ? [for i, b in local.iter_250.tape : (i == local.iter_250.tape_ptr ? (b - local.code_251[1] + 256) % 256 : b)] :
      local.code_251[0] == ","
        ? [for i, b in local.iter_250.tape : (i == local.iter_250.tape_ptr ? local.ascii_lookup[substr(local.input_251, 0, 1)] : b)]
        : local.iter_250.tape)

    tape_ptr = (
      local.code_251[0] == "<"
        ? local.iter_250.tape_ptr - local.code_251[1] :
      local.code_251[0] == ">"
        ? local.iter_250.tape_ptr + local.code_251[1]
        : local.iter_250.tape_ptr)

    code_ptr = 2 + (
      local.code_251[0] == "["
        ? local.iter_250.tape[local.iter_250.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_250.code_ptr)] : local.iter_250.code_ptr :
      local.code_251[0] == "]"
        ? local.iter_250.tape[local.iter_250.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_250.code_ptr)] : local.iter_250.code_ptr
        : local.iter_250.code_ptr)

    steps_taken = 1 + local.iter_250.steps_taken
  }
}

locals {
  code_252 = (try(local.iter_251.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_251.code_ptr, local.iter_251.code_ptr + 2)
    : [null])

  input_252 = (local.code_252[0] == ","
    ? substr(local.input_251, local.code_252[1], -1)
    : local.input_251)

  iter_252 = try(local.iter_251.code_ptr >= length(var.code), true) ? local.iter_251 : {
    output = (local.code_252[0] == "."
      ? "${local.iter_251.output}${join("", [for _ in range(local.code_252[1]) : jsondecode(format("\"\\u%04x\"", local.iter_251.tape[local.iter_251.tape_ptr]))])}"
      : local.iter_251.output)
    
    tape = (
      local.code_252[0] == "+"
        ? [for i, b in local.iter_251.tape : (i == local.iter_251.tape_ptr ? (b + local.code_252[1]) % 256 : b)] :
      local.code_252[0] == "-"
        ? [for i, b in local.iter_251.tape : (i == local.iter_251.tape_ptr ? (b - local.code_252[1] + 256) % 256 : b)] :
      local.code_252[0] == ","
        ? [for i, b in local.iter_251.tape : (i == local.iter_251.tape_ptr ? local.ascii_lookup[substr(local.input_252, 0, 1)] : b)]
        : local.iter_251.tape)

    tape_ptr = (
      local.code_252[0] == "<"
        ? local.iter_251.tape_ptr - local.code_252[1] :
      local.code_252[0] == ">"
        ? local.iter_251.tape_ptr + local.code_252[1]
        : local.iter_251.tape_ptr)

    code_ptr = 2 + (
      local.code_252[0] == "["
        ? local.iter_251.tape[local.iter_251.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_251.code_ptr)] : local.iter_251.code_ptr :
      local.code_252[0] == "]"
        ? local.iter_251.tape[local.iter_251.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_251.code_ptr)] : local.iter_251.code_ptr
        : local.iter_251.code_ptr)

    steps_taken = 1 + local.iter_251.steps_taken
  }
}

locals {
  code_253 = (try(local.iter_252.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_252.code_ptr, local.iter_252.code_ptr + 2)
    : [null])

  input_253 = (local.code_253[0] == ","
    ? substr(local.input_252, local.code_253[1], -1)
    : local.input_252)

  iter_253 = try(local.iter_252.code_ptr >= length(var.code), true) ? local.iter_252 : {
    output = (local.code_253[0] == "."
      ? "${local.iter_252.output}${join("", [for _ in range(local.code_253[1]) : jsondecode(format("\"\\u%04x\"", local.iter_252.tape[local.iter_252.tape_ptr]))])}"
      : local.iter_252.output)
    
    tape = (
      local.code_253[0] == "+"
        ? [for i, b in local.iter_252.tape : (i == local.iter_252.tape_ptr ? (b + local.code_253[1]) % 256 : b)] :
      local.code_253[0] == "-"
        ? [for i, b in local.iter_252.tape : (i == local.iter_252.tape_ptr ? (b - local.code_253[1] + 256) % 256 : b)] :
      local.code_253[0] == ","
        ? [for i, b in local.iter_252.tape : (i == local.iter_252.tape_ptr ? local.ascii_lookup[substr(local.input_253, 0, 1)] : b)]
        : local.iter_252.tape)

    tape_ptr = (
      local.code_253[0] == "<"
        ? local.iter_252.tape_ptr - local.code_253[1] :
      local.code_253[0] == ">"
        ? local.iter_252.tape_ptr + local.code_253[1]
        : local.iter_252.tape_ptr)

    code_ptr = 2 + (
      local.code_253[0] == "["
        ? local.iter_252.tape[local.iter_252.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_252.code_ptr)] : local.iter_252.code_ptr :
      local.code_253[0] == "]"
        ? local.iter_252.tape[local.iter_252.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_252.code_ptr)] : local.iter_252.code_ptr
        : local.iter_252.code_ptr)

    steps_taken = 1 + local.iter_252.steps_taken
  }
}

locals {
  code_254 = (try(local.iter_253.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_253.code_ptr, local.iter_253.code_ptr + 2)
    : [null])

  input_254 = (local.code_254[0] == ","
    ? substr(local.input_253, local.code_254[1], -1)
    : local.input_253)

  iter_254 = try(local.iter_253.code_ptr >= length(var.code), true) ? local.iter_253 : {
    output = (local.code_254[0] == "."
      ? "${local.iter_253.output}${join("", [for _ in range(local.code_254[1]) : jsondecode(format("\"\\u%04x\"", local.iter_253.tape[local.iter_253.tape_ptr]))])}"
      : local.iter_253.output)
    
    tape = (
      local.code_254[0] == "+"
        ? [for i, b in local.iter_253.tape : (i == local.iter_253.tape_ptr ? (b + local.code_254[1]) % 256 : b)] :
      local.code_254[0] == "-"
        ? [for i, b in local.iter_253.tape : (i == local.iter_253.tape_ptr ? (b - local.code_254[1] + 256) % 256 : b)] :
      local.code_254[0] == ","
        ? [for i, b in local.iter_253.tape : (i == local.iter_253.tape_ptr ? local.ascii_lookup[substr(local.input_254, 0, 1)] : b)]
        : local.iter_253.tape)

    tape_ptr = (
      local.code_254[0] == "<"
        ? local.iter_253.tape_ptr - local.code_254[1] :
      local.code_254[0] == ">"
        ? local.iter_253.tape_ptr + local.code_254[1]
        : local.iter_253.tape_ptr)

    code_ptr = 2 + (
      local.code_254[0] == "["
        ? local.iter_253.tape[local.iter_253.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_253.code_ptr)] : local.iter_253.code_ptr :
      local.code_254[0] == "]"
        ? local.iter_253.tape[local.iter_253.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_253.code_ptr)] : local.iter_253.code_ptr
        : local.iter_253.code_ptr)

    steps_taken = 1 + local.iter_253.steps_taken
  }
}

locals {
  code_255 = (try(local.iter_254.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_254.code_ptr, local.iter_254.code_ptr + 2)
    : [null])

  input_255 = (local.code_255[0] == ","
    ? substr(local.input_254, local.code_255[1], -1)
    : local.input_254)

  iter_255 = try(local.iter_254.code_ptr >= length(var.code), true) ? local.iter_254 : {
    output = (local.code_255[0] == "."
      ? "${local.iter_254.output}${join("", [for _ in range(local.code_255[1]) : jsondecode(format("\"\\u%04x\"", local.iter_254.tape[local.iter_254.tape_ptr]))])}"
      : local.iter_254.output)
    
    tape = (
      local.code_255[0] == "+"
        ? [for i, b in local.iter_254.tape : (i == local.iter_254.tape_ptr ? (b + local.code_255[1]) % 256 : b)] :
      local.code_255[0] == "-"
        ? [for i, b in local.iter_254.tape : (i == local.iter_254.tape_ptr ? (b - local.code_255[1] + 256) % 256 : b)] :
      local.code_255[0] == ","
        ? [for i, b in local.iter_254.tape : (i == local.iter_254.tape_ptr ? local.ascii_lookup[substr(local.input_255, 0, 1)] : b)]
        : local.iter_254.tape)

    tape_ptr = (
      local.code_255[0] == "<"
        ? local.iter_254.tape_ptr - local.code_255[1] :
      local.code_255[0] == ">"
        ? local.iter_254.tape_ptr + local.code_255[1]
        : local.iter_254.tape_ptr)

    code_ptr = 2 + (
      local.code_255[0] == "["
        ? local.iter_254.tape[local.iter_254.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_254.code_ptr)] : local.iter_254.code_ptr :
      local.code_255[0] == "]"
        ? local.iter_254.tape[local.iter_254.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_254.code_ptr)] : local.iter_254.code_ptr
        : local.iter_254.code_ptr)

    steps_taken = 1 + local.iter_254.steps_taken
  }
}

locals {
  code_256 = (try(local.iter_255.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_255.code_ptr, local.iter_255.code_ptr + 2)
    : [null])

  input_256 = (local.code_256[0] == ","
    ? substr(local.input_255, local.code_256[1], -1)
    : local.input_255)

  iter_256 = try(local.iter_255.code_ptr >= length(var.code), true) ? local.iter_255 : {
    output = (local.code_256[0] == "."
      ? "${local.iter_255.output}${join("", [for _ in range(local.code_256[1]) : jsondecode(format("\"\\u%04x\"", local.iter_255.tape[local.iter_255.tape_ptr]))])}"
      : local.iter_255.output)
    
    tape = (
      local.code_256[0] == "+"
        ? [for i, b in local.iter_255.tape : (i == local.iter_255.tape_ptr ? (b + local.code_256[1]) % 256 : b)] :
      local.code_256[0] == "-"
        ? [for i, b in local.iter_255.tape : (i == local.iter_255.tape_ptr ? (b - local.code_256[1] + 256) % 256 : b)] :
      local.code_256[0] == ","
        ? [for i, b in local.iter_255.tape : (i == local.iter_255.tape_ptr ? local.ascii_lookup[substr(local.input_256, 0, 1)] : b)]
        : local.iter_255.tape)

    tape_ptr = (
      local.code_256[0] == "<"
        ? local.iter_255.tape_ptr - local.code_256[1] :
      local.code_256[0] == ">"
        ? local.iter_255.tape_ptr + local.code_256[1]
        : local.iter_255.tape_ptr)

    code_ptr = 2 + (
      local.code_256[0] == "["
        ? local.iter_255.tape[local.iter_255.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_255.code_ptr)] : local.iter_255.code_ptr :
      local.code_256[0] == "]"
        ? local.iter_255.tape[local.iter_255.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_255.code_ptr)] : local.iter_255.code_ptr
        : local.iter_255.code_ptr)

    steps_taken = 1 + local.iter_255.steps_taken
  }
}

locals {
  code_257 = (try(local.iter_256.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_256.code_ptr, local.iter_256.code_ptr + 2)
    : [null])

  input_257 = (local.code_257[0] == ","
    ? substr(local.input_256, local.code_257[1], -1)
    : local.input_256)

  iter_257 = try(local.iter_256.code_ptr >= length(var.code), true) ? local.iter_256 : {
    output = (local.code_257[0] == "."
      ? "${local.iter_256.output}${join("", [for _ in range(local.code_257[1]) : jsondecode(format("\"\\u%04x\"", local.iter_256.tape[local.iter_256.tape_ptr]))])}"
      : local.iter_256.output)
    
    tape = (
      local.code_257[0] == "+"
        ? [for i, b in local.iter_256.tape : (i == local.iter_256.tape_ptr ? (b + local.code_257[1]) % 256 : b)] :
      local.code_257[0] == "-"
        ? [for i, b in local.iter_256.tape : (i == local.iter_256.tape_ptr ? (b - local.code_257[1] + 256) % 256 : b)] :
      local.code_257[0] == ","
        ? [for i, b in local.iter_256.tape : (i == local.iter_256.tape_ptr ? local.ascii_lookup[substr(local.input_257, 0, 1)] : b)]
        : local.iter_256.tape)

    tape_ptr = (
      local.code_257[0] == "<"
        ? local.iter_256.tape_ptr - local.code_257[1] :
      local.code_257[0] == ">"
        ? local.iter_256.tape_ptr + local.code_257[1]
        : local.iter_256.tape_ptr)

    code_ptr = 2 + (
      local.code_257[0] == "["
        ? local.iter_256.tape[local.iter_256.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_256.code_ptr)] : local.iter_256.code_ptr :
      local.code_257[0] == "]"
        ? local.iter_256.tape[local.iter_256.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_256.code_ptr)] : local.iter_256.code_ptr
        : local.iter_256.code_ptr)

    steps_taken = 1 + local.iter_256.steps_taken
  }
}

locals {
  code_258 = (try(local.iter_257.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_257.code_ptr, local.iter_257.code_ptr + 2)
    : [null])

  input_258 = (local.code_258[0] == ","
    ? substr(local.input_257, local.code_258[1], -1)
    : local.input_257)

  iter_258 = try(local.iter_257.code_ptr >= length(var.code), true) ? local.iter_257 : {
    output = (local.code_258[0] == "."
      ? "${local.iter_257.output}${join("", [for _ in range(local.code_258[1]) : jsondecode(format("\"\\u%04x\"", local.iter_257.tape[local.iter_257.tape_ptr]))])}"
      : local.iter_257.output)
    
    tape = (
      local.code_258[0] == "+"
        ? [for i, b in local.iter_257.tape : (i == local.iter_257.tape_ptr ? (b + local.code_258[1]) % 256 : b)] :
      local.code_258[0] == "-"
        ? [for i, b in local.iter_257.tape : (i == local.iter_257.tape_ptr ? (b - local.code_258[1] + 256) % 256 : b)] :
      local.code_258[0] == ","
        ? [for i, b in local.iter_257.tape : (i == local.iter_257.tape_ptr ? local.ascii_lookup[substr(local.input_258, 0, 1)] : b)]
        : local.iter_257.tape)

    tape_ptr = (
      local.code_258[0] == "<"
        ? local.iter_257.tape_ptr - local.code_258[1] :
      local.code_258[0] == ">"
        ? local.iter_257.tape_ptr + local.code_258[1]
        : local.iter_257.tape_ptr)

    code_ptr = 2 + (
      local.code_258[0] == "["
        ? local.iter_257.tape[local.iter_257.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_257.code_ptr)] : local.iter_257.code_ptr :
      local.code_258[0] == "]"
        ? local.iter_257.tape[local.iter_257.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_257.code_ptr)] : local.iter_257.code_ptr
        : local.iter_257.code_ptr)

    steps_taken = 1 + local.iter_257.steps_taken
  }
}

locals {
  code_259 = (try(local.iter_258.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_258.code_ptr, local.iter_258.code_ptr + 2)
    : [null])

  input_259 = (local.code_259[0] == ","
    ? substr(local.input_258, local.code_259[1], -1)
    : local.input_258)

  iter_259 = try(local.iter_258.code_ptr >= length(var.code), true) ? local.iter_258 : {
    output = (local.code_259[0] == "."
      ? "${local.iter_258.output}${join("", [for _ in range(local.code_259[1]) : jsondecode(format("\"\\u%04x\"", local.iter_258.tape[local.iter_258.tape_ptr]))])}"
      : local.iter_258.output)
    
    tape = (
      local.code_259[0] == "+"
        ? [for i, b in local.iter_258.tape : (i == local.iter_258.tape_ptr ? (b + local.code_259[1]) % 256 : b)] :
      local.code_259[0] == "-"
        ? [for i, b in local.iter_258.tape : (i == local.iter_258.tape_ptr ? (b - local.code_259[1] + 256) % 256 : b)] :
      local.code_259[0] == ","
        ? [for i, b in local.iter_258.tape : (i == local.iter_258.tape_ptr ? local.ascii_lookup[substr(local.input_259, 0, 1)] : b)]
        : local.iter_258.tape)

    tape_ptr = (
      local.code_259[0] == "<"
        ? local.iter_258.tape_ptr - local.code_259[1] :
      local.code_259[0] == ">"
        ? local.iter_258.tape_ptr + local.code_259[1]
        : local.iter_258.tape_ptr)

    code_ptr = 2 + (
      local.code_259[0] == "["
        ? local.iter_258.tape[local.iter_258.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_258.code_ptr)] : local.iter_258.code_ptr :
      local.code_259[0] == "]"
        ? local.iter_258.tape[local.iter_258.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_258.code_ptr)] : local.iter_258.code_ptr
        : local.iter_258.code_ptr)

    steps_taken = 1 + local.iter_258.steps_taken
  }
}

locals {
  code_260 = (try(local.iter_259.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_259.code_ptr, local.iter_259.code_ptr + 2)
    : [null])

  input_260 = (local.code_260[0] == ","
    ? substr(local.input_259, local.code_260[1], -1)
    : local.input_259)

  iter_260 = try(local.iter_259.code_ptr >= length(var.code), true) ? local.iter_259 : {
    output = (local.code_260[0] == "."
      ? "${local.iter_259.output}${join("", [for _ in range(local.code_260[1]) : jsondecode(format("\"\\u%04x\"", local.iter_259.tape[local.iter_259.tape_ptr]))])}"
      : local.iter_259.output)
    
    tape = (
      local.code_260[0] == "+"
        ? [for i, b in local.iter_259.tape : (i == local.iter_259.tape_ptr ? (b + local.code_260[1]) % 256 : b)] :
      local.code_260[0] == "-"
        ? [for i, b in local.iter_259.tape : (i == local.iter_259.tape_ptr ? (b - local.code_260[1] + 256) % 256 : b)] :
      local.code_260[0] == ","
        ? [for i, b in local.iter_259.tape : (i == local.iter_259.tape_ptr ? local.ascii_lookup[substr(local.input_260, 0, 1)] : b)]
        : local.iter_259.tape)

    tape_ptr = (
      local.code_260[0] == "<"
        ? local.iter_259.tape_ptr - local.code_260[1] :
      local.code_260[0] == ">"
        ? local.iter_259.tape_ptr + local.code_260[1]
        : local.iter_259.tape_ptr)

    code_ptr = 2 + (
      local.code_260[0] == "["
        ? local.iter_259.tape[local.iter_259.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_259.code_ptr)] : local.iter_259.code_ptr :
      local.code_260[0] == "]"
        ? local.iter_259.tape[local.iter_259.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_259.code_ptr)] : local.iter_259.code_ptr
        : local.iter_259.code_ptr)

    steps_taken = 1 + local.iter_259.steps_taken
  }
}

locals {
  code_261 = (try(local.iter_260.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_260.code_ptr, local.iter_260.code_ptr + 2)
    : [null])

  input_261 = (local.code_261[0] == ","
    ? substr(local.input_260, local.code_261[1], -1)
    : local.input_260)

  iter_261 = try(local.iter_260.code_ptr >= length(var.code), true) ? local.iter_260 : {
    output = (local.code_261[0] == "."
      ? "${local.iter_260.output}${join("", [for _ in range(local.code_261[1]) : jsondecode(format("\"\\u%04x\"", local.iter_260.tape[local.iter_260.tape_ptr]))])}"
      : local.iter_260.output)
    
    tape = (
      local.code_261[0] == "+"
        ? [for i, b in local.iter_260.tape : (i == local.iter_260.tape_ptr ? (b + local.code_261[1]) % 256 : b)] :
      local.code_261[0] == "-"
        ? [for i, b in local.iter_260.tape : (i == local.iter_260.tape_ptr ? (b - local.code_261[1] + 256) % 256 : b)] :
      local.code_261[0] == ","
        ? [for i, b in local.iter_260.tape : (i == local.iter_260.tape_ptr ? local.ascii_lookup[substr(local.input_261, 0, 1)] : b)]
        : local.iter_260.tape)

    tape_ptr = (
      local.code_261[0] == "<"
        ? local.iter_260.tape_ptr - local.code_261[1] :
      local.code_261[0] == ">"
        ? local.iter_260.tape_ptr + local.code_261[1]
        : local.iter_260.tape_ptr)

    code_ptr = 2 + (
      local.code_261[0] == "["
        ? local.iter_260.tape[local.iter_260.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_260.code_ptr)] : local.iter_260.code_ptr :
      local.code_261[0] == "]"
        ? local.iter_260.tape[local.iter_260.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_260.code_ptr)] : local.iter_260.code_ptr
        : local.iter_260.code_ptr)

    steps_taken = 1 + local.iter_260.steps_taken
  }
}

locals {
  code_262 = (try(local.iter_261.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_261.code_ptr, local.iter_261.code_ptr + 2)
    : [null])

  input_262 = (local.code_262[0] == ","
    ? substr(local.input_261, local.code_262[1], -1)
    : local.input_261)

  iter_262 = try(local.iter_261.code_ptr >= length(var.code), true) ? local.iter_261 : {
    output = (local.code_262[0] == "."
      ? "${local.iter_261.output}${join("", [for _ in range(local.code_262[1]) : jsondecode(format("\"\\u%04x\"", local.iter_261.tape[local.iter_261.tape_ptr]))])}"
      : local.iter_261.output)
    
    tape = (
      local.code_262[0] == "+"
        ? [for i, b in local.iter_261.tape : (i == local.iter_261.tape_ptr ? (b + local.code_262[1]) % 256 : b)] :
      local.code_262[0] == "-"
        ? [for i, b in local.iter_261.tape : (i == local.iter_261.tape_ptr ? (b - local.code_262[1] + 256) % 256 : b)] :
      local.code_262[0] == ","
        ? [for i, b in local.iter_261.tape : (i == local.iter_261.tape_ptr ? local.ascii_lookup[substr(local.input_262, 0, 1)] : b)]
        : local.iter_261.tape)

    tape_ptr = (
      local.code_262[0] == "<"
        ? local.iter_261.tape_ptr - local.code_262[1] :
      local.code_262[0] == ">"
        ? local.iter_261.tape_ptr + local.code_262[1]
        : local.iter_261.tape_ptr)

    code_ptr = 2 + (
      local.code_262[0] == "["
        ? local.iter_261.tape[local.iter_261.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_261.code_ptr)] : local.iter_261.code_ptr :
      local.code_262[0] == "]"
        ? local.iter_261.tape[local.iter_261.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_261.code_ptr)] : local.iter_261.code_ptr
        : local.iter_261.code_ptr)

    steps_taken = 1 + local.iter_261.steps_taken
  }
}

locals {
  code_263 = (try(local.iter_262.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_262.code_ptr, local.iter_262.code_ptr + 2)
    : [null])

  input_263 = (local.code_263[0] == ","
    ? substr(local.input_262, local.code_263[1], -1)
    : local.input_262)

  iter_263 = try(local.iter_262.code_ptr >= length(var.code), true) ? local.iter_262 : {
    output = (local.code_263[0] == "."
      ? "${local.iter_262.output}${join("", [for _ in range(local.code_263[1]) : jsondecode(format("\"\\u%04x\"", local.iter_262.tape[local.iter_262.tape_ptr]))])}"
      : local.iter_262.output)
    
    tape = (
      local.code_263[0] == "+"
        ? [for i, b in local.iter_262.tape : (i == local.iter_262.tape_ptr ? (b + local.code_263[1]) % 256 : b)] :
      local.code_263[0] == "-"
        ? [for i, b in local.iter_262.tape : (i == local.iter_262.tape_ptr ? (b - local.code_263[1] + 256) % 256 : b)] :
      local.code_263[0] == ","
        ? [for i, b in local.iter_262.tape : (i == local.iter_262.tape_ptr ? local.ascii_lookup[substr(local.input_263, 0, 1)] : b)]
        : local.iter_262.tape)

    tape_ptr = (
      local.code_263[0] == "<"
        ? local.iter_262.tape_ptr - local.code_263[1] :
      local.code_263[0] == ">"
        ? local.iter_262.tape_ptr + local.code_263[1]
        : local.iter_262.tape_ptr)

    code_ptr = 2 + (
      local.code_263[0] == "["
        ? local.iter_262.tape[local.iter_262.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_262.code_ptr)] : local.iter_262.code_ptr :
      local.code_263[0] == "]"
        ? local.iter_262.tape[local.iter_262.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_262.code_ptr)] : local.iter_262.code_ptr
        : local.iter_262.code_ptr)

    steps_taken = 1 + local.iter_262.steps_taken
  }
}

locals {
  code_264 = (try(local.iter_263.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_263.code_ptr, local.iter_263.code_ptr + 2)
    : [null])

  input_264 = (local.code_264[0] == ","
    ? substr(local.input_263, local.code_264[1], -1)
    : local.input_263)

  iter_264 = try(local.iter_263.code_ptr >= length(var.code), true) ? local.iter_263 : {
    output = (local.code_264[0] == "."
      ? "${local.iter_263.output}${join("", [for _ in range(local.code_264[1]) : jsondecode(format("\"\\u%04x\"", local.iter_263.tape[local.iter_263.tape_ptr]))])}"
      : local.iter_263.output)
    
    tape = (
      local.code_264[0] == "+"
        ? [for i, b in local.iter_263.tape : (i == local.iter_263.tape_ptr ? (b + local.code_264[1]) % 256 : b)] :
      local.code_264[0] == "-"
        ? [for i, b in local.iter_263.tape : (i == local.iter_263.tape_ptr ? (b - local.code_264[1] + 256) % 256 : b)] :
      local.code_264[0] == ","
        ? [for i, b in local.iter_263.tape : (i == local.iter_263.tape_ptr ? local.ascii_lookup[substr(local.input_264, 0, 1)] : b)]
        : local.iter_263.tape)

    tape_ptr = (
      local.code_264[0] == "<"
        ? local.iter_263.tape_ptr - local.code_264[1] :
      local.code_264[0] == ">"
        ? local.iter_263.tape_ptr + local.code_264[1]
        : local.iter_263.tape_ptr)

    code_ptr = 2 + (
      local.code_264[0] == "["
        ? local.iter_263.tape[local.iter_263.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_263.code_ptr)] : local.iter_263.code_ptr :
      local.code_264[0] == "]"
        ? local.iter_263.tape[local.iter_263.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_263.code_ptr)] : local.iter_263.code_ptr
        : local.iter_263.code_ptr)

    steps_taken = 1 + local.iter_263.steps_taken
  }
}

locals {
  code_265 = (try(local.iter_264.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_264.code_ptr, local.iter_264.code_ptr + 2)
    : [null])

  input_265 = (local.code_265[0] == ","
    ? substr(local.input_264, local.code_265[1], -1)
    : local.input_264)

  iter_265 = try(local.iter_264.code_ptr >= length(var.code), true) ? local.iter_264 : {
    output = (local.code_265[0] == "."
      ? "${local.iter_264.output}${join("", [for _ in range(local.code_265[1]) : jsondecode(format("\"\\u%04x\"", local.iter_264.tape[local.iter_264.tape_ptr]))])}"
      : local.iter_264.output)
    
    tape = (
      local.code_265[0] == "+"
        ? [for i, b in local.iter_264.tape : (i == local.iter_264.tape_ptr ? (b + local.code_265[1]) % 256 : b)] :
      local.code_265[0] == "-"
        ? [for i, b in local.iter_264.tape : (i == local.iter_264.tape_ptr ? (b - local.code_265[1] + 256) % 256 : b)] :
      local.code_265[0] == ","
        ? [for i, b in local.iter_264.tape : (i == local.iter_264.tape_ptr ? local.ascii_lookup[substr(local.input_265, 0, 1)] : b)]
        : local.iter_264.tape)

    tape_ptr = (
      local.code_265[0] == "<"
        ? local.iter_264.tape_ptr - local.code_265[1] :
      local.code_265[0] == ">"
        ? local.iter_264.tape_ptr + local.code_265[1]
        : local.iter_264.tape_ptr)

    code_ptr = 2 + (
      local.code_265[0] == "["
        ? local.iter_264.tape[local.iter_264.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_264.code_ptr)] : local.iter_264.code_ptr :
      local.code_265[0] == "]"
        ? local.iter_264.tape[local.iter_264.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_264.code_ptr)] : local.iter_264.code_ptr
        : local.iter_264.code_ptr)

    steps_taken = 1 + local.iter_264.steps_taken
  }
}

locals {
  code_266 = (try(local.iter_265.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_265.code_ptr, local.iter_265.code_ptr + 2)
    : [null])

  input_266 = (local.code_266[0] == ","
    ? substr(local.input_265, local.code_266[1], -1)
    : local.input_265)

  iter_266 = try(local.iter_265.code_ptr >= length(var.code), true) ? local.iter_265 : {
    output = (local.code_266[0] == "."
      ? "${local.iter_265.output}${join("", [for _ in range(local.code_266[1]) : jsondecode(format("\"\\u%04x\"", local.iter_265.tape[local.iter_265.tape_ptr]))])}"
      : local.iter_265.output)
    
    tape = (
      local.code_266[0] == "+"
        ? [for i, b in local.iter_265.tape : (i == local.iter_265.tape_ptr ? (b + local.code_266[1]) % 256 : b)] :
      local.code_266[0] == "-"
        ? [for i, b in local.iter_265.tape : (i == local.iter_265.tape_ptr ? (b - local.code_266[1] + 256) % 256 : b)] :
      local.code_266[0] == ","
        ? [for i, b in local.iter_265.tape : (i == local.iter_265.tape_ptr ? local.ascii_lookup[substr(local.input_266, 0, 1)] : b)]
        : local.iter_265.tape)

    tape_ptr = (
      local.code_266[0] == "<"
        ? local.iter_265.tape_ptr - local.code_266[1] :
      local.code_266[0] == ">"
        ? local.iter_265.tape_ptr + local.code_266[1]
        : local.iter_265.tape_ptr)

    code_ptr = 2 + (
      local.code_266[0] == "["
        ? local.iter_265.tape[local.iter_265.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_265.code_ptr)] : local.iter_265.code_ptr :
      local.code_266[0] == "]"
        ? local.iter_265.tape[local.iter_265.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_265.code_ptr)] : local.iter_265.code_ptr
        : local.iter_265.code_ptr)

    steps_taken = 1 + local.iter_265.steps_taken
  }
}

locals {
  code_267 = (try(local.iter_266.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_266.code_ptr, local.iter_266.code_ptr + 2)
    : [null])

  input_267 = (local.code_267[0] == ","
    ? substr(local.input_266, local.code_267[1], -1)
    : local.input_266)

  iter_267 = try(local.iter_266.code_ptr >= length(var.code), true) ? local.iter_266 : {
    output = (local.code_267[0] == "."
      ? "${local.iter_266.output}${join("", [for _ in range(local.code_267[1]) : jsondecode(format("\"\\u%04x\"", local.iter_266.tape[local.iter_266.tape_ptr]))])}"
      : local.iter_266.output)
    
    tape = (
      local.code_267[0] == "+"
        ? [for i, b in local.iter_266.tape : (i == local.iter_266.tape_ptr ? (b + local.code_267[1]) % 256 : b)] :
      local.code_267[0] == "-"
        ? [for i, b in local.iter_266.tape : (i == local.iter_266.tape_ptr ? (b - local.code_267[1] + 256) % 256 : b)] :
      local.code_267[0] == ","
        ? [for i, b in local.iter_266.tape : (i == local.iter_266.tape_ptr ? local.ascii_lookup[substr(local.input_267, 0, 1)] : b)]
        : local.iter_266.tape)

    tape_ptr = (
      local.code_267[0] == "<"
        ? local.iter_266.tape_ptr - local.code_267[1] :
      local.code_267[0] == ">"
        ? local.iter_266.tape_ptr + local.code_267[1]
        : local.iter_266.tape_ptr)

    code_ptr = 2 + (
      local.code_267[0] == "["
        ? local.iter_266.tape[local.iter_266.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_266.code_ptr)] : local.iter_266.code_ptr :
      local.code_267[0] == "]"
        ? local.iter_266.tape[local.iter_266.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_266.code_ptr)] : local.iter_266.code_ptr
        : local.iter_266.code_ptr)

    steps_taken = 1 + local.iter_266.steps_taken
  }
}

locals {
  code_268 = (try(local.iter_267.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_267.code_ptr, local.iter_267.code_ptr + 2)
    : [null])

  input_268 = (local.code_268[0] == ","
    ? substr(local.input_267, local.code_268[1], -1)
    : local.input_267)

  iter_268 = try(local.iter_267.code_ptr >= length(var.code), true) ? local.iter_267 : {
    output = (local.code_268[0] == "."
      ? "${local.iter_267.output}${join("", [for _ in range(local.code_268[1]) : jsondecode(format("\"\\u%04x\"", local.iter_267.tape[local.iter_267.tape_ptr]))])}"
      : local.iter_267.output)
    
    tape = (
      local.code_268[0] == "+"
        ? [for i, b in local.iter_267.tape : (i == local.iter_267.tape_ptr ? (b + local.code_268[1]) % 256 : b)] :
      local.code_268[0] == "-"
        ? [for i, b in local.iter_267.tape : (i == local.iter_267.tape_ptr ? (b - local.code_268[1] + 256) % 256 : b)] :
      local.code_268[0] == ","
        ? [for i, b in local.iter_267.tape : (i == local.iter_267.tape_ptr ? local.ascii_lookup[substr(local.input_268, 0, 1)] : b)]
        : local.iter_267.tape)

    tape_ptr = (
      local.code_268[0] == "<"
        ? local.iter_267.tape_ptr - local.code_268[1] :
      local.code_268[0] == ">"
        ? local.iter_267.tape_ptr + local.code_268[1]
        : local.iter_267.tape_ptr)

    code_ptr = 2 + (
      local.code_268[0] == "["
        ? local.iter_267.tape[local.iter_267.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_267.code_ptr)] : local.iter_267.code_ptr :
      local.code_268[0] == "]"
        ? local.iter_267.tape[local.iter_267.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_267.code_ptr)] : local.iter_267.code_ptr
        : local.iter_267.code_ptr)

    steps_taken = 1 + local.iter_267.steps_taken
  }
}

locals {
  code_269 = (try(local.iter_268.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_268.code_ptr, local.iter_268.code_ptr + 2)
    : [null])

  input_269 = (local.code_269[0] == ","
    ? substr(local.input_268, local.code_269[1], -1)
    : local.input_268)

  iter_269 = try(local.iter_268.code_ptr >= length(var.code), true) ? local.iter_268 : {
    output = (local.code_269[0] == "."
      ? "${local.iter_268.output}${join("", [for _ in range(local.code_269[1]) : jsondecode(format("\"\\u%04x\"", local.iter_268.tape[local.iter_268.tape_ptr]))])}"
      : local.iter_268.output)
    
    tape = (
      local.code_269[0] == "+"
        ? [for i, b in local.iter_268.tape : (i == local.iter_268.tape_ptr ? (b + local.code_269[1]) % 256 : b)] :
      local.code_269[0] == "-"
        ? [for i, b in local.iter_268.tape : (i == local.iter_268.tape_ptr ? (b - local.code_269[1] + 256) % 256 : b)] :
      local.code_269[0] == ","
        ? [for i, b in local.iter_268.tape : (i == local.iter_268.tape_ptr ? local.ascii_lookup[substr(local.input_269, 0, 1)] : b)]
        : local.iter_268.tape)

    tape_ptr = (
      local.code_269[0] == "<"
        ? local.iter_268.tape_ptr - local.code_269[1] :
      local.code_269[0] == ">"
        ? local.iter_268.tape_ptr + local.code_269[1]
        : local.iter_268.tape_ptr)

    code_ptr = 2 + (
      local.code_269[0] == "["
        ? local.iter_268.tape[local.iter_268.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_268.code_ptr)] : local.iter_268.code_ptr :
      local.code_269[0] == "]"
        ? local.iter_268.tape[local.iter_268.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_268.code_ptr)] : local.iter_268.code_ptr
        : local.iter_268.code_ptr)

    steps_taken = 1 + local.iter_268.steps_taken
  }
}

locals {
  code_270 = (try(local.iter_269.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_269.code_ptr, local.iter_269.code_ptr + 2)
    : [null])

  input_270 = (local.code_270[0] == ","
    ? substr(local.input_269, local.code_270[1], -1)
    : local.input_269)

  iter_270 = try(local.iter_269.code_ptr >= length(var.code), true) ? local.iter_269 : {
    output = (local.code_270[0] == "."
      ? "${local.iter_269.output}${join("", [for _ in range(local.code_270[1]) : jsondecode(format("\"\\u%04x\"", local.iter_269.tape[local.iter_269.tape_ptr]))])}"
      : local.iter_269.output)
    
    tape = (
      local.code_270[0] == "+"
        ? [for i, b in local.iter_269.tape : (i == local.iter_269.tape_ptr ? (b + local.code_270[1]) % 256 : b)] :
      local.code_270[0] == "-"
        ? [for i, b in local.iter_269.tape : (i == local.iter_269.tape_ptr ? (b - local.code_270[1] + 256) % 256 : b)] :
      local.code_270[0] == ","
        ? [for i, b in local.iter_269.tape : (i == local.iter_269.tape_ptr ? local.ascii_lookup[substr(local.input_270, 0, 1)] : b)]
        : local.iter_269.tape)

    tape_ptr = (
      local.code_270[0] == "<"
        ? local.iter_269.tape_ptr - local.code_270[1] :
      local.code_270[0] == ">"
        ? local.iter_269.tape_ptr + local.code_270[1]
        : local.iter_269.tape_ptr)

    code_ptr = 2 + (
      local.code_270[0] == "["
        ? local.iter_269.tape[local.iter_269.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_269.code_ptr)] : local.iter_269.code_ptr :
      local.code_270[0] == "]"
        ? local.iter_269.tape[local.iter_269.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_269.code_ptr)] : local.iter_269.code_ptr
        : local.iter_269.code_ptr)

    steps_taken = 1 + local.iter_269.steps_taken
  }
}

locals {
  code_271 = (try(local.iter_270.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_270.code_ptr, local.iter_270.code_ptr + 2)
    : [null])

  input_271 = (local.code_271[0] == ","
    ? substr(local.input_270, local.code_271[1], -1)
    : local.input_270)

  iter_271 = try(local.iter_270.code_ptr >= length(var.code), true) ? local.iter_270 : {
    output = (local.code_271[0] == "."
      ? "${local.iter_270.output}${join("", [for _ in range(local.code_271[1]) : jsondecode(format("\"\\u%04x\"", local.iter_270.tape[local.iter_270.tape_ptr]))])}"
      : local.iter_270.output)
    
    tape = (
      local.code_271[0] == "+"
        ? [for i, b in local.iter_270.tape : (i == local.iter_270.tape_ptr ? (b + local.code_271[1]) % 256 : b)] :
      local.code_271[0] == "-"
        ? [for i, b in local.iter_270.tape : (i == local.iter_270.tape_ptr ? (b - local.code_271[1] + 256) % 256 : b)] :
      local.code_271[0] == ","
        ? [for i, b in local.iter_270.tape : (i == local.iter_270.tape_ptr ? local.ascii_lookup[substr(local.input_271, 0, 1)] : b)]
        : local.iter_270.tape)

    tape_ptr = (
      local.code_271[0] == "<"
        ? local.iter_270.tape_ptr - local.code_271[1] :
      local.code_271[0] == ">"
        ? local.iter_270.tape_ptr + local.code_271[1]
        : local.iter_270.tape_ptr)

    code_ptr = 2 + (
      local.code_271[0] == "["
        ? local.iter_270.tape[local.iter_270.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_270.code_ptr)] : local.iter_270.code_ptr :
      local.code_271[0] == "]"
        ? local.iter_270.tape[local.iter_270.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_270.code_ptr)] : local.iter_270.code_ptr
        : local.iter_270.code_ptr)

    steps_taken = 1 + local.iter_270.steps_taken
  }
}

locals {
  code_272 = (try(local.iter_271.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_271.code_ptr, local.iter_271.code_ptr + 2)
    : [null])

  input_272 = (local.code_272[0] == ","
    ? substr(local.input_271, local.code_272[1], -1)
    : local.input_271)

  iter_272 = try(local.iter_271.code_ptr >= length(var.code), true) ? local.iter_271 : {
    output = (local.code_272[0] == "."
      ? "${local.iter_271.output}${join("", [for _ in range(local.code_272[1]) : jsondecode(format("\"\\u%04x\"", local.iter_271.tape[local.iter_271.tape_ptr]))])}"
      : local.iter_271.output)
    
    tape = (
      local.code_272[0] == "+"
        ? [for i, b in local.iter_271.tape : (i == local.iter_271.tape_ptr ? (b + local.code_272[1]) % 256 : b)] :
      local.code_272[0] == "-"
        ? [for i, b in local.iter_271.tape : (i == local.iter_271.tape_ptr ? (b - local.code_272[1] + 256) % 256 : b)] :
      local.code_272[0] == ","
        ? [for i, b in local.iter_271.tape : (i == local.iter_271.tape_ptr ? local.ascii_lookup[substr(local.input_272, 0, 1)] : b)]
        : local.iter_271.tape)

    tape_ptr = (
      local.code_272[0] == "<"
        ? local.iter_271.tape_ptr - local.code_272[1] :
      local.code_272[0] == ">"
        ? local.iter_271.tape_ptr + local.code_272[1]
        : local.iter_271.tape_ptr)

    code_ptr = 2 + (
      local.code_272[0] == "["
        ? local.iter_271.tape[local.iter_271.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_271.code_ptr)] : local.iter_271.code_ptr :
      local.code_272[0] == "]"
        ? local.iter_271.tape[local.iter_271.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_271.code_ptr)] : local.iter_271.code_ptr
        : local.iter_271.code_ptr)

    steps_taken = 1 + local.iter_271.steps_taken
  }
}

locals {
  code_273 = (try(local.iter_272.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_272.code_ptr, local.iter_272.code_ptr + 2)
    : [null])

  input_273 = (local.code_273[0] == ","
    ? substr(local.input_272, local.code_273[1], -1)
    : local.input_272)

  iter_273 = try(local.iter_272.code_ptr >= length(var.code), true) ? local.iter_272 : {
    output = (local.code_273[0] == "."
      ? "${local.iter_272.output}${join("", [for _ in range(local.code_273[1]) : jsondecode(format("\"\\u%04x\"", local.iter_272.tape[local.iter_272.tape_ptr]))])}"
      : local.iter_272.output)
    
    tape = (
      local.code_273[0] == "+"
        ? [for i, b in local.iter_272.tape : (i == local.iter_272.tape_ptr ? (b + local.code_273[1]) % 256 : b)] :
      local.code_273[0] == "-"
        ? [for i, b in local.iter_272.tape : (i == local.iter_272.tape_ptr ? (b - local.code_273[1] + 256) % 256 : b)] :
      local.code_273[0] == ","
        ? [for i, b in local.iter_272.tape : (i == local.iter_272.tape_ptr ? local.ascii_lookup[substr(local.input_273, 0, 1)] : b)]
        : local.iter_272.tape)

    tape_ptr = (
      local.code_273[0] == "<"
        ? local.iter_272.tape_ptr - local.code_273[1] :
      local.code_273[0] == ">"
        ? local.iter_272.tape_ptr + local.code_273[1]
        : local.iter_272.tape_ptr)

    code_ptr = 2 + (
      local.code_273[0] == "["
        ? local.iter_272.tape[local.iter_272.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_272.code_ptr)] : local.iter_272.code_ptr :
      local.code_273[0] == "]"
        ? local.iter_272.tape[local.iter_272.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_272.code_ptr)] : local.iter_272.code_ptr
        : local.iter_272.code_ptr)

    steps_taken = 1 + local.iter_272.steps_taken
  }
}

locals {
  code_274 = (try(local.iter_273.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_273.code_ptr, local.iter_273.code_ptr + 2)
    : [null])

  input_274 = (local.code_274[0] == ","
    ? substr(local.input_273, local.code_274[1], -1)
    : local.input_273)

  iter_274 = try(local.iter_273.code_ptr >= length(var.code), true) ? local.iter_273 : {
    output = (local.code_274[0] == "."
      ? "${local.iter_273.output}${join("", [for _ in range(local.code_274[1]) : jsondecode(format("\"\\u%04x\"", local.iter_273.tape[local.iter_273.tape_ptr]))])}"
      : local.iter_273.output)
    
    tape = (
      local.code_274[0] == "+"
        ? [for i, b in local.iter_273.tape : (i == local.iter_273.tape_ptr ? (b + local.code_274[1]) % 256 : b)] :
      local.code_274[0] == "-"
        ? [for i, b in local.iter_273.tape : (i == local.iter_273.tape_ptr ? (b - local.code_274[1] + 256) % 256 : b)] :
      local.code_274[0] == ","
        ? [for i, b in local.iter_273.tape : (i == local.iter_273.tape_ptr ? local.ascii_lookup[substr(local.input_274, 0, 1)] : b)]
        : local.iter_273.tape)

    tape_ptr = (
      local.code_274[0] == "<"
        ? local.iter_273.tape_ptr - local.code_274[1] :
      local.code_274[0] == ">"
        ? local.iter_273.tape_ptr + local.code_274[1]
        : local.iter_273.tape_ptr)

    code_ptr = 2 + (
      local.code_274[0] == "["
        ? local.iter_273.tape[local.iter_273.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_273.code_ptr)] : local.iter_273.code_ptr :
      local.code_274[0] == "]"
        ? local.iter_273.tape[local.iter_273.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_273.code_ptr)] : local.iter_273.code_ptr
        : local.iter_273.code_ptr)

    steps_taken = 1 + local.iter_273.steps_taken
  }
}

locals {
  code_275 = (try(local.iter_274.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_274.code_ptr, local.iter_274.code_ptr + 2)
    : [null])

  input_275 = (local.code_275[0] == ","
    ? substr(local.input_274, local.code_275[1], -1)
    : local.input_274)

  iter_275 = try(local.iter_274.code_ptr >= length(var.code), true) ? local.iter_274 : {
    output = (local.code_275[0] == "."
      ? "${local.iter_274.output}${join("", [for _ in range(local.code_275[1]) : jsondecode(format("\"\\u%04x\"", local.iter_274.tape[local.iter_274.tape_ptr]))])}"
      : local.iter_274.output)
    
    tape = (
      local.code_275[0] == "+"
        ? [for i, b in local.iter_274.tape : (i == local.iter_274.tape_ptr ? (b + local.code_275[1]) % 256 : b)] :
      local.code_275[0] == "-"
        ? [for i, b in local.iter_274.tape : (i == local.iter_274.tape_ptr ? (b - local.code_275[1] + 256) % 256 : b)] :
      local.code_275[0] == ","
        ? [for i, b in local.iter_274.tape : (i == local.iter_274.tape_ptr ? local.ascii_lookup[substr(local.input_275, 0, 1)] : b)]
        : local.iter_274.tape)

    tape_ptr = (
      local.code_275[0] == "<"
        ? local.iter_274.tape_ptr - local.code_275[1] :
      local.code_275[0] == ">"
        ? local.iter_274.tape_ptr + local.code_275[1]
        : local.iter_274.tape_ptr)

    code_ptr = 2 + (
      local.code_275[0] == "["
        ? local.iter_274.tape[local.iter_274.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_274.code_ptr)] : local.iter_274.code_ptr :
      local.code_275[0] == "]"
        ? local.iter_274.tape[local.iter_274.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_274.code_ptr)] : local.iter_274.code_ptr
        : local.iter_274.code_ptr)

    steps_taken = 1 + local.iter_274.steps_taken
  }
}

locals {
  code_276 = (try(local.iter_275.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_275.code_ptr, local.iter_275.code_ptr + 2)
    : [null])

  input_276 = (local.code_276[0] == ","
    ? substr(local.input_275, local.code_276[1], -1)
    : local.input_275)

  iter_276 = try(local.iter_275.code_ptr >= length(var.code), true) ? local.iter_275 : {
    output = (local.code_276[0] == "."
      ? "${local.iter_275.output}${join("", [for _ in range(local.code_276[1]) : jsondecode(format("\"\\u%04x\"", local.iter_275.tape[local.iter_275.tape_ptr]))])}"
      : local.iter_275.output)
    
    tape = (
      local.code_276[0] == "+"
        ? [for i, b in local.iter_275.tape : (i == local.iter_275.tape_ptr ? (b + local.code_276[1]) % 256 : b)] :
      local.code_276[0] == "-"
        ? [for i, b in local.iter_275.tape : (i == local.iter_275.tape_ptr ? (b - local.code_276[1] + 256) % 256 : b)] :
      local.code_276[0] == ","
        ? [for i, b in local.iter_275.tape : (i == local.iter_275.tape_ptr ? local.ascii_lookup[substr(local.input_276, 0, 1)] : b)]
        : local.iter_275.tape)

    tape_ptr = (
      local.code_276[0] == "<"
        ? local.iter_275.tape_ptr - local.code_276[1] :
      local.code_276[0] == ">"
        ? local.iter_275.tape_ptr + local.code_276[1]
        : local.iter_275.tape_ptr)

    code_ptr = 2 + (
      local.code_276[0] == "["
        ? local.iter_275.tape[local.iter_275.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_275.code_ptr)] : local.iter_275.code_ptr :
      local.code_276[0] == "]"
        ? local.iter_275.tape[local.iter_275.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_275.code_ptr)] : local.iter_275.code_ptr
        : local.iter_275.code_ptr)

    steps_taken = 1 + local.iter_275.steps_taken
  }
}

locals {
  code_277 = (try(local.iter_276.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_276.code_ptr, local.iter_276.code_ptr + 2)
    : [null])

  input_277 = (local.code_277[0] == ","
    ? substr(local.input_276, local.code_277[1], -1)
    : local.input_276)

  iter_277 = try(local.iter_276.code_ptr >= length(var.code), true) ? local.iter_276 : {
    output = (local.code_277[0] == "."
      ? "${local.iter_276.output}${join("", [for _ in range(local.code_277[1]) : jsondecode(format("\"\\u%04x\"", local.iter_276.tape[local.iter_276.tape_ptr]))])}"
      : local.iter_276.output)
    
    tape = (
      local.code_277[0] == "+"
        ? [for i, b in local.iter_276.tape : (i == local.iter_276.tape_ptr ? (b + local.code_277[1]) % 256 : b)] :
      local.code_277[0] == "-"
        ? [for i, b in local.iter_276.tape : (i == local.iter_276.tape_ptr ? (b - local.code_277[1] + 256) % 256 : b)] :
      local.code_277[0] == ","
        ? [for i, b in local.iter_276.tape : (i == local.iter_276.tape_ptr ? local.ascii_lookup[substr(local.input_277, 0, 1)] : b)]
        : local.iter_276.tape)

    tape_ptr = (
      local.code_277[0] == "<"
        ? local.iter_276.tape_ptr - local.code_277[1] :
      local.code_277[0] == ">"
        ? local.iter_276.tape_ptr + local.code_277[1]
        : local.iter_276.tape_ptr)

    code_ptr = 2 + (
      local.code_277[0] == "["
        ? local.iter_276.tape[local.iter_276.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_276.code_ptr)] : local.iter_276.code_ptr :
      local.code_277[0] == "]"
        ? local.iter_276.tape[local.iter_276.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_276.code_ptr)] : local.iter_276.code_ptr
        : local.iter_276.code_ptr)

    steps_taken = 1 + local.iter_276.steps_taken
  }
}

locals {
  code_278 = (try(local.iter_277.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_277.code_ptr, local.iter_277.code_ptr + 2)
    : [null])

  input_278 = (local.code_278[0] == ","
    ? substr(local.input_277, local.code_278[1], -1)
    : local.input_277)

  iter_278 = try(local.iter_277.code_ptr >= length(var.code), true) ? local.iter_277 : {
    output = (local.code_278[0] == "."
      ? "${local.iter_277.output}${join("", [for _ in range(local.code_278[1]) : jsondecode(format("\"\\u%04x\"", local.iter_277.tape[local.iter_277.tape_ptr]))])}"
      : local.iter_277.output)
    
    tape = (
      local.code_278[0] == "+"
        ? [for i, b in local.iter_277.tape : (i == local.iter_277.tape_ptr ? (b + local.code_278[1]) % 256 : b)] :
      local.code_278[0] == "-"
        ? [for i, b in local.iter_277.tape : (i == local.iter_277.tape_ptr ? (b - local.code_278[1] + 256) % 256 : b)] :
      local.code_278[0] == ","
        ? [for i, b in local.iter_277.tape : (i == local.iter_277.tape_ptr ? local.ascii_lookup[substr(local.input_278, 0, 1)] : b)]
        : local.iter_277.tape)

    tape_ptr = (
      local.code_278[0] == "<"
        ? local.iter_277.tape_ptr - local.code_278[1] :
      local.code_278[0] == ">"
        ? local.iter_277.tape_ptr + local.code_278[1]
        : local.iter_277.tape_ptr)

    code_ptr = 2 + (
      local.code_278[0] == "["
        ? local.iter_277.tape[local.iter_277.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_277.code_ptr)] : local.iter_277.code_ptr :
      local.code_278[0] == "]"
        ? local.iter_277.tape[local.iter_277.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_277.code_ptr)] : local.iter_277.code_ptr
        : local.iter_277.code_ptr)

    steps_taken = 1 + local.iter_277.steps_taken
  }
}

locals {
  code_279 = (try(local.iter_278.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_278.code_ptr, local.iter_278.code_ptr + 2)
    : [null])

  input_279 = (local.code_279[0] == ","
    ? substr(local.input_278, local.code_279[1], -1)
    : local.input_278)

  iter_279 = try(local.iter_278.code_ptr >= length(var.code), true) ? local.iter_278 : {
    output = (local.code_279[0] == "."
      ? "${local.iter_278.output}${join("", [for _ in range(local.code_279[1]) : jsondecode(format("\"\\u%04x\"", local.iter_278.tape[local.iter_278.tape_ptr]))])}"
      : local.iter_278.output)
    
    tape = (
      local.code_279[0] == "+"
        ? [for i, b in local.iter_278.tape : (i == local.iter_278.tape_ptr ? (b + local.code_279[1]) % 256 : b)] :
      local.code_279[0] == "-"
        ? [for i, b in local.iter_278.tape : (i == local.iter_278.tape_ptr ? (b - local.code_279[1] + 256) % 256 : b)] :
      local.code_279[0] == ","
        ? [for i, b in local.iter_278.tape : (i == local.iter_278.tape_ptr ? local.ascii_lookup[substr(local.input_279, 0, 1)] : b)]
        : local.iter_278.tape)

    tape_ptr = (
      local.code_279[0] == "<"
        ? local.iter_278.tape_ptr - local.code_279[1] :
      local.code_279[0] == ">"
        ? local.iter_278.tape_ptr + local.code_279[1]
        : local.iter_278.tape_ptr)

    code_ptr = 2 + (
      local.code_279[0] == "["
        ? local.iter_278.tape[local.iter_278.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_278.code_ptr)] : local.iter_278.code_ptr :
      local.code_279[0] == "]"
        ? local.iter_278.tape[local.iter_278.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_278.code_ptr)] : local.iter_278.code_ptr
        : local.iter_278.code_ptr)

    steps_taken = 1 + local.iter_278.steps_taken
  }
}

locals {
  code_280 = (try(local.iter_279.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_279.code_ptr, local.iter_279.code_ptr + 2)
    : [null])

  input_280 = (local.code_280[0] == ","
    ? substr(local.input_279, local.code_280[1], -1)
    : local.input_279)

  iter_280 = try(local.iter_279.code_ptr >= length(var.code), true) ? local.iter_279 : {
    output = (local.code_280[0] == "."
      ? "${local.iter_279.output}${join("", [for _ in range(local.code_280[1]) : jsondecode(format("\"\\u%04x\"", local.iter_279.tape[local.iter_279.tape_ptr]))])}"
      : local.iter_279.output)
    
    tape = (
      local.code_280[0] == "+"
        ? [for i, b in local.iter_279.tape : (i == local.iter_279.tape_ptr ? (b + local.code_280[1]) % 256 : b)] :
      local.code_280[0] == "-"
        ? [for i, b in local.iter_279.tape : (i == local.iter_279.tape_ptr ? (b - local.code_280[1] + 256) % 256 : b)] :
      local.code_280[0] == ","
        ? [for i, b in local.iter_279.tape : (i == local.iter_279.tape_ptr ? local.ascii_lookup[substr(local.input_280, 0, 1)] : b)]
        : local.iter_279.tape)

    tape_ptr = (
      local.code_280[0] == "<"
        ? local.iter_279.tape_ptr - local.code_280[1] :
      local.code_280[0] == ">"
        ? local.iter_279.tape_ptr + local.code_280[1]
        : local.iter_279.tape_ptr)

    code_ptr = 2 + (
      local.code_280[0] == "["
        ? local.iter_279.tape[local.iter_279.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_279.code_ptr)] : local.iter_279.code_ptr :
      local.code_280[0] == "]"
        ? local.iter_279.tape[local.iter_279.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_279.code_ptr)] : local.iter_279.code_ptr
        : local.iter_279.code_ptr)

    steps_taken = 1 + local.iter_279.steps_taken
  }
}

locals {
  code_281 = (try(local.iter_280.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_280.code_ptr, local.iter_280.code_ptr + 2)
    : [null])

  input_281 = (local.code_281[0] == ","
    ? substr(local.input_280, local.code_281[1], -1)
    : local.input_280)

  iter_281 = try(local.iter_280.code_ptr >= length(var.code), true) ? local.iter_280 : {
    output = (local.code_281[0] == "."
      ? "${local.iter_280.output}${join("", [for _ in range(local.code_281[1]) : jsondecode(format("\"\\u%04x\"", local.iter_280.tape[local.iter_280.tape_ptr]))])}"
      : local.iter_280.output)
    
    tape = (
      local.code_281[0] == "+"
        ? [for i, b in local.iter_280.tape : (i == local.iter_280.tape_ptr ? (b + local.code_281[1]) % 256 : b)] :
      local.code_281[0] == "-"
        ? [for i, b in local.iter_280.tape : (i == local.iter_280.tape_ptr ? (b - local.code_281[1] + 256) % 256 : b)] :
      local.code_281[0] == ","
        ? [for i, b in local.iter_280.tape : (i == local.iter_280.tape_ptr ? local.ascii_lookup[substr(local.input_281, 0, 1)] : b)]
        : local.iter_280.tape)

    tape_ptr = (
      local.code_281[0] == "<"
        ? local.iter_280.tape_ptr - local.code_281[1] :
      local.code_281[0] == ">"
        ? local.iter_280.tape_ptr + local.code_281[1]
        : local.iter_280.tape_ptr)

    code_ptr = 2 + (
      local.code_281[0] == "["
        ? local.iter_280.tape[local.iter_280.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_280.code_ptr)] : local.iter_280.code_ptr :
      local.code_281[0] == "]"
        ? local.iter_280.tape[local.iter_280.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_280.code_ptr)] : local.iter_280.code_ptr
        : local.iter_280.code_ptr)

    steps_taken = 1 + local.iter_280.steps_taken
  }
}

locals {
  code_282 = (try(local.iter_281.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_281.code_ptr, local.iter_281.code_ptr + 2)
    : [null])

  input_282 = (local.code_282[0] == ","
    ? substr(local.input_281, local.code_282[1], -1)
    : local.input_281)

  iter_282 = try(local.iter_281.code_ptr >= length(var.code), true) ? local.iter_281 : {
    output = (local.code_282[0] == "."
      ? "${local.iter_281.output}${join("", [for _ in range(local.code_282[1]) : jsondecode(format("\"\\u%04x\"", local.iter_281.tape[local.iter_281.tape_ptr]))])}"
      : local.iter_281.output)
    
    tape = (
      local.code_282[0] == "+"
        ? [for i, b in local.iter_281.tape : (i == local.iter_281.tape_ptr ? (b + local.code_282[1]) % 256 : b)] :
      local.code_282[0] == "-"
        ? [for i, b in local.iter_281.tape : (i == local.iter_281.tape_ptr ? (b - local.code_282[1] + 256) % 256 : b)] :
      local.code_282[0] == ","
        ? [for i, b in local.iter_281.tape : (i == local.iter_281.tape_ptr ? local.ascii_lookup[substr(local.input_282, 0, 1)] : b)]
        : local.iter_281.tape)

    tape_ptr = (
      local.code_282[0] == "<"
        ? local.iter_281.tape_ptr - local.code_282[1] :
      local.code_282[0] == ">"
        ? local.iter_281.tape_ptr + local.code_282[1]
        : local.iter_281.tape_ptr)

    code_ptr = 2 + (
      local.code_282[0] == "["
        ? local.iter_281.tape[local.iter_281.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_281.code_ptr)] : local.iter_281.code_ptr :
      local.code_282[0] == "]"
        ? local.iter_281.tape[local.iter_281.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_281.code_ptr)] : local.iter_281.code_ptr
        : local.iter_281.code_ptr)

    steps_taken = 1 + local.iter_281.steps_taken
  }
}

locals {
  code_283 = (try(local.iter_282.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_282.code_ptr, local.iter_282.code_ptr + 2)
    : [null])

  input_283 = (local.code_283[0] == ","
    ? substr(local.input_282, local.code_283[1], -1)
    : local.input_282)

  iter_283 = try(local.iter_282.code_ptr >= length(var.code), true) ? local.iter_282 : {
    output = (local.code_283[0] == "."
      ? "${local.iter_282.output}${join("", [for _ in range(local.code_283[1]) : jsondecode(format("\"\\u%04x\"", local.iter_282.tape[local.iter_282.tape_ptr]))])}"
      : local.iter_282.output)
    
    tape = (
      local.code_283[0] == "+"
        ? [for i, b in local.iter_282.tape : (i == local.iter_282.tape_ptr ? (b + local.code_283[1]) % 256 : b)] :
      local.code_283[0] == "-"
        ? [for i, b in local.iter_282.tape : (i == local.iter_282.tape_ptr ? (b - local.code_283[1] + 256) % 256 : b)] :
      local.code_283[0] == ","
        ? [for i, b in local.iter_282.tape : (i == local.iter_282.tape_ptr ? local.ascii_lookup[substr(local.input_283, 0, 1)] : b)]
        : local.iter_282.tape)

    tape_ptr = (
      local.code_283[0] == "<"
        ? local.iter_282.tape_ptr - local.code_283[1] :
      local.code_283[0] == ">"
        ? local.iter_282.tape_ptr + local.code_283[1]
        : local.iter_282.tape_ptr)

    code_ptr = 2 + (
      local.code_283[0] == "["
        ? local.iter_282.tape[local.iter_282.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_282.code_ptr)] : local.iter_282.code_ptr :
      local.code_283[0] == "]"
        ? local.iter_282.tape[local.iter_282.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_282.code_ptr)] : local.iter_282.code_ptr
        : local.iter_282.code_ptr)

    steps_taken = 1 + local.iter_282.steps_taken
  }
}

locals {
  code_284 = (try(local.iter_283.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_283.code_ptr, local.iter_283.code_ptr + 2)
    : [null])

  input_284 = (local.code_284[0] == ","
    ? substr(local.input_283, local.code_284[1], -1)
    : local.input_283)

  iter_284 = try(local.iter_283.code_ptr >= length(var.code), true) ? local.iter_283 : {
    output = (local.code_284[0] == "."
      ? "${local.iter_283.output}${join("", [for _ in range(local.code_284[1]) : jsondecode(format("\"\\u%04x\"", local.iter_283.tape[local.iter_283.tape_ptr]))])}"
      : local.iter_283.output)
    
    tape = (
      local.code_284[0] == "+"
        ? [for i, b in local.iter_283.tape : (i == local.iter_283.tape_ptr ? (b + local.code_284[1]) % 256 : b)] :
      local.code_284[0] == "-"
        ? [for i, b in local.iter_283.tape : (i == local.iter_283.tape_ptr ? (b - local.code_284[1] + 256) % 256 : b)] :
      local.code_284[0] == ","
        ? [for i, b in local.iter_283.tape : (i == local.iter_283.tape_ptr ? local.ascii_lookup[substr(local.input_284, 0, 1)] : b)]
        : local.iter_283.tape)

    tape_ptr = (
      local.code_284[0] == "<"
        ? local.iter_283.tape_ptr - local.code_284[1] :
      local.code_284[0] == ">"
        ? local.iter_283.tape_ptr + local.code_284[1]
        : local.iter_283.tape_ptr)

    code_ptr = 2 + (
      local.code_284[0] == "["
        ? local.iter_283.tape[local.iter_283.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_283.code_ptr)] : local.iter_283.code_ptr :
      local.code_284[0] == "]"
        ? local.iter_283.tape[local.iter_283.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_283.code_ptr)] : local.iter_283.code_ptr
        : local.iter_283.code_ptr)

    steps_taken = 1 + local.iter_283.steps_taken
  }
}

locals {
  code_285 = (try(local.iter_284.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_284.code_ptr, local.iter_284.code_ptr + 2)
    : [null])

  input_285 = (local.code_285[0] == ","
    ? substr(local.input_284, local.code_285[1], -1)
    : local.input_284)

  iter_285 = try(local.iter_284.code_ptr >= length(var.code), true) ? local.iter_284 : {
    output = (local.code_285[0] == "."
      ? "${local.iter_284.output}${join("", [for _ in range(local.code_285[1]) : jsondecode(format("\"\\u%04x\"", local.iter_284.tape[local.iter_284.tape_ptr]))])}"
      : local.iter_284.output)
    
    tape = (
      local.code_285[0] == "+"
        ? [for i, b in local.iter_284.tape : (i == local.iter_284.tape_ptr ? (b + local.code_285[1]) % 256 : b)] :
      local.code_285[0] == "-"
        ? [for i, b in local.iter_284.tape : (i == local.iter_284.tape_ptr ? (b - local.code_285[1] + 256) % 256 : b)] :
      local.code_285[0] == ","
        ? [for i, b in local.iter_284.tape : (i == local.iter_284.tape_ptr ? local.ascii_lookup[substr(local.input_285, 0, 1)] : b)]
        : local.iter_284.tape)

    tape_ptr = (
      local.code_285[0] == "<"
        ? local.iter_284.tape_ptr - local.code_285[1] :
      local.code_285[0] == ">"
        ? local.iter_284.tape_ptr + local.code_285[1]
        : local.iter_284.tape_ptr)

    code_ptr = 2 + (
      local.code_285[0] == "["
        ? local.iter_284.tape[local.iter_284.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_284.code_ptr)] : local.iter_284.code_ptr :
      local.code_285[0] == "]"
        ? local.iter_284.tape[local.iter_284.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_284.code_ptr)] : local.iter_284.code_ptr
        : local.iter_284.code_ptr)

    steps_taken = 1 + local.iter_284.steps_taken
  }
}

locals {
  code_286 = (try(local.iter_285.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_285.code_ptr, local.iter_285.code_ptr + 2)
    : [null])

  input_286 = (local.code_286[0] == ","
    ? substr(local.input_285, local.code_286[1], -1)
    : local.input_285)

  iter_286 = try(local.iter_285.code_ptr >= length(var.code), true) ? local.iter_285 : {
    output = (local.code_286[0] == "."
      ? "${local.iter_285.output}${join("", [for _ in range(local.code_286[1]) : jsondecode(format("\"\\u%04x\"", local.iter_285.tape[local.iter_285.tape_ptr]))])}"
      : local.iter_285.output)
    
    tape = (
      local.code_286[0] == "+"
        ? [for i, b in local.iter_285.tape : (i == local.iter_285.tape_ptr ? (b + local.code_286[1]) % 256 : b)] :
      local.code_286[0] == "-"
        ? [for i, b in local.iter_285.tape : (i == local.iter_285.tape_ptr ? (b - local.code_286[1] + 256) % 256 : b)] :
      local.code_286[0] == ","
        ? [for i, b in local.iter_285.tape : (i == local.iter_285.tape_ptr ? local.ascii_lookup[substr(local.input_286, 0, 1)] : b)]
        : local.iter_285.tape)

    tape_ptr = (
      local.code_286[0] == "<"
        ? local.iter_285.tape_ptr - local.code_286[1] :
      local.code_286[0] == ">"
        ? local.iter_285.tape_ptr + local.code_286[1]
        : local.iter_285.tape_ptr)

    code_ptr = 2 + (
      local.code_286[0] == "["
        ? local.iter_285.tape[local.iter_285.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_285.code_ptr)] : local.iter_285.code_ptr :
      local.code_286[0] == "]"
        ? local.iter_285.tape[local.iter_285.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_285.code_ptr)] : local.iter_285.code_ptr
        : local.iter_285.code_ptr)

    steps_taken = 1 + local.iter_285.steps_taken
  }
}

locals {
  code_287 = (try(local.iter_286.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_286.code_ptr, local.iter_286.code_ptr + 2)
    : [null])

  input_287 = (local.code_287[0] == ","
    ? substr(local.input_286, local.code_287[1], -1)
    : local.input_286)

  iter_287 = try(local.iter_286.code_ptr >= length(var.code), true) ? local.iter_286 : {
    output = (local.code_287[0] == "."
      ? "${local.iter_286.output}${join("", [for _ in range(local.code_287[1]) : jsondecode(format("\"\\u%04x\"", local.iter_286.tape[local.iter_286.tape_ptr]))])}"
      : local.iter_286.output)
    
    tape = (
      local.code_287[0] == "+"
        ? [for i, b in local.iter_286.tape : (i == local.iter_286.tape_ptr ? (b + local.code_287[1]) % 256 : b)] :
      local.code_287[0] == "-"
        ? [for i, b in local.iter_286.tape : (i == local.iter_286.tape_ptr ? (b - local.code_287[1] + 256) % 256 : b)] :
      local.code_287[0] == ","
        ? [for i, b in local.iter_286.tape : (i == local.iter_286.tape_ptr ? local.ascii_lookup[substr(local.input_287, 0, 1)] : b)]
        : local.iter_286.tape)

    tape_ptr = (
      local.code_287[0] == "<"
        ? local.iter_286.tape_ptr - local.code_287[1] :
      local.code_287[0] == ">"
        ? local.iter_286.tape_ptr + local.code_287[1]
        : local.iter_286.tape_ptr)

    code_ptr = 2 + (
      local.code_287[0] == "["
        ? local.iter_286.tape[local.iter_286.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_286.code_ptr)] : local.iter_286.code_ptr :
      local.code_287[0] == "]"
        ? local.iter_286.tape[local.iter_286.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_286.code_ptr)] : local.iter_286.code_ptr
        : local.iter_286.code_ptr)

    steps_taken = 1 + local.iter_286.steps_taken
  }
}

locals {
  code_288 = (try(local.iter_287.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_287.code_ptr, local.iter_287.code_ptr + 2)
    : [null])

  input_288 = (local.code_288[0] == ","
    ? substr(local.input_287, local.code_288[1], -1)
    : local.input_287)

  iter_288 = try(local.iter_287.code_ptr >= length(var.code), true) ? local.iter_287 : {
    output = (local.code_288[0] == "."
      ? "${local.iter_287.output}${join("", [for _ in range(local.code_288[1]) : jsondecode(format("\"\\u%04x\"", local.iter_287.tape[local.iter_287.tape_ptr]))])}"
      : local.iter_287.output)
    
    tape = (
      local.code_288[0] == "+"
        ? [for i, b in local.iter_287.tape : (i == local.iter_287.tape_ptr ? (b + local.code_288[1]) % 256 : b)] :
      local.code_288[0] == "-"
        ? [for i, b in local.iter_287.tape : (i == local.iter_287.tape_ptr ? (b - local.code_288[1] + 256) % 256 : b)] :
      local.code_288[0] == ","
        ? [for i, b in local.iter_287.tape : (i == local.iter_287.tape_ptr ? local.ascii_lookup[substr(local.input_288, 0, 1)] : b)]
        : local.iter_287.tape)

    tape_ptr = (
      local.code_288[0] == "<"
        ? local.iter_287.tape_ptr - local.code_288[1] :
      local.code_288[0] == ">"
        ? local.iter_287.tape_ptr + local.code_288[1]
        : local.iter_287.tape_ptr)

    code_ptr = 2 + (
      local.code_288[0] == "["
        ? local.iter_287.tape[local.iter_287.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_287.code_ptr)] : local.iter_287.code_ptr :
      local.code_288[0] == "]"
        ? local.iter_287.tape[local.iter_287.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_287.code_ptr)] : local.iter_287.code_ptr
        : local.iter_287.code_ptr)

    steps_taken = 1 + local.iter_287.steps_taken
  }
}

locals {
  code_289 = (try(local.iter_288.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_288.code_ptr, local.iter_288.code_ptr + 2)
    : [null])

  input_289 = (local.code_289[0] == ","
    ? substr(local.input_288, local.code_289[1], -1)
    : local.input_288)

  iter_289 = try(local.iter_288.code_ptr >= length(var.code), true) ? local.iter_288 : {
    output = (local.code_289[0] == "."
      ? "${local.iter_288.output}${join("", [for _ in range(local.code_289[1]) : jsondecode(format("\"\\u%04x\"", local.iter_288.tape[local.iter_288.tape_ptr]))])}"
      : local.iter_288.output)
    
    tape = (
      local.code_289[0] == "+"
        ? [for i, b in local.iter_288.tape : (i == local.iter_288.tape_ptr ? (b + local.code_289[1]) % 256 : b)] :
      local.code_289[0] == "-"
        ? [for i, b in local.iter_288.tape : (i == local.iter_288.tape_ptr ? (b - local.code_289[1] + 256) % 256 : b)] :
      local.code_289[0] == ","
        ? [for i, b in local.iter_288.tape : (i == local.iter_288.tape_ptr ? local.ascii_lookup[substr(local.input_289, 0, 1)] : b)]
        : local.iter_288.tape)

    tape_ptr = (
      local.code_289[0] == "<"
        ? local.iter_288.tape_ptr - local.code_289[1] :
      local.code_289[0] == ">"
        ? local.iter_288.tape_ptr + local.code_289[1]
        : local.iter_288.tape_ptr)

    code_ptr = 2 + (
      local.code_289[0] == "["
        ? local.iter_288.tape[local.iter_288.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_288.code_ptr)] : local.iter_288.code_ptr :
      local.code_289[0] == "]"
        ? local.iter_288.tape[local.iter_288.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_288.code_ptr)] : local.iter_288.code_ptr
        : local.iter_288.code_ptr)

    steps_taken = 1 + local.iter_288.steps_taken
  }
}

locals {
  code_290 = (try(local.iter_289.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_289.code_ptr, local.iter_289.code_ptr + 2)
    : [null])

  input_290 = (local.code_290[0] == ","
    ? substr(local.input_289, local.code_290[1], -1)
    : local.input_289)

  iter_290 = try(local.iter_289.code_ptr >= length(var.code), true) ? local.iter_289 : {
    output = (local.code_290[0] == "."
      ? "${local.iter_289.output}${join("", [for _ in range(local.code_290[1]) : jsondecode(format("\"\\u%04x\"", local.iter_289.tape[local.iter_289.tape_ptr]))])}"
      : local.iter_289.output)
    
    tape = (
      local.code_290[0] == "+"
        ? [for i, b in local.iter_289.tape : (i == local.iter_289.tape_ptr ? (b + local.code_290[1]) % 256 : b)] :
      local.code_290[0] == "-"
        ? [for i, b in local.iter_289.tape : (i == local.iter_289.tape_ptr ? (b - local.code_290[1] + 256) % 256 : b)] :
      local.code_290[0] == ","
        ? [for i, b in local.iter_289.tape : (i == local.iter_289.tape_ptr ? local.ascii_lookup[substr(local.input_290, 0, 1)] : b)]
        : local.iter_289.tape)

    tape_ptr = (
      local.code_290[0] == "<"
        ? local.iter_289.tape_ptr - local.code_290[1] :
      local.code_290[0] == ">"
        ? local.iter_289.tape_ptr + local.code_290[1]
        : local.iter_289.tape_ptr)

    code_ptr = 2 + (
      local.code_290[0] == "["
        ? local.iter_289.tape[local.iter_289.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_289.code_ptr)] : local.iter_289.code_ptr :
      local.code_290[0] == "]"
        ? local.iter_289.tape[local.iter_289.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_289.code_ptr)] : local.iter_289.code_ptr
        : local.iter_289.code_ptr)

    steps_taken = 1 + local.iter_289.steps_taken
  }
}

locals {
  code_291 = (try(local.iter_290.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_290.code_ptr, local.iter_290.code_ptr + 2)
    : [null])

  input_291 = (local.code_291[0] == ","
    ? substr(local.input_290, local.code_291[1], -1)
    : local.input_290)

  iter_291 = try(local.iter_290.code_ptr >= length(var.code), true) ? local.iter_290 : {
    output = (local.code_291[0] == "."
      ? "${local.iter_290.output}${join("", [for _ in range(local.code_291[1]) : jsondecode(format("\"\\u%04x\"", local.iter_290.tape[local.iter_290.tape_ptr]))])}"
      : local.iter_290.output)
    
    tape = (
      local.code_291[0] == "+"
        ? [for i, b in local.iter_290.tape : (i == local.iter_290.tape_ptr ? (b + local.code_291[1]) % 256 : b)] :
      local.code_291[0] == "-"
        ? [for i, b in local.iter_290.tape : (i == local.iter_290.tape_ptr ? (b - local.code_291[1] + 256) % 256 : b)] :
      local.code_291[0] == ","
        ? [for i, b in local.iter_290.tape : (i == local.iter_290.tape_ptr ? local.ascii_lookup[substr(local.input_291, 0, 1)] : b)]
        : local.iter_290.tape)

    tape_ptr = (
      local.code_291[0] == "<"
        ? local.iter_290.tape_ptr - local.code_291[1] :
      local.code_291[0] == ">"
        ? local.iter_290.tape_ptr + local.code_291[1]
        : local.iter_290.tape_ptr)

    code_ptr = 2 + (
      local.code_291[0] == "["
        ? local.iter_290.tape[local.iter_290.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_290.code_ptr)] : local.iter_290.code_ptr :
      local.code_291[0] == "]"
        ? local.iter_290.tape[local.iter_290.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_290.code_ptr)] : local.iter_290.code_ptr
        : local.iter_290.code_ptr)

    steps_taken = 1 + local.iter_290.steps_taken
  }
}

locals {
  code_292 = (try(local.iter_291.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_291.code_ptr, local.iter_291.code_ptr + 2)
    : [null])

  input_292 = (local.code_292[0] == ","
    ? substr(local.input_291, local.code_292[1], -1)
    : local.input_291)

  iter_292 = try(local.iter_291.code_ptr >= length(var.code), true) ? local.iter_291 : {
    output = (local.code_292[0] == "."
      ? "${local.iter_291.output}${join("", [for _ in range(local.code_292[1]) : jsondecode(format("\"\\u%04x\"", local.iter_291.tape[local.iter_291.tape_ptr]))])}"
      : local.iter_291.output)
    
    tape = (
      local.code_292[0] == "+"
        ? [for i, b in local.iter_291.tape : (i == local.iter_291.tape_ptr ? (b + local.code_292[1]) % 256 : b)] :
      local.code_292[0] == "-"
        ? [for i, b in local.iter_291.tape : (i == local.iter_291.tape_ptr ? (b - local.code_292[1] + 256) % 256 : b)] :
      local.code_292[0] == ","
        ? [for i, b in local.iter_291.tape : (i == local.iter_291.tape_ptr ? local.ascii_lookup[substr(local.input_292, 0, 1)] : b)]
        : local.iter_291.tape)

    tape_ptr = (
      local.code_292[0] == "<"
        ? local.iter_291.tape_ptr - local.code_292[1] :
      local.code_292[0] == ">"
        ? local.iter_291.tape_ptr + local.code_292[1]
        : local.iter_291.tape_ptr)

    code_ptr = 2 + (
      local.code_292[0] == "["
        ? local.iter_291.tape[local.iter_291.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_291.code_ptr)] : local.iter_291.code_ptr :
      local.code_292[0] == "]"
        ? local.iter_291.tape[local.iter_291.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_291.code_ptr)] : local.iter_291.code_ptr
        : local.iter_291.code_ptr)

    steps_taken = 1 + local.iter_291.steps_taken
  }
}

locals {
  code_293 = (try(local.iter_292.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_292.code_ptr, local.iter_292.code_ptr + 2)
    : [null])

  input_293 = (local.code_293[0] == ","
    ? substr(local.input_292, local.code_293[1], -1)
    : local.input_292)

  iter_293 = try(local.iter_292.code_ptr >= length(var.code), true) ? local.iter_292 : {
    output = (local.code_293[0] == "."
      ? "${local.iter_292.output}${join("", [for _ in range(local.code_293[1]) : jsondecode(format("\"\\u%04x\"", local.iter_292.tape[local.iter_292.tape_ptr]))])}"
      : local.iter_292.output)
    
    tape = (
      local.code_293[0] == "+"
        ? [for i, b in local.iter_292.tape : (i == local.iter_292.tape_ptr ? (b + local.code_293[1]) % 256 : b)] :
      local.code_293[0] == "-"
        ? [for i, b in local.iter_292.tape : (i == local.iter_292.tape_ptr ? (b - local.code_293[1] + 256) % 256 : b)] :
      local.code_293[0] == ","
        ? [for i, b in local.iter_292.tape : (i == local.iter_292.tape_ptr ? local.ascii_lookup[substr(local.input_293, 0, 1)] : b)]
        : local.iter_292.tape)

    tape_ptr = (
      local.code_293[0] == "<"
        ? local.iter_292.tape_ptr - local.code_293[1] :
      local.code_293[0] == ">"
        ? local.iter_292.tape_ptr + local.code_293[1]
        : local.iter_292.tape_ptr)

    code_ptr = 2 + (
      local.code_293[0] == "["
        ? local.iter_292.tape[local.iter_292.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_292.code_ptr)] : local.iter_292.code_ptr :
      local.code_293[0] == "]"
        ? local.iter_292.tape[local.iter_292.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_292.code_ptr)] : local.iter_292.code_ptr
        : local.iter_292.code_ptr)

    steps_taken = 1 + local.iter_292.steps_taken
  }
}

locals {
  code_294 = (try(local.iter_293.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_293.code_ptr, local.iter_293.code_ptr + 2)
    : [null])

  input_294 = (local.code_294[0] == ","
    ? substr(local.input_293, local.code_294[1], -1)
    : local.input_293)

  iter_294 = try(local.iter_293.code_ptr >= length(var.code), true) ? local.iter_293 : {
    output = (local.code_294[0] == "."
      ? "${local.iter_293.output}${join("", [for _ in range(local.code_294[1]) : jsondecode(format("\"\\u%04x\"", local.iter_293.tape[local.iter_293.tape_ptr]))])}"
      : local.iter_293.output)
    
    tape = (
      local.code_294[0] == "+"
        ? [for i, b in local.iter_293.tape : (i == local.iter_293.tape_ptr ? (b + local.code_294[1]) % 256 : b)] :
      local.code_294[0] == "-"
        ? [for i, b in local.iter_293.tape : (i == local.iter_293.tape_ptr ? (b - local.code_294[1] + 256) % 256 : b)] :
      local.code_294[0] == ","
        ? [for i, b in local.iter_293.tape : (i == local.iter_293.tape_ptr ? local.ascii_lookup[substr(local.input_294, 0, 1)] : b)]
        : local.iter_293.tape)

    tape_ptr = (
      local.code_294[0] == "<"
        ? local.iter_293.tape_ptr - local.code_294[1] :
      local.code_294[0] == ">"
        ? local.iter_293.tape_ptr + local.code_294[1]
        : local.iter_293.tape_ptr)

    code_ptr = 2 + (
      local.code_294[0] == "["
        ? local.iter_293.tape[local.iter_293.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_293.code_ptr)] : local.iter_293.code_ptr :
      local.code_294[0] == "]"
        ? local.iter_293.tape[local.iter_293.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_293.code_ptr)] : local.iter_293.code_ptr
        : local.iter_293.code_ptr)

    steps_taken = 1 + local.iter_293.steps_taken
  }
}

locals {
  code_295 = (try(local.iter_294.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_294.code_ptr, local.iter_294.code_ptr + 2)
    : [null])

  input_295 = (local.code_295[0] == ","
    ? substr(local.input_294, local.code_295[1], -1)
    : local.input_294)

  iter_295 = try(local.iter_294.code_ptr >= length(var.code), true) ? local.iter_294 : {
    output = (local.code_295[0] == "."
      ? "${local.iter_294.output}${join("", [for _ in range(local.code_295[1]) : jsondecode(format("\"\\u%04x\"", local.iter_294.tape[local.iter_294.tape_ptr]))])}"
      : local.iter_294.output)
    
    tape = (
      local.code_295[0] == "+"
        ? [for i, b in local.iter_294.tape : (i == local.iter_294.tape_ptr ? (b + local.code_295[1]) % 256 : b)] :
      local.code_295[0] == "-"
        ? [for i, b in local.iter_294.tape : (i == local.iter_294.tape_ptr ? (b - local.code_295[1] + 256) % 256 : b)] :
      local.code_295[0] == ","
        ? [for i, b in local.iter_294.tape : (i == local.iter_294.tape_ptr ? local.ascii_lookup[substr(local.input_295, 0, 1)] : b)]
        : local.iter_294.tape)

    tape_ptr = (
      local.code_295[0] == "<"
        ? local.iter_294.tape_ptr - local.code_295[1] :
      local.code_295[0] == ">"
        ? local.iter_294.tape_ptr + local.code_295[1]
        : local.iter_294.tape_ptr)

    code_ptr = 2 + (
      local.code_295[0] == "["
        ? local.iter_294.tape[local.iter_294.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_294.code_ptr)] : local.iter_294.code_ptr :
      local.code_295[0] == "]"
        ? local.iter_294.tape[local.iter_294.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_294.code_ptr)] : local.iter_294.code_ptr
        : local.iter_294.code_ptr)

    steps_taken = 1 + local.iter_294.steps_taken
  }
}

locals {
  code_296 = (try(local.iter_295.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_295.code_ptr, local.iter_295.code_ptr + 2)
    : [null])

  input_296 = (local.code_296[0] == ","
    ? substr(local.input_295, local.code_296[1], -1)
    : local.input_295)

  iter_296 = try(local.iter_295.code_ptr >= length(var.code), true) ? local.iter_295 : {
    output = (local.code_296[0] == "."
      ? "${local.iter_295.output}${join("", [for _ in range(local.code_296[1]) : jsondecode(format("\"\\u%04x\"", local.iter_295.tape[local.iter_295.tape_ptr]))])}"
      : local.iter_295.output)
    
    tape = (
      local.code_296[0] == "+"
        ? [for i, b in local.iter_295.tape : (i == local.iter_295.tape_ptr ? (b + local.code_296[1]) % 256 : b)] :
      local.code_296[0] == "-"
        ? [for i, b in local.iter_295.tape : (i == local.iter_295.tape_ptr ? (b - local.code_296[1] + 256) % 256 : b)] :
      local.code_296[0] == ","
        ? [for i, b in local.iter_295.tape : (i == local.iter_295.tape_ptr ? local.ascii_lookup[substr(local.input_296, 0, 1)] : b)]
        : local.iter_295.tape)

    tape_ptr = (
      local.code_296[0] == "<"
        ? local.iter_295.tape_ptr - local.code_296[1] :
      local.code_296[0] == ">"
        ? local.iter_295.tape_ptr + local.code_296[1]
        : local.iter_295.tape_ptr)

    code_ptr = 2 + (
      local.code_296[0] == "["
        ? local.iter_295.tape[local.iter_295.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_295.code_ptr)] : local.iter_295.code_ptr :
      local.code_296[0] == "]"
        ? local.iter_295.tape[local.iter_295.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_295.code_ptr)] : local.iter_295.code_ptr
        : local.iter_295.code_ptr)

    steps_taken = 1 + local.iter_295.steps_taken
  }
}

locals {
  code_297 = (try(local.iter_296.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_296.code_ptr, local.iter_296.code_ptr + 2)
    : [null])

  input_297 = (local.code_297[0] == ","
    ? substr(local.input_296, local.code_297[1], -1)
    : local.input_296)

  iter_297 = try(local.iter_296.code_ptr >= length(var.code), true) ? local.iter_296 : {
    output = (local.code_297[0] == "."
      ? "${local.iter_296.output}${join("", [for _ in range(local.code_297[1]) : jsondecode(format("\"\\u%04x\"", local.iter_296.tape[local.iter_296.tape_ptr]))])}"
      : local.iter_296.output)
    
    tape = (
      local.code_297[0] == "+"
        ? [for i, b in local.iter_296.tape : (i == local.iter_296.tape_ptr ? (b + local.code_297[1]) % 256 : b)] :
      local.code_297[0] == "-"
        ? [for i, b in local.iter_296.tape : (i == local.iter_296.tape_ptr ? (b - local.code_297[1] + 256) % 256 : b)] :
      local.code_297[0] == ","
        ? [for i, b in local.iter_296.tape : (i == local.iter_296.tape_ptr ? local.ascii_lookup[substr(local.input_297, 0, 1)] : b)]
        : local.iter_296.tape)

    tape_ptr = (
      local.code_297[0] == "<"
        ? local.iter_296.tape_ptr - local.code_297[1] :
      local.code_297[0] == ">"
        ? local.iter_296.tape_ptr + local.code_297[1]
        : local.iter_296.tape_ptr)

    code_ptr = 2 + (
      local.code_297[0] == "["
        ? local.iter_296.tape[local.iter_296.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_296.code_ptr)] : local.iter_296.code_ptr :
      local.code_297[0] == "]"
        ? local.iter_296.tape[local.iter_296.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_296.code_ptr)] : local.iter_296.code_ptr
        : local.iter_296.code_ptr)

    steps_taken = 1 + local.iter_296.steps_taken
  }
}

locals {
  code_298 = (try(local.iter_297.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_297.code_ptr, local.iter_297.code_ptr + 2)
    : [null])

  input_298 = (local.code_298[0] == ","
    ? substr(local.input_297, local.code_298[1], -1)
    : local.input_297)

  iter_298 = try(local.iter_297.code_ptr >= length(var.code), true) ? local.iter_297 : {
    output = (local.code_298[0] == "."
      ? "${local.iter_297.output}${join("", [for _ in range(local.code_298[1]) : jsondecode(format("\"\\u%04x\"", local.iter_297.tape[local.iter_297.tape_ptr]))])}"
      : local.iter_297.output)
    
    tape = (
      local.code_298[0] == "+"
        ? [for i, b in local.iter_297.tape : (i == local.iter_297.tape_ptr ? (b + local.code_298[1]) % 256 : b)] :
      local.code_298[0] == "-"
        ? [for i, b in local.iter_297.tape : (i == local.iter_297.tape_ptr ? (b - local.code_298[1] + 256) % 256 : b)] :
      local.code_298[0] == ","
        ? [for i, b in local.iter_297.tape : (i == local.iter_297.tape_ptr ? local.ascii_lookup[substr(local.input_298, 0, 1)] : b)]
        : local.iter_297.tape)

    tape_ptr = (
      local.code_298[0] == "<"
        ? local.iter_297.tape_ptr - local.code_298[1] :
      local.code_298[0] == ">"
        ? local.iter_297.tape_ptr + local.code_298[1]
        : local.iter_297.tape_ptr)

    code_ptr = 2 + (
      local.code_298[0] == "["
        ? local.iter_297.tape[local.iter_297.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_297.code_ptr)] : local.iter_297.code_ptr :
      local.code_298[0] == "]"
        ? local.iter_297.tape[local.iter_297.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_297.code_ptr)] : local.iter_297.code_ptr
        : local.iter_297.code_ptr)

    steps_taken = 1 + local.iter_297.steps_taken
  }
}

locals {
  code_299 = (try(local.iter_298.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_298.code_ptr, local.iter_298.code_ptr + 2)
    : [null])

  input_299 = (local.code_299[0] == ","
    ? substr(local.input_298, local.code_299[1], -1)
    : local.input_298)

  iter_299 = try(local.iter_298.code_ptr >= length(var.code), true) ? local.iter_298 : {
    output = (local.code_299[0] == "."
      ? "${local.iter_298.output}${join("", [for _ in range(local.code_299[1]) : jsondecode(format("\"\\u%04x\"", local.iter_298.tape[local.iter_298.tape_ptr]))])}"
      : local.iter_298.output)
    
    tape = (
      local.code_299[0] == "+"
        ? [for i, b in local.iter_298.tape : (i == local.iter_298.tape_ptr ? (b + local.code_299[1]) % 256 : b)] :
      local.code_299[0] == "-"
        ? [for i, b in local.iter_298.tape : (i == local.iter_298.tape_ptr ? (b - local.code_299[1] + 256) % 256 : b)] :
      local.code_299[0] == ","
        ? [for i, b in local.iter_298.tape : (i == local.iter_298.tape_ptr ? local.ascii_lookup[substr(local.input_299, 0, 1)] : b)]
        : local.iter_298.tape)

    tape_ptr = (
      local.code_299[0] == "<"
        ? local.iter_298.tape_ptr - local.code_299[1] :
      local.code_299[0] == ">"
        ? local.iter_298.tape_ptr + local.code_299[1]
        : local.iter_298.tape_ptr)

    code_ptr = 2 + (
      local.code_299[0] == "["
        ? local.iter_298.tape[local.iter_298.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_298.code_ptr)] : local.iter_298.code_ptr :
      local.code_299[0] == "]"
        ? local.iter_298.tape[local.iter_298.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_298.code_ptr)] : local.iter_298.code_ptr
        : local.iter_298.code_ptr)

    steps_taken = 1 + local.iter_298.steps_taken
  }
}

locals {
  code_300 = (try(local.iter_299.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_299.code_ptr, local.iter_299.code_ptr + 2)
    : [null])

  input_300 = (local.code_300[0] == ","
    ? substr(local.input_299, local.code_300[1], -1)
    : local.input_299)

  iter_300 = try(local.iter_299.code_ptr >= length(var.code), true) ? local.iter_299 : {
    output = (local.code_300[0] == "."
      ? "${local.iter_299.output}${join("", [for _ in range(local.code_300[1]) : jsondecode(format("\"\\u%04x\"", local.iter_299.tape[local.iter_299.tape_ptr]))])}"
      : local.iter_299.output)
    
    tape = (
      local.code_300[0] == "+"
        ? [for i, b in local.iter_299.tape : (i == local.iter_299.tape_ptr ? (b + local.code_300[1]) % 256 : b)] :
      local.code_300[0] == "-"
        ? [for i, b in local.iter_299.tape : (i == local.iter_299.tape_ptr ? (b - local.code_300[1] + 256) % 256 : b)] :
      local.code_300[0] == ","
        ? [for i, b in local.iter_299.tape : (i == local.iter_299.tape_ptr ? local.ascii_lookup[substr(local.input_300, 0, 1)] : b)]
        : local.iter_299.tape)

    tape_ptr = (
      local.code_300[0] == "<"
        ? local.iter_299.tape_ptr - local.code_300[1] :
      local.code_300[0] == ">"
        ? local.iter_299.tape_ptr + local.code_300[1]
        : local.iter_299.tape_ptr)

    code_ptr = 2 + (
      local.code_300[0] == "["
        ? local.iter_299.tape[local.iter_299.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_299.code_ptr)] : local.iter_299.code_ptr :
      local.code_300[0] == "]"
        ? local.iter_299.tape[local.iter_299.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_299.code_ptr)] : local.iter_299.code_ptr
        : local.iter_299.code_ptr)

    steps_taken = 1 + local.iter_299.steps_taken
  }
}

locals {
  code_301 = (try(local.iter_300.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_300.code_ptr, local.iter_300.code_ptr + 2)
    : [null])

  input_301 = (local.code_301[0] == ","
    ? substr(local.input_300, local.code_301[1], -1)
    : local.input_300)

  iter_301 = try(local.iter_300.code_ptr >= length(var.code), true) ? local.iter_300 : {
    output = (local.code_301[0] == "."
      ? "${local.iter_300.output}${join("", [for _ in range(local.code_301[1]) : jsondecode(format("\"\\u%04x\"", local.iter_300.tape[local.iter_300.tape_ptr]))])}"
      : local.iter_300.output)
    
    tape = (
      local.code_301[0] == "+"
        ? [for i, b in local.iter_300.tape : (i == local.iter_300.tape_ptr ? (b + local.code_301[1]) % 256 : b)] :
      local.code_301[0] == "-"
        ? [for i, b in local.iter_300.tape : (i == local.iter_300.tape_ptr ? (b - local.code_301[1] + 256) % 256 : b)] :
      local.code_301[0] == ","
        ? [for i, b in local.iter_300.tape : (i == local.iter_300.tape_ptr ? local.ascii_lookup[substr(local.input_301, 0, 1)] : b)]
        : local.iter_300.tape)

    tape_ptr = (
      local.code_301[0] == "<"
        ? local.iter_300.tape_ptr - local.code_301[1] :
      local.code_301[0] == ">"
        ? local.iter_300.tape_ptr + local.code_301[1]
        : local.iter_300.tape_ptr)

    code_ptr = 2 + (
      local.code_301[0] == "["
        ? local.iter_300.tape[local.iter_300.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_300.code_ptr)] : local.iter_300.code_ptr :
      local.code_301[0] == "]"
        ? local.iter_300.tape[local.iter_300.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_300.code_ptr)] : local.iter_300.code_ptr
        : local.iter_300.code_ptr)

    steps_taken = 1 + local.iter_300.steps_taken
  }
}

locals {
  code_302 = (try(local.iter_301.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_301.code_ptr, local.iter_301.code_ptr + 2)
    : [null])

  input_302 = (local.code_302[0] == ","
    ? substr(local.input_301, local.code_302[1], -1)
    : local.input_301)

  iter_302 = try(local.iter_301.code_ptr >= length(var.code), true) ? local.iter_301 : {
    output = (local.code_302[0] == "."
      ? "${local.iter_301.output}${join("", [for _ in range(local.code_302[1]) : jsondecode(format("\"\\u%04x\"", local.iter_301.tape[local.iter_301.tape_ptr]))])}"
      : local.iter_301.output)
    
    tape = (
      local.code_302[0] == "+"
        ? [for i, b in local.iter_301.tape : (i == local.iter_301.tape_ptr ? (b + local.code_302[1]) % 256 : b)] :
      local.code_302[0] == "-"
        ? [for i, b in local.iter_301.tape : (i == local.iter_301.tape_ptr ? (b - local.code_302[1] + 256) % 256 : b)] :
      local.code_302[0] == ","
        ? [for i, b in local.iter_301.tape : (i == local.iter_301.tape_ptr ? local.ascii_lookup[substr(local.input_302, 0, 1)] : b)]
        : local.iter_301.tape)

    tape_ptr = (
      local.code_302[0] == "<"
        ? local.iter_301.tape_ptr - local.code_302[1] :
      local.code_302[0] == ">"
        ? local.iter_301.tape_ptr + local.code_302[1]
        : local.iter_301.tape_ptr)

    code_ptr = 2 + (
      local.code_302[0] == "["
        ? local.iter_301.tape[local.iter_301.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_301.code_ptr)] : local.iter_301.code_ptr :
      local.code_302[0] == "]"
        ? local.iter_301.tape[local.iter_301.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_301.code_ptr)] : local.iter_301.code_ptr
        : local.iter_301.code_ptr)

    steps_taken = 1 + local.iter_301.steps_taken
  }
}

locals {
  code_303 = (try(local.iter_302.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_302.code_ptr, local.iter_302.code_ptr + 2)
    : [null])

  input_303 = (local.code_303[0] == ","
    ? substr(local.input_302, local.code_303[1], -1)
    : local.input_302)

  iter_303 = try(local.iter_302.code_ptr >= length(var.code), true) ? local.iter_302 : {
    output = (local.code_303[0] == "."
      ? "${local.iter_302.output}${join("", [for _ in range(local.code_303[1]) : jsondecode(format("\"\\u%04x\"", local.iter_302.tape[local.iter_302.tape_ptr]))])}"
      : local.iter_302.output)
    
    tape = (
      local.code_303[0] == "+"
        ? [for i, b in local.iter_302.tape : (i == local.iter_302.tape_ptr ? (b + local.code_303[1]) % 256 : b)] :
      local.code_303[0] == "-"
        ? [for i, b in local.iter_302.tape : (i == local.iter_302.tape_ptr ? (b - local.code_303[1] + 256) % 256 : b)] :
      local.code_303[0] == ","
        ? [for i, b in local.iter_302.tape : (i == local.iter_302.tape_ptr ? local.ascii_lookup[substr(local.input_303, 0, 1)] : b)]
        : local.iter_302.tape)

    tape_ptr = (
      local.code_303[0] == "<"
        ? local.iter_302.tape_ptr - local.code_303[1] :
      local.code_303[0] == ">"
        ? local.iter_302.tape_ptr + local.code_303[1]
        : local.iter_302.tape_ptr)

    code_ptr = 2 + (
      local.code_303[0] == "["
        ? local.iter_302.tape[local.iter_302.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_302.code_ptr)] : local.iter_302.code_ptr :
      local.code_303[0] == "]"
        ? local.iter_302.tape[local.iter_302.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_302.code_ptr)] : local.iter_302.code_ptr
        : local.iter_302.code_ptr)

    steps_taken = 1 + local.iter_302.steps_taken
  }
}

locals {
  code_304 = (try(local.iter_303.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_303.code_ptr, local.iter_303.code_ptr + 2)
    : [null])

  input_304 = (local.code_304[0] == ","
    ? substr(local.input_303, local.code_304[1], -1)
    : local.input_303)

  iter_304 = try(local.iter_303.code_ptr >= length(var.code), true) ? local.iter_303 : {
    output = (local.code_304[0] == "."
      ? "${local.iter_303.output}${join("", [for _ in range(local.code_304[1]) : jsondecode(format("\"\\u%04x\"", local.iter_303.tape[local.iter_303.tape_ptr]))])}"
      : local.iter_303.output)
    
    tape = (
      local.code_304[0] == "+"
        ? [for i, b in local.iter_303.tape : (i == local.iter_303.tape_ptr ? (b + local.code_304[1]) % 256 : b)] :
      local.code_304[0] == "-"
        ? [for i, b in local.iter_303.tape : (i == local.iter_303.tape_ptr ? (b - local.code_304[1] + 256) % 256 : b)] :
      local.code_304[0] == ","
        ? [for i, b in local.iter_303.tape : (i == local.iter_303.tape_ptr ? local.ascii_lookup[substr(local.input_304, 0, 1)] : b)]
        : local.iter_303.tape)

    tape_ptr = (
      local.code_304[0] == "<"
        ? local.iter_303.tape_ptr - local.code_304[1] :
      local.code_304[0] == ">"
        ? local.iter_303.tape_ptr + local.code_304[1]
        : local.iter_303.tape_ptr)

    code_ptr = 2 + (
      local.code_304[0] == "["
        ? local.iter_303.tape[local.iter_303.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_303.code_ptr)] : local.iter_303.code_ptr :
      local.code_304[0] == "]"
        ? local.iter_303.tape[local.iter_303.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_303.code_ptr)] : local.iter_303.code_ptr
        : local.iter_303.code_ptr)

    steps_taken = 1 + local.iter_303.steps_taken
  }
}

locals {
  code_305 = (try(local.iter_304.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_304.code_ptr, local.iter_304.code_ptr + 2)
    : [null])

  input_305 = (local.code_305[0] == ","
    ? substr(local.input_304, local.code_305[1], -1)
    : local.input_304)

  iter_305 = try(local.iter_304.code_ptr >= length(var.code), true) ? local.iter_304 : {
    output = (local.code_305[0] == "."
      ? "${local.iter_304.output}${join("", [for _ in range(local.code_305[1]) : jsondecode(format("\"\\u%04x\"", local.iter_304.tape[local.iter_304.tape_ptr]))])}"
      : local.iter_304.output)
    
    tape = (
      local.code_305[0] == "+"
        ? [for i, b in local.iter_304.tape : (i == local.iter_304.tape_ptr ? (b + local.code_305[1]) % 256 : b)] :
      local.code_305[0] == "-"
        ? [for i, b in local.iter_304.tape : (i == local.iter_304.tape_ptr ? (b - local.code_305[1] + 256) % 256 : b)] :
      local.code_305[0] == ","
        ? [for i, b in local.iter_304.tape : (i == local.iter_304.tape_ptr ? local.ascii_lookup[substr(local.input_305, 0, 1)] : b)]
        : local.iter_304.tape)

    tape_ptr = (
      local.code_305[0] == "<"
        ? local.iter_304.tape_ptr - local.code_305[1] :
      local.code_305[0] == ">"
        ? local.iter_304.tape_ptr + local.code_305[1]
        : local.iter_304.tape_ptr)

    code_ptr = 2 + (
      local.code_305[0] == "["
        ? local.iter_304.tape[local.iter_304.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_304.code_ptr)] : local.iter_304.code_ptr :
      local.code_305[0] == "]"
        ? local.iter_304.tape[local.iter_304.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_304.code_ptr)] : local.iter_304.code_ptr
        : local.iter_304.code_ptr)

    steps_taken = 1 + local.iter_304.steps_taken
  }
}

locals {
  code_306 = (try(local.iter_305.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_305.code_ptr, local.iter_305.code_ptr + 2)
    : [null])

  input_306 = (local.code_306[0] == ","
    ? substr(local.input_305, local.code_306[1], -1)
    : local.input_305)

  iter_306 = try(local.iter_305.code_ptr >= length(var.code), true) ? local.iter_305 : {
    output = (local.code_306[0] == "."
      ? "${local.iter_305.output}${join("", [for _ in range(local.code_306[1]) : jsondecode(format("\"\\u%04x\"", local.iter_305.tape[local.iter_305.tape_ptr]))])}"
      : local.iter_305.output)
    
    tape = (
      local.code_306[0] == "+"
        ? [for i, b in local.iter_305.tape : (i == local.iter_305.tape_ptr ? (b + local.code_306[1]) % 256 : b)] :
      local.code_306[0] == "-"
        ? [for i, b in local.iter_305.tape : (i == local.iter_305.tape_ptr ? (b - local.code_306[1] + 256) % 256 : b)] :
      local.code_306[0] == ","
        ? [for i, b in local.iter_305.tape : (i == local.iter_305.tape_ptr ? local.ascii_lookup[substr(local.input_306, 0, 1)] : b)]
        : local.iter_305.tape)

    tape_ptr = (
      local.code_306[0] == "<"
        ? local.iter_305.tape_ptr - local.code_306[1] :
      local.code_306[0] == ">"
        ? local.iter_305.tape_ptr + local.code_306[1]
        : local.iter_305.tape_ptr)

    code_ptr = 2 + (
      local.code_306[0] == "["
        ? local.iter_305.tape[local.iter_305.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_305.code_ptr)] : local.iter_305.code_ptr :
      local.code_306[0] == "]"
        ? local.iter_305.tape[local.iter_305.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_305.code_ptr)] : local.iter_305.code_ptr
        : local.iter_305.code_ptr)

    steps_taken = 1 + local.iter_305.steps_taken
  }
}

locals {
  code_307 = (try(local.iter_306.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_306.code_ptr, local.iter_306.code_ptr + 2)
    : [null])

  input_307 = (local.code_307[0] == ","
    ? substr(local.input_306, local.code_307[1], -1)
    : local.input_306)

  iter_307 = try(local.iter_306.code_ptr >= length(var.code), true) ? local.iter_306 : {
    output = (local.code_307[0] == "."
      ? "${local.iter_306.output}${join("", [for _ in range(local.code_307[1]) : jsondecode(format("\"\\u%04x\"", local.iter_306.tape[local.iter_306.tape_ptr]))])}"
      : local.iter_306.output)
    
    tape = (
      local.code_307[0] == "+"
        ? [for i, b in local.iter_306.tape : (i == local.iter_306.tape_ptr ? (b + local.code_307[1]) % 256 : b)] :
      local.code_307[0] == "-"
        ? [for i, b in local.iter_306.tape : (i == local.iter_306.tape_ptr ? (b - local.code_307[1] + 256) % 256 : b)] :
      local.code_307[0] == ","
        ? [for i, b in local.iter_306.tape : (i == local.iter_306.tape_ptr ? local.ascii_lookup[substr(local.input_307, 0, 1)] : b)]
        : local.iter_306.tape)

    tape_ptr = (
      local.code_307[0] == "<"
        ? local.iter_306.tape_ptr - local.code_307[1] :
      local.code_307[0] == ">"
        ? local.iter_306.tape_ptr + local.code_307[1]
        : local.iter_306.tape_ptr)

    code_ptr = 2 + (
      local.code_307[0] == "["
        ? local.iter_306.tape[local.iter_306.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_306.code_ptr)] : local.iter_306.code_ptr :
      local.code_307[0] == "]"
        ? local.iter_306.tape[local.iter_306.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_306.code_ptr)] : local.iter_306.code_ptr
        : local.iter_306.code_ptr)

    steps_taken = 1 + local.iter_306.steps_taken
  }
}

locals {
  code_308 = (try(local.iter_307.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_307.code_ptr, local.iter_307.code_ptr + 2)
    : [null])

  input_308 = (local.code_308[0] == ","
    ? substr(local.input_307, local.code_308[1], -1)
    : local.input_307)

  iter_308 = try(local.iter_307.code_ptr >= length(var.code), true) ? local.iter_307 : {
    output = (local.code_308[0] == "."
      ? "${local.iter_307.output}${join("", [for _ in range(local.code_308[1]) : jsondecode(format("\"\\u%04x\"", local.iter_307.tape[local.iter_307.tape_ptr]))])}"
      : local.iter_307.output)
    
    tape = (
      local.code_308[0] == "+"
        ? [for i, b in local.iter_307.tape : (i == local.iter_307.tape_ptr ? (b + local.code_308[1]) % 256 : b)] :
      local.code_308[0] == "-"
        ? [for i, b in local.iter_307.tape : (i == local.iter_307.tape_ptr ? (b - local.code_308[1] + 256) % 256 : b)] :
      local.code_308[0] == ","
        ? [for i, b in local.iter_307.tape : (i == local.iter_307.tape_ptr ? local.ascii_lookup[substr(local.input_308, 0, 1)] : b)]
        : local.iter_307.tape)

    tape_ptr = (
      local.code_308[0] == "<"
        ? local.iter_307.tape_ptr - local.code_308[1] :
      local.code_308[0] == ">"
        ? local.iter_307.tape_ptr + local.code_308[1]
        : local.iter_307.tape_ptr)

    code_ptr = 2 + (
      local.code_308[0] == "["
        ? local.iter_307.tape[local.iter_307.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_307.code_ptr)] : local.iter_307.code_ptr :
      local.code_308[0] == "]"
        ? local.iter_307.tape[local.iter_307.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_307.code_ptr)] : local.iter_307.code_ptr
        : local.iter_307.code_ptr)

    steps_taken = 1 + local.iter_307.steps_taken
  }
}

locals {
  code_309 = (try(local.iter_308.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_308.code_ptr, local.iter_308.code_ptr + 2)
    : [null])

  input_309 = (local.code_309[0] == ","
    ? substr(local.input_308, local.code_309[1], -1)
    : local.input_308)

  iter_309 = try(local.iter_308.code_ptr >= length(var.code), true) ? local.iter_308 : {
    output = (local.code_309[0] == "."
      ? "${local.iter_308.output}${join("", [for _ in range(local.code_309[1]) : jsondecode(format("\"\\u%04x\"", local.iter_308.tape[local.iter_308.tape_ptr]))])}"
      : local.iter_308.output)
    
    tape = (
      local.code_309[0] == "+"
        ? [for i, b in local.iter_308.tape : (i == local.iter_308.tape_ptr ? (b + local.code_309[1]) % 256 : b)] :
      local.code_309[0] == "-"
        ? [for i, b in local.iter_308.tape : (i == local.iter_308.tape_ptr ? (b - local.code_309[1] + 256) % 256 : b)] :
      local.code_309[0] == ","
        ? [for i, b in local.iter_308.tape : (i == local.iter_308.tape_ptr ? local.ascii_lookup[substr(local.input_309, 0, 1)] : b)]
        : local.iter_308.tape)

    tape_ptr = (
      local.code_309[0] == "<"
        ? local.iter_308.tape_ptr - local.code_309[1] :
      local.code_309[0] == ">"
        ? local.iter_308.tape_ptr + local.code_309[1]
        : local.iter_308.tape_ptr)

    code_ptr = 2 + (
      local.code_309[0] == "["
        ? local.iter_308.tape[local.iter_308.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_308.code_ptr)] : local.iter_308.code_ptr :
      local.code_309[0] == "]"
        ? local.iter_308.tape[local.iter_308.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_308.code_ptr)] : local.iter_308.code_ptr
        : local.iter_308.code_ptr)

    steps_taken = 1 + local.iter_308.steps_taken
  }
}

locals {
  code_310 = (try(local.iter_309.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_309.code_ptr, local.iter_309.code_ptr + 2)
    : [null])

  input_310 = (local.code_310[0] == ","
    ? substr(local.input_309, local.code_310[1], -1)
    : local.input_309)

  iter_310 = try(local.iter_309.code_ptr >= length(var.code), true) ? local.iter_309 : {
    output = (local.code_310[0] == "."
      ? "${local.iter_309.output}${join("", [for _ in range(local.code_310[1]) : jsondecode(format("\"\\u%04x\"", local.iter_309.tape[local.iter_309.tape_ptr]))])}"
      : local.iter_309.output)
    
    tape = (
      local.code_310[0] == "+"
        ? [for i, b in local.iter_309.tape : (i == local.iter_309.tape_ptr ? (b + local.code_310[1]) % 256 : b)] :
      local.code_310[0] == "-"
        ? [for i, b in local.iter_309.tape : (i == local.iter_309.tape_ptr ? (b - local.code_310[1] + 256) % 256 : b)] :
      local.code_310[0] == ","
        ? [for i, b in local.iter_309.tape : (i == local.iter_309.tape_ptr ? local.ascii_lookup[substr(local.input_310, 0, 1)] : b)]
        : local.iter_309.tape)

    tape_ptr = (
      local.code_310[0] == "<"
        ? local.iter_309.tape_ptr - local.code_310[1] :
      local.code_310[0] == ">"
        ? local.iter_309.tape_ptr + local.code_310[1]
        : local.iter_309.tape_ptr)

    code_ptr = 2 + (
      local.code_310[0] == "["
        ? local.iter_309.tape[local.iter_309.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_309.code_ptr)] : local.iter_309.code_ptr :
      local.code_310[0] == "]"
        ? local.iter_309.tape[local.iter_309.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_309.code_ptr)] : local.iter_309.code_ptr
        : local.iter_309.code_ptr)

    steps_taken = 1 + local.iter_309.steps_taken
  }
}

locals {
  code_311 = (try(local.iter_310.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_310.code_ptr, local.iter_310.code_ptr + 2)
    : [null])

  input_311 = (local.code_311[0] == ","
    ? substr(local.input_310, local.code_311[1], -1)
    : local.input_310)

  iter_311 = try(local.iter_310.code_ptr >= length(var.code), true) ? local.iter_310 : {
    output = (local.code_311[0] == "."
      ? "${local.iter_310.output}${join("", [for _ in range(local.code_311[1]) : jsondecode(format("\"\\u%04x\"", local.iter_310.tape[local.iter_310.tape_ptr]))])}"
      : local.iter_310.output)
    
    tape = (
      local.code_311[0] == "+"
        ? [for i, b in local.iter_310.tape : (i == local.iter_310.tape_ptr ? (b + local.code_311[1]) % 256 : b)] :
      local.code_311[0] == "-"
        ? [for i, b in local.iter_310.tape : (i == local.iter_310.tape_ptr ? (b - local.code_311[1] + 256) % 256 : b)] :
      local.code_311[0] == ","
        ? [for i, b in local.iter_310.tape : (i == local.iter_310.tape_ptr ? local.ascii_lookup[substr(local.input_311, 0, 1)] : b)]
        : local.iter_310.tape)

    tape_ptr = (
      local.code_311[0] == "<"
        ? local.iter_310.tape_ptr - local.code_311[1] :
      local.code_311[0] == ">"
        ? local.iter_310.tape_ptr + local.code_311[1]
        : local.iter_310.tape_ptr)

    code_ptr = 2 + (
      local.code_311[0] == "["
        ? local.iter_310.tape[local.iter_310.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_310.code_ptr)] : local.iter_310.code_ptr :
      local.code_311[0] == "]"
        ? local.iter_310.tape[local.iter_310.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_310.code_ptr)] : local.iter_310.code_ptr
        : local.iter_310.code_ptr)

    steps_taken = 1 + local.iter_310.steps_taken
  }
}

locals {
  code_312 = (try(local.iter_311.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_311.code_ptr, local.iter_311.code_ptr + 2)
    : [null])

  input_312 = (local.code_312[0] == ","
    ? substr(local.input_311, local.code_312[1], -1)
    : local.input_311)

  iter_312 = try(local.iter_311.code_ptr >= length(var.code), true) ? local.iter_311 : {
    output = (local.code_312[0] == "."
      ? "${local.iter_311.output}${join("", [for _ in range(local.code_312[1]) : jsondecode(format("\"\\u%04x\"", local.iter_311.tape[local.iter_311.tape_ptr]))])}"
      : local.iter_311.output)
    
    tape = (
      local.code_312[0] == "+"
        ? [for i, b in local.iter_311.tape : (i == local.iter_311.tape_ptr ? (b + local.code_312[1]) % 256 : b)] :
      local.code_312[0] == "-"
        ? [for i, b in local.iter_311.tape : (i == local.iter_311.tape_ptr ? (b - local.code_312[1] + 256) % 256 : b)] :
      local.code_312[0] == ","
        ? [for i, b in local.iter_311.tape : (i == local.iter_311.tape_ptr ? local.ascii_lookup[substr(local.input_312, 0, 1)] : b)]
        : local.iter_311.tape)

    tape_ptr = (
      local.code_312[0] == "<"
        ? local.iter_311.tape_ptr - local.code_312[1] :
      local.code_312[0] == ">"
        ? local.iter_311.tape_ptr + local.code_312[1]
        : local.iter_311.tape_ptr)

    code_ptr = 2 + (
      local.code_312[0] == "["
        ? local.iter_311.tape[local.iter_311.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_311.code_ptr)] : local.iter_311.code_ptr :
      local.code_312[0] == "]"
        ? local.iter_311.tape[local.iter_311.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_311.code_ptr)] : local.iter_311.code_ptr
        : local.iter_311.code_ptr)

    steps_taken = 1 + local.iter_311.steps_taken
  }
}

locals {
  code_313 = (try(local.iter_312.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_312.code_ptr, local.iter_312.code_ptr + 2)
    : [null])

  input_313 = (local.code_313[0] == ","
    ? substr(local.input_312, local.code_313[1], -1)
    : local.input_312)

  iter_313 = try(local.iter_312.code_ptr >= length(var.code), true) ? local.iter_312 : {
    output = (local.code_313[0] == "."
      ? "${local.iter_312.output}${join("", [for _ in range(local.code_313[1]) : jsondecode(format("\"\\u%04x\"", local.iter_312.tape[local.iter_312.tape_ptr]))])}"
      : local.iter_312.output)
    
    tape = (
      local.code_313[0] == "+"
        ? [for i, b in local.iter_312.tape : (i == local.iter_312.tape_ptr ? (b + local.code_313[1]) % 256 : b)] :
      local.code_313[0] == "-"
        ? [for i, b in local.iter_312.tape : (i == local.iter_312.tape_ptr ? (b - local.code_313[1] + 256) % 256 : b)] :
      local.code_313[0] == ","
        ? [for i, b in local.iter_312.tape : (i == local.iter_312.tape_ptr ? local.ascii_lookup[substr(local.input_313, 0, 1)] : b)]
        : local.iter_312.tape)

    tape_ptr = (
      local.code_313[0] == "<"
        ? local.iter_312.tape_ptr - local.code_313[1] :
      local.code_313[0] == ">"
        ? local.iter_312.tape_ptr + local.code_313[1]
        : local.iter_312.tape_ptr)

    code_ptr = 2 + (
      local.code_313[0] == "["
        ? local.iter_312.tape[local.iter_312.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_312.code_ptr)] : local.iter_312.code_ptr :
      local.code_313[0] == "]"
        ? local.iter_312.tape[local.iter_312.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_312.code_ptr)] : local.iter_312.code_ptr
        : local.iter_312.code_ptr)

    steps_taken = 1 + local.iter_312.steps_taken
  }
}

locals {
  code_314 = (try(local.iter_313.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_313.code_ptr, local.iter_313.code_ptr + 2)
    : [null])

  input_314 = (local.code_314[0] == ","
    ? substr(local.input_313, local.code_314[1], -1)
    : local.input_313)

  iter_314 = try(local.iter_313.code_ptr >= length(var.code), true) ? local.iter_313 : {
    output = (local.code_314[0] == "."
      ? "${local.iter_313.output}${join("", [for _ in range(local.code_314[1]) : jsondecode(format("\"\\u%04x\"", local.iter_313.tape[local.iter_313.tape_ptr]))])}"
      : local.iter_313.output)
    
    tape = (
      local.code_314[0] == "+"
        ? [for i, b in local.iter_313.tape : (i == local.iter_313.tape_ptr ? (b + local.code_314[1]) % 256 : b)] :
      local.code_314[0] == "-"
        ? [for i, b in local.iter_313.tape : (i == local.iter_313.tape_ptr ? (b - local.code_314[1] + 256) % 256 : b)] :
      local.code_314[0] == ","
        ? [for i, b in local.iter_313.tape : (i == local.iter_313.tape_ptr ? local.ascii_lookup[substr(local.input_314, 0, 1)] : b)]
        : local.iter_313.tape)

    tape_ptr = (
      local.code_314[0] == "<"
        ? local.iter_313.tape_ptr - local.code_314[1] :
      local.code_314[0] == ">"
        ? local.iter_313.tape_ptr + local.code_314[1]
        : local.iter_313.tape_ptr)

    code_ptr = 2 + (
      local.code_314[0] == "["
        ? local.iter_313.tape[local.iter_313.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_313.code_ptr)] : local.iter_313.code_ptr :
      local.code_314[0] == "]"
        ? local.iter_313.tape[local.iter_313.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_313.code_ptr)] : local.iter_313.code_ptr
        : local.iter_313.code_ptr)

    steps_taken = 1 + local.iter_313.steps_taken
  }
}

locals {
  code_315 = (try(local.iter_314.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_314.code_ptr, local.iter_314.code_ptr + 2)
    : [null])

  input_315 = (local.code_315[0] == ","
    ? substr(local.input_314, local.code_315[1], -1)
    : local.input_314)

  iter_315 = try(local.iter_314.code_ptr >= length(var.code), true) ? local.iter_314 : {
    output = (local.code_315[0] == "."
      ? "${local.iter_314.output}${join("", [for _ in range(local.code_315[1]) : jsondecode(format("\"\\u%04x\"", local.iter_314.tape[local.iter_314.tape_ptr]))])}"
      : local.iter_314.output)
    
    tape = (
      local.code_315[0] == "+"
        ? [for i, b in local.iter_314.tape : (i == local.iter_314.tape_ptr ? (b + local.code_315[1]) % 256 : b)] :
      local.code_315[0] == "-"
        ? [for i, b in local.iter_314.tape : (i == local.iter_314.tape_ptr ? (b - local.code_315[1] + 256) % 256 : b)] :
      local.code_315[0] == ","
        ? [for i, b in local.iter_314.tape : (i == local.iter_314.tape_ptr ? local.ascii_lookup[substr(local.input_315, 0, 1)] : b)]
        : local.iter_314.tape)

    tape_ptr = (
      local.code_315[0] == "<"
        ? local.iter_314.tape_ptr - local.code_315[1] :
      local.code_315[0] == ">"
        ? local.iter_314.tape_ptr + local.code_315[1]
        : local.iter_314.tape_ptr)

    code_ptr = 2 + (
      local.code_315[0] == "["
        ? local.iter_314.tape[local.iter_314.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_314.code_ptr)] : local.iter_314.code_ptr :
      local.code_315[0] == "]"
        ? local.iter_314.tape[local.iter_314.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_314.code_ptr)] : local.iter_314.code_ptr
        : local.iter_314.code_ptr)

    steps_taken = 1 + local.iter_314.steps_taken
  }
}

locals {
  code_316 = (try(local.iter_315.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_315.code_ptr, local.iter_315.code_ptr + 2)
    : [null])

  input_316 = (local.code_316[0] == ","
    ? substr(local.input_315, local.code_316[1], -1)
    : local.input_315)

  iter_316 = try(local.iter_315.code_ptr >= length(var.code), true) ? local.iter_315 : {
    output = (local.code_316[0] == "."
      ? "${local.iter_315.output}${join("", [for _ in range(local.code_316[1]) : jsondecode(format("\"\\u%04x\"", local.iter_315.tape[local.iter_315.tape_ptr]))])}"
      : local.iter_315.output)
    
    tape = (
      local.code_316[0] == "+"
        ? [for i, b in local.iter_315.tape : (i == local.iter_315.tape_ptr ? (b + local.code_316[1]) % 256 : b)] :
      local.code_316[0] == "-"
        ? [for i, b in local.iter_315.tape : (i == local.iter_315.tape_ptr ? (b - local.code_316[1] + 256) % 256 : b)] :
      local.code_316[0] == ","
        ? [for i, b in local.iter_315.tape : (i == local.iter_315.tape_ptr ? local.ascii_lookup[substr(local.input_316, 0, 1)] : b)]
        : local.iter_315.tape)

    tape_ptr = (
      local.code_316[0] == "<"
        ? local.iter_315.tape_ptr - local.code_316[1] :
      local.code_316[0] == ">"
        ? local.iter_315.tape_ptr + local.code_316[1]
        : local.iter_315.tape_ptr)

    code_ptr = 2 + (
      local.code_316[0] == "["
        ? local.iter_315.tape[local.iter_315.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_315.code_ptr)] : local.iter_315.code_ptr :
      local.code_316[0] == "]"
        ? local.iter_315.tape[local.iter_315.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_315.code_ptr)] : local.iter_315.code_ptr
        : local.iter_315.code_ptr)

    steps_taken = 1 + local.iter_315.steps_taken
  }
}

locals {
  code_317 = (try(local.iter_316.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_316.code_ptr, local.iter_316.code_ptr + 2)
    : [null])

  input_317 = (local.code_317[0] == ","
    ? substr(local.input_316, local.code_317[1], -1)
    : local.input_316)

  iter_317 = try(local.iter_316.code_ptr >= length(var.code), true) ? local.iter_316 : {
    output = (local.code_317[0] == "."
      ? "${local.iter_316.output}${join("", [for _ in range(local.code_317[1]) : jsondecode(format("\"\\u%04x\"", local.iter_316.tape[local.iter_316.tape_ptr]))])}"
      : local.iter_316.output)
    
    tape = (
      local.code_317[0] == "+"
        ? [for i, b in local.iter_316.tape : (i == local.iter_316.tape_ptr ? (b + local.code_317[1]) % 256 : b)] :
      local.code_317[0] == "-"
        ? [for i, b in local.iter_316.tape : (i == local.iter_316.tape_ptr ? (b - local.code_317[1] + 256) % 256 : b)] :
      local.code_317[0] == ","
        ? [for i, b in local.iter_316.tape : (i == local.iter_316.tape_ptr ? local.ascii_lookup[substr(local.input_317, 0, 1)] : b)]
        : local.iter_316.tape)

    tape_ptr = (
      local.code_317[0] == "<"
        ? local.iter_316.tape_ptr - local.code_317[1] :
      local.code_317[0] == ">"
        ? local.iter_316.tape_ptr + local.code_317[1]
        : local.iter_316.tape_ptr)

    code_ptr = 2 + (
      local.code_317[0] == "["
        ? local.iter_316.tape[local.iter_316.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_316.code_ptr)] : local.iter_316.code_ptr :
      local.code_317[0] == "]"
        ? local.iter_316.tape[local.iter_316.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_316.code_ptr)] : local.iter_316.code_ptr
        : local.iter_316.code_ptr)

    steps_taken = 1 + local.iter_316.steps_taken
  }
}

locals {
  code_318 = (try(local.iter_317.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_317.code_ptr, local.iter_317.code_ptr + 2)
    : [null])

  input_318 = (local.code_318[0] == ","
    ? substr(local.input_317, local.code_318[1], -1)
    : local.input_317)

  iter_318 = try(local.iter_317.code_ptr >= length(var.code), true) ? local.iter_317 : {
    output = (local.code_318[0] == "."
      ? "${local.iter_317.output}${join("", [for _ in range(local.code_318[1]) : jsondecode(format("\"\\u%04x\"", local.iter_317.tape[local.iter_317.tape_ptr]))])}"
      : local.iter_317.output)
    
    tape = (
      local.code_318[0] == "+"
        ? [for i, b in local.iter_317.tape : (i == local.iter_317.tape_ptr ? (b + local.code_318[1]) % 256 : b)] :
      local.code_318[0] == "-"
        ? [for i, b in local.iter_317.tape : (i == local.iter_317.tape_ptr ? (b - local.code_318[1] + 256) % 256 : b)] :
      local.code_318[0] == ","
        ? [for i, b in local.iter_317.tape : (i == local.iter_317.tape_ptr ? local.ascii_lookup[substr(local.input_318, 0, 1)] : b)]
        : local.iter_317.tape)

    tape_ptr = (
      local.code_318[0] == "<"
        ? local.iter_317.tape_ptr - local.code_318[1] :
      local.code_318[0] == ">"
        ? local.iter_317.tape_ptr + local.code_318[1]
        : local.iter_317.tape_ptr)

    code_ptr = 2 + (
      local.code_318[0] == "["
        ? local.iter_317.tape[local.iter_317.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_317.code_ptr)] : local.iter_317.code_ptr :
      local.code_318[0] == "]"
        ? local.iter_317.tape[local.iter_317.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_317.code_ptr)] : local.iter_317.code_ptr
        : local.iter_317.code_ptr)

    steps_taken = 1 + local.iter_317.steps_taken
  }
}

locals {
  code_319 = (try(local.iter_318.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_318.code_ptr, local.iter_318.code_ptr + 2)
    : [null])

  input_319 = (local.code_319[0] == ","
    ? substr(local.input_318, local.code_319[1], -1)
    : local.input_318)

  iter_319 = try(local.iter_318.code_ptr >= length(var.code), true) ? local.iter_318 : {
    output = (local.code_319[0] == "."
      ? "${local.iter_318.output}${join("", [for _ in range(local.code_319[1]) : jsondecode(format("\"\\u%04x\"", local.iter_318.tape[local.iter_318.tape_ptr]))])}"
      : local.iter_318.output)
    
    tape = (
      local.code_319[0] == "+"
        ? [for i, b in local.iter_318.tape : (i == local.iter_318.tape_ptr ? (b + local.code_319[1]) % 256 : b)] :
      local.code_319[0] == "-"
        ? [for i, b in local.iter_318.tape : (i == local.iter_318.tape_ptr ? (b - local.code_319[1] + 256) % 256 : b)] :
      local.code_319[0] == ","
        ? [for i, b in local.iter_318.tape : (i == local.iter_318.tape_ptr ? local.ascii_lookup[substr(local.input_319, 0, 1)] : b)]
        : local.iter_318.tape)

    tape_ptr = (
      local.code_319[0] == "<"
        ? local.iter_318.tape_ptr - local.code_319[1] :
      local.code_319[0] == ">"
        ? local.iter_318.tape_ptr + local.code_319[1]
        : local.iter_318.tape_ptr)

    code_ptr = 2 + (
      local.code_319[0] == "["
        ? local.iter_318.tape[local.iter_318.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_318.code_ptr)] : local.iter_318.code_ptr :
      local.code_319[0] == "]"
        ? local.iter_318.tape[local.iter_318.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_318.code_ptr)] : local.iter_318.code_ptr
        : local.iter_318.code_ptr)

    steps_taken = 1 + local.iter_318.steps_taken
  }
}

locals {
  code_320 = (try(local.iter_319.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_319.code_ptr, local.iter_319.code_ptr + 2)
    : [null])

  input_320 = (local.code_320[0] == ","
    ? substr(local.input_319, local.code_320[1], -1)
    : local.input_319)

  iter_320 = try(local.iter_319.code_ptr >= length(var.code), true) ? local.iter_319 : {
    output = (local.code_320[0] == "."
      ? "${local.iter_319.output}${join("", [for _ in range(local.code_320[1]) : jsondecode(format("\"\\u%04x\"", local.iter_319.tape[local.iter_319.tape_ptr]))])}"
      : local.iter_319.output)
    
    tape = (
      local.code_320[0] == "+"
        ? [for i, b in local.iter_319.tape : (i == local.iter_319.tape_ptr ? (b + local.code_320[1]) % 256 : b)] :
      local.code_320[0] == "-"
        ? [for i, b in local.iter_319.tape : (i == local.iter_319.tape_ptr ? (b - local.code_320[1] + 256) % 256 : b)] :
      local.code_320[0] == ","
        ? [for i, b in local.iter_319.tape : (i == local.iter_319.tape_ptr ? local.ascii_lookup[substr(local.input_320, 0, 1)] : b)]
        : local.iter_319.tape)

    tape_ptr = (
      local.code_320[0] == "<"
        ? local.iter_319.tape_ptr - local.code_320[1] :
      local.code_320[0] == ">"
        ? local.iter_319.tape_ptr + local.code_320[1]
        : local.iter_319.tape_ptr)

    code_ptr = 2 + (
      local.code_320[0] == "["
        ? local.iter_319.tape[local.iter_319.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_319.code_ptr)] : local.iter_319.code_ptr :
      local.code_320[0] == "]"
        ? local.iter_319.tape[local.iter_319.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_319.code_ptr)] : local.iter_319.code_ptr
        : local.iter_319.code_ptr)

    steps_taken = 1 + local.iter_319.steps_taken
  }
}

locals {
  code_321 = (try(local.iter_320.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_320.code_ptr, local.iter_320.code_ptr + 2)
    : [null])

  input_321 = (local.code_321[0] == ","
    ? substr(local.input_320, local.code_321[1], -1)
    : local.input_320)

  iter_321 = try(local.iter_320.code_ptr >= length(var.code), true) ? local.iter_320 : {
    output = (local.code_321[0] == "."
      ? "${local.iter_320.output}${join("", [for _ in range(local.code_321[1]) : jsondecode(format("\"\\u%04x\"", local.iter_320.tape[local.iter_320.tape_ptr]))])}"
      : local.iter_320.output)
    
    tape = (
      local.code_321[0] == "+"
        ? [for i, b in local.iter_320.tape : (i == local.iter_320.tape_ptr ? (b + local.code_321[1]) % 256 : b)] :
      local.code_321[0] == "-"
        ? [for i, b in local.iter_320.tape : (i == local.iter_320.tape_ptr ? (b - local.code_321[1] + 256) % 256 : b)] :
      local.code_321[0] == ","
        ? [for i, b in local.iter_320.tape : (i == local.iter_320.tape_ptr ? local.ascii_lookup[substr(local.input_321, 0, 1)] : b)]
        : local.iter_320.tape)

    tape_ptr = (
      local.code_321[0] == "<"
        ? local.iter_320.tape_ptr - local.code_321[1] :
      local.code_321[0] == ">"
        ? local.iter_320.tape_ptr + local.code_321[1]
        : local.iter_320.tape_ptr)

    code_ptr = 2 + (
      local.code_321[0] == "["
        ? local.iter_320.tape[local.iter_320.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_320.code_ptr)] : local.iter_320.code_ptr :
      local.code_321[0] == "]"
        ? local.iter_320.tape[local.iter_320.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_320.code_ptr)] : local.iter_320.code_ptr
        : local.iter_320.code_ptr)

    steps_taken = 1 + local.iter_320.steps_taken
  }
}

locals {
  code_322 = (try(local.iter_321.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_321.code_ptr, local.iter_321.code_ptr + 2)
    : [null])

  input_322 = (local.code_322[0] == ","
    ? substr(local.input_321, local.code_322[1], -1)
    : local.input_321)

  iter_322 = try(local.iter_321.code_ptr >= length(var.code), true) ? local.iter_321 : {
    output = (local.code_322[0] == "."
      ? "${local.iter_321.output}${join("", [for _ in range(local.code_322[1]) : jsondecode(format("\"\\u%04x\"", local.iter_321.tape[local.iter_321.tape_ptr]))])}"
      : local.iter_321.output)
    
    tape = (
      local.code_322[0] == "+"
        ? [for i, b in local.iter_321.tape : (i == local.iter_321.tape_ptr ? (b + local.code_322[1]) % 256 : b)] :
      local.code_322[0] == "-"
        ? [for i, b in local.iter_321.tape : (i == local.iter_321.tape_ptr ? (b - local.code_322[1] + 256) % 256 : b)] :
      local.code_322[0] == ","
        ? [for i, b in local.iter_321.tape : (i == local.iter_321.tape_ptr ? local.ascii_lookup[substr(local.input_322, 0, 1)] : b)]
        : local.iter_321.tape)

    tape_ptr = (
      local.code_322[0] == "<"
        ? local.iter_321.tape_ptr - local.code_322[1] :
      local.code_322[0] == ">"
        ? local.iter_321.tape_ptr + local.code_322[1]
        : local.iter_321.tape_ptr)

    code_ptr = 2 + (
      local.code_322[0] == "["
        ? local.iter_321.tape[local.iter_321.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_321.code_ptr)] : local.iter_321.code_ptr :
      local.code_322[0] == "]"
        ? local.iter_321.tape[local.iter_321.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_321.code_ptr)] : local.iter_321.code_ptr
        : local.iter_321.code_ptr)

    steps_taken = 1 + local.iter_321.steps_taken
  }
}

locals {
  code_323 = (try(local.iter_322.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_322.code_ptr, local.iter_322.code_ptr + 2)
    : [null])

  input_323 = (local.code_323[0] == ","
    ? substr(local.input_322, local.code_323[1], -1)
    : local.input_322)

  iter_323 = try(local.iter_322.code_ptr >= length(var.code), true) ? local.iter_322 : {
    output = (local.code_323[0] == "."
      ? "${local.iter_322.output}${join("", [for _ in range(local.code_323[1]) : jsondecode(format("\"\\u%04x\"", local.iter_322.tape[local.iter_322.tape_ptr]))])}"
      : local.iter_322.output)
    
    tape = (
      local.code_323[0] == "+"
        ? [for i, b in local.iter_322.tape : (i == local.iter_322.tape_ptr ? (b + local.code_323[1]) % 256 : b)] :
      local.code_323[0] == "-"
        ? [for i, b in local.iter_322.tape : (i == local.iter_322.tape_ptr ? (b - local.code_323[1] + 256) % 256 : b)] :
      local.code_323[0] == ","
        ? [for i, b in local.iter_322.tape : (i == local.iter_322.tape_ptr ? local.ascii_lookup[substr(local.input_323, 0, 1)] : b)]
        : local.iter_322.tape)

    tape_ptr = (
      local.code_323[0] == "<"
        ? local.iter_322.tape_ptr - local.code_323[1] :
      local.code_323[0] == ">"
        ? local.iter_322.tape_ptr + local.code_323[1]
        : local.iter_322.tape_ptr)

    code_ptr = 2 + (
      local.code_323[0] == "["
        ? local.iter_322.tape[local.iter_322.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_322.code_ptr)] : local.iter_322.code_ptr :
      local.code_323[0] == "]"
        ? local.iter_322.tape[local.iter_322.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_322.code_ptr)] : local.iter_322.code_ptr
        : local.iter_322.code_ptr)

    steps_taken = 1 + local.iter_322.steps_taken
  }
}

locals {
  code_324 = (try(local.iter_323.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_323.code_ptr, local.iter_323.code_ptr + 2)
    : [null])

  input_324 = (local.code_324[0] == ","
    ? substr(local.input_323, local.code_324[1], -1)
    : local.input_323)

  iter_324 = try(local.iter_323.code_ptr >= length(var.code), true) ? local.iter_323 : {
    output = (local.code_324[0] == "."
      ? "${local.iter_323.output}${join("", [for _ in range(local.code_324[1]) : jsondecode(format("\"\\u%04x\"", local.iter_323.tape[local.iter_323.tape_ptr]))])}"
      : local.iter_323.output)
    
    tape = (
      local.code_324[0] == "+"
        ? [for i, b in local.iter_323.tape : (i == local.iter_323.tape_ptr ? (b + local.code_324[1]) % 256 : b)] :
      local.code_324[0] == "-"
        ? [for i, b in local.iter_323.tape : (i == local.iter_323.tape_ptr ? (b - local.code_324[1] + 256) % 256 : b)] :
      local.code_324[0] == ","
        ? [for i, b in local.iter_323.tape : (i == local.iter_323.tape_ptr ? local.ascii_lookup[substr(local.input_324, 0, 1)] : b)]
        : local.iter_323.tape)

    tape_ptr = (
      local.code_324[0] == "<"
        ? local.iter_323.tape_ptr - local.code_324[1] :
      local.code_324[0] == ">"
        ? local.iter_323.tape_ptr + local.code_324[1]
        : local.iter_323.tape_ptr)

    code_ptr = 2 + (
      local.code_324[0] == "["
        ? local.iter_323.tape[local.iter_323.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_323.code_ptr)] : local.iter_323.code_ptr :
      local.code_324[0] == "]"
        ? local.iter_323.tape[local.iter_323.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_323.code_ptr)] : local.iter_323.code_ptr
        : local.iter_323.code_ptr)

    steps_taken = 1 + local.iter_323.steps_taken
  }
}

locals {
  code_325 = (try(local.iter_324.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_324.code_ptr, local.iter_324.code_ptr + 2)
    : [null])

  input_325 = (local.code_325[0] == ","
    ? substr(local.input_324, local.code_325[1], -1)
    : local.input_324)

  iter_325 = try(local.iter_324.code_ptr >= length(var.code), true) ? local.iter_324 : {
    output = (local.code_325[0] == "."
      ? "${local.iter_324.output}${join("", [for _ in range(local.code_325[1]) : jsondecode(format("\"\\u%04x\"", local.iter_324.tape[local.iter_324.tape_ptr]))])}"
      : local.iter_324.output)
    
    tape = (
      local.code_325[0] == "+"
        ? [for i, b in local.iter_324.tape : (i == local.iter_324.tape_ptr ? (b + local.code_325[1]) % 256 : b)] :
      local.code_325[0] == "-"
        ? [for i, b in local.iter_324.tape : (i == local.iter_324.tape_ptr ? (b - local.code_325[1] + 256) % 256 : b)] :
      local.code_325[0] == ","
        ? [for i, b in local.iter_324.tape : (i == local.iter_324.tape_ptr ? local.ascii_lookup[substr(local.input_325, 0, 1)] : b)]
        : local.iter_324.tape)

    tape_ptr = (
      local.code_325[0] == "<"
        ? local.iter_324.tape_ptr - local.code_325[1] :
      local.code_325[0] == ">"
        ? local.iter_324.tape_ptr + local.code_325[1]
        : local.iter_324.tape_ptr)

    code_ptr = 2 + (
      local.code_325[0] == "["
        ? local.iter_324.tape[local.iter_324.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_324.code_ptr)] : local.iter_324.code_ptr :
      local.code_325[0] == "]"
        ? local.iter_324.tape[local.iter_324.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_324.code_ptr)] : local.iter_324.code_ptr
        : local.iter_324.code_ptr)

    steps_taken = 1 + local.iter_324.steps_taken
  }
}

locals {
  code_326 = (try(local.iter_325.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_325.code_ptr, local.iter_325.code_ptr + 2)
    : [null])

  input_326 = (local.code_326[0] == ","
    ? substr(local.input_325, local.code_326[1], -1)
    : local.input_325)

  iter_326 = try(local.iter_325.code_ptr >= length(var.code), true) ? local.iter_325 : {
    output = (local.code_326[0] == "."
      ? "${local.iter_325.output}${join("", [for _ in range(local.code_326[1]) : jsondecode(format("\"\\u%04x\"", local.iter_325.tape[local.iter_325.tape_ptr]))])}"
      : local.iter_325.output)
    
    tape = (
      local.code_326[0] == "+"
        ? [for i, b in local.iter_325.tape : (i == local.iter_325.tape_ptr ? (b + local.code_326[1]) % 256 : b)] :
      local.code_326[0] == "-"
        ? [for i, b in local.iter_325.tape : (i == local.iter_325.tape_ptr ? (b - local.code_326[1] + 256) % 256 : b)] :
      local.code_326[0] == ","
        ? [for i, b in local.iter_325.tape : (i == local.iter_325.tape_ptr ? local.ascii_lookup[substr(local.input_326, 0, 1)] : b)]
        : local.iter_325.tape)

    tape_ptr = (
      local.code_326[0] == "<"
        ? local.iter_325.tape_ptr - local.code_326[1] :
      local.code_326[0] == ">"
        ? local.iter_325.tape_ptr + local.code_326[1]
        : local.iter_325.tape_ptr)

    code_ptr = 2 + (
      local.code_326[0] == "["
        ? local.iter_325.tape[local.iter_325.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_325.code_ptr)] : local.iter_325.code_ptr :
      local.code_326[0] == "]"
        ? local.iter_325.tape[local.iter_325.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_325.code_ptr)] : local.iter_325.code_ptr
        : local.iter_325.code_ptr)

    steps_taken = 1 + local.iter_325.steps_taken
  }
}

locals {
  code_327 = (try(local.iter_326.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_326.code_ptr, local.iter_326.code_ptr + 2)
    : [null])

  input_327 = (local.code_327[0] == ","
    ? substr(local.input_326, local.code_327[1], -1)
    : local.input_326)

  iter_327 = try(local.iter_326.code_ptr >= length(var.code), true) ? local.iter_326 : {
    output = (local.code_327[0] == "."
      ? "${local.iter_326.output}${join("", [for _ in range(local.code_327[1]) : jsondecode(format("\"\\u%04x\"", local.iter_326.tape[local.iter_326.tape_ptr]))])}"
      : local.iter_326.output)
    
    tape = (
      local.code_327[0] == "+"
        ? [for i, b in local.iter_326.tape : (i == local.iter_326.tape_ptr ? (b + local.code_327[1]) % 256 : b)] :
      local.code_327[0] == "-"
        ? [for i, b in local.iter_326.tape : (i == local.iter_326.tape_ptr ? (b - local.code_327[1] + 256) % 256 : b)] :
      local.code_327[0] == ","
        ? [for i, b in local.iter_326.tape : (i == local.iter_326.tape_ptr ? local.ascii_lookup[substr(local.input_327, 0, 1)] : b)]
        : local.iter_326.tape)

    tape_ptr = (
      local.code_327[0] == "<"
        ? local.iter_326.tape_ptr - local.code_327[1] :
      local.code_327[0] == ">"
        ? local.iter_326.tape_ptr + local.code_327[1]
        : local.iter_326.tape_ptr)

    code_ptr = 2 + (
      local.code_327[0] == "["
        ? local.iter_326.tape[local.iter_326.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_326.code_ptr)] : local.iter_326.code_ptr :
      local.code_327[0] == "]"
        ? local.iter_326.tape[local.iter_326.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_326.code_ptr)] : local.iter_326.code_ptr
        : local.iter_326.code_ptr)

    steps_taken = 1 + local.iter_326.steps_taken
  }
}

locals {
  code_328 = (try(local.iter_327.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_327.code_ptr, local.iter_327.code_ptr + 2)
    : [null])

  input_328 = (local.code_328[0] == ","
    ? substr(local.input_327, local.code_328[1], -1)
    : local.input_327)

  iter_328 = try(local.iter_327.code_ptr >= length(var.code), true) ? local.iter_327 : {
    output = (local.code_328[0] == "."
      ? "${local.iter_327.output}${join("", [for _ in range(local.code_328[1]) : jsondecode(format("\"\\u%04x\"", local.iter_327.tape[local.iter_327.tape_ptr]))])}"
      : local.iter_327.output)
    
    tape = (
      local.code_328[0] == "+"
        ? [for i, b in local.iter_327.tape : (i == local.iter_327.tape_ptr ? (b + local.code_328[1]) % 256 : b)] :
      local.code_328[0] == "-"
        ? [for i, b in local.iter_327.tape : (i == local.iter_327.tape_ptr ? (b - local.code_328[1] + 256) % 256 : b)] :
      local.code_328[0] == ","
        ? [for i, b in local.iter_327.tape : (i == local.iter_327.tape_ptr ? local.ascii_lookup[substr(local.input_328, 0, 1)] : b)]
        : local.iter_327.tape)

    tape_ptr = (
      local.code_328[0] == "<"
        ? local.iter_327.tape_ptr - local.code_328[1] :
      local.code_328[0] == ">"
        ? local.iter_327.tape_ptr + local.code_328[1]
        : local.iter_327.tape_ptr)

    code_ptr = 2 + (
      local.code_328[0] == "["
        ? local.iter_327.tape[local.iter_327.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_327.code_ptr)] : local.iter_327.code_ptr :
      local.code_328[0] == "]"
        ? local.iter_327.tape[local.iter_327.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_327.code_ptr)] : local.iter_327.code_ptr
        : local.iter_327.code_ptr)

    steps_taken = 1 + local.iter_327.steps_taken
  }
}

locals {
  code_329 = (try(local.iter_328.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_328.code_ptr, local.iter_328.code_ptr + 2)
    : [null])

  input_329 = (local.code_329[0] == ","
    ? substr(local.input_328, local.code_329[1], -1)
    : local.input_328)

  iter_329 = try(local.iter_328.code_ptr >= length(var.code), true) ? local.iter_328 : {
    output = (local.code_329[0] == "."
      ? "${local.iter_328.output}${join("", [for _ in range(local.code_329[1]) : jsondecode(format("\"\\u%04x\"", local.iter_328.tape[local.iter_328.tape_ptr]))])}"
      : local.iter_328.output)
    
    tape = (
      local.code_329[0] == "+"
        ? [for i, b in local.iter_328.tape : (i == local.iter_328.tape_ptr ? (b + local.code_329[1]) % 256 : b)] :
      local.code_329[0] == "-"
        ? [for i, b in local.iter_328.tape : (i == local.iter_328.tape_ptr ? (b - local.code_329[1] + 256) % 256 : b)] :
      local.code_329[0] == ","
        ? [for i, b in local.iter_328.tape : (i == local.iter_328.tape_ptr ? local.ascii_lookup[substr(local.input_329, 0, 1)] : b)]
        : local.iter_328.tape)

    tape_ptr = (
      local.code_329[0] == "<"
        ? local.iter_328.tape_ptr - local.code_329[1] :
      local.code_329[0] == ">"
        ? local.iter_328.tape_ptr + local.code_329[1]
        : local.iter_328.tape_ptr)

    code_ptr = 2 + (
      local.code_329[0] == "["
        ? local.iter_328.tape[local.iter_328.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_328.code_ptr)] : local.iter_328.code_ptr :
      local.code_329[0] == "]"
        ? local.iter_328.tape[local.iter_328.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_328.code_ptr)] : local.iter_328.code_ptr
        : local.iter_328.code_ptr)

    steps_taken = 1 + local.iter_328.steps_taken
  }
}

locals {
  code_330 = (try(local.iter_329.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_329.code_ptr, local.iter_329.code_ptr + 2)
    : [null])

  input_330 = (local.code_330[0] == ","
    ? substr(local.input_329, local.code_330[1], -1)
    : local.input_329)

  iter_330 = try(local.iter_329.code_ptr >= length(var.code), true) ? local.iter_329 : {
    output = (local.code_330[0] == "."
      ? "${local.iter_329.output}${join("", [for _ in range(local.code_330[1]) : jsondecode(format("\"\\u%04x\"", local.iter_329.tape[local.iter_329.tape_ptr]))])}"
      : local.iter_329.output)
    
    tape = (
      local.code_330[0] == "+"
        ? [for i, b in local.iter_329.tape : (i == local.iter_329.tape_ptr ? (b + local.code_330[1]) % 256 : b)] :
      local.code_330[0] == "-"
        ? [for i, b in local.iter_329.tape : (i == local.iter_329.tape_ptr ? (b - local.code_330[1] + 256) % 256 : b)] :
      local.code_330[0] == ","
        ? [for i, b in local.iter_329.tape : (i == local.iter_329.tape_ptr ? local.ascii_lookup[substr(local.input_330, 0, 1)] : b)]
        : local.iter_329.tape)

    tape_ptr = (
      local.code_330[0] == "<"
        ? local.iter_329.tape_ptr - local.code_330[1] :
      local.code_330[0] == ">"
        ? local.iter_329.tape_ptr + local.code_330[1]
        : local.iter_329.tape_ptr)

    code_ptr = 2 + (
      local.code_330[0] == "["
        ? local.iter_329.tape[local.iter_329.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_329.code_ptr)] : local.iter_329.code_ptr :
      local.code_330[0] == "]"
        ? local.iter_329.tape[local.iter_329.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_329.code_ptr)] : local.iter_329.code_ptr
        : local.iter_329.code_ptr)

    steps_taken = 1 + local.iter_329.steps_taken
  }
}

locals {
  code_331 = (try(local.iter_330.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_330.code_ptr, local.iter_330.code_ptr + 2)
    : [null])

  input_331 = (local.code_331[0] == ","
    ? substr(local.input_330, local.code_331[1], -1)
    : local.input_330)

  iter_331 = try(local.iter_330.code_ptr >= length(var.code), true) ? local.iter_330 : {
    output = (local.code_331[0] == "."
      ? "${local.iter_330.output}${join("", [for _ in range(local.code_331[1]) : jsondecode(format("\"\\u%04x\"", local.iter_330.tape[local.iter_330.tape_ptr]))])}"
      : local.iter_330.output)
    
    tape = (
      local.code_331[0] == "+"
        ? [for i, b in local.iter_330.tape : (i == local.iter_330.tape_ptr ? (b + local.code_331[1]) % 256 : b)] :
      local.code_331[0] == "-"
        ? [for i, b in local.iter_330.tape : (i == local.iter_330.tape_ptr ? (b - local.code_331[1] + 256) % 256 : b)] :
      local.code_331[0] == ","
        ? [for i, b in local.iter_330.tape : (i == local.iter_330.tape_ptr ? local.ascii_lookup[substr(local.input_331, 0, 1)] : b)]
        : local.iter_330.tape)

    tape_ptr = (
      local.code_331[0] == "<"
        ? local.iter_330.tape_ptr - local.code_331[1] :
      local.code_331[0] == ">"
        ? local.iter_330.tape_ptr + local.code_331[1]
        : local.iter_330.tape_ptr)

    code_ptr = 2 + (
      local.code_331[0] == "["
        ? local.iter_330.tape[local.iter_330.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_330.code_ptr)] : local.iter_330.code_ptr :
      local.code_331[0] == "]"
        ? local.iter_330.tape[local.iter_330.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_330.code_ptr)] : local.iter_330.code_ptr
        : local.iter_330.code_ptr)

    steps_taken = 1 + local.iter_330.steps_taken
  }
}

locals {
  code_332 = (try(local.iter_331.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_331.code_ptr, local.iter_331.code_ptr + 2)
    : [null])

  input_332 = (local.code_332[0] == ","
    ? substr(local.input_331, local.code_332[1], -1)
    : local.input_331)

  iter_332 = try(local.iter_331.code_ptr >= length(var.code), true) ? local.iter_331 : {
    output = (local.code_332[0] == "."
      ? "${local.iter_331.output}${join("", [for _ in range(local.code_332[1]) : jsondecode(format("\"\\u%04x\"", local.iter_331.tape[local.iter_331.tape_ptr]))])}"
      : local.iter_331.output)
    
    tape = (
      local.code_332[0] == "+"
        ? [for i, b in local.iter_331.tape : (i == local.iter_331.tape_ptr ? (b + local.code_332[1]) % 256 : b)] :
      local.code_332[0] == "-"
        ? [for i, b in local.iter_331.tape : (i == local.iter_331.tape_ptr ? (b - local.code_332[1] + 256) % 256 : b)] :
      local.code_332[0] == ","
        ? [for i, b in local.iter_331.tape : (i == local.iter_331.tape_ptr ? local.ascii_lookup[substr(local.input_332, 0, 1)] : b)]
        : local.iter_331.tape)

    tape_ptr = (
      local.code_332[0] == "<"
        ? local.iter_331.tape_ptr - local.code_332[1] :
      local.code_332[0] == ">"
        ? local.iter_331.tape_ptr + local.code_332[1]
        : local.iter_331.tape_ptr)

    code_ptr = 2 + (
      local.code_332[0] == "["
        ? local.iter_331.tape[local.iter_331.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_331.code_ptr)] : local.iter_331.code_ptr :
      local.code_332[0] == "]"
        ? local.iter_331.tape[local.iter_331.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_331.code_ptr)] : local.iter_331.code_ptr
        : local.iter_331.code_ptr)

    steps_taken = 1 + local.iter_331.steps_taken
  }
}

locals {
  code_333 = (try(local.iter_332.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_332.code_ptr, local.iter_332.code_ptr + 2)
    : [null])

  input_333 = (local.code_333[0] == ","
    ? substr(local.input_332, local.code_333[1], -1)
    : local.input_332)

  iter_333 = try(local.iter_332.code_ptr >= length(var.code), true) ? local.iter_332 : {
    output = (local.code_333[0] == "."
      ? "${local.iter_332.output}${join("", [for _ in range(local.code_333[1]) : jsondecode(format("\"\\u%04x\"", local.iter_332.tape[local.iter_332.tape_ptr]))])}"
      : local.iter_332.output)
    
    tape = (
      local.code_333[0] == "+"
        ? [for i, b in local.iter_332.tape : (i == local.iter_332.tape_ptr ? (b + local.code_333[1]) % 256 : b)] :
      local.code_333[0] == "-"
        ? [for i, b in local.iter_332.tape : (i == local.iter_332.tape_ptr ? (b - local.code_333[1] + 256) % 256 : b)] :
      local.code_333[0] == ","
        ? [for i, b in local.iter_332.tape : (i == local.iter_332.tape_ptr ? local.ascii_lookup[substr(local.input_333, 0, 1)] : b)]
        : local.iter_332.tape)

    tape_ptr = (
      local.code_333[0] == "<"
        ? local.iter_332.tape_ptr - local.code_333[1] :
      local.code_333[0] == ">"
        ? local.iter_332.tape_ptr + local.code_333[1]
        : local.iter_332.tape_ptr)

    code_ptr = 2 + (
      local.code_333[0] == "["
        ? local.iter_332.tape[local.iter_332.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_332.code_ptr)] : local.iter_332.code_ptr :
      local.code_333[0] == "]"
        ? local.iter_332.tape[local.iter_332.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_332.code_ptr)] : local.iter_332.code_ptr
        : local.iter_332.code_ptr)

    steps_taken = 1 + local.iter_332.steps_taken
  }
}

locals {
  code_334 = (try(local.iter_333.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_333.code_ptr, local.iter_333.code_ptr + 2)
    : [null])

  input_334 = (local.code_334[0] == ","
    ? substr(local.input_333, local.code_334[1], -1)
    : local.input_333)

  iter_334 = try(local.iter_333.code_ptr >= length(var.code), true) ? local.iter_333 : {
    output = (local.code_334[0] == "."
      ? "${local.iter_333.output}${join("", [for _ in range(local.code_334[1]) : jsondecode(format("\"\\u%04x\"", local.iter_333.tape[local.iter_333.tape_ptr]))])}"
      : local.iter_333.output)
    
    tape = (
      local.code_334[0] == "+"
        ? [for i, b in local.iter_333.tape : (i == local.iter_333.tape_ptr ? (b + local.code_334[1]) % 256 : b)] :
      local.code_334[0] == "-"
        ? [for i, b in local.iter_333.tape : (i == local.iter_333.tape_ptr ? (b - local.code_334[1] + 256) % 256 : b)] :
      local.code_334[0] == ","
        ? [for i, b in local.iter_333.tape : (i == local.iter_333.tape_ptr ? local.ascii_lookup[substr(local.input_334, 0, 1)] : b)]
        : local.iter_333.tape)

    tape_ptr = (
      local.code_334[0] == "<"
        ? local.iter_333.tape_ptr - local.code_334[1] :
      local.code_334[0] == ">"
        ? local.iter_333.tape_ptr + local.code_334[1]
        : local.iter_333.tape_ptr)

    code_ptr = 2 + (
      local.code_334[0] == "["
        ? local.iter_333.tape[local.iter_333.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_333.code_ptr)] : local.iter_333.code_ptr :
      local.code_334[0] == "]"
        ? local.iter_333.tape[local.iter_333.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_333.code_ptr)] : local.iter_333.code_ptr
        : local.iter_333.code_ptr)

    steps_taken = 1 + local.iter_333.steps_taken
  }
}

locals {
  code_335 = (try(local.iter_334.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_334.code_ptr, local.iter_334.code_ptr + 2)
    : [null])

  input_335 = (local.code_335[0] == ","
    ? substr(local.input_334, local.code_335[1], -1)
    : local.input_334)

  iter_335 = try(local.iter_334.code_ptr >= length(var.code), true) ? local.iter_334 : {
    output = (local.code_335[0] == "."
      ? "${local.iter_334.output}${join("", [for _ in range(local.code_335[1]) : jsondecode(format("\"\\u%04x\"", local.iter_334.tape[local.iter_334.tape_ptr]))])}"
      : local.iter_334.output)
    
    tape = (
      local.code_335[0] == "+"
        ? [for i, b in local.iter_334.tape : (i == local.iter_334.tape_ptr ? (b + local.code_335[1]) % 256 : b)] :
      local.code_335[0] == "-"
        ? [for i, b in local.iter_334.tape : (i == local.iter_334.tape_ptr ? (b - local.code_335[1] + 256) % 256 : b)] :
      local.code_335[0] == ","
        ? [for i, b in local.iter_334.tape : (i == local.iter_334.tape_ptr ? local.ascii_lookup[substr(local.input_335, 0, 1)] : b)]
        : local.iter_334.tape)

    tape_ptr = (
      local.code_335[0] == "<"
        ? local.iter_334.tape_ptr - local.code_335[1] :
      local.code_335[0] == ">"
        ? local.iter_334.tape_ptr + local.code_335[1]
        : local.iter_334.tape_ptr)

    code_ptr = 2 + (
      local.code_335[0] == "["
        ? local.iter_334.tape[local.iter_334.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_334.code_ptr)] : local.iter_334.code_ptr :
      local.code_335[0] == "]"
        ? local.iter_334.tape[local.iter_334.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_334.code_ptr)] : local.iter_334.code_ptr
        : local.iter_334.code_ptr)

    steps_taken = 1 + local.iter_334.steps_taken
  }
}

locals {
  code_336 = (try(local.iter_335.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_335.code_ptr, local.iter_335.code_ptr + 2)
    : [null])

  input_336 = (local.code_336[0] == ","
    ? substr(local.input_335, local.code_336[1], -1)
    : local.input_335)

  iter_336 = try(local.iter_335.code_ptr >= length(var.code), true) ? local.iter_335 : {
    output = (local.code_336[0] == "."
      ? "${local.iter_335.output}${join("", [for _ in range(local.code_336[1]) : jsondecode(format("\"\\u%04x\"", local.iter_335.tape[local.iter_335.tape_ptr]))])}"
      : local.iter_335.output)
    
    tape = (
      local.code_336[0] == "+"
        ? [for i, b in local.iter_335.tape : (i == local.iter_335.tape_ptr ? (b + local.code_336[1]) % 256 : b)] :
      local.code_336[0] == "-"
        ? [for i, b in local.iter_335.tape : (i == local.iter_335.tape_ptr ? (b - local.code_336[1] + 256) % 256 : b)] :
      local.code_336[0] == ","
        ? [for i, b in local.iter_335.tape : (i == local.iter_335.tape_ptr ? local.ascii_lookup[substr(local.input_336, 0, 1)] : b)]
        : local.iter_335.tape)

    tape_ptr = (
      local.code_336[0] == "<"
        ? local.iter_335.tape_ptr - local.code_336[1] :
      local.code_336[0] == ">"
        ? local.iter_335.tape_ptr + local.code_336[1]
        : local.iter_335.tape_ptr)

    code_ptr = 2 + (
      local.code_336[0] == "["
        ? local.iter_335.tape[local.iter_335.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_335.code_ptr)] : local.iter_335.code_ptr :
      local.code_336[0] == "]"
        ? local.iter_335.tape[local.iter_335.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_335.code_ptr)] : local.iter_335.code_ptr
        : local.iter_335.code_ptr)

    steps_taken = 1 + local.iter_335.steps_taken
  }
}

locals {
  code_337 = (try(local.iter_336.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_336.code_ptr, local.iter_336.code_ptr + 2)
    : [null])

  input_337 = (local.code_337[0] == ","
    ? substr(local.input_336, local.code_337[1], -1)
    : local.input_336)

  iter_337 = try(local.iter_336.code_ptr >= length(var.code), true) ? local.iter_336 : {
    output = (local.code_337[0] == "."
      ? "${local.iter_336.output}${join("", [for _ in range(local.code_337[1]) : jsondecode(format("\"\\u%04x\"", local.iter_336.tape[local.iter_336.tape_ptr]))])}"
      : local.iter_336.output)
    
    tape = (
      local.code_337[0] == "+"
        ? [for i, b in local.iter_336.tape : (i == local.iter_336.tape_ptr ? (b + local.code_337[1]) % 256 : b)] :
      local.code_337[0] == "-"
        ? [for i, b in local.iter_336.tape : (i == local.iter_336.tape_ptr ? (b - local.code_337[1] + 256) % 256 : b)] :
      local.code_337[0] == ","
        ? [for i, b in local.iter_336.tape : (i == local.iter_336.tape_ptr ? local.ascii_lookup[substr(local.input_337, 0, 1)] : b)]
        : local.iter_336.tape)

    tape_ptr = (
      local.code_337[0] == "<"
        ? local.iter_336.tape_ptr - local.code_337[1] :
      local.code_337[0] == ">"
        ? local.iter_336.tape_ptr + local.code_337[1]
        : local.iter_336.tape_ptr)

    code_ptr = 2 + (
      local.code_337[0] == "["
        ? local.iter_336.tape[local.iter_336.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_336.code_ptr)] : local.iter_336.code_ptr :
      local.code_337[0] == "]"
        ? local.iter_336.tape[local.iter_336.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_336.code_ptr)] : local.iter_336.code_ptr
        : local.iter_336.code_ptr)

    steps_taken = 1 + local.iter_336.steps_taken
  }
}

locals {
  code_338 = (try(local.iter_337.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_337.code_ptr, local.iter_337.code_ptr + 2)
    : [null])

  input_338 = (local.code_338[0] == ","
    ? substr(local.input_337, local.code_338[1], -1)
    : local.input_337)

  iter_338 = try(local.iter_337.code_ptr >= length(var.code), true) ? local.iter_337 : {
    output = (local.code_338[0] == "."
      ? "${local.iter_337.output}${join("", [for _ in range(local.code_338[1]) : jsondecode(format("\"\\u%04x\"", local.iter_337.tape[local.iter_337.tape_ptr]))])}"
      : local.iter_337.output)
    
    tape = (
      local.code_338[0] == "+"
        ? [for i, b in local.iter_337.tape : (i == local.iter_337.tape_ptr ? (b + local.code_338[1]) % 256 : b)] :
      local.code_338[0] == "-"
        ? [for i, b in local.iter_337.tape : (i == local.iter_337.tape_ptr ? (b - local.code_338[1] + 256) % 256 : b)] :
      local.code_338[0] == ","
        ? [for i, b in local.iter_337.tape : (i == local.iter_337.tape_ptr ? local.ascii_lookup[substr(local.input_338, 0, 1)] : b)]
        : local.iter_337.tape)

    tape_ptr = (
      local.code_338[0] == "<"
        ? local.iter_337.tape_ptr - local.code_338[1] :
      local.code_338[0] == ">"
        ? local.iter_337.tape_ptr + local.code_338[1]
        : local.iter_337.tape_ptr)

    code_ptr = 2 + (
      local.code_338[0] == "["
        ? local.iter_337.tape[local.iter_337.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_337.code_ptr)] : local.iter_337.code_ptr :
      local.code_338[0] == "]"
        ? local.iter_337.tape[local.iter_337.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_337.code_ptr)] : local.iter_337.code_ptr
        : local.iter_337.code_ptr)

    steps_taken = 1 + local.iter_337.steps_taken
  }
}

locals {
  code_339 = (try(local.iter_338.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_338.code_ptr, local.iter_338.code_ptr + 2)
    : [null])

  input_339 = (local.code_339[0] == ","
    ? substr(local.input_338, local.code_339[1], -1)
    : local.input_338)

  iter_339 = try(local.iter_338.code_ptr >= length(var.code), true) ? local.iter_338 : {
    output = (local.code_339[0] == "."
      ? "${local.iter_338.output}${join("", [for _ in range(local.code_339[1]) : jsondecode(format("\"\\u%04x\"", local.iter_338.tape[local.iter_338.tape_ptr]))])}"
      : local.iter_338.output)
    
    tape = (
      local.code_339[0] == "+"
        ? [for i, b in local.iter_338.tape : (i == local.iter_338.tape_ptr ? (b + local.code_339[1]) % 256 : b)] :
      local.code_339[0] == "-"
        ? [for i, b in local.iter_338.tape : (i == local.iter_338.tape_ptr ? (b - local.code_339[1] + 256) % 256 : b)] :
      local.code_339[0] == ","
        ? [for i, b in local.iter_338.tape : (i == local.iter_338.tape_ptr ? local.ascii_lookup[substr(local.input_339, 0, 1)] : b)]
        : local.iter_338.tape)

    tape_ptr = (
      local.code_339[0] == "<"
        ? local.iter_338.tape_ptr - local.code_339[1] :
      local.code_339[0] == ">"
        ? local.iter_338.tape_ptr + local.code_339[1]
        : local.iter_338.tape_ptr)

    code_ptr = 2 + (
      local.code_339[0] == "["
        ? local.iter_338.tape[local.iter_338.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_338.code_ptr)] : local.iter_338.code_ptr :
      local.code_339[0] == "]"
        ? local.iter_338.tape[local.iter_338.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_338.code_ptr)] : local.iter_338.code_ptr
        : local.iter_338.code_ptr)

    steps_taken = 1 + local.iter_338.steps_taken
  }
}

locals {
  code_340 = (try(local.iter_339.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_339.code_ptr, local.iter_339.code_ptr + 2)
    : [null])

  input_340 = (local.code_340[0] == ","
    ? substr(local.input_339, local.code_340[1], -1)
    : local.input_339)

  iter_340 = try(local.iter_339.code_ptr >= length(var.code), true) ? local.iter_339 : {
    output = (local.code_340[0] == "."
      ? "${local.iter_339.output}${join("", [for _ in range(local.code_340[1]) : jsondecode(format("\"\\u%04x\"", local.iter_339.tape[local.iter_339.tape_ptr]))])}"
      : local.iter_339.output)
    
    tape = (
      local.code_340[0] == "+"
        ? [for i, b in local.iter_339.tape : (i == local.iter_339.tape_ptr ? (b + local.code_340[1]) % 256 : b)] :
      local.code_340[0] == "-"
        ? [for i, b in local.iter_339.tape : (i == local.iter_339.tape_ptr ? (b - local.code_340[1] + 256) % 256 : b)] :
      local.code_340[0] == ","
        ? [for i, b in local.iter_339.tape : (i == local.iter_339.tape_ptr ? local.ascii_lookup[substr(local.input_340, 0, 1)] : b)]
        : local.iter_339.tape)

    tape_ptr = (
      local.code_340[0] == "<"
        ? local.iter_339.tape_ptr - local.code_340[1] :
      local.code_340[0] == ">"
        ? local.iter_339.tape_ptr + local.code_340[1]
        : local.iter_339.tape_ptr)

    code_ptr = 2 + (
      local.code_340[0] == "["
        ? local.iter_339.tape[local.iter_339.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_339.code_ptr)] : local.iter_339.code_ptr :
      local.code_340[0] == "]"
        ? local.iter_339.tape[local.iter_339.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_339.code_ptr)] : local.iter_339.code_ptr
        : local.iter_339.code_ptr)

    steps_taken = 1 + local.iter_339.steps_taken
  }
}

locals {
  code_341 = (try(local.iter_340.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_340.code_ptr, local.iter_340.code_ptr + 2)
    : [null])

  input_341 = (local.code_341[0] == ","
    ? substr(local.input_340, local.code_341[1], -1)
    : local.input_340)

  iter_341 = try(local.iter_340.code_ptr >= length(var.code), true) ? local.iter_340 : {
    output = (local.code_341[0] == "."
      ? "${local.iter_340.output}${join("", [for _ in range(local.code_341[1]) : jsondecode(format("\"\\u%04x\"", local.iter_340.tape[local.iter_340.tape_ptr]))])}"
      : local.iter_340.output)
    
    tape = (
      local.code_341[0] == "+"
        ? [for i, b in local.iter_340.tape : (i == local.iter_340.tape_ptr ? (b + local.code_341[1]) % 256 : b)] :
      local.code_341[0] == "-"
        ? [for i, b in local.iter_340.tape : (i == local.iter_340.tape_ptr ? (b - local.code_341[1] + 256) % 256 : b)] :
      local.code_341[0] == ","
        ? [for i, b in local.iter_340.tape : (i == local.iter_340.tape_ptr ? local.ascii_lookup[substr(local.input_341, 0, 1)] : b)]
        : local.iter_340.tape)

    tape_ptr = (
      local.code_341[0] == "<"
        ? local.iter_340.tape_ptr - local.code_341[1] :
      local.code_341[0] == ">"
        ? local.iter_340.tape_ptr + local.code_341[1]
        : local.iter_340.tape_ptr)

    code_ptr = 2 + (
      local.code_341[0] == "["
        ? local.iter_340.tape[local.iter_340.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_340.code_ptr)] : local.iter_340.code_ptr :
      local.code_341[0] == "]"
        ? local.iter_340.tape[local.iter_340.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_340.code_ptr)] : local.iter_340.code_ptr
        : local.iter_340.code_ptr)

    steps_taken = 1 + local.iter_340.steps_taken
  }
}

locals {
  code_342 = (try(local.iter_341.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_341.code_ptr, local.iter_341.code_ptr + 2)
    : [null])

  input_342 = (local.code_342[0] == ","
    ? substr(local.input_341, local.code_342[1], -1)
    : local.input_341)

  iter_342 = try(local.iter_341.code_ptr >= length(var.code), true) ? local.iter_341 : {
    output = (local.code_342[0] == "."
      ? "${local.iter_341.output}${join("", [for _ in range(local.code_342[1]) : jsondecode(format("\"\\u%04x\"", local.iter_341.tape[local.iter_341.tape_ptr]))])}"
      : local.iter_341.output)
    
    tape = (
      local.code_342[0] == "+"
        ? [for i, b in local.iter_341.tape : (i == local.iter_341.tape_ptr ? (b + local.code_342[1]) % 256 : b)] :
      local.code_342[0] == "-"
        ? [for i, b in local.iter_341.tape : (i == local.iter_341.tape_ptr ? (b - local.code_342[1] + 256) % 256 : b)] :
      local.code_342[0] == ","
        ? [for i, b in local.iter_341.tape : (i == local.iter_341.tape_ptr ? local.ascii_lookup[substr(local.input_342, 0, 1)] : b)]
        : local.iter_341.tape)

    tape_ptr = (
      local.code_342[0] == "<"
        ? local.iter_341.tape_ptr - local.code_342[1] :
      local.code_342[0] == ">"
        ? local.iter_341.tape_ptr + local.code_342[1]
        : local.iter_341.tape_ptr)

    code_ptr = 2 + (
      local.code_342[0] == "["
        ? local.iter_341.tape[local.iter_341.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_341.code_ptr)] : local.iter_341.code_ptr :
      local.code_342[0] == "]"
        ? local.iter_341.tape[local.iter_341.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_341.code_ptr)] : local.iter_341.code_ptr
        : local.iter_341.code_ptr)

    steps_taken = 1 + local.iter_341.steps_taken
  }
}

locals {
  code_343 = (try(local.iter_342.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_342.code_ptr, local.iter_342.code_ptr + 2)
    : [null])

  input_343 = (local.code_343[0] == ","
    ? substr(local.input_342, local.code_343[1], -1)
    : local.input_342)

  iter_343 = try(local.iter_342.code_ptr >= length(var.code), true) ? local.iter_342 : {
    output = (local.code_343[0] == "."
      ? "${local.iter_342.output}${join("", [for _ in range(local.code_343[1]) : jsondecode(format("\"\\u%04x\"", local.iter_342.tape[local.iter_342.tape_ptr]))])}"
      : local.iter_342.output)
    
    tape = (
      local.code_343[0] == "+"
        ? [for i, b in local.iter_342.tape : (i == local.iter_342.tape_ptr ? (b + local.code_343[1]) % 256 : b)] :
      local.code_343[0] == "-"
        ? [for i, b in local.iter_342.tape : (i == local.iter_342.tape_ptr ? (b - local.code_343[1] + 256) % 256 : b)] :
      local.code_343[0] == ","
        ? [for i, b in local.iter_342.tape : (i == local.iter_342.tape_ptr ? local.ascii_lookup[substr(local.input_343, 0, 1)] : b)]
        : local.iter_342.tape)

    tape_ptr = (
      local.code_343[0] == "<"
        ? local.iter_342.tape_ptr - local.code_343[1] :
      local.code_343[0] == ">"
        ? local.iter_342.tape_ptr + local.code_343[1]
        : local.iter_342.tape_ptr)

    code_ptr = 2 + (
      local.code_343[0] == "["
        ? local.iter_342.tape[local.iter_342.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_342.code_ptr)] : local.iter_342.code_ptr :
      local.code_343[0] == "]"
        ? local.iter_342.tape[local.iter_342.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_342.code_ptr)] : local.iter_342.code_ptr
        : local.iter_342.code_ptr)

    steps_taken = 1 + local.iter_342.steps_taken
  }
}

locals {
  code_344 = (try(local.iter_343.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_343.code_ptr, local.iter_343.code_ptr + 2)
    : [null])

  input_344 = (local.code_344[0] == ","
    ? substr(local.input_343, local.code_344[1], -1)
    : local.input_343)

  iter_344 = try(local.iter_343.code_ptr >= length(var.code), true) ? local.iter_343 : {
    output = (local.code_344[0] == "."
      ? "${local.iter_343.output}${join("", [for _ in range(local.code_344[1]) : jsondecode(format("\"\\u%04x\"", local.iter_343.tape[local.iter_343.tape_ptr]))])}"
      : local.iter_343.output)
    
    tape = (
      local.code_344[0] == "+"
        ? [for i, b in local.iter_343.tape : (i == local.iter_343.tape_ptr ? (b + local.code_344[1]) % 256 : b)] :
      local.code_344[0] == "-"
        ? [for i, b in local.iter_343.tape : (i == local.iter_343.tape_ptr ? (b - local.code_344[1] + 256) % 256 : b)] :
      local.code_344[0] == ","
        ? [for i, b in local.iter_343.tape : (i == local.iter_343.tape_ptr ? local.ascii_lookup[substr(local.input_344, 0, 1)] : b)]
        : local.iter_343.tape)

    tape_ptr = (
      local.code_344[0] == "<"
        ? local.iter_343.tape_ptr - local.code_344[1] :
      local.code_344[0] == ">"
        ? local.iter_343.tape_ptr + local.code_344[1]
        : local.iter_343.tape_ptr)

    code_ptr = 2 + (
      local.code_344[0] == "["
        ? local.iter_343.tape[local.iter_343.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_343.code_ptr)] : local.iter_343.code_ptr :
      local.code_344[0] == "]"
        ? local.iter_343.tape[local.iter_343.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_343.code_ptr)] : local.iter_343.code_ptr
        : local.iter_343.code_ptr)

    steps_taken = 1 + local.iter_343.steps_taken
  }
}

locals {
  code_345 = (try(local.iter_344.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_344.code_ptr, local.iter_344.code_ptr + 2)
    : [null])

  input_345 = (local.code_345[0] == ","
    ? substr(local.input_344, local.code_345[1], -1)
    : local.input_344)

  iter_345 = try(local.iter_344.code_ptr >= length(var.code), true) ? local.iter_344 : {
    output = (local.code_345[0] == "."
      ? "${local.iter_344.output}${join("", [for _ in range(local.code_345[1]) : jsondecode(format("\"\\u%04x\"", local.iter_344.tape[local.iter_344.tape_ptr]))])}"
      : local.iter_344.output)
    
    tape = (
      local.code_345[0] == "+"
        ? [for i, b in local.iter_344.tape : (i == local.iter_344.tape_ptr ? (b + local.code_345[1]) % 256 : b)] :
      local.code_345[0] == "-"
        ? [for i, b in local.iter_344.tape : (i == local.iter_344.tape_ptr ? (b - local.code_345[1] + 256) % 256 : b)] :
      local.code_345[0] == ","
        ? [for i, b in local.iter_344.tape : (i == local.iter_344.tape_ptr ? local.ascii_lookup[substr(local.input_345, 0, 1)] : b)]
        : local.iter_344.tape)

    tape_ptr = (
      local.code_345[0] == "<"
        ? local.iter_344.tape_ptr - local.code_345[1] :
      local.code_345[0] == ">"
        ? local.iter_344.tape_ptr + local.code_345[1]
        : local.iter_344.tape_ptr)

    code_ptr = 2 + (
      local.code_345[0] == "["
        ? local.iter_344.tape[local.iter_344.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_344.code_ptr)] : local.iter_344.code_ptr :
      local.code_345[0] == "]"
        ? local.iter_344.tape[local.iter_344.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_344.code_ptr)] : local.iter_344.code_ptr
        : local.iter_344.code_ptr)

    steps_taken = 1 + local.iter_344.steps_taken
  }
}

locals {
  code_346 = (try(local.iter_345.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_345.code_ptr, local.iter_345.code_ptr + 2)
    : [null])

  input_346 = (local.code_346[0] == ","
    ? substr(local.input_345, local.code_346[1], -1)
    : local.input_345)

  iter_346 = try(local.iter_345.code_ptr >= length(var.code), true) ? local.iter_345 : {
    output = (local.code_346[0] == "."
      ? "${local.iter_345.output}${join("", [for _ in range(local.code_346[1]) : jsondecode(format("\"\\u%04x\"", local.iter_345.tape[local.iter_345.tape_ptr]))])}"
      : local.iter_345.output)
    
    tape = (
      local.code_346[0] == "+"
        ? [for i, b in local.iter_345.tape : (i == local.iter_345.tape_ptr ? (b + local.code_346[1]) % 256 : b)] :
      local.code_346[0] == "-"
        ? [for i, b in local.iter_345.tape : (i == local.iter_345.tape_ptr ? (b - local.code_346[1] + 256) % 256 : b)] :
      local.code_346[0] == ","
        ? [for i, b in local.iter_345.tape : (i == local.iter_345.tape_ptr ? local.ascii_lookup[substr(local.input_346, 0, 1)] : b)]
        : local.iter_345.tape)

    tape_ptr = (
      local.code_346[0] == "<"
        ? local.iter_345.tape_ptr - local.code_346[1] :
      local.code_346[0] == ">"
        ? local.iter_345.tape_ptr + local.code_346[1]
        : local.iter_345.tape_ptr)

    code_ptr = 2 + (
      local.code_346[0] == "["
        ? local.iter_345.tape[local.iter_345.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_345.code_ptr)] : local.iter_345.code_ptr :
      local.code_346[0] == "]"
        ? local.iter_345.tape[local.iter_345.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_345.code_ptr)] : local.iter_345.code_ptr
        : local.iter_345.code_ptr)

    steps_taken = 1 + local.iter_345.steps_taken
  }
}

locals {
  code_347 = (try(local.iter_346.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_346.code_ptr, local.iter_346.code_ptr + 2)
    : [null])

  input_347 = (local.code_347[0] == ","
    ? substr(local.input_346, local.code_347[1], -1)
    : local.input_346)

  iter_347 = try(local.iter_346.code_ptr >= length(var.code), true) ? local.iter_346 : {
    output = (local.code_347[0] == "."
      ? "${local.iter_346.output}${join("", [for _ in range(local.code_347[1]) : jsondecode(format("\"\\u%04x\"", local.iter_346.tape[local.iter_346.tape_ptr]))])}"
      : local.iter_346.output)
    
    tape = (
      local.code_347[0] == "+"
        ? [for i, b in local.iter_346.tape : (i == local.iter_346.tape_ptr ? (b + local.code_347[1]) % 256 : b)] :
      local.code_347[0] == "-"
        ? [for i, b in local.iter_346.tape : (i == local.iter_346.tape_ptr ? (b - local.code_347[1] + 256) % 256 : b)] :
      local.code_347[0] == ","
        ? [for i, b in local.iter_346.tape : (i == local.iter_346.tape_ptr ? local.ascii_lookup[substr(local.input_347, 0, 1)] : b)]
        : local.iter_346.tape)

    tape_ptr = (
      local.code_347[0] == "<"
        ? local.iter_346.tape_ptr - local.code_347[1] :
      local.code_347[0] == ">"
        ? local.iter_346.tape_ptr + local.code_347[1]
        : local.iter_346.tape_ptr)

    code_ptr = 2 + (
      local.code_347[0] == "["
        ? local.iter_346.tape[local.iter_346.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_346.code_ptr)] : local.iter_346.code_ptr :
      local.code_347[0] == "]"
        ? local.iter_346.tape[local.iter_346.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_346.code_ptr)] : local.iter_346.code_ptr
        : local.iter_346.code_ptr)

    steps_taken = 1 + local.iter_346.steps_taken
  }
}

locals {
  code_348 = (try(local.iter_347.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_347.code_ptr, local.iter_347.code_ptr + 2)
    : [null])

  input_348 = (local.code_348[0] == ","
    ? substr(local.input_347, local.code_348[1], -1)
    : local.input_347)

  iter_348 = try(local.iter_347.code_ptr >= length(var.code), true) ? local.iter_347 : {
    output = (local.code_348[0] == "."
      ? "${local.iter_347.output}${join("", [for _ in range(local.code_348[1]) : jsondecode(format("\"\\u%04x\"", local.iter_347.tape[local.iter_347.tape_ptr]))])}"
      : local.iter_347.output)
    
    tape = (
      local.code_348[0] == "+"
        ? [for i, b in local.iter_347.tape : (i == local.iter_347.tape_ptr ? (b + local.code_348[1]) % 256 : b)] :
      local.code_348[0] == "-"
        ? [for i, b in local.iter_347.tape : (i == local.iter_347.tape_ptr ? (b - local.code_348[1] + 256) % 256 : b)] :
      local.code_348[0] == ","
        ? [for i, b in local.iter_347.tape : (i == local.iter_347.tape_ptr ? local.ascii_lookup[substr(local.input_348, 0, 1)] : b)]
        : local.iter_347.tape)

    tape_ptr = (
      local.code_348[0] == "<"
        ? local.iter_347.tape_ptr - local.code_348[1] :
      local.code_348[0] == ">"
        ? local.iter_347.tape_ptr + local.code_348[1]
        : local.iter_347.tape_ptr)

    code_ptr = 2 + (
      local.code_348[0] == "["
        ? local.iter_347.tape[local.iter_347.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_347.code_ptr)] : local.iter_347.code_ptr :
      local.code_348[0] == "]"
        ? local.iter_347.tape[local.iter_347.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_347.code_ptr)] : local.iter_347.code_ptr
        : local.iter_347.code_ptr)

    steps_taken = 1 + local.iter_347.steps_taken
  }
}

locals {
  code_349 = (try(local.iter_348.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_348.code_ptr, local.iter_348.code_ptr + 2)
    : [null])

  input_349 = (local.code_349[0] == ","
    ? substr(local.input_348, local.code_349[1], -1)
    : local.input_348)

  iter_349 = try(local.iter_348.code_ptr >= length(var.code), true) ? local.iter_348 : {
    output = (local.code_349[0] == "."
      ? "${local.iter_348.output}${join("", [for _ in range(local.code_349[1]) : jsondecode(format("\"\\u%04x\"", local.iter_348.tape[local.iter_348.tape_ptr]))])}"
      : local.iter_348.output)
    
    tape = (
      local.code_349[0] == "+"
        ? [for i, b in local.iter_348.tape : (i == local.iter_348.tape_ptr ? (b + local.code_349[1]) % 256 : b)] :
      local.code_349[0] == "-"
        ? [for i, b in local.iter_348.tape : (i == local.iter_348.tape_ptr ? (b - local.code_349[1] + 256) % 256 : b)] :
      local.code_349[0] == ","
        ? [for i, b in local.iter_348.tape : (i == local.iter_348.tape_ptr ? local.ascii_lookup[substr(local.input_349, 0, 1)] : b)]
        : local.iter_348.tape)

    tape_ptr = (
      local.code_349[0] == "<"
        ? local.iter_348.tape_ptr - local.code_349[1] :
      local.code_349[0] == ">"
        ? local.iter_348.tape_ptr + local.code_349[1]
        : local.iter_348.tape_ptr)

    code_ptr = 2 + (
      local.code_349[0] == "["
        ? local.iter_348.tape[local.iter_348.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_348.code_ptr)] : local.iter_348.code_ptr :
      local.code_349[0] == "]"
        ? local.iter_348.tape[local.iter_348.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_348.code_ptr)] : local.iter_348.code_ptr
        : local.iter_348.code_ptr)

    steps_taken = 1 + local.iter_348.steps_taken
  }
}

locals {
  code_350 = (try(local.iter_349.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_349.code_ptr, local.iter_349.code_ptr + 2)
    : [null])

  input_350 = (local.code_350[0] == ","
    ? substr(local.input_349, local.code_350[1], -1)
    : local.input_349)

  iter_350 = try(local.iter_349.code_ptr >= length(var.code), true) ? local.iter_349 : {
    output = (local.code_350[0] == "."
      ? "${local.iter_349.output}${join("", [for _ in range(local.code_350[1]) : jsondecode(format("\"\\u%04x\"", local.iter_349.tape[local.iter_349.tape_ptr]))])}"
      : local.iter_349.output)
    
    tape = (
      local.code_350[0] == "+"
        ? [for i, b in local.iter_349.tape : (i == local.iter_349.tape_ptr ? (b + local.code_350[1]) % 256 : b)] :
      local.code_350[0] == "-"
        ? [for i, b in local.iter_349.tape : (i == local.iter_349.tape_ptr ? (b - local.code_350[1] + 256) % 256 : b)] :
      local.code_350[0] == ","
        ? [for i, b in local.iter_349.tape : (i == local.iter_349.tape_ptr ? local.ascii_lookup[substr(local.input_350, 0, 1)] : b)]
        : local.iter_349.tape)

    tape_ptr = (
      local.code_350[0] == "<"
        ? local.iter_349.tape_ptr - local.code_350[1] :
      local.code_350[0] == ">"
        ? local.iter_349.tape_ptr + local.code_350[1]
        : local.iter_349.tape_ptr)

    code_ptr = 2 + (
      local.code_350[0] == "["
        ? local.iter_349.tape[local.iter_349.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_349.code_ptr)] : local.iter_349.code_ptr :
      local.code_350[0] == "]"
        ? local.iter_349.tape[local.iter_349.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_349.code_ptr)] : local.iter_349.code_ptr
        : local.iter_349.code_ptr)

    steps_taken = 1 + local.iter_349.steps_taken
  }
}

locals {
  code_351 = (try(local.iter_350.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_350.code_ptr, local.iter_350.code_ptr + 2)
    : [null])

  input_351 = (local.code_351[0] == ","
    ? substr(local.input_350, local.code_351[1], -1)
    : local.input_350)

  iter_351 = try(local.iter_350.code_ptr >= length(var.code), true) ? local.iter_350 : {
    output = (local.code_351[0] == "."
      ? "${local.iter_350.output}${join("", [for _ in range(local.code_351[1]) : jsondecode(format("\"\\u%04x\"", local.iter_350.tape[local.iter_350.tape_ptr]))])}"
      : local.iter_350.output)
    
    tape = (
      local.code_351[0] == "+"
        ? [for i, b in local.iter_350.tape : (i == local.iter_350.tape_ptr ? (b + local.code_351[1]) % 256 : b)] :
      local.code_351[0] == "-"
        ? [for i, b in local.iter_350.tape : (i == local.iter_350.tape_ptr ? (b - local.code_351[1] + 256) % 256 : b)] :
      local.code_351[0] == ","
        ? [for i, b in local.iter_350.tape : (i == local.iter_350.tape_ptr ? local.ascii_lookup[substr(local.input_351, 0, 1)] : b)]
        : local.iter_350.tape)

    tape_ptr = (
      local.code_351[0] == "<"
        ? local.iter_350.tape_ptr - local.code_351[1] :
      local.code_351[0] == ">"
        ? local.iter_350.tape_ptr + local.code_351[1]
        : local.iter_350.tape_ptr)

    code_ptr = 2 + (
      local.code_351[0] == "["
        ? local.iter_350.tape[local.iter_350.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_350.code_ptr)] : local.iter_350.code_ptr :
      local.code_351[0] == "]"
        ? local.iter_350.tape[local.iter_350.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_350.code_ptr)] : local.iter_350.code_ptr
        : local.iter_350.code_ptr)

    steps_taken = 1 + local.iter_350.steps_taken
  }
}

locals {
  code_352 = (try(local.iter_351.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_351.code_ptr, local.iter_351.code_ptr + 2)
    : [null])

  input_352 = (local.code_352[0] == ","
    ? substr(local.input_351, local.code_352[1], -1)
    : local.input_351)

  iter_352 = try(local.iter_351.code_ptr >= length(var.code), true) ? local.iter_351 : {
    output = (local.code_352[0] == "."
      ? "${local.iter_351.output}${join("", [for _ in range(local.code_352[1]) : jsondecode(format("\"\\u%04x\"", local.iter_351.tape[local.iter_351.tape_ptr]))])}"
      : local.iter_351.output)
    
    tape = (
      local.code_352[0] == "+"
        ? [for i, b in local.iter_351.tape : (i == local.iter_351.tape_ptr ? (b + local.code_352[1]) % 256 : b)] :
      local.code_352[0] == "-"
        ? [for i, b in local.iter_351.tape : (i == local.iter_351.tape_ptr ? (b - local.code_352[1] + 256) % 256 : b)] :
      local.code_352[0] == ","
        ? [for i, b in local.iter_351.tape : (i == local.iter_351.tape_ptr ? local.ascii_lookup[substr(local.input_352, 0, 1)] : b)]
        : local.iter_351.tape)

    tape_ptr = (
      local.code_352[0] == "<"
        ? local.iter_351.tape_ptr - local.code_352[1] :
      local.code_352[0] == ">"
        ? local.iter_351.tape_ptr + local.code_352[1]
        : local.iter_351.tape_ptr)

    code_ptr = 2 + (
      local.code_352[0] == "["
        ? local.iter_351.tape[local.iter_351.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_351.code_ptr)] : local.iter_351.code_ptr :
      local.code_352[0] == "]"
        ? local.iter_351.tape[local.iter_351.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_351.code_ptr)] : local.iter_351.code_ptr
        : local.iter_351.code_ptr)

    steps_taken = 1 + local.iter_351.steps_taken
  }
}

locals {
  code_353 = (try(local.iter_352.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_352.code_ptr, local.iter_352.code_ptr + 2)
    : [null])

  input_353 = (local.code_353[0] == ","
    ? substr(local.input_352, local.code_353[1], -1)
    : local.input_352)

  iter_353 = try(local.iter_352.code_ptr >= length(var.code), true) ? local.iter_352 : {
    output = (local.code_353[0] == "."
      ? "${local.iter_352.output}${join("", [for _ in range(local.code_353[1]) : jsondecode(format("\"\\u%04x\"", local.iter_352.tape[local.iter_352.tape_ptr]))])}"
      : local.iter_352.output)
    
    tape = (
      local.code_353[0] == "+"
        ? [for i, b in local.iter_352.tape : (i == local.iter_352.tape_ptr ? (b + local.code_353[1]) % 256 : b)] :
      local.code_353[0] == "-"
        ? [for i, b in local.iter_352.tape : (i == local.iter_352.tape_ptr ? (b - local.code_353[1] + 256) % 256 : b)] :
      local.code_353[0] == ","
        ? [for i, b in local.iter_352.tape : (i == local.iter_352.tape_ptr ? local.ascii_lookup[substr(local.input_353, 0, 1)] : b)]
        : local.iter_352.tape)

    tape_ptr = (
      local.code_353[0] == "<"
        ? local.iter_352.tape_ptr - local.code_353[1] :
      local.code_353[0] == ">"
        ? local.iter_352.tape_ptr + local.code_353[1]
        : local.iter_352.tape_ptr)

    code_ptr = 2 + (
      local.code_353[0] == "["
        ? local.iter_352.tape[local.iter_352.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_352.code_ptr)] : local.iter_352.code_ptr :
      local.code_353[0] == "]"
        ? local.iter_352.tape[local.iter_352.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_352.code_ptr)] : local.iter_352.code_ptr
        : local.iter_352.code_ptr)

    steps_taken = 1 + local.iter_352.steps_taken
  }
}

locals {
  code_354 = (try(local.iter_353.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_353.code_ptr, local.iter_353.code_ptr + 2)
    : [null])

  input_354 = (local.code_354[0] == ","
    ? substr(local.input_353, local.code_354[1], -1)
    : local.input_353)

  iter_354 = try(local.iter_353.code_ptr >= length(var.code), true) ? local.iter_353 : {
    output = (local.code_354[0] == "."
      ? "${local.iter_353.output}${join("", [for _ in range(local.code_354[1]) : jsondecode(format("\"\\u%04x\"", local.iter_353.tape[local.iter_353.tape_ptr]))])}"
      : local.iter_353.output)
    
    tape = (
      local.code_354[0] == "+"
        ? [for i, b in local.iter_353.tape : (i == local.iter_353.tape_ptr ? (b + local.code_354[1]) % 256 : b)] :
      local.code_354[0] == "-"
        ? [for i, b in local.iter_353.tape : (i == local.iter_353.tape_ptr ? (b - local.code_354[1] + 256) % 256 : b)] :
      local.code_354[0] == ","
        ? [for i, b in local.iter_353.tape : (i == local.iter_353.tape_ptr ? local.ascii_lookup[substr(local.input_354, 0, 1)] : b)]
        : local.iter_353.tape)

    tape_ptr = (
      local.code_354[0] == "<"
        ? local.iter_353.tape_ptr - local.code_354[1] :
      local.code_354[0] == ">"
        ? local.iter_353.tape_ptr + local.code_354[1]
        : local.iter_353.tape_ptr)

    code_ptr = 2 + (
      local.code_354[0] == "["
        ? local.iter_353.tape[local.iter_353.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_353.code_ptr)] : local.iter_353.code_ptr :
      local.code_354[0] == "]"
        ? local.iter_353.tape[local.iter_353.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_353.code_ptr)] : local.iter_353.code_ptr
        : local.iter_353.code_ptr)

    steps_taken = 1 + local.iter_353.steps_taken
  }
}

locals {
  code_355 = (try(local.iter_354.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_354.code_ptr, local.iter_354.code_ptr + 2)
    : [null])

  input_355 = (local.code_355[0] == ","
    ? substr(local.input_354, local.code_355[1], -1)
    : local.input_354)

  iter_355 = try(local.iter_354.code_ptr >= length(var.code), true) ? local.iter_354 : {
    output = (local.code_355[0] == "."
      ? "${local.iter_354.output}${join("", [for _ in range(local.code_355[1]) : jsondecode(format("\"\\u%04x\"", local.iter_354.tape[local.iter_354.tape_ptr]))])}"
      : local.iter_354.output)
    
    tape = (
      local.code_355[0] == "+"
        ? [for i, b in local.iter_354.tape : (i == local.iter_354.tape_ptr ? (b + local.code_355[1]) % 256 : b)] :
      local.code_355[0] == "-"
        ? [for i, b in local.iter_354.tape : (i == local.iter_354.tape_ptr ? (b - local.code_355[1] + 256) % 256 : b)] :
      local.code_355[0] == ","
        ? [for i, b in local.iter_354.tape : (i == local.iter_354.tape_ptr ? local.ascii_lookup[substr(local.input_355, 0, 1)] : b)]
        : local.iter_354.tape)

    tape_ptr = (
      local.code_355[0] == "<"
        ? local.iter_354.tape_ptr - local.code_355[1] :
      local.code_355[0] == ">"
        ? local.iter_354.tape_ptr + local.code_355[1]
        : local.iter_354.tape_ptr)

    code_ptr = 2 + (
      local.code_355[0] == "["
        ? local.iter_354.tape[local.iter_354.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_354.code_ptr)] : local.iter_354.code_ptr :
      local.code_355[0] == "]"
        ? local.iter_354.tape[local.iter_354.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_354.code_ptr)] : local.iter_354.code_ptr
        : local.iter_354.code_ptr)

    steps_taken = 1 + local.iter_354.steps_taken
  }
}

locals {
  code_356 = (try(local.iter_355.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_355.code_ptr, local.iter_355.code_ptr + 2)
    : [null])

  input_356 = (local.code_356[0] == ","
    ? substr(local.input_355, local.code_356[1], -1)
    : local.input_355)

  iter_356 = try(local.iter_355.code_ptr >= length(var.code), true) ? local.iter_355 : {
    output = (local.code_356[0] == "."
      ? "${local.iter_355.output}${join("", [for _ in range(local.code_356[1]) : jsondecode(format("\"\\u%04x\"", local.iter_355.tape[local.iter_355.tape_ptr]))])}"
      : local.iter_355.output)
    
    tape = (
      local.code_356[0] == "+"
        ? [for i, b in local.iter_355.tape : (i == local.iter_355.tape_ptr ? (b + local.code_356[1]) % 256 : b)] :
      local.code_356[0] == "-"
        ? [for i, b in local.iter_355.tape : (i == local.iter_355.tape_ptr ? (b - local.code_356[1] + 256) % 256 : b)] :
      local.code_356[0] == ","
        ? [for i, b in local.iter_355.tape : (i == local.iter_355.tape_ptr ? local.ascii_lookup[substr(local.input_356, 0, 1)] : b)]
        : local.iter_355.tape)

    tape_ptr = (
      local.code_356[0] == "<"
        ? local.iter_355.tape_ptr - local.code_356[1] :
      local.code_356[0] == ">"
        ? local.iter_355.tape_ptr + local.code_356[1]
        : local.iter_355.tape_ptr)

    code_ptr = 2 + (
      local.code_356[0] == "["
        ? local.iter_355.tape[local.iter_355.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_355.code_ptr)] : local.iter_355.code_ptr :
      local.code_356[0] == "]"
        ? local.iter_355.tape[local.iter_355.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_355.code_ptr)] : local.iter_355.code_ptr
        : local.iter_355.code_ptr)

    steps_taken = 1 + local.iter_355.steps_taken
  }
}

locals {
  code_357 = (try(local.iter_356.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_356.code_ptr, local.iter_356.code_ptr + 2)
    : [null])

  input_357 = (local.code_357[0] == ","
    ? substr(local.input_356, local.code_357[1], -1)
    : local.input_356)

  iter_357 = try(local.iter_356.code_ptr >= length(var.code), true) ? local.iter_356 : {
    output = (local.code_357[0] == "."
      ? "${local.iter_356.output}${join("", [for _ in range(local.code_357[1]) : jsondecode(format("\"\\u%04x\"", local.iter_356.tape[local.iter_356.tape_ptr]))])}"
      : local.iter_356.output)
    
    tape = (
      local.code_357[0] == "+"
        ? [for i, b in local.iter_356.tape : (i == local.iter_356.tape_ptr ? (b + local.code_357[1]) % 256 : b)] :
      local.code_357[0] == "-"
        ? [for i, b in local.iter_356.tape : (i == local.iter_356.tape_ptr ? (b - local.code_357[1] + 256) % 256 : b)] :
      local.code_357[0] == ","
        ? [for i, b in local.iter_356.tape : (i == local.iter_356.tape_ptr ? local.ascii_lookup[substr(local.input_357, 0, 1)] : b)]
        : local.iter_356.tape)

    tape_ptr = (
      local.code_357[0] == "<"
        ? local.iter_356.tape_ptr - local.code_357[1] :
      local.code_357[0] == ">"
        ? local.iter_356.tape_ptr + local.code_357[1]
        : local.iter_356.tape_ptr)

    code_ptr = 2 + (
      local.code_357[0] == "["
        ? local.iter_356.tape[local.iter_356.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_356.code_ptr)] : local.iter_356.code_ptr :
      local.code_357[0] == "]"
        ? local.iter_356.tape[local.iter_356.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_356.code_ptr)] : local.iter_356.code_ptr
        : local.iter_356.code_ptr)

    steps_taken = 1 + local.iter_356.steps_taken
  }
}

locals {
  code_358 = (try(local.iter_357.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_357.code_ptr, local.iter_357.code_ptr + 2)
    : [null])

  input_358 = (local.code_358[0] == ","
    ? substr(local.input_357, local.code_358[1], -1)
    : local.input_357)

  iter_358 = try(local.iter_357.code_ptr >= length(var.code), true) ? local.iter_357 : {
    output = (local.code_358[0] == "."
      ? "${local.iter_357.output}${join("", [for _ in range(local.code_358[1]) : jsondecode(format("\"\\u%04x\"", local.iter_357.tape[local.iter_357.tape_ptr]))])}"
      : local.iter_357.output)
    
    tape = (
      local.code_358[0] == "+"
        ? [for i, b in local.iter_357.tape : (i == local.iter_357.tape_ptr ? (b + local.code_358[1]) % 256 : b)] :
      local.code_358[0] == "-"
        ? [for i, b in local.iter_357.tape : (i == local.iter_357.tape_ptr ? (b - local.code_358[1] + 256) % 256 : b)] :
      local.code_358[0] == ","
        ? [for i, b in local.iter_357.tape : (i == local.iter_357.tape_ptr ? local.ascii_lookup[substr(local.input_358, 0, 1)] : b)]
        : local.iter_357.tape)

    tape_ptr = (
      local.code_358[0] == "<"
        ? local.iter_357.tape_ptr - local.code_358[1] :
      local.code_358[0] == ">"
        ? local.iter_357.tape_ptr + local.code_358[1]
        : local.iter_357.tape_ptr)

    code_ptr = 2 + (
      local.code_358[0] == "["
        ? local.iter_357.tape[local.iter_357.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_357.code_ptr)] : local.iter_357.code_ptr :
      local.code_358[0] == "]"
        ? local.iter_357.tape[local.iter_357.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_357.code_ptr)] : local.iter_357.code_ptr
        : local.iter_357.code_ptr)

    steps_taken = 1 + local.iter_357.steps_taken
  }
}

locals {
  code_359 = (try(local.iter_358.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_358.code_ptr, local.iter_358.code_ptr + 2)
    : [null])

  input_359 = (local.code_359[0] == ","
    ? substr(local.input_358, local.code_359[1], -1)
    : local.input_358)

  iter_359 = try(local.iter_358.code_ptr >= length(var.code), true) ? local.iter_358 : {
    output = (local.code_359[0] == "."
      ? "${local.iter_358.output}${join("", [for _ in range(local.code_359[1]) : jsondecode(format("\"\\u%04x\"", local.iter_358.tape[local.iter_358.tape_ptr]))])}"
      : local.iter_358.output)
    
    tape = (
      local.code_359[0] == "+"
        ? [for i, b in local.iter_358.tape : (i == local.iter_358.tape_ptr ? (b + local.code_359[1]) % 256 : b)] :
      local.code_359[0] == "-"
        ? [for i, b in local.iter_358.tape : (i == local.iter_358.tape_ptr ? (b - local.code_359[1] + 256) % 256 : b)] :
      local.code_359[0] == ","
        ? [for i, b in local.iter_358.tape : (i == local.iter_358.tape_ptr ? local.ascii_lookup[substr(local.input_359, 0, 1)] : b)]
        : local.iter_358.tape)

    tape_ptr = (
      local.code_359[0] == "<"
        ? local.iter_358.tape_ptr - local.code_359[1] :
      local.code_359[0] == ">"
        ? local.iter_358.tape_ptr + local.code_359[1]
        : local.iter_358.tape_ptr)

    code_ptr = 2 + (
      local.code_359[0] == "["
        ? local.iter_358.tape[local.iter_358.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_358.code_ptr)] : local.iter_358.code_ptr :
      local.code_359[0] == "]"
        ? local.iter_358.tape[local.iter_358.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_358.code_ptr)] : local.iter_358.code_ptr
        : local.iter_358.code_ptr)

    steps_taken = 1 + local.iter_358.steps_taken
  }
}

locals {
  code_360 = (try(local.iter_359.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_359.code_ptr, local.iter_359.code_ptr + 2)
    : [null])

  input_360 = (local.code_360[0] == ","
    ? substr(local.input_359, local.code_360[1], -1)
    : local.input_359)

  iter_360 = try(local.iter_359.code_ptr >= length(var.code), true) ? local.iter_359 : {
    output = (local.code_360[0] == "."
      ? "${local.iter_359.output}${join("", [for _ in range(local.code_360[1]) : jsondecode(format("\"\\u%04x\"", local.iter_359.tape[local.iter_359.tape_ptr]))])}"
      : local.iter_359.output)
    
    tape = (
      local.code_360[0] == "+"
        ? [for i, b in local.iter_359.tape : (i == local.iter_359.tape_ptr ? (b + local.code_360[1]) % 256 : b)] :
      local.code_360[0] == "-"
        ? [for i, b in local.iter_359.tape : (i == local.iter_359.tape_ptr ? (b - local.code_360[1] + 256) % 256 : b)] :
      local.code_360[0] == ","
        ? [for i, b in local.iter_359.tape : (i == local.iter_359.tape_ptr ? local.ascii_lookup[substr(local.input_360, 0, 1)] : b)]
        : local.iter_359.tape)

    tape_ptr = (
      local.code_360[0] == "<"
        ? local.iter_359.tape_ptr - local.code_360[1] :
      local.code_360[0] == ">"
        ? local.iter_359.tape_ptr + local.code_360[1]
        : local.iter_359.tape_ptr)

    code_ptr = 2 + (
      local.code_360[0] == "["
        ? local.iter_359.tape[local.iter_359.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_359.code_ptr)] : local.iter_359.code_ptr :
      local.code_360[0] == "]"
        ? local.iter_359.tape[local.iter_359.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_359.code_ptr)] : local.iter_359.code_ptr
        : local.iter_359.code_ptr)

    steps_taken = 1 + local.iter_359.steps_taken
  }
}

locals {
  code_361 = (try(local.iter_360.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_360.code_ptr, local.iter_360.code_ptr + 2)
    : [null])

  input_361 = (local.code_361[0] == ","
    ? substr(local.input_360, local.code_361[1], -1)
    : local.input_360)

  iter_361 = try(local.iter_360.code_ptr >= length(var.code), true) ? local.iter_360 : {
    output = (local.code_361[0] == "."
      ? "${local.iter_360.output}${join("", [for _ in range(local.code_361[1]) : jsondecode(format("\"\\u%04x\"", local.iter_360.tape[local.iter_360.tape_ptr]))])}"
      : local.iter_360.output)
    
    tape = (
      local.code_361[0] == "+"
        ? [for i, b in local.iter_360.tape : (i == local.iter_360.tape_ptr ? (b + local.code_361[1]) % 256 : b)] :
      local.code_361[0] == "-"
        ? [for i, b in local.iter_360.tape : (i == local.iter_360.tape_ptr ? (b - local.code_361[1] + 256) % 256 : b)] :
      local.code_361[0] == ","
        ? [for i, b in local.iter_360.tape : (i == local.iter_360.tape_ptr ? local.ascii_lookup[substr(local.input_361, 0, 1)] : b)]
        : local.iter_360.tape)

    tape_ptr = (
      local.code_361[0] == "<"
        ? local.iter_360.tape_ptr - local.code_361[1] :
      local.code_361[0] == ">"
        ? local.iter_360.tape_ptr + local.code_361[1]
        : local.iter_360.tape_ptr)

    code_ptr = 2 + (
      local.code_361[0] == "["
        ? local.iter_360.tape[local.iter_360.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_360.code_ptr)] : local.iter_360.code_ptr :
      local.code_361[0] == "]"
        ? local.iter_360.tape[local.iter_360.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_360.code_ptr)] : local.iter_360.code_ptr
        : local.iter_360.code_ptr)

    steps_taken = 1 + local.iter_360.steps_taken
  }
}

locals {
  code_362 = (try(local.iter_361.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_361.code_ptr, local.iter_361.code_ptr + 2)
    : [null])

  input_362 = (local.code_362[0] == ","
    ? substr(local.input_361, local.code_362[1], -1)
    : local.input_361)

  iter_362 = try(local.iter_361.code_ptr >= length(var.code), true) ? local.iter_361 : {
    output = (local.code_362[0] == "."
      ? "${local.iter_361.output}${join("", [for _ in range(local.code_362[1]) : jsondecode(format("\"\\u%04x\"", local.iter_361.tape[local.iter_361.tape_ptr]))])}"
      : local.iter_361.output)
    
    tape = (
      local.code_362[0] == "+"
        ? [for i, b in local.iter_361.tape : (i == local.iter_361.tape_ptr ? (b + local.code_362[1]) % 256 : b)] :
      local.code_362[0] == "-"
        ? [for i, b in local.iter_361.tape : (i == local.iter_361.tape_ptr ? (b - local.code_362[1] + 256) % 256 : b)] :
      local.code_362[0] == ","
        ? [for i, b in local.iter_361.tape : (i == local.iter_361.tape_ptr ? local.ascii_lookup[substr(local.input_362, 0, 1)] : b)]
        : local.iter_361.tape)

    tape_ptr = (
      local.code_362[0] == "<"
        ? local.iter_361.tape_ptr - local.code_362[1] :
      local.code_362[0] == ">"
        ? local.iter_361.tape_ptr + local.code_362[1]
        : local.iter_361.tape_ptr)

    code_ptr = 2 + (
      local.code_362[0] == "["
        ? local.iter_361.tape[local.iter_361.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_361.code_ptr)] : local.iter_361.code_ptr :
      local.code_362[0] == "]"
        ? local.iter_361.tape[local.iter_361.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_361.code_ptr)] : local.iter_361.code_ptr
        : local.iter_361.code_ptr)

    steps_taken = 1 + local.iter_361.steps_taken
  }
}

locals {
  code_363 = (try(local.iter_362.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_362.code_ptr, local.iter_362.code_ptr + 2)
    : [null])

  input_363 = (local.code_363[0] == ","
    ? substr(local.input_362, local.code_363[1], -1)
    : local.input_362)

  iter_363 = try(local.iter_362.code_ptr >= length(var.code), true) ? local.iter_362 : {
    output = (local.code_363[0] == "."
      ? "${local.iter_362.output}${join("", [for _ in range(local.code_363[1]) : jsondecode(format("\"\\u%04x\"", local.iter_362.tape[local.iter_362.tape_ptr]))])}"
      : local.iter_362.output)
    
    tape = (
      local.code_363[0] == "+"
        ? [for i, b in local.iter_362.tape : (i == local.iter_362.tape_ptr ? (b + local.code_363[1]) % 256 : b)] :
      local.code_363[0] == "-"
        ? [for i, b in local.iter_362.tape : (i == local.iter_362.tape_ptr ? (b - local.code_363[1] + 256) % 256 : b)] :
      local.code_363[0] == ","
        ? [for i, b in local.iter_362.tape : (i == local.iter_362.tape_ptr ? local.ascii_lookup[substr(local.input_363, 0, 1)] : b)]
        : local.iter_362.tape)

    tape_ptr = (
      local.code_363[0] == "<"
        ? local.iter_362.tape_ptr - local.code_363[1] :
      local.code_363[0] == ">"
        ? local.iter_362.tape_ptr + local.code_363[1]
        : local.iter_362.tape_ptr)

    code_ptr = 2 + (
      local.code_363[0] == "["
        ? local.iter_362.tape[local.iter_362.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_362.code_ptr)] : local.iter_362.code_ptr :
      local.code_363[0] == "]"
        ? local.iter_362.tape[local.iter_362.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_362.code_ptr)] : local.iter_362.code_ptr
        : local.iter_362.code_ptr)

    steps_taken = 1 + local.iter_362.steps_taken
  }
}

locals {
  code_364 = (try(local.iter_363.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_363.code_ptr, local.iter_363.code_ptr + 2)
    : [null])

  input_364 = (local.code_364[0] == ","
    ? substr(local.input_363, local.code_364[1], -1)
    : local.input_363)

  iter_364 = try(local.iter_363.code_ptr >= length(var.code), true) ? local.iter_363 : {
    output = (local.code_364[0] == "."
      ? "${local.iter_363.output}${join("", [for _ in range(local.code_364[1]) : jsondecode(format("\"\\u%04x\"", local.iter_363.tape[local.iter_363.tape_ptr]))])}"
      : local.iter_363.output)
    
    tape = (
      local.code_364[0] == "+"
        ? [for i, b in local.iter_363.tape : (i == local.iter_363.tape_ptr ? (b + local.code_364[1]) % 256 : b)] :
      local.code_364[0] == "-"
        ? [for i, b in local.iter_363.tape : (i == local.iter_363.tape_ptr ? (b - local.code_364[1] + 256) % 256 : b)] :
      local.code_364[0] == ","
        ? [for i, b in local.iter_363.tape : (i == local.iter_363.tape_ptr ? local.ascii_lookup[substr(local.input_364, 0, 1)] : b)]
        : local.iter_363.tape)

    tape_ptr = (
      local.code_364[0] == "<"
        ? local.iter_363.tape_ptr - local.code_364[1] :
      local.code_364[0] == ">"
        ? local.iter_363.tape_ptr + local.code_364[1]
        : local.iter_363.tape_ptr)

    code_ptr = 2 + (
      local.code_364[0] == "["
        ? local.iter_363.tape[local.iter_363.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_363.code_ptr)] : local.iter_363.code_ptr :
      local.code_364[0] == "]"
        ? local.iter_363.tape[local.iter_363.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_363.code_ptr)] : local.iter_363.code_ptr
        : local.iter_363.code_ptr)

    steps_taken = 1 + local.iter_363.steps_taken
  }
}

locals {
  code_365 = (try(local.iter_364.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_364.code_ptr, local.iter_364.code_ptr + 2)
    : [null])

  input_365 = (local.code_365[0] == ","
    ? substr(local.input_364, local.code_365[1], -1)
    : local.input_364)

  iter_365 = try(local.iter_364.code_ptr >= length(var.code), true) ? local.iter_364 : {
    output = (local.code_365[0] == "."
      ? "${local.iter_364.output}${join("", [for _ in range(local.code_365[1]) : jsondecode(format("\"\\u%04x\"", local.iter_364.tape[local.iter_364.tape_ptr]))])}"
      : local.iter_364.output)
    
    tape = (
      local.code_365[0] == "+"
        ? [for i, b in local.iter_364.tape : (i == local.iter_364.tape_ptr ? (b + local.code_365[1]) % 256 : b)] :
      local.code_365[0] == "-"
        ? [for i, b in local.iter_364.tape : (i == local.iter_364.tape_ptr ? (b - local.code_365[1] + 256) % 256 : b)] :
      local.code_365[0] == ","
        ? [for i, b in local.iter_364.tape : (i == local.iter_364.tape_ptr ? local.ascii_lookup[substr(local.input_365, 0, 1)] : b)]
        : local.iter_364.tape)

    tape_ptr = (
      local.code_365[0] == "<"
        ? local.iter_364.tape_ptr - local.code_365[1] :
      local.code_365[0] == ">"
        ? local.iter_364.tape_ptr + local.code_365[1]
        : local.iter_364.tape_ptr)

    code_ptr = 2 + (
      local.code_365[0] == "["
        ? local.iter_364.tape[local.iter_364.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_364.code_ptr)] : local.iter_364.code_ptr :
      local.code_365[0] == "]"
        ? local.iter_364.tape[local.iter_364.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_364.code_ptr)] : local.iter_364.code_ptr
        : local.iter_364.code_ptr)

    steps_taken = 1 + local.iter_364.steps_taken
  }
}

locals {
  code_366 = (try(local.iter_365.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_365.code_ptr, local.iter_365.code_ptr + 2)
    : [null])

  input_366 = (local.code_366[0] == ","
    ? substr(local.input_365, local.code_366[1], -1)
    : local.input_365)

  iter_366 = try(local.iter_365.code_ptr >= length(var.code), true) ? local.iter_365 : {
    output = (local.code_366[0] == "."
      ? "${local.iter_365.output}${join("", [for _ in range(local.code_366[1]) : jsondecode(format("\"\\u%04x\"", local.iter_365.tape[local.iter_365.tape_ptr]))])}"
      : local.iter_365.output)
    
    tape = (
      local.code_366[0] == "+"
        ? [for i, b in local.iter_365.tape : (i == local.iter_365.tape_ptr ? (b + local.code_366[1]) % 256 : b)] :
      local.code_366[0] == "-"
        ? [for i, b in local.iter_365.tape : (i == local.iter_365.tape_ptr ? (b - local.code_366[1] + 256) % 256 : b)] :
      local.code_366[0] == ","
        ? [for i, b in local.iter_365.tape : (i == local.iter_365.tape_ptr ? local.ascii_lookup[substr(local.input_366, 0, 1)] : b)]
        : local.iter_365.tape)

    tape_ptr = (
      local.code_366[0] == "<"
        ? local.iter_365.tape_ptr - local.code_366[1] :
      local.code_366[0] == ">"
        ? local.iter_365.tape_ptr + local.code_366[1]
        : local.iter_365.tape_ptr)

    code_ptr = 2 + (
      local.code_366[0] == "["
        ? local.iter_365.tape[local.iter_365.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_365.code_ptr)] : local.iter_365.code_ptr :
      local.code_366[0] == "]"
        ? local.iter_365.tape[local.iter_365.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_365.code_ptr)] : local.iter_365.code_ptr
        : local.iter_365.code_ptr)

    steps_taken = 1 + local.iter_365.steps_taken
  }
}

locals {
  code_367 = (try(local.iter_366.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_366.code_ptr, local.iter_366.code_ptr + 2)
    : [null])

  input_367 = (local.code_367[0] == ","
    ? substr(local.input_366, local.code_367[1], -1)
    : local.input_366)

  iter_367 = try(local.iter_366.code_ptr >= length(var.code), true) ? local.iter_366 : {
    output = (local.code_367[0] == "."
      ? "${local.iter_366.output}${join("", [for _ in range(local.code_367[1]) : jsondecode(format("\"\\u%04x\"", local.iter_366.tape[local.iter_366.tape_ptr]))])}"
      : local.iter_366.output)
    
    tape = (
      local.code_367[0] == "+"
        ? [for i, b in local.iter_366.tape : (i == local.iter_366.tape_ptr ? (b + local.code_367[1]) % 256 : b)] :
      local.code_367[0] == "-"
        ? [for i, b in local.iter_366.tape : (i == local.iter_366.tape_ptr ? (b - local.code_367[1] + 256) % 256 : b)] :
      local.code_367[0] == ","
        ? [for i, b in local.iter_366.tape : (i == local.iter_366.tape_ptr ? local.ascii_lookup[substr(local.input_367, 0, 1)] : b)]
        : local.iter_366.tape)

    tape_ptr = (
      local.code_367[0] == "<"
        ? local.iter_366.tape_ptr - local.code_367[1] :
      local.code_367[0] == ">"
        ? local.iter_366.tape_ptr + local.code_367[1]
        : local.iter_366.tape_ptr)

    code_ptr = 2 + (
      local.code_367[0] == "["
        ? local.iter_366.tape[local.iter_366.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_366.code_ptr)] : local.iter_366.code_ptr :
      local.code_367[0] == "]"
        ? local.iter_366.tape[local.iter_366.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_366.code_ptr)] : local.iter_366.code_ptr
        : local.iter_366.code_ptr)

    steps_taken = 1 + local.iter_366.steps_taken
  }
}

locals {
  code_368 = (try(local.iter_367.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_367.code_ptr, local.iter_367.code_ptr + 2)
    : [null])

  input_368 = (local.code_368[0] == ","
    ? substr(local.input_367, local.code_368[1], -1)
    : local.input_367)

  iter_368 = try(local.iter_367.code_ptr >= length(var.code), true) ? local.iter_367 : {
    output = (local.code_368[0] == "."
      ? "${local.iter_367.output}${join("", [for _ in range(local.code_368[1]) : jsondecode(format("\"\\u%04x\"", local.iter_367.tape[local.iter_367.tape_ptr]))])}"
      : local.iter_367.output)
    
    tape = (
      local.code_368[0] == "+"
        ? [for i, b in local.iter_367.tape : (i == local.iter_367.tape_ptr ? (b + local.code_368[1]) % 256 : b)] :
      local.code_368[0] == "-"
        ? [for i, b in local.iter_367.tape : (i == local.iter_367.tape_ptr ? (b - local.code_368[1] + 256) % 256 : b)] :
      local.code_368[0] == ","
        ? [for i, b in local.iter_367.tape : (i == local.iter_367.tape_ptr ? local.ascii_lookup[substr(local.input_368, 0, 1)] : b)]
        : local.iter_367.tape)

    tape_ptr = (
      local.code_368[0] == "<"
        ? local.iter_367.tape_ptr - local.code_368[1] :
      local.code_368[0] == ">"
        ? local.iter_367.tape_ptr + local.code_368[1]
        : local.iter_367.tape_ptr)

    code_ptr = 2 + (
      local.code_368[0] == "["
        ? local.iter_367.tape[local.iter_367.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_367.code_ptr)] : local.iter_367.code_ptr :
      local.code_368[0] == "]"
        ? local.iter_367.tape[local.iter_367.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_367.code_ptr)] : local.iter_367.code_ptr
        : local.iter_367.code_ptr)

    steps_taken = 1 + local.iter_367.steps_taken
  }
}

locals {
  code_369 = (try(local.iter_368.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_368.code_ptr, local.iter_368.code_ptr + 2)
    : [null])

  input_369 = (local.code_369[0] == ","
    ? substr(local.input_368, local.code_369[1], -1)
    : local.input_368)

  iter_369 = try(local.iter_368.code_ptr >= length(var.code), true) ? local.iter_368 : {
    output = (local.code_369[0] == "."
      ? "${local.iter_368.output}${join("", [for _ in range(local.code_369[1]) : jsondecode(format("\"\\u%04x\"", local.iter_368.tape[local.iter_368.tape_ptr]))])}"
      : local.iter_368.output)
    
    tape = (
      local.code_369[0] == "+"
        ? [for i, b in local.iter_368.tape : (i == local.iter_368.tape_ptr ? (b + local.code_369[1]) % 256 : b)] :
      local.code_369[0] == "-"
        ? [for i, b in local.iter_368.tape : (i == local.iter_368.tape_ptr ? (b - local.code_369[1] + 256) % 256 : b)] :
      local.code_369[0] == ","
        ? [for i, b in local.iter_368.tape : (i == local.iter_368.tape_ptr ? local.ascii_lookup[substr(local.input_369, 0, 1)] : b)]
        : local.iter_368.tape)

    tape_ptr = (
      local.code_369[0] == "<"
        ? local.iter_368.tape_ptr - local.code_369[1] :
      local.code_369[0] == ">"
        ? local.iter_368.tape_ptr + local.code_369[1]
        : local.iter_368.tape_ptr)

    code_ptr = 2 + (
      local.code_369[0] == "["
        ? local.iter_368.tape[local.iter_368.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_368.code_ptr)] : local.iter_368.code_ptr :
      local.code_369[0] == "]"
        ? local.iter_368.tape[local.iter_368.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_368.code_ptr)] : local.iter_368.code_ptr
        : local.iter_368.code_ptr)

    steps_taken = 1 + local.iter_368.steps_taken
  }
}

locals {
  code_370 = (try(local.iter_369.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_369.code_ptr, local.iter_369.code_ptr + 2)
    : [null])

  input_370 = (local.code_370[0] == ","
    ? substr(local.input_369, local.code_370[1], -1)
    : local.input_369)

  iter_370 = try(local.iter_369.code_ptr >= length(var.code), true) ? local.iter_369 : {
    output = (local.code_370[0] == "."
      ? "${local.iter_369.output}${join("", [for _ in range(local.code_370[1]) : jsondecode(format("\"\\u%04x\"", local.iter_369.tape[local.iter_369.tape_ptr]))])}"
      : local.iter_369.output)
    
    tape = (
      local.code_370[0] == "+"
        ? [for i, b in local.iter_369.tape : (i == local.iter_369.tape_ptr ? (b + local.code_370[1]) % 256 : b)] :
      local.code_370[0] == "-"
        ? [for i, b in local.iter_369.tape : (i == local.iter_369.tape_ptr ? (b - local.code_370[1] + 256) % 256 : b)] :
      local.code_370[0] == ","
        ? [for i, b in local.iter_369.tape : (i == local.iter_369.tape_ptr ? local.ascii_lookup[substr(local.input_370, 0, 1)] : b)]
        : local.iter_369.tape)

    tape_ptr = (
      local.code_370[0] == "<"
        ? local.iter_369.tape_ptr - local.code_370[1] :
      local.code_370[0] == ">"
        ? local.iter_369.tape_ptr + local.code_370[1]
        : local.iter_369.tape_ptr)

    code_ptr = 2 + (
      local.code_370[0] == "["
        ? local.iter_369.tape[local.iter_369.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_369.code_ptr)] : local.iter_369.code_ptr :
      local.code_370[0] == "]"
        ? local.iter_369.tape[local.iter_369.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_369.code_ptr)] : local.iter_369.code_ptr
        : local.iter_369.code_ptr)

    steps_taken = 1 + local.iter_369.steps_taken
  }
}

locals {
  code_371 = (try(local.iter_370.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_370.code_ptr, local.iter_370.code_ptr + 2)
    : [null])

  input_371 = (local.code_371[0] == ","
    ? substr(local.input_370, local.code_371[1], -1)
    : local.input_370)

  iter_371 = try(local.iter_370.code_ptr >= length(var.code), true) ? local.iter_370 : {
    output = (local.code_371[0] == "."
      ? "${local.iter_370.output}${join("", [for _ in range(local.code_371[1]) : jsondecode(format("\"\\u%04x\"", local.iter_370.tape[local.iter_370.tape_ptr]))])}"
      : local.iter_370.output)
    
    tape = (
      local.code_371[0] == "+"
        ? [for i, b in local.iter_370.tape : (i == local.iter_370.tape_ptr ? (b + local.code_371[1]) % 256 : b)] :
      local.code_371[0] == "-"
        ? [for i, b in local.iter_370.tape : (i == local.iter_370.tape_ptr ? (b - local.code_371[1] + 256) % 256 : b)] :
      local.code_371[0] == ","
        ? [for i, b in local.iter_370.tape : (i == local.iter_370.tape_ptr ? local.ascii_lookup[substr(local.input_371, 0, 1)] : b)]
        : local.iter_370.tape)

    tape_ptr = (
      local.code_371[0] == "<"
        ? local.iter_370.tape_ptr - local.code_371[1] :
      local.code_371[0] == ">"
        ? local.iter_370.tape_ptr + local.code_371[1]
        : local.iter_370.tape_ptr)

    code_ptr = 2 + (
      local.code_371[0] == "["
        ? local.iter_370.tape[local.iter_370.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_370.code_ptr)] : local.iter_370.code_ptr :
      local.code_371[0] == "]"
        ? local.iter_370.tape[local.iter_370.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_370.code_ptr)] : local.iter_370.code_ptr
        : local.iter_370.code_ptr)

    steps_taken = 1 + local.iter_370.steps_taken
  }
}

locals {
  code_372 = (try(local.iter_371.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_371.code_ptr, local.iter_371.code_ptr + 2)
    : [null])

  input_372 = (local.code_372[0] == ","
    ? substr(local.input_371, local.code_372[1], -1)
    : local.input_371)

  iter_372 = try(local.iter_371.code_ptr >= length(var.code), true) ? local.iter_371 : {
    output = (local.code_372[0] == "."
      ? "${local.iter_371.output}${join("", [for _ in range(local.code_372[1]) : jsondecode(format("\"\\u%04x\"", local.iter_371.tape[local.iter_371.tape_ptr]))])}"
      : local.iter_371.output)
    
    tape = (
      local.code_372[0] == "+"
        ? [for i, b in local.iter_371.tape : (i == local.iter_371.tape_ptr ? (b + local.code_372[1]) % 256 : b)] :
      local.code_372[0] == "-"
        ? [for i, b in local.iter_371.tape : (i == local.iter_371.tape_ptr ? (b - local.code_372[1] + 256) % 256 : b)] :
      local.code_372[0] == ","
        ? [for i, b in local.iter_371.tape : (i == local.iter_371.tape_ptr ? local.ascii_lookup[substr(local.input_372, 0, 1)] : b)]
        : local.iter_371.tape)

    tape_ptr = (
      local.code_372[0] == "<"
        ? local.iter_371.tape_ptr - local.code_372[1] :
      local.code_372[0] == ">"
        ? local.iter_371.tape_ptr + local.code_372[1]
        : local.iter_371.tape_ptr)

    code_ptr = 2 + (
      local.code_372[0] == "["
        ? local.iter_371.tape[local.iter_371.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_371.code_ptr)] : local.iter_371.code_ptr :
      local.code_372[0] == "]"
        ? local.iter_371.tape[local.iter_371.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_371.code_ptr)] : local.iter_371.code_ptr
        : local.iter_371.code_ptr)

    steps_taken = 1 + local.iter_371.steps_taken
  }
}

locals {
  code_373 = (try(local.iter_372.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_372.code_ptr, local.iter_372.code_ptr + 2)
    : [null])

  input_373 = (local.code_373[0] == ","
    ? substr(local.input_372, local.code_373[1], -1)
    : local.input_372)

  iter_373 = try(local.iter_372.code_ptr >= length(var.code), true) ? local.iter_372 : {
    output = (local.code_373[0] == "."
      ? "${local.iter_372.output}${join("", [for _ in range(local.code_373[1]) : jsondecode(format("\"\\u%04x\"", local.iter_372.tape[local.iter_372.tape_ptr]))])}"
      : local.iter_372.output)
    
    tape = (
      local.code_373[0] == "+"
        ? [for i, b in local.iter_372.tape : (i == local.iter_372.tape_ptr ? (b + local.code_373[1]) % 256 : b)] :
      local.code_373[0] == "-"
        ? [for i, b in local.iter_372.tape : (i == local.iter_372.tape_ptr ? (b - local.code_373[1] + 256) % 256 : b)] :
      local.code_373[0] == ","
        ? [for i, b in local.iter_372.tape : (i == local.iter_372.tape_ptr ? local.ascii_lookup[substr(local.input_373, 0, 1)] : b)]
        : local.iter_372.tape)

    tape_ptr = (
      local.code_373[0] == "<"
        ? local.iter_372.tape_ptr - local.code_373[1] :
      local.code_373[0] == ">"
        ? local.iter_372.tape_ptr + local.code_373[1]
        : local.iter_372.tape_ptr)

    code_ptr = 2 + (
      local.code_373[0] == "["
        ? local.iter_372.tape[local.iter_372.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_372.code_ptr)] : local.iter_372.code_ptr :
      local.code_373[0] == "]"
        ? local.iter_372.tape[local.iter_372.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_372.code_ptr)] : local.iter_372.code_ptr
        : local.iter_372.code_ptr)

    steps_taken = 1 + local.iter_372.steps_taken
  }
}

locals {
  code_374 = (try(local.iter_373.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_373.code_ptr, local.iter_373.code_ptr + 2)
    : [null])

  input_374 = (local.code_374[0] == ","
    ? substr(local.input_373, local.code_374[1], -1)
    : local.input_373)

  iter_374 = try(local.iter_373.code_ptr >= length(var.code), true) ? local.iter_373 : {
    output = (local.code_374[0] == "."
      ? "${local.iter_373.output}${join("", [for _ in range(local.code_374[1]) : jsondecode(format("\"\\u%04x\"", local.iter_373.tape[local.iter_373.tape_ptr]))])}"
      : local.iter_373.output)
    
    tape = (
      local.code_374[0] == "+"
        ? [for i, b in local.iter_373.tape : (i == local.iter_373.tape_ptr ? (b + local.code_374[1]) % 256 : b)] :
      local.code_374[0] == "-"
        ? [for i, b in local.iter_373.tape : (i == local.iter_373.tape_ptr ? (b - local.code_374[1] + 256) % 256 : b)] :
      local.code_374[0] == ","
        ? [for i, b in local.iter_373.tape : (i == local.iter_373.tape_ptr ? local.ascii_lookup[substr(local.input_374, 0, 1)] : b)]
        : local.iter_373.tape)

    tape_ptr = (
      local.code_374[0] == "<"
        ? local.iter_373.tape_ptr - local.code_374[1] :
      local.code_374[0] == ">"
        ? local.iter_373.tape_ptr + local.code_374[1]
        : local.iter_373.tape_ptr)

    code_ptr = 2 + (
      local.code_374[0] == "["
        ? local.iter_373.tape[local.iter_373.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_373.code_ptr)] : local.iter_373.code_ptr :
      local.code_374[0] == "]"
        ? local.iter_373.tape[local.iter_373.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_373.code_ptr)] : local.iter_373.code_ptr
        : local.iter_373.code_ptr)

    steps_taken = 1 + local.iter_373.steps_taken
  }
}

locals {
  code_375 = (try(local.iter_374.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_374.code_ptr, local.iter_374.code_ptr + 2)
    : [null])

  input_375 = (local.code_375[0] == ","
    ? substr(local.input_374, local.code_375[1], -1)
    : local.input_374)

  iter_375 = try(local.iter_374.code_ptr >= length(var.code), true) ? local.iter_374 : {
    output = (local.code_375[0] == "."
      ? "${local.iter_374.output}${join("", [for _ in range(local.code_375[1]) : jsondecode(format("\"\\u%04x\"", local.iter_374.tape[local.iter_374.tape_ptr]))])}"
      : local.iter_374.output)
    
    tape = (
      local.code_375[0] == "+"
        ? [for i, b in local.iter_374.tape : (i == local.iter_374.tape_ptr ? (b + local.code_375[1]) % 256 : b)] :
      local.code_375[0] == "-"
        ? [for i, b in local.iter_374.tape : (i == local.iter_374.tape_ptr ? (b - local.code_375[1] + 256) % 256 : b)] :
      local.code_375[0] == ","
        ? [for i, b in local.iter_374.tape : (i == local.iter_374.tape_ptr ? local.ascii_lookup[substr(local.input_375, 0, 1)] : b)]
        : local.iter_374.tape)

    tape_ptr = (
      local.code_375[0] == "<"
        ? local.iter_374.tape_ptr - local.code_375[1] :
      local.code_375[0] == ">"
        ? local.iter_374.tape_ptr + local.code_375[1]
        : local.iter_374.tape_ptr)

    code_ptr = 2 + (
      local.code_375[0] == "["
        ? local.iter_374.tape[local.iter_374.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_374.code_ptr)] : local.iter_374.code_ptr :
      local.code_375[0] == "]"
        ? local.iter_374.tape[local.iter_374.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_374.code_ptr)] : local.iter_374.code_ptr
        : local.iter_374.code_ptr)

    steps_taken = 1 + local.iter_374.steps_taken
  }
}

locals {
  code_376 = (try(local.iter_375.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_375.code_ptr, local.iter_375.code_ptr + 2)
    : [null])

  input_376 = (local.code_376[0] == ","
    ? substr(local.input_375, local.code_376[1], -1)
    : local.input_375)

  iter_376 = try(local.iter_375.code_ptr >= length(var.code), true) ? local.iter_375 : {
    output = (local.code_376[0] == "."
      ? "${local.iter_375.output}${join("", [for _ in range(local.code_376[1]) : jsondecode(format("\"\\u%04x\"", local.iter_375.tape[local.iter_375.tape_ptr]))])}"
      : local.iter_375.output)
    
    tape = (
      local.code_376[0] == "+"
        ? [for i, b in local.iter_375.tape : (i == local.iter_375.tape_ptr ? (b + local.code_376[1]) % 256 : b)] :
      local.code_376[0] == "-"
        ? [for i, b in local.iter_375.tape : (i == local.iter_375.tape_ptr ? (b - local.code_376[1] + 256) % 256 : b)] :
      local.code_376[0] == ","
        ? [for i, b in local.iter_375.tape : (i == local.iter_375.tape_ptr ? local.ascii_lookup[substr(local.input_376, 0, 1)] : b)]
        : local.iter_375.tape)

    tape_ptr = (
      local.code_376[0] == "<"
        ? local.iter_375.tape_ptr - local.code_376[1] :
      local.code_376[0] == ">"
        ? local.iter_375.tape_ptr + local.code_376[1]
        : local.iter_375.tape_ptr)

    code_ptr = 2 + (
      local.code_376[0] == "["
        ? local.iter_375.tape[local.iter_375.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_375.code_ptr)] : local.iter_375.code_ptr :
      local.code_376[0] == "]"
        ? local.iter_375.tape[local.iter_375.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_375.code_ptr)] : local.iter_375.code_ptr
        : local.iter_375.code_ptr)

    steps_taken = 1 + local.iter_375.steps_taken
  }
}

locals {
  code_377 = (try(local.iter_376.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_376.code_ptr, local.iter_376.code_ptr + 2)
    : [null])

  input_377 = (local.code_377[0] == ","
    ? substr(local.input_376, local.code_377[1], -1)
    : local.input_376)

  iter_377 = try(local.iter_376.code_ptr >= length(var.code), true) ? local.iter_376 : {
    output = (local.code_377[0] == "."
      ? "${local.iter_376.output}${join("", [for _ in range(local.code_377[1]) : jsondecode(format("\"\\u%04x\"", local.iter_376.tape[local.iter_376.tape_ptr]))])}"
      : local.iter_376.output)
    
    tape = (
      local.code_377[0] == "+"
        ? [for i, b in local.iter_376.tape : (i == local.iter_376.tape_ptr ? (b + local.code_377[1]) % 256 : b)] :
      local.code_377[0] == "-"
        ? [for i, b in local.iter_376.tape : (i == local.iter_376.tape_ptr ? (b - local.code_377[1] + 256) % 256 : b)] :
      local.code_377[0] == ","
        ? [for i, b in local.iter_376.tape : (i == local.iter_376.tape_ptr ? local.ascii_lookup[substr(local.input_377, 0, 1)] : b)]
        : local.iter_376.tape)

    tape_ptr = (
      local.code_377[0] == "<"
        ? local.iter_376.tape_ptr - local.code_377[1] :
      local.code_377[0] == ">"
        ? local.iter_376.tape_ptr + local.code_377[1]
        : local.iter_376.tape_ptr)

    code_ptr = 2 + (
      local.code_377[0] == "["
        ? local.iter_376.tape[local.iter_376.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_376.code_ptr)] : local.iter_376.code_ptr :
      local.code_377[0] == "]"
        ? local.iter_376.tape[local.iter_376.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_376.code_ptr)] : local.iter_376.code_ptr
        : local.iter_376.code_ptr)

    steps_taken = 1 + local.iter_376.steps_taken
  }
}

locals {
  code_378 = (try(local.iter_377.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_377.code_ptr, local.iter_377.code_ptr + 2)
    : [null])

  input_378 = (local.code_378[0] == ","
    ? substr(local.input_377, local.code_378[1], -1)
    : local.input_377)

  iter_378 = try(local.iter_377.code_ptr >= length(var.code), true) ? local.iter_377 : {
    output = (local.code_378[0] == "."
      ? "${local.iter_377.output}${join("", [for _ in range(local.code_378[1]) : jsondecode(format("\"\\u%04x\"", local.iter_377.tape[local.iter_377.tape_ptr]))])}"
      : local.iter_377.output)
    
    tape = (
      local.code_378[0] == "+"
        ? [for i, b in local.iter_377.tape : (i == local.iter_377.tape_ptr ? (b + local.code_378[1]) % 256 : b)] :
      local.code_378[0] == "-"
        ? [for i, b in local.iter_377.tape : (i == local.iter_377.tape_ptr ? (b - local.code_378[1] + 256) % 256 : b)] :
      local.code_378[0] == ","
        ? [for i, b in local.iter_377.tape : (i == local.iter_377.tape_ptr ? local.ascii_lookup[substr(local.input_378, 0, 1)] : b)]
        : local.iter_377.tape)

    tape_ptr = (
      local.code_378[0] == "<"
        ? local.iter_377.tape_ptr - local.code_378[1] :
      local.code_378[0] == ">"
        ? local.iter_377.tape_ptr + local.code_378[1]
        : local.iter_377.tape_ptr)

    code_ptr = 2 + (
      local.code_378[0] == "["
        ? local.iter_377.tape[local.iter_377.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_377.code_ptr)] : local.iter_377.code_ptr :
      local.code_378[0] == "]"
        ? local.iter_377.tape[local.iter_377.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_377.code_ptr)] : local.iter_377.code_ptr
        : local.iter_377.code_ptr)

    steps_taken = 1 + local.iter_377.steps_taken
  }
}

locals {
  code_379 = (try(local.iter_378.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_378.code_ptr, local.iter_378.code_ptr + 2)
    : [null])

  input_379 = (local.code_379[0] == ","
    ? substr(local.input_378, local.code_379[1], -1)
    : local.input_378)

  iter_379 = try(local.iter_378.code_ptr >= length(var.code), true) ? local.iter_378 : {
    output = (local.code_379[0] == "."
      ? "${local.iter_378.output}${join("", [for _ in range(local.code_379[1]) : jsondecode(format("\"\\u%04x\"", local.iter_378.tape[local.iter_378.tape_ptr]))])}"
      : local.iter_378.output)
    
    tape = (
      local.code_379[0] == "+"
        ? [for i, b in local.iter_378.tape : (i == local.iter_378.tape_ptr ? (b + local.code_379[1]) % 256 : b)] :
      local.code_379[0] == "-"
        ? [for i, b in local.iter_378.tape : (i == local.iter_378.tape_ptr ? (b - local.code_379[1] + 256) % 256 : b)] :
      local.code_379[0] == ","
        ? [for i, b in local.iter_378.tape : (i == local.iter_378.tape_ptr ? local.ascii_lookup[substr(local.input_379, 0, 1)] : b)]
        : local.iter_378.tape)

    tape_ptr = (
      local.code_379[0] == "<"
        ? local.iter_378.tape_ptr - local.code_379[1] :
      local.code_379[0] == ">"
        ? local.iter_378.tape_ptr + local.code_379[1]
        : local.iter_378.tape_ptr)

    code_ptr = 2 + (
      local.code_379[0] == "["
        ? local.iter_378.tape[local.iter_378.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_378.code_ptr)] : local.iter_378.code_ptr :
      local.code_379[0] == "]"
        ? local.iter_378.tape[local.iter_378.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_378.code_ptr)] : local.iter_378.code_ptr
        : local.iter_378.code_ptr)

    steps_taken = 1 + local.iter_378.steps_taken
  }
}

locals {
  code_380 = (try(local.iter_379.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_379.code_ptr, local.iter_379.code_ptr + 2)
    : [null])

  input_380 = (local.code_380[0] == ","
    ? substr(local.input_379, local.code_380[1], -1)
    : local.input_379)

  iter_380 = try(local.iter_379.code_ptr >= length(var.code), true) ? local.iter_379 : {
    output = (local.code_380[0] == "."
      ? "${local.iter_379.output}${join("", [for _ in range(local.code_380[1]) : jsondecode(format("\"\\u%04x\"", local.iter_379.tape[local.iter_379.tape_ptr]))])}"
      : local.iter_379.output)
    
    tape = (
      local.code_380[0] == "+"
        ? [for i, b in local.iter_379.tape : (i == local.iter_379.tape_ptr ? (b + local.code_380[1]) % 256 : b)] :
      local.code_380[0] == "-"
        ? [for i, b in local.iter_379.tape : (i == local.iter_379.tape_ptr ? (b - local.code_380[1] + 256) % 256 : b)] :
      local.code_380[0] == ","
        ? [for i, b in local.iter_379.tape : (i == local.iter_379.tape_ptr ? local.ascii_lookup[substr(local.input_380, 0, 1)] : b)]
        : local.iter_379.tape)

    tape_ptr = (
      local.code_380[0] == "<"
        ? local.iter_379.tape_ptr - local.code_380[1] :
      local.code_380[0] == ">"
        ? local.iter_379.tape_ptr + local.code_380[1]
        : local.iter_379.tape_ptr)

    code_ptr = 2 + (
      local.code_380[0] == "["
        ? local.iter_379.tape[local.iter_379.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_379.code_ptr)] : local.iter_379.code_ptr :
      local.code_380[0] == "]"
        ? local.iter_379.tape[local.iter_379.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_379.code_ptr)] : local.iter_379.code_ptr
        : local.iter_379.code_ptr)

    steps_taken = 1 + local.iter_379.steps_taken
  }
}

locals {
  code_381 = (try(local.iter_380.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_380.code_ptr, local.iter_380.code_ptr + 2)
    : [null])

  input_381 = (local.code_381[0] == ","
    ? substr(local.input_380, local.code_381[1], -1)
    : local.input_380)

  iter_381 = try(local.iter_380.code_ptr >= length(var.code), true) ? local.iter_380 : {
    output = (local.code_381[0] == "."
      ? "${local.iter_380.output}${join("", [for _ in range(local.code_381[1]) : jsondecode(format("\"\\u%04x\"", local.iter_380.tape[local.iter_380.tape_ptr]))])}"
      : local.iter_380.output)
    
    tape = (
      local.code_381[0] == "+"
        ? [for i, b in local.iter_380.tape : (i == local.iter_380.tape_ptr ? (b + local.code_381[1]) % 256 : b)] :
      local.code_381[0] == "-"
        ? [for i, b in local.iter_380.tape : (i == local.iter_380.tape_ptr ? (b - local.code_381[1] + 256) % 256 : b)] :
      local.code_381[0] == ","
        ? [for i, b in local.iter_380.tape : (i == local.iter_380.tape_ptr ? local.ascii_lookup[substr(local.input_381, 0, 1)] : b)]
        : local.iter_380.tape)

    tape_ptr = (
      local.code_381[0] == "<"
        ? local.iter_380.tape_ptr - local.code_381[1] :
      local.code_381[0] == ">"
        ? local.iter_380.tape_ptr + local.code_381[1]
        : local.iter_380.tape_ptr)

    code_ptr = 2 + (
      local.code_381[0] == "["
        ? local.iter_380.tape[local.iter_380.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_380.code_ptr)] : local.iter_380.code_ptr :
      local.code_381[0] == "]"
        ? local.iter_380.tape[local.iter_380.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_380.code_ptr)] : local.iter_380.code_ptr
        : local.iter_380.code_ptr)

    steps_taken = 1 + local.iter_380.steps_taken
  }
}

locals {
  code_382 = (try(local.iter_381.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_381.code_ptr, local.iter_381.code_ptr + 2)
    : [null])

  input_382 = (local.code_382[0] == ","
    ? substr(local.input_381, local.code_382[1], -1)
    : local.input_381)

  iter_382 = try(local.iter_381.code_ptr >= length(var.code), true) ? local.iter_381 : {
    output = (local.code_382[0] == "."
      ? "${local.iter_381.output}${join("", [for _ in range(local.code_382[1]) : jsondecode(format("\"\\u%04x\"", local.iter_381.tape[local.iter_381.tape_ptr]))])}"
      : local.iter_381.output)
    
    tape = (
      local.code_382[0] == "+"
        ? [for i, b in local.iter_381.tape : (i == local.iter_381.tape_ptr ? (b + local.code_382[1]) % 256 : b)] :
      local.code_382[0] == "-"
        ? [for i, b in local.iter_381.tape : (i == local.iter_381.tape_ptr ? (b - local.code_382[1] + 256) % 256 : b)] :
      local.code_382[0] == ","
        ? [for i, b in local.iter_381.tape : (i == local.iter_381.tape_ptr ? local.ascii_lookup[substr(local.input_382, 0, 1)] : b)]
        : local.iter_381.tape)

    tape_ptr = (
      local.code_382[0] == "<"
        ? local.iter_381.tape_ptr - local.code_382[1] :
      local.code_382[0] == ">"
        ? local.iter_381.tape_ptr + local.code_382[1]
        : local.iter_381.tape_ptr)

    code_ptr = 2 + (
      local.code_382[0] == "["
        ? local.iter_381.tape[local.iter_381.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_381.code_ptr)] : local.iter_381.code_ptr :
      local.code_382[0] == "]"
        ? local.iter_381.tape[local.iter_381.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_381.code_ptr)] : local.iter_381.code_ptr
        : local.iter_381.code_ptr)

    steps_taken = 1 + local.iter_381.steps_taken
  }
}

locals {
  code_383 = (try(local.iter_382.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_382.code_ptr, local.iter_382.code_ptr + 2)
    : [null])

  input_383 = (local.code_383[0] == ","
    ? substr(local.input_382, local.code_383[1], -1)
    : local.input_382)

  iter_383 = try(local.iter_382.code_ptr >= length(var.code), true) ? local.iter_382 : {
    output = (local.code_383[0] == "."
      ? "${local.iter_382.output}${join("", [for _ in range(local.code_383[1]) : jsondecode(format("\"\\u%04x\"", local.iter_382.tape[local.iter_382.tape_ptr]))])}"
      : local.iter_382.output)
    
    tape = (
      local.code_383[0] == "+"
        ? [for i, b in local.iter_382.tape : (i == local.iter_382.tape_ptr ? (b + local.code_383[1]) % 256 : b)] :
      local.code_383[0] == "-"
        ? [for i, b in local.iter_382.tape : (i == local.iter_382.tape_ptr ? (b - local.code_383[1] + 256) % 256 : b)] :
      local.code_383[0] == ","
        ? [for i, b in local.iter_382.tape : (i == local.iter_382.tape_ptr ? local.ascii_lookup[substr(local.input_383, 0, 1)] : b)]
        : local.iter_382.tape)

    tape_ptr = (
      local.code_383[0] == "<"
        ? local.iter_382.tape_ptr - local.code_383[1] :
      local.code_383[0] == ">"
        ? local.iter_382.tape_ptr + local.code_383[1]
        : local.iter_382.tape_ptr)

    code_ptr = 2 + (
      local.code_383[0] == "["
        ? local.iter_382.tape[local.iter_382.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_382.code_ptr)] : local.iter_382.code_ptr :
      local.code_383[0] == "]"
        ? local.iter_382.tape[local.iter_382.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_382.code_ptr)] : local.iter_382.code_ptr
        : local.iter_382.code_ptr)

    steps_taken = 1 + local.iter_382.steps_taken
  }
}

locals {
  code_384 = (try(local.iter_383.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_383.code_ptr, local.iter_383.code_ptr + 2)
    : [null])

  input_384 = (local.code_384[0] == ","
    ? substr(local.input_383, local.code_384[1], -1)
    : local.input_383)

  iter_384 = try(local.iter_383.code_ptr >= length(var.code), true) ? local.iter_383 : {
    output = (local.code_384[0] == "."
      ? "${local.iter_383.output}${join("", [for _ in range(local.code_384[1]) : jsondecode(format("\"\\u%04x\"", local.iter_383.tape[local.iter_383.tape_ptr]))])}"
      : local.iter_383.output)
    
    tape = (
      local.code_384[0] == "+"
        ? [for i, b in local.iter_383.tape : (i == local.iter_383.tape_ptr ? (b + local.code_384[1]) % 256 : b)] :
      local.code_384[0] == "-"
        ? [for i, b in local.iter_383.tape : (i == local.iter_383.tape_ptr ? (b - local.code_384[1] + 256) % 256 : b)] :
      local.code_384[0] == ","
        ? [for i, b in local.iter_383.tape : (i == local.iter_383.tape_ptr ? local.ascii_lookup[substr(local.input_384, 0, 1)] : b)]
        : local.iter_383.tape)

    tape_ptr = (
      local.code_384[0] == "<"
        ? local.iter_383.tape_ptr - local.code_384[1] :
      local.code_384[0] == ">"
        ? local.iter_383.tape_ptr + local.code_384[1]
        : local.iter_383.tape_ptr)

    code_ptr = 2 + (
      local.code_384[0] == "["
        ? local.iter_383.tape[local.iter_383.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_383.code_ptr)] : local.iter_383.code_ptr :
      local.code_384[0] == "]"
        ? local.iter_383.tape[local.iter_383.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_383.code_ptr)] : local.iter_383.code_ptr
        : local.iter_383.code_ptr)

    steps_taken = 1 + local.iter_383.steps_taken
  }
}

locals {
  code_385 = (try(local.iter_384.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_384.code_ptr, local.iter_384.code_ptr + 2)
    : [null])

  input_385 = (local.code_385[0] == ","
    ? substr(local.input_384, local.code_385[1], -1)
    : local.input_384)

  iter_385 = try(local.iter_384.code_ptr >= length(var.code), true) ? local.iter_384 : {
    output = (local.code_385[0] == "."
      ? "${local.iter_384.output}${join("", [for _ in range(local.code_385[1]) : jsondecode(format("\"\\u%04x\"", local.iter_384.tape[local.iter_384.tape_ptr]))])}"
      : local.iter_384.output)
    
    tape = (
      local.code_385[0] == "+"
        ? [for i, b in local.iter_384.tape : (i == local.iter_384.tape_ptr ? (b + local.code_385[1]) % 256 : b)] :
      local.code_385[0] == "-"
        ? [for i, b in local.iter_384.tape : (i == local.iter_384.tape_ptr ? (b - local.code_385[1] + 256) % 256 : b)] :
      local.code_385[0] == ","
        ? [for i, b in local.iter_384.tape : (i == local.iter_384.tape_ptr ? local.ascii_lookup[substr(local.input_385, 0, 1)] : b)]
        : local.iter_384.tape)

    tape_ptr = (
      local.code_385[0] == "<"
        ? local.iter_384.tape_ptr - local.code_385[1] :
      local.code_385[0] == ">"
        ? local.iter_384.tape_ptr + local.code_385[1]
        : local.iter_384.tape_ptr)

    code_ptr = 2 + (
      local.code_385[0] == "["
        ? local.iter_384.tape[local.iter_384.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_384.code_ptr)] : local.iter_384.code_ptr :
      local.code_385[0] == "]"
        ? local.iter_384.tape[local.iter_384.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_384.code_ptr)] : local.iter_384.code_ptr
        : local.iter_384.code_ptr)

    steps_taken = 1 + local.iter_384.steps_taken
  }
}

locals {
  code_386 = (try(local.iter_385.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_385.code_ptr, local.iter_385.code_ptr + 2)
    : [null])

  input_386 = (local.code_386[0] == ","
    ? substr(local.input_385, local.code_386[1], -1)
    : local.input_385)

  iter_386 = try(local.iter_385.code_ptr >= length(var.code), true) ? local.iter_385 : {
    output = (local.code_386[0] == "."
      ? "${local.iter_385.output}${join("", [for _ in range(local.code_386[1]) : jsondecode(format("\"\\u%04x\"", local.iter_385.tape[local.iter_385.tape_ptr]))])}"
      : local.iter_385.output)
    
    tape = (
      local.code_386[0] == "+"
        ? [for i, b in local.iter_385.tape : (i == local.iter_385.tape_ptr ? (b + local.code_386[1]) % 256 : b)] :
      local.code_386[0] == "-"
        ? [for i, b in local.iter_385.tape : (i == local.iter_385.tape_ptr ? (b - local.code_386[1] + 256) % 256 : b)] :
      local.code_386[0] == ","
        ? [for i, b in local.iter_385.tape : (i == local.iter_385.tape_ptr ? local.ascii_lookup[substr(local.input_386, 0, 1)] : b)]
        : local.iter_385.tape)

    tape_ptr = (
      local.code_386[0] == "<"
        ? local.iter_385.tape_ptr - local.code_386[1] :
      local.code_386[0] == ">"
        ? local.iter_385.tape_ptr + local.code_386[1]
        : local.iter_385.tape_ptr)

    code_ptr = 2 + (
      local.code_386[0] == "["
        ? local.iter_385.tape[local.iter_385.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_385.code_ptr)] : local.iter_385.code_ptr :
      local.code_386[0] == "]"
        ? local.iter_385.tape[local.iter_385.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_385.code_ptr)] : local.iter_385.code_ptr
        : local.iter_385.code_ptr)

    steps_taken = 1 + local.iter_385.steps_taken
  }
}

locals {
  code_387 = (try(local.iter_386.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_386.code_ptr, local.iter_386.code_ptr + 2)
    : [null])

  input_387 = (local.code_387[0] == ","
    ? substr(local.input_386, local.code_387[1], -1)
    : local.input_386)

  iter_387 = try(local.iter_386.code_ptr >= length(var.code), true) ? local.iter_386 : {
    output = (local.code_387[0] == "."
      ? "${local.iter_386.output}${join("", [for _ in range(local.code_387[1]) : jsondecode(format("\"\\u%04x\"", local.iter_386.tape[local.iter_386.tape_ptr]))])}"
      : local.iter_386.output)
    
    tape = (
      local.code_387[0] == "+"
        ? [for i, b in local.iter_386.tape : (i == local.iter_386.tape_ptr ? (b + local.code_387[1]) % 256 : b)] :
      local.code_387[0] == "-"
        ? [for i, b in local.iter_386.tape : (i == local.iter_386.tape_ptr ? (b - local.code_387[1] + 256) % 256 : b)] :
      local.code_387[0] == ","
        ? [for i, b in local.iter_386.tape : (i == local.iter_386.tape_ptr ? local.ascii_lookup[substr(local.input_387, 0, 1)] : b)]
        : local.iter_386.tape)

    tape_ptr = (
      local.code_387[0] == "<"
        ? local.iter_386.tape_ptr - local.code_387[1] :
      local.code_387[0] == ">"
        ? local.iter_386.tape_ptr + local.code_387[1]
        : local.iter_386.tape_ptr)

    code_ptr = 2 + (
      local.code_387[0] == "["
        ? local.iter_386.tape[local.iter_386.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_386.code_ptr)] : local.iter_386.code_ptr :
      local.code_387[0] == "]"
        ? local.iter_386.tape[local.iter_386.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_386.code_ptr)] : local.iter_386.code_ptr
        : local.iter_386.code_ptr)

    steps_taken = 1 + local.iter_386.steps_taken
  }
}

locals {
  code_388 = (try(local.iter_387.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_387.code_ptr, local.iter_387.code_ptr + 2)
    : [null])

  input_388 = (local.code_388[0] == ","
    ? substr(local.input_387, local.code_388[1], -1)
    : local.input_387)

  iter_388 = try(local.iter_387.code_ptr >= length(var.code), true) ? local.iter_387 : {
    output = (local.code_388[0] == "."
      ? "${local.iter_387.output}${join("", [for _ in range(local.code_388[1]) : jsondecode(format("\"\\u%04x\"", local.iter_387.tape[local.iter_387.tape_ptr]))])}"
      : local.iter_387.output)
    
    tape = (
      local.code_388[0] == "+"
        ? [for i, b in local.iter_387.tape : (i == local.iter_387.tape_ptr ? (b + local.code_388[1]) % 256 : b)] :
      local.code_388[0] == "-"
        ? [for i, b in local.iter_387.tape : (i == local.iter_387.tape_ptr ? (b - local.code_388[1] + 256) % 256 : b)] :
      local.code_388[0] == ","
        ? [for i, b in local.iter_387.tape : (i == local.iter_387.tape_ptr ? local.ascii_lookup[substr(local.input_388, 0, 1)] : b)]
        : local.iter_387.tape)

    tape_ptr = (
      local.code_388[0] == "<"
        ? local.iter_387.tape_ptr - local.code_388[1] :
      local.code_388[0] == ">"
        ? local.iter_387.tape_ptr + local.code_388[1]
        : local.iter_387.tape_ptr)

    code_ptr = 2 + (
      local.code_388[0] == "["
        ? local.iter_387.tape[local.iter_387.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_387.code_ptr)] : local.iter_387.code_ptr :
      local.code_388[0] == "]"
        ? local.iter_387.tape[local.iter_387.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_387.code_ptr)] : local.iter_387.code_ptr
        : local.iter_387.code_ptr)

    steps_taken = 1 + local.iter_387.steps_taken
  }
}

locals {
  code_389 = (try(local.iter_388.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_388.code_ptr, local.iter_388.code_ptr + 2)
    : [null])

  input_389 = (local.code_389[0] == ","
    ? substr(local.input_388, local.code_389[1], -1)
    : local.input_388)

  iter_389 = try(local.iter_388.code_ptr >= length(var.code), true) ? local.iter_388 : {
    output = (local.code_389[0] == "."
      ? "${local.iter_388.output}${join("", [for _ in range(local.code_389[1]) : jsondecode(format("\"\\u%04x\"", local.iter_388.tape[local.iter_388.tape_ptr]))])}"
      : local.iter_388.output)
    
    tape = (
      local.code_389[0] == "+"
        ? [for i, b in local.iter_388.tape : (i == local.iter_388.tape_ptr ? (b + local.code_389[1]) % 256 : b)] :
      local.code_389[0] == "-"
        ? [for i, b in local.iter_388.tape : (i == local.iter_388.tape_ptr ? (b - local.code_389[1] + 256) % 256 : b)] :
      local.code_389[0] == ","
        ? [for i, b in local.iter_388.tape : (i == local.iter_388.tape_ptr ? local.ascii_lookup[substr(local.input_389, 0, 1)] : b)]
        : local.iter_388.tape)

    tape_ptr = (
      local.code_389[0] == "<"
        ? local.iter_388.tape_ptr - local.code_389[1] :
      local.code_389[0] == ">"
        ? local.iter_388.tape_ptr + local.code_389[1]
        : local.iter_388.tape_ptr)

    code_ptr = 2 + (
      local.code_389[0] == "["
        ? local.iter_388.tape[local.iter_388.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_388.code_ptr)] : local.iter_388.code_ptr :
      local.code_389[0] == "]"
        ? local.iter_388.tape[local.iter_388.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_388.code_ptr)] : local.iter_388.code_ptr
        : local.iter_388.code_ptr)

    steps_taken = 1 + local.iter_388.steps_taken
  }
}

locals {
  code_390 = (try(local.iter_389.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_389.code_ptr, local.iter_389.code_ptr + 2)
    : [null])

  input_390 = (local.code_390[0] == ","
    ? substr(local.input_389, local.code_390[1], -1)
    : local.input_389)

  iter_390 = try(local.iter_389.code_ptr >= length(var.code), true) ? local.iter_389 : {
    output = (local.code_390[0] == "."
      ? "${local.iter_389.output}${join("", [for _ in range(local.code_390[1]) : jsondecode(format("\"\\u%04x\"", local.iter_389.tape[local.iter_389.tape_ptr]))])}"
      : local.iter_389.output)
    
    tape = (
      local.code_390[0] == "+"
        ? [for i, b in local.iter_389.tape : (i == local.iter_389.tape_ptr ? (b + local.code_390[1]) % 256 : b)] :
      local.code_390[0] == "-"
        ? [for i, b in local.iter_389.tape : (i == local.iter_389.tape_ptr ? (b - local.code_390[1] + 256) % 256 : b)] :
      local.code_390[0] == ","
        ? [for i, b in local.iter_389.tape : (i == local.iter_389.tape_ptr ? local.ascii_lookup[substr(local.input_390, 0, 1)] : b)]
        : local.iter_389.tape)

    tape_ptr = (
      local.code_390[0] == "<"
        ? local.iter_389.tape_ptr - local.code_390[1] :
      local.code_390[0] == ">"
        ? local.iter_389.tape_ptr + local.code_390[1]
        : local.iter_389.tape_ptr)

    code_ptr = 2 + (
      local.code_390[0] == "["
        ? local.iter_389.tape[local.iter_389.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_389.code_ptr)] : local.iter_389.code_ptr :
      local.code_390[0] == "]"
        ? local.iter_389.tape[local.iter_389.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_389.code_ptr)] : local.iter_389.code_ptr
        : local.iter_389.code_ptr)

    steps_taken = 1 + local.iter_389.steps_taken
  }
}

locals {
  code_391 = (try(local.iter_390.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_390.code_ptr, local.iter_390.code_ptr + 2)
    : [null])

  input_391 = (local.code_391[0] == ","
    ? substr(local.input_390, local.code_391[1], -1)
    : local.input_390)

  iter_391 = try(local.iter_390.code_ptr >= length(var.code), true) ? local.iter_390 : {
    output = (local.code_391[0] == "."
      ? "${local.iter_390.output}${join("", [for _ in range(local.code_391[1]) : jsondecode(format("\"\\u%04x\"", local.iter_390.tape[local.iter_390.tape_ptr]))])}"
      : local.iter_390.output)
    
    tape = (
      local.code_391[0] == "+"
        ? [for i, b in local.iter_390.tape : (i == local.iter_390.tape_ptr ? (b + local.code_391[1]) % 256 : b)] :
      local.code_391[0] == "-"
        ? [for i, b in local.iter_390.tape : (i == local.iter_390.tape_ptr ? (b - local.code_391[1] + 256) % 256 : b)] :
      local.code_391[0] == ","
        ? [for i, b in local.iter_390.tape : (i == local.iter_390.tape_ptr ? local.ascii_lookup[substr(local.input_391, 0, 1)] : b)]
        : local.iter_390.tape)

    tape_ptr = (
      local.code_391[0] == "<"
        ? local.iter_390.tape_ptr - local.code_391[1] :
      local.code_391[0] == ">"
        ? local.iter_390.tape_ptr + local.code_391[1]
        : local.iter_390.tape_ptr)

    code_ptr = 2 + (
      local.code_391[0] == "["
        ? local.iter_390.tape[local.iter_390.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_390.code_ptr)] : local.iter_390.code_ptr :
      local.code_391[0] == "]"
        ? local.iter_390.tape[local.iter_390.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_390.code_ptr)] : local.iter_390.code_ptr
        : local.iter_390.code_ptr)

    steps_taken = 1 + local.iter_390.steps_taken
  }
}

locals {
  code_392 = (try(local.iter_391.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_391.code_ptr, local.iter_391.code_ptr + 2)
    : [null])

  input_392 = (local.code_392[0] == ","
    ? substr(local.input_391, local.code_392[1], -1)
    : local.input_391)

  iter_392 = try(local.iter_391.code_ptr >= length(var.code), true) ? local.iter_391 : {
    output = (local.code_392[0] == "."
      ? "${local.iter_391.output}${join("", [for _ in range(local.code_392[1]) : jsondecode(format("\"\\u%04x\"", local.iter_391.tape[local.iter_391.tape_ptr]))])}"
      : local.iter_391.output)
    
    tape = (
      local.code_392[0] == "+"
        ? [for i, b in local.iter_391.tape : (i == local.iter_391.tape_ptr ? (b + local.code_392[1]) % 256 : b)] :
      local.code_392[0] == "-"
        ? [for i, b in local.iter_391.tape : (i == local.iter_391.tape_ptr ? (b - local.code_392[1] + 256) % 256 : b)] :
      local.code_392[0] == ","
        ? [for i, b in local.iter_391.tape : (i == local.iter_391.tape_ptr ? local.ascii_lookup[substr(local.input_392, 0, 1)] : b)]
        : local.iter_391.tape)

    tape_ptr = (
      local.code_392[0] == "<"
        ? local.iter_391.tape_ptr - local.code_392[1] :
      local.code_392[0] == ">"
        ? local.iter_391.tape_ptr + local.code_392[1]
        : local.iter_391.tape_ptr)

    code_ptr = 2 + (
      local.code_392[0] == "["
        ? local.iter_391.tape[local.iter_391.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_391.code_ptr)] : local.iter_391.code_ptr :
      local.code_392[0] == "]"
        ? local.iter_391.tape[local.iter_391.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_391.code_ptr)] : local.iter_391.code_ptr
        : local.iter_391.code_ptr)

    steps_taken = 1 + local.iter_391.steps_taken
  }
}

locals {
  code_393 = (try(local.iter_392.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_392.code_ptr, local.iter_392.code_ptr + 2)
    : [null])

  input_393 = (local.code_393[0] == ","
    ? substr(local.input_392, local.code_393[1], -1)
    : local.input_392)

  iter_393 = try(local.iter_392.code_ptr >= length(var.code), true) ? local.iter_392 : {
    output = (local.code_393[0] == "."
      ? "${local.iter_392.output}${join("", [for _ in range(local.code_393[1]) : jsondecode(format("\"\\u%04x\"", local.iter_392.tape[local.iter_392.tape_ptr]))])}"
      : local.iter_392.output)
    
    tape = (
      local.code_393[0] == "+"
        ? [for i, b in local.iter_392.tape : (i == local.iter_392.tape_ptr ? (b + local.code_393[1]) % 256 : b)] :
      local.code_393[0] == "-"
        ? [for i, b in local.iter_392.tape : (i == local.iter_392.tape_ptr ? (b - local.code_393[1] + 256) % 256 : b)] :
      local.code_393[0] == ","
        ? [for i, b in local.iter_392.tape : (i == local.iter_392.tape_ptr ? local.ascii_lookup[substr(local.input_393, 0, 1)] : b)]
        : local.iter_392.tape)

    tape_ptr = (
      local.code_393[0] == "<"
        ? local.iter_392.tape_ptr - local.code_393[1] :
      local.code_393[0] == ">"
        ? local.iter_392.tape_ptr + local.code_393[1]
        : local.iter_392.tape_ptr)

    code_ptr = 2 + (
      local.code_393[0] == "["
        ? local.iter_392.tape[local.iter_392.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_392.code_ptr)] : local.iter_392.code_ptr :
      local.code_393[0] == "]"
        ? local.iter_392.tape[local.iter_392.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_392.code_ptr)] : local.iter_392.code_ptr
        : local.iter_392.code_ptr)

    steps_taken = 1 + local.iter_392.steps_taken
  }
}

locals {
  code_394 = (try(local.iter_393.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_393.code_ptr, local.iter_393.code_ptr + 2)
    : [null])

  input_394 = (local.code_394[0] == ","
    ? substr(local.input_393, local.code_394[1], -1)
    : local.input_393)

  iter_394 = try(local.iter_393.code_ptr >= length(var.code), true) ? local.iter_393 : {
    output = (local.code_394[0] == "."
      ? "${local.iter_393.output}${join("", [for _ in range(local.code_394[1]) : jsondecode(format("\"\\u%04x\"", local.iter_393.tape[local.iter_393.tape_ptr]))])}"
      : local.iter_393.output)
    
    tape = (
      local.code_394[0] == "+"
        ? [for i, b in local.iter_393.tape : (i == local.iter_393.tape_ptr ? (b + local.code_394[1]) % 256 : b)] :
      local.code_394[0] == "-"
        ? [for i, b in local.iter_393.tape : (i == local.iter_393.tape_ptr ? (b - local.code_394[1] + 256) % 256 : b)] :
      local.code_394[0] == ","
        ? [for i, b in local.iter_393.tape : (i == local.iter_393.tape_ptr ? local.ascii_lookup[substr(local.input_394, 0, 1)] : b)]
        : local.iter_393.tape)

    tape_ptr = (
      local.code_394[0] == "<"
        ? local.iter_393.tape_ptr - local.code_394[1] :
      local.code_394[0] == ">"
        ? local.iter_393.tape_ptr + local.code_394[1]
        : local.iter_393.tape_ptr)

    code_ptr = 2 + (
      local.code_394[0] == "["
        ? local.iter_393.tape[local.iter_393.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_393.code_ptr)] : local.iter_393.code_ptr :
      local.code_394[0] == "]"
        ? local.iter_393.tape[local.iter_393.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_393.code_ptr)] : local.iter_393.code_ptr
        : local.iter_393.code_ptr)

    steps_taken = 1 + local.iter_393.steps_taken
  }
}

locals {
  code_395 = (try(local.iter_394.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_394.code_ptr, local.iter_394.code_ptr + 2)
    : [null])

  input_395 = (local.code_395[0] == ","
    ? substr(local.input_394, local.code_395[1], -1)
    : local.input_394)

  iter_395 = try(local.iter_394.code_ptr >= length(var.code), true) ? local.iter_394 : {
    output = (local.code_395[0] == "."
      ? "${local.iter_394.output}${join("", [for _ in range(local.code_395[1]) : jsondecode(format("\"\\u%04x\"", local.iter_394.tape[local.iter_394.tape_ptr]))])}"
      : local.iter_394.output)
    
    tape = (
      local.code_395[0] == "+"
        ? [for i, b in local.iter_394.tape : (i == local.iter_394.tape_ptr ? (b + local.code_395[1]) % 256 : b)] :
      local.code_395[0] == "-"
        ? [for i, b in local.iter_394.tape : (i == local.iter_394.tape_ptr ? (b - local.code_395[1] + 256) % 256 : b)] :
      local.code_395[0] == ","
        ? [for i, b in local.iter_394.tape : (i == local.iter_394.tape_ptr ? local.ascii_lookup[substr(local.input_395, 0, 1)] : b)]
        : local.iter_394.tape)

    tape_ptr = (
      local.code_395[0] == "<"
        ? local.iter_394.tape_ptr - local.code_395[1] :
      local.code_395[0] == ">"
        ? local.iter_394.tape_ptr + local.code_395[1]
        : local.iter_394.tape_ptr)

    code_ptr = 2 + (
      local.code_395[0] == "["
        ? local.iter_394.tape[local.iter_394.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_394.code_ptr)] : local.iter_394.code_ptr :
      local.code_395[0] == "]"
        ? local.iter_394.tape[local.iter_394.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_394.code_ptr)] : local.iter_394.code_ptr
        : local.iter_394.code_ptr)

    steps_taken = 1 + local.iter_394.steps_taken
  }
}

locals {
  code_396 = (try(local.iter_395.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_395.code_ptr, local.iter_395.code_ptr + 2)
    : [null])

  input_396 = (local.code_396[0] == ","
    ? substr(local.input_395, local.code_396[1], -1)
    : local.input_395)

  iter_396 = try(local.iter_395.code_ptr >= length(var.code), true) ? local.iter_395 : {
    output = (local.code_396[0] == "."
      ? "${local.iter_395.output}${join("", [for _ in range(local.code_396[1]) : jsondecode(format("\"\\u%04x\"", local.iter_395.tape[local.iter_395.tape_ptr]))])}"
      : local.iter_395.output)
    
    tape = (
      local.code_396[0] == "+"
        ? [for i, b in local.iter_395.tape : (i == local.iter_395.tape_ptr ? (b + local.code_396[1]) % 256 : b)] :
      local.code_396[0] == "-"
        ? [for i, b in local.iter_395.tape : (i == local.iter_395.tape_ptr ? (b - local.code_396[1] + 256) % 256 : b)] :
      local.code_396[0] == ","
        ? [for i, b in local.iter_395.tape : (i == local.iter_395.tape_ptr ? local.ascii_lookup[substr(local.input_396, 0, 1)] : b)]
        : local.iter_395.tape)

    tape_ptr = (
      local.code_396[0] == "<"
        ? local.iter_395.tape_ptr - local.code_396[1] :
      local.code_396[0] == ">"
        ? local.iter_395.tape_ptr + local.code_396[1]
        : local.iter_395.tape_ptr)

    code_ptr = 2 + (
      local.code_396[0] == "["
        ? local.iter_395.tape[local.iter_395.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_395.code_ptr)] : local.iter_395.code_ptr :
      local.code_396[0] == "]"
        ? local.iter_395.tape[local.iter_395.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_395.code_ptr)] : local.iter_395.code_ptr
        : local.iter_395.code_ptr)

    steps_taken = 1 + local.iter_395.steps_taken
  }
}

locals {
  code_397 = (try(local.iter_396.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_396.code_ptr, local.iter_396.code_ptr + 2)
    : [null])

  input_397 = (local.code_397[0] == ","
    ? substr(local.input_396, local.code_397[1], -1)
    : local.input_396)

  iter_397 = try(local.iter_396.code_ptr >= length(var.code), true) ? local.iter_396 : {
    output = (local.code_397[0] == "."
      ? "${local.iter_396.output}${join("", [for _ in range(local.code_397[1]) : jsondecode(format("\"\\u%04x\"", local.iter_396.tape[local.iter_396.tape_ptr]))])}"
      : local.iter_396.output)
    
    tape = (
      local.code_397[0] == "+"
        ? [for i, b in local.iter_396.tape : (i == local.iter_396.tape_ptr ? (b + local.code_397[1]) % 256 : b)] :
      local.code_397[0] == "-"
        ? [for i, b in local.iter_396.tape : (i == local.iter_396.tape_ptr ? (b - local.code_397[1] + 256) % 256 : b)] :
      local.code_397[0] == ","
        ? [for i, b in local.iter_396.tape : (i == local.iter_396.tape_ptr ? local.ascii_lookup[substr(local.input_397, 0, 1)] : b)]
        : local.iter_396.tape)

    tape_ptr = (
      local.code_397[0] == "<"
        ? local.iter_396.tape_ptr - local.code_397[1] :
      local.code_397[0] == ">"
        ? local.iter_396.tape_ptr + local.code_397[1]
        : local.iter_396.tape_ptr)

    code_ptr = 2 + (
      local.code_397[0] == "["
        ? local.iter_396.tape[local.iter_396.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_396.code_ptr)] : local.iter_396.code_ptr :
      local.code_397[0] == "]"
        ? local.iter_396.tape[local.iter_396.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_396.code_ptr)] : local.iter_396.code_ptr
        : local.iter_396.code_ptr)

    steps_taken = 1 + local.iter_396.steps_taken
  }
}

locals {
  code_398 = (try(local.iter_397.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_397.code_ptr, local.iter_397.code_ptr + 2)
    : [null])

  input_398 = (local.code_398[0] == ","
    ? substr(local.input_397, local.code_398[1], -1)
    : local.input_397)

  iter_398 = try(local.iter_397.code_ptr >= length(var.code), true) ? local.iter_397 : {
    output = (local.code_398[0] == "."
      ? "${local.iter_397.output}${join("", [for _ in range(local.code_398[1]) : jsondecode(format("\"\\u%04x\"", local.iter_397.tape[local.iter_397.tape_ptr]))])}"
      : local.iter_397.output)
    
    tape = (
      local.code_398[0] == "+"
        ? [for i, b in local.iter_397.tape : (i == local.iter_397.tape_ptr ? (b + local.code_398[1]) % 256 : b)] :
      local.code_398[0] == "-"
        ? [for i, b in local.iter_397.tape : (i == local.iter_397.tape_ptr ? (b - local.code_398[1] + 256) % 256 : b)] :
      local.code_398[0] == ","
        ? [for i, b in local.iter_397.tape : (i == local.iter_397.tape_ptr ? local.ascii_lookup[substr(local.input_398, 0, 1)] : b)]
        : local.iter_397.tape)

    tape_ptr = (
      local.code_398[0] == "<"
        ? local.iter_397.tape_ptr - local.code_398[1] :
      local.code_398[0] == ">"
        ? local.iter_397.tape_ptr + local.code_398[1]
        : local.iter_397.tape_ptr)

    code_ptr = 2 + (
      local.code_398[0] == "["
        ? local.iter_397.tape[local.iter_397.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_397.code_ptr)] : local.iter_397.code_ptr :
      local.code_398[0] == "]"
        ? local.iter_397.tape[local.iter_397.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_397.code_ptr)] : local.iter_397.code_ptr
        : local.iter_397.code_ptr)

    steps_taken = 1 + local.iter_397.steps_taken
  }
}

locals {
  code_399 = (try(local.iter_398.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_398.code_ptr, local.iter_398.code_ptr + 2)
    : [null])

  input_399 = (local.code_399[0] == ","
    ? substr(local.input_398, local.code_399[1], -1)
    : local.input_398)

  iter_399 = try(local.iter_398.code_ptr >= length(var.code), true) ? local.iter_398 : {
    output = (local.code_399[0] == "."
      ? "${local.iter_398.output}${join("", [for _ in range(local.code_399[1]) : jsondecode(format("\"\\u%04x\"", local.iter_398.tape[local.iter_398.tape_ptr]))])}"
      : local.iter_398.output)
    
    tape = (
      local.code_399[0] == "+"
        ? [for i, b in local.iter_398.tape : (i == local.iter_398.tape_ptr ? (b + local.code_399[1]) % 256 : b)] :
      local.code_399[0] == "-"
        ? [for i, b in local.iter_398.tape : (i == local.iter_398.tape_ptr ? (b - local.code_399[1] + 256) % 256 : b)] :
      local.code_399[0] == ","
        ? [for i, b in local.iter_398.tape : (i == local.iter_398.tape_ptr ? local.ascii_lookup[substr(local.input_399, 0, 1)] : b)]
        : local.iter_398.tape)

    tape_ptr = (
      local.code_399[0] == "<"
        ? local.iter_398.tape_ptr - local.code_399[1] :
      local.code_399[0] == ">"
        ? local.iter_398.tape_ptr + local.code_399[1]
        : local.iter_398.tape_ptr)

    code_ptr = 2 + (
      local.code_399[0] == "["
        ? local.iter_398.tape[local.iter_398.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_398.code_ptr)] : local.iter_398.code_ptr :
      local.code_399[0] == "]"
        ? local.iter_398.tape[local.iter_398.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_398.code_ptr)] : local.iter_398.code_ptr
        : local.iter_398.code_ptr)

    steps_taken = 1 + local.iter_398.steps_taken
  }
}

locals {
  code_400 = (try(local.iter_399.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_399.code_ptr, local.iter_399.code_ptr + 2)
    : [null])

  input_400 = (local.code_400[0] == ","
    ? substr(local.input_399, local.code_400[1], -1)
    : local.input_399)

  iter_400 = try(local.iter_399.code_ptr >= length(var.code), true) ? local.iter_399 : {
    output = (local.code_400[0] == "."
      ? "${local.iter_399.output}${join("", [for _ in range(local.code_400[1]) : jsondecode(format("\"\\u%04x\"", local.iter_399.tape[local.iter_399.tape_ptr]))])}"
      : local.iter_399.output)
    
    tape = (
      local.code_400[0] == "+"
        ? [for i, b in local.iter_399.tape : (i == local.iter_399.tape_ptr ? (b + local.code_400[1]) % 256 : b)] :
      local.code_400[0] == "-"
        ? [for i, b in local.iter_399.tape : (i == local.iter_399.tape_ptr ? (b - local.code_400[1] + 256) % 256 : b)] :
      local.code_400[0] == ","
        ? [for i, b in local.iter_399.tape : (i == local.iter_399.tape_ptr ? local.ascii_lookup[substr(local.input_400, 0, 1)] : b)]
        : local.iter_399.tape)

    tape_ptr = (
      local.code_400[0] == "<"
        ? local.iter_399.tape_ptr - local.code_400[1] :
      local.code_400[0] == ">"
        ? local.iter_399.tape_ptr + local.code_400[1]
        : local.iter_399.tape_ptr)

    code_ptr = 2 + (
      local.code_400[0] == "["
        ? local.iter_399.tape[local.iter_399.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_399.code_ptr)] : local.iter_399.code_ptr :
      local.code_400[0] == "]"
        ? local.iter_399.tape[local.iter_399.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_399.code_ptr)] : local.iter_399.code_ptr
        : local.iter_399.code_ptr)

    steps_taken = 1 + local.iter_399.steps_taken
  }
}

locals {
  code_401 = (try(local.iter_400.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_400.code_ptr, local.iter_400.code_ptr + 2)
    : [null])

  input_401 = (local.code_401[0] == ","
    ? substr(local.input_400, local.code_401[1], -1)
    : local.input_400)

  iter_401 = try(local.iter_400.code_ptr >= length(var.code), true) ? local.iter_400 : {
    output = (local.code_401[0] == "."
      ? "${local.iter_400.output}${join("", [for _ in range(local.code_401[1]) : jsondecode(format("\"\\u%04x\"", local.iter_400.tape[local.iter_400.tape_ptr]))])}"
      : local.iter_400.output)
    
    tape = (
      local.code_401[0] == "+"
        ? [for i, b in local.iter_400.tape : (i == local.iter_400.tape_ptr ? (b + local.code_401[1]) % 256 : b)] :
      local.code_401[0] == "-"
        ? [for i, b in local.iter_400.tape : (i == local.iter_400.tape_ptr ? (b - local.code_401[1] + 256) % 256 : b)] :
      local.code_401[0] == ","
        ? [for i, b in local.iter_400.tape : (i == local.iter_400.tape_ptr ? local.ascii_lookup[substr(local.input_401, 0, 1)] : b)]
        : local.iter_400.tape)

    tape_ptr = (
      local.code_401[0] == "<"
        ? local.iter_400.tape_ptr - local.code_401[1] :
      local.code_401[0] == ">"
        ? local.iter_400.tape_ptr + local.code_401[1]
        : local.iter_400.tape_ptr)

    code_ptr = 2 + (
      local.code_401[0] == "["
        ? local.iter_400.tape[local.iter_400.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_400.code_ptr)] : local.iter_400.code_ptr :
      local.code_401[0] == "]"
        ? local.iter_400.tape[local.iter_400.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_400.code_ptr)] : local.iter_400.code_ptr
        : local.iter_400.code_ptr)

    steps_taken = 1 + local.iter_400.steps_taken
  }
}

locals {
  code_402 = (try(local.iter_401.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_401.code_ptr, local.iter_401.code_ptr + 2)
    : [null])

  input_402 = (local.code_402[0] == ","
    ? substr(local.input_401, local.code_402[1], -1)
    : local.input_401)

  iter_402 = try(local.iter_401.code_ptr >= length(var.code), true) ? local.iter_401 : {
    output = (local.code_402[0] == "."
      ? "${local.iter_401.output}${join("", [for _ in range(local.code_402[1]) : jsondecode(format("\"\\u%04x\"", local.iter_401.tape[local.iter_401.tape_ptr]))])}"
      : local.iter_401.output)
    
    tape = (
      local.code_402[0] == "+"
        ? [for i, b in local.iter_401.tape : (i == local.iter_401.tape_ptr ? (b + local.code_402[1]) % 256 : b)] :
      local.code_402[0] == "-"
        ? [for i, b in local.iter_401.tape : (i == local.iter_401.tape_ptr ? (b - local.code_402[1] + 256) % 256 : b)] :
      local.code_402[0] == ","
        ? [for i, b in local.iter_401.tape : (i == local.iter_401.tape_ptr ? local.ascii_lookup[substr(local.input_402, 0, 1)] : b)]
        : local.iter_401.tape)

    tape_ptr = (
      local.code_402[0] == "<"
        ? local.iter_401.tape_ptr - local.code_402[1] :
      local.code_402[0] == ">"
        ? local.iter_401.tape_ptr + local.code_402[1]
        : local.iter_401.tape_ptr)

    code_ptr = 2 + (
      local.code_402[0] == "["
        ? local.iter_401.tape[local.iter_401.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_401.code_ptr)] : local.iter_401.code_ptr :
      local.code_402[0] == "]"
        ? local.iter_401.tape[local.iter_401.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_401.code_ptr)] : local.iter_401.code_ptr
        : local.iter_401.code_ptr)

    steps_taken = 1 + local.iter_401.steps_taken
  }
}

locals {
  code_403 = (try(local.iter_402.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_402.code_ptr, local.iter_402.code_ptr + 2)
    : [null])

  input_403 = (local.code_403[0] == ","
    ? substr(local.input_402, local.code_403[1], -1)
    : local.input_402)

  iter_403 = try(local.iter_402.code_ptr >= length(var.code), true) ? local.iter_402 : {
    output = (local.code_403[0] == "."
      ? "${local.iter_402.output}${join("", [for _ in range(local.code_403[1]) : jsondecode(format("\"\\u%04x\"", local.iter_402.tape[local.iter_402.tape_ptr]))])}"
      : local.iter_402.output)
    
    tape = (
      local.code_403[0] == "+"
        ? [for i, b in local.iter_402.tape : (i == local.iter_402.tape_ptr ? (b + local.code_403[1]) % 256 : b)] :
      local.code_403[0] == "-"
        ? [for i, b in local.iter_402.tape : (i == local.iter_402.tape_ptr ? (b - local.code_403[1] + 256) % 256 : b)] :
      local.code_403[0] == ","
        ? [for i, b in local.iter_402.tape : (i == local.iter_402.tape_ptr ? local.ascii_lookup[substr(local.input_403, 0, 1)] : b)]
        : local.iter_402.tape)

    tape_ptr = (
      local.code_403[0] == "<"
        ? local.iter_402.tape_ptr - local.code_403[1] :
      local.code_403[0] == ">"
        ? local.iter_402.tape_ptr + local.code_403[1]
        : local.iter_402.tape_ptr)

    code_ptr = 2 + (
      local.code_403[0] == "["
        ? local.iter_402.tape[local.iter_402.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_402.code_ptr)] : local.iter_402.code_ptr :
      local.code_403[0] == "]"
        ? local.iter_402.tape[local.iter_402.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_402.code_ptr)] : local.iter_402.code_ptr
        : local.iter_402.code_ptr)

    steps_taken = 1 + local.iter_402.steps_taken
  }
}

locals {
  code_404 = (try(local.iter_403.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_403.code_ptr, local.iter_403.code_ptr + 2)
    : [null])

  input_404 = (local.code_404[0] == ","
    ? substr(local.input_403, local.code_404[1], -1)
    : local.input_403)

  iter_404 = try(local.iter_403.code_ptr >= length(var.code), true) ? local.iter_403 : {
    output = (local.code_404[0] == "."
      ? "${local.iter_403.output}${join("", [for _ in range(local.code_404[1]) : jsondecode(format("\"\\u%04x\"", local.iter_403.tape[local.iter_403.tape_ptr]))])}"
      : local.iter_403.output)
    
    tape = (
      local.code_404[0] == "+"
        ? [for i, b in local.iter_403.tape : (i == local.iter_403.tape_ptr ? (b + local.code_404[1]) % 256 : b)] :
      local.code_404[0] == "-"
        ? [for i, b in local.iter_403.tape : (i == local.iter_403.tape_ptr ? (b - local.code_404[1] + 256) % 256 : b)] :
      local.code_404[0] == ","
        ? [for i, b in local.iter_403.tape : (i == local.iter_403.tape_ptr ? local.ascii_lookup[substr(local.input_404, 0, 1)] : b)]
        : local.iter_403.tape)

    tape_ptr = (
      local.code_404[0] == "<"
        ? local.iter_403.tape_ptr - local.code_404[1] :
      local.code_404[0] == ">"
        ? local.iter_403.tape_ptr + local.code_404[1]
        : local.iter_403.tape_ptr)

    code_ptr = 2 + (
      local.code_404[0] == "["
        ? local.iter_403.tape[local.iter_403.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_403.code_ptr)] : local.iter_403.code_ptr :
      local.code_404[0] == "]"
        ? local.iter_403.tape[local.iter_403.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_403.code_ptr)] : local.iter_403.code_ptr
        : local.iter_403.code_ptr)

    steps_taken = 1 + local.iter_403.steps_taken
  }
}

locals {
  code_405 = (try(local.iter_404.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_404.code_ptr, local.iter_404.code_ptr + 2)
    : [null])

  input_405 = (local.code_405[0] == ","
    ? substr(local.input_404, local.code_405[1], -1)
    : local.input_404)

  iter_405 = try(local.iter_404.code_ptr >= length(var.code), true) ? local.iter_404 : {
    output = (local.code_405[0] == "."
      ? "${local.iter_404.output}${join("", [for _ in range(local.code_405[1]) : jsondecode(format("\"\\u%04x\"", local.iter_404.tape[local.iter_404.tape_ptr]))])}"
      : local.iter_404.output)
    
    tape = (
      local.code_405[0] == "+"
        ? [for i, b in local.iter_404.tape : (i == local.iter_404.tape_ptr ? (b + local.code_405[1]) % 256 : b)] :
      local.code_405[0] == "-"
        ? [for i, b in local.iter_404.tape : (i == local.iter_404.tape_ptr ? (b - local.code_405[1] + 256) % 256 : b)] :
      local.code_405[0] == ","
        ? [for i, b in local.iter_404.tape : (i == local.iter_404.tape_ptr ? local.ascii_lookup[substr(local.input_405, 0, 1)] : b)]
        : local.iter_404.tape)

    tape_ptr = (
      local.code_405[0] == "<"
        ? local.iter_404.tape_ptr - local.code_405[1] :
      local.code_405[0] == ">"
        ? local.iter_404.tape_ptr + local.code_405[1]
        : local.iter_404.tape_ptr)

    code_ptr = 2 + (
      local.code_405[0] == "["
        ? local.iter_404.tape[local.iter_404.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_404.code_ptr)] : local.iter_404.code_ptr :
      local.code_405[0] == "]"
        ? local.iter_404.tape[local.iter_404.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_404.code_ptr)] : local.iter_404.code_ptr
        : local.iter_404.code_ptr)

    steps_taken = 1 + local.iter_404.steps_taken
  }
}

locals {
  code_406 = (try(local.iter_405.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_405.code_ptr, local.iter_405.code_ptr + 2)
    : [null])

  input_406 = (local.code_406[0] == ","
    ? substr(local.input_405, local.code_406[1], -1)
    : local.input_405)

  iter_406 = try(local.iter_405.code_ptr >= length(var.code), true) ? local.iter_405 : {
    output = (local.code_406[0] == "."
      ? "${local.iter_405.output}${join("", [for _ in range(local.code_406[1]) : jsondecode(format("\"\\u%04x\"", local.iter_405.tape[local.iter_405.tape_ptr]))])}"
      : local.iter_405.output)
    
    tape = (
      local.code_406[0] == "+"
        ? [for i, b in local.iter_405.tape : (i == local.iter_405.tape_ptr ? (b + local.code_406[1]) % 256 : b)] :
      local.code_406[0] == "-"
        ? [for i, b in local.iter_405.tape : (i == local.iter_405.tape_ptr ? (b - local.code_406[1] + 256) % 256 : b)] :
      local.code_406[0] == ","
        ? [for i, b in local.iter_405.tape : (i == local.iter_405.tape_ptr ? local.ascii_lookup[substr(local.input_406, 0, 1)] : b)]
        : local.iter_405.tape)

    tape_ptr = (
      local.code_406[0] == "<"
        ? local.iter_405.tape_ptr - local.code_406[1] :
      local.code_406[0] == ">"
        ? local.iter_405.tape_ptr + local.code_406[1]
        : local.iter_405.tape_ptr)

    code_ptr = 2 + (
      local.code_406[0] == "["
        ? local.iter_405.tape[local.iter_405.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_405.code_ptr)] : local.iter_405.code_ptr :
      local.code_406[0] == "]"
        ? local.iter_405.tape[local.iter_405.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_405.code_ptr)] : local.iter_405.code_ptr
        : local.iter_405.code_ptr)

    steps_taken = 1 + local.iter_405.steps_taken
  }
}

locals {
  code_407 = (try(local.iter_406.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_406.code_ptr, local.iter_406.code_ptr + 2)
    : [null])

  input_407 = (local.code_407[0] == ","
    ? substr(local.input_406, local.code_407[1], -1)
    : local.input_406)

  iter_407 = try(local.iter_406.code_ptr >= length(var.code), true) ? local.iter_406 : {
    output = (local.code_407[0] == "."
      ? "${local.iter_406.output}${join("", [for _ in range(local.code_407[1]) : jsondecode(format("\"\\u%04x\"", local.iter_406.tape[local.iter_406.tape_ptr]))])}"
      : local.iter_406.output)
    
    tape = (
      local.code_407[0] == "+"
        ? [for i, b in local.iter_406.tape : (i == local.iter_406.tape_ptr ? (b + local.code_407[1]) % 256 : b)] :
      local.code_407[0] == "-"
        ? [for i, b in local.iter_406.tape : (i == local.iter_406.tape_ptr ? (b - local.code_407[1] + 256) % 256 : b)] :
      local.code_407[0] == ","
        ? [for i, b in local.iter_406.tape : (i == local.iter_406.tape_ptr ? local.ascii_lookup[substr(local.input_407, 0, 1)] : b)]
        : local.iter_406.tape)

    tape_ptr = (
      local.code_407[0] == "<"
        ? local.iter_406.tape_ptr - local.code_407[1] :
      local.code_407[0] == ">"
        ? local.iter_406.tape_ptr + local.code_407[1]
        : local.iter_406.tape_ptr)

    code_ptr = 2 + (
      local.code_407[0] == "["
        ? local.iter_406.tape[local.iter_406.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_406.code_ptr)] : local.iter_406.code_ptr :
      local.code_407[0] == "]"
        ? local.iter_406.tape[local.iter_406.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_406.code_ptr)] : local.iter_406.code_ptr
        : local.iter_406.code_ptr)

    steps_taken = 1 + local.iter_406.steps_taken
  }
}

locals {
  code_408 = (try(local.iter_407.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_407.code_ptr, local.iter_407.code_ptr + 2)
    : [null])

  input_408 = (local.code_408[0] == ","
    ? substr(local.input_407, local.code_408[1], -1)
    : local.input_407)

  iter_408 = try(local.iter_407.code_ptr >= length(var.code), true) ? local.iter_407 : {
    output = (local.code_408[0] == "."
      ? "${local.iter_407.output}${join("", [for _ in range(local.code_408[1]) : jsondecode(format("\"\\u%04x\"", local.iter_407.tape[local.iter_407.tape_ptr]))])}"
      : local.iter_407.output)
    
    tape = (
      local.code_408[0] == "+"
        ? [for i, b in local.iter_407.tape : (i == local.iter_407.tape_ptr ? (b + local.code_408[1]) % 256 : b)] :
      local.code_408[0] == "-"
        ? [for i, b in local.iter_407.tape : (i == local.iter_407.tape_ptr ? (b - local.code_408[1] + 256) % 256 : b)] :
      local.code_408[0] == ","
        ? [for i, b in local.iter_407.tape : (i == local.iter_407.tape_ptr ? local.ascii_lookup[substr(local.input_408, 0, 1)] : b)]
        : local.iter_407.tape)

    tape_ptr = (
      local.code_408[0] == "<"
        ? local.iter_407.tape_ptr - local.code_408[1] :
      local.code_408[0] == ">"
        ? local.iter_407.tape_ptr + local.code_408[1]
        : local.iter_407.tape_ptr)

    code_ptr = 2 + (
      local.code_408[0] == "["
        ? local.iter_407.tape[local.iter_407.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_407.code_ptr)] : local.iter_407.code_ptr :
      local.code_408[0] == "]"
        ? local.iter_407.tape[local.iter_407.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_407.code_ptr)] : local.iter_407.code_ptr
        : local.iter_407.code_ptr)

    steps_taken = 1 + local.iter_407.steps_taken
  }
}

locals {
  code_409 = (try(local.iter_408.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_408.code_ptr, local.iter_408.code_ptr + 2)
    : [null])

  input_409 = (local.code_409[0] == ","
    ? substr(local.input_408, local.code_409[1], -1)
    : local.input_408)

  iter_409 = try(local.iter_408.code_ptr >= length(var.code), true) ? local.iter_408 : {
    output = (local.code_409[0] == "."
      ? "${local.iter_408.output}${join("", [for _ in range(local.code_409[1]) : jsondecode(format("\"\\u%04x\"", local.iter_408.tape[local.iter_408.tape_ptr]))])}"
      : local.iter_408.output)
    
    tape = (
      local.code_409[0] == "+"
        ? [for i, b in local.iter_408.tape : (i == local.iter_408.tape_ptr ? (b + local.code_409[1]) % 256 : b)] :
      local.code_409[0] == "-"
        ? [for i, b in local.iter_408.tape : (i == local.iter_408.tape_ptr ? (b - local.code_409[1] + 256) % 256 : b)] :
      local.code_409[0] == ","
        ? [for i, b in local.iter_408.tape : (i == local.iter_408.tape_ptr ? local.ascii_lookup[substr(local.input_409, 0, 1)] : b)]
        : local.iter_408.tape)

    tape_ptr = (
      local.code_409[0] == "<"
        ? local.iter_408.tape_ptr - local.code_409[1] :
      local.code_409[0] == ">"
        ? local.iter_408.tape_ptr + local.code_409[1]
        : local.iter_408.tape_ptr)

    code_ptr = 2 + (
      local.code_409[0] == "["
        ? local.iter_408.tape[local.iter_408.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_408.code_ptr)] : local.iter_408.code_ptr :
      local.code_409[0] == "]"
        ? local.iter_408.tape[local.iter_408.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_408.code_ptr)] : local.iter_408.code_ptr
        : local.iter_408.code_ptr)

    steps_taken = 1 + local.iter_408.steps_taken
  }
}

locals {
  code_410 = (try(local.iter_409.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_409.code_ptr, local.iter_409.code_ptr + 2)
    : [null])

  input_410 = (local.code_410[0] == ","
    ? substr(local.input_409, local.code_410[1], -1)
    : local.input_409)

  iter_410 = try(local.iter_409.code_ptr >= length(var.code), true) ? local.iter_409 : {
    output = (local.code_410[0] == "."
      ? "${local.iter_409.output}${join("", [for _ in range(local.code_410[1]) : jsondecode(format("\"\\u%04x\"", local.iter_409.tape[local.iter_409.tape_ptr]))])}"
      : local.iter_409.output)
    
    tape = (
      local.code_410[0] == "+"
        ? [for i, b in local.iter_409.tape : (i == local.iter_409.tape_ptr ? (b + local.code_410[1]) % 256 : b)] :
      local.code_410[0] == "-"
        ? [for i, b in local.iter_409.tape : (i == local.iter_409.tape_ptr ? (b - local.code_410[1] + 256) % 256 : b)] :
      local.code_410[0] == ","
        ? [for i, b in local.iter_409.tape : (i == local.iter_409.tape_ptr ? local.ascii_lookup[substr(local.input_410, 0, 1)] : b)]
        : local.iter_409.tape)

    tape_ptr = (
      local.code_410[0] == "<"
        ? local.iter_409.tape_ptr - local.code_410[1] :
      local.code_410[0] == ">"
        ? local.iter_409.tape_ptr + local.code_410[1]
        : local.iter_409.tape_ptr)

    code_ptr = 2 + (
      local.code_410[0] == "["
        ? local.iter_409.tape[local.iter_409.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_409.code_ptr)] : local.iter_409.code_ptr :
      local.code_410[0] == "]"
        ? local.iter_409.tape[local.iter_409.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_409.code_ptr)] : local.iter_409.code_ptr
        : local.iter_409.code_ptr)

    steps_taken = 1 + local.iter_409.steps_taken
  }
}

locals {
  code_411 = (try(local.iter_410.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_410.code_ptr, local.iter_410.code_ptr + 2)
    : [null])

  input_411 = (local.code_411[0] == ","
    ? substr(local.input_410, local.code_411[1], -1)
    : local.input_410)

  iter_411 = try(local.iter_410.code_ptr >= length(var.code), true) ? local.iter_410 : {
    output = (local.code_411[0] == "."
      ? "${local.iter_410.output}${join("", [for _ in range(local.code_411[1]) : jsondecode(format("\"\\u%04x\"", local.iter_410.tape[local.iter_410.tape_ptr]))])}"
      : local.iter_410.output)
    
    tape = (
      local.code_411[0] == "+"
        ? [for i, b in local.iter_410.tape : (i == local.iter_410.tape_ptr ? (b + local.code_411[1]) % 256 : b)] :
      local.code_411[0] == "-"
        ? [for i, b in local.iter_410.tape : (i == local.iter_410.tape_ptr ? (b - local.code_411[1] + 256) % 256 : b)] :
      local.code_411[0] == ","
        ? [for i, b in local.iter_410.tape : (i == local.iter_410.tape_ptr ? local.ascii_lookup[substr(local.input_411, 0, 1)] : b)]
        : local.iter_410.tape)

    tape_ptr = (
      local.code_411[0] == "<"
        ? local.iter_410.tape_ptr - local.code_411[1] :
      local.code_411[0] == ">"
        ? local.iter_410.tape_ptr + local.code_411[1]
        : local.iter_410.tape_ptr)

    code_ptr = 2 + (
      local.code_411[0] == "["
        ? local.iter_410.tape[local.iter_410.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_410.code_ptr)] : local.iter_410.code_ptr :
      local.code_411[0] == "]"
        ? local.iter_410.tape[local.iter_410.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_410.code_ptr)] : local.iter_410.code_ptr
        : local.iter_410.code_ptr)

    steps_taken = 1 + local.iter_410.steps_taken
  }
}

locals {
  code_412 = (try(local.iter_411.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_411.code_ptr, local.iter_411.code_ptr + 2)
    : [null])

  input_412 = (local.code_412[0] == ","
    ? substr(local.input_411, local.code_412[1], -1)
    : local.input_411)

  iter_412 = try(local.iter_411.code_ptr >= length(var.code), true) ? local.iter_411 : {
    output = (local.code_412[0] == "."
      ? "${local.iter_411.output}${join("", [for _ in range(local.code_412[1]) : jsondecode(format("\"\\u%04x\"", local.iter_411.tape[local.iter_411.tape_ptr]))])}"
      : local.iter_411.output)
    
    tape = (
      local.code_412[0] == "+"
        ? [for i, b in local.iter_411.tape : (i == local.iter_411.tape_ptr ? (b + local.code_412[1]) % 256 : b)] :
      local.code_412[0] == "-"
        ? [for i, b in local.iter_411.tape : (i == local.iter_411.tape_ptr ? (b - local.code_412[1] + 256) % 256 : b)] :
      local.code_412[0] == ","
        ? [for i, b in local.iter_411.tape : (i == local.iter_411.tape_ptr ? local.ascii_lookup[substr(local.input_412, 0, 1)] : b)]
        : local.iter_411.tape)

    tape_ptr = (
      local.code_412[0] == "<"
        ? local.iter_411.tape_ptr - local.code_412[1] :
      local.code_412[0] == ">"
        ? local.iter_411.tape_ptr + local.code_412[1]
        : local.iter_411.tape_ptr)

    code_ptr = 2 + (
      local.code_412[0] == "["
        ? local.iter_411.tape[local.iter_411.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_411.code_ptr)] : local.iter_411.code_ptr :
      local.code_412[0] == "]"
        ? local.iter_411.tape[local.iter_411.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_411.code_ptr)] : local.iter_411.code_ptr
        : local.iter_411.code_ptr)

    steps_taken = 1 + local.iter_411.steps_taken
  }
}

locals {
  code_413 = (try(local.iter_412.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_412.code_ptr, local.iter_412.code_ptr + 2)
    : [null])

  input_413 = (local.code_413[0] == ","
    ? substr(local.input_412, local.code_413[1], -1)
    : local.input_412)

  iter_413 = try(local.iter_412.code_ptr >= length(var.code), true) ? local.iter_412 : {
    output = (local.code_413[0] == "."
      ? "${local.iter_412.output}${join("", [for _ in range(local.code_413[1]) : jsondecode(format("\"\\u%04x\"", local.iter_412.tape[local.iter_412.tape_ptr]))])}"
      : local.iter_412.output)
    
    tape = (
      local.code_413[0] == "+"
        ? [for i, b in local.iter_412.tape : (i == local.iter_412.tape_ptr ? (b + local.code_413[1]) % 256 : b)] :
      local.code_413[0] == "-"
        ? [for i, b in local.iter_412.tape : (i == local.iter_412.tape_ptr ? (b - local.code_413[1] + 256) % 256 : b)] :
      local.code_413[0] == ","
        ? [for i, b in local.iter_412.tape : (i == local.iter_412.tape_ptr ? local.ascii_lookup[substr(local.input_413, 0, 1)] : b)]
        : local.iter_412.tape)

    tape_ptr = (
      local.code_413[0] == "<"
        ? local.iter_412.tape_ptr - local.code_413[1] :
      local.code_413[0] == ">"
        ? local.iter_412.tape_ptr + local.code_413[1]
        : local.iter_412.tape_ptr)

    code_ptr = 2 + (
      local.code_413[0] == "["
        ? local.iter_412.tape[local.iter_412.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_412.code_ptr)] : local.iter_412.code_ptr :
      local.code_413[0] == "]"
        ? local.iter_412.tape[local.iter_412.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_412.code_ptr)] : local.iter_412.code_ptr
        : local.iter_412.code_ptr)

    steps_taken = 1 + local.iter_412.steps_taken
  }
}

locals {
  code_414 = (try(local.iter_413.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_413.code_ptr, local.iter_413.code_ptr + 2)
    : [null])

  input_414 = (local.code_414[0] == ","
    ? substr(local.input_413, local.code_414[1], -1)
    : local.input_413)

  iter_414 = try(local.iter_413.code_ptr >= length(var.code), true) ? local.iter_413 : {
    output = (local.code_414[0] == "."
      ? "${local.iter_413.output}${join("", [for _ in range(local.code_414[1]) : jsondecode(format("\"\\u%04x\"", local.iter_413.tape[local.iter_413.tape_ptr]))])}"
      : local.iter_413.output)
    
    tape = (
      local.code_414[0] == "+"
        ? [for i, b in local.iter_413.tape : (i == local.iter_413.tape_ptr ? (b + local.code_414[1]) % 256 : b)] :
      local.code_414[0] == "-"
        ? [for i, b in local.iter_413.tape : (i == local.iter_413.tape_ptr ? (b - local.code_414[1] + 256) % 256 : b)] :
      local.code_414[0] == ","
        ? [for i, b in local.iter_413.tape : (i == local.iter_413.tape_ptr ? local.ascii_lookup[substr(local.input_414, 0, 1)] : b)]
        : local.iter_413.tape)

    tape_ptr = (
      local.code_414[0] == "<"
        ? local.iter_413.tape_ptr - local.code_414[1] :
      local.code_414[0] == ">"
        ? local.iter_413.tape_ptr + local.code_414[1]
        : local.iter_413.tape_ptr)

    code_ptr = 2 + (
      local.code_414[0] == "["
        ? local.iter_413.tape[local.iter_413.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_413.code_ptr)] : local.iter_413.code_ptr :
      local.code_414[0] == "]"
        ? local.iter_413.tape[local.iter_413.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_413.code_ptr)] : local.iter_413.code_ptr
        : local.iter_413.code_ptr)

    steps_taken = 1 + local.iter_413.steps_taken
  }
}

locals {
  code_415 = (try(local.iter_414.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_414.code_ptr, local.iter_414.code_ptr + 2)
    : [null])

  input_415 = (local.code_415[0] == ","
    ? substr(local.input_414, local.code_415[1], -1)
    : local.input_414)

  iter_415 = try(local.iter_414.code_ptr >= length(var.code), true) ? local.iter_414 : {
    output = (local.code_415[0] == "."
      ? "${local.iter_414.output}${join("", [for _ in range(local.code_415[1]) : jsondecode(format("\"\\u%04x\"", local.iter_414.tape[local.iter_414.tape_ptr]))])}"
      : local.iter_414.output)
    
    tape = (
      local.code_415[0] == "+"
        ? [for i, b in local.iter_414.tape : (i == local.iter_414.tape_ptr ? (b + local.code_415[1]) % 256 : b)] :
      local.code_415[0] == "-"
        ? [for i, b in local.iter_414.tape : (i == local.iter_414.tape_ptr ? (b - local.code_415[1] + 256) % 256 : b)] :
      local.code_415[0] == ","
        ? [for i, b in local.iter_414.tape : (i == local.iter_414.tape_ptr ? local.ascii_lookup[substr(local.input_415, 0, 1)] : b)]
        : local.iter_414.tape)

    tape_ptr = (
      local.code_415[0] == "<"
        ? local.iter_414.tape_ptr - local.code_415[1] :
      local.code_415[0] == ">"
        ? local.iter_414.tape_ptr + local.code_415[1]
        : local.iter_414.tape_ptr)

    code_ptr = 2 + (
      local.code_415[0] == "["
        ? local.iter_414.tape[local.iter_414.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_414.code_ptr)] : local.iter_414.code_ptr :
      local.code_415[0] == "]"
        ? local.iter_414.tape[local.iter_414.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_414.code_ptr)] : local.iter_414.code_ptr
        : local.iter_414.code_ptr)

    steps_taken = 1 + local.iter_414.steps_taken
  }
}

locals {
  code_416 = (try(local.iter_415.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_415.code_ptr, local.iter_415.code_ptr + 2)
    : [null])

  input_416 = (local.code_416[0] == ","
    ? substr(local.input_415, local.code_416[1], -1)
    : local.input_415)

  iter_416 = try(local.iter_415.code_ptr >= length(var.code), true) ? local.iter_415 : {
    output = (local.code_416[0] == "."
      ? "${local.iter_415.output}${join("", [for _ in range(local.code_416[1]) : jsondecode(format("\"\\u%04x\"", local.iter_415.tape[local.iter_415.tape_ptr]))])}"
      : local.iter_415.output)
    
    tape = (
      local.code_416[0] == "+"
        ? [for i, b in local.iter_415.tape : (i == local.iter_415.tape_ptr ? (b + local.code_416[1]) % 256 : b)] :
      local.code_416[0] == "-"
        ? [for i, b in local.iter_415.tape : (i == local.iter_415.tape_ptr ? (b - local.code_416[1] + 256) % 256 : b)] :
      local.code_416[0] == ","
        ? [for i, b in local.iter_415.tape : (i == local.iter_415.tape_ptr ? local.ascii_lookup[substr(local.input_416, 0, 1)] : b)]
        : local.iter_415.tape)

    tape_ptr = (
      local.code_416[0] == "<"
        ? local.iter_415.tape_ptr - local.code_416[1] :
      local.code_416[0] == ">"
        ? local.iter_415.tape_ptr + local.code_416[1]
        : local.iter_415.tape_ptr)

    code_ptr = 2 + (
      local.code_416[0] == "["
        ? local.iter_415.tape[local.iter_415.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_415.code_ptr)] : local.iter_415.code_ptr :
      local.code_416[0] == "]"
        ? local.iter_415.tape[local.iter_415.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_415.code_ptr)] : local.iter_415.code_ptr
        : local.iter_415.code_ptr)

    steps_taken = 1 + local.iter_415.steps_taken
  }
}

locals {
  code_417 = (try(local.iter_416.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_416.code_ptr, local.iter_416.code_ptr + 2)
    : [null])

  input_417 = (local.code_417[0] == ","
    ? substr(local.input_416, local.code_417[1], -1)
    : local.input_416)

  iter_417 = try(local.iter_416.code_ptr >= length(var.code), true) ? local.iter_416 : {
    output = (local.code_417[0] == "."
      ? "${local.iter_416.output}${join("", [for _ in range(local.code_417[1]) : jsondecode(format("\"\\u%04x\"", local.iter_416.tape[local.iter_416.tape_ptr]))])}"
      : local.iter_416.output)
    
    tape = (
      local.code_417[0] == "+"
        ? [for i, b in local.iter_416.tape : (i == local.iter_416.tape_ptr ? (b + local.code_417[1]) % 256 : b)] :
      local.code_417[0] == "-"
        ? [for i, b in local.iter_416.tape : (i == local.iter_416.tape_ptr ? (b - local.code_417[1] + 256) % 256 : b)] :
      local.code_417[0] == ","
        ? [for i, b in local.iter_416.tape : (i == local.iter_416.tape_ptr ? local.ascii_lookup[substr(local.input_417, 0, 1)] : b)]
        : local.iter_416.tape)

    tape_ptr = (
      local.code_417[0] == "<"
        ? local.iter_416.tape_ptr - local.code_417[1] :
      local.code_417[0] == ">"
        ? local.iter_416.tape_ptr + local.code_417[1]
        : local.iter_416.tape_ptr)

    code_ptr = 2 + (
      local.code_417[0] == "["
        ? local.iter_416.tape[local.iter_416.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_416.code_ptr)] : local.iter_416.code_ptr :
      local.code_417[0] == "]"
        ? local.iter_416.tape[local.iter_416.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_416.code_ptr)] : local.iter_416.code_ptr
        : local.iter_416.code_ptr)

    steps_taken = 1 + local.iter_416.steps_taken
  }
}

locals {
  code_418 = (try(local.iter_417.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_417.code_ptr, local.iter_417.code_ptr + 2)
    : [null])

  input_418 = (local.code_418[0] == ","
    ? substr(local.input_417, local.code_418[1], -1)
    : local.input_417)

  iter_418 = try(local.iter_417.code_ptr >= length(var.code), true) ? local.iter_417 : {
    output = (local.code_418[0] == "."
      ? "${local.iter_417.output}${join("", [for _ in range(local.code_418[1]) : jsondecode(format("\"\\u%04x\"", local.iter_417.tape[local.iter_417.tape_ptr]))])}"
      : local.iter_417.output)
    
    tape = (
      local.code_418[0] == "+"
        ? [for i, b in local.iter_417.tape : (i == local.iter_417.tape_ptr ? (b + local.code_418[1]) % 256 : b)] :
      local.code_418[0] == "-"
        ? [for i, b in local.iter_417.tape : (i == local.iter_417.tape_ptr ? (b - local.code_418[1] + 256) % 256 : b)] :
      local.code_418[0] == ","
        ? [for i, b in local.iter_417.tape : (i == local.iter_417.tape_ptr ? local.ascii_lookup[substr(local.input_418, 0, 1)] : b)]
        : local.iter_417.tape)

    tape_ptr = (
      local.code_418[0] == "<"
        ? local.iter_417.tape_ptr - local.code_418[1] :
      local.code_418[0] == ">"
        ? local.iter_417.tape_ptr + local.code_418[1]
        : local.iter_417.tape_ptr)

    code_ptr = 2 + (
      local.code_418[0] == "["
        ? local.iter_417.tape[local.iter_417.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_417.code_ptr)] : local.iter_417.code_ptr :
      local.code_418[0] == "]"
        ? local.iter_417.tape[local.iter_417.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_417.code_ptr)] : local.iter_417.code_ptr
        : local.iter_417.code_ptr)

    steps_taken = 1 + local.iter_417.steps_taken
  }
}

locals {
  code_419 = (try(local.iter_418.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_418.code_ptr, local.iter_418.code_ptr + 2)
    : [null])

  input_419 = (local.code_419[0] == ","
    ? substr(local.input_418, local.code_419[1], -1)
    : local.input_418)

  iter_419 = try(local.iter_418.code_ptr >= length(var.code), true) ? local.iter_418 : {
    output = (local.code_419[0] == "."
      ? "${local.iter_418.output}${join("", [for _ in range(local.code_419[1]) : jsondecode(format("\"\\u%04x\"", local.iter_418.tape[local.iter_418.tape_ptr]))])}"
      : local.iter_418.output)
    
    tape = (
      local.code_419[0] == "+"
        ? [for i, b in local.iter_418.tape : (i == local.iter_418.tape_ptr ? (b + local.code_419[1]) % 256 : b)] :
      local.code_419[0] == "-"
        ? [for i, b in local.iter_418.tape : (i == local.iter_418.tape_ptr ? (b - local.code_419[1] + 256) % 256 : b)] :
      local.code_419[0] == ","
        ? [for i, b in local.iter_418.tape : (i == local.iter_418.tape_ptr ? local.ascii_lookup[substr(local.input_419, 0, 1)] : b)]
        : local.iter_418.tape)

    tape_ptr = (
      local.code_419[0] == "<"
        ? local.iter_418.tape_ptr - local.code_419[1] :
      local.code_419[0] == ">"
        ? local.iter_418.tape_ptr + local.code_419[1]
        : local.iter_418.tape_ptr)

    code_ptr = 2 + (
      local.code_419[0] == "["
        ? local.iter_418.tape[local.iter_418.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_418.code_ptr)] : local.iter_418.code_ptr :
      local.code_419[0] == "]"
        ? local.iter_418.tape[local.iter_418.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_418.code_ptr)] : local.iter_418.code_ptr
        : local.iter_418.code_ptr)

    steps_taken = 1 + local.iter_418.steps_taken
  }
}

locals {
  code_420 = (try(local.iter_419.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_419.code_ptr, local.iter_419.code_ptr + 2)
    : [null])

  input_420 = (local.code_420[0] == ","
    ? substr(local.input_419, local.code_420[1], -1)
    : local.input_419)

  iter_420 = try(local.iter_419.code_ptr >= length(var.code), true) ? local.iter_419 : {
    output = (local.code_420[0] == "."
      ? "${local.iter_419.output}${join("", [for _ in range(local.code_420[1]) : jsondecode(format("\"\\u%04x\"", local.iter_419.tape[local.iter_419.tape_ptr]))])}"
      : local.iter_419.output)
    
    tape = (
      local.code_420[0] == "+"
        ? [for i, b in local.iter_419.tape : (i == local.iter_419.tape_ptr ? (b + local.code_420[1]) % 256 : b)] :
      local.code_420[0] == "-"
        ? [for i, b in local.iter_419.tape : (i == local.iter_419.tape_ptr ? (b - local.code_420[1] + 256) % 256 : b)] :
      local.code_420[0] == ","
        ? [for i, b in local.iter_419.tape : (i == local.iter_419.tape_ptr ? local.ascii_lookup[substr(local.input_420, 0, 1)] : b)]
        : local.iter_419.tape)

    tape_ptr = (
      local.code_420[0] == "<"
        ? local.iter_419.tape_ptr - local.code_420[1] :
      local.code_420[0] == ">"
        ? local.iter_419.tape_ptr + local.code_420[1]
        : local.iter_419.tape_ptr)

    code_ptr = 2 + (
      local.code_420[0] == "["
        ? local.iter_419.tape[local.iter_419.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_419.code_ptr)] : local.iter_419.code_ptr :
      local.code_420[0] == "]"
        ? local.iter_419.tape[local.iter_419.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_419.code_ptr)] : local.iter_419.code_ptr
        : local.iter_419.code_ptr)

    steps_taken = 1 + local.iter_419.steps_taken
  }
}

locals {
  code_421 = (try(local.iter_420.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_420.code_ptr, local.iter_420.code_ptr + 2)
    : [null])

  input_421 = (local.code_421[0] == ","
    ? substr(local.input_420, local.code_421[1], -1)
    : local.input_420)

  iter_421 = try(local.iter_420.code_ptr >= length(var.code), true) ? local.iter_420 : {
    output = (local.code_421[0] == "."
      ? "${local.iter_420.output}${join("", [for _ in range(local.code_421[1]) : jsondecode(format("\"\\u%04x\"", local.iter_420.tape[local.iter_420.tape_ptr]))])}"
      : local.iter_420.output)
    
    tape = (
      local.code_421[0] == "+"
        ? [for i, b in local.iter_420.tape : (i == local.iter_420.tape_ptr ? (b + local.code_421[1]) % 256 : b)] :
      local.code_421[0] == "-"
        ? [for i, b in local.iter_420.tape : (i == local.iter_420.tape_ptr ? (b - local.code_421[1] + 256) % 256 : b)] :
      local.code_421[0] == ","
        ? [for i, b in local.iter_420.tape : (i == local.iter_420.tape_ptr ? local.ascii_lookup[substr(local.input_421, 0, 1)] : b)]
        : local.iter_420.tape)

    tape_ptr = (
      local.code_421[0] == "<"
        ? local.iter_420.tape_ptr - local.code_421[1] :
      local.code_421[0] == ">"
        ? local.iter_420.tape_ptr + local.code_421[1]
        : local.iter_420.tape_ptr)

    code_ptr = 2 + (
      local.code_421[0] == "["
        ? local.iter_420.tape[local.iter_420.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_420.code_ptr)] : local.iter_420.code_ptr :
      local.code_421[0] == "]"
        ? local.iter_420.tape[local.iter_420.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_420.code_ptr)] : local.iter_420.code_ptr
        : local.iter_420.code_ptr)

    steps_taken = 1 + local.iter_420.steps_taken
  }
}

locals {
  code_422 = (try(local.iter_421.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_421.code_ptr, local.iter_421.code_ptr + 2)
    : [null])

  input_422 = (local.code_422[0] == ","
    ? substr(local.input_421, local.code_422[1], -1)
    : local.input_421)

  iter_422 = try(local.iter_421.code_ptr >= length(var.code), true) ? local.iter_421 : {
    output = (local.code_422[0] == "."
      ? "${local.iter_421.output}${join("", [for _ in range(local.code_422[1]) : jsondecode(format("\"\\u%04x\"", local.iter_421.tape[local.iter_421.tape_ptr]))])}"
      : local.iter_421.output)
    
    tape = (
      local.code_422[0] == "+"
        ? [for i, b in local.iter_421.tape : (i == local.iter_421.tape_ptr ? (b + local.code_422[1]) % 256 : b)] :
      local.code_422[0] == "-"
        ? [for i, b in local.iter_421.tape : (i == local.iter_421.tape_ptr ? (b - local.code_422[1] + 256) % 256 : b)] :
      local.code_422[0] == ","
        ? [for i, b in local.iter_421.tape : (i == local.iter_421.tape_ptr ? local.ascii_lookup[substr(local.input_422, 0, 1)] : b)]
        : local.iter_421.tape)

    tape_ptr = (
      local.code_422[0] == "<"
        ? local.iter_421.tape_ptr - local.code_422[1] :
      local.code_422[0] == ">"
        ? local.iter_421.tape_ptr + local.code_422[1]
        : local.iter_421.tape_ptr)

    code_ptr = 2 + (
      local.code_422[0] == "["
        ? local.iter_421.tape[local.iter_421.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_421.code_ptr)] : local.iter_421.code_ptr :
      local.code_422[0] == "]"
        ? local.iter_421.tape[local.iter_421.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_421.code_ptr)] : local.iter_421.code_ptr
        : local.iter_421.code_ptr)

    steps_taken = 1 + local.iter_421.steps_taken
  }
}

locals {
  code_423 = (try(local.iter_422.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_422.code_ptr, local.iter_422.code_ptr + 2)
    : [null])

  input_423 = (local.code_423[0] == ","
    ? substr(local.input_422, local.code_423[1], -1)
    : local.input_422)

  iter_423 = try(local.iter_422.code_ptr >= length(var.code), true) ? local.iter_422 : {
    output = (local.code_423[0] == "."
      ? "${local.iter_422.output}${join("", [for _ in range(local.code_423[1]) : jsondecode(format("\"\\u%04x\"", local.iter_422.tape[local.iter_422.tape_ptr]))])}"
      : local.iter_422.output)
    
    tape = (
      local.code_423[0] == "+"
        ? [for i, b in local.iter_422.tape : (i == local.iter_422.tape_ptr ? (b + local.code_423[1]) % 256 : b)] :
      local.code_423[0] == "-"
        ? [for i, b in local.iter_422.tape : (i == local.iter_422.tape_ptr ? (b - local.code_423[1] + 256) % 256 : b)] :
      local.code_423[0] == ","
        ? [for i, b in local.iter_422.tape : (i == local.iter_422.tape_ptr ? local.ascii_lookup[substr(local.input_423, 0, 1)] : b)]
        : local.iter_422.tape)

    tape_ptr = (
      local.code_423[0] == "<"
        ? local.iter_422.tape_ptr - local.code_423[1] :
      local.code_423[0] == ">"
        ? local.iter_422.tape_ptr + local.code_423[1]
        : local.iter_422.tape_ptr)

    code_ptr = 2 + (
      local.code_423[0] == "["
        ? local.iter_422.tape[local.iter_422.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_422.code_ptr)] : local.iter_422.code_ptr :
      local.code_423[0] == "]"
        ? local.iter_422.tape[local.iter_422.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_422.code_ptr)] : local.iter_422.code_ptr
        : local.iter_422.code_ptr)

    steps_taken = 1 + local.iter_422.steps_taken
  }
}

locals {
  code_424 = (try(local.iter_423.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_423.code_ptr, local.iter_423.code_ptr + 2)
    : [null])

  input_424 = (local.code_424[0] == ","
    ? substr(local.input_423, local.code_424[1], -1)
    : local.input_423)

  iter_424 = try(local.iter_423.code_ptr >= length(var.code), true) ? local.iter_423 : {
    output = (local.code_424[0] == "."
      ? "${local.iter_423.output}${join("", [for _ in range(local.code_424[1]) : jsondecode(format("\"\\u%04x\"", local.iter_423.tape[local.iter_423.tape_ptr]))])}"
      : local.iter_423.output)
    
    tape = (
      local.code_424[0] == "+"
        ? [for i, b in local.iter_423.tape : (i == local.iter_423.tape_ptr ? (b + local.code_424[1]) % 256 : b)] :
      local.code_424[0] == "-"
        ? [for i, b in local.iter_423.tape : (i == local.iter_423.tape_ptr ? (b - local.code_424[1] + 256) % 256 : b)] :
      local.code_424[0] == ","
        ? [for i, b in local.iter_423.tape : (i == local.iter_423.tape_ptr ? local.ascii_lookup[substr(local.input_424, 0, 1)] : b)]
        : local.iter_423.tape)

    tape_ptr = (
      local.code_424[0] == "<"
        ? local.iter_423.tape_ptr - local.code_424[1] :
      local.code_424[0] == ">"
        ? local.iter_423.tape_ptr + local.code_424[1]
        : local.iter_423.tape_ptr)

    code_ptr = 2 + (
      local.code_424[0] == "["
        ? local.iter_423.tape[local.iter_423.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_423.code_ptr)] : local.iter_423.code_ptr :
      local.code_424[0] == "]"
        ? local.iter_423.tape[local.iter_423.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_423.code_ptr)] : local.iter_423.code_ptr
        : local.iter_423.code_ptr)

    steps_taken = 1 + local.iter_423.steps_taken
  }
}

locals {
  code_425 = (try(local.iter_424.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_424.code_ptr, local.iter_424.code_ptr + 2)
    : [null])

  input_425 = (local.code_425[0] == ","
    ? substr(local.input_424, local.code_425[1], -1)
    : local.input_424)

  iter_425 = try(local.iter_424.code_ptr >= length(var.code), true) ? local.iter_424 : {
    output = (local.code_425[0] == "."
      ? "${local.iter_424.output}${join("", [for _ in range(local.code_425[1]) : jsondecode(format("\"\\u%04x\"", local.iter_424.tape[local.iter_424.tape_ptr]))])}"
      : local.iter_424.output)
    
    tape = (
      local.code_425[0] == "+"
        ? [for i, b in local.iter_424.tape : (i == local.iter_424.tape_ptr ? (b + local.code_425[1]) % 256 : b)] :
      local.code_425[0] == "-"
        ? [for i, b in local.iter_424.tape : (i == local.iter_424.tape_ptr ? (b - local.code_425[1] + 256) % 256 : b)] :
      local.code_425[0] == ","
        ? [for i, b in local.iter_424.tape : (i == local.iter_424.tape_ptr ? local.ascii_lookup[substr(local.input_425, 0, 1)] : b)]
        : local.iter_424.tape)

    tape_ptr = (
      local.code_425[0] == "<"
        ? local.iter_424.tape_ptr - local.code_425[1] :
      local.code_425[0] == ">"
        ? local.iter_424.tape_ptr + local.code_425[1]
        : local.iter_424.tape_ptr)

    code_ptr = 2 + (
      local.code_425[0] == "["
        ? local.iter_424.tape[local.iter_424.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_424.code_ptr)] : local.iter_424.code_ptr :
      local.code_425[0] == "]"
        ? local.iter_424.tape[local.iter_424.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_424.code_ptr)] : local.iter_424.code_ptr
        : local.iter_424.code_ptr)

    steps_taken = 1 + local.iter_424.steps_taken
  }
}

locals {
  code_426 = (try(local.iter_425.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_425.code_ptr, local.iter_425.code_ptr + 2)
    : [null])

  input_426 = (local.code_426[0] == ","
    ? substr(local.input_425, local.code_426[1], -1)
    : local.input_425)

  iter_426 = try(local.iter_425.code_ptr >= length(var.code), true) ? local.iter_425 : {
    output = (local.code_426[0] == "."
      ? "${local.iter_425.output}${join("", [for _ in range(local.code_426[1]) : jsondecode(format("\"\\u%04x\"", local.iter_425.tape[local.iter_425.tape_ptr]))])}"
      : local.iter_425.output)
    
    tape = (
      local.code_426[0] == "+"
        ? [for i, b in local.iter_425.tape : (i == local.iter_425.tape_ptr ? (b + local.code_426[1]) % 256 : b)] :
      local.code_426[0] == "-"
        ? [for i, b in local.iter_425.tape : (i == local.iter_425.tape_ptr ? (b - local.code_426[1] + 256) % 256 : b)] :
      local.code_426[0] == ","
        ? [for i, b in local.iter_425.tape : (i == local.iter_425.tape_ptr ? local.ascii_lookup[substr(local.input_426, 0, 1)] : b)]
        : local.iter_425.tape)

    tape_ptr = (
      local.code_426[0] == "<"
        ? local.iter_425.tape_ptr - local.code_426[1] :
      local.code_426[0] == ">"
        ? local.iter_425.tape_ptr + local.code_426[1]
        : local.iter_425.tape_ptr)

    code_ptr = 2 + (
      local.code_426[0] == "["
        ? local.iter_425.tape[local.iter_425.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_425.code_ptr)] : local.iter_425.code_ptr :
      local.code_426[0] == "]"
        ? local.iter_425.tape[local.iter_425.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_425.code_ptr)] : local.iter_425.code_ptr
        : local.iter_425.code_ptr)

    steps_taken = 1 + local.iter_425.steps_taken
  }
}

locals {
  code_427 = (try(local.iter_426.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_426.code_ptr, local.iter_426.code_ptr + 2)
    : [null])

  input_427 = (local.code_427[0] == ","
    ? substr(local.input_426, local.code_427[1], -1)
    : local.input_426)

  iter_427 = try(local.iter_426.code_ptr >= length(var.code), true) ? local.iter_426 : {
    output = (local.code_427[0] == "."
      ? "${local.iter_426.output}${join("", [for _ in range(local.code_427[1]) : jsondecode(format("\"\\u%04x\"", local.iter_426.tape[local.iter_426.tape_ptr]))])}"
      : local.iter_426.output)
    
    tape = (
      local.code_427[0] == "+"
        ? [for i, b in local.iter_426.tape : (i == local.iter_426.tape_ptr ? (b + local.code_427[1]) % 256 : b)] :
      local.code_427[0] == "-"
        ? [for i, b in local.iter_426.tape : (i == local.iter_426.tape_ptr ? (b - local.code_427[1] + 256) % 256 : b)] :
      local.code_427[0] == ","
        ? [for i, b in local.iter_426.tape : (i == local.iter_426.tape_ptr ? local.ascii_lookup[substr(local.input_427, 0, 1)] : b)]
        : local.iter_426.tape)

    tape_ptr = (
      local.code_427[0] == "<"
        ? local.iter_426.tape_ptr - local.code_427[1] :
      local.code_427[0] == ">"
        ? local.iter_426.tape_ptr + local.code_427[1]
        : local.iter_426.tape_ptr)

    code_ptr = 2 + (
      local.code_427[0] == "["
        ? local.iter_426.tape[local.iter_426.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_426.code_ptr)] : local.iter_426.code_ptr :
      local.code_427[0] == "]"
        ? local.iter_426.tape[local.iter_426.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_426.code_ptr)] : local.iter_426.code_ptr
        : local.iter_426.code_ptr)

    steps_taken = 1 + local.iter_426.steps_taken
  }
}

locals {
  code_428 = (try(local.iter_427.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_427.code_ptr, local.iter_427.code_ptr + 2)
    : [null])

  input_428 = (local.code_428[0] == ","
    ? substr(local.input_427, local.code_428[1], -1)
    : local.input_427)

  iter_428 = try(local.iter_427.code_ptr >= length(var.code), true) ? local.iter_427 : {
    output = (local.code_428[0] == "."
      ? "${local.iter_427.output}${join("", [for _ in range(local.code_428[1]) : jsondecode(format("\"\\u%04x\"", local.iter_427.tape[local.iter_427.tape_ptr]))])}"
      : local.iter_427.output)
    
    tape = (
      local.code_428[0] == "+"
        ? [for i, b in local.iter_427.tape : (i == local.iter_427.tape_ptr ? (b + local.code_428[1]) % 256 : b)] :
      local.code_428[0] == "-"
        ? [for i, b in local.iter_427.tape : (i == local.iter_427.tape_ptr ? (b - local.code_428[1] + 256) % 256 : b)] :
      local.code_428[0] == ","
        ? [for i, b in local.iter_427.tape : (i == local.iter_427.tape_ptr ? local.ascii_lookup[substr(local.input_428, 0, 1)] : b)]
        : local.iter_427.tape)

    tape_ptr = (
      local.code_428[0] == "<"
        ? local.iter_427.tape_ptr - local.code_428[1] :
      local.code_428[0] == ">"
        ? local.iter_427.tape_ptr + local.code_428[1]
        : local.iter_427.tape_ptr)

    code_ptr = 2 + (
      local.code_428[0] == "["
        ? local.iter_427.tape[local.iter_427.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_427.code_ptr)] : local.iter_427.code_ptr :
      local.code_428[0] == "]"
        ? local.iter_427.tape[local.iter_427.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_427.code_ptr)] : local.iter_427.code_ptr
        : local.iter_427.code_ptr)

    steps_taken = 1 + local.iter_427.steps_taken
  }
}

locals {
  code_429 = (try(local.iter_428.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_428.code_ptr, local.iter_428.code_ptr + 2)
    : [null])

  input_429 = (local.code_429[0] == ","
    ? substr(local.input_428, local.code_429[1], -1)
    : local.input_428)

  iter_429 = try(local.iter_428.code_ptr >= length(var.code), true) ? local.iter_428 : {
    output = (local.code_429[0] == "."
      ? "${local.iter_428.output}${join("", [for _ in range(local.code_429[1]) : jsondecode(format("\"\\u%04x\"", local.iter_428.tape[local.iter_428.tape_ptr]))])}"
      : local.iter_428.output)
    
    tape = (
      local.code_429[0] == "+"
        ? [for i, b in local.iter_428.tape : (i == local.iter_428.tape_ptr ? (b + local.code_429[1]) % 256 : b)] :
      local.code_429[0] == "-"
        ? [for i, b in local.iter_428.tape : (i == local.iter_428.tape_ptr ? (b - local.code_429[1] + 256) % 256 : b)] :
      local.code_429[0] == ","
        ? [for i, b in local.iter_428.tape : (i == local.iter_428.tape_ptr ? local.ascii_lookup[substr(local.input_429, 0, 1)] : b)]
        : local.iter_428.tape)

    tape_ptr = (
      local.code_429[0] == "<"
        ? local.iter_428.tape_ptr - local.code_429[1] :
      local.code_429[0] == ">"
        ? local.iter_428.tape_ptr + local.code_429[1]
        : local.iter_428.tape_ptr)

    code_ptr = 2 + (
      local.code_429[0] == "["
        ? local.iter_428.tape[local.iter_428.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_428.code_ptr)] : local.iter_428.code_ptr :
      local.code_429[0] == "]"
        ? local.iter_428.tape[local.iter_428.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_428.code_ptr)] : local.iter_428.code_ptr
        : local.iter_428.code_ptr)

    steps_taken = 1 + local.iter_428.steps_taken
  }
}

locals {
  code_430 = (try(local.iter_429.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_429.code_ptr, local.iter_429.code_ptr + 2)
    : [null])

  input_430 = (local.code_430[0] == ","
    ? substr(local.input_429, local.code_430[1], -1)
    : local.input_429)

  iter_430 = try(local.iter_429.code_ptr >= length(var.code), true) ? local.iter_429 : {
    output = (local.code_430[0] == "."
      ? "${local.iter_429.output}${join("", [for _ in range(local.code_430[1]) : jsondecode(format("\"\\u%04x\"", local.iter_429.tape[local.iter_429.tape_ptr]))])}"
      : local.iter_429.output)
    
    tape = (
      local.code_430[0] == "+"
        ? [for i, b in local.iter_429.tape : (i == local.iter_429.tape_ptr ? (b + local.code_430[1]) % 256 : b)] :
      local.code_430[0] == "-"
        ? [for i, b in local.iter_429.tape : (i == local.iter_429.tape_ptr ? (b - local.code_430[1] + 256) % 256 : b)] :
      local.code_430[0] == ","
        ? [for i, b in local.iter_429.tape : (i == local.iter_429.tape_ptr ? local.ascii_lookup[substr(local.input_430, 0, 1)] : b)]
        : local.iter_429.tape)

    tape_ptr = (
      local.code_430[0] == "<"
        ? local.iter_429.tape_ptr - local.code_430[1] :
      local.code_430[0] == ">"
        ? local.iter_429.tape_ptr + local.code_430[1]
        : local.iter_429.tape_ptr)

    code_ptr = 2 + (
      local.code_430[0] == "["
        ? local.iter_429.tape[local.iter_429.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_429.code_ptr)] : local.iter_429.code_ptr :
      local.code_430[0] == "]"
        ? local.iter_429.tape[local.iter_429.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_429.code_ptr)] : local.iter_429.code_ptr
        : local.iter_429.code_ptr)

    steps_taken = 1 + local.iter_429.steps_taken
  }
}

locals {
  code_431 = (try(local.iter_430.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_430.code_ptr, local.iter_430.code_ptr + 2)
    : [null])

  input_431 = (local.code_431[0] == ","
    ? substr(local.input_430, local.code_431[1], -1)
    : local.input_430)

  iter_431 = try(local.iter_430.code_ptr >= length(var.code), true) ? local.iter_430 : {
    output = (local.code_431[0] == "."
      ? "${local.iter_430.output}${join("", [for _ in range(local.code_431[1]) : jsondecode(format("\"\\u%04x\"", local.iter_430.tape[local.iter_430.tape_ptr]))])}"
      : local.iter_430.output)
    
    tape = (
      local.code_431[0] == "+"
        ? [for i, b in local.iter_430.tape : (i == local.iter_430.tape_ptr ? (b + local.code_431[1]) % 256 : b)] :
      local.code_431[0] == "-"
        ? [for i, b in local.iter_430.tape : (i == local.iter_430.tape_ptr ? (b - local.code_431[1] + 256) % 256 : b)] :
      local.code_431[0] == ","
        ? [for i, b in local.iter_430.tape : (i == local.iter_430.tape_ptr ? local.ascii_lookup[substr(local.input_431, 0, 1)] : b)]
        : local.iter_430.tape)

    tape_ptr = (
      local.code_431[0] == "<"
        ? local.iter_430.tape_ptr - local.code_431[1] :
      local.code_431[0] == ">"
        ? local.iter_430.tape_ptr + local.code_431[1]
        : local.iter_430.tape_ptr)

    code_ptr = 2 + (
      local.code_431[0] == "["
        ? local.iter_430.tape[local.iter_430.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_430.code_ptr)] : local.iter_430.code_ptr :
      local.code_431[0] == "]"
        ? local.iter_430.tape[local.iter_430.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_430.code_ptr)] : local.iter_430.code_ptr
        : local.iter_430.code_ptr)

    steps_taken = 1 + local.iter_430.steps_taken
  }
}

locals {
  code_432 = (try(local.iter_431.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_431.code_ptr, local.iter_431.code_ptr + 2)
    : [null])

  input_432 = (local.code_432[0] == ","
    ? substr(local.input_431, local.code_432[1], -1)
    : local.input_431)

  iter_432 = try(local.iter_431.code_ptr >= length(var.code), true) ? local.iter_431 : {
    output = (local.code_432[0] == "."
      ? "${local.iter_431.output}${join("", [for _ in range(local.code_432[1]) : jsondecode(format("\"\\u%04x\"", local.iter_431.tape[local.iter_431.tape_ptr]))])}"
      : local.iter_431.output)
    
    tape = (
      local.code_432[0] == "+"
        ? [for i, b in local.iter_431.tape : (i == local.iter_431.tape_ptr ? (b + local.code_432[1]) % 256 : b)] :
      local.code_432[0] == "-"
        ? [for i, b in local.iter_431.tape : (i == local.iter_431.tape_ptr ? (b - local.code_432[1] + 256) % 256 : b)] :
      local.code_432[0] == ","
        ? [for i, b in local.iter_431.tape : (i == local.iter_431.tape_ptr ? local.ascii_lookup[substr(local.input_432, 0, 1)] : b)]
        : local.iter_431.tape)

    tape_ptr = (
      local.code_432[0] == "<"
        ? local.iter_431.tape_ptr - local.code_432[1] :
      local.code_432[0] == ">"
        ? local.iter_431.tape_ptr + local.code_432[1]
        : local.iter_431.tape_ptr)

    code_ptr = 2 + (
      local.code_432[0] == "["
        ? local.iter_431.tape[local.iter_431.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_431.code_ptr)] : local.iter_431.code_ptr :
      local.code_432[0] == "]"
        ? local.iter_431.tape[local.iter_431.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_431.code_ptr)] : local.iter_431.code_ptr
        : local.iter_431.code_ptr)

    steps_taken = 1 + local.iter_431.steps_taken
  }
}

locals {
  code_433 = (try(local.iter_432.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_432.code_ptr, local.iter_432.code_ptr + 2)
    : [null])

  input_433 = (local.code_433[0] == ","
    ? substr(local.input_432, local.code_433[1], -1)
    : local.input_432)

  iter_433 = try(local.iter_432.code_ptr >= length(var.code), true) ? local.iter_432 : {
    output = (local.code_433[0] == "."
      ? "${local.iter_432.output}${join("", [for _ in range(local.code_433[1]) : jsondecode(format("\"\\u%04x\"", local.iter_432.tape[local.iter_432.tape_ptr]))])}"
      : local.iter_432.output)
    
    tape = (
      local.code_433[0] == "+"
        ? [for i, b in local.iter_432.tape : (i == local.iter_432.tape_ptr ? (b + local.code_433[1]) % 256 : b)] :
      local.code_433[0] == "-"
        ? [for i, b in local.iter_432.tape : (i == local.iter_432.tape_ptr ? (b - local.code_433[1] + 256) % 256 : b)] :
      local.code_433[0] == ","
        ? [for i, b in local.iter_432.tape : (i == local.iter_432.tape_ptr ? local.ascii_lookup[substr(local.input_433, 0, 1)] : b)]
        : local.iter_432.tape)

    tape_ptr = (
      local.code_433[0] == "<"
        ? local.iter_432.tape_ptr - local.code_433[1] :
      local.code_433[0] == ">"
        ? local.iter_432.tape_ptr + local.code_433[1]
        : local.iter_432.tape_ptr)

    code_ptr = 2 + (
      local.code_433[0] == "["
        ? local.iter_432.tape[local.iter_432.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_432.code_ptr)] : local.iter_432.code_ptr :
      local.code_433[0] == "]"
        ? local.iter_432.tape[local.iter_432.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_432.code_ptr)] : local.iter_432.code_ptr
        : local.iter_432.code_ptr)

    steps_taken = 1 + local.iter_432.steps_taken
  }
}

locals {
  code_434 = (try(local.iter_433.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_433.code_ptr, local.iter_433.code_ptr + 2)
    : [null])

  input_434 = (local.code_434[0] == ","
    ? substr(local.input_433, local.code_434[1], -1)
    : local.input_433)

  iter_434 = try(local.iter_433.code_ptr >= length(var.code), true) ? local.iter_433 : {
    output = (local.code_434[0] == "."
      ? "${local.iter_433.output}${join("", [for _ in range(local.code_434[1]) : jsondecode(format("\"\\u%04x\"", local.iter_433.tape[local.iter_433.tape_ptr]))])}"
      : local.iter_433.output)
    
    tape = (
      local.code_434[0] == "+"
        ? [for i, b in local.iter_433.tape : (i == local.iter_433.tape_ptr ? (b + local.code_434[1]) % 256 : b)] :
      local.code_434[0] == "-"
        ? [for i, b in local.iter_433.tape : (i == local.iter_433.tape_ptr ? (b - local.code_434[1] + 256) % 256 : b)] :
      local.code_434[0] == ","
        ? [for i, b in local.iter_433.tape : (i == local.iter_433.tape_ptr ? local.ascii_lookup[substr(local.input_434, 0, 1)] : b)]
        : local.iter_433.tape)

    tape_ptr = (
      local.code_434[0] == "<"
        ? local.iter_433.tape_ptr - local.code_434[1] :
      local.code_434[0] == ">"
        ? local.iter_433.tape_ptr + local.code_434[1]
        : local.iter_433.tape_ptr)

    code_ptr = 2 + (
      local.code_434[0] == "["
        ? local.iter_433.tape[local.iter_433.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_433.code_ptr)] : local.iter_433.code_ptr :
      local.code_434[0] == "]"
        ? local.iter_433.tape[local.iter_433.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_433.code_ptr)] : local.iter_433.code_ptr
        : local.iter_433.code_ptr)

    steps_taken = 1 + local.iter_433.steps_taken
  }
}

locals {
  code_435 = (try(local.iter_434.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_434.code_ptr, local.iter_434.code_ptr + 2)
    : [null])

  input_435 = (local.code_435[0] == ","
    ? substr(local.input_434, local.code_435[1], -1)
    : local.input_434)

  iter_435 = try(local.iter_434.code_ptr >= length(var.code), true) ? local.iter_434 : {
    output = (local.code_435[0] == "."
      ? "${local.iter_434.output}${join("", [for _ in range(local.code_435[1]) : jsondecode(format("\"\\u%04x\"", local.iter_434.tape[local.iter_434.tape_ptr]))])}"
      : local.iter_434.output)
    
    tape = (
      local.code_435[0] == "+"
        ? [for i, b in local.iter_434.tape : (i == local.iter_434.tape_ptr ? (b + local.code_435[1]) % 256 : b)] :
      local.code_435[0] == "-"
        ? [for i, b in local.iter_434.tape : (i == local.iter_434.tape_ptr ? (b - local.code_435[1] + 256) % 256 : b)] :
      local.code_435[0] == ","
        ? [for i, b in local.iter_434.tape : (i == local.iter_434.tape_ptr ? local.ascii_lookup[substr(local.input_435, 0, 1)] : b)]
        : local.iter_434.tape)

    tape_ptr = (
      local.code_435[0] == "<"
        ? local.iter_434.tape_ptr - local.code_435[1] :
      local.code_435[0] == ">"
        ? local.iter_434.tape_ptr + local.code_435[1]
        : local.iter_434.tape_ptr)

    code_ptr = 2 + (
      local.code_435[0] == "["
        ? local.iter_434.tape[local.iter_434.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_434.code_ptr)] : local.iter_434.code_ptr :
      local.code_435[0] == "]"
        ? local.iter_434.tape[local.iter_434.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_434.code_ptr)] : local.iter_434.code_ptr
        : local.iter_434.code_ptr)

    steps_taken = 1 + local.iter_434.steps_taken
  }
}

locals {
  code_436 = (try(local.iter_435.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_435.code_ptr, local.iter_435.code_ptr + 2)
    : [null])

  input_436 = (local.code_436[0] == ","
    ? substr(local.input_435, local.code_436[1], -1)
    : local.input_435)

  iter_436 = try(local.iter_435.code_ptr >= length(var.code), true) ? local.iter_435 : {
    output = (local.code_436[0] == "."
      ? "${local.iter_435.output}${join("", [for _ in range(local.code_436[1]) : jsondecode(format("\"\\u%04x\"", local.iter_435.tape[local.iter_435.tape_ptr]))])}"
      : local.iter_435.output)
    
    tape = (
      local.code_436[0] == "+"
        ? [for i, b in local.iter_435.tape : (i == local.iter_435.tape_ptr ? (b + local.code_436[1]) % 256 : b)] :
      local.code_436[0] == "-"
        ? [for i, b in local.iter_435.tape : (i == local.iter_435.tape_ptr ? (b - local.code_436[1] + 256) % 256 : b)] :
      local.code_436[0] == ","
        ? [for i, b in local.iter_435.tape : (i == local.iter_435.tape_ptr ? local.ascii_lookup[substr(local.input_436, 0, 1)] : b)]
        : local.iter_435.tape)

    tape_ptr = (
      local.code_436[0] == "<"
        ? local.iter_435.tape_ptr - local.code_436[1] :
      local.code_436[0] == ">"
        ? local.iter_435.tape_ptr + local.code_436[1]
        : local.iter_435.tape_ptr)

    code_ptr = 2 + (
      local.code_436[0] == "["
        ? local.iter_435.tape[local.iter_435.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_435.code_ptr)] : local.iter_435.code_ptr :
      local.code_436[0] == "]"
        ? local.iter_435.tape[local.iter_435.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_435.code_ptr)] : local.iter_435.code_ptr
        : local.iter_435.code_ptr)

    steps_taken = 1 + local.iter_435.steps_taken
  }
}

locals {
  code_437 = (try(local.iter_436.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_436.code_ptr, local.iter_436.code_ptr + 2)
    : [null])

  input_437 = (local.code_437[0] == ","
    ? substr(local.input_436, local.code_437[1], -1)
    : local.input_436)

  iter_437 = try(local.iter_436.code_ptr >= length(var.code), true) ? local.iter_436 : {
    output = (local.code_437[0] == "."
      ? "${local.iter_436.output}${join("", [for _ in range(local.code_437[1]) : jsondecode(format("\"\\u%04x\"", local.iter_436.tape[local.iter_436.tape_ptr]))])}"
      : local.iter_436.output)
    
    tape = (
      local.code_437[0] == "+"
        ? [for i, b in local.iter_436.tape : (i == local.iter_436.tape_ptr ? (b + local.code_437[1]) % 256 : b)] :
      local.code_437[0] == "-"
        ? [for i, b in local.iter_436.tape : (i == local.iter_436.tape_ptr ? (b - local.code_437[1] + 256) % 256 : b)] :
      local.code_437[0] == ","
        ? [for i, b in local.iter_436.tape : (i == local.iter_436.tape_ptr ? local.ascii_lookup[substr(local.input_437, 0, 1)] : b)]
        : local.iter_436.tape)

    tape_ptr = (
      local.code_437[0] == "<"
        ? local.iter_436.tape_ptr - local.code_437[1] :
      local.code_437[0] == ">"
        ? local.iter_436.tape_ptr + local.code_437[1]
        : local.iter_436.tape_ptr)

    code_ptr = 2 + (
      local.code_437[0] == "["
        ? local.iter_436.tape[local.iter_436.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_436.code_ptr)] : local.iter_436.code_ptr :
      local.code_437[0] == "]"
        ? local.iter_436.tape[local.iter_436.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_436.code_ptr)] : local.iter_436.code_ptr
        : local.iter_436.code_ptr)

    steps_taken = 1 + local.iter_436.steps_taken
  }
}

locals {
  code_438 = (try(local.iter_437.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_437.code_ptr, local.iter_437.code_ptr + 2)
    : [null])

  input_438 = (local.code_438[0] == ","
    ? substr(local.input_437, local.code_438[1], -1)
    : local.input_437)

  iter_438 = try(local.iter_437.code_ptr >= length(var.code), true) ? local.iter_437 : {
    output = (local.code_438[0] == "."
      ? "${local.iter_437.output}${join("", [for _ in range(local.code_438[1]) : jsondecode(format("\"\\u%04x\"", local.iter_437.tape[local.iter_437.tape_ptr]))])}"
      : local.iter_437.output)
    
    tape = (
      local.code_438[0] == "+"
        ? [for i, b in local.iter_437.tape : (i == local.iter_437.tape_ptr ? (b + local.code_438[1]) % 256 : b)] :
      local.code_438[0] == "-"
        ? [for i, b in local.iter_437.tape : (i == local.iter_437.tape_ptr ? (b - local.code_438[1] + 256) % 256 : b)] :
      local.code_438[0] == ","
        ? [for i, b in local.iter_437.tape : (i == local.iter_437.tape_ptr ? local.ascii_lookup[substr(local.input_438, 0, 1)] : b)]
        : local.iter_437.tape)

    tape_ptr = (
      local.code_438[0] == "<"
        ? local.iter_437.tape_ptr - local.code_438[1] :
      local.code_438[0] == ">"
        ? local.iter_437.tape_ptr + local.code_438[1]
        : local.iter_437.tape_ptr)

    code_ptr = 2 + (
      local.code_438[0] == "["
        ? local.iter_437.tape[local.iter_437.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_437.code_ptr)] : local.iter_437.code_ptr :
      local.code_438[0] == "]"
        ? local.iter_437.tape[local.iter_437.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_437.code_ptr)] : local.iter_437.code_ptr
        : local.iter_437.code_ptr)

    steps_taken = 1 + local.iter_437.steps_taken
  }
}

locals {
  code_439 = (try(local.iter_438.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_438.code_ptr, local.iter_438.code_ptr + 2)
    : [null])

  input_439 = (local.code_439[0] == ","
    ? substr(local.input_438, local.code_439[1], -1)
    : local.input_438)

  iter_439 = try(local.iter_438.code_ptr >= length(var.code), true) ? local.iter_438 : {
    output = (local.code_439[0] == "."
      ? "${local.iter_438.output}${join("", [for _ in range(local.code_439[1]) : jsondecode(format("\"\\u%04x\"", local.iter_438.tape[local.iter_438.tape_ptr]))])}"
      : local.iter_438.output)
    
    tape = (
      local.code_439[0] == "+"
        ? [for i, b in local.iter_438.tape : (i == local.iter_438.tape_ptr ? (b + local.code_439[1]) % 256 : b)] :
      local.code_439[0] == "-"
        ? [for i, b in local.iter_438.tape : (i == local.iter_438.tape_ptr ? (b - local.code_439[1] + 256) % 256 : b)] :
      local.code_439[0] == ","
        ? [for i, b in local.iter_438.tape : (i == local.iter_438.tape_ptr ? local.ascii_lookup[substr(local.input_439, 0, 1)] : b)]
        : local.iter_438.tape)

    tape_ptr = (
      local.code_439[0] == "<"
        ? local.iter_438.tape_ptr - local.code_439[1] :
      local.code_439[0] == ">"
        ? local.iter_438.tape_ptr + local.code_439[1]
        : local.iter_438.tape_ptr)

    code_ptr = 2 + (
      local.code_439[0] == "["
        ? local.iter_438.tape[local.iter_438.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_438.code_ptr)] : local.iter_438.code_ptr :
      local.code_439[0] == "]"
        ? local.iter_438.tape[local.iter_438.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_438.code_ptr)] : local.iter_438.code_ptr
        : local.iter_438.code_ptr)

    steps_taken = 1 + local.iter_438.steps_taken
  }
}

locals {
  code_440 = (try(local.iter_439.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_439.code_ptr, local.iter_439.code_ptr + 2)
    : [null])

  input_440 = (local.code_440[0] == ","
    ? substr(local.input_439, local.code_440[1], -1)
    : local.input_439)

  iter_440 = try(local.iter_439.code_ptr >= length(var.code), true) ? local.iter_439 : {
    output = (local.code_440[0] == "."
      ? "${local.iter_439.output}${join("", [for _ in range(local.code_440[1]) : jsondecode(format("\"\\u%04x\"", local.iter_439.tape[local.iter_439.tape_ptr]))])}"
      : local.iter_439.output)
    
    tape = (
      local.code_440[0] == "+"
        ? [for i, b in local.iter_439.tape : (i == local.iter_439.tape_ptr ? (b + local.code_440[1]) % 256 : b)] :
      local.code_440[0] == "-"
        ? [for i, b in local.iter_439.tape : (i == local.iter_439.tape_ptr ? (b - local.code_440[1] + 256) % 256 : b)] :
      local.code_440[0] == ","
        ? [for i, b in local.iter_439.tape : (i == local.iter_439.tape_ptr ? local.ascii_lookup[substr(local.input_440, 0, 1)] : b)]
        : local.iter_439.tape)

    tape_ptr = (
      local.code_440[0] == "<"
        ? local.iter_439.tape_ptr - local.code_440[1] :
      local.code_440[0] == ">"
        ? local.iter_439.tape_ptr + local.code_440[1]
        : local.iter_439.tape_ptr)

    code_ptr = 2 + (
      local.code_440[0] == "["
        ? local.iter_439.tape[local.iter_439.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_439.code_ptr)] : local.iter_439.code_ptr :
      local.code_440[0] == "]"
        ? local.iter_439.tape[local.iter_439.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_439.code_ptr)] : local.iter_439.code_ptr
        : local.iter_439.code_ptr)

    steps_taken = 1 + local.iter_439.steps_taken
  }
}

locals {
  code_441 = (try(local.iter_440.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_440.code_ptr, local.iter_440.code_ptr + 2)
    : [null])

  input_441 = (local.code_441[0] == ","
    ? substr(local.input_440, local.code_441[1], -1)
    : local.input_440)

  iter_441 = try(local.iter_440.code_ptr >= length(var.code), true) ? local.iter_440 : {
    output = (local.code_441[0] == "."
      ? "${local.iter_440.output}${join("", [for _ in range(local.code_441[1]) : jsondecode(format("\"\\u%04x\"", local.iter_440.tape[local.iter_440.tape_ptr]))])}"
      : local.iter_440.output)
    
    tape = (
      local.code_441[0] == "+"
        ? [for i, b in local.iter_440.tape : (i == local.iter_440.tape_ptr ? (b + local.code_441[1]) % 256 : b)] :
      local.code_441[0] == "-"
        ? [for i, b in local.iter_440.tape : (i == local.iter_440.tape_ptr ? (b - local.code_441[1] + 256) % 256 : b)] :
      local.code_441[0] == ","
        ? [for i, b in local.iter_440.tape : (i == local.iter_440.tape_ptr ? local.ascii_lookup[substr(local.input_441, 0, 1)] : b)]
        : local.iter_440.tape)

    tape_ptr = (
      local.code_441[0] == "<"
        ? local.iter_440.tape_ptr - local.code_441[1] :
      local.code_441[0] == ">"
        ? local.iter_440.tape_ptr + local.code_441[1]
        : local.iter_440.tape_ptr)

    code_ptr = 2 + (
      local.code_441[0] == "["
        ? local.iter_440.tape[local.iter_440.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_440.code_ptr)] : local.iter_440.code_ptr :
      local.code_441[0] == "]"
        ? local.iter_440.tape[local.iter_440.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_440.code_ptr)] : local.iter_440.code_ptr
        : local.iter_440.code_ptr)

    steps_taken = 1 + local.iter_440.steps_taken
  }
}

locals {
  code_442 = (try(local.iter_441.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_441.code_ptr, local.iter_441.code_ptr + 2)
    : [null])

  input_442 = (local.code_442[0] == ","
    ? substr(local.input_441, local.code_442[1], -1)
    : local.input_441)

  iter_442 = try(local.iter_441.code_ptr >= length(var.code), true) ? local.iter_441 : {
    output = (local.code_442[0] == "."
      ? "${local.iter_441.output}${join("", [for _ in range(local.code_442[1]) : jsondecode(format("\"\\u%04x\"", local.iter_441.tape[local.iter_441.tape_ptr]))])}"
      : local.iter_441.output)
    
    tape = (
      local.code_442[0] == "+"
        ? [for i, b in local.iter_441.tape : (i == local.iter_441.tape_ptr ? (b + local.code_442[1]) % 256 : b)] :
      local.code_442[0] == "-"
        ? [for i, b in local.iter_441.tape : (i == local.iter_441.tape_ptr ? (b - local.code_442[1] + 256) % 256 : b)] :
      local.code_442[0] == ","
        ? [for i, b in local.iter_441.tape : (i == local.iter_441.tape_ptr ? local.ascii_lookup[substr(local.input_442, 0, 1)] : b)]
        : local.iter_441.tape)

    tape_ptr = (
      local.code_442[0] == "<"
        ? local.iter_441.tape_ptr - local.code_442[1] :
      local.code_442[0] == ">"
        ? local.iter_441.tape_ptr + local.code_442[1]
        : local.iter_441.tape_ptr)

    code_ptr = 2 + (
      local.code_442[0] == "["
        ? local.iter_441.tape[local.iter_441.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_441.code_ptr)] : local.iter_441.code_ptr :
      local.code_442[0] == "]"
        ? local.iter_441.tape[local.iter_441.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_441.code_ptr)] : local.iter_441.code_ptr
        : local.iter_441.code_ptr)

    steps_taken = 1 + local.iter_441.steps_taken
  }
}

locals {
  code_443 = (try(local.iter_442.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_442.code_ptr, local.iter_442.code_ptr + 2)
    : [null])

  input_443 = (local.code_443[0] == ","
    ? substr(local.input_442, local.code_443[1], -1)
    : local.input_442)

  iter_443 = try(local.iter_442.code_ptr >= length(var.code), true) ? local.iter_442 : {
    output = (local.code_443[0] == "."
      ? "${local.iter_442.output}${join("", [for _ in range(local.code_443[1]) : jsondecode(format("\"\\u%04x\"", local.iter_442.tape[local.iter_442.tape_ptr]))])}"
      : local.iter_442.output)
    
    tape = (
      local.code_443[0] == "+"
        ? [for i, b in local.iter_442.tape : (i == local.iter_442.tape_ptr ? (b + local.code_443[1]) % 256 : b)] :
      local.code_443[0] == "-"
        ? [for i, b in local.iter_442.tape : (i == local.iter_442.tape_ptr ? (b - local.code_443[1] + 256) % 256 : b)] :
      local.code_443[0] == ","
        ? [for i, b in local.iter_442.tape : (i == local.iter_442.tape_ptr ? local.ascii_lookup[substr(local.input_443, 0, 1)] : b)]
        : local.iter_442.tape)

    tape_ptr = (
      local.code_443[0] == "<"
        ? local.iter_442.tape_ptr - local.code_443[1] :
      local.code_443[0] == ">"
        ? local.iter_442.tape_ptr + local.code_443[1]
        : local.iter_442.tape_ptr)

    code_ptr = 2 + (
      local.code_443[0] == "["
        ? local.iter_442.tape[local.iter_442.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_442.code_ptr)] : local.iter_442.code_ptr :
      local.code_443[0] == "]"
        ? local.iter_442.tape[local.iter_442.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_442.code_ptr)] : local.iter_442.code_ptr
        : local.iter_442.code_ptr)

    steps_taken = 1 + local.iter_442.steps_taken
  }
}

locals {
  code_444 = (try(local.iter_443.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_443.code_ptr, local.iter_443.code_ptr + 2)
    : [null])

  input_444 = (local.code_444[0] == ","
    ? substr(local.input_443, local.code_444[1], -1)
    : local.input_443)

  iter_444 = try(local.iter_443.code_ptr >= length(var.code), true) ? local.iter_443 : {
    output = (local.code_444[0] == "."
      ? "${local.iter_443.output}${join("", [for _ in range(local.code_444[1]) : jsondecode(format("\"\\u%04x\"", local.iter_443.tape[local.iter_443.tape_ptr]))])}"
      : local.iter_443.output)
    
    tape = (
      local.code_444[0] == "+"
        ? [for i, b in local.iter_443.tape : (i == local.iter_443.tape_ptr ? (b + local.code_444[1]) % 256 : b)] :
      local.code_444[0] == "-"
        ? [for i, b in local.iter_443.tape : (i == local.iter_443.tape_ptr ? (b - local.code_444[1] + 256) % 256 : b)] :
      local.code_444[0] == ","
        ? [for i, b in local.iter_443.tape : (i == local.iter_443.tape_ptr ? local.ascii_lookup[substr(local.input_444, 0, 1)] : b)]
        : local.iter_443.tape)

    tape_ptr = (
      local.code_444[0] == "<"
        ? local.iter_443.tape_ptr - local.code_444[1] :
      local.code_444[0] == ">"
        ? local.iter_443.tape_ptr + local.code_444[1]
        : local.iter_443.tape_ptr)

    code_ptr = 2 + (
      local.code_444[0] == "["
        ? local.iter_443.tape[local.iter_443.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_443.code_ptr)] : local.iter_443.code_ptr :
      local.code_444[0] == "]"
        ? local.iter_443.tape[local.iter_443.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_443.code_ptr)] : local.iter_443.code_ptr
        : local.iter_443.code_ptr)

    steps_taken = 1 + local.iter_443.steps_taken
  }
}

locals {
  code_445 = (try(local.iter_444.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_444.code_ptr, local.iter_444.code_ptr + 2)
    : [null])

  input_445 = (local.code_445[0] == ","
    ? substr(local.input_444, local.code_445[1], -1)
    : local.input_444)

  iter_445 = try(local.iter_444.code_ptr >= length(var.code), true) ? local.iter_444 : {
    output = (local.code_445[0] == "."
      ? "${local.iter_444.output}${join("", [for _ in range(local.code_445[1]) : jsondecode(format("\"\\u%04x\"", local.iter_444.tape[local.iter_444.tape_ptr]))])}"
      : local.iter_444.output)
    
    tape = (
      local.code_445[0] == "+"
        ? [for i, b in local.iter_444.tape : (i == local.iter_444.tape_ptr ? (b + local.code_445[1]) % 256 : b)] :
      local.code_445[0] == "-"
        ? [for i, b in local.iter_444.tape : (i == local.iter_444.tape_ptr ? (b - local.code_445[1] + 256) % 256 : b)] :
      local.code_445[0] == ","
        ? [for i, b in local.iter_444.tape : (i == local.iter_444.tape_ptr ? local.ascii_lookup[substr(local.input_445, 0, 1)] : b)]
        : local.iter_444.tape)

    tape_ptr = (
      local.code_445[0] == "<"
        ? local.iter_444.tape_ptr - local.code_445[1] :
      local.code_445[0] == ">"
        ? local.iter_444.tape_ptr + local.code_445[1]
        : local.iter_444.tape_ptr)

    code_ptr = 2 + (
      local.code_445[0] == "["
        ? local.iter_444.tape[local.iter_444.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_444.code_ptr)] : local.iter_444.code_ptr :
      local.code_445[0] == "]"
        ? local.iter_444.tape[local.iter_444.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_444.code_ptr)] : local.iter_444.code_ptr
        : local.iter_444.code_ptr)

    steps_taken = 1 + local.iter_444.steps_taken
  }
}

locals {
  code_446 = (try(local.iter_445.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_445.code_ptr, local.iter_445.code_ptr + 2)
    : [null])

  input_446 = (local.code_446[0] == ","
    ? substr(local.input_445, local.code_446[1], -1)
    : local.input_445)

  iter_446 = try(local.iter_445.code_ptr >= length(var.code), true) ? local.iter_445 : {
    output = (local.code_446[0] == "."
      ? "${local.iter_445.output}${join("", [for _ in range(local.code_446[1]) : jsondecode(format("\"\\u%04x\"", local.iter_445.tape[local.iter_445.tape_ptr]))])}"
      : local.iter_445.output)
    
    tape = (
      local.code_446[0] == "+"
        ? [for i, b in local.iter_445.tape : (i == local.iter_445.tape_ptr ? (b + local.code_446[1]) % 256 : b)] :
      local.code_446[0] == "-"
        ? [for i, b in local.iter_445.tape : (i == local.iter_445.tape_ptr ? (b - local.code_446[1] + 256) % 256 : b)] :
      local.code_446[0] == ","
        ? [for i, b in local.iter_445.tape : (i == local.iter_445.tape_ptr ? local.ascii_lookup[substr(local.input_446, 0, 1)] : b)]
        : local.iter_445.tape)

    tape_ptr = (
      local.code_446[0] == "<"
        ? local.iter_445.tape_ptr - local.code_446[1] :
      local.code_446[0] == ">"
        ? local.iter_445.tape_ptr + local.code_446[1]
        : local.iter_445.tape_ptr)

    code_ptr = 2 + (
      local.code_446[0] == "["
        ? local.iter_445.tape[local.iter_445.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_445.code_ptr)] : local.iter_445.code_ptr :
      local.code_446[0] == "]"
        ? local.iter_445.tape[local.iter_445.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_445.code_ptr)] : local.iter_445.code_ptr
        : local.iter_445.code_ptr)

    steps_taken = 1 + local.iter_445.steps_taken
  }
}

locals {
  code_447 = (try(local.iter_446.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_446.code_ptr, local.iter_446.code_ptr + 2)
    : [null])

  input_447 = (local.code_447[0] == ","
    ? substr(local.input_446, local.code_447[1], -1)
    : local.input_446)

  iter_447 = try(local.iter_446.code_ptr >= length(var.code), true) ? local.iter_446 : {
    output = (local.code_447[0] == "."
      ? "${local.iter_446.output}${join("", [for _ in range(local.code_447[1]) : jsondecode(format("\"\\u%04x\"", local.iter_446.tape[local.iter_446.tape_ptr]))])}"
      : local.iter_446.output)
    
    tape = (
      local.code_447[0] == "+"
        ? [for i, b in local.iter_446.tape : (i == local.iter_446.tape_ptr ? (b + local.code_447[1]) % 256 : b)] :
      local.code_447[0] == "-"
        ? [for i, b in local.iter_446.tape : (i == local.iter_446.tape_ptr ? (b - local.code_447[1] + 256) % 256 : b)] :
      local.code_447[0] == ","
        ? [for i, b in local.iter_446.tape : (i == local.iter_446.tape_ptr ? local.ascii_lookup[substr(local.input_447, 0, 1)] : b)]
        : local.iter_446.tape)

    tape_ptr = (
      local.code_447[0] == "<"
        ? local.iter_446.tape_ptr - local.code_447[1] :
      local.code_447[0] == ">"
        ? local.iter_446.tape_ptr + local.code_447[1]
        : local.iter_446.tape_ptr)

    code_ptr = 2 + (
      local.code_447[0] == "["
        ? local.iter_446.tape[local.iter_446.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_446.code_ptr)] : local.iter_446.code_ptr :
      local.code_447[0] == "]"
        ? local.iter_446.tape[local.iter_446.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_446.code_ptr)] : local.iter_446.code_ptr
        : local.iter_446.code_ptr)

    steps_taken = 1 + local.iter_446.steps_taken
  }
}

locals {
  code_448 = (try(local.iter_447.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_447.code_ptr, local.iter_447.code_ptr + 2)
    : [null])

  input_448 = (local.code_448[0] == ","
    ? substr(local.input_447, local.code_448[1], -1)
    : local.input_447)

  iter_448 = try(local.iter_447.code_ptr >= length(var.code), true) ? local.iter_447 : {
    output = (local.code_448[0] == "."
      ? "${local.iter_447.output}${join("", [for _ in range(local.code_448[1]) : jsondecode(format("\"\\u%04x\"", local.iter_447.tape[local.iter_447.tape_ptr]))])}"
      : local.iter_447.output)
    
    tape = (
      local.code_448[0] == "+"
        ? [for i, b in local.iter_447.tape : (i == local.iter_447.tape_ptr ? (b + local.code_448[1]) % 256 : b)] :
      local.code_448[0] == "-"
        ? [for i, b in local.iter_447.tape : (i == local.iter_447.tape_ptr ? (b - local.code_448[1] + 256) % 256 : b)] :
      local.code_448[0] == ","
        ? [for i, b in local.iter_447.tape : (i == local.iter_447.tape_ptr ? local.ascii_lookup[substr(local.input_448, 0, 1)] : b)]
        : local.iter_447.tape)

    tape_ptr = (
      local.code_448[0] == "<"
        ? local.iter_447.tape_ptr - local.code_448[1] :
      local.code_448[0] == ">"
        ? local.iter_447.tape_ptr + local.code_448[1]
        : local.iter_447.tape_ptr)

    code_ptr = 2 + (
      local.code_448[0] == "["
        ? local.iter_447.tape[local.iter_447.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_447.code_ptr)] : local.iter_447.code_ptr :
      local.code_448[0] == "]"
        ? local.iter_447.tape[local.iter_447.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_447.code_ptr)] : local.iter_447.code_ptr
        : local.iter_447.code_ptr)

    steps_taken = 1 + local.iter_447.steps_taken
  }
}

locals {
  code_449 = (try(local.iter_448.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_448.code_ptr, local.iter_448.code_ptr + 2)
    : [null])

  input_449 = (local.code_449[0] == ","
    ? substr(local.input_448, local.code_449[1], -1)
    : local.input_448)

  iter_449 = try(local.iter_448.code_ptr >= length(var.code), true) ? local.iter_448 : {
    output = (local.code_449[0] == "."
      ? "${local.iter_448.output}${join("", [for _ in range(local.code_449[1]) : jsondecode(format("\"\\u%04x\"", local.iter_448.tape[local.iter_448.tape_ptr]))])}"
      : local.iter_448.output)
    
    tape = (
      local.code_449[0] == "+"
        ? [for i, b in local.iter_448.tape : (i == local.iter_448.tape_ptr ? (b + local.code_449[1]) % 256 : b)] :
      local.code_449[0] == "-"
        ? [for i, b in local.iter_448.tape : (i == local.iter_448.tape_ptr ? (b - local.code_449[1] + 256) % 256 : b)] :
      local.code_449[0] == ","
        ? [for i, b in local.iter_448.tape : (i == local.iter_448.tape_ptr ? local.ascii_lookup[substr(local.input_449, 0, 1)] : b)]
        : local.iter_448.tape)

    tape_ptr = (
      local.code_449[0] == "<"
        ? local.iter_448.tape_ptr - local.code_449[1] :
      local.code_449[0] == ">"
        ? local.iter_448.tape_ptr + local.code_449[1]
        : local.iter_448.tape_ptr)

    code_ptr = 2 + (
      local.code_449[0] == "["
        ? local.iter_448.tape[local.iter_448.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_448.code_ptr)] : local.iter_448.code_ptr :
      local.code_449[0] == "]"
        ? local.iter_448.tape[local.iter_448.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_448.code_ptr)] : local.iter_448.code_ptr
        : local.iter_448.code_ptr)

    steps_taken = 1 + local.iter_448.steps_taken
  }
}

locals {
  code_450 = (try(local.iter_449.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_449.code_ptr, local.iter_449.code_ptr + 2)
    : [null])

  input_450 = (local.code_450[0] == ","
    ? substr(local.input_449, local.code_450[1], -1)
    : local.input_449)

  iter_450 = try(local.iter_449.code_ptr >= length(var.code), true) ? local.iter_449 : {
    output = (local.code_450[0] == "."
      ? "${local.iter_449.output}${join("", [for _ in range(local.code_450[1]) : jsondecode(format("\"\\u%04x\"", local.iter_449.tape[local.iter_449.tape_ptr]))])}"
      : local.iter_449.output)
    
    tape = (
      local.code_450[0] == "+"
        ? [for i, b in local.iter_449.tape : (i == local.iter_449.tape_ptr ? (b + local.code_450[1]) % 256 : b)] :
      local.code_450[0] == "-"
        ? [for i, b in local.iter_449.tape : (i == local.iter_449.tape_ptr ? (b - local.code_450[1] + 256) % 256 : b)] :
      local.code_450[0] == ","
        ? [for i, b in local.iter_449.tape : (i == local.iter_449.tape_ptr ? local.ascii_lookup[substr(local.input_450, 0, 1)] : b)]
        : local.iter_449.tape)

    tape_ptr = (
      local.code_450[0] == "<"
        ? local.iter_449.tape_ptr - local.code_450[1] :
      local.code_450[0] == ">"
        ? local.iter_449.tape_ptr + local.code_450[1]
        : local.iter_449.tape_ptr)

    code_ptr = 2 + (
      local.code_450[0] == "["
        ? local.iter_449.tape[local.iter_449.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_449.code_ptr)] : local.iter_449.code_ptr :
      local.code_450[0] == "]"
        ? local.iter_449.tape[local.iter_449.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_449.code_ptr)] : local.iter_449.code_ptr
        : local.iter_449.code_ptr)

    steps_taken = 1 + local.iter_449.steps_taken
  }
}

locals {
  code_451 = (try(local.iter_450.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_450.code_ptr, local.iter_450.code_ptr + 2)
    : [null])

  input_451 = (local.code_451[0] == ","
    ? substr(local.input_450, local.code_451[1], -1)
    : local.input_450)

  iter_451 = try(local.iter_450.code_ptr >= length(var.code), true) ? local.iter_450 : {
    output = (local.code_451[0] == "."
      ? "${local.iter_450.output}${join("", [for _ in range(local.code_451[1]) : jsondecode(format("\"\\u%04x\"", local.iter_450.tape[local.iter_450.tape_ptr]))])}"
      : local.iter_450.output)
    
    tape = (
      local.code_451[0] == "+"
        ? [for i, b in local.iter_450.tape : (i == local.iter_450.tape_ptr ? (b + local.code_451[1]) % 256 : b)] :
      local.code_451[0] == "-"
        ? [for i, b in local.iter_450.tape : (i == local.iter_450.tape_ptr ? (b - local.code_451[1] + 256) % 256 : b)] :
      local.code_451[0] == ","
        ? [for i, b in local.iter_450.tape : (i == local.iter_450.tape_ptr ? local.ascii_lookup[substr(local.input_451, 0, 1)] : b)]
        : local.iter_450.tape)

    tape_ptr = (
      local.code_451[0] == "<"
        ? local.iter_450.tape_ptr - local.code_451[1] :
      local.code_451[0] == ">"
        ? local.iter_450.tape_ptr + local.code_451[1]
        : local.iter_450.tape_ptr)

    code_ptr = 2 + (
      local.code_451[0] == "["
        ? local.iter_450.tape[local.iter_450.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_450.code_ptr)] : local.iter_450.code_ptr :
      local.code_451[0] == "]"
        ? local.iter_450.tape[local.iter_450.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_450.code_ptr)] : local.iter_450.code_ptr
        : local.iter_450.code_ptr)

    steps_taken = 1 + local.iter_450.steps_taken
  }
}

locals {
  code_452 = (try(local.iter_451.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_451.code_ptr, local.iter_451.code_ptr + 2)
    : [null])

  input_452 = (local.code_452[0] == ","
    ? substr(local.input_451, local.code_452[1], -1)
    : local.input_451)

  iter_452 = try(local.iter_451.code_ptr >= length(var.code), true) ? local.iter_451 : {
    output = (local.code_452[0] == "."
      ? "${local.iter_451.output}${join("", [for _ in range(local.code_452[1]) : jsondecode(format("\"\\u%04x\"", local.iter_451.tape[local.iter_451.tape_ptr]))])}"
      : local.iter_451.output)
    
    tape = (
      local.code_452[0] == "+"
        ? [for i, b in local.iter_451.tape : (i == local.iter_451.tape_ptr ? (b + local.code_452[1]) % 256 : b)] :
      local.code_452[0] == "-"
        ? [for i, b in local.iter_451.tape : (i == local.iter_451.tape_ptr ? (b - local.code_452[1] + 256) % 256 : b)] :
      local.code_452[0] == ","
        ? [for i, b in local.iter_451.tape : (i == local.iter_451.tape_ptr ? local.ascii_lookup[substr(local.input_452, 0, 1)] : b)]
        : local.iter_451.tape)

    tape_ptr = (
      local.code_452[0] == "<"
        ? local.iter_451.tape_ptr - local.code_452[1] :
      local.code_452[0] == ">"
        ? local.iter_451.tape_ptr + local.code_452[1]
        : local.iter_451.tape_ptr)

    code_ptr = 2 + (
      local.code_452[0] == "["
        ? local.iter_451.tape[local.iter_451.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_451.code_ptr)] : local.iter_451.code_ptr :
      local.code_452[0] == "]"
        ? local.iter_451.tape[local.iter_451.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_451.code_ptr)] : local.iter_451.code_ptr
        : local.iter_451.code_ptr)

    steps_taken = 1 + local.iter_451.steps_taken
  }
}

locals {
  code_453 = (try(local.iter_452.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_452.code_ptr, local.iter_452.code_ptr + 2)
    : [null])

  input_453 = (local.code_453[0] == ","
    ? substr(local.input_452, local.code_453[1], -1)
    : local.input_452)

  iter_453 = try(local.iter_452.code_ptr >= length(var.code), true) ? local.iter_452 : {
    output = (local.code_453[0] == "."
      ? "${local.iter_452.output}${join("", [for _ in range(local.code_453[1]) : jsondecode(format("\"\\u%04x\"", local.iter_452.tape[local.iter_452.tape_ptr]))])}"
      : local.iter_452.output)
    
    tape = (
      local.code_453[0] == "+"
        ? [for i, b in local.iter_452.tape : (i == local.iter_452.tape_ptr ? (b + local.code_453[1]) % 256 : b)] :
      local.code_453[0] == "-"
        ? [for i, b in local.iter_452.tape : (i == local.iter_452.tape_ptr ? (b - local.code_453[1] + 256) % 256 : b)] :
      local.code_453[0] == ","
        ? [for i, b in local.iter_452.tape : (i == local.iter_452.tape_ptr ? local.ascii_lookup[substr(local.input_453, 0, 1)] : b)]
        : local.iter_452.tape)

    tape_ptr = (
      local.code_453[0] == "<"
        ? local.iter_452.tape_ptr - local.code_453[1] :
      local.code_453[0] == ">"
        ? local.iter_452.tape_ptr + local.code_453[1]
        : local.iter_452.tape_ptr)

    code_ptr = 2 + (
      local.code_453[0] == "["
        ? local.iter_452.tape[local.iter_452.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_452.code_ptr)] : local.iter_452.code_ptr :
      local.code_453[0] == "]"
        ? local.iter_452.tape[local.iter_452.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_452.code_ptr)] : local.iter_452.code_ptr
        : local.iter_452.code_ptr)

    steps_taken = 1 + local.iter_452.steps_taken
  }
}

locals {
  code_454 = (try(local.iter_453.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_453.code_ptr, local.iter_453.code_ptr + 2)
    : [null])

  input_454 = (local.code_454[0] == ","
    ? substr(local.input_453, local.code_454[1], -1)
    : local.input_453)

  iter_454 = try(local.iter_453.code_ptr >= length(var.code), true) ? local.iter_453 : {
    output = (local.code_454[0] == "."
      ? "${local.iter_453.output}${join("", [for _ in range(local.code_454[1]) : jsondecode(format("\"\\u%04x\"", local.iter_453.tape[local.iter_453.tape_ptr]))])}"
      : local.iter_453.output)
    
    tape = (
      local.code_454[0] == "+"
        ? [for i, b in local.iter_453.tape : (i == local.iter_453.tape_ptr ? (b + local.code_454[1]) % 256 : b)] :
      local.code_454[0] == "-"
        ? [for i, b in local.iter_453.tape : (i == local.iter_453.tape_ptr ? (b - local.code_454[1] + 256) % 256 : b)] :
      local.code_454[0] == ","
        ? [for i, b in local.iter_453.tape : (i == local.iter_453.tape_ptr ? local.ascii_lookup[substr(local.input_454, 0, 1)] : b)]
        : local.iter_453.tape)

    tape_ptr = (
      local.code_454[0] == "<"
        ? local.iter_453.tape_ptr - local.code_454[1] :
      local.code_454[0] == ">"
        ? local.iter_453.tape_ptr + local.code_454[1]
        : local.iter_453.tape_ptr)

    code_ptr = 2 + (
      local.code_454[0] == "["
        ? local.iter_453.tape[local.iter_453.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_453.code_ptr)] : local.iter_453.code_ptr :
      local.code_454[0] == "]"
        ? local.iter_453.tape[local.iter_453.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_453.code_ptr)] : local.iter_453.code_ptr
        : local.iter_453.code_ptr)

    steps_taken = 1 + local.iter_453.steps_taken
  }
}

locals {
  code_455 = (try(local.iter_454.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_454.code_ptr, local.iter_454.code_ptr + 2)
    : [null])

  input_455 = (local.code_455[0] == ","
    ? substr(local.input_454, local.code_455[1], -1)
    : local.input_454)

  iter_455 = try(local.iter_454.code_ptr >= length(var.code), true) ? local.iter_454 : {
    output = (local.code_455[0] == "."
      ? "${local.iter_454.output}${join("", [for _ in range(local.code_455[1]) : jsondecode(format("\"\\u%04x\"", local.iter_454.tape[local.iter_454.tape_ptr]))])}"
      : local.iter_454.output)
    
    tape = (
      local.code_455[0] == "+"
        ? [for i, b in local.iter_454.tape : (i == local.iter_454.tape_ptr ? (b + local.code_455[1]) % 256 : b)] :
      local.code_455[0] == "-"
        ? [for i, b in local.iter_454.tape : (i == local.iter_454.tape_ptr ? (b - local.code_455[1] + 256) % 256 : b)] :
      local.code_455[0] == ","
        ? [for i, b in local.iter_454.tape : (i == local.iter_454.tape_ptr ? local.ascii_lookup[substr(local.input_455, 0, 1)] : b)]
        : local.iter_454.tape)

    tape_ptr = (
      local.code_455[0] == "<"
        ? local.iter_454.tape_ptr - local.code_455[1] :
      local.code_455[0] == ">"
        ? local.iter_454.tape_ptr + local.code_455[1]
        : local.iter_454.tape_ptr)

    code_ptr = 2 + (
      local.code_455[0] == "["
        ? local.iter_454.tape[local.iter_454.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_454.code_ptr)] : local.iter_454.code_ptr :
      local.code_455[0] == "]"
        ? local.iter_454.tape[local.iter_454.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_454.code_ptr)] : local.iter_454.code_ptr
        : local.iter_454.code_ptr)

    steps_taken = 1 + local.iter_454.steps_taken
  }
}

locals {
  code_456 = (try(local.iter_455.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_455.code_ptr, local.iter_455.code_ptr + 2)
    : [null])

  input_456 = (local.code_456[0] == ","
    ? substr(local.input_455, local.code_456[1], -1)
    : local.input_455)

  iter_456 = try(local.iter_455.code_ptr >= length(var.code), true) ? local.iter_455 : {
    output = (local.code_456[0] == "."
      ? "${local.iter_455.output}${join("", [for _ in range(local.code_456[1]) : jsondecode(format("\"\\u%04x\"", local.iter_455.tape[local.iter_455.tape_ptr]))])}"
      : local.iter_455.output)
    
    tape = (
      local.code_456[0] == "+"
        ? [for i, b in local.iter_455.tape : (i == local.iter_455.tape_ptr ? (b + local.code_456[1]) % 256 : b)] :
      local.code_456[0] == "-"
        ? [for i, b in local.iter_455.tape : (i == local.iter_455.tape_ptr ? (b - local.code_456[1] + 256) % 256 : b)] :
      local.code_456[0] == ","
        ? [for i, b in local.iter_455.tape : (i == local.iter_455.tape_ptr ? local.ascii_lookup[substr(local.input_456, 0, 1)] : b)]
        : local.iter_455.tape)

    tape_ptr = (
      local.code_456[0] == "<"
        ? local.iter_455.tape_ptr - local.code_456[1] :
      local.code_456[0] == ">"
        ? local.iter_455.tape_ptr + local.code_456[1]
        : local.iter_455.tape_ptr)

    code_ptr = 2 + (
      local.code_456[0] == "["
        ? local.iter_455.tape[local.iter_455.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_455.code_ptr)] : local.iter_455.code_ptr :
      local.code_456[0] == "]"
        ? local.iter_455.tape[local.iter_455.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_455.code_ptr)] : local.iter_455.code_ptr
        : local.iter_455.code_ptr)

    steps_taken = 1 + local.iter_455.steps_taken
  }
}

locals {
  code_457 = (try(local.iter_456.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_456.code_ptr, local.iter_456.code_ptr + 2)
    : [null])

  input_457 = (local.code_457[0] == ","
    ? substr(local.input_456, local.code_457[1], -1)
    : local.input_456)

  iter_457 = try(local.iter_456.code_ptr >= length(var.code), true) ? local.iter_456 : {
    output = (local.code_457[0] == "."
      ? "${local.iter_456.output}${join("", [for _ in range(local.code_457[1]) : jsondecode(format("\"\\u%04x\"", local.iter_456.tape[local.iter_456.tape_ptr]))])}"
      : local.iter_456.output)
    
    tape = (
      local.code_457[0] == "+"
        ? [for i, b in local.iter_456.tape : (i == local.iter_456.tape_ptr ? (b + local.code_457[1]) % 256 : b)] :
      local.code_457[0] == "-"
        ? [for i, b in local.iter_456.tape : (i == local.iter_456.tape_ptr ? (b - local.code_457[1] + 256) % 256 : b)] :
      local.code_457[0] == ","
        ? [for i, b in local.iter_456.tape : (i == local.iter_456.tape_ptr ? local.ascii_lookup[substr(local.input_457, 0, 1)] : b)]
        : local.iter_456.tape)

    tape_ptr = (
      local.code_457[0] == "<"
        ? local.iter_456.tape_ptr - local.code_457[1] :
      local.code_457[0] == ">"
        ? local.iter_456.tape_ptr + local.code_457[1]
        : local.iter_456.tape_ptr)

    code_ptr = 2 + (
      local.code_457[0] == "["
        ? local.iter_456.tape[local.iter_456.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_456.code_ptr)] : local.iter_456.code_ptr :
      local.code_457[0] == "]"
        ? local.iter_456.tape[local.iter_456.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_456.code_ptr)] : local.iter_456.code_ptr
        : local.iter_456.code_ptr)

    steps_taken = 1 + local.iter_456.steps_taken
  }
}

locals {
  code_458 = (try(local.iter_457.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_457.code_ptr, local.iter_457.code_ptr + 2)
    : [null])

  input_458 = (local.code_458[0] == ","
    ? substr(local.input_457, local.code_458[1], -1)
    : local.input_457)

  iter_458 = try(local.iter_457.code_ptr >= length(var.code), true) ? local.iter_457 : {
    output = (local.code_458[0] == "."
      ? "${local.iter_457.output}${join("", [for _ in range(local.code_458[1]) : jsondecode(format("\"\\u%04x\"", local.iter_457.tape[local.iter_457.tape_ptr]))])}"
      : local.iter_457.output)
    
    tape = (
      local.code_458[0] == "+"
        ? [for i, b in local.iter_457.tape : (i == local.iter_457.tape_ptr ? (b + local.code_458[1]) % 256 : b)] :
      local.code_458[0] == "-"
        ? [for i, b in local.iter_457.tape : (i == local.iter_457.tape_ptr ? (b - local.code_458[1] + 256) % 256 : b)] :
      local.code_458[0] == ","
        ? [for i, b in local.iter_457.tape : (i == local.iter_457.tape_ptr ? local.ascii_lookup[substr(local.input_458, 0, 1)] : b)]
        : local.iter_457.tape)

    tape_ptr = (
      local.code_458[0] == "<"
        ? local.iter_457.tape_ptr - local.code_458[1] :
      local.code_458[0] == ">"
        ? local.iter_457.tape_ptr + local.code_458[1]
        : local.iter_457.tape_ptr)

    code_ptr = 2 + (
      local.code_458[0] == "["
        ? local.iter_457.tape[local.iter_457.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_457.code_ptr)] : local.iter_457.code_ptr :
      local.code_458[0] == "]"
        ? local.iter_457.tape[local.iter_457.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_457.code_ptr)] : local.iter_457.code_ptr
        : local.iter_457.code_ptr)

    steps_taken = 1 + local.iter_457.steps_taken
  }
}

locals {
  code_459 = (try(local.iter_458.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_458.code_ptr, local.iter_458.code_ptr + 2)
    : [null])

  input_459 = (local.code_459[0] == ","
    ? substr(local.input_458, local.code_459[1], -1)
    : local.input_458)

  iter_459 = try(local.iter_458.code_ptr >= length(var.code), true) ? local.iter_458 : {
    output = (local.code_459[0] == "."
      ? "${local.iter_458.output}${join("", [for _ in range(local.code_459[1]) : jsondecode(format("\"\\u%04x\"", local.iter_458.tape[local.iter_458.tape_ptr]))])}"
      : local.iter_458.output)
    
    tape = (
      local.code_459[0] == "+"
        ? [for i, b in local.iter_458.tape : (i == local.iter_458.tape_ptr ? (b + local.code_459[1]) % 256 : b)] :
      local.code_459[0] == "-"
        ? [for i, b in local.iter_458.tape : (i == local.iter_458.tape_ptr ? (b - local.code_459[1] + 256) % 256 : b)] :
      local.code_459[0] == ","
        ? [for i, b in local.iter_458.tape : (i == local.iter_458.tape_ptr ? local.ascii_lookup[substr(local.input_459, 0, 1)] : b)]
        : local.iter_458.tape)

    tape_ptr = (
      local.code_459[0] == "<"
        ? local.iter_458.tape_ptr - local.code_459[1] :
      local.code_459[0] == ">"
        ? local.iter_458.tape_ptr + local.code_459[1]
        : local.iter_458.tape_ptr)

    code_ptr = 2 + (
      local.code_459[0] == "["
        ? local.iter_458.tape[local.iter_458.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_458.code_ptr)] : local.iter_458.code_ptr :
      local.code_459[0] == "]"
        ? local.iter_458.tape[local.iter_458.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_458.code_ptr)] : local.iter_458.code_ptr
        : local.iter_458.code_ptr)

    steps_taken = 1 + local.iter_458.steps_taken
  }
}

locals {
  code_460 = (try(local.iter_459.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_459.code_ptr, local.iter_459.code_ptr + 2)
    : [null])

  input_460 = (local.code_460[0] == ","
    ? substr(local.input_459, local.code_460[1], -1)
    : local.input_459)

  iter_460 = try(local.iter_459.code_ptr >= length(var.code), true) ? local.iter_459 : {
    output = (local.code_460[0] == "."
      ? "${local.iter_459.output}${join("", [for _ in range(local.code_460[1]) : jsondecode(format("\"\\u%04x\"", local.iter_459.tape[local.iter_459.tape_ptr]))])}"
      : local.iter_459.output)
    
    tape = (
      local.code_460[0] == "+"
        ? [for i, b in local.iter_459.tape : (i == local.iter_459.tape_ptr ? (b + local.code_460[1]) % 256 : b)] :
      local.code_460[0] == "-"
        ? [for i, b in local.iter_459.tape : (i == local.iter_459.tape_ptr ? (b - local.code_460[1] + 256) % 256 : b)] :
      local.code_460[0] == ","
        ? [for i, b in local.iter_459.tape : (i == local.iter_459.tape_ptr ? local.ascii_lookup[substr(local.input_460, 0, 1)] : b)]
        : local.iter_459.tape)

    tape_ptr = (
      local.code_460[0] == "<"
        ? local.iter_459.tape_ptr - local.code_460[1] :
      local.code_460[0] == ">"
        ? local.iter_459.tape_ptr + local.code_460[1]
        : local.iter_459.tape_ptr)

    code_ptr = 2 + (
      local.code_460[0] == "["
        ? local.iter_459.tape[local.iter_459.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_459.code_ptr)] : local.iter_459.code_ptr :
      local.code_460[0] == "]"
        ? local.iter_459.tape[local.iter_459.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_459.code_ptr)] : local.iter_459.code_ptr
        : local.iter_459.code_ptr)

    steps_taken = 1 + local.iter_459.steps_taken
  }
}

locals {
  code_461 = (try(local.iter_460.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_460.code_ptr, local.iter_460.code_ptr + 2)
    : [null])

  input_461 = (local.code_461[0] == ","
    ? substr(local.input_460, local.code_461[1], -1)
    : local.input_460)

  iter_461 = try(local.iter_460.code_ptr >= length(var.code), true) ? local.iter_460 : {
    output = (local.code_461[0] == "."
      ? "${local.iter_460.output}${join("", [for _ in range(local.code_461[1]) : jsondecode(format("\"\\u%04x\"", local.iter_460.tape[local.iter_460.tape_ptr]))])}"
      : local.iter_460.output)
    
    tape = (
      local.code_461[0] == "+"
        ? [for i, b in local.iter_460.tape : (i == local.iter_460.tape_ptr ? (b + local.code_461[1]) % 256 : b)] :
      local.code_461[0] == "-"
        ? [for i, b in local.iter_460.tape : (i == local.iter_460.tape_ptr ? (b - local.code_461[1] + 256) % 256 : b)] :
      local.code_461[0] == ","
        ? [for i, b in local.iter_460.tape : (i == local.iter_460.tape_ptr ? local.ascii_lookup[substr(local.input_461, 0, 1)] : b)]
        : local.iter_460.tape)

    tape_ptr = (
      local.code_461[0] == "<"
        ? local.iter_460.tape_ptr - local.code_461[1] :
      local.code_461[0] == ">"
        ? local.iter_460.tape_ptr + local.code_461[1]
        : local.iter_460.tape_ptr)

    code_ptr = 2 + (
      local.code_461[0] == "["
        ? local.iter_460.tape[local.iter_460.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_460.code_ptr)] : local.iter_460.code_ptr :
      local.code_461[0] == "]"
        ? local.iter_460.tape[local.iter_460.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_460.code_ptr)] : local.iter_460.code_ptr
        : local.iter_460.code_ptr)

    steps_taken = 1 + local.iter_460.steps_taken
  }
}

locals {
  code_462 = (try(local.iter_461.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_461.code_ptr, local.iter_461.code_ptr + 2)
    : [null])

  input_462 = (local.code_462[0] == ","
    ? substr(local.input_461, local.code_462[1], -1)
    : local.input_461)

  iter_462 = try(local.iter_461.code_ptr >= length(var.code), true) ? local.iter_461 : {
    output = (local.code_462[0] == "."
      ? "${local.iter_461.output}${join("", [for _ in range(local.code_462[1]) : jsondecode(format("\"\\u%04x\"", local.iter_461.tape[local.iter_461.tape_ptr]))])}"
      : local.iter_461.output)
    
    tape = (
      local.code_462[0] == "+"
        ? [for i, b in local.iter_461.tape : (i == local.iter_461.tape_ptr ? (b + local.code_462[1]) % 256 : b)] :
      local.code_462[0] == "-"
        ? [for i, b in local.iter_461.tape : (i == local.iter_461.tape_ptr ? (b - local.code_462[1] + 256) % 256 : b)] :
      local.code_462[0] == ","
        ? [for i, b in local.iter_461.tape : (i == local.iter_461.tape_ptr ? local.ascii_lookup[substr(local.input_462, 0, 1)] : b)]
        : local.iter_461.tape)

    tape_ptr = (
      local.code_462[0] == "<"
        ? local.iter_461.tape_ptr - local.code_462[1] :
      local.code_462[0] == ">"
        ? local.iter_461.tape_ptr + local.code_462[1]
        : local.iter_461.tape_ptr)

    code_ptr = 2 + (
      local.code_462[0] == "["
        ? local.iter_461.tape[local.iter_461.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_461.code_ptr)] : local.iter_461.code_ptr :
      local.code_462[0] == "]"
        ? local.iter_461.tape[local.iter_461.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_461.code_ptr)] : local.iter_461.code_ptr
        : local.iter_461.code_ptr)

    steps_taken = 1 + local.iter_461.steps_taken
  }
}

locals {
  code_463 = (try(local.iter_462.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_462.code_ptr, local.iter_462.code_ptr + 2)
    : [null])

  input_463 = (local.code_463[0] == ","
    ? substr(local.input_462, local.code_463[1], -1)
    : local.input_462)

  iter_463 = try(local.iter_462.code_ptr >= length(var.code), true) ? local.iter_462 : {
    output = (local.code_463[0] == "."
      ? "${local.iter_462.output}${join("", [for _ in range(local.code_463[1]) : jsondecode(format("\"\\u%04x\"", local.iter_462.tape[local.iter_462.tape_ptr]))])}"
      : local.iter_462.output)
    
    tape = (
      local.code_463[0] == "+"
        ? [for i, b in local.iter_462.tape : (i == local.iter_462.tape_ptr ? (b + local.code_463[1]) % 256 : b)] :
      local.code_463[0] == "-"
        ? [for i, b in local.iter_462.tape : (i == local.iter_462.tape_ptr ? (b - local.code_463[1] + 256) % 256 : b)] :
      local.code_463[0] == ","
        ? [for i, b in local.iter_462.tape : (i == local.iter_462.tape_ptr ? local.ascii_lookup[substr(local.input_463, 0, 1)] : b)]
        : local.iter_462.tape)

    tape_ptr = (
      local.code_463[0] == "<"
        ? local.iter_462.tape_ptr - local.code_463[1] :
      local.code_463[0] == ">"
        ? local.iter_462.tape_ptr + local.code_463[1]
        : local.iter_462.tape_ptr)

    code_ptr = 2 + (
      local.code_463[0] == "["
        ? local.iter_462.tape[local.iter_462.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_462.code_ptr)] : local.iter_462.code_ptr :
      local.code_463[0] == "]"
        ? local.iter_462.tape[local.iter_462.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_462.code_ptr)] : local.iter_462.code_ptr
        : local.iter_462.code_ptr)

    steps_taken = 1 + local.iter_462.steps_taken
  }
}

locals {
  code_464 = (try(local.iter_463.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_463.code_ptr, local.iter_463.code_ptr + 2)
    : [null])

  input_464 = (local.code_464[0] == ","
    ? substr(local.input_463, local.code_464[1], -1)
    : local.input_463)

  iter_464 = try(local.iter_463.code_ptr >= length(var.code), true) ? local.iter_463 : {
    output = (local.code_464[0] == "."
      ? "${local.iter_463.output}${join("", [for _ in range(local.code_464[1]) : jsondecode(format("\"\\u%04x\"", local.iter_463.tape[local.iter_463.tape_ptr]))])}"
      : local.iter_463.output)
    
    tape = (
      local.code_464[0] == "+"
        ? [for i, b in local.iter_463.tape : (i == local.iter_463.tape_ptr ? (b + local.code_464[1]) % 256 : b)] :
      local.code_464[0] == "-"
        ? [for i, b in local.iter_463.tape : (i == local.iter_463.tape_ptr ? (b - local.code_464[1] + 256) % 256 : b)] :
      local.code_464[0] == ","
        ? [for i, b in local.iter_463.tape : (i == local.iter_463.tape_ptr ? local.ascii_lookup[substr(local.input_464, 0, 1)] : b)]
        : local.iter_463.tape)

    tape_ptr = (
      local.code_464[0] == "<"
        ? local.iter_463.tape_ptr - local.code_464[1] :
      local.code_464[0] == ">"
        ? local.iter_463.tape_ptr + local.code_464[1]
        : local.iter_463.tape_ptr)

    code_ptr = 2 + (
      local.code_464[0] == "["
        ? local.iter_463.tape[local.iter_463.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_463.code_ptr)] : local.iter_463.code_ptr :
      local.code_464[0] == "]"
        ? local.iter_463.tape[local.iter_463.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_463.code_ptr)] : local.iter_463.code_ptr
        : local.iter_463.code_ptr)

    steps_taken = 1 + local.iter_463.steps_taken
  }
}

locals {
  code_465 = (try(local.iter_464.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_464.code_ptr, local.iter_464.code_ptr + 2)
    : [null])

  input_465 = (local.code_465[0] == ","
    ? substr(local.input_464, local.code_465[1], -1)
    : local.input_464)

  iter_465 = try(local.iter_464.code_ptr >= length(var.code), true) ? local.iter_464 : {
    output = (local.code_465[0] == "."
      ? "${local.iter_464.output}${join("", [for _ in range(local.code_465[1]) : jsondecode(format("\"\\u%04x\"", local.iter_464.tape[local.iter_464.tape_ptr]))])}"
      : local.iter_464.output)
    
    tape = (
      local.code_465[0] == "+"
        ? [for i, b in local.iter_464.tape : (i == local.iter_464.tape_ptr ? (b + local.code_465[1]) % 256 : b)] :
      local.code_465[0] == "-"
        ? [for i, b in local.iter_464.tape : (i == local.iter_464.tape_ptr ? (b - local.code_465[1] + 256) % 256 : b)] :
      local.code_465[0] == ","
        ? [for i, b in local.iter_464.tape : (i == local.iter_464.tape_ptr ? local.ascii_lookup[substr(local.input_465, 0, 1)] : b)]
        : local.iter_464.tape)

    tape_ptr = (
      local.code_465[0] == "<"
        ? local.iter_464.tape_ptr - local.code_465[1] :
      local.code_465[0] == ">"
        ? local.iter_464.tape_ptr + local.code_465[1]
        : local.iter_464.tape_ptr)

    code_ptr = 2 + (
      local.code_465[0] == "["
        ? local.iter_464.tape[local.iter_464.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_464.code_ptr)] : local.iter_464.code_ptr :
      local.code_465[0] == "]"
        ? local.iter_464.tape[local.iter_464.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_464.code_ptr)] : local.iter_464.code_ptr
        : local.iter_464.code_ptr)

    steps_taken = 1 + local.iter_464.steps_taken
  }
}

locals {
  code_466 = (try(local.iter_465.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_465.code_ptr, local.iter_465.code_ptr + 2)
    : [null])

  input_466 = (local.code_466[0] == ","
    ? substr(local.input_465, local.code_466[1], -1)
    : local.input_465)

  iter_466 = try(local.iter_465.code_ptr >= length(var.code), true) ? local.iter_465 : {
    output = (local.code_466[0] == "."
      ? "${local.iter_465.output}${join("", [for _ in range(local.code_466[1]) : jsondecode(format("\"\\u%04x\"", local.iter_465.tape[local.iter_465.tape_ptr]))])}"
      : local.iter_465.output)
    
    tape = (
      local.code_466[0] == "+"
        ? [for i, b in local.iter_465.tape : (i == local.iter_465.tape_ptr ? (b + local.code_466[1]) % 256 : b)] :
      local.code_466[0] == "-"
        ? [for i, b in local.iter_465.tape : (i == local.iter_465.tape_ptr ? (b - local.code_466[1] + 256) % 256 : b)] :
      local.code_466[0] == ","
        ? [for i, b in local.iter_465.tape : (i == local.iter_465.tape_ptr ? local.ascii_lookup[substr(local.input_466, 0, 1)] : b)]
        : local.iter_465.tape)

    tape_ptr = (
      local.code_466[0] == "<"
        ? local.iter_465.tape_ptr - local.code_466[1] :
      local.code_466[0] == ">"
        ? local.iter_465.tape_ptr + local.code_466[1]
        : local.iter_465.tape_ptr)

    code_ptr = 2 + (
      local.code_466[0] == "["
        ? local.iter_465.tape[local.iter_465.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_465.code_ptr)] : local.iter_465.code_ptr :
      local.code_466[0] == "]"
        ? local.iter_465.tape[local.iter_465.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_465.code_ptr)] : local.iter_465.code_ptr
        : local.iter_465.code_ptr)

    steps_taken = 1 + local.iter_465.steps_taken
  }
}

locals {
  code_467 = (try(local.iter_466.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_466.code_ptr, local.iter_466.code_ptr + 2)
    : [null])

  input_467 = (local.code_467[0] == ","
    ? substr(local.input_466, local.code_467[1], -1)
    : local.input_466)

  iter_467 = try(local.iter_466.code_ptr >= length(var.code), true) ? local.iter_466 : {
    output = (local.code_467[0] == "."
      ? "${local.iter_466.output}${join("", [for _ in range(local.code_467[1]) : jsondecode(format("\"\\u%04x\"", local.iter_466.tape[local.iter_466.tape_ptr]))])}"
      : local.iter_466.output)
    
    tape = (
      local.code_467[0] == "+"
        ? [for i, b in local.iter_466.tape : (i == local.iter_466.tape_ptr ? (b + local.code_467[1]) % 256 : b)] :
      local.code_467[0] == "-"
        ? [for i, b in local.iter_466.tape : (i == local.iter_466.tape_ptr ? (b - local.code_467[1] + 256) % 256 : b)] :
      local.code_467[0] == ","
        ? [for i, b in local.iter_466.tape : (i == local.iter_466.tape_ptr ? local.ascii_lookup[substr(local.input_467, 0, 1)] : b)]
        : local.iter_466.tape)

    tape_ptr = (
      local.code_467[0] == "<"
        ? local.iter_466.tape_ptr - local.code_467[1] :
      local.code_467[0] == ">"
        ? local.iter_466.tape_ptr + local.code_467[1]
        : local.iter_466.tape_ptr)

    code_ptr = 2 + (
      local.code_467[0] == "["
        ? local.iter_466.tape[local.iter_466.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_466.code_ptr)] : local.iter_466.code_ptr :
      local.code_467[0] == "]"
        ? local.iter_466.tape[local.iter_466.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_466.code_ptr)] : local.iter_466.code_ptr
        : local.iter_466.code_ptr)

    steps_taken = 1 + local.iter_466.steps_taken
  }
}

locals {
  code_468 = (try(local.iter_467.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_467.code_ptr, local.iter_467.code_ptr + 2)
    : [null])

  input_468 = (local.code_468[0] == ","
    ? substr(local.input_467, local.code_468[1], -1)
    : local.input_467)

  iter_468 = try(local.iter_467.code_ptr >= length(var.code), true) ? local.iter_467 : {
    output = (local.code_468[0] == "."
      ? "${local.iter_467.output}${join("", [for _ in range(local.code_468[1]) : jsondecode(format("\"\\u%04x\"", local.iter_467.tape[local.iter_467.tape_ptr]))])}"
      : local.iter_467.output)
    
    tape = (
      local.code_468[0] == "+"
        ? [for i, b in local.iter_467.tape : (i == local.iter_467.tape_ptr ? (b + local.code_468[1]) % 256 : b)] :
      local.code_468[0] == "-"
        ? [for i, b in local.iter_467.tape : (i == local.iter_467.tape_ptr ? (b - local.code_468[1] + 256) % 256 : b)] :
      local.code_468[0] == ","
        ? [for i, b in local.iter_467.tape : (i == local.iter_467.tape_ptr ? local.ascii_lookup[substr(local.input_468, 0, 1)] : b)]
        : local.iter_467.tape)

    tape_ptr = (
      local.code_468[0] == "<"
        ? local.iter_467.tape_ptr - local.code_468[1] :
      local.code_468[0] == ">"
        ? local.iter_467.tape_ptr + local.code_468[1]
        : local.iter_467.tape_ptr)

    code_ptr = 2 + (
      local.code_468[0] == "["
        ? local.iter_467.tape[local.iter_467.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_467.code_ptr)] : local.iter_467.code_ptr :
      local.code_468[0] == "]"
        ? local.iter_467.tape[local.iter_467.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_467.code_ptr)] : local.iter_467.code_ptr
        : local.iter_467.code_ptr)

    steps_taken = 1 + local.iter_467.steps_taken
  }
}

locals {
  code_469 = (try(local.iter_468.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_468.code_ptr, local.iter_468.code_ptr + 2)
    : [null])

  input_469 = (local.code_469[0] == ","
    ? substr(local.input_468, local.code_469[1], -1)
    : local.input_468)

  iter_469 = try(local.iter_468.code_ptr >= length(var.code), true) ? local.iter_468 : {
    output = (local.code_469[0] == "."
      ? "${local.iter_468.output}${join("", [for _ in range(local.code_469[1]) : jsondecode(format("\"\\u%04x\"", local.iter_468.tape[local.iter_468.tape_ptr]))])}"
      : local.iter_468.output)
    
    tape = (
      local.code_469[0] == "+"
        ? [for i, b in local.iter_468.tape : (i == local.iter_468.tape_ptr ? (b + local.code_469[1]) % 256 : b)] :
      local.code_469[0] == "-"
        ? [for i, b in local.iter_468.tape : (i == local.iter_468.tape_ptr ? (b - local.code_469[1] + 256) % 256 : b)] :
      local.code_469[0] == ","
        ? [for i, b in local.iter_468.tape : (i == local.iter_468.tape_ptr ? local.ascii_lookup[substr(local.input_469, 0, 1)] : b)]
        : local.iter_468.tape)

    tape_ptr = (
      local.code_469[0] == "<"
        ? local.iter_468.tape_ptr - local.code_469[1] :
      local.code_469[0] == ">"
        ? local.iter_468.tape_ptr + local.code_469[1]
        : local.iter_468.tape_ptr)

    code_ptr = 2 + (
      local.code_469[0] == "["
        ? local.iter_468.tape[local.iter_468.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_468.code_ptr)] : local.iter_468.code_ptr :
      local.code_469[0] == "]"
        ? local.iter_468.tape[local.iter_468.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_468.code_ptr)] : local.iter_468.code_ptr
        : local.iter_468.code_ptr)

    steps_taken = 1 + local.iter_468.steps_taken
  }
}

locals {
  code_470 = (try(local.iter_469.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_469.code_ptr, local.iter_469.code_ptr + 2)
    : [null])

  input_470 = (local.code_470[0] == ","
    ? substr(local.input_469, local.code_470[1], -1)
    : local.input_469)

  iter_470 = try(local.iter_469.code_ptr >= length(var.code), true) ? local.iter_469 : {
    output = (local.code_470[0] == "."
      ? "${local.iter_469.output}${join("", [for _ in range(local.code_470[1]) : jsondecode(format("\"\\u%04x\"", local.iter_469.tape[local.iter_469.tape_ptr]))])}"
      : local.iter_469.output)
    
    tape = (
      local.code_470[0] == "+"
        ? [for i, b in local.iter_469.tape : (i == local.iter_469.tape_ptr ? (b + local.code_470[1]) % 256 : b)] :
      local.code_470[0] == "-"
        ? [for i, b in local.iter_469.tape : (i == local.iter_469.tape_ptr ? (b - local.code_470[1] + 256) % 256 : b)] :
      local.code_470[0] == ","
        ? [for i, b in local.iter_469.tape : (i == local.iter_469.tape_ptr ? local.ascii_lookup[substr(local.input_470, 0, 1)] : b)]
        : local.iter_469.tape)

    tape_ptr = (
      local.code_470[0] == "<"
        ? local.iter_469.tape_ptr - local.code_470[1] :
      local.code_470[0] == ">"
        ? local.iter_469.tape_ptr + local.code_470[1]
        : local.iter_469.tape_ptr)

    code_ptr = 2 + (
      local.code_470[0] == "["
        ? local.iter_469.tape[local.iter_469.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_469.code_ptr)] : local.iter_469.code_ptr :
      local.code_470[0] == "]"
        ? local.iter_469.tape[local.iter_469.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_469.code_ptr)] : local.iter_469.code_ptr
        : local.iter_469.code_ptr)

    steps_taken = 1 + local.iter_469.steps_taken
  }
}

locals {
  code_471 = (try(local.iter_470.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_470.code_ptr, local.iter_470.code_ptr + 2)
    : [null])

  input_471 = (local.code_471[0] == ","
    ? substr(local.input_470, local.code_471[1], -1)
    : local.input_470)

  iter_471 = try(local.iter_470.code_ptr >= length(var.code), true) ? local.iter_470 : {
    output = (local.code_471[0] == "."
      ? "${local.iter_470.output}${join("", [for _ in range(local.code_471[1]) : jsondecode(format("\"\\u%04x\"", local.iter_470.tape[local.iter_470.tape_ptr]))])}"
      : local.iter_470.output)
    
    tape = (
      local.code_471[0] == "+"
        ? [for i, b in local.iter_470.tape : (i == local.iter_470.tape_ptr ? (b + local.code_471[1]) % 256 : b)] :
      local.code_471[0] == "-"
        ? [for i, b in local.iter_470.tape : (i == local.iter_470.tape_ptr ? (b - local.code_471[1] + 256) % 256 : b)] :
      local.code_471[0] == ","
        ? [for i, b in local.iter_470.tape : (i == local.iter_470.tape_ptr ? local.ascii_lookup[substr(local.input_471, 0, 1)] : b)]
        : local.iter_470.tape)

    tape_ptr = (
      local.code_471[0] == "<"
        ? local.iter_470.tape_ptr - local.code_471[1] :
      local.code_471[0] == ">"
        ? local.iter_470.tape_ptr + local.code_471[1]
        : local.iter_470.tape_ptr)

    code_ptr = 2 + (
      local.code_471[0] == "["
        ? local.iter_470.tape[local.iter_470.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_470.code_ptr)] : local.iter_470.code_ptr :
      local.code_471[0] == "]"
        ? local.iter_470.tape[local.iter_470.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_470.code_ptr)] : local.iter_470.code_ptr
        : local.iter_470.code_ptr)

    steps_taken = 1 + local.iter_470.steps_taken
  }
}

locals {
  code_472 = (try(local.iter_471.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_471.code_ptr, local.iter_471.code_ptr + 2)
    : [null])

  input_472 = (local.code_472[0] == ","
    ? substr(local.input_471, local.code_472[1], -1)
    : local.input_471)

  iter_472 = try(local.iter_471.code_ptr >= length(var.code), true) ? local.iter_471 : {
    output = (local.code_472[0] == "."
      ? "${local.iter_471.output}${join("", [for _ in range(local.code_472[1]) : jsondecode(format("\"\\u%04x\"", local.iter_471.tape[local.iter_471.tape_ptr]))])}"
      : local.iter_471.output)
    
    tape = (
      local.code_472[0] == "+"
        ? [for i, b in local.iter_471.tape : (i == local.iter_471.tape_ptr ? (b + local.code_472[1]) % 256 : b)] :
      local.code_472[0] == "-"
        ? [for i, b in local.iter_471.tape : (i == local.iter_471.tape_ptr ? (b - local.code_472[1] + 256) % 256 : b)] :
      local.code_472[0] == ","
        ? [for i, b in local.iter_471.tape : (i == local.iter_471.tape_ptr ? local.ascii_lookup[substr(local.input_472, 0, 1)] : b)]
        : local.iter_471.tape)

    tape_ptr = (
      local.code_472[0] == "<"
        ? local.iter_471.tape_ptr - local.code_472[1] :
      local.code_472[0] == ">"
        ? local.iter_471.tape_ptr + local.code_472[1]
        : local.iter_471.tape_ptr)

    code_ptr = 2 + (
      local.code_472[0] == "["
        ? local.iter_471.tape[local.iter_471.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_471.code_ptr)] : local.iter_471.code_ptr :
      local.code_472[0] == "]"
        ? local.iter_471.tape[local.iter_471.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_471.code_ptr)] : local.iter_471.code_ptr
        : local.iter_471.code_ptr)

    steps_taken = 1 + local.iter_471.steps_taken
  }
}

locals {
  code_473 = (try(local.iter_472.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_472.code_ptr, local.iter_472.code_ptr + 2)
    : [null])

  input_473 = (local.code_473[0] == ","
    ? substr(local.input_472, local.code_473[1], -1)
    : local.input_472)

  iter_473 = try(local.iter_472.code_ptr >= length(var.code), true) ? local.iter_472 : {
    output = (local.code_473[0] == "."
      ? "${local.iter_472.output}${join("", [for _ in range(local.code_473[1]) : jsondecode(format("\"\\u%04x\"", local.iter_472.tape[local.iter_472.tape_ptr]))])}"
      : local.iter_472.output)
    
    tape = (
      local.code_473[0] == "+"
        ? [for i, b in local.iter_472.tape : (i == local.iter_472.tape_ptr ? (b + local.code_473[1]) % 256 : b)] :
      local.code_473[0] == "-"
        ? [for i, b in local.iter_472.tape : (i == local.iter_472.tape_ptr ? (b - local.code_473[1] + 256) % 256 : b)] :
      local.code_473[0] == ","
        ? [for i, b in local.iter_472.tape : (i == local.iter_472.tape_ptr ? local.ascii_lookup[substr(local.input_473, 0, 1)] : b)]
        : local.iter_472.tape)

    tape_ptr = (
      local.code_473[0] == "<"
        ? local.iter_472.tape_ptr - local.code_473[1] :
      local.code_473[0] == ">"
        ? local.iter_472.tape_ptr + local.code_473[1]
        : local.iter_472.tape_ptr)

    code_ptr = 2 + (
      local.code_473[0] == "["
        ? local.iter_472.tape[local.iter_472.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_472.code_ptr)] : local.iter_472.code_ptr :
      local.code_473[0] == "]"
        ? local.iter_472.tape[local.iter_472.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_472.code_ptr)] : local.iter_472.code_ptr
        : local.iter_472.code_ptr)

    steps_taken = 1 + local.iter_472.steps_taken
  }
}

locals {
  code_474 = (try(local.iter_473.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_473.code_ptr, local.iter_473.code_ptr + 2)
    : [null])

  input_474 = (local.code_474[0] == ","
    ? substr(local.input_473, local.code_474[1], -1)
    : local.input_473)

  iter_474 = try(local.iter_473.code_ptr >= length(var.code), true) ? local.iter_473 : {
    output = (local.code_474[0] == "."
      ? "${local.iter_473.output}${join("", [for _ in range(local.code_474[1]) : jsondecode(format("\"\\u%04x\"", local.iter_473.tape[local.iter_473.tape_ptr]))])}"
      : local.iter_473.output)
    
    tape = (
      local.code_474[0] == "+"
        ? [for i, b in local.iter_473.tape : (i == local.iter_473.tape_ptr ? (b + local.code_474[1]) % 256 : b)] :
      local.code_474[0] == "-"
        ? [for i, b in local.iter_473.tape : (i == local.iter_473.tape_ptr ? (b - local.code_474[1] + 256) % 256 : b)] :
      local.code_474[0] == ","
        ? [for i, b in local.iter_473.tape : (i == local.iter_473.tape_ptr ? local.ascii_lookup[substr(local.input_474, 0, 1)] : b)]
        : local.iter_473.tape)

    tape_ptr = (
      local.code_474[0] == "<"
        ? local.iter_473.tape_ptr - local.code_474[1] :
      local.code_474[0] == ">"
        ? local.iter_473.tape_ptr + local.code_474[1]
        : local.iter_473.tape_ptr)

    code_ptr = 2 + (
      local.code_474[0] == "["
        ? local.iter_473.tape[local.iter_473.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_473.code_ptr)] : local.iter_473.code_ptr :
      local.code_474[0] == "]"
        ? local.iter_473.tape[local.iter_473.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_473.code_ptr)] : local.iter_473.code_ptr
        : local.iter_473.code_ptr)

    steps_taken = 1 + local.iter_473.steps_taken
  }
}

locals {
  code_475 = (try(local.iter_474.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_474.code_ptr, local.iter_474.code_ptr + 2)
    : [null])

  input_475 = (local.code_475[0] == ","
    ? substr(local.input_474, local.code_475[1], -1)
    : local.input_474)

  iter_475 = try(local.iter_474.code_ptr >= length(var.code), true) ? local.iter_474 : {
    output = (local.code_475[0] == "."
      ? "${local.iter_474.output}${join("", [for _ in range(local.code_475[1]) : jsondecode(format("\"\\u%04x\"", local.iter_474.tape[local.iter_474.tape_ptr]))])}"
      : local.iter_474.output)
    
    tape = (
      local.code_475[0] == "+"
        ? [for i, b in local.iter_474.tape : (i == local.iter_474.tape_ptr ? (b + local.code_475[1]) % 256 : b)] :
      local.code_475[0] == "-"
        ? [for i, b in local.iter_474.tape : (i == local.iter_474.tape_ptr ? (b - local.code_475[1] + 256) % 256 : b)] :
      local.code_475[0] == ","
        ? [for i, b in local.iter_474.tape : (i == local.iter_474.tape_ptr ? local.ascii_lookup[substr(local.input_475, 0, 1)] : b)]
        : local.iter_474.tape)

    tape_ptr = (
      local.code_475[0] == "<"
        ? local.iter_474.tape_ptr - local.code_475[1] :
      local.code_475[0] == ">"
        ? local.iter_474.tape_ptr + local.code_475[1]
        : local.iter_474.tape_ptr)

    code_ptr = 2 + (
      local.code_475[0] == "["
        ? local.iter_474.tape[local.iter_474.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_474.code_ptr)] : local.iter_474.code_ptr :
      local.code_475[0] == "]"
        ? local.iter_474.tape[local.iter_474.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_474.code_ptr)] : local.iter_474.code_ptr
        : local.iter_474.code_ptr)

    steps_taken = 1 + local.iter_474.steps_taken
  }
}

locals {
  code_476 = (try(local.iter_475.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_475.code_ptr, local.iter_475.code_ptr + 2)
    : [null])

  input_476 = (local.code_476[0] == ","
    ? substr(local.input_475, local.code_476[1], -1)
    : local.input_475)

  iter_476 = try(local.iter_475.code_ptr >= length(var.code), true) ? local.iter_475 : {
    output = (local.code_476[0] == "."
      ? "${local.iter_475.output}${join("", [for _ in range(local.code_476[1]) : jsondecode(format("\"\\u%04x\"", local.iter_475.tape[local.iter_475.tape_ptr]))])}"
      : local.iter_475.output)
    
    tape = (
      local.code_476[0] == "+"
        ? [for i, b in local.iter_475.tape : (i == local.iter_475.tape_ptr ? (b + local.code_476[1]) % 256 : b)] :
      local.code_476[0] == "-"
        ? [for i, b in local.iter_475.tape : (i == local.iter_475.tape_ptr ? (b - local.code_476[1] + 256) % 256 : b)] :
      local.code_476[0] == ","
        ? [for i, b in local.iter_475.tape : (i == local.iter_475.tape_ptr ? local.ascii_lookup[substr(local.input_476, 0, 1)] : b)]
        : local.iter_475.tape)

    tape_ptr = (
      local.code_476[0] == "<"
        ? local.iter_475.tape_ptr - local.code_476[1] :
      local.code_476[0] == ">"
        ? local.iter_475.tape_ptr + local.code_476[1]
        : local.iter_475.tape_ptr)

    code_ptr = 2 + (
      local.code_476[0] == "["
        ? local.iter_475.tape[local.iter_475.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_475.code_ptr)] : local.iter_475.code_ptr :
      local.code_476[0] == "]"
        ? local.iter_475.tape[local.iter_475.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_475.code_ptr)] : local.iter_475.code_ptr
        : local.iter_475.code_ptr)

    steps_taken = 1 + local.iter_475.steps_taken
  }
}

locals {
  code_477 = (try(local.iter_476.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_476.code_ptr, local.iter_476.code_ptr + 2)
    : [null])

  input_477 = (local.code_477[0] == ","
    ? substr(local.input_476, local.code_477[1], -1)
    : local.input_476)

  iter_477 = try(local.iter_476.code_ptr >= length(var.code), true) ? local.iter_476 : {
    output = (local.code_477[0] == "."
      ? "${local.iter_476.output}${join("", [for _ in range(local.code_477[1]) : jsondecode(format("\"\\u%04x\"", local.iter_476.tape[local.iter_476.tape_ptr]))])}"
      : local.iter_476.output)
    
    tape = (
      local.code_477[0] == "+"
        ? [for i, b in local.iter_476.tape : (i == local.iter_476.tape_ptr ? (b + local.code_477[1]) % 256 : b)] :
      local.code_477[0] == "-"
        ? [for i, b in local.iter_476.tape : (i == local.iter_476.tape_ptr ? (b - local.code_477[1] + 256) % 256 : b)] :
      local.code_477[0] == ","
        ? [for i, b in local.iter_476.tape : (i == local.iter_476.tape_ptr ? local.ascii_lookup[substr(local.input_477, 0, 1)] : b)]
        : local.iter_476.tape)

    tape_ptr = (
      local.code_477[0] == "<"
        ? local.iter_476.tape_ptr - local.code_477[1] :
      local.code_477[0] == ">"
        ? local.iter_476.tape_ptr + local.code_477[1]
        : local.iter_476.tape_ptr)

    code_ptr = 2 + (
      local.code_477[0] == "["
        ? local.iter_476.tape[local.iter_476.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_476.code_ptr)] : local.iter_476.code_ptr :
      local.code_477[0] == "]"
        ? local.iter_476.tape[local.iter_476.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_476.code_ptr)] : local.iter_476.code_ptr
        : local.iter_476.code_ptr)

    steps_taken = 1 + local.iter_476.steps_taken
  }
}

locals {
  code_478 = (try(local.iter_477.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_477.code_ptr, local.iter_477.code_ptr + 2)
    : [null])

  input_478 = (local.code_478[0] == ","
    ? substr(local.input_477, local.code_478[1], -1)
    : local.input_477)

  iter_478 = try(local.iter_477.code_ptr >= length(var.code), true) ? local.iter_477 : {
    output = (local.code_478[0] == "."
      ? "${local.iter_477.output}${join("", [for _ in range(local.code_478[1]) : jsondecode(format("\"\\u%04x\"", local.iter_477.tape[local.iter_477.tape_ptr]))])}"
      : local.iter_477.output)
    
    tape = (
      local.code_478[0] == "+"
        ? [for i, b in local.iter_477.tape : (i == local.iter_477.tape_ptr ? (b + local.code_478[1]) % 256 : b)] :
      local.code_478[0] == "-"
        ? [for i, b in local.iter_477.tape : (i == local.iter_477.tape_ptr ? (b - local.code_478[1] + 256) % 256 : b)] :
      local.code_478[0] == ","
        ? [for i, b in local.iter_477.tape : (i == local.iter_477.tape_ptr ? local.ascii_lookup[substr(local.input_478, 0, 1)] : b)]
        : local.iter_477.tape)

    tape_ptr = (
      local.code_478[0] == "<"
        ? local.iter_477.tape_ptr - local.code_478[1] :
      local.code_478[0] == ">"
        ? local.iter_477.tape_ptr + local.code_478[1]
        : local.iter_477.tape_ptr)

    code_ptr = 2 + (
      local.code_478[0] == "["
        ? local.iter_477.tape[local.iter_477.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_477.code_ptr)] : local.iter_477.code_ptr :
      local.code_478[0] == "]"
        ? local.iter_477.tape[local.iter_477.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_477.code_ptr)] : local.iter_477.code_ptr
        : local.iter_477.code_ptr)

    steps_taken = 1 + local.iter_477.steps_taken
  }
}

locals {
  code_479 = (try(local.iter_478.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_478.code_ptr, local.iter_478.code_ptr + 2)
    : [null])

  input_479 = (local.code_479[0] == ","
    ? substr(local.input_478, local.code_479[1], -1)
    : local.input_478)

  iter_479 = try(local.iter_478.code_ptr >= length(var.code), true) ? local.iter_478 : {
    output = (local.code_479[0] == "."
      ? "${local.iter_478.output}${join("", [for _ in range(local.code_479[1]) : jsondecode(format("\"\\u%04x\"", local.iter_478.tape[local.iter_478.tape_ptr]))])}"
      : local.iter_478.output)
    
    tape = (
      local.code_479[0] == "+"
        ? [for i, b in local.iter_478.tape : (i == local.iter_478.tape_ptr ? (b + local.code_479[1]) % 256 : b)] :
      local.code_479[0] == "-"
        ? [for i, b in local.iter_478.tape : (i == local.iter_478.tape_ptr ? (b - local.code_479[1] + 256) % 256 : b)] :
      local.code_479[0] == ","
        ? [for i, b in local.iter_478.tape : (i == local.iter_478.tape_ptr ? local.ascii_lookup[substr(local.input_479, 0, 1)] : b)]
        : local.iter_478.tape)

    tape_ptr = (
      local.code_479[0] == "<"
        ? local.iter_478.tape_ptr - local.code_479[1] :
      local.code_479[0] == ">"
        ? local.iter_478.tape_ptr + local.code_479[1]
        : local.iter_478.tape_ptr)

    code_ptr = 2 + (
      local.code_479[0] == "["
        ? local.iter_478.tape[local.iter_478.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_478.code_ptr)] : local.iter_478.code_ptr :
      local.code_479[0] == "]"
        ? local.iter_478.tape[local.iter_478.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_478.code_ptr)] : local.iter_478.code_ptr
        : local.iter_478.code_ptr)

    steps_taken = 1 + local.iter_478.steps_taken
  }
}

locals {
  code_480 = (try(local.iter_479.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_479.code_ptr, local.iter_479.code_ptr + 2)
    : [null])

  input_480 = (local.code_480[0] == ","
    ? substr(local.input_479, local.code_480[1], -1)
    : local.input_479)

  iter_480 = try(local.iter_479.code_ptr >= length(var.code), true) ? local.iter_479 : {
    output = (local.code_480[0] == "."
      ? "${local.iter_479.output}${join("", [for _ in range(local.code_480[1]) : jsondecode(format("\"\\u%04x\"", local.iter_479.tape[local.iter_479.tape_ptr]))])}"
      : local.iter_479.output)
    
    tape = (
      local.code_480[0] == "+"
        ? [for i, b in local.iter_479.tape : (i == local.iter_479.tape_ptr ? (b + local.code_480[1]) % 256 : b)] :
      local.code_480[0] == "-"
        ? [for i, b in local.iter_479.tape : (i == local.iter_479.tape_ptr ? (b - local.code_480[1] + 256) % 256 : b)] :
      local.code_480[0] == ","
        ? [for i, b in local.iter_479.tape : (i == local.iter_479.tape_ptr ? local.ascii_lookup[substr(local.input_480, 0, 1)] : b)]
        : local.iter_479.tape)

    tape_ptr = (
      local.code_480[0] == "<"
        ? local.iter_479.tape_ptr - local.code_480[1] :
      local.code_480[0] == ">"
        ? local.iter_479.tape_ptr + local.code_480[1]
        : local.iter_479.tape_ptr)

    code_ptr = 2 + (
      local.code_480[0] == "["
        ? local.iter_479.tape[local.iter_479.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_479.code_ptr)] : local.iter_479.code_ptr :
      local.code_480[0] == "]"
        ? local.iter_479.tape[local.iter_479.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_479.code_ptr)] : local.iter_479.code_ptr
        : local.iter_479.code_ptr)

    steps_taken = 1 + local.iter_479.steps_taken
  }
}

locals {
  code_481 = (try(local.iter_480.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_480.code_ptr, local.iter_480.code_ptr + 2)
    : [null])

  input_481 = (local.code_481[0] == ","
    ? substr(local.input_480, local.code_481[1], -1)
    : local.input_480)

  iter_481 = try(local.iter_480.code_ptr >= length(var.code), true) ? local.iter_480 : {
    output = (local.code_481[0] == "."
      ? "${local.iter_480.output}${join("", [for _ in range(local.code_481[1]) : jsondecode(format("\"\\u%04x\"", local.iter_480.tape[local.iter_480.tape_ptr]))])}"
      : local.iter_480.output)
    
    tape = (
      local.code_481[0] == "+"
        ? [for i, b in local.iter_480.tape : (i == local.iter_480.tape_ptr ? (b + local.code_481[1]) % 256 : b)] :
      local.code_481[0] == "-"
        ? [for i, b in local.iter_480.tape : (i == local.iter_480.tape_ptr ? (b - local.code_481[1] + 256) % 256 : b)] :
      local.code_481[0] == ","
        ? [for i, b in local.iter_480.tape : (i == local.iter_480.tape_ptr ? local.ascii_lookup[substr(local.input_481, 0, 1)] : b)]
        : local.iter_480.tape)

    tape_ptr = (
      local.code_481[0] == "<"
        ? local.iter_480.tape_ptr - local.code_481[1] :
      local.code_481[0] == ">"
        ? local.iter_480.tape_ptr + local.code_481[1]
        : local.iter_480.tape_ptr)

    code_ptr = 2 + (
      local.code_481[0] == "["
        ? local.iter_480.tape[local.iter_480.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_480.code_ptr)] : local.iter_480.code_ptr :
      local.code_481[0] == "]"
        ? local.iter_480.tape[local.iter_480.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_480.code_ptr)] : local.iter_480.code_ptr
        : local.iter_480.code_ptr)

    steps_taken = 1 + local.iter_480.steps_taken
  }
}

locals {
  code_482 = (try(local.iter_481.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_481.code_ptr, local.iter_481.code_ptr + 2)
    : [null])

  input_482 = (local.code_482[0] == ","
    ? substr(local.input_481, local.code_482[1], -1)
    : local.input_481)

  iter_482 = try(local.iter_481.code_ptr >= length(var.code), true) ? local.iter_481 : {
    output = (local.code_482[0] == "."
      ? "${local.iter_481.output}${join("", [for _ in range(local.code_482[1]) : jsondecode(format("\"\\u%04x\"", local.iter_481.tape[local.iter_481.tape_ptr]))])}"
      : local.iter_481.output)
    
    tape = (
      local.code_482[0] == "+"
        ? [for i, b in local.iter_481.tape : (i == local.iter_481.tape_ptr ? (b + local.code_482[1]) % 256 : b)] :
      local.code_482[0] == "-"
        ? [for i, b in local.iter_481.tape : (i == local.iter_481.tape_ptr ? (b - local.code_482[1] + 256) % 256 : b)] :
      local.code_482[0] == ","
        ? [for i, b in local.iter_481.tape : (i == local.iter_481.tape_ptr ? local.ascii_lookup[substr(local.input_482, 0, 1)] : b)]
        : local.iter_481.tape)

    tape_ptr = (
      local.code_482[0] == "<"
        ? local.iter_481.tape_ptr - local.code_482[1] :
      local.code_482[0] == ">"
        ? local.iter_481.tape_ptr + local.code_482[1]
        : local.iter_481.tape_ptr)

    code_ptr = 2 + (
      local.code_482[0] == "["
        ? local.iter_481.tape[local.iter_481.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_481.code_ptr)] : local.iter_481.code_ptr :
      local.code_482[0] == "]"
        ? local.iter_481.tape[local.iter_481.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_481.code_ptr)] : local.iter_481.code_ptr
        : local.iter_481.code_ptr)

    steps_taken = 1 + local.iter_481.steps_taken
  }
}

locals {
  code_483 = (try(local.iter_482.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_482.code_ptr, local.iter_482.code_ptr + 2)
    : [null])

  input_483 = (local.code_483[0] == ","
    ? substr(local.input_482, local.code_483[1], -1)
    : local.input_482)

  iter_483 = try(local.iter_482.code_ptr >= length(var.code), true) ? local.iter_482 : {
    output = (local.code_483[0] == "."
      ? "${local.iter_482.output}${join("", [for _ in range(local.code_483[1]) : jsondecode(format("\"\\u%04x\"", local.iter_482.tape[local.iter_482.tape_ptr]))])}"
      : local.iter_482.output)
    
    tape = (
      local.code_483[0] == "+"
        ? [for i, b in local.iter_482.tape : (i == local.iter_482.tape_ptr ? (b + local.code_483[1]) % 256 : b)] :
      local.code_483[0] == "-"
        ? [for i, b in local.iter_482.tape : (i == local.iter_482.tape_ptr ? (b - local.code_483[1] + 256) % 256 : b)] :
      local.code_483[0] == ","
        ? [for i, b in local.iter_482.tape : (i == local.iter_482.tape_ptr ? local.ascii_lookup[substr(local.input_483, 0, 1)] : b)]
        : local.iter_482.tape)

    tape_ptr = (
      local.code_483[0] == "<"
        ? local.iter_482.tape_ptr - local.code_483[1] :
      local.code_483[0] == ">"
        ? local.iter_482.tape_ptr + local.code_483[1]
        : local.iter_482.tape_ptr)

    code_ptr = 2 + (
      local.code_483[0] == "["
        ? local.iter_482.tape[local.iter_482.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_482.code_ptr)] : local.iter_482.code_ptr :
      local.code_483[0] == "]"
        ? local.iter_482.tape[local.iter_482.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_482.code_ptr)] : local.iter_482.code_ptr
        : local.iter_482.code_ptr)

    steps_taken = 1 + local.iter_482.steps_taken
  }
}

locals {
  code_484 = (try(local.iter_483.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_483.code_ptr, local.iter_483.code_ptr + 2)
    : [null])

  input_484 = (local.code_484[0] == ","
    ? substr(local.input_483, local.code_484[1], -1)
    : local.input_483)

  iter_484 = try(local.iter_483.code_ptr >= length(var.code), true) ? local.iter_483 : {
    output = (local.code_484[0] == "."
      ? "${local.iter_483.output}${join("", [for _ in range(local.code_484[1]) : jsondecode(format("\"\\u%04x\"", local.iter_483.tape[local.iter_483.tape_ptr]))])}"
      : local.iter_483.output)
    
    tape = (
      local.code_484[0] == "+"
        ? [for i, b in local.iter_483.tape : (i == local.iter_483.tape_ptr ? (b + local.code_484[1]) % 256 : b)] :
      local.code_484[0] == "-"
        ? [for i, b in local.iter_483.tape : (i == local.iter_483.tape_ptr ? (b - local.code_484[1] + 256) % 256 : b)] :
      local.code_484[0] == ","
        ? [for i, b in local.iter_483.tape : (i == local.iter_483.tape_ptr ? local.ascii_lookup[substr(local.input_484, 0, 1)] : b)]
        : local.iter_483.tape)

    tape_ptr = (
      local.code_484[0] == "<"
        ? local.iter_483.tape_ptr - local.code_484[1] :
      local.code_484[0] == ">"
        ? local.iter_483.tape_ptr + local.code_484[1]
        : local.iter_483.tape_ptr)

    code_ptr = 2 + (
      local.code_484[0] == "["
        ? local.iter_483.tape[local.iter_483.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_483.code_ptr)] : local.iter_483.code_ptr :
      local.code_484[0] == "]"
        ? local.iter_483.tape[local.iter_483.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_483.code_ptr)] : local.iter_483.code_ptr
        : local.iter_483.code_ptr)

    steps_taken = 1 + local.iter_483.steps_taken
  }
}

locals {
  code_485 = (try(local.iter_484.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_484.code_ptr, local.iter_484.code_ptr + 2)
    : [null])

  input_485 = (local.code_485[0] == ","
    ? substr(local.input_484, local.code_485[1], -1)
    : local.input_484)

  iter_485 = try(local.iter_484.code_ptr >= length(var.code), true) ? local.iter_484 : {
    output = (local.code_485[0] == "."
      ? "${local.iter_484.output}${join("", [for _ in range(local.code_485[1]) : jsondecode(format("\"\\u%04x\"", local.iter_484.tape[local.iter_484.tape_ptr]))])}"
      : local.iter_484.output)
    
    tape = (
      local.code_485[0] == "+"
        ? [for i, b in local.iter_484.tape : (i == local.iter_484.tape_ptr ? (b + local.code_485[1]) % 256 : b)] :
      local.code_485[0] == "-"
        ? [for i, b in local.iter_484.tape : (i == local.iter_484.tape_ptr ? (b - local.code_485[1] + 256) % 256 : b)] :
      local.code_485[0] == ","
        ? [for i, b in local.iter_484.tape : (i == local.iter_484.tape_ptr ? local.ascii_lookup[substr(local.input_485, 0, 1)] : b)]
        : local.iter_484.tape)

    tape_ptr = (
      local.code_485[0] == "<"
        ? local.iter_484.tape_ptr - local.code_485[1] :
      local.code_485[0] == ">"
        ? local.iter_484.tape_ptr + local.code_485[1]
        : local.iter_484.tape_ptr)

    code_ptr = 2 + (
      local.code_485[0] == "["
        ? local.iter_484.tape[local.iter_484.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_484.code_ptr)] : local.iter_484.code_ptr :
      local.code_485[0] == "]"
        ? local.iter_484.tape[local.iter_484.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_484.code_ptr)] : local.iter_484.code_ptr
        : local.iter_484.code_ptr)

    steps_taken = 1 + local.iter_484.steps_taken
  }
}

locals {
  code_486 = (try(local.iter_485.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_485.code_ptr, local.iter_485.code_ptr + 2)
    : [null])

  input_486 = (local.code_486[0] == ","
    ? substr(local.input_485, local.code_486[1], -1)
    : local.input_485)

  iter_486 = try(local.iter_485.code_ptr >= length(var.code), true) ? local.iter_485 : {
    output = (local.code_486[0] == "."
      ? "${local.iter_485.output}${join("", [for _ in range(local.code_486[1]) : jsondecode(format("\"\\u%04x\"", local.iter_485.tape[local.iter_485.tape_ptr]))])}"
      : local.iter_485.output)
    
    tape = (
      local.code_486[0] == "+"
        ? [for i, b in local.iter_485.tape : (i == local.iter_485.tape_ptr ? (b + local.code_486[1]) % 256 : b)] :
      local.code_486[0] == "-"
        ? [for i, b in local.iter_485.tape : (i == local.iter_485.tape_ptr ? (b - local.code_486[1] + 256) % 256 : b)] :
      local.code_486[0] == ","
        ? [for i, b in local.iter_485.tape : (i == local.iter_485.tape_ptr ? local.ascii_lookup[substr(local.input_486, 0, 1)] : b)]
        : local.iter_485.tape)

    tape_ptr = (
      local.code_486[0] == "<"
        ? local.iter_485.tape_ptr - local.code_486[1] :
      local.code_486[0] == ">"
        ? local.iter_485.tape_ptr + local.code_486[1]
        : local.iter_485.tape_ptr)

    code_ptr = 2 + (
      local.code_486[0] == "["
        ? local.iter_485.tape[local.iter_485.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_485.code_ptr)] : local.iter_485.code_ptr :
      local.code_486[0] == "]"
        ? local.iter_485.tape[local.iter_485.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_485.code_ptr)] : local.iter_485.code_ptr
        : local.iter_485.code_ptr)

    steps_taken = 1 + local.iter_485.steps_taken
  }
}

locals {
  code_487 = (try(local.iter_486.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_486.code_ptr, local.iter_486.code_ptr + 2)
    : [null])

  input_487 = (local.code_487[0] == ","
    ? substr(local.input_486, local.code_487[1], -1)
    : local.input_486)

  iter_487 = try(local.iter_486.code_ptr >= length(var.code), true) ? local.iter_486 : {
    output = (local.code_487[0] == "."
      ? "${local.iter_486.output}${join("", [for _ in range(local.code_487[1]) : jsondecode(format("\"\\u%04x\"", local.iter_486.tape[local.iter_486.tape_ptr]))])}"
      : local.iter_486.output)
    
    tape = (
      local.code_487[0] == "+"
        ? [for i, b in local.iter_486.tape : (i == local.iter_486.tape_ptr ? (b + local.code_487[1]) % 256 : b)] :
      local.code_487[0] == "-"
        ? [for i, b in local.iter_486.tape : (i == local.iter_486.tape_ptr ? (b - local.code_487[1] + 256) % 256 : b)] :
      local.code_487[0] == ","
        ? [for i, b in local.iter_486.tape : (i == local.iter_486.tape_ptr ? local.ascii_lookup[substr(local.input_487, 0, 1)] : b)]
        : local.iter_486.tape)

    tape_ptr = (
      local.code_487[0] == "<"
        ? local.iter_486.tape_ptr - local.code_487[1] :
      local.code_487[0] == ">"
        ? local.iter_486.tape_ptr + local.code_487[1]
        : local.iter_486.tape_ptr)

    code_ptr = 2 + (
      local.code_487[0] == "["
        ? local.iter_486.tape[local.iter_486.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_486.code_ptr)] : local.iter_486.code_ptr :
      local.code_487[0] == "]"
        ? local.iter_486.tape[local.iter_486.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_486.code_ptr)] : local.iter_486.code_ptr
        : local.iter_486.code_ptr)

    steps_taken = 1 + local.iter_486.steps_taken
  }
}

locals {
  code_488 = (try(local.iter_487.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_487.code_ptr, local.iter_487.code_ptr + 2)
    : [null])

  input_488 = (local.code_488[0] == ","
    ? substr(local.input_487, local.code_488[1], -1)
    : local.input_487)

  iter_488 = try(local.iter_487.code_ptr >= length(var.code), true) ? local.iter_487 : {
    output = (local.code_488[0] == "."
      ? "${local.iter_487.output}${join("", [for _ in range(local.code_488[1]) : jsondecode(format("\"\\u%04x\"", local.iter_487.tape[local.iter_487.tape_ptr]))])}"
      : local.iter_487.output)
    
    tape = (
      local.code_488[0] == "+"
        ? [for i, b in local.iter_487.tape : (i == local.iter_487.tape_ptr ? (b + local.code_488[1]) % 256 : b)] :
      local.code_488[0] == "-"
        ? [for i, b in local.iter_487.tape : (i == local.iter_487.tape_ptr ? (b - local.code_488[1] + 256) % 256 : b)] :
      local.code_488[0] == ","
        ? [for i, b in local.iter_487.tape : (i == local.iter_487.tape_ptr ? local.ascii_lookup[substr(local.input_488, 0, 1)] : b)]
        : local.iter_487.tape)

    tape_ptr = (
      local.code_488[0] == "<"
        ? local.iter_487.tape_ptr - local.code_488[1] :
      local.code_488[0] == ">"
        ? local.iter_487.tape_ptr + local.code_488[1]
        : local.iter_487.tape_ptr)

    code_ptr = 2 + (
      local.code_488[0] == "["
        ? local.iter_487.tape[local.iter_487.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_487.code_ptr)] : local.iter_487.code_ptr :
      local.code_488[0] == "]"
        ? local.iter_487.tape[local.iter_487.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_487.code_ptr)] : local.iter_487.code_ptr
        : local.iter_487.code_ptr)

    steps_taken = 1 + local.iter_487.steps_taken
  }
}

locals {
  code_489 = (try(local.iter_488.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_488.code_ptr, local.iter_488.code_ptr + 2)
    : [null])

  input_489 = (local.code_489[0] == ","
    ? substr(local.input_488, local.code_489[1], -1)
    : local.input_488)

  iter_489 = try(local.iter_488.code_ptr >= length(var.code), true) ? local.iter_488 : {
    output = (local.code_489[0] == "."
      ? "${local.iter_488.output}${join("", [for _ in range(local.code_489[1]) : jsondecode(format("\"\\u%04x\"", local.iter_488.tape[local.iter_488.tape_ptr]))])}"
      : local.iter_488.output)
    
    tape = (
      local.code_489[0] == "+"
        ? [for i, b in local.iter_488.tape : (i == local.iter_488.tape_ptr ? (b + local.code_489[1]) % 256 : b)] :
      local.code_489[0] == "-"
        ? [for i, b in local.iter_488.tape : (i == local.iter_488.tape_ptr ? (b - local.code_489[1] + 256) % 256 : b)] :
      local.code_489[0] == ","
        ? [for i, b in local.iter_488.tape : (i == local.iter_488.tape_ptr ? local.ascii_lookup[substr(local.input_489, 0, 1)] : b)]
        : local.iter_488.tape)

    tape_ptr = (
      local.code_489[0] == "<"
        ? local.iter_488.tape_ptr - local.code_489[1] :
      local.code_489[0] == ">"
        ? local.iter_488.tape_ptr + local.code_489[1]
        : local.iter_488.tape_ptr)

    code_ptr = 2 + (
      local.code_489[0] == "["
        ? local.iter_488.tape[local.iter_488.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_488.code_ptr)] : local.iter_488.code_ptr :
      local.code_489[0] == "]"
        ? local.iter_488.tape[local.iter_488.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_488.code_ptr)] : local.iter_488.code_ptr
        : local.iter_488.code_ptr)

    steps_taken = 1 + local.iter_488.steps_taken
  }
}

locals {
  code_490 = (try(local.iter_489.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_489.code_ptr, local.iter_489.code_ptr + 2)
    : [null])

  input_490 = (local.code_490[0] == ","
    ? substr(local.input_489, local.code_490[1], -1)
    : local.input_489)

  iter_490 = try(local.iter_489.code_ptr >= length(var.code), true) ? local.iter_489 : {
    output = (local.code_490[0] == "."
      ? "${local.iter_489.output}${join("", [for _ in range(local.code_490[1]) : jsondecode(format("\"\\u%04x\"", local.iter_489.tape[local.iter_489.tape_ptr]))])}"
      : local.iter_489.output)
    
    tape = (
      local.code_490[0] == "+"
        ? [for i, b in local.iter_489.tape : (i == local.iter_489.tape_ptr ? (b + local.code_490[1]) % 256 : b)] :
      local.code_490[0] == "-"
        ? [for i, b in local.iter_489.tape : (i == local.iter_489.tape_ptr ? (b - local.code_490[1] + 256) % 256 : b)] :
      local.code_490[0] == ","
        ? [for i, b in local.iter_489.tape : (i == local.iter_489.tape_ptr ? local.ascii_lookup[substr(local.input_490, 0, 1)] : b)]
        : local.iter_489.tape)

    tape_ptr = (
      local.code_490[0] == "<"
        ? local.iter_489.tape_ptr - local.code_490[1] :
      local.code_490[0] == ">"
        ? local.iter_489.tape_ptr + local.code_490[1]
        : local.iter_489.tape_ptr)

    code_ptr = 2 + (
      local.code_490[0] == "["
        ? local.iter_489.tape[local.iter_489.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_489.code_ptr)] : local.iter_489.code_ptr :
      local.code_490[0] == "]"
        ? local.iter_489.tape[local.iter_489.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_489.code_ptr)] : local.iter_489.code_ptr
        : local.iter_489.code_ptr)

    steps_taken = 1 + local.iter_489.steps_taken
  }
}

locals {
  code_491 = (try(local.iter_490.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_490.code_ptr, local.iter_490.code_ptr + 2)
    : [null])

  input_491 = (local.code_491[0] == ","
    ? substr(local.input_490, local.code_491[1], -1)
    : local.input_490)

  iter_491 = try(local.iter_490.code_ptr >= length(var.code), true) ? local.iter_490 : {
    output = (local.code_491[0] == "."
      ? "${local.iter_490.output}${join("", [for _ in range(local.code_491[1]) : jsondecode(format("\"\\u%04x\"", local.iter_490.tape[local.iter_490.tape_ptr]))])}"
      : local.iter_490.output)
    
    tape = (
      local.code_491[0] == "+"
        ? [for i, b in local.iter_490.tape : (i == local.iter_490.tape_ptr ? (b + local.code_491[1]) % 256 : b)] :
      local.code_491[0] == "-"
        ? [for i, b in local.iter_490.tape : (i == local.iter_490.tape_ptr ? (b - local.code_491[1] + 256) % 256 : b)] :
      local.code_491[0] == ","
        ? [for i, b in local.iter_490.tape : (i == local.iter_490.tape_ptr ? local.ascii_lookup[substr(local.input_491, 0, 1)] : b)]
        : local.iter_490.tape)

    tape_ptr = (
      local.code_491[0] == "<"
        ? local.iter_490.tape_ptr - local.code_491[1] :
      local.code_491[0] == ">"
        ? local.iter_490.tape_ptr + local.code_491[1]
        : local.iter_490.tape_ptr)

    code_ptr = 2 + (
      local.code_491[0] == "["
        ? local.iter_490.tape[local.iter_490.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_490.code_ptr)] : local.iter_490.code_ptr :
      local.code_491[0] == "]"
        ? local.iter_490.tape[local.iter_490.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_490.code_ptr)] : local.iter_490.code_ptr
        : local.iter_490.code_ptr)

    steps_taken = 1 + local.iter_490.steps_taken
  }
}

locals {
  code_492 = (try(local.iter_491.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_491.code_ptr, local.iter_491.code_ptr + 2)
    : [null])

  input_492 = (local.code_492[0] == ","
    ? substr(local.input_491, local.code_492[1], -1)
    : local.input_491)

  iter_492 = try(local.iter_491.code_ptr >= length(var.code), true) ? local.iter_491 : {
    output = (local.code_492[0] == "."
      ? "${local.iter_491.output}${join("", [for _ in range(local.code_492[1]) : jsondecode(format("\"\\u%04x\"", local.iter_491.tape[local.iter_491.tape_ptr]))])}"
      : local.iter_491.output)
    
    tape = (
      local.code_492[0] == "+"
        ? [for i, b in local.iter_491.tape : (i == local.iter_491.tape_ptr ? (b + local.code_492[1]) % 256 : b)] :
      local.code_492[0] == "-"
        ? [for i, b in local.iter_491.tape : (i == local.iter_491.tape_ptr ? (b - local.code_492[1] + 256) % 256 : b)] :
      local.code_492[0] == ","
        ? [for i, b in local.iter_491.tape : (i == local.iter_491.tape_ptr ? local.ascii_lookup[substr(local.input_492, 0, 1)] : b)]
        : local.iter_491.tape)

    tape_ptr = (
      local.code_492[0] == "<"
        ? local.iter_491.tape_ptr - local.code_492[1] :
      local.code_492[0] == ">"
        ? local.iter_491.tape_ptr + local.code_492[1]
        : local.iter_491.tape_ptr)

    code_ptr = 2 + (
      local.code_492[0] == "["
        ? local.iter_491.tape[local.iter_491.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_491.code_ptr)] : local.iter_491.code_ptr :
      local.code_492[0] == "]"
        ? local.iter_491.tape[local.iter_491.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_491.code_ptr)] : local.iter_491.code_ptr
        : local.iter_491.code_ptr)

    steps_taken = 1 + local.iter_491.steps_taken
  }
}

locals {
  code_493 = (try(local.iter_492.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_492.code_ptr, local.iter_492.code_ptr + 2)
    : [null])

  input_493 = (local.code_493[0] == ","
    ? substr(local.input_492, local.code_493[1], -1)
    : local.input_492)

  iter_493 = try(local.iter_492.code_ptr >= length(var.code), true) ? local.iter_492 : {
    output = (local.code_493[0] == "."
      ? "${local.iter_492.output}${join("", [for _ in range(local.code_493[1]) : jsondecode(format("\"\\u%04x\"", local.iter_492.tape[local.iter_492.tape_ptr]))])}"
      : local.iter_492.output)
    
    tape = (
      local.code_493[0] == "+"
        ? [for i, b in local.iter_492.tape : (i == local.iter_492.tape_ptr ? (b + local.code_493[1]) % 256 : b)] :
      local.code_493[0] == "-"
        ? [for i, b in local.iter_492.tape : (i == local.iter_492.tape_ptr ? (b - local.code_493[1] + 256) % 256 : b)] :
      local.code_493[0] == ","
        ? [for i, b in local.iter_492.tape : (i == local.iter_492.tape_ptr ? local.ascii_lookup[substr(local.input_493, 0, 1)] : b)]
        : local.iter_492.tape)

    tape_ptr = (
      local.code_493[0] == "<"
        ? local.iter_492.tape_ptr - local.code_493[1] :
      local.code_493[0] == ">"
        ? local.iter_492.tape_ptr + local.code_493[1]
        : local.iter_492.tape_ptr)

    code_ptr = 2 + (
      local.code_493[0] == "["
        ? local.iter_492.tape[local.iter_492.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_492.code_ptr)] : local.iter_492.code_ptr :
      local.code_493[0] == "]"
        ? local.iter_492.tape[local.iter_492.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_492.code_ptr)] : local.iter_492.code_ptr
        : local.iter_492.code_ptr)

    steps_taken = 1 + local.iter_492.steps_taken
  }
}

locals {
  code_494 = (try(local.iter_493.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_493.code_ptr, local.iter_493.code_ptr + 2)
    : [null])

  input_494 = (local.code_494[0] == ","
    ? substr(local.input_493, local.code_494[1], -1)
    : local.input_493)

  iter_494 = try(local.iter_493.code_ptr >= length(var.code), true) ? local.iter_493 : {
    output = (local.code_494[0] == "."
      ? "${local.iter_493.output}${join("", [for _ in range(local.code_494[1]) : jsondecode(format("\"\\u%04x\"", local.iter_493.tape[local.iter_493.tape_ptr]))])}"
      : local.iter_493.output)
    
    tape = (
      local.code_494[0] == "+"
        ? [for i, b in local.iter_493.tape : (i == local.iter_493.tape_ptr ? (b + local.code_494[1]) % 256 : b)] :
      local.code_494[0] == "-"
        ? [for i, b in local.iter_493.tape : (i == local.iter_493.tape_ptr ? (b - local.code_494[1] + 256) % 256 : b)] :
      local.code_494[0] == ","
        ? [for i, b in local.iter_493.tape : (i == local.iter_493.tape_ptr ? local.ascii_lookup[substr(local.input_494, 0, 1)] : b)]
        : local.iter_493.tape)

    tape_ptr = (
      local.code_494[0] == "<"
        ? local.iter_493.tape_ptr - local.code_494[1] :
      local.code_494[0] == ">"
        ? local.iter_493.tape_ptr + local.code_494[1]
        : local.iter_493.tape_ptr)

    code_ptr = 2 + (
      local.code_494[0] == "["
        ? local.iter_493.tape[local.iter_493.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_493.code_ptr)] : local.iter_493.code_ptr :
      local.code_494[0] == "]"
        ? local.iter_493.tape[local.iter_493.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_493.code_ptr)] : local.iter_493.code_ptr
        : local.iter_493.code_ptr)

    steps_taken = 1 + local.iter_493.steps_taken
  }
}

locals {
  code_495 = (try(local.iter_494.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_494.code_ptr, local.iter_494.code_ptr + 2)
    : [null])

  input_495 = (local.code_495[0] == ","
    ? substr(local.input_494, local.code_495[1], -1)
    : local.input_494)

  iter_495 = try(local.iter_494.code_ptr >= length(var.code), true) ? local.iter_494 : {
    output = (local.code_495[0] == "."
      ? "${local.iter_494.output}${join("", [for _ in range(local.code_495[1]) : jsondecode(format("\"\\u%04x\"", local.iter_494.tape[local.iter_494.tape_ptr]))])}"
      : local.iter_494.output)
    
    tape = (
      local.code_495[0] == "+"
        ? [for i, b in local.iter_494.tape : (i == local.iter_494.tape_ptr ? (b + local.code_495[1]) % 256 : b)] :
      local.code_495[0] == "-"
        ? [for i, b in local.iter_494.tape : (i == local.iter_494.tape_ptr ? (b - local.code_495[1] + 256) % 256 : b)] :
      local.code_495[0] == ","
        ? [for i, b in local.iter_494.tape : (i == local.iter_494.tape_ptr ? local.ascii_lookup[substr(local.input_495, 0, 1)] : b)]
        : local.iter_494.tape)

    tape_ptr = (
      local.code_495[0] == "<"
        ? local.iter_494.tape_ptr - local.code_495[1] :
      local.code_495[0] == ">"
        ? local.iter_494.tape_ptr + local.code_495[1]
        : local.iter_494.tape_ptr)

    code_ptr = 2 + (
      local.code_495[0] == "["
        ? local.iter_494.tape[local.iter_494.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_494.code_ptr)] : local.iter_494.code_ptr :
      local.code_495[0] == "]"
        ? local.iter_494.tape[local.iter_494.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_494.code_ptr)] : local.iter_494.code_ptr
        : local.iter_494.code_ptr)

    steps_taken = 1 + local.iter_494.steps_taken
  }
}

locals {
  code_496 = (try(local.iter_495.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_495.code_ptr, local.iter_495.code_ptr + 2)
    : [null])

  input_496 = (local.code_496[0] == ","
    ? substr(local.input_495, local.code_496[1], -1)
    : local.input_495)

  iter_496 = try(local.iter_495.code_ptr >= length(var.code), true) ? local.iter_495 : {
    output = (local.code_496[0] == "."
      ? "${local.iter_495.output}${join("", [for _ in range(local.code_496[1]) : jsondecode(format("\"\\u%04x\"", local.iter_495.tape[local.iter_495.tape_ptr]))])}"
      : local.iter_495.output)
    
    tape = (
      local.code_496[0] == "+"
        ? [for i, b in local.iter_495.tape : (i == local.iter_495.tape_ptr ? (b + local.code_496[1]) % 256 : b)] :
      local.code_496[0] == "-"
        ? [for i, b in local.iter_495.tape : (i == local.iter_495.tape_ptr ? (b - local.code_496[1] + 256) % 256 : b)] :
      local.code_496[0] == ","
        ? [for i, b in local.iter_495.tape : (i == local.iter_495.tape_ptr ? local.ascii_lookup[substr(local.input_496, 0, 1)] : b)]
        : local.iter_495.tape)

    tape_ptr = (
      local.code_496[0] == "<"
        ? local.iter_495.tape_ptr - local.code_496[1] :
      local.code_496[0] == ">"
        ? local.iter_495.tape_ptr + local.code_496[1]
        : local.iter_495.tape_ptr)

    code_ptr = 2 + (
      local.code_496[0] == "["
        ? local.iter_495.tape[local.iter_495.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_495.code_ptr)] : local.iter_495.code_ptr :
      local.code_496[0] == "]"
        ? local.iter_495.tape[local.iter_495.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_495.code_ptr)] : local.iter_495.code_ptr
        : local.iter_495.code_ptr)

    steps_taken = 1 + local.iter_495.steps_taken
  }
}

locals {
  code_497 = (try(local.iter_496.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_496.code_ptr, local.iter_496.code_ptr + 2)
    : [null])

  input_497 = (local.code_497[0] == ","
    ? substr(local.input_496, local.code_497[1], -1)
    : local.input_496)

  iter_497 = try(local.iter_496.code_ptr >= length(var.code), true) ? local.iter_496 : {
    output = (local.code_497[0] == "."
      ? "${local.iter_496.output}${join("", [for _ in range(local.code_497[1]) : jsondecode(format("\"\\u%04x\"", local.iter_496.tape[local.iter_496.tape_ptr]))])}"
      : local.iter_496.output)
    
    tape = (
      local.code_497[0] == "+"
        ? [for i, b in local.iter_496.tape : (i == local.iter_496.tape_ptr ? (b + local.code_497[1]) % 256 : b)] :
      local.code_497[0] == "-"
        ? [for i, b in local.iter_496.tape : (i == local.iter_496.tape_ptr ? (b - local.code_497[1] + 256) % 256 : b)] :
      local.code_497[0] == ","
        ? [for i, b in local.iter_496.tape : (i == local.iter_496.tape_ptr ? local.ascii_lookup[substr(local.input_497, 0, 1)] : b)]
        : local.iter_496.tape)

    tape_ptr = (
      local.code_497[0] == "<"
        ? local.iter_496.tape_ptr - local.code_497[1] :
      local.code_497[0] == ">"
        ? local.iter_496.tape_ptr + local.code_497[1]
        : local.iter_496.tape_ptr)

    code_ptr = 2 + (
      local.code_497[0] == "["
        ? local.iter_496.tape[local.iter_496.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_496.code_ptr)] : local.iter_496.code_ptr :
      local.code_497[0] == "]"
        ? local.iter_496.tape[local.iter_496.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_496.code_ptr)] : local.iter_496.code_ptr
        : local.iter_496.code_ptr)

    steps_taken = 1 + local.iter_496.steps_taken
  }
}

locals {
  code_498 = (try(local.iter_497.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_497.code_ptr, local.iter_497.code_ptr + 2)
    : [null])

  input_498 = (local.code_498[0] == ","
    ? substr(local.input_497, local.code_498[1], -1)
    : local.input_497)

  iter_498 = try(local.iter_497.code_ptr >= length(var.code), true) ? local.iter_497 : {
    output = (local.code_498[0] == "."
      ? "${local.iter_497.output}${join("", [for _ in range(local.code_498[1]) : jsondecode(format("\"\\u%04x\"", local.iter_497.tape[local.iter_497.tape_ptr]))])}"
      : local.iter_497.output)
    
    tape = (
      local.code_498[0] == "+"
        ? [for i, b in local.iter_497.tape : (i == local.iter_497.tape_ptr ? (b + local.code_498[1]) % 256 : b)] :
      local.code_498[0] == "-"
        ? [for i, b in local.iter_497.tape : (i == local.iter_497.tape_ptr ? (b - local.code_498[1] + 256) % 256 : b)] :
      local.code_498[0] == ","
        ? [for i, b in local.iter_497.tape : (i == local.iter_497.tape_ptr ? local.ascii_lookup[substr(local.input_498, 0, 1)] : b)]
        : local.iter_497.tape)

    tape_ptr = (
      local.code_498[0] == "<"
        ? local.iter_497.tape_ptr - local.code_498[1] :
      local.code_498[0] == ">"
        ? local.iter_497.tape_ptr + local.code_498[1]
        : local.iter_497.tape_ptr)

    code_ptr = 2 + (
      local.code_498[0] == "["
        ? local.iter_497.tape[local.iter_497.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_497.code_ptr)] : local.iter_497.code_ptr :
      local.code_498[0] == "]"
        ? local.iter_497.tape[local.iter_497.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_497.code_ptr)] : local.iter_497.code_ptr
        : local.iter_497.code_ptr)

    steps_taken = 1 + local.iter_497.steps_taken
  }
}

locals {
  code_499 = (try(local.iter_498.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_498.code_ptr, local.iter_498.code_ptr + 2)
    : [null])

  input_499 = (local.code_499[0] == ","
    ? substr(local.input_498, local.code_499[1], -1)
    : local.input_498)

  iter_499 = try(local.iter_498.code_ptr >= length(var.code), true) ? local.iter_498 : {
    output = (local.code_499[0] == "."
      ? "${local.iter_498.output}${join("", [for _ in range(local.code_499[1]) : jsondecode(format("\"\\u%04x\"", local.iter_498.tape[local.iter_498.tape_ptr]))])}"
      : local.iter_498.output)
    
    tape = (
      local.code_499[0] == "+"
        ? [for i, b in local.iter_498.tape : (i == local.iter_498.tape_ptr ? (b + local.code_499[1]) % 256 : b)] :
      local.code_499[0] == "-"
        ? [for i, b in local.iter_498.tape : (i == local.iter_498.tape_ptr ? (b - local.code_499[1] + 256) % 256 : b)] :
      local.code_499[0] == ","
        ? [for i, b in local.iter_498.tape : (i == local.iter_498.tape_ptr ? local.ascii_lookup[substr(local.input_499, 0, 1)] : b)]
        : local.iter_498.tape)

    tape_ptr = (
      local.code_499[0] == "<"
        ? local.iter_498.tape_ptr - local.code_499[1] :
      local.code_499[0] == ">"
        ? local.iter_498.tape_ptr + local.code_499[1]
        : local.iter_498.tape_ptr)

    code_ptr = 2 + (
      local.code_499[0] == "["
        ? local.iter_498.tape[local.iter_498.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_498.code_ptr)] : local.iter_498.code_ptr :
      local.code_499[0] == "]"
        ? local.iter_498.tape[local.iter_498.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_498.code_ptr)] : local.iter_498.code_ptr
        : local.iter_498.code_ptr)

    steps_taken = 1 + local.iter_498.steps_taken
  }
}

locals {
  code_500 = (try(local.iter_499.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_499.code_ptr, local.iter_499.code_ptr + 2)
    : [null])

  input_500 = (local.code_500[0] == ","
    ? substr(local.input_499, local.code_500[1], -1)
    : local.input_499)

  iter_500 = try(local.iter_499.code_ptr >= length(var.code), true) ? local.iter_499 : {
    output = (local.code_500[0] == "."
      ? "${local.iter_499.output}${join("", [for _ in range(local.code_500[1]) : jsondecode(format("\"\\u%04x\"", local.iter_499.tape[local.iter_499.tape_ptr]))])}"
      : local.iter_499.output)
    
    tape = (
      local.code_500[0] == "+"
        ? [for i, b in local.iter_499.tape : (i == local.iter_499.tape_ptr ? (b + local.code_500[1]) % 256 : b)] :
      local.code_500[0] == "-"
        ? [for i, b in local.iter_499.tape : (i == local.iter_499.tape_ptr ? (b - local.code_500[1] + 256) % 256 : b)] :
      local.code_500[0] == ","
        ? [for i, b in local.iter_499.tape : (i == local.iter_499.tape_ptr ? local.ascii_lookup[substr(local.input_500, 0, 1)] : b)]
        : local.iter_499.tape)

    tape_ptr = (
      local.code_500[0] == "<"
        ? local.iter_499.tape_ptr - local.code_500[1] :
      local.code_500[0] == ">"
        ? local.iter_499.tape_ptr + local.code_500[1]
        : local.iter_499.tape_ptr)

    code_ptr = 2 + (
      local.code_500[0] == "["
        ? local.iter_499.tape[local.iter_499.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_499.code_ptr)] : local.iter_499.code_ptr :
      local.code_500[0] == "]"
        ? local.iter_499.tape[local.iter_499.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_499.code_ptr)] : local.iter_499.code_ptr
        : local.iter_499.code_ptr)

    steps_taken = 1 + local.iter_499.steps_taken
  }
}

locals {
  code_501 = (try(local.iter_500.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_500.code_ptr, local.iter_500.code_ptr + 2)
    : [null])

  input_501 = (local.code_501[0] == ","
    ? substr(local.input_500, local.code_501[1], -1)
    : local.input_500)

  iter_501 = try(local.iter_500.code_ptr >= length(var.code), true) ? local.iter_500 : {
    output = (local.code_501[0] == "."
      ? "${local.iter_500.output}${join("", [for _ in range(local.code_501[1]) : jsondecode(format("\"\\u%04x\"", local.iter_500.tape[local.iter_500.tape_ptr]))])}"
      : local.iter_500.output)
    
    tape = (
      local.code_501[0] == "+"
        ? [for i, b in local.iter_500.tape : (i == local.iter_500.tape_ptr ? (b + local.code_501[1]) % 256 : b)] :
      local.code_501[0] == "-"
        ? [for i, b in local.iter_500.tape : (i == local.iter_500.tape_ptr ? (b - local.code_501[1] + 256) % 256 : b)] :
      local.code_501[0] == ","
        ? [for i, b in local.iter_500.tape : (i == local.iter_500.tape_ptr ? local.ascii_lookup[substr(local.input_501, 0, 1)] : b)]
        : local.iter_500.tape)

    tape_ptr = (
      local.code_501[0] == "<"
        ? local.iter_500.tape_ptr - local.code_501[1] :
      local.code_501[0] == ">"
        ? local.iter_500.tape_ptr + local.code_501[1]
        : local.iter_500.tape_ptr)

    code_ptr = 2 + (
      local.code_501[0] == "["
        ? local.iter_500.tape[local.iter_500.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_500.code_ptr)] : local.iter_500.code_ptr :
      local.code_501[0] == "]"
        ? local.iter_500.tape[local.iter_500.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_500.code_ptr)] : local.iter_500.code_ptr
        : local.iter_500.code_ptr)

    steps_taken = 1 + local.iter_500.steps_taken
  }
}

locals {
  code_502 = (try(local.iter_501.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_501.code_ptr, local.iter_501.code_ptr + 2)
    : [null])

  input_502 = (local.code_502[0] == ","
    ? substr(local.input_501, local.code_502[1], -1)
    : local.input_501)

  iter_502 = try(local.iter_501.code_ptr >= length(var.code), true) ? local.iter_501 : {
    output = (local.code_502[0] == "."
      ? "${local.iter_501.output}${join("", [for _ in range(local.code_502[1]) : jsondecode(format("\"\\u%04x\"", local.iter_501.tape[local.iter_501.tape_ptr]))])}"
      : local.iter_501.output)
    
    tape = (
      local.code_502[0] == "+"
        ? [for i, b in local.iter_501.tape : (i == local.iter_501.tape_ptr ? (b + local.code_502[1]) % 256 : b)] :
      local.code_502[0] == "-"
        ? [for i, b in local.iter_501.tape : (i == local.iter_501.tape_ptr ? (b - local.code_502[1] + 256) % 256 : b)] :
      local.code_502[0] == ","
        ? [for i, b in local.iter_501.tape : (i == local.iter_501.tape_ptr ? local.ascii_lookup[substr(local.input_502, 0, 1)] : b)]
        : local.iter_501.tape)

    tape_ptr = (
      local.code_502[0] == "<"
        ? local.iter_501.tape_ptr - local.code_502[1] :
      local.code_502[0] == ">"
        ? local.iter_501.tape_ptr + local.code_502[1]
        : local.iter_501.tape_ptr)

    code_ptr = 2 + (
      local.code_502[0] == "["
        ? local.iter_501.tape[local.iter_501.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_501.code_ptr)] : local.iter_501.code_ptr :
      local.code_502[0] == "]"
        ? local.iter_501.tape[local.iter_501.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_501.code_ptr)] : local.iter_501.code_ptr
        : local.iter_501.code_ptr)

    steps_taken = 1 + local.iter_501.steps_taken
  }
}

locals {
  code_503 = (try(local.iter_502.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_502.code_ptr, local.iter_502.code_ptr + 2)
    : [null])

  input_503 = (local.code_503[0] == ","
    ? substr(local.input_502, local.code_503[1], -1)
    : local.input_502)

  iter_503 = try(local.iter_502.code_ptr >= length(var.code), true) ? local.iter_502 : {
    output = (local.code_503[0] == "."
      ? "${local.iter_502.output}${join("", [for _ in range(local.code_503[1]) : jsondecode(format("\"\\u%04x\"", local.iter_502.tape[local.iter_502.tape_ptr]))])}"
      : local.iter_502.output)
    
    tape = (
      local.code_503[0] == "+"
        ? [for i, b in local.iter_502.tape : (i == local.iter_502.tape_ptr ? (b + local.code_503[1]) % 256 : b)] :
      local.code_503[0] == "-"
        ? [for i, b in local.iter_502.tape : (i == local.iter_502.tape_ptr ? (b - local.code_503[1] + 256) % 256 : b)] :
      local.code_503[0] == ","
        ? [for i, b in local.iter_502.tape : (i == local.iter_502.tape_ptr ? local.ascii_lookup[substr(local.input_503, 0, 1)] : b)]
        : local.iter_502.tape)

    tape_ptr = (
      local.code_503[0] == "<"
        ? local.iter_502.tape_ptr - local.code_503[1] :
      local.code_503[0] == ">"
        ? local.iter_502.tape_ptr + local.code_503[1]
        : local.iter_502.tape_ptr)

    code_ptr = 2 + (
      local.code_503[0] == "["
        ? local.iter_502.tape[local.iter_502.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_502.code_ptr)] : local.iter_502.code_ptr :
      local.code_503[0] == "]"
        ? local.iter_502.tape[local.iter_502.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_502.code_ptr)] : local.iter_502.code_ptr
        : local.iter_502.code_ptr)

    steps_taken = 1 + local.iter_502.steps_taken
  }
}

locals {
  code_504 = (try(local.iter_503.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_503.code_ptr, local.iter_503.code_ptr + 2)
    : [null])

  input_504 = (local.code_504[0] == ","
    ? substr(local.input_503, local.code_504[1], -1)
    : local.input_503)

  iter_504 = try(local.iter_503.code_ptr >= length(var.code), true) ? local.iter_503 : {
    output = (local.code_504[0] == "."
      ? "${local.iter_503.output}${join("", [for _ in range(local.code_504[1]) : jsondecode(format("\"\\u%04x\"", local.iter_503.tape[local.iter_503.tape_ptr]))])}"
      : local.iter_503.output)
    
    tape = (
      local.code_504[0] == "+"
        ? [for i, b in local.iter_503.tape : (i == local.iter_503.tape_ptr ? (b + local.code_504[1]) % 256 : b)] :
      local.code_504[0] == "-"
        ? [for i, b in local.iter_503.tape : (i == local.iter_503.tape_ptr ? (b - local.code_504[1] + 256) % 256 : b)] :
      local.code_504[0] == ","
        ? [for i, b in local.iter_503.tape : (i == local.iter_503.tape_ptr ? local.ascii_lookup[substr(local.input_504, 0, 1)] : b)]
        : local.iter_503.tape)

    tape_ptr = (
      local.code_504[0] == "<"
        ? local.iter_503.tape_ptr - local.code_504[1] :
      local.code_504[0] == ">"
        ? local.iter_503.tape_ptr + local.code_504[1]
        : local.iter_503.tape_ptr)

    code_ptr = 2 + (
      local.code_504[0] == "["
        ? local.iter_503.tape[local.iter_503.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_503.code_ptr)] : local.iter_503.code_ptr :
      local.code_504[0] == "]"
        ? local.iter_503.tape[local.iter_503.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_503.code_ptr)] : local.iter_503.code_ptr
        : local.iter_503.code_ptr)

    steps_taken = 1 + local.iter_503.steps_taken
  }
}

locals {
  code_505 = (try(local.iter_504.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_504.code_ptr, local.iter_504.code_ptr + 2)
    : [null])

  input_505 = (local.code_505[0] == ","
    ? substr(local.input_504, local.code_505[1], -1)
    : local.input_504)

  iter_505 = try(local.iter_504.code_ptr >= length(var.code), true) ? local.iter_504 : {
    output = (local.code_505[0] == "."
      ? "${local.iter_504.output}${join("", [for _ in range(local.code_505[1]) : jsondecode(format("\"\\u%04x\"", local.iter_504.tape[local.iter_504.tape_ptr]))])}"
      : local.iter_504.output)
    
    tape = (
      local.code_505[0] == "+"
        ? [for i, b in local.iter_504.tape : (i == local.iter_504.tape_ptr ? (b + local.code_505[1]) % 256 : b)] :
      local.code_505[0] == "-"
        ? [for i, b in local.iter_504.tape : (i == local.iter_504.tape_ptr ? (b - local.code_505[1] + 256) % 256 : b)] :
      local.code_505[0] == ","
        ? [for i, b in local.iter_504.tape : (i == local.iter_504.tape_ptr ? local.ascii_lookup[substr(local.input_505, 0, 1)] : b)]
        : local.iter_504.tape)

    tape_ptr = (
      local.code_505[0] == "<"
        ? local.iter_504.tape_ptr - local.code_505[1] :
      local.code_505[0] == ">"
        ? local.iter_504.tape_ptr + local.code_505[1]
        : local.iter_504.tape_ptr)

    code_ptr = 2 + (
      local.code_505[0] == "["
        ? local.iter_504.tape[local.iter_504.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_504.code_ptr)] : local.iter_504.code_ptr :
      local.code_505[0] == "]"
        ? local.iter_504.tape[local.iter_504.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_504.code_ptr)] : local.iter_504.code_ptr
        : local.iter_504.code_ptr)

    steps_taken = 1 + local.iter_504.steps_taken
  }
}

locals {
  code_506 = (try(local.iter_505.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_505.code_ptr, local.iter_505.code_ptr + 2)
    : [null])

  input_506 = (local.code_506[0] == ","
    ? substr(local.input_505, local.code_506[1], -1)
    : local.input_505)

  iter_506 = try(local.iter_505.code_ptr >= length(var.code), true) ? local.iter_505 : {
    output = (local.code_506[0] == "."
      ? "${local.iter_505.output}${join("", [for _ in range(local.code_506[1]) : jsondecode(format("\"\\u%04x\"", local.iter_505.tape[local.iter_505.tape_ptr]))])}"
      : local.iter_505.output)
    
    tape = (
      local.code_506[0] == "+"
        ? [for i, b in local.iter_505.tape : (i == local.iter_505.tape_ptr ? (b + local.code_506[1]) % 256 : b)] :
      local.code_506[0] == "-"
        ? [for i, b in local.iter_505.tape : (i == local.iter_505.tape_ptr ? (b - local.code_506[1] + 256) % 256 : b)] :
      local.code_506[0] == ","
        ? [for i, b in local.iter_505.tape : (i == local.iter_505.tape_ptr ? local.ascii_lookup[substr(local.input_506, 0, 1)] : b)]
        : local.iter_505.tape)

    tape_ptr = (
      local.code_506[0] == "<"
        ? local.iter_505.tape_ptr - local.code_506[1] :
      local.code_506[0] == ">"
        ? local.iter_505.tape_ptr + local.code_506[1]
        : local.iter_505.tape_ptr)

    code_ptr = 2 + (
      local.code_506[0] == "["
        ? local.iter_505.tape[local.iter_505.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_505.code_ptr)] : local.iter_505.code_ptr :
      local.code_506[0] == "]"
        ? local.iter_505.tape[local.iter_505.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_505.code_ptr)] : local.iter_505.code_ptr
        : local.iter_505.code_ptr)

    steps_taken = 1 + local.iter_505.steps_taken
  }
}

locals {
  code_507 = (try(local.iter_506.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_506.code_ptr, local.iter_506.code_ptr + 2)
    : [null])

  input_507 = (local.code_507[0] == ","
    ? substr(local.input_506, local.code_507[1], -1)
    : local.input_506)

  iter_507 = try(local.iter_506.code_ptr >= length(var.code), true) ? local.iter_506 : {
    output = (local.code_507[0] == "."
      ? "${local.iter_506.output}${join("", [for _ in range(local.code_507[1]) : jsondecode(format("\"\\u%04x\"", local.iter_506.tape[local.iter_506.tape_ptr]))])}"
      : local.iter_506.output)
    
    tape = (
      local.code_507[0] == "+"
        ? [for i, b in local.iter_506.tape : (i == local.iter_506.tape_ptr ? (b + local.code_507[1]) % 256 : b)] :
      local.code_507[0] == "-"
        ? [for i, b in local.iter_506.tape : (i == local.iter_506.tape_ptr ? (b - local.code_507[1] + 256) % 256 : b)] :
      local.code_507[0] == ","
        ? [for i, b in local.iter_506.tape : (i == local.iter_506.tape_ptr ? local.ascii_lookup[substr(local.input_507, 0, 1)] : b)]
        : local.iter_506.tape)

    tape_ptr = (
      local.code_507[0] == "<"
        ? local.iter_506.tape_ptr - local.code_507[1] :
      local.code_507[0] == ">"
        ? local.iter_506.tape_ptr + local.code_507[1]
        : local.iter_506.tape_ptr)

    code_ptr = 2 + (
      local.code_507[0] == "["
        ? local.iter_506.tape[local.iter_506.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_506.code_ptr)] : local.iter_506.code_ptr :
      local.code_507[0] == "]"
        ? local.iter_506.tape[local.iter_506.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_506.code_ptr)] : local.iter_506.code_ptr
        : local.iter_506.code_ptr)

    steps_taken = 1 + local.iter_506.steps_taken
  }
}

locals {
  code_508 = (try(local.iter_507.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_507.code_ptr, local.iter_507.code_ptr + 2)
    : [null])

  input_508 = (local.code_508[0] == ","
    ? substr(local.input_507, local.code_508[1], -1)
    : local.input_507)

  iter_508 = try(local.iter_507.code_ptr >= length(var.code), true) ? local.iter_507 : {
    output = (local.code_508[0] == "."
      ? "${local.iter_507.output}${join("", [for _ in range(local.code_508[1]) : jsondecode(format("\"\\u%04x\"", local.iter_507.tape[local.iter_507.tape_ptr]))])}"
      : local.iter_507.output)
    
    tape = (
      local.code_508[0] == "+"
        ? [for i, b in local.iter_507.tape : (i == local.iter_507.tape_ptr ? (b + local.code_508[1]) % 256 : b)] :
      local.code_508[0] == "-"
        ? [for i, b in local.iter_507.tape : (i == local.iter_507.tape_ptr ? (b - local.code_508[1] + 256) % 256 : b)] :
      local.code_508[0] == ","
        ? [for i, b in local.iter_507.tape : (i == local.iter_507.tape_ptr ? local.ascii_lookup[substr(local.input_508, 0, 1)] : b)]
        : local.iter_507.tape)

    tape_ptr = (
      local.code_508[0] == "<"
        ? local.iter_507.tape_ptr - local.code_508[1] :
      local.code_508[0] == ">"
        ? local.iter_507.tape_ptr + local.code_508[1]
        : local.iter_507.tape_ptr)

    code_ptr = 2 + (
      local.code_508[0] == "["
        ? local.iter_507.tape[local.iter_507.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_507.code_ptr)] : local.iter_507.code_ptr :
      local.code_508[0] == "]"
        ? local.iter_507.tape[local.iter_507.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_507.code_ptr)] : local.iter_507.code_ptr
        : local.iter_507.code_ptr)

    steps_taken = 1 + local.iter_507.steps_taken
  }
}

locals {
  code_509 = (try(local.iter_508.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_508.code_ptr, local.iter_508.code_ptr + 2)
    : [null])

  input_509 = (local.code_509[0] == ","
    ? substr(local.input_508, local.code_509[1], -1)
    : local.input_508)

  iter_509 = try(local.iter_508.code_ptr >= length(var.code), true) ? local.iter_508 : {
    output = (local.code_509[0] == "."
      ? "${local.iter_508.output}${join("", [for _ in range(local.code_509[1]) : jsondecode(format("\"\\u%04x\"", local.iter_508.tape[local.iter_508.tape_ptr]))])}"
      : local.iter_508.output)
    
    tape = (
      local.code_509[0] == "+"
        ? [for i, b in local.iter_508.tape : (i == local.iter_508.tape_ptr ? (b + local.code_509[1]) % 256 : b)] :
      local.code_509[0] == "-"
        ? [for i, b in local.iter_508.tape : (i == local.iter_508.tape_ptr ? (b - local.code_509[1] + 256) % 256 : b)] :
      local.code_509[0] == ","
        ? [for i, b in local.iter_508.tape : (i == local.iter_508.tape_ptr ? local.ascii_lookup[substr(local.input_509, 0, 1)] : b)]
        : local.iter_508.tape)

    tape_ptr = (
      local.code_509[0] == "<"
        ? local.iter_508.tape_ptr - local.code_509[1] :
      local.code_509[0] == ">"
        ? local.iter_508.tape_ptr + local.code_509[1]
        : local.iter_508.tape_ptr)

    code_ptr = 2 + (
      local.code_509[0] == "["
        ? local.iter_508.tape[local.iter_508.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_508.code_ptr)] : local.iter_508.code_ptr :
      local.code_509[0] == "]"
        ? local.iter_508.tape[local.iter_508.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_508.code_ptr)] : local.iter_508.code_ptr
        : local.iter_508.code_ptr)

    steps_taken = 1 + local.iter_508.steps_taken
  }
}

locals {
  code_510 = (try(local.iter_509.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_509.code_ptr, local.iter_509.code_ptr + 2)
    : [null])

  input_510 = (local.code_510[0] == ","
    ? substr(local.input_509, local.code_510[1], -1)
    : local.input_509)

  iter_510 = try(local.iter_509.code_ptr >= length(var.code), true) ? local.iter_509 : {
    output = (local.code_510[0] == "."
      ? "${local.iter_509.output}${join("", [for _ in range(local.code_510[1]) : jsondecode(format("\"\\u%04x\"", local.iter_509.tape[local.iter_509.tape_ptr]))])}"
      : local.iter_509.output)
    
    tape = (
      local.code_510[0] == "+"
        ? [for i, b in local.iter_509.tape : (i == local.iter_509.tape_ptr ? (b + local.code_510[1]) % 256 : b)] :
      local.code_510[0] == "-"
        ? [for i, b in local.iter_509.tape : (i == local.iter_509.tape_ptr ? (b - local.code_510[1] + 256) % 256 : b)] :
      local.code_510[0] == ","
        ? [for i, b in local.iter_509.tape : (i == local.iter_509.tape_ptr ? local.ascii_lookup[substr(local.input_510, 0, 1)] : b)]
        : local.iter_509.tape)

    tape_ptr = (
      local.code_510[0] == "<"
        ? local.iter_509.tape_ptr - local.code_510[1] :
      local.code_510[0] == ">"
        ? local.iter_509.tape_ptr + local.code_510[1]
        : local.iter_509.tape_ptr)

    code_ptr = 2 + (
      local.code_510[0] == "["
        ? local.iter_509.tape[local.iter_509.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_509.code_ptr)] : local.iter_509.code_ptr :
      local.code_510[0] == "]"
        ? local.iter_509.tape[local.iter_509.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_509.code_ptr)] : local.iter_509.code_ptr
        : local.iter_509.code_ptr)

    steps_taken = 1 + local.iter_509.steps_taken
  }
}

locals {
  code_511 = (try(local.iter_510.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_510.code_ptr, local.iter_510.code_ptr + 2)
    : [null])

  input_511 = (local.code_511[0] == ","
    ? substr(local.input_510, local.code_511[1], -1)
    : local.input_510)

  iter_511 = try(local.iter_510.code_ptr >= length(var.code), true) ? local.iter_510 : {
    output = (local.code_511[0] == "."
      ? "${local.iter_510.output}${join("", [for _ in range(local.code_511[1]) : jsondecode(format("\"\\u%04x\"", local.iter_510.tape[local.iter_510.tape_ptr]))])}"
      : local.iter_510.output)
    
    tape = (
      local.code_511[0] == "+"
        ? [for i, b in local.iter_510.tape : (i == local.iter_510.tape_ptr ? (b + local.code_511[1]) % 256 : b)] :
      local.code_511[0] == "-"
        ? [for i, b in local.iter_510.tape : (i == local.iter_510.tape_ptr ? (b - local.code_511[1] + 256) % 256 : b)] :
      local.code_511[0] == ","
        ? [for i, b in local.iter_510.tape : (i == local.iter_510.tape_ptr ? local.ascii_lookup[substr(local.input_511, 0, 1)] : b)]
        : local.iter_510.tape)

    tape_ptr = (
      local.code_511[0] == "<"
        ? local.iter_510.tape_ptr - local.code_511[1] :
      local.code_511[0] == ">"
        ? local.iter_510.tape_ptr + local.code_511[1]
        : local.iter_510.tape_ptr)

    code_ptr = 2 + (
      local.code_511[0] == "["
        ? local.iter_510.tape[local.iter_510.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_510.code_ptr)] : local.iter_510.code_ptr :
      local.code_511[0] == "]"
        ? local.iter_510.tape[local.iter_510.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_510.code_ptr)] : local.iter_510.code_ptr
        : local.iter_510.code_ptr)

    steps_taken = 1 + local.iter_510.steps_taken
  }
}

locals {
  code_512 = (try(local.iter_511.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_511.code_ptr, local.iter_511.code_ptr + 2)
    : [null])

  input_512 = (local.code_512[0] == ","
    ? substr(local.input_511, local.code_512[1], -1)
    : local.input_511)

  iter_512 = try(local.iter_511.code_ptr >= length(var.code), true) ? local.iter_511 : {
    output = (local.code_512[0] == "."
      ? "${local.iter_511.output}${join("", [for _ in range(local.code_512[1]) : jsondecode(format("\"\\u%04x\"", local.iter_511.tape[local.iter_511.tape_ptr]))])}"
      : local.iter_511.output)
    
    tape = (
      local.code_512[0] == "+"
        ? [for i, b in local.iter_511.tape : (i == local.iter_511.tape_ptr ? (b + local.code_512[1]) % 256 : b)] :
      local.code_512[0] == "-"
        ? [for i, b in local.iter_511.tape : (i == local.iter_511.tape_ptr ? (b - local.code_512[1] + 256) % 256 : b)] :
      local.code_512[0] == ","
        ? [for i, b in local.iter_511.tape : (i == local.iter_511.tape_ptr ? local.ascii_lookup[substr(local.input_512, 0, 1)] : b)]
        : local.iter_511.tape)

    tape_ptr = (
      local.code_512[0] == "<"
        ? local.iter_511.tape_ptr - local.code_512[1] :
      local.code_512[0] == ">"
        ? local.iter_511.tape_ptr + local.code_512[1]
        : local.iter_511.tape_ptr)

    code_ptr = 2 + (
      local.code_512[0] == "["
        ? local.iter_511.tape[local.iter_511.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_511.code_ptr)] : local.iter_511.code_ptr :
      local.code_512[0] == "]"
        ? local.iter_511.tape[local.iter_511.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_511.code_ptr)] : local.iter_511.code_ptr
        : local.iter_511.code_ptr)

    steps_taken = 1 + local.iter_511.steps_taken
  }
}

locals {
  code_513 = (try(local.iter_512.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_512.code_ptr, local.iter_512.code_ptr + 2)
    : [null])

  input_513 = (local.code_513[0] == ","
    ? substr(local.input_512, local.code_513[1], -1)
    : local.input_512)

  iter_513 = try(local.iter_512.code_ptr >= length(var.code), true) ? local.iter_512 : {
    output = (local.code_513[0] == "."
      ? "${local.iter_512.output}${join("", [for _ in range(local.code_513[1]) : jsondecode(format("\"\\u%04x\"", local.iter_512.tape[local.iter_512.tape_ptr]))])}"
      : local.iter_512.output)
    
    tape = (
      local.code_513[0] == "+"
        ? [for i, b in local.iter_512.tape : (i == local.iter_512.tape_ptr ? (b + local.code_513[1]) % 256 : b)] :
      local.code_513[0] == "-"
        ? [for i, b in local.iter_512.tape : (i == local.iter_512.tape_ptr ? (b - local.code_513[1] + 256) % 256 : b)] :
      local.code_513[0] == ","
        ? [for i, b in local.iter_512.tape : (i == local.iter_512.tape_ptr ? local.ascii_lookup[substr(local.input_513, 0, 1)] : b)]
        : local.iter_512.tape)

    tape_ptr = (
      local.code_513[0] == "<"
        ? local.iter_512.tape_ptr - local.code_513[1] :
      local.code_513[0] == ">"
        ? local.iter_512.tape_ptr + local.code_513[1]
        : local.iter_512.tape_ptr)

    code_ptr = 2 + (
      local.code_513[0] == "["
        ? local.iter_512.tape[local.iter_512.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_512.code_ptr)] : local.iter_512.code_ptr :
      local.code_513[0] == "]"
        ? local.iter_512.tape[local.iter_512.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_512.code_ptr)] : local.iter_512.code_ptr
        : local.iter_512.code_ptr)

    steps_taken = 1 + local.iter_512.steps_taken
  }
}

locals {
  code_514 = (try(local.iter_513.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_513.code_ptr, local.iter_513.code_ptr + 2)
    : [null])

  input_514 = (local.code_514[0] == ","
    ? substr(local.input_513, local.code_514[1], -1)
    : local.input_513)

  iter_514 = try(local.iter_513.code_ptr >= length(var.code), true) ? local.iter_513 : {
    output = (local.code_514[0] == "."
      ? "${local.iter_513.output}${join("", [for _ in range(local.code_514[1]) : jsondecode(format("\"\\u%04x\"", local.iter_513.tape[local.iter_513.tape_ptr]))])}"
      : local.iter_513.output)
    
    tape = (
      local.code_514[0] == "+"
        ? [for i, b in local.iter_513.tape : (i == local.iter_513.tape_ptr ? (b + local.code_514[1]) % 256 : b)] :
      local.code_514[0] == "-"
        ? [for i, b in local.iter_513.tape : (i == local.iter_513.tape_ptr ? (b - local.code_514[1] + 256) % 256 : b)] :
      local.code_514[0] == ","
        ? [for i, b in local.iter_513.tape : (i == local.iter_513.tape_ptr ? local.ascii_lookup[substr(local.input_514, 0, 1)] : b)]
        : local.iter_513.tape)

    tape_ptr = (
      local.code_514[0] == "<"
        ? local.iter_513.tape_ptr - local.code_514[1] :
      local.code_514[0] == ">"
        ? local.iter_513.tape_ptr + local.code_514[1]
        : local.iter_513.tape_ptr)

    code_ptr = 2 + (
      local.code_514[0] == "["
        ? local.iter_513.tape[local.iter_513.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_513.code_ptr)] : local.iter_513.code_ptr :
      local.code_514[0] == "]"
        ? local.iter_513.tape[local.iter_513.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_513.code_ptr)] : local.iter_513.code_ptr
        : local.iter_513.code_ptr)

    steps_taken = 1 + local.iter_513.steps_taken
  }
}

locals {
  code_515 = (try(local.iter_514.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_514.code_ptr, local.iter_514.code_ptr + 2)
    : [null])

  input_515 = (local.code_515[0] == ","
    ? substr(local.input_514, local.code_515[1], -1)
    : local.input_514)

  iter_515 = try(local.iter_514.code_ptr >= length(var.code), true) ? local.iter_514 : {
    output = (local.code_515[0] == "."
      ? "${local.iter_514.output}${join("", [for _ in range(local.code_515[1]) : jsondecode(format("\"\\u%04x\"", local.iter_514.tape[local.iter_514.tape_ptr]))])}"
      : local.iter_514.output)
    
    tape = (
      local.code_515[0] == "+"
        ? [for i, b in local.iter_514.tape : (i == local.iter_514.tape_ptr ? (b + local.code_515[1]) % 256 : b)] :
      local.code_515[0] == "-"
        ? [for i, b in local.iter_514.tape : (i == local.iter_514.tape_ptr ? (b - local.code_515[1] + 256) % 256 : b)] :
      local.code_515[0] == ","
        ? [for i, b in local.iter_514.tape : (i == local.iter_514.tape_ptr ? local.ascii_lookup[substr(local.input_515, 0, 1)] : b)]
        : local.iter_514.tape)

    tape_ptr = (
      local.code_515[0] == "<"
        ? local.iter_514.tape_ptr - local.code_515[1] :
      local.code_515[0] == ">"
        ? local.iter_514.tape_ptr + local.code_515[1]
        : local.iter_514.tape_ptr)

    code_ptr = 2 + (
      local.code_515[0] == "["
        ? local.iter_514.tape[local.iter_514.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_514.code_ptr)] : local.iter_514.code_ptr :
      local.code_515[0] == "]"
        ? local.iter_514.tape[local.iter_514.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_514.code_ptr)] : local.iter_514.code_ptr
        : local.iter_514.code_ptr)

    steps_taken = 1 + local.iter_514.steps_taken
  }
}

locals {
  code_516 = (try(local.iter_515.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_515.code_ptr, local.iter_515.code_ptr + 2)
    : [null])

  input_516 = (local.code_516[0] == ","
    ? substr(local.input_515, local.code_516[1], -1)
    : local.input_515)

  iter_516 = try(local.iter_515.code_ptr >= length(var.code), true) ? local.iter_515 : {
    output = (local.code_516[0] == "."
      ? "${local.iter_515.output}${join("", [for _ in range(local.code_516[1]) : jsondecode(format("\"\\u%04x\"", local.iter_515.tape[local.iter_515.tape_ptr]))])}"
      : local.iter_515.output)
    
    tape = (
      local.code_516[0] == "+"
        ? [for i, b in local.iter_515.tape : (i == local.iter_515.tape_ptr ? (b + local.code_516[1]) % 256 : b)] :
      local.code_516[0] == "-"
        ? [for i, b in local.iter_515.tape : (i == local.iter_515.tape_ptr ? (b - local.code_516[1] + 256) % 256 : b)] :
      local.code_516[0] == ","
        ? [for i, b in local.iter_515.tape : (i == local.iter_515.tape_ptr ? local.ascii_lookup[substr(local.input_516, 0, 1)] : b)]
        : local.iter_515.tape)

    tape_ptr = (
      local.code_516[0] == "<"
        ? local.iter_515.tape_ptr - local.code_516[1] :
      local.code_516[0] == ">"
        ? local.iter_515.tape_ptr + local.code_516[1]
        : local.iter_515.tape_ptr)

    code_ptr = 2 + (
      local.code_516[0] == "["
        ? local.iter_515.tape[local.iter_515.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_515.code_ptr)] : local.iter_515.code_ptr :
      local.code_516[0] == "]"
        ? local.iter_515.tape[local.iter_515.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_515.code_ptr)] : local.iter_515.code_ptr
        : local.iter_515.code_ptr)

    steps_taken = 1 + local.iter_515.steps_taken
  }
}

locals {
  code_517 = (try(local.iter_516.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_516.code_ptr, local.iter_516.code_ptr + 2)
    : [null])

  input_517 = (local.code_517[0] == ","
    ? substr(local.input_516, local.code_517[1], -1)
    : local.input_516)

  iter_517 = try(local.iter_516.code_ptr >= length(var.code), true) ? local.iter_516 : {
    output = (local.code_517[0] == "."
      ? "${local.iter_516.output}${join("", [for _ in range(local.code_517[1]) : jsondecode(format("\"\\u%04x\"", local.iter_516.tape[local.iter_516.tape_ptr]))])}"
      : local.iter_516.output)
    
    tape = (
      local.code_517[0] == "+"
        ? [for i, b in local.iter_516.tape : (i == local.iter_516.tape_ptr ? (b + local.code_517[1]) % 256 : b)] :
      local.code_517[0] == "-"
        ? [for i, b in local.iter_516.tape : (i == local.iter_516.tape_ptr ? (b - local.code_517[1] + 256) % 256 : b)] :
      local.code_517[0] == ","
        ? [for i, b in local.iter_516.tape : (i == local.iter_516.tape_ptr ? local.ascii_lookup[substr(local.input_517, 0, 1)] : b)]
        : local.iter_516.tape)

    tape_ptr = (
      local.code_517[0] == "<"
        ? local.iter_516.tape_ptr - local.code_517[1] :
      local.code_517[0] == ">"
        ? local.iter_516.tape_ptr + local.code_517[1]
        : local.iter_516.tape_ptr)

    code_ptr = 2 + (
      local.code_517[0] == "["
        ? local.iter_516.tape[local.iter_516.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_516.code_ptr)] : local.iter_516.code_ptr :
      local.code_517[0] == "]"
        ? local.iter_516.tape[local.iter_516.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_516.code_ptr)] : local.iter_516.code_ptr
        : local.iter_516.code_ptr)

    steps_taken = 1 + local.iter_516.steps_taken
  }
}

locals {
  code_518 = (try(local.iter_517.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_517.code_ptr, local.iter_517.code_ptr + 2)
    : [null])

  input_518 = (local.code_518[0] == ","
    ? substr(local.input_517, local.code_518[1], -1)
    : local.input_517)

  iter_518 = try(local.iter_517.code_ptr >= length(var.code), true) ? local.iter_517 : {
    output = (local.code_518[0] == "."
      ? "${local.iter_517.output}${join("", [for _ in range(local.code_518[1]) : jsondecode(format("\"\\u%04x\"", local.iter_517.tape[local.iter_517.tape_ptr]))])}"
      : local.iter_517.output)
    
    tape = (
      local.code_518[0] == "+"
        ? [for i, b in local.iter_517.tape : (i == local.iter_517.tape_ptr ? (b + local.code_518[1]) % 256 : b)] :
      local.code_518[0] == "-"
        ? [for i, b in local.iter_517.tape : (i == local.iter_517.tape_ptr ? (b - local.code_518[1] + 256) % 256 : b)] :
      local.code_518[0] == ","
        ? [for i, b in local.iter_517.tape : (i == local.iter_517.tape_ptr ? local.ascii_lookup[substr(local.input_518, 0, 1)] : b)]
        : local.iter_517.tape)

    tape_ptr = (
      local.code_518[0] == "<"
        ? local.iter_517.tape_ptr - local.code_518[1] :
      local.code_518[0] == ">"
        ? local.iter_517.tape_ptr + local.code_518[1]
        : local.iter_517.tape_ptr)

    code_ptr = 2 + (
      local.code_518[0] == "["
        ? local.iter_517.tape[local.iter_517.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_517.code_ptr)] : local.iter_517.code_ptr :
      local.code_518[0] == "]"
        ? local.iter_517.tape[local.iter_517.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_517.code_ptr)] : local.iter_517.code_ptr
        : local.iter_517.code_ptr)

    steps_taken = 1 + local.iter_517.steps_taken
  }
}

locals {
  code_519 = (try(local.iter_518.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_518.code_ptr, local.iter_518.code_ptr + 2)
    : [null])

  input_519 = (local.code_519[0] == ","
    ? substr(local.input_518, local.code_519[1], -1)
    : local.input_518)

  iter_519 = try(local.iter_518.code_ptr >= length(var.code), true) ? local.iter_518 : {
    output = (local.code_519[0] == "."
      ? "${local.iter_518.output}${join("", [for _ in range(local.code_519[1]) : jsondecode(format("\"\\u%04x\"", local.iter_518.tape[local.iter_518.tape_ptr]))])}"
      : local.iter_518.output)
    
    tape = (
      local.code_519[0] == "+"
        ? [for i, b in local.iter_518.tape : (i == local.iter_518.tape_ptr ? (b + local.code_519[1]) % 256 : b)] :
      local.code_519[0] == "-"
        ? [for i, b in local.iter_518.tape : (i == local.iter_518.tape_ptr ? (b - local.code_519[1] + 256) % 256 : b)] :
      local.code_519[0] == ","
        ? [for i, b in local.iter_518.tape : (i == local.iter_518.tape_ptr ? local.ascii_lookup[substr(local.input_519, 0, 1)] : b)]
        : local.iter_518.tape)

    tape_ptr = (
      local.code_519[0] == "<"
        ? local.iter_518.tape_ptr - local.code_519[1] :
      local.code_519[0] == ">"
        ? local.iter_518.tape_ptr + local.code_519[1]
        : local.iter_518.tape_ptr)

    code_ptr = 2 + (
      local.code_519[0] == "["
        ? local.iter_518.tape[local.iter_518.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_518.code_ptr)] : local.iter_518.code_ptr :
      local.code_519[0] == "]"
        ? local.iter_518.tape[local.iter_518.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_518.code_ptr)] : local.iter_518.code_ptr
        : local.iter_518.code_ptr)

    steps_taken = 1 + local.iter_518.steps_taken
  }
}

locals {
  code_520 = (try(local.iter_519.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_519.code_ptr, local.iter_519.code_ptr + 2)
    : [null])

  input_520 = (local.code_520[0] == ","
    ? substr(local.input_519, local.code_520[1], -1)
    : local.input_519)

  iter_520 = try(local.iter_519.code_ptr >= length(var.code), true) ? local.iter_519 : {
    output = (local.code_520[0] == "."
      ? "${local.iter_519.output}${join("", [for _ in range(local.code_520[1]) : jsondecode(format("\"\\u%04x\"", local.iter_519.tape[local.iter_519.tape_ptr]))])}"
      : local.iter_519.output)
    
    tape = (
      local.code_520[0] == "+"
        ? [for i, b in local.iter_519.tape : (i == local.iter_519.tape_ptr ? (b + local.code_520[1]) % 256 : b)] :
      local.code_520[0] == "-"
        ? [for i, b in local.iter_519.tape : (i == local.iter_519.tape_ptr ? (b - local.code_520[1] + 256) % 256 : b)] :
      local.code_520[0] == ","
        ? [for i, b in local.iter_519.tape : (i == local.iter_519.tape_ptr ? local.ascii_lookup[substr(local.input_520, 0, 1)] : b)]
        : local.iter_519.tape)

    tape_ptr = (
      local.code_520[0] == "<"
        ? local.iter_519.tape_ptr - local.code_520[1] :
      local.code_520[0] == ">"
        ? local.iter_519.tape_ptr + local.code_520[1]
        : local.iter_519.tape_ptr)

    code_ptr = 2 + (
      local.code_520[0] == "["
        ? local.iter_519.tape[local.iter_519.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_519.code_ptr)] : local.iter_519.code_ptr :
      local.code_520[0] == "]"
        ? local.iter_519.tape[local.iter_519.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_519.code_ptr)] : local.iter_519.code_ptr
        : local.iter_519.code_ptr)

    steps_taken = 1 + local.iter_519.steps_taken
  }
}

locals {
  code_521 = (try(local.iter_520.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_520.code_ptr, local.iter_520.code_ptr + 2)
    : [null])

  input_521 = (local.code_521[0] == ","
    ? substr(local.input_520, local.code_521[1], -1)
    : local.input_520)

  iter_521 = try(local.iter_520.code_ptr >= length(var.code), true) ? local.iter_520 : {
    output = (local.code_521[0] == "."
      ? "${local.iter_520.output}${join("", [for _ in range(local.code_521[1]) : jsondecode(format("\"\\u%04x\"", local.iter_520.tape[local.iter_520.tape_ptr]))])}"
      : local.iter_520.output)
    
    tape = (
      local.code_521[0] == "+"
        ? [for i, b in local.iter_520.tape : (i == local.iter_520.tape_ptr ? (b + local.code_521[1]) % 256 : b)] :
      local.code_521[0] == "-"
        ? [for i, b in local.iter_520.tape : (i == local.iter_520.tape_ptr ? (b - local.code_521[1] + 256) % 256 : b)] :
      local.code_521[0] == ","
        ? [for i, b in local.iter_520.tape : (i == local.iter_520.tape_ptr ? local.ascii_lookup[substr(local.input_521, 0, 1)] : b)]
        : local.iter_520.tape)

    tape_ptr = (
      local.code_521[0] == "<"
        ? local.iter_520.tape_ptr - local.code_521[1] :
      local.code_521[0] == ">"
        ? local.iter_520.tape_ptr + local.code_521[1]
        : local.iter_520.tape_ptr)

    code_ptr = 2 + (
      local.code_521[0] == "["
        ? local.iter_520.tape[local.iter_520.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_520.code_ptr)] : local.iter_520.code_ptr :
      local.code_521[0] == "]"
        ? local.iter_520.tape[local.iter_520.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_520.code_ptr)] : local.iter_520.code_ptr
        : local.iter_520.code_ptr)

    steps_taken = 1 + local.iter_520.steps_taken
  }
}

locals {
  code_522 = (try(local.iter_521.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_521.code_ptr, local.iter_521.code_ptr + 2)
    : [null])

  input_522 = (local.code_522[0] == ","
    ? substr(local.input_521, local.code_522[1], -1)
    : local.input_521)

  iter_522 = try(local.iter_521.code_ptr >= length(var.code), true) ? local.iter_521 : {
    output = (local.code_522[0] == "."
      ? "${local.iter_521.output}${join("", [for _ in range(local.code_522[1]) : jsondecode(format("\"\\u%04x\"", local.iter_521.tape[local.iter_521.tape_ptr]))])}"
      : local.iter_521.output)
    
    tape = (
      local.code_522[0] == "+"
        ? [for i, b in local.iter_521.tape : (i == local.iter_521.tape_ptr ? (b + local.code_522[1]) % 256 : b)] :
      local.code_522[0] == "-"
        ? [for i, b in local.iter_521.tape : (i == local.iter_521.tape_ptr ? (b - local.code_522[1] + 256) % 256 : b)] :
      local.code_522[0] == ","
        ? [for i, b in local.iter_521.tape : (i == local.iter_521.tape_ptr ? local.ascii_lookup[substr(local.input_522, 0, 1)] : b)]
        : local.iter_521.tape)

    tape_ptr = (
      local.code_522[0] == "<"
        ? local.iter_521.tape_ptr - local.code_522[1] :
      local.code_522[0] == ">"
        ? local.iter_521.tape_ptr + local.code_522[1]
        : local.iter_521.tape_ptr)

    code_ptr = 2 + (
      local.code_522[0] == "["
        ? local.iter_521.tape[local.iter_521.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_521.code_ptr)] : local.iter_521.code_ptr :
      local.code_522[0] == "]"
        ? local.iter_521.tape[local.iter_521.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_521.code_ptr)] : local.iter_521.code_ptr
        : local.iter_521.code_ptr)

    steps_taken = 1 + local.iter_521.steps_taken
  }
}

locals {
  code_523 = (try(local.iter_522.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_522.code_ptr, local.iter_522.code_ptr + 2)
    : [null])

  input_523 = (local.code_523[0] == ","
    ? substr(local.input_522, local.code_523[1], -1)
    : local.input_522)

  iter_523 = try(local.iter_522.code_ptr >= length(var.code), true) ? local.iter_522 : {
    output = (local.code_523[0] == "."
      ? "${local.iter_522.output}${join("", [for _ in range(local.code_523[1]) : jsondecode(format("\"\\u%04x\"", local.iter_522.tape[local.iter_522.tape_ptr]))])}"
      : local.iter_522.output)
    
    tape = (
      local.code_523[0] == "+"
        ? [for i, b in local.iter_522.tape : (i == local.iter_522.tape_ptr ? (b + local.code_523[1]) % 256 : b)] :
      local.code_523[0] == "-"
        ? [for i, b in local.iter_522.tape : (i == local.iter_522.tape_ptr ? (b - local.code_523[1] + 256) % 256 : b)] :
      local.code_523[0] == ","
        ? [for i, b in local.iter_522.tape : (i == local.iter_522.tape_ptr ? local.ascii_lookup[substr(local.input_523, 0, 1)] : b)]
        : local.iter_522.tape)

    tape_ptr = (
      local.code_523[0] == "<"
        ? local.iter_522.tape_ptr - local.code_523[1] :
      local.code_523[0] == ">"
        ? local.iter_522.tape_ptr + local.code_523[1]
        : local.iter_522.tape_ptr)

    code_ptr = 2 + (
      local.code_523[0] == "["
        ? local.iter_522.tape[local.iter_522.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_522.code_ptr)] : local.iter_522.code_ptr :
      local.code_523[0] == "]"
        ? local.iter_522.tape[local.iter_522.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_522.code_ptr)] : local.iter_522.code_ptr
        : local.iter_522.code_ptr)

    steps_taken = 1 + local.iter_522.steps_taken
  }
}

locals {
  code_524 = (try(local.iter_523.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_523.code_ptr, local.iter_523.code_ptr + 2)
    : [null])

  input_524 = (local.code_524[0] == ","
    ? substr(local.input_523, local.code_524[1], -1)
    : local.input_523)

  iter_524 = try(local.iter_523.code_ptr >= length(var.code), true) ? local.iter_523 : {
    output = (local.code_524[0] == "."
      ? "${local.iter_523.output}${join("", [for _ in range(local.code_524[1]) : jsondecode(format("\"\\u%04x\"", local.iter_523.tape[local.iter_523.tape_ptr]))])}"
      : local.iter_523.output)
    
    tape = (
      local.code_524[0] == "+"
        ? [for i, b in local.iter_523.tape : (i == local.iter_523.tape_ptr ? (b + local.code_524[1]) % 256 : b)] :
      local.code_524[0] == "-"
        ? [for i, b in local.iter_523.tape : (i == local.iter_523.tape_ptr ? (b - local.code_524[1] + 256) % 256 : b)] :
      local.code_524[0] == ","
        ? [for i, b in local.iter_523.tape : (i == local.iter_523.tape_ptr ? local.ascii_lookup[substr(local.input_524, 0, 1)] : b)]
        : local.iter_523.tape)

    tape_ptr = (
      local.code_524[0] == "<"
        ? local.iter_523.tape_ptr - local.code_524[1] :
      local.code_524[0] == ">"
        ? local.iter_523.tape_ptr + local.code_524[1]
        : local.iter_523.tape_ptr)

    code_ptr = 2 + (
      local.code_524[0] == "["
        ? local.iter_523.tape[local.iter_523.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_523.code_ptr)] : local.iter_523.code_ptr :
      local.code_524[0] == "]"
        ? local.iter_523.tape[local.iter_523.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_523.code_ptr)] : local.iter_523.code_ptr
        : local.iter_523.code_ptr)

    steps_taken = 1 + local.iter_523.steps_taken
  }
}

locals {
  code_525 = (try(local.iter_524.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_524.code_ptr, local.iter_524.code_ptr + 2)
    : [null])

  input_525 = (local.code_525[0] == ","
    ? substr(local.input_524, local.code_525[1], -1)
    : local.input_524)

  iter_525 = try(local.iter_524.code_ptr >= length(var.code), true) ? local.iter_524 : {
    output = (local.code_525[0] == "."
      ? "${local.iter_524.output}${join("", [for _ in range(local.code_525[1]) : jsondecode(format("\"\\u%04x\"", local.iter_524.tape[local.iter_524.tape_ptr]))])}"
      : local.iter_524.output)
    
    tape = (
      local.code_525[0] == "+"
        ? [for i, b in local.iter_524.tape : (i == local.iter_524.tape_ptr ? (b + local.code_525[1]) % 256 : b)] :
      local.code_525[0] == "-"
        ? [for i, b in local.iter_524.tape : (i == local.iter_524.tape_ptr ? (b - local.code_525[1] + 256) % 256 : b)] :
      local.code_525[0] == ","
        ? [for i, b in local.iter_524.tape : (i == local.iter_524.tape_ptr ? local.ascii_lookup[substr(local.input_525, 0, 1)] : b)]
        : local.iter_524.tape)

    tape_ptr = (
      local.code_525[0] == "<"
        ? local.iter_524.tape_ptr - local.code_525[1] :
      local.code_525[0] == ">"
        ? local.iter_524.tape_ptr + local.code_525[1]
        : local.iter_524.tape_ptr)

    code_ptr = 2 + (
      local.code_525[0] == "["
        ? local.iter_524.tape[local.iter_524.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_524.code_ptr)] : local.iter_524.code_ptr :
      local.code_525[0] == "]"
        ? local.iter_524.tape[local.iter_524.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_524.code_ptr)] : local.iter_524.code_ptr
        : local.iter_524.code_ptr)

    steps_taken = 1 + local.iter_524.steps_taken
  }
}

locals {
  code_526 = (try(local.iter_525.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_525.code_ptr, local.iter_525.code_ptr + 2)
    : [null])

  input_526 = (local.code_526[0] == ","
    ? substr(local.input_525, local.code_526[1], -1)
    : local.input_525)

  iter_526 = try(local.iter_525.code_ptr >= length(var.code), true) ? local.iter_525 : {
    output = (local.code_526[0] == "."
      ? "${local.iter_525.output}${join("", [for _ in range(local.code_526[1]) : jsondecode(format("\"\\u%04x\"", local.iter_525.tape[local.iter_525.tape_ptr]))])}"
      : local.iter_525.output)
    
    tape = (
      local.code_526[0] == "+"
        ? [for i, b in local.iter_525.tape : (i == local.iter_525.tape_ptr ? (b + local.code_526[1]) % 256 : b)] :
      local.code_526[0] == "-"
        ? [for i, b in local.iter_525.tape : (i == local.iter_525.tape_ptr ? (b - local.code_526[1] + 256) % 256 : b)] :
      local.code_526[0] == ","
        ? [for i, b in local.iter_525.tape : (i == local.iter_525.tape_ptr ? local.ascii_lookup[substr(local.input_526, 0, 1)] : b)]
        : local.iter_525.tape)

    tape_ptr = (
      local.code_526[0] == "<"
        ? local.iter_525.tape_ptr - local.code_526[1] :
      local.code_526[0] == ">"
        ? local.iter_525.tape_ptr + local.code_526[1]
        : local.iter_525.tape_ptr)

    code_ptr = 2 + (
      local.code_526[0] == "["
        ? local.iter_525.tape[local.iter_525.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_525.code_ptr)] : local.iter_525.code_ptr :
      local.code_526[0] == "]"
        ? local.iter_525.tape[local.iter_525.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_525.code_ptr)] : local.iter_525.code_ptr
        : local.iter_525.code_ptr)

    steps_taken = 1 + local.iter_525.steps_taken
  }
}

locals {
  code_527 = (try(local.iter_526.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_526.code_ptr, local.iter_526.code_ptr + 2)
    : [null])

  input_527 = (local.code_527[0] == ","
    ? substr(local.input_526, local.code_527[1], -1)
    : local.input_526)

  iter_527 = try(local.iter_526.code_ptr >= length(var.code), true) ? local.iter_526 : {
    output = (local.code_527[0] == "."
      ? "${local.iter_526.output}${join("", [for _ in range(local.code_527[1]) : jsondecode(format("\"\\u%04x\"", local.iter_526.tape[local.iter_526.tape_ptr]))])}"
      : local.iter_526.output)
    
    tape = (
      local.code_527[0] == "+"
        ? [for i, b in local.iter_526.tape : (i == local.iter_526.tape_ptr ? (b + local.code_527[1]) % 256 : b)] :
      local.code_527[0] == "-"
        ? [for i, b in local.iter_526.tape : (i == local.iter_526.tape_ptr ? (b - local.code_527[1] + 256) % 256 : b)] :
      local.code_527[0] == ","
        ? [for i, b in local.iter_526.tape : (i == local.iter_526.tape_ptr ? local.ascii_lookup[substr(local.input_527, 0, 1)] : b)]
        : local.iter_526.tape)

    tape_ptr = (
      local.code_527[0] == "<"
        ? local.iter_526.tape_ptr - local.code_527[1] :
      local.code_527[0] == ">"
        ? local.iter_526.tape_ptr + local.code_527[1]
        : local.iter_526.tape_ptr)

    code_ptr = 2 + (
      local.code_527[0] == "["
        ? local.iter_526.tape[local.iter_526.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_526.code_ptr)] : local.iter_526.code_ptr :
      local.code_527[0] == "]"
        ? local.iter_526.tape[local.iter_526.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_526.code_ptr)] : local.iter_526.code_ptr
        : local.iter_526.code_ptr)

    steps_taken = 1 + local.iter_526.steps_taken
  }
}

locals {
  code_528 = (try(local.iter_527.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_527.code_ptr, local.iter_527.code_ptr + 2)
    : [null])

  input_528 = (local.code_528[0] == ","
    ? substr(local.input_527, local.code_528[1], -1)
    : local.input_527)

  iter_528 = try(local.iter_527.code_ptr >= length(var.code), true) ? local.iter_527 : {
    output = (local.code_528[0] == "."
      ? "${local.iter_527.output}${join("", [for _ in range(local.code_528[1]) : jsondecode(format("\"\\u%04x\"", local.iter_527.tape[local.iter_527.tape_ptr]))])}"
      : local.iter_527.output)
    
    tape = (
      local.code_528[0] == "+"
        ? [for i, b in local.iter_527.tape : (i == local.iter_527.tape_ptr ? (b + local.code_528[1]) % 256 : b)] :
      local.code_528[0] == "-"
        ? [for i, b in local.iter_527.tape : (i == local.iter_527.tape_ptr ? (b - local.code_528[1] + 256) % 256 : b)] :
      local.code_528[0] == ","
        ? [for i, b in local.iter_527.tape : (i == local.iter_527.tape_ptr ? local.ascii_lookup[substr(local.input_528, 0, 1)] : b)]
        : local.iter_527.tape)

    tape_ptr = (
      local.code_528[0] == "<"
        ? local.iter_527.tape_ptr - local.code_528[1] :
      local.code_528[0] == ">"
        ? local.iter_527.tape_ptr + local.code_528[1]
        : local.iter_527.tape_ptr)

    code_ptr = 2 + (
      local.code_528[0] == "["
        ? local.iter_527.tape[local.iter_527.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_527.code_ptr)] : local.iter_527.code_ptr :
      local.code_528[0] == "]"
        ? local.iter_527.tape[local.iter_527.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_527.code_ptr)] : local.iter_527.code_ptr
        : local.iter_527.code_ptr)

    steps_taken = 1 + local.iter_527.steps_taken
  }
}

locals {
  code_529 = (try(local.iter_528.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_528.code_ptr, local.iter_528.code_ptr + 2)
    : [null])

  input_529 = (local.code_529[0] == ","
    ? substr(local.input_528, local.code_529[1], -1)
    : local.input_528)

  iter_529 = try(local.iter_528.code_ptr >= length(var.code), true) ? local.iter_528 : {
    output = (local.code_529[0] == "."
      ? "${local.iter_528.output}${join("", [for _ in range(local.code_529[1]) : jsondecode(format("\"\\u%04x\"", local.iter_528.tape[local.iter_528.tape_ptr]))])}"
      : local.iter_528.output)
    
    tape = (
      local.code_529[0] == "+"
        ? [for i, b in local.iter_528.tape : (i == local.iter_528.tape_ptr ? (b + local.code_529[1]) % 256 : b)] :
      local.code_529[0] == "-"
        ? [for i, b in local.iter_528.tape : (i == local.iter_528.tape_ptr ? (b - local.code_529[1] + 256) % 256 : b)] :
      local.code_529[0] == ","
        ? [for i, b in local.iter_528.tape : (i == local.iter_528.tape_ptr ? local.ascii_lookup[substr(local.input_529, 0, 1)] : b)]
        : local.iter_528.tape)

    tape_ptr = (
      local.code_529[0] == "<"
        ? local.iter_528.tape_ptr - local.code_529[1] :
      local.code_529[0] == ">"
        ? local.iter_528.tape_ptr + local.code_529[1]
        : local.iter_528.tape_ptr)

    code_ptr = 2 + (
      local.code_529[0] == "["
        ? local.iter_528.tape[local.iter_528.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_528.code_ptr)] : local.iter_528.code_ptr :
      local.code_529[0] == "]"
        ? local.iter_528.tape[local.iter_528.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_528.code_ptr)] : local.iter_528.code_ptr
        : local.iter_528.code_ptr)

    steps_taken = 1 + local.iter_528.steps_taken
  }
}

locals {
  code_530 = (try(local.iter_529.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_529.code_ptr, local.iter_529.code_ptr + 2)
    : [null])

  input_530 = (local.code_530[0] == ","
    ? substr(local.input_529, local.code_530[1], -1)
    : local.input_529)

  iter_530 = try(local.iter_529.code_ptr >= length(var.code), true) ? local.iter_529 : {
    output = (local.code_530[0] == "."
      ? "${local.iter_529.output}${join("", [for _ in range(local.code_530[1]) : jsondecode(format("\"\\u%04x\"", local.iter_529.tape[local.iter_529.tape_ptr]))])}"
      : local.iter_529.output)
    
    tape = (
      local.code_530[0] == "+"
        ? [for i, b in local.iter_529.tape : (i == local.iter_529.tape_ptr ? (b + local.code_530[1]) % 256 : b)] :
      local.code_530[0] == "-"
        ? [for i, b in local.iter_529.tape : (i == local.iter_529.tape_ptr ? (b - local.code_530[1] + 256) % 256 : b)] :
      local.code_530[0] == ","
        ? [for i, b in local.iter_529.tape : (i == local.iter_529.tape_ptr ? local.ascii_lookup[substr(local.input_530, 0, 1)] : b)]
        : local.iter_529.tape)

    tape_ptr = (
      local.code_530[0] == "<"
        ? local.iter_529.tape_ptr - local.code_530[1] :
      local.code_530[0] == ">"
        ? local.iter_529.tape_ptr + local.code_530[1]
        : local.iter_529.tape_ptr)

    code_ptr = 2 + (
      local.code_530[0] == "["
        ? local.iter_529.tape[local.iter_529.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_529.code_ptr)] : local.iter_529.code_ptr :
      local.code_530[0] == "]"
        ? local.iter_529.tape[local.iter_529.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_529.code_ptr)] : local.iter_529.code_ptr
        : local.iter_529.code_ptr)

    steps_taken = 1 + local.iter_529.steps_taken
  }
}

locals {
  code_531 = (try(local.iter_530.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_530.code_ptr, local.iter_530.code_ptr + 2)
    : [null])

  input_531 = (local.code_531[0] == ","
    ? substr(local.input_530, local.code_531[1], -1)
    : local.input_530)

  iter_531 = try(local.iter_530.code_ptr >= length(var.code), true) ? local.iter_530 : {
    output = (local.code_531[0] == "."
      ? "${local.iter_530.output}${join("", [for _ in range(local.code_531[1]) : jsondecode(format("\"\\u%04x\"", local.iter_530.tape[local.iter_530.tape_ptr]))])}"
      : local.iter_530.output)
    
    tape = (
      local.code_531[0] == "+"
        ? [for i, b in local.iter_530.tape : (i == local.iter_530.tape_ptr ? (b + local.code_531[1]) % 256 : b)] :
      local.code_531[0] == "-"
        ? [for i, b in local.iter_530.tape : (i == local.iter_530.tape_ptr ? (b - local.code_531[1] + 256) % 256 : b)] :
      local.code_531[0] == ","
        ? [for i, b in local.iter_530.tape : (i == local.iter_530.tape_ptr ? local.ascii_lookup[substr(local.input_531, 0, 1)] : b)]
        : local.iter_530.tape)

    tape_ptr = (
      local.code_531[0] == "<"
        ? local.iter_530.tape_ptr - local.code_531[1] :
      local.code_531[0] == ">"
        ? local.iter_530.tape_ptr + local.code_531[1]
        : local.iter_530.tape_ptr)

    code_ptr = 2 + (
      local.code_531[0] == "["
        ? local.iter_530.tape[local.iter_530.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_530.code_ptr)] : local.iter_530.code_ptr :
      local.code_531[0] == "]"
        ? local.iter_530.tape[local.iter_530.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_530.code_ptr)] : local.iter_530.code_ptr
        : local.iter_530.code_ptr)

    steps_taken = 1 + local.iter_530.steps_taken
  }
}

locals {
  code_532 = (try(local.iter_531.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_531.code_ptr, local.iter_531.code_ptr + 2)
    : [null])

  input_532 = (local.code_532[0] == ","
    ? substr(local.input_531, local.code_532[1], -1)
    : local.input_531)

  iter_532 = try(local.iter_531.code_ptr >= length(var.code), true) ? local.iter_531 : {
    output = (local.code_532[0] == "."
      ? "${local.iter_531.output}${join("", [for _ in range(local.code_532[1]) : jsondecode(format("\"\\u%04x\"", local.iter_531.tape[local.iter_531.tape_ptr]))])}"
      : local.iter_531.output)
    
    tape = (
      local.code_532[0] == "+"
        ? [for i, b in local.iter_531.tape : (i == local.iter_531.tape_ptr ? (b + local.code_532[1]) % 256 : b)] :
      local.code_532[0] == "-"
        ? [for i, b in local.iter_531.tape : (i == local.iter_531.tape_ptr ? (b - local.code_532[1] + 256) % 256 : b)] :
      local.code_532[0] == ","
        ? [for i, b in local.iter_531.tape : (i == local.iter_531.tape_ptr ? local.ascii_lookup[substr(local.input_532, 0, 1)] : b)]
        : local.iter_531.tape)

    tape_ptr = (
      local.code_532[0] == "<"
        ? local.iter_531.tape_ptr - local.code_532[1] :
      local.code_532[0] == ">"
        ? local.iter_531.tape_ptr + local.code_532[1]
        : local.iter_531.tape_ptr)

    code_ptr = 2 + (
      local.code_532[0] == "["
        ? local.iter_531.tape[local.iter_531.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_531.code_ptr)] : local.iter_531.code_ptr :
      local.code_532[0] == "]"
        ? local.iter_531.tape[local.iter_531.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_531.code_ptr)] : local.iter_531.code_ptr
        : local.iter_531.code_ptr)

    steps_taken = 1 + local.iter_531.steps_taken
  }
}

locals {
  code_533 = (try(local.iter_532.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_532.code_ptr, local.iter_532.code_ptr + 2)
    : [null])

  input_533 = (local.code_533[0] == ","
    ? substr(local.input_532, local.code_533[1], -1)
    : local.input_532)

  iter_533 = try(local.iter_532.code_ptr >= length(var.code), true) ? local.iter_532 : {
    output = (local.code_533[0] == "."
      ? "${local.iter_532.output}${join("", [for _ in range(local.code_533[1]) : jsondecode(format("\"\\u%04x\"", local.iter_532.tape[local.iter_532.tape_ptr]))])}"
      : local.iter_532.output)
    
    tape = (
      local.code_533[0] == "+"
        ? [for i, b in local.iter_532.tape : (i == local.iter_532.tape_ptr ? (b + local.code_533[1]) % 256 : b)] :
      local.code_533[0] == "-"
        ? [for i, b in local.iter_532.tape : (i == local.iter_532.tape_ptr ? (b - local.code_533[1] + 256) % 256 : b)] :
      local.code_533[0] == ","
        ? [for i, b in local.iter_532.tape : (i == local.iter_532.tape_ptr ? local.ascii_lookup[substr(local.input_533, 0, 1)] : b)]
        : local.iter_532.tape)

    tape_ptr = (
      local.code_533[0] == "<"
        ? local.iter_532.tape_ptr - local.code_533[1] :
      local.code_533[0] == ">"
        ? local.iter_532.tape_ptr + local.code_533[1]
        : local.iter_532.tape_ptr)

    code_ptr = 2 + (
      local.code_533[0] == "["
        ? local.iter_532.tape[local.iter_532.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_532.code_ptr)] : local.iter_532.code_ptr :
      local.code_533[0] == "]"
        ? local.iter_532.tape[local.iter_532.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_532.code_ptr)] : local.iter_532.code_ptr
        : local.iter_532.code_ptr)

    steps_taken = 1 + local.iter_532.steps_taken
  }
}

locals {
  code_534 = (try(local.iter_533.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_533.code_ptr, local.iter_533.code_ptr + 2)
    : [null])

  input_534 = (local.code_534[0] == ","
    ? substr(local.input_533, local.code_534[1], -1)
    : local.input_533)

  iter_534 = try(local.iter_533.code_ptr >= length(var.code), true) ? local.iter_533 : {
    output = (local.code_534[0] == "."
      ? "${local.iter_533.output}${join("", [for _ in range(local.code_534[1]) : jsondecode(format("\"\\u%04x\"", local.iter_533.tape[local.iter_533.tape_ptr]))])}"
      : local.iter_533.output)
    
    tape = (
      local.code_534[0] == "+"
        ? [for i, b in local.iter_533.tape : (i == local.iter_533.tape_ptr ? (b + local.code_534[1]) % 256 : b)] :
      local.code_534[0] == "-"
        ? [for i, b in local.iter_533.tape : (i == local.iter_533.tape_ptr ? (b - local.code_534[1] + 256) % 256 : b)] :
      local.code_534[0] == ","
        ? [for i, b in local.iter_533.tape : (i == local.iter_533.tape_ptr ? local.ascii_lookup[substr(local.input_534, 0, 1)] : b)]
        : local.iter_533.tape)

    tape_ptr = (
      local.code_534[0] == "<"
        ? local.iter_533.tape_ptr - local.code_534[1] :
      local.code_534[0] == ">"
        ? local.iter_533.tape_ptr + local.code_534[1]
        : local.iter_533.tape_ptr)

    code_ptr = 2 + (
      local.code_534[0] == "["
        ? local.iter_533.tape[local.iter_533.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_533.code_ptr)] : local.iter_533.code_ptr :
      local.code_534[0] == "]"
        ? local.iter_533.tape[local.iter_533.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_533.code_ptr)] : local.iter_533.code_ptr
        : local.iter_533.code_ptr)

    steps_taken = 1 + local.iter_533.steps_taken
  }
}

locals {
  code_535 = (try(local.iter_534.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_534.code_ptr, local.iter_534.code_ptr + 2)
    : [null])

  input_535 = (local.code_535[0] == ","
    ? substr(local.input_534, local.code_535[1], -1)
    : local.input_534)

  iter_535 = try(local.iter_534.code_ptr >= length(var.code), true) ? local.iter_534 : {
    output = (local.code_535[0] == "."
      ? "${local.iter_534.output}${join("", [for _ in range(local.code_535[1]) : jsondecode(format("\"\\u%04x\"", local.iter_534.tape[local.iter_534.tape_ptr]))])}"
      : local.iter_534.output)
    
    tape = (
      local.code_535[0] == "+"
        ? [for i, b in local.iter_534.tape : (i == local.iter_534.tape_ptr ? (b + local.code_535[1]) % 256 : b)] :
      local.code_535[0] == "-"
        ? [for i, b in local.iter_534.tape : (i == local.iter_534.tape_ptr ? (b - local.code_535[1] + 256) % 256 : b)] :
      local.code_535[0] == ","
        ? [for i, b in local.iter_534.tape : (i == local.iter_534.tape_ptr ? local.ascii_lookup[substr(local.input_535, 0, 1)] : b)]
        : local.iter_534.tape)

    tape_ptr = (
      local.code_535[0] == "<"
        ? local.iter_534.tape_ptr - local.code_535[1] :
      local.code_535[0] == ">"
        ? local.iter_534.tape_ptr + local.code_535[1]
        : local.iter_534.tape_ptr)

    code_ptr = 2 + (
      local.code_535[0] == "["
        ? local.iter_534.tape[local.iter_534.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_534.code_ptr)] : local.iter_534.code_ptr :
      local.code_535[0] == "]"
        ? local.iter_534.tape[local.iter_534.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_534.code_ptr)] : local.iter_534.code_ptr
        : local.iter_534.code_ptr)

    steps_taken = 1 + local.iter_534.steps_taken
  }
}

locals {
  code_536 = (try(local.iter_535.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_535.code_ptr, local.iter_535.code_ptr + 2)
    : [null])

  input_536 = (local.code_536[0] == ","
    ? substr(local.input_535, local.code_536[1], -1)
    : local.input_535)

  iter_536 = try(local.iter_535.code_ptr >= length(var.code), true) ? local.iter_535 : {
    output = (local.code_536[0] == "."
      ? "${local.iter_535.output}${join("", [for _ in range(local.code_536[1]) : jsondecode(format("\"\\u%04x\"", local.iter_535.tape[local.iter_535.tape_ptr]))])}"
      : local.iter_535.output)
    
    tape = (
      local.code_536[0] == "+"
        ? [for i, b in local.iter_535.tape : (i == local.iter_535.tape_ptr ? (b + local.code_536[1]) % 256 : b)] :
      local.code_536[0] == "-"
        ? [for i, b in local.iter_535.tape : (i == local.iter_535.tape_ptr ? (b - local.code_536[1] + 256) % 256 : b)] :
      local.code_536[0] == ","
        ? [for i, b in local.iter_535.tape : (i == local.iter_535.tape_ptr ? local.ascii_lookup[substr(local.input_536, 0, 1)] : b)]
        : local.iter_535.tape)

    tape_ptr = (
      local.code_536[0] == "<"
        ? local.iter_535.tape_ptr - local.code_536[1] :
      local.code_536[0] == ">"
        ? local.iter_535.tape_ptr + local.code_536[1]
        : local.iter_535.tape_ptr)

    code_ptr = 2 + (
      local.code_536[0] == "["
        ? local.iter_535.tape[local.iter_535.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_535.code_ptr)] : local.iter_535.code_ptr :
      local.code_536[0] == "]"
        ? local.iter_535.tape[local.iter_535.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_535.code_ptr)] : local.iter_535.code_ptr
        : local.iter_535.code_ptr)

    steps_taken = 1 + local.iter_535.steps_taken
  }
}

locals {
  code_537 = (try(local.iter_536.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_536.code_ptr, local.iter_536.code_ptr + 2)
    : [null])

  input_537 = (local.code_537[0] == ","
    ? substr(local.input_536, local.code_537[1], -1)
    : local.input_536)

  iter_537 = try(local.iter_536.code_ptr >= length(var.code), true) ? local.iter_536 : {
    output = (local.code_537[0] == "."
      ? "${local.iter_536.output}${join("", [for _ in range(local.code_537[1]) : jsondecode(format("\"\\u%04x\"", local.iter_536.tape[local.iter_536.tape_ptr]))])}"
      : local.iter_536.output)
    
    tape = (
      local.code_537[0] == "+"
        ? [for i, b in local.iter_536.tape : (i == local.iter_536.tape_ptr ? (b + local.code_537[1]) % 256 : b)] :
      local.code_537[0] == "-"
        ? [for i, b in local.iter_536.tape : (i == local.iter_536.tape_ptr ? (b - local.code_537[1] + 256) % 256 : b)] :
      local.code_537[0] == ","
        ? [for i, b in local.iter_536.tape : (i == local.iter_536.tape_ptr ? local.ascii_lookup[substr(local.input_537, 0, 1)] : b)]
        : local.iter_536.tape)

    tape_ptr = (
      local.code_537[0] == "<"
        ? local.iter_536.tape_ptr - local.code_537[1] :
      local.code_537[0] == ">"
        ? local.iter_536.tape_ptr + local.code_537[1]
        : local.iter_536.tape_ptr)

    code_ptr = 2 + (
      local.code_537[0] == "["
        ? local.iter_536.tape[local.iter_536.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_536.code_ptr)] : local.iter_536.code_ptr :
      local.code_537[0] == "]"
        ? local.iter_536.tape[local.iter_536.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_536.code_ptr)] : local.iter_536.code_ptr
        : local.iter_536.code_ptr)

    steps_taken = 1 + local.iter_536.steps_taken
  }
}

locals {
  code_538 = (try(local.iter_537.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_537.code_ptr, local.iter_537.code_ptr + 2)
    : [null])

  input_538 = (local.code_538[0] == ","
    ? substr(local.input_537, local.code_538[1], -1)
    : local.input_537)

  iter_538 = try(local.iter_537.code_ptr >= length(var.code), true) ? local.iter_537 : {
    output = (local.code_538[0] == "."
      ? "${local.iter_537.output}${join("", [for _ in range(local.code_538[1]) : jsondecode(format("\"\\u%04x\"", local.iter_537.tape[local.iter_537.tape_ptr]))])}"
      : local.iter_537.output)
    
    tape = (
      local.code_538[0] == "+"
        ? [for i, b in local.iter_537.tape : (i == local.iter_537.tape_ptr ? (b + local.code_538[1]) % 256 : b)] :
      local.code_538[0] == "-"
        ? [for i, b in local.iter_537.tape : (i == local.iter_537.tape_ptr ? (b - local.code_538[1] + 256) % 256 : b)] :
      local.code_538[0] == ","
        ? [for i, b in local.iter_537.tape : (i == local.iter_537.tape_ptr ? local.ascii_lookup[substr(local.input_538, 0, 1)] : b)]
        : local.iter_537.tape)

    tape_ptr = (
      local.code_538[0] == "<"
        ? local.iter_537.tape_ptr - local.code_538[1] :
      local.code_538[0] == ">"
        ? local.iter_537.tape_ptr + local.code_538[1]
        : local.iter_537.tape_ptr)

    code_ptr = 2 + (
      local.code_538[0] == "["
        ? local.iter_537.tape[local.iter_537.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_537.code_ptr)] : local.iter_537.code_ptr :
      local.code_538[0] == "]"
        ? local.iter_537.tape[local.iter_537.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_537.code_ptr)] : local.iter_537.code_ptr
        : local.iter_537.code_ptr)

    steps_taken = 1 + local.iter_537.steps_taken
  }
}

locals {
  code_539 = (try(local.iter_538.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_538.code_ptr, local.iter_538.code_ptr + 2)
    : [null])

  input_539 = (local.code_539[0] == ","
    ? substr(local.input_538, local.code_539[1], -1)
    : local.input_538)

  iter_539 = try(local.iter_538.code_ptr >= length(var.code), true) ? local.iter_538 : {
    output = (local.code_539[0] == "."
      ? "${local.iter_538.output}${join("", [for _ in range(local.code_539[1]) : jsondecode(format("\"\\u%04x\"", local.iter_538.tape[local.iter_538.tape_ptr]))])}"
      : local.iter_538.output)
    
    tape = (
      local.code_539[0] == "+"
        ? [for i, b in local.iter_538.tape : (i == local.iter_538.tape_ptr ? (b + local.code_539[1]) % 256 : b)] :
      local.code_539[0] == "-"
        ? [for i, b in local.iter_538.tape : (i == local.iter_538.tape_ptr ? (b - local.code_539[1] + 256) % 256 : b)] :
      local.code_539[0] == ","
        ? [for i, b in local.iter_538.tape : (i == local.iter_538.tape_ptr ? local.ascii_lookup[substr(local.input_539, 0, 1)] : b)]
        : local.iter_538.tape)

    tape_ptr = (
      local.code_539[0] == "<"
        ? local.iter_538.tape_ptr - local.code_539[1] :
      local.code_539[0] == ">"
        ? local.iter_538.tape_ptr + local.code_539[1]
        : local.iter_538.tape_ptr)

    code_ptr = 2 + (
      local.code_539[0] == "["
        ? local.iter_538.tape[local.iter_538.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_538.code_ptr)] : local.iter_538.code_ptr :
      local.code_539[0] == "]"
        ? local.iter_538.tape[local.iter_538.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_538.code_ptr)] : local.iter_538.code_ptr
        : local.iter_538.code_ptr)

    steps_taken = 1 + local.iter_538.steps_taken
  }
}

locals {
  code_540 = (try(local.iter_539.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_539.code_ptr, local.iter_539.code_ptr + 2)
    : [null])

  input_540 = (local.code_540[0] == ","
    ? substr(local.input_539, local.code_540[1], -1)
    : local.input_539)

  iter_540 = try(local.iter_539.code_ptr >= length(var.code), true) ? local.iter_539 : {
    output = (local.code_540[0] == "."
      ? "${local.iter_539.output}${join("", [for _ in range(local.code_540[1]) : jsondecode(format("\"\\u%04x\"", local.iter_539.tape[local.iter_539.tape_ptr]))])}"
      : local.iter_539.output)
    
    tape = (
      local.code_540[0] == "+"
        ? [for i, b in local.iter_539.tape : (i == local.iter_539.tape_ptr ? (b + local.code_540[1]) % 256 : b)] :
      local.code_540[0] == "-"
        ? [for i, b in local.iter_539.tape : (i == local.iter_539.tape_ptr ? (b - local.code_540[1] + 256) % 256 : b)] :
      local.code_540[0] == ","
        ? [for i, b in local.iter_539.tape : (i == local.iter_539.tape_ptr ? local.ascii_lookup[substr(local.input_540, 0, 1)] : b)]
        : local.iter_539.tape)

    tape_ptr = (
      local.code_540[0] == "<"
        ? local.iter_539.tape_ptr - local.code_540[1] :
      local.code_540[0] == ">"
        ? local.iter_539.tape_ptr + local.code_540[1]
        : local.iter_539.tape_ptr)

    code_ptr = 2 + (
      local.code_540[0] == "["
        ? local.iter_539.tape[local.iter_539.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_539.code_ptr)] : local.iter_539.code_ptr :
      local.code_540[0] == "]"
        ? local.iter_539.tape[local.iter_539.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_539.code_ptr)] : local.iter_539.code_ptr
        : local.iter_539.code_ptr)

    steps_taken = 1 + local.iter_539.steps_taken
  }
}

locals {
  code_541 = (try(local.iter_540.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_540.code_ptr, local.iter_540.code_ptr + 2)
    : [null])

  input_541 = (local.code_541[0] == ","
    ? substr(local.input_540, local.code_541[1], -1)
    : local.input_540)

  iter_541 = try(local.iter_540.code_ptr >= length(var.code), true) ? local.iter_540 : {
    output = (local.code_541[0] == "."
      ? "${local.iter_540.output}${join("", [for _ in range(local.code_541[1]) : jsondecode(format("\"\\u%04x\"", local.iter_540.tape[local.iter_540.tape_ptr]))])}"
      : local.iter_540.output)
    
    tape = (
      local.code_541[0] == "+"
        ? [for i, b in local.iter_540.tape : (i == local.iter_540.tape_ptr ? (b + local.code_541[1]) % 256 : b)] :
      local.code_541[0] == "-"
        ? [for i, b in local.iter_540.tape : (i == local.iter_540.tape_ptr ? (b - local.code_541[1] + 256) % 256 : b)] :
      local.code_541[0] == ","
        ? [for i, b in local.iter_540.tape : (i == local.iter_540.tape_ptr ? local.ascii_lookup[substr(local.input_541, 0, 1)] : b)]
        : local.iter_540.tape)

    tape_ptr = (
      local.code_541[0] == "<"
        ? local.iter_540.tape_ptr - local.code_541[1] :
      local.code_541[0] == ">"
        ? local.iter_540.tape_ptr + local.code_541[1]
        : local.iter_540.tape_ptr)

    code_ptr = 2 + (
      local.code_541[0] == "["
        ? local.iter_540.tape[local.iter_540.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_540.code_ptr)] : local.iter_540.code_ptr :
      local.code_541[0] == "]"
        ? local.iter_540.tape[local.iter_540.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_540.code_ptr)] : local.iter_540.code_ptr
        : local.iter_540.code_ptr)

    steps_taken = 1 + local.iter_540.steps_taken
  }
}

locals {
  code_542 = (try(local.iter_541.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_541.code_ptr, local.iter_541.code_ptr + 2)
    : [null])

  input_542 = (local.code_542[0] == ","
    ? substr(local.input_541, local.code_542[1], -1)
    : local.input_541)

  iter_542 = try(local.iter_541.code_ptr >= length(var.code), true) ? local.iter_541 : {
    output = (local.code_542[0] == "."
      ? "${local.iter_541.output}${join("", [for _ in range(local.code_542[1]) : jsondecode(format("\"\\u%04x\"", local.iter_541.tape[local.iter_541.tape_ptr]))])}"
      : local.iter_541.output)
    
    tape = (
      local.code_542[0] == "+"
        ? [for i, b in local.iter_541.tape : (i == local.iter_541.tape_ptr ? (b + local.code_542[1]) % 256 : b)] :
      local.code_542[0] == "-"
        ? [for i, b in local.iter_541.tape : (i == local.iter_541.tape_ptr ? (b - local.code_542[1] + 256) % 256 : b)] :
      local.code_542[0] == ","
        ? [for i, b in local.iter_541.tape : (i == local.iter_541.tape_ptr ? local.ascii_lookup[substr(local.input_542, 0, 1)] : b)]
        : local.iter_541.tape)

    tape_ptr = (
      local.code_542[0] == "<"
        ? local.iter_541.tape_ptr - local.code_542[1] :
      local.code_542[0] == ">"
        ? local.iter_541.tape_ptr + local.code_542[1]
        : local.iter_541.tape_ptr)

    code_ptr = 2 + (
      local.code_542[0] == "["
        ? local.iter_541.tape[local.iter_541.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_541.code_ptr)] : local.iter_541.code_ptr :
      local.code_542[0] == "]"
        ? local.iter_541.tape[local.iter_541.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_541.code_ptr)] : local.iter_541.code_ptr
        : local.iter_541.code_ptr)

    steps_taken = 1 + local.iter_541.steps_taken
  }
}

locals {
  code_543 = (try(local.iter_542.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_542.code_ptr, local.iter_542.code_ptr + 2)
    : [null])

  input_543 = (local.code_543[0] == ","
    ? substr(local.input_542, local.code_543[1], -1)
    : local.input_542)

  iter_543 = try(local.iter_542.code_ptr >= length(var.code), true) ? local.iter_542 : {
    output = (local.code_543[0] == "."
      ? "${local.iter_542.output}${join("", [for _ in range(local.code_543[1]) : jsondecode(format("\"\\u%04x\"", local.iter_542.tape[local.iter_542.tape_ptr]))])}"
      : local.iter_542.output)
    
    tape = (
      local.code_543[0] == "+"
        ? [for i, b in local.iter_542.tape : (i == local.iter_542.tape_ptr ? (b + local.code_543[1]) % 256 : b)] :
      local.code_543[0] == "-"
        ? [for i, b in local.iter_542.tape : (i == local.iter_542.tape_ptr ? (b - local.code_543[1] + 256) % 256 : b)] :
      local.code_543[0] == ","
        ? [for i, b in local.iter_542.tape : (i == local.iter_542.tape_ptr ? local.ascii_lookup[substr(local.input_543, 0, 1)] : b)]
        : local.iter_542.tape)

    tape_ptr = (
      local.code_543[0] == "<"
        ? local.iter_542.tape_ptr - local.code_543[1] :
      local.code_543[0] == ">"
        ? local.iter_542.tape_ptr + local.code_543[1]
        : local.iter_542.tape_ptr)

    code_ptr = 2 + (
      local.code_543[0] == "["
        ? local.iter_542.tape[local.iter_542.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_542.code_ptr)] : local.iter_542.code_ptr :
      local.code_543[0] == "]"
        ? local.iter_542.tape[local.iter_542.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_542.code_ptr)] : local.iter_542.code_ptr
        : local.iter_542.code_ptr)

    steps_taken = 1 + local.iter_542.steps_taken
  }
}

locals {
  code_544 = (try(local.iter_543.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_543.code_ptr, local.iter_543.code_ptr + 2)
    : [null])

  input_544 = (local.code_544[0] == ","
    ? substr(local.input_543, local.code_544[1], -1)
    : local.input_543)

  iter_544 = try(local.iter_543.code_ptr >= length(var.code), true) ? local.iter_543 : {
    output = (local.code_544[0] == "."
      ? "${local.iter_543.output}${join("", [for _ in range(local.code_544[1]) : jsondecode(format("\"\\u%04x\"", local.iter_543.tape[local.iter_543.tape_ptr]))])}"
      : local.iter_543.output)
    
    tape = (
      local.code_544[0] == "+"
        ? [for i, b in local.iter_543.tape : (i == local.iter_543.tape_ptr ? (b + local.code_544[1]) % 256 : b)] :
      local.code_544[0] == "-"
        ? [for i, b in local.iter_543.tape : (i == local.iter_543.tape_ptr ? (b - local.code_544[1] + 256) % 256 : b)] :
      local.code_544[0] == ","
        ? [for i, b in local.iter_543.tape : (i == local.iter_543.tape_ptr ? local.ascii_lookup[substr(local.input_544, 0, 1)] : b)]
        : local.iter_543.tape)

    tape_ptr = (
      local.code_544[0] == "<"
        ? local.iter_543.tape_ptr - local.code_544[1] :
      local.code_544[0] == ">"
        ? local.iter_543.tape_ptr + local.code_544[1]
        : local.iter_543.tape_ptr)

    code_ptr = 2 + (
      local.code_544[0] == "["
        ? local.iter_543.tape[local.iter_543.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_543.code_ptr)] : local.iter_543.code_ptr :
      local.code_544[0] == "]"
        ? local.iter_543.tape[local.iter_543.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_543.code_ptr)] : local.iter_543.code_ptr
        : local.iter_543.code_ptr)

    steps_taken = 1 + local.iter_543.steps_taken
  }
}

locals {
  code_545 = (try(local.iter_544.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_544.code_ptr, local.iter_544.code_ptr + 2)
    : [null])

  input_545 = (local.code_545[0] == ","
    ? substr(local.input_544, local.code_545[1], -1)
    : local.input_544)

  iter_545 = try(local.iter_544.code_ptr >= length(var.code), true) ? local.iter_544 : {
    output = (local.code_545[0] == "."
      ? "${local.iter_544.output}${join("", [for _ in range(local.code_545[1]) : jsondecode(format("\"\\u%04x\"", local.iter_544.tape[local.iter_544.tape_ptr]))])}"
      : local.iter_544.output)
    
    tape = (
      local.code_545[0] == "+"
        ? [for i, b in local.iter_544.tape : (i == local.iter_544.tape_ptr ? (b + local.code_545[1]) % 256 : b)] :
      local.code_545[0] == "-"
        ? [for i, b in local.iter_544.tape : (i == local.iter_544.tape_ptr ? (b - local.code_545[1] + 256) % 256 : b)] :
      local.code_545[0] == ","
        ? [for i, b in local.iter_544.tape : (i == local.iter_544.tape_ptr ? local.ascii_lookup[substr(local.input_545, 0, 1)] : b)]
        : local.iter_544.tape)

    tape_ptr = (
      local.code_545[0] == "<"
        ? local.iter_544.tape_ptr - local.code_545[1] :
      local.code_545[0] == ">"
        ? local.iter_544.tape_ptr + local.code_545[1]
        : local.iter_544.tape_ptr)

    code_ptr = 2 + (
      local.code_545[0] == "["
        ? local.iter_544.tape[local.iter_544.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_544.code_ptr)] : local.iter_544.code_ptr :
      local.code_545[0] == "]"
        ? local.iter_544.tape[local.iter_544.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_544.code_ptr)] : local.iter_544.code_ptr
        : local.iter_544.code_ptr)

    steps_taken = 1 + local.iter_544.steps_taken
  }
}

locals {
  code_546 = (try(local.iter_545.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_545.code_ptr, local.iter_545.code_ptr + 2)
    : [null])

  input_546 = (local.code_546[0] == ","
    ? substr(local.input_545, local.code_546[1], -1)
    : local.input_545)

  iter_546 = try(local.iter_545.code_ptr >= length(var.code), true) ? local.iter_545 : {
    output = (local.code_546[0] == "."
      ? "${local.iter_545.output}${join("", [for _ in range(local.code_546[1]) : jsondecode(format("\"\\u%04x\"", local.iter_545.tape[local.iter_545.tape_ptr]))])}"
      : local.iter_545.output)
    
    tape = (
      local.code_546[0] == "+"
        ? [for i, b in local.iter_545.tape : (i == local.iter_545.tape_ptr ? (b + local.code_546[1]) % 256 : b)] :
      local.code_546[0] == "-"
        ? [for i, b in local.iter_545.tape : (i == local.iter_545.tape_ptr ? (b - local.code_546[1] + 256) % 256 : b)] :
      local.code_546[0] == ","
        ? [for i, b in local.iter_545.tape : (i == local.iter_545.tape_ptr ? local.ascii_lookup[substr(local.input_546, 0, 1)] : b)]
        : local.iter_545.tape)

    tape_ptr = (
      local.code_546[0] == "<"
        ? local.iter_545.tape_ptr - local.code_546[1] :
      local.code_546[0] == ">"
        ? local.iter_545.tape_ptr + local.code_546[1]
        : local.iter_545.tape_ptr)

    code_ptr = 2 + (
      local.code_546[0] == "["
        ? local.iter_545.tape[local.iter_545.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_545.code_ptr)] : local.iter_545.code_ptr :
      local.code_546[0] == "]"
        ? local.iter_545.tape[local.iter_545.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_545.code_ptr)] : local.iter_545.code_ptr
        : local.iter_545.code_ptr)

    steps_taken = 1 + local.iter_545.steps_taken
  }
}

locals {
  code_547 = (try(local.iter_546.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_546.code_ptr, local.iter_546.code_ptr + 2)
    : [null])

  input_547 = (local.code_547[0] == ","
    ? substr(local.input_546, local.code_547[1], -1)
    : local.input_546)

  iter_547 = try(local.iter_546.code_ptr >= length(var.code), true) ? local.iter_546 : {
    output = (local.code_547[0] == "."
      ? "${local.iter_546.output}${join("", [for _ in range(local.code_547[1]) : jsondecode(format("\"\\u%04x\"", local.iter_546.tape[local.iter_546.tape_ptr]))])}"
      : local.iter_546.output)
    
    tape = (
      local.code_547[0] == "+"
        ? [for i, b in local.iter_546.tape : (i == local.iter_546.tape_ptr ? (b + local.code_547[1]) % 256 : b)] :
      local.code_547[0] == "-"
        ? [for i, b in local.iter_546.tape : (i == local.iter_546.tape_ptr ? (b - local.code_547[1] + 256) % 256 : b)] :
      local.code_547[0] == ","
        ? [for i, b in local.iter_546.tape : (i == local.iter_546.tape_ptr ? local.ascii_lookup[substr(local.input_547, 0, 1)] : b)]
        : local.iter_546.tape)

    tape_ptr = (
      local.code_547[0] == "<"
        ? local.iter_546.tape_ptr - local.code_547[1] :
      local.code_547[0] == ">"
        ? local.iter_546.tape_ptr + local.code_547[1]
        : local.iter_546.tape_ptr)

    code_ptr = 2 + (
      local.code_547[0] == "["
        ? local.iter_546.tape[local.iter_546.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_546.code_ptr)] : local.iter_546.code_ptr :
      local.code_547[0] == "]"
        ? local.iter_546.tape[local.iter_546.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_546.code_ptr)] : local.iter_546.code_ptr
        : local.iter_546.code_ptr)

    steps_taken = 1 + local.iter_546.steps_taken
  }
}

locals {
  code_548 = (try(local.iter_547.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_547.code_ptr, local.iter_547.code_ptr + 2)
    : [null])

  input_548 = (local.code_548[0] == ","
    ? substr(local.input_547, local.code_548[1], -1)
    : local.input_547)

  iter_548 = try(local.iter_547.code_ptr >= length(var.code), true) ? local.iter_547 : {
    output = (local.code_548[0] == "."
      ? "${local.iter_547.output}${join("", [for _ in range(local.code_548[1]) : jsondecode(format("\"\\u%04x\"", local.iter_547.tape[local.iter_547.tape_ptr]))])}"
      : local.iter_547.output)
    
    tape = (
      local.code_548[0] == "+"
        ? [for i, b in local.iter_547.tape : (i == local.iter_547.tape_ptr ? (b + local.code_548[1]) % 256 : b)] :
      local.code_548[0] == "-"
        ? [for i, b in local.iter_547.tape : (i == local.iter_547.tape_ptr ? (b - local.code_548[1] + 256) % 256 : b)] :
      local.code_548[0] == ","
        ? [for i, b in local.iter_547.tape : (i == local.iter_547.tape_ptr ? local.ascii_lookup[substr(local.input_548, 0, 1)] : b)]
        : local.iter_547.tape)

    tape_ptr = (
      local.code_548[0] == "<"
        ? local.iter_547.tape_ptr - local.code_548[1] :
      local.code_548[0] == ">"
        ? local.iter_547.tape_ptr + local.code_548[1]
        : local.iter_547.tape_ptr)

    code_ptr = 2 + (
      local.code_548[0] == "["
        ? local.iter_547.tape[local.iter_547.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_547.code_ptr)] : local.iter_547.code_ptr :
      local.code_548[0] == "]"
        ? local.iter_547.tape[local.iter_547.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_547.code_ptr)] : local.iter_547.code_ptr
        : local.iter_547.code_ptr)

    steps_taken = 1 + local.iter_547.steps_taken
  }
}

locals {
  code_549 = (try(local.iter_548.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_548.code_ptr, local.iter_548.code_ptr + 2)
    : [null])

  input_549 = (local.code_549[0] == ","
    ? substr(local.input_548, local.code_549[1], -1)
    : local.input_548)

  iter_549 = try(local.iter_548.code_ptr >= length(var.code), true) ? local.iter_548 : {
    output = (local.code_549[0] == "."
      ? "${local.iter_548.output}${join("", [for _ in range(local.code_549[1]) : jsondecode(format("\"\\u%04x\"", local.iter_548.tape[local.iter_548.tape_ptr]))])}"
      : local.iter_548.output)
    
    tape = (
      local.code_549[0] == "+"
        ? [for i, b in local.iter_548.tape : (i == local.iter_548.tape_ptr ? (b + local.code_549[1]) % 256 : b)] :
      local.code_549[0] == "-"
        ? [for i, b in local.iter_548.tape : (i == local.iter_548.tape_ptr ? (b - local.code_549[1] + 256) % 256 : b)] :
      local.code_549[0] == ","
        ? [for i, b in local.iter_548.tape : (i == local.iter_548.tape_ptr ? local.ascii_lookup[substr(local.input_549, 0, 1)] : b)]
        : local.iter_548.tape)

    tape_ptr = (
      local.code_549[0] == "<"
        ? local.iter_548.tape_ptr - local.code_549[1] :
      local.code_549[0] == ">"
        ? local.iter_548.tape_ptr + local.code_549[1]
        : local.iter_548.tape_ptr)

    code_ptr = 2 + (
      local.code_549[0] == "["
        ? local.iter_548.tape[local.iter_548.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_548.code_ptr)] : local.iter_548.code_ptr :
      local.code_549[0] == "]"
        ? local.iter_548.tape[local.iter_548.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_548.code_ptr)] : local.iter_548.code_ptr
        : local.iter_548.code_ptr)

    steps_taken = 1 + local.iter_548.steps_taken
  }
}

locals {
  code_550 = (try(local.iter_549.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_549.code_ptr, local.iter_549.code_ptr + 2)
    : [null])

  input_550 = (local.code_550[0] == ","
    ? substr(local.input_549, local.code_550[1], -1)
    : local.input_549)

  iter_550 = try(local.iter_549.code_ptr >= length(var.code), true) ? local.iter_549 : {
    output = (local.code_550[0] == "."
      ? "${local.iter_549.output}${join("", [for _ in range(local.code_550[1]) : jsondecode(format("\"\\u%04x\"", local.iter_549.tape[local.iter_549.tape_ptr]))])}"
      : local.iter_549.output)
    
    tape = (
      local.code_550[0] == "+"
        ? [for i, b in local.iter_549.tape : (i == local.iter_549.tape_ptr ? (b + local.code_550[1]) % 256 : b)] :
      local.code_550[0] == "-"
        ? [for i, b in local.iter_549.tape : (i == local.iter_549.tape_ptr ? (b - local.code_550[1] + 256) % 256 : b)] :
      local.code_550[0] == ","
        ? [for i, b in local.iter_549.tape : (i == local.iter_549.tape_ptr ? local.ascii_lookup[substr(local.input_550, 0, 1)] : b)]
        : local.iter_549.tape)

    tape_ptr = (
      local.code_550[0] == "<"
        ? local.iter_549.tape_ptr - local.code_550[1] :
      local.code_550[0] == ">"
        ? local.iter_549.tape_ptr + local.code_550[1]
        : local.iter_549.tape_ptr)

    code_ptr = 2 + (
      local.code_550[0] == "["
        ? local.iter_549.tape[local.iter_549.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_549.code_ptr)] : local.iter_549.code_ptr :
      local.code_550[0] == "]"
        ? local.iter_549.tape[local.iter_549.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_549.code_ptr)] : local.iter_549.code_ptr
        : local.iter_549.code_ptr)

    steps_taken = 1 + local.iter_549.steps_taken
  }
}

locals {
  code_551 = (try(local.iter_550.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_550.code_ptr, local.iter_550.code_ptr + 2)
    : [null])

  input_551 = (local.code_551[0] == ","
    ? substr(local.input_550, local.code_551[1], -1)
    : local.input_550)

  iter_551 = try(local.iter_550.code_ptr >= length(var.code), true) ? local.iter_550 : {
    output = (local.code_551[0] == "."
      ? "${local.iter_550.output}${join("", [for _ in range(local.code_551[1]) : jsondecode(format("\"\\u%04x\"", local.iter_550.tape[local.iter_550.tape_ptr]))])}"
      : local.iter_550.output)
    
    tape = (
      local.code_551[0] == "+"
        ? [for i, b in local.iter_550.tape : (i == local.iter_550.tape_ptr ? (b + local.code_551[1]) % 256 : b)] :
      local.code_551[0] == "-"
        ? [for i, b in local.iter_550.tape : (i == local.iter_550.tape_ptr ? (b - local.code_551[1] + 256) % 256 : b)] :
      local.code_551[0] == ","
        ? [for i, b in local.iter_550.tape : (i == local.iter_550.tape_ptr ? local.ascii_lookup[substr(local.input_551, 0, 1)] : b)]
        : local.iter_550.tape)

    tape_ptr = (
      local.code_551[0] == "<"
        ? local.iter_550.tape_ptr - local.code_551[1] :
      local.code_551[0] == ">"
        ? local.iter_550.tape_ptr + local.code_551[1]
        : local.iter_550.tape_ptr)

    code_ptr = 2 + (
      local.code_551[0] == "["
        ? local.iter_550.tape[local.iter_550.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_550.code_ptr)] : local.iter_550.code_ptr :
      local.code_551[0] == "]"
        ? local.iter_550.tape[local.iter_550.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_550.code_ptr)] : local.iter_550.code_ptr
        : local.iter_550.code_ptr)

    steps_taken = 1 + local.iter_550.steps_taken
  }
}

locals {
  code_552 = (try(local.iter_551.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_551.code_ptr, local.iter_551.code_ptr + 2)
    : [null])

  input_552 = (local.code_552[0] == ","
    ? substr(local.input_551, local.code_552[1], -1)
    : local.input_551)

  iter_552 = try(local.iter_551.code_ptr >= length(var.code), true) ? local.iter_551 : {
    output = (local.code_552[0] == "."
      ? "${local.iter_551.output}${join("", [for _ in range(local.code_552[1]) : jsondecode(format("\"\\u%04x\"", local.iter_551.tape[local.iter_551.tape_ptr]))])}"
      : local.iter_551.output)
    
    tape = (
      local.code_552[0] == "+"
        ? [for i, b in local.iter_551.tape : (i == local.iter_551.tape_ptr ? (b + local.code_552[1]) % 256 : b)] :
      local.code_552[0] == "-"
        ? [for i, b in local.iter_551.tape : (i == local.iter_551.tape_ptr ? (b - local.code_552[1] + 256) % 256 : b)] :
      local.code_552[0] == ","
        ? [for i, b in local.iter_551.tape : (i == local.iter_551.tape_ptr ? local.ascii_lookup[substr(local.input_552, 0, 1)] : b)]
        : local.iter_551.tape)

    tape_ptr = (
      local.code_552[0] == "<"
        ? local.iter_551.tape_ptr - local.code_552[1] :
      local.code_552[0] == ">"
        ? local.iter_551.tape_ptr + local.code_552[1]
        : local.iter_551.tape_ptr)

    code_ptr = 2 + (
      local.code_552[0] == "["
        ? local.iter_551.tape[local.iter_551.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_551.code_ptr)] : local.iter_551.code_ptr :
      local.code_552[0] == "]"
        ? local.iter_551.tape[local.iter_551.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_551.code_ptr)] : local.iter_551.code_ptr
        : local.iter_551.code_ptr)

    steps_taken = 1 + local.iter_551.steps_taken
  }
}

locals {
  code_553 = (try(local.iter_552.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_552.code_ptr, local.iter_552.code_ptr + 2)
    : [null])

  input_553 = (local.code_553[0] == ","
    ? substr(local.input_552, local.code_553[1], -1)
    : local.input_552)

  iter_553 = try(local.iter_552.code_ptr >= length(var.code), true) ? local.iter_552 : {
    output = (local.code_553[0] == "."
      ? "${local.iter_552.output}${join("", [for _ in range(local.code_553[1]) : jsondecode(format("\"\\u%04x\"", local.iter_552.tape[local.iter_552.tape_ptr]))])}"
      : local.iter_552.output)
    
    tape = (
      local.code_553[0] == "+"
        ? [for i, b in local.iter_552.tape : (i == local.iter_552.tape_ptr ? (b + local.code_553[1]) % 256 : b)] :
      local.code_553[0] == "-"
        ? [for i, b in local.iter_552.tape : (i == local.iter_552.tape_ptr ? (b - local.code_553[1] + 256) % 256 : b)] :
      local.code_553[0] == ","
        ? [for i, b in local.iter_552.tape : (i == local.iter_552.tape_ptr ? local.ascii_lookup[substr(local.input_553, 0, 1)] : b)]
        : local.iter_552.tape)

    tape_ptr = (
      local.code_553[0] == "<"
        ? local.iter_552.tape_ptr - local.code_553[1] :
      local.code_553[0] == ">"
        ? local.iter_552.tape_ptr + local.code_553[1]
        : local.iter_552.tape_ptr)

    code_ptr = 2 + (
      local.code_553[0] == "["
        ? local.iter_552.tape[local.iter_552.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_552.code_ptr)] : local.iter_552.code_ptr :
      local.code_553[0] == "]"
        ? local.iter_552.tape[local.iter_552.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_552.code_ptr)] : local.iter_552.code_ptr
        : local.iter_552.code_ptr)

    steps_taken = 1 + local.iter_552.steps_taken
  }
}

locals {
  code_554 = (try(local.iter_553.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_553.code_ptr, local.iter_553.code_ptr + 2)
    : [null])

  input_554 = (local.code_554[0] == ","
    ? substr(local.input_553, local.code_554[1], -1)
    : local.input_553)

  iter_554 = try(local.iter_553.code_ptr >= length(var.code), true) ? local.iter_553 : {
    output = (local.code_554[0] == "."
      ? "${local.iter_553.output}${join("", [for _ in range(local.code_554[1]) : jsondecode(format("\"\\u%04x\"", local.iter_553.tape[local.iter_553.tape_ptr]))])}"
      : local.iter_553.output)
    
    tape = (
      local.code_554[0] == "+"
        ? [for i, b in local.iter_553.tape : (i == local.iter_553.tape_ptr ? (b + local.code_554[1]) % 256 : b)] :
      local.code_554[0] == "-"
        ? [for i, b in local.iter_553.tape : (i == local.iter_553.tape_ptr ? (b - local.code_554[1] + 256) % 256 : b)] :
      local.code_554[0] == ","
        ? [for i, b in local.iter_553.tape : (i == local.iter_553.tape_ptr ? local.ascii_lookup[substr(local.input_554, 0, 1)] : b)]
        : local.iter_553.tape)

    tape_ptr = (
      local.code_554[0] == "<"
        ? local.iter_553.tape_ptr - local.code_554[1] :
      local.code_554[0] == ">"
        ? local.iter_553.tape_ptr + local.code_554[1]
        : local.iter_553.tape_ptr)

    code_ptr = 2 + (
      local.code_554[0] == "["
        ? local.iter_553.tape[local.iter_553.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_553.code_ptr)] : local.iter_553.code_ptr :
      local.code_554[0] == "]"
        ? local.iter_553.tape[local.iter_553.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_553.code_ptr)] : local.iter_553.code_ptr
        : local.iter_553.code_ptr)

    steps_taken = 1 + local.iter_553.steps_taken
  }
}

locals {
  code_555 = (try(local.iter_554.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_554.code_ptr, local.iter_554.code_ptr + 2)
    : [null])

  input_555 = (local.code_555[0] == ","
    ? substr(local.input_554, local.code_555[1], -1)
    : local.input_554)

  iter_555 = try(local.iter_554.code_ptr >= length(var.code), true) ? local.iter_554 : {
    output = (local.code_555[0] == "."
      ? "${local.iter_554.output}${join("", [for _ in range(local.code_555[1]) : jsondecode(format("\"\\u%04x\"", local.iter_554.tape[local.iter_554.tape_ptr]))])}"
      : local.iter_554.output)
    
    tape = (
      local.code_555[0] == "+"
        ? [for i, b in local.iter_554.tape : (i == local.iter_554.tape_ptr ? (b + local.code_555[1]) % 256 : b)] :
      local.code_555[0] == "-"
        ? [for i, b in local.iter_554.tape : (i == local.iter_554.tape_ptr ? (b - local.code_555[1] + 256) % 256 : b)] :
      local.code_555[0] == ","
        ? [for i, b in local.iter_554.tape : (i == local.iter_554.tape_ptr ? local.ascii_lookup[substr(local.input_555, 0, 1)] : b)]
        : local.iter_554.tape)

    tape_ptr = (
      local.code_555[0] == "<"
        ? local.iter_554.tape_ptr - local.code_555[1] :
      local.code_555[0] == ">"
        ? local.iter_554.tape_ptr + local.code_555[1]
        : local.iter_554.tape_ptr)

    code_ptr = 2 + (
      local.code_555[0] == "["
        ? local.iter_554.tape[local.iter_554.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_554.code_ptr)] : local.iter_554.code_ptr :
      local.code_555[0] == "]"
        ? local.iter_554.tape[local.iter_554.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_554.code_ptr)] : local.iter_554.code_ptr
        : local.iter_554.code_ptr)

    steps_taken = 1 + local.iter_554.steps_taken
  }
}

locals {
  code_556 = (try(local.iter_555.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_555.code_ptr, local.iter_555.code_ptr + 2)
    : [null])

  input_556 = (local.code_556[0] == ","
    ? substr(local.input_555, local.code_556[1], -1)
    : local.input_555)

  iter_556 = try(local.iter_555.code_ptr >= length(var.code), true) ? local.iter_555 : {
    output = (local.code_556[0] == "."
      ? "${local.iter_555.output}${join("", [for _ in range(local.code_556[1]) : jsondecode(format("\"\\u%04x\"", local.iter_555.tape[local.iter_555.tape_ptr]))])}"
      : local.iter_555.output)
    
    tape = (
      local.code_556[0] == "+"
        ? [for i, b in local.iter_555.tape : (i == local.iter_555.tape_ptr ? (b + local.code_556[1]) % 256 : b)] :
      local.code_556[0] == "-"
        ? [for i, b in local.iter_555.tape : (i == local.iter_555.tape_ptr ? (b - local.code_556[1] + 256) % 256 : b)] :
      local.code_556[0] == ","
        ? [for i, b in local.iter_555.tape : (i == local.iter_555.tape_ptr ? local.ascii_lookup[substr(local.input_556, 0, 1)] : b)]
        : local.iter_555.tape)

    tape_ptr = (
      local.code_556[0] == "<"
        ? local.iter_555.tape_ptr - local.code_556[1] :
      local.code_556[0] == ">"
        ? local.iter_555.tape_ptr + local.code_556[1]
        : local.iter_555.tape_ptr)

    code_ptr = 2 + (
      local.code_556[0] == "["
        ? local.iter_555.tape[local.iter_555.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_555.code_ptr)] : local.iter_555.code_ptr :
      local.code_556[0] == "]"
        ? local.iter_555.tape[local.iter_555.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_555.code_ptr)] : local.iter_555.code_ptr
        : local.iter_555.code_ptr)

    steps_taken = 1 + local.iter_555.steps_taken
  }
}

locals {
  code_557 = (try(local.iter_556.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_556.code_ptr, local.iter_556.code_ptr + 2)
    : [null])

  input_557 = (local.code_557[0] == ","
    ? substr(local.input_556, local.code_557[1], -1)
    : local.input_556)

  iter_557 = try(local.iter_556.code_ptr >= length(var.code), true) ? local.iter_556 : {
    output = (local.code_557[0] == "."
      ? "${local.iter_556.output}${join("", [for _ in range(local.code_557[1]) : jsondecode(format("\"\\u%04x\"", local.iter_556.tape[local.iter_556.tape_ptr]))])}"
      : local.iter_556.output)
    
    tape = (
      local.code_557[0] == "+"
        ? [for i, b in local.iter_556.tape : (i == local.iter_556.tape_ptr ? (b + local.code_557[1]) % 256 : b)] :
      local.code_557[0] == "-"
        ? [for i, b in local.iter_556.tape : (i == local.iter_556.tape_ptr ? (b - local.code_557[1] + 256) % 256 : b)] :
      local.code_557[0] == ","
        ? [for i, b in local.iter_556.tape : (i == local.iter_556.tape_ptr ? local.ascii_lookup[substr(local.input_557, 0, 1)] : b)]
        : local.iter_556.tape)

    tape_ptr = (
      local.code_557[0] == "<"
        ? local.iter_556.tape_ptr - local.code_557[1] :
      local.code_557[0] == ">"
        ? local.iter_556.tape_ptr + local.code_557[1]
        : local.iter_556.tape_ptr)

    code_ptr = 2 + (
      local.code_557[0] == "["
        ? local.iter_556.tape[local.iter_556.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_556.code_ptr)] : local.iter_556.code_ptr :
      local.code_557[0] == "]"
        ? local.iter_556.tape[local.iter_556.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_556.code_ptr)] : local.iter_556.code_ptr
        : local.iter_556.code_ptr)

    steps_taken = 1 + local.iter_556.steps_taken
  }
}

locals {
  code_558 = (try(local.iter_557.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_557.code_ptr, local.iter_557.code_ptr + 2)
    : [null])

  input_558 = (local.code_558[0] == ","
    ? substr(local.input_557, local.code_558[1], -1)
    : local.input_557)

  iter_558 = try(local.iter_557.code_ptr >= length(var.code), true) ? local.iter_557 : {
    output = (local.code_558[0] == "."
      ? "${local.iter_557.output}${join("", [for _ in range(local.code_558[1]) : jsondecode(format("\"\\u%04x\"", local.iter_557.tape[local.iter_557.tape_ptr]))])}"
      : local.iter_557.output)
    
    tape = (
      local.code_558[0] == "+"
        ? [for i, b in local.iter_557.tape : (i == local.iter_557.tape_ptr ? (b + local.code_558[1]) % 256 : b)] :
      local.code_558[0] == "-"
        ? [for i, b in local.iter_557.tape : (i == local.iter_557.tape_ptr ? (b - local.code_558[1] + 256) % 256 : b)] :
      local.code_558[0] == ","
        ? [for i, b in local.iter_557.tape : (i == local.iter_557.tape_ptr ? local.ascii_lookup[substr(local.input_558, 0, 1)] : b)]
        : local.iter_557.tape)

    tape_ptr = (
      local.code_558[0] == "<"
        ? local.iter_557.tape_ptr - local.code_558[1] :
      local.code_558[0] == ">"
        ? local.iter_557.tape_ptr + local.code_558[1]
        : local.iter_557.tape_ptr)

    code_ptr = 2 + (
      local.code_558[0] == "["
        ? local.iter_557.tape[local.iter_557.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_557.code_ptr)] : local.iter_557.code_ptr :
      local.code_558[0] == "]"
        ? local.iter_557.tape[local.iter_557.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_557.code_ptr)] : local.iter_557.code_ptr
        : local.iter_557.code_ptr)

    steps_taken = 1 + local.iter_557.steps_taken
  }
}

locals {
  code_559 = (try(local.iter_558.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_558.code_ptr, local.iter_558.code_ptr + 2)
    : [null])

  input_559 = (local.code_559[0] == ","
    ? substr(local.input_558, local.code_559[1], -1)
    : local.input_558)

  iter_559 = try(local.iter_558.code_ptr >= length(var.code), true) ? local.iter_558 : {
    output = (local.code_559[0] == "."
      ? "${local.iter_558.output}${join("", [for _ in range(local.code_559[1]) : jsondecode(format("\"\\u%04x\"", local.iter_558.tape[local.iter_558.tape_ptr]))])}"
      : local.iter_558.output)
    
    tape = (
      local.code_559[0] == "+"
        ? [for i, b in local.iter_558.tape : (i == local.iter_558.tape_ptr ? (b + local.code_559[1]) % 256 : b)] :
      local.code_559[0] == "-"
        ? [for i, b in local.iter_558.tape : (i == local.iter_558.tape_ptr ? (b - local.code_559[1] + 256) % 256 : b)] :
      local.code_559[0] == ","
        ? [for i, b in local.iter_558.tape : (i == local.iter_558.tape_ptr ? local.ascii_lookup[substr(local.input_559, 0, 1)] : b)]
        : local.iter_558.tape)

    tape_ptr = (
      local.code_559[0] == "<"
        ? local.iter_558.tape_ptr - local.code_559[1] :
      local.code_559[0] == ">"
        ? local.iter_558.tape_ptr + local.code_559[1]
        : local.iter_558.tape_ptr)

    code_ptr = 2 + (
      local.code_559[0] == "["
        ? local.iter_558.tape[local.iter_558.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_558.code_ptr)] : local.iter_558.code_ptr :
      local.code_559[0] == "]"
        ? local.iter_558.tape[local.iter_558.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_558.code_ptr)] : local.iter_558.code_ptr
        : local.iter_558.code_ptr)

    steps_taken = 1 + local.iter_558.steps_taken
  }
}

locals {
  code_560 = (try(local.iter_559.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_559.code_ptr, local.iter_559.code_ptr + 2)
    : [null])

  input_560 = (local.code_560[0] == ","
    ? substr(local.input_559, local.code_560[1], -1)
    : local.input_559)

  iter_560 = try(local.iter_559.code_ptr >= length(var.code), true) ? local.iter_559 : {
    output = (local.code_560[0] == "."
      ? "${local.iter_559.output}${join("", [for _ in range(local.code_560[1]) : jsondecode(format("\"\\u%04x\"", local.iter_559.tape[local.iter_559.tape_ptr]))])}"
      : local.iter_559.output)
    
    tape = (
      local.code_560[0] == "+"
        ? [for i, b in local.iter_559.tape : (i == local.iter_559.tape_ptr ? (b + local.code_560[1]) % 256 : b)] :
      local.code_560[0] == "-"
        ? [for i, b in local.iter_559.tape : (i == local.iter_559.tape_ptr ? (b - local.code_560[1] + 256) % 256 : b)] :
      local.code_560[0] == ","
        ? [for i, b in local.iter_559.tape : (i == local.iter_559.tape_ptr ? local.ascii_lookup[substr(local.input_560, 0, 1)] : b)]
        : local.iter_559.tape)

    tape_ptr = (
      local.code_560[0] == "<"
        ? local.iter_559.tape_ptr - local.code_560[1] :
      local.code_560[0] == ">"
        ? local.iter_559.tape_ptr + local.code_560[1]
        : local.iter_559.tape_ptr)

    code_ptr = 2 + (
      local.code_560[0] == "["
        ? local.iter_559.tape[local.iter_559.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_559.code_ptr)] : local.iter_559.code_ptr :
      local.code_560[0] == "]"
        ? local.iter_559.tape[local.iter_559.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_559.code_ptr)] : local.iter_559.code_ptr
        : local.iter_559.code_ptr)

    steps_taken = 1 + local.iter_559.steps_taken
  }
}

locals {
  code_561 = (try(local.iter_560.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_560.code_ptr, local.iter_560.code_ptr + 2)
    : [null])

  input_561 = (local.code_561[0] == ","
    ? substr(local.input_560, local.code_561[1], -1)
    : local.input_560)

  iter_561 = try(local.iter_560.code_ptr >= length(var.code), true) ? local.iter_560 : {
    output = (local.code_561[0] == "."
      ? "${local.iter_560.output}${join("", [for _ in range(local.code_561[1]) : jsondecode(format("\"\\u%04x\"", local.iter_560.tape[local.iter_560.tape_ptr]))])}"
      : local.iter_560.output)
    
    tape = (
      local.code_561[0] == "+"
        ? [for i, b in local.iter_560.tape : (i == local.iter_560.tape_ptr ? (b + local.code_561[1]) % 256 : b)] :
      local.code_561[0] == "-"
        ? [for i, b in local.iter_560.tape : (i == local.iter_560.tape_ptr ? (b - local.code_561[1] + 256) % 256 : b)] :
      local.code_561[0] == ","
        ? [for i, b in local.iter_560.tape : (i == local.iter_560.tape_ptr ? local.ascii_lookup[substr(local.input_561, 0, 1)] : b)]
        : local.iter_560.tape)

    tape_ptr = (
      local.code_561[0] == "<"
        ? local.iter_560.tape_ptr - local.code_561[1] :
      local.code_561[0] == ">"
        ? local.iter_560.tape_ptr + local.code_561[1]
        : local.iter_560.tape_ptr)

    code_ptr = 2 + (
      local.code_561[0] == "["
        ? local.iter_560.tape[local.iter_560.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_560.code_ptr)] : local.iter_560.code_ptr :
      local.code_561[0] == "]"
        ? local.iter_560.tape[local.iter_560.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_560.code_ptr)] : local.iter_560.code_ptr
        : local.iter_560.code_ptr)

    steps_taken = 1 + local.iter_560.steps_taken
  }
}

locals {
  code_562 = (try(local.iter_561.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_561.code_ptr, local.iter_561.code_ptr + 2)
    : [null])

  input_562 = (local.code_562[0] == ","
    ? substr(local.input_561, local.code_562[1], -1)
    : local.input_561)

  iter_562 = try(local.iter_561.code_ptr >= length(var.code), true) ? local.iter_561 : {
    output = (local.code_562[0] == "."
      ? "${local.iter_561.output}${join("", [for _ in range(local.code_562[1]) : jsondecode(format("\"\\u%04x\"", local.iter_561.tape[local.iter_561.tape_ptr]))])}"
      : local.iter_561.output)
    
    tape = (
      local.code_562[0] == "+"
        ? [for i, b in local.iter_561.tape : (i == local.iter_561.tape_ptr ? (b + local.code_562[1]) % 256 : b)] :
      local.code_562[0] == "-"
        ? [for i, b in local.iter_561.tape : (i == local.iter_561.tape_ptr ? (b - local.code_562[1] + 256) % 256 : b)] :
      local.code_562[0] == ","
        ? [for i, b in local.iter_561.tape : (i == local.iter_561.tape_ptr ? local.ascii_lookup[substr(local.input_562, 0, 1)] : b)]
        : local.iter_561.tape)

    tape_ptr = (
      local.code_562[0] == "<"
        ? local.iter_561.tape_ptr - local.code_562[1] :
      local.code_562[0] == ">"
        ? local.iter_561.tape_ptr + local.code_562[1]
        : local.iter_561.tape_ptr)

    code_ptr = 2 + (
      local.code_562[0] == "["
        ? local.iter_561.tape[local.iter_561.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_561.code_ptr)] : local.iter_561.code_ptr :
      local.code_562[0] == "]"
        ? local.iter_561.tape[local.iter_561.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_561.code_ptr)] : local.iter_561.code_ptr
        : local.iter_561.code_ptr)

    steps_taken = 1 + local.iter_561.steps_taken
  }
}

locals {
  code_563 = (try(local.iter_562.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_562.code_ptr, local.iter_562.code_ptr + 2)
    : [null])

  input_563 = (local.code_563[0] == ","
    ? substr(local.input_562, local.code_563[1], -1)
    : local.input_562)

  iter_563 = try(local.iter_562.code_ptr >= length(var.code), true) ? local.iter_562 : {
    output = (local.code_563[0] == "."
      ? "${local.iter_562.output}${join("", [for _ in range(local.code_563[1]) : jsondecode(format("\"\\u%04x\"", local.iter_562.tape[local.iter_562.tape_ptr]))])}"
      : local.iter_562.output)
    
    tape = (
      local.code_563[0] == "+"
        ? [for i, b in local.iter_562.tape : (i == local.iter_562.tape_ptr ? (b + local.code_563[1]) % 256 : b)] :
      local.code_563[0] == "-"
        ? [for i, b in local.iter_562.tape : (i == local.iter_562.tape_ptr ? (b - local.code_563[1] + 256) % 256 : b)] :
      local.code_563[0] == ","
        ? [for i, b in local.iter_562.tape : (i == local.iter_562.tape_ptr ? local.ascii_lookup[substr(local.input_563, 0, 1)] : b)]
        : local.iter_562.tape)

    tape_ptr = (
      local.code_563[0] == "<"
        ? local.iter_562.tape_ptr - local.code_563[1] :
      local.code_563[0] == ">"
        ? local.iter_562.tape_ptr + local.code_563[1]
        : local.iter_562.tape_ptr)

    code_ptr = 2 + (
      local.code_563[0] == "["
        ? local.iter_562.tape[local.iter_562.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_562.code_ptr)] : local.iter_562.code_ptr :
      local.code_563[0] == "]"
        ? local.iter_562.tape[local.iter_562.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_562.code_ptr)] : local.iter_562.code_ptr
        : local.iter_562.code_ptr)

    steps_taken = 1 + local.iter_562.steps_taken
  }
}

locals {
  code_564 = (try(local.iter_563.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_563.code_ptr, local.iter_563.code_ptr + 2)
    : [null])

  input_564 = (local.code_564[0] == ","
    ? substr(local.input_563, local.code_564[1], -1)
    : local.input_563)

  iter_564 = try(local.iter_563.code_ptr >= length(var.code), true) ? local.iter_563 : {
    output = (local.code_564[0] == "."
      ? "${local.iter_563.output}${join("", [for _ in range(local.code_564[1]) : jsondecode(format("\"\\u%04x\"", local.iter_563.tape[local.iter_563.tape_ptr]))])}"
      : local.iter_563.output)
    
    tape = (
      local.code_564[0] == "+"
        ? [for i, b in local.iter_563.tape : (i == local.iter_563.tape_ptr ? (b + local.code_564[1]) % 256 : b)] :
      local.code_564[0] == "-"
        ? [for i, b in local.iter_563.tape : (i == local.iter_563.tape_ptr ? (b - local.code_564[1] + 256) % 256 : b)] :
      local.code_564[0] == ","
        ? [for i, b in local.iter_563.tape : (i == local.iter_563.tape_ptr ? local.ascii_lookup[substr(local.input_564, 0, 1)] : b)]
        : local.iter_563.tape)

    tape_ptr = (
      local.code_564[0] == "<"
        ? local.iter_563.tape_ptr - local.code_564[1] :
      local.code_564[0] == ">"
        ? local.iter_563.tape_ptr + local.code_564[1]
        : local.iter_563.tape_ptr)

    code_ptr = 2 + (
      local.code_564[0] == "["
        ? local.iter_563.tape[local.iter_563.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_563.code_ptr)] : local.iter_563.code_ptr :
      local.code_564[0] == "]"
        ? local.iter_563.tape[local.iter_563.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_563.code_ptr)] : local.iter_563.code_ptr
        : local.iter_563.code_ptr)

    steps_taken = 1 + local.iter_563.steps_taken
  }
}

locals {
  code_565 = (try(local.iter_564.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_564.code_ptr, local.iter_564.code_ptr + 2)
    : [null])

  input_565 = (local.code_565[0] == ","
    ? substr(local.input_564, local.code_565[1], -1)
    : local.input_564)

  iter_565 = try(local.iter_564.code_ptr >= length(var.code), true) ? local.iter_564 : {
    output = (local.code_565[0] == "."
      ? "${local.iter_564.output}${join("", [for _ in range(local.code_565[1]) : jsondecode(format("\"\\u%04x\"", local.iter_564.tape[local.iter_564.tape_ptr]))])}"
      : local.iter_564.output)
    
    tape = (
      local.code_565[0] == "+"
        ? [for i, b in local.iter_564.tape : (i == local.iter_564.tape_ptr ? (b + local.code_565[1]) % 256 : b)] :
      local.code_565[0] == "-"
        ? [for i, b in local.iter_564.tape : (i == local.iter_564.tape_ptr ? (b - local.code_565[1] + 256) % 256 : b)] :
      local.code_565[0] == ","
        ? [for i, b in local.iter_564.tape : (i == local.iter_564.tape_ptr ? local.ascii_lookup[substr(local.input_565, 0, 1)] : b)]
        : local.iter_564.tape)

    tape_ptr = (
      local.code_565[0] == "<"
        ? local.iter_564.tape_ptr - local.code_565[1] :
      local.code_565[0] == ">"
        ? local.iter_564.tape_ptr + local.code_565[1]
        : local.iter_564.tape_ptr)

    code_ptr = 2 + (
      local.code_565[0] == "["
        ? local.iter_564.tape[local.iter_564.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_564.code_ptr)] : local.iter_564.code_ptr :
      local.code_565[0] == "]"
        ? local.iter_564.tape[local.iter_564.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_564.code_ptr)] : local.iter_564.code_ptr
        : local.iter_564.code_ptr)

    steps_taken = 1 + local.iter_564.steps_taken
  }
}

locals {
  code_566 = (try(local.iter_565.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_565.code_ptr, local.iter_565.code_ptr + 2)
    : [null])

  input_566 = (local.code_566[0] == ","
    ? substr(local.input_565, local.code_566[1], -1)
    : local.input_565)

  iter_566 = try(local.iter_565.code_ptr >= length(var.code), true) ? local.iter_565 : {
    output = (local.code_566[0] == "."
      ? "${local.iter_565.output}${join("", [for _ in range(local.code_566[1]) : jsondecode(format("\"\\u%04x\"", local.iter_565.tape[local.iter_565.tape_ptr]))])}"
      : local.iter_565.output)
    
    tape = (
      local.code_566[0] == "+"
        ? [for i, b in local.iter_565.tape : (i == local.iter_565.tape_ptr ? (b + local.code_566[1]) % 256 : b)] :
      local.code_566[0] == "-"
        ? [for i, b in local.iter_565.tape : (i == local.iter_565.tape_ptr ? (b - local.code_566[1] + 256) % 256 : b)] :
      local.code_566[0] == ","
        ? [for i, b in local.iter_565.tape : (i == local.iter_565.tape_ptr ? local.ascii_lookup[substr(local.input_566, 0, 1)] : b)]
        : local.iter_565.tape)

    tape_ptr = (
      local.code_566[0] == "<"
        ? local.iter_565.tape_ptr - local.code_566[1] :
      local.code_566[0] == ">"
        ? local.iter_565.tape_ptr + local.code_566[1]
        : local.iter_565.tape_ptr)

    code_ptr = 2 + (
      local.code_566[0] == "["
        ? local.iter_565.tape[local.iter_565.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_565.code_ptr)] : local.iter_565.code_ptr :
      local.code_566[0] == "]"
        ? local.iter_565.tape[local.iter_565.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_565.code_ptr)] : local.iter_565.code_ptr
        : local.iter_565.code_ptr)

    steps_taken = 1 + local.iter_565.steps_taken
  }
}

locals {
  code_567 = (try(local.iter_566.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_566.code_ptr, local.iter_566.code_ptr + 2)
    : [null])

  input_567 = (local.code_567[0] == ","
    ? substr(local.input_566, local.code_567[1], -1)
    : local.input_566)

  iter_567 = try(local.iter_566.code_ptr >= length(var.code), true) ? local.iter_566 : {
    output = (local.code_567[0] == "."
      ? "${local.iter_566.output}${join("", [for _ in range(local.code_567[1]) : jsondecode(format("\"\\u%04x\"", local.iter_566.tape[local.iter_566.tape_ptr]))])}"
      : local.iter_566.output)
    
    tape = (
      local.code_567[0] == "+"
        ? [for i, b in local.iter_566.tape : (i == local.iter_566.tape_ptr ? (b + local.code_567[1]) % 256 : b)] :
      local.code_567[0] == "-"
        ? [for i, b in local.iter_566.tape : (i == local.iter_566.tape_ptr ? (b - local.code_567[1] + 256) % 256 : b)] :
      local.code_567[0] == ","
        ? [for i, b in local.iter_566.tape : (i == local.iter_566.tape_ptr ? local.ascii_lookup[substr(local.input_567, 0, 1)] : b)]
        : local.iter_566.tape)

    tape_ptr = (
      local.code_567[0] == "<"
        ? local.iter_566.tape_ptr - local.code_567[1] :
      local.code_567[0] == ">"
        ? local.iter_566.tape_ptr + local.code_567[1]
        : local.iter_566.tape_ptr)

    code_ptr = 2 + (
      local.code_567[0] == "["
        ? local.iter_566.tape[local.iter_566.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_566.code_ptr)] : local.iter_566.code_ptr :
      local.code_567[0] == "]"
        ? local.iter_566.tape[local.iter_566.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_566.code_ptr)] : local.iter_566.code_ptr
        : local.iter_566.code_ptr)

    steps_taken = 1 + local.iter_566.steps_taken
  }
}

locals {
  code_568 = (try(local.iter_567.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_567.code_ptr, local.iter_567.code_ptr + 2)
    : [null])

  input_568 = (local.code_568[0] == ","
    ? substr(local.input_567, local.code_568[1], -1)
    : local.input_567)

  iter_568 = try(local.iter_567.code_ptr >= length(var.code), true) ? local.iter_567 : {
    output = (local.code_568[0] == "."
      ? "${local.iter_567.output}${join("", [for _ in range(local.code_568[1]) : jsondecode(format("\"\\u%04x\"", local.iter_567.tape[local.iter_567.tape_ptr]))])}"
      : local.iter_567.output)
    
    tape = (
      local.code_568[0] == "+"
        ? [for i, b in local.iter_567.tape : (i == local.iter_567.tape_ptr ? (b + local.code_568[1]) % 256 : b)] :
      local.code_568[0] == "-"
        ? [for i, b in local.iter_567.tape : (i == local.iter_567.tape_ptr ? (b - local.code_568[1] + 256) % 256 : b)] :
      local.code_568[0] == ","
        ? [for i, b in local.iter_567.tape : (i == local.iter_567.tape_ptr ? local.ascii_lookup[substr(local.input_568, 0, 1)] : b)]
        : local.iter_567.tape)

    tape_ptr = (
      local.code_568[0] == "<"
        ? local.iter_567.tape_ptr - local.code_568[1] :
      local.code_568[0] == ">"
        ? local.iter_567.tape_ptr + local.code_568[1]
        : local.iter_567.tape_ptr)

    code_ptr = 2 + (
      local.code_568[0] == "["
        ? local.iter_567.tape[local.iter_567.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_567.code_ptr)] : local.iter_567.code_ptr :
      local.code_568[0] == "]"
        ? local.iter_567.tape[local.iter_567.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_567.code_ptr)] : local.iter_567.code_ptr
        : local.iter_567.code_ptr)

    steps_taken = 1 + local.iter_567.steps_taken
  }
}

locals {
  code_569 = (try(local.iter_568.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_568.code_ptr, local.iter_568.code_ptr + 2)
    : [null])

  input_569 = (local.code_569[0] == ","
    ? substr(local.input_568, local.code_569[1], -1)
    : local.input_568)

  iter_569 = try(local.iter_568.code_ptr >= length(var.code), true) ? local.iter_568 : {
    output = (local.code_569[0] == "."
      ? "${local.iter_568.output}${join("", [for _ in range(local.code_569[1]) : jsondecode(format("\"\\u%04x\"", local.iter_568.tape[local.iter_568.tape_ptr]))])}"
      : local.iter_568.output)
    
    tape = (
      local.code_569[0] == "+"
        ? [for i, b in local.iter_568.tape : (i == local.iter_568.tape_ptr ? (b + local.code_569[1]) % 256 : b)] :
      local.code_569[0] == "-"
        ? [for i, b in local.iter_568.tape : (i == local.iter_568.tape_ptr ? (b - local.code_569[1] + 256) % 256 : b)] :
      local.code_569[0] == ","
        ? [for i, b in local.iter_568.tape : (i == local.iter_568.tape_ptr ? local.ascii_lookup[substr(local.input_569, 0, 1)] : b)]
        : local.iter_568.tape)

    tape_ptr = (
      local.code_569[0] == "<"
        ? local.iter_568.tape_ptr - local.code_569[1] :
      local.code_569[0] == ">"
        ? local.iter_568.tape_ptr + local.code_569[1]
        : local.iter_568.tape_ptr)

    code_ptr = 2 + (
      local.code_569[0] == "["
        ? local.iter_568.tape[local.iter_568.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_568.code_ptr)] : local.iter_568.code_ptr :
      local.code_569[0] == "]"
        ? local.iter_568.tape[local.iter_568.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_568.code_ptr)] : local.iter_568.code_ptr
        : local.iter_568.code_ptr)

    steps_taken = 1 + local.iter_568.steps_taken
  }
}

locals {
  code_570 = (try(local.iter_569.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_569.code_ptr, local.iter_569.code_ptr + 2)
    : [null])

  input_570 = (local.code_570[0] == ","
    ? substr(local.input_569, local.code_570[1], -1)
    : local.input_569)

  iter_570 = try(local.iter_569.code_ptr >= length(var.code), true) ? local.iter_569 : {
    output = (local.code_570[0] == "."
      ? "${local.iter_569.output}${join("", [for _ in range(local.code_570[1]) : jsondecode(format("\"\\u%04x\"", local.iter_569.tape[local.iter_569.tape_ptr]))])}"
      : local.iter_569.output)
    
    tape = (
      local.code_570[0] == "+"
        ? [for i, b in local.iter_569.tape : (i == local.iter_569.tape_ptr ? (b + local.code_570[1]) % 256 : b)] :
      local.code_570[0] == "-"
        ? [for i, b in local.iter_569.tape : (i == local.iter_569.tape_ptr ? (b - local.code_570[1] + 256) % 256 : b)] :
      local.code_570[0] == ","
        ? [for i, b in local.iter_569.tape : (i == local.iter_569.tape_ptr ? local.ascii_lookup[substr(local.input_570, 0, 1)] : b)]
        : local.iter_569.tape)

    tape_ptr = (
      local.code_570[0] == "<"
        ? local.iter_569.tape_ptr - local.code_570[1] :
      local.code_570[0] == ">"
        ? local.iter_569.tape_ptr + local.code_570[1]
        : local.iter_569.tape_ptr)

    code_ptr = 2 + (
      local.code_570[0] == "["
        ? local.iter_569.tape[local.iter_569.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_569.code_ptr)] : local.iter_569.code_ptr :
      local.code_570[0] == "]"
        ? local.iter_569.tape[local.iter_569.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_569.code_ptr)] : local.iter_569.code_ptr
        : local.iter_569.code_ptr)

    steps_taken = 1 + local.iter_569.steps_taken
  }
}

locals {
  code_571 = (try(local.iter_570.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_570.code_ptr, local.iter_570.code_ptr + 2)
    : [null])

  input_571 = (local.code_571[0] == ","
    ? substr(local.input_570, local.code_571[1], -1)
    : local.input_570)

  iter_571 = try(local.iter_570.code_ptr >= length(var.code), true) ? local.iter_570 : {
    output = (local.code_571[0] == "."
      ? "${local.iter_570.output}${join("", [for _ in range(local.code_571[1]) : jsondecode(format("\"\\u%04x\"", local.iter_570.tape[local.iter_570.tape_ptr]))])}"
      : local.iter_570.output)
    
    tape = (
      local.code_571[0] == "+"
        ? [for i, b in local.iter_570.tape : (i == local.iter_570.tape_ptr ? (b + local.code_571[1]) % 256 : b)] :
      local.code_571[0] == "-"
        ? [for i, b in local.iter_570.tape : (i == local.iter_570.tape_ptr ? (b - local.code_571[1] + 256) % 256 : b)] :
      local.code_571[0] == ","
        ? [for i, b in local.iter_570.tape : (i == local.iter_570.tape_ptr ? local.ascii_lookup[substr(local.input_571, 0, 1)] : b)]
        : local.iter_570.tape)

    tape_ptr = (
      local.code_571[0] == "<"
        ? local.iter_570.tape_ptr - local.code_571[1] :
      local.code_571[0] == ">"
        ? local.iter_570.tape_ptr + local.code_571[1]
        : local.iter_570.tape_ptr)

    code_ptr = 2 + (
      local.code_571[0] == "["
        ? local.iter_570.tape[local.iter_570.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_570.code_ptr)] : local.iter_570.code_ptr :
      local.code_571[0] == "]"
        ? local.iter_570.tape[local.iter_570.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_570.code_ptr)] : local.iter_570.code_ptr
        : local.iter_570.code_ptr)

    steps_taken = 1 + local.iter_570.steps_taken
  }
}

locals {
  code_572 = (try(local.iter_571.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_571.code_ptr, local.iter_571.code_ptr + 2)
    : [null])

  input_572 = (local.code_572[0] == ","
    ? substr(local.input_571, local.code_572[1], -1)
    : local.input_571)

  iter_572 = try(local.iter_571.code_ptr >= length(var.code), true) ? local.iter_571 : {
    output = (local.code_572[0] == "."
      ? "${local.iter_571.output}${join("", [for _ in range(local.code_572[1]) : jsondecode(format("\"\\u%04x\"", local.iter_571.tape[local.iter_571.tape_ptr]))])}"
      : local.iter_571.output)
    
    tape = (
      local.code_572[0] == "+"
        ? [for i, b in local.iter_571.tape : (i == local.iter_571.tape_ptr ? (b + local.code_572[1]) % 256 : b)] :
      local.code_572[0] == "-"
        ? [for i, b in local.iter_571.tape : (i == local.iter_571.tape_ptr ? (b - local.code_572[1] + 256) % 256 : b)] :
      local.code_572[0] == ","
        ? [for i, b in local.iter_571.tape : (i == local.iter_571.tape_ptr ? local.ascii_lookup[substr(local.input_572, 0, 1)] : b)]
        : local.iter_571.tape)

    tape_ptr = (
      local.code_572[0] == "<"
        ? local.iter_571.tape_ptr - local.code_572[1] :
      local.code_572[0] == ">"
        ? local.iter_571.tape_ptr + local.code_572[1]
        : local.iter_571.tape_ptr)

    code_ptr = 2 + (
      local.code_572[0] == "["
        ? local.iter_571.tape[local.iter_571.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_571.code_ptr)] : local.iter_571.code_ptr :
      local.code_572[0] == "]"
        ? local.iter_571.tape[local.iter_571.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_571.code_ptr)] : local.iter_571.code_ptr
        : local.iter_571.code_ptr)

    steps_taken = 1 + local.iter_571.steps_taken
  }
}

locals {
  code_573 = (try(local.iter_572.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_572.code_ptr, local.iter_572.code_ptr + 2)
    : [null])

  input_573 = (local.code_573[0] == ","
    ? substr(local.input_572, local.code_573[1], -1)
    : local.input_572)

  iter_573 = try(local.iter_572.code_ptr >= length(var.code), true) ? local.iter_572 : {
    output = (local.code_573[0] == "."
      ? "${local.iter_572.output}${join("", [for _ in range(local.code_573[1]) : jsondecode(format("\"\\u%04x\"", local.iter_572.tape[local.iter_572.tape_ptr]))])}"
      : local.iter_572.output)
    
    tape = (
      local.code_573[0] == "+"
        ? [for i, b in local.iter_572.tape : (i == local.iter_572.tape_ptr ? (b + local.code_573[1]) % 256 : b)] :
      local.code_573[0] == "-"
        ? [for i, b in local.iter_572.tape : (i == local.iter_572.tape_ptr ? (b - local.code_573[1] + 256) % 256 : b)] :
      local.code_573[0] == ","
        ? [for i, b in local.iter_572.tape : (i == local.iter_572.tape_ptr ? local.ascii_lookup[substr(local.input_573, 0, 1)] : b)]
        : local.iter_572.tape)

    tape_ptr = (
      local.code_573[0] == "<"
        ? local.iter_572.tape_ptr - local.code_573[1] :
      local.code_573[0] == ">"
        ? local.iter_572.tape_ptr + local.code_573[1]
        : local.iter_572.tape_ptr)

    code_ptr = 2 + (
      local.code_573[0] == "["
        ? local.iter_572.tape[local.iter_572.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_572.code_ptr)] : local.iter_572.code_ptr :
      local.code_573[0] == "]"
        ? local.iter_572.tape[local.iter_572.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_572.code_ptr)] : local.iter_572.code_ptr
        : local.iter_572.code_ptr)

    steps_taken = 1 + local.iter_572.steps_taken
  }
}

locals {
  code_574 = (try(local.iter_573.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_573.code_ptr, local.iter_573.code_ptr + 2)
    : [null])

  input_574 = (local.code_574[0] == ","
    ? substr(local.input_573, local.code_574[1], -1)
    : local.input_573)

  iter_574 = try(local.iter_573.code_ptr >= length(var.code), true) ? local.iter_573 : {
    output = (local.code_574[0] == "."
      ? "${local.iter_573.output}${join("", [for _ in range(local.code_574[1]) : jsondecode(format("\"\\u%04x\"", local.iter_573.tape[local.iter_573.tape_ptr]))])}"
      : local.iter_573.output)
    
    tape = (
      local.code_574[0] == "+"
        ? [for i, b in local.iter_573.tape : (i == local.iter_573.tape_ptr ? (b + local.code_574[1]) % 256 : b)] :
      local.code_574[0] == "-"
        ? [for i, b in local.iter_573.tape : (i == local.iter_573.tape_ptr ? (b - local.code_574[1] + 256) % 256 : b)] :
      local.code_574[0] == ","
        ? [for i, b in local.iter_573.tape : (i == local.iter_573.tape_ptr ? local.ascii_lookup[substr(local.input_574, 0, 1)] : b)]
        : local.iter_573.tape)

    tape_ptr = (
      local.code_574[0] == "<"
        ? local.iter_573.tape_ptr - local.code_574[1] :
      local.code_574[0] == ">"
        ? local.iter_573.tape_ptr + local.code_574[1]
        : local.iter_573.tape_ptr)

    code_ptr = 2 + (
      local.code_574[0] == "["
        ? local.iter_573.tape[local.iter_573.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_573.code_ptr)] : local.iter_573.code_ptr :
      local.code_574[0] == "]"
        ? local.iter_573.tape[local.iter_573.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_573.code_ptr)] : local.iter_573.code_ptr
        : local.iter_573.code_ptr)

    steps_taken = 1 + local.iter_573.steps_taken
  }
}

locals {
  code_575 = (try(local.iter_574.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_574.code_ptr, local.iter_574.code_ptr + 2)
    : [null])

  input_575 = (local.code_575[0] == ","
    ? substr(local.input_574, local.code_575[1], -1)
    : local.input_574)

  iter_575 = try(local.iter_574.code_ptr >= length(var.code), true) ? local.iter_574 : {
    output = (local.code_575[0] == "."
      ? "${local.iter_574.output}${join("", [for _ in range(local.code_575[1]) : jsondecode(format("\"\\u%04x\"", local.iter_574.tape[local.iter_574.tape_ptr]))])}"
      : local.iter_574.output)
    
    tape = (
      local.code_575[0] == "+"
        ? [for i, b in local.iter_574.tape : (i == local.iter_574.tape_ptr ? (b + local.code_575[1]) % 256 : b)] :
      local.code_575[0] == "-"
        ? [for i, b in local.iter_574.tape : (i == local.iter_574.tape_ptr ? (b - local.code_575[1] + 256) % 256 : b)] :
      local.code_575[0] == ","
        ? [for i, b in local.iter_574.tape : (i == local.iter_574.tape_ptr ? local.ascii_lookup[substr(local.input_575, 0, 1)] : b)]
        : local.iter_574.tape)

    tape_ptr = (
      local.code_575[0] == "<"
        ? local.iter_574.tape_ptr - local.code_575[1] :
      local.code_575[0] == ">"
        ? local.iter_574.tape_ptr + local.code_575[1]
        : local.iter_574.tape_ptr)

    code_ptr = 2 + (
      local.code_575[0] == "["
        ? local.iter_574.tape[local.iter_574.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_574.code_ptr)] : local.iter_574.code_ptr :
      local.code_575[0] == "]"
        ? local.iter_574.tape[local.iter_574.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_574.code_ptr)] : local.iter_574.code_ptr
        : local.iter_574.code_ptr)

    steps_taken = 1 + local.iter_574.steps_taken
  }
}

locals {
  code_576 = (try(local.iter_575.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_575.code_ptr, local.iter_575.code_ptr + 2)
    : [null])

  input_576 = (local.code_576[0] == ","
    ? substr(local.input_575, local.code_576[1], -1)
    : local.input_575)

  iter_576 = try(local.iter_575.code_ptr >= length(var.code), true) ? local.iter_575 : {
    output = (local.code_576[0] == "."
      ? "${local.iter_575.output}${join("", [for _ in range(local.code_576[1]) : jsondecode(format("\"\\u%04x\"", local.iter_575.tape[local.iter_575.tape_ptr]))])}"
      : local.iter_575.output)
    
    tape = (
      local.code_576[0] == "+"
        ? [for i, b in local.iter_575.tape : (i == local.iter_575.tape_ptr ? (b + local.code_576[1]) % 256 : b)] :
      local.code_576[0] == "-"
        ? [for i, b in local.iter_575.tape : (i == local.iter_575.tape_ptr ? (b - local.code_576[1] + 256) % 256 : b)] :
      local.code_576[0] == ","
        ? [for i, b in local.iter_575.tape : (i == local.iter_575.tape_ptr ? local.ascii_lookup[substr(local.input_576, 0, 1)] : b)]
        : local.iter_575.tape)

    tape_ptr = (
      local.code_576[0] == "<"
        ? local.iter_575.tape_ptr - local.code_576[1] :
      local.code_576[0] == ">"
        ? local.iter_575.tape_ptr + local.code_576[1]
        : local.iter_575.tape_ptr)

    code_ptr = 2 + (
      local.code_576[0] == "["
        ? local.iter_575.tape[local.iter_575.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_575.code_ptr)] : local.iter_575.code_ptr :
      local.code_576[0] == "]"
        ? local.iter_575.tape[local.iter_575.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_575.code_ptr)] : local.iter_575.code_ptr
        : local.iter_575.code_ptr)

    steps_taken = 1 + local.iter_575.steps_taken
  }
}

locals {
  code_577 = (try(local.iter_576.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_576.code_ptr, local.iter_576.code_ptr + 2)
    : [null])

  input_577 = (local.code_577[0] == ","
    ? substr(local.input_576, local.code_577[1], -1)
    : local.input_576)

  iter_577 = try(local.iter_576.code_ptr >= length(var.code), true) ? local.iter_576 : {
    output = (local.code_577[0] == "."
      ? "${local.iter_576.output}${join("", [for _ in range(local.code_577[1]) : jsondecode(format("\"\\u%04x\"", local.iter_576.tape[local.iter_576.tape_ptr]))])}"
      : local.iter_576.output)
    
    tape = (
      local.code_577[0] == "+"
        ? [for i, b in local.iter_576.tape : (i == local.iter_576.tape_ptr ? (b + local.code_577[1]) % 256 : b)] :
      local.code_577[0] == "-"
        ? [for i, b in local.iter_576.tape : (i == local.iter_576.tape_ptr ? (b - local.code_577[1] + 256) % 256 : b)] :
      local.code_577[0] == ","
        ? [for i, b in local.iter_576.tape : (i == local.iter_576.tape_ptr ? local.ascii_lookup[substr(local.input_577, 0, 1)] : b)]
        : local.iter_576.tape)

    tape_ptr = (
      local.code_577[0] == "<"
        ? local.iter_576.tape_ptr - local.code_577[1] :
      local.code_577[0] == ">"
        ? local.iter_576.tape_ptr + local.code_577[1]
        : local.iter_576.tape_ptr)

    code_ptr = 2 + (
      local.code_577[0] == "["
        ? local.iter_576.tape[local.iter_576.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_576.code_ptr)] : local.iter_576.code_ptr :
      local.code_577[0] == "]"
        ? local.iter_576.tape[local.iter_576.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_576.code_ptr)] : local.iter_576.code_ptr
        : local.iter_576.code_ptr)

    steps_taken = 1 + local.iter_576.steps_taken
  }
}

locals {
  code_578 = (try(local.iter_577.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_577.code_ptr, local.iter_577.code_ptr + 2)
    : [null])

  input_578 = (local.code_578[0] == ","
    ? substr(local.input_577, local.code_578[1], -1)
    : local.input_577)

  iter_578 = try(local.iter_577.code_ptr >= length(var.code), true) ? local.iter_577 : {
    output = (local.code_578[0] == "."
      ? "${local.iter_577.output}${join("", [for _ in range(local.code_578[1]) : jsondecode(format("\"\\u%04x\"", local.iter_577.tape[local.iter_577.tape_ptr]))])}"
      : local.iter_577.output)
    
    tape = (
      local.code_578[0] == "+"
        ? [for i, b in local.iter_577.tape : (i == local.iter_577.tape_ptr ? (b + local.code_578[1]) % 256 : b)] :
      local.code_578[0] == "-"
        ? [for i, b in local.iter_577.tape : (i == local.iter_577.tape_ptr ? (b - local.code_578[1] + 256) % 256 : b)] :
      local.code_578[0] == ","
        ? [for i, b in local.iter_577.tape : (i == local.iter_577.tape_ptr ? local.ascii_lookup[substr(local.input_578, 0, 1)] : b)]
        : local.iter_577.tape)

    tape_ptr = (
      local.code_578[0] == "<"
        ? local.iter_577.tape_ptr - local.code_578[1] :
      local.code_578[0] == ">"
        ? local.iter_577.tape_ptr + local.code_578[1]
        : local.iter_577.tape_ptr)

    code_ptr = 2 + (
      local.code_578[0] == "["
        ? local.iter_577.tape[local.iter_577.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_577.code_ptr)] : local.iter_577.code_ptr :
      local.code_578[0] == "]"
        ? local.iter_577.tape[local.iter_577.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_577.code_ptr)] : local.iter_577.code_ptr
        : local.iter_577.code_ptr)

    steps_taken = 1 + local.iter_577.steps_taken
  }
}

locals {
  code_579 = (try(local.iter_578.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_578.code_ptr, local.iter_578.code_ptr + 2)
    : [null])

  input_579 = (local.code_579[0] == ","
    ? substr(local.input_578, local.code_579[1], -1)
    : local.input_578)

  iter_579 = try(local.iter_578.code_ptr >= length(var.code), true) ? local.iter_578 : {
    output = (local.code_579[0] == "."
      ? "${local.iter_578.output}${join("", [for _ in range(local.code_579[1]) : jsondecode(format("\"\\u%04x\"", local.iter_578.tape[local.iter_578.tape_ptr]))])}"
      : local.iter_578.output)
    
    tape = (
      local.code_579[0] == "+"
        ? [for i, b in local.iter_578.tape : (i == local.iter_578.tape_ptr ? (b + local.code_579[1]) % 256 : b)] :
      local.code_579[0] == "-"
        ? [for i, b in local.iter_578.tape : (i == local.iter_578.tape_ptr ? (b - local.code_579[1] + 256) % 256 : b)] :
      local.code_579[0] == ","
        ? [for i, b in local.iter_578.tape : (i == local.iter_578.tape_ptr ? local.ascii_lookup[substr(local.input_579, 0, 1)] : b)]
        : local.iter_578.tape)

    tape_ptr = (
      local.code_579[0] == "<"
        ? local.iter_578.tape_ptr - local.code_579[1] :
      local.code_579[0] == ">"
        ? local.iter_578.tape_ptr + local.code_579[1]
        : local.iter_578.tape_ptr)

    code_ptr = 2 + (
      local.code_579[0] == "["
        ? local.iter_578.tape[local.iter_578.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_578.code_ptr)] : local.iter_578.code_ptr :
      local.code_579[0] == "]"
        ? local.iter_578.tape[local.iter_578.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_578.code_ptr)] : local.iter_578.code_ptr
        : local.iter_578.code_ptr)

    steps_taken = 1 + local.iter_578.steps_taken
  }
}

locals {
  code_580 = (try(local.iter_579.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_579.code_ptr, local.iter_579.code_ptr + 2)
    : [null])

  input_580 = (local.code_580[0] == ","
    ? substr(local.input_579, local.code_580[1], -1)
    : local.input_579)

  iter_580 = try(local.iter_579.code_ptr >= length(var.code), true) ? local.iter_579 : {
    output = (local.code_580[0] == "."
      ? "${local.iter_579.output}${join("", [for _ in range(local.code_580[1]) : jsondecode(format("\"\\u%04x\"", local.iter_579.tape[local.iter_579.tape_ptr]))])}"
      : local.iter_579.output)
    
    tape = (
      local.code_580[0] == "+"
        ? [for i, b in local.iter_579.tape : (i == local.iter_579.tape_ptr ? (b + local.code_580[1]) % 256 : b)] :
      local.code_580[0] == "-"
        ? [for i, b in local.iter_579.tape : (i == local.iter_579.tape_ptr ? (b - local.code_580[1] + 256) % 256 : b)] :
      local.code_580[0] == ","
        ? [for i, b in local.iter_579.tape : (i == local.iter_579.tape_ptr ? local.ascii_lookup[substr(local.input_580, 0, 1)] : b)]
        : local.iter_579.tape)

    tape_ptr = (
      local.code_580[0] == "<"
        ? local.iter_579.tape_ptr - local.code_580[1] :
      local.code_580[0] == ">"
        ? local.iter_579.tape_ptr + local.code_580[1]
        : local.iter_579.tape_ptr)

    code_ptr = 2 + (
      local.code_580[0] == "["
        ? local.iter_579.tape[local.iter_579.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_579.code_ptr)] : local.iter_579.code_ptr :
      local.code_580[0] == "]"
        ? local.iter_579.tape[local.iter_579.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_579.code_ptr)] : local.iter_579.code_ptr
        : local.iter_579.code_ptr)

    steps_taken = 1 + local.iter_579.steps_taken
  }
}

locals {
  code_581 = (try(local.iter_580.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_580.code_ptr, local.iter_580.code_ptr + 2)
    : [null])

  input_581 = (local.code_581[0] == ","
    ? substr(local.input_580, local.code_581[1], -1)
    : local.input_580)

  iter_581 = try(local.iter_580.code_ptr >= length(var.code), true) ? local.iter_580 : {
    output = (local.code_581[0] == "."
      ? "${local.iter_580.output}${join("", [for _ in range(local.code_581[1]) : jsondecode(format("\"\\u%04x\"", local.iter_580.tape[local.iter_580.tape_ptr]))])}"
      : local.iter_580.output)
    
    tape = (
      local.code_581[0] == "+"
        ? [for i, b in local.iter_580.tape : (i == local.iter_580.tape_ptr ? (b + local.code_581[1]) % 256 : b)] :
      local.code_581[0] == "-"
        ? [for i, b in local.iter_580.tape : (i == local.iter_580.tape_ptr ? (b - local.code_581[1] + 256) % 256 : b)] :
      local.code_581[0] == ","
        ? [for i, b in local.iter_580.tape : (i == local.iter_580.tape_ptr ? local.ascii_lookup[substr(local.input_581, 0, 1)] : b)]
        : local.iter_580.tape)

    tape_ptr = (
      local.code_581[0] == "<"
        ? local.iter_580.tape_ptr - local.code_581[1] :
      local.code_581[0] == ">"
        ? local.iter_580.tape_ptr + local.code_581[1]
        : local.iter_580.tape_ptr)

    code_ptr = 2 + (
      local.code_581[0] == "["
        ? local.iter_580.tape[local.iter_580.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_580.code_ptr)] : local.iter_580.code_ptr :
      local.code_581[0] == "]"
        ? local.iter_580.tape[local.iter_580.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_580.code_ptr)] : local.iter_580.code_ptr
        : local.iter_580.code_ptr)

    steps_taken = 1 + local.iter_580.steps_taken
  }
}

locals {
  code_582 = (try(local.iter_581.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_581.code_ptr, local.iter_581.code_ptr + 2)
    : [null])

  input_582 = (local.code_582[0] == ","
    ? substr(local.input_581, local.code_582[1], -1)
    : local.input_581)

  iter_582 = try(local.iter_581.code_ptr >= length(var.code), true) ? local.iter_581 : {
    output = (local.code_582[0] == "."
      ? "${local.iter_581.output}${join("", [for _ in range(local.code_582[1]) : jsondecode(format("\"\\u%04x\"", local.iter_581.tape[local.iter_581.tape_ptr]))])}"
      : local.iter_581.output)
    
    tape = (
      local.code_582[0] == "+"
        ? [for i, b in local.iter_581.tape : (i == local.iter_581.tape_ptr ? (b + local.code_582[1]) % 256 : b)] :
      local.code_582[0] == "-"
        ? [for i, b in local.iter_581.tape : (i == local.iter_581.tape_ptr ? (b - local.code_582[1] + 256) % 256 : b)] :
      local.code_582[0] == ","
        ? [for i, b in local.iter_581.tape : (i == local.iter_581.tape_ptr ? local.ascii_lookup[substr(local.input_582, 0, 1)] : b)]
        : local.iter_581.tape)

    tape_ptr = (
      local.code_582[0] == "<"
        ? local.iter_581.tape_ptr - local.code_582[1] :
      local.code_582[0] == ">"
        ? local.iter_581.tape_ptr + local.code_582[1]
        : local.iter_581.tape_ptr)

    code_ptr = 2 + (
      local.code_582[0] == "["
        ? local.iter_581.tape[local.iter_581.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_581.code_ptr)] : local.iter_581.code_ptr :
      local.code_582[0] == "]"
        ? local.iter_581.tape[local.iter_581.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_581.code_ptr)] : local.iter_581.code_ptr
        : local.iter_581.code_ptr)

    steps_taken = 1 + local.iter_581.steps_taken
  }
}

locals {
  code_583 = (try(local.iter_582.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_582.code_ptr, local.iter_582.code_ptr + 2)
    : [null])

  input_583 = (local.code_583[0] == ","
    ? substr(local.input_582, local.code_583[1], -1)
    : local.input_582)

  iter_583 = try(local.iter_582.code_ptr >= length(var.code), true) ? local.iter_582 : {
    output = (local.code_583[0] == "."
      ? "${local.iter_582.output}${join("", [for _ in range(local.code_583[1]) : jsondecode(format("\"\\u%04x\"", local.iter_582.tape[local.iter_582.tape_ptr]))])}"
      : local.iter_582.output)
    
    tape = (
      local.code_583[0] == "+"
        ? [for i, b in local.iter_582.tape : (i == local.iter_582.tape_ptr ? (b + local.code_583[1]) % 256 : b)] :
      local.code_583[0] == "-"
        ? [for i, b in local.iter_582.tape : (i == local.iter_582.tape_ptr ? (b - local.code_583[1] + 256) % 256 : b)] :
      local.code_583[0] == ","
        ? [for i, b in local.iter_582.tape : (i == local.iter_582.tape_ptr ? local.ascii_lookup[substr(local.input_583, 0, 1)] : b)]
        : local.iter_582.tape)

    tape_ptr = (
      local.code_583[0] == "<"
        ? local.iter_582.tape_ptr - local.code_583[1] :
      local.code_583[0] == ">"
        ? local.iter_582.tape_ptr + local.code_583[1]
        : local.iter_582.tape_ptr)

    code_ptr = 2 + (
      local.code_583[0] == "["
        ? local.iter_582.tape[local.iter_582.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_582.code_ptr)] : local.iter_582.code_ptr :
      local.code_583[0] == "]"
        ? local.iter_582.tape[local.iter_582.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_582.code_ptr)] : local.iter_582.code_ptr
        : local.iter_582.code_ptr)

    steps_taken = 1 + local.iter_582.steps_taken
  }
}

locals {
  code_584 = (try(local.iter_583.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_583.code_ptr, local.iter_583.code_ptr + 2)
    : [null])

  input_584 = (local.code_584[0] == ","
    ? substr(local.input_583, local.code_584[1], -1)
    : local.input_583)

  iter_584 = try(local.iter_583.code_ptr >= length(var.code), true) ? local.iter_583 : {
    output = (local.code_584[0] == "."
      ? "${local.iter_583.output}${join("", [for _ in range(local.code_584[1]) : jsondecode(format("\"\\u%04x\"", local.iter_583.tape[local.iter_583.tape_ptr]))])}"
      : local.iter_583.output)
    
    tape = (
      local.code_584[0] == "+"
        ? [for i, b in local.iter_583.tape : (i == local.iter_583.tape_ptr ? (b + local.code_584[1]) % 256 : b)] :
      local.code_584[0] == "-"
        ? [for i, b in local.iter_583.tape : (i == local.iter_583.tape_ptr ? (b - local.code_584[1] + 256) % 256 : b)] :
      local.code_584[0] == ","
        ? [for i, b in local.iter_583.tape : (i == local.iter_583.tape_ptr ? local.ascii_lookup[substr(local.input_584, 0, 1)] : b)]
        : local.iter_583.tape)

    tape_ptr = (
      local.code_584[0] == "<"
        ? local.iter_583.tape_ptr - local.code_584[1] :
      local.code_584[0] == ">"
        ? local.iter_583.tape_ptr + local.code_584[1]
        : local.iter_583.tape_ptr)

    code_ptr = 2 + (
      local.code_584[0] == "["
        ? local.iter_583.tape[local.iter_583.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_583.code_ptr)] : local.iter_583.code_ptr :
      local.code_584[0] == "]"
        ? local.iter_583.tape[local.iter_583.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_583.code_ptr)] : local.iter_583.code_ptr
        : local.iter_583.code_ptr)

    steps_taken = 1 + local.iter_583.steps_taken
  }
}

locals {
  code_585 = (try(local.iter_584.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_584.code_ptr, local.iter_584.code_ptr + 2)
    : [null])

  input_585 = (local.code_585[0] == ","
    ? substr(local.input_584, local.code_585[1], -1)
    : local.input_584)

  iter_585 = try(local.iter_584.code_ptr >= length(var.code), true) ? local.iter_584 : {
    output = (local.code_585[0] == "."
      ? "${local.iter_584.output}${join("", [for _ in range(local.code_585[1]) : jsondecode(format("\"\\u%04x\"", local.iter_584.tape[local.iter_584.tape_ptr]))])}"
      : local.iter_584.output)
    
    tape = (
      local.code_585[0] == "+"
        ? [for i, b in local.iter_584.tape : (i == local.iter_584.tape_ptr ? (b + local.code_585[1]) % 256 : b)] :
      local.code_585[0] == "-"
        ? [for i, b in local.iter_584.tape : (i == local.iter_584.tape_ptr ? (b - local.code_585[1] + 256) % 256 : b)] :
      local.code_585[0] == ","
        ? [for i, b in local.iter_584.tape : (i == local.iter_584.tape_ptr ? local.ascii_lookup[substr(local.input_585, 0, 1)] : b)]
        : local.iter_584.tape)

    tape_ptr = (
      local.code_585[0] == "<"
        ? local.iter_584.tape_ptr - local.code_585[1] :
      local.code_585[0] == ">"
        ? local.iter_584.tape_ptr + local.code_585[1]
        : local.iter_584.tape_ptr)

    code_ptr = 2 + (
      local.code_585[0] == "["
        ? local.iter_584.tape[local.iter_584.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_584.code_ptr)] : local.iter_584.code_ptr :
      local.code_585[0] == "]"
        ? local.iter_584.tape[local.iter_584.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_584.code_ptr)] : local.iter_584.code_ptr
        : local.iter_584.code_ptr)

    steps_taken = 1 + local.iter_584.steps_taken
  }
}

locals {
  code_586 = (try(local.iter_585.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_585.code_ptr, local.iter_585.code_ptr + 2)
    : [null])

  input_586 = (local.code_586[0] == ","
    ? substr(local.input_585, local.code_586[1], -1)
    : local.input_585)

  iter_586 = try(local.iter_585.code_ptr >= length(var.code), true) ? local.iter_585 : {
    output = (local.code_586[0] == "."
      ? "${local.iter_585.output}${join("", [for _ in range(local.code_586[1]) : jsondecode(format("\"\\u%04x\"", local.iter_585.tape[local.iter_585.tape_ptr]))])}"
      : local.iter_585.output)
    
    tape = (
      local.code_586[0] == "+"
        ? [for i, b in local.iter_585.tape : (i == local.iter_585.tape_ptr ? (b + local.code_586[1]) % 256 : b)] :
      local.code_586[0] == "-"
        ? [for i, b in local.iter_585.tape : (i == local.iter_585.tape_ptr ? (b - local.code_586[1] + 256) % 256 : b)] :
      local.code_586[0] == ","
        ? [for i, b in local.iter_585.tape : (i == local.iter_585.tape_ptr ? local.ascii_lookup[substr(local.input_586, 0, 1)] : b)]
        : local.iter_585.tape)

    tape_ptr = (
      local.code_586[0] == "<"
        ? local.iter_585.tape_ptr - local.code_586[1] :
      local.code_586[0] == ">"
        ? local.iter_585.tape_ptr + local.code_586[1]
        : local.iter_585.tape_ptr)

    code_ptr = 2 + (
      local.code_586[0] == "["
        ? local.iter_585.tape[local.iter_585.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_585.code_ptr)] : local.iter_585.code_ptr :
      local.code_586[0] == "]"
        ? local.iter_585.tape[local.iter_585.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_585.code_ptr)] : local.iter_585.code_ptr
        : local.iter_585.code_ptr)

    steps_taken = 1 + local.iter_585.steps_taken
  }
}

locals {
  code_587 = (try(local.iter_586.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_586.code_ptr, local.iter_586.code_ptr + 2)
    : [null])

  input_587 = (local.code_587[0] == ","
    ? substr(local.input_586, local.code_587[1], -1)
    : local.input_586)

  iter_587 = try(local.iter_586.code_ptr >= length(var.code), true) ? local.iter_586 : {
    output = (local.code_587[0] == "."
      ? "${local.iter_586.output}${join("", [for _ in range(local.code_587[1]) : jsondecode(format("\"\\u%04x\"", local.iter_586.tape[local.iter_586.tape_ptr]))])}"
      : local.iter_586.output)
    
    tape = (
      local.code_587[0] == "+"
        ? [for i, b in local.iter_586.tape : (i == local.iter_586.tape_ptr ? (b + local.code_587[1]) % 256 : b)] :
      local.code_587[0] == "-"
        ? [for i, b in local.iter_586.tape : (i == local.iter_586.tape_ptr ? (b - local.code_587[1] + 256) % 256 : b)] :
      local.code_587[0] == ","
        ? [for i, b in local.iter_586.tape : (i == local.iter_586.tape_ptr ? local.ascii_lookup[substr(local.input_587, 0, 1)] : b)]
        : local.iter_586.tape)

    tape_ptr = (
      local.code_587[0] == "<"
        ? local.iter_586.tape_ptr - local.code_587[1] :
      local.code_587[0] == ">"
        ? local.iter_586.tape_ptr + local.code_587[1]
        : local.iter_586.tape_ptr)

    code_ptr = 2 + (
      local.code_587[0] == "["
        ? local.iter_586.tape[local.iter_586.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_586.code_ptr)] : local.iter_586.code_ptr :
      local.code_587[0] == "]"
        ? local.iter_586.tape[local.iter_586.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_586.code_ptr)] : local.iter_586.code_ptr
        : local.iter_586.code_ptr)

    steps_taken = 1 + local.iter_586.steps_taken
  }
}

locals {
  code_588 = (try(local.iter_587.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_587.code_ptr, local.iter_587.code_ptr + 2)
    : [null])

  input_588 = (local.code_588[0] == ","
    ? substr(local.input_587, local.code_588[1], -1)
    : local.input_587)

  iter_588 = try(local.iter_587.code_ptr >= length(var.code), true) ? local.iter_587 : {
    output = (local.code_588[0] == "."
      ? "${local.iter_587.output}${join("", [for _ in range(local.code_588[1]) : jsondecode(format("\"\\u%04x\"", local.iter_587.tape[local.iter_587.tape_ptr]))])}"
      : local.iter_587.output)
    
    tape = (
      local.code_588[0] == "+"
        ? [for i, b in local.iter_587.tape : (i == local.iter_587.tape_ptr ? (b + local.code_588[1]) % 256 : b)] :
      local.code_588[0] == "-"
        ? [for i, b in local.iter_587.tape : (i == local.iter_587.tape_ptr ? (b - local.code_588[1] + 256) % 256 : b)] :
      local.code_588[0] == ","
        ? [for i, b in local.iter_587.tape : (i == local.iter_587.tape_ptr ? local.ascii_lookup[substr(local.input_588, 0, 1)] : b)]
        : local.iter_587.tape)

    tape_ptr = (
      local.code_588[0] == "<"
        ? local.iter_587.tape_ptr - local.code_588[1] :
      local.code_588[0] == ">"
        ? local.iter_587.tape_ptr + local.code_588[1]
        : local.iter_587.tape_ptr)

    code_ptr = 2 + (
      local.code_588[0] == "["
        ? local.iter_587.tape[local.iter_587.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_587.code_ptr)] : local.iter_587.code_ptr :
      local.code_588[0] == "]"
        ? local.iter_587.tape[local.iter_587.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_587.code_ptr)] : local.iter_587.code_ptr
        : local.iter_587.code_ptr)

    steps_taken = 1 + local.iter_587.steps_taken
  }
}

locals {
  code_589 = (try(local.iter_588.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_588.code_ptr, local.iter_588.code_ptr + 2)
    : [null])

  input_589 = (local.code_589[0] == ","
    ? substr(local.input_588, local.code_589[1], -1)
    : local.input_588)

  iter_589 = try(local.iter_588.code_ptr >= length(var.code), true) ? local.iter_588 : {
    output = (local.code_589[0] == "."
      ? "${local.iter_588.output}${join("", [for _ in range(local.code_589[1]) : jsondecode(format("\"\\u%04x\"", local.iter_588.tape[local.iter_588.tape_ptr]))])}"
      : local.iter_588.output)
    
    tape = (
      local.code_589[0] == "+"
        ? [for i, b in local.iter_588.tape : (i == local.iter_588.tape_ptr ? (b + local.code_589[1]) % 256 : b)] :
      local.code_589[0] == "-"
        ? [for i, b in local.iter_588.tape : (i == local.iter_588.tape_ptr ? (b - local.code_589[1] + 256) % 256 : b)] :
      local.code_589[0] == ","
        ? [for i, b in local.iter_588.tape : (i == local.iter_588.tape_ptr ? local.ascii_lookup[substr(local.input_589, 0, 1)] : b)]
        : local.iter_588.tape)

    tape_ptr = (
      local.code_589[0] == "<"
        ? local.iter_588.tape_ptr - local.code_589[1] :
      local.code_589[0] == ">"
        ? local.iter_588.tape_ptr + local.code_589[1]
        : local.iter_588.tape_ptr)

    code_ptr = 2 + (
      local.code_589[0] == "["
        ? local.iter_588.tape[local.iter_588.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_588.code_ptr)] : local.iter_588.code_ptr :
      local.code_589[0] == "]"
        ? local.iter_588.tape[local.iter_588.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_588.code_ptr)] : local.iter_588.code_ptr
        : local.iter_588.code_ptr)

    steps_taken = 1 + local.iter_588.steps_taken
  }
}

locals {
  code_590 = (try(local.iter_589.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_589.code_ptr, local.iter_589.code_ptr + 2)
    : [null])

  input_590 = (local.code_590[0] == ","
    ? substr(local.input_589, local.code_590[1], -1)
    : local.input_589)

  iter_590 = try(local.iter_589.code_ptr >= length(var.code), true) ? local.iter_589 : {
    output = (local.code_590[0] == "."
      ? "${local.iter_589.output}${join("", [for _ in range(local.code_590[1]) : jsondecode(format("\"\\u%04x\"", local.iter_589.tape[local.iter_589.tape_ptr]))])}"
      : local.iter_589.output)
    
    tape = (
      local.code_590[0] == "+"
        ? [for i, b in local.iter_589.tape : (i == local.iter_589.tape_ptr ? (b + local.code_590[1]) % 256 : b)] :
      local.code_590[0] == "-"
        ? [for i, b in local.iter_589.tape : (i == local.iter_589.tape_ptr ? (b - local.code_590[1] + 256) % 256 : b)] :
      local.code_590[0] == ","
        ? [for i, b in local.iter_589.tape : (i == local.iter_589.tape_ptr ? local.ascii_lookup[substr(local.input_590, 0, 1)] : b)]
        : local.iter_589.tape)

    tape_ptr = (
      local.code_590[0] == "<"
        ? local.iter_589.tape_ptr - local.code_590[1] :
      local.code_590[0] == ">"
        ? local.iter_589.tape_ptr + local.code_590[1]
        : local.iter_589.tape_ptr)

    code_ptr = 2 + (
      local.code_590[0] == "["
        ? local.iter_589.tape[local.iter_589.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_589.code_ptr)] : local.iter_589.code_ptr :
      local.code_590[0] == "]"
        ? local.iter_589.tape[local.iter_589.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_589.code_ptr)] : local.iter_589.code_ptr
        : local.iter_589.code_ptr)

    steps_taken = 1 + local.iter_589.steps_taken
  }
}

locals {
  code_591 = (try(local.iter_590.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_590.code_ptr, local.iter_590.code_ptr + 2)
    : [null])

  input_591 = (local.code_591[0] == ","
    ? substr(local.input_590, local.code_591[1], -1)
    : local.input_590)

  iter_591 = try(local.iter_590.code_ptr >= length(var.code), true) ? local.iter_590 : {
    output = (local.code_591[0] == "."
      ? "${local.iter_590.output}${join("", [for _ in range(local.code_591[1]) : jsondecode(format("\"\\u%04x\"", local.iter_590.tape[local.iter_590.tape_ptr]))])}"
      : local.iter_590.output)
    
    tape = (
      local.code_591[0] == "+"
        ? [for i, b in local.iter_590.tape : (i == local.iter_590.tape_ptr ? (b + local.code_591[1]) % 256 : b)] :
      local.code_591[0] == "-"
        ? [for i, b in local.iter_590.tape : (i == local.iter_590.tape_ptr ? (b - local.code_591[1] + 256) % 256 : b)] :
      local.code_591[0] == ","
        ? [for i, b in local.iter_590.tape : (i == local.iter_590.tape_ptr ? local.ascii_lookup[substr(local.input_591, 0, 1)] : b)]
        : local.iter_590.tape)

    tape_ptr = (
      local.code_591[0] == "<"
        ? local.iter_590.tape_ptr - local.code_591[1] :
      local.code_591[0] == ">"
        ? local.iter_590.tape_ptr + local.code_591[1]
        : local.iter_590.tape_ptr)

    code_ptr = 2 + (
      local.code_591[0] == "["
        ? local.iter_590.tape[local.iter_590.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_590.code_ptr)] : local.iter_590.code_ptr :
      local.code_591[0] == "]"
        ? local.iter_590.tape[local.iter_590.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_590.code_ptr)] : local.iter_590.code_ptr
        : local.iter_590.code_ptr)

    steps_taken = 1 + local.iter_590.steps_taken
  }
}

locals {
  code_592 = (try(local.iter_591.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_591.code_ptr, local.iter_591.code_ptr + 2)
    : [null])

  input_592 = (local.code_592[0] == ","
    ? substr(local.input_591, local.code_592[1], -1)
    : local.input_591)

  iter_592 = try(local.iter_591.code_ptr >= length(var.code), true) ? local.iter_591 : {
    output = (local.code_592[0] == "."
      ? "${local.iter_591.output}${join("", [for _ in range(local.code_592[1]) : jsondecode(format("\"\\u%04x\"", local.iter_591.tape[local.iter_591.tape_ptr]))])}"
      : local.iter_591.output)
    
    tape = (
      local.code_592[0] == "+"
        ? [for i, b in local.iter_591.tape : (i == local.iter_591.tape_ptr ? (b + local.code_592[1]) % 256 : b)] :
      local.code_592[0] == "-"
        ? [for i, b in local.iter_591.tape : (i == local.iter_591.tape_ptr ? (b - local.code_592[1] + 256) % 256 : b)] :
      local.code_592[0] == ","
        ? [for i, b in local.iter_591.tape : (i == local.iter_591.tape_ptr ? local.ascii_lookup[substr(local.input_592, 0, 1)] : b)]
        : local.iter_591.tape)

    tape_ptr = (
      local.code_592[0] == "<"
        ? local.iter_591.tape_ptr - local.code_592[1] :
      local.code_592[0] == ">"
        ? local.iter_591.tape_ptr + local.code_592[1]
        : local.iter_591.tape_ptr)

    code_ptr = 2 + (
      local.code_592[0] == "["
        ? local.iter_591.tape[local.iter_591.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_591.code_ptr)] : local.iter_591.code_ptr :
      local.code_592[0] == "]"
        ? local.iter_591.tape[local.iter_591.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_591.code_ptr)] : local.iter_591.code_ptr
        : local.iter_591.code_ptr)

    steps_taken = 1 + local.iter_591.steps_taken
  }
}

locals {
  code_593 = (try(local.iter_592.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_592.code_ptr, local.iter_592.code_ptr + 2)
    : [null])

  input_593 = (local.code_593[0] == ","
    ? substr(local.input_592, local.code_593[1], -1)
    : local.input_592)

  iter_593 = try(local.iter_592.code_ptr >= length(var.code), true) ? local.iter_592 : {
    output = (local.code_593[0] == "."
      ? "${local.iter_592.output}${join("", [for _ in range(local.code_593[1]) : jsondecode(format("\"\\u%04x\"", local.iter_592.tape[local.iter_592.tape_ptr]))])}"
      : local.iter_592.output)
    
    tape = (
      local.code_593[0] == "+"
        ? [for i, b in local.iter_592.tape : (i == local.iter_592.tape_ptr ? (b + local.code_593[1]) % 256 : b)] :
      local.code_593[0] == "-"
        ? [for i, b in local.iter_592.tape : (i == local.iter_592.tape_ptr ? (b - local.code_593[1] + 256) % 256 : b)] :
      local.code_593[0] == ","
        ? [for i, b in local.iter_592.tape : (i == local.iter_592.tape_ptr ? local.ascii_lookup[substr(local.input_593, 0, 1)] : b)]
        : local.iter_592.tape)

    tape_ptr = (
      local.code_593[0] == "<"
        ? local.iter_592.tape_ptr - local.code_593[1] :
      local.code_593[0] == ">"
        ? local.iter_592.tape_ptr + local.code_593[1]
        : local.iter_592.tape_ptr)

    code_ptr = 2 + (
      local.code_593[0] == "["
        ? local.iter_592.tape[local.iter_592.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_592.code_ptr)] : local.iter_592.code_ptr :
      local.code_593[0] == "]"
        ? local.iter_592.tape[local.iter_592.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_592.code_ptr)] : local.iter_592.code_ptr
        : local.iter_592.code_ptr)

    steps_taken = 1 + local.iter_592.steps_taken
  }
}

locals {
  code_594 = (try(local.iter_593.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_593.code_ptr, local.iter_593.code_ptr + 2)
    : [null])

  input_594 = (local.code_594[0] == ","
    ? substr(local.input_593, local.code_594[1], -1)
    : local.input_593)

  iter_594 = try(local.iter_593.code_ptr >= length(var.code), true) ? local.iter_593 : {
    output = (local.code_594[0] == "."
      ? "${local.iter_593.output}${join("", [for _ in range(local.code_594[1]) : jsondecode(format("\"\\u%04x\"", local.iter_593.tape[local.iter_593.tape_ptr]))])}"
      : local.iter_593.output)
    
    tape = (
      local.code_594[0] == "+"
        ? [for i, b in local.iter_593.tape : (i == local.iter_593.tape_ptr ? (b + local.code_594[1]) % 256 : b)] :
      local.code_594[0] == "-"
        ? [for i, b in local.iter_593.tape : (i == local.iter_593.tape_ptr ? (b - local.code_594[1] + 256) % 256 : b)] :
      local.code_594[0] == ","
        ? [for i, b in local.iter_593.tape : (i == local.iter_593.tape_ptr ? local.ascii_lookup[substr(local.input_594, 0, 1)] : b)]
        : local.iter_593.tape)

    tape_ptr = (
      local.code_594[0] == "<"
        ? local.iter_593.tape_ptr - local.code_594[1] :
      local.code_594[0] == ">"
        ? local.iter_593.tape_ptr + local.code_594[1]
        : local.iter_593.tape_ptr)

    code_ptr = 2 + (
      local.code_594[0] == "["
        ? local.iter_593.tape[local.iter_593.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_593.code_ptr)] : local.iter_593.code_ptr :
      local.code_594[0] == "]"
        ? local.iter_593.tape[local.iter_593.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_593.code_ptr)] : local.iter_593.code_ptr
        : local.iter_593.code_ptr)

    steps_taken = 1 + local.iter_593.steps_taken
  }
}

locals {
  code_595 = (try(local.iter_594.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_594.code_ptr, local.iter_594.code_ptr + 2)
    : [null])

  input_595 = (local.code_595[0] == ","
    ? substr(local.input_594, local.code_595[1], -1)
    : local.input_594)

  iter_595 = try(local.iter_594.code_ptr >= length(var.code), true) ? local.iter_594 : {
    output = (local.code_595[0] == "."
      ? "${local.iter_594.output}${join("", [for _ in range(local.code_595[1]) : jsondecode(format("\"\\u%04x\"", local.iter_594.tape[local.iter_594.tape_ptr]))])}"
      : local.iter_594.output)
    
    tape = (
      local.code_595[0] == "+"
        ? [for i, b in local.iter_594.tape : (i == local.iter_594.tape_ptr ? (b + local.code_595[1]) % 256 : b)] :
      local.code_595[0] == "-"
        ? [for i, b in local.iter_594.tape : (i == local.iter_594.tape_ptr ? (b - local.code_595[1] + 256) % 256 : b)] :
      local.code_595[0] == ","
        ? [for i, b in local.iter_594.tape : (i == local.iter_594.tape_ptr ? local.ascii_lookup[substr(local.input_595, 0, 1)] : b)]
        : local.iter_594.tape)

    tape_ptr = (
      local.code_595[0] == "<"
        ? local.iter_594.tape_ptr - local.code_595[1] :
      local.code_595[0] == ">"
        ? local.iter_594.tape_ptr + local.code_595[1]
        : local.iter_594.tape_ptr)

    code_ptr = 2 + (
      local.code_595[0] == "["
        ? local.iter_594.tape[local.iter_594.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_594.code_ptr)] : local.iter_594.code_ptr :
      local.code_595[0] == "]"
        ? local.iter_594.tape[local.iter_594.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_594.code_ptr)] : local.iter_594.code_ptr
        : local.iter_594.code_ptr)

    steps_taken = 1 + local.iter_594.steps_taken
  }
}

locals {
  code_596 = (try(local.iter_595.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_595.code_ptr, local.iter_595.code_ptr + 2)
    : [null])

  input_596 = (local.code_596[0] == ","
    ? substr(local.input_595, local.code_596[1], -1)
    : local.input_595)

  iter_596 = try(local.iter_595.code_ptr >= length(var.code), true) ? local.iter_595 : {
    output = (local.code_596[0] == "."
      ? "${local.iter_595.output}${join("", [for _ in range(local.code_596[1]) : jsondecode(format("\"\\u%04x\"", local.iter_595.tape[local.iter_595.tape_ptr]))])}"
      : local.iter_595.output)
    
    tape = (
      local.code_596[0] == "+"
        ? [for i, b in local.iter_595.tape : (i == local.iter_595.tape_ptr ? (b + local.code_596[1]) % 256 : b)] :
      local.code_596[0] == "-"
        ? [for i, b in local.iter_595.tape : (i == local.iter_595.tape_ptr ? (b - local.code_596[1] + 256) % 256 : b)] :
      local.code_596[0] == ","
        ? [for i, b in local.iter_595.tape : (i == local.iter_595.tape_ptr ? local.ascii_lookup[substr(local.input_596, 0, 1)] : b)]
        : local.iter_595.tape)

    tape_ptr = (
      local.code_596[0] == "<"
        ? local.iter_595.tape_ptr - local.code_596[1] :
      local.code_596[0] == ">"
        ? local.iter_595.tape_ptr + local.code_596[1]
        : local.iter_595.tape_ptr)

    code_ptr = 2 + (
      local.code_596[0] == "["
        ? local.iter_595.tape[local.iter_595.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_595.code_ptr)] : local.iter_595.code_ptr :
      local.code_596[0] == "]"
        ? local.iter_595.tape[local.iter_595.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_595.code_ptr)] : local.iter_595.code_ptr
        : local.iter_595.code_ptr)

    steps_taken = 1 + local.iter_595.steps_taken
  }
}

locals {
  code_597 = (try(local.iter_596.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_596.code_ptr, local.iter_596.code_ptr + 2)
    : [null])

  input_597 = (local.code_597[0] == ","
    ? substr(local.input_596, local.code_597[1], -1)
    : local.input_596)

  iter_597 = try(local.iter_596.code_ptr >= length(var.code), true) ? local.iter_596 : {
    output = (local.code_597[0] == "."
      ? "${local.iter_596.output}${join("", [for _ in range(local.code_597[1]) : jsondecode(format("\"\\u%04x\"", local.iter_596.tape[local.iter_596.tape_ptr]))])}"
      : local.iter_596.output)
    
    tape = (
      local.code_597[0] == "+"
        ? [for i, b in local.iter_596.tape : (i == local.iter_596.tape_ptr ? (b + local.code_597[1]) % 256 : b)] :
      local.code_597[0] == "-"
        ? [for i, b in local.iter_596.tape : (i == local.iter_596.tape_ptr ? (b - local.code_597[1] + 256) % 256 : b)] :
      local.code_597[0] == ","
        ? [for i, b in local.iter_596.tape : (i == local.iter_596.tape_ptr ? local.ascii_lookup[substr(local.input_597, 0, 1)] : b)]
        : local.iter_596.tape)

    tape_ptr = (
      local.code_597[0] == "<"
        ? local.iter_596.tape_ptr - local.code_597[1] :
      local.code_597[0] == ">"
        ? local.iter_596.tape_ptr + local.code_597[1]
        : local.iter_596.tape_ptr)

    code_ptr = 2 + (
      local.code_597[0] == "["
        ? local.iter_596.tape[local.iter_596.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_596.code_ptr)] : local.iter_596.code_ptr :
      local.code_597[0] == "]"
        ? local.iter_596.tape[local.iter_596.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_596.code_ptr)] : local.iter_596.code_ptr
        : local.iter_596.code_ptr)

    steps_taken = 1 + local.iter_596.steps_taken
  }
}

locals {
  code_598 = (try(local.iter_597.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_597.code_ptr, local.iter_597.code_ptr + 2)
    : [null])

  input_598 = (local.code_598[0] == ","
    ? substr(local.input_597, local.code_598[1], -1)
    : local.input_597)

  iter_598 = try(local.iter_597.code_ptr >= length(var.code), true) ? local.iter_597 : {
    output = (local.code_598[0] == "."
      ? "${local.iter_597.output}${join("", [for _ in range(local.code_598[1]) : jsondecode(format("\"\\u%04x\"", local.iter_597.tape[local.iter_597.tape_ptr]))])}"
      : local.iter_597.output)
    
    tape = (
      local.code_598[0] == "+"
        ? [for i, b in local.iter_597.tape : (i == local.iter_597.tape_ptr ? (b + local.code_598[1]) % 256 : b)] :
      local.code_598[0] == "-"
        ? [for i, b in local.iter_597.tape : (i == local.iter_597.tape_ptr ? (b - local.code_598[1] + 256) % 256 : b)] :
      local.code_598[0] == ","
        ? [for i, b in local.iter_597.tape : (i == local.iter_597.tape_ptr ? local.ascii_lookup[substr(local.input_598, 0, 1)] : b)]
        : local.iter_597.tape)

    tape_ptr = (
      local.code_598[0] == "<"
        ? local.iter_597.tape_ptr - local.code_598[1] :
      local.code_598[0] == ">"
        ? local.iter_597.tape_ptr + local.code_598[1]
        : local.iter_597.tape_ptr)

    code_ptr = 2 + (
      local.code_598[0] == "["
        ? local.iter_597.tape[local.iter_597.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_597.code_ptr)] : local.iter_597.code_ptr :
      local.code_598[0] == "]"
        ? local.iter_597.tape[local.iter_597.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_597.code_ptr)] : local.iter_597.code_ptr
        : local.iter_597.code_ptr)

    steps_taken = 1 + local.iter_597.steps_taken
  }
}

locals {
  code_599 = (try(local.iter_598.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_598.code_ptr, local.iter_598.code_ptr + 2)
    : [null])

  input_599 = (local.code_599[0] == ","
    ? substr(local.input_598, local.code_599[1], -1)
    : local.input_598)

  iter_599 = try(local.iter_598.code_ptr >= length(var.code), true) ? local.iter_598 : {
    output = (local.code_599[0] == "."
      ? "${local.iter_598.output}${join("", [for _ in range(local.code_599[1]) : jsondecode(format("\"\\u%04x\"", local.iter_598.tape[local.iter_598.tape_ptr]))])}"
      : local.iter_598.output)
    
    tape = (
      local.code_599[0] == "+"
        ? [for i, b in local.iter_598.tape : (i == local.iter_598.tape_ptr ? (b + local.code_599[1]) % 256 : b)] :
      local.code_599[0] == "-"
        ? [for i, b in local.iter_598.tape : (i == local.iter_598.tape_ptr ? (b - local.code_599[1] + 256) % 256 : b)] :
      local.code_599[0] == ","
        ? [for i, b in local.iter_598.tape : (i == local.iter_598.tape_ptr ? local.ascii_lookup[substr(local.input_599, 0, 1)] : b)]
        : local.iter_598.tape)

    tape_ptr = (
      local.code_599[0] == "<"
        ? local.iter_598.tape_ptr - local.code_599[1] :
      local.code_599[0] == ">"
        ? local.iter_598.tape_ptr + local.code_599[1]
        : local.iter_598.tape_ptr)

    code_ptr = 2 + (
      local.code_599[0] == "["
        ? local.iter_598.tape[local.iter_598.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_598.code_ptr)] : local.iter_598.code_ptr :
      local.code_599[0] == "]"
        ? local.iter_598.tape[local.iter_598.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_598.code_ptr)] : local.iter_598.code_ptr
        : local.iter_598.code_ptr)

    steps_taken = 1 + local.iter_598.steps_taken
  }
}

locals {
  code_600 = (try(local.iter_599.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_599.code_ptr, local.iter_599.code_ptr + 2)
    : [null])

  input_600 = (local.code_600[0] == ","
    ? substr(local.input_599, local.code_600[1], -1)
    : local.input_599)

  iter_600 = try(local.iter_599.code_ptr >= length(var.code), true) ? local.iter_599 : {
    output = (local.code_600[0] == "."
      ? "${local.iter_599.output}${join("", [for _ in range(local.code_600[1]) : jsondecode(format("\"\\u%04x\"", local.iter_599.tape[local.iter_599.tape_ptr]))])}"
      : local.iter_599.output)
    
    tape = (
      local.code_600[0] == "+"
        ? [for i, b in local.iter_599.tape : (i == local.iter_599.tape_ptr ? (b + local.code_600[1]) % 256 : b)] :
      local.code_600[0] == "-"
        ? [for i, b in local.iter_599.tape : (i == local.iter_599.tape_ptr ? (b - local.code_600[1] + 256) % 256 : b)] :
      local.code_600[0] == ","
        ? [for i, b in local.iter_599.tape : (i == local.iter_599.tape_ptr ? local.ascii_lookup[substr(local.input_600, 0, 1)] : b)]
        : local.iter_599.tape)

    tape_ptr = (
      local.code_600[0] == "<"
        ? local.iter_599.tape_ptr - local.code_600[1] :
      local.code_600[0] == ">"
        ? local.iter_599.tape_ptr + local.code_600[1]
        : local.iter_599.tape_ptr)

    code_ptr = 2 + (
      local.code_600[0] == "["
        ? local.iter_599.tape[local.iter_599.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_599.code_ptr)] : local.iter_599.code_ptr :
      local.code_600[0] == "]"
        ? local.iter_599.tape[local.iter_599.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_599.code_ptr)] : local.iter_599.code_ptr
        : local.iter_599.code_ptr)

    steps_taken = 1 + local.iter_599.steps_taken
  }
}

locals {
  code_601 = (try(local.iter_600.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_600.code_ptr, local.iter_600.code_ptr + 2)
    : [null])

  input_601 = (local.code_601[0] == ","
    ? substr(local.input_600, local.code_601[1], -1)
    : local.input_600)

  iter_601 = try(local.iter_600.code_ptr >= length(var.code), true) ? local.iter_600 : {
    output = (local.code_601[0] == "."
      ? "${local.iter_600.output}${join("", [for _ in range(local.code_601[1]) : jsondecode(format("\"\\u%04x\"", local.iter_600.tape[local.iter_600.tape_ptr]))])}"
      : local.iter_600.output)
    
    tape = (
      local.code_601[0] == "+"
        ? [for i, b in local.iter_600.tape : (i == local.iter_600.tape_ptr ? (b + local.code_601[1]) % 256 : b)] :
      local.code_601[0] == "-"
        ? [for i, b in local.iter_600.tape : (i == local.iter_600.tape_ptr ? (b - local.code_601[1] + 256) % 256 : b)] :
      local.code_601[0] == ","
        ? [for i, b in local.iter_600.tape : (i == local.iter_600.tape_ptr ? local.ascii_lookup[substr(local.input_601, 0, 1)] : b)]
        : local.iter_600.tape)

    tape_ptr = (
      local.code_601[0] == "<"
        ? local.iter_600.tape_ptr - local.code_601[1] :
      local.code_601[0] == ">"
        ? local.iter_600.tape_ptr + local.code_601[1]
        : local.iter_600.tape_ptr)

    code_ptr = 2 + (
      local.code_601[0] == "["
        ? local.iter_600.tape[local.iter_600.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_600.code_ptr)] : local.iter_600.code_ptr :
      local.code_601[0] == "]"
        ? local.iter_600.tape[local.iter_600.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_600.code_ptr)] : local.iter_600.code_ptr
        : local.iter_600.code_ptr)

    steps_taken = 1 + local.iter_600.steps_taken
  }
}

locals {
  code_602 = (try(local.iter_601.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_601.code_ptr, local.iter_601.code_ptr + 2)
    : [null])

  input_602 = (local.code_602[0] == ","
    ? substr(local.input_601, local.code_602[1], -1)
    : local.input_601)

  iter_602 = try(local.iter_601.code_ptr >= length(var.code), true) ? local.iter_601 : {
    output = (local.code_602[0] == "."
      ? "${local.iter_601.output}${join("", [for _ in range(local.code_602[1]) : jsondecode(format("\"\\u%04x\"", local.iter_601.tape[local.iter_601.tape_ptr]))])}"
      : local.iter_601.output)
    
    tape = (
      local.code_602[0] == "+"
        ? [for i, b in local.iter_601.tape : (i == local.iter_601.tape_ptr ? (b + local.code_602[1]) % 256 : b)] :
      local.code_602[0] == "-"
        ? [for i, b in local.iter_601.tape : (i == local.iter_601.tape_ptr ? (b - local.code_602[1] + 256) % 256 : b)] :
      local.code_602[0] == ","
        ? [for i, b in local.iter_601.tape : (i == local.iter_601.tape_ptr ? local.ascii_lookup[substr(local.input_602, 0, 1)] : b)]
        : local.iter_601.tape)

    tape_ptr = (
      local.code_602[0] == "<"
        ? local.iter_601.tape_ptr - local.code_602[1] :
      local.code_602[0] == ">"
        ? local.iter_601.tape_ptr + local.code_602[1]
        : local.iter_601.tape_ptr)

    code_ptr = 2 + (
      local.code_602[0] == "["
        ? local.iter_601.tape[local.iter_601.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_601.code_ptr)] : local.iter_601.code_ptr :
      local.code_602[0] == "]"
        ? local.iter_601.tape[local.iter_601.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_601.code_ptr)] : local.iter_601.code_ptr
        : local.iter_601.code_ptr)

    steps_taken = 1 + local.iter_601.steps_taken
  }
}

locals {
  code_603 = (try(local.iter_602.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_602.code_ptr, local.iter_602.code_ptr + 2)
    : [null])

  input_603 = (local.code_603[0] == ","
    ? substr(local.input_602, local.code_603[1], -1)
    : local.input_602)

  iter_603 = try(local.iter_602.code_ptr >= length(var.code), true) ? local.iter_602 : {
    output = (local.code_603[0] == "."
      ? "${local.iter_602.output}${join("", [for _ in range(local.code_603[1]) : jsondecode(format("\"\\u%04x\"", local.iter_602.tape[local.iter_602.tape_ptr]))])}"
      : local.iter_602.output)
    
    tape = (
      local.code_603[0] == "+"
        ? [for i, b in local.iter_602.tape : (i == local.iter_602.tape_ptr ? (b + local.code_603[1]) % 256 : b)] :
      local.code_603[0] == "-"
        ? [for i, b in local.iter_602.tape : (i == local.iter_602.tape_ptr ? (b - local.code_603[1] + 256) % 256 : b)] :
      local.code_603[0] == ","
        ? [for i, b in local.iter_602.tape : (i == local.iter_602.tape_ptr ? local.ascii_lookup[substr(local.input_603, 0, 1)] : b)]
        : local.iter_602.tape)

    tape_ptr = (
      local.code_603[0] == "<"
        ? local.iter_602.tape_ptr - local.code_603[1] :
      local.code_603[0] == ">"
        ? local.iter_602.tape_ptr + local.code_603[1]
        : local.iter_602.tape_ptr)

    code_ptr = 2 + (
      local.code_603[0] == "["
        ? local.iter_602.tape[local.iter_602.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_602.code_ptr)] : local.iter_602.code_ptr :
      local.code_603[0] == "]"
        ? local.iter_602.tape[local.iter_602.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_602.code_ptr)] : local.iter_602.code_ptr
        : local.iter_602.code_ptr)

    steps_taken = 1 + local.iter_602.steps_taken
  }
}

locals {
  code_604 = (try(local.iter_603.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_603.code_ptr, local.iter_603.code_ptr + 2)
    : [null])

  input_604 = (local.code_604[0] == ","
    ? substr(local.input_603, local.code_604[1], -1)
    : local.input_603)

  iter_604 = try(local.iter_603.code_ptr >= length(var.code), true) ? local.iter_603 : {
    output = (local.code_604[0] == "."
      ? "${local.iter_603.output}${join("", [for _ in range(local.code_604[1]) : jsondecode(format("\"\\u%04x\"", local.iter_603.tape[local.iter_603.tape_ptr]))])}"
      : local.iter_603.output)
    
    tape = (
      local.code_604[0] == "+"
        ? [for i, b in local.iter_603.tape : (i == local.iter_603.tape_ptr ? (b + local.code_604[1]) % 256 : b)] :
      local.code_604[0] == "-"
        ? [for i, b in local.iter_603.tape : (i == local.iter_603.tape_ptr ? (b - local.code_604[1] + 256) % 256 : b)] :
      local.code_604[0] == ","
        ? [for i, b in local.iter_603.tape : (i == local.iter_603.tape_ptr ? local.ascii_lookup[substr(local.input_604, 0, 1)] : b)]
        : local.iter_603.tape)

    tape_ptr = (
      local.code_604[0] == "<"
        ? local.iter_603.tape_ptr - local.code_604[1] :
      local.code_604[0] == ">"
        ? local.iter_603.tape_ptr + local.code_604[1]
        : local.iter_603.tape_ptr)

    code_ptr = 2 + (
      local.code_604[0] == "["
        ? local.iter_603.tape[local.iter_603.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_603.code_ptr)] : local.iter_603.code_ptr :
      local.code_604[0] == "]"
        ? local.iter_603.tape[local.iter_603.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_603.code_ptr)] : local.iter_603.code_ptr
        : local.iter_603.code_ptr)

    steps_taken = 1 + local.iter_603.steps_taken
  }
}

locals {
  code_605 = (try(local.iter_604.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_604.code_ptr, local.iter_604.code_ptr + 2)
    : [null])

  input_605 = (local.code_605[0] == ","
    ? substr(local.input_604, local.code_605[1], -1)
    : local.input_604)

  iter_605 = try(local.iter_604.code_ptr >= length(var.code), true) ? local.iter_604 : {
    output = (local.code_605[0] == "."
      ? "${local.iter_604.output}${join("", [for _ in range(local.code_605[1]) : jsondecode(format("\"\\u%04x\"", local.iter_604.tape[local.iter_604.tape_ptr]))])}"
      : local.iter_604.output)
    
    tape = (
      local.code_605[0] == "+"
        ? [for i, b in local.iter_604.tape : (i == local.iter_604.tape_ptr ? (b + local.code_605[1]) % 256 : b)] :
      local.code_605[0] == "-"
        ? [for i, b in local.iter_604.tape : (i == local.iter_604.tape_ptr ? (b - local.code_605[1] + 256) % 256 : b)] :
      local.code_605[0] == ","
        ? [for i, b in local.iter_604.tape : (i == local.iter_604.tape_ptr ? local.ascii_lookup[substr(local.input_605, 0, 1)] : b)]
        : local.iter_604.tape)

    tape_ptr = (
      local.code_605[0] == "<"
        ? local.iter_604.tape_ptr - local.code_605[1] :
      local.code_605[0] == ">"
        ? local.iter_604.tape_ptr + local.code_605[1]
        : local.iter_604.tape_ptr)

    code_ptr = 2 + (
      local.code_605[0] == "["
        ? local.iter_604.tape[local.iter_604.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_604.code_ptr)] : local.iter_604.code_ptr :
      local.code_605[0] == "]"
        ? local.iter_604.tape[local.iter_604.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_604.code_ptr)] : local.iter_604.code_ptr
        : local.iter_604.code_ptr)

    steps_taken = 1 + local.iter_604.steps_taken
  }
}

locals {
  code_606 = (try(local.iter_605.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_605.code_ptr, local.iter_605.code_ptr + 2)
    : [null])

  input_606 = (local.code_606[0] == ","
    ? substr(local.input_605, local.code_606[1], -1)
    : local.input_605)

  iter_606 = try(local.iter_605.code_ptr >= length(var.code), true) ? local.iter_605 : {
    output = (local.code_606[0] == "."
      ? "${local.iter_605.output}${join("", [for _ in range(local.code_606[1]) : jsondecode(format("\"\\u%04x\"", local.iter_605.tape[local.iter_605.tape_ptr]))])}"
      : local.iter_605.output)
    
    tape = (
      local.code_606[0] == "+"
        ? [for i, b in local.iter_605.tape : (i == local.iter_605.tape_ptr ? (b + local.code_606[1]) % 256 : b)] :
      local.code_606[0] == "-"
        ? [for i, b in local.iter_605.tape : (i == local.iter_605.tape_ptr ? (b - local.code_606[1] + 256) % 256 : b)] :
      local.code_606[0] == ","
        ? [for i, b in local.iter_605.tape : (i == local.iter_605.tape_ptr ? local.ascii_lookup[substr(local.input_606, 0, 1)] : b)]
        : local.iter_605.tape)

    tape_ptr = (
      local.code_606[0] == "<"
        ? local.iter_605.tape_ptr - local.code_606[1] :
      local.code_606[0] == ">"
        ? local.iter_605.tape_ptr + local.code_606[1]
        : local.iter_605.tape_ptr)

    code_ptr = 2 + (
      local.code_606[0] == "["
        ? local.iter_605.tape[local.iter_605.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_605.code_ptr)] : local.iter_605.code_ptr :
      local.code_606[0] == "]"
        ? local.iter_605.tape[local.iter_605.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_605.code_ptr)] : local.iter_605.code_ptr
        : local.iter_605.code_ptr)

    steps_taken = 1 + local.iter_605.steps_taken
  }
}

locals {
  code_607 = (try(local.iter_606.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_606.code_ptr, local.iter_606.code_ptr + 2)
    : [null])

  input_607 = (local.code_607[0] == ","
    ? substr(local.input_606, local.code_607[1], -1)
    : local.input_606)

  iter_607 = try(local.iter_606.code_ptr >= length(var.code), true) ? local.iter_606 : {
    output = (local.code_607[0] == "."
      ? "${local.iter_606.output}${join("", [for _ in range(local.code_607[1]) : jsondecode(format("\"\\u%04x\"", local.iter_606.tape[local.iter_606.tape_ptr]))])}"
      : local.iter_606.output)
    
    tape = (
      local.code_607[0] == "+"
        ? [for i, b in local.iter_606.tape : (i == local.iter_606.tape_ptr ? (b + local.code_607[1]) % 256 : b)] :
      local.code_607[0] == "-"
        ? [for i, b in local.iter_606.tape : (i == local.iter_606.tape_ptr ? (b - local.code_607[1] + 256) % 256 : b)] :
      local.code_607[0] == ","
        ? [for i, b in local.iter_606.tape : (i == local.iter_606.tape_ptr ? local.ascii_lookup[substr(local.input_607, 0, 1)] : b)]
        : local.iter_606.tape)

    tape_ptr = (
      local.code_607[0] == "<"
        ? local.iter_606.tape_ptr - local.code_607[1] :
      local.code_607[0] == ">"
        ? local.iter_606.tape_ptr + local.code_607[1]
        : local.iter_606.tape_ptr)

    code_ptr = 2 + (
      local.code_607[0] == "["
        ? local.iter_606.tape[local.iter_606.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_606.code_ptr)] : local.iter_606.code_ptr :
      local.code_607[0] == "]"
        ? local.iter_606.tape[local.iter_606.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_606.code_ptr)] : local.iter_606.code_ptr
        : local.iter_606.code_ptr)

    steps_taken = 1 + local.iter_606.steps_taken
  }
}

locals {
  code_608 = (try(local.iter_607.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_607.code_ptr, local.iter_607.code_ptr + 2)
    : [null])

  input_608 = (local.code_608[0] == ","
    ? substr(local.input_607, local.code_608[1], -1)
    : local.input_607)

  iter_608 = try(local.iter_607.code_ptr >= length(var.code), true) ? local.iter_607 : {
    output = (local.code_608[0] == "."
      ? "${local.iter_607.output}${join("", [for _ in range(local.code_608[1]) : jsondecode(format("\"\\u%04x\"", local.iter_607.tape[local.iter_607.tape_ptr]))])}"
      : local.iter_607.output)
    
    tape = (
      local.code_608[0] == "+"
        ? [for i, b in local.iter_607.tape : (i == local.iter_607.tape_ptr ? (b + local.code_608[1]) % 256 : b)] :
      local.code_608[0] == "-"
        ? [for i, b in local.iter_607.tape : (i == local.iter_607.tape_ptr ? (b - local.code_608[1] + 256) % 256 : b)] :
      local.code_608[0] == ","
        ? [for i, b in local.iter_607.tape : (i == local.iter_607.tape_ptr ? local.ascii_lookup[substr(local.input_608, 0, 1)] : b)]
        : local.iter_607.tape)

    tape_ptr = (
      local.code_608[0] == "<"
        ? local.iter_607.tape_ptr - local.code_608[1] :
      local.code_608[0] == ">"
        ? local.iter_607.tape_ptr + local.code_608[1]
        : local.iter_607.tape_ptr)

    code_ptr = 2 + (
      local.code_608[0] == "["
        ? local.iter_607.tape[local.iter_607.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_607.code_ptr)] : local.iter_607.code_ptr :
      local.code_608[0] == "]"
        ? local.iter_607.tape[local.iter_607.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_607.code_ptr)] : local.iter_607.code_ptr
        : local.iter_607.code_ptr)

    steps_taken = 1 + local.iter_607.steps_taken
  }
}

locals {
  code_609 = (try(local.iter_608.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_608.code_ptr, local.iter_608.code_ptr + 2)
    : [null])

  input_609 = (local.code_609[0] == ","
    ? substr(local.input_608, local.code_609[1], -1)
    : local.input_608)

  iter_609 = try(local.iter_608.code_ptr >= length(var.code), true) ? local.iter_608 : {
    output = (local.code_609[0] == "."
      ? "${local.iter_608.output}${join("", [for _ in range(local.code_609[1]) : jsondecode(format("\"\\u%04x\"", local.iter_608.tape[local.iter_608.tape_ptr]))])}"
      : local.iter_608.output)
    
    tape = (
      local.code_609[0] == "+"
        ? [for i, b in local.iter_608.tape : (i == local.iter_608.tape_ptr ? (b + local.code_609[1]) % 256 : b)] :
      local.code_609[0] == "-"
        ? [for i, b in local.iter_608.tape : (i == local.iter_608.tape_ptr ? (b - local.code_609[1] + 256) % 256 : b)] :
      local.code_609[0] == ","
        ? [for i, b in local.iter_608.tape : (i == local.iter_608.tape_ptr ? local.ascii_lookup[substr(local.input_609, 0, 1)] : b)]
        : local.iter_608.tape)

    tape_ptr = (
      local.code_609[0] == "<"
        ? local.iter_608.tape_ptr - local.code_609[1] :
      local.code_609[0] == ">"
        ? local.iter_608.tape_ptr + local.code_609[1]
        : local.iter_608.tape_ptr)

    code_ptr = 2 + (
      local.code_609[0] == "["
        ? local.iter_608.tape[local.iter_608.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_608.code_ptr)] : local.iter_608.code_ptr :
      local.code_609[0] == "]"
        ? local.iter_608.tape[local.iter_608.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_608.code_ptr)] : local.iter_608.code_ptr
        : local.iter_608.code_ptr)

    steps_taken = 1 + local.iter_608.steps_taken
  }
}

locals {
  code_610 = (try(local.iter_609.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_609.code_ptr, local.iter_609.code_ptr + 2)
    : [null])

  input_610 = (local.code_610[0] == ","
    ? substr(local.input_609, local.code_610[1], -1)
    : local.input_609)

  iter_610 = try(local.iter_609.code_ptr >= length(var.code), true) ? local.iter_609 : {
    output = (local.code_610[0] == "."
      ? "${local.iter_609.output}${join("", [for _ in range(local.code_610[1]) : jsondecode(format("\"\\u%04x\"", local.iter_609.tape[local.iter_609.tape_ptr]))])}"
      : local.iter_609.output)
    
    tape = (
      local.code_610[0] == "+"
        ? [for i, b in local.iter_609.tape : (i == local.iter_609.tape_ptr ? (b + local.code_610[1]) % 256 : b)] :
      local.code_610[0] == "-"
        ? [for i, b in local.iter_609.tape : (i == local.iter_609.tape_ptr ? (b - local.code_610[1] + 256) % 256 : b)] :
      local.code_610[0] == ","
        ? [for i, b in local.iter_609.tape : (i == local.iter_609.tape_ptr ? local.ascii_lookup[substr(local.input_610, 0, 1)] : b)]
        : local.iter_609.tape)

    tape_ptr = (
      local.code_610[0] == "<"
        ? local.iter_609.tape_ptr - local.code_610[1] :
      local.code_610[0] == ">"
        ? local.iter_609.tape_ptr + local.code_610[1]
        : local.iter_609.tape_ptr)

    code_ptr = 2 + (
      local.code_610[0] == "["
        ? local.iter_609.tape[local.iter_609.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_609.code_ptr)] : local.iter_609.code_ptr :
      local.code_610[0] == "]"
        ? local.iter_609.tape[local.iter_609.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_609.code_ptr)] : local.iter_609.code_ptr
        : local.iter_609.code_ptr)

    steps_taken = 1 + local.iter_609.steps_taken
  }
}

locals {
  code_611 = (try(local.iter_610.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_610.code_ptr, local.iter_610.code_ptr + 2)
    : [null])

  input_611 = (local.code_611[0] == ","
    ? substr(local.input_610, local.code_611[1], -1)
    : local.input_610)

  iter_611 = try(local.iter_610.code_ptr >= length(var.code), true) ? local.iter_610 : {
    output = (local.code_611[0] == "."
      ? "${local.iter_610.output}${join("", [for _ in range(local.code_611[1]) : jsondecode(format("\"\\u%04x\"", local.iter_610.tape[local.iter_610.tape_ptr]))])}"
      : local.iter_610.output)
    
    tape = (
      local.code_611[0] == "+"
        ? [for i, b in local.iter_610.tape : (i == local.iter_610.tape_ptr ? (b + local.code_611[1]) % 256 : b)] :
      local.code_611[0] == "-"
        ? [for i, b in local.iter_610.tape : (i == local.iter_610.tape_ptr ? (b - local.code_611[1] + 256) % 256 : b)] :
      local.code_611[0] == ","
        ? [for i, b in local.iter_610.tape : (i == local.iter_610.tape_ptr ? local.ascii_lookup[substr(local.input_611, 0, 1)] : b)]
        : local.iter_610.tape)

    tape_ptr = (
      local.code_611[0] == "<"
        ? local.iter_610.tape_ptr - local.code_611[1] :
      local.code_611[0] == ">"
        ? local.iter_610.tape_ptr + local.code_611[1]
        : local.iter_610.tape_ptr)

    code_ptr = 2 + (
      local.code_611[0] == "["
        ? local.iter_610.tape[local.iter_610.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_610.code_ptr)] : local.iter_610.code_ptr :
      local.code_611[0] == "]"
        ? local.iter_610.tape[local.iter_610.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_610.code_ptr)] : local.iter_610.code_ptr
        : local.iter_610.code_ptr)

    steps_taken = 1 + local.iter_610.steps_taken
  }
}

locals {
  code_612 = (try(local.iter_611.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_611.code_ptr, local.iter_611.code_ptr + 2)
    : [null])

  input_612 = (local.code_612[0] == ","
    ? substr(local.input_611, local.code_612[1], -1)
    : local.input_611)

  iter_612 = try(local.iter_611.code_ptr >= length(var.code), true) ? local.iter_611 : {
    output = (local.code_612[0] == "."
      ? "${local.iter_611.output}${join("", [for _ in range(local.code_612[1]) : jsondecode(format("\"\\u%04x\"", local.iter_611.tape[local.iter_611.tape_ptr]))])}"
      : local.iter_611.output)
    
    tape = (
      local.code_612[0] == "+"
        ? [for i, b in local.iter_611.tape : (i == local.iter_611.tape_ptr ? (b + local.code_612[1]) % 256 : b)] :
      local.code_612[0] == "-"
        ? [for i, b in local.iter_611.tape : (i == local.iter_611.tape_ptr ? (b - local.code_612[1] + 256) % 256 : b)] :
      local.code_612[0] == ","
        ? [for i, b in local.iter_611.tape : (i == local.iter_611.tape_ptr ? local.ascii_lookup[substr(local.input_612, 0, 1)] : b)]
        : local.iter_611.tape)

    tape_ptr = (
      local.code_612[0] == "<"
        ? local.iter_611.tape_ptr - local.code_612[1] :
      local.code_612[0] == ">"
        ? local.iter_611.tape_ptr + local.code_612[1]
        : local.iter_611.tape_ptr)

    code_ptr = 2 + (
      local.code_612[0] == "["
        ? local.iter_611.tape[local.iter_611.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_611.code_ptr)] : local.iter_611.code_ptr :
      local.code_612[0] == "]"
        ? local.iter_611.tape[local.iter_611.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_611.code_ptr)] : local.iter_611.code_ptr
        : local.iter_611.code_ptr)

    steps_taken = 1 + local.iter_611.steps_taken
  }
}

locals {
  code_613 = (try(local.iter_612.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_612.code_ptr, local.iter_612.code_ptr + 2)
    : [null])

  input_613 = (local.code_613[0] == ","
    ? substr(local.input_612, local.code_613[1], -1)
    : local.input_612)

  iter_613 = try(local.iter_612.code_ptr >= length(var.code), true) ? local.iter_612 : {
    output = (local.code_613[0] == "."
      ? "${local.iter_612.output}${join("", [for _ in range(local.code_613[1]) : jsondecode(format("\"\\u%04x\"", local.iter_612.tape[local.iter_612.tape_ptr]))])}"
      : local.iter_612.output)
    
    tape = (
      local.code_613[0] == "+"
        ? [for i, b in local.iter_612.tape : (i == local.iter_612.tape_ptr ? (b + local.code_613[1]) % 256 : b)] :
      local.code_613[0] == "-"
        ? [for i, b in local.iter_612.tape : (i == local.iter_612.tape_ptr ? (b - local.code_613[1] + 256) % 256 : b)] :
      local.code_613[0] == ","
        ? [for i, b in local.iter_612.tape : (i == local.iter_612.tape_ptr ? local.ascii_lookup[substr(local.input_613, 0, 1)] : b)]
        : local.iter_612.tape)

    tape_ptr = (
      local.code_613[0] == "<"
        ? local.iter_612.tape_ptr - local.code_613[1] :
      local.code_613[0] == ">"
        ? local.iter_612.tape_ptr + local.code_613[1]
        : local.iter_612.tape_ptr)

    code_ptr = 2 + (
      local.code_613[0] == "["
        ? local.iter_612.tape[local.iter_612.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_612.code_ptr)] : local.iter_612.code_ptr :
      local.code_613[0] == "]"
        ? local.iter_612.tape[local.iter_612.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_612.code_ptr)] : local.iter_612.code_ptr
        : local.iter_612.code_ptr)

    steps_taken = 1 + local.iter_612.steps_taken
  }
}

locals {
  code_614 = (try(local.iter_613.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_613.code_ptr, local.iter_613.code_ptr + 2)
    : [null])

  input_614 = (local.code_614[0] == ","
    ? substr(local.input_613, local.code_614[1], -1)
    : local.input_613)

  iter_614 = try(local.iter_613.code_ptr >= length(var.code), true) ? local.iter_613 : {
    output = (local.code_614[0] == "."
      ? "${local.iter_613.output}${join("", [for _ in range(local.code_614[1]) : jsondecode(format("\"\\u%04x\"", local.iter_613.tape[local.iter_613.tape_ptr]))])}"
      : local.iter_613.output)
    
    tape = (
      local.code_614[0] == "+"
        ? [for i, b in local.iter_613.tape : (i == local.iter_613.tape_ptr ? (b + local.code_614[1]) % 256 : b)] :
      local.code_614[0] == "-"
        ? [for i, b in local.iter_613.tape : (i == local.iter_613.tape_ptr ? (b - local.code_614[1] + 256) % 256 : b)] :
      local.code_614[0] == ","
        ? [for i, b in local.iter_613.tape : (i == local.iter_613.tape_ptr ? local.ascii_lookup[substr(local.input_614, 0, 1)] : b)]
        : local.iter_613.tape)

    tape_ptr = (
      local.code_614[0] == "<"
        ? local.iter_613.tape_ptr - local.code_614[1] :
      local.code_614[0] == ">"
        ? local.iter_613.tape_ptr + local.code_614[1]
        : local.iter_613.tape_ptr)

    code_ptr = 2 + (
      local.code_614[0] == "["
        ? local.iter_613.tape[local.iter_613.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_613.code_ptr)] : local.iter_613.code_ptr :
      local.code_614[0] == "]"
        ? local.iter_613.tape[local.iter_613.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_613.code_ptr)] : local.iter_613.code_ptr
        : local.iter_613.code_ptr)

    steps_taken = 1 + local.iter_613.steps_taken
  }
}

locals {
  code_615 = (try(local.iter_614.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_614.code_ptr, local.iter_614.code_ptr + 2)
    : [null])

  input_615 = (local.code_615[0] == ","
    ? substr(local.input_614, local.code_615[1], -1)
    : local.input_614)

  iter_615 = try(local.iter_614.code_ptr >= length(var.code), true) ? local.iter_614 : {
    output = (local.code_615[0] == "."
      ? "${local.iter_614.output}${join("", [for _ in range(local.code_615[1]) : jsondecode(format("\"\\u%04x\"", local.iter_614.tape[local.iter_614.tape_ptr]))])}"
      : local.iter_614.output)
    
    tape = (
      local.code_615[0] == "+"
        ? [for i, b in local.iter_614.tape : (i == local.iter_614.tape_ptr ? (b + local.code_615[1]) % 256 : b)] :
      local.code_615[0] == "-"
        ? [for i, b in local.iter_614.tape : (i == local.iter_614.tape_ptr ? (b - local.code_615[1] + 256) % 256 : b)] :
      local.code_615[0] == ","
        ? [for i, b in local.iter_614.tape : (i == local.iter_614.tape_ptr ? local.ascii_lookup[substr(local.input_615, 0, 1)] : b)]
        : local.iter_614.tape)

    tape_ptr = (
      local.code_615[0] == "<"
        ? local.iter_614.tape_ptr - local.code_615[1] :
      local.code_615[0] == ">"
        ? local.iter_614.tape_ptr + local.code_615[1]
        : local.iter_614.tape_ptr)

    code_ptr = 2 + (
      local.code_615[0] == "["
        ? local.iter_614.tape[local.iter_614.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_614.code_ptr)] : local.iter_614.code_ptr :
      local.code_615[0] == "]"
        ? local.iter_614.tape[local.iter_614.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_614.code_ptr)] : local.iter_614.code_ptr
        : local.iter_614.code_ptr)

    steps_taken = 1 + local.iter_614.steps_taken
  }
}

locals {
  code_616 = (try(local.iter_615.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_615.code_ptr, local.iter_615.code_ptr + 2)
    : [null])

  input_616 = (local.code_616[0] == ","
    ? substr(local.input_615, local.code_616[1], -1)
    : local.input_615)

  iter_616 = try(local.iter_615.code_ptr >= length(var.code), true) ? local.iter_615 : {
    output = (local.code_616[0] == "."
      ? "${local.iter_615.output}${join("", [for _ in range(local.code_616[1]) : jsondecode(format("\"\\u%04x\"", local.iter_615.tape[local.iter_615.tape_ptr]))])}"
      : local.iter_615.output)
    
    tape = (
      local.code_616[0] == "+"
        ? [for i, b in local.iter_615.tape : (i == local.iter_615.tape_ptr ? (b + local.code_616[1]) % 256 : b)] :
      local.code_616[0] == "-"
        ? [for i, b in local.iter_615.tape : (i == local.iter_615.tape_ptr ? (b - local.code_616[1] + 256) % 256 : b)] :
      local.code_616[0] == ","
        ? [for i, b in local.iter_615.tape : (i == local.iter_615.tape_ptr ? local.ascii_lookup[substr(local.input_616, 0, 1)] : b)]
        : local.iter_615.tape)

    tape_ptr = (
      local.code_616[0] == "<"
        ? local.iter_615.tape_ptr - local.code_616[1] :
      local.code_616[0] == ">"
        ? local.iter_615.tape_ptr + local.code_616[1]
        : local.iter_615.tape_ptr)

    code_ptr = 2 + (
      local.code_616[0] == "["
        ? local.iter_615.tape[local.iter_615.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_615.code_ptr)] : local.iter_615.code_ptr :
      local.code_616[0] == "]"
        ? local.iter_615.tape[local.iter_615.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_615.code_ptr)] : local.iter_615.code_ptr
        : local.iter_615.code_ptr)

    steps_taken = 1 + local.iter_615.steps_taken
  }
}

locals {
  code_617 = (try(local.iter_616.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_616.code_ptr, local.iter_616.code_ptr + 2)
    : [null])

  input_617 = (local.code_617[0] == ","
    ? substr(local.input_616, local.code_617[1], -1)
    : local.input_616)

  iter_617 = try(local.iter_616.code_ptr >= length(var.code), true) ? local.iter_616 : {
    output = (local.code_617[0] == "."
      ? "${local.iter_616.output}${join("", [for _ in range(local.code_617[1]) : jsondecode(format("\"\\u%04x\"", local.iter_616.tape[local.iter_616.tape_ptr]))])}"
      : local.iter_616.output)
    
    tape = (
      local.code_617[0] == "+"
        ? [for i, b in local.iter_616.tape : (i == local.iter_616.tape_ptr ? (b + local.code_617[1]) % 256 : b)] :
      local.code_617[0] == "-"
        ? [for i, b in local.iter_616.tape : (i == local.iter_616.tape_ptr ? (b - local.code_617[1] + 256) % 256 : b)] :
      local.code_617[0] == ","
        ? [for i, b in local.iter_616.tape : (i == local.iter_616.tape_ptr ? local.ascii_lookup[substr(local.input_617, 0, 1)] : b)]
        : local.iter_616.tape)

    tape_ptr = (
      local.code_617[0] == "<"
        ? local.iter_616.tape_ptr - local.code_617[1] :
      local.code_617[0] == ">"
        ? local.iter_616.tape_ptr + local.code_617[1]
        : local.iter_616.tape_ptr)

    code_ptr = 2 + (
      local.code_617[0] == "["
        ? local.iter_616.tape[local.iter_616.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_616.code_ptr)] : local.iter_616.code_ptr :
      local.code_617[0] == "]"
        ? local.iter_616.tape[local.iter_616.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_616.code_ptr)] : local.iter_616.code_ptr
        : local.iter_616.code_ptr)

    steps_taken = 1 + local.iter_616.steps_taken
  }
}

locals {
  code_618 = (try(local.iter_617.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_617.code_ptr, local.iter_617.code_ptr + 2)
    : [null])

  input_618 = (local.code_618[0] == ","
    ? substr(local.input_617, local.code_618[1], -1)
    : local.input_617)

  iter_618 = try(local.iter_617.code_ptr >= length(var.code), true) ? local.iter_617 : {
    output = (local.code_618[0] == "."
      ? "${local.iter_617.output}${join("", [for _ in range(local.code_618[1]) : jsondecode(format("\"\\u%04x\"", local.iter_617.tape[local.iter_617.tape_ptr]))])}"
      : local.iter_617.output)
    
    tape = (
      local.code_618[0] == "+"
        ? [for i, b in local.iter_617.tape : (i == local.iter_617.tape_ptr ? (b + local.code_618[1]) % 256 : b)] :
      local.code_618[0] == "-"
        ? [for i, b in local.iter_617.tape : (i == local.iter_617.tape_ptr ? (b - local.code_618[1] + 256) % 256 : b)] :
      local.code_618[0] == ","
        ? [for i, b in local.iter_617.tape : (i == local.iter_617.tape_ptr ? local.ascii_lookup[substr(local.input_618, 0, 1)] : b)]
        : local.iter_617.tape)

    tape_ptr = (
      local.code_618[0] == "<"
        ? local.iter_617.tape_ptr - local.code_618[1] :
      local.code_618[0] == ">"
        ? local.iter_617.tape_ptr + local.code_618[1]
        : local.iter_617.tape_ptr)

    code_ptr = 2 + (
      local.code_618[0] == "["
        ? local.iter_617.tape[local.iter_617.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_617.code_ptr)] : local.iter_617.code_ptr :
      local.code_618[0] == "]"
        ? local.iter_617.tape[local.iter_617.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_617.code_ptr)] : local.iter_617.code_ptr
        : local.iter_617.code_ptr)

    steps_taken = 1 + local.iter_617.steps_taken
  }
}

locals {
  code_619 = (try(local.iter_618.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_618.code_ptr, local.iter_618.code_ptr + 2)
    : [null])

  input_619 = (local.code_619[0] == ","
    ? substr(local.input_618, local.code_619[1], -1)
    : local.input_618)

  iter_619 = try(local.iter_618.code_ptr >= length(var.code), true) ? local.iter_618 : {
    output = (local.code_619[0] == "."
      ? "${local.iter_618.output}${join("", [for _ in range(local.code_619[1]) : jsondecode(format("\"\\u%04x\"", local.iter_618.tape[local.iter_618.tape_ptr]))])}"
      : local.iter_618.output)
    
    tape = (
      local.code_619[0] == "+"
        ? [for i, b in local.iter_618.tape : (i == local.iter_618.tape_ptr ? (b + local.code_619[1]) % 256 : b)] :
      local.code_619[0] == "-"
        ? [for i, b in local.iter_618.tape : (i == local.iter_618.tape_ptr ? (b - local.code_619[1] + 256) % 256 : b)] :
      local.code_619[0] == ","
        ? [for i, b in local.iter_618.tape : (i == local.iter_618.tape_ptr ? local.ascii_lookup[substr(local.input_619, 0, 1)] : b)]
        : local.iter_618.tape)

    tape_ptr = (
      local.code_619[0] == "<"
        ? local.iter_618.tape_ptr - local.code_619[1] :
      local.code_619[0] == ">"
        ? local.iter_618.tape_ptr + local.code_619[1]
        : local.iter_618.tape_ptr)

    code_ptr = 2 + (
      local.code_619[0] == "["
        ? local.iter_618.tape[local.iter_618.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_618.code_ptr)] : local.iter_618.code_ptr :
      local.code_619[0] == "]"
        ? local.iter_618.tape[local.iter_618.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_618.code_ptr)] : local.iter_618.code_ptr
        : local.iter_618.code_ptr)

    steps_taken = 1 + local.iter_618.steps_taken
  }
}

locals {
  code_620 = (try(local.iter_619.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_619.code_ptr, local.iter_619.code_ptr + 2)
    : [null])

  input_620 = (local.code_620[0] == ","
    ? substr(local.input_619, local.code_620[1], -1)
    : local.input_619)

  iter_620 = try(local.iter_619.code_ptr >= length(var.code), true) ? local.iter_619 : {
    output = (local.code_620[0] == "."
      ? "${local.iter_619.output}${join("", [for _ in range(local.code_620[1]) : jsondecode(format("\"\\u%04x\"", local.iter_619.tape[local.iter_619.tape_ptr]))])}"
      : local.iter_619.output)
    
    tape = (
      local.code_620[0] == "+"
        ? [for i, b in local.iter_619.tape : (i == local.iter_619.tape_ptr ? (b + local.code_620[1]) % 256 : b)] :
      local.code_620[0] == "-"
        ? [for i, b in local.iter_619.tape : (i == local.iter_619.tape_ptr ? (b - local.code_620[1] + 256) % 256 : b)] :
      local.code_620[0] == ","
        ? [for i, b in local.iter_619.tape : (i == local.iter_619.tape_ptr ? local.ascii_lookup[substr(local.input_620, 0, 1)] : b)]
        : local.iter_619.tape)

    tape_ptr = (
      local.code_620[0] == "<"
        ? local.iter_619.tape_ptr - local.code_620[1] :
      local.code_620[0] == ">"
        ? local.iter_619.tape_ptr + local.code_620[1]
        : local.iter_619.tape_ptr)

    code_ptr = 2 + (
      local.code_620[0] == "["
        ? local.iter_619.tape[local.iter_619.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_619.code_ptr)] : local.iter_619.code_ptr :
      local.code_620[0] == "]"
        ? local.iter_619.tape[local.iter_619.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_619.code_ptr)] : local.iter_619.code_ptr
        : local.iter_619.code_ptr)

    steps_taken = 1 + local.iter_619.steps_taken
  }
}

locals {
  code_621 = (try(local.iter_620.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_620.code_ptr, local.iter_620.code_ptr + 2)
    : [null])

  input_621 = (local.code_621[0] == ","
    ? substr(local.input_620, local.code_621[1], -1)
    : local.input_620)

  iter_621 = try(local.iter_620.code_ptr >= length(var.code), true) ? local.iter_620 : {
    output = (local.code_621[0] == "."
      ? "${local.iter_620.output}${join("", [for _ in range(local.code_621[1]) : jsondecode(format("\"\\u%04x\"", local.iter_620.tape[local.iter_620.tape_ptr]))])}"
      : local.iter_620.output)
    
    tape = (
      local.code_621[0] == "+"
        ? [for i, b in local.iter_620.tape : (i == local.iter_620.tape_ptr ? (b + local.code_621[1]) % 256 : b)] :
      local.code_621[0] == "-"
        ? [for i, b in local.iter_620.tape : (i == local.iter_620.tape_ptr ? (b - local.code_621[1] + 256) % 256 : b)] :
      local.code_621[0] == ","
        ? [for i, b in local.iter_620.tape : (i == local.iter_620.tape_ptr ? local.ascii_lookup[substr(local.input_621, 0, 1)] : b)]
        : local.iter_620.tape)

    tape_ptr = (
      local.code_621[0] == "<"
        ? local.iter_620.tape_ptr - local.code_621[1] :
      local.code_621[0] == ">"
        ? local.iter_620.tape_ptr + local.code_621[1]
        : local.iter_620.tape_ptr)

    code_ptr = 2 + (
      local.code_621[0] == "["
        ? local.iter_620.tape[local.iter_620.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_620.code_ptr)] : local.iter_620.code_ptr :
      local.code_621[0] == "]"
        ? local.iter_620.tape[local.iter_620.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_620.code_ptr)] : local.iter_620.code_ptr
        : local.iter_620.code_ptr)

    steps_taken = 1 + local.iter_620.steps_taken
  }
}

locals {
  code_622 = (try(local.iter_621.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_621.code_ptr, local.iter_621.code_ptr + 2)
    : [null])

  input_622 = (local.code_622[0] == ","
    ? substr(local.input_621, local.code_622[1], -1)
    : local.input_621)

  iter_622 = try(local.iter_621.code_ptr >= length(var.code), true) ? local.iter_621 : {
    output = (local.code_622[0] == "."
      ? "${local.iter_621.output}${join("", [for _ in range(local.code_622[1]) : jsondecode(format("\"\\u%04x\"", local.iter_621.tape[local.iter_621.tape_ptr]))])}"
      : local.iter_621.output)
    
    tape = (
      local.code_622[0] == "+"
        ? [for i, b in local.iter_621.tape : (i == local.iter_621.tape_ptr ? (b + local.code_622[1]) % 256 : b)] :
      local.code_622[0] == "-"
        ? [for i, b in local.iter_621.tape : (i == local.iter_621.tape_ptr ? (b - local.code_622[1] + 256) % 256 : b)] :
      local.code_622[0] == ","
        ? [for i, b in local.iter_621.tape : (i == local.iter_621.tape_ptr ? local.ascii_lookup[substr(local.input_622, 0, 1)] : b)]
        : local.iter_621.tape)

    tape_ptr = (
      local.code_622[0] == "<"
        ? local.iter_621.tape_ptr - local.code_622[1] :
      local.code_622[0] == ">"
        ? local.iter_621.tape_ptr + local.code_622[1]
        : local.iter_621.tape_ptr)

    code_ptr = 2 + (
      local.code_622[0] == "["
        ? local.iter_621.tape[local.iter_621.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_621.code_ptr)] : local.iter_621.code_ptr :
      local.code_622[0] == "]"
        ? local.iter_621.tape[local.iter_621.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_621.code_ptr)] : local.iter_621.code_ptr
        : local.iter_621.code_ptr)

    steps_taken = 1 + local.iter_621.steps_taken
  }
}

locals {
  code_623 = (try(local.iter_622.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_622.code_ptr, local.iter_622.code_ptr + 2)
    : [null])

  input_623 = (local.code_623[0] == ","
    ? substr(local.input_622, local.code_623[1], -1)
    : local.input_622)

  iter_623 = try(local.iter_622.code_ptr >= length(var.code), true) ? local.iter_622 : {
    output = (local.code_623[0] == "."
      ? "${local.iter_622.output}${join("", [for _ in range(local.code_623[1]) : jsondecode(format("\"\\u%04x\"", local.iter_622.tape[local.iter_622.tape_ptr]))])}"
      : local.iter_622.output)
    
    tape = (
      local.code_623[0] == "+"
        ? [for i, b in local.iter_622.tape : (i == local.iter_622.tape_ptr ? (b + local.code_623[1]) % 256 : b)] :
      local.code_623[0] == "-"
        ? [for i, b in local.iter_622.tape : (i == local.iter_622.tape_ptr ? (b - local.code_623[1] + 256) % 256 : b)] :
      local.code_623[0] == ","
        ? [for i, b in local.iter_622.tape : (i == local.iter_622.tape_ptr ? local.ascii_lookup[substr(local.input_623, 0, 1)] : b)]
        : local.iter_622.tape)

    tape_ptr = (
      local.code_623[0] == "<"
        ? local.iter_622.tape_ptr - local.code_623[1] :
      local.code_623[0] == ">"
        ? local.iter_622.tape_ptr + local.code_623[1]
        : local.iter_622.tape_ptr)

    code_ptr = 2 + (
      local.code_623[0] == "["
        ? local.iter_622.tape[local.iter_622.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_622.code_ptr)] : local.iter_622.code_ptr :
      local.code_623[0] == "]"
        ? local.iter_622.tape[local.iter_622.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_622.code_ptr)] : local.iter_622.code_ptr
        : local.iter_622.code_ptr)

    steps_taken = 1 + local.iter_622.steps_taken
  }
}

locals {
  code_624 = (try(local.iter_623.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_623.code_ptr, local.iter_623.code_ptr + 2)
    : [null])

  input_624 = (local.code_624[0] == ","
    ? substr(local.input_623, local.code_624[1], -1)
    : local.input_623)

  iter_624 = try(local.iter_623.code_ptr >= length(var.code), true) ? local.iter_623 : {
    output = (local.code_624[0] == "."
      ? "${local.iter_623.output}${join("", [for _ in range(local.code_624[1]) : jsondecode(format("\"\\u%04x\"", local.iter_623.tape[local.iter_623.tape_ptr]))])}"
      : local.iter_623.output)
    
    tape = (
      local.code_624[0] == "+"
        ? [for i, b in local.iter_623.tape : (i == local.iter_623.tape_ptr ? (b + local.code_624[1]) % 256 : b)] :
      local.code_624[0] == "-"
        ? [for i, b in local.iter_623.tape : (i == local.iter_623.tape_ptr ? (b - local.code_624[1] + 256) % 256 : b)] :
      local.code_624[0] == ","
        ? [for i, b in local.iter_623.tape : (i == local.iter_623.tape_ptr ? local.ascii_lookup[substr(local.input_624, 0, 1)] : b)]
        : local.iter_623.tape)

    tape_ptr = (
      local.code_624[0] == "<"
        ? local.iter_623.tape_ptr - local.code_624[1] :
      local.code_624[0] == ">"
        ? local.iter_623.tape_ptr + local.code_624[1]
        : local.iter_623.tape_ptr)

    code_ptr = 2 + (
      local.code_624[0] == "["
        ? local.iter_623.tape[local.iter_623.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_623.code_ptr)] : local.iter_623.code_ptr :
      local.code_624[0] == "]"
        ? local.iter_623.tape[local.iter_623.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_623.code_ptr)] : local.iter_623.code_ptr
        : local.iter_623.code_ptr)

    steps_taken = 1 + local.iter_623.steps_taken
  }
}

locals {
  code_625 = (try(local.iter_624.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_624.code_ptr, local.iter_624.code_ptr + 2)
    : [null])

  input_625 = (local.code_625[0] == ","
    ? substr(local.input_624, local.code_625[1], -1)
    : local.input_624)

  iter_625 = try(local.iter_624.code_ptr >= length(var.code), true) ? local.iter_624 : {
    output = (local.code_625[0] == "."
      ? "${local.iter_624.output}${join("", [for _ in range(local.code_625[1]) : jsondecode(format("\"\\u%04x\"", local.iter_624.tape[local.iter_624.tape_ptr]))])}"
      : local.iter_624.output)
    
    tape = (
      local.code_625[0] == "+"
        ? [for i, b in local.iter_624.tape : (i == local.iter_624.tape_ptr ? (b + local.code_625[1]) % 256 : b)] :
      local.code_625[0] == "-"
        ? [for i, b in local.iter_624.tape : (i == local.iter_624.tape_ptr ? (b - local.code_625[1] + 256) % 256 : b)] :
      local.code_625[0] == ","
        ? [for i, b in local.iter_624.tape : (i == local.iter_624.tape_ptr ? local.ascii_lookup[substr(local.input_625, 0, 1)] : b)]
        : local.iter_624.tape)

    tape_ptr = (
      local.code_625[0] == "<"
        ? local.iter_624.tape_ptr - local.code_625[1] :
      local.code_625[0] == ">"
        ? local.iter_624.tape_ptr + local.code_625[1]
        : local.iter_624.tape_ptr)

    code_ptr = 2 + (
      local.code_625[0] == "["
        ? local.iter_624.tape[local.iter_624.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_624.code_ptr)] : local.iter_624.code_ptr :
      local.code_625[0] == "]"
        ? local.iter_624.tape[local.iter_624.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_624.code_ptr)] : local.iter_624.code_ptr
        : local.iter_624.code_ptr)

    steps_taken = 1 + local.iter_624.steps_taken
  }
}

locals {
  code_626 = (try(local.iter_625.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_625.code_ptr, local.iter_625.code_ptr + 2)
    : [null])

  input_626 = (local.code_626[0] == ","
    ? substr(local.input_625, local.code_626[1], -1)
    : local.input_625)

  iter_626 = try(local.iter_625.code_ptr >= length(var.code), true) ? local.iter_625 : {
    output = (local.code_626[0] == "."
      ? "${local.iter_625.output}${join("", [for _ in range(local.code_626[1]) : jsondecode(format("\"\\u%04x\"", local.iter_625.tape[local.iter_625.tape_ptr]))])}"
      : local.iter_625.output)
    
    tape = (
      local.code_626[0] == "+"
        ? [for i, b in local.iter_625.tape : (i == local.iter_625.tape_ptr ? (b + local.code_626[1]) % 256 : b)] :
      local.code_626[0] == "-"
        ? [for i, b in local.iter_625.tape : (i == local.iter_625.tape_ptr ? (b - local.code_626[1] + 256) % 256 : b)] :
      local.code_626[0] == ","
        ? [for i, b in local.iter_625.tape : (i == local.iter_625.tape_ptr ? local.ascii_lookup[substr(local.input_626, 0, 1)] : b)]
        : local.iter_625.tape)

    tape_ptr = (
      local.code_626[0] == "<"
        ? local.iter_625.tape_ptr - local.code_626[1] :
      local.code_626[0] == ">"
        ? local.iter_625.tape_ptr + local.code_626[1]
        : local.iter_625.tape_ptr)

    code_ptr = 2 + (
      local.code_626[0] == "["
        ? local.iter_625.tape[local.iter_625.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_625.code_ptr)] : local.iter_625.code_ptr :
      local.code_626[0] == "]"
        ? local.iter_625.tape[local.iter_625.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_625.code_ptr)] : local.iter_625.code_ptr
        : local.iter_625.code_ptr)

    steps_taken = 1 + local.iter_625.steps_taken
  }
}

locals {
  code_627 = (try(local.iter_626.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_626.code_ptr, local.iter_626.code_ptr + 2)
    : [null])

  input_627 = (local.code_627[0] == ","
    ? substr(local.input_626, local.code_627[1], -1)
    : local.input_626)

  iter_627 = try(local.iter_626.code_ptr >= length(var.code), true) ? local.iter_626 : {
    output = (local.code_627[0] == "."
      ? "${local.iter_626.output}${join("", [for _ in range(local.code_627[1]) : jsondecode(format("\"\\u%04x\"", local.iter_626.tape[local.iter_626.tape_ptr]))])}"
      : local.iter_626.output)
    
    tape = (
      local.code_627[0] == "+"
        ? [for i, b in local.iter_626.tape : (i == local.iter_626.tape_ptr ? (b + local.code_627[1]) % 256 : b)] :
      local.code_627[0] == "-"
        ? [for i, b in local.iter_626.tape : (i == local.iter_626.tape_ptr ? (b - local.code_627[1] + 256) % 256 : b)] :
      local.code_627[0] == ","
        ? [for i, b in local.iter_626.tape : (i == local.iter_626.tape_ptr ? local.ascii_lookup[substr(local.input_627, 0, 1)] : b)]
        : local.iter_626.tape)

    tape_ptr = (
      local.code_627[0] == "<"
        ? local.iter_626.tape_ptr - local.code_627[1] :
      local.code_627[0] == ">"
        ? local.iter_626.tape_ptr + local.code_627[1]
        : local.iter_626.tape_ptr)

    code_ptr = 2 + (
      local.code_627[0] == "["
        ? local.iter_626.tape[local.iter_626.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_626.code_ptr)] : local.iter_626.code_ptr :
      local.code_627[0] == "]"
        ? local.iter_626.tape[local.iter_626.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_626.code_ptr)] : local.iter_626.code_ptr
        : local.iter_626.code_ptr)

    steps_taken = 1 + local.iter_626.steps_taken
  }
}

locals {
  code_628 = (try(local.iter_627.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_627.code_ptr, local.iter_627.code_ptr + 2)
    : [null])

  input_628 = (local.code_628[0] == ","
    ? substr(local.input_627, local.code_628[1], -1)
    : local.input_627)

  iter_628 = try(local.iter_627.code_ptr >= length(var.code), true) ? local.iter_627 : {
    output = (local.code_628[0] == "."
      ? "${local.iter_627.output}${join("", [for _ in range(local.code_628[1]) : jsondecode(format("\"\\u%04x\"", local.iter_627.tape[local.iter_627.tape_ptr]))])}"
      : local.iter_627.output)
    
    tape = (
      local.code_628[0] == "+"
        ? [for i, b in local.iter_627.tape : (i == local.iter_627.tape_ptr ? (b + local.code_628[1]) % 256 : b)] :
      local.code_628[0] == "-"
        ? [for i, b in local.iter_627.tape : (i == local.iter_627.tape_ptr ? (b - local.code_628[1] + 256) % 256 : b)] :
      local.code_628[0] == ","
        ? [for i, b in local.iter_627.tape : (i == local.iter_627.tape_ptr ? local.ascii_lookup[substr(local.input_628, 0, 1)] : b)]
        : local.iter_627.tape)

    tape_ptr = (
      local.code_628[0] == "<"
        ? local.iter_627.tape_ptr - local.code_628[1] :
      local.code_628[0] == ">"
        ? local.iter_627.tape_ptr + local.code_628[1]
        : local.iter_627.tape_ptr)

    code_ptr = 2 + (
      local.code_628[0] == "["
        ? local.iter_627.tape[local.iter_627.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_627.code_ptr)] : local.iter_627.code_ptr :
      local.code_628[0] == "]"
        ? local.iter_627.tape[local.iter_627.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_627.code_ptr)] : local.iter_627.code_ptr
        : local.iter_627.code_ptr)

    steps_taken = 1 + local.iter_627.steps_taken
  }
}

locals {
  code_629 = (try(local.iter_628.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_628.code_ptr, local.iter_628.code_ptr + 2)
    : [null])

  input_629 = (local.code_629[0] == ","
    ? substr(local.input_628, local.code_629[1], -1)
    : local.input_628)

  iter_629 = try(local.iter_628.code_ptr >= length(var.code), true) ? local.iter_628 : {
    output = (local.code_629[0] == "."
      ? "${local.iter_628.output}${join("", [for _ in range(local.code_629[1]) : jsondecode(format("\"\\u%04x\"", local.iter_628.tape[local.iter_628.tape_ptr]))])}"
      : local.iter_628.output)
    
    tape = (
      local.code_629[0] == "+"
        ? [for i, b in local.iter_628.tape : (i == local.iter_628.tape_ptr ? (b + local.code_629[1]) % 256 : b)] :
      local.code_629[0] == "-"
        ? [for i, b in local.iter_628.tape : (i == local.iter_628.tape_ptr ? (b - local.code_629[1] + 256) % 256 : b)] :
      local.code_629[0] == ","
        ? [for i, b in local.iter_628.tape : (i == local.iter_628.tape_ptr ? local.ascii_lookup[substr(local.input_629, 0, 1)] : b)]
        : local.iter_628.tape)

    tape_ptr = (
      local.code_629[0] == "<"
        ? local.iter_628.tape_ptr - local.code_629[1] :
      local.code_629[0] == ">"
        ? local.iter_628.tape_ptr + local.code_629[1]
        : local.iter_628.tape_ptr)

    code_ptr = 2 + (
      local.code_629[0] == "["
        ? local.iter_628.tape[local.iter_628.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_628.code_ptr)] : local.iter_628.code_ptr :
      local.code_629[0] == "]"
        ? local.iter_628.tape[local.iter_628.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_628.code_ptr)] : local.iter_628.code_ptr
        : local.iter_628.code_ptr)

    steps_taken = 1 + local.iter_628.steps_taken
  }
}

locals {
  code_630 = (try(local.iter_629.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_629.code_ptr, local.iter_629.code_ptr + 2)
    : [null])

  input_630 = (local.code_630[0] == ","
    ? substr(local.input_629, local.code_630[1], -1)
    : local.input_629)

  iter_630 = try(local.iter_629.code_ptr >= length(var.code), true) ? local.iter_629 : {
    output = (local.code_630[0] == "."
      ? "${local.iter_629.output}${join("", [for _ in range(local.code_630[1]) : jsondecode(format("\"\\u%04x\"", local.iter_629.tape[local.iter_629.tape_ptr]))])}"
      : local.iter_629.output)
    
    tape = (
      local.code_630[0] == "+"
        ? [for i, b in local.iter_629.tape : (i == local.iter_629.tape_ptr ? (b + local.code_630[1]) % 256 : b)] :
      local.code_630[0] == "-"
        ? [for i, b in local.iter_629.tape : (i == local.iter_629.tape_ptr ? (b - local.code_630[1] + 256) % 256 : b)] :
      local.code_630[0] == ","
        ? [for i, b in local.iter_629.tape : (i == local.iter_629.tape_ptr ? local.ascii_lookup[substr(local.input_630, 0, 1)] : b)]
        : local.iter_629.tape)

    tape_ptr = (
      local.code_630[0] == "<"
        ? local.iter_629.tape_ptr - local.code_630[1] :
      local.code_630[0] == ">"
        ? local.iter_629.tape_ptr + local.code_630[1]
        : local.iter_629.tape_ptr)

    code_ptr = 2 + (
      local.code_630[0] == "["
        ? local.iter_629.tape[local.iter_629.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_629.code_ptr)] : local.iter_629.code_ptr :
      local.code_630[0] == "]"
        ? local.iter_629.tape[local.iter_629.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_629.code_ptr)] : local.iter_629.code_ptr
        : local.iter_629.code_ptr)

    steps_taken = 1 + local.iter_629.steps_taken
  }
}

locals {
  code_631 = (try(local.iter_630.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_630.code_ptr, local.iter_630.code_ptr + 2)
    : [null])

  input_631 = (local.code_631[0] == ","
    ? substr(local.input_630, local.code_631[1], -1)
    : local.input_630)

  iter_631 = try(local.iter_630.code_ptr >= length(var.code), true) ? local.iter_630 : {
    output = (local.code_631[0] == "."
      ? "${local.iter_630.output}${join("", [for _ in range(local.code_631[1]) : jsondecode(format("\"\\u%04x\"", local.iter_630.tape[local.iter_630.tape_ptr]))])}"
      : local.iter_630.output)
    
    tape = (
      local.code_631[0] == "+"
        ? [for i, b in local.iter_630.tape : (i == local.iter_630.tape_ptr ? (b + local.code_631[1]) % 256 : b)] :
      local.code_631[0] == "-"
        ? [for i, b in local.iter_630.tape : (i == local.iter_630.tape_ptr ? (b - local.code_631[1] + 256) % 256 : b)] :
      local.code_631[0] == ","
        ? [for i, b in local.iter_630.tape : (i == local.iter_630.tape_ptr ? local.ascii_lookup[substr(local.input_631, 0, 1)] : b)]
        : local.iter_630.tape)

    tape_ptr = (
      local.code_631[0] == "<"
        ? local.iter_630.tape_ptr - local.code_631[1] :
      local.code_631[0] == ">"
        ? local.iter_630.tape_ptr + local.code_631[1]
        : local.iter_630.tape_ptr)

    code_ptr = 2 + (
      local.code_631[0] == "["
        ? local.iter_630.tape[local.iter_630.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_630.code_ptr)] : local.iter_630.code_ptr :
      local.code_631[0] == "]"
        ? local.iter_630.tape[local.iter_630.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_630.code_ptr)] : local.iter_630.code_ptr
        : local.iter_630.code_ptr)

    steps_taken = 1 + local.iter_630.steps_taken
  }
}

locals {
  code_632 = (try(local.iter_631.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_631.code_ptr, local.iter_631.code_ptr + 2)
    : [null])

  input_632 = (local.code_632[0] == ","
    ? substr(local.input_631, local.code_632[1], -1)
    : local.input_631)

  iter_632 = try(local.iter_631.code_ptr >= length(var.code), true) ? local.iter_631 : {
    output = (local.code_632[0] == "."
      ? "${local.iter_631.output}${join("", [for _ in range(local.code_632[1]) : jsondecode(format("\"\\u%04x\"", local.iter_631.tape[local.iter_631.tape_ptr]))])}"
      : local.iter_631.output)
    
    tape = (
      local.code_632[0] == "+"
        ? [for i, b in local.iter_631.tape : (i == local.iter_631.tape_ptr ? (b + local.code_632[1]) % 256 : b)] :
      local.code_632[0] == "-"
        ? [for i, b in local.iter_631.tape : (i == local.iter_631.tape_ptr ? (b - local.code_632[1] + 256) % 256 : b)] :
      local.code_632[0] == ","
        ? [for i, b in local.iter_631.tape : (i == local.iter_631.tape_ptr ? local.ascii_lookup[substr(local.input_632, 0, 1)] : b)]
        : local.iter_631.tape)

    tape_ptr = (
      local.code_632[0] == "<"
        ? local.iter_631.tape_ptr - local.code_632[1] :
      local.code_632[0] == ">"
        ? local.iter_631.tape_ptr + local.code_632[1]
        : local.iter_631.tape_ptr)

    code_ptr = 2 + (
      local.code_632[0] == "["
        ? local.iter_631.tape[local.iter_631.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_631.code_ptr)] : local.iter_631.code_ptr :
      local.code_632[0] == "]"
        ? local.iter_631.tape[local.iter_631.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_631.code_ptr)] : local.iter_631.code_ptr
        : local.iter_631.code_ptr)

    steps_taken = 1 + local.iter_631.steps_taken
  }
}

locals {
  code_633 = (try(local.iter_632.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_632.code_ptr, local.iter_632.code_ptr + 2)
    : [null])

  input_633 = (local.code_633[0] == ","
    ? substr(local.input_632, local.code_633[1], -1)
    : local.input_632)

  iter_633 = try(local.iter_632.code_ptr >= length(var.code), true) ? local.iter_632 : {
    output = (local.code_633[0] == "."
      ? "${local.iter_632.output}${join("", [for _ in range(local.code_633[1]) : jsondecode(format("\"\\u%04x\"", local.iter_632.tape[local.iter_632.tape_ptr]))])}"
      : local.iter_632.output)
    
    tape = (
      local.code_633[0] == "+"
        ? [for i, b in local.iter_632.tape : (i == local.iter_632.tape_ptr ? (b + local.code_633[1]) % 256 : b)] :
      local.code_633[0] == "-"
        ? [for i, b in local.iter_632.tape : (i == local.iter_632.tape_ptr ? (b - local.code_633[1] + 256) % 256 : b)] :
      local.code_633[0] == ","
        ? [for i, b in local.iter_632.tape : (i == local.iter_632.tape_ptr ? local.ascii_lookup[substr(local.input_633, 0, 1)] : b)]
        : local.iter_632.tape)

    tape_ptr = (
      local.code_633[0] == "<"
        ? local.iter_632.tape_ptr - local.code_633[1] :
      local.code_633[0] == ">"
        ? local.iter_632.tape_ptr + local.code_633[1]
        : local.iter_632.tape_ptr)

    code_ptr = 2 + (
      local.code_633[0] == "["
        ? local.iter_632.tape[local.iter_632.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_632.code_ptr)] : local.iter_632.code_ptr :
      local.code_633[0] == "]"
        ? local.iter_632.tape[local.iter_632.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_632.code_ptr)] : local.iter_632.code_ptr
        : local.iter_632.code_ptr)

    steps_taken = 1 + local.iter_632.steps_taken
  }
}

locals {
  code_634 = (try(local.iter_633.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_633.code_ptr, local.iter_633.code_ptr + 2)
    : [null])

  input_634 = (local.code_634[0] == ","
    ? substr(local.input_633, local.code_634[1], -1)
    : local.input_633)

  iter_634 = try(local.iter_633.code_ptr >= length(var.code), true) ? local.iter_633 : {
    output = (local.code_634[0] == "."
      ? "${local.iter_633.output}${join("", [for _ in range(local.code_634[1]) : jsondecode(format("\"\\u%04x\"", local.iter_633.tape[local.iter_633.tape_ptr]))])}"
      : local.iter_633.output)
    
    tape = (
      local.code_634[0] == "+"
        ? [for i, b in local.iter_633.tape : (i == local.iter_633.tape_ptr ? (b + local.code_634[1]) % 256 : b)] :
      local.code_634[0] == "-"
        ? [for i, b in local.iter_633.tape : (i == local.iter_633.tape_ptr ? (b - local.code_634[1] + 256) % 256 : b)] :
      local.code_634[0] == ","
        ? [for i, b in local.iter_633.tape : (i == local.iter_633.tape_ptr ? local.ascii_lookup[substr(local.input_634, 0, 1)] : b)]
        : local.iter_633.tape)

    tape_ptr = (
      local.code_634[0] == "<"
        ? local.iter_633.tape_ptr - local.code_634[1] :
      local.code_634[0] == ">"
        ? local.iter_633.tape_ptr + local.code_634[1]
        : local.iter_633.tape_ptr)

    code_ptr = 2 + (
      local.code_634[0] == "["
        ? local.iter_633.tape[local.iter_633.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_633.code_ptr)] : local.iter_633.code_ptr :
      local.code_634[0] == "]"
        ? local.iter_633.tape[local.iter_633.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_633.code_ptr)] : local.iter_633.code_ptr
        : local.iter_633.code_ptr)

    steps_taken = 1 + local.iter_633.steps_taken
  }
}

locals {
  code_635 = (try(local.iter_634.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_634.code_ptr, local.iter_634.code_ptr + 2)
    : [null])

  input_635 = (local.code_635[0] == ","
    ? substr(local.input_634, local.code_635[1], -1)
    : local.input_634)

  iter_635 = try(local.iter_634.code_ptr >= length(var.code), true) ? local.iter_634 : {
    output = (local.code_635[0] == "."
      ? "${local.iter_634.output}${join("", [for _ in range(local.code_635[1]) : jsondecode(format("\"\\u%04x\"", local.iter_634.tape[local.iter_634.tape_ptr]))])}"
      : local.iter_634.output)
    
    tape = (
      local.code_635[0] == "+"
        ? [for i, b in local.iter_634.tape : (i == local.iter_634.tape_ptr ? (b + local.code_635[1]) % 256 : b)] :
      local.code_635[0] == "-"
        ? [for i, b in local.iter_634.tape : (i == local.iter_634.tape_ptr ? (b - local.code_635[1] + 256) % 256 : b)] :
      local.code_635[0] == ","
        ? [for i, b in local.iter_634.tape : (i == local.iter_634.tape_ptr ? local.ascii_lookup[substr(local.input_635, 0, 1)] : b)]
        : local.iter_634.tape)

    tape_ptr = (
      local.code_635[0] == "<"
        ? local.iter_634.tape_ptr - local.code_635[1] :
      local.code_635[0] == ">"
        ? local.iter_634.tape_ptr + local.code_635[1]
        : local.iter_634.tape_ptr)

    code_ptr = 2 + (
      local.code_635[0] == "["
        ? local.iter_634.tape[local.iter_634.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_634.code_ptr)] : local.iter_634.code_ptr :
      local.code_635[0] == "]"
        ? local.iter_634.tape[local.iter_634.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_634.code_ptr)] : local.iter_634.code_ptr
        : local.iter_634.code_ptr)

    steps_taken = 1 + local.iter_634.steps_taken
  }
}

locals {
  code_636 = (try(local.iter_635.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_635.code_ptr, local.iter_635.code_ptr + 2)
    : [null])

  input_636 = (local.code_636[0] == ","
    ? substr(local.input_635, local.code_636[1], -1)
    : local.input_635)

  iter_636 = try(local.iter_635.code_ptr >= length(var.code), true) ? local.iter_635 : {
    output = (local.code_636[0] == "."
      ? "${local.iter_635.output}${join("", [for _ in range(local.code_636[1]) : jsondecode(format("\"\\u%04x\"", local.iter_635.tape[local.iter_635.tape_ptr]))])}"
      : local.iter_635.output)
    
    tape = (
      local.code_636[0] == "+"
        ? [for i, b in local.iter_635.tape : (i == local.iter_635.tape_ptr ? (b + local.code_636[1]) % 256 : b)] :
      local.code_636[0] == "-"
        ? [for i, b in local.iter_635.tape : (i == local.iter_635.tape_ptr ? (b - local.code_636[1] + 256) % 256 : b)] :
      local.code_636[0] == ","
        ? [for i, b in local.iter_635.tape : (i == local.iter_635.tape_ptr ? local.ascii_lookup[substr(local.input_636, 0, 1)] : b)]
        : local.iter_635.tape)

    tape_ptr = (
      local.code_636[0] == "<"
        ? local.iter_635.tape_ptr - local.code_636[1] :
      local.code_636[0] == ">"
        ? local.iter_635.tape_ptr + local.code_636[1]
        : local.iter_635.tape_ptr)

    code_ptr = 2 + (
      local.code_636[0] == "["
        ? local.iter_635.tape[local.iter_635.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_635.code_ptr)] : local.iter_635.code_ptr :
      local.code_636[0] == "]"
        ? local.iter_635.tape[local.iter_635.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_635.code_ptr)] : local.iter_635.code_ptr
        : local.iter_635.code_ptr)

    steps_taken = 1 + local.iter_635.steps_taken
  }
}

locals {
  code_637 = (try(local.iter_636.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_636.code_ptr, local.iter_636.code_ptr + 2)
    : [null])

  input_637 = (local.code_637[0] == ","
    ? substr(local.input_636, local.code_637[1], -1)
    : local.input_636)

  iter_637 = try(local.iter_636.code_ptr >= length(var.code), true) ? local.iter_636 : {
    output = (local.code_637[0] == "."
      ? "${local.iter_636.output}${join("", [for _ in range(local.code_637[1]) : jsondecode(format("\"\\u%04x\"", local.iter_636.tape[local.iter_636.tape_ptr]))])}"
      : local.iter_636.output)
    
    tape = (
      local.code_637[0] == "+"
        ? [for i, b in local.iter_636.tape : (i == local.iter_636.tape_ptr ? (b + local.code_637[1]) % 256 : b)] :
      local.code_637[0] == "-"
        ? [for i, b in local.iter_636.tape : (i == local.iter_636.tape_ptr ? (b - local.code_637[1] + 256) % 256 : b)] :
      local.code_637[0] == ","
        ? [for i, b in local.iter_636.tape : (i == local.iter_636.tape_ptr ? local.ascii_lookup[substr(local.input_637, 0, 1)] : b)]
        : local.iter_636.tape)

    tape_ptr = (
      local.code_637[0] == "<"
        ? local.iter_636.tape_ptr - local.code_637[1] :
      local.code_637[0] == ">"
        ? local.iter_636.tape_ptr + local.code_637[1]
        : local.iter_636.tape_ptr)

    code_ptr = 2 + (
      local.code_637[0] == "["
        ? local.iter_636.tape[local.iter_636.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_636.code_ptr)] : local.iter_636.code_ptr :
      local.code_637[0] == "]"
        ? local.iter_636.tape[local.iter_636.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_636.code_ptr)] : local.iter_636.code_ptr
        : local.iter_636.code_ptr)

    steps_taken = 1 + local.iter_636.steps_taken
  }
}

locals {
  code_638 = (try(local.iter_637.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_637.code_ptr, local.iter_637.code_ptr + 2)
    : [null])

  input_638 = (local.code_638[0] == ","
    ? substr(local.input_637, local.code_638[1], -1)
    : local.input_637)

  iter_638 = try(local.iter_637.code_ptr >= length(var.code), true) ? local.iter_637 : {
    output = (local.code_638[0] == "."
      ? "${local.iter_637.output}${join("", [for _ in range(local.code_638[1]) : jsondecode(format("\"\\u%04x\"", local.iter_637.tape[local.iter_637.tape_ptr]))])}"
      : local.iter_637.output)
    
    tape = (
      local.code_638[0] == "+"
        ? [for i, b in local.iter_637.tape : (i == local.iter_637.tape_ptr ? (b + local.code_638[1]) % 256 : b)] :
      local.code_638[0] == "-"
        ? [for i, b in local.iter_637.tape : (i == local.iter_637.tape_ptr ? (b - local.code_638[1] + 256) % 256 : b)] :
      local.code_638[0] == ","
        ? [for i, b in local.iter_637.tape : (i == local.iter_637.tape_ptr ? local.ascii_lookup[substr(local.input_638, 0, 1)] : b)]
        : local.iter_637.tape)

    tape_ptr = (
      local.code_638[0] == "<"
        ? local.iter_637.tape_ptr - local.code_638[1] :
      local.code_638[0] == ">"
        ? local.iter_637.tape_ptr + local.code_638[1]
        : local.iter_637.tape_ptr)

    code_ptr = 2 + (
      local.code_638[0] == "["
        ? local.iter_637.tape[local.iter_637.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_637.code_ptr)] : local.iter_637.code_ptr :
      local.code_638[0] == "]"
        ? local.iter_637.tape[local.iter_637.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_637.code_ptr)] : local.iter_637.code_ptr
        : local.iter_637.code_ptr)

    steps_taken = 1 + local.iter_637.steps_taken
  }
}

locals {
  code_639 = (try(local.iter_638.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_638.code_ptr, local.iter_638.code_ptr + 2)
    : [null])

  input_639 = (local.code_639[0] == ","
    ? substr(local.input_638, local.code_639[1], -1)
    : local.input_638)

  iter_639 = try(local.iter_638.code_ptr >= length(var.code), true) ? local.iter_638 : {
    output = (local.code_639[0] == "."
      ? "${local.iter_638.output}${join("", [for _ in range(local.code_639[1]) : jsondecode(format("\"\\u%04x\"", local.iter_638.tape[local.iter_638.tape_ptr]))])}"
      : local.iter_638.output)
    
    tape = (
      local.code_639[0] == "+"
        ? [for i, b in local.iter_638.tape : (i == local.iter_638.tape_ptr ? (b + local.code_639[1]) % 256 : b)] :
      local.code_639[0] == "-"
        ? [for i, b in local.iter_638.tape : (i == local.iter_638.tape_ptr ? (b - local.code_639[1] + 256) % 256 : b)] :
      local.code_639[0] == ","
        ? [for i, b in local.iter_638.tape : (i == local.iter_638.tape_ptr ? local.ascii_lookup[substr(local.input_639, 0, 1)] : b)]
        : local.iter_638.tape)

    tape_ptr = (
      local.code_639[0] == "<"
        ? local.iter_638.tape_ptr - local.code_639[1] :
      local.code_639[0] == ">"
        ? local.iter_638.tape_ptr + local.code_639[1]
        : local.iter_638.tape_ptr)

    code_ptr = 2 + (
      local.code_639[0] == "["
        ? local.iter_638.tape[local.iter_638.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_638.code_ptr)] : local.iter_638.code_ptr :
      local.code_639[0] == "]"
        ? local.iter_638.tape[local.iter_638.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_638.code_ptr)] : local.iter_638.code_ptr
        : local.iter_638.code_ptr)

    steps_taken = 1 + local.iter_638.steps_taken
  }
}

locals {
  code_640 = (try(local.iter_639.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_639.code_ptr, local.iter_639.code_ptr + 2)
    : [null])

  input_640 = (local.code_640[0] == ","
    ? substr(local.input_639, local.code_640[1], -1)
    : local.input_639)

  iter_640 = try(local.iter_639.code_ptr >= length(var.code), true) ? local.iter_639 : {
    output = (local.code_640[0] == "."
      ? "${local.iter_639.output}${join("", [for _ in range(local.code_640[1]) : jsondecode(format("\"\\u%04x\"", local.iter_639.tape[local.iter_639.tape_ptr]))])}"
      : local.iter_639.output)
    
    tape = (
      local.code_640[0] == "+"
        ? [for i, b in local.iter_639.tape : (i == local.iter_639.tape_ptr ? (b + local.code_640[1]) % 256 : b)] :
      local.code_640[0] == "-"
        ? [for i, b in local.iter_639.tape : (i == local.iter_639.tape_ptr ? (b - local.code_640[1] + 256) % 256 : b)] :
      local.code_640[0] == ","
        ? [for i, b in local.iter_639.tape : (i == local.iter_639.tape_ptr ? local.ascii_lookup[substr(local.input_640, 0, 1)] : b)]
        : local.iter_639.tape)

    tape_ptr = (
      local.code_640[0] == "<"
        ? local.iter_639.tape_ptr - local.code_640[1] :
      local.code_640[0] == ">"
        ? local.iter_639.tape_ptr + local.code_640[1]
        : local.iter_639.tape_ptr)

    code_ptr = 2 + (
      local.code_640[0] == "["
        ? local.iter_639.tape[local.iter_639.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_639.code_ptr)] : local.iter_639.code_ptr :
      local.code_640[0] == "]"
        ? local.iter_639.tape[local.iter_639.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_639.code_ptr)] : local.iter_639.code_ptr
        : local.iter_639.code_ptr)

    steps_taken = 1 + local.iter_639.steps_taken
  }
}

locals {
  code_641 = (try(local.iter_640.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_640.code_ptr, local.iter_640.code_ptr + 2)
    : [null])

  input_641 = (local.code_641[0] == ","
    ? substr(local.input_640, local.code_641[1], -1)
    : local.input_640)

  iter_641 = try(local.iter_640.code_ptr >= length(var.code), true) ? local.iter_640 : {
    output = (local.code_641[0] == "."
      ? "${local.iter_640.output}${join("", [for _ in range(local.code_641[1]) : jsondecode(format("\"\\u%04x\"", local.iter_640.tape[local.iter_640.tape_ptr]))])}"
      : local.iter_640.output)
    
    tape = (
      local.code_641[0] == "+"
        ? [for i, b in local.iter_640.tape : (i == local.iter_640.tape_ptr ? (b + local.code_641[1]) % 256 : b)] :
      local.code_641[0] == "-"
        ? [for i, b in local.iter_640.tape : (i == local.iter_640.tape_ptr ? (b - local.code_641[1] + 256) % 256 : b)] :
      local.code_641[0] == ","
        ? [for i, b in local.iter_640.tape : (i == local.iter_640.tape_ptr ? local.ascii_lookup[substr(local.input_641, 0, 1)] : b)]
        : local.iter_640.tape)

    tape_ptr = (
      local.code_641[0] == "<"
        ? local.iter_640.tape_ptr - local.code_641[1] :
      local.code_641[0] == ">"
        ? local.iter_640.tape_ptr + local.code_641[1]
        : local.iter_640.tape_ptr)

    code_ptr = 2 + (
      local.code_641[0] == "["
        ? local.iter_640.tape[local.iter_640.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_640.code_ptr)] : local.iter_640.code_ptr :
      local.code_641[0] == "]"
        ? local.iter_640.tape[local.iter_640.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_640.code_ptr)] : local.iter_640.code_ptr
        : local.iter_640.code_ptr)

    steps_taken = 1 + local.iter_640.steps_taken
  }
}

locals {
  code_642 = (try(local.iter_641.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_641.code_ptr, local.iter_641.code_ptr + 2)
    : [null])

  input_642 = (local.code_642[0] == ","
    ? substr(local.input_641, local.code_642[1], -1)
    : local.input_641)

  iter_642 = try(local.iter_641.code_ptr >= length(var.code), true) ? local.iter_641 : {
    output = (local.code_642[0] == "."
      ? "${local.iter_641.output}${join("", [for _ in range(local.code_642[1]) : jsondecode(format("\"\\u%04x\"", local.iter_641.tape[local.iter_641.tape_ptr]))])}"
      : local.iter_641.output)
    
    tape = (
      local.code_642[0] == "+"
        ? [for i, b in local.iter_641.tape : (i == local.iter_641.tape_ptr ? (b + local.code_642[1]) % 256 : b)] :
      local.code_642[0] == "-"
        ? [for i, b in local.iter_641.tape : (i == local.iter_641.tape_ptr ? (b - local.code_642[1] + 256) % 256 : b)] :
      local.code_642[0] == ","
        ? [for i, b in local.iter_641.tape : (i == local.iter_641.tape_ptr ? local.ascii_lookup[substr(local.input_642, 0, 1)] : b)]
        : local.iter_641.tape)

    tape_ptr = (
      local.code_642[0] == "<"
        ? local.iter_641.tape_ptr - local.code_642[1] :
      local.code_642[0] == ">"
        ? local.iter_641.tape_ptr + local.code_642[1]
        : local.iter_641.tape_ptr)

    code_ptr = 2 + (
      local.code_642[0] == "["
        ? local.iter_641.tape[local.iter_641.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_641.code_ptr)] : local.iter_641.code_ptr :
      local.code_642[0] == "]"
        ? local.iter_641.tape[local.iter_641.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_641.code_ptr)] : local.iter_641.code_ptr
        : local.iter_641.code_ptr)

    steps_taken = 1 + local.iter_641.steps_taken
  }
}

locals {
  code_643 = (try(local.iter_642.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_642.code_ptr, local.iter_642.code_ptr + 2)
    : [null])

  input_643 = (local.code_643[0] == ","
    ? substr(local.input_642, local.code_643[1], -1)
    : local.input_642)

  iter_643 = try(local.iter_642.code_ptr >= length(var.code), true) ? local.iter_642 : {
    output = (local.code_643[0] == "."
      ? "${local.iter_642.output}${join("", [for _ in range(local.code_643[1]) : jsondecode(format("\"\\u%04x\"", local.iter_642.tape[local.iter_642.tape_ptr]))])}"
      : local.iter_642.output)
    
    tape = (
      local.code_643[0] == "+"
        ? [for i, b in local.iter_642.tape : (i == local.iter_642.tape_ptr ? (b + local.code_643[1]) % 256 : b)] :
      local.code_643[0] == "-"
        ? [for i, b in local.iter_642.tape : (i == local.iter_642.tape_ptr ? (b - local.code_643[1] + 256) % 256 : b)] :
      local.code_643[0] == ","
        ? [for i, b in local.iter_642.tape : (i == local.iter_642.tape_ptr ? local.ascii_lookup[substr(local.input_643, 0, 1)] : b)]
        : local.iter_642.tape)

    tape_ptr = (
      local.code_643[0] == "<"
        ? local.iter_642.tape_ptr - local.code_643[1] :
      local.code_643[0] == ">"
        ? local.iter_642.tape_ptr + local.code_643[1]
        : local.iter_642.tape_ptr)

    code_ptr = 2 + (
      local.code_643[0] == "["
        ? local.iter_642.tape[local.iter_642.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_642.code_ptr)] : local.iter_642.code_ptr :
      local.code_643[0] == "]"
        ? local.iter_642.tape[local.iter_642.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_642.code_ptr)] : local.iter_642.code_ptr
        : local.iter_642.code_ptr)

    steps_taken = 1 + local.iter_642.steps_taken
  }
}

locals {
  code_644 = (try(local.iter_643.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_643.code_ptr, local.iter_643.code_ptr + 2)
    : [null])

  input_644 = (local.code_644[0] == ","
    ? substr(local.input_643, local.code_644[1], -1)
    : local.input_643)

  iter_644 = try(local.iter_643.code_ptr >= length(var.code), true) ? local.iter_643 : {
    output = (local.code_644[0] == "."
      ? "${local.iter_643.output}${join("", [for _ in range(local.code_644[1]) : jsondecode(format("\"\\u%04x\"", local.iter_643.tape[local.iter_643.tape_ptr]))])}"
      : local.iter_643.output)
    
    tape = (
      local.code_644[0] == "+"
        ? [for i, b in local.iter_643.tape : (i == local.iter_643.tape_ptr ? (b + local.code_644[1]) % 256 : b)] :
      local.code_644[0] == "-"
        ? [for i, b in local.iter_643.tape : (i == local.iter_643.tape_ptr ? (b - local.code_644[1] + 256) % 256 : b)] :
      local.code_644[0] == ","
        ? [for i, b in local.iter_643.tape : (i == local.iter_643.tape_ptr ? local.ascii_lookup[substr(local.input_644, 0, 1)] : b)]
        : local.iter_643.tape)

    tape_ptr = (
      local.code_644[0] == "<"
        ? local.iter_643.tape_ptr - local.code_644[1] :
      local.code_644[0] == ">"
        ? local.iter_643.tape_ptr + local.code_644[1]
        : local.iter_643.tape_ptr)

    code_ptr = 2 + (
      local.code_644[0] == "["
        ? local.iter_643.tape[local.iter_643.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_643.code_ptr)] : local.iter_643.code_ptr :
      local.code_644[0] == "]"
        ? local.iter_643.tape[local.iter_643.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_643.code_ptr)] : local.iter_643.code_ptr
        : local.iter_643.code_ptr)

    steps_taken = 1 + local.iter_643.steps_taken
  }
}

locals {
  code_645 = (try(local.iter_644.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_644.code_ptr, local.iter_644.code_ptr + 2)
    : [null])

  input_645 = (local.code_645[0] == ","
    ? substr(local.input_644, local.code_645[1], -1)
    : local.input_644)

  iter_645 = try(local.iter_644.code_ptr >= length(var.code), true) ? local.iter_644 : {
    output = (local.code_645[0] == "."
      ? "${local.iter_644.output}${join("", [for _ in range(local.code_645[1]) : jsondecode(format("\"\\u%04x\"", local.iter_644.tape[local.iter_644.tape_ptr]))])}"
      : local.iter_644.output)
    
    tape = (
      local.code_645[0] == "+"
        ? [for i, b in local.iter_644.tape : (i == local.iter_644.tape_ptr ? (b + local.code_645[1]) % 256 : b)] :
      local.code_645[0] == "-"
        ? [for i, b in local.iter_644.tape : (i == local.iter_644.tape_ptr ? (b - local.code_645[1] + 256) % 256 : b)] :
      local.code_645[0] == ","
        ? [for i, b in local.iter_644.tape : (i == local.iter_644.tape_ptr ? local.ascii_lookup[substr(local.input_645, 0, 1)] : b)]
        : local.iter_644.tape)

    tape_ptr = (
      local.code_645[0] == "<"
        ? local.iter_644.tape_ptr - local.code_645[1] :
      local.code_645[0] == ">"
        ? local.iter_644.tape_ptr + local.code_645[1]
        : local.iter_644.tape_ptr)

    code_ptr = 2 + (
      local.code_645[0] == "["
        ? local.iter_644.tape[local.iter_644.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_644.code_ptr)] : local.iter_644.code_ptr :
      local.code_645[0] == "]"
        ? local.iter_644.tape[local.iter_644.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_644.code_ptr)] : local.iter_644.code_ptr
        : local.iter_644.code_ptr)

    steps_taken = 1 + local.iter_644.steps_taken
  }
}

locals {
  code_646 = (try(local.iter_645.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_645.code_ptr, local.iter_645.code_ptr + 2)
    : [null])

  input_646 = (local.code_646[0] == ","
    ? substr(local.input_645, local.code_646[1], -1)
    : local.input_645)

  iter_646 = try(local.iter_645.code_ptr >= length(var.code), true) ? local.iter_645 : {
    output = (local.code_646[0] == "."
      ? "${local.iter_645.output}${join("", [for _ in range(local.code_646[1]) : jsondecode(format("\"\\u%04x\"", local.iter_645.tape[local.iter_645.tape_ptr]))])}"
      : local.iter_645.output)
    
    tape = (
      local.code_646[0] == "+"
        ? [for i, b in local.iter_645.tape : (i == local.iter_645.tape_ptr ? (b + local.code_646[1]) % 256 : b)] :
      local.code_646[0] == "-"
        ? [for i, b in local.iter_645.tape : (i == local.iter_645.tape_ptr ? (b - local.code_646[1] + 256) % 256 : b)] :
      local.code_646[0] == ","
        ? [for i, b in local.iter_645.tape : (i == local.iter_645.tape_ptr ? local.ascii_lookup[substr(local.input_646, 0, 1)] : b)]
        : local.iter_645.tape)

    tape_ptr = (
      local.code_646[0] == "<"
        ? local.iter_645.tape_ptr - local.code_646[1] :
      local.code_646[0] == ">"
        ? local.iter_645.tape_ptr + local.code_646[1]
        : local.iter_645.tape_ptr)

    code_ptr = 2 + (
      local.code_646[0] == "["
        ? local.iter_645.tape[local.iter_645.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_645.code_ptr)] : local.iter_645.code_ptr :
      local.code_646[0] == "]"
        ? local.iter_645.tape[local.iter_645.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_645.code_ptr)] : local.iter_645.code_ptr
        : local.iter_645.code_ptr)

    steps_taken = 1 + local.iter_645.steps_taken
  }
}

locals {
  code_647 = (try(local.iter_646.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_646.code_ptr, local.iter_646.code_ptr + 2)
    : [null])

  input_647 = (local.code_647[0] == ","
    ? substr(local.input_646, local.code_647[1], -1)
    : local.input_646)

  iter_647 = try(local.iter_646.code_ptr >= length(var.code), true) ? local.iter_646 : {
    output = (local.code_647[0] == "."
      ? "${local.iter_646.output}${join("", [for _ in range(local.code_647[1]) : jsondecode(format("\"\\u%04x\"", local.iter_646.tape[local.iter_646.tape_ptr]))])}"
      : local.iter_646.output)
    
    tape = (
      local.code_647[0] == "+"
        ? [for i, b in local.iter_646.tape : (i == local.iter_646.tape_ptr ? (b + local.code_647[1]) % 256 : b)] :
      local.code_647[0] == "-"
        ? [for i, b in local.iter_646.tape : (i == local.iter_646.tape_ptr ? (b - local.code_647[1] + 256) % 256 : b)] :
      local.code_647[0] == ","
        ? [for i, b in local.iter_646.tape : (i == local.iter_646.tape_ptr ? local.ascii_lookup[substr(local.input_647, 0, 1)] : b)]
        : local.iter_646.tape)

    tape_ptr = (
      local.code_647[0] == "<"
        ? local.iter_646.tape_ptr - local.code_647[1] :
      local.code_647[0] == ">"
        ? local.iter_646.tape_ptr + local.code_647[1]
        : local.iter_646.tape_ptr)

    code_ptr = 2 + (
      local.code_647[0] == "["
        ? local.iter_646.tape[local.iter_646.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_646.code_ptr)] : local.iter_646.code_ptr :
      local.code_647[0] == "]"
        ? local.iter_646.tape[local.iter_646.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_646.code_ptr)] : local.iter_646.code_ptr
        : local.iter_646.code_ptr)

    steps_taken = 1 + local.iter_646.steps_taken
  }
}

locals {
  code_648 = (try(local.iter_647.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_647.code_ptr, local.iter_647.code_ptr + 2)
    : [null])

  input_648 = (local.code_648[0] == ","
    ? substr(local.input_647, local.code_648[1], -1)
    : local.input_647)

  iter_648 = try(local.iter_647.code_ptr >= length(var.code), true) ? local.iter_647 : {
    output = (local.code_648[0] == "."
      ? "${local.iter_647.output}${join("", [for _ in range(local.code_648[1]) : jsondecode(format("\"\\u%04x\"", local.iter_647.tape[local.iter_647.tape_ptr]))])}"
      : local.iter_647.output)
    
    tape = (
      local.code_648[0] == "+"
        ? [for i, b in local.iter_647.tape : (i == local.iter_647.tape_ptr ? (b + local.code_648[1]) % 256 : b)] :
      local.code_648[0] == "-"
        ? [for i, b in local.iter_647.tape : (i == local.iter_647.tape_ptr ? (b - local.code_648[1] + 256) % 256 : b)] :
      local.code_648[0] == ","
        ? [for i, b in local.iter_647.tape : (i == local.iter_647.tape_ptr ? local.ascii_lookup[substr(local.input_648, 0, 1)] : b)]
        : local.iter_647.tape)

    tape_ptr = (
      local.code_648[0] == "<"
        ? local.iter_647.tape_ptr - local.code_648[1] :
      local.code_648[0] == ">"
        ? local.iter_647.tape_ptr + local.code_648[1]
        : local.iter_647.tape_ptr)

    code_ptr = 2 + (
      local.code_648[0] == "["
        ? local.iter_647.tape[local.iter_647.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_647.code_ptr)] : local.iter_647.code_ptr :
      local.code_648[0] == "]"
        ? local.iter_647.tape[local.iter_647.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_647.code_ptr)] : local.iter_647.code_ptr
        : local.iter_647.code_ptr)

    steps_taken = 1 + local.iter_647.steps_taken
  }
}

locals {
  code_649 = (try(local.iter_648.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_648.code_ptr, local.iter_648.code_ptr + 2)
    : [null])

  input_649 = (local.code_649[0] == ","
    ? substr(local.input_648, local.code_649[1], -1)
    : local.input_648)

  iter_649 = try(local.iter_648.code_ptr >= length(var.code), true) ? local.iter_648 : {
    output = (local.code_649[0] == "."
      ? "${local.iter_648.output}${join("", [for _ in range(local.code_649[1]) : jsondecode(format("\"\\u%04x\"", local.iter_648.tape[local.iter_648.tape_ptr]))])}"
      : local.iter_648.output)
    
    tape = (
      local.code_649[0] == "+"
        ? [for i, b in local.iter_648.tape : (i == local.iter_648.tape_ptr ? (b + local.code_649[1]) % 256 : b)] :
      local.code_649[0] == "-"
        ? [for i, b in local.iter_648.tape : (i == local.iter_648.tape_ptr ? (b - local.code_649[1] + 256) % 256 : b)] :
      local.code_649[0] == ","
        ? [for i, b in local.iter_648.tape : (i == local.iter_648.tape_ptr ? local.ascii_lookup[substr(local.input_649, 0, 1)] : b)]
        : local.iter_648.tape)

    tape_ptr = (
      local.code_649[0] == "<"
        ? local.iter_648.tape_ptr - local.code_649[1] :
      local.code_649[0] == ">"
        ? local.iter_648.tape_ptr + local.code_649[1]
        : local.iter_648.tape_ptr)

    code_ptr = 2 + (
      local.code_649[0] == "["
        ? local.iter_648.tape[local.iter_648.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_648.code_ptr)] : local.iter_648.code_ptr :
      local.code_649[0] == "]"
        ? local.iter_648.tape[local.iter_648.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_648.code_ptr)] : local.iter_648.code_ptr
        : local.iter_648.code_ptr)

    steps_taken = 1 + local.iter_648.steps_taken
  }
}

locals {
  code_650 = (try(local.iter_649.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_649.code_ptr, local.iter_649.code_ptr + 2)
    : [null])

  input_650 = (local.code_650[0] == ","
    ? substr(local.input_649, local.code_650[1], -1)
    : local.input_649)

  iter_650 = try(local.iter_649.code_ptr >= length(var.code), true) ? local.iter_649 : {
    output = (local.code_650[0] == "."
      ? "${local.iter_649.output}${join("", [for _ in range(local.code_650[1]) : jsondecode(format("\"\\u%04x\"", local.iter_649.tape[local.iter_649.tape_ptr]))])}"
      : local.iter_649.output)
    
    tape = (
      local.code_650[0] == "+"
        ? [for i, b in local.iter_649.tape : (i == local.iter_649.tape_ptr ? (b + local.code_650[1]) % 256 : b)] :
      local.code_650[0] == "-"
        ? [for i, b in local.iter_649.tape : (i == local.iter_649.tape_ptr ? (b - local.code_650[1] + 256) % 256 : b)] :
      local.code_650[0] == ","
        ? [for i, b in local.iter_649.tape : (i == local.iter_649.tape_ptr ? local.ascii_lookup[substr(local.input_650, 0, 1)] : b)]
        : local.iter_649.tape)

    tape_ptr = (
      local.code_650[0] == "<"
        ? local.iter_649.tape_ptr - local.code_650[1] :
      local.code_650[0] == ">"
        ? local.iter_649.tape_ptr + local.code_650[1]
        : local.iter_649.tape_ptr)

    code_ptr = 2 + (
      local.code_650[0] == "["
        ? local.iter_649.tape[local.iter_649.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_649.code_ptr)] : local.iter_649.code_ptr :
      local.code_650[0] == "]"
        ? local.iter_649.tape[local.iter_649.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_649.code_ptr)] : local.iter_649.code_ptr
        : local.iter_649.code_ptr)

    steps_taken = 1 + local.iter_649.steps_taken
  }
}

locals {
  code_651 = (try(local.iter_650.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_650.code_ptr, local.iter_650.code_ptr + 2)
    : [null])

  input_651 = (local.code_651[0] == ","
    ? substr(local.input_650, local.code_651[1], -1)
    : local.input_650)

  iter_651 = try(local.iter_650.code_ptr >= length(var.code), true) ? local.iter_650 : {
    output = (local.code_651[0] == "."
      ? "${local.iter_650.output}${join("", [for _ in range(local.code_651[1]) : jsondecode(format("\"\\u%04x\"", local.iter_650.tape[local.iter_650.tape_ptr]))])}"
      : local.iter_650.output)
    
    tape = (
      local.code_651[0] == "+"
        ? [for i, b in local.iter_650.tape : (i == local.iter_650.tape_ptr ? (b + local.code_651[1]) % 256 : b)] :
      local.code_651[0] == "-"
        ? [for i, b in local.iter_650.tape : (i == local.iter_650.tape_ptr ? (b - local.code_651[1] + 256) % 256 : b)] :
      local.code_651[0] == ","
        ? [for i, b in local.iter_650.tape : (i == local.iter_650.tape_ptr ? local.ascii_lookup[substr(local.input_651, 0, 1)] : b)]
        : local.iter_650.tape)

    tape_ptr = (
      local.code_651[0] == "<"
        ? local.iter_650.tape_ptr - local.code_651[1] :
      local.code_651[0] == ">"
        ? local.iter_650.tape_ptr + local.code_651[1]
        : local.iter_650.tape_ptr)

    code_ptr = 2 + (
      local.code_651[0] == "["
        ? local.iter_650.tape[local.iter_650.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_650.code_ptr)] : local.iter_650.code_ptr :
      local.code_651[0] == "]"
        ? local.iter_650.tape[local.iter_650.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_650.code_ptr)] : local.iter_650.code_ptr
        : local.iter_650.code_ptr)

    steps_taken = 1 + local.iter_650.steps_taken
  }
}

locals {
  code_652 = (try(local.iter_651.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_651.code_ptr, local.iter_651.code_ptr + 2)
    : [null])

  input_652 = (local.code_652[0] == ","
    ? substr(local.input_651, local.code_652[1], -1)
    : local.input_651)

  iter_652 = try(local.iter_651.code_ptr >= length(var.code), true) ? local.iter_651 : {
    output = (local.code_652[0] == "."
      ? "${local.iter_651.output}${join("", [for _ in range(local.code_652[1]) : jsondecode(format("\"\\u%04x\"", local.iter_651.tape[local.iter_651.tape_ptr]))])}"
      : local.iter_651.output)
    
    tape = (
      local.code_652[0] == "+"
        ? [for i, b in local.iter_651.tape : (i == local.iter_651.tape_ptr ? (b + local.code_652[1]) % 256 : b)] :
      local.code_652[0] == "-"
        ? [for i, b in local.iter_651.tape : (i == local.iter_651.tape_ptr ? (b - local.code_652[1] + 256) % 256 : b)] :
      local.code_652[0] == ","
        ? [for i, b in local.iter_651.tape : (i == local.iter_651.tape_ptr ? local.ascii_lookup[substr(local.input_652, 0, 1)] : b)]
        : local.iter_651.tape)

    tape_ptr = (
      local.code_652[0] == "<"
        ? local.iter_651.tape_ptr - local.code_652[1] :
      local.code_652[0] == ">"
        ? local.iter_651.tape_ptr + local.code_652[1]
        : local.iter_651.tape_ptr)

    code_ptr = 2 + (
      local.code_652[0] == "["
        ? local.iter_651.tape[local.iter_651.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_651.code_ptr)] : local.iter_651.code_ptr :
      local.code_652[0] == "]"
        ? local.iter_651.tape[local.iter_651.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_651.code_ptr)] : local.iter_651.code_ptr
        : local.iter_651.code_ptr)

    steps_taken = 1 + local.iter_651.steps_taken
  }
}

locals {
  code_653 = (try(local.iter_652.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_652.code_ptr, local.iter_652.code_ptr + 2)
    : [null])

  input_653 = (local.code_653[0] == ","
    ? substr(local.input_652, local.code_653[1], -1)
    : local.input_652)

  iter_653 = try(local.iter_652.code_ptr >= length(var.code), true) ? local.iter_652 : {
    output = (local.code_653[0] == "."
      ? "${local.iter_652.output}${join("", [for _ in range(local.code_653[1]) : jsondecode(format("\"\\u%04x\"", local.iter_652.tape[local.iter_652.tape_ptr]))])}"
      : local.iter_652.output)
    
    tape = (
      local.code_653[0] == "+"
        ? [for i, b in local.iter_652.tape : (i == local.iter_652.tape_ptr ? (b + local.code_653[1]) % 256 : b)] :
      local.code_653[0] == "-"
        ? [for i, b in local.iter_652.tape : (i == local.iter_652.tape_ptr ? (b - local.code_653[1] + 256) % 256 : b)] :
      local.code_653[0] == ","
        ? [for i, b in local.iter_652.tape : (i == local.iter_652.tape_ptr ? local.ascii_lookup[substr(local.input_653, 0, 1)] : b)]
        : local.iter_652.tape)

    tape_ptr = (
      local.code_653[0] == "<"
        ? local.iter_652.tape_ptr - local.code_653[1] :
      local.code_653[0] == ">"
        ? local.iter_652.tape_ptr + local.code_653[1]
        : local.iter_652.tape_ptr)

    code_ptr = 2 + (
      local.code_653[0] == "["
        ? local.iter_652.tape[local.iter_652.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_652.code_ptr)] : local.iter_652.code_ptr :
      local.code_653[0] == "]"
        ? local.iter_652.tape[local.iter_652.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_652.code_ptr)] : local.iter_652.code_ptr
        : local.iter_652.code_ptr)

    steps_taken = 1 + local.iter_652.steps_taken
  }
}

locals {
  code_654 = (try(local.iter_653.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_653.code_ptr, local.iter_653.code_ptr + 2)
    : [null])

  input_654 = (local.code_654[0] == ","
    ? substr(local.input_653, local.code_654[1], -1)
    : local.input_653)

  iter_654 = try(local.iter_653.code_ptr >= length(var.code), true) ? local.iter_653 : {
    output = (local.code_654[0] == "."
      ? "${local.iter_653.output}${join("", [for _ in range(local.code_654[1]) : jsondecode(format("\"\\u%04x\"", local.iter_653.tape[local.iter_653.tape_ptr]))])}"
      : local.iter_653.output)
    
    tape = (
      local.code_654[0] == "+"
        ? [for i, b in local.iter_653.tape : (i == local.iter_653.tape_ptr ? (b + local.code_654[1]) % 256 : b)] :
      local.code_654[0] == "-"
        ? [for i, b in local.iter_653.tape : (i == local.iter_653.tape_ptr ? (b - local.code_654[1] + 256) % 256 : b)] :
      local.code_654[0] == ","
        ? [for i, b in local.iter_653.tape : (i == local.iter_653.tape_ptr ? local.ascii_lookup[substr(local.input_654, 0, 1)] : b)]
        : local.iter_653.tape)

    tape_ptr = (
      local.code_654[0] == "<"
        ? local.iter_653.tape_ptr - local.code_654[1] :
      local.code_654[0] == ">"
        ? local.iter_653.tape_ptr + local.code_654[1]
        : local.iter_653.tape_ptr)

    code_ptr = 2 + (
      local.code_654[0] == "["
        ? local.iter_653.tape[local.iter_653.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_653.code_ptr)] : local.iter_653.code_ptr :
      local.code_654[0] == "]"
        ? local.iter_653.tape[local.iter_653.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_653.code_ptr)] : local.iter_653.code_ptr
        : local.iter_653.code_ptr)

    steps_taken = 1 + local.iter_653.steps_taken
  }
}

locals {
  code_655 = (try(local.iter_654.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_654.code_ptr, local.iter_654.code_ptr + 2)
    : [null])

  input_655 = (local.code_655[0] == ","
    ? substr(local.input_654, local.code_655[1], -1)
    : local.input_654)

  iter_655 = try(local.iter_654.code_ptr >= length(var.code), true) ? local.iter_654 : {
    output = (local.code_655[0] == "."
      ? "${local.iter_654.output}${join("", [for _ in range(local.code_655[1]) : jsondecode(format("\"\\u%04x\"", local.iter_654.tape[local.iter_654.tape_ptr]))])}"
      : local.iter_654.output)
    
    tape = (
      local.code_655[0] == "+"
        ? [for i, b in local.iter_654.tape : (i == local.iter_654.tape_ptr ? (b + local.code_655[1]) % 256 : b)] :
      local.code_655[0] == "-"
        ? [for i, b in local.iter_654.tape : (i == local.iter_654.tape_ptr ? (b - local.code_655[1] + 256) % 256 : b)] :
      local.code_655[0] == ","
        ? [for i, b in local.iter_654.tape : (i == local.iter_654.tape_ptr ? local.ascii_lookup[substr(local.input_655, 0, 1)] : b)]
        : local.iter_654.tape)

    tape_ptr = (
      local.code_655[0] == "<"
        ? local.iter_654.tape_ptr - local.code_655[1] :
      local.code_655[0] == ">"
        ? local.iter_654.tape_ptr + local.code_655[1]
        : local.iter_654.tape_ptr)

    code_ptr = 2 + (
      local.code_655[0] == "["
        ? local.iter_654.tape[local.iter_654.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_654.code_ptr)] : local.iter_654.code_ptr :
      local.code_655[0] == "]"
        ? local.iter_654.tape[local.iter_654.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_654.code_ptr)] : local.iter_654.code_ptr
        : local.iter_654.code_ptr)

    steps_taken = 1 + local.iter_654.steps_taken
  }
}

locals {
  code_656 = (try(local.iter_655.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_655.code_ptr, local.iter_655.code_ptr + 2)
    : [null])

  input_656 = (local.code_656[0] == ","
    ? substr(local.input_655, local.code_656[1], -1)
    : local.input_655)

  iter_656 = try(local.iter_655.code_ptr >= length(var.code), true) ? local.iter_655 : {
    output = (local.code_656[0] == "."
      ? "${local.iter_655.output}${join("", [for _ in range(local.code_656[1]) : jsondecode(format("\"\\u%04x\"", local.iter_655.tape[local.iter_655.tape_ptr]))])}"
      : local.iter_655.output)
    
    tape = (
      local.code_656[0] == "+"
        ? [for i, b in local.iter_655.tape : (i == local.iter_655.tape_ptr ? (b + local.code_656[1]) % 256 : b)] :
      local.code_656[0] == "-"
        ? [for i, b in local.iter_655.tape : (i == local.iter_655.tape_ptr ? (b - local.code_656[1] + 256) % 256 : b)] :
      local.code_656[0] == ","
        ? [for i, b in local.iter_655.tape : (i == local.iter_655.tape_ptr ? local.ascii_lookup[substr(local.input_656, 0, 1)] : b)]
        : local.iter_655.tape)

    tape_ptr = (
      local.code_656[0] == "<"
        ? local.iter_655.tape_ptr - local.code_656[1] :
      local.code_656[0] == ">"
        ? local.iter_655.tape_ptr + local.code_656[1]
        : local.iter_655.tape_ptr)

    code_ptr = 2 + (
      local.code_656[0] == "["
        ? local.iter_655.tape[local.iter_655.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_655.code_ptr)] : local.iter_655.code_ptr :
      local.code_656[0] == "]"
        ? local.iter_655.tape[local.iter_655.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_655.code_ptr)] : local.iter_655.code_ptr
        : local.iter_655.code_ptr)

    steps_taken = 1 + local.iter_655.steps_taken
  }
}

locals {
  code_657 = (try(local.iter_656.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_656.code_ptr, local.iter_656.code_ptr + 2)
    : [null])

  input_657 = (local.code_657[0] == ","
    ? substr(local.input_656, local.code_657[1], -1)
    : local.input_656)

  iter_657 = try(local.iter_656.code_ptr >= length(var.code), true) ? local.iter_656 : {
    output = (local.code_657[0] == "."
      ? "${local.iter_656.output}${join("", [for _ in range(local.code_657[1]) : jsondecode(format("\"\\u%04x\"", local.iter_656.tape[local.iter_656.tape_ptr]))])}"
      : local.iter_656.output)
    
    tape = (
      local.code_657[0] == "+"
        ? [for i, b in local.iter_656.tape : (i == local.iter_656.tape_ptr ? (b + local.code_657[1]) % 256 : b)] :
      local.code_657[0] == "-"
        ? [for i, b in local.iter_656.tape : (i == local.iter_656.tape_ptr ? (b - local.code_657[1] + 256) % 256 : b)] :
      local.code_657[0] == ","
        ? [for i, b in local.iter_656.tape : (i == local.iter_656.tape_ptr ? local.ascii_lookup[substr(local.input_657, 0, 1)] : b)]
        : local.iter_656.tape)

    tape_ptr = (
      local.code_657[0] == "<"
        ? local.iter_656.tape_ptr - local.code_657[1] :
      local.code_657[0] == ">"
        ? local.iter_656.tape_ptr + local.code_657[1]
        : local.iter_656.tape_ptr)

    code_ptr = 2 + (
      local.code_657[0] == "["
        ? local.iter_656.tape[local.iter_656.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_656.code_ptr)] : local.iter_656.code_ptr :
      local.code_657[0] == "]"
        ? local.iter_656.tape[local.iter_656.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_656.code_ptr)] : local.iter_656.code_ptr
        : local.iter_656.code_ptr)

    steps_taken = 1 + local.iter_656.steps_taken
  }
}

locals {
  code_658 = (try(local.iter_657.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_657.code_ptr, local.iter_657.code_ptr + 2)
    : [null])

  input_658 = (local.code_658[0] == ","
    ? substr(local.input_657, local.code_658[1], -1)
    : local.input_657)

  iter_658 = try(local.iter_657.code_ptr >= length(var.code), true) ? local.iter_657 : {
    output = (local.code_658[0] == "."
      ? "${local.iter_657.output}${join("", [for _ in range(local.code_658[1]) : jsondecode(format("\"\\u%04x\"", local.iter_657.tape[local.iter_657.tape_ptr]))])}"
      : local.iter_657.output)
    
    tape = (
      local.code_658[0] == "+"
        ? [for i, b in local.iter_657.tape : (i == local.iter_657.tape_ptr ? (b + local.code_658[1]) % 256 : b)] :
      local.code_658[0] == "-"
        ? [for i, b in local.iter_657.tape : (i == local.iter_657.tape_ptr ? (b - local.code_658[1] + 256) % 256 : b)] :
      local.code_658[0] == ","
        ? [for i, b in local.iter_657.tape : (i == local.iter_657.tape_ptr ? local.ascii_lookup[substr(local.input_658, 0, 1)] : b)]
        : local.iter_657.tape)

    tape_ptr = (
      local.code_658[0] == "<"
        ? local.iter_657.tape_ptr - local.code_658[1] :
      local.code_658[0] == ">"
        ? local.iter_657.tape_ptr + local.code_658[1]
        : local.iter_657.tape_ptr)

    code_ptr = 2 + (
      local.code_658[0] == "["
        ? local.iter_657.tape[local.iter_657.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_657.code_ptr)] : local.iter_657.code_ptr :
      local.code_658[0] == "]"
        ? local.iter_657.tape[local.iter_657.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_657.code_ptr)] : local.iter_657.code_ptr
        : local.iter_657.code_ptr)

    steps_taken = 1 + local.iter_657.steps_taken
  }
}

locals {
  code_659 = (try(local.iter_658.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_658.code_ptr, local.iter_658.code_ptr + 2)
    : [null])

  input_659 = (local.code_659[0] == ","
    ? substr(local.input_658, local.code_659[1], -1)
    : local.input_658)

  iter_659 = try(local.iter_658.code_ptr >= length(var.code), true) ? local.iter_658 : {
    output = (local.code_659[0] == "."
      ? "${local.iter_658.output}${join("", [for _ in range(local.code_659[1]) : jsondecode(format("\"\\u%04x\"", local.iter_658.tape[local.iter_658.tape_ptr]))])}"
      : local.iter_658.output)
    
    tape = (
      local.code_659[0] == "+"
        ? [for i, b in local.iter_658.tape : (i == local.iter_658.tape_ptr ? (b + local.code_659[1]) % 256 : b)] :
      local.code_659[0] == "-"
        ? [for i, b in local.iter_658.tape : (i == local.iter_658.tape_ptr ? (b - local.code_659[1] + 256) % 256 : b)] :
      local.code_659[0] == ","
        ? [for i, b in local.iter_658.tape : (i == local.iter_658.tape_ptr ? local.ascii_lookup[substr(local.input_659, 0, 1)] : b)]
        : local.iter_658.tape)

    tape_ptr = (
      local.code_659[0] == "<"
        ? local.iter_658.tape_ptr - local.code_659[1] :
      local.code_659[0] == ">"
        ? local.iter_658.tape_ptr + local.code_659[1]
        : local.iter_658.tape_ptr)

    code_ptr = 2 + (
      local.code_659[0] == "["
        ? local.iter_658.tape[local.iter_658.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_658.code_ptr)] : local.iter_658.code_ptr :
      local.code_659[0] == "]"
        ? local.iter_658.tape[local.iter_658.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_658.code_ptr)] : local.iter_658.code_ptr
        : local.iter_658.code_ptr)

    steps_taken = 1 + local.iter_658.steps_taken
  }
}

locals {
  code_660 = (try(local.iter_659.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_659.code_ptr, local.iter_659.code_ptr + 2)
    : [null])

  input_660 = (local.code_660[0] == ","
    ? substr(local.input_659, local.code_660[1], -1)
    : local.input_659)

  iter_660 = try(local.iter_659.code_ptr >= length(var.code), true) ? local.iter_659 : {
    output = (local.code_660[0] == "."
      ? "${local.iter_659.output}${join("", [for _ in range(local.code_660[1]) : jsondecode(format("\"\\u%04x\"", local.iter_659.tape[local.iter_659.tape_ptr]))])}"
      : local.iter_659.output)
    
    tape = (
      local.code_660[0] == "+"
        ? [for i, b in local.iter_659.tape : (i == local.iter_659.tape_ptr ? (b + local.code_660[1]) % 256 : b)] :
      local.code_660[0] == "-"
        ? [for i, b in local.iter_659.tape : (i == local.iter_659.tape_ptr ? (b - local.code_660[1] + 256) % 256 : b)] :
      local.code_660[0] == ","
        ? [for i, b in local.iter_659.tape : (i == local.iter_659.tape_ptr ? local.ascii_lookup[substr(local.input_660, 0, 1)] : b)]
        : local.iter_659.tape)

    tape_ptr = (
      local.code_660[0] == "<"
        ? local.iter_659.tape_ptr - local.code_660[1] :
      local.code_660[0] == ">"
        ? local.iter_659.tape_ptr + local.code_660[1]
        : local.iter_659.tape_ptr)

    code_ptr = 2 + (
      local.code_660[0] == "["
        ? local.iter_659.tape[local.iter_659.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_659.code_ptr)] : local.iter_659.code_ptr :
      local.code_660[0] == "]"
        ? local.iter_659.tape[local.iter_659.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_659.code_ptr)] : local.iter_659.code_ptr
        : local.iter_659.code_ptr)

    steps_taken = 1 + local.iter_659.steps_taken
  }
}

locals {
  code_661 = (try(local.iter_660.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_660.code_ptr, local.iter_660.code_ptr + 2)
    : [null])

  input_661 = (local.code_661[0] == ","
    ? substr(local.input_660, local.code_661[1], -1)
    : local.input_660)

  iter_661 = try(local.iter_660.code_ptr >= length(var.code), true) ? local.iter_660 : {
    output = (local.code_661[0] == "."
      ? "${local.iter_660.output}${join("", [for _ in range(local.code_661[1]) : jsondecode(format("\"\\u%04x\"", local.iter_660.tape[local.iter_660.tape_ptr]))])}"
      : local.iter_660.output)
    
    tape = (
      local.code_661[0] == "+"
        ? [for i, b in local.iter_660.tape : (i == local.iter_660.tape_ptr ? (b + local.code_661[1]) % 256 : b)] :
      local.code_661[0] == "-"
        ? [for i, b in local.iter_660.tape : (i == local.iter_660.tape_ptr ? (b - local.code_661[1] + 256) % 256 : b)] :
      local.code_661[0] == ","
        ? [for i, b in local.iter_660.tape : (i == local.iter_660.tape_ptr ? local.ascii_lookup[substr(local.input_661, 0, 1)] : b)]
        : local.iter_660.tape)

    tape_ptr = (
      local.code_661[0] == "<"
        ? local.iter_660.tape_ptr - local.code_661[1] :
      local.code_661[0] == ">"
        ? local.iter_660.tape_ptr + local.code_661[1]
        : local.iter_660.tape_ptr)

    code_ptr = 2 + (
      local.code_661[0] == "["
        ? local.iter_660.tape[local.iter_660.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_660.code_ptr)] : local.iter_660.code_ptr :
      local.code_661[0] == "]"
        ? local.iter_660.tape[local.iter_660.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_660.code_ptr)] : local.iter_660.code_ptr
        : local.iter_660.code_ptr)

    steps_taken = 1 + local.iter_660.steps_taken
  }
}

locals {
  code_662 = (try(local.iter_661.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_661.code_ptr, local.iter_661.code_ptr + 2)
    : [null])

  input_662 = (local.code_662[0] == ","
    ? substr(local.input_661, local.code_662[1], -1)
    : local.input_661)

  iter_662 = try(local.iter_661.code_ptr >= length(var.code), true) ? local.iter_661 : {
    output = (local.code_662[0] == "."
      ? "${local.iter_661.output}${join("", [for _ in range(local.code_662[1]) : jsondecode(format("\"\\u%04x\"", local.iter_661.tape[local.iter_661.tape_ptr]))])}"
      : local.iter_661.output)
    
    tape = (
      local.code_662[0] == "+"
        ? [for i, b in local.iter_661.tape : (i == local.iter_661.tape_ptr ? (b + local.code_662[1]) % 256 : b)] :
      local.code_662[0] == "-"
        ? [for i, b in local.iter_661.tape : (i == local.iter_661.tape_ptr ? (b - local.code_662[1] + 256) % 256 : b)] :
      local.code_662[0] == ","
        ? [for i, b in local.iter_661.tape : (i == local.iter_661.tape_ptr ? local.ascii_lookup[substr(local.input_662, 0, 1)] : b)]
        : local.iter_661.tape)

    tape_ptr = (
      local.code_662[0] == "<"
        ? local.iter_661.tape_ptr - local.code_662[1] :
      local.code_662[0] == ">"
        ? local.iter_661.tape_ptr + local.code_662[1]
        : local.iter_661.tape_ptr)

    code_ptr = 2 + (
      local.code_662[0] == "["
        ? local.iter_661.tape[local.iter_661.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_661.code_ptr)] : local.iter_661.code_ptr :
      local.code_662[0] == "]"
        ? local.iter_661.tape[local.iter_661.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_661.code_ptr)] : local.iter_661.code_ptr
        : local.iter_661.code_ptr)

    steps_taken = 1 + local.iter_661.steps_taken
  }
}

locals {
  code_663 = (try(local.iter_662.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_662.code_ptr, local.iter_662.code_ptr + 2)
    : [null])

  input_663 = (local.code_663[0] == ","
    ? substr(local.input_662, local.code_663[1], -1)
    : local.input_662)

  iter_663 = try(local.iter_662.code_ptr >= length(var.code), true) ? local.iter_662 : {
    output = (local.code_663[0] == "."
      ? "${local.iter_662.output}${join("", [for _ in range(local.code_663[1]) : jsondecode(format("\"\\u%04x\"", local.iter_662.tape[local.iter_662.tape_ptr]))])}"
      : local.iter_662.output)
    
    tape = (
      local.code_663[0] == "+"
        ? [for i, b in local.iter_662.tape : (i == local.iter_662.tape_ptr ? (b + local.code_663[1]) % 256 : b)] :
      local.code_663[0] == "-"
        ? [for i, b in local.iter_662.tape : (i == local.iter_662.tape_ptr ? (b - local.code_663[1] + 256) % 256 : b)] :
      local.code_663[0] == ","
        ? [for i, b in local.iter_662.tape : (i == local.iter_662.tape_ptr ? local.ascii_lookup[substr(local.input_663, 0, 1)] : b)]
        : local.iter_662.tape)

    tape_ptr = (
      local.code_663[0] == "<"
        ? local.iter_662.tape_ptr - local.code_663[1] :
      local.code_663[0] == ">"
        ? local.iter_662.tape_ptr + local.code_663[1]
        : local.iter_662.tape_ptr)

    code_ptr = 2 + (
      local.code_663[0] == "["
        ? local.iter_662.tape[local.iter_662.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_662.code_ptr)] : local.iter_662.code_ptr :
      local.code_663[0] == "]"
        ? local.iter_662.tape[local.iter_662.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_662.code_ptr)] : local.iter_662.code_ptr
        : local.iter_662.code_ptr)

    steps_taken = 1 + local.iter_662.steps_taken
  }
}

locals {
  code_664 = (try(local.iter_663.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_663.code_ptr, local.iter_663.code_ptr + 2)
    : [null])

  input_664 = (local.code_664[0] == ","
    ? substr(local.input_663, local.code_664[1], -1)
    : local.input_663)

  iter_664 = try(local.iter_663.code_ptr >= length(var.code), true) ? local.iter_663 : {
    output = (local.code_664[0] == "."
      ? "${local.iter_663.output}${join("", [for _ in range(local.code_664[1]) : jsondecode(format("\"\\u%04x\"", local.iter_663.tape[local.iter_663.tape_ptr]))])}"
      : local.iter_663.output)
    
    tape = (
      local.code_664[0] == "+"
        ? [for i, b in local.iter_663.tape : (i == local.iter_663.tape_ptr ? (b + local.code_664[1]) % 256 : b)] :
      local.code_664[0] == "-"
        ? [for i, b in local.iter_663.tape : (i == local.iter_663.tape_ptr ? (b - local.code_664[1] + 256) % 256 : b)] :
      local.code_664[0] == ","
        ? [for i, b in local.iter_663.tape : (i == local.iter_663.tape_ptr ? local.ascii_lookup[substr(local.input_664, 0, 1)] : b)]
        : local.iter_663.tape)

    tape_ptr = (
      local.code_664[0] == "<"
        ? local.iter_663.tape_ptr - local.code_664[1] :
      local.code_664[0] == ">"
        ? local.iter_663.tape_ptr + local.code_664[1]
        : local.iter_663.tape_ptr)

    code_ptr = 2 + (
      local.code_664[0] == "["
        ? local.iter_663.tape[local.iter_663.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_663.code_ptr)] : local.iter_663.code_ptr :
      local.code_664[0] == "]"
        ? local.iter_663.tape[local.iter_663.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_663.code_ptr)] : local.iter_663.code_ptr
        : local.iter_663.code_ptr)

    steps_taken = 1 + local.iter_663.steps_taken
  }
}

locals {
  code_665 = (try(local.iter_664.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_664.code_ptr, local.iter_664.code_ptr + 2)
    : [null])

  input_665 = (local.code_665[0] == ","
    ? substr(local.input_664, local.code_665[1], -1)
    : local.input_664)

  iter_665 = try(local.iter_664.code_ptr >= length(var.code), true) ? local.iter_664 : {
    output = (local.code_665[0] == "."
      ? "${local.iter_664.output}${join("", [for _ in range(local.code_665[1]) : jsondecode(format("\"\\u%04x\"", local.iter_664.tape[local.iter_664.tape_ptr]))])}"
      : local.iter_664.output)
    
    tape = (
      local.code_665[0] == "+"
        ? [for i, b in local.iter_664.tape : (i == local.iter_664.tape_ptr ? (b + local.code_665[1]) % 256 : b)] :
      local.code_665[0] == "-"
        ? [for i, b in local.iter_664.tape : (i == local.iter_664.tape_ptr ? (b - local.code_665[1] + 256) % 256 : b)] :
      local.code_665[0] == ","
        ? [for i, b in local.iter_664.tape : (i == local.iter_664.tape_ptr ? local.ascii_lookup[substr(local.input_665, 0, 1)] : b)]
        : local.iter_664.tape)

    tape_ptr = (
      local.code_665[0] == "<"
        ? local.iter_664.tape_ptr - local.code_665[1] :
      local.code_665[0] == ">"
        ? local.iter_664.tape_ptr + local.code_665[1]
        : local.iter_664.tape_ptr)

    code_ptr = 2 + (
      local.code_665[0] == "["
        ? local.iter_664.tape[local.iter_664.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_664.code_ptr)] : local.iter_664.code_ptr :
      local.code_665[0] == "]"
        ? local.iter_664.tape[local.iter_664.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_664.code_ptr)] : local.iter_664.code_ptr
        : local.iter_664.code_ptr)

    steps_taken = 1 + local.iter_664.steps_taken
  }
}

locals {
  code_666 = (try(local.iter_665.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_665.code_ptr, local.iter_665.code_ptr + 2)
    : [null])

  input_666 = (local.code_666[0] == ","
    ? substr(local.input_665, local.code_666[1], -1)
    : local.input_665)

  iter_666 = try(local.iter_665.code_ptr >= length(var.code), true) ? local.iter_665 : {
    output = (local.code_666[0] == "."
      ? "${local.iter_665.output}${join("", [for _ in range(local.code_666[1]) : jsondecode(format("\"\\u%04x\"", local.iter_665.tape[local.iter_665.tape_ptr]))])}"
      : local.iter_665.output)
    
    tape = (
      local.code_666[0] == "+"
        ? [for i, b in local.iter_665.tape : (i == local.iter_665.tape_ptr ? (b + local.code_666[1]) % 256 : b)] :
      local.code_666[0] == "-"
        ? [for i, b in local.iter_665.tape : (i == local.iter_665.tape_ptr ? (b - local.code_666[1] + 256) % 256 : b)] :
      local.code_666[0] == ","
        ? [for i, b in local.iter_665.tape : (i == local.iter_665.tape_ptr ? local.ascii_lookup[substr(local.input_666, 0, 1)] : b)]
        : local.iter_665.tape)

    tape_ptr = (
      local.code_666[0] == "<"
        ? local.iter_665.tape_ptr - local.code_666[1] :
      local.code_666[0] == ">"
        ? local.iter_665.tape_ptr + local.code_666[1]
        : local.iter_665.tape_ptr)

    code_ptr = 2 + (
      local.code_666[0] == "["
        ? local.iter_665.tape[local.iter_665.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_665.code_ptr)] : local.iter_665.code_ptr :
      local.code_666[0] == "]"
        ? local.iter_665.tape[local.iter_665.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_665.code_ptr)] : local.iter_665.code_ptr
        : local.iter_665.code_ptr)

    steps_taken = 1 + local.iter_665.steps_taken
  }
}

locals {
  code_667 = (try(local.iter_666.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_666.code_ptr, local.iter_666.code_ptr + 2)
    : [null])

  input_667 = (local.code_667[0] == ","
    ? substr(local.input_666, local.code_667[1], -1)
    : local.input_666)

  iter_667 = try(local.iter_666.code_ptr >= length(var.code), true) ? local.iter_666 : {
    output = (local.code_667[0] == "."
      ? "${local.iter_666.output}${join("", [for _ in range(local.code_667[1]) : jsondecode(format("\"\\u%04x\"", local.iter_666.tape[local.iter_666.tape_ptr]))])}"
      : local.iter_666.output)
    
    tape = (
      local.code_667[0] == "+"
        ? [for i, b in local.iter_666.tape : (i == local.iter_666.tape_ptr ? (b + local.code_667[1]) % 256 : b)] :
      local.code_667[0] == "-"
        ? [for i, b in local.iter_666.tape : (i == local.iter_666.tape_ptr ? (b - local.code_667[1] + 256) % 256 : b)] :
      local.code_667[0] == ","
        ? [for i, b in local.iter_666.tape : (i == local.iter_666.tape_ptr ? local.ascii_lookup[substr(local.input_667, 0, 1)] : b)]
        : local.iter_666.tape)

    tape_ptr = (
      local.code_667[0] == "<"
        ? local.iter_666.tape_ptr - local.code_667[1] :
      local.code_667[0] == ">"
        ? local.iter_666.tape_ptr + local.code_667[1]
        : local.iter_666.tape_ptr)

    code_ptr = 2 + (
      local.code_667[0] == "["
        ? local.iter_666.tape[local.iter_666.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_666.code_ptr)] : local.iter_666.code_ptr :
      local.code_667[0] == "]"
        ? local.iter_666.tape[local.iter_666.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_666.code_ptr)] : local.iter_666.code_ptr
        : local.iter_666.code_ptr)

    steps_taken = 1 + local.iter_666.steps_taken
  }
}

locals {
  code_668 = (try(local.iter_667.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_667.code_ptr, local.iter_667.code_ptr + 2)
    : [null])

  input_668 = (local.code_668[0] == ","
    ? substr(local.input_667, local.code_668[1], -1)
    : local.input_667)

  iter_668 = try(local.iter_667.code_ptr >= length(var.code), true) ? local.iter_667 : {
    output = (local.code_668[0] == "."
      ? "${local.iter_667.output}${join("", [for _ in range(local.code_668[1]) : jsondecode(format("\"\\u%04x\"", local.iter_667.tape[local.iter_667.tape_ptr]))])}"
      : local.iter_667.output)
    
    tape = (
      local.code_668[0] == "+"
        ? [for i, b in local.iter_667.tape : (i == local.iter_667.tape_ptr ? (b + local.code_668[1]) % 256 : b)] :
      local.code_668[0] == "-"
        ? [for i, b in local.iter_667.tape : (i == local.iter_667.tape_ptr ? (b - local.code_668[1] + 256) % 256 : b)] :
      local.code_668[0] == ","
        ? [for i, b in local.iter_667.tape : (i == local.iter_667.tape_ptr ? local.ascii_lookup[substr(local.input_668, 0, 1)] : b)]
        : local.iter_667.tape)

    tape_ptr = (
      local.code_668[0] == "<"
        ? local.iter_667.tape_ptr - local.code_668[1] :
      local.code_668[0] == ">"
        ? local.iter_667.tape_ptr + local.code_668[1]
        : local.iter_667.tape_ptr)

    code_ptr = 2 + (
      local.code_668[0] == "["
        ? local.iter_667.tape[local.iter_667.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_667.code_ptr)] : local.iter_667.code_ptr :
      local.code_668[0] == "]"
        ? local.iter_667.tape[local.iter_667.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_667.code_ptr)] : local.iter_667.code_ptr
        : local.iter_667.code_ptr)

    steps_taken = 1 + local.iter_667.steps_taken
  }
}

locals {
  code_669 = (try(local.iter_668.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_668.code_ptr, local.iter_668.code_ptr + 2)
    : [null])

  input_669 = (local.code_669[0] == ","
    ? substr(local.input_668, local.code_669[1], -1)
    : local.input_668)

  iter_669 = try(local.iter_668.code_ptr >= length(var.code), true) ? local.iter_668 : {
    output = (local.code_669[0] == "."
      ? "${local.iter_668.output}${join("", [for _ in range(local.code_669[1]) : jsondecode(format("\"\\u%04x\"", local.iter_668.tape[local.iter_668.tape_ptr]))])}"
      : local.iter_668.output)
    
    tape = (
      local.code_669[0] == "+"
        ? [for i, b in local.iter_668.tape : (i == local.iter_668.tape_ptr ? (b + local.code_669[1]) % 256 : b)] :
      local.code_669[0] == "-"
        ? [for i, b in local.iter_668.tape : (i == local.iter_668.tape_ptr ? (b - local.code_669[1] + 256) % 256 : b)] :
      local.code_669[0] == ","
        ? [for i, b in local.iter_668.tape : (i == local.iter_668.tape_ptr ? local.ascii_lookup[substr(local.input_669, 0, 1)] : b)]
        : local.iter_668.tape)

    tape_ptr = (
      local.code_669[0] == "<"
        ? local.iter_668.tape_ptr - local.code_669[1] :
      local.code_669[0] == ">"
        ? local.iter_668.tape_ptr + local.code_669[1]
        : local.iter_668.tape_ptr)

    code_ptr = 2 + (
      local.code_669[0] == "["
        ? local.iter_668.tape[local.iter_668.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_668.code_ptr)] : local.iter_668.code_ptr :
      local.code_669[0] == "]"
        ? local.iter_668.tape[local.iter_668.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_668.code_ptr)] : local.iter_668.code_ptr
        : local.iter_668.code_ptr)

    steps_taken = 1 + local.iter_668.steps_taken
  }
}

locals {
  code_670 = (try(local.iter_669.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_669.code_ptr, local.iter_669.code_ptr + 2)
    : [null])

  input_670 = (local.code_670[0] == ","
    ? substr(local.input_669, local.code_670[1], -1)
    : local.input_669)

  iter_670 = try(local.iter_669.code_ptr >= length(var.code), true) ? local.iter_669 : {
    output = (local.code_670[0] == "."
      ? "${local.iter_669.output}${join("", [for _ in range(local.code_670[1]) : jsondecode(format("\"\\u%04x\"", local.iter_669.tape[local.iter_669.tape_ptr]))])}"
      : local.iter_669.output)
    
    tape = (
      local.code_670[0] == "+"
        ? [for i, b in local.iter_669.tape : (i == local.iter_669.tape_ptr ? (b + local.code_670[1]) % 256 : b)] :
      local.code_670[0] == "-"
        ? [for i, b in local.iter_669.tape : (i == local.iter_669.tape_ptr ? (b - local.code_670[1] + 256) % 256 : b)] :
      local.code_670[0] == ","
        ? [for i, b in local.iter_669.tape : (i == local.iter_669.tape_ptr ? local.ascii_lookup[substr(local.input_670, 0, 1)] : b)]
        : local.iter_669.tape)

    tape_ptr = (
      local.code_670[0] == "<"
        ? local.iter_669.tape_ptr - local.code_670[1] :
      local.code_670[0] == ">"
        ? local.iter_669.tape_ptr + local.code_670[1]
        : local.iter_669.tape_ptr)

    code_ptr = 2 + (
      local.code_670[0] == "["
        ? local.iter_669.tape[local.iter_669.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_669.code_ptr)] : local.iter_669.code_ptr :
      local.code_670[0] == "]"
        ? local.iter_669.tape[local.iter_669.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_669.code_ptr)] : local.iter_669.code_ptr
        : local.iter_669.code_ptr)

    steps_taken = 1 + local.iter_669.steps_taken
  }
}

locals {
  code_671 = (try(local.iter_670.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_670.code_ptr, local.iter_670.code_ptr + 2)
    : [null])

  input_671 = (local.code_671[0] == ","
    ? substr(local.input_670, local.code_671[1], -1)
    : local.input_670)

  iter_671 = try(local.iter_670.code_ptr >= length(var.code), true) ? local.iter_670 : {
    output = (local.code_671[0] == "."
      ? "${local.iter_670.output}${join("", [for _ in range(local.code_671[1]) : jsondecode(format("\"\\u%04x\"", local.iter_670.tape[local.iter_670.tape_ptr]))])}"
      : local.iter_670.output)
    
    tape = (
      local.code_671[0] == "+"
        ? [for i, b in local.iter_670.tape : (i == local.iter_670.tape_ptr ? (b + local.code_671[1]) % 256 : b)] :
      local.code_671[0] == "-"
        ? [for i, b in local.iter_670.tape : (i == local.iter_670.tape_ptr ? (b - local.code_671[1] + 256) % 256 : b)] :
      local.code_671[0] == ","
        ? [for i, b in local.iter_670.tape : (i == local.iter_670.tape_ptr ? local.ascii_lookup[substr(local.input_671, 0, 1)] : b)]
        : local.iter_670.tape)

    tape_ptr = (
      local.code_671[0] == "<"
        ? local.iter_670.tape_ptr - local.code_671[1] :
      local.code_671[0] == ">"
        ? local.iter_670.tape_ptr + local.code_671[1]
        : local.iter_670.tape_ptr)

    code_ptr = 2 + (
      local.code_671[0] == "["
        ? local.iter_670.tape[local.iter_670.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_670.code_ptr)] : local.iter_670.code_ptr :
      local.code_671[0] == "]"
        ? local.iter_670.tape[local.iter_670.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_670.code_ptr)] : local.iter_670.code_ptr
        : local.iter_670.code_ptr)

    steps_taken = 1 + local.iter_670.steps_taken
  }
}

locals {
  code_672 = (try(local.iter_671.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_671.code_ptr, local.iter_671.code_ptr + 2)
    : [null])

  input_672 = (local.code_672[0] == ","
    ? substr(local.input_671, local.code_672[1], -1)
    : local.input_671)

  iter_672 = try(local.iter_671.code_ptr >= length(var.code), true) ? local.iter_671 : {
    output = (local.code_672[0] == "."
      ? "${local.iter_671.output}${join("", [for _ in range(local.code_672[1]) : jsondecode(format("\"\\u%04x\"", local.iter_671.tape[local.iter_671.tape_ptr]))])}"
      : local.iter_671.output)
    
    tape = (
      local.code_672[0] == "+"
        ? [for i, b in local.iter_671.tape : (i == local.iter_671.tape_ptr ? (b + local.code_672[1]) % 256 : b)] :
      local.code_672[0] == "-"
        ? [for i, b in local.iter_671.tape : (i == local.iter_671.tape_ptr ? (b - local.code_672[1] + 256) % 256 : b)] :
      local.code_672[0] == ","
        ? [for i, b in local.iter_671.tape : (i == local.iter_671.tape_ptr ? local.ascii_lookup[substr(local.input_672, 0, 1)] : b)]
        : local.iter_671.tape)

    tape_ptr = (
      local.code_672[0] == "<"
        ? local.iter_671.tape_ptr - local.code_672[1] :
      local.code_672[0] == ">"
        ? local.iter_671.tape_ptr + local.code_672[1]
        : local.iter_671.tape_ptr)

    code_ptr = 2 + (
      local.code_672[0] == "["
        ? local.iter_671.tape[local.iter_671.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_671.code_ptr)] : local.iter_671.code_ptr :
      local.code_672[0] == "]"
        ? local.iter_671.tape[local.iter_671.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_671.code_ptr)] : local.iter_671.code_ptr
        : local.iter_671.code_ptr)

    steps_taken = 1 + local.iter_671.steps_taken
  }
}

locals {
  code_673 = (try(local.iter_672.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_672.code_ptr, local.iter_672.code_ptr + 2)
    : [null])

  input_673 = (local.code_673[0] == ","
    ? substr(local.input_672, local.code_673[1], -1)
    : local.input_672)

  iter_673 = try(local.iter_672.code_ptr >= length(var.code), true) ? local.iter_672 : {
    output = (local.code_673[0] == "."
      ? "${local.iter_672.output}${join("", [for _ in range(local.code_673[1]) : jsondecode(format("\"\\u%04x\"", local.iter_672.tape[local.iter_672.tape_ptr]))])}"
      : local.iter_672.output)
    
    tape = (
      local.code_673[0] == "+"
        ? [for i, b in local.iter_672.tape : (i == local.iter_672.tape_ptr ? (b + local.code_673[1]) % 256 : b)] :
      local.code_673[0] == "-"
        ? [for i, b in local.iter_672.tape : (i == local.iter_672.tape_ptr ? (b - local.code_673[1] + 256) % 256 : b)] :
      local.code_673[0] == ","
        ? [for i, b in local.iter_672.tape : (i == local.iter_672.tape_ptr ? local.ascii_lookup[substr(local.input_673, 0, 1)] : b)]
        : local.iter_672.tape)

    tape_ptr = (
      local.code_673[0] == "<"
        ? local.iter_672.tape_ptr - local.code_673[1] :
      local.code_673[0] == ">"
        ? local.iter_672.tape_ptr + local.code_673[1]
        : local.iter_672.tape_ptr)

    code_ptr = 2 + (
      local.code_673[0] == "["
        ? local.iter_672.tape[local.iter_672.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_672.code_ptr)] : local.iter_672.code_ptr :
      local.code_673[0] == "]"
        ? local.iter_672.tape[local.iter_672.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_672.code_ptr)] : local.iter_672.code_ptr
        : local.iter_672.code_ptr)

    steps_taken = 1 + local.iter_672.steps_taken
  }
}

locals {
  code_674 = (try(local.iter_673.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_673.code_ptr, local.iter_673.code_ptr + 2)
    : [null])

  input_674 = (local.code_674[0] == ","
    ? substr(local.input_673, local.code_674[1], -1)
    : local.input_673)

  iter_674 = try(local.iter_673.code_ptr >= length(var.code), true) ? local.iter_673 : {
    output = (local.code_674[0] == "."
      ? "${local.iter_673.output}${join("", [for _ in range(local.code_674[1]) : jsondecode(format("\"\\u%04x\"", local.iter_673.tape[local.iter_673.tape_ptr]))])}"
      : local.iter_673.output)
    
    tape = (
      local.code_674[0] == "+"
        ? [for i, b in local.iter_673.tape : (i == local.iter_673.tape_ptr ? (b + local.code_674[1]) % 256 : b)] :
      local.code_674[0] == "-"
        ? [for i, b in local.iter_673.tape : (i == local.iter_673.tape_ptr ? (b - local.code_674[1] + 256) % 256 : b)] :
      local.code_674[0] == ","
        ? [for i, b in local.iter_673.tape : (i == local.iter_673.tape_ptr ? local.ascii_lookup[substr(local.input_674, 0, 1)] : b)]
        : local.iter_673.tape)

    tape_ptr = (
      local.code_674[0] == "<"
        ? local.iter_673.tape_ptr - local.code_674[1] :
      local.code_674[0] == ">"
        ? local.iter_673.tape_ptr + local.code_674[1]
        : local.iter_673.tape_ptr)

    code_ptr = 2 + (
      local.code_674[0] == "["
        ? local.iter_673.tape[local.iter_673.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_673.code_ptr)] : local.iter_673.code_ptr :
      local.code_674[0] == "]"
        ? local.iter_673.tape[local.iter_673.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_673.code_ptr)] : local.iter_673.code_ptr
        : local.iter_673.code_ptr)

    steps_taken = 1 + local.iter_673.steps_taken
  }
}

locals {
  code_675 = (try(local.iter_674.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_674.code_ptr, local.iter_674.code_ptr + 2)
    : [null])

  input_675 = (local.code_675[0] == ","
    ? substr(local.input_674, local.code_675[1], -1)
    : local.input_674)

  iter_675 = try(local.iter_674.code_ptr >= length(var.code), true) ? local.iter_674 : {
    output = (local.code_675[0] == "."
      ? "${local.iter_674.output}${join("", [for _ in range(local.code_675[1]) : jsondecode(format("\"\\u%04x\"", local.iter_674.tape[local.iter_674.tape_ptr]))])}"
      : local.iter_674.output)
    
    tape = (
      local.code_675[0] == "+"
        ? [for i, b in local.iter_674.tape : (i == local.iter_674.tape_ptr ? (b + local.code_675[1]) % 256 : b)] :
      local.code_675[0] == "-"
        ? [for i, b in local.iter_674.tape : (i == local.iter_674.tape_ptr ? (b - local.code_675[1] + 256) % 256 : b)] :
      local.code_675[0] == ","
        ? [for i, b in local.iter_674.tape : (i == local.iter_674.tape_ptr ? local.ascii_lookup[substr(local.input_675, 0, 1)] : b)]
        : local.iter_674.tape)

    tape_ptr = (
      local.code_675[0] == "<"
        ? local.iter_674.tape_ptr - local.code_675[1] :
      local.code_675[0] == ">"
        ? local.iter_674.tape_ptr + local.code_675[1]
        : local.iter_674.tape_ptr)

    code_ptr = 2 + (
      local.code_675[0] == "["
        ? local.iter_674.tape[local.iter_674.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_674.code_ptr)] : local.iter_674.code_ptr :
      local.code_675[0] == "]"
        ? local.iter_674.tape[local.iter_674.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_674.code_ptr)] : local.iter_674.code_ptr
        : local.iter_674.code_ptr)

    steps_taken = 1 + local.iter_674.steps_taken
  }
}

locals {
  code_676 = (try(local.iter_675.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_675.code_ptr, local.iter_675.code_ptr + 2)
    : [null])

  input_676 = (local.code_676[0] == ","
    ? substr(local.input_675, local.code_676[1], -1)
    : local.input_675)

  iter_676 = try(local.iter_675.code_ptr >= length(var.code), true) ? local.iter_675 : {
    output = (local.code_676[0] == "."
      ? "${local.iter_675.output}${join("", [for _ in range(local.code_676[1]) : jsondecode(format("\"\\u%04x\"", local.iter_675.tape[local.iter_675.tape_ptr]))])}"
      : local.iter_675.output)
    
    tape = (
      local.code_676[0] == "+"
        ? [for i, b in local.iter_675.tape : (i == local.iter_675.tape_ptr ? (b + local.code_676[1]) % 256 : b)] :
      local.code_676[0] == "-"
        ? [for i, b in local.iter_675.tape : (i == local.iter_675.tape_ptr ? (b - local.code_676[1] + 256) % 256 : b)] :
      local.code_676[0] == ","
        ? [for i, b in local.iter_675.tape : (i == local.iter_675.tape_ptr ? local.ascii_lookup[substr(local.input_676, 0, 1)] : b)]
        : local.iter_675.tape)

    tape_ptr = (
      local.code_676[0] == "<"
        ? local.iter_675.tape_ptr - local.code_676[1] :
      local.code_676[0] == ">"
        ? local.iter_675.tape_ptr + local.code_676[1]
        : local.iter_675.tape_ptr)

    code_ptr = 2 + (
      local.code_676[0] == "["
        ? local.iter_675.tape[local.iter_675.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_675.code_ptr)] : local.iter_675.code_ptr :
      local.code_676[0] == "]"
        ? local.iter_675.tape[local.iter_675.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_675.code_ptr)] : local.iter_675.code_ptr
        : local.iter_675.code_ptr)

    steps_taken = 1 + local.iter_675.steps_taken
  }
}

locals {
  code_677 = (try(local.iter_676.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_676.code_ptr, local.iter_676.code_ptr + 2)
    : [null])

  input_677 = (local.code_677[0] == ","
    ? substr(local.input_676, local.code_677[1], -1)
    : local.input_676)

  iter_677 = try(local.iter_676.code_ptr >= length(var.code), true) ? local.iter_676 : {
    output = (local.code_677[0] == "."
      ? "${local.iter_676.output}${join("", [for _ in range(local.code_677[1]) : jsondecode(format("\"\\u%04x\"", local.iter_676.tape[local.iter_676.tape_ptr]))])}"
      : local.iter_676.output)
    
    tape = (
      local.code_677[0] == "+"
        ? [for i, b in local.iter_676.tape : (i == local.iter_676.tape_ptr ? (b + local.code_677[1]) % 256 : b)] :
      local.code_677[0] == "-"
        ? [for i, b in local.iter_676.tape : (i == local.iter_676.tape_ptr ? (b - local.code_677[1] + 256) % 256 : b)] :
      local.code_677[0] == ","
        ? [for i, b in local.iter_676.tape : (i == local.iter_676.tape_ptr ? local.ascii_lookup[substr(local.input_677, 0, 1)] : b)]
        : local.iter_676.tape)

    tape_ptr = (
      local.code_677[0] == "<"
        ? local.iter_676.tape_ptr - local.code_677[1] :
      local.code_677[0] == ">"
        ? local.iter_676.tape_ptr + local.code_677[1]
        : local.iter_676.tape_ptr)

    code_ptr = 2 + (
      local.code_677[0] == "["
        ? local.iter_676.tape[local.iter_676.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_676.code_ptr)] : local.iter_676.code_ptr :
      local.code_677[0] == "]"
        ? local.iter_676.tape[local.iter_676.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_676.code_ptr)] : local.iter_676.code_ptr
        : local.iter_676.code_ptr)

    steps_taken = 1 + local.iter_676.steps_taken
  }
}

locals {
  code_678 = (try(local.iter_677.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_677.code_ptr, local.iter_677.code_ptr + 2)
    : [null])

  input_678 = (local.code_678[0] == ","
    ? substr(local.input_677, local.code_678[1], -1)
    : local.input_677)

  iter_678 = try(local.iter_677.code_ptr >= length(var.code), true) ? local.iter_677 : {
    output = (local.code_678[0] == "."
      ? "${local.iter_677.output}${join("", [for _ in range(local.code_678[1]) : jsondecode(format("\"\\u%04x\"", local.iter_677.tape[local.iter_677.tape_ptr]))])}"
      : local.iter_677.output)
    
    tape = (
      local.code_678[0] == "+"
        ? [for i, b in local.iter_677.tape : (i == local.iter_677.tape_ptr ? (b + local.code_678[1]) % 256 : b)] :
      local.code_678[0] == "-"
        ? [for i, b in local.iter_677.tape : (i == local.iter_677.tape_ptr ? (b - local.code_678[1] + 256) % 256 : b)] :
      local.code_678[0] == ","
        ? [for i, b in local.iter_677.tape : (i == local.iter_677.tape_ptr ? local.ascii_lookup[substr(local.input_678, 0, 1)] : b)]
        : local.iter_677.tape)

    tape_ptr = (
      local.code_678[0] == "<"
        ? local.iter_677.tape_ptr - local.code_678[1] :
      local.code_678[0] == ">"
        ? local.iter_677.tape_ptr + local.code_678[1]
        : local.iter_677.tape_ptr)

    code_ptr = 2 + (
      local.code_678[0] == "["
        ? local.iter_677.tape[local.iter_677.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_677.code_ptr)] : local.iter_677.code_ptr :
      local.code_678[0] == "]"
        ? local.iter_677.tape[local.iter_677.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_677.code_ptr)] : local.iter_677.code_ptr
        : local.iter_677.code_ptr)

    steps_taken = 1 + local.iter_677.steps_taken
  }
}

locals {
  code_679 = (try(local.iter_678.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_678.code_ptr, local.iter_678.code_ptr + 2)
    : [null])

  input_679 = (local.code_679[0] == ","
    ? substr(local.input_678, local.code_679[1], -1)
    : local.input_678)

  iter_679 = try(local.iter_678.code_ptr >= length(var.code), true) ? local.iter_678 : {
    output = (local.code_679[0] == "."
      ? "${local.iter_678.output}${join("", [for _ in range(local.code_679[1]) : jsondecode(format("\"\\u%04x\"", local.iter_678.tape[local.iter_678.tape_ptr]))])}"
      : local.iter_678.output)
    
    tape = (
      local.code_679[0] == "+"
        ? [for i, b in local.iter_678.tape : (i == local.iter_678.tape_ptr ? (b + local.code_679[1]) % 256 : b)] :
      local.code_679[0] == "-"
        ? [for i, b in local.iter_678.tape : (i == local.iter_678.tape_ptr ? (b - local.code_679[1] + 256) % 256 : b)] :
      local.code_679[0] == ","
        ? [for i, b in local.iter_678.tape : (i == local.iter_678.tape_ptr ? local.ascii_lookup[substr(local.input_679, 0, 1)] : b)]
        : local.iter_678.tape)

    tape_ptr = (
      local.code_679[0] == "<"
        ? local.iter_678.tape_ptr - local.code_679[1] :
      local.code_679[0] == ">"
        ? local.iter_678.tape_ptr + local.code_679[1]
        : local.iter_678.tape_ptr)

    code_ptr = 2 + (
      local.code_679[0] == "["
        ? local.iter_678.tape[local.iter_678.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_678.code_ptr)] : local.iter_678.code_ptr :
      local.code_679[0] == "]"
        ? local.iter_678.tape[local.iter_678.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_678.code_ptr)] : local.iter_678.code_ptr
        : local.iter_678.code_ptr)

    steps_taken = 1 + local.iter_678.steps_taken
  }
}

locals {
  code_680 = (try(local.iter_679.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_679.code_ptr, local.iter_679.code_ptr + 2)
    : [null])

  input_680 = (local.code_680[0] == ","
    ? substr(local.input_679, local.code_680[1], -1)
    : local.input_679)

  iter_680 = try(local.iter_679.code_ptr >= length(var.code), true) ? local.iter_679 : {
    output = (local.code_680[0] == "."
      ? "${local.iter_679.output}${join("", [for _ in range(local.code_680[1]) : jsondecode(format("\"\\u%04x\"", local.iter_679.tape[local.iter_679.tape_ptr]))])}"
      : local.iter_679.output)
    
    tape = (
      local.code_680[0] == "+"
        ? [for i, b in local.iter_679.tape : (i == local.iter_679.tape_ptr ? (b + local.code_680[1]) % 256 : b)] :
      local.code_680[0] == "-"
        ? [for i, b in local.iter_679.tape : (i == local.iter_679.tape_ptr ? (b - local.code_680[1] + 256) % 256 : b)] :
      local.code_680[0] == ","
        ? [for i, b in local.iter_679.tape : (i == local.iter_679.tape_ptr ? local.ascii_lookup[substr(local.input_680, 0, 1)] : b)]
        : local.iter_679.tape)

    tape_ptr = (
      local.code_680[0] == "<"
        ? local.iter_679.tape_ptr - local.code_680[1] :
      local.code_680[0] == ">"
        ? local.iter_679.tape_ptr + local.code_680[1]
        : local.iter_679.tape_ptr)

    code_ptr = 2 + (
      local.code_680[0] == "["
        ? local.iter_679.tape[local.iter_679.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_679.code_ptr)] : local.iter_679.code_ptr :
      local.code_680[0] == "]"
        ? local.iter_679.tape[local.iter_679.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_679.code_ptr)] : local.iter_679.code_ptr
        : local.iter_679.code_ptr)

    steps_taken = 1 + local.iter_679.steps_taken
  }
}

locals {
  code_681 = (try(local.iter_680.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_680.code_ptr, local.iter_680.code_ptr + 2)
    : [null])

  input_681 = (local.code_681[0] == ","
    ? substr(local.input_680, local.code_681[1], -1)
    : local.input_680)

  iter_681 = try(local.iter_680.code_ptr >= length(var.code), true) ? local.iter_680 : {
    output = (local.code_681[0] == "."
      ? "${local.iter_680.output}${join("", [for _ in range(local.code_681[1]) : jsondecode(format("\"\\u%04x\"", local.iter_680.tape[local.iter_680.tape_ptr]))])}"
      : local.iter_680.output)
    
    tape = (
      local.code_681[0] == "+"
        ? [for i, b in local.iter_680.tape : (i == local.iter_680.tape_ptr ? (b + local.code_681[1]) % 256 : b)] :
      local.code_681[0] == "-"
        ? [for i, b in local.iter_680.tape : (i == local.iter_680.tape_ptr ? (b - local.code_681[1] + 256) % 256 : b)] :
      local.code_681[0] == ","
        ? [for i, b in local.iter_680.tape : (i == local.iter_680.tape_ptr ? local.ascii_lookup[substr(local.input_681, 0, 1)] : b)]
        : local.iter_680.tape)

    tape_ptr = (
      local.code_681[0] == "<"
        ? local.iter_680.tape_ptr - local.code_681[1] :
      local.code_681[0] == ">"
        ? local.iter_680.tape_ptr + local.code_681[1]
        : local.iter_680.tape_ptr)

    code_ptr = 2 + (
      local.code_681[0] == "["
        ? local.iter_680.tape[local.iter_680.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_680.code_ptr)] : local.iter_680.code_ptr :
      local.code_681[0] == "]"
        ? local.iter_680.tape[local.iter_680.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_680.code_ptr)] : local.iter_680.code_ptr
        : local.iter_680.code_ptr)

    steps_taken = 1 + local.iter_680.steps_taken
  }
}

locals {
  code_682 = (try(local.iter_681.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_681.code_ptr, local.iter_681.code_ptr + 2)
    : [null])

  input_682 = (local.code_682[0] == ","
    ? substr(local.input_681, local.code_682[1], -1)
    : local.input_681)

  iter_682 = try(local.iter_681.code_ptr >= length(var.code), true) ? local.iter_681 : {
    output = (local.code_682[0] == "."
      ? "${local.iter_681.output}${join("", [for _ in range(local.code_682[1]) : jsondecode(format("\"\\u%04x\"", local.iter_681.tape[local.iter_681.tape_ptr]))])}"
      : local.iter_681.output)
    
    tape = (
      local.code_682[0] == "+"
        ? [for i, b in local.iter_681.tape : (i == local.iter_681.tape_ptr ? (b + local.code_682[1]) % 256 : b)] :
      local.code_682[0] == "-"
        ? [for i, b in local.iter_681.tape : (i == local.iter_681.tape_ptr ? (b - local.code_682[1] + 256) % 256 : b)] :
      local.code_682[0] == ","
        ? [for i, b in local.iter_681.tape : (i == local.iter_681.tape_ptr ? local.ascii_lookup[substr(local.input_682, 0, 1)] : b)]
        : local.iter_681.tape)

    tape_ptr = (
      local.code_682[0] == "<"
        ? local.iter_681.tape_ptr - local.code_682[1] :
      local.code_682[0] == ">"
        ? local.iter_681.tape_ptr + local.code_682[1]
        : local.iter_681.tape_ptr)

    code_ptr = 2 + (
      local.code_682[0] == "["
        ? local.iter_681.tape[local.iter_681.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_681.code_ptr)] : local.iter_681.code_ptr :
      local.code_682[0] == "]"
        ? local.iter_681.tape[local.iter_681.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_681.code_ptr)] : local.iter_681.code_ptr
        : local.iter_681.code_ptr)

    steps_taken = 1 + local.iter_681.steps_taken
  }
}

locals {
  code_683 = (try(local.iter_682.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_682.code_ptr, local.iter_682.code_ptr + 2)
    : [null])

  input_683 = (local.code_683[0] == ","
    ? substr(local.input_682, local.code_683[1], -1)
    : local.input_682)

  iter_683 = try(local.iter_682.code_ptr >= length(var.code), true) ? local.iter_682 : {
    output = (local.code_683[0] == "."
      ? "${local.iter_682.output}${join("", [for _ in range(local.code_683[1]) : jsondecode(format("\"\\u%04x\"", local.iter_682.tape[local.iter_682.tape_ptr]))])}"
      : local.iter_682.output)
    
    tape = (
      local.code_683[0] == "+"
        ? [for i, b in local.iter_682.tape : (i == local.iter_682.tape_ptr ? (b + local.code_683[1]) % 256 : b)] :
      local.code_683[0] == "-"
        ? [for i, b in local.iter_682.tape : (i == local.iter_682.tape_ptr ? (b - local.code_683[1] + 256) % 256 : b)] :
      local.code_683[0] == ","
        ? [for i, b in local.iter_682.tape : (i == local.iter_682.tape_ptr ? local.ascii_lookup[substr(local.input_683, 0, 1)] : b)]
        : local.iter_682.tape)

    tape_ptr = (
      local.code_683[0] == "<"
        ? local.iter_682.tape_ptr - local.code_683[1] :
      local.code_683[0] == ">"
        ? local.iter_682.tape_ptr + local.code_683[1]
        : local.iter_682.tape_ptr)

    code_ptr = 2 + (
      local.code_683[0] == "["
        ? local.iter_682.tape[local.iter_682.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_682.code_ptr)] : local.iter_682.code_ptr :
      local.code_683[0] == "]"
        ? local.iter_682.tape[local.iter_682.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_682.code_ptr)] : local.iter_682.code_ptr
        : local.iter_682.code_ptr)

    steps_taken = 1 + local.iter_682.steps_taken
  }
}

locals {
  code_684 = (try(local.iter_683.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_683.code_ptr, local.iter_683.code_ptr + 2)
    : [null])

  input_684 = (local.code_684[0] == ","
    ? substr(local.input_683, local.code_684[1], -1)
    : local.input_683)

  iter_684 = try(local.iter_683.code_ptr >= length(var.code), true) ? local.iter_683 : {
    output = (local.code_684[0] == "."
      ? "${local.iter_683.output}${join("", [for _ in range(local.code_684[1]) : jsondecode(format("\"\\u%04x\"", local.iter_683.tape[local.iter_683.tape_ptr]))])}"
      : local.iter_683.output)
    
    tape = (
      local.code_684[0] == "+"
        ? [for i, b in local.iter_683.tape : (i == local.iter_683.tape_ptr ? (b + local.code_684[1]) % 256 : b)] :
      local.code_684[0] == "-"
        ? [for i, b in local.iter_683.tape : (i == local.iter_683.tape_ptr ? (b - local.code_684[1] + 256) % 256 : b)] :
      local.code_684[0] == ","
        ? [for i, b in local.iter_683.tape : (i == local.iter_683.tape_ptr ? local.ascii_lookup[substr(local.input_684, 0, 1)] : b)]
        : local.iter_683.tape)

    tape_ptr = (
      local.code_684[0] == "<"
        ? local.iter_683.tape_ptr - local.code_684[1] :
      local.code_684[0] == ">"
        ? local.iter_683.tape_ptr + local.code_684[1]
        : local.iter_683.tape_ptr)

    code_ptr = 2 + (
      local.code_684[0] == "["
        ? local.iter_683.tape[local.iter_683.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_683.code_ptr)] : local.iter_683.code_ptr :
      local.code_684[0] == "]"
        ? local.iter_683.tape[local.iter_683.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_683.code_ptr)] : local.iter_683.code_ptr
        : local.iter_683.code_ptr)

    steps_taken = 1 + local.iter_683.steps_taken
  }
}

locals {
  code_685 = (try(local.iter_684.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_684.code_ptr, local.iter_684.code_ptr + 2)
    : [null])

  input_685 = (local.code_685[0] == ","
    ? substr(local.input_684, local.code_685[1], -1)
    : local.input_684)

  iter_685 = try(local.iter_684.code_ptr >= length(var.code), true) ? local.iter_684 : {
    output = (local.code_685[0] == "."
      ? "${local.iter_684.output}${join("", [for _ in range(local.code_685[1]) : jsondecode(format("\"\\u%04x\"", local.iter_684.tape[local.iter_684.tape_ptr]))])}"
      : local.iter_684.output)
    
    tape = (
      local.code_685[0] == "+"
        ? [for i, b in local.iter_684.tape : (i == local.iter_684.tape_ptr ? (b + local.code_685[1]) % 256 : b)] :
      local.code_685[0] == "-"
        ? [for i, b in local.iter_684.tape : (i == local.iter_684.tape_ptr ? (b - local.code_685[1] + 256) % 256 : b)] :
      local.code_685[0] == ","
        ? [for i, b in local.iter_684.tape : (i == local.iter_684.tape_ptr ? local.ascii_lookup[substr(local.input_685, 0, 1)] : b)]
        : local.iter_684.tape)

    tape_ptr = (
      local.code_685[0] == "<"
        ? local.iter_684.tape_ptr - local.code_685[1] :
      local.code_685[0] == ">"
        ? local.iter_684.tape_ptr + local.code_685[1]
        : local.iter_684.tape_ptr)

    code_ptr = 2 + (
      local.code_685[0] == "["
        ? local.iter_684.tape[local.iter_684.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_684.code_ptr)] : local.iter_684.code_ptr :
      local.code_685[0] == "]"
        ? local.iter_684.tape[local.iter_684.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_684.code_ptr)] : local.iter_684.code_ptr
        : local.iter_684.code_ptr)

    steps_taken = 1 + local.iter_684.steps_taken
  }
}

locals {
  code_686 = (try(local.iter_685.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_685.code_ptr, local.iter_685.code_ptr + 2)
    : [null])

  input_686 = (local.code_686[0] == ","
    ? substr(local.input_685, local.code_686[1], -1)
    : local.input_685)

  iter_686 = try(local.iter_685.code_ptr >= length(var.code), true) ? local.iter_685 : {
    output = (local.code_686[0] == "."
      ? "${local.iter_685.output}${join("", [for _ in range(local.code_686[1]) : jsondecode(format("\"\\u%04x\"", local.iter_685.tape[local.iter_685.tape_ptr]))])}"
      : local.iter_685.output)
    
    tape = (
      local.code_686[0] == "+"
        ? [for i, b in local.iter_685.tape : (i == local.iter_685.tape_ptr ? (b + local.code_686[1]) % 256 : b)] :
      local.code_686[0] == "-"
        ? [for i, b in local.iter_685.tape : (i == local.iter_685.tape_ptr ? (b - local.code_686[1] + 256) % 256 : b)] :
      local.code_686[0] == ","
        ? [for i, b in local.iter_685.tape : (i == local.iter_685.tape_ptr ? local.ascii_lookup[substr(local.input_686, 0, 1)] : b)]
        : local.iter_685.tape)

    tape_ptr = (
      local.code_686[0] == "<"
        ? local.iter_685.tape_ptr - local.code_686[1] :
      local.code_686[0] == ">"
        ? local.iter_685.tape_ptr + local.code_686[1]
        : local.iter_685.tape_ptr)

    code_ptr = 2 + (
      local.code_686[0] == "["
        ? local.iter_685.tape[local.iter_685.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_685.code_ptr)] : local.iter_685.code_ptr :
      local.code_686[0] == "]"
        ? local.iter_685.tape[local.iter_685.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_685.code_ptr)] : local.iter_685.code_ptr
        : local.iter_685.code_ptr)

    steps_taken = 1 + local.iter_685.steps_taken
  }
}

locals {
  code_687 = (try(local.iter_686.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_686.code_ptr, local.iter_686.code_ptr + 2)
    : [null])

  input_687 = (local.code_687[0] == ","
    ? substr(local.input_686, local.code_687[1], -1)
    : local.input_686)

  iter_687 = try(local.iter_686.code_ptr >= length(var.code), true) ? local.iter_686 : {
    output = (local.code_687[0] == "."
      ? "${local.iter_686.output}${join("", [for _ in range(local.code_687[1]) : jsondecode(format("\"\\u%04x\"", local.iter_686.tape[local.iter_686.tape_ptr]))])}"
      : local.iter_686.output)
    
    tape = (
      local.code_687[0] == "+"
        ? [for i, b in local.iter_686.tape : (i == local.iter_686.tape_ptr ? (b + local.code_687[1]) % 256 : b)] :
      local.code_687[0] == "-"
        ? [for i, b in local.iter_686.tape : (i == local.iter_686.tape_ptr ? (b - local.code_687[1] + 256) % 256 : b)] :
      local.code_687[0] == ","
        ? [for i, b in local.iter_686.tape : (i == local.iter_686.tape_ptr ? local.ascii_lookup[substr(local.input_687, 0, 1)] : b)]
        : local.iter_686.tape)

    tape_ptr = (
      local.code_687[0] == "<"
        ? local.iter_686.tape_ptr - local.code_687[1] :
      local.code_687[0] == ">"
        ? local.iter_686.tape_ptr + local.code_687[1]
        : local.iter_686.tape_ptr)

    code_ptr = 2 + (
      local.code_687[0] == "["
        ? local.iter_686.tape[local.iter_686.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_686.code_ptr)] : local.iter_686.code_ptr :
      local.code_687[0] == "]"
        ? local.iter_686.tape[local.iter_686.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_686.code_ptr)] : local.iter_686.code_ptr
        : local.iter_686.code_ptr)

    steps_taken = 1 + local.iter_686.steps_taken
  }
}

locals {
  code_688 = (try(local.iter_687.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_687.code_ptr, local.iter_687.code_ptr + 2)
    : [null])

  input_688 = (local.code_688[0] == ","
    ? substr(local.input_687, local.code_688[1], -1)
    : local.input_687)

  iter_688 = try(local.iter_687.code_ptr >= length(var.code), true) ? local.iter_687 : {
    output = (local.code_688[0] == "."
      ? "${local.iter_687.output}${join("", [for _ in range(local.code_688[1]) : jsondecode(format("\"\\u%04x\"", local.iter_687.tape[local.iter_687.tape_ptr]))])}"
      : local.iter_687.output)
    
    tape = (
      local.code_688[0] == "+"
        ? [for i, b in local.iter_687.tape : (i == local.iter_687.tape_ptr ? (b + local.code_688[1]) % 256 : b)] :
      local.code_688[0] == "-"
        ? [for i, b in local.iter_687.tape : (i == local.iter_687.tape_ptr ? (b - local.code_688[1] + 256) % 256 : b)] :
      local.code_688[0] == ","
        ? [for i, b in local.iter_687.tape : (i == local.iter_687.tape_ptr ? local.ascii_lookup[substr(local.input_688, 0, 1)] : b)]
        : local.iter_687.tape)

    tape_ptr = (
      local.code_688[0] == "<"
        ? local.iter_687.tape_ptr - local.code_688[1] :
      local.code_688[0] == ">"
        ? local.iter_687.tape_ptr + local.code_688[1]
        : local.iter_687.tape_ptr)

    code_ptr = 2 + (
      local.code_688[0] == "["
        ? local.iter_687.tape[local.iter_687.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_687.code_ptr)] : local.iter_687.code_ptr :
      local.code_688[0] == "]"
        ? local.iter_687.tape[local.iter_687.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_687.code_ptr)] : local.iter_687.code_ptr
        : local.iter_687.code_ptr)

    steps_taken = 1 + local.iter_687.steps_taken
  }
}

locals {
  code_689 = (try(local.iter_688.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_688.code_ptr, local.iter_688.code_ptr + 2)
    : [null])

  input_689 = (local.code_689[0] == ","
    ? substr(local.input_688, local.code_689[1], -1)
    : local.input_688)

  iter_689 = try(local.iter_688.code_ptr >= length(var.code), true) ? local.iter_688 : {
    output = (local.code_689[0] == "."
      ? "${local.iter_688.output}${join("", [for _ in range(local.code_689[1]) : jsondecode(format("\"\\u%04x\"", local.iter_688.tape[local.iter_688.tape_ptr]))])}"
      : local.iter_688.output)
    
    tape = (
      local.code_689[0] == "+"
        ? [for i, b in local.iter_688.tape : (i == local.iter_688.tape_ptr ? (b + local.code_689[1]) % 256 : b)] :
      local.code_689[0] == "-"
        ? [for i, b in local.iter_688.tape : (i == local.iter_688.tape_ptr ? (b - local.code_689[1] + 256) % 256 : b)] :
      local.code_689[0] == ","
        ? [for i, b in local.iter_688.tape : (i == local.iter_688.tape_ptr ? local.ascii_lookup[substr(local.input_689, 0, 1)] : b)]
        : local.iter_688.tape)

    tape_ptr = (
      local.code_689[0] == "<"
        ? local.iter_688.tape_ptr - local.code_689[1] :
      local.code_689[0] == ">"
        ? local.iter_688.tape_ptr + local.code_689[1]
        : local.iter_688.tape_ptr)

    code_ptr = 2 + (
      local.code_689[0] == "["
        ? local.iter_688.tape[local.iter_688.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_688.code_ptr)] : local.iter_688.code_ptr :
      local.code_689[0] == "]"
        ? local.iter_688.tape[local.iter_688.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_688.code_ptr)] : local.iter_688.code_ptr
        : local.iter_688.code_ptr)

    steps_taken = 1 + local.iter_688.steps_taken
  }
}

locals {
  code_690 = (try(local.iter_689.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_689.code_ptr, local.iter_689.code_ptr + 2)
    : [null])

  input_690 = (local.code_690[0] == ","
    ? substr(local.input_689, local.code_690[1], -1)
    : local.input_689)

  iter_690 = try(local.iter_689.code_ptr >= length(var.code), true) ? local.iter_689 : {
    output = (local.code_690[0] == "."
      ? "${local.iter_689.output}${join("", [for _ in range(local.code_690[1]) : jsondecode(format("\"\\u%04x\"", local.iter_689.tape[local.iter_689.tape_ptr]))])}"
      : local.iter_689.output)
    
    tape = (
      local.code_690[0] == "+"
        ? [for i, b in local.iter_689.tape : (i == local.iter_689.tape_ptr ? (b + local.code_690[1]) % 256 : b)] :
      local.code_690[0] == "-"
        ? [for i, b in local.iter_689.tape : (i == local.iter_689.tape_ptr ? (b - local.code_690[1] + 256) % 256 : b)] :
      local.code_690[0] == ","
        ? [for i, b in local.iter_689.tape : (i == local.iter_689.tape_ptr ? local.ascii_lookup[substr(local.input_690, 0, 1)] : b)]
        : local.iter_689.tape)

    tape_ptr = (
      local.code_690[0] == "<"
        ? local.iter_689.tape_ptr - local.code_690[1] :
      local.code_690[0] == ">"
        ? local.iter_689.tape_ptr + local.code_690[1]
        : local.iter_689.tape_ptr)

    code_ptr = 2 + (
      local.code_690[0] == "["
        ? local.iter_689.tape[local.iter_689.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_689.code_ptr)] : local.iter_689.code_ptr :
      local.code_690[0] == "]"
        ? local.iter_689.tape[local.iter_689.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_689.code_ptr)] : local.iter_689.code_ptr
        : local.iter_689.code_ptr)

    steps_taken = 1 + local.iter_689.steps_taken
  }
}

locals {
  code_691 = (try(local.iter_690.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_690.code_ptr, local.iter_690.code_ptr + 2)
    : [null])

  input_691 = (local.code_691[0] == ","
    ? substr(local.input_690, local.code_691[1], -1)
    : local.input_690)

  iter_691 = try(local.iter_690.code_ptr >= length(var.code), true) ? local.iter_690 : {
    output = (local.code_691[0] == "."
      ? "${local.iter_690.output}${join("", [for _ in range(local.code_691[1]) : jsondecode(format("\"\\u%04x\"", local.iter_690.tape[local.iter_690.tape_ptr]))])}"
      : local.iter_690.output)
    
    tape = (
      local.code_691[0] == "+"
        ? [for i, b in local.iter_690.tape : (i == local.iter_690.tape_ptr ? (b + local.code_691[1]) % 256 : b)] :
      local.code_691[0] == "-"
        ? [for i, b in local.iter_690.tape : (i == local.iter_690.tape_ptr ? (b - local.code_691[1] + 256) % 256 : b)] :
      local.code_691[0] == ","
        ? [for i, b in local.iter_690.tape : (i == local.iter_690.tape_ptr ? local.ascii_lookup[substr(local.input_691, 0, 1)] : b)]
        : local.iter_690.tape)

    tape_ptr = (
      local.code_691[0] == "<"
        ? local.iter_690.tape_ptr - local.code_691[1] :
      local.code_691[0] == ">"
        ? local.iter_690.tape_ptr + local.code_691[1]
        : local.iter_690.tape_ptr)

    code_ptr = 2 + (
      local.code_691[0] == "["
        ? local.iter_690.tape[local.iter_690.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_690.code_ptr)] : local.iter_690.code_ptr :
      local.code_691[0] == "]"
        ? local.iter_690.tape[local.iter_690.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_690.code_ptr)] : local.iter_690.code_ptr
        : local.iter_690.code_ptr)

    steps_taken = 1 + local.iter_690.steps_taken
  }
}

locals {
  code_692 = (try(local.iter_691.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_691.code_ptr, local.iter_691.code_ptr + 2)
    : [null])

  input_692 = (local.code_692[0] == ","
    ? substr(local.input_691, local.code_692[1], -1)
    : local.input_691)

  iter_692 = try(local.iter_691.code_ptr >= length(var.code), true) ? local.iter_691 : {
    output = (local.code_692[0] == "."
      ? "${local.iter_691.output}${join("", [for _ in range(local.code_692[1]) : jsondecode(format("\"\\u%04x\"", local.iter_691.tape[local.iter_691.tape_ptr]))])}"
      : local.iter_691.output)
    
    tape = (
      local.code_692[0] == "+"
        ? [for i, b in local.iter_691.tape : (i == local.iter_691.tape_ptr ? (b + local.code_692[1]) % 256 : b)] :
      local.code_692[0] == "-"
        ? [for i, b in local.iter_691.tape : (i == local.iter_691.tape_ptr ? (b - local.code_692[1] + 256) % 256 : b)] :
      local.code_692[0] == ","
        ? [for i, b in local.iter_691.tape : (i == local.iter_691.tape_ptr ? local.ascii_lookup[substr(local.input_692, 0, 1)] : b)]
        : local.iter_691.tape)

    tape_ptr = (
      local.code_692[0] == "<"
        ? local.iter_691.tape_ptr - local.code_692[1] :
      local.code_692[0] == ">"
        ? local.iter_691.tape_ptr + local.code_692[1]
        : local.iter_691.tape_ptr)

    code_ptr = 2 + (
      local.code_692[0] == "["
        ? local.iter_691.tape[local.iter_691.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_691.code_ptr)] : local.iter_691.code_ptr :
      local.code_692[0] == "]"
        ? local.iter_691.tape[local.iter_691.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_691.code_ptr)] : local.iter_691.code_ptr
        : local.iter_691.code_ptr)

    steps_taken = 1 + local.iter_691.steps_taken
  }
}

locals {
  code_693 = (try(local.iter_692.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_692.code_ptr, local.iter_692.code_ptr + 2)
    : [null])

  input_693 = (local.code_693[0] == ","
    ? substr(local.input_692, local.code_693[1], -1)
    : local.input_692)

  iter_693 = try(local.iter_692.code_ptr >= length(var.code), true) ? local.iter_692 : {
    output = (local.code_693[0] == "."
      ? "${local.iter_692.output}${join("", [for _ in range(local.code_693[1]) : jsondecode(format("\"\\u%04x\"", local.iter_692.tape[local.iter_692.tape_ptr]))])}"
      : local.iter_692.output)
    
    tape = (
      local.code_693[0] == "+"
        ? [for i, b in local.iter_692.tape : (i == local.iter_692.tape_ptr ? (b + local.code_693[1]) % 256 : b)] :
      local.code_693[0] == "-"
        ? [for i, b in local.iter_692.tape : (i == local.iter_692.tape_ptr ? (b - local.code_693[1] + 256) % 256 : b)] :
      local.code_693[0] == ","
        ? [for i, b in local.iter_692.tape : (i == local.iter_692.tape_ptr ? local.ascii_lookup[substr(local.input_693, 0, 1)] : b)]
        : local.iter_692.tape)

    tape_ptr = (
      local.code_693[0] == "<"
        ? local.iter_692.tape_ptr - local.code_693[1] :
      local.code_693[0] == ">"
        ? local.iter_692.tape_ptr + local.code_693[1]
        : local.iter_692.tape_ptr)

    code_ptr = 2 + (
      local.code_693[0] == "["
        ? local.iter_692.tape[local.iter_692.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_692.code_ptr)] : local.iter_692.code_ptr :
      local.code_693[0] == "]"
        ? local.iter_692.tape[local.iter_692.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_692.code_ptr)] : local.iter_692.code_ptr
        : local.iter_692.code_ptr)

    steps_taken = 1 + local.iter_692.steps_taken
  }
}

locals {
  code_694 = (try(local.iter_693.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_693.code_ptr, local.iter_693.code_ptr + 2)
    : [null])

  input_694 = (local.code_694[0] == ","
    ? substr(local.input_693, local.code_694[1], -1)
    : local.input_693)

  iter_694 = try(local.iter_693.code_ptr >= length(var.code), true) ? local.iter_693 : {
    output = (local.code_694[0] == "."
      ? "${local.iter_693.output}${join("", [for _ in range(local.code_694[1]) : jsondecode(format("\"\\u%04x\"", local.iter_693.tape[local.iter_693.tape_ptr]))])}"
      : local.iter_693.output)
    
    tape = (
      local.code_694[0] == "+"
        ? [for i, b in local.iter_693.tape : (i == local.iter_693.tape_ptr ? (b + local.code_694[1]) % 256 : b)] :
      local.code_694[0] == "-"
        ? [for i, b in local.iter_693.tape : (i == local.iter_693.tape_ptr ? (b - local.code_694[1] + 256) % 256 : b)] :
      local.code_694[0] == ","
        ? [for i, b in local.iter_693.tape : (i == local.iter_693.tape_ptr ? local.ascii_lookup[substr(local.input_694, 0, 1)] : b)]
        : local.iter_693.tape)

    tape_ptr = (
      local.code_694[0] == "<"
        ? local.iter_693.tape_ptr - local.code_694[1] :
      local.code_694[0] == ">"
        ? local.iter_693.tape_ptr + local.code_694[1]
        : local.iter_693.tape_ptr)

    code_ptr = 2 + (
      local.code_694[0] == "["
        ? local.iter_693.tape[local.iter_693.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_693.code_ptr)] : local.iter_693.code_ptr :
      local.code_694[0] == "]"
        ? local.iter_693.tape[local.iter_693.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_693.code_ptr)] : local.iter_693.code_ptr
        : local.iter_693.code_ptr)

    steps_taken = 1 + local.iter_693.steps_taken
  }
}

locals {
  code_695 = (try(local.iter_694.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_694.code_ptr, local.iter_694.code_ptr + 2)
    : [null])

  input_695 = (local.code_695[0] == ","
    ? substr(local.input_694, local.code_695[1], -1)
    : local.input_694)

  iter_695 = try(local.iter_694.code_ptr >= length(var.code), true) ? local.iter_694 : {
    output = (local.code_695[0] == "."
      ? "${local.iter_694.output}${join("", [for _ in range(local.code_695[1]) : jsondecode(format("\"\\u%04x\"", local.iter_694.tape[local.iter_694.tape_ptr]))])}"
      : local.iter_694.output)
    
    tape = (
      local.code_695[0] == "+"
        ? [for i, b in local.iter_694.tape : (i == local.iter_694.tape_ptr ? (b + local.code_695[1]) % 256 : b)] :
      local.code_695[0] == "-"
        ? [for i, b in local.iter_694.tape : (i == local.iter_694.tape_ptr ? (b - local.code_695[1] + 256) % 256 : b)] :
      local.code_695[0] == ","
        ? [for i, b in local.iter_694.tape : (i == local.iter_694.tape_ptr ? local.ascii_lookup[substr(local.input_695, 0, 1)] : b)]
        : local.iter_694.tape)

    tape_ptr = (
      local.code_695[0] == "<"
        ? local.iter_694.tape_ptr - local.code_695[1] :
      local.code_695[0] == ">"
        ? local.iter_694.tape_ptr + local.code_695[1]
        : local.iter_694.tape_ptr)

    code_ptr = 2 + (
      local.code_695[0] == "["
        ? local.iter_694.tape[local.iter_694.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_694.code_ptr)] : local.iter_694.code_ptr :
      local.code_695[0] == "]"
        ? local.iter_694.tape[local.iter_694.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_694.code_ptr)] : local.iter_694.code_ptr
        : local.iter_694.code_ptr)

    steps_taken = 1 + local.iter_694.steps_taken
  }
}

locals {
  code_696 = (try(local.iter_695.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_695.code_ptr, local.iter_695.code_ptr + 2)
    : [null])

  input_696 = (local.code_696[0] == ","
    ? substr(local.input_695, local.code_696[1], -1)
    : local.input_695)

  iter_696 = try(local.iter_695.code_ptr >= length(var.code), true) ? local.iter_695 : {
    output = (local.code_696[0] == "."
      ? "${local.iter_695.output}${join("", [for _ in range(local.code_696[1]) : jsondecode(format("\"\\u%04x\"", local.iter_695.tape[local.iter_695.tape_ptr]))])}"
      : local.iter_695.output)
    
    tape = (
      local.code_696[0] == "+"
        ? [for i, b in local.iter_695.tape : (i == local.iter_695.tape_ptr ? (b + local.code_696[1]) % 256 : b)] :
      local.code_696[0] == "-"
        ? [for i, b in local.iter_695.tape : (i == local.iter_695.tape_ptr ? (b - local.code_696[1] + 256) % 256 : b)] :
      local.code_696[0] == ","
        ? [for i, b in local.iter_695.tape : (i == local.iter_695.tape_ptr ? local.ascii_lookup[substr(local.input_696, 0, 1)] : b)]
        : local.iter_695.tape)

    tape_ptr = (
      local.code_696[0] == "<"
        ? local.iter_695.tape_ptr - local.code_696[1] :
      local.code_696[0] == ">"
        ? local.iter_695.tape_ptr + local.code_696[1]
        : local.iter_695.tape_ptr)

    code_ptr = 2 + (
      local.code_696[0] == "["
        ? local.iter_695.tape[local.iter_695.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_695.code_ptr)] : local.iter_695.code_ptr :
      local.code_696[0] == "]"
        ? local.iter_695.tape[local.iter_695.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_695.code_ptr)] : local.iter_695.code_ptr
        : local.iter_695.code_ptr)

    steps_taken = 1 + local.iter_695.steps_taken
  }
}

locals {
  code_697 = (try(local.iter_696.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_696.code_ptr, local.iter_696.code_ptr + 2)
    : [null])

  input_697 = (local.code_697[0] == ","
    ? substr(local.input_696, local.code_697[1], -1)
    : local.input_696)

  iter_697 = try(local.iter_696.code_ptr >= length(var.code), true) ? local.iter_696 : {
    output = (local.code_697[0] == "."
      ? "${local.iter_696.output}${join("", [for _ in range(local.code_697[1]) : jsondecode(format("\"\\u%04x\"", local.iter_696.tape[local.iter_696.tape_ptr]))])}"
      : local.iter_696.output)
    
    tape = (
      local.code_697[0] == "+"
        ? [for i, b in local.iter_696.tape : (i == local.iter_696.tape_ptr ? (b + local.code_697[1]) % 256 : b)] :
      local.code_697[0] == "-"
        ? [for i, b in local.iter_696.tape : (i == local.iter_696.tape_ptr ? (b - local.code_697[1] + 256) % 256 : b)] :
      local.code_697[0] == ","
        ? [for i, b in local.iter_696.tape : (i == local.iter_696.tape_ptr ? local.ascii_lookup[substr(local.input_697, 0, 1)] : b)]
        : local.iter_696.tape)

    tape_ptr = (
      local.code_697[0] == "<"
        ? local.iter_696.tape_ptr - local.code_697[1] :
      local.code_697[0] == ">"
        ? local.iter_696.tape_ptr + local.code_697[1]
        : local.iter_696.tape_ptr)

    code_ptr = 2 + (
      local.code_697[0] == "["
        ? local.iter_696.tape[local.iter_696.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_696.code_ptr)] : local.iter_696.code_ptr :
      local.code_697[0] == "]"
        ? local.iter_696.tape[local.iter_696.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_696.code_ptr)] : local.iter_696.code_ptr
        : local.iter_696.code_ptr)

    steps_taken = 1 + local.iter_696.steps_taken
  }
}

locals {
  code_698 = (try(local.iter_697.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_697.code_ptr, local.iter_697.code_ptr + 2)
    : [null])

  input_698 = (local.code_698[0] == ","
    ? substr(local.input_697, local.code_698[1], -1)
    : local.input_697)

  iter_698 = try(local.iter_697.code_ptr >= length(var.code), true) ? local.iter_697 : {
    output = (local.code_698[0] == "."
      ? "${local.iter_697.output}${join("", [for _ in range(local.code_698[1]) : jsondecode(format("\"\\u%04x\"", local.iter_697.tape[local.iter_697.tape_ptr]))])}"
      : local.iter_697.output)
    
    tape = (
      local.code_698[0] == "+"
        ? [for i, b in local.iter_697.tape : (i == local.iter_697.tape_ptr ? (b + local.code_698[1]) % 256 : b)] :
      local.code_698[0] == "-"
        ? [for i, b in local.iter_697.tape : (i == local.iter_697.tape_ptr ? (b - local.code_698[1] + 256) % 256 : b)] :
      local.code_698[0] == ","
        ? [for i, b in local.iter_697.tape : (i == local.iter_697.tape_ptr ? local.ascii_lookup[substr(local.input_698, 0, 1)] : b)]
        : local.iter_697.tape)

    tape_ptr = (
      local.code_698[0] == "<"
        ? local.iter_697.tape_ptr - local.code_698[1] :
      local.code_698[0] == ">"
        ? local.iter_697.tape_ptr + local.code_698[1]
        : local.iter_697.tape_ptr)

    code_ptr = 2 + (
      local.code_698[0] == "["
        ? local.iter_697.tape[local.iter_697.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_697.code_ptr)] : local.iter_697.code_ptr :
      local.code_698[0] == "]"
        ? local.iter_697.tape[local.iter_697.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_697.code_ptr)] : local.iter_697.code_ptr
        : local.iter_697.code_ptr)

    steps_taken = 1 + local.iter_697.steps_taken
  }
}

locals {
  code_699 = (try(local.iter_698.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_698.code_ptr, local.iter_698.code_ptr + 2)
    : [null])

  input_699 = (local.code_699[0] == ","
    ? substr(local.input_698, local.code_699[1], -1)
    : local.input_698)

  iter_699 = try(local.iter_698.code_ptr >= length(var.code), true) ? local.iter_698 : {
    output = (local.code_699[0] == "."
      ? "${local.iter_698.output}${join("", [for _ in range(local.code_699[1]) : jsondecode(format("\"\\u%04x\"", local.iter_698.tape[local.iter_698.tape_ptr]))])}"
      : local.iter_698.output)
    
    tape = (
      local.code_699[0] == "+"
        ? [for i, b in local.iter_698.tape : (i == local.iter_698.tape_ptr ? (b + local.code_699[1]) % 256 : b)] :
      local.code_699[0] == "-"
        ? [for i, b in local.iter_698.tape : (i == local.iter_698.tape_ptr ? (b - local.code_699[1] + 256) % 256 : b)] :
      local.code_699[0] == ","
        ? [for i, b in local.iter_698.tape : (i == local.iter_698.tape_ptr ? local.ascii_lookup[substr(local.input_699, 0, 1)] : b)]
        : local.iter_698.tape)

    tape_ptr = (
      local.code_699[0] == "<"
        ? local.iter_698.tape_ptr - local.code_699[1] :
      local.code_699[0] == ">"
        ? local.iter_698.tape_ptr + local.code_699[1]
        : local.iter_698.tape_ptr)

    code_ptr = 2 + (
      local.code_699[0] == "["
        ? local.iter_698.tape[local.iter_698.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_698.code_ptr)] : local.iter_698.code_ptr :
      local.code_699[0] == "]"
        ? local.iter_698.tape[local.iter_698.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_698.code_ptr)] : local.iter_698.code_ptr
        : local.iter_698.code_ptr)

    steps_taken = 1 + local.iter_698.steps_taken
  }
}

locals {
  code_700 = (try(local.iter_699.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_699.code_ptr, local.iter_699.code_ptr + 2)
    : [null])

  input_700 = (local.code_700[0] == ","
    ? substr(local.input_699, local.code_700[1], -1)
    : local.input_699)

  iter_700 = try(local.iter_699.code_ptr >= length(var.code), true) ? local.iter_699 : {
    output = (local.code_700[0] == "."
      ? "${local.iter_699.output}${join("", [for _ in range(local.code_700[1]) : jsondecode(format("\"\\u%04x\"", local.iter_699.tape[local.iter_699.tape_ptr]))])}"
      : local.iter_699.output)
    
    tape = (
      local.code_700[0] == "+"
        ? [for i, b in local.iter_699.tape : (i == local.iter_699.tape_ptr ? (b + local.code_700[1]) % 256 : b)] :
      local.code_700[0] == "-"
        ? [for i, b in local.iter_699.tape : (i == local.iter_699.tape_ptr ? (b - local.code_700[1] + 256) % 256 : b)] :
      local.code_700[0] == ","
        ? [for i, b in local.iter_699.tape : (i == local.iter_699.tape_ptr ? local.ascii_lookup[substr(local.input_700, 0, 1)] : b)]
        : local.iter_699.tape)

    tape_ptr = (
      local.code_700[0] == "<"
        ? local.iter_699.tape_ptr - local.code_700[1] :
      local.code_700[0] == ">"
        ? local.iter_699.tape_ptr + local.code_700[1]
        : local.iter_699.tape_ptr)

    code_ptr = 2 + (
      local.code_700[0] == "["
        ? local.iter_699.tape[local.iter_699.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_699.code_ptr)] : local.iter_699.code_ptr :
      local.code_700[0] == "]"
        ? local.iter_699.tape[local.iter_699.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_699.code_ptr)] : local.iter_699.code_ptr
        : local.iter_699.code_ptr)

    steps_taken = 1 + local.iter_699.steps_taken
  }
}

locals {
  code_701 = (try(local.iter_700.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_700.code_ptr, local.iter_700.code_ptr + 2)
    : [null])

  input_701 = (local.code_701[0] == ","
    ? substr(local.input_700, local.code_701[1], -1)
    : local.input_700)

  iter_701 = try(local.iter_700.code_ptr >= length(var.code), true) ? local.iter_700 : {
    output = (local.code_701[0] == "."
      ? "${local.iter_700.output}${join("", [for _ in range(local.code_701[1]) : jsondecode(format("\"\\u%04x\"", local.iter_700.tape[local.iter_700.tape_ptr]))])}"
      : local.iter_700.output)
    
    tape = (
      local.code_701[0] == "+"
        ? [for i, b in local.iter_700.tape : (i == local.iter_700.tape_ptr ? (b + local.code_701[1]) % 256 : b)] :
      local.code_701[0] == "-"
        ? [for i, b in local.iter_700.tape : (i == local.iter_700.tape_ptr ? (b - local.code_701[1] + 256) % 256 : b)] :
      local.code_701[0] == ","
        ? [for i, b in local.iter_700.tape : (i == local.iter_700.tape_ptr ? local.ascii_lookup[substr(local.input_701, 0, 1)] : b)]
        : local.iter_700.tape)

    tape_ptr = (
      local.code_701[0] == "<"
        ? local.iter_700.tape_ptr - local.code_701[1] :
      local.code_701[0] == ">"
        ? local.iter_700.tape_ptr + local.code_701[1]
        : local.iter_700.tape_ptr)

    code_ptr = 2 + (
      local.code_701[0] == "["
        ? local.iter_700.tape[local.iter_700.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_700.code_ptr)] : local.iter_700.code_ptr :
      local.code_701[0] == "]"
        ? local.iter_700.tape[local.iter_700.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_700.code_ptr)] : local.iter_700.code_ptr
        : local.iter_700.code_ptr)

    steps_taken = 1 + local.iter_700.steps_taken
  }
}

locals {
  code_702 = (try(local.iter_701.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_701.code_ptr, local.iter_701.code_ptr + 2)
    : [null])

  input_702 = (local.code_702[0] == ","
    ? substr(local.input_701, local.code_702[1], -1)
    : local.input_701)

  iter_702 = try(local.iter_701.code_ptr >= length(var.code), true) ? local.iter_701 : {
    output = (local.code_702[0] == "."
      ? "${local.iter_701.output}${join("", [for _ in range(local.code_702[1]) : jsondecode(format("\"\\u%04x\"", local.iter_701.tape[local.iter_701.tape_ptr]))])}"
      : local.iter_701.output)
    
    tape = (
      local.code_702[0] == "+"
        ? [for i, b in local.iter_701.tape : (i == local.iter_701.tape_ptr ? (b + local.code_702[1]) % 256 : b)] :
      local.code_702[0] == "-"
        ? [for i, b in local.iter_701.tape : (i == local.iter_701.tape_ptr ? (b - local.code_702[1] + 256) % 256 : b)] :
      local.code_702[0] == ","
        ? [for i, b in local.iter_701.tape : (i == local.iter_701.tape_ptr ? local.ascii_lookup[substr(local.input_702, 0, 1)] : b)]
        : local.iter_701.tape)

    tape_ptr = (
      local.code_702[0] == "<"
        ? local.iter_701.tape_ptr - local.code_702[1] :
      local.code_702[0] == ">"
        ? local.iter_701.tape_ptr + local.code_702[1]
        : local.iter_701.tape_ptr)

    code_ptr = 2 + (
      local.code_702[0] == "["
        ? local.iter_701.tape[local.iter_701.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_701.code_ptr)] : local.iter_701.code_ptr :
      local.code_702[0] == "]"
        ? local.iter_701.tape[local.iter_701.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_701.code_ptr)] : local.iter_701.code_ptr
        : local.iter_701.code_ptr)

    steps_taken = 1 + local.iter_701.steps_taken
  }
}

locals {
  code_703 = (try(local.iter_702.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_702.code_ptr, local.iter_702.code_ptr + 2)
    : [null])

  input_703 = (local.code_703[0] == ","
    ? substr(local.input_702, local.code_703[1], -1)
    : local.input_702)

  iter_703 = try(local.iter_702.code_ptr >= length(var.code), true) ? local.iter_702 : {
    output = (local.code_703[0] == "."
      ? "${local.iter_702.output}${join("", [for _ in range(local.code_703[1]) : jsondecode(format("\"\\u%04x\"", local.iter_702.tape[local.iter_702.tape_ptr]))])}"
      : local.iter_702.output)
    
    tape = (
      local.code_703[0] == "+"
        ? [for i, b in local.iter_702.tape : (i == local.iter_702.tape_ptr ? (b + local.code_703[1]) % 256 : b)] :
      local.code_703[0] == "-"
        ? [for i, b in local.iter_702.tape : (i == local.iter_702.tape_ptr ? (b - local.code_703[1] + 256) % 256 : b)] :
      local.code_703[0] == ","
        ? [for i, b in local.iter_702.tape : (i == local.iter_702.tape_ptr ? local.ascii_lookup[substr(local.input_703, 0, 1)] : b)]
        : local.iter_702.tape)

    tape_ptr = (
      local.code_703[0] == "<"
        ? local.iter_702.tape_ptr - local.code_703[1] :
      local.code_703[0] == ">"
        ? local.iter_702.tape_ptr + local.code_703[1]
        : local.iter_702.tape_ptr)

    code_ptr = 2 + (
      local.code_703[0] == "["
        ? local.iter_702.tape[local.iter_702.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_702.code_ptr)] : local.iter_702.code_ptr :
      local.code_703[0] == "]"
        ? local.iter_702.tape[local.iter_702.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_702.code_ptr)] : local.iter_702.code_ptr
        : local.iter_702.code_ptr)

    steps_taken = 1 + local.iter_702.steps_taken
  }
}

locals {
  code_704 = (try(local.iter_703.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_703.code_ptr, local.iter_703.code_ptr + 2)
    : [null])

  input_704 = (local.code_704[0] == ","
    ? substr(local.input_703, local.code_704[1], -1)
    : local.input_703)

  iter_704 = try(local.iter_703.code_ptr >= length(var.code), true) ? local.iter_703 : {
    output = (local.code_704[0] == "."
      ? "${local.iter_703.output}${join("", [for _ in range(local.code_704[1]) : jsondecode(format("\"\\u%04x\"", local.iter_703.tape[local.iter_703.tape_ptr]))])}"
      : local.iter_703.output)
    
    tape = (
      local.code_704[0] == "+"
        ? [for i, b in local.iter_703.tape : (i == local.iter_703.tape_ptr ? (b + local.code_704[1]) % 256 : b)] :
      local.code_704[0] == "-"
        ? [for i, b in local.iter_703.tape : (i == local.iter_703.tape_ptr ? (b - local.code_704[1] + 256) % 256 : b)] :
      local.code_704[0] == ","
        ? [for i, b in local.iter_703.tape : (i == local.iter_703.tape_ptr ? local.ascii_lookup[substr(local.input_704, 0, 1)] : b)]
        : local.iter_703.tape)

    tape_ptr = (
      local.code_704[0] == "<"
        ? local.iter_703.tape_ptr - local.code_704[1] :
      local.code_704[0] == ">"
        ? local.iter_703.tape_ptr + local.code_704[1]
        : local.iter_703.tape_ptr)

    code_ptr = 2 + (
      local.code_704[0] == "["
        ? local.iter_703.tape[local.iter_703.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_703.code_ptr)] : local.iter_703.code_ptr :
      local.code_704[0] == "]"
        ? local.iter_703.tape[local.iter_703.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_703.code_ptr)] : local.iter_703.code_ptr
        : local.iter_703.code_ptr)

    steps_taken = 1 + local.iter_703.steps_taken
  }
}

locals {
  code_705 = (try(local.iter_704.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_704.code_ptr, local.iter_704.code_ptr + 2)
    : [null])

  input_705 = (local.code_705[0] == ","
    ? substr(local.input_704, local.code_705[1], -1)
    : local.input_704)

  iter_705 = try(local.iter_704.code_ptr >= length(var.code), true) ? local.iter_704 : {
    output = (local.code_705[0] == "."
      ? "${local.iter_704.output}${join("", [for _ in range(local.code_705[1]) : jsondecode(format("\"\\u%04x\"", local.iter_704.tape[local.iter_704.tape_ptr]))])}"
      : local.iter_704.output)
    
    tape = (
      local.code_705[0] == "+"
        ? [for i, b in local.iter_704.tape : (i == local.iter_704.tape_ptr ? (b + local.code_705[1]) % 256 : b)] :
      local.code_705[0] == "-"
        ? [for i, b in local.iter_704.tape : (i == local.iter_704.tape_ptr ? (b - local.code_705[1] + 256) % 256 : b)] :
      local.code_705[0] == ","
        ? [for i, b in local.iter_704.tape : (i == local.iter_704.tape_ptr ? local.ascii_lookup[substr(local.input_705, 0, 1)] : b)]
        : local.iter_704.tape)

    tape_ptr = (
      local.code_705[0] == "<"
        ? local.iter_704.tape_ptr - local.code_705[1] :
      local.code_705[0] == ">"
        ? local.iter_704.tape_ptr + local.code_705[1]
        : local.iter_704.tape_ptr)

    code_ptr = 2 + (
      local.code_705[0] == "["
        ? local.iter_704.tape[local.iter_704.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_704.code_ptr)] : local.iter_704.code_ptr :
      local.code_705[0] == "]"
        ? local.iter_704.tape[local.iter_704.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_704.code_ptr)] : local.iter_704.code_ptr
        : local.iter_704.code_ptr)

    steps_taken = 1 + local.iter_704.steps_taken
  }
}

locals {
  code_706 = (try(local.iter_705.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_705.code_ptr, local.iter_705.code_ptr + 2)
    : [null])

  input_706 = (local.code_706[0] == ","
    ? substr(local.input_705, local.code_706[1], -1)
    : local.input_705)

  iter_706 = try(local.iter_705.code_ptr >= length(var.code), true) ? local.iter_705 : {
    output = (local.code_706[0] == "."
      ? "${local.iter_705.output}${join("", [for _ in range(local.code_706[1]) : jsondecode(format("\"\\u%04x\"", local.iter_705.tape[local.iter_705.tape_ptr]))])}"
      : local.iter_705.output)
    
    tape = (
      local.code_706[0] == "+"
        ? [for i, b in local.iter_705.tape : (i == local.iter_705.tape_ptr ? (b + local.code_706[1]) % 256 : b)] :
      local.code_706[0] == "-"
        ? [for i, b in local.iter_705.tape : (i == local.iter_705.tape_ptr ? (b - local.code_706[1] + 256) % 256 : b)] :
      local.code_706[0] == ","
        ? [for i, b in local.iter_705.tape : (i == local.iter_705.tape_ptr ? local.ascii_lookup[substr(local.input_706, 0, 1)] : b)]
        : local.iter_705.tape)

    tape_ptr = (
      local.code_706[0] == "<"
        ? local.iter_705.tape_ptr - local.code_706[1] :
      local.code_706[0] == ">"
        ? local.iter_705.tape_ptr + local.code_706[1]
        : local.iter_705.tape_ptr)

    code_ptr = 2 + (
      local.code_706[0] == "["
        ? local.iter_705.tape[local.iter_705.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_705.code_ptr)] : local.iter_705.code_ptr :
      local.code_706[0] == "]"
        ? local.iter_705.tape[local.iter_705.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_705.code_ptr)] : local.iter_705.code_ptr
        : local.iter_705.code_ptr)

    steps_taken = 1 + local.iter_705.steps_taken
  }
}

locals {
  code_707 = (try(local.iter_706.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_706.code_ptr, local.iter_706.code_ptr + 2)
    : [null])

  input_707 = (local.code_707[0] == ","
    ? substr(local.input_706, local.code_707[1], -1)
    : local.input_706)

  iter_707 = try(local.iter_706.code_ptr >= length(var.code), true) ? local.iter_706 : {
    output = (local.code_707[0] == "."
      ? "${local.iter_706.output}${join("", [for _ in range(local.code_707[1]) : jsondecode(format("\"\\u%04x\"", local.iter_706.tape[local.iter_706.tape_ptr]))])}"
      : local.iter_706.output)
    
    tape = (
      local.code_707[0] == "+"
        ? [for i, b in local.iter_706.tape : (i == local.iter_706.tape_ptr ? (b + local.code_707[1]) % 256 : b)] :
      local.code_707[0] == "-"
        ? [for i, b in local.iter_706.tape : (i == local.iter_706.tape_ptr ? (b - local.code_707[1] + 256) % 256 : b)] :
      local.code_707[0] == ","
        ? [for i, b in local.iter_706.tape : (i == local.iter_706.tape_ptr ? local.ascii_lookup[substr(local.input_707, 0, 1)] : b)]
        : local.iter_706.tape)

    tape_ptr = (
      local.code_707[0] == "<"
        ? local.iter_706.tape_ptr - local.code_707[1] :
      local.code_707[0] == ">"
        ? local.iter_706.tape_ptr + local.code_707[1]
        : local.iter_706.tape_ptr)

    code_ptr = 2 + (
      local.code_707[0] == "["
        ? local.iter_706.tape[local.iter_706.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_706.code_ptr)] : local.iter_706.code_ptr :
      local.code_707[0] == "]"
        ? local.iter_706.tape[local.iter_706.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_706.code_ptr)] : local.iter_706.code_ptr
        : local.iter_706.code_ptr)

    steps_taken = 1 + local.iter_706.steps_taken
  }
}

locals {
  code_708 = (try(local.iter_707.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_707.code_ptr, local.iter_707.code_ptr + 2)
    : [null])

  input_708 = (local.code_708[0] == ","
    ? substr(local.input_707, local.code_708[1], -1)
    : local.input_707)

  iter_708 = try(local.iter_707.code_ptr >= length(var.code), true) ? local.iter_707 : {
    output = (local.code_708[0] == "."
      ? "${local.iter_707.output}${join("", [for _ in range(local.code_708[1]) : jsondecode(format("\"\\u%04x\"", local.iter_707.tape[local.iter_707.tape_ptr]))])}"
      : local.iter_707.output)
    
    tape = (
      local.code_708[0] == "+"
        ? [for i, b in local.iter_707.tape : (i == local.iter_707.tape_ptr ? (b + local.code_708[1]) % 256 : b)] :
      local.code_708[0] == "-"
        ? [for i, b in local.iter_707.tape : (i == local.iter_707.tape_ptr ? (b - local.code_708[1] + 256) % 256 : b)] :
      local.code_708[0] == ","
        ? [for i, b in local.iter_707.tape : (i == local.iter_707.tape_ptr ? local.ascii_lookup[substr(local.input_708, 0, 1)] : b)]
        : local.iter_707.tape)

    tape_ptr = (
      local.code_708[0] == "<"
        ? local.iter_707.tape_ptr - local.code_708[1] :
      local.code_708[0] == ">"
        ? local.iter_707.tape_ptr + local.code_708[1]
        : local.iter_707.tape_ptr)

    code_ptr = 2 + (
      local.code_708[0] == "["
        ? local.iter_707.tape[local.iter_707.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_707.code_ptr)] : local.iter_707.code_ptr :
      local.code_708[0] == "]"
        ? local.iter_707.tape[local.iter_707.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_707.code_ptr)] : local.iter_707.code_ptr
        : local.iter_707.code_ptr)

    steps_taken = 1 + local.iter_707.steps_taken
  }
}

locals {
  code_709 = (try(local.iter_708.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_708.code_ptr, local.iter_708.code_ptr + 2)
    : [null])

  input_709 = (local.code_709[0] == ","
    ? substr(local.input_708, local.code_709[1], -1)
    : local.input_708)

  iter_709 = try(local.iter_708.code_ptr >= length(var.code), true) ? local.iter_708 : {
    output = (local.code_709[0] == "."
      ? "${local.iter_708.output}${join("", [for _ in range(local.code_709[1]) : jsondecode(format("\"\\u%04x\"", local.iter_708.tape[local.iter_708.tape_ptr]))])}"
      : local.iter_708.output)
    
    tape = (
      local.code_709[0] == "+"
        ? [for i, b in local.iter_708.tape : (i == local.iter_708.tape_ptr ? (b + local.code_709[1]) % 256 : b)] :
      local.code_709[0] == "-"
        ? [for i, b in local.iter_708.tape : (i == local.iter_708.tape_ptr ? (b - local.code_709[1] + 256) % 256 : b)] :
      local.code_709[0] == ","
        ? [for i, b in local.iter_708.tape : (i == local.iter_708.tape_ptr ? local.ascii_lookup[substr(local.input_709, 0, 1)] : b)]
        : local.iter_708.tape)

    tape_ptr = (
      local.code_709[0] == "<"
        ? local.iter_708.tape_ptr - local.code_709[1] :
      local.code_709[0] == ">"
        ? local.iter_708.tape_ptr + local.code_709[1]
        : local.iter_708.tape_ptr)

    code_ptr = 2 + (
      local.code_709[0] == "["
        ? local.iter_708.tape[local.iter_708.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_708.code_ptr)] : local.iter_708.code_ptr :
      local.code_709[0] == "]"
        ? local.iter_708.tape[local.iter_708.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_708.code_ptr)] : local.iter_708.code_ptr
        : local.iter_708.code_ptr)

    steps_taken = 1 + local.iter_708.steps_taken
  }
}

locals {
  code_710 = (try(local.iter_709.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_709.code_ptr, local.iter_709.code_ptr + 2)
    : [null])

  input_710 = (local.code_710[0] == ","
    ? substr(local.input_709, local.code_710[1], -1)
    : local.input_709)

  iter_710 = try(local.iter_709.code_ptr >= length(var.code), true) ? local.iter_709 : {
    output = (local.code_710[0] == "."
      ? "${local.iter_709.output}${join("", [for _ in range(local.code_710[1]) : jsondecode(format("\"\\u%04x\"", local.iter_709.tape[local.iter_709.tape_ptr]))])}"
      : local.iter_709.output)
    
    tape = (
      local.code_710[0] == "+"
        ? [for i, b in local.iter_709.tape : (i == local.iter_709.tape_ptr ? (b + local.code_710[1]) % 256 : b)] :
      local.code_710[0] == "-"
        ? [for i, b in local.iter_709.tape : (i == local.iter_709.tape_ptr ? (b - local.code_710[1] + 256) % 256 : b)] :
      local.code_710[0] == ","
        ? [for i, b in local.iter_709.tape : (i == local.iter_709.tape_ptr ? local.ascii_lookup[substr(local.input_710, 0, 1)] : b)]
        : local.iter_709.tape)

    tape_ptr = (
      local.code_710[0] == "<"
        ? local.iter_709.tape_ptr - local.code_710[1] :
      local.code_710[0] == ">"
        ? local.iter_709.tape_ptr + local.code_710[1]
        : local.iter_709.tape_ptr)

    code_ptr = 2 + (
      local.code_710[0] == "["
        ? local.iter_709.tape[local.iter_709.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_709.code_ptr)] : local.iter_709.code_ptr :
      local.code_710[0] == "]"
        ? local.iter_709.tape[local.iter_709.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_709.code_ptr)] : local.iter_709.code_ptr
        : local.iter_709.code_ptr)

    steps_taken = 1 + local.iter_709.steps_taken
  }
}

locals {
  code_711 = (try(local.iter_710.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_710.code_ptr, local.iter_710.code_ptr + 2)
    : [null])

  input_711 = (local.code_711[0] == ","
    ? substr(local.input_710, local.code_711[1], -1)
    : local.input_710)

  iter_711 = try(local.iter_710.code_ptr >= length(var.code), true) ? local.iter_710 : {
    output = (local.code_711[0] == "."
      ? "${local.iter_710.output}${join("", [for _ in range(local.code_711[1]) : jsondecode(format("\"\\u%04x\"", local.iter_710.tape[local.iter_710.tape_ptr]))])}"
      : local.iter_710.output)
    
    tape = (
      local.code_711[0] == "+"
        ? [for i, b in local.iter_710.tape : (i == local.iter_710.tape_ptr ? (b + local.code_711[1]) % 256 : b)] :
      local.code_711[0] == "-"
        ? [for i, b in local.iter_710.tape : (i == local.iter_710.tape_ptr ? (b - local.code_711[1] + 256) % 256 : b)] :
      local.code_711[0] == ","
        ? [for i, b in local.iter_710.tape : (i == local.iter_710.tape_ptr ? local.ascii_lookup[substr(local.input_711, 0, 1)] : b)]
        : local.iter_710.tape)

    tape_ptr = (
      local.code_711[0] == "<"
        ? local.iter_710.tape_ptr - local.code_711[1] :
      local.code_711[0] == ">"
        ? local.iter_710.tape_ptr + local.code_711[1]
        : local.iter_710.tape_ptr)

    code_ptr = 2 + (
      local.code_711[0] == "["
        ? local.iter_710.tape[local.iter_710.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_710.code_ptr)] : local.iter_710.code_ptr :
      local.code_711[0] == "]"
        ? local.iter_710.tape[local.iter_710.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_710.code_ptr)] : local.iter_710.code_ptr
        : local.iter_710.code_ptr)

    steps_taken = 1 + local.iter_710.steps_taken
  }
}

locals {
  code_712 = (try(local.iter_711.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_711.code_ptr, local.iter_711.code_ptr + 2)
    : [null])

  input_712 = (local.code_712[0] == ","
    ? substr(local.input_711, local.code_712[1], -1)
    : local.input_711)

  iter_712 = try(local.iter_711.code_ptr >= length(var.code), true) ? local.iter_711 : {
    output = (local.code_712[0] == "."
      ? "${local.iter_711.output}${join("", [for _ in range(local.code_712[1]) : jsondecode(format("\"\\u%04x\"", local.iter_711.tape[local.iter_711.tape_ptr]))])}"
      : local.iter_711.output)
    
    tape = (
      local.code_712[0] == "+"
        ? [for i, b in local.iter_711.tape : (i == local.iter_711.tape_ptr ? (b + local.code_712[1]) % 256 : b)] :
      local.code_712[0] == "-"
        ? [for i, b in local.iter_711.tape : (i == local.iter_711.tape_ptr ? (b - local.code_712[1] + 256) % 256 : b)] :
      local.code_712[0] == ","
        ? [for i, b in local.iter_711.tape : (i == local.iter_711.tape_ptr ? local.ascii_lookup[substr(local.input_712, 0, 1)] : b)]
        : local.iter_711.tape)

    tape_ptr = (
      local.code_712[0] == "<"
        ? local.iter_711.tape_ptr - local.code_712[1] :
      local.code_712[0] == ">"
        ? local.iter_711.tape_ptr + local.code_712[1]
        : local.iter_711.tape_ptr)

    code_ptr = 2 + (
      local.code_712[0] == "["
        ? local.iter_711.tape[local.iter_711.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_711.code_ptr)] : local.iter_711.code_ptr :
      local.code_712[0] == "]"
        ? local.iter_711.tape[local.iter_711.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_711.code_ptr)] : local.iter_711.code_ptr
        : local.iter_711.code_ptr)

    steps_taken = 1 + local.iter_711.steps_taken
  }
}

locals {
  code_713 = (try(local.iter_712.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_712.code_ptr, local.iter_712.code_ptr + 2)
    : [null])

  input_713 = (local.code_713[0] == ","
    ? substr(local.input_712, local.code_713[1], -1)
    : local.input_712)

  iter_713 = try(local.iter_712.code_ptr >= length(var.code), true) ? local.iter_712 : {
    output = (local.code_713[0] == "."
      ? "${local.iter_712.output}${join("", [for _ in range(local.code_713[1]) : jsondecode(format("\"\\u%04x\"", local.iter_712.tape[local.iter_712.tape_ptr]))])}"
      : local.iter_712.output)
    
    tape = (
      local.code_713[0] == "+"
        ? [for i, b in local.iter_712.tape : (i == local.iter_712.tape_ptr ? (b + local.code_713[1]) % 256 : b)] :
      local.code_713[0] == "-"
        ? [for i, b in local.iter_712.tape : (i == local.iter_712.tape_ptr ? (b - local.code_713[1] + 256) % 256 : b)] :
      local.code_713[0] == ","
        ? [for i, b in local.iter_712.tape : (i == local.iter_712.tape_ptr ? local.ascii_lookup[substr(local.input_713, 0, 1)] : b)]
        : local.iter_712.tape)

    tape_ptr = (
      local.code_713[0] == "<"
        ? local.iter_712.tape_ptr - local.code_713[1] :
      local.code_713[0] == ">"
        ? local.iter_712.tape_ptr + local.code_713[1]
        : local.iter_712.tape_ptr)

    code_ptr = 2 + (
      local.code_713[0] == "["
        ? local.iter_712.tape[local.iter_712.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_712.code_ptr)] : local.iter_712.code_ptr :
      local.code_713[0] == "]"
        ? local.iter_712.tape[local.iter_712.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_712.code_ptr)] : local.iter_712.code_ptr
        : local.iter_712.code_ptr)

    steps_taken = 1 + local.iter_712.steps_taken
  }
}

locals {
  code_714 = (try(local.iter_713.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_713.code_ptr, local.iter_713.code_ptr + 2)
    : [null])

  input_714 = (local.code_714[0] == ","
    ? substr(local.input_713, local.code_714[1], -1)
    : local.input_713)

  iter_714 = try(local.iter_713.code_ptr >= length(var.code), true) ? local.iter_713 : {
    output = (local.code_714[0] == "."
      ? "${local.iter_713.output}${join("", [for _ in range(local.code_714[1]) : jsondecode(format("\"\\u%04x\"", local.iter_713.tape[local.iter_713.tape_ptr]))])}"
      : local.iter_713.output)
    
    tape = (
      local.code_714[0] == "+"
        ? [for i, b in local.iter_713.tape : (i == local.iter_713.tape_ptr ? (b + local.code_714[1]) % 256 : b)] :
      local.code_714[0] == "-"
        ? [for i, b in local.iter_713.tape : (i == local.iter_713.tape_ptr ? (b - local.code_714[1] + 256) % 256 : b)] :
      local.code_714[0] == ","
        ? [for i, b in local.iter_713.tape : (i == local.iter_713.tape_ptr ? local.ascii_lookup[substr(local.input_714, 0, 1)] : b)]
        : local.iter_713.tape)

    tape_ptr = (
      local.code_714[0] == "<"
        ? local.iter_713.tape_ptr - local.code_714[1] :
      local.code_714[0] == ">"
        ? local.iter_713.tape_ptr + local.code_714[1]
        : local.iter_713.tape_ptr)

    code_ptr = 2 + (
      local.code_714[0] == "["
        ? local.iter_713.tape[local.iter_713.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_713.code_ptr)] : local.iter_713.code_ptr :
      local.code_714[0] == "]"
        ? local.iter_713.tape[local.iter_713.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_713.code_ptr)] : local.iter_713.code_ptr
        : local.iter_713.code_ptr)

    steps_taken = 1 + local.iter_713.steps_taken
  }
}

locals {
  code_715 = (try(local.iter_714.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_714.code_ptr, local.iter_714.code_ptr + 2)
    : [null])

  input_715 = (local.code_715[0] == ","
    ? substr(local.input_714, local.code_715[1], -1)
    : local.input_714)

  iter_715 = try(local.iter_714.code_ptr >= length(var.code), true) ? local.iter_714 : {
    output = (local.code_715[0] == "."
      ? "${local.iter_714.output}${join("", [for _ in range(local.code_715[1]) : jsondecode(format("\"\\u%04x\"", local.iter_714.tape[local.iter_714.tape_ptr]))])}"
      : local.iter_714.output)
    
    tape = (
      local.code_715[0] == "+"
        ? [for i, b in local.iter_714.tape : (i == local.iter_714.tape_ptr ? (b + local.code_715[1]) % 256 : b)] :
      local.code_715[0] == "-"
        ? [for i, b in local.iter_714.tape : (i == local.iter_714.tape_ptr ? (b - local.code_715[1] + 256) % 256 : b)] :
      local.code_715[0] == ","
        ? [for i, b in local.iter_714.tape : (i == local.iter_714.tape_ptr ? local.ascii_lookup[substr(local.input_715, 0, 1)] : b)]
        : local.iter_714.tape)

    tape_ptr = (
      local.code_715[0] == "<"
        ? local.iter_714.tape_ptr - local.code_715[1] :
      local.code_715[0] == ">"
        ? local.iter_714.tape_ptr + local.code_715[1]
        : local.iter_714.tape_ptr)

    code_ptr = 2 + (
      local.code_715[0] == "["
        ? local.iter_714.tape[local.iter_714.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_714.code_ptr)] : local.iter_714.code_ptr :
      local.code_715[0] == "]"
        ? local.iter_714.tape[local.iter_714.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_714.code_ptr)] : local.iter_714.code_ptr
        : local.iter_714.code_ptr)

    steps_taken = 1 + local.iter_714.steps_taken
  }
}

locals {
  code_716 = (try(local.iter_715.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_715.code_ptr, local.iter_715.code_ptr + 2)
    : [null])

  input_716 = (local.code_716[0] == ","
    ? substr(local.input_715, local.code_716[1], -1)
    : local.input_715)

  iter_716 = try(local.iter_715.code_ptr >= length(var.code), true) ? local.iter_715 : {
    output = (local.code_716[0] == "."
      ? "${local.iter_715.output}${join("", [for _ in range(local.code_716[1]) : jsondecode(format("\"\\u%04x\"", local.iter_715.tape[local.iter_715.tape_ptr]))])}"
      : local.iter_715.output)
    
    tape = (
      local.code_716[0] == "+"
        ? [for i, b in local.iter_715.tape : (i == local.iter_715.tape_ptr ? (b + local.code_716[1]) % 256 : b)] :
      local.code_716[0] == "-"
        ? [for i, b in local.iter_715.tape : (i == local.iter_715.tape_ptr ? (b - local.code_716[1] + 256) % 256 : b)] :
      local.code_716[0] == ","
        ? [for i, b in local.iter_715.tape : (i == local.iter_715.tape_ptr ? local.ascii_lookup[substr(local.input_716, 0, 1)] : b)]
        : local.iter_715.tape)

    tape_ptr = (
      local.code_716[0] == "<"
        ? local.iter_715.tape_ptr - local.code_716[1] :
      local.code_716[0] == ">"
        ? local.iter_715.tape_ptr + local.code_716[1]
        : local.iter_715.tape_ptr)

    code_ptr = 2 + (
      local.code_716[0] == "["
        ? local.iter_715.tape[local.iter_715.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_715.code_ptr)] : local.iter_715.code_ptr :
      local.code_716[0] == "]"
        ? local.iter_715.tape[local.iter_715.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_715.code_ptr)] : local.iter_715.code_ptr
        : local.iter_715.code_ptr)

    steps_taken = 1 + local.iter_715.steps_taken
  }
}

locals {
  code_717 = (try(local.iter_716.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_716.code_ptr, local.iter_716.code_ptr + 2)
    : [null])

  input_717 = (local.code_717[0] == ","
    ? substr(local.input_716, local.code_717[1], -1)
    : local.input_716)

  iter_717 = try(local.iter_716.code_ptr >= length(var.code), true) ? local.iter_716 : {
    output = (local.code_717[0] == "."
      ? "${local.iter_716.output}${join("", [for _ in range(local.code_717[1]) : jsondecode(format("\"\\u%04x\"", local.iter_716.tape[local.iter_716.tape_ptr]))])}"
      : local.iter_716.output)
    
    tape = (
      local.code_717[0] == "+"
        ? [for i, b in local.iter_716.tape : (i == local.iter_716.tape_ptr ? (b + local.code_717[1]) % 256 : b)] :
      local.code_717[0] == "-"
        ? [for i, b in local.iter_716.tape : (i == local.iter_716.tape_ptr ? (b - local.code_717[1] + 256) % 256 : b)] :
      local.code_717[0] == ","
        ? [for i, b in local.iter_716.tape : (i == local.iter_716.tape_ptr ? local.ascii_lookup[substr(local.input_717, 0, 1)] : b)]
        : local.iter_716.tape)

    tape_ptr = (
      local.code_717[0] == "<"
        ? local.iter_716.tape_ptr - local.code_717[1] :
      local.code_717[0] == ">"
        ? local.iter_716.tape_ptr + local.code_717[1]
        : local.iter_716.tape_ptr)

    code_ptr = 2 + (
      local.code_717[0] == "["
        ? local.iter_716.tape[local.iter_716.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_716.code_ptr)] : local.iter_716.code_ptr :
      local.code_717[0] == "]"
        ? local.iter_716.tape[local.iter_716.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_716.code_ptr)] : local.iter_716.code_ptr
        : local.iter_716.code_ptr)

    steps_taken = 1 + local.iter_716.steps_taken
  }
}

locals {
  code_718 = (try(local.iter_717.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_717.code_ptr, local.iter_717.code_ptr + 2)
    : [null])

  input_718 = (local.code_718[0] == ","
    ? substr(local.input_717, local.code_718[1], -1)
    : local.input_717)

  iter_718 = try(local.iter_717.code_ptr >= length(var.code), true) ? local.iter_717 : {
    output = (local.code_718[0] == "."
      ? "${local.iter_717.output}${join("", [for _ in range(local.code_718[1]) : jsondecode(format("\"\\u%04x\"", local.iter_717.tape[local.iter_717.tape_ptr]))])}"
      : local.iter_717.output)
    
    tape = (
      local.code_718[0] == "+"
        ? [for i, b in local.iter_717.tape : (i == local.iter_717.tape_ptr ? (b + local.code_718[1]) % 256 : b)] :
      local.code_718[0] == "-"
        ? [for i, b in local.iter_717.tape : (i == local.iter_717.tape_ptr ? (b - local.code_718[1] + 256) % 256 : b)] :
      local.code_718[0] == ","
        ? [for i, b in local.iter_717.tape : (i == local.iter_717.tape_ptr ? local.ascii_lookup[substr(local.input_718, 0, 1)] : b)]
        : local.iter_717.tape)

    tape_ptr = (
      local.code_718[0] == "<"
        ? local.iter_717.tape_ptr - local.code_718[1] :
      local.code_718[0] == ">"
        ? local.iter_717.tape_ptr + local.code_718[1]
        : local.iter_717.tape_ptr)

    code_ptr = 2 + (
      local.code_718[0] == "["
        ? local.iter_717.tape[local.iter_717.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_717.code_ptr)] : local.iter_717.code_ptr :
      local.code_718[0] == "]"
        ? local.iter_717.tape[local.iter_717.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_717.code_ptr)] : local.iter_717.code_ptr
        : local.iter_717.code_ptr)

    steps_taken = 1 + local.iter_717.steps_taken
  }
}

locals {
  code_719 = (try(local.iter_718.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_718.code_ptr, local.iter_718.code_ptr + 2)
    : [null])

  input_719 = (local.code_719[0] == ","
    ? substr(local.input_718, local.code_719[1], -1)
    : local.input_718)

  iter_719 = try(local.iter_718.code_ptr >= length(var.code), true) ? local.iter_718 : {
    output = (local.code_719[0] == "."
      ? "${local.iter_718.output}${join("", [for _ in range(local.code_719[1]) : jsondecode(format("\"\\u%04x\"", local.iter_718.tape[local.iter_718.tape_ptr]))])}"
      : local.iter_718.output)
    
    tape = (
      local.code_719[0] == "+"
        ? [for i, b in local.iter_718.tape : (i == local.iter_718.tape_ptr ? (b + local.code_719[1]) % 256 : b)] :
      local.code_719[0] == "-"
        ? [for i, b in local.iter_718.tape : (i == local.iter_718.tape_ptr ? (b - local.code_719[1] + 256) % 256 : b)] :
      local.code_719[0] == ","
        ? [for i, b in local.iter_718.tape : (i == local.iter_718.tape_ptr ? local.ascii_lookup[substr(local.input_719, 0, 1)] : b)]
        : local.iter_718.tape)

    tape_ptr = (
      local.code_719[0] == "<"
        ? local.iter_718.tape_ptr - local.code_719[1] :
      local.code_719[0] == ">"
        ? local.iter_718.tape_ptr + local.code_719[1]
        : local.iter_718.tape_ptr)

    code_ptr = 2 + (
      local.code_719[0] == "["
        ? local.iter_718.tape[local.iter_718.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_718.code_ptr)] : local.iter_718.code_ptr :
      local.code_719[0] == "]"
        ? local.iter_718.tape[local.iter_718.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_718.code_ptr)] : local.iter_718.code_ptr
        : local.iter_718.code_ptr)

    steps_taken = 1 + local.iter_718.steps_taken
  }
}

locals {
  code_720 = (try(local.iter_719.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_719.code_ptr, local.iter_719.code_ptr + 2)
    : [null])

  input_720 = (local.code_720[0] == ","
    ? substr(local.input_719, local.code_720[1], -1)
    : local.input_719)

  iter_720 = try(local.iter_719.code_ptr >= length(var.code), true) ? local.iter_719 : {
    output = (local.code_720[0] == "."
      ? "${local.iter_719.output}${join("", [for _ in range(local.code_720[1]) : jsondecode(format("\"\\u%04x\"", local.iter_719.tape[local.iter_719.tape_ptr]))])}"
      : local.iter_719.output)
    
    tape = (
      local.code_720[0] == "+"
        ? [for i, b in local.iter_719.tape : (i == local.iter_719.tape_ptr ? (b + local.code_720[1]) % 256 : b)] :
      local.code_720[0] == "-"
        ? [for i, b in local.iter_719.tape : (i == local.iter_719.tape_ptr ? (b - local.code_720[1] + 256) % 256 : b)] :
      local.code_720[0] == ","
        ? [for i, b in local.iter_719.tape : (i == local.iter_719.tape_ptr ? local.ascii_lookup[substr(local.input_720, 0, 1)] : b)]
        : local.iter_719.tape)

    tape_ptr = (
      local.code_720[0] == "<"
        ? local.iter_719.tape_ptr - local.code_720[1] :
      local.code_720[0] == ">"
        ? local.iter_719.tape_ptr + local.code_720[1]
        : local.iter_719.tape_ptr)

    code_ptr = 2 + (
      local.code_720[0] == "["
        ? local.iter_719.tape[local.iter_719.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_719.code_ptr)] : local.iter_719.code_ptr :
      local.code_720[0] == "]"
        ? local.iter_719.tape[local.iter_719.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_719.code_ptr)] : local.iter_719.code_ptr
        : local.iter_719.code_ptr)

    steps_taken = 1 + local.iter_719.steps_taken
  }
}

locals {
  code_721 = (try(local.iter_720.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_720.code_ptr, local.iter_720.code_ptr + 2)
    : [null])

  input_721 = (local.code_721[0] == ","
    ? substr(local.input_720, local.code_721[1], -1)
    : local.input_720)

  iter_721 = try(local.iter_720.code_ptr >= length(var.code), true) ? local.iter_720 : {
    output = (local.code_721[0] == "."
      ? "${local.iter_720.output}${join("", [for _ in range(local.code_721[1]) : jsondecode(format("\"\\u%04x\"", local.iter_720.tape[local.iter_720.tape_ptr]))])}"
      : local.iter_720.output)
    
    tape = (
      local.code_721[0] == "+"
        ? [for i, b in local.iter_720.tape : (i == local.iter_720.tape_ptr ? (b + local.code_721[1]) % 256 : b)] :
      local.code_721[0] == "-"
        ? [for i, b in local.iter_720.tape : (i == local.iter_720.tape_ptr ? (b - local.code_721[1] + 256) % 256 : b)] :
      local.code_721[0] == ","
        ? [for i, b in local.iter_720.tape : (i == local.iter_720.tape_ptr ? local.ascii_lookup[substr(local.input_721, 0, 1)] : b)]
        : local.iter_720.tape)

    tape_ptr = (
      local.code_721[0] == "<"
        ? local.iter_720.tape_ptr - local.code_721[1] :
      local.code_721[0] == ">"
        ? local.iter_720.tape_ptr + local.code_721[1]
        : local.iter_720.tape_ptr)

    code_ptr = 2 + (
      local.code_721[0] == "["
        ? local.iter_720.tape[local.iter_720.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_720.code_ptr)] : local.iter_720.code_ptr :
      local.code_721[0] == "]"
        ? local.iter_720.tape[local.iter_720.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_720.code_ptr)] : local.iter_720.code_ptr
        : local.iter_720.code_ptr)

    steps_taken = 1 + local.iter_720.steps_taken
  }
}

locals {
  code_722 = (try(local.iter_721.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_721.code_ptr, local.iter_721.code_ptr + 2)
    : [null])

  input_722 = (local.code_722[0] == ","
    ? substr(local.input_721, local.code_722[1], -1)
    : local.input_721)

  iter_722 = try(local.iter_721.code_ptr >= length(var.code), true) ? local.iter_721 : {
    output = (local.code_722[0] == "."
      ? "${local.iter_721.output}${join("", [for _ in range(local.code_722[1]) : jsondecode(format("\"\\u%04x\"", local.iter_721.tape[local.iter_721.tape_ptr]))])}"
      : local.iter_721.output)
    
    tape = (
      local.code_722[0] == "+"
        ? [for i, b in local.iter_721.tape : (i == local.iter_721.tape_ptr ? (b + local.code_722[1]) % 256 : b)] :
      local.code_722[0] == "-"
        ? [for i, b in local.iter_721.tape : (i == local.iter_721.tape_ptr ? (b - local.code_722[1] + 256) % 256 : b)] :
      local.code_722[0] == ","
        ? [for i, b in local.iter_721.tape : (i == local.iter_721.tape_ptr ? local.ascii_lookup[substr(local.input_722, 0, 1)] : b)]
        : local.iter_721.tape)

    tape_ptr = (
      local.code_722[0] == "<"
        ? local.iter_721.tape_ptr - local.code_722[1] :
      local.code_722[0] == ">"
        ? local.iter_721.tape_ptr + local.code_722[1]
        : local.iter_721.tape_ptr)

    code_ptr = 2 + (
      local.code_722[0] == "["
        ? local.iter_721.tape[local.iter_721.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_721.code_ptr)] : local.iter_721.code_ptr :
      local.code_722[0] == "]"
        ? local.iter_721.tape[local.iter_721.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_721.code_ptr)] : local.iter_721.code_ptr
        : local.iter_721.code_ptr)

    steps_taken = 1 + local.iter_721.steps_taken
  }
}

locals {
  code_723 = (try(local.iter_722.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_722.code_ptr, local.iter_722.code_ptr + 2)
    : [null])

  input_723 = (local.code_723[0] == ","
    ? substr(local.input_722, local.code_723[1], -1)
    : local.input_722)

  iter_723 = try(local.iter_722.code_ptr >= length(var.code), true) ? local.iter_722 : {
    output = (local.code_723[0] == "."
      ? "${local.iter_722.output}${join("", [for _ in range(local.code_723[1]) : jsondecode(format("\"\\u%04x\"", local.iter_722.tape[local.iter_722.tape_ptr]))])}"
      : local.iter_722.output)
    
    tape = (
      local.code_723[0] == "+"
        ? [for i, b in local.iter_722.tape : (i == local.iter_722.tape_ptr ? (b + local.code_723[1]) % 256 : b)] :
      local.code_723[0] == "-"
        ? [for i, b in local.iter_722.tape : (i == local.iter_722.tape_ptr ? (b - local.code_723[1] + 256) % 256 : b)] :
      local.code_723[0] == ","
        ? [for i, b in local.iter_722.tape : (i == local.iter_722.tape_ptr ? local.ascii_lookup[substr(local.input_723, 0, 1)] : b)]
        : local.iter_722.tape)

    tape_ptr = (
      local.code_723[0] == "<"
        ? local.iter_722.tape_ptr - local.code_723[1] :
      local.code_723[0] == ">"
        ? local.iter_722.tape_ptr + local.code_723[1]
        : local.iter_722.tape_ptr)

    code_ptr = 2 + (
      local.code_723[0] == "["
        ? local.iter_722.tape[local.iter_722.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_722.code_ptr)] : local.iter_722.code_ptr :
      local.code_723[0] == "]"
        ? local.iter_722.tape[local.iter_722.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_722.code_ptr)] : local.iter_722.code_ptr
        : local.iter_722.code_ptr)

    steps_taken = 1 + local.iter_722.steps_taken
  }
}

locals {
  code_724 = (try(local.iter_723.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_723.code_ptr, local.iter_723.code_ptr + 2)
    : [null])

  input_724 = (local.code_724[0] == ","
    ? substr(local.input_723, local.code_724[1], -1)
    : local.input_723)

  iter_724 = try(local.iter_723.code_ptr >= length(var.code), true) ? local.iter_723 : {
    output = (local.code_724[0] == "."
      ? "${local.iter_723.output}${join("", [for _ in range(local.code_724[1]) : jsondecode(format("\"\\u%04x\"", local.iter_723.tape[local.iter_723.tape_ptr]))])}"
      : local.iter_723.output)
    
    tape = (
      local.code_724[0] == "+"
        ? [for i, b in local.iter_723.tape : (i == local.iter_723.tape_ptr ? (b + local.code_724[1]) % 256 : b)] :
      local.code_724[0] == "-"
        ? [for i, b in local.iter_723.tape : (i == local.iter_723.tape_ptr ? (b - local.code_724[1] + 256) % 256 : b)] :
      local.code_724[0] == ","
        ? [for i, b in local.iter_723.tape : (i == local.iter_723.tape_ptr ? local.ascii_lookup[substr(local.input_724, 0, 1)] : b)]
        : local.iter_723.tape)

    tape_ptr = (
      local.code_724[0] == "<"
        ? local.iter_723.tape_ptr - local.code_724[1] :
      local.code_724[0] == ">"
        ? local.iter_723.tape_ptr + local.code_724[1]
        : local.iter_723.tape_ptr)

    code_ptr = 2 + (
      local.code_724[0] == "["
        ? local.iter_723.tape[local.iter_723.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_723.code_ptr)] : local.iter_723.code_ptr :
      local.code_724[0] == "]"
        ? local.iter_723.tape[local.iter_723.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_723.code_ptr)] : local.iter_723.code_ptr
        : local.iter_723.code_ptr)

    steps_taken = 1 + local.iter_723.steps_taken
  }
}

locals {
  code_725 = (try(local.iter_724.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_724.code_ptr, local.iter_724.code_ptr + 2)
    : [null])

  input_725 = (local.code_725[0] == ","
    ? substr(local.input_724, local.code_725[1], -1)
    : local.input_724)

  iter_725 = try(local.iter_724.code_ptr >= length(var.code), true) ? local.iter_724 : {
    output = (local.code_725[0] == "."
      ? "${local.iter_724.output}${join("", [for _ in range(local.code_725[1]) : jsondecode(format("\"\\u%04x\"", local.iter_724.tape[local.iter_724.tape_ptr]))])}"
      : local.iter_724.output)
    
    tape = (
      local.code_725[0] == "+"
        ? [for i, b in local.iter_724.tape : (i == local.iter_724.tape_ptr ? (b + local.code_725[1]) % 256 : b)] :
      local.code_725[0] == "-"
        ? [for i, b in local.iter_724.tape : (i == local.iter_724.tape_ptr ? (b - local.code_725[1] + 256) % 256 : b)] :
      local.code_725[0] == ","
        ? [for i, b in local.iter_724.tape : (i == local.iter_724.tape_ptr ? local.ascii_lookup[substr(local.input_725, 0, 1)] : b)]
        : local.iter_724.tape)

    tape_ptr = (
      local.code_725[0] == "<"
        ? local.iter_724.tape_ptr - local.code_725[1] :
      local.code_725[0] == ">"
        ? local.iter_724.tape_ptr + local.code_725[1]
        : local.iter_724.tape_ptr)

    code_ptr = 2 + (
      local.code_725[0] == "["
        ? local.iter_724.tape[local.iter_724.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_724.code_ptr)] : local.iter_724.code_ptr :
      local.code_725[0] == "]"
        ? local.iter_724.tape[local.iter_724.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_724.code_ptr)] : local.iter_724.code_ptr
        : local.iter_724.code_ptr)

    steps_taken = 1 + local.iter_724.steps_taken
  }
}

locals {
  code_726 = (try(local.iter_725.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_725.code_ptr, local.iter_725.code_ptr + 2)
    : [null])

  input_726 = (local.code_726[0] == ","
    ? substr(local.input_725, local.code_726[1], -1)
    : local.input_725)

  iter_726 = try(local.iter_725.code_ptr >= length(var.code), true) ? local.iter_725 : {
    output = (local.code_726[0] == "."
      ? "${local.iter_725.output}${join("", [for _ in range(local.code_726[1]) : jsondecode(format("\"\\u%04x\"", local.iter_725.tape[local.iter_725.tape_ptr]))])}"
      : local.iter_725.output)
    
    tape = (
      local.code_726[0] == "+"
        ? [for i, b in local.iter_725.tape : (i == local.iter_725.tape_ptr ? (b + local.code_726[1]) % 256 : b)] :
      local.code_726[0] == "-"
        ? [for i, b in local.iter_725.tape : (i == local.iter_725.tape_ptr ? (b - local.code_726[1] + 256) % 256 : b)] :
      local.code_726[0] == ","
        ? [for i, b in local.iter_725.tape : (i == local.iter_725.tape_ptr ? local.ascii_lookup[substr(local.input_726, 0, 1)] : b)]
        : local.iter_725.tape)

    tape_ptr = (
      local.code_726[0] == "<"
        ? local.iter_725.tape_ptr - local.code_726[1] :
      local.code_726[0] == ">"
        ? local.iter_725.tape_ptr + local.code_726[1]
        : local.iter_725.tape_ptr)

    code_ptr = 2 + (
      local.code_726[0] == "["
        ? local.iter_725.tape[local.iter_725.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_725.code_ptr)] : local.iter_725.code_ptr :
      local.code_726[0] == "]"
        ? local.iter_725.tape[local.iter_725.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_725.code_ptr)] : local.iter_725.code_ptr
        : local.iter_725.code_ptr)

    steps_taken = 1 + local.iter_725.steps_taken
  }
}

locals {
  code_727 = (try(local.iter_726.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_726.code_ptr, local.iter_726.code_ptr + 2)
    : [null])

  input_727 = (local.code_727[0] == ","
    ? substr(local.input_726, local.code_727[1], -1)
    : local.input_726)

  iter_727 = try(local.iter_726.code_ptr >= length(var.code), true) ? local.iter_726 : {
    output = (local.code_727[0] == "."
      ? "${local.iter_726.output}${join("", [for _ in range(local.code_727[1]) : jsondecode(format("\"\\u%04x\"", local.iter_726.tape[local.iter_726.tape_ptr]))])}"
      : local.iter_726.output)
    
    tape = (
      local.code_727[0] == "+"
        ? [for i, b in local.iter_726.tape : (i == local.iter_726.tape_ptr ? (b + local.code_727[1]) % 256 : b)] :
      local.code_727[0] == "-"
        ? [for i, b in local.iter_726.tape : (i == local.iter_726.tape_ptr ? (b - local.code_727[1] + 256) % 256 : b)] :
      local.code_727[0] == ","
        ? [for i, b in local.iter_726.tape : (i == local.iter_726.tape_ptr ? local.ascii_lookup[substr(local.input_727, 0, 1)] : b)]
        : local.iter_726.tape)

    tape_ptr = (
      local.code_727[0] == "<"
        ? local.iter_726.tape_ptr - local.code_727[1] :
      local.code_727[0] == ">"
        ? local.iter_726.tape_ptr + local.code_727[1]
        : local.iter_726.tape_ptr)

    code_ptr = 2 + (
      local.code_727[0] == "["
        ? local.iter_726.tape[local.iter_726.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_726.code_ptr)] : local.iter_726.code_ptr :
      local.code_727[0] == "]"
        ? local.iter_726.tape[local.iter_726.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_726.code_ptr)] : local.iter_726.code_ptr
        : local.iter_726.code_ptr)

    steps_taken = 1 + local.iter_726.steps_taken
  }
}

locals {
  code_728 = (try(local.iter_727.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_727.code_ptr, local.iter_727.code_ptr + 2)
    : [null])

  input_728 = (local.code_728[0] == ","
    ? substr(local.input_727, local.code_728[1], -1)
    : local.input_727)

  iter_728 = try(local.iter_727.code_ptr >= length(var.code), true) ? local.iter_727 : {
    output = (local.code_728[0] == "."
      ? "${local.iter_727.output}${join("", [for _ in range(local.code_728[1]) : jsondecode(format("\"\\u%04x\"", local.iter_727.tape[local.iter_727.tape_ptr]))])}"
      : local.iter_727.output)
    
    tape = (
      local.code_728[0] == "+"
        ? [for i, b in local.iter_727.tape : (i == local.iter_727.tape_ptr ? (b + local.code_728[1]) % 256 : b)] :
      local.code_728[0] == "-"
        ? [for i, b in local.iter_727.tape : (i == local.iter_727.tape_ptr ? (b - local.code_728[1] + 256) % 256 : b)] :
      local.code_728[0] == ","
        ? [for i, b in local.iter_727.tape : (i == local.iter_727.tape_ptr ? local.ascii_lookup[substr(local.input_728, 0, 1)] : b)]
        : local.iter_727.tape)

    tape_ptr = (
      local.code_728[0] == "<"
        ? local.iter_727.tape_ptr - local.code_728[1] :
      local.code_728[0] == ">"
        ? local.iter_727.tape_ptr + local.code_728[1]
        : local.iter_727.tape_ptr)

    code_ptr = 2 + (
      local.code_728[0] == "["
        ? local.iter_727.tape[local.iter_727.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_727.code_ptr)] : local.iter_727.code_ptr :
      local.code_728[0] == "]"
        ? local.iter_727.tape[local.iter_727.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_727.code_ptr)] : local.iter_727.code_ptr
        : local.iter_727.code_ptr)

    steps_taken = 1 + local.iter_727.steps_taken
  }
}

locals {
  code_729 = (try(local.iter_728.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_728.code_ptr, local.iter_728.code_ptr + 2)
    : [null])

  input_729 = (local.code_729[0] == ","
    ? substr(local.input_728, local.code_729[1], -1)
    : local.input_728)

  iter_729 = try(local.iter_728.code_ptr >= length(var.code), true) ? local.iter_728 : {
    output = (local.code_729[0] == "."
      ? "${local.iter_728.output}${join("", [for _ in range(local.code_729[1]) : jsondecode(format("\"\\u%04x\"", local.iter_728.tape[local.iter_728.tape_ptr]))])}"
      : local.iter_728.output)
    
    tape = (
      local.code_729[0] == "+"
        ? [for i, b in local.iter_728.tape : (i == local.iter_728.tape_ptr ? (b + local.code_729[1]) % 256 : b)] :
      local.code_729[0] == "-"
        ? [for i, b in local.iter_728.tape : (i == local.iter_728.tape_ptr ? (b - local.code_729[1] + 256) % 256 : b)] :
      local.code_729[0] == ","
        ? [for i, b in local.iter_728.tape : (i == local.iter_728.tape_ptr ? local.ascii_lookup[substr(local.input_729, 0, 1)] : b)]
        : local.iter_728.tape)

    tape_ptr = (
      local.code_729[0] == "<"
        ? local.iter_728.tape_ptr - local.code_729[1] :
      local.code_729[0] == ">"
        ? local.iter_728.tape_ptr + local.code_729[1]
        : local.iter_728.tape_ptr)

    code_ptr = 2 + (
      local.code_729[0] == "["
        ? local.iter_728.tape[local.iter_728.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_728.code_ptr)] : local.iter_728.code_ptr :
      local.code_729[0] == "]"
        ? local.iter_728.tape[local.iter_728.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_728.code_ptr)] : local.iter_728.code_ptr
        : local.iter_728.code_ptr)

    steps_taken = 1 + local.iter_728.steps_taken
  }
}

locals {
  code_730 = (try(local.iter_729.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_729.code_ptr, local.iter_729.code_ptr + 2)
    : [null])

  input_730 = (local.code_730[0] == ","
    ? substr(local.input_729, local.code_730[1], -1)
    : local.input_729)

  iter_730 = try(local.iter_729.code_ptr >= length(var.code), true) ? local.iter_729 : {
    output = (local.code_730[0] == "."
      ? "${local.iter_729.output}${join("", [for _ in range(local.code_730[1]) : jsondecode(format("\"\\u%04x\"", local.iter_729.tape[local.iter_729.tape_ptr]))])}"
      : local.iter_729.output)
    
    tape = (
      local.code_730[0] == "+"
        ? [for i, b in local.iter_729.tape : (i == local.iter_729.tape_ptr ? (b + local.code_730[1]) % 256 : b)] :
      local.code_730[0] == "-"
        ? [for i, b in local.iter_729.tape : (i == local.iter_729.tape_ptr ? (b - local.code_730[1] + 256) % 256 : b)] :
      local.code_730[0] == ","
        ? [for i, b in local.iter_729.tape : (i == local.iter_729.tape_ptr ? local.ascii_lookup[substr(local.input_730, 0, 1)] : b)]
        : local.iter_729.tape)

    tape_ptr = (
      local.code_730[0] == "<"
        ? local.iter_729.tape_ptr - local.code_730[1] :
      local.code_730[0] == ">"
        ? local.iter_729.tape_ptr + local.code_730[1]
        : local.iter_729.tape_ptr)

    code_ptr = 2 + (
      local.code_730[0] == "["
        ? local.iter_729.tape[local.iter_729.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_729.code_ptr)] : local.iter_729.code_ptr :
      local.code_730[0] == "]"
        ? local.iter_729.tape[local.iter_729.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_729.code_ptr)] : local.iter_729.code_ptr
        : local.iter_729.code_ptr)

    steps_taken = 1 + local.iter_729.steps_taken
  }
}

locals {
  code_731 = (try(local.iter_730.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_730.code_ptr, local.iter_730.code_ptr + 2)
    : [null])

  input_731 = (local.code_731[0] == ","
    ? substr(local.input_730, local.code_731[1], -1)
    : local.input_730)

  iter_731 = try(local.iter_730.code_ptr >= length(var.code), true) ? local.iter_730 : {
    output = (local.code_731[0] == "."
      ? "${local.iter_730.output}${join("", [for _ in range(local.code_731[1]) : jsondecode(format("\"\\u%04x\"", local.iter_730.tape[local.iter_730.tape_ptr]))])}"
      : local.iter_730.output)
    
    tape = (
      local.code_731[0] == "+"
        ? [for i, b in local.iter_730.tape : (i == local.iter_730.tape_ptr ? (b + local.code_731[1]) % 256 : b)] :
      local.code_731[0] == "-"
        ? [for i, b in local.iter_730.tape : (i == local.iter_730.tape_ptr ? (b - local.code_731[1] + 256) % 256 : b)] :
      local.code_731[0] == ","
        ? [for i, b in local.iter_730.tape : (i == local.iter_730.tape_ptr ? local.ascii_lookup[substr(local.input_731, 0, 1)] : b)]
        : local.iter_730.tape)

    tape_ptr = (
      local.code_731[0] == "<"
        ? local.iter_730.tape_ptr - local.code_731[1] :
      local.code_731[0] == ">"
        ? local.iter_730.tape_ptr + local.code_731[1]
        : local.iter_730.tape_ptr)

    code_ptr = 2 + (
      local.code_731[0] == "["
        ? local.iter_730.tape[local.iter_730.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_730.code_ptr)] : local.iter_730.code_ptr :
      local.code_731[0] == "]"
        ? local.iter_730.tape[local.iter_730.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_730.code_ptr)] : local.iter_730.code_ptr
        : local.iter_730.code_ptr)

    steps_taken = 1 + local.iter_730.steps_taken
  }
}

locals {
  code_732 = (try(local.iter_731.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_731.code_ptr, local.iter_731.code_ptr + 2)
    : [null])

  input_732 = (local.code_732[0] == ","
    ? substr(local.input_731, local.code_732[1], -1)
    : local.input_731)

  iter_732 = try(local.iter_731.code_ptr >= length(var.code), true) ? local.iter_731 : {
    output = (local.code_732[0] == "."
      ? "${local.iter_731.output}${join("", [for _ in range(local.code_732[1]) : jsondecode(format("\"\\u%04x\"", local.iter_731.tape[local.iter_731.tape_ptr]))])}"
      : local.iter_731.output)
    
    tape = (
      local.code_732[0] == "+"
        ? [for i, b in local.iter_731.tape : (i == local.iter_731.tape_ptr ? (b + local.code_732[1]) % 256 : b)] :
      local.code_732[0] == "-"
        ? [for i, b in local.iter_731.tape : (i == local.iter_731.tape_ptr ? (b - local.code_732[1] + 256) % 256 : b)] :
      local.code_732[0] == ","
        ? [for i, b in local.iter_731.tape : (i == local.iter_731.tape_ptr ? local.ascii_lookup[substr(local.input_732, 0, 1)] : b)]
        : local.iter_731.tape)

    tape_ptr = (
      local.code_732[0] == "<"
        ? local.iter_731.tape_ptr - local.code_732[1] :
      local.code_732[0] == ">"
        ? local.iter_731.tape_ptr + local.code_732[1]
        : local.iter_731.tape_ptr)

    code_ptr = 2 + (
      local.code_732[0] == "["
        ? local.iter_731.tape[local.iter_731.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_731.code_ptr)] : local.iter_731.code_ptr :
      local.code_732[0] == "]"
        ? local.iter_731.tape[local.iter_731.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_731.code_ptr)] : local.iter_731.code_ptr
        : local.iter_731.code_ptr)

    steps_taken = 1 + local.iter_731.steps_taken
  }
}

locals {
  code_733 = (try(local.iter_732.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_732.code_ptr, local.iter_732.code_ptr + 2)
    : [null])

  input_733 = (local.code_733[0] == ","
    ? substr(local.input_732, local.code_733[1], -1)
    : local.input_732)

  iter_733 = try(local.iter_732.code_ptr >= length(var.code), true) ? local.iter_732 : {
    output = (local.code_733[0] == "."
      ? "${local.iter_732.output}${join("", [for _ in range(local.code_733[1]) : jsondecode(format("\"\\u%04x\"", local.iter_732.tape[local.iter_732.tape_ptr]))])}"
      : local.iter_732.output)
    
    tape = (
      local.code_733[0] == "+"
        ? [for i, b in local.iter_732.tape : (i == local.iter_732.tape_ptr ? (b + local.code_733[1]) % 256 : b)] :
      local.code_733[0] == "-"
        ? [for i, b in local.iter_732.tape : (i == local.iter_732.tape_ptr ? (b - local.code_733[1] + 256) % 256 : b)] :
      local.code_733[0] == ","
        ? [for i, b in local.iter_732.tape : (i == local.iter_732.tape_ptr ? local.ascii_lookup[substr(local.input_733, 0, 1)] : b)]
        : local.iter_732.tape)

    tape_ptr = (
      local.code_733[0] == "<"
        ? local.iter_732.tape_ptr - local.code_733[1] :
      local.code_733[0] == ">"
        ? local.iter_732.tape_ptr + local.code_733[1]
        : local.iter_732.tape_ptr)

    code_ptr = 2 + (
      local.code_733[0] == "["
        ? local.iter_732.tape[local.iter_732.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_732.code_ptr)] : local.iter_732.code_ptr :
      local.code_733[0] == "]"
        ? local.iter_732.tape[local.iter_732.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_732.code_ptr)] : local.iter_732.code_ptr
        : local.iter_732.code_ptr)

    steps_taken = 1 + local.iter_732.steps_taken
  }
}

locals {
  code_734 = (try(local.iter_733.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_733.code_ptr, local.iter_733.code_ptr + 2)
    : [null])

  input_734 = (local.code_734[0] == ","
    ? substr(local.input_733, local.code_734[1], -1)
    : local.input_733)

  iter_734 = try(local.iter_733.code_ptr >= length(var.code), true) ? local.iter_733 : {
    output = (local.code_734[0] == "."
      ? "${local.iter_733.output}${join("", [for _ in range(local.code_734[1]) : jsondecode(format("\"\\u%04x\"", local.iter_733.tape[local.iter_733.tape_ptr]))])}"
      : local.iter_733.output)
    
    tape = (
      local.code_734[0] == "+"
        ? [for i, b in local.iter_733.tape : (i == local.iter_733.tape_ptr ? (b + local.code_734[1]) % 256 : b)] :
      local.code_734[0] == "-"
        ? [for i, b in local.iter_733.tape : (i == local.iter_733.tape_ptr ? (b - local.code_734[1] + 256) % 256 : b)] :
      local.code_734[0] == ","
        ? [for i, b in local.iter_733.tape : (i == local.iter_733.tape_ptr ? local.ascii_lookup[substr(local.input_734, 0, 1)] : b)]
        : local.iter_733.tape)

    tape_ptr = (
      local.code_734[0] == "<"
        ? local.iter_733.tape_ptr - local.code_734[1] :
      local.code_734[0] == ">"
        ? local.iter_733.tape_ptr + local.code_734[1]
        : local.iter_733.tape_ptr)

    code_ptr = 2 + (
      local.code_734[0] == "["
        ? local.iter_733.tape[local.iter_733.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_733.code_ptr)] : local.iter_733.code_ptr :
      local.code_734[0] == "]"
        ? local.iter_733.tape[local.iter_733.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_733.code_ptr)] : local.iter_733.code_ptr
        : local.iter_733.code_ptr)

    steps_taken = 1 + local.iter_733.steps_taken
  }
}

locals {
  code_735 = (try(local.iter_734.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_734.code_ptr, local.iter_734.code_ptr + 2)
    : [null])

  input_735 = (local.code_735[0] == ","
    ? substr(local.input_734, local.code_735[1], -1)
    : local.input_734)

  iter_735 = try(local.iter_734.code_ptr >= length(var.code), true) ? local.iter_734 : {
    output = (local.code_735[0] == "."
      ? "${local.iter_734.output}${join("", [for _ in range(local.code_735[1]) : jsondecode(format("\"\\u%04x\"", local.iter_734.tape[local.iter_734.tape_ptr]))])}"
      : local.iter_734.output)
    
    tape = (
      local.code_735[0] == "+"
        ? [for i, b in local.iter_734.tape : (i == local.iter_734.tape_ptr ? (b + local.code_735[1]) % 256 : b)] :
      local.code_735[0] == "-"
        ? [for i, b in local.iter_734.tape : (i == local.iter_734.tape_ptr ? (b - local.code_735[1] + 256) % 256 : b)] :
      local.code_735[0] == ","
        ? [for i, b in local.iter_734.tape : (i == local.iter_734.tape_ptr ? local.ascii_lookup[substr(local.input_735, 0, 1)] : b)]
        : local.iter_734.tape)

    tape_ptr = (
      local.code_735[0] == "<"
        ? local.iter_734.tape_ptr - local.code_735[1] :
      local.code_735[0] == ">"
        ? local.iter_734.tape_ptr + local.code_735[1]
        : local.iter_734.tape_ptr)

    code_ptr = 2 + (
      local.code_735[0] == "["
        ? local.iter_734.tape[local.iter_734.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_734.code_ptr)] : local.iter_734.code_ptr :
      local.code_735[0] == "]"
        ? local.iter_734.tape[local.iter_734.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_734.code_ptr)] : local.iter_734.code_ptr
        : local.iter_734.code_ptr)

    steps_taken = 1 + local.iter_734.steps_taken
  }
}

locals {
  code_736 = (try(local.iter_735.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_735.code_ptr, local.iter_735.code_ptr + 2)
    : [null])

  input_736 = (local.code_736[0] == ","
    ? substr(local.input_735, local.code_736[1], -1)
    : local.input_735)

  iter_736 = try(local.iter_735.code_ptr >= length(var.code), true) ? local.iter_735 : {
    output = (local.code_736[0] == "."
      ? "${local.iter_735.output}${join("", [for _ in range(local.code_736[1]) : jsondecode(format("\"\\u%04x\"", local.iter_735.tape[local.iter_735.tape_ptr]))])}"
      : local.iter_735.output)
    
    tape = (
      local.code_736[0] == "+"
        ? [for i, b in local.iter_735.tape : (i == local.iter_735.tape_ptr ? (b + local.code_736[1]) % 256 : b)] :
      local.code_736[0] == "-"
        ? [for i, b in local.iter_735.tape : (i == local.iter_735.tape_ptr ? (b - local.code_736[1] + 256) % 256 : b)] :
      local.code_736[0] == ","
        ? [for i, b in local.iter_735.tape : (i == local.iter_735.tape_ptr ? local.ascii_lookup[substr(local.input_736, 0, 1)] : b)]
        : local.iter_735.tape)

    tape_ptr = (
      local.code_736[0] == "<"
        ? local.iter_735.tape_ptr - local.code_736[1] :
      local.code_736[0] == ">"
        ? local.iter_735.tape_ptr + local.code_736[1]
        : local.iter_735.tape_ptr)

    code_ptr = 2 + (
      local.code_736[0] == "["
        ? local.iter_735.tape[local.iter_735.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_735.code_ptr)] : local.iter_735.code_ptr :
      local.code_736[0] == "]"
        ? local.iter_735.tape[local.iter_735.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_735.code_ptr)] : local.iter_735.code_ptr
        : local.iter_735.code_ptr)

    steps_taken = 1 + local.iter_735.steps_taken
  }
}

locals {
  code_737 = (try(local.iter_736.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_736.code_ptr, local.iter_736.code_ptr + 2)
    : [null])

  input_737 = (local.code_737[0] == ","
    ? substr(local.input_736, local.code_737[1], -1)
    : local.input_736)

  iter_737 = try(local.iter_736.code_ptr >= length(var.code), true) ? local.iter_736 : {
    output = (local.code_737[0] == "."
      ? "${local.iter_736.output}${join("", [for _ in range(local.code_737[1]) : jsondecode(format("\"\\u%04x\"", local.iter_736.tape[local.iter_736.tape_ptr]))])}"
      : local.iter_736.output)
    
    tape = (
      local.code_737[0] == "+"
        ? [for i, b in local.iter_736.tape : (i == local.iter_736.tape_ptr ? (b + local.code_737[1]) % 256 : b)] :
      local.code_737[0] == "-"
        ? [for i, b in local.iter_736.tape : (i == local.iter_736.tape_ptr ? (b - local.code_737[1] + 256) % 256 : b)] :
      local.code_737[0] == ","
        ? [for i, b in local.iter_736.tape : (i == local.iter_736.tape_ptr ? local.ascii_lookup[substr(local.input_737, 0, 1)] : b)]
        : local.iter_736.tape)

    tape_ptr = (
      local.code_737[0] == "<"
        ? local.iter_736.tape_ptr - local.code_737[1] :
      local.code_737[0] == ">"
        ? local.iter_736.tape_ptr + local.code_737[1]
        : local.iter_736.tape_ptr)

    code_ptr = 2 + (
      local.code_737[0] == "["
        ? local.iter_736.tape[local.iter_736.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_736.code_ptr)] : local.iter_736.code_ptr :
      local.code_737[0] == "]"
        ? local.iter_736.tape[local.iter_736.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_736.code_ptr)] : local.iter_736.code_ptr
        : local.iter_736.code_ptr)

    steps_taken = 1 + local.iter_736.steps_taken
  }
}

locals {
  code_738 = (try(local.iter_737.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_737.code_ptr, local.iter_737.code_ptr + 2)
    : [null])

  input_738 = (local.code_738[0] == ","
    ? substr(local.input_737, local.code_738[1], -1)
    : local.input_737)

  iter_738 = try(local.iter_737.code_ptr >= length(var.code), true) ? local.iter_737 : {
    output = (local.code_738[0] == "."
      ? "${local.iter_737.output}${join("", [for _ in range(local.code_738[1]) : jsondecode(format("\"\\u%04x\"", local.iter_737.tape[local.iter_737.tape_ptr]))])}"
      : local.iter_737.output)
    
    tape = (
      local.code_738[0] == "+"
        ? [for i, b in local.iter_737.tape : (i == local.iter_737.tape_ptr ? (b + local.code_738[1]) % 256 : b)] :
      local.code_738[0] == "-"
        ? [for i, b in local.iter_737.tape : (i == local.iter_737.tape_ptr ? (b - local.code_738[1] + 256) % 256 : b)] :
      local.code_738[0] == ","
        ? [for i, b in local.iter_737.tape : (i == local.iter_737.tape_ptr ? local.ascii_lookup[substr(local.input_738, 0, 1)] : b)]
        : local.iter_737.tape)

    tape_ptr = (
      local.code_738[0] == "<"
        ? local.iter_737.tape_ptr - local.code_738[1] :
      local.code_738[0] == ">"
        ? local.iter_737.tape_ptr + local.code_738[1]
        : local.iter_737.tape_ptr)

    code_ptr = 2 + (
      local.code_738[0] == "["
        ? local.iter_737.tape[local.iter_737.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_737.code_ptr)] : local.iter_737.code_ptr :
      local.code_738[0] == "]"
        ? local.iter_737.tape[local.iter_737.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_737.code_ptr)] : local.iter_737.code_ptr
        : local.iter_737.code_ptr)

    steps_taken = 1 + local.iter_737.steps_taken
  }
}

locals {
  code_739 = (try(local.iter_738.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_738.code_ptr, local.iter_738.code_ptr + 2)
    : [null])

  input_739 = (local.code_739[0] == ","
    ? substr(local.input_738, local.code_739[1], -1)
    : local.input_738)

  iter_739 = try(local.iter_738.code_ptr >= length(var.code), true) ? local.iter_738 : {
    output = (local.code_739[0] == "."
      ? "${local.iter_738.output}${join("", [for _ in range(local.code_739[1]) : jsondecode(format("\"\\u%04x\"", local.iter_738.tape[local.iter_738.tape_ptr]))])}"
      : local.iter_738.output)
    
    tape = (
      local.code_739[0] == "+"
        ? [for i, b in local.iter_738.tape : (i == local.iter_738.tape_ptr ? (b + local.code_739[1]) % 256 : b)] :
      local.code_739[0] == "-"
        ? [for i, b in local.iter_738.tape : (i == local.iter_738.tape_ptr ? (b - local.code_739[1] + 256) % 256 : b)] :
      local.code_739[0] == ","
        ? [for i, b in local.iter_738.tape : (i == local.iter_738.tape_ptr ? local.ascii_lookup[substr(local.input_739, 0, 1)] : b)]
        : local.iter_738.tape)

    tape_ptr = (
      local.code_739[0] == "<"
        ? local.iter_738.tape_ptr - local.code_739[1] :
      local.code_739[0] == ">"
        ? local.iter_738.tape_ptr + local.code_739[1]
        : local.iter_738.tape_ptr)

    code_ptr = 2 + (
      local.code_739[0] == "["
        ? local.iter_738.tape[local.iter_738.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_738.code_ptr)] : local.iter_738.code_ptr :
      local.code_739[0] == "]"
        ? local.iter_738.tape[local.iter_738.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_738.code_ptr)] : local.iter_738.code_ptr
        : local.iter_738.code_ptr)

    steps_taken = 1 + local.iter_738.steps_taken
  }
}

locals {
  code_740 = (try(local.iter_739.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_739.code_ptr, local.iter_739.code_ptr + 2)
    : [null])

  input_740 = (local.code_740[0] == ","
    ? substr(local.input_739, local.code_740[1], -1)
    : local.input_739)

  iter_740 = try(local.iter_739.code_ptr >= length(var.code), true) ? local.iter_739 : {
    output = (local.code_740[0] == "."
      ? "${local.iter_739.output}${join("", [for _ in range(local.code_740[1]) : jsondecode(format("\"\\u%04x\"", local.iter_739.tape[local.iter_739.tape_ptr]))])}"
      : local.iter_739.output)
    
    tape = (
      local.code_740[0] == "+"
        ? [for i, b in local.iter_739.tape : (i == local.iter_739.tape_ptr ? (b + local.code_740[1]) % 256 : b)] :
      local.code_740[0] == "-"
        ? [for i, b in local.iter_739.tape : (i == local.iter_739.tape_ptr ? (b - local.code_740[1] + 256) % 256 : b)] :
      local.code_740[0] == ","
        ? [for i, b in local.iter_739.tape : (i == local.iter_739.tape_ptr ? local.ascii_lookup[substr(local.input_740, 0, 1)] : b)]
        : local.iter_739.tape)

    tape_ptr = (
      local.code_740[0] == "<"
        ? local.iter_739.tape_ptr - local.code_740[1] :
      local.code_740[0] == ">"
        ? local.iter_739.tape_ptr + local.code_740[1]
        : local.iter_739.tape_ptr)

    code_ptr = 2 + (
      local.code_740[0] == "["
        ? local.iter_739.tape[local.iter_739.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_739.code_ptr)] : local.iter_739.code_ptr :
      local.code_740[0] == "]"
        ? local.iter_739.tape[local.iter_739.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_739.code_ptr)] : local.iter_739.code_ptr
        : local.iter_739.code_ptr)

    steps_taken = 1 + local.iter_739.steps_taken
  }
}

locals {
  code_741 = (try(local.iter_740.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_740.code_ptr, local.iter_740.code_ptr + 2)
    : [null])

  input_741 = (local.code_741[0] == ","
    ? substr(local.input_740, local.code_741[1], -1)
    : local.input_740)

  iter_741 = try(local.iter_740.code_ptr >= length(var.code), true) ? local.iter_740 : {
    output = (local.code_741[0] == "."
      ? "${local.iter_740.output}${join("", [for _ in range(local.code_741[1]) : jsondecode(format("\"\\u%04x\"", local.iter_740.tape[local.iter_740.tape_ptr]))])}"
      : local.iter_740.output)
    
    tape = (
      local.code_741[0] == "+"
        ? [for i, b in local.iter_740.tape : (i == local.iter_740.tape_ptr ? (b + local.code_741[1]) % 256 : b)] :
      local.code_741[0] == "-"
        ? [for i, b in local.iter_740.tape : (i == local.iter_740.tape_ptr ? (b - local.code_741[1] + 256) % 256 : b)] :
      local.code_741[0] == ","
        ? [for i, b in local.iter_740.tape : (i == local.iter_740.tape_ptr ? local.ascii_lookup[substr(local.input_741, 0, 1)] : b)]
        : local.iter_740.tape)

    tape_ptr = (
      local.code_741[0] == "<"
        ? local.iter_740.tape_ptr - local.code_741[1] :
      local.code_741[0] == ">"
        ? local.iter_740.tape_ptr + local.code_741[1]
        : local.iter_740.tape_ptr)

    code_ptr = 2 + (
      local.code_741[0] == "["
        ? local.iter_740.tape[local.iter_740.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_740.code_ptr)] : local.iter_740.code_ptr :
      local.code_741[0] == "]"
        ? local.iter_740.tape[local.iter_740.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_740.code_ptr)] : local.iter_740.code_ptr
        : local.iter_740.code_ptr)

    steps_taken = 1 + local.iter_740.steps_taken
  }
}

locals {
  code_742 = (try(local.iter_741.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_741.code_ptr, local.iter_741.code_ptr + 2)
    : [null])

  input_742 = (local.code_742[0] == ","
    ? substr(local.input_741, local.code_742[1], -1)
    : local.input_741)

  iter_742 = try(local.iter_741.code_ptr >= length(var.code), true) ? local.iter_741 : {
    output = (local.code_742[0] == "."
      ? "${local.iter_741.output}${join("", [for _ in range(local.code_742[1]) : jsondecode(format("\"\\u%04x\"", local.iter_741.tape[local.iter_741.tape_ptr]))])}"
      : local.iter_741.output)
    
    tape = (
      local.code_742[0] == "+"
        ? [for i, b in local.iter_741.tape : (i == local.iter_741.tape_ptr ? (b + local.code_742[1]) % 256 : b)] :
      local.code_742[0] == "-"
        ? [for i, b in local.iter_741.tape : (i == local.iter_741.tape_ptr ? (b - local.code_742[1] + 256) % 256 : b)] :
      local.code_742[0] == ","
        ? [for i, b in local.iter_741.tape : (i == local.iter_741.tape_ptr ? local.ascii_lookup[substr(local.input_742, 0, 1)] : b)]
        : local.iter_741.tape)

    tape_ptr = (
      local.code_742[0] == "<"
        ? local.iter_741.tape_ptr - local.code_742[1] :
      local.code_742[0] == ">"
        ? local.iter_741.tape_ptr + local.code_742[1]
        : local.iter_741.tape_ptr)

    code_ptr = 2 + (
      local.code_742[0] == "["
        ? local.iter_741.tape[local.iter_741.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_741.code_ptr)] : local.iter_741.code_ptr :
      local.code_742[0] == "]"
        ? local.iter_741.tape[local.iter_741.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_741.code_ptr)] : local.iter_741.code_ptr
        : local.iter_741.code_ptr)

    steps_taken = 1 + local.iter_741.steps_taken
  }
}

locals {
  code_743 = (try(local.iter_742.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_742.code_ptr, local.iter_742.code_ptr + 2)
    : [null])

  input_743 = (local.code_743[0] == ","
    ? substr(local.input_742, local.code_743[1], -1)
    : local.input_742)

  iter_743 = try(local.iter_742.code_ptr >= length(var.code), true) ? local.iter_742 : {
    output = (local.code_743[0] == "."
      ? "${local.iter_742.output}${join("", [for _ in range(local.code_743[1]) : jsondecode(format("\"\\u%04x\"", local.iter_742.tape[local.iter_742.tape_ptr]))])}"
      : local.iter_742.output)
    
    tape = (
      local.code_743[0] == "+"
        ? [for i, b in local.iter_742.tape : (i == local.iter_742.tape_ptr ? (b + local.code_743[1]) % 256 : b)] :
      local.code_743[0] == "-"
        ? [for i, b in local.iter_742.tape : (i == local.iter_742.tape_ptr ? (b - local.code_743[1] + 256) % 256 : b)] :
      local.code_743[0] == ","
        ? [for i, b in local.iter_742.tape : (i == local.iter_742.tape_ptr ? local.ascii_lookup[substr(local.input_743, 0, 1)] : b)]
        : local.iter_742.tape)

    tape_ptr = (
      local.code_743[0] == "<"
        ? local.iter_742.tape_ptr - local.code_743[1] :
      local.code_743[0] == ">"
        ? local.iter_742.tape_ptr + local.code_743[1]
        : local.iter_742.tape_ptr)

    code_ptr = 2 + (
      local.code_743[0] == "["
        ? local.iter_742.tape[local.iter_742.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_742.code_ptr)] : local.iter_742.code_ptr :
      local.code_743[0] == "]"
        ? local.iter_742.tape[local.iter_742.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_742.code_ptr)] : local.iter_742.code_ptr
        : local.iter_742.code_ptr)

    steps_taken = 1 + local.iter_742.steps_taken
  }
}

locals {
  code_744 = (try(local.iter_743.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_743.code_ptr, local.iter_743.code_ptr + 2)
    : [null])

  input_744 = (local.code_744[0] == ","
    ? substr(local.input_743, local.code_744[1], -1)
    : local.input_743)

  iter_744 = try(local.iter_743.code_ptr >= length(var.code), true) ? local.iter_743 : {
    output = (local.code_744[0] == "."
      ? "${local.iter_743.output}${join("", [for _ in range(local.code_744[1]) : jsondecode(format("\"\\u%04x\"", local.iter_743.tape[local.iter_743.tape_ptr]))])}"
      : local.iter_743.output)
    
    tape = (
      local.code_744[0] == "+"
        ? [for i, b in local.iter_743.tape : (i == local.iter_743.tape_ptr ? (b + local.code_744[1]) % 256 : b)] :
      local.code_744[0] == "-"
        ? [for i, b in local.iter_743.tape : (i == local.iter_743.tape_ptr ? (b - local.code_744[1] + 256) % 256 : b)] :
      local.code_744[0] == ","
        ? [for i, b in local.iter_743.tape : (i == local.iter_743.tape_ptr ? local.ascii_lookup[substr(local.input_744, 0, 1)] : b)]
        : local.iter_743.tape)

    tape_ptr = (
      local.code_744[0] == "<"
        ? local.iter_743.tape_ptr - local.code_744[1] :
      local.code_744[0] == ">"
        ? local.iter_743.tape_ptr + local.code_744[1]
        : local.iter_743.tape_ptr)

    code_ptr = 2 + (
      local.code_744[0] == "["
        ? local.iter_743.tape[local.iter_743.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_743.code_ptr)] : local.iter_743.code_ptr :
      local.code_744[0] == "]"
        ? local.iter_743.tape[local.iter_743.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_743.code_ptr)] : local.iter_743.code_ptr
        : local.iter_743.code_ptr)

    steps_taken = 1 + local.iter_743.steps_taken
  }
}

locals {
  code_745 = (try(local.iter_744.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_744.code_ptr, local.iter_744.code_ptr + 2)
    : [null])

  input_745 = (local.code_745[0] == ","
    ? substr(local.input_744, local.code_745[1], -1)
    : local.input_744)

  iter_745 = try(local.iter_744.code_ptr >= length(var.code), true) ? local.iter_744 : {
    output = (local.code_745[0] == "."
      ? "${local.iter_744.output}${join("", [for _ in range(local.code_745[1]) : jsondecode(format("\"\\u%04x\"", local.iter_744.tape[local.iter_744.tape_ptr]))])}"
      : local.iter_744.output)
    
    tape = (
      local.code_745[0] == "+"
        ? [for i, b in local.iter_744.tape : (i == local.iter_744.tape_ptr ? (b + local.code_745[1]) % 256 : b)] :
      local.code_745[0] == "-"
        ? [for i, b in local.iter_744.tape : (i == local.iter_744.tape_ptr ? (b - local.code_745[1] + 256) % 256 : b)] :
      local.code_745[0] == ","
        ? [for i, b in local.iter_744.tape : (i == local.iter_744.tape_ptr ? local.ascii_lookup[substr(local.input_745, 0, 1)] : b)]
        : local.iter_744.tape)

    tape_ptr = (
      local.code_745[0] == "<"
        ? local.iter_744.tape_ptr - local.code_745[1] :
      local.code_745[0] == ">"
        ? local.iter_744.tape_ptr + local.code_745[1]
        : local.iter_744.tape_ptr)

    code_ptr = 2 + (
      local.code_745[0] == "["
        ? local.iter_744.tape[local.iter_744.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_744.code_ptr)] : local.iter_744.code_ptr :
      local.code_745[0] == "]"
        ? local.iter_744.tape[local.iter_744.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_744.code_ptr)] : local.iter_744.code_ptr
        : local.iter_744.code_ptr)

    steps_taken = 1 + local.iter_744.steps_taken
  }
}

locals {
  code_746 = (try(local.iter_745.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_745.code_ptr, local.iter_745.code_ptr + 2)
    : [null])

  input_746 = (local.code_746[0] == ","
    ? substr(local.input_745, local.code_746[1], -1)
    : local.input_745)

  iter_746 = try(local.iter_745.code_ptr >= length(var.code), true) ? local.iter_745 : {
    output = (local.code_746[0] == "."
      ? "${local.iter_745.output}${join("", [for _ in range(local.code_746[1]) : jsondecode(format("\"\\u%04x\"", local.iter_745.tape[local.iter_745.tape_ptr]))])}"
      : local.iter_745.output)
    
    tape = (
      local.code_746[0] == "+"
        ? [for i, b in local.iter_745.tape : (i == local.iter_745.tape_ptr ? (b + local.code_746[1]) % 256 : b)] :
      local.code_746[0] == "-"
        ? [for i, b in local.iter_745.tape : (i == local.iter_745.tape_ptr ? (b - local.code_746[1] + 256) % 256 : b)] :
      local.code_746[0] == ","
        ? [for i, b in local.iter_745.tape : (i == local.iter_745.tape_ptr ? local.ascii_lookup[substr(local.input_746, 0, 1)] : b)]
        : local.iter_745.tape)

    tape_ptr = (
      local.code_746[0] == "<"
        ? local.iter_745.tape_ptr - local.code_746[1] :
      local.code_746[0] == ">"
        ? local.iter_745.tape_ptr + local.code_746[1]
        : local.iter_745.tape_ptr)

    code_ptr = 2 + (
      local.code_746[0] == "["
        ? local.iter_745.tape[local.iter_745.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_745.code_ptr)] : local.iter_745.code_ptr :
      local.code_746[0] == "]"
        ? local.iter_745.tape[local.iter_745.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_745.code_ptr)] : local.iter_745.code_ptr
        : local.iter_745.code_ptr)

    steps_taken = 1 + local.iter_745.steps_taken
  }
}

locals {
  code_747 = (try(local.iter_746.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_746.code_ptr, local.iter_746.code_ptr + 2)
    : [null])

  input_747 = (local.code_747[0] == ","
    ? substr(local.input_746, local.code_747[1], -1)
    : local.input_746)

  iter_747 = try(local.iter_746.code_ptr >= length(var.code), true) ? local.iter_746 : {
    output = (local.code_747[0] == "."
      ? "${local.iter_746.output}${join("", [for _ in range(local.code_747[1]) : jsondecode(format("\"\\u%04x\"", local.iter_746.tape[local.iter_746.tape_ptr]))])}"
      : local.iter_746.output)
    
    tape = (
      local.code_747[0] == "+"
        ? [for i, b in local.iter_746.tape : (i == local.iter_746.tape_ptr ? (b + local.code_747[1]) % 256 : b)] :
      local.code_747[0] == "-"
        ? [for i, b in local.iter_746.tape : (i == local.iter_746.tape_ptr ? (b - local.code_747[1] + 256) % 256 : b)] :
      local.code_747[0] == ","
        ? [for i, b in local.iter_746.tape : (i == local.iter_746.tape_ptr ? local.ascii_lookup[substr(local.input_747, 0, 1)] : b)]
        : local.iter_746.tape)

    tape_ptr = (
      local.code_747[0] == "<"
        ? local.iter_746.tape_ptr - local.code_747[1] :
      local.code_747[0] == ">"
        ? local.iter_746.tape_ptr + local.code_747[1]
        : local.iter_746.tape_ptr)

    code_ptr = 2 + (
      local.code_747[0] == "["
        ? local.iter_746.tape[local.iter_746.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_746.code_ptr)] : local.iter_746.code_ptr :
      local.code_747[0] == "]"
        ? local.iter_746.tape[local.iter_746.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_746.code_ptr)] : local.iter_746.code_ptr
        : local.iter_746.code_ptr)

    steps_taken = 1 + local.iter_746.steps_taken
  }
}

locals {
  code_748 = (try(local.iter_747.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_747.code_ptr, local.iter_747.code_ptr + 2)
    : [null])

  input_748 = (local.code_748[0] == ","
    ? substr(local.input_747, local.code_748[1], -1)
    : local.input_747)

  iter_748 = try(local.iter_747.code_ptr >= length(var.code), true) ? local.iter_747 : {
    output = (local.code_748[0] == "."
      ? "${local.iter_747.output}${join("", [for _ in range(local.code_748[1]) : jsondecode(format("\"\\u%04x\"", local.iter_747.tape[local.iter_747.tape_ptr]))])}"
      : local.iter_747.output)
    
    tape = (
      local.code_748[0] == "+"
        ? [for i, b in local.iter_747.tape : (i == local.iter_747.tape_ptr ? (b + local.code_748[1]) % 256 : b)] :
      local.code_748[0] == "-"
        ? [for i, b in local.iter_747.tape : (i == local.iter_747.tape_ptr ? (b - local.code_748[1] + 256) % 256 : b)] :
      local.code_748[0] == ","
        ? [for i, b in local.iter_747.tape : (i == local.iter_747.tape_ptr ? local.ascii_lookup[substr(local.input_748, 0, 1)] : b)]
        : local.iter_747.tape)

    tape_ptr = (
      local.code_748[0] == "<"
        ? local.iter_747.tape_ptr - local.code_748[1] :
      local.code_748[0] == ">"
        ? local.iter_747.tape_ptr + local.code_748[1]
        : local.iter_747.tape_ptr)

    code_ptr = 2 + (
      local.code_748[0] == "["
        ? local.iter_747.tape[local.iter_747.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_747.code_ptr)] : local.iter_747.code_ptr :
      local.code_748[0] == "]"
        ? local.iter_747.tape[local.iter_747.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_747.code_ptr)] : local.iter_747.code_ptr
        : local.iter_747.code_ptr)

    steps_taken = 1 + local.iter_747.steps_taken
  }
}

locals {
  code_749 = (try(local.iter_748.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_748.code_ptr, local.iter_748.code_ptr + 2)
    : [null])

  input_749 = (local.code_749[0] == ","
    ? substr(local.input_748, local.code_749[1], -1)
    : local.input_748)

  iter_749 = try(local.iter_748.code_ptr >= length(var.code), true) ? local.iter_748 : {
    output = (local.code_749[0] == "."
      ? "${local.iter_748.output}${join("", [for _ in range(local.code_749[1]) : jsondecode(format("\"\\u%04x\"", local.iter_748.tape[local.iter_748.tape_ptr]))])}"
      : local.iter_748.output)
    
    tape = (
      local.code_749[0] == "+"
        ? [for i, b in local.iter_748.tape : (i == local.iter_748.tape_ptr ? (b + local.code_749[1]) % 256 : b)] :
      local.code_749[0] == "-"
        ? [for i, b in local.iter_748.tape : (i == local.iter_748.tape_ptr ? (b - local.code_749[1] + 256) % 256 : b)] :
      local.code_749[0] == ","
        ? [for i, b in local.iter_748.tape : (i == local.iter_748.tape_ptr ? local.ascii_lookup[substr(local.input_749, 0, 1)] : b)]
        : local.iter_748.tape)

    tape_ptr = (
      local.code_749[0] == "<"
        ? local.iter_748.tape_ptr - local.code_749[1] :
      local.code_749[0] == ">"
        ? local.iter_748.tape_ptr + local.code_749[1]
        : local.iter_748.tape_ptr)

    code_ptr = 2 + (
      local.code_749[0] == "["
        ? local.iter_748.tape[local.iter_748.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_748.code_ptr)] : local.iter_748.code_ptr :
      local.code_749[0] == "]"
        ? local.iter_748.tape[local.iter_748.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_748.code_ptr)] : local.iter_748.code_ptr
        : local.iter_748.code_ptr)

    steps_taken = 1 + local.iter_748.steps_taken
  }
}

locals {
  code_750 = (try(local.iter_749.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_749.code_ptr, local.iter_749.code_ptr + 2)
    : [null])

  input_750 = (local.code_750[0] == ","
    ? substr(local.input_749, local.code_750[1], -1)
    : local.input_749)

  iter_750 = try(local.iter_749.code_ptr >= length(var.code), true) ? local.iter_749 : {
    output = (local.code_750[0] == "."
      ? "${local.iter_749.output}${join("", [for _ in range(local.code_750[1]) : jsondecode(format("\"\\u%04x\"", local.iter_749.tape[local.iter_749.tape_ptr]))])}"
      : local.iter_749.output)
    
    tape = (
      local.code_750[0] == "+"
        ? [for i, b in local.iter_749.tape : (i == local.iter_749.tape_ptr ? (b + local.code_750[1]) % 256 : b)] :
      local.code_750[0] == "-"
        ? [for i, b in local.iter_749.tape : (i == local.iter_749.tape_ptr ? (b - local.code_750[1] + 256) % 256 : b)] :
      local.code_750[0] == ","
        ? [for i, b in local.iter_749.tape : (i == local.iter_749.tape_ptr ? local.ascii_lookup[substr(local.input_750, 0, 1)] : b)]
        : local.iter_749.tape)

    tape_ptr = (
      local.code_750[0] == "<"
        ? local.iter_749.tape_ptr - local.code_750[1] :
      local.code_750[0] == ">"
        ? local.iter_749.tape_ptr + local.code_750[1]
        : local.iter_749.tape_ptr)

    code_ptr = 2 + (
      local.code_750[0] == "["
        ? local.iter_749.tape[local.iter_749.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_749.code_ptr)] : local.iter_749.code_ptr :
      local.code_750[0] == "]"
        ? local.iter_749.tape[local.iter_749.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_749.code_ptr)] : local.iter_749.code_ptr
        : local.iter_749.code_ptr)

    steps_taken = 1 + local.iter_749.steps_taken
  }
}

locals {
  code_751 = (try(local.iter_750.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_750.code_ptr, local.iter_750.code_ptr + 2)
    : [null])

  input_751 = (local.code_751[0] == ","
    ? substr(local.input_750, local.code_751[1], -1)
    : local.input_750)

  iter_751 = try(local.iter_750.code_ptr >= length(var.code), true) ? local.iter_750 : {
    output = (local.code_751[0] == "."
      ? "${local.iter_750.output}${join("", [for _ in range(local.code_751[1]) : jsondecode(format("\"\\u%04x\"", local.iter_750.tape[local.iter_750.tape_ptr]))])}"
      : local.iter_750.output)
    
    tape = (
      local.code_751[0] == "+"
        ? [for i, b in local.iter_750.tape : (i == local.iter_750.tape_ptr ? (b + local.code_751[1]) % 256 : b)] :
      local.code_751[0] == "-"
        ? [for i, b in local.iter_750.tape : (i == local.iter_750.tape_ptr ? (b - local.code_751[1] + 256) % 256 : b)] :
      local.code_751[0] == ","
        ? [for i, b in local.iter_750.tape : (i == local.iter_750.tape_ptr ? local.ascii_lookup[substr(local.input_751, 0, 1)] : b)]
        : local.iter_750.tape)

    tape_ptr = (
      local.code_751[0] == "<"
        ? local.iter_750.tape_ptr - local.code_751[1] :
      local.code_751[0] == ">"
        ? local.iter_750.tape_ptr + local.code_751[1]
        : local.iter_750.tape_ptr)

    code_ptr = 2 + (
      local.code_751[0] == "["
        ? local.iter_750.tape[local.iter_750.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_750.code_ptr)] : local.iter_750.code_ptr :
      local.code_751[0] == "]"
        ? local.iter_750.tape[local.iter_750.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_750.code_ptr)] : local.iter_750.code_ptr
        : local.iter_750.code_ptr)

    steps_taken = 1 + local.iter_750.steps_taken
  }
}

locals {
  code_752 = (try(local.iter_751.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_751.code_ptr, local.iter_751.code_ptr + 2)
    : [null])

  input_752 = (local.code_752[0] == ","
    ? substr(local.input_751, local.code_752[1], -1)
    : local.input_751)

  iter_752 = try(local.iter_751.code_ptr >= length(var.code), true) ? local.iter_751 : {
    output = (local.code_752[0] == "."
      ? "${local.iter_751.output}${join("", [for _ in range(local.code_752[1]) : jsondecode(format("\"\\u%04x\"", local.iter_751.tape[local.iter_751.tape_ptr]))])}"
      : local.iter_751.output)
    
    tape = (
      local.code_752[0] == "+"
        ? [for i, b in local.iter_751.tape : (i == local.iter_751.tape_ptr ? (b + local.code_752[1]) % 256 : b)] :
      local.code_752[0] == "-"
        ? [for i, b in local.iter_751.tape : (i == local.iter_751.tape_ptr ? (b - local.code_752[1] + 256) % 256 : b)] :
      local.code_752[0] == ","
        ? [for i, b in local.iter_751.tape : (i == local.iter_751.tape_ptr ? local.ascii_lookup[substr(local.input_752, 0, 1)] : b)]
        : local.iter_751.tape)

    tape_ptr = (
      local.code_752[0] == "<"
        ? local.iter_751.tape_ptr - local.code_752[1] :
      local.code_752[0] == ">"
        ? local.iter_751.tape_ptr + local.code_752[1]
        : local.iter_751.tape_ptr)

    code_ptr = 2 + (
      local.code_752[0] == "["
        ? local.iter_751.tape[local.iter_751.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_751.code_ptr)] : local.iter_751.code_ptr :
      local.code_752[0] == "]"
        ? local.iter_751.tape[local.iter_751.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_751.code_ptr)] : local.iter_751.code_ptr
        : local.iter_751.code_ptr)

    steps_taken = 1 + local.iter_751.steps_taken
  }
}

locals {
  code_753 = (try(local.iter_752.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_752.code_ptr, local.iter_752.code_ptr + 2)
    : [null])

  input_753 = (local.code_753[0] == ","
    ? substr(local.input_752, local.code_753[1], -1)
    : local.input_752)

  iter_753 = try(local.iter_752.code_ptr >= length(var.code), true) ? local.iter_752 : {
    output = (local.code_753[0] == "."
      ? "${local.iter_752.output}${join("", [for _ in range(local.code_753[1]) : jsondecode(format("\"\\u%04x\"", local.iter_752.tape[local.iter_752.tape_ptr]))])}"
      : local.iter_752.output)
    
    tape = (
      local.code_753[0] == "+"
        ? [for i, b in local.iter_752.tape : (i == local.iter_752.tape_ptr ? (b + local.code_753[1]) % 256 : b)] :
      local.code_753[0] == "-"
        ? [for i, b in local.iter_752.tape : (i == local.iter_752.tape_ptr ? (b - local.code_753[1] + 256) % 256 : b)] :
      local.code_753[0] == ","
        ? [for i, b in local.iter_752.tape : (i == local.iter_752.tape_ptr ? local.ascii_lookup[substr(local.input_753, 0, 1)] : b)]
        : local.iter_752.tape)

    tape_ptr = (
      local.code_753[0] == "<"
        ? local.iter_752.tape_ptr - local.code_753[1] :
      local.code_753[0] == ">"
        ? local.iter_752.tape_ptr + local.code_753[1]
        : local.iter_752.tape_ptr)

    code_ptr = 2 + (
      local.code_753[0] == "["
        ? local.iter_752.tape[local.iter_752.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_752.code_ptr)] : local.iter_752.code_ptr :
      local.code_753[0] == "]"
        ? local.iter_752.tape[local.iter_752.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_752.code_ptr)] : local.iter_752.code_ptr
        : local.iter_752.code_ptr)

    steps_taken = 1 + local.iter_752.steps_taken
  }
}

locals {
  code_754 = (try(local.iter_753.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_753.code_ptr, local.iter_753.code_ptr + 2)
    : [null])

  input_754 = (local.code_754[0] == ","
    ? substr(local.input_753, local.code_754[1], -1)
    : local.input_753)

  iter_754 = try(local.iter_753.code_ptr >= length(var.code), true) ? local.iter_753 : {
    output = (local.code_754[0] == "."
      ? "${local.iter_753.output}${join("", [for _ in range(local.code_754[1]) : jsondecode(format("\"\\u%04x\"", local.iter_753.tape[local.iter_753.tape_ptr]))])}"
      : local.iter_753.output)
    
    tape = (
      local.code_754[0] == "+"
        ? [for i, b in local.iter_753.tape : (i == local.iter_753.tape_ptr ? (b + local.code_754[1]) % 256 : b)] :
      local.code_754[0] == "-"
        ? [for i, b in local.iter_753.tape : (i == local.iter_753.tape_ptr ? (b - local.code_754[1] + 256) % 256 : b)] :
      local.code_754[0] == ","
        ? [for i, b in local.iter_753.tape : (i == local.iter_753.tape_ptr ? local.ascii_lookup[substr(local.input_754, 0, 1)] : b)]
        : local.iter_753.tape)

    tape_ptr = (
      local.code_754[0] == "<"
        ? local.iter_753.tape_ptr - local.code_754[1] :
      local.code_754[0] == ">"
        ? local.iter_753.tape_ptr + local.code_754[1]
        : local.iter_753.tape_ptr)

    code_ptr = 2 + (
      local.code_754[0] == "["
        ? local.iter_753.tape[local.iter_753.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_753.code_ptr)] : local.iter_753.code_ptr :
      local.code_754[0] == "]"
        ? local.iter_753.tape[local.iter_753.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_753.code_ptr)] : local.iter_753.code_ptr
        : local.iter_753.code_ptr)

    steps_taken = 1 + local.iter_753.steps_taken
  }
}

locals {
  code_755 = (try(local.iter_754.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_754.code_ptr, local.iter_754.code_ptr + 2)
    : [null])

  input_755 = (local.code_755[0] == ","
    ? substr(local.input_754, local.code_755[1], -1)
    : local.input_754)

  iter_755 = try(local.iter_754.code_ptr >= length(var.code), true) ? local.iter_754 : {
    output = (local.code_755[0] == "."
      ? "${local.iter_754.output}${join("", [for _ in range(local.code_755[1]) : jsondecode(format("\"\\u%04x\"", local.iter_754.tape[local.iter_754.tape_ptr]))])}"
      : local.iter_754.output)
    
    tape = (
      local.code_755[0] == "+"
        ? [for i, b in local.iter_754.tape : (i == local.iter_754.tape_ptr ? (b + local.code_755[1]) % 256 : b)] :
      local.code_755[0] == "-"
        ? [for i, b in local.iter_754.tape : (i == local.iter_754.tape_ptr ? (b - local.code_755[1] + 256) % 256 : b)] :
      local.code_755[0] == ","
        ? [for i, b in local.iter_754.tape : (i == local.iter_754.tape_ptr ? local.ascii_lookup[substr(local.input_755, 0, 1)] : b)]
        : local.iter_754.tape)

    tape_ptr = (
      local.code_755[0] == "<"
        ? local.iter_754.tape_ptr - local.code_755[1] :
      local.code_755[0] == ">"
        ? local.iter_754.tape_ptr + local.code_755[1]
        : local.iter_754.tape_ptr)

    code_ptr = 2 + (
      local.code_755[0] == "["
        ? local.iter_754.tape[local.iter_754.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_754.code_ptr)] : local.iter_754.code_ptr :
      local.code_755[0] == "]"
        ? local.iter_754.tape[local.iter_754.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_754.code_ptr)] : local.iter_754.code_ptr
        : local.iter_754.code_ptr)

    steps_taken = 1 + local.iter_754.steps_taken
  }
}

locals {
  code_756 = (try(local.iter_755.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_755.code_ptr, local.iter_755.code_ptr + 2)
    : [null])

  input_756 = (local.code_756[0] == ","
    ? substr(local.input_755, local.code_756[1], -1)
    : local.input_755)

  iter_756 = try(local.iter_755.code_ptr >= length(var.code), true) ? local.iter_755 : {
    output = (local.code_756[0] == "."
      ? "${local.iter_755.output}${join("", [for _ in range(local.code_756[1]) : jsondecode(format("\"\\u%04x\"", local.iter_755.tape[local.iter_755.tape_ptr]))])}"
      : local.iter_755.output)
    
    tape = (
      local.code_756[0] == "+"
        ? [for i, b in local.iter_755.tape : (i == local.iter_755.tape_ptr ? (b + local.code_756[1]) % 256 : b)] :
      local.code_756[0] == "-"
        ? [for i, b in local.iter_755.tape : (i == local.iter_755.tape_ptr ? (b - local.code_756[1] + 256) % 256 : b)] :
      local.code_756[0] == ","
        ? [for i, b in local.iter_755.tape : (i == local.iter_755.tape_ptr ? local.ascii_lookup[substr(local.input_756, 0, 1)] : b)]
        : local.iter_755.tape)

    tape_ptr = (
      local.code_756[0] == "<"
        ? local.iter_755.tape_ptr - local.code_756[1] :
      local.code_756[0] == ">"
        ? local.iter_755.tape_ptr + local.code_756[1]
        : local.iter_755.tape_ptr)

    code_ptr = 2 + (
      local.code_756[0] == "["
        ? local.iter_755.tape[local.iter_755.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_755.code_ptr)] : local.iter_755.code_ptr :
      local.code_756[0] == "]"
        ? local.iter_755.tape[local.iter_755.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_755.code_ptr)] : local.iter_755.code_ptr
        : local.iter_755.code_ptr)

    steps_taken = 1 + local.iter_755.steps_taken
  }
}

locals {
  code_757 = (try(local.iter_756.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_756.code_ptr, local.iter_756.code_ptr + 2)
    : [null])

  input_757 = (local.code_757[0] == ","
    ? substr(local.input_756, local.code_757[1], -1)
    : local.input_756)

  iter_757 = try(local.iter_756.code_ptr >= length(var.code), true) ? local.iter_756 : {
    output = (local.code_757[0] == "."
      ? "${local.iter_756.output}${join("", [for _ in range(local.code_757[1]) : jsondecode(format("\"\\u%04x\"", local.iter_756.tape[local.iter_756.tape_ptr]))])}"
      : local.iter_756.output)
    
    tape = (
      local.code_757[0] == "+"
        ? [for i, b in local.iter_756.tape : (i == local.iter_756.tape_ptr ? (b + local.code_757[1]) % 256 : b)] :
      local.code_757[0] == "-"
        ? [for i, b in local.iter_756.tape : (i == local.iter_756.tape_ptr ? (b - local.code_757[1] + 256) % 256 : b)] :
      local.code_757[0] == ","
        ? [for i, b in local.iter_756.tape : (i == local.iter_756.tape_ptr ? local.ascii_lookup[substr(local.input_757, 0, 1)] : b)]
        : local.iter_756.tape)

    tape_ptr = (
      local.code_757[0] == "<"
        ? local.iter_756.tape_ptr - local.code_757[1] :
      local.code_757[0] == ">"
        ? local.iter_756.tape_ptr + local.code_757[1]
        : local.iter_756.tape_ptr)

    code_ptr = 2 + (
      local.code_757[0] == "["
        ? local.iter_756.tape[local.iter_756.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_756.code_ptr)] : local.iter_756.code_ptr :
      local.code_757[0] == "]"
        ? local.iter_756.tape[local.iter_756.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_756.code_ptr)] : local.iter_756.code_ptr
        : local.iter_756.code_ptr)

    steps_taken = 1 + local.iter_756.steps_taken
  }
}

locals {
  code_758 = (try(local.iter_757.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_757.code_ptr, local.iter_757.code_ptr + 2)
    : [null])

  input_758 = (local.code_758[0] == ","
    ? substr(local.input_757, local.code_758[1], -1)
    : local.input_757)

  iter_758 = try(local.iter_757.code_ptr >= length(var.code), true) ? local.iter_757 : {
    output = (local.code_758[0] == "."
      ? "${local.iter_757.output}${join("", [for _ in range(local.code_758[1]) : jsondecode(format("\"\\u%04x\"", local.iter_757.tape[local.iter_757.tape_ptr]))])}"
      : local.iter_757.output)
    
    tape = (
      local.code_758[0] == "+"
        ? [for i, b in local.iter_757.tape : (i == local.iter_757.tape_ptr ? (b + local.code_758[1]) % 256 : b)] :
      local.code_758[0] == "-"
        ? [for i, b in local.iter_757.tape : (i == local.iter_757.tape_ptr ? (b - local.code_758[1] + 256) % 256 : b)] :
      local.code_758[0] == ","
        ? [for i, b in local.iter_757.tape : (i == local.iter_757.tape_ptr ? local.ascii_lookup[substr(local.input_758, 0, 1)] : b)]
        : local.iter_757.tape)

    tape_ptr = (
      local.code_758[0] == "<"
        ? local.iter_757.tape_ptr - local.code_758[1] :
      local.code_758[0] == ">"
        ? local.iter_757.tape_ptr + local.code_758[1]
        : local.iter_757.tape_ptr)

    code_ptr = 2 + (
      local.code_758[0] == "["
        ? local.iter_757.tape[local.iter_757.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_757.code_ptr)] : local.iter_757.code_ptr :
      local.code_758[0] == "]"
        ? local.iter_757.tape[local.iter_757.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_757.code_ptr)] : local.iter_757.code_ptr
        : local.iter_757.code_ptr)

    steps_taken = 1 + local.iter_757.steps_taken
  }
}

locals {
  code_759 = (try(local.iter_758.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_758.code_ptr, local.iter_758.code_ptr + 2)
    : [null])

  input_759 = (local.code_759[0] == ","
    ? substr(local.input_758, local.code_759[1], -1)
    : local.input_758)

  iter_759 = try(local.iter_758.code_ptr >= length(var.code), true) ? local.iter_758 : {
    output = (local.code_759[0] == "."
      ? "${local.iter_758.output}${join("", [for _ in range(local.code_759[1]) : jsondecode(format("\"\\u%04x\"", local.iter_758.tape[local.iter_758.tape_ptr]))])}"
      : local.iter_758.output)
    
    tape = (
      local.code_759[0] == "+"
        ? [for i, b in local.iter_758.tape : (i == local.iter_758.tape_ptr ? (b + local.code_759[1]) % 256 : b)] :
      local.code_759[0] == "-"
        ? [for i, b in local.iter_758.tape : (i == local.iter_758.tape_ptr ? (b - local.code_759[1] + 256) % 256 : b)] :
      local.code_759[0] == ","
        ? [for i, b in local.iter_758.tape : (i == local.iter_758.tape_ptr ? local.ascii_lookup[substr(local.input_759, 0, 1)] : b)]
        : local.iter_758.tape)

    tape_ptr = (
      local.code_759[0] == "<"
        ? local.iter_758.tape_ptr - local.code_759[1] :
      local.code_759[0] == ">"
        ? local.iter_758.tape_ptr + local.code_759[1]
        : local.iter_758.tape_ptr)

    code_ptr = 2 + (
      local.code_759[0] == "["
        ? local.iter_758.tape[local.iter_758.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_758.code_ptr)] : local.iter_758.code_ptr :
      local.code_759[0] == "]"
        ? local.iter_758.tape[local.iter_758.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_758.code_ptr)] : local.iter_758.code_ptr
        : local.iter_758.code_ptr)

    steps_taken = 1 + local.iter_758.steps_taken
  }
}

locals {
  code_760 = (try(local.iter_759.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_759.code_ptr, local.iter_759.code_ptr + 2)
    : [null])

  input_760 = (local.code_760[0] == ","
    ? substr(local.input_759, local.code_760[1], -1)
    : local.input_759)

  iter_760 = try(local.iter_759.code_ptr >= length(var.code), true) ? local.iter_759 : {
    output = (local.code_760[0] == "."
      ? "${local.iter_759.output}${join("", [for _ in range(local.code_760[1]) : jsondecode(format("\"\\u%04x\"", local.iter_759.tape[local.iter_759.tape_ptr]))])}"
      : local.iter_759.output)
    
    tape = (
      local.code_760[0] == "+"
        ? [for i, b in local.iter_759.tape : (i == local.iter_759.tape_ptr ? (b + local.code_760[1]) % 256 : b)] :
      local.code_760[0] == "-"
        ? [for i, b in local.iter_759.tape : (i == local.iter_759.tape_ptr ? (b - local.code_760[1] + 256) % 256 : b)] :
      local.code_760[0] == ","
        ? [for i, b in local.iter_759.tape : (i == local.iter_759.tape_ptr ? local.ascii_lookup[substr(local.input_760, 0, 1)] : b)]
        : local.iter_759.tape)

    tape_ptr = (
      local.code_760[0] == "<"
        ? local.iter_759.tape_ptr - local.code_760[1] :
      local.code_760[0] == ">"
        ? local.iter_759.tape_ptr + local.code_760[1]
        : local.iter_759.tape_ptr)

    code_ptr = 2 + (
      local.code_760[0] == "["
        ? local.iter_759.tape[local.iter_759.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_759.code_ptr)] : local.iter_759.code_ptr :
      local.code_760[0] == "]"
        ? local.iter_759.tape[local.iter_759.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_759.code_ptr)] : local.iter_759.code_ptr
        : local.iter_759.code_ptr)

    steps_taken = 1 + local.iter_759.steps_taken
  }
}

locals {
  code_761 = (try(local.iter_760.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_760.code_ptr, local.iter_760.code_ptr + 2)
    : [null])

  input_761 = (local.code_761[0] == ","
    ? substr(local.input_760, local.code_761[1], -1)
    : local.input_760)

  iter_761 = try(local.iter_760.code_ptr >= length(var.code), true) ? local.iter_760 : {
    output = (local.code_761[0] == "."
      ? "${local.iter_760.output}${join("", [for _ in range(local.code_761[1]) : jsondecode(format("\"\\u%04x\"", local.iter_760.tape[local.iter_760.tape_ptr]))])}"
      : local.iter_760.output)
    
    tape = (
      local.code_761[0] == "+"
        ? [for i, b in local.iter_760.tape : (i == local.iter_760.tape_ptr ? (b + local.code_761[1]) % 256 : b)] :
      local.code_761[0] == "-"
        ? [for i, b in local.iter_760.tape : (i == local.iter_760.tape_ptr ? (b - local.code_761[1] + 256) % 256 : b)] :
      local.code_761[0] == ","
        ? [for i, b in local.iter_760.tape : (i == local.iter_760.tape_ptr ? local.ascii_lookup[substr(local.input_761, 0, 1)] : b)]
        : local.iter_760.tape)

    tape_ptr = (
      local.code_761[0] == "<"
        ? local.iter_760.tape_ptr - local.code_761[1] :
      local.code_761[0] == ">"
        ? local.iter_760.tape_ptr + local.code_761[1]
        : local.iter_760.tape_ptr)

    code_ptr = 2 + (
      local.code_761[0] == "["
        ? local.iter_760.tape[local.iter_760.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_760.code_ptr)] : local.iter_760.code_ptr :
      local.code_761[0] == "]"
        ? local.iter_760.tape[local.iter_760.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_760.code_ptr)] : local.iter_760.code_ptr
        : local.iter_760.code_ptr)

    steps_taken = 1 + local.iter_760.steps_taken
  }
}

locals {
  code_762 = (try(local.iter_761.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_761.code_ptr, local.iter_761.code_ptr + 2)
    : [null])

  input_762 = (local.code_762[0] == ","
    ? substr(local.input_761, local.code_762[1], -1)
    : local.input_761)

  iter_762 = try(local.iter_761.code_ptr >= length(var.code), true) ? local.iter_761 : {
    output = (local.code_762[0] == "."
      ? "${local.iter_761.output}${join("", [for _ in range(local.code_762[1]) : jsondecode(format("\"\\u%04x\"", local.iter_761.tape[local.iter_761.tape_ptr]))])}"
      : local.iter_761.output)
    
    tape = (
      local.code_762[0] == "+"
        ? [for i, b in local.iter_761.tape : (i == local.iter_761.tape_ptr ? (b + local.code_762[1]) % 256 : b)] :
      local.code_762[0] == "-"
        ? [for i, b in local.iter_761.tape : (i == local.iter_761.tape_ptr ? (b - local.code_762[1] + 256) % 256 : b)] :
      local.code_762[0] == ","
        ? [for i, b in local.iter_761.tape : (i == local.iter_761.tape_ptr ? local.ascii_lookup[substr(local.input_762, 0, 1)] : b)]
        : local.iter_761.tape)

    tape_ptr = (
      local.code_762[0] == "<"
        ? local.iter_761.tape_ptr - local.code_762[1] :
      local.code_762[0] == ">"
        ? local.iter_761.tape_ptr + local.code_762[1]
        : local.iter_761.tape_ptr)

    code_ptr = 2 + (
      local.code_762[0] == "["
        ? local.iter_761.tape[local.iter_761.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_761.code_ptr)] : local.iter_761.code_ptr :
      local.code_762[0] == "]"
        ? local.iter_761.tape[local.iter_761.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_761.code_ptr)] : local.iter_761.code_ptr
        : local.iter_761.code_ptr)

    steps_taken = 1 + local.iter_761.steps_taken
  }
}

locals {
  code_763 = (try(local.iter_762.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_762.code_ptr, local.iter_762.code_ptr + 2)
    : [null])

  input_763 = (local.code_763[0] == ","
    ? substr(local.input_762, local.code_763[1], -1)
    : local.input_762)

  iter_763 = try(local.iter_762.code_ptr >= length(var.code), true) ? local.iter_762 : {
    output = (local.code_763[0] == "."
      ? "${local.iter_762.output}${join("", [for _ in range(local.code_763[1]) : jsondecode(format("\"\\u%04x\"", local.iter_762.tape[local.iter_762.tape_ptr]))])}"
      : local.iter_762.output)
    
    tape = (
      local.code_763[0] == "+"
        ? [for i, b in local.iter_762.tape : (i == local.iter_762.tape_ptr ? (b + local.code_763[1]) % 256 : b)] :
      local.code_763[0] == "-"
        ? [for i, b in local.iter_762.tape : (i == local.iter_762.tape_ptr ? (b - local.code_763[1] + 256) % 256 : b)] :
      local.code_763[0] == ","
        ? [for i, b in local.iter_762.tape : (i == local.iter_762.tape_ptr ? local.ascii_lookup[substr(local.input_763, 0, 1)] : b)]
        : local.iter_762.tape)

    tape_ptr = (
      local.code_763[0] == "<"
        ? local.iter_762.tape_ptr - local.code_763[1] :
      local.code_763[0] == ">"
        ? local.iter_762.tape_ptr + local.code_763[1]
        : local.iter_762.tape_ptr)

    code_ptr = 2 + (
      local.code_763[0] == "["
        ? local.iter_762.tape[local.iter_762.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_762.code_ptr)] : local.iter_762.code_ptr :
      local.code_763[0] == "]"
        ? local.iter_762.tape[local.iter_762.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_762.code_ptr)] : local.iter_762.code_ptr
        : local.iter_762.code_ptr)

    steps_taken = 1 + local.iter_762.steps_taken
  }
}

locals {
  code_764 = (try(local.iter_763.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_763.code_ptr, local.iter_763.code_ptr + 2)
    : [null])

  input_764 = (local.code_764[0] == ","
    ? substr(local.input_763, local.code_764[1], -1)
    : local.input_763)

  iter_764 = try(local.iter_763.code_ptr >= length(var.code), true) ? local.iter_763 : {
    output = (local.code_764[0] == "."
      ? "${local.iter_763.output}${join("", [for _ in range(local.code_764[1]) : jsondecode(format("\"\\u%04x\"", local.iter_763.tape[local.iter_763.tape_ptr]))])}"
      : local.iter_763.output)
    
    tape = (
      local.code_764[0] == "+"
        ? [for i, b in local.iter_763.tape : (i == local.iter_763.tape_ptr ? (b + local.code_764[1]) % 256 : b)] :
      local.code_764[0] == "-"
        ? [for i, b in local.iter_763.tape : (i == local.iter_763.tape_ptr ? (b - local.code_764[1] + 256) % 256 : b)] :
      local.code_764[0] == ","
        ? [for i, b in local.iter_763.tape : (i == local.iter_763.tape_ptr ? local.ascii_lookup[substr(local.input_764, 0, 1)] : b)]
        : local.iter_763.tape)

    tape_ptr = (
      local.code_764[0] == "<"
        ? local.iter_763.tape_ptr - local.code_764[1] :
      local.code_764[0] == ">"
        ? local.iter_763.tape_ptr + local.code_764[1]
        : local.iter_763.tape_ptr)

    code_ptr = 2 + (
      local.code_764[0] == "["
        ? local.iter_763.tape[local.iter_763.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_763.code_ptr)] : local.iter_763.code_ptr :
      local.code_764[0] == "]"
        ? local.iter_763.tape[local.iter_763.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_763.code_ptr)] : local.iter_763.code_ptr
        : local.iter_763.code_ptr)

    steps_taken = 1 + local.iter_763.steps_taken
  }
}

locals {
  code_765 = (try(local.iter_764.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_764.code_ptr, local.iter_764.code_ptr + 2)
    : [null])

  input_765 = (local.code_765[0] == ","
    ? substr(local.input_764, local.code_765[1], -1)
    : local.input_764)

  iter_765 = try(local.iter_764.code_ptr >= length(var.code), true) ? local.iter_764 : {
    output = (local.code_765[0] == "."
      ? "${local.iter_764.output}${join("", [for _ in range(local.code_765[1]) : jsondecode(format("\"\\u%04x\"", local.iter_764.tape[local.iter_764.tape_ptr]))])}"
      : local.iter_764.output)
    
    tape = (
      local.code_765[0] == "+"
        ? [for i, b in local.iter_764.tape : (i == local.iter_764.tape_ptr ? (b + local.code_765[1]) % 256 : b)] :
      local.code_765[0] == "-"
        ? [for i, b in local.iter_764.tape : (i == local.iter_764.tape_ptr ? (b - local.code_765[1] + 256) % 256 : b)] :
      local.code_765[0] == ","
        ? [for i, b in local.iter_764.tape : (i == local.iter_764.tape_ptr ? local.ascii_lookup[substr(local.input_765, 0, 1)] : b)]
        : local.iter_764.tape)

    tape_ptr = (
      local.code_765[0] == "<"
        ? local.iter_764.tape_ptr - local.code_765[1] :
      local.code_765[0] == ">"
        ? local.iter_764.tape_ptr + local.code_765[1]
        : local.iter_764.tape_ptr)

    code_ptr = 2 + (
      local.code_765[0] == "["
        ? local.iter_764.tape[local.iter_764.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_764.code_ptr)] : local.iter_764.code_ptr :
      local.code_765[0] == "]"
        ? local.iter_764.tape[local.iter_764.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_764.code_ptr)] : local.iter_764.code_ptr
        : local.iter_764.code_ptr)

    steps_taken = 1 + local.iter_764.steps_taken
  }
}

locals {
  code_766 = (try(local.iter_765.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_765.code_ptr, local.iter_765.code_ptr + 2)
    : [null])

  input_766 = (local.code_766[0] == ","
    ? substr(local.input_765, local.code_766[1], -1)
    : local.input_765)

  iter_766 = try(local.iter_765.code_ptr >= length(var.code), true) ? local.iter_765 : {
    output = (local.code_766[0] == "."
      ? "${local.iter_765.output}${join("", [for _ in range(local.code_766[1]) : jsondecode(format("\"\\u%04x\"", local.iter_765.tape[local.iter_765.tape_ptr]))])}"
      : local.iter_765.output)
    
    tape = (
      local.code_766[0] == "+"
        ? [for i, b in local.iter_765.tape : (i == local.iter_765.tape_ptr ? (b + local.code_766[1]) % 256 : b)] :
      local.code_766[0] == "-"
        ? [for i, b in local.iter_765.tape : (i == local.iter_765.tape_ptr ? (b - local.code_766[1] + 256) % 256 : b)] :
      local.code_766[0] == ","
        ? [for i, b in local.iter_765.tape : (i == local.iter_765.tape_ptr ? local.ascii_lookup[substr(local.input_766, 0, 1)] : b)]
        : local.iter_765.tape)

    tape_ptr = (
      local.code_766[0] == "<"
        ? local.iter_765.tape_ptr - local.code_766[1] :
      local.code_766[0] == ">"
        ? local.iter_765.tape_ptr + local.code_766[1]
        : local.iter_765.tape_ptr)

    code_ptr = 2 + (
      local.code_766[0] == "["
        ? local.iter_765.tape[local.iter_765.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_765.code_ptr)] : local.iter_765.code_ptr :
      local.code_766[0] == "]"
        ? local.iter_765.tape[local.iter_765.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_765.code_ptr)] : local.iter_765.code_ptr
        : local.iter_765.code_ptr)

    steps_taken = 1 + local.iter_765.steps_taken
  }
}

locals {
  code_767 = (try(local.iter_766.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_766.code_ptr, local.iter_766.code_ptr + 2)
    : [null])

  input_767 = (local.code_767[0] == ","
    ? substr(local.input_766, local.code_767[1], -1)
    : local.input_766)

  iter_767 = try(local.iter_766.code_ptr >= length(var.code), true) ? local.iter_766 : {
    output = (local.code_767[0] == "."
      ? "${local.iter_766.output}${join("", [for _ in range(local.code_767[1]) : jsondecode(format("\"\\u%04x\"", local.iter_766.tape[local.iter_766.tape_ptr]))])}"
      : local.iter_766.output)
    
    tape = (
      local.code_767[0] == "+"
        ? [for i, b in local.iter_766.tape : (i == local.iter_766.tape_ptr ? (b + local.code_767[1]) % 256 : b)] :
      local.code_767[0] == "-"
        ? [for i, b in local.iter_766.tape : (i == local.iter_766.tape_ptr ? (b - local.code_767[1] + 256) % 256 : b)] :
      local.code_767[0] == ","
        ? [for i, b in local.iter_766.tape : (i == local.iter_766.tape_ptr ? local.ascii_lookup[substr(local.input_767, 0, 1)] : b)]
        : local.iter_766.tape)

    tape_ptr = (
      local.code_767[0] == "<"
        ? local.iter_766.tape_ptr - local.code_767[1] :
      local.code_767[0] == ">"
        ? local.iter_766.tape_ptr + local.code_767[1]
        : local.iter_766.tape_ptr)

    code_ptr = 2 + (
      local.code_767[0] == "["
        ? local.iter_766.tape[local.iter_766.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_766.code_ptr)] : local.iter_766.code_ptr :
      local.code_767[0] == "]"
        ? local.iter_766.tape[local.iter_766.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_766.code_ptr)] : local.iter_766.code_ptr
        : local.iter_766.code_ptr)

    steps_taken = 1 + local.iter_766.steps_taken
  }
}

locals {
  code_768 = (try(local.iter_767.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_767.code_ptr, local.iter_767.code_ptr + 2)
    : [null])

  input_768 = (local.code_768[0] == ","
    ? substr(local.input_767, local.code_768[1], -1)
    : local.input_767)

  iter_768 = try(local.iter_767.code_ptr >= length(var.code), true) ? local.iter_767 : {
    output = (local.code_768[0] == "."
      ? "${local.iter_767.output}${join("", [for _ in range(local.code_768[1]) : jsondecode(format("\"\\u%04x\"", local.iter_767.tape[local.iter_767.tape_ptr]))])}"
      : local.iter_767.output)
    
    tape = (
      local.code_768[0] == "+"
        ? [for i, b in local.iter_767.tape : (i == local.iter_767.tape_ptr ? (b + local.code_768[1]) % 256 : b)] :
      local.code_768[0] == "-"
        ? [for i, b in local.iter_767.tape : (i == local.iter_767.tape_ptr ? (b - local.code_768[1] + 256) % 256 : b)] :
      local.code_768[0] == ","
        ? [for i, b in local.iter_767.tape : (i == local.iter_767.tape_ptr ? local.ascii_lookup[substr(local.input_768, 0, 1)] : b)]
        : local.iter_767.tape)

    tape_ptr = (
      local.code_768[0] == "<"
        ? local.iter_767.tape_ptr - local.code_768[1] :
      local.code_768[0] == ">"
        ? local.iter_767.tape_ptr + local.code_768[1]
        : local.iter_767.tape_ptr)

    code_ptr = 2 + (
      local.code_768[0] == "["
        ? local.iter_767.tape[local.iter_767.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_767.code_ptr)] : local.iter_767.code_ptr :
      local.code_768[0] == "]"
        ? local.iter_767.tape[local.iter_767.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_767.code_ptr)] : local.iter_767.code_ptr
        : local.iter_767.code_ptr)

    steps_taken = 1 + local.iter_767.steps_taken
  }
}

locals {
  code_769 = (try(local.iter_768.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_768.code_ptr, local.iter_768.code_ptr + 2)
    : [null])

  input_769 = (local.code_769[0] == ","
    ? substr(local.input_768, local.code_769[1], -1)
    : local.input_768)

  iter_769 = try(local.iter_768.code_ptr >= length(var.code), true) ? local.iter_768 : {
    output = (local.code_769[0] == "."
      ? "${local.iter_768.output}${join("", [for _ in range(local.code_769[1]) : jsondecode(format("\"\\u%04x\"", local.iter_768.tape[local.iter_768.tape_ptr]))])}"
      : local.iter_768.output)
    
    tape = (
      local.code_769[0] == "+"
        ? [for i, b in local.iter_768.tape : (i == local.iter_768.tape_ptr ? (b + local.code_769[1]) % 256 : b)] :
      local.code_769[0] == "-"
        ? [for i, b in local.iter_768.tape : (i == local.iter_768.tape_ptr ? (b - local.code_769[1] + 256) % 256 : b)] :
      local.code_769[0] == ","
        ? [for i, b in local.iter_768.tape : (i == local.iter_768.tape_ptr ? local.ascii_lookup[substr(local.input_769, 0, 1)] : b)]
        : local.iter_768.tape)

    tape_ptr = (
      local.code_769[0] == "<"
        ? local.iter_768.tape_ptr - local.code_769[1] :
      local.code_769[0] == ">"
        ? local.iter_768.tape_ptr + local.code_769[1]
        : local.iter_768.tape_ptr)

    code_ptr = 2 + (
      local.code_769[0] == "["
        ? local.iter_768.tape[local.iter_768.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_768.code_ptr)] : local.iter_768.code_ptr :
      local.code_769[0] == "]"
        ? local.iter_768.tape[local.iter_768.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_768.code_ptr)] : local.iter_768.code_ptr
        : local.iter_768.code_ptr)

    steps_taken = 1 + local.iter_768.steps_taken
  }
}

locals {
  code_770 = (try(local.iter_769.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_769.code_ptr, local.iter_769.code_ptr + 2)
    : [null])

  input_770 = (local.code_770[0] == ","
    ? substr(local.input_769, local.code_770[1], -1)
    : local.input_769)

  iter_770 = try(local.iter_769.code_ptr >= length(var.code), true) ? local.iter_769 : {
    output = (local.code_770[0] == "."
      ? "${local.iter_769.output}${join("", [for _ in range(local.code_770[1]) : jsondecode(format("\"\\u%04x\"", local.iter_769.tape[local.iter_769.tape_ptr]))])}"
      : local.iter_769.output)
    
    tape = (
      local.code_770[0] == "+"
        ? [for i, b in local.iter_769.tape : (i == local.iter_769.tape_ptr ? (b + local.code_770[1]) % 256 : b)] :
      local.code_770[0] == "-"
        ? [for i, b in local.iter_769.tape : (i == local.iter_769.tape_ptr ? (b - local.code_770[1] + 256) % 256 : b)] :
      local.code_770[0] == ","
        ? [for i, b in local.iter_769.tape : (i == local.iter_769.tape_ptr ? local.ascii_lookup[substr(local.input_770, 0, 1)] : b)]
        : local.iter_769.tape)

    tape_ptr = (
      local.code_770[0] == "<"
        ? local.iter_769.tape_ptr - local.code_770[1] :
      local.code_770[0] == ">"
        ? local.iter_769.tape_ptr + local.code_770[1]
        : local.iter_769.tape_ptr)

    code_ptr = 2 + (
      local.code_770[0] == "["
        ? local.iter_769.tape[local.iter_769.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_769.code_ptr)] : local.iter_769.code_ptr :
      local.code_770[0] == "]"
        ? local.iter_769.tape[local.iter_769.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_769.code_ptr)] : local.iter_769.code_ptr
        : local.iter_769.code_ptr)

    steps_taken = 1 + local.iter_769.steps_taken
  }
}

locals {
  code_771 = (try(local.iter_770.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_770.code_ptr, local.iter_770.code_ptr + 2)
    : [null])

  input_771 = (local.code_771[0] == ","
    ? substr(local.input_770, local.code_771[1], -1)
    : local.input_770)

  iter_771 = try(local.iter_770.code_ptr >= length(var.code), true) ? local.iter_770 : {
    output = (local.code_771[0] == "."
      ? "${local.iter_770.output}${join("", [for _ in range(local.code_771[1]) : jsondecode(format("\"\\u%04x\"", local.iter_770.tape[local.iter_770.tape_ptr]))])}"
      : local.iter_770.output)
    
    tape = (
      local.code_771[0] == "+"
        ? [for i, b in local.iter_770.tape : (i == local.iter_770.tape_ptr ? (b + local.code_771[1]) % 256 : b)] :
      local.code_771[0] == "-"
        ? [for i, b in local.iter_770.tape : (i == local.iter_770.tape_ptr ? (b - local.code_771[1] + 256) % 256 : b)] :
      local.code_771[0] == ","
        ? [for i, b in local.iter_770.tape : (i == local.iter_770.tape_ptr ? local.ascii_lookup[substr(local.input_771, 0, 1)] : b)]
        : local.iter_770.tape)

    tape_ptr = (
      local.code_771[0] == "<"
        ? local.iter_770.tape_ptr - local.code_771[1] :
      local.code_771[0] == ">"
        ? local.iter_770.tape_ptr + local.code_771[1]
        : local.iter_770.tape_ptr)

    code_ptr = 2 + (
      local.code_771[0] == "["
        ? local.iter_770.tape[local.iter_770.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_770.code_ptr)] : local.iter_770.code_ptr :
      local.code_771[0] == "]"
        ? local.iter_770.tape[local.iter_770.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_770.code_ptr)] : local.iter_770.code_ptr
        : local.iter_770.code_ptr)

    steps_taken = 1 + local.iter_770.steps_taken
  }
}

locals {
  code_772 = (try(local.iter_771.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_771.code_ptr, local.iter_771.code_ptr + 2)
    : [null])

  input_772 = (local.code_772[0] == ","
    ? substr(local.input_771, local.code_772[1], -1)
    : local.input_771)

  iter_772 = try(local.iter_771.code_ptr >= length(var.code), true) ? local.iter_771 : {
    output = (local.code_772[0] == "."
      ? "${local.iter_771.output}${join("", [for _ in range(local.code_772[1]) : jsondecode(format("\"\\u%04x\"", local.iter_771.tape[local.iter_771.tape_ptr]))])}"
      : local.iter_771.output)
    
    tape = (
      local.code_772[0] == "+"
        ? [for i, b in local.iter_771.tape : (i == local.iter_771.tape_ptr ? (b + local.code_772[1]) % 256 : b)] :
      local.code_772[0] == "-"
        ? [for i, b in local.iter_771.tape : (i == local.iter_771.tape_ptr ? (b - local.code_772[1] + 256) % 256 : b)] :
      local.code_772[0] == ","
        ? [for i, b in local.iter_771.tape : (i == local.iter_771.tape_ptr ? local.ascii_lookup[substr(local.input_772, 0, 1)] : b)]
        : local.iter_771.tape)

    tape_ptr = (
      local.code_772[0] == "<"
        ? local.iter_771.tape_ptr - local.code_772[1] :
      local.code_772[0] == ">"
        ? local.iter_771.tape_ptr + local.code_772[1]
        : local.iter_771.tape_ptr)

    code_ptr = 2 + (
      local.code_772[0] == "["
        ? local.iter_771.tape[local.iter_771.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_771.code_ptr)] : local.iter_771.code_ptr :
      local.code_772[0] == "]"
        ? local.iter_771.tape[local.iter_771.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_771.code_ptr)] : local.iter_771.code_ptr
        : local.iter_771.code_ptr)

    steps_taken = 1 + local.iter_771.steps_taken
  }
}

locals {
  code_773 = (try(local.iter_772.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_772.code_ptr, local.iter_772.code_ptr + 2)
    : [null])

  input_773 = (local.code_773[0] == ","
    ? substr(local.input_772, local.code_773[1], -1)
    : local.input_772)

  iter_773 = try(local.iter_772.code_ptr >= length(var.code), true) ? local.iter_772 : {
    output = (local.code_773[0] == "."
      ? "${local.iter_772.output}${join("", [for _ in range(local.code_773[1]) : jsondecode(format("\"\\u%04x\"", local.iter_772.tape[local.iter_772.tape_ptr]))])}"
      : local.iter_772.output)
    
    tape = (
      local.code_773[0] == "+"
        ? [for i, b in local.iter_772.tape : (i == local.iter_772.tape_ptr ? (b + local.code_773[1]) % 256 : b)] :
      local.code_773[0] == "-"
        ? [for i, b in local.iter_772.tape : (i == local.iter_772.tape_ptr ? (b - local.code_773[1] + 256) % 256 : b)] :
      local.code_773[0] == ","
        ? [for i, b in local.iter_772.tape : (i == local.iter_772.tape_ptr ? local.ascii_lookup[substr(local.input_773, 0, 1)] : b)]
        : local.iter_772.tape)

    tape_ptr = (
      local.code_773[0] == "<"
        ? local.iter_772.tape_ptr - local.code_773[1] :
      local.code_773[0] == ">"
        ? local.iter_772.tape_ptr + local.code_773[1]
        : local.iter_772.tape_ptr)

    code_ptr = 2 + (
      local.code_773[0] == "["
        ? local.iter_772.tape[local.iter_772.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_772.code_ptr)] : local.iter_772.code_ptr :
      local.code_773[0] == "]"
        ? local.iter_772.tape[local.iter_772.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_772.code_ptr)] : local.iter_772.code_ptr
        : local.iter_772.code_ptr)

    steps_taken = 1 + local.iter_772.steps_taken
  }
}

locals {
  code_774 = (try(local.iter_773.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_773.code_ptr, local.iter_773.code_ptr + 2)
    : [null])

  input_774 = (local.code_774[0] == ","
    ? substr(local.input_773, local.code_774[1], -1)
    : local.input_773)

  iter_774 = try(local.iter_773.code_ptr >= length(var.code), true) ? local.iter_773 : {
    output = (local.code_774[0] == "."
      ? "${local.iter_773.output}${join("", [for _ in range(local.code_774[1]) : jsondecode(format("\"\\u%04x\"", local.iter_773.tape[local.iter_773.tape_ptr]))])}"
      : local.iter_773.output)
    
    tape = (
      local.code_774[0] == "+"
        ? [for i, b in local.iter_773.tape : (i == local.iter_773.tape_ptr ? (b + local.code_774[1]) % 256 : b)] :
      local.code_774[0] == "-"
        ? [for i, b in local.iter_773.tape : (i == local.iter_773.tape_ptr ? (b - local.code_774[1] + 256) % 256 : b)] :
      local.code_774[0] == ","
        ? [for i, b in local.iter_773.tape : (i == local.iter_773.tape_ptr ? local.ascii_lookup[substr(local.input_774, 0, 1)] : b)]
        : local.iter_773.tape)

    tape_ptr = (
      local.code_774[0] == "<"
        ? local.iter_773.tape_ptr - local.code_774[1] :
      local.code_774[0] == ">"
        ? local.iter_773.tape_ptr + local.code_774[1]
        : local.iter_773.tape_ptr)

    code_ptr = 2 + (
      local.code_774[0] == "["
        ? local.iter_773.tape[local.iter_773.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_773.code_ptr)] : local.iter_773.code_ptr :
      local.code_774[0] == "]"
        ? local.iter_773.tape[local.iter_773.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_773.code_ptr)] : local.iter_773.code_ptr
        : local.iter_773.code_ptr)

    steps_taken = 1 + local.iter_773.steps_taken
  }
}

locals {
  code_775 = (try(local.iter_774.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_774.code_ptr, local.iter_774.code_ptr + 2)
    : [null])

  input_775 = (local.code_775[0] == ","
    ? substr(local.input_774, local.code_775[1], -1)
    : local.input_774)

  iter_775 = try(local.iter_774.code_ptr >= length(var.code), true) ? local.iter_774 : {
    output = (local.code_775[0] == "."
      ? "${local.iter_774.output}${join("", [for _ in range(local.code_775[1]) : jsondecode(format("\"\\u%04x\"", local.iter_774.tape[local.iter_774.tape_ptr]))])}"
      : local.iter_774.output)
    
    tape = (
      local.code_775[0] == "+"
        ? [for i, b in local.iter_774.tape : (i == local.iter_774.tape_ptr ? (b + local.code_775[1]) % 256 : b)] :
      local.code_775[0] == "-"
        ? [for i, b in local.iter_774.tape : (i == local.iter_774.tape_ptr ? (b - local.code_775[1] + 256) % 256 : b)] :
      local.code_775[0] == ","
        ? [for i, b in local.iter_774.tape : (i == local.iter_774.tape_ptr ? local.ascii_lookup[substr(local.input_775, 0, 1)] : b)]
        : local.iter_774.tape)

    tape_ptr = (
      local.code_775[0] == "<"
        ? local.iter_774.tape_ptr - local.code_775[1] :
      local.code_775[0] == ">"
        ? local.iter_774.tape_ptr + local.code_775[1]
        : local.iter_774.tape_ptr)

    code_ptr = 2 + (
      local.code_775[0] == "["
        ? local.iter_774.tape[local.iter_774.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_774.code_ptr)] : local.iter_774.code_ptr :
      local.code_775[0] == "]"
        ? local.iter_774.tape[local.iter_774.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_774.code_ptr)] : local.iter_774.code_ptr
        : local.iter_774.code_ptr)

    steps_taken = 1 + local.iter_774.steps_taken
  }
}

locals {
  code_776 = (try(local.iter_775.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_775.code_ptr, local.iter_775.code_ptr + 2)
    : [null])

  input_776 = (local.code_776[0] == ","
    ? substr(local.input_775, local.code_776[1], -1)
    : local.input_775)

  iter_776 = try(local.iter_775.code_ptr >= length(var.code), true) ? local.iter_775 : {
    output = (local.code_776[0] == "."
      ? "${local.iter_775.output}${join("", [for _ in range(local.code_776[1]) : jsondecode(format("\"\\u%04x\"", local.iter_775.tape[local.iter_775.tape_ptr]))])}"
      : local.iter_775.output)
    
    tape = (
      local.code_776[0] == "+"
        ? [for i, b in local.iter_775.tape : (i == local.iter_775.tape_ptr ? (b + local.code_776[1]) % 256 : b)] :
      local.code_776[0] == "-"
        ? [for i, b in local.iter_775.tape : (i == local.iter_775.tape_ptr ? (b - local.code_776[1] + 256) % 256 : b)] :
      local.code_776[0] == ","
        ? [for i, b in local.iter_775.tape : (i == local.iter_775.tape_ptr ? local.ascii_lookup[substr(local.input_776, 0, 1)] : b)]
        : local.iter_775.tape)

    tape_ptr = (
      local.code_776[0] == "<"
        ? local.iter_775.tape_ptr - local.code_776[1] :
      local.code_776[0] == ">"
        ? local.iter_775.tape_ptr + local.code_776[1]
        : local.iter_775.tape_ptr)

    code_ptr = 2 + (
      local.code_776[0] == "["
        ? local.iter_775.tape[local.iter_775.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_775.code_ptr)] : local.iter_775.code_ptr :
      local.code_776[0] == "]"
        ? local.iter_775.tape[local.iter_775.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_775.code_ptr)] : local.iter_775.code_ptr
        : local.iter_775.code_ptr)

    steps_taken = 1 + local.iter_775.steps_taken
  }
}

locals {
  code_777 = (try(local.iter_776.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_776.code_ptr, local.iter_776.code_ptr + 2)
    : [null])

  input_777 = (local.code_777[0] == ","
    ? substr(local.input_776, local.code_777[1], -1)
    : local.input_776)

  iter_777 = try(local.iter_776.code_ptr >= length(var.code), true) ? local.iter_776 : {
    output = (local.code_777[0] == "."
      ? "${local.iter_776.output}${join("", [for _ in range(local.code_777[1]) : jsondecode(format("\"\\u%04x\"", local.iter_776.tape[local.iter_776.tape_ptr]))])}"
      : local.iter_776.output)
    
    tape = (
      local.code_777[0] == "+"
        ? [for i, b in local.iter_776.tape : (i == local.iter_776.tape_ptr ? (b + local.code_777[1]) % 256 : b)] :
      local.code_777[0] == "-"
        ? [for i, b in local.iter_776.tape : (i == local.iter_776.tape_ptr ? (b - local.code_777[1] + 256) % 256 : b)] :
      local.code_777[0] == ","
        ? [for i, b in local.iter_776.tape : (i == local.iter_776.tape_ptr ? local.ascii_lookup[substr(local.input_777, 0, 1)] : b)]
        : local.iter_776.tape)

    tape_ptr = (
      local.code_777[0] == "<"
        ? local.iter_776.tape_ptr - local.code_777[1] :
      local.code_777[0] == ">"
        ? local.iter_776.tape_ptr + local.code_777[1]
        : local.iter_776.tape_ptr)

    code_ptr = 2 + (
      local.code_777[0] == "["
        ? local.iter_776.tape[local.iter_776.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_776.code_ptr)] : local.iter_776.code_ptr :
      local.code_777[0] == "]"
        ? local.iter_776.tape[local.iter_776.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_776.code_ptr)] : local.iter_776.code_ptr
        : local.iter_776.code_ptr)

    steps_taken = 1 + local.iter_776.steps_taken
  }
}

locals {
  code_778 = (try(local.iter_777.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_777.code_ptr, local.iter_777.code_ptr + 2)
    : [null])

  input_778 = (local.code_778[0] == ","
    ? substr(local.input_777, local.code_778[1], -1)
    : local.input_777)

  iter_778 = try(local.iter_777.code_ptr >= length(var.code), true) ? local.iter_777 : {
    output = (local.code_778[0] == "."
      ? "${local.iter_777.output}${join("", [for _ in range(local.code_778[1]) : jsondecode(format("\"\\u%04x\"", local.iter_777.tape[local.iter_777.tape_ptr]))])}"
      : local.iter_777.output)
    
    tape = (
      local.code_778[0] == "+"
        ? [for i, b in local.iter_777.tape : (i == local.iter_777.tape_ptr ? (b + local.code_778[1]) % 256 : b)] :
      local.code_778[0] == "-"
        ? [for i, b in local.iter_777.tape : (i == local.iter_777.tape_ptr ? (b - local.code_778[1] + 256) % 256 : b)] :
      local.code_778[0] == ","
        ? [for i, b in local.iter_777.tape : (i == local.iter_777.tape_ptr ? local.ascii_lookup[substr(local.input_778, 0, 1)] : b)]
        : local.iter_777.tape)

    tape_ptr = (
      local.code_778[0] == "<"
        ? local.iter_777.tape_ptr - local.code_778[1] :
      local.code_778[0] == ">"
        ? local.iter_777.tape_ptr + local.code_778[1]
        : local.iter_777.tape_ptr)

    code_ptr = 2 + (
      local.code_778[0] == "["
        ? local.iter_777.tape[local.iter_777.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_777.code_ptr)] : local.iter_777.code_ptr :
      local.code_778[0] == "]"
        ? local.iter_777.tape[local.iter_777.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_777.code_ptr)] : local.iter_777.code_ptr
        : local.iter_777.code_ptr)

    steps_taken = 1 + local.iter_777.steps_taken
  }
}

locals {
  code_779 = (try(local.iter_778.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_778.code_ptr, local.iter_778.code_ptr + 2)
    : [null])

  input_779 = (local.code_779[0] == ","
    ? substr(local.input_778, local.code_779[1], -1)
    : local.input_778)

  iter_779 = try(local.iter_778.code_ptr >= length(var.code), true) ? local.iter_778 : {
    output = (local.code_779[0] == "."
      ? "${local.iter_778.output}${join("", [for _ in range(local.code_779[1]) : jsondecode(format("\"\\u%04x\"", local.iter_778.tape[local.iter_778.tape_ptr]))])}"
      : local.iter_778.output)
    
    tape = (
      local.code_779[0] == "+"
        ? [for i, b in local.iter_778.tape : (i == local.iter_778.tape_ptr ? (b + local.code_779[1]) % 256 : b)] :
      local.code_779[0] == "-"
        ? [for i, b in local.iter_778.tape : (i == local.iter_778.tape_ptr ? (b - local.code_779[1] + 256) % 256 : b)] :
      local.code_779[0] == ","
        ? [for i, b in local.iter_778.tape : (i == local.iter_778.tape_ptr ? local.ascii_lookup[substr(local.input_779, 0, 1)] : b)]
        : local.iter_778.tape)

    tape_ptr = (
      local.code_779[0] == "<"
        ? local.iter_778.tape_ptr - local.code_779[1] :
      local.code_779[0] == ">"
        ? local.iter_778.tape_ptr + local.code_779[1]
        : local.iter_778.tape_ptr)

    code_ptr = 2 + (
      local.code_779[0] == "["
        ? local.iter_778.tape[local.iter_778.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_778.code_ptr)] : local.iter_778.code_ptr :
      local.code_779[0] == "]"
        ? local.iter_778.tape[local.iter_778.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_778.code_ptr)] : local.iter_778.code_ptr
        : local.iter_778.code_ptr)

    steps_taken = 1 + local.iter_778.steps_taken
  }
}

locals {
  code_780 = (try(local.iter_779.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_779.code_ptr, local.iter_779.code_ptr + 2)
    : [null])

  input_780 = (local.code_780[0] == ","
    ? substr(local.input_779, local.code_780[1], -1)
    : local.input_779)

  iter_780 = try(local.iter_779.code_ptr >= length(var.code), true) ? local.iter_779 : {
    output = (local.code_780[0] == "."
      ? "${local.iter_779.output}${join("", [for _ in range(local.code_780[1]) : jsondecode(format("\"\\u%04x\"", local.iter_779.tape[local.iter_779.tape_ptr]))])}"
      : local.iter_779.output)
    
    tape = (
      local.code_780[0] == "+"
        ? [for i, b in local.iter_779.tape : (i == local.iter_779.tape_ptr ? (b + local.code_780[1]) % 256 : b)] :
      local.code_780[0] == "-"
        ? [for i, b in local.iter_779.tape : (i == local.iter_779.tape_ptr ? (b - local.code_780[1] + 256) % 256 : b)] :
      local.code_780[0] == ","
        ? [for i, b in local.iter_779.tape : (i == local.iter_779.tape_ptr ? local.ascii_lookup[substr(local.input_780, 0, 1)] : b)]
        : local.iter_779.tape)

    tape_ptr = (
      local.code_780[0] == "<"
        ? local.iter_779.tape_ptr - local.code_780[1] :
      local.code_780[0] == ">"
        ? local.iter_779.tape_ptr + local.code_780[1]
        : local.iter_779.tape_ptr)

    code_ptr = 2 + (
      local.code_780[0] == "["
        ? local.iter_779.tape[local.iter_779.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_779.code_ptr)] : local.iter_779.code_ptr :
      local.code_780[0] == "]"
        ? local.iter_779.tape[local.iter_779.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_779.code_ptr)] : local.iter_779.code_ptr
        : local.iter_779.code_ptr)

    steps_taken = 1 + local.iter_779.steps_taken
  }
}

locals {
  code_781 = (try(local.iter_780.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_780.code_ptr, local.iter_780.code_ptr + 2)
    : [null])

  input_781 = (local.code_781[0] == ","
    ? substr(local.input_780, local.code_781[1], -1)
    : local.input_780)

  iter_781 = try(local.iter_780.code_ptr >= length(var.code), true) ? local.iter_780 : {
    output = (local.code_781[0] == "."
      ? "${local.iter_780.output}${join("", [for _ in range(local.code_781[1]) : jsondecode(format("\"\\u%04x\"", local.iter_780.tape[local.iter_780.tape_ptr]))])}"
      : local.iter_780.output)
    
    tape = (
      local.code_781[0] == "+"
        ? [for i, b in local.iter_780.tape : (i == local.iter_780.tape_ptr ? (b + local.code_781[1]) % 256 : b)] :
      local.code_781[0] == "-"
        ? [for i, b in local.iter_780.tape : (i == local.iter_780.tape_ptr ? (b - local.code_781[1] + 256) % 256 : b)] :
      local.code_781[0] == ","
        ? [for i, b in local.iter_780.tape : (i == local.iter_780.tape_ptr ? local.ascii_lookup[substr(local.input_781, 0, 1)] : b)]
        : local.iter_780.tape)

    tape_ptr = (
      local.code_781[0] == "<"
        ? local.iter_780.tape_ptr - local.code_781[1] :
      local.code_781[0] == ">"
        ? local.iter_780.tape_ptr + local.code_781[1]
        : local.iter_780.tape_ptr)

    code_ptr = 2 + (
      local.code_781[0] == "["
        ? local.iter_780.tape[local.iter_780.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_780.code_ptr)] : local.iter_780.code_ptr :
      local.code_781[0] == "]"
        ? local.iter_780.tape[local.iter_780.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_780.code_ptr)] : local.iter_780.code_ptr
        : local.iter_780.code_ptr)

    steps_taken = 1 + local.iter_780.steps_taken
  }
}

locals {
  code_782 = (try(local.iter_781.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_781.code_ptr, local.iter_781.code_ptr + 2)
    : [null])

  input_782 = (local.code_782[0] == ","
    ? substr(local.input_781, local.code_782[1], -1)
    : local.input_781)

  iter_782 = try(local.iter_781.code_ptr >= length(var.code), true) ? local.iter_781 : {
    output = (local.code_782[0] == "."
      ? "${local.iter_781.output}${join("", [for _ in range(local.code_782[1]) : jsondecode(format("\"\\u%04x\"", local.iter_781.tape[local.iter_781.tape_ptr]))])}"
      : local.iter_781.output)
    
    tape = (
      local.code_782[0] == "+"
        ? [for i, b in local.iter_781.tape : (i == local.iter_781.tape_ptr ? (b + local.code_782[1]) % 256 : b)] :
      local.code_782[0] == "-"
        ? [for i, b in local.iter_781.tape : (i == local.iter_781.tape_ptr ? (b - local.code_782[1] + 256) % 256 : b)] :
      local.code_782[0] == ","
        ? [for i, b in local.iter_781.tape : (i == local.iter_781.tape_ptr ? local.ascii_lookup[substr(local.input_782, 0, 1)] : b)]
        : local.iter_781.tape)

    tape_ptr = (
      local.code_782[0] == "<"
        ? local.iter_781.tape_ptr - local.code_782[1] :
      local.code_782[0] == ">"
        ? local.iter_781.tape_ptr + local.code_782[1]
        : local.iter_781.tape_ptr)

    code_ptr = 2 + (
      local.code_782[0] == "["
        ? local.iter_781.tape[local.iter_781.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_781.code_ptr)] : local.iter_781.code_ptr :
      local.code_782[0] == "]"
        ? local.iter_781.tape[local.iter_781.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_781.code_ptr)] : local.iter_781.code_ptr
        : local.iter_781.code_ptr)

    steps_taken = 1 + local.iter_781.steps_taken
  }
}

locals {
  code_783 = (try(local.iter_782.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_782.code_ptr, local.iter_782.code_ptr + 2)
    : [null])

  input_783 = (local.code_783[0] == ","
    ? substr(local.input_782, local.code_783[1], -1)
    : local.input_782)

  iter_783 = try(local.iter_782.code_ptr >= length(var.code), true) ? local.iter_782 : {
    output = (local.code_783[0] == "."
      ? "${local.iter_782.output}${join("", [for _ in range(local.code_783[1]) : jsondecode(format("\"\\u%04x\"", local.iter_782.tape[local.iter_782.tape_ptr]))])}"
      : local.iter_782.output)
    
    tape = (
      local.code_783[0] == "+"
        ? [for i, b in local.iter_782.tape : (i == local.iter_782.tape_ptr ? (b + local.code_783[1]) % 256 : b)] :
      local.code_783[0] == "-"
        ? [for i, b in local.iter_782.tape : (i == local.iter_782.tape_ptr ? (b - local.code_783[1] + 256) % 256 : b)] :
      local.code_783[0] == ","
        ? [for i, b in local.iter_782.tape : (i == local.iter_782.tape_ptr ? local.ascii_lookup[substr(local.input_783, 0, 1)] : b)]
        : local.iter_782.tape)

    tape_ptr = (
      local.code_783[0] == "<"
        ? local.iter_782.tape_ptr - local.code_783[1] :
      local.code_783[0] == ">"
        ? local.iter_782.tape_ptr + local.code_783[1]
        : local.iter_782.tape_ptr)

    code_ptr = 2 + (
      local.code_783[0] == "["
        ? local.iter_782.tape[local.iter_782.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_782.code_ptr)] : local.iter_782.code_ptr :
      local.code_783[0] == "]"
        ? local.iter_782.tape[local.iter_782.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_782.code_ptr)] : local.iter_782.code_ptr
        : local.iter_782.code_ptr)

    steps_taken = 1 + local.iter_782.steps_taken
  }
}

locals {
  code_784 = (try(local.iter_783.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_783.code_ptr, local.iter_783.code_ptr + 2)
    : [null])

  input_784 = (local.code_784[0] == ","
    ? substr(local.input_783, local.code_784[1], -1)
    : local.input_783)

  iter_784 = try(local.iter_783.code_ptr >= length(var.code), true) ? local.iter_783 : {
    output = (local.code_784[0] == "."
      ? "${local.iter_783.output}${join("", [for _ in range(local.code_784[1]) : jsondecode(format("\"\\u%04x\"", local.iter_783.tape[local.iter_783.tape_ptr]))])}"
      : local.iter_783.output)
    
    tape = (
      local.code_784[0] == "+"
        ? [for i, b in local.iter_783.tape : (i == local.iter_783.tape_ptr ? (b + local.code_784[1]) % 256 : b)] :
      local.code_784[0] == "-"
        ? [for i, b in local.iter_783.tape : (i == local.iter_783.tape_ptr ? (b - local.code_784[1] + 256) % 256 : b)] :
      local.code_784[0] == ","
        ? [for i, b in local.iter_783.tape : (i == local.iter_783.tape_ptr ? local.ascii_lookup[substr(local.input_784, 0, 1)] : b)]
        : local.iter_783.tape)

    tape_ptr = (
      local.code_784[0] == "<"
        ? local.iter_783.tape_ptr - local.code_784[1] :
      local.code_784[0] == ">"
        ? local.iter_783.tape_ptr + local.code_784[1]
        : local.iter_783.tape_ptr)

    code_ptr = 2 + (
      local.code_784[0] == "["
        ? local.iter_783.tape[local.iter_783.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_783.code_ptr)] : local.iter_783.code_ptr :
      local.code_784[0] == "]"
        ? local.iter_783.tape[local.iter_783.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_783.code_ptr)] : local.iter_783.code_ptr
        : local.iter_783.code_ptr)

    steps_taken = 1 + local.iter_783.steps_taken
  }
}

locals {
  code_785 = (try(local.iter_784.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_784.code_ptr, local.iter_784.code_ptr + 2)
    : [null])

  input_785 = (local.code_785[0] == ","
    ? substr(local.input_784, local.code_785[1], -1)
    : local.input_784)

  iter_785 = try(local.iter_784.code_ptr >= length(var.code), true) ? local.iter_784 : {
    output = (local.code_785[0] == "."
      ? "${local.iter_784.output}${join("", [for _ in range(local.code_785[1]) : jsondecode(format("\"\\u%04x\"", local.iter_784.tape[local.iter_784.tape_ptr]))])}"
      : local.iter_784.output)
    
    tape = (
      local.code_785[0] == "+"
        ? [for i, b in local.iter_784.tape : (i == local.iter_784.tape_ptr ? (b + local.code_785[1]) % 256 : b)] :
      local.code_785[0] == "-"
        ? [for i, b in local.iter_784.tape : (i == local.iter_784.tape_ptr ? (b - local.code_785[1] + 256) % 256 : b)] :
      local.code_785[0] == ","
        ? [for i, b in local.iter_784.tape : (i == local.iter_784.tape_ptr ? local.ascii_lookup[substr(local.input_785, 0, 1)] : b)]
        : local.iter_784.tape)

    tape_ptr = (
      local.code_785[0] == "<"
        ? local.iter_784.tape_ptr - local.code_785[1] :
      local.code_785[0] == ">"
        ? local.iter_784.tape_ptr + local.code_785[1]
        : local.iter_784.tape_ptr)

    code_ptr = 2 + (
      local.code_785[0] == "["
        ? local.iter_784.tape[local.iter_784.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_784.code_ptr)] : local.iter_784.code_ptr :
      local.code_785[0] == "]"
        ? local.iter_784.tape[local.iter_784.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_784.code_ptr)] : local.iter_784.code_ptr
        : local.iter_784.code_ptr)

    steps_taken = 1 + local.iter_784.steps_taken
  }
}

locals {
  code_786 = (try(local.iter_785.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_785.code_ptr, local.iter_785.code_ptr + 2)
    : [null])

  input_786 = (local.code_786[0] == ","
    ? substr(local.input_785, local.code_786[1], -1)
    : local.input_785)

  iter_786 = try(local.iter_785.code_ptr >= length(var.code), true) ? local.iter_785 : {
    output = (local.code_786[0] == "."
      ? "${local.iter_785.output}${join("", [for _ in range(local.code_786[1]) : jsondecode(format("\"\\u%04x\"", local.iter_785.tape[local.iter_785.tape_ptr]))])}"
      : local.iter_785.output)
    
    tape = (
      local.code_786[0] == "+"
        ? [for i, b in local.iter_785.tape : (i == local.iter_785.tape_ptr ? (b + local.code_786[1]) % 256 : b)] :
      local.code_786[0] == "-"
        ? [for i, b in local.iter_785.tape : (i == local.iter_785.tape_ptr ? (b - local.code_786[1] + 256) % 256 : b)] :
      local.code_786[0] == ","
        ? [for i, b in local.iter_785.tape : (i == local.iter_785.tape_ptr ? local.ascii_lookup[substr(local.input_786, 0, 1)] : b)]
        : local.iter_785.tape)

    tape_ptr = (
      local.code_786[0] == "<"
        ? local.iter_785.tape_ptr - local.code_786[1] :
      local.code_786[0] == ">"
        ? local.iter_785.tape_ptr + local.code_786[1]
        : local.iter_785.tape_ptr)

    code_ptr = 2 + (
      local.code_786[0] == "["
        ? local.iter_785.tape[local.iter_785.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_785.code_ptr)] : local.iter_785.code_ptr :
      local.code_786[0] == "]"
        ? local.iter_785.tape[local.iter_785.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_785.code_ptr)] : local.iter_785.code_ptr
        : local.iter_785.code_ptr)

    steps_taken = 1 + local.iter_785.steps_taken
  }
}

locals {
  code_787 = (try(local.iter_786.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_786.code_ptr, local.iter_786.code_ptr + 2)
    : [null])

  input_787 = (local.code_787[0] == ","
    ? substr(local.input_786, local.code_787[1], -1)
    : local.input_786)

  iter_787 = try(local.iter_786.code_ptr >= length(var.code), true) ? local.iter_786 : {
    output = (local.code_787[0] == "."
      ? "${local.iter_786.output}${join("", [for _ in range(local.code_787[1]) : jsondecode(format("\"\\u%04x\"", local.iter_786.tape[local.iter_786.tape_ptr]))])}"
      : local.iter_786.output)
    
    tape = (
      local.code_787[0] == "+"
        ? [for i, b in local.iter_786.tape : (i == local.iter_786.tape_ptr ? (b + local.code_787[1]) % 256 : b)] :
      local.code_787[0] == "-"
        ? [for i, b in local.iter_786.tape : (i == local.iter_786.tape_ptr ? (b - local.code_787[1] + 256) % 256 : b)] :
      local.code_787[0] == ","
        ? [for i, b in local.iter_786.tape : (i == local.iter_786.tape_ptr ? local.ascii_lookup[substr(local.input_787, 0, 1)] : b)]
        : local.iter_786.tape)

    tape_ptr = (
      local.code_787[0] == "<"
        ? local.iter_786.tape_ptr - local.code_787[1] :
      local.code_787[0] == ">"
        ? local.iter_786.tape_ptr + local.code_787[1]
        : local.iter_786.tape_ptr)

    code_ptr = 2 + (
      local.code_787[0] == "["
        ? local.iter_786.tape[local.iter_786.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_786.code_ptr)] : local.iter_786.code_ptr :
      local.code_787[0] == "]"
        ? local.iter_786.tape[local.iter_786.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_786.code_ptr)] : local.iter_786.code_ptr
        : local.iter_786.code_ptr)

    steps_taken = 1 + local.iter_786.steps_taken
  }
}

locals {
  code_788 = (try(local.iter_787.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_787.code_ptr, local.iter_787.code_ptr + 2)
    : [null])

  input_788 = (local.code_788[0] == ","
    ? substr(local.input_787, local.code_788[1], -1)
    : local.input_787)

  iter_788 = try(local.iter_787.code_ptr >= length(var.code), true) ? local.iter_787 : {
    output = (local.code_788[0] == "."
      ? "${local.iter_787.output}${join("", [for _ in range(local.code_788[1]) : jsondecode(format("\"\\u%04x\"", local.iter_787.tape[local.iter_787.tape_ptr]))])}"
      : local.iter_787.output)
    
    tape = (
      local.code_788[0] == "+"
        ? [for i, b in local.iter_787.tape : (i == local.iter_787.tape_ptr ? (b + local.code_788[1]) % 256 : b)] :
      local.code_788[0] == "-"
        ? [for i, b in local.iter_787.tape : (i == local.iter_787.tape_ptr ? (b - local.code_788[1] + 256) % 256 : b)] :
      local.code_788[0] == ","
        ? [for i, b in local.iter_787.tape : (i == local.iter_787.tape_ptr ? local.ascii_lookup[substr(local.input_788, 0, 1)] : b)]
        : local.iter_787.tape)

    tape_ptr = (
      local.code_788[0] == "<"
        ? local.iter_787.tape_ptr - local.code_788[1] :
      local.code_788[0] == ">"
        ? local.iter_787.tape_ptr + local.code_788[1]
        : local.iter_787.tape_ptr)

    code_ptr = 2 + (
      local.code_788[0] == "["
        ? local.iter_787.tape[local.iter_787.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_787.code_ptr)] : local.iter_787.code_ptr :
      local.code_788[0] == "]"
        ? local.iter_787.tape[local.iter_787.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_787.code_ptr)] : local.iter_787.code_ptr
        : local.iter_787.code_ptr)

    steps_taken = 1 + local.iter_787.steps_taken
  }
}

locals {
  code_789 = (try(local.iter_788.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_788.code_ptr, local.iter_788.code_ptr + 2)
    : [null])

  input_789 = (local.code_789[0] == ","
    ? substr(local.input_788, local.code_789[1], -1)
    : local.input_788)

  iter_789 = try(local.iter_788.code_ptr >= length(var.code), true) ? local.iter_788 : {
    output = (local.code_789[0] == "."
      ? "${local.iter_788.output}${join("", [for _ in range(local.code_789[1]) : jsondecode(format("\"\\u%04x\"", local.iter_788.tape[local.iter_788.tape_ptr]))])}"
      : local.iter_788.output)
    
    tape = (
      local.code_789[0] == "+"
        ? [for i, b in local.iter_788.tape : (i == local.iter_788.tape_ptr ? (b + local.code_789[1]) % 256 : b)] :
      local.code_789[0] == "-"
        ? [for i, b in local.iter_788.tape : (i == local.iter_788.tape_ptr ? (b - local.code_789[1] + 256) % 256 : b)] :
      local.code_789[0] == ","
        ? [for i, b in local.iter_788.tape : (i == local.iter_788.tape_ptr ? local.ascii_lookup[substr(local.input_789, 0, 1)] : b)]
        : local.iter_788.tape)

    tape_ptr = (
      local.code_789[0] == "<"
        ? local.iter_788.tape_ptr - local.code_789[1] :
      local.code_789[0] == ">"
        ? local.iter_788.tape_ptr + local.code_789[1]
        : local.iter_788.tape_ptr)

    code_ptr = 2 + (
      local.code_789[0] == "["
        ? local.iter_788.tape[local.iter_788.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_788.code_ptr)] : local.iter_788.code_ptr :
      local.code_789[0] == "]"
        ? local.iter_788.tape[local.iter_788.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_788.code_ptr)] : local.iter_788.code_ptr
        : local.iter_788.code_ptr)

    steps_taken = 1 + local.iter_788.steps_taken
  }
}

locals {
  code_790 = (try(local.iter_789.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_789.code_ptr, local.iter_789.code_ptr + 2)
    : [null])

  input_790 = (local.code_790[0] == ","
    ? substr(local.input_789, local.code_790[1], -1)
    : local.input_789)

  iter_790 = try(local.iter_789.code_ptr >= length(var.code), true) ? local.iter_789 : {
    output = (local.code_790[0] == "."
      ? "${local.iter_789.output}${join("", [for _ in range(local.code_790[1]) : jsondecode(format("\"\\u%04x\"", local.iter_789.tape[local.iter_789.tape_ptr]))])}"
      : local.iter_789.output)
    
    tape = (
      local.code_790[0] == "+"
        ? [for i, b in local.iter_789.tape : (i == local.iter_789.tape_ptr ? (b + local.code_790[1]) % 256 : b)] :
      local.code_790[0] == "-"
        ? [for i, b in local.iter_789.tape : (i == local.iter_789.tape_ptr ? (b - local.code_790[1] + 256) % 256 : b)] :
      local.code_790[0] == ","
        ? [for i, b in local.iter_789.tape : (i == local.iter_789.tape_ptr ? local.ascii_lookup[substr(local.input_790, 0, 1)] : b)]
        : local.iter_789.tape)

    tape_ptr = (
      local.code_790[0] == "<"
        ? local.iter_789.tape_ptr - local.code_790[1] :
      local.code_790[0] == ">"
        ? local.iter_789.tape_ptr + local.code_790[1]
        : local.iter_789.tape_ptr)

    code_ptr = 2 + (
      local.code_790[0] == "["
        ? local.iter_789.tape[local.iter_789.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_789.code_ptr)] : local.iter_789.code_ptr :
      local.code_790[0] == "]"
        ? local.iter_789.tape[local.iter_789.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_789.code_ptr)] : local.iter_789.code_ptr
        : local.iter_789.code_ptr)

    steps_taken = 1 + local.iter_789.steps_taken
  }
}

locals {
  code_791 = (try(local.iter_790.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_790.code_ptr, local.iter_790.code_ptr + 2)
    : [null])

  input_791 = (local.code_791[0] == ","
    ? substr(local.input_790, local.code_791[1], -1)
    : local.input_790)

  iter_791 = try(local.iter_790.code_ptr >= length(var.code), true) ? local.iter_790 : {
    output = (local.code_791[0] == "."
      ? "${local.iter_790.output}${join("", [for _ in range(local.code_791[1]) : jsondecode(format("\"\\u%04x\"", local.iter_790.tape[local.iter_790.tape_ptr]))])}"
      : local.iter_790.output)
    
    tape = (
      local.code_791[0] == "+"
        ? [for i, b in local.iter_790.tape : (i == local.iter_790.tape_ptr ? (b + local.code_791[1]) % 256 : b)] :
      local.code_791[0] == "-"
        ? [for i, b in local.iter_790.tape : (i == local.iter_790.tape_ptr ? (b - local.code_791[1] + 256) % 256 : b)] :
      local.code_791[0] == ","
        ? [for i, b in local.iter_790.tape : (i == local.iter_790.tape_ptr ? local.ascii_lookup[substr(local.input_791, 0, 1)] : b)]
        : local.iter_790.tape)

    tape_ptr = (
      local.code_791[0] == "<"
        ? local.iter_790.tape_ptr - local.code_791[1] :
      local.code_791[0] == ">"
        ? local.iter_790.tape_ptr + local.code_791[1]
        : local.iter_790.tape_ptr)

    code_ptr = 2 + (
      local.code_791[0] == "["
        ? local.iter_790.tape[local.iter_790.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_790.code_ptr)] : local.iter_790.code_ptr :
      local.code_791[0] == "]"
        ? local.iter_790.tape[local.iter_790.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_790.code_ptr)] : local.iter_790.code_ptr
        : local.iter_790.code_ptr)

    steps_taken = 1 + local.iter_790.steps_taken
  }
}

locals {
  code_792 = (try(local.iter_791.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_791.code_ptr, local.iter_791.code_ptr + 2)
    : [null])

  input_792 = (local.code_792[0] == ","
    ? substr(local.input_791, local.code_792[1], -1)
    : local.input_791)

  iter_792 = try(local.iter_791.code_ptr >= length(var.code), true) ? local.iter_791 : {
    output = (local.code_792[0] == "."
      ? "${local.iter_791.output}${join("", [for _ in range(local.code_792[1]) : jsondecode(format("\"\\u%04x\"", local.iter_791.tape[local.iter_791.tape_ptr]))])}"
      : local.iter_791.output)
    
    tape = (
      local.code_792[0] == "+"
        ? [for i, b in local.iter_791.tape : (i == local.iter_791.tape_ptr ? (b + local.code_792[1]) % 256 : b)] :
      local.code_792[0] == "-"
        ? [for i, b in local.iter_791.tape : (i == local.iter_791.tape_ptr ? (b - local.code_792[1] + 256) % 256 : b)] :
      local.code_792[0] == ","
        ? [for i, b in local.iter_791.tape : (i == local.iter_791.tape_ptr ? local.ascii_lookup[substr(local.input_792, 0, 1)] : b)]
        : local.iter_791.tape)

    tape_ptr = (
      local.code_792[0] == "<"
        ? local.iter_791.tape_ptr - local.code_792[1] :
      local.code_792[0] == ">"
        ? local.iter_791.tape_ptr + local.code_792[1]
        : local.iter_791.tape_ptr)

    code_ptr = 2 + (
      local.code_792[0] == "["
        ? local.iter_791.tape[local.iter_791.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_791.code_ptr)] : local.iter_791.code_ptr :
      local.code_792[0] == "]"
        ? local.iter_791.tape[local.iter_791.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_791.code_ptr)] : local.iter_791.code_ptr
        : local.iter_791.code_ptr)

    steps_taken = 1 + local.iter_791.steps_taken
  }
}

locals {
  code_793 = (try(local.iter_792.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_792.code_ptr, local.iter_792.code_ptr + 2)
    : [null])

  input_793 = (local.code_793[0] == ","
    ? substr(local.input_792, local.code_793[1], -1)
    : local.input_792)

  iter_793 = try(local.iter_792.code_ptr >= length(var.code), true) ? local.iter_792 : {
    output = (local.code_793[0] == "."
      ? "${local.iter_792.output}${join("", [for _ in range(local.code_793[1]) : jsondecode(format("\"\\u%04x\"", local.iter_792.tape[local.iter_792.tape_ptr]))])}"
      : local.iter_792.output)
    
    tape = (
      local.code_793[0] == "+"
        ? [for i, b in local.iter_792.tape : (i == local.iter_792.tape_ptr ? (b + local.code_793[1]) % 256 : b)] :
      local.code_793[0] == "-"
        ? [for i, b in local.iter_792.tape : (i == local.iter_792.tape_ptr ? (b - local.code_793[1] + 256) % 256 : b)] :
      local.code_793[0] == ","
        ? [for i, b in local.iter_792.tape : (i == local.iter_792.tape_ptr ? local.ascii_lookup[substr(local.input_793, 0, 1)] : b)]
        : local.iter_792.tape)

    tape_ptr = (
      local.code_793[0] == "<"
        ? local.iter_792.tape_ptr - local.code_793[1] :
      local.code_793[0] == ">"
        ? local.iter_792.tape_ptr + local.code_793[1]
        : local.iter_792.tape_ptr)

    code_ptr = 2 + (
      local.code_793[0] == "["
        ? local.iter_792.tape[local.iter_792.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_792.code_ptr)] : local.iter_792.code_ptr :
      local.code_793[0] == "]"
        ? local.iter_792.tape[local.iter_792.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_792.code_ptr)] : local.iter_792.code_ptr
        : local.iter_792.code_ptr)

    steps_taken = 1 + local.iter_792.steps_taken
  }
}

locals {
  code_794 = (try(local.iter_793.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_793.code_ptr, local.iter_793.code_ptr + 2)
    : [null])

  input_794 = (local.code_794[0] == ","
    ? substr(local.input_793, local.code_794[1], -1)
    : local.input_793)

  iter_794 = try(local.iter_793.code_ptr >= length(var.code), true) ? local.iter_793 : {
    output = (local.code_794[0] == "."
      ? "${local.iter_793.output}${join("", [for _ in range(local.code_794[1]) : jsondecode(format("\"\\u%04x\"", local.iter_793.tape[local.iter_793.tape_ptr]))])}"
      : local.iter_793.output)
    
    tape = (
      local.code_794[0] == "+"
        ? [for i, b in local.iter_793.tape : (i == local.iter_793.tape_ptr ? (b + local.code_794[1]) % 256 : b)] :
      local.code_794[0] == "-"
        ? [for i, b in local.iter_793.tape : (i == local.iter_793.tape_ptr ? (b - local.code_794[1] + 256) % 256 : b)] :
      local.code_794[0] == ","
        ? [for i, b in local.iter_793.tape : (i == local.iter_793.tape_ptr ? local.ascii_lookup[substr(local.input_794, 0, 1)] : b)]
        : local.iter_793.tape)

    tape_ptr = (
      local.code_794[0] == "<"
        ? local.iter_793.tape_ptr - local.code_794[1] :
      local.code_794[0] == ">"
        ? local.iter_793.tape_ptr + local.code_794[1]
        : local.iter_793.tape_ptr)

    code_ptr = 2 + (
      local.code_794[0] == "["
        ? local.iter_793.tape[local.iter_793.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_793.code_ptr)] : local.iter_793.code_ptr :
      local.code_794[0] == "]"
        ? local.iter_793.tape[local.iter_793.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_793.code_ptr)] : local.iter_793.code_ptr
        : local.iter_793.code_ptr)

    steps_taken = 1 + local.iter_793.steps_taken
  }
}

locals {
  code_795 = (try(local.iter_794.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_794.code_ptr, local.iter_794.code_ptr + 2)
    : [null])

  input_795 = (local.code_795[0] == ","
    ? substr(local.input_794, local.code_795[1], -1)
    : local.input_794)

  iter_795 = try(local.iter_794.code_ptr >= length(var.code), true) ? local.iter_794 : {
    output = (local.code_795[0] == "."
      ? "${local.iter_794.output}${join("", [for _ in range(local.code_795[1]) : jsondecode(format("\"\\u%04x\"", local.iter_794.tape[local.iter_794.tape_ptr]))])}"
      : local.iter_794.output)
    
    tape = (
      local.code_795[0] == "+"
        ? [for i, b in local.iter_794.tape : (i == local.iter_794.tape_ptr ? (b + local.code_795[1]) % 256 : b)] :
      local.code_795[0] == "-"
        ? [for i, b in local.iter_794.tape : (i == local.iter_794.tape_ptr ? (b - local.code_795[1] + 256) % 256 : b)] :
      local.code_795[0] == ","
        ? [for i, b in local.iter_794.tape : (i == local.iter_794.tape_ptr ? local.ascii_lookup[substr(local.input_795, 0, 1)] : b)]
        : local.iter_794.tape)

    tape_ptr = (
      local.code_795[0] == "<"
        ? local.iter_794.tape_ptr - local.code_795[1] :
      local.code_795[0] == ">"
        ? local.iter_794.tape_ptr + local.code_795[1]
        : local.iter_794.tape_ptr)

    code_ptr = 2 + (
      local.code_795[0] == "["
        ? local.iter_794.tape[local.iter_794.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_794.code_ptr)] : local.iter_794.code_ptr :
      local.code_795[0] == "]"
        ? local.iter_794.tape[local.iter_794.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_794.code_ptr)] : local.iter_794.code_ptr
        : local.iter_794.code_ptr)

    steps_taken = 1 + local.iter_794.steps_taken
  }
}

locals {
  code_796 = (try(local.iter_795.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_795.code_ptr, local.iter_795.code_ptr + 2)
    : [null])

  input_796 = (local.code_796[0] == ","
    ? substr(local.input_795, local.code_796[1], -1)
    : local.input_795)

  iter_796 = try(local.iter_795.code_ptr >= length(var.code), true) ? local.iter_795 : {
    output = (local.code_796[0] == "."
      ? "${local.iter_795.output}${join("", [for _ in range(local.code_796[1]) : jsondecode(format("\"\\u%04x\"", local.iter_795.tape[local.iter_795.tape_ptr]))])}"
      : local.iter_795.output)
    
    tape = (
      local.code_796[0] == "+"
        ? [for i, b in local.iter_795.tape : (i == local.iter_795.tape_ptr ? (b + local.code_796[1]) % 256 : b)] :
      local.code_796[0] == "-"
        ? [for i, b in local.iter_795.tape : (i == local.iter_795.tape_ptr ? (b - local.code_796[1] + 256) % 256 : b)] :
      local.code_796[0] == ","
        ? [for i, b in local.iter_795.tape : (i == local.iter_795.tape_ptr ? local.ascii_lookup[substr(local.input_796, 0, 1)] : b)]
        : local.iter_795.tape)

    tape_ptr = (
      local.code_796[0] == "<"
        ? local.iter_795.tape_ptr - local.code_796[1] :
      local.code_796[0] == ">"
        ? local.iter_795.tape_ptr + local.code_796[1]
        : local.iter_795.tape_ptr)

    code_ptr = 2 + (
      local.code_796[0] == "["
        ? local.iter_795.tape[local.iter_795.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_795.code_ptr)] : local.iter_795.code_ptr :
      local.code_796[0] == "]"
        ? local.iter_795.tape[local.iter_795.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_795.code_ptr)] : local.iter_795.code_ptr
        : local.iter_795.code_ptr)

    steps_taken = 1 + local.iter_795.steps_taken
  }
}

locals {
  code_797 = (try(local.iter_796.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_796.code_ptr, local.iter_796.code_ptr + 2)
    : [null])

  input_797 = (local.code_797[0] == ","
    ? substr(local.input_796, local.code_797[1], -1)
    : local.input_796)

  iter_797 = try(local.iter_796.code_ptr >= length(var.code), true) ? local.iter_796 : {
    output = (local.code_797[0] == "."
      ? "${local.iter_796.output}${join("", [for _ in range(local.code_797[1]) : jsondecode(format("\"\\u%04x\"", local.iter_796.tape[local.iter_796.tape_ptr]))])}"
      : local.iter_796.output)
    
    tape = (
      local.code_797[0] == "+"
        ? [for i, b in local.iter_796.tape : (i == local.iter_796.tape_ptr ? (b + local.code_797[1]) % 256 : b)] :
      local.code_797[0] == "-"
        ? [for i, b in local.iter_796.tape : (i == local.iter_796.tape_ptr ? (b - local.code_797[1] + 256) % 256 : b)] :
      local.code_797[0] == ","
        ? [for i, b in local.iter_796.tape : (i == local.iter_796.tape_ptr ? local.ascii_lookup[substr(local.input_797, 0, 1)] : b)]
        : local.iter_796.tape)

    tape_ptr = (
      local.code_797[0] == "<"
        ? local.iter_796.tape_ptr - local.code_797[1] :
      local.code_797[0] == ">"
        ? local.iter_796.tape_ptr + local.code_797[1]
        : local.iter_796.tape_ptr)

    code_ptr = 2 + (
      local.code_797[0] == "["
        ? local.iter_796.tape[local.iter_796.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_796.code_ptr)] : local.iter_796.code_ptr :
      local.code_797[0] == "]"
        ? local.iter_796.tape[local.iter_796.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_796.code_ptr)] : local.iter_796.code_ptr
        : local.iter_796.code_ptr)

    steps_taken = 1 + local.iter_796.steps_taken
  }
}

locals {
  code_798 = (try(local.iter_797.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_797.code_ptr, local.iter_797.code_ptr + 2)
    : [null])

  input_798 = (local.code_798[0] == ","
    ? substr(local.input_797, local.code_798[1], -1)
    : local.input_797)

  iter_798 = try(local.iter_797.code_ptr >= length(var.code), true) ? local.iter_797 : {
    output = (local.code_798[0] == "."
      ? "${local.iter_797.output}${join("", [for _ in range(local.code_798[1]) : jsondecode(format("\"\\u%04x\"", local.iter_797.tape[local.iter_797.tape_ptr]))])}"
      : local.iter_797.output)
    
    tape = (
      local.code_798[0] == "+"
        ? [for i, b in local.iter_797.tape : (i == local.iter_797.tape_ptr ? (b + local.code_798[1]) % 256 : b)] :
      local.code_798[0] == "-"
        ? [for i, b in local.iter_797.tape : (i == local.iter_797.tape_ptr ? (b - local.code_798[1] + 256) % 256 : b)] :
      local.code_798[0] == ","
        ? [for i, b in local.iter_797.tape : (i == local.iter_797.tape_ptr ? local.ascii_lookup[substr(local.input_798, 0, 1)] : b)]
        : local.iter_797.tape)

    tape_ptr = (
      local.code_798[0] == "<"
        ? local.iter_797.tape_ptr - local.code_798[1] :
      local.code_798[0] == ">"
        ? local.iter_797.tape_ptr + local.code_798[1]
        : local.iter_797.tape_ptr)

    code_ptr = 2 + (
      local.code_798[0] == "["
        ? local.iter_797.tape[local.iter_797.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_797.code_ptr)] : local.iter_797.code_ptr :
      local.code_798[0] == "]"
        ? local.iter_797.tape[local.iter_797.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_797.code_ptr)] : local.iter_797.code_ptr
        : local.iter_797.code_ptr)

    steps_taken = 1 + local.iter_797.steps_taken
  }
}

locals {
  code_799 = (try(local.iter_798.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_798.code_ptr, local.iter_798.code_ptr + 2)
    : [null])

  input_799 = (local.code_799[0] == ","
    ? substr(local.input_798, local.code_799[1], -1)
    : local.input_798)

  iter_799 = try(local.iter_798.code_ptr >= length(var.code), true) ? local.iter_798 : {
    output = (local.code_799[0] == "."
      ? "${local.iter_798.output}${join("", [for _ in range(local.code_799[1]) : jsondecode(format("\"\\u%04x\"", local.iter_798.tape[local.iter_798.tape_ptr]))])}"
      : local.iter_798.output)
    
    tape = (
      local.code_799[0] == "+"
        ? [for i, b in local.iter_798.tape : (i == local.iter_798.tape_ptr ? (b + local.code_799[1]) % 256 : b)] :
      local.code_799[0] == "-"
        ? [for i, b in local.iter_798.tape : (i == local.iter_798.tape_ptr ? (b - local.code_799[1] + 256) % 256 : b)] :
      local.code_799[0] == ","
        ? [for i, b in local.iter_798.tape : (i == local.iter_798.tape_ptr ? local.ascii_lookup[substr(local.input_799, 0, 1)] : b)]
        : local.iter_798.tape)

    tape_ptr = (
      local.code_799[0] == "<"
        ? local.iter_798.tape_ptr - local.code_799[1] :
      local.code_799[0] == ">"
        ? local.iter_798.tape_ptr + local.code_799[1]
        : local.iter_798.tape_ptr)

    code_ptr = 2 + (
      local.code_799[0] == "["
        ? local.iter_798.tape[local.iter_798.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_798.code_ptr)] : local.iter_798.code_ptr :
      local.code_799[0] == "]"
        ? local.iter_798.tape[local.iter_798.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_798.code_ptr)] : local.iter_798.code_ptr
        : local.iter_798.code_ptr)

    steps_taken = 1 + local.iter_798.steps_taken
  }
}

locals {
  code_800 = (try(local.iter_799.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_799.code_ptr, local.iter_799.code_ptr + 2)
    : [null])

  input_800 = (local.code_800[0] == ","
    ? substr(local.input_799, local.code_800[1], -1)
    : local.input_799)

  iter_800 = try(local.iter_799.code_ptr >= length(var.code), true) ? local.iter_799 : {
    output = (local.code_800[0] == "."
      ? "${local.iter_799.output}${join("", [for _ in range(local.code_800[1]) : jsondecode(format("\"\\u%04x\"", local.iter_799.tape[local.iter_799.tape_ptr]))])}"
      : local.iter_799.output)
    
    tape = (
      local.code_800[0] == "+"
        ? [for i, b in local.iter_799.tape : (i == local.iter_799.tape_ptr ? (b + local.code_800[1]) % 256 : b)] :
      local.code_800[0] == "-"
        ? [for i, b in local.iter_799.tape : (i == local.iter_799.tape_ptr ? (b - local.code_800[1] + 256) % 256 : b)] :
      local.code_800[0] == ","
        ? [for i, b in local.iter_799.tape : (i == local.iter_799.tape_ptr ? local.ascii_lookup[substr(local.input_800, 0, 1)] : b)]
        : local.iter_799.tape)

    tape_ptr = (
      local.code_800[0] == "<"
        ? local.iter_799.tape_ptr - local.code_800[1] :
      local.code_800[0] == ">"
        ? local.iter_799.tape_ptr + local.code_800[1]
        : local.iter_799.tape_ptr)

    code_ptr = 2 + (
      local.code_800[0] == "["
        ? local.iter_799.tape[local.iter_799.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_799.code_ptr)] : local.iter_799.code_ptr :
      local.code_800[0] == "]"
        ? local.iter_799.tape[local.iter_799.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_799.code_ptr)] : local.iter_799.code_ptr
        : local.iter_799.code_ptr)

    steps_taken = 1 + local.iter_799.steps_taken
  }
}

locals {
  code_801 = (try(local.iter_800.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_800.code_ptr, local.iter_800.code_ptr + 2)
    : [null])

  input_801 = (local.code_801[0] == ","
    ? substr(local.input_800, local.code_801[1], -1)
    : local.input_800)

  iter_801 = try(local.iter_800.code_ptr >= length(var.code), true) ? local.iter_800 : {
    output = (local.code_801[0] == "."
      ? "${local.iter_800.output}${join("", [for _ in range(local.code_801[1]) : jsondecode(format("\"\\u%04x\"", local.iter_800.tape[local.iter_800.tape_ptr]))])}"
      : local.iter_800.output)
    
    tape = (
      local.code_801[0] == "+"
        ? [for i, b in local.iter_800.tape : (i == local.iter_800.tape_ptr ? (b + local.code_801[1]) % 256 : b)] :
      local.code_801[0] == "-"
        ? [for i, b in local.iter_800.tape : (i == local.iter_800.tape_ptr ? (b - local.code_801[1] + 256) % 256 : b)] :
      local.code_801[0] == ","
        ? [for i, b in local.iter_800.tape : (i == local.iter_800.tape_ptr ? local.ascii_lookup[substr(local.input_801, 0, 1)] : b)]
        : local.iter_800.tape)

    tape_ptr = (
      local.code_801[0] == "<"
        ? local.iter_800.tape_ptr - local.code_801[1] :
      local.code_801[0] == ">"
        ? local.iter_800.tape_ptr + local.code_801[1]
        : local.iter_800.tape_ptr)

    code_ptr = 2 + (
      local.code_801[0] == "["
        ? local.iter_800.tape[local.iter_800.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_800.code_ptr)] : local.iter_800.code_ptr :
      local.code_801[0] == "]"
        ? local.iter_800.tape[local.iter_800.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_800.code_ptr)] : local.iter_800.code_ptr
        : local.iter_800.code_ptr)

    steps_taken = 1 + local.iter_800.steps_taken
  }
}

locals {
  code_802 = (try(local.iter_801.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_801.code_ptr, local.iter_801.code_ptr + 2)
    : [null])

  input_802 = (local.code_802[0] == ","
    ? substr(local.input_801, local.code_802[1], -1)
    : local.input_801)

  iter_802 = try(local.iter_801.code_ptr >= length(var.code), true) ? local.iter_801 : {
    output = (local.code_802[0] == "."
      ? "${local.iter_801.output}${join("", [for _ in range(local.code_802[1]) : jsondecode(format("\"\\u%04x\"", local.iter_801.tape[local.iter_801.tape_ptr]))])}"
      : local.iter_801.output)
    
    tape = (
      local.code_802[0] == "+"
        ? [for i, b in local.iter_801.tape : (i == local.iter_801.tape_ptr ? (b + local.code_802[1]) % 256 : b)] :
      local.code_802[0] == "-"
        ? [for i, b in local.iter_801.tape : (i == local.iter_801.tape_ptr ? (b - local.code_802[1] + 256) % 256 : b)] :
      local.code_802[0] == ","
        ? [for i, b in local.iter_801.tape : (i == local.iter_801.tape_ptr ? local.ascii_lookup[substr(local.input_802, 0, 1)] : b)]
        : local.iter_801.tape)

    tape_ptr = (
      local.code_802[0] == "<"
        ? local.iter_801.tape_ptr - local.code_802[1] :
      local.code_802[0] == ">"
        ? local.iter_801.tape_ptr + local.code_802[1]
        : local.iter_801.tape_ptr)

    code_ptr = 2 + (
      local.code_802[0] == "["
        ? local.iter_801.tape[local.iter_801.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_801.code_ptr)] : local.iter_801.code_ptr :
      local.code_802[0] == "]"
        ? local.iter_801.tape[local.iter_801.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_801.code_ptr)] : local.iter_801.code_ptr
        : local.iter_801.code_ptr)

    steps_taken = 1 + local.iter_801.steps_taken
  }
}

locals {
  code_803 = (try(local.iter_802.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_802.code_ptr, local.iter_802.code_ptr + 2)
    : [null])

  input_803 = (local.code_803[0] == ","
    ? substr(local.input_802, local.code_803[1], -1)
    : local.input_802)

  iter_803 = try(local.iter_802.code_ptr >= length(var.code), true) ? local.iter_802 : {
    output = (local.code_803[0] == "."
      ? "${local.iter_802.output}${join("", [for _ in range(local.code_803[1]) : jsondecode(format("\"\\u%04x\"", local.iter_802.tape[local.iter_802.tape_ptr]))])}"
      : local.iter_802.output)
    
    tape = (
      local.code_803[0] == "+"
        ? [for i, b in local.iter_802.tape : (i == local.iter_802.tape_ptr ? (b + local.code_803[1]) % 256 : b)] :
      local.code_803[0] == "-"
        ? [for i, b in local.iter_802.tape : (i == local.iter_802.tape_ptr ? (b - local.code_803[1] + 256) % 256 : b)] :
      local.code_803[0] == ","
        ? [for i, b in local.iter_802.tape : (i == local.iter_802.tape_ptr ? local.ascii_lookup[substr(local.input_803, 0, 1)] : b)]
        : local.iter_802.tape)

    tape_ptr = (
      local.code_803[0] == "<"
        ? local.iter_802.tape_ptr - local.code_803[1] :
      local.code_803[0] == ">"
        ? local.iter_802.tape_ptr + local.code_803[1]
        : local.iter_802.tape_ptr)

    code_ptr = 2 + (
      local.code_803[0] == "["
        ? local.iter_802.tape[local.iter_802.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_802.code_ptr)] : local.iter_802.code_ptr :
      local.code_803[0] == "]"
        ? local.iter_802.tape[local.iter_802.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_802.code_ptr)] : local.iter_802.code_ptr
        : local.iter_802.code_ptr)

    steps_taken = 1 + local.iter_802.steps_taken
  }
}

locals {
  code_804 = (try(local.iter_803.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_803.code_ptr, local.iter_803.code_ptr + 2)
    : [null])

  input_804 = (local.code_804[0] == ","
    ? substr(local.input_803, local.code_804[1], -1)
    : local.input_803)

  iter_804 = try(local.iter_803.code_ptr >= length(var.code), true) ? local.iter_803 : {
    output = (local.code_804[0] == "."
      ? "${local.iter_803.output}${join("", [for _ in range(local.code_804[1]) : jsondecode(format("\"\\u%04x\"", local.iter_803.tape[local.iter_803.tape_ptr]))])}"
      : local.iter_803.output)
    
    tape = (
      local.code_804[0] == "+"
        ? [for i, b in local.iter_803.tape : (i == local.iter_803.tape_ptr ? (b + local.code_804[1]) % 256 : b)] :
      local.code_804[0] == "-"
        ? [for i, b in local.iter_803.tape : (i == local.iter_803.tape_ptr ? (b - local.code_804[1] + 256) % 256 : b)] :
      local.code_804[0] == ","
        ? [for i, b in local.iter_803.tape : (i == local.iter_803.tape_ptr ? local.ascii_lookup[substr(local.input_804, 0, 1)] : b)]
        : local.iter_803.tape)

    tape_ptr = (
      local.code_804[0] == "<"
        ? local.iter_803.tape_ptr - local.code_804[1] :
      local.code_804[0] == ">"
        ? local.iter_803.tape_ptr + local.code_804[1]
        : local.iter_803.tape_ptr)

    code_ptr = 2 + (
      local.code_804[0] == "["
        ? local.iter_803.tape[local.iter_803.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_803.code_ptr)] : local.iter_803.code_ptr :
      local.code_804[0] == "]"
        ? local.iter_803.tape[local.iter_803.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_803.code_ptr)] : local.iter_803.code_ptr
        : local.iter_803.code_ptr)

    steps_taken = 1 + local.iter_803.steps_taken
  }
}

locals {
  code_805 = (try(local.iter_804.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_804.code_ptr, local.iter_804.code_ptr + 2)
    : [null])

  input_805 = (local.code_805[0] == ","
    ? substr(local.input_804, local.code_805[1], -1)
    : local.input_804)

  iter_805 = try(local.iter_804.code_ptr >= length(var.code), true) ? local.iter_804 : {
    output = (local.code_805[0] == "."
      ? "${local.iter_804.output}${join("", [for _ in range(local.code_805[1]) : jsondecode(format("\"\\u%04x\"", local.iter_804.tape[local.iter_804.tape_ptr]))])}"
      : local.iter_804.output)
    
    tape = (
      local.code_805[0] == "+"
        ? [for i, b in local.iter_804.tape : (i == local.iter_804.tape_ptr ? (b + local.code_805[1]) % 256 : b)] :
      local.code_805[0] == "-"
        ? [for i, b in local.iter_804.tape : (i == local.iter_804.tape_ptr ? (b - local.code_805[1] + 256) % 256 : b)] :
      local.code_805[0] == ","
        ? [for i, b in local.iter_804.tape : (i == local.iter_804.tape_ptr ? local.ascii_lookup[substr(local.input_805, 0, 1)] : b)]
        : local.iter_804.tape)

    tape_ptr = (
      local.code_805[0] == "<"
        ? local.iter_804.tape_ptr - local.code_805[1] :
      local.code_805[0] == ">"
        ? local.iter_804.tape_ptr + local.code_805[1]
        : local.iter_804.tape_ptr)

    code_ptr = 2 + (
      local.code_805[0] == "["
        ? local.iter_804.tape[local.iter_804.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_804.code_ptr)] : local.iter_804.code_ptr :
      local.code_805[0] == "]"
        ? local.iter_804.tape[local.iter_804.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_804.code_ptr)] : local.iter_804.code_ptr
        : local.iter_804.code_ptr)

    steps_taken = 1 + local.iter_804.steps_taken
  }
}

locals {
  code_806 = (try(local.iter_805.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_805.code_ptr, local.iter_805.code_ptr + 2)
    : [null])

  input_806 = (local.code_806[0] == ","
    ? substr(local.input_805, local.code_806[1], -1)
    : local.input_805)

  iter_806 = try(local.iter_805.code_ptr >= length(var.code), true) ? local.iter_805 : {
    output = (local.code_806[0] == "."
      ? "${local.iter_805.output}${join("", [for _ in range(local.code_806[1]) : jsondecode(format("\"\\u%04x\"", local.iter_805.tape[local.iter_805.tape_ptr]))])}"
      : local.iter_805.output)
    
    tape = (
      local.code_806[0] == "+"
        ? [for i, b in local.iter_805.tape : (i == local.iter_805.tape_ptr ? (b + local.code_806[1]) % 256 : b)] :
      local.code_806[0] == "-"
        ? [for i, b in local.iter_805.tape : (i == local.iter_805.tape_ptr ? (b - local.code_806[1] + 256) % 256 : b)] :
      local.code_806[0] == ","
        ? [for i, b in local.iter_805.tape : (i == local.iter_805.tape_ptr ? local.ascii_lookup[substr(local.input_806, 0, 1)] : b)]
        : local.iter_805.tape)

    tape_ptr = (
      local.code_806[0] == "<"
        ? local.iter_805.tape_ptr - local.code_806[1] :
      local.code_806[0] == ">"
        ? local.iter_805.tape_ptr + local.code_806[1]
        : local.iter_805.tape_ptr)

    code_ptr = 2 + (
      local.code_806[0] == "["
        ? local.iter_805.tape[local.iter_805.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_805.code_ptr)] : local.iter_805.code_ptr :
      local.code_806[0] == "]"
        ? local.iter_805.tape[local.iter_805.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_805.code_ptr)] : local.iter_805.code_ptr
        : local.iter_805.code_ptr)

    steps_taken = 1 + local.iter_805.steps_taken
  }
}

locals {
  code_807 = (try(local.iter_806.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_806.code_ptr, local.iter_806.code_ptr + 2)
    : [null])

  input_807 = (local.code_807[0] == ","
    ? substr(local.input_806, local.code_807[1], -1)
    : local.input_806)

  iter_807 = try(local.iter_806.code_ptr >= length(var.code), true) ? local.iter_806 : {
    output = (local.code_807[0] == "."
      ? "${local.iter_806.output}${join("", [for _ in range(local.code_807[1]) : jsondecode(format("\"\\u%04x\"", local.iter_806.tape[local.iter_806.tape_ptr]))])}"
      : local.iter_806.output)
    
    tape = (
      local.code_807[0] == "+"
        ? [for i, b in local.iter_806.tape : (i == local.iter_806.tape_ptr ? (b + local.code_807[1]) % 256 : b)] :
      local.code_807[0] == "-"
        ? [for i, b in local.iter_806.tape : (i == local.iter_806.tape_ptr ? (b - local.code_807[1] + 256) % 256 : b)] :
      local.code_807[0] == ","
        ? [for i, b in local.iter_806.tape : (i == local.iter_806.tape_ptr ? local.ascii_lookup[substr(local.input_807, 0, 1)] : b)]
        : local.iter_806.tape)

    tape_ptr = (
      local.code_807[0] == "<"
        ? local.iter_806.tape_ptr - local.code_807[1] :
      local.code_807[0] == ">"
        ? local.iter_806.tape_ptr + local.code_807[1]
        : local.iter_806.tape_ptr)

    code_ptr = 2 + (
      local.code_807[0] == "["
        ? local.iter_806.tape[local.iter_806.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_806.code_ptr)] : local.iter_806.code_ptr :
      local.code_807[0] == "]"
        ? local.iter_806.tape[local.iter_806.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_806.code_ptr)] : local.iter_806.code_ptr
        : local.iter_806.code_ptr)

    steps_taken = 1 + local.iter_806.steps_taken
  }
}

locals {
  code_808 = (try(local.iter_807.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_807.code_ptr, local.iter_807.code_ptr + 2)
    : [null])

  input_808 = (local.code_808[0] == ","
    ? substr(local.input_807, local.code_808[1], -1)
    : local.input_807)

  iter_808 = try(local.iter_807.code_ptr >= length(var.code), true) ? local.iter_807 : {
    output = (local.code_808[0] == "."
      ? "${local.iter_807.output}${join("", [for _ in range(local.code_808[1]) : jsondecode(format("\"\\u%04x\"", local.iter_807.tape[local.iter_807.tape_ptr]))])}"
      : local.iter_807.output)
    
    tape = (
      local.code_808[0] == "+"
        ? [for i, b in local.iter_807.tape : (i == local.iter_807.tape_ptr ? (b + local.code_808[1]) % 256 : b)] :
      local.code_808[0] == "-"
        ? [for i, b in local.iter_807.tape : (i == local.iter_807.tape_ptr ? (b - local.code_808[1] + 256) % 256 : b)] :
      local.code_808[0] == ","
        ? [for i, b in local.iter_807.tape : (i == local.iter_807.tape_ptr ? local.ascii_lookup[substr(local.input_808, 0, 1)] : b)]
        : local.iter_807.tape)

    tape_ptr = (
      local.code_808[0] == "<"
        ? local.iter_807.tape_ptr - local.code_808[1] :
      local.code_808[0] == ">"
        ? local.iter_807.tape_ptr + local.code_808[1]
        : local.iter_807.tape_ptr)

    code_ptr = 2 + (
      local.code_808[0] == "["
        ? local.iter_807.tape[local.iter_807.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_807.code_ptr)] : local.iter_807.code_ptr :
      local.code_808[0] == "]"
        ? local.iter_807.tape[local.iter_807.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_807.code_ptr)] : local.iter_807.code_ptr
        : local.iter_807.code_ptr)

    steps_taken = 1 + local.iter_807.steps_taken
  }
}

locals {
  code_809 = (try(local.iter_808.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_808.code_ptr, local.iter_808.code_ptr + 2)
    : [null])

  input_809 = (local.code_809[0] == ","
    ? substr(local.input_808, local.code_809[1], -1)
    : local.input_808)

  iter_809 = try(local.iter_808.code_ptr >= length(var.code), true) ? local.iter_808 : {
    output = (local.code_809[0] == "."
      ? "${local.iter_808.output}${join("", [for _ in range(local.code_809[1]) : jsondecode(format("\"\\u%04x\"", local.iter_808.tape[local.iter_808.tape_ptr]))])}"
      : local.iter_808.output)
    
    tape = (
      local.code_809[0] == "+"
        ? [for i, b in local.iter_808.tape : (i == local.iter_808.tape_ptr ? (b + local.code_809[1]) % 256 : b)] :
      local.code_809[0] == "-"
        ? [for i, b in local.iter_808.tape : (i == local.iter_808.tape_ptr ? (b - local.code_809[1] + 256) % 256 : b)] :
      local.code_809[0] == ","
        ? [for i, b in local.iter_808.tape : (i == local.iter_808.tape_ptr ? local.ascii_lookup[substr(local.input_809, 0, 1)] : b)]
        : local.iter_808.tape)

    tape_ptr = (
      local.code_809[0] == "<"
        ? local.iter_808.tape_ptr - local.code_809[1] :
      local.code_809[0] == ">"
        ? local.iter_808.tape_ptr + local.code_809[1]
        : local.iter_808.tape_ptr)

    code_ptr = 2 + (
      local.code_809[0] == "["
        ? local.iter_808.tape[local.iter_808.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_808.code_ptr)] : local.iter_808.code_ptr :
      local.code_809[0] == "]"
        ? local.iter_808.tape[local.iter_808.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_808.code_ptr)] : local.iter_808.code_ptr
        : local.iter_808.code_ptr)

    steps_taken = 1 + local.iter_808.steps_taken
  }
}

locals {
  code_810 = (try(local.iter_809.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_809.code_ptr, local.iter_809.code_ptr + 2)
    : [null])

  input_810 = (local.code_810[0] == ","
    ? substr(local.input_809, local.code_810[1], -1)
    : local.input_809)

  iter_810 = try(local.iter_809.code_ptr >= length(var.code), true) ? local.iter_809 : {
    output = (local.code_810[0] == "."
      ? "${local.iter_809.output}${join("", [for _ in range(local.code_810[1]) : jsondecode(format("\"\\u%04x\"", local.iter_809.tape[local.iter_809.tape_ptr]))])}"
      : local.iter_809.output)
    
    tape = (
      local.code_810[0] == "+"
        ? [for i, b in local.iter_809.tape : (i == local.iter_809.tape_ptr ? (b + local.code_810[1]) % 256 : b)] :
      local.code_810[0] == "-"
        ? [for i, b in local.iter_809.tape : (i == local.iter_809.tape_ptr ? (b - local.code_810[1] + 256) % 256 : b)] :
      local.code_810[0] == ","
        ? [for i, b in local.iter_809.tape : (i == local.iter_809.tape_ptr ? local.ascii_lookup[substr(local.input_810, 0, 1)] : b)]
        : local.iter_809.tape)

    tape_ptr = (
      local.code_810[0] == "<"
        ? local.iter_809.tape_ptr - local.code_810[1] :
      local.code_810[0] == ">"
        ? local.iter_809.tape_ptr + local.code_810[1]
        : local.iter_809.tape_ptr)

    code_ptr = 2 + (
      local.code_810[0] == "["
        ? local.iter_809.tape[local.iter_809.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_809.code_ptr)] : local.iter_809.code_ptr :
      local.code_810[0] == "]"
        ? local.iter_809.tape[local.iter_809.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_809.code_ptr)] : local.iter_809.code_ptr
        : local.iter_809.code_ptr)

    steps_taken = 1 + local.iter_809.steps_taken
  }
}

locals {
  code_811 = (try(local.iter_810.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_810.code_ptr, local.iter_810.code_ptr + 2)
    : [null])

  input_811 = (local.code_811[0] == ","
    ? substr(local.input_810, local.code_811[1], -1)
    : local.input_810)

  iter_811 = try(local.iter_810.code_ptr >= length(var.code), true) ? local.iter_810 : {
    output = (local.code_811[0] == "."
      ? "${local.iter_810.output}${join("", [for _ in range(local.code_811[1]) : jsondecode(format("\"\\u%04x\"", local.iter_810.tape[local.iter_810.tape_ptr]))])}"
      : local.iter_810.output)
    
    tape = (
      local.code_811[0] == "+"
        ? [for i, b in local.iter_810.tape : (i == local.iter_810.tape_ptr ? (b + local.code_811[1]) % 256 : b)] :
      local.code_811[0] == "-"
        ? [for i, b in local.iter_810.tape : (i == local.iter_810.tape_ptr ? (b - local.code_811[1] + 256) % 256 : b)] :
      local.code_811[0] == ","
        ? [for i, b in local.iter_810.tape : (i == local.iter_810.tape_ptr ? local.ascii_lookup[substr(local.input_811, 0, 1)] : b)]
        : local.iter_810.tape)

    tape_ptr = (
      local.code_811[0] == "<"
        ? local.iter_810.tape_ptr - local.code_811[1] :
      local.code_811[0] == ">"
        ? local.iter_810.tape_ptr + local.code_811[1]
        : local.iter_810.tape_ptr)

    code_ptr = 2 + (
      local.code_811[0] == "["
        ? local.iter_810.tape[local.iter_810.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_810.code_ptr)] : local.iter_810.code_ptr :
      local.code_811[0] == "]"
        ? local.iter_810.tape[local.iter_810.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_810.code_ptr)] : local.iter_810.code_ptr
        : local.iter_810.code_ptr)

    steps_taken = 1 + local.iter_810.steps_taken
  }
}

locals {
  code_812 = (try(local.iter_811.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_811.code_ptr, local.iter_811.code_ptr + 2)
    : [null])

  input_812 = (local.code_812[0] == ","
    ? substr(local.input_811, local.code_812[1], -1)
    : local.input_811)

  iter_812 = try(local.iter_811.code_ptr >= length(var.code), true) ? local.iter_811 : {
    output = (local.code_812[0] == "."
      ? "${local.iter_811.output}${join("", [for _ in range(local.code_812[1]) : jsondecode(format("\"\\u%04x\"", local.iter_811.tape[local.iter_811.tape_ptr]))])}"
      : local.iter_811.output)
    
    tape = (
      local.code_812[0] == "+"
        ? [for i, b in local.iter_811.tape : (i == local.iter_811.tape_ptr ? (b + local.code_812[1]) % 256 : b)] :
      local.code_812[0] == "-"
        ? [for i, b in local.iter_811.tape : (i == local.iter_811.tape_ptr ? (b - local.code_812[1] + 256) % 256 : b)] :
      local.code_812[0] == ","
        ? [for i, b in local.iter_811.tape : (i == local.iter_811.tape_ptr ? local.ascii_lookup[substr(local.input_812, 0, 1)] : b)]
        : local.iter_811.tape)

    tape_ptr = (
      local.code_812[0] == "<"
        ? local.iter_811.tape_ptr - local.code_812[1] :
      local.code_812[0] == ">"
        ? local.iter_811.tape_ptr + local.code_812[1]
        : local.iter_811.tape_ptr)

    code_ptr = 2 + (
      local.code_812[0] == "["
        ? local.iter_811.tape[local.iter_811.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_811.code_ptr)] : local.iter_811.code_ptr :
      local.code_812[0] == "]"
        ? local.iter_811.tape[local.iter_811.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_811.code_ptr)] : local.iter_811.code_ptr
        : local.iter_811.code_ptr)

    steps_taken = 1 + local.iter_811.steps_taken
  }
}

locals {
  code_813 = (try(local.iter_812.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_812.code_ptr, local.iter_812.code_ptr + 2)
    : [null])

  input_813 = (local.code_813[0] == ","
    ? substr(local.input_812, local.code_813[1], -1)
    : local.input_812)

  iter_813 = try(local.iter_812.code_ptr >= length(var.code), true) ? local.iter_812 : {
    output = (local.code_813[0] == "."
      ? "${local.iter_812.output}${join("", [for _ in range(local.code_813[1]) : jsondecode(format("\"\\u%04x\"", local.iter_812.tape[local.iter_812.tape_ptr]))])}"
      : local.iter_812.output)
    
    tape = (
      local.code_813[0] == "+"
        ? [for i, b in local.iter_812.tape : (i == local.iter_812.tape_ptr ? (b + local.code_813[1]) % 256 : b)] :
      local.code_813[0] == "-"
        ? [for i, b in local.iter_812.tape : (i == local.iter_812.tape_ptr ? (b - local.code_813[1] + 256) % 256 : b)] :
      local.code_813[0] == ","
        ? [for i, b in local.iter_812.tape : (i == local.iter_812.tape_ptr ? local.ascii_lookup[substr(local.input_813, 0, 1)] : b)]
        : local.iter_812.tape)

    tape_ptr = (
      local.code_813[0] == "<"
        ? local.iter_812.tape_ptr - local.code_813[1] :
      local.code_813[0] == ">"
        ? local.iter_812.tape_ptr + local.code_813[1]
        : local.iter_812.tape_ptr)

    code_ptr = 2 + (
      local.code_813[0] == "["
        ? local.iter_812.tape[local.iter_812.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_812.code_ptr)] : local.iter_812.code_ptr :
      local.code_813[0] == "]"
        ? local.iter_812.tape[local.iter_812.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_812.code_ptr)] : local.iter_812.code_ptr
        : local.iter_812.code_ptr)

    steps_taken = 1 + local.iter_812.steps_taken
  }
}

locals {
  code_814 = (try(local.iter_813.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_813.code_ptr, local.iter_813.code_ptr + 2)
    : [null])

  input_814 = (local.code_814[0] == ","
    ? substr(local.input_813, local.code_814[1], -1)
    : local.input_813)

  iter_814 = try(local.iter_813.code_ptr >= length(var.code), true) ? local.iter_813 : {
    output = (local.code_814[0] == "."
      ? "${local.iter_813.output}${join("", [for _ in range(local.code_814[1]) : jsondecode(format("\"\\u%04x\"", local.iter_813.tape[local.iter_813.tape_ptr]))])}"
      : local.iter_813.output)
    
    tape = (
      local.code_814[0] == "+"
        ? [for i, b in local.iter_813.tape : (i == local.iter_813.tape_ptr ? (b + local.code_814[1]) % 256 : b)] :
      local.code_814[0] == "-"
        ? [for i, b in local.iter_813.tape : (i == local.iter_813.tape_ptr ? (b - local.code_814[1] + 256) % 256 : b)] :
      local.code_814[0] == ","
        ? [for i, b in local.iter_813.tape : (i == local.iter_813.tape_ptr ? local.ascii_lookup[substr(local.input_814, 0, 1)] : b)]
        : local.iter_813.tape)

    tape_ptr = (
      local.code_814[0] == "<"
        ? local.iter_813.tape_ptr - local.code_814[1] :
      local.code_814[0] == ">"
        ? local.iter_813.tape_ptr + local.code_814[1]
        : local.iter_813.tape_ptr)

    code_ptr = 2 + (
      local.code_814[0] == "["
        ? local.iter_813.tape[local.iter_813.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_813.code_ptr)] : local.iter_813.code_ptr :
      local.code_814[0] == "]"
        ? local.iter_813.tape[local.iter_813.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_813.code_ptr)] : local.iter_813.code_ptr
        : local.iter_813.code_ptr)

    steps_taken = 1 + local.iter_813.steps_taken
  }
}

locals {
  code_815 = (try(local.iter_814.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_814.code_ptr, local.iter_814.code_ptr + 2)
    : [null])

  input_815 = (local.code_815[0] == ","
    ? substr(local.input_814, local.code_815[1], -1)
    : local.input_814)

  iter_815 = try(local.iter_814.code_ptr >= length(var.code), true) ? local.iter_814 : {
    output = (local.code_815[0] == "."
      ? "${local.iter_814.output}${join("", [for _ in range(local.code_815[1]) : jsondecode(format("\"\\u%04x\"", local.iter_814.tape[local.iter_814.tape_ptr]))])}"
      : local.iter_814.output)
    
    tape = (
      local.code_815[0] == "+"
        ? [for i, b in local.iter_814.tape : (i == local.iter_814.tape_ptr ? (b + local.code_815[1]) % 256 : b)] :
      local.code_815[0] == "-"
        ? [for i, b in local.iter_814.tape : (i == local.iter_814.tape_ptr ? (b - local.code_815[1] + 256) % 256 : b)] :
      local.code_815[0] == ","
        ? [for i, b in local.iter_814.tape : (i == local.iter_814.tape_ptr ? local.ascii_lookup[substr(local.input_815, 0, 1)] : b)]
        : local.iter_814.tape)

    tape_ptr = (
      local.code_815[0] == "<"
        ? local.iter_814.tape_ptr - local.code_815[1] :
      local.code_815[0] == ">"
        ? local.iter_814.tape_ptr + local.code_815[1]
        : local.iter_814.tape_ptr)

    code_ptr = 2 + (
      local.code_815[0] == "["
        ? local.iter_814.tape[local.iter_814.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_814.code_ptr)] : local.iter_814.code_ptr :
      local.code_815[0] == "]"
        ? local.iter_814.tape[local.iter_814.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_814.code_ptr)] : local.iter_814.code_ptr
        : local.iter_814.code_ptr)

    steps_taken = 1 + local.iter_814.steps_taken
  }
}

locals {
  code_816 = (try(local.iter_815.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_815.code_ptr, local.iter_815.code_ptr + 2)
    : [null])

  input_816 = (local.code_816[0] == ","
    ? substr(local.input_815, local.code_816[1], -1)
    : local.input_815)

  iter_816 = try(local.iter_815.code_ptr >= length(var.code), true) ? local.iter_815 : {
    output = (local.code_816[0] == "."
      ? "${local.iter_815.output}${join("", [for _ in range(local.code_816[1]) : jsondecode(format("\"\\u%04x\"", local.iter_815.tape[local.iter_815.tape_ptr]))])}"
      : local.iter_815.output)
    
    tape = (
      local.code_816[0] == "+"
        ? [for i, b in local.iter_815.tape : (i == local.iter_815.tape_ptr ? (b + local.code_816[1]) % 256 : b)] :
      local.code_816[0] == "-"
        ? [for i, b in local.iter_815.tape : (i == local.iter_815.tape_ptr ? (b - local.code_816[1] + 256) % 256 : b)] :
      local.code_816[0] == ","
        ? [for i, b in local.iter_815.tape : (i == local.iter_815.tape_ptr ? local.ascii_lookup[substr(local.input_816, 0, 1)] : b)]
        : local.iter_815.tape)

    tape_ptr = (
      local.code_816[0] == "<"
        ? local.iter_815.tape_ptr - local.code_816[1] :
      local.code_816[0] == ">"
        ? local.iter_815.tape_ptr + local.code_816[1]
        : local.iter_815.tape_ptr)

    code_ptr = 2 + (
      local.code_816[0] == "["
        ? local.iter_815.tape[local.iter_815.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_815.code_ptr)] : local.iter_815.code_ptr :
      local.code_816[0] == "]"
        ? local.iter_815.tape[local.iter_815.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_815.code_ptr)] : local.iter_815.code_ptr
        : local.iter_815.code_ptr)

    steps_taken = 1 + local.iter_815.steps_taken
  }
}

locals {
  code_817 = (try(local.iter_816.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_816.code_ptr, local.iter_816.code_ptr + 2)
    : [null])

  input_817 = (local.code_817[0] == ","
    ? substr(local.input_816, local.code_817[1], -1)
    : local.input_816)

  iter_817 = try(local.iter_816.code_ptr >= length(var.code), true) ? local.iter_816 : {
    output = (local.code_817[0] == "."
      ? "${local.iter_816.output}${join("", [for _ in range(local.code_817[1]) : jsondecode(format("\"\\u%04x\"", local.iter_816.tape[local.iter_816.tape_ptr]))])}"
      : local.iter_816.output)
    
    tape = (
      local.code_817[0] == "+"
        ? [for i, b in local.iter_816.tape : (i == local.iter_816.tape_ptr ? (b + local.code_817[1]) % 256 : b)] :
      local.code_817[0] == "-"
        ? [for i, b in local.iter_816.tape : (i == local.iter_816.tape_ptr ? (b - local.code_817[1] + 256) % 256 : b)] :
      local.code_817[0] == ","
        ? [for i, b in local.iter_816.tape : (i == local.iter_816.tape_ptr ? local.ascii_lookup[substr(local.input_817, 0, 1)] : b)]
        : local.iter_816.tape)

    tape_ptr = (
      local.code_817[0] == "<"
        ? local.iter_816.tape_ptr - local.code_817[1] :
      local.code_817[0] == ">"
        ? local.iter_816.tape_ptr + local.code_817[1]
        : local.iter_816.tape_ptr)

    code_ptr = 2 + (
      local.code_817[0] == "["
        ? local.iter_816.tape[local.iter_816.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_816.code_ptr)] : local.iter_816.code_ptr :
      local.code_817[0] == "]"
        ? local.iter_816.tape[local.iter_816.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_816.code_ptr)] : local.iter_816.code_ptr
        : local.iter_816.code_ptr)

    steps_taken = 1 + local.iter_816.steps_taken
  }
}

locals {
  code_818 = (try(local.iter_817.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_817.code_ptr, local.iter_817.code_ptr + 2)
    : [null])

  input_818 = (local.code_818[0] == ","
    ? substr(local.input_817, local.code_818[1], -1)
    : local.input_817)

  iter_818 = try(local.iter_817.code_ptr >= length(var.code), true) ? local.iter_817 : {
    output = (local.code_818[0] == "."
      ? "${local.iter_817.output}${join("", [for _ in range(local.code_818[1]) : jsondecode(format("\"\\u%04x\"", local.iter_817.tape[local.iter_817.tape_ptr]))])}"
      : local.iter_817.output)
    
    tape = (
      local.code_818[0] == "+"
        ? [for i, b in local.iter_817.tape : (i == local.iter_817.tape_ptr ? (b + local.code_818[1]) % 256 : b)] :
      local.code_818[0] == "-"
        ? [for i, b in local.iter_817.tape : (i == local.iter_817.tape_ptr ? (b - local.code_818[1] + 256) % 256 : b)] :
      local.code_818[0] == ","
        ? [for i, b in local.iter_817.tape : (i == local.iter_817.tape_ptr ? local.ascii_lookup[substr(local.input_818, 0, 1)] : b)]
        : local.iter_817.tape)

    tape_ptr = (
      local.code_818[0] == "<"
        ? local.iter_817.tape_ptr - local.code_818[1] :
      local.code_818[0] == ">"
        ? local.iter_817.tape_ptr + local.code_818[1]
        : local.iter_817.tape_ptr)

    code_ptr = 2 + (
      local.code_818[0] == "["
        ? local.iter_817.tape[local.iter_817.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_817.code_ptr)] : local.iter_817.code_ptr :
      local.code_818[0] == "]"
        ? local.iter_817.tape[local.iter_817.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_817.code_ptr)] : local.iter_817.code_ptr
        : local.iter_817.code_ptr)

    steps_taken = 1 + local.iter_817.steps_taken
  }
}

locals {
  code_819 = (try(local.iter_818.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_818.code_ptr, local.iter_818.code_ptr + 2)
    : [null])

  input_819 = (local.code_819[0] == ","
    ? substr(local.input_818, local.code_819[1], -1)
    : local.input_818)

  iter_819 = try(local.iter_818.code_ptr >= length(var.code), true) ? local.iter_818 : {
    output = (local.code_819[0] == "."
      ? "${local.iter_818.output}${join("", [for _ in range(local.code_819[1]) : jsondecode(format("\"\\u%04x\"", local.iter_818.tape[local.iter_818.tape_ptr]))])}"
      : local.iter_818.output)
    
    tape = (
      local.code_819[0] == "+"
        ? [for i, b in local.iter_818.tape : (i == local.iter_818.tape_ptr ? (b + local.code_819[1]) % 256 : b)] :
      local.code_819[0] == "-"
        ? [for i, b in local.iter_818.tape : (i == local.iter_818.tape_ptr ? (b - local.code_819[1] + 256) % 256 : b)] :
      local.code_819[0] == ","
        ? [for i, b in local.iter_818.tape : (i == local.iter_818.tape_ptr ? local.ascii_lookup[substr(local.input_819, 0, 1)] : b)]
        : local.iter_818.tape)

    tape_ptr = (
      local.code_819[0] == "<"
        ? local.iter_818.tape_ptr - local.code_819[1] :
      local.code_819[0] == ">"
        ? local.iter_818.tape_ptr + local.code_819[1]
        : local.iter_818.tape_ptr)

    code_ptr = 2 + (
      local.code_819[0] == "["
        ? local.iter_818.tape[local.iter_818.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_818.code_ptr)] : local.iter_818.code_ptr :
      local.code_819[0] == "]"
        ? local.iter_818.tape[local.iter_818.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_818.code_ptr)] : local.iter_818.code_ptr
        : local.iter_818.code_ptr)

    steps_taken = 1 + local.iter_818.steps_taken
  }
}

locals {
  code_820 = (try(local.iter_819.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_819.code_ptr, local.iter_819.code_ptr + 2)
    : [null])

  input_820 = (local.code_820[0] == ","
    ? substr(local.input_819, local.code_820[1], -1)
    : local.input_819)

  iter_820 = try(local.iter_819.code_ptr >= length(var.code), true) ? local.iter_819 : {
    output = (local.code_820[0] == "."
      ? "${local.iter_819.output}${join("", [for _ in range(local.code_820[1]) : jsondecode(format("\"\\u%04x\"", local.iter_819.tape[local.iter_819.tape_ptr]))])}"
      : local.iter_819.output)
    
    tape = (
      local.code_820[0] == "+"
        ? [for i, b in local.iter_819.tape : (i == local.iter_819.tape_ptr ? (b + local.code_820[1]) % 256 : b)] :
      local.code_820[0] == "-"
        ? [for i, b in local.iter_819.tape : (i == local.iter_819.tape_ptr ? (b - local.code_820[1] + 256) % 256 : b)] :
      local.code_820[0] == ","
        ? [for i, b in local.iter_819.tape : (i == local.iter_819.tape_ptr ? local.ascii_lookup[substr(local.input_820, 0, 1)] : b)]
        : local.iter_819.tape)

    tape_ptr = (
      local.code_820[0] == "<"
        ? local.iter_819.tape_ptr - local.code_820[1] :
      local.code_820[0] == ">"
        ? local.iter_819.tape_ptr + local.code_820[1]
        : local.iter_819.tape_ptr)

    code_ptr = 2 + (
      local.code_820[0] == "["
        ? local.iter_819.tape[local.iter_819.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_819.code_ptr)] : local.iter_819.code_ptr :
      local.code_820[0] == "]"
        ? local.iter_819.tape[local.iter_819.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_819.code_ptr)] : local.iter_819.code_ptr
        : local.iter_819.code_ptr)

    steps_taken = 1 + local.iter_819.steps_taken
  }
}

locals {
  code_821 = (try(local.iter_820.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_820.code_ptr, local.iter_820.code_ptr + 2)
    : [null])

  input_821 = (local.code_821[0] == ","
    ? substr(local.input_820, local.code_821[1], -1)
    : local.input_820)

  iter_821 = try(local.iter_820.code_ptr >= length(var.code), true) ? local.iter_820 : {
    output = (local.code_821[0] == "."
      ? "${local.iter_820.output}${join("", [for _ in range(local.code_821[1]) : jsondecode(format("\"\\u%04x\"", local.iter_820.tape[local.iter_820.tape_ptr]))])}"
      : local.iter_820.output)
    
    tape = (
      local.code_821[0] == "+"
        ? [for i, b in local.iter_820.tape : (i == local.iter_820.tape_ptr ? (b + local.code_821[1]) % 256 : b)] :
      local.code_821[0] == "-"
        ? [for i, b in local.iter_820.tape : (i == local.iter_820.tape_ptr ? (b - local.code_821[1] + 256) % 256 : b)] :
      local.code_821[0] == ","
        ? [for i, b in local.iter_820.tape : (i == local.iter_820.tape_ptr ? local.ascii_lookup[substr(local.input_821, 0, 1)] : b)]
        : local.iter_820.tape)

    tape_ptr = (
      local.code_821[0] == "<"
        ? local.iter_820.tape_ptr - local.code_821[1] :
      local.code_821[0] == ">"
        ? local.iter_820.tape_ptr + local.code_821[1]
        : local.iter_820.tape_ptr)

    code_ptr = 2 + (
      local.code_821[0] == "["
        ? local.iter_820.tape[local.iter_820.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_820.code_ptr)] : local.iter_820.code_ptr :
      local.code_821[0] == "]"
        ? local.iter_820.tape[local.iter_820.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_820.code_ptr)] : local.iter_820.code_ptr
        : local.iter_820.code_ptr)

    steps_taken = 1 + local.iter_820.steps_taken
  }
}

locals {
  code_822 = (try(local.iter_821.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_821.code_ptr, local.iter_821.code_ptr + 2)
    : [null])

  input_822 = (local.code_822[0] == ","
    ? substr(local.input_821, local.code_822[1], -1)
    : local.input_821)

  iter_822 = try(local.iter_821.code_ptr >= length(var.code), true) ? local.iter_821 : {
    output = (local.code_822[0] == "."
      ? "${local.iter_821.output}${join("", [for _ in range(local.code_822[1]) : jsondecode(format("\"\\u%04x\"", local.iter_821.tape[local.iter_821.tape_ptr]))])}"
      : local.iter_821.output)
    
    tape = (
      local.code_822[0] == "+"
        ? [for i, b in local.iter_821.tape : (i == local.iter_821.tape_ptr ? (b + local.code_822[1]) % 256 : b)] :
      local.code_822[0] == "-"
        ? [for i, b in local.iter_821.tape : (i == local.iter_821.tape_ptr ? (b - local.code_822[1] + 256) % 256 : b)] :
      local.code_822[0] == ","
        ? [for i, b in local.iter_821.tape : (i == local.iter_821.tape_ptr ? local.ascii_lookup[substr(local.input_822, 0, 1)] : b)]
        : local.iter_821.tape)

    tape_ptr = (
      local.code_822[0] == "<"
        ? local.iter_821.tape_ptr - local.code_822[1] :
      local.code_822[0] == ">"
        ? local.iter_821.tape_ptr + local.code_822[1]
        : local.iter_821.tape_ptr)

    code_ptr = 2 + (
      local.code_822[0] == "["
        ? local.iter_821.tape[local.iter_821.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_821.code_ptr)] : local.iter_821.code_ptr :
      local.code_822[0] == "]"
        ? local.iter_821.tape[local.iter_821.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_821.code_ptr)] : local.iter_821.code_ptr
        : local.iter_821.code_ptr)

    steps_taken = 1 + local.iter_821.steps_taken
  }
}

locals {
  code_823 = (try(local.iter_822.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_822.code_ptr, local.iter_822.code_ptr + 2)
    : [null])

  input_823 = (local.code_823[0] == ","
    ? substr(local.input_822, local.code_823[1], -1)
    : local.input_822)

  iter_823 = try(local.iter_822.code_ptr >= length(var.code), true) ? local.iter_822 : {
    output = (local.code_823[0] == "."
      ? "${local.iter_822.output}${join("", [for _ in range(local.code_823[1]) : jsondecode(format("\"\\u%04x\"", local.iter_822.tape[local.iter_822.tape_ptr]))])}"
      : local.iter_822.output)
    
    tape = (
      local.code_823[0] == "+"
        ? [for i, b in local.iter_822.tape : (i == local.iter_822.tape_ptr ? (b + local.code_823[1]) % 256 : b)] :
      local.code_823[0] == "-"
        ? [for i, b in local.iter_822.tape : (i == local.iter_822.tape_ptr ? (b - local.code_823[1] + 256) % 256 : b)] :
      local.code_823[0] == ","
        ? [for i, b in local.iter_822.tape : (i == local.iter_822.tape_ptr ? local.ascii_lookup[substr(local.input_823, 0, 1)] : b)]
        : local.iter_822.tape)

    tape_ptr = (
      local.code_823[0] == "<"
        ? local.iter_822.tape_ptr - local.code_823[1] :
      local.code_823[0] == ">"
        ? local.iter_822.tape_ptr + local.code_823[1]
        : local.iter_822.tape_ptr)

    code_ptr = 2 + (
      local.code_823[0] == "["
        ? local.iter_822.tape[local.iter_822.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_822.code_ptr)] : local.iter_822.code_ptr :
      local.code_823[0] == "]"
        ? local.iter_822.tape[local.iter_822.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_822.code_ptr)] : local.iter_822.code_ptr
        : local.iter_822.code_ptr)

    steps_taken = 1 + local.iter_822.steps_taken
  }
}

locals {
  code_824 = (try(local.iter_823.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_823.code_ptr, local.iter_823.code_ptr + 2)
    : [null])

  input_824 = (local.code_824[0] == ","
    ? substr(local.input_823, local.code_824[1], -1)
    : local.input_823)

  iter_824 = try(local.iter_823.code_ptr >= length(var.code), true) ? local.iter_823 : {
    output = (local.code_824[0] == "."
      ? "${local.iter_823.output}${join("", [for _ in range(local.code_824[1]) : jsondecode(format("\"\\u%04x\"", local.iter_823.tape[local.iter_823.tape_ptr]))])}"
      : local.iter_823.output)
    
    tape = (
      local.code_824[0] == "+"
        ? [for i, b in local.iter_823.tape : (i == local.iter_823.tape_ptr ? (b + local.code_824[1]) % 256 : b)] :
      local.code_824[0] == "-"
        ? [for i, b in local.iter_823.tape : (i == local.iter_823.tape_ptr ? (b - local.code_824[1] + 256) % 256 : b)] :
      local.code_824[0] == ","
        ? [for i, b in local.iter_823.tape : (i == local.iter_823.tape_ptr ? local.ascii_lookup[substr(local.input_824, 0, 1)] : b)]
        : local.iter_823.tape)

    tape_ptr = (
      local.code_824[0] == "<"
        ? local.iter_823.tape_ptr - local.code_824[1] :
      local.code_824[0] == ">"
        ? local.iter_823.tape_ptr + local.code_824[1]
        : local.iter_823.tape_ptr)

    code_ptr = 2 + (
      local.code_824[0] == "["
        ? local.iter_823.tape[local.iter_823.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_823.code_ptr)] : local.iter_823.code_ptr :
      local.code_824[0] == "]"
        ? local.iter_823.tape[local.iter_823.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_823.code_ptr)] : local.iter_823.code_ptr
        : local.iter_823.code_ptr)

    steps_taken = 1 + local.iter_823.steps_taken
  }
}

locals {
  code_825 = (try(local.iter_824.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_824.code_ptr, local.iter_824.code_ptr + 2)
    : [null])

  input_825 = (local.code_825[0] == ","
    ? substr(local.input_824, local.code_825[1], -1)
    : local.input_824)

  iter_825 = try(local.iter_824.code_ptr >= length(var.code), true) ? local.iter_824 : {
    output = (local.code_825[0] == "."
      ? "${local.iter_824.output}${join("", [for _ in range(local.code_825[1]) : jsondecode(format("\"\\u%04x\"", local.iter_824.tape[local.iter_824.tape_ptr]))])}"
      : local.iter_824.output)
    
    tape = (
      local.code_825[0] == "+"
        ? [for i, b in local.iter_824.tape : (i == local.iter_824.tape_ptr ? (b + local.code_825[1]) % 256 : b)] :
      local.code_825[0] == "-"
        ? [for i, b in local.iter_824.tape : (i == local.iter_824.tape_ptr ? (b - local.code_825[1] + 256) % 256 : b)] :
      local.code_825[0] == ","
        ? [for i, b in local.iter_824.tape : (i == local.iter_824.tape_ptr ? local.ascii_lookup[substr(local.input_825, 0, 1)] : b)]
        : local.iter_824.tape)

    tape_ptr = (
      local.code_825[0] == "<"
        ? local.iter_824.tape_ptr - local.code_825[1] :
      local.code_825[0] == ">"
        ? local.iter_824.tape_ptr + local.code_825[1]
        : local.iter_824.tape_ptr)

    code_ptr = 2 + (
      local.code_825[0] == "["
        ? local.iter_824.tape[local.iter_824.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_824.code_ptr)] : local.iter_824.code_ptr :
      local.code_825[0] == "]"
        ? local.iter_824.tape[local.iter_824.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_824.code_ptr)] : local.iter_824.code_ptr
        : local.iter_824.code_ptr)

    steps_taken = 1 + local.iter_824.steps_taken
  }
}

locals {
  code_826 = (try(local.iter_825.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_825.code_ptr, local.iter_825.code_ptr + 2)
    : [null])

  input_826 = (local.code_826[0] == ","
    ? substr(local.input_825, local.code_826[1], -1)
    : local.input_825)

  iter_826 = try(local.iter_825.code_ptr >= length(var.code), true) ? local.iter_825 : {
    output = (local.code_826[0] == "."
      ? "${local.iter_825.output}${join("", [for _ in range(local.code_826[1]) : jsondecode(format("\"\\u%04x\"", local.iter_825.tape[local.iter_825.tape_ptr]))])}"
      : local.iter_825.output)
    
    tape = (
      local.code_826[0] == "+"
        ? [for i, b in local.iter_825.tape : (i == local.iter_825.tape_ptr ? (b + local.code_826[1]) % 256 : b)] :
      local.code_826[0] == "-"
        ? [for i, b in local.iter_825.tape : (i == local.iter_825.tape_ptr ? (b - local.code_826[1] + 256) % 256 : b)] :
      local.code_826[0] == ","
        ? [for i, b in local.iter_825.tape : (i == local.iter_825.tape_ptr ? local.ascii_lookup[substr(local.input_826, 0, 1)] : b)]
        : local.iter_825.tape)

    tape_ptr = (
      local.code_826[0] == "<"
        ? local.iter_825.tape_ptr - local.code_826[1] :
      local.code_826[0] == ">"
        ? local.iter_825.tape_ptr + local.code_826[1]
        : local.iter_825.tape_ptr)

    code_ptr = 2 + (
      local.code_826[0] == "["
        ? local.iter_825.tape[local.iter_825.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_825.code_ptr)] : local.iter_825.code_ptr :
      local.code_826[0] == "]"
        ? local.iter_825.tape[local.iter_825.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_825.code_ptr)] : local.iter_825.code_ptr
        : local.iter_825.code_ptr)

    steps_taken = 1 + local.iter_825.steps_taken
  }
}

locals {
  code_827 = (try(local.iter_826.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_826.code_ptr, local.iter_826.code_ptr + 2)
    : [null])

  input_827 = (local.code_827[0] == ","
    ? substr(local.input_826, local.code_827[1], -1)
    : local.input_826)

  iter_827 = try(local.iter_826.code_ptr >= length(var.code), true) ? local.iter_826 : {
    output = (local.code_827[0] == "."
      ? "${local.iter_826.output}${join("", [for _ in range(local.code_827[1]) : jsondecode(format("\"\\u%04x\"", local.iter_826.tape[local.iter_826.tape_ptr]))])}"
      : local.iter_826.output)
    
    tape = (
      local.code_827[0] == "+"
        ? [for i, b in local.iter_826.tape : (i == local.iter_826.tape_ptr ? (b + local.code_827[1]) % 256 : b)] :
      local.code_827[0] == "-"
        ? [for i, b in local.iter_826.tape : (i == local.iter_826.tape_ptr ? (b - local.code_827[1] + 256) % 256 : b)] :
      local.code_827[0] == ","
        ? [for i, b in local.iter_826.tape : (i == local.iter_826.tape_ptr ? local.ascii_lookup[substr(local.input_827, 0, 1)] : b)]
        : local.iter_826.tape)

    tape_ptr = (
      local.code_827[0] == "<"
        ? local.iter_826.tape_ptr - local.code_827[1] :
      local.code_827[0] == ">"
        ? local.iter_826.tape_ptr + local.code_827[1]
        : local.iter_826.tape_ptr)

    code_ptr = 2 + (
      local.code_827[0] == "["
        ? local.iter_826.tape[local.iter_826.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_826.code_ptr)] : local.iter_826.code_ptr :
      local.code_827[0] == "]"
        ? local.iter_826.tape[local.iter_826.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_826.code_ptr)] : local.iter_826.code_ptr
        : local.iter_826.code_ptr)

    steps_taken = 1 + local.iter_826.steps_taken
  }
}

locals {
  code_828 = (try(local.iter_827.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_827.code_ptr, local.iter_827.code_ptr + 2)
    : [null])

  input_828 = (local.code_828[0] == ","
    ? substr(local.input_827, local.code_828[1], -1)
    : local.input_827)

  iter_828 = try(local.iter_827.code_ptr >= length(var.code), true) ? local.iter_827 : {
    output = (local.code_828[0] == "."
      ? "${local.iter_827.output}${join("", [for _ in range(local.code_828[1]) : jsondecode(format("\"\\u%04x\"", local.iter_827.tape[local.iter_827.tape_ptr]))])}"
      : local.iter_827.output)
    
    tape = (
      local.code_828[0] == "+"
        ? [for i, b in local.iter_827.tape : (i == local.iter_827.tape_ptr ? (b + local.code_828[1]) % 256 : b)] :
      local.code_828[0] == "-"
        ? [for i, b in local.iter_827.tape : (i == local.iter_827.tape_ptr ? (b - local.code_828[1] + 256) % 256 : b)] :
      local.code_828[0] == ","
        ? [for i, b in local.iter_827.tape : (i == local.iter_827.tape_ptr ? local.ascii_lookup[substr(local.input_828, 0, 1)] : b)]
        : local.iter_827.tape)

    tape_ptr = (
      local.code_828[0] == "<"
        ? local.iter_827.tape_ptr - local.code_828[1] :
      local.code_828[0] == ">"
        ? local.iter_827.tape_ptr + local.code_828[1]
        : local.iter_827.tape_ptr)

    code_ptr = 2 + (
      local.code_828[0] == "["
        ? local.iter_827.tape[local.iter_827.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_827.code_ptr)] : local.iter_827.code_ptr :
      local.code_828[0] == "]"
        ? local.iter_827.tape[local.iter_827.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_827.code_ptr)] : local.iter_827.code_ptr
        : local.iter_827.code_ptr)

    steps_taken = 1 + local.iter_827.steps_taken
  }
}

locals {
  code_829 = (try(local.iter_828.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_828.code_ptr, local.iter_828.code_ptr + 2)
    : [null])

  input_829 = (local.code_829[0] == ","
    ? substr(local.input_828, local.code_829[1], -1)
    : local.input_828)

  iter_829 = try(local.iter_828.code_ptr >= length(var.code), true) ? local.iter_828 : {
    output = (local.code_829[0] == "."
      ? "${local.iter_828.output}${join("", [for _ in range(local.code_829[1]) : jsondecode(format("\"\\u%04x\"", local.iter_828.tape[local.iter_828.tape_ptr]))])}"
      : local.iter_828.output)
    
    tape = (
      local.code_829[0] == "+"
        ? [for i, b in local.iter_828.tape : (i == local.iter_828.tape_ptr ? (b + local.code_829[1]) % 256 : b)] :
      local.code_829[0] == "-"
        ? [for i, b in local.iter_828.tape : (i == local.iter_828.tape_ptr ? (b - local.code_829[1] + 256) % 256 : b)] :
      local.code_829[0] == ","
        ? [for i, b in local.iter_828.tape : (i == local.iter_828.tape_ptr ? local.ascii_lookup[substr(local.input_829, 0, 1)] : b)]
        : local.iter_828.tape)

    tape_ptr = (
      local.code_829[0] == "<"
        ? local.iter_828.tape_ptr - local.code_829[1] :
      local.code_829[0] == ">"
        ? local.iter_828.tape_ptr + local.code_829[1]
        : local.iter_828.tape_ptr)

    code_ptr = 2 + (
      local.code_829[0] == "["
        ? local.iter_828.tape[local.iter_828.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_828.code_ptr)] : local.iter_828.code_ptr :
      local.code_829[0] == "]"
        ? local.iter_828.tape[local.iter_828.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_828.code_ptr)] : local.iter_828.code_ptr
        : local.iter_828.code_ptr)

    steps_taken = 1 + local.iter_828.steps_taken
  }
}

locals {
  code_830 = (try(local.iter_829.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_829.code_ptr, local.iter_829.code_ptr + 2)
    : [null])

  input_830 = (local.code_830[0] == ","
    ? substr(local.input_829, local.code_830[1], -1)
    : local.input_829)

  iter_830 = try(local.iter_829.code_ptr >= length(var.code), true) ? local.iter_829 : {
    output = (local.code_830[0] == "."
      ? "${local.iter_829.output}${join("", [for _ in range(local.code_830[1]) : jsondecode(format("\"\\u%04x\"", local.iter_829.tape[local.iter_829.tape_ptr]))])}"
      : local.iter_829.output)
    
    tape = (
      local.code_830[0] == "+"
        ? [for i, b in local.iter_829.tape : (i == local.iter_829.tape_ptr ? (b + local.code_830[1]) % 256 : b)] :
      local.code_830[0] == "-"
        ? [for i, b in local.iter_829.tape : (i == local.iter_829.tape_ptr ? (b - local.code_830[1] + 256) % 256 : b)] :
      local.code_830[0] == ","
        ? [for i, b in local.iter_829.tape : (i == local.iter_829.tape_ptr ? local.ascii_lookup[substr(local.input_830, 0, 1)] : b)]
        : local.iter_829.tape)

    tape_ptr = (
      local.code_830[0] == "<"
        ? local.iter_829.tape_ptr - local.code_830[1] :
      local.code_830[0] == ">"
        ? local.iter_829.tape_ptr + local.code_830[1]
        : local.iter_829.tape_ptr)

    code_ptr = 2 + (
      local.code_830[0] == "["
        ? local.iter_829.tape[local.iter_829.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_829.code_ptr)] : local.iter_829.code_ptr :
      local.code_830[0] == "]"
        ? local.iter_829.tape[local.iter_829.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_829.code_ptr)] : local.iter_829.code_ptr
        : local.iter_829.code_ptr)

    steps_taken = 1 + local.iter_829.steps_taken
  }
}

locals {
  code_831 = (try(local.iter_830.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_830.code_ptr, local.iter_830.code_ptr + 2)
    : [null])

  input_831 = (local.code_831[0] == ","
    ? substr(local.input_830, local.code_831[1], -1)
    : local.input_830)

  iter_831 = try(local.iter_830.code_ptr >= length(var.code), true) ? local.iter_830 : {
    output = (local.code_831[0] == "."
      ? "${local.iter_830.output}${join("", [for _ in range(local.code_831[1]) : jsondecode(format("\"\\u%04x\"", local.iter_830.tape[local.iter_830.tape_ptr]))])}"
      : local.iter_830.output)
    
    tape = (
      local.code_831[0] == "+"
        ? [for i, b in local.iter_830.tape : (i == local.iter_830.tape_ptr ? (b + local.code_831[1]) % 256 : b)] :
      local.code_831[0] == "-"
        ? [for i, b in local.iter_830.tape : (i == local.iter_830.tape_ptr ? (b - local.code_831[1] + 256) % 256 : b)] :
      local.code_831[0] == ","
        ? [for i, b in local.iter_830.tape : (i == local.iter_830.tape_ptr ? local.ascii_lookup[substr(local.input_831, 0, 1)] : b)]
        : local.iter_830.tape)

    tape_ptr = (
      local.code_831[0] == "<"
        ? local.iter_830.tape_ptr - local.code_831[1] :
      local.code_831[0] == ">"
        ? local.iter_830.tape_ptr + local.code_831[1]
        : local.iter_830.tape_ptr)

    code_ptr = 2 + (
      local.code_831[0] == "["
        ? local.iter_830.tape[local.iter_830.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_830.code_ptr)] : local.iter_830.code_ptr :
      local.code_831[0] == "]"
        ? local.iter_830.tape[local.iter_830.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_830.code_ptr)] : local.iter_830.code_ptr
        : local.iter_830.code_ptr)

    steps_taken = 1 + local.iter_830.steps_taken
  }
}

locals {
  code_832 = (try(local.iter_831.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_831.code_ptr, local.iter_831.code_ptr + 2)
    : [null])

  input_832 = (local.code_832[0] == ","
    ? substr(local.input_831, local.code_832[1], -1)
    : local.input_831)

  iter_832 = try(local.iter_831.code_ptr >= length(var.code), true) ? local.iter_831 : {
    output = (local.code_832[0] == "."
      ? "${local.iter_831.output}${join("", [for _ in range(local.code_832[1]) : jsondecode(format("\"\\u%04x\"", local.iter_831.tape[local.iter_831.tape_ptr]))])}"
      : local.iter_831.output)
    
    tape = (
      local.code_832[0] == "+"
        ? [for i, b in local.iter_831.tape : (i == local.iter_831.tape_ptr ? (b + local.code_832[1]) % 256 : b)] :
      local.code_832[0] == "-"
        ? [for i, b in local.iter_831.tape : (i == local.iter_831.tape_ptr ? (b - local.code_832[1] + 256) % 256 : b)] :
      local.code_832[0] == ","
        ? [for i, b in local.iter_831.tape : (i == local.iter_831.tape_ptr ? local.ascii_lookup[substr(local.input_832, 0, 1)] : b)]
        : local.iter_831.tape)

    tape_ptr = (
      local.code_832[0] == "<"
        ? local.iter_831.tape_ptr - local.code_832[1] :
      local.code_832[0] == ">"
        ? local.iter_831.tape_ptr + local.code_832[1]
        : local.iter_831.tape_ptr)

    code_ptr = 2 + (
      local.code_832[0] == "["
        ? local.iter_831.tape[local.iter_831.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_831.code_ptr)] : local.iter_831.code_ptr :
      local.code_832[0] == "]"
        ? local.iter_831.tape[local.iter_831.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_831.code_ptr)] : local.iter_831.code_ptr
        : local.iter_831.code_ptr)

    steps_taken = 1 + local.iter_831.steps_taken
  }
}

locals {
  code_833 = (try(local.iter_832.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_832.code_ptr, local.iter_832.code_ptr + 2)
    : [null])

  input_833 = (local.code_833[0] == ","
    ? substr(local.input_832, local.code_833[1], -1)
    : local.input_832)

  iter_833 = try(local.iter_832.code_ptr >= length(var.code), true) ? local.iter_832 : {
    output = (local.code_833[0] == "."
      ? "${local.iter_832.output}${join("", [for _ in range(local.code_833[1]) : jsondecode(format("\"\\u%04x\"", local.iter_832.tape[local.iter_832.tape_ptr]))])}"
      : local.iter_832.output)
    
    tape = (
      local.code_833[0] == "+"
        ? [for i, b in local.iter_832.tape : (i == local.iter_832.tape_ptr ? (b + local.code_833[1]) % 256 : b)] :
      local.code_833[0] == "-"
        ? [for i, b in local.iter_832.tape : (i == local.iter_832.tape_ptr ? (b - local.code_833[1] + 256) % 256 : b)] :
      local.code_833[0] == ","
        ? [for i, b in local.iter_832.tape : (i == local.iter_832.tape_ptr ? local.ascii_lookup[substr(local.input_833, 0, 1)] : b)]
        : local.iter_832.tape)

    tape_ptr = (
      local.code_833[0] == "<"
        ? local.iter_832.tape_ptr - local.code_833[1] :
      local.code_833[0] == ">"
        ? local.iter_832.tape_ptr + local.code_833[1]
        : local.iter_832.tape_ptr)

    code_ptr = 2 + (
      local.code_833[0] == "["
        ? local.iter_832.tape[local.iter_832.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_832.code_ptr)] : local.iter_832.code_ptr :
      local.code_833[0] == "]"
        ? local.iter_832.tape[local.iter_832.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_832.code_ptr)] : local.iter_832.code_ptr
        : local.iter_832.code_ptr)

    steps_taken = 1 + local.iter_832.steps_taken
  }
}

locals {
  code_834 = (try(local.iter_833.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_833.code_ptr, local.iter_833.code_ptr + 2)
    : [null])

  input_834 = (local.code_834[0] == ","
    ? substr(local.input_833, local.code_834[1], -1)
    : local.input_833)

  iter_834 = try(local.iter_833.code_ptr >= length(var.code), true) ? local.iter_833 : {
    output = (local.code_834[0] == "."
      ? "${local.iter_833.output}${join("", [for _ in range(local.code_834[1]) : jsondecode(format("\"\\u%04x\"", local.iter_833.tape[local.iter_833.tape_ptr]))])}"
      : local.iter_833.output)
    
    tape = (
      local.code_834[0] == "+"
        ? [for i, b in local.iter_833.tape : (i == local.iter_833.tape_ptr ? (b + local.code_834[1]) % 256 : b)] :
      local.code_834[0] == "-"
        ? [for i, b in local.iter_833.tape : (i == local.iter_833.tape_ptr ? (b - local.code_834[1] + 256) % 256 : b)] :
      local.code_834[0] == ","
        ? [for i, b in local.iter_833.tape : (i == local.iter_833.tape_ptr ? local.ascii_lookup[substr(local.input_834, 0, 1)] : b)]
        : local.iter_833.tape)

    tape_ptr = (
      local.code_834[0] == "<"
        ? local.iter_833.tape_ptr - local.code_834[1] :
      local.code_834[0] == ">"
        ? local.iter_833.tape_ptr + local.code_834[1]
        : local.iter_833.tape_ptr)

    code_ptr = 2 + (
      local.code_834[0] == "["
        ? local.iter_833.tape[local.iter_833.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_833.code_ptr)] : local.iter_833.code_ptr :
      local.code_834[0] == "]"
        ? local.iter_833.tape[local.iter_833.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_833.code_ptr)] : local.iter_833.code_ptr
        : local.iter_833.code_ptr)

    steps_taken = 1 + local.iter_833.steps_taken
  }
}

locals {
  code_835 = (try(local.iter_834.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_834.code_ptr, local.iter_834.code_ptr + 2)
    : [null])

  input_835 = (local.code_835[0] == ","
    ? substr(local.input_834, local.code_835[1], -1)
    : local.input_834)

  iter_835 = try(local.iter_834.code_ptr >= length(var.code), true) ? local.iter_834 : {
    output = (local.code_835[0] == "."
      ? "${local.iter_834.output}${join("", [for _ in range(local.code_835[1]) : jsondecode(format("\"\\u%04x\"", local.iter_834.tape[local.iter_834.tape_ptr]))])}"
      : local.iter_834.output)
    
    tape = (
      local.code_835[0] == "+"
        ? [for i, b in local.iter_834.tape : (i == local.iter_834.tape_ptr ? (b + local.code_835[1]) % 256 : b)] :
      local.code_835[0] == "-"
        ? [for i, b in local.iter_834.tape : (i == local.iter_834.tape_ptr ? (b - local.code_835[1] + 256) % 256 : b)] :
      local.code_835[0] == ","
        ? [for i, b in local.iter_834.tape : (i == local.iter_834.tape_ptr ? local.ascii_lookup[substr(local.input_835, 0, 1)] : b)]
        : local.iter_834.tape)

    tape_ptr = (
      local.code_835[0] == "<"
        ? local.iter_834.tape_ptr - local.code_835[1] :
      local.code_835[0] == ">"
        ? local.iter_834.tape_ptr + local.code_835[1]
        : local.iter_834.tape_ptr)

    code_ptr = 2 + (
      local.code_835[0] == "["
        ? local.iter_834.tape[local.iter_834.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_834.code_ptr)] : local.iter_834.code_ptr :
      local.code_835[0] == "]"
        ? local.iter_834.tape[local.iter_834.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_834.code_ptr)] : local.iter_834.code_ptr
        : local.iter_834.code_ptr)

    steps_taken = 1 + local.iter_834.steps_taken
  }
}

locals {
  code_836 = (try(local.iter_835.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_835.code_ptr, local.iter_835.code_ptr + 2)
    : [null])

  input_836 = (local.code_836[0] == ","
    ? substr(local.input_835, local.code_836[1], -1)
    : local.input_835)

  iter_836 = try(local.iter_835.code_ptr >= length(var.code), true) ? local.iter_835 : {
    output = (local.code_836[0] == "."
      ? "${local.iter_835.output}${join("", [for _ in range(local.code_836[1]) : jsondecode(format("\"\\u%04x\"", local.iter_835.tape[local.iter_835.tape_ptr]))])}"
      : local.iter_835.output)
    
    tape = (
      local.code_836[0] == "+"
        ? [for i, b in local.iter_835.tape : (i == local.iter_835.tape_ptr ? (b + local.code_836[1]) % 256 : b)] :
      local.code_836[0] == "-"
        ? [for i, b in local.iter_835.tape : (i == local.iter_835.tape_ptr ? (b - local.code_836[1] + 256) % 256 : b)] :
      local.code_836[0] == ","
        ? [for i, b in local.iter_835.tape : (i == local.iter_835.tape_ptr ? local.ascii_lookup[substr(local.input_836, 0, 1)] : b)]
        : local.iter_835.tape)

    tape_ptr = (
      local.code_836[0] == "<"
        ? local.iter_835.tape_ptr - local.code_836[1] :
      local.code_836[0] == ">"
        ? local.iter_835.tape_ptr + local.code_836[1]
        : local.iter_835.tape_ptr)

    code_ptr = 2 + (
      local.code_836[0] == "["
        ? local.iter_835.tape[local.iter_835.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_835.code_ptr)] : local.iter_835.code_ptr :
      local.code_836[0] == "]"
        ? local.iter_835.tape[local.iter_835.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_835.code_ptr)] : local.iter_835.code_ptr
        : local.iter_835.code_ptr)

    steps_taken = 1 + local.iter_835.steps_taken
  }
}

locals {
  code_837 = (try(local.iter_836.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_836.code_ptr, local.iter_836.code_ptr + 2)
    : [null])

  input_837 = (local.code_837[0] == ","
    ? substr(local.input_836, local.code_837[1], -1)
    : local.input_836)

  iter_837 = try(local.iter_836.code_ptr >= length(var.code), true) ? local.iter_836 : {
    output = (local.code_837[0] == "."
      ? "${local.iter_836.output}${join("", [for _ in range(local.code_837[1]) : jsondecode(format("\"\\u%04x\"", local.iter_836.tape[local.iter_836.tape_ptr]))])}"
      : local.iter_836.output)
    
    tape = (
      local.code_837[0] == "+"
        ? [for i, b in local.iter_836.tape : (i == local.iter_836.tape_ptr ? (b + local.code_837[1]) % 256 : b)] :
      local.code_837[0] == "-"
        ? [for i, b in local.iter_836.tape : (i == local.iter_836.tape_ptr ? (b - local.code_837[1] + 256) % 256 : b)] :
      local.code_837[0] == ","
        ? [for i, b in local.iter_836.tape : (i == local.iter_836.tape_ptr ? local.ascii_lookup[substr(local.input_837, 0, 1)] : b)]
        : local.iter_836.tape)

    tape_ptr = (
      local.code_837[0] == "<"
        ? local.iter_836.tape_ptr - local.code_837[1] :
      local.code_837[0] == ">"
        ? local.iter_836.tape_ptr + local.code_837[1]
        : local.iter_836.tape_ptr)

    code_ptr = 2 + (
      local.code_837[0] == "["
        ? local.iter_836.tape[local.iter_836.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_836.code_ptr)] : local.iter_836.code_ptr :
      local.code_837[0] == "]"
        ? local.iter_836.tape[local.iter_836.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_836.code_ptr)] : local.iter_836.code_ptr
        : local.iter_836.code_ptr)

    steps_taken = 1 + local.iter_836.steps_taken
  }
}

locals {
  code_838 = (try(local.iter_837.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_837.code_ptr, local.iter_837.code_ptr + 2)
    : [null])

  input_838 = (local.code_838[0] == ","
    ? substr(local.input_837, local.code_838[1], -1)
    : local.input_837)

  iter_838 = try(local.iter_837.code_ptr >= length(var.code), true) ? local.iter_837 : {
    output = (local.code_838[0] == "."
      ? "${local.iter_837.output}${join("", [for _ in range(local.code_838[1]) : jsondecode(format("\"\\u%04x\"", local.iter_837.tape[local.iter_837.tape_ptr]))])}"
      : local.iter_837.output)
    
    tape = (
      local.code_838[0] == "+"
        ? [for i, b in local.iter_837.tape : (i == local.iter_837.tape_ptr ? (b + local.code_838[1]) % 256 : b)] :
      local.code_838[0] == "-"
        ? [for i, b in local.iter_837.tape : (i == local.iter_837.tape_ptr ? (b - local.code_838[1] + 256) % 256 : b)] :
      local.code_838[0] == ","
        ? [for i, b in local.iter_837.tape : (i == local.iter_837.tape_ptr ? local.ascii_lookup[substr(local.input_838, 0, 1)] : b)]
        : local.iter_837.tape)

    tape_ptr = (
      local.code_838[0] == "<"
        ? local.iter_837.tape_ptr - local.code_838[1] :
      local.code_838[0] == ">"
        ? local.iter_837.tape_ptr + local.code_838[1]
        : local.iter_837.tape_ptr)

    code_ptr = 2 + (
      local.code_838[0] == "["
        ? local.iter_837.tape[local.iter_837.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_837.code_ptr)] : local.iter_837.code_ptr :
      local.code_838[0] == "]"
        ? local.iter_837.tape[local.iter_837.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_837.code_ptr)] : local.iter_837.code_ptr
        : local.iter_837.code_ptr)

    steps_taken = 1 + local.iter_837.steps_taken
  }
}

locals {
  code_839 = (try(local.iter_838.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_838.code_ptr, local.iter_838.code_ptr + 2)
    : [null])

  input_839 = (local.code_839[0] == ","
    ? substr(local.input_838, local.code_839[1], -1)
    : local.input_838)

  iter_839 = try(local.iter_838.code_ptr >= length(var.code), true) ? local.iter_838 : {
    output = (local.code_839[0] == "."
      ? "${local.iter_838.output}${join("", [for _ in range(local.code_839[1]) : jsondecode(format("\"\\u%04x\"", local.iter_838.tape[local.iter_838.tape_ptr]))])}"
      : local.iter_838.output)
    
    tape = (
      local.code_839[0] == "+"
        ? [for i, b in local.iter_838.tape : (i == local.iter_838.tape_ptr ? (b + local.code_839[1]) % 256 : b)] :
      local.code_839[0] == "-"
        ? [for i, b in local.iter_838.tape : (i == local.iter_838.tape_ptr ? (b - local.code_839[1] + 256) % 256 : b)] :
      local.code_839[0] == ","
        ? [for i, b in local.iter_838.tape : (i == local.iter_838.tape_ptr ? local.ascii_lookup[substr(local.input_839, 0, 1)] : b)]
        : local.iter_838.tape)

    tape_ptr = (
      local.code_839[0] == "<"
        ? local.iter_838.tape_ptr - local.code_839[1] :
      local.code_839[0] == ">"
        ? local.iter_838.tape_ptr + local.code_839[1]
        : local.iter_838.tape_ptr)

    code_ptr = 2 + (
      local.code_839[0] == "["
        ? local.iter_838.tape[local.iter_838.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_838.code_ptr)] : local.iter_838.code_ptr :
      local.code_839[0] == "]"
        ? local.iter_838.tape[local.iter_838.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_838.code_ptr)] : local.iter_838.code_ptr
        : local.iter_838.code_ptr)

    steps_taken = 1 + local.iter_838.steps_taken
  }
}

locals {
  code_840 = (try(local.iter_839.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_839.code_ptr, local.iter_839.code_ptr + 2)
    : [null])

  input_840 = (local.code_840[0] == ","
    ? substr(local.input_839, local.code_840[1], -1)
    : local.input_839)

  iter_840 = try(local.iter_839.code_ptr >= length(var.code), true) ? local.iter_839 : {
    output = (local.code_840[0] == "."
      ? "${local.iter_839.output}${join("", [for _ in range(local.code_840[1]) : jsondecode(format("\"\\u%04x\"", local.iter_839.tape[local.iter_839.tape_ptr]))])}"
      : local.iter_839.output)
    
    tape = (
      local.code_840[0] == "+"
        ? [for i, b in local.iter_839.tape : (i == local.iter_839.tape_ptr ? (b + local.code_840[1]) % 256 : b)] :
      local.code_840[0] == "-"
        ? [for i, b in local.iter_839.tape : (i == local.iter_839.tape_ptr ? (b - local.code_840[1] + 256) % 256 : b)] :
      local.code_840[0] == ","
        ? [for i, b in local.iter_839.tape : (i == local.iter_839.tape_ptr ? local.ascii_lookup[substr(local.input_840, 0, 1)] : b)]
        : local.iter_839.tape)

    tape_ptr = (
      local.code_840[0] == "<"
        ? local.iter_839.tape_ptr - local.code_840[1] :
      local.code_840[0] == ">"
        ? local.iter_839.tape_ptr + local.code_840[1]
        : local.iter_839.tape_ptr)

    code_ptr = 2 + (
      local.code_840[0] == "["
        ? local.iter_839.tape[local.iter_839.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_839.code_ptr)] : local.iter_839.code_ptr :
      local.code_840[0] == "]"
        ? local.iter_839.tape[local.iter_839.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_839.code_ptr)] : local.iter_839.code_ptr
        : local.iter_839.code_ptr)

    steps_taken = 1 + local.iter_839.steps_taken
  }
}

locals {
  code_841 = (try(local.iter_840.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_840.code_ptr, local.iter_840.code_ptr + 2)
    : [null])

  input_841 = (local.code_841[0] == ","
    ? substr(local.input_840, local.code_841[1], -1)
    : local.input_840)

  iter_841 = try(local.iter_840.code_ptr >= length(var.code), true) ? local.iter_840 : {
    output = (local.code_841[0] == "."
      ? "${local.iter_840.output}${join("", [for _ in range(local.code_841[1]) : jsondecode(format("\"\\u%04x\"", local.iter_840.tape[local.iter_840.tape_ptr]))])}"
      : local.iter_840.output)
    
    tape = (
      local.code_841[0] == "+"
        ? [for i, b in local.iter_840.tape : (i == local.iter_840.tape_ptr ? (b + local.code_841[1]) % 256 : b)] :
      local.code_841[0] == "-"
        ? [for i, b in local.iter_840.tape : (i == local.iter_840.tape_ptr ? (b - local.code_841[1] + 256) % 256 : b)] :
      local.code_841[0] == ","
        ? [for i, b in local.iter_840.tape : (i == local.iter_840.tape_ptr ? local.ascii_lookup[substr(local.input_841, 0, 1)] : b)]
        : local.iter_840.tape)

    tape_ptr = (
      local.code_841[0] == "<"
        ? local.iter_840.tape_ptr - local.code_841[1] :
      local.code_841[0] == ">"
        ? local.iter_840.tape_ptr + local.code_841[1]
        : local.iter_840.tape_ptr)

    code_ptr = 2 + (
      local.code_841[0] == "["
        ? local.iter_840.tape[local.iter_840.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_840.code_ptr)] : local.iter_840.code_ptr :
      local.code_841[0] == "]"
        ? local.iter_840.tape[local.iter_840.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_840.code_ptr)] : local.iter_840.code_ptr
        : local.iter_840.code_ptr)

    steps_taken = 1 + local.iter_840.steps_taken
  }
}

locals {
  code_842 = (try(local.iter_841.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_841.code_ptr, local.iter_841.code_ptr + 2)
    : [null])

  input_842 = (local.code_842[0] == ","
    ? substr(local.input_841, local.code_842[1], -1)
    : local.input_841)

  iter_842 = try(local.iter_841.code_ptr >= length(var.code), true) ? local.iter_841 : {
    output = (local.code_842[0] == "."
      ? "${local.iter_841.output}${join("", [for _ in range(local.code_842[1]) : jsondecode(format("\"\\u%04x\"", local.iter_841.tape[local.iter_841.tape_ptr]))])}"
      : local.iter_841.output)
    
    tape = (
      local.code_842[0] == "+"
        ? [for i, b in local.iter_841.tape : (i == local.iter_841.tape_ptr ? (b + local.code_842[1]) % 256 : b)] :
      local.code_842[0] == "-"
        ? [for i, b in local.iter_841.tape : (i == local.iter_841.tape_ptr ? (b - local.code_842[1] + 256) % 256 : b)] :
      local.code_842[0] == ","
        ? [for i, b in local.iter_841.tape : (i == local.iter_841.tape_ptr ? local.ascii_lookup[substr(local.input_842, 0, 1)] : b)]
        : local.iter_841.tape)

    tape_ptr = (
      local.code_842[0] == "<"
        ? local.iter_841.tape_ptr - local.code_842[1] :
      local.code_842[0] == ">"
        ? local.iter_841.tape_ptr + local.code_842[1]
        : local.iter_841.tape_ptr)

    code_ptr = 2 + (
      local.code_842[0] == "["
        ? local.iter_841.tape[local.iter_841.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_841.code_ptr)] : local.iter_841.code_ptr :
      local.code_842[0] == "]"
        ? local.iter_841.tape[local.iter_841.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_841.code_ptr)] : local.iter_841.code_ptr
        : local.iter_841.code_ptr)

    steps_taken = 1 + local.iter_841.steps_taken
  }
}

locals {
  code_843 = (try(local.iter_842.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_842.code_ptr, local.iter_842.code_ptr + 2)
    : [null])

  input_843 = (local.code_843[0] == ","
    ? substr(local.input_842, local.code_843[1], -1)
    : local.input_842)

  iter_843 = try(local.iter_842.code_ptr >= length(var.code), true) ? local.iter_842 : {
    output = (local.code_843[0] == "."
      ? "${local.iter_842.output}${join("", [for _ in range(local.code_843[1]) : jsondecode(format("\"\\u%04x\"", local.iter_842.tape[local.iter_842.tape_ptr]))])}"
      : local.iter_842.output)
    
    tape = (
      local.code_843[0] == "+"
        ? [for i, b in local.iter_842.tape : (i == local.iter_842.tape_ptr ? (b + local.code_843[1]) % 256 : b)] :
      local.code_843[0] == "-"
        ? [for i, b in local.iter_842.tape : (i == local.iter_842.tape_ptr ? (b - local.code_843[1] + 256) % 256 : b)] :
      local.code_843[0] == ","
        ? [for i, b in local.iter_842.tape : (i == local.iter_842.tape_ptr ? local.ascii_lookup[substr(local.input_843, 0, 1)] : b)]
        : local.iter_842.tape)

    tape_ptr = (
      local.code_843[0] == "<"
        ? local.iter_842.tape_ptr - local.code_843[1] :
      local.code_843[0] == ">"
        ? local.iter_842.tape_ptr + local.code_843[1]
        : local.iter_842.tape_ptr)

    code_ptr = 2 + (
      local.code_843[0] == "["
        ? local.iter_842.tape[local.iter_842.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_842.code_ptr)] : local.iter_842.code_ptr :
      local.code_843[0] == "]"
        ? local.iter_842.tape[local.iter_842.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_842.code_ptr)] : local.iter_842.code_ptr
        : local.iter_842.code_ptr)

    steps_taken = 1 + local.iter_842.steps_taken
  }
}

locals {
  code_844 = (try(local.iter_843.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_843.code_ptr, local.iter_843.code_ptr + 2)
    : [null])

  input_844 = (local.code_844[0] == ","
    ? substr(local.input_843, local.code_844[1], -1)
    : local.input_843)

  iter_844 = try(local.iter_843.code_ptr >= length(var.code), true) ? local.iter_843 : {
    output = (local.code_844[0] == "."
      ? "${local.iter_843.output}${join("", [for _ in range(local.code_844[1]) : jsondecode(format("\"\\u%04x\"", local.iter_843.tape[local.iter_843.tape_ptr]))])}"
      : local.iter_843.output)
    
    tape = (
      local.code_844[0] == "+"
        ? [for i, b in local.iter_843.tape : (i == local.iter_843.tape_ptr ? (b + local.code_844[1]) % 256 : b)] :
      local.code_844[0] == "-"
        ? [for i, b in local.iter_843.tape : (i == local.iter_843.tape_ptr ? (b - local.code_844[1] + 256) % 256 : b)] :
      local.code_844[0] == ","
        ? [for i, b in local.iter_843.tape : (i == local.iter_843.tape_ptr ? local.ascii_lookup[substr(local.input_844, 0, 1)] : b)]
        : local.iter_843.tape)

    tape_ptr = (
      local.code_844[0] == "<"
        ? local.iter_843.tape_ptr - local.code_844[1] :
      local.code_844[0] == ">"
        ? local.iter_843.tape_ptr + local.code_844[1]
        : local.iter_843.tape_ptr)

    code_ptr = 2 + (
      local.code_844[0] == "["
        ? local.iter_843.tape[local.iter_843.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_843.code_ptr)] : local.iter_843.code_ptr :
      local.code_844[0] == "]"
        ? local.iter_843.tape[local.iter_843.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_843.code_ptr)] : local.iter_843.code_ptr
        : local.iter_843.code_ptr)

    steps_taken = 1 + local.iter_843.steps_taken
  }
}

locals {
  code_845 = (try(local.iter_844.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_844.code_ptr, local.iter_844.code_ptr + 2)
    : [null])

  input_845 = (local.code_845[0] == ","
    ? substr(local.input_844, local.code_845[1], -1)
    : local.input_844)

  iter_845 = try(local.iter_844.code_ptr >= length(var.code), true) ? local.iter_844 : {
    output = (local.code_845[0] == "."
      ? "${local.iter_844.output}${join("", [for _ in range(local.code_845[1]) : jsondecode(format("\"\\u%04x\"", local.iter_844.tape[local.iter_844.tape_ptr]))])}"
      : local.iter_844.output)
    
    tape = (
      local.code_845[0] == "+"
        ? [for i, b in local.iter_844.tape : (i == local.iter_844.tape_ptr ? (b + local.code_845[1]) % 256 : b)] :
      local.code_845[0] == "-"
        ? [for i, b in local.iter_844.tape : (i == local.iter_844.tape_ptr ? (b - local.code_845[1] + 256) % 256 : b)] :
      local.code_845[0] == ","
        ? [for i, b in local.iter_844.tape : (i == local.iter_844.tape_ptr ? local.ascii_lookup[substr(local.input_845, 0, 1)] : b)]
        : local.iter_844.tape)

    tape_ptr = (
      local.code_845[0] == "<"
        ? local.iter_844.tape_ptr - local.code_845[1] :
      local.code_845[0] == ">"
        ? local.iter_844.tape_ptr + local.code_845[1]
        : local.iter_844.tape_ptr)

    code_ptr = 2 + (
      local.code_845[0] == "["
        ? local.iter_844.tape[local.iter_844.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_844.code_ptr)] : local.iter_844.code_ptr :
      local.code_845[0] == "]"
        ? local.iter_844.tape[local.iter_844.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_844.code_ptr)] : local.iter_844.code_ptr
        : local.iter_844.code_ptr)

    steps_taken = 1 + local.iter_844.steps_taken
  }
}

locals {
  code_846 = (try(local.iter_845.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_845.code_ptr, local.iter_845.code_ptr + 2)
    : [null])

  input_846 = (local.code_846[0] == ","
    ? substr(local.input_845, local.code_846[1], -1)
    : local.input_845)

  iter_846 = try(local.iter_845.code_ptr >= length(var.code), true) ? local.iter_845 : {
    output = (local.code_846[0] == "."
      ? "${local.iter_845.output}${join("", [for _ in range(local.code_846[1]) : jsondecode(format("\"\\u%04x\"", local.iter_845.tape[local.iter_845.tape_ptr]))])}"
      : local.iter_845.output)
    
    tape = (
      local.code_846[0] == "+"
        ? [for i, b in local.iter_845.tape : (i == local.iter_845.tape_ptr ? (b + local.code_846[1]) % 256 : b)] :
      local.code_846[0] == "-"
        ? [for i, b in local.iter_845.tape : (i == local.iter_845.tape_ptr ? (b - local.code_846[1] + 256) % 256 : b)] :
      local.code_846[0] == ","
        ? [for i, b in local.iter_845.tape : (i == local.iter_845.tape_ptr ? local.ascii_lookup[substr(local.input_846, 0, 1)] : b)]
        : local.iter_845.tape)

    tape_ptr = (
      local.code_846[0] == "<"
        ? local.iter_845.tape_ptr - local.code_846[1] :
      local.code_846[0] == ">"
        ? local.iter_845.tape_ptr + local.code_846[1]
        : local.iter_845.tape_ptr)

    code_ptr = 2 + (
      local.code_846[0] == "["
        ? local.iter_845.tape[local.iter_845.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_845.code_ptr)] : local.iter_845.code_ptr :
      local.code_846[0] == "]"
        ? local.iter_845.tape[local.iter_845.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_845.code_ptr)] : local.iter_845.code_ptr
        : local.iter_845.code_ptr)

    steps_taken = 1 + local.iter_845.steps_taken
  }
}

locals {
  code_847 = (try(local.iter_846.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_846.code_ptr, local.iter_846.code_ptr + 2)
    : [null])

  input_847 = (local.code_847[0] == ","
    ? substr(local.input_846, local.code_847[1], -1)
    : local.input_846)

  iter_847 = try(local.iter_846.code_ptr >= length(var.code), true) ? local.iter_846 : {
    output = (local.code_847[0] == "."
      ? "${local.iter_846.output}${join("", [for _ in range(local.code_847[1]) : jsondecode(format("\"\\u%04x\"", local.iter_846.tape[local.iter_846.tape_ptr]))])}"
      : local.iter_846.output)
    
    tape = (
      local.code_847[0] == "+"
        ? [for i, b in local.iter_846.tape : (i == local.iter_846.tape_ptr ? (b + local.code_847[1]) % 256 : b)] :
      local.code_847[0] == "-"
        ? [for i, b in local.iter_846.tape : (i == local.iter_846.tape_ptr ? (b - local.code_847[1] + 256) % 256 : b)] :
      local.code_847[0] == ","
        ? [for i, b in local.iter_846.tape : (i == local.iter_846.tape_ptr ? local.ascii_lookup[substr(local.input_847, 0, 1)] : b)]
        : local.iter_846.tape)

    tape_ptr = (
      local.code_847[0] == "<"
        ? local.iter_846.tape_ptr - local.code_847[1] :
      local.code_847[0] == ">"
        ? local.iter_846.tape_ptr + local.code_847[1]
        : local.iter_846.tape_ptr)

    code_ptr = 2 + (
      local.code_847[0] == "["
        ? local.iter_846.tape[local.iter_846.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_846.code_ptr)] : local.iter_846.code_ptr :
      local.code_847[0] == "]"
        ? local.iter_846.tape[local.iter_846.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_846.code_ptr)] : local.iter_846.code_ptr
        : local.iter_846.code_ptr)

    steps_taken = 1 + local.iter_846.steps_taken
  }
}

locals {
  code_848 = (try(local.iter_847.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_847.code_ptr, local.iter_847.code_ptr + 2)
    : [null])

  input_848 = (local.code_848[0] == ","
    ? substr(local.input_847, local.code_848[1], -1)
    : local.input_847)

  iter_848 = try(local.iter_847.code_ptr >= length(var.code), true) ? local.iter_847 : {
    output = (local.code_848[0] == "."
      ? "${local.iter_847.output}${join("", [for _ in range(local.code_848[1]) : jsondecode(format("\"\\u%04x\"", local.iter_847.tape[local.iter_847.tape_ptr]))])}"
      : local.iter_847.output)
    
    tape = (
      local.code_848[0] == "+"
        ? [for i, b in local.iter_847.tape : (i == local.iter_847.tape_ptr ? (b + local.code_848[1]) % 256 : b)] :
      local.code_848[0] == "-"
        ? [for i, b in local.iter_847.tape : (i == local.iter_847.tape_ptr ? (b - local.code_848[1] + 256) % 256 : b)] :
      local.code_848[0] == ","
        ? [for i, b in local.iter_847.tape : (i == local.iter_847.tape_ptr ? local.ascii_lookup[substr(local.input_848, 0, 1)] : b)]
        : local.iter_847.tape)

    tape_ptr = (
      local.code_848[0] == "<"
        ? local.iter_847.tape_ptr - local.code_848[1] :
      local.code_848[0] == ">"
        ? local.iter_847.tape_ptr + local.code_848[1]
        : local.iter_847.tape_ptr)

    code_ptr = 2 + (
      local.code_848[0] == "["
        ? local.iter_847.tape[local.iter_847.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_847.code_ptr)] : local.iter_847.code_ptr :
      local.code_848[0] == "]"
        ? local.iter_847.tape[local.iter_847.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_847.code_ptr)] : local.iter_847.code_ptr
        : local.iter_847.code_ptr)

    steps_taken = 1 + local.iter_847.steps_taken
  }
}

locals {
  code_849 = (try(local.iter_848.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_848.code_ptr, local.iter_848.code_ptr + 2)
    : [null])

  input_849 = (local.code_849[0] == ","
    ? substr(local.input_848, local.code_849[1], -1)
    : local.input_848)

  iter_849 = try(local.iter_848.code_ptr >= length(var.code), true) ? local.iter_848 : {
    output = (local.code_849[0] == "."
      ? "${local.iter_848.output}${join("", [for _ in range(local.code_849[1]) : jsondecode(format("\"\\u%04x\"", local.iter_848.tape[local.iter_848.tape_ptr]))])}"
      : local.iter_848.output)
    
    tape = (
      local.code_849[0] == "+"
        ? [for i, b in local.iter_848.tape : (i == local.iter_848.tape_ptr ? (b + local.code_849[1]) % 256 : b)] :
      local.code_849[0] == "-"
        ? [for i, b in local.iter_848.tape : (i == local.iter_848.tape_ptr ? (b - local.code_849[1] + 256) % 256 : b)] :
      local.code_849[0] == ","
        ? [for i, b in local.iter_848.tape : (i == local.iter_848.tape_ptr ? local.ascii_lookup[substr(local.input_849, 0, 1)] : b)]
        : local.iter_848.tape)

    tape_ptr = (
      local.code_849[0] == "<"
        ? local.iter_848.tape_ptr - local.code_849[1] :
      local.code_849[0] == ">"
        ? local.iter_848.tape_ptr + local.code_849[1]
        : local.iter_848.tape_ptr)

    code_ptr = 2 + (
      local.code_849[0] == "["
        ? local.iter_848.tape[local.iter_848.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_848.code_ptr)] : local.iter_848.code_ptr :
      local.code_849[0] == "]"
        ? local.iter_848.tape[local.iter_848.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_848.code_ptr)] : local.iter_848.code_ptr
        : local.iter_848.code_ptr)

    steps_taken = 1 + local.iter_848.steps_taken
  }
}

locals {
  code_850 = (try(local.iter_849.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_849.code_ptr, local.iter_849.code_ptr + 2)
    : [null])

  input_850 = (local.code_850[0] == ","
    ? substr(local.input_849, local.code_850[1], -1)
    : local.input_849)

  iter_850 = try(local.iter_849.code_ptr >= length(var.code), true) ? local.iter_849 : {
    output = (local.code_850[0] == "."
      ? "${local.iter_849.output}${join("", [for _ in range(local.code_850[1]) : jsondecode(format("\"\\u%04x\"", local.iter_849.tape[local.iter_849.tape_ptr]))])}"
      : local.iter_849.output)
    
    tape = (
      local.code_850[0] == "+"
        ? [for i, b in local.iter_849.tape : (i == local.iter_849.tape_ptr ? (b + local.code_850[1]) % 256 : b)] :
      local.code_850[0] == "-"
        ? [for i, b in local.iter_849.tape : (i == local.iter_849.tape_ptr ? (b - local.code_850[1] + 256) % 256 : b)] :
      local.code_850[0] == ","
        ? [for i, b in local.iter_849.tape : (i == local.iter_849.tape_ptr ? local.ascii_lookup[substr(local.input_850, 0, 1)] : b)]
        : local.iter_849.tape)

    tape_ptr = (
      local.code_850[0] == "<"
        ? local.iter_849.tape_ptr - local.code_850[1] :
      local.code_850[0] == ">"
        ? local.iter_849.tape_ptr + local.code_850[1]
        : local.iter_849.tape_ptr)

    code_ptr = 2 + (
      local.code_850[0] == "["
        ? local.iter_849.tape[local.iter_849.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_849.code_ptr)] : local.iter_849.code_ptr :
      local.code_850[0] == "]"
        ? local.iter_849.tape[local.iter_849.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_849.code_ptr)] : local.iter_849.code_ptr
        : local.iter_849.code_ptr)

    steps_taken = 1 + local.iter_849.steps_taken
  }
}

locals {
  code_851 = (try(local.iter_850.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_850.code_ptr, local.iter_850.code_ptr + 2)
    : [null])

  input_851 = (local.code_851[0] == ","
    ? substr(local.input_850, local.code_851[1], -1)
    : local.input_850)

  iter_851 = try(local.iter_850.code_ptr >= length(var.code), true) ? local.iter_850 : {
    output = (local.code_851[0] == "."
      ? "${local.iter_850.output}${join("", [for _ in range(local.code_851[1]) : jsondecode(format("\"\\u%04x\"", local.iter_850.tape[local.iter_850.tape_ptr]))])}"
      : local.iter_850.output)
    
    tape = (
      local.code_851[0] == "+"
        ? [for i, b in local.iter_850.tape : (i == local.iter_850.tape_ptr ? (b + local.code_851[1]) % 256 : b)] :
      local.code_851[0] == "-"
        ? [for i, b in local.iter_850.tape : (i == local.iter_850.tape_ptr ? (b - local.code_851[1] + 256) % 256 : b)] :
      local.code_851[0] == ","
        ? [for i, b in local.iter_850.tape : (i == local.iter_850.tape_ptr ? local.ascii_lookup[substr(local.input_851, 0, 1)] : b)]
        : local.iter_850.tape)

    tape_ptr = (
      local.code_851[0] == "<"
        ? local.iter_850.tape_ptr - local.code_851[1] :
      local.code_851[0] == ">"
        ? local.iter_850.tape_ptr + local.code_851[1]
        : local.iter_850.tape_ptr)

    code_ptr = 2 + (
      local.code_851[0] == "["
        ? local.iter_850.tape[local.iter_850.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_850.code_ptr)] : local.iter_850.code_ptr :
      local.code_851[0] == "]"
        ? local.iter_850.tape[local.iter_850.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_850.code_ptr)] : local.iter_850.code_ptr
        : local.iter_850.code_ptr)

    steps_taken = 1 + local.iter_850.steps_taken
  }
}

locals {
  code_852 = (try(local.iter_851.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_851.code_ptr, local.iter_851.code_ptr + 2)
    : [null])

  input_852 = (local.code_852[0] == ","
    ? substr(local.input_851, local.code_852[1], -1)
    : local.input_851)

  iter_852 = try(local.iter_851.code_ptr >= length(var.code), true) ? local.iter_851 : {
    output = (local.code_852[0] == "."
      ? "${local.iter_851.output}${join("", [for _ in range(local.code_852[1]) : jsondecode(format("\"\\u%04x\"", local.iter_851.tape[local.iter_851.tape_ptr]))])}"
      : local.iter_851.output)
    
    tape = (
      local.code_852[0] == "+"
        ? [for i, b in local.iter_851.tape : (i == local.iter_851.tape_ptr ? (b + local.code_852[1]) % 256 : b)] :
      local.code_852[0] == "-"
        ? [for i, b in local.iter_851.tape : (i == local.iter_851.tape_ptr ? (b - local.code_852[1] + 256) % 256 : b)] :
      local.code_852[0] == ","
        ? [for i, b in local.iter_851.tape : (i == local.iter_851.tape_ptr ? local.ascii_lookup[substr(local.input_852, 0, 1)] : b)]
        : local.iter_851.tape)

    tape_ptr = (
      local.code_852[0] == "<"
        ? local.iter_851.tape_ptr - local.code_852[1] :
      local.code_852[0] == ">"
        ? local.iter_851.tape_ptr + local.code_852[1]
        : local.iter_851.tape_ptr)

    code_ptr = 2 + (
      local.code_852[0] == "["
        ? local.iter_851.tape[local.iter_851.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_851.code_ptr)] : local.iter_851.code_ptr :
      local.code_852[0] == "]"
        ? local.iter_851.tape[local.iter_851.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_851.code_ptr)] : local.iter_851.code_ptr
        : local.iter_851.code_ptr)

    steps_taken = 1 + local.iter_851.steps_taken
  }
}

locals {
  code_853 = (try(local.iter_852.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_852.code_ptr, local.iter_852.code_ptr + 2)
    : [null])

  input_853 = (local.code_853[0] == ","
    ? substr(local.input_852, local.code_853[1], -1)
    : local.input_852)

  iter_853 = try(local.iter_852.code_ptr >= length(var.code), true) ? local.iter_852 : {
    output = (local.code_853[0] == "."
      ? "${local.iter_852.output}${join("", [for _ in range(local.code_853[1]) : jsondecode(format("\"\\u%04x\"", local.iter_852.tape[local.iter_852.tape_ptr]))])}"
      : local.iter_852.output)
    
    tape = (
      local.code_853[0] == "+"
        ? [for i, b in local.iter_852.tape : (i == local.iter_852.tape_ptr ? (b + local.code_853[1]) % 256 : b)] :
      local.code_853[0] == "-"
        ? [for i, b in local.iter_852.tape : (i == local.iter_852.tape_ptr ? (b - local.code_853[1] + 256) % 256 : b)] :
      local.code_853[0] == ","
        ? [for i, b in local.iter_852.tape : (i == local.iter_852.tape_ptr ? local.ascii_lookup[substr(local.input_853, 0, 1)] : b)]
        : local.iter_852.tape)

    tape_ptr = (
      local.code_853[0] == "<"
        ? local.iter_852.tape_ptr - local.code_853[1] :
      local.code_853[0] == ">"
        ? local.iter_852.tape_ptr + local.code_853[1]
        : local.iter_852.tape_ptr)

    code_ptr = 2 + (
      local.code_853[0] == "["
        ? local.iter_852.tape[local.iter_852.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_852.code_ptr)] : local.iter_852.code_ptr :
      local.code_853[0] == "]"
        ? local.iter_852.tape[local.iter_852.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_852.code_ptr)] : local.iter_852.code_ptr
        : local.iter_852.code_ptr)

    steps_taken = 1 + local.iter_852.steps_taken
  }
}

locals {
  code_854 = (try(local.iter_853.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_853.code_ptr, local.iter_853.code_ptr + 2)
    : [null])

  input_854 = (local.code_854[0] == ","
    ? substr(local.input_853, local.code_854[1], -1)
    : local.input_853)

  iter_854 = try(local.iter_853.code_ptr >= length(var.code), true) ? local.iter_853 : {
    output = (local.code_854[0] == "."
      ? "${local.iter_853.output}${join("", [for _ in range(local.code_854[1]) : jsondecode(format("\"\\u%04x\"", local.iter_853.tape[local.iter_853.tape_ptr]))])}"
      : local.iter_853.output)
    
    tape = (
      local.code_854[0] == "+"
        ? [for i, b in local.iter_853.tape : (i == local.iter_853.tape_ptr ? (b + local.code_854[1]) % 256 : b)] :
      local.code_854[0] == "-"
        ? [for i, b in local.iter_853.tape : (i == local.iter_853.tape_ptr ? (b - local.code_854[1] + 256) % 256 : b)] :
      local.code_854[0] == ","
        ? [for i, b in local.iter_853.tape : (i == local.iter_853.tape_ptr ? local.ascii_lookup[substr(local.input_854, 0, 1)] : b)]
        : local.iter_853.tape)

    tape_ptr = (
      local.code_854[0] == "<"
        ? local.iter_853.tape_ptr - local.code_854[1] :
      local.code_854[0] == ">"
        ? local.iter_853.tape_ptr + local.code_854[1]
        : local.iter_853.tape_ptr)

    code_ptr = 2 + (
      local.code_854[0] == "["
        ? local.iter_853.tape[local.iter_853.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_853.code_ptr)] : local.iter_853.code_ptr :
      local.code_854[0] == "]"
        ? local.iter_853.tape[local.iter_853.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_853.code_ptr)] : local.iter_853.code_ptr
        : local.iter_853.code_ptr)

    steps_taken = 1 + local.iter_853.steps_taken
  }
}

locals {
  code_855 = (try(local.iter_854.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_854.code_ptr, local.iter_854.code_ptr + 2)
    : [null])

  input_855 = (local.code_855[0] == ","
    ? substr(local.input_854, local.code_855[1], -1)
    : local.input_854)

  iter_855 = try(local.iter_854.code_ptr >= length(var.code), true) ? local.iter_854 : {
    output = (local.code_855[0] == "."
      ? "${local.iter_854.output}${join("", [for _ in range(local.code_855[1]) : jsondecode(format("\"\\u%04x\"", local.iter_854.tape[local.iter_854.tape_ptr]))])}"
      : local.iter_854.output)
    
    tape = (
      local.code_855[0] == "+"
        ? [for i, b in local.iter_854.tape : (i == local.iter_854.tape_ptr ? (b + local.code_855[1]) % 256 : b)] :
      local.code_855[0] == "-"
        ? [for i, b in local.iter_854.tape : (i == local.iter_854.tape_ptr ? (b - local.code_855[1] + 256) % 256 : b)] :
      local.code_855[0] == ","
        ? [for i, b in local.iter_854.tape : (i == local.iter_854.tape_ptr ? local.ascii_lookup[substr(local.input_855, 0, 1)] : b)]
        : local.iter_854.tape)

    tape_ptr = (
      local.code_855[0] == "<"
        ? local.iter_854.tape_ptr - local.code_855[1] :
      local.code_855[0] == ">"
        ? local.iter_854.tape_ptr + local.code_855[1]
        : local.iter_854.tape_ptr)

    code_ptr = 2 + (
      local.code_855[0] == "["
        ? local.iter_854.tape[local.iter_854.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_854.code_ptr)] : local.iter_854.code_ptr :
      local.code_855[0] == "]"
        ? local.iter_854.tape[local.iter_854.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_854.code_ptr)] : local.iter_854.code_ptr
        : local.iter_854.code_ptr)

    steps_taken = 1 + local.iter_854.steps_taken
  }
}

locals {
  code_856 = (try(local.iter_855.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_855.code_ptr, local.iter_855.code_ptr + 2)
    : [null])

  input_856 = (local.code_856[0] == ","
    ? substr(local.input_855, local.code_856[1], -1)
    : local.input_855)

  iter_856 = try(local.iter_855.code_ptr >= length(var.code), true) ? local.iter_855 : {
    output = (local.code_856[0] == "."
      ? "${local.iter_855.output}${join("", [for _ in range(local.code_856[1]) : jsondecode(format("\"\\u%04x\"", local.iter_855.tape[local.iter_855.tape_ptr]))])}"
      : local.iter_855.output)
    
    tape = (
      local.code_856[0] == "+"
        ? [for i, b in local.iter_855.tape : (i == local.iter_855.tape_ptr ? (b + local.code_856[1]) % 256 : b)] :
      local.code_856[0] == "-"
        ? [for i, b in local.iter_855.tape : (i == local.iter_855.tape_ptr ? (b - local.code_856[1] + 256) % 256 : b)] :
      local.code_856[0] == ","
        ? [for i, b in local.iter_855.tape : (i == local.iter_855.tape_ptr ? local.ascii_lookup[substr(local.input_856, 0, 1)] : b)]
        : local.iter_855.tape)

    tape_ptr = (
      local.code_856[0] == "<"
        ? local.iter_855.tape_ptr - local.code_856[1] :
      local.code_856[0] == ">"
        ? local.iter_855.tape_ptr + local.code_856[1]
        : local.iter_855.tape_ptr)

    code_ptr = 2 + (
      local.code_856[0] == "["
        ? local.iter_855.tape[local.iter_855.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_855.code_ptr)] : local.iter_855.code_ptr :
      local.code_856[0] == "]"
        ? local.iter_855.tape[local.iter_855.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_855.code_ptr)] : local.iter_855.code_ptr
        : local.iter_855.code_ptr)

    steps_taken = 1 + local.iter_855.steps_taken
  }
}

locals {
  code_857 = (try(local.iter_856.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_856.code_ptr, local.iter_856.code_ptr + 2)
    : [null])

  input_857 = (local.code_857[0] == ","
    ? substr(local.input_856, local.code_857[1], -1)
    : local.input_856)

  iter_857 = try(local.iter_856.code_ptr >= length(var.code), true) ? local.iter_856 : {
    output = (local.code_857[0] == "."
      ? "${local.iter_856.output}${join("", [for _ in range(local.code_857[1]) : jsondecode(format("\"\\u%04x\"", local.iter_856.tape[local.iter_856.tape_ptr]))])}"
      : local.iter_856.output)
    
    tape = (
      local.code_857[0] == "+"
        ? [for i, b in local.iter_856.tape : (i == local.iter_856.tape_ptr ? (b + local.code_857[1]) % 256 : b)] :
      local.code_857[0] == "-"
        ? [for i, b in local.iter_856.tape : (i == local.iter_856.tape_ptr ? (b - local.code_857[1] + 256) % 256 : b)] :
      local.code_857[0] == ","
        ? [for i, b in local.iter_856.tape : (i == local.iter_856.tape_ptr ? local.ascii_lookup[substr(local.input_857, 0, 1)] : b)]
        : local.iter_856.tape)

    tape_ptr = (
      local.code_857[0] == "<"
        ? local.iter_856.tape_ptr - local.code_857[1] :
      local.code_857[0] == ">"
        ? local.iter_856.tape_ptr + local.code_857[1]
        : local.iter_856.tape_ptr)

    code_ptr = 2 + (
      local.code_857[0] == "["
        ? local.iter_856.tape[local.iter_856.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_856.code_ptr)] : local.iter_856.code_ptr :
      local.code_857[0] == "]"
        ? local.iter_856.tape[local.iter_856.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_856.code_ptr)] : local.iter_856.code_ptr
        : local.iter_856.code_ptr)

    steps_taken = 1 + local.iter_856.steps_taken
  }
}

locals {
  code_858 = (try(local.iter_857.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_857.code_ptr, local.iter_857.code_ptr + 2)
    : [null])

  input_858 = (local.code_858[0] == ","
    ? substr(local.input_857, local.code_858[1], -1)
    : local.input_857)

  iter_858 = try(local.iter_857.code_ptr >= length(var.code), true) ? local.iter_857 : {
    output = (local.code_858[0] == "."
      ? "${local.iter_857.output}${join("", [for _ in range(local.code_858[1]) : jsondecode(format("\"\\u%04x\"", local.iter_857.tape[local.iter_857.tape_ptr]))])}"
      : local.iter_857.output)
    
    tape = (
      local.code_858[0] == "+"
        ? [for i, b in local.iter_857.tape : (i == local.iter_857.tape_ptr ? (b + local.code_858[1]) % 256 : b)] :
      local.code_858[0] == "-"
        ? [for i, b in local.iter_857.tape : (i == local.iter_857.tape_ptr ? (b - local.code_858[1] + 256) % 256 : b)] :
      local.code_858[0] == ","
        ? [for i, b in local.iter_857.tape : (i == local.iter_857.tape_ptr ? local.ascii_lookup[substr(local.input_858, 0, 1)] : b)]
        : local.iter_857.tape)

    tape_ptr = (
      local.code_858[0] == "<"
        ? local.iter_857.tape_ptr - local.code_858[1] :
      local.code_858[0] == ">"
        ? local.iter_857.tape_ptr + local.code_858[1]
        : local.iter_857.tape_ptr)

    code_ptr = 2 + (
      local.code_858[0] == "["
        ? local.iter_857.tape[local.iter_857.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_857.code_ptr)] : local.iter_857.code_ptr :
      local.code_858[0] == "]"
        ? local.iter_857.tape[local.iter_857.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_857.code_ptr)] : local.iter_857.code_ptr
        : local.iter_857.code_ptr)

    steps_taken = 1 + local.iter_857.steps_taken
  }
}

locals {
  code_859 = (try(local.iter_858.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_858.code_ptr, local.iter_858.code_ptr + 2)
    : [null])

  input_859 = (local.code_859[0] == ","
    ? substr(local.input_858, local.code_859[1], -1)
    : local.input_858)

  iter_859 = try(local.iter_858.code_ptr >= length(var.code), true) ? local.iter_858 : {
    output = (local.code_859[0] == "."
      ? "${local.iter_858.output}${join("", [for _ in range(local.code_859[1]) : jsondecode(format("\"\\u%04x\"", local.iter_858.tape[local.iter_858.tape_ptr]))])}"
      : local.iter_858.output)
    
    tape = (
      local.code_859[0] == "+"
        ? [for i, b in local.iter_858.tape : (i == local.iter_858.tape_ptr ? (b + local.code_859[1]) % 256 : b)] :
      local.code_859[0] == "-"
        ? [for i, b in local.iter_858.tape : (i == local.iter_858.tape_ptr ? (b - local.code_859[1] + 256) % 256 : b)] :
      local.code_859[0] == ","
        ? [for i, b in local.iter_858.tape : (i == local.iter_858.tape_ptr ? local.ascii_lookup[substr(local.input_859, 0, 1)] : b)]
        : local.iter_858.tape)

    tape_ptr = (
      local.code_859[0] == "<"
        ? local.iter_858.tape_ptr - local.code_859[1] :
      local.code_859[0] == ">"
        ? local.iter_858.tape_ptr + local.code_859[1]
        : local.iter_858.tape_ptr)

    code_ptr = 2 + (
      local.code_859[0] == "["
        ? local.iter_858.tape[local.iter_858.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_858.code_ptr)] : local.iter_858.code_ptr :
      local.code_859[0] == "]"
        ? local.iter_858.tape[local.iter_858.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_858.code_ptr)] : local.iter_858.code_ptr
        : local.iter_858.code_ptr)

    steps_taken = 1 + local.iter_858.steps_taken
  }
}

locals {
  code_860 = (try(local.iter_859.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_859.code_ptr, local.iter_859.code_ptr + 2)
    : [null])

  input_860 = (local.code_860[0] == ","
    ? substr(local.input_859, local.code_860[1], -1)
    : local.input_859)

  iter_860 = try(local.iter_859.code_ptr >= length(var.code), true) ? local.iter_859 : {
    output = (local.code_860[0] == "."
      ? "${local.iter_859.output}${join("", [for _ in range(local.code_860[1]) : jsondecode(format("\"\\u%04x\"", local.iter_859.tape[local.iter_859.tape_ptr]))])}"
      : local.iter_859.output)
    
    tape = (
      local.code_860[0] == "+"
        ? [for i, b in local.iter_859.tape : (i == local.iter_859.tape_ptr ? (b + local.code_860[1]) % 256 : b)] :
      local.code_860[0] == "-"
        ? [for i, b in local.iter_859.tape : (i == local.iter_859.tape_ptr ? (b - local.code_860[1] + 256) % 256 : b)] :
      local.code_860[0] == ","
        ? [for i, b in local.iter_859.tape : (i == local.iter_859.tape_ptr ? local.ascii_lookup[substr(local.input_860, 0, 1)] : b)]
        : local.iter_859.tape)

    tape_ptr = (
      local.code_860[0] == "<"
        ? local.iter_859.tape_ptr - local.code_860[1] :
      local.code_860[0] == ">"
        ? local.iter_859.tape_ptr + local.code_860[1]
        : local.iter_859.tape_ptr)

    code_ptr = 2 + (
      local.code_860[0] == "["
        ? local.iter_859.tape[local.iter_859.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_859.code_ptr)] : local.iter_859.code_ptr :
      local.code_860[0] == "]"
        ? local.iter_859.tape[local.iter_859.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_859.code_ptr)] : local.iter_859.code_ptr
        : local.iter_859.code_ptr)

    steps_taken = 1 + local.iter_859.steps_taken
  }
}

locals {
  code_861 = (try(local.iter_860.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_860.code_ptr, local.iter_860.code_ptr + 2)
    : [null])

  input_861 = (local.code_861[0] == ","
    ? substr(local.input_860, local.code_861[1], -1)
    : local.input_860)

  iter_861 = try(local.iter_860.code_ptr >= length(var.code), true) ? local.iter_860 : {
    output = (local.code_861[0] == "."
      ? "${local.iter_860.output}${join("", [for _ in range(local.code_861[1]) : jsondecode(format("\"\\u%04x\"", local.iter_860.tape[local.iter_860.tape_ptr]))])}"
      : local.iter_860.output)
    
    tape = (
      local.code_861[0] == "+"
        ? [for i, b in local.iter_860.tape : (i == local.iter_860.tape_ptr ? (b + local.code_861[1]) % 256 : b)] :
      local.code_861[0] == "-"
        ? [for i, b in local.iter_860.tape : (i == local.iter_860.tape_ptr ? (b - local.code_861[1] + 256) % 256 : b)] :
      local.code_861[0] == ","
        ? [for i, b in local.iter_860.tape : (i == local.iter_860.tape_ptr ? local.ascii_lookup[substr(local.input_861, 0, 1)] : b)]
        : local.iter_860.tape)

    tape_ptr = (
      local.code_861[0] == "<"
        ? local.iter_860.tape_ptr - local.code_861[1] :
      local.code_861[0] == ">"
        ? local.iter_860.tape_ptr + local.code_861[1]
        : local.iter_860.tape_ptr)

    code_ptr = 2 + (
      local.code_861[0] == "["
        ? local.iter_860.tape[local.iter_860.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_860.code_ptr)] : local.iter_860.code_ptr :
      local.code_861[0] == "]"
        ? local.iter_860.tape[local.iter_860.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_860.code_ptr)] : local.iter_860.code_ptr
        : local.iter_860.code_ptr)

    steps_taken = 1 + local.iter_860.steps_taken
  }
}

locals {
  code_862 = (try(local.iter_861.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_861.code_ptr, local.iter_861.code_ptr + 2)
    : [null])

  input_862 = (local.code_862[0] == ","
    ? substr(local.input_861, local.code_862[1], -1)
    : local.input_861)

  iter_862 = try(local.iter_861.code_ptr >= length(var.code), true) ? local.iter_861 : {
    output = (local.code_862[0] == "."
      ? "${local.iter_861.output}${join("", [for _ in range(local.code_862[1]) : jsondecode(format("\"\\u%04x\"", local.iter_861.tape[local.iter_861.tape_ptr]))])}"
      : local.iter_861.output)
    
    tape = (
      local.code_862[0] == "+"
        ? [for i, b in local.iter_861.tape : (i == local.iter_861.tape_ptr ? (b + local.code_862[1]) % 256 : b)] :
      local.code_862[0] == "-"
        ? [for i, b in local.iter_861.tape : (i == local.iter_861.tape_ptr ? (b - local.code_862[1] + 256) % 256 : b)] :
      local.code_862[0] == ","
        ? [for i, b in local.iter_861.tape : (i == local.iter_861.tape_ptr ? local.ascii_lookup[substr(local.input_862, 0, 1)] : b)]
        : local.iter_861.tape)

    tape_ptr = (
      local.code_862[0] == "<"
        ? local.iter_861.tape_ptr - local.code_862[1] :
      local.code_862[0] == ">"
        ? local.iter_861.tape_ptr + local.code_862[1]
        : local.iter_861.tape_ptr)

    code_ptr = 2 + (
      local.code_862[0] == "["
        ? local.iter_861.tape[local.iter_861.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_861.code_ptr)] : local.iter_861.code_ptr :
      local.code_862[0] == "]"
        ? local.iter_861.tape[local.iter_861.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_861.code_ptr)] : local.iter_861.code_ptr
        : local.iter_861.code_ptr)

    steps_taken = 1 + local.iter_861.steps_taken
  }
}

locals {
  code_863 = (try(local.iter_862.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_862.code_ptr, local.iter_862.code_ptr + 2)
    : [null])

  input_863 = (local.code_863[0] == ","
    ? substr(local.input_862, local.code_863[1], -1)
    : local.input_862)

  iter_863 = try(local.iter_862.code_ptr >= length(var.code), true) ? local.iter_862 : {
    output = (local.code_863[0] == "."
      ? "${local.iter_862.output}${join("", [for _ in range(local.code_863[1]) : jsondecode(format("\"\\u%04x\"", local.iter_862.tape[local.iter_862.tape_ptr]))])}"
      : local.iter_862.output)
    
    tape = (
      local.code_863[0] == "+"
        ? [for i, b in local.iter_862.tape : (i == local.iter_862.tape_ptr ? (b + local.code_863[1]) % 256 : b)] :
      local.code_863[0] == "-"
        ? [for i, b in local.iter_862.tape : (i == local.iter_862.tape_ptr ? (b - local.code_863[1] + 256) % 256 : b)] :
      local.code_863[0] == ","
        ? [for i, b in local.iter_862.tape : (i == local.iter_862.tape_ptr ? local.ascii_lookup[substr(local.input_863, 0, 1)] : b)]
        : local.iter_862.tape)

    tape_ptr = (
      local.code_863[0] == "<"
        ? local.iter_862.tape_ptr - local.code_863[1] :
      local.code_863[0] == ">"
        ? local.iter_862.tape_ptr + local.code_863[1]
        : local.iter_862.tape_ptr)

    code_ptr = 2 + (
      local.code_863[0] == "["
        ? local.iter_862.tape[local.iter_862.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_862.code_ptr)] : local.iter_862.code_ptr :
      local.code_863[0] == "]"
        ? local.iter_862.tape[local.iter_862.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_862.code_ptr)] : local.iter_862.code_ptr
        : local.iter_862.code_ptr)

    steps_taken = 1 + local.iter_862.steps_taken
  }
}

locals {
  code_864 = (try(local.iter_863.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_863.code_ptr, local.iter_863.code_ptr + 2)
    : [null])

  input_864 = (local.code_864[0] == ","
    ? substr(local.input_863, local.code_864[1], -1)
    : local.input_863)

  iter_864 = try(local.iter_863.code_ptr >= length(var.code), true) ? local.iter_863 : {
    output = (local.code_864[0] == "."
      ? "${local.iter_863.output}${join("", [for _ in range(local.code_864[1]) : jsondecode(format("\"\\u%04x\"", local.iter_863.tape[local.iter_863.tape_ptr]))])}"
      : local.iter_863.output)
    
    tape = (
      local.code_864[0] == "+"
        ? [for i, b in local.iter_863.tape : (i == local.iter_863.tape_ptr ? (b + local.code_864[1]) % 256 : b)] :
      local.code_864[0] == "-"
        ? [for i, b in local.iter_863.tape : (i == local.iter_863.tape_ptr ? (b - local.code_864[1] + 256) % 256 : b)] :
      local.code_864[0] == ","
        ? [for i, b in local.iter_863.tape : (i == local.iter_863.tape_ptr ? local.ascii_lookup[substr(local.input_864, 0, 1)] : b)]
        : local.iter_863.tape)

    tape_ptr = (
      local.code_864[0] == "<"
        ? local.iter_863.tape_ptr - local.code_864[1] :
      local.code_864[0] == ">"
        ? local.iter_863.tape_ptr + local.code_864[1]
        : local.iter_863.tape_ptr)

    code_ptr = 2 + (
      local.code_864[0] == "["
        ? local.iter_863.tape[local.iter_863.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_863.code_ptr)] : local.iter_863.code_ptr :
      local.code_864[0] == "]"
        ? local.iter_863.tape[local.iter_863.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_863.code_ptr)] : local.iter_863.code_ptr
        : local.iter_863.code_ptr)

    steps_taken = 1 + local.iter_863.steps_taken
  }
}

locals {
  code_865 = (try(local.iter_864.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_864.code_ptr, local.iter_864.code_ptr + 2)
    : [null])

  input_865 = (local.code_865[0] == ","
    ? substr(local.input_864, local.code_865[1], -1)
    : local.input_864)

  iter_865 = try(local.iter_864.code_ptr >= length(var.code), true) ? local.iter_864 : {
    output = (local.code_865[0] == "."
      ? "${local.iter_864.output}${join("", [for _ in range(local.code_865[1]) : jsondecode(format("\"\\u%04x\"", local.iter_864.tape[local.iter_864.tape_ptr]))])}"
      : local.iter_864.output)
    
    tape = (
      local.code_865[0] == "+"
        ? [for i, b in local.iter_864.tape : (i == local.iter_864.tape_ptr ? (b + local.code_865[1]) % 256 : b)] :
      local.code_865[0] == "-"
        ? [for i, b in local.iter_864.tape : (i == local.iter_864.tape_ptr ? (b - local.code_865[1] + 256) % 256 : b)] :
      local.code_865[0] == ","
        ? [for i, b in local.iter_864.tape : (i == local.iter_864.tape_ptr ? local.ascii_lookup[substr(local.input_865, 0, 1)] : b)]
        : local.iter_864.tape)

    tape_ptr = (
      local.code_865[0] == "<"
        ? local.iter_864.tape_ptr - local.code_865[1] :
      local.code_865[0] == ">"
        ? local.iter_864.tape_ptr + local.code_865[1]
        : local.iter_864.tape_ptr)

    code_ptr = 2 + (
      local.code_865[0] == "["
        ? local.iter_864.tape[local.iter_864.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_864.code_ptr)] : local.iter_864.code_ptr :
      local.code_865[0] == "]"
        ? local.iter_864.tape[local.iter_864.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_864.code_ptr)] : local.iter_864.code_ptr
        : local.iter_864.code_ptr)

    steps_taken = 1 + local.iter_864.steps_taken
  }
}

locals {
  code_866 = (try(local.iter_865.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_865.code_ptr, local.iter_865.code_ptr + 2)
    : [null])

  input_866 = (local.code_866[0] == ","
    ? substr(local.input_865, local.code_866[1], -1)
    : local.input_865)

  iter_866 = try(local.iter_865.code_ptr >= length(var.code), true) ? local.iter_865 : {
    output = (local.code_866[0] == "."
      ? "${local.iter_865.output}${join("", [for _ in range(local.code_866[1]) : jsondecode(format("\"\\u%04x\"", local.iter_865.tape[local.iter_865.tape_ptr]))])}"
      : local.iter_865.output)
    
    tape = (
      local.code_866[0] == "+"
        ? [for i, b in local.iter_865.tape : (i == local.iter_865.tape_ptr ? (b + local.code_866[1]) % 256 : b)] :
      local.code_866[0] == "-"
        ? [for i, b in local.iter_865.tape : (i == local.iter_865.tape_ptr ? (b - local.code_866[1] + 256) % 256 : b)] :
      local.code_866[0] == ","
        ? [for i, b in local.iter_865.tape : (i == local.iter_865.tape_ptr ? local.ascii_lookup[substr(local.input_866, 0, 1)] : b)]
        : local.iter_865.tape)

    tape_ptr = (
      local.code_866[0] == "<"
        ? local.iter_865.tape_ptr - local.code_866[1] :
      local.code_866[0] == ">"
        ? local.iter_865.tape_ptr + local.code_866[1]
        : local.iter_865.tape_ptr)

    code_ptr = 2 + (
      local.code_866[0] == "["
        ? local.iter_865.tape[local.iter_865.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_865.code_ptr)] : local.iter_865.code_ptr :
      local.code_866[0] == "]"
        ? local.iter_865.tape[local.iter_865.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_865.code_ptr)] : local.iter_865.code_ptr
        : local.iter_865.code_ptr)

    steps_taken = 1 + local.iter_865.steps_taken
  }
}

locals {
  code_867 = (try(local.iter_866.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_866.code_ptr, local.iter_866.code_ptr + 2)
    : [null])

  input_867 = (local.code_867[0] == ","
    ? substr(local.input_866, local.code_867[1], -1)
    : local.input_866)

  iter_867 = try(local.iter_866.code_ptr >= length(var.code), true) ? local.iter_866 : {
    output = (local.code_867[0] == "."
      ? "${local.iter_866.output}${join("", [for _ in range(local.code_867[1]) : jsondecode(format("\"\\u%04x\"", local.iter_866.tape[local.iter_866.tape_ptr]))])}"
      : local.iter_866.output)
    
    tape = (
      local.code_867[0] == "+"
        ? [for i, b in local.iter_866.tape : (i == local.iter_866.tape_ptr ? (b + local.code_867[1]) % 256 : b)] :
      local.code_867[0] == "-"
        ? [for i, b in local.iter_866.tape : (i == local.iter_866.tape_ptr ? (b - local.code_867[1] + 256) % 256 : b)] :
      local.code_867[0] == ","
        ? [for i, b in local.iter_866.tape : (i == local.iter_866.tape_ptr ? local.ascii_lookup[substr(local.input_867, 0, 1)] : b)]
        : local.iter_866.tape)

    tape_ptr = (
      local.code_867[0] == "<"
        ? local.iter_866.tape_ptr - local.code_867[1] :
      local.code_867[0] == ">"
        ? local.iter_866.tape_ptr + local.code_867[1]
        : local.iter_866.tape_ptr)

    code_ptr = 2 + (
      local.code_867[0] == "["
        ? local.iter_866.tape[local.iter_866.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_866.code_ptr)] : local.iter_866.code_ptr :
      local.code_867[0] == "]"
        ? local.iter_866.tape[local.iter_866.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_866.code_ptr)] : local.iter_866.code_ptr
        : local.iter_866.code_ptr)

    steps_taken = 1 + local.iter_866.steps_taken
  }
}

locals {
  code_868 = (try(local.iter_867.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_867.code_ptr, local.iter_867.code_ptr + 2)
    : [null])

  input_868 = (local.code_868[0] == ","
    ? substr(local.input_867, local.code_868[1], -1)
    : local.input_867)

  iter_868 = try(local.iter_867.code_ptr >= length(var.code), true) ? local.iter_867 : {
    output = (local.code_868[0] == "."
      ? "${local.iter_867.output}${join("", [for _ in range(local.code_868[1]) : jsondecode(format("\"\\u%04x\"", local.iter_867.tape[local.iter_867.tape_ptr]))])}"
      : local.iter_867.output)
    
    tape = (
      local.code_868[0] == "+"
        ? [for i, b in local.iter_867.tape : (i == local.iter_867.tape_ptr ? (b + local.code_868[1]) % 256 : b)] :
      local.code_868[0] == "-"
        ? [for i, b in local.iter_867.tape : (i == local.iter_867.tape_ptr ? (b - local.code_868[1] + 256) % 256 : b)] :
      local.code_868[0] == ","
        ? [for i, b in local.iter_867.tape : (i == local.iter_867.tape_ptr ? local.ascii_lookup[substr(local.input_868, 0, 1)] : b)]
        : local.iter_867.tape)

    tape_ptr = (
      local.code_868[0] == "<"
        ? local.iter_867.tape_ptr - local.code_868[1] :
      local.code_868[0] == ">"
        ? local.iter_867.tape_ptr + local.code_868[1]
        : local.iter_867.tape_ptr)

    code_ptr = 2 + (
      local.code_868[0] == "["
        ? local.iter_867.tape[local.iter_867.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_867.code_ptr)] : local.iter_867.code_ptr :
      local.code_868[0] == "]"
        ? local.iter_867.tape[local.iter_867.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_867.code_ptr)] : local.iter_867.code_ptr
        : local.iter_867.code_ptr)

    steps_taken = 1 + local.iter_867.steps_taken
  }
}

locals {
  code_869 = (try(local.iter_868.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_868.code_ptr, local.iter_868.code_ptr + 2)
    : [null])

  input_869 = (local.code_869[0] == ","
    ? substr(local.input_868, local.code_869[1], -1)
    : local.input_868)

  iter_869 = try(local.iter_868.code_ptr >= length(var.code), true) ? local.iter_868 : {
    output = (local.code_869[0] == "."
      ? "${local.iter_868.output}${join("", [for _ in range(local.code_869[1]) : jsondecode(format("\"\\u%04x\"", local.iter_868.tape[local.iter_868.tape_ptr]))])}"
      : local.iter_868.output)
    
    tape = (
      local.code_869[0] == "+"
        ? [for i, b in local.iter_868.tape : (i == local.iter_868.tape_ptr ? (b + local.code_869[1]) % 256 : b)] :
      local.code_869[0] == "-"
        ? [for i, b in local.iter_868.tape : (i == local.iter_868.tape_ptr ? (b - local.code_869[1] + 256) % 256 : b)] :
      local.code_869[0] == ","
        ? [for i, b in local.iter_868.tape : (i == local.iter_868.tape_ptr ? local.ascii_lookup[substr(local.input_869, 0, 1)] : b)]
        : local.iter_868.tape)

    tape_ptr = (
      local.code_869[0] == "<"
        ? local.iter_868.tape_ptr - local.code_869[1] :
      local.code_869[0] == ">"
        ? local.iter_868.tape_ptr + local.code_869[1]
        : local.iter_868.tape_ptr)

    code_ptr = 2 + (
      local.code_869[0] == "["
        ? local.iter_868.tape[local.iter_868.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_868.code_ptr)] : local.iter_868.code_ptr :
      local.code_869[0] == "]"
        ? local.iter_868.tape[local.iter_868.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_868.code_ptr)] : local.iter_868.code_ptr
        : local.iter_868.code_ptr)

    steps_taken = 1 + local.iter_868.steps_taken
  }
}

locals {
  code_870 = (try(local.iter_869.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_869.code_ptr, local.iter_869.code_ptr + 2)
    : [null])

  input_870 = (local.code_870[0] == ","
    ? substr(local.input_869, local.code_870[1], -1)
    : local.input_869)

  iter_870 = try(local.iter_869.code_ptr >= length(var.code), true) ? local.iter_869 : {
    output = (local.code_870[0] == "."
      ? "${local.iter_869.output}${join("", [for _ in range(local.code_870[1]) : jsondecode(format("\"\\u%04x\"", local.iter_869.tape[local.iter_869.tape_ptr]))])}"
      : local.iter_869.output)
    
    tape = (
      local.code_870[0] == "+"
        ? [for i, b in local.iter_869.tape : (i == local.iter_869.tape_ptr ? (b + local.code_870[1]) % 256 : b)] :
      local.code_870[0] == "-"
        ? [for i, b in local.iter_869.tape : (i == local.iter_869.tape_ptr ? (b - local.code_870[1] + 256) % 256 : b)] :
      local.code_870[0] == ","
        ? [for i, b in local.iter_869.tape : (i == local.iter_869.tape_ptr ? local.ascii_lookup[substr(local.input_870, 0, 1)] : b)]
        : local.iter_869.tape)

    tape_ptr = (
      local.code_870[0] == "<"
        ? local.iter_869.tape_ptr - local.code_870[1] :
      local.code_870[0] == ">"
        ? local.iter_869.tape_ptr + local.code_870[1]
        : local.iter_869.tape_ptr)

    code_ptr = 2 + (
      local.code_870[0] == "["
        ? local.iter_869.tape[local.iter_869.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_869.code_ptr)] : local.iter_869.code_ptr :
      local.code_870[0] == "]"
        ? local.iter_869.tape[local.iter_869.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_869.code_ptr)] : local.iter_869.code_ptr
        : local.iter_869.code_ptr)

    steps_taken = 1 + local.iter_869.steps_taken
  }
}

locals {
  code_871 = (try(local.iter_870.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_870.code_ptr, local.iter_870.code_ptr + 2)
    : [null])

  input_871 = (local.code_871[0] == ","
    ? substr(local.input_870, local.code_871[1], -1)
    : local.input_870)

  iter_871 = try(local.iter_870.code_ptr >= length(var.code), true) ? local.iter_870 : {
    output = (local.code_871[0] == "."
      ? "${local.iter_870.output}${join("", [for _ in range(local.code_871[1]) : jsondecode(format("\"\\u%04x\"", local.iter_870.tape[local.iter_870.tape_ptr]))])}"
      : local.iter_870.output)
    
    tape = (
      local.code_871[0] == "+"
        ? [for i, b in local.iter_870.tape : (i == local.iter_870.tape_ptr ? (b + local.code_871[1]) % 256 : b)] :
      local.code_871[0] == "-"
        ? [for i, b in local.iter_870.tape : (i == local.iter_870.tape_ptr ? (b - local.code_871[1] + 256) % 256 : b)] :
      local.code_871[0] == ","
        ? [for i, b in local.iter_870.tape : (i == local.iter_870.tape_ptr ? local.ascii_lookup[substr(local.input_871, 0, 1)] : b)]
        : local.iter_870.tape)

    tape_ptr = (
      local.code_871[0] == "<"
        ? local.iter_870.tape_ptr - local.code_871[1] :
      local.code_871[0] == ">"
        ? local.iter_870.tape_ptr + local.code_871[1]
        : local.iter_870.tape_ptr)

    code_ptr = 2 + (
      local.code_871[0] == "["
        ? local.iter_870.tape[local.iter_870.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_870.code_ptr)] : local.iter_870.code_ptr :
      local.code_871[0] == "]"
        ? local.iter_870.tape[local.iter_870.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_870.code_ptr)] : local.iter_870.code_ptr
        : local.iter_870.code_ptr)

    steps_taken = 1 + local.iter_870.steps_taken
  }
}

locals {
  code_872 = (try(local.iter_871.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_871.code_ptr, local.iter_871.code_ptr + 2)
    : [null])

  input_872 = (local.code_872[0] == ","
    ? substr(local.input_871, local.code_872[1], -1)
    : local.input_871)

  iter_872 = try(local.iter_871.code_ptr >= length(var.code), true) ? local.iter_871 : {
    output = (local.code_872[0] == "."
      ? "${local.iter_871.output}${join("", [for _ in range(local.code_872[1]) : jsondecode(format("\"\\u%04x\"", local.iter_871.tape[local.iter_871.tape_ptr]))])}"
      : local.iter_871.output)
    
    tape = (
      local.code_872[0] == "+"
        ? [for i, b in local.iter_871.tape : (i == local.iter_871.tape_ptr ? (b + local.code_872[1]) % 256 : b)] :
      local.code_872[0] == "-"
        ? [for i, b in local.iter_871.tape : (i == local.iter_871.tape_ptr ? (b - local.code_872[1] + 256) % 256 : b)] :
      local.code_872[0] == ","
        ? [for i, b in local.iter_871.tape : (i == local.iter_871.tape_ptr ? local.ascii_lookup[substr(local.input_872, 0, 1)] : b)]
        : local.iter_871.tape)

    tape_ptr = (
      local.code_872[0] == "<"
        ? local.iter_871.tape_ptr - local.code_872[1] :
      local.code_872[0] == ">"
        ? local.iter_871.tape_ptr + local.code_872[1]
        : local.iter_871.tape_ptr)

    code_ptr = 2 + (
      local.code_872[0] == "["
        ? local.iter_871.tape[local.iter_871.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_871.code_ptr)] : local.iter_871.code_ptr :
      local.code_872[0] == "]"
        ? local.iter_871.tape[local.iter_871.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_871.code_ptr)] : local.iter_871.code_ptr
        : local.iter_871.code_ptr)

    steps_taken = 1 + local.iter_871.steps_taken
  }
}

locals {
  code_873 = (try(local.iter_872.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_872.code_ptr, local.iter_872.code_ptr + 2)
    : [null])

  input_873 = (local.code_873[0] == ","
    ? substr(local.input_872, local.code_873[1], -1)
    : local.input_872)

  iter_873 = try(local.iter_872.code_ptr >= length(var.code), true) ? local.iter_872 : {
    output = (local.code_873[0] == "."
      ? "${local.iter_872.output}${join("", [for _ in range(local.code_873[1]) : jsondecode(format("\"\\u%04x\"", local.iter_872.tape[local.iter_872.tape_ptr]))])}"
      : local.iter_872.output)
    
    tape = (
      local.code_873[0] == "+"
        ? [for i, b in local.iter_872.tape : (i == local.iter_872.tape_ptr ? (b + local.code_873[1]) % 256 : b)] :
      local.code_873[0] == "-"
        ? [for i, b in local.iter_872.tape : (i == local.iter_872.tape_ptr ? (b - local.code_873[1] + 256) % 256 : b)] :
      local.code_873[0] == ","
        ? [for i, b in local.iter_872.tape : (i == local.iter_872.tape_ptr ? local.ascii_lookup[substr(local.input_873, 0, 1)] : b)]
        : local.iter_872.tape)

    tape_ptr = (
      local.code_873[0] == "<"
        ? local.iter_872.tape_ptr - local.code_873[1] :
      local.code_873[0] == ">"
        ? local.iter_872.tape_ptr + local.code_873[1]
        : local.iter_872.tape_ptr)

    code_ptr = 2 + (
      local.code_873[0] == "["
        ? local.iter_872.tape[local.iter_872.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_872.code_ptr)] : local.iter_872.code_ptr :
      local.code_873[0] == "]"
        ? local.iter_872.tape[local.iter_872.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_872.code_ptr)] : local.iter_872.code_ptr
        : local.iter_872.code_ptr)

    steps_taken = 1 + local.iter_872.steps_taken
  }
}

locals {
  code_874 = (try(local.iter_873.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_873.code_ptr, local.iter_873.code_ptr + 2)
    : [null])

  input_874 = (local.code_874[0] == ","
    ? substr(local.input_873, local.code_874[1], -1)
    : local.input_873)

  iter_874 = try(local.iter_873.code_ptr >= length(var.code), true) ? local.iter_873 : {
    output = (local.code_874[0] == "."
      ? "${local.iter_873.output}${join("", [for _ in range(local.code_874[1]) : jsondecode(format("\"\\u%04x\"", local.iter_873.tape[local.iter_873.tape_ptr]))])}"
      : local.iter_873.output)
    
    tape = (
      local.code_874[0] == "+"
        ? [for i, b in local.iter_873.tape : (i == local.iter_873.tape_ptr ? (b + local.code_874[1]) % 256 : b)] :
      local.code_874[0] == "-"
        ? [for i, b in local.iter_873.tape : (i == local.iter_873.tape_ptr ? (b - local.code_874[1] + 256) % 256 : b)] :
      local.code_874[0] == ","
        ? [for i, b in local.iter_873.tape : (i == local.iter_873.tape_ptr ? local.ascii_lookup[substr(local.input_874, 0, 1)] : b)]
        : local.iter_873.tape)

    tape_ptr = (
      local.code_874[0] == "<"
        ? local.iter_873.tape_ptr - local.code_874[1] :
      local.code_874[0] == ">"
        ? local.iter_873.tape_ptr + local.code_874[1]
        : local.iter_873.tape_ptr)

    code_ptr = 2 + (
      local.code_874[0] == "["
        ? local.iter_873.tape[local.iter_873.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_873.code_ptr)] : local.iter_873.code_ptr :
      local.code_874[0] == "]"
        ? local.iter_873.tape[local.iter_873.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_873.code_ptr)] : local.iter_873.code_ptr
        : local.iter_873.code_ptr)

    steps_taken = 1 + local.iter_873.steps_taken
  }
}

locals {
  code_875 = (try(local.iter_874.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_874.code_ptr, local.iter_874.code_ptr + 2)
    : [null])

  input_875 = (local.code_875[0] == ","
    ? substr(local.input_874, local.code_875[1], -1)
    : local.input_874)

  iter_875 = try(local.iter_874.code_ptr >= length(var.code), true) ? local.iter_874 : {
    output = (local.code_875[0] == "."
      ? "${local.iter_874.output}${join("", [for _ in range(local.code_875[1]) : jsondecode(format("\"\\u%04x\"", local.iter_874.tape[local.iter_874.tape_ptr]))])}"
      : local.iter_874.output)
    
    tape = (
      local.code_875[0] == "+"
        ? [for i, b in local.iter_874.tape : (i == local.iter_874.tape_ptr ? (b + local.code_875[1]) % 256 : b)] :
      local.code_875[0] == "-"
        ? [for i, b in local.iter_874.tape : (i == local.iter_874.tape_ptr ? (b - local.code_875[1] + 256) % 256 : b)] :
      local.code_875[0] == ","
        ? [for i, b in local.iter_874.tape : (i == local.iter_874.tape_ptr ? local.ascii_lookup[substr(local.input_875, 0, 1)] : b)]
        : local.iter_874.tape)

    tape_ptr = (
      local.code_875[0] == "<"
        ? local.iter_874.tape_ptr - local.code_875[1] :
      local.code_875[0] == ">"
        ? local.iter_874.tape_ptr + local.code_875[1]
        : local.iter_874.tape_ptr)

    code_ptr = 2 + (
      local.code_875[0] == "["
        ? local.iter_874.tape[local.iter_874.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_874.code_ptr)] : local.iter_874.code_ptr :
      local.code_875[0] == "]"
        ? local.iter_874.tape[local.iter_874.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_874.code_ptr)] : local.iter_874.code_ptr
        : local.iter_874.code_ptr)

    steps_taken = 1 + local.iter_874.steps_taken
  }
}

locals {
  code_876 = (try(local.iter_875.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_875.code_ptr, local.iter_875.code_ptr + 2)
    : [null])

  input_876 = (local.code_876[0] == ","
    ? substr(local.input_875, local.code_876[1], -1)
    : local.input_875)

  iter_876 = try(local.iter_875.code_ptr >= length(var.code), true) ? local.iter_875 : {
    output = (local.code_876[0] == "."
      ? "${local.iter_875.output}${join("", [for _ in range(local.code_876[1]) : jsondecode(format("\"\\u%04x\"", local.iter_875.tape[local.iter_875.tape_ptr]))])}"
      : local.iter_875.output)
    
    tape = (
      local.code_876[0] == "+"
        ? [for i, b in local.iter_875.tape : (i == local.iter_875.tape_ptr ? (b + local.code_876[1]) % 256 : b)] :
      local.code_876[0] == "-"
        ? [for i, b in local.iter_875.tape : (i == local.iter_875.tape_ptr ? (b - local.code_876[1] + 256) % 256 : b)] :
      local.code_876[0] == ","
        ? [for i, b in local.iter_875.tape : (i == local.iter_875.tape_ptr ? local.ascii_lookup[substr(local.input_876, 0, 1)] : b)]
        : local.iter_875.tape)

    tape_ptr = (
      local.code_876[0] == "<"
        ? local.iter_875.tape_ptr - local.code_876[1] :
      local.code_876[0] == ">"
        ? local.iter_875.tape_ptr + local.code_876[1]
        : local.iter_875.tape_ptr)

    code_ptr = 2 + (
      local.code_876[0] == "["
        ? local.iter_875.tape[local.iter_875.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_875.code_ptr)] : local.iter_875.code_ptr :
      local.code_876[0] == "]"
        ? local.iter_875.tape[local.iter_875.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_875.code_ptr)] : local.iter_875.code_ptr
        : local.iter_875.code_ptr)

    steps_taken = 1 + local.iter_875.steps_taken
  }
}

locals {
  code_877 = (try(local.iter_876.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_876.code_ptr, local.iter_876.code_ptr + 2)
    : [null])

  input_877 = (local.code_877[0] == ","
    ? substr(local.input_876, local.code_877[1], -1)
    : local.input_876)

  iter_877 = try(local.iter_876.code_ptr >= length(var.code), true) ? local.iter_876 : {
    output = (local.code_877[0] == "."
      ? "${local.iter_876.output}${join("", [for _ in range(local.code_877[1]) : jsondecode(format("\"\\u%04x\"", local.iter_876.tape[local.iter_876.tape_ptr]))])}"
      : local.iter_876.output)
    
    tape = (
      local.code_877[0] == "+"
        ? [for i, b in local.iter_876.tape : (i == local.iter_876.tape_ptr ? (b + local.code_877[1]) % 256 : b)] :
      local.code_877[0] == "-"
        ? [for i, b in local.iter_876.tape : (i == local.iter_876.tape_ptr ? (b - local.code_877[1] + 256) % 256 : b)] :
      local.code_877[0] == ","
        ? [for i, b in local.iter_876.tape : (i == local.iter_876.tape_ptr ? local.ascii_lookup[substr(local.input_877, 0, 1)] : b)]
        : local.iter_876.tape)

    tape_ptr = (
      local.code_877[0] == "<"
        ? local.iter_876.tape_ptr - local.code_877[1] :
      local.code_877[0] == ">"
        ? local.iter_876.tape_ptr + local.code_877[1]
        : local.iter_876.tape_ptr)

    code_ptr = 2 + (
      local.code_877[0] == "["
        ? local.iter_876.tape[local.iter_876.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_876.code_ptr)] : local.iter_876.code_ptr :
      local.code_877[0] == "]"
        ? local.iter_876.tape[local.iter_876.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_876.code_ptr)] : local.iter_876.code_ptr
        : local.iter_876.code_ptr)

    steps_taken = 1 + local.iter_876.steps_taken
  }
}

locals {
  code_878 = (try(local.iter_877.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_877.code_ptr, local.iter_877.code_ptr + 2)
    : [null])

  input_878 = (local.code_878[0] == ","
    ? substr(local.input_877, local.code_878[1], -1)
    : local.input_877)

  iter_878 = try(local.iter_877.code_ptr >= length(var.code), true) ? local.iter_877 : {
    output = (local.code_878[0] == "."
      ? "${local.iter_877.output}${join("", [for _ in range(local.code_878[1]) : jsondecode(format("\"\\u%04x\"", local.iter_877.tape[local.iter_877.tape_ptr]))])}"
      : local.iter_877.output)
    
    tape = (
      local.code_878[0] == "+"
        ? [for i, b in local.iter_877.tape : (i == local.iter_877.tape_ptr ? (b + local.code_878[1]) % 256 : b)] :
      local.code_878[0] == "-"
        ? [for i, b in local.iter_877.tape : (i == local.iter_877.tape_ptr ? (b - local.code_878[1] + 256) % 256 : b)] :
      local.code_878[0] == ","
        ? [for i, b in local.iter_877.tape : (i == local.iter_877.tape_ptr ? local.ascii_lookup[substr(local.input_878, 0, 1)] : b)]
        : local.iter_877.tape)

    tape_ptr = (
      local.code_878[0] == "<"
        ? local.iter_877.tape_ptr - local.code_878[1] :
      local.code_878[0] == ">"
        ? local.iter_877.tape_ptr + local.code_878[1]
        : local.iter_877.tape_ptr)

    code_ptr = 2 + (
      local.code_878[0] == "["
        ? local.iter_877.tape[local.iter_877.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_877.code_ptr)] : local.iter_877.code_ptr :
      local.code_878[0] == "]"
        ? local.iter_877.tape[local.iter_877.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_877.code_ptr)] : local.iter_877.code_ptr
        : local.iter_877.code_ptr)

    steps_taken = 1 + local.iter_877.steps_taken
  }
}

locals {
  code_879 = (try(local.iter_878.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_878.code_ptr, local.iter_878.code_ptr + 2)
    : [null])

  input_879 = (local.code_879[0] == ","
    ? substr(local.input_878, local.code_879[1], -1)
    : local.input_878)

  iter_879 = try(local.iter_878.code_ptr >= length(var.code), true) ? local.iter_878 : {
    output = (local.code_879[0] == "."
      ? "${local.iter_878.output}${join("", [for _ in range(local.code_879[1]) : jsondecode(format("\"\\u%04x\"", local.iter_878.tape[local.iter_878.tape_ptr]))])}"
      : local.iter_878.output)
    
    tape = (
      local.code_879[0] == "+"
        ? [for i, b in local.iter_878.tape : (i == local.iter_878.tape_ptr ? (b + local.code_879[1]) % 256 : b)] :
      local.code_879[0] == "-"
        ? [for i, b in local.iter_878.tape : (i == local.iter_878.tape_ptr ? (b - local.code_879[1] + 256) % 256 : b)] :
      local.code_879[0] == ","
        ? [for i, b in local.iter_878.tape : (i == local.iter_878.tape_ptr ? local.ascii_lookup[substr(local.input_879, 0, 1)] : b)]
        : local.iter_878.tape)

    tape_ptr = (
      local.code_879[0] == "<"
        ? local.iter_878.tape_ptr - local.code_879[1] :
      local.code_879[0] == ">"
        ? local.iter_878.tape_ptr + local.code_879[1]
        : local.iter_878.tape_ptr)

    code_ptr = 2 + (
      local.code_879[0] == "["
        ? local.iter_878.tape[local.iter_878.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_878.code_ptr)] : local.iter_878.code_ptr :
      local.code_879[0] == "]"
        ? local.iter_878.tape[local.iter_878.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_878.code_ptr)] : local.iter_878.code_ptr
        : local.iter_878.code_ptr)

    steps_taken = 1 + local.iter_878.steps_taken
  }
}

locals {
  code_880 = (try(local.iter_879.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_879.code_ptr, local.iter_879.code_ptr + 2)
    : [null])

  input_880 = (local.code_880[0] == ","
    ? substr(local.input_879, local.code_880[1], -1)
    : local.input_879)

  iter_880 = try(local.iter_879.code_ptr >= length(var.code), true) ? local.iter_879 : {
    output = (local.code_880[0] == "."
      ? "${local.iter_879.output}${join("", [for _ in range(local.code_880[1]) : jsondecode(format("\"\\u%04x\"", local.iter_879.tape[local.iter_879.tape_ptr]))])}"
      : local.iter_879.output)
    
    tape = (
      local.code_880[0] == "+"
        ? [for i, b in local.iter_879.tape : (i == local.iter_879.tape_ptr ? (b + local.code_880[1]) % 256 : b)] :
      local.code_880[0] == "-"
        ? [for i, b in local.iter_879.tape : (i == local.iter_879.tape_ptr ? (b - local.code_880[1] + 256) % 256 : b)] :
      local.code_880[0] == ","
        ? [for i, b in local.iter_879.tape : (i == local.iter_879.tape_ptr ? local.ascii_lookup[substr(local.input_880, 0, 1)] : b)]
        : local.iter_879.tape)

    tape_ptr = (
      local.code_880[0] == "<"
        ? local.iter_879.tape_ptr - local.code_880[1] :
      local.code_880[0] == ">"
        ? local.iter_879.tape_ptr + local.code_880[1]
        : local.iter_879.tape_ptr)

    code_ptr = 2 + (
      local.code_880[0] == "["
        ? local.iter_879.tape[local.iter_879.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_879.code_ptr)] : local.iter_879.code_ptr :
      local.code_880[0] == "]"
        ? local.iter_879.tape[local.iter_879.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_879.code_ptr)] : local.iter_879.code_ptr
        : local.iter_879.code_ptr)

    steps_taken = 1 + local.iter_879.steps_taken
  }
}

locals {
  code_881 = (try(local.iter_880.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_880.code_ptr, local.iter_880.code_ptr + 2)
    : [null])

  input_881 = (local.code_881[0] == ","
    ? substr(local.input_880, local.code_881[1], -1)
    : local.input_880)

  iter_881 = try(local.iter_880.code_ptr >= length(var.code), true) ? local.iter_880 : {
    output = (local.code_881[0] == "."
      ? "${local.iter_880.output}${join("", [for _ in range(local.code_881[1]) : jsondecode(format("\"\\u%04x\"", local.iter_880.tape[local.iter_880.tape_ptr]))])}"
      : local.iter_880.output)
    
    tape = (
      local.code_881[0] == "+"
        ? [for i, b in local.iter_880.tape : (i == local.iter_880.tape_ptr ? (b + local.code_881[1]) % 256 : b)] :
      local.code_881[0] == "-"
        ? [for i, b in local.iter_880.tape : (i == local.iter_880.tape_ptr ? (b - local.code_881[1] + 256) % 256 : b)] :
      local.code_881[0] == ","
        ? [for i, b in local.iter_880.tape : (i == local.iter_880.tape_ptr ? local.ascii_lookup[substr(local.input_881, 0, 1)] : b)]
        : local.iter_880.tape)

    tape_ptr = (
      local.code_881[0] == "<"
        ? local.iter_880.tape_ptr - local.code_881[1] :
      local.code_881[0] == ">"
        ? local.iter_880.tape_ptr + local.code_881[1]
        : local.iter_880.tape_ptr)

    code_ptr = 2 + (
      local.code_881[0] == "["
        ? local.iter_880.tape[local.iter_880.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_880.code_ptr)] : local.iter_880.code_ptr :
      local.code_881[0] == "]"
        ? local.iter_880.tape[local.iter_880.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_880.code_ptr)] : local.iter_880.code_ptr
        : local.iter_880.code_ptr)

    steps_taken = 1 + local.iter_880.steps_taken
  }
}

locals {
  code_882 = (try(local.iter_881.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_881.code_ptr, local.iter_881.code_ptr + 2)
    : [null])

  input_882 = (local.code_882[0] == ","
    ? substr(local.input_881, local.code_882[1], -1)
    : local.input_881)

  iter_882 = try(local.iter_881.code_ptr >= length(var.code), true) ? local.iter_881 : {
    output = (local.code_882[0] == "."
      ? "${local.iter_881.output}${join("", [for _ in range(local.code_882[1]) : jsondecode(format("\"\\u%04x\"", local.iter_881.tape[local.iter_881.tape_ptr]))])}"
      : local.iter_881.output)
    
    tape = (
      local.code_882[0] == "+"
        ? [for i, b in local.iter_881.tape : (i == local.iter_881.tape_ptr ? (b + local.code_882[1]) % 256 : b)] :
      local.code_882[0] == "-"
        ? [for i, b in local.iter_881.tape : (i == local.iter_881.tape_ptr ? (b - local.code_882[1] + 256) % 256 : b)] :
      local.code_882[0] == ","
        ? [for i, b in local.iter_881.tape : (i == local.iter_881.tape_ptr ? local.ascii_lookup[substr(local.input_882, 0, 1)] : b)]
        : local.iter_881.tape)

    tape_ptr = (
      local.code_882[0] == "<"
        ? local.iter_881.tape_ptr - local.code_882[1] :
      local.code_882[0] == ">"
        ? local.iter_881.tape_ptr + local.code_882[1]
        : local.iter_881.tape_ptr)

    code_ptr = 2 + (
      local.code_882[0] == "["
        ? local.iter_881.tape[local.iter_881.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_881.code_ptr)] : local.iter_881.code_ptr :
      local.code_882[0] == "]"
        ? local.iter_881.tape[local.iter_881.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_881.code_ptr)] : local.iter_881.code_ptr
        : local.iter_881.code_ptr)

    steps_taken = 1 + local.iter_881.steps_taken
  }
}

locals {
  code_883 = (try(local.iter_882.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_882.code_ptr, local.iter_882.code_ptr + 2)
    : [null])

  input_883 = (local.code_883[0] == ","
    ? substr(local.input_882, local.code_883[1], -1)
    : local.input_882)

  iter_883 = try(local.iter_882.code_ptr >= length(var.code), true) ? local.iter_882 : {
    output = (local.code_883[0] == "."
      ? "${local.iter_882.output}${join("", [for _ in range(local.code_883[1]) : jsondecode(format("\"\\u%04x\"", local.iter_882.tape[local.iter_882.tape_ptr]))])}"
      : local.iter_882.output)
    
    tape = (
      local.code_883[0] == "+"
        ? [for i, b in local.iter_882.tape : (i == local.iter_882.tape_ptr ? (b + local.code_883[1]) % 256 : b)] :
      local.code_883[0] == "-"
        ? [for i, b in local.iter_882.tape : (i == local.iter_882.tape_ptr ? (b - local.code_883[1] + 256) % 256 : b)] :
      local.code_883[0] == ","
        ? [for i, b in local.iter_882.tape : (i == local.iter_882.tape_ptr ? local.ascii_lookup[substr(local.input_883, 0, 1)] : b)]
        : local.iter_882.tape)

    tape_ptr = (
      local.code_883[0] == "<"
        ? local.iter_882.tape_ptr - local.code_883[1] :
      local.code_883[0] == ">"
        ? local.iter_882.tape_ptr + local.code_883[1]
        : local.iter_882.tape_ptr)

    code_ptr = 2 + (
      local.code_883[0] == "["
        ? local.iter_882.tape[local.iter_882.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_882.code_ptr)] : local.iter_882.code_ptr :
      local.code_883[0] == "]"
        ? local.iter_882.tape[local.iter_882.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_882.code_ptr)] : local.iter_882.code_ptr
        : local.iter_882.code_ptr)

    steps_taken = 1 + local.iter_882.steps_taken
  }
}

locals {
  code_884 = (try(local.iter_883.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_883.code_ptr, local.iter_883.code_ptr + 2)
    : [null])

  input_884 = (local.code_884[0] == ","
    ? substr(local.input_883, local.code_884[1], -1)
    : local.input_883)

  iter_884 = try(local.iter_883.code_ptr >= length(var.code), true) ? local.iter_883 : {
    output = (local.code_884[0] == "."
      ? "${local.iter_883.output}${join("", [for _ in range(local.code_884[1]) : jsondecode(format("\"\\u%04x\"", local.iter_883.tape[local.iter_883.tape_ptr]))])}"
      : local.iter_883.output)
    
    tape = (
      local.code_884[0] == "+"
        ? [for i, b in local.iter_883.tape : (i == local.iter_883.tape_ptr ? (b + local.code_884[1]) % 256 : b)] :
      local.code_884[0] == "-"
        ? [for i, b in local.iter_883.tape : (i == local.iter_883.tape_ptr ? (b - local.code_884[1] + 256) % 256 : b)] :
      local.code_884[0] == ","
        ? [for i, b in local.iter_883.tape : (i == local.iter_883.tape_ptr ? local.ascii_lookup[substr(local.input_884, 0, 1)] : b)]
        : local.iter_883.tape)

    tape_ptr = (
      local.code_884[0] == "<"
        ? local.iter_883.tape_ptr - local.code_884[1] :
      local.code_884[0] == ">"
        ? local.iter_883.tape_ptr + local.code_884[1]
        : local.iter_883.tape_ptr)

    code_ptr = 2 + (
      local.code_884[0] == "["
        ? local.iter_883.tape[local.iter_883.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_883.code_ptr)] : local.iter_883.code_ptr :
      local.code_884[0] == "]"
        ? local.iter_883.tape[local.iter_883.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_883.code_ptr)] : local.iter_883.code_ptr
        : local.iter_883.code_ptr)

    steps_taken = 1 + local.iter_883.steps_taken
  }
}

locals {
  code_885 = (try(local.iter_884.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_884.code_ptr, local.iter_884.code_ptr + 2)
    : [null])

  input_885 = (local.code_885[0] == ","
    ? substr(local.input_884, local.code_885[1], -1)
    : local.input_884)

  iter_885 = try(local.iter_884.code_ptr >= length(var.code), true) ? local.iter_884 : {
    output = (local.code_885[0] == "."
      ? "${local.iter_884.output}${join("", [for _ in range(local.code_885[1]) : jsondecode(format("\"\\u%04x\"", local.iter_884.tape[local.iter_884.tape_ptr]))])}"
      : local.iter_884.output)
    
    tape = (
      local.code_885[0] == "+"
        ? [for i, b in local.iter_884.tape : (i == local.iter_884.tape_ptr ? (b + local.code_885[1]) % 256 : b)] :
      local.code_885[0] == "-"
        ? [for i, b in local.iter_884.tape : (i == local.iter_884.tape_ptr ? (b - local.code_885[1] + 256) % 256 : b)] :
      local.code_885[0] == ","
        ? [for i, b in local.iter_884.tape : (i == local.iter_884.tape_ptr ? local.ascii_lookup[substr(local.input_885, 0, 1)] : b)]
        : local.iter_884.tape)

    tape_ptr = (
      local.code_885[0] == "<"
        ? local.iter_884.tape_ptr - local.code_885[1] :
      local.code_885[0] == ">"
        ? local.iter_884.tape_ptr + local.code_885[1]
        : local.iter_884.tape_ptr)

    code_ptr = 2 + (
      local.code_885[0] == "["
        ? local.iter_884.tape[local.iter_884.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_884.code_ptr)] : local.iter_884.code_ptr :
      local.code_885[0] == "]"
        ? local.iter_884.tape[local.iter_884.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_884.code_ptr)] : local.iter_884.code_ptr
        : local.iter_884.code_ptr)

    steps_taken = 1 + local.iter_884.steps_taken
  }
}

locals {
  code_886 = (try(local.iter_885.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_885.code_ptr, local.iter_885.code_ptr + 2)
    : [null])

  input_886 = (local.code_886[0] == ","
    ? substr(local.input_885, local.code_886[1], -1)
    : local.input_885)

  iter_886 = try(local.iter_885.code_ptr >= length(var.code), true) ? local.iter_885 : {
    output = (local.code_886[0] == "."
      ? "${local.iter_885.output}${join("", [for _ in range(local.code_886[1]) : jsondecode(format("\"\\u%04x\"", local.iter_885.tape[local.iter_885.tape_ptr]))])}"
      : local.iter_885.output)
    
    tape = (
      local.code_886[0] == "+"
        ? [for i, b in local.iter_885.tape : (i == local.iter_885.tape_ptr ? (b + local.code_886[1]) % 256 : b)] :
      local.code_886[0] == "-"
        ? [for i, b in local.iter_885.tape : (i == local.iter_885.tape_ptr ? (b - local.code_886[1] + 256) % 256 : b)] :
      local.code_886[0] == ","
        ? [for i, b in local.iter_885.tape : (i == local.iter_885.tape_ptr ? local.ascii_lookup[substr(local.input_886, 0, 1)] : b)]
        : local.iter_885.tape)

    tape_ptr = (
      local.code_886[0] == "<"
        ? local.iter_885.tape_ptr - local.code_886[1] :
      local.code_886[0] == ">"
        ? local.iter_885.tape_ptr + local.code_886[1]
        : local.iter_885.tape_ptr)

    code_ptr = 2 + (
      local.code_886[0] == "["
        ? local.iter_885.tape[local.iter_885.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_885.code_ptr)] : local.iter_885.code_ptr :
      local.code_886[0] == "]"
        ? local.iter_885.tape[local.iter_885.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_885.code_ptr)] : local.iter_885.code_ptr
        : local.iter_885.code_ptr)

    steps_taken = 1 + local.iter_885.steps_taken
  }
}

locals {
  code_887 = (try(local.iter_886.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_886.code_ptr, local.iter_886.code_ptr + 2)
    : [null])

  input_887 = (local.code_887[0] == ","
    ? substr(local.input_886, local.code_887[1], -1)
    : local.input_886)

  iter_887 = try(local.iter_886.code_ptr >= length(var.code), true) ? local.iter_886 : {
    output = (local.code_887[0] == "."
      ? "${local.iter_886.output}${join("", [for _ in range(local.code_887[1]) : jsondecode(format("\"\\u%04x\"", local.iter_886.tape[local.iter_886.tape_ptr]))])}"
      : local.iter_886.output)
    
    tape = (
      local.code_887[0] == "+"
        ? [for i, b in local.iter_886.tape : (i == local.iter_886.tape_ptr ? (b + local.code_887[1]) % 256 : b)] :
      local.code_887[0] == "-"
        ? [for i, b in local.iter_886.tape : (i == local.iter_886.tape_ptr ? (b - local.code_887[1] + 256) % 256 : b)] :
      local.code_887[0] == ","
        ? [for i, b in local.iter_886.tape : (i == local.iter_886.tape_ptr ? local.ascii_lookup[substr(local.input_887, 0, 1)] : b)]
        : local.iter_886.tape)

    tape_ptr = (
      local.code_887[0] == "<"
        ? local.iter_886.tape_ptr - local.code_887[1] :
      local.code_887[0] == ">"
        ? local.iter_886.tape_ptr + local.code_887[1]
        : local.iter_886.tape_ptr)

    code_ptr = 2 + (
      local.code_887[0] == "["
        ? local.iter_886.tape[local.iter_886.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_886.code_ptr)] : local.iter_886.code_ptr :
      local.code_887[0] == "]"
        ? local.iter_886.tape[local.iter_886.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_886.code_ptr)] : local.iter_886.code_ptr
        : local.iter_886.code_ptr)

    steps_taken = 1 + local.iter_886.steps_taken
  }
}

locals {
  code_888 = (try(local.iter_887.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_887.code_ptr, local.iter_887.code_ptr + 2)
    : [null])

  input_888 = (local.code_888[0] == ","
    ? substr(local.input_887, local.code_888[1], -1)
    : local.input_887)

  iter_888 = try(local.iter_887.code_ptr >= length(var.code), true) ? local.iter_887 : {
    output = (local.code_888[0] == "."
      ? "${local.iter_887.output}${join("", [for _ in range(local.code_888[1]) : jsondecode(format("\"\\u%04x\"", local.iter_887.tape[local.iter_887.tape_ptr]))])}"
      : local.iter_887.output)
    
    tape = (
      local.code_888[0] == "+"
        ? [for i, b in local.iter_887.tape : (i == local.iter_887.tape_ptr ? (b + local.code_888[1]) % 256 : b)] :
      local.code_888[0] == "-"
        ? [for i, b in local.iter_887.tape : (i == local.iter_887.tape_ptr ? (b - local.code_888[1] + 256) % 256 : b)] :
      local.code_888[0] == ","
        ? [for i, b in local.iter_887.tape : (i == local.iter_887.tape_ptr ? local.ascii_lookup[substr(local.input_888, 0, 1)] : b)]
        : local.iter_887.tape)

    tape_ptr = (
      local.code_888[0] == "<"
        ? local.iter_887.tape_ptr - local.code_888[1] :
      local.code_888[0] == ">"
        ? local.iter_887.tape_ptr + local.code_888[1]
        : local.iter_887.tape_ptr)

    code_ptr = 2 + (
      local.code_888[0] == "["
        ? local.iter_887.tape[local.iter_887.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_887.code_ptr)] : local.iter_887.code_ptr :
      local.code_888[0] == "]"
        ? local.iter_887.tape[local.iter_887.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_887.code_ptr)] : local.iter_887.code_ptr
        : local.iter_887.code_ptr)

    steps_taken = 1 + local.iter_887.steps_taken
  }
}

locals {
  code_889 = (try(local.iter_888.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_888.code_ptr, local.iter_888.code_ptr + 2)
    : [null])

  input_889 = (local.code_889[0] == ","
    ? substr(local.input_888, local.code_889[1], -1)
    : local.input_888)

  iter_889 = try(local.iter_888.code_ptr >= length(var.code), true) ? local.iter_888 : {
    output = (local.code_889[0] == "."
      ? "${local.iter_888.output}${join("", [for _ in range(local.code_889[1]) : jsondecode(format("\"\\u%04x\"", local.iter_888.tape[local.iter_888.tape_ptr]))])}"
      : local.iter_888.output)
    
    tape = (
      local.code_889[0] == "+"
        ? [for i, b in local.iter_888.tape : (i == local.iter_888.tape_ptr ? (b + local.code_889[1]) % 256 : b)] :
      local.code_889[0] == "-"
        ? [for i, b in local.iter_888.tape : (i == local.iter_888.tape_ptr ? (b - local.code_889[1] + 256) % 256 : b)] :
      local.code_889[0] == ","
        ? [for i, b in local.iter_888.tape : (i == local.iter_888.tape_ptr ? local.ascii_lookup[substr(local.input_889, 0, 1)] : b)]
        : local.iter_888.tape)

    tape_ptr = (
      local.code_889[0] == "<"
        ? local.iter_888.tape_ptr - local.code_889[1] :
      local.code_889[0] == ">"
        ? local.iter_888.tape_ptr + local.code_889[1]
        : local.iter_888.tape_ptr)

    code_ptr = 2 + (
      local.code_889[0] == "["
        ? local.iter_888.tape[local.iter_888.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_888.code_ptr)] : local.iter_888.code_ptr :
      local.code_889[0] == "]"
        ? local.iter_888.tape[local.iter_888.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_888.code_ptr)] : local.iter_888.code_ptr
        : local.iter_888.code_ptr)

    steps_taken = 1 + local.iter_888.steps_taken
  }
}

locals {
  code_890 = (try(local.iter_889.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_889.code_ptr, local.iter_889.code_ptr + 2)
    : [null])

  input_890 = (local.code_890[0] == ","
    ? substr(local.input_889, local.code_890[1], -1)
    : local.input_889)

  iter_890 = try(local.iter_889.code_ptr >= length(var.code), true) ? local.iter_889 : {
    output = (local.code_890[0] == "."
      ? "${local.iter_889.output}${join("", [for _ in range(local.code_890[1]) : jsondecode(format("\"\\u%04x\"", local.iter_889.tape[local.iter_889.tape_ptr]))])}"
      : local.iter_889.output)
    
    tape = (
      local.code_890[0] == "+"
        ? [for i, b in local.iter_889.tape : (i == local.iter_889.tape_ptr ? (b + local.code_890[1]) % 256 : b)] :
      local.code_890[0] == "-"
        ? [for i, b in local.iter_889.tape : (i == local.iter_889.tape_ptr ? (b - local.code_890[1] + 256) % 256 : b)] :
      local.code_890[0] == ","
        ? [for i, b in local.iter_889.tape : (i == local.iter_889.tape_ptr ? local.ascii_lookup[substr(local.input_890, 0, 1)] : b)]
        : local.iter_889.tape)

    tape_ptr = (
      local.code_890[0] == "<"
        ? local.iter_889.tape_ptr - local.code_890[1] :
      local.code_890[0] == ">"
        ? local.iter_889.tape_ptr + local.code_890[1]
        : local.iter_889.tape_ptr)

    code_ptr = 2 + (
      local.code_890[0] == "["
        ? local.iter_889.tape[local.iter_889.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_889.code_ptr)] : local.iter_889.code_ptr :
      local.code_890[0] == "]"
        ? local.iter_889.tape[local.iter_889.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_889.code_ptr)] : local.iter_889.code_ptr
        : local.iter_889.code_ptr)

    steps_taken = 1 + local.iter_889.steps_taken
  }
}

locals {
  code_891 = (try(local.iter_890.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_890.code_ptr, local.iter_890.code_ptr + 2)
    : [null])

  input_891 = (local.code_891[0] == ","
    ? substr(local.input_890, local.code_891[1], -1)
    : local.input_890)

  iter_891 = try(local.iter_890.code_ptr >= length(var.code), true) ? local.iter_890 : {
    output = (local.code_891[0] == "."
      ? "${local.iter_890.output}${join("", [for _ in range(local.code_891[1]) : jsondecode(format("\"\\u%04x\"", local.iter_890.tape[local.iter_890.tape_ptr]))])}"
      : local.iter_890.output)
    
    tape = (
      local.code_891[0] == "+"
        ? [for i, b in local.iter_890.tape : (i == local.iter_890.tape_ptr ? (b + local.code_891[1]) % 256 : b)] :
      local.code_891[0] == "-"
        ? [for i, b in local.iter_890.tape : (i == local.iter_890.tape_ptr ? (b - local.code_891[1] + 256) % 256 : b)] :
      local.code_891[0] == ","
        ? [for i, b in local.iter_890.tape : (i == local.iter_890.tape_ptr ? local.ascii_lookup[substr(local.input_891, 0, 1)] : b)]
        : local.iter_890.tape)

    tape_ptr = (
      local.code_891[0] == "<"
        ? local.iter_890.tape_ptr - local.code_891[1] :
      local.code_891[0] == ">"
        ? local.iter_890.tape_ptr + local.code_891[1]
        : local.iter_890.tape_ptr)

    code_ptr = 2 + (
      local.code_891[0] == "["
        ? local.iter_890.tape[local.iter_890.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_890.code_ptr)] : local.iter_890.code_ptr :
      local.code_891[0] == "]"
        ? local.iter_890.tape[local.iter_890.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_890.code_ptr)] : local.iter_890.code_ptr
        : local.iter_890.code_ptr)

    steps_taken = 1 + local.iter_890.steps_taken
  }
}

locals {
  code_892 = (try(local.iter_891.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_891.code_ptr, local.iter_891.code_ptr + 2)
    : [null])

  input_892 = (local.code_892[0] == ","
    ? substr(local.input_891, local.code_892[1], -1)
    : local.input_891)

  iter_892 = try(local.iter_891.code_ptr >= length(var.code), true) ? local.iter_891 : {
    output = (local.code_892[0] == "."
      ? "${local.iter_891.output}${join("", [for _ in range(local.code_892[1]) : jsondecode(format("\"\\u%04x\"", local.iter_891.tape[local.iter_891.tape_ptr]))])}"
      : local.iter_891.output)
    
    tape = (
      local.code_892[0] == "+"
        ? [for i, b in local.iter_891.tape : (i == local.iter_891.tape_ptr ? (b + local.code_892[1]) % 256 : b)] :
      local.code_892[0] == "-"
        ? [for i, b in local.iter_891.tape : (i == local.iter_891.tape_ptr ? (b - local.code_892[1] + 256) % 256 : b)] :
      local.code_892[0] == ","
        ? [for i, b in local.iter_891.tape : (i == local.iter_891.tape_ptr ? local.ascii_lookup[substr(local.input_892, 0, 1)] : b)]
        : local.iter_891.tape)

    tape_ptr = (
      local.code_892[0] == "<"
        ? local.iter_891.tape_ptr - local.code_892[1] :
      local.code_892[0] == ">"
        ? local.iter_891.tape_ptr + local.code_892[1]
        : local.iter_891.tape_ptr)

    code_ptr = 2 + (
      local.code_892[0] == "["
        ? local.iter_891.tape[local.iter_891.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_891.code_ptr)] : local.iter_891.code_ptr :
      local.code_892[0] == "]"
        ? local.iter_891.tape[local.iter_891.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_891.code_ptr)] : local.iter_891.code_ptr
        : local.iter_891.code_ptr)

    steps_taken = 1 + local.iter_891.steps_taken
  }
}

locals {
  code_893 = (try(local.iter_892.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_892.code_ptr, local.iter_892.code_ptr + 2)
    : [null])

  input_893 = (local.code_893[0] == ","
    ? substr(local.input_892, local.code_893[1], -1)
    : local.input_892)

  iter_893 = try(local.iter_892.code_ptr >= length(var.code), true) ? local.iter_892 : {
    output = (local.code_893[0] == "."
      ? "${local.iter_892.output}${join("", [for _ in range(local.code_893[1]) : jsondecode(format("\"\\u%04x\"", local.iter_892.tape[local.iter_892.tape_ptr]))])}"
      : local.iter_892.output)
    
    tape = (
      local.code_893[0] == "+"
        ? [for i, b in local.iter_892.tape : (i == local.iter_892.tape_ptr ? (b + local.code_893[1]) % 256 : b)] :
      local.code_893[0] == "-"
        ? [for i, b in local.iter_892.tape : (i == local.iter_892.tape_ptr ? (b - local.code_893[1] + 256) % 256 : b)] :
      local.code_893[0] == ","
        ? [for i, b in local.iter_892.tape : (i == local.iter_892.tape_ptr ? local.ascii_lookup[substr(local.input_893, 0, 1)] : b)]
        : local.iter_892.tape)

    tape_ptr = (
      local.code_893[0] == "<"
        ? local.iter_892.tape_ptr - local.code_893[1] :
      local.code_893[0] == ">"
        ? local.iter_892.tape_ptr + local.code_893[1]
        : local.iter_892.tape_ptr)

    code_ptr = 2 + (
      local.code_893[0] == "["
        ? local.iter_892.tape[local.iter_892.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_892.code_ptr)] : local.iter_892.code_ptr :
      local.code_893[0] == "]"
        ? local.iter_892.tape[local.iter_892.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_892.code_ptr)] : local.iter_892.code_ptr
        : local.iter_892.code_ptr)

    steps_taken = 1 + local.iter_892.steps_taken
  }
}

locals {
  code_894 = (try(local.iter_893.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_893.code_ptr, local.iter_893.code_ptr + 2)
    : [null])

  input_894 = (local.code_894[0] == ","
    ? substr(local.input_893, local.code_894[1], -1)
    : local.input_893)

  iter_894 = try(local.iter_893.code_ptr >= length(var.code), true) ? local.iter_893 : {
    output = (local.code_894[0] == "."
      ? "${local.iter_893.output}${join("", [for _ in range(local.code_894[1]) : jsondecode(format("\"\\u%04x\"", local.iter_893.tape[local.iter_893.tape_ptr]))])}"
      : local.iter_893.output)
    
    tape = (
      local.code_894[0] == "+"
        ? [for i, b in local.iter_893.tape : (i == local.iter_893.tape_ptr ? (b + local.code_894[1]) % 256 : b)] :
      local.code_894[0] == "-"
        ? [for i, b in local.iter_893.tape : (i == local.iter_893.tape_ptr ? (b - local.code_894[1] + 256) % 256 : b)] :
      local.code_894[0] == ","
        ? [for i, b in local.iter_893.tape : (i == local.iter_893.tape_ptr ? local.ascii_lookup[substr(local.input_894, 0, 1)] : b)]
        : local.iter_893.tape)

    tape_ptr = (
      local.code_894[0] == "<"
        ? local.iter_893.tape_ptr - local.code_894[1] :
      local.code_894[0] == ">"
        ? local.iter_893.tape_ptr + local.code_894[1]
        : local.iter_893.tape_ptr)

    code_ptr = 2 + (
      local.code_894[0] == "["
        ? local.iter_893.tape[local.iter_893.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_893.code_ptr)] : local.iter_893.code_ptr :
      local.code_894[0] == "]"
        ? local.iter_893.tape[local.iter_893.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_893.code_ptr)] : local.iter_893.code_ptr
        : local.iter_893.code_ptr)

    steps_taken = 1 + local.iter_893.steps_taken
  }
}

locals {
  code_895 = (try(local.iter_894.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_894.code_ptr, local.iter_894.code_ptr + 2)
    : [null])

  input_895 = (local.code_895[0] == ","
    ? substr(local.input_894, local.code_895[1], -1)
    : local.input_894)

  iter_895 = try(local.iter_894.code_ptr >= length(var.code), true) ? local.iter_894 : {
    output = (local.code_895[0] == "."
      ? "${local.iter_894.output}${join("", [for _ in range(local.code_895[1]) : jsondecode(format("\"\\u%04x\"", local.iter_894.tape[local.iter_894.tape_ptr]))])}"
      : local.iter_894.output)
    
    tape = (
      local.code_895[0] == "+"
        ? [for i, b in local.iter_894.tape : (i == local.iter_894.tape_ptr ? (b + local.code_895[1]) % 256 : b)] :
      local.code_895[0] == "-"
        ? [for i, b in local.iter_894.tape : (i == local.iter_894.tape_ptr ? (b - local.code_895[1] + 256) % 256 : b)] :
      local.code_895[0] == ","
        ? [for i, b in local.iter_894.tape : (i == local.iter_894.tape_ptr ? local.ascii_lookup[substr(local.input_895, 0, 1)] : b)]
        : local.iter_894.tape)

    tape_ptr = (
      local.code_895[0] == "<"
        ? local.iter_894.tape_ptr - local.code_895[1] :
      local.code_895[0] == ">"
        ? local.iter_894.tape_ptr + local.code_895[1]
        : local.iter_894.tape_ptr)

    code_ptr = 2 + (
      local.code_895[0] == "["
        ? local.iter_894.tape[local.iter_894.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_894.code_ptr)] : local.iter_894.code_ptr :
      local.code_895[0] == "]"
        ? local.iter_894.tape[local.iter_894.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_894.code_ptr)] : local.iter_894.code_ptr
        : local.iter_894.code_ptr)

    steps_taken = 1 + local.iter_894.steps_taken
  }
}

locals {
  code_896 = (try(local.iter_895.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_895.code_ptr, local.iter_895.code_ptr + 2)
    : [null])

  input_896 = (local.code_896[0] == ","
    ? substr(local.input_895, local.code_896[1], -1)
    : local.input_895)

  iter_896 = try(local.iter_895.code_ptr >= length(var.code), true) ? local.iter_895 : {
    output = (local.code_896[0] == "."
      ? "${local.iter_895.output}${join("", [for _ in range(local.code_896[1]) : jsondecode(format("\"\\u%04x\"", local.iter_895.tape[local.iter_895.tape_ptr]))])}"
      : local.iter_895.output)
    
    tape = (
      local.code_896[0] == "+"
        ? [for i, b in local.iter_895.tape : (i == local.iter_895.tape_ptr ? (b + local.code_896[1]) % 256 : b)] :
      local.code_896[0] == "-"
        ? [for i, b in local.iter_895.tape : (i == local.iter_895.tape_ptr ? (b - local.code_896[1] + 256) % 256 : b)] :
      local.code_896[0] == ","
        ? [for i, b in local.iter_895.tape : (i == local.iter_895.tape_ptr ? local.ascii_lookup[substr(local.input_896, 0, 1)] : b)]
        : local.iter_895.tape)

    tape_ptr = (
      local.code_896[0] == "<"
        ? local.iter_895.tape_ptr - local.code_896[1] :
      local.code_896[0] == ">"
        ? local.iter_895.tape_ptr + local.code_896[1]
        : local.iter_895.tape_ptr)

    code_ptr = 2 + (
      local.code_896[0] == "["
        ? local.iter_895.tape[local.iter_895.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_895.code_ptr)] : local.iter_895.code_ptr :
      local.code_896[0] == "]"
        ? local.iter_895.tape[local.iter_895.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_895.code_ptr)] : local.iter_895.code_ptr
        : local.iter_895.code_ptr)

    steps_taken = 1 + local.iter_895.steps_taken
  }
}

locals {
  code_897 = (try(local.iter_896.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_896.code_ptr, local.iter_896.code_ptr + 2)
    : [null])

  input_897 = (local.code_897[0] == ","
    ? substr(local.input_896, local.code_897[1], -1)
    : local.input_896)

  iter_897 = try(local.iter_896.code_ptr >= length(var.code), true) ? local.iter_896 : {
    output = (local.code_897[0] == "."
      ? "${local.iter_896.output}${join("", [for _ in range(local.code_897[1]) : jsondecode(format("\"\\u%04x\"", local.iter_896.tape[local.iter_896.tape_ptr]))])}"
      : local.iter_896.output)
    
    tape = (
      local.code_897[0] == "+"
        ? [for i, b in local.iter_896.tape : (i == local.iter_896.tape_ptr ? (b + local.code_897[1]) % 256 : b)] :
      local.code_897[0] == "-"
        ? [for i, b in local.iter_896.tape : (i == local.iter_896.tape_ptr ? (b - local.code_897[1] + 256) % 256 : b)] :
      local.code_897[0] == ","
        ? [for i, b in local.iter_896.tape : (i == local.iter_896.tape_ptr ? local.ascii_lookup[substr(local.input_897, 0, 1)] : b)]
        : local.iter_896.tape)

    tape_ptr = (
      local.code_897[0] == "<"
        ? local.iter_896.tape_ptr - local.code_897[1] :
      local.code_897[0] == ">"
        ? local.iter_896.tape_ptr + local.code_897[1]
        : local.iter_896.tape_ptr)

    code_ptr = 2 + (
      local.code_897[0] == "["
        ? local.iter_896.tape[local.iter_896.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_896.code_ptr)] : local.iter_896.code_ptr :
      local.code_897[0] == "]"
        ? local.iter_896.tape[local.iter_896.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_896.code_ptr)] : local.iter_896.code_ptr
        : local.iter_896.code_ptr)

    steps_taken = 1 + local.iter_896.steps_taken
  }
}

locals {
  code_898 = (try(local.iter_897.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_897.code_ptr, local.iter_897.code_ptr + 2)
    : [null])

  input_898 = (local.code_898[0] == ","
    ? substr(local.input_897, local.code_898[1], -1)
    : local.input_897)

  iter_898 = try(local.iter_897.code_ptr >= length(var.code), true) ? local.iter_897 : {
    output = (local.code_898[0] == "."
      ? "${local.iter_897.output}${join("", [for _ in range(local.code_898[1]) : jsondecode(format("\"\\u%04x\"", local.iter_897.tape[local.iter_897.tape_ptr]))])}"
      : local.iter_897.output)
    
    tape = (
      local.code_898[0] == "+"
        ? [for i, b in local.iter_897.tape : (i == local.iter_897.tape_ptr ? (b + local.code_898[1]) % 256 : b)] :
      local.code_898[0] == "-"
        ? [for i, b in local.iter_897.tape : (i == local.iter_897.tape_ptr ? (b - local.code_898[1] + 256) % 256 : b)] :
      local.code_898[0] == ","
        ? [for i, b in local.iter_897.tape : (i == local.iter_897.tape_ptr ? local.ascii_lookup[substr(local.input_898, 0, 1)] : b)]
        : local.iter_897.tape)

    tape_ptr = (
      local.code_898[0] == "<"
        ? local.iter_897.tape_ptr - local.code_898[1] :
      local.code_898[0] == ">"
        ? local.iter_897.tape_ptr + local.code_898[1]
        : local.iter_897.tape_ptr)

    code_ptr = 2 + (
      local.code_898[0] == "["
        ? local.iter_897.tape[local.iter_897.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_897.code_ptr)] : local.iter_897.code_ptr :
      local.code_898[0] == "]"
        ? local.iter_897.tape[local.iter_897.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_897.code_ptr)] : local.iter_897.code_ptr
        : local.iter_897.code_ptr)

    steps_taken = 1 + local.iter_897.steps_taken
  }
}

locals {
  code_899 = (try(local.iter_898.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_898.code_ptr, local.iter_898.code_ptr + 2)
    : [null])

  input_899 = (local.code_899[0] == ","
    ? substr(local.input_898, local.code_899[1], -1)
    : local.input_898)

  iter_899 = try(local.iter_898.code_ptr >= length(var.code), true) ? local.iter_898 : {
    output = (local.code_899[0] == "."
      ? "${local.iter_898.output}${join("", [for _ in range(local.code_899[1]) : jsondecode(format("\"\\u%04x\"", local.iter_898.tape[local.iter_898.tape_ptr]))])}"
      : local.iter_898.output)
    
    tape = (
      local.code_899[0] == "+"
        ? [for i, b in local.iter_898.tape : (i == local.iter_898.tape_ptr ? (b + local.code_899[1]) % 256 : b)] :
      local.code_899[0] == "-"
        ? [for i, b in local.iter_898.tape : (i == local.iter_898.tape_ptr ? (b - local.code_899[1] + 256) % 256 : b)] :
      local.code_899[0] == ","
        ? [for i, b in local.iter_898.tape : (i == local.iter_898.tape_ptr ? local.ascii_lookup[substr(local.input_899, 0, 1)] : b)]
        : local.iter_898.tape)

    tape_ptr = (
      local.code_899[0] == "<"
        ? local.iter_898.tape_ptr - local.code_899[1] :
      local.code_899[0] == ">"
        ? local.iter_898.tape_ptr + local.code_899[1]
        : local.iter_898.tape_ptr)

    code_ptr = 2 + (
      local.code_899[0] == "["
        ? local.iter_898.tape[local.iter_898.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_898.code_ptr)] : local.iter_898.code_ptr :
      local.code_899[0] == "]"
        ? local.iter_898.tape[local.iter_898.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_898.code_ptr)] : local.iter_898.code_ptr
        : local.iter_898.code_ptr)

    steps_taken = 1 + local.iter_898.steps_taken
  }
}

locals {
  code_900 = (try(local.iter_899.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_899.code_ptr, local.iter_899.code_ptr + 2)
    : [null])

  input_900 = (local.code_900[0] == ","
    ? substr(local.input_899, local.code_900[1], -1)
    : local.input_899)

  iter_900 = try(local.iter_899.code_ptr >= length(var.code), true) ? local.iter_899 : {
    output = (local.code_900[0] == "."
      ? "${local.iter_899.output}${join("", [for _ in range(local.code_900[1]) : jsondecode(format("\"\\u%04x\"", local.iter_899.tape[local.iter_899.tape_ptr]))])}"
      : local.iter_899.output)
    
    tape = (
      local.code_900[0] == "+"
        ? [for i, b in local.iter_899.tape : (i == local.iter_899.tape_ptr ? (b + local.code_900[1]) % 256 : b)] :
      local.code_900[0] == "-"
        ? [for i, b in local.iter_899.tape : (i == local.iter_899.tape_ptr ? (b - local.code_900[1] + 256) % 256 : b)] :
      local.code_900[0] == ","
        ? [for i, b in local.iter_899.tape : (i == local.iter_899.tape_ptr ? local.ascii_lookup[substr(local.input_900, 0, 1)] : b)]
        : local.iter_899.tape)

    tape_ptr = (
      local.code_900[0] == "<"
        ? local.iter_899.tape_ptr - local.code_900[1] :
      local.code_900[0] == ">"
        ? local.iter_899.tape_ptr + local.code_900[1]
        : local.iter_899.tape_ptr)

    code_ptr = 2 + (
      local.code_900[0] == "["
        ? local.iter_899.tape[local.iter_899.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_899.code_ptr)] : local.iter_899.code_ptr :
      local.code_900[0] == "]"
        ? local.iter_899.tape[local.iter_899.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_899.code_ptr)] : local.iter_899.code_ptr
        : local.iter_899.code_ptr)

    steps_taken = 1 + local.iter_899.steps_taken
  }
}

locals {
  code_901 = (try(local.iter_900.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_900.code_ptr, local.iter_900.code_ptr + 2)
    : [null])

  input_901 = (local.code_901[0] == ","
    ? substr(local.input_900, local.code_901[1], -1)
    : local.input_900)

  iter_901 = try(local.iter_900.code_ptr >= length(var.code), true) ? local.iter_900 : {
    output = (local.code_901[0] == "."
      ? "${local.iter_900.output}${join("", [for _ in range(local.code_901[1]) : jsondecode(format("\"\\u%04x\"", local.iter_900.tape[local.iter_900.tape_ptr]))])}"
      : local.iter_900.output)
    
    tape = (
      local.code_901[0] == "+"
        ? [for i, b in local.iter_900.tape : (i == local.iter_900.tape_ptr ? (b + local.code_901[1]) % 256 : b)] :
      local.code_901[0] == "-"
        ? [for i, b in local.iter_900.tape : (i == local.iter_900.tape_ptr ? (b - local.code_901[1] + 256) % 256 : b)] :
      local.code_901[0] == ","
        ? [for i, b in local.iter_900.tape : (i == local.iter_900.tape_ptr ? local.ascii_lookup[substr(local.input_901, 0, 1)] : b)]
        : local.iter_900.tape)

    tape_ptr = (
      local.code_901[0] == "<"
        ? local.iter_900.tape_ptr - local.code_901[1] :
      local.code_901[0] == ">"
        ? local.iter_900.tape_ptr + local.code_901[1]
        : local.iter_900.tape_ptr)

    code_ptr = 2 + (
      local.code_901[0] == "["
        ? local.iter_900.tape[local.iter_900.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_900.code_ptr)] : local.iter_900.code_ptr :
      local.code_901[0] == "]"
        ? local.iter_900.tape[local.iter_900.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_900.code_ptr)] : local.iter_900.code_ptr
        : local.iter_900.code_ptr)

    steps_taken = 1 + local.iter_900.steps_taken
  }
}

locals {
  code_902 = (try(local.iter_901.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_901.code_ptr, local.iter_901.code_ptr + 2)
    : [null])

  input_902 = (local.code_902[0] == ","
    ? substr(local.input_901, local.code_902[1], -1)
    : local.input_901)

  iter_902 = try(local.iter_901.code_ptr >= length(var.code), true) ? local.iter_901 : {
    output = (local.code_902[0] == "."
      ? "${local.iter_901.output}${join("", [for _ in range(local.code_902[1]) : jsondecode(format("\"\\u%04x\"", local.iter_901.tape[local.iter_901.tape_ptr]))])}"
      : local.iter_901.output)
    
    tape = (
      local.code_902[0] == "+"
        ? [for i, b in local.iter_901.tape : (i == local.iter_901.tape_ptr ? (b + local.code_902[1]) % 256 : b)] :
      local.code_902[0] == "-"
        ? [for i, b in local.iter_901.tape : (i == local.iter_901.tape_ptr ? (b - local.code_902[1] + 256) % 256 : b)] :
      local.code_902[0] == ","
        ? [for i, b in local.iter_901.tape : (i == local.iter_901.tape_ptr ? local.ascii_lookup[substr(local.input_902, 0, 1)] : b)]
        : local.iter_901.tape)

    tape_ptr = (
      local.code_902[0] == "<"
        ? local.iter_901.tape_ptr - local.code_902[1] :
      local.code_902[0] == ">"
        ? local.iter_901.tape_ptr + local.code_902[1]
        : local.iter_901.tape_ptr)

    code_ptr = 2 + (
      local.code_902[0] == "["
        ? local.iter_901.tape[local.iter_901.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_901.code_ptr)] : local.iter_901.code_ptr :
      local.code_902[0] == "]"
        ? local.iter_901.tape[local.iter_901.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_901.code_ptr)] : local.iter_901.code_ptr
        : local.iter_901.code_ptr)

    steps_taken = 1 + local.iter_901.steps_taken
  }
}

locals {
  code_903 = (try(local.iter_902.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_902.code_ptr, local.iter_902.code_ptr + 2)
    : [null])

  input_903 = (local.code_903[0] == ","
    ? substr(local.input_902, local.code_903[1], -1)
    : local.input_902)

  iter_903 = try(local.iter_902.code_ptr >= length(var.code), true) ? local.iter_902 : {
    output = (local.code_903[0] == "."
      ? "${local.iter_902.output}${join("", [for _ in range(local.code_903[1]) : jsondecode(format("\"\\u%04x\"", local.iter_902.tape[local.iter_902.tape_ptr]))])}"
      : local.iter_902.output)
    
    tape = (
      local.code_903[0] == "+"
        ? [for i, b in local.iter_902.tape : (i == local.iter_902.tape_ptr ? (b + local.code_903[1]) % 256 : b)] :
      local.code_903[0] == "-"
        ? [for i, b in local.iter_902.tape : (i == local.iter_902.tape_ptr ? (b - local.code_903[1] + 256) % 256 : b)] :
      local.code_903[0] == ","
        ? [for i, b in local.iter_902.tape : (i == local.iter_902.tape_ptr ? local.ascii_lookup[substr(local.input_903, 0, 1)] : b)]
        : local.iter_902.tape)

    tape_ptr = (
      local.code_903[0] == "<"
        ? local.iter_902.tape_ptr - local.code_903[1] :
      local.code_903[0] == ">"
        ? local.iter_902.tape_ptr + local.code_903[1]
        : local.iter_902.tape_ptr)

    code_ptr = 2 + (
      local.code_903[0] == "["
        ? local.iter_902.tape[local.iter_902.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_902.code_ptr)] : local.iter_902.code_ptr :
      local.code_903[0] == "]"
        ? local.iter_902.tape[local.iter_902.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_902.code_ptr)] : local.iter_902.code_ptr
        : local.iter_902.code_ptr)

    steps_taken = 1 + local.iter_902.steps_taken
  }
}

locals {
  code_904 = (try(local.iter_903.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_903.code_ptr, local.iter_903.code_ptr + 2)
    : [null])

  input_904 = (local.code_904[0] == ","
    ? substr(local.input_903, local.code_904[1], -1)
    : local.input_903)

  iter_904 = try(local.iter_903.code_ptr >= length(var.code), true) ? local.iter_903 : {
    output = (local.code_904[0] == "."
      ? "${local.iter_903.output}${join("", [for _ in range(local.code_904[1]) : jsondecode(format("\"\\u%04x\"", local.iter_903.tape[local.iter_903.tape_ptr]))])}"
      : local.iter_903.output)
    
    tape = (
      local.code_904[0] == "+"
        ? [for i, b in local.iter_903.tape : (i == local.iter_903.tape_ptr ? (b + local.code_904[1]) % 256 : b)] :
      local.code_904[0] == "-"
        ? [for i, b in local.iter_903.tape : (i == local.iter_903.tape_ptr ? (b - local.code_904[1] + 256) % 256 : b)] :
      local.code_904[0] == ","
        ? [for i, b in local.iter_903.tape : (i == local.iter_903.tape_ptr ? local.ascii_lookup[substr(local.input_904, 0, 1)] : b)]
        : local.iter_903.tape)

    tape_ptr = (
      local.code_904[0] == "<"
        ? local.iter_903.tape_ptr - local.code_904[1] :
      local.code_904[0] == ">"
        ? local.iter_903.tape_ptr + local.code_904[1]
        : local.iter_903.tape_ptr)

    code_ptr = 2 + (
      local.code_904[0] == "["
        ? local.iter_903.tape[local.iter_903.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_903.code_ptr)] : local.iter_903.code_ptr :
      local.code_904[0] == "]"
        ? local.iter_903.tape[local.iter_903.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_903.code_ptr)] : local.iter_903.code_ptr
        : local.iter_903.code_ptr)

    steps_taken = 1 + local.iter_903.steps_taken
  }
}

locals {
  code_905 = (try(local.iter_904.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_904.code_ptr, local.iter_904.code_ptr + 2)
    : [null])

  input_905 = (local.code_905[0] == ","
    ? substr(local.input_904, local.code_905[1], -1)
    : local.input_904)

  iter_905 = try(local.iter_904.code_ptr >= length(var.code), true) ? local.iter_904 : {
    output = (local.code_905[0] == "."
      ? "${local.iter_904.output}${join("", [for _ in range(local.code_905[1]) : jsondecode(format("\"\\u%04x\"", local.iter_904.tape[local.iter_904.tape_ptr]))])}"
      : local.iter_904.output)
    
    tape = (
      local.code_905[0] == "+"
        ? [for i, b in local.iter_904.tape : (i == local.iter_904.tape_ptr ? (b + local.code_905[1]) % 256 : b)] :
      local.code_905[0] == "-"
        ? [for i, b in local.iter_904.tape : (i == local.iter_904.tape_ptr ? (b - local.code_905[1] + 256) % 256 : b)] :
      local.code_905[0] == ","
        ? [for i, b in local.iter_904.tape : (i == local.iter_904.tape_ptr ? local.ascii_lookup[substr(local.input_905, 0, 1)] : b)]
        : local.iter_904.tape)

    tape_ptr = (
      local.code_905[0] == "<"
        ? local.iter_904.tape_ptr - local.code_905[1] :
      local.code_905[0] == ">"
        ? local.iter_904.tape_ptr + local.code_905[1]
        : local.iter_904.tape_ptr)

    code_ptr = 2 + (
      local.code_905[0] == "["
        ? local.iter_904.tape[local.iter_904.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_904.code_ptr)] : local.iter_904.code_ptr :
      local.code_905[0] == "]"
        ? local.iter_904.tape[local.iter_904.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_904.code_ptr)] : local.iter_904.code_ptr
        : local.iter_904.code_ptr)

    steps_taken = 1 + local.iter_904.steps_taken
  }
}

locals {
  code_906 = (try(local.iter_905.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_905.code_ptr, local.iter_905.code_ptr + 2)
    : [null])

  input_906 = (local.code_906[0] == ","
    ? substr(local.input_905, local.code_906[1], -1)
    : local.input_905)

  iter_906 = try(local.iter_905.code_ptr >= length(var.code), true) ? local.iter_905 : {
    output = (local.code_906[0] == "."
      ? "${local.iter_905.output}${join("", [for _ in range(local.code_906[1]) : jsondecode(format("\"\\u%04x\"", local.iter_905.tape[local.iter_905.tape_ptr]))])}"
      : local.iter_905.output)
    
    tape = (
      local.code_906[0] == "+"
        ? [for i, b in local.iter_905.tape : (i == local.iter_905.tape_ptr ? (b + local.code_906[1]) % 256 : b)] :
      local.code_906[0] == "-"
        ? [for i, b in local.iter_905.tape : (i == local.iter_905.tape_ptr ? (b - local.code_906[1] + 256) % 256 : b)] :
      local.code_906[0] == ","
        ? [for i, b in local.iter_905.tape : (i == local.iter_905.tape_ptr ? local.ascii_lookup[substr(local.input_906, 0, 1)] : b)]
        : local.iter_905.tape)

    tape_ptr = (
      local.code_906[0] == "<"
        ? local.iter_905.tape_ptr - local.code_906[1] :
      local.code_906[0] == ">"
        ? local.iter_905.tape_ptr + local.code_906[1]
        : local.iter_905.tape_ptr)

    code_ptr = 2 + (
      local.code_906[0] == "["
        ? local.iter_905.tape[local.iter_905.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_905.code_ptr)] : local.iter_905.code_ptr :
      local.code_906[0] == "]"
        ? local.iter_905.tape[local.iter_905.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_905.code_ptr)] : local.iter_905.code_ptr
        : local.iter_905.code_ptr)

    steps_taken = 1 + local.iter_905.steps_taken
  }
}

locals {
  code_907 = (try(local.iter_906.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_906.code_ptr, local.iter_906.code_ptr + 2)
    : [null])

  input_907 = (local.code_907[0] == ","
    ? substr(local.input_906, local.code_907[1], -1)
    : local.input_906)

  iter_907 = try(local.iter_906.code_ptr >= length(var.code), true) ? local.iter_906 : {
    output = (local.code_907[0] == "."
      ? "${local.iter_906.output}${join("", [for _ in range(local.code_907[1]) : jsondecode(format("\"\\u%04x\"", local.iter_906.tape[local.iter_906.tape_ptr]))])}"
      : local.iter_906.output)
    
    tape = (
      local.code_907[0] == "+"
        ? [for i, b in local.iter_906.tape : (i == local.iter_906.tape_ptr ? (b + local.code_907[1]) % 256 : b)] :
      local.code_907[0] == "-"
        ? [for i, b in local.iter_906.tape : (i == local.iter_906.tape_ptr ? (b - local.code_907[1] + 256) % 256 : b)] :
      local.code_907[0] == ","
        ? [for i, b in local.iter_906.tape : (i == local.iter_906.tape_ptr ? local.ascii_lookup[substr(local.input_907, 0, 1)] : b)]
        : local.iter_906.tape)

    tape_ptr = (
      local.code_907[0] == "<"
        ? local.iter_906.tape_ptr - local.code_907[1] :
      local.code_907[0] == ">"
        ? local.iter_906.tape_ptr + local.code_907[1]
        : local.iter_906.tape_ptr)

    code_ptr = 2 + (
      local.code_907[0] == "["
        ? local.iter_906.tape[local.iter_906.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_906.code_ptr)] : local.iter_906.code_ptr :
      local.code_907[0] == "]"
        ? local.iter_906.tape[local.iter_906.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_906.code_ptr)] : local.iter_906.code_ptr
        : local.iter_906.code_ptr)

    steps_taken = 1 + local.iter_906.steps_taken
  }
}

locals {
  code_908 = (try(local.iter_907.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_907.code_ptr, local.iter_907.code_ptr + 2)
    : [null])

  input_908 = (local.code_908[0] == ","
    ? substr(local.input_907, local.code_908[1], -1)
    : local.input_907)

  iter_908 = try(local.iter_907.code_ptr >= length(var.code), true) ? local.iter_907 : {
    output = (local.code_908[0] == "."
      ? "${local.iter_907.output}${join("", [for _ in range(local.code_908[1]) : jsondecode(format("\"\\u%04x\"", local.iter_907.tape[local.iter_907.tape_ptr]))])}"
      : local.iter_907.output)
    
    tape = (
      local.code_908[0] == "+"
        ? [for i, b in local.iter_907.tape : (i == local.iter_907.tape_ptr ? (b + local.code_908[1]) % 256 : b)] :
      local.code_908[0] == "-"
        ? [for i, b in local.iter_907.tape : (i == local.iter_907.tape_ptr ? (b - local.code_908[1] + 256) % 256 : b)] :
      local.code_908[0] == ","
        ? [for i, b in local.iter_907.tape : (i == local.iter_907.tape_ptr ? local.ascii_lookup[substr(local.input_908, 0, 1)] : b)]
        : local.iter_907.tape)

    tape_ptr = (
      local.code_908[0] == "<"
        ? local.iter_907.tape_ptr - local.code_908[1] :
      local.code_908[0] == ">"
        ? local.iter_907.tape_ptr + local.code_908[1]
        : local.iter_907.tape_ptr)

    code_ptr = 2 + (
      local.code_908[0] == "["
        ? local.iter_907.tape[local.iter_907.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_907.code_ptr)] : local.iter_907.code_ptr :
      local.code_908[0] == "]"
        ? local.iter_907.tape[local.iter_907.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_907.code_ptr)] : local.iter_907.code_ptr
        : local.iter_907.code_ptr)

    steps_taken = 1 + local.iter_907.steps_taken
  }
}

locals {
  code_909 = (try(local.iter_908.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_908.code_ptr, local.iter_908.code_ptr + 2)
    : [null])

  input_909 = (local.code_909[0] == ","
    ? substr(local.input_908, local.code_909[1], -1)
    : local.input_908)

  iter_909 = try(local.iter_908.code_ptr >= length(var.code), true) ? local.iter_908 : {
    output = (local.code_909[0] == "."
      ? "${local.iter_908.output}${join("", [for _ in range(local.code_909[1]) : jsondecode(format("\"\\u%04x\"", local.iter_908.tape[local.iter_908.tape_ptr]))])}"
      : local.iter_908.output)
    
    tape = (
      local.code_909[0] == "+"
        ? [for i, b in local.iter_908.tape : (i == local.iter_908.tape_ptr ? (b + local.code_909[1]) % 256 : b)] :
      local.code_909[0] == "-"
        ? [for i, b in local.iter_908.tape : (i == local.iter_908.tape_ptr ? (b - local.code_909[1] + 256) % 256 : b)] :
      local.code_909[0] == ","
        ? [for i, b in local.iter_908.tape : (i == local.iter_908.tape_ptr ? local.ascii_lookup[substr(local.input_909, 0, 1)] : b)]
        : local.iter_908.tape)

    tape_ptr = (
      local.code_909[0] == "<"
        ? local.iter_908.tape_ptr - local.code_909[1] :
      local.code_909[0] == ">"
        ? local.iter_908.tape_ptr + local.code_909[1]
        : local.iter_908.tape_ptr)

    code_ptr = 2 + (
      local.code_909[0] == "["
        ? local.iter_908.tape[local.iter_908.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_908.code_ptr)] : local.iter_908.code_ptr :
      local.code_909[0] == "]"
        ? local.iter_908.tape[local.iter_908.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_908.code_ptr)] : local.iter_908.code_ptr
        : local.iter_908.code_ptr)

    steps_taken = 1 + local.iter_908.steps_taken
  }
}

locals {
  code_910 = (try(local.iter_909.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_909.code_ptr, local.iter_909.code_ptr + 2)
    : [null])

  input_910 = (local.code_910[0] == ","
    ? substr(local.input_909, local.code_910[1], -1)
    : local.input_909)

  iter_910 = try(local.iter_909.code_ptr >= length(var.code), true) ? local.iter_909 : {
    output = (local.code_910[0] == "."
      ? "${local.iter_909.output}${join("", [for _ in range(local.code_910[1]) : jsondecode(format("\"\\u%04x\"", local.iter_909.tape[local.iter_909.tape_ptr]))])}"
      : local.iter_909.output)
    
    tape = (
      local.code_910[0] == "+"
        ? [for i, b in local.iter_909.tape : (i == local.iter_909.tape_ptr ? (b + local.code_910[1]) % 256 : b)] :
      local.code_910[0] == "-"
        ? [for i, b in local.iter_909.tape : (i == local.iter_909.tape_ptr ? (b - local.code_910[1] + 256) % 256 : b)] :
      local.code_910[0] == ","
        ? [for i, b in local.iter_909.tape : (i == local.iter_909.tape_ptr ? local.ascii_lookup[substr(local.input_910, 0, 1)] : b)]
        : local.iter_909.tape)

    tape_ptr = (
      local.code_910[0] == "<"
        ? local.iter_909.tape_ptr - local.code_910[1] :
      local.code_910[0] == ">"
        ? local.iter_909.tape_ptr + local.code_910[1]
        : local.iter_909.tape_ptr)

    code_ptr = 2 + (
      local.code_910[0] == "["
        ? local.iter_909.tape[local.iter_909.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_909.code_ptr)] : local.iter_909.code_ptr :
      local.code_910[0] == "]"
        ? local.iter_909.tape[local.iter_909.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_909.code_ptr)] : local.iter_909.code_ptr
        : local.iter_909.code_ptr)

    steps_taken = 1 + local.iter_909.steps_taken
  }
}

locals {
  code_911 = (try(local.iter_910.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_910.code_ptr, local.iter_910.code_ptr + 2)
    : [null])

  input_911 = (local.code_911[0] == ","
    ? substr(local.input_910, local.code_911[1], -1)
    : local.input_910)

  iter_911 = try(local.iter_910.code_ptr >= length(var.code), true) ? local.iter_910 : {
    output = (local.code_911[0] == "."
      ? "${local.iter_910.output}${join("", [for _ in range(local.code_911[1]) : jsondecode(format("\"\\u%04x\"", local.iter_910.tape[local.iter_910.tape_ptr]))])}"
      : local.iter_910.output)
    
    tape = (
      local.code_911[0] == "+"
        ? [for i, b in local.iter_910.tape : (i == local.iter_910.tape_ptr ? (b + local.code_911[1]) % 256 : b)] :
      local.code_911[0] == "-"
        ? [for i, b in local.iter_910.tape : (i == local.iter_910.tape_ptr ? (b - local.code_911[1] + 256) % 256 : b)] :
      local.code_911[0] == ","
        ? [for i, b in local.iter_910.tape : (i == local.iter_910.tape_ptr ? local.ascii_lookup[substr(local.input_911, 0, 1)] : b)]
        : local.iter_910.tape)

    tape_ptr = (
      local.code_911[0] == "<"
        ? local.iter_910.tape_ptr - local.code_911[1] :
      local.code_911[0] == ">"
        ? local.iter_910.tape_ptr + local.code_911[1]
        : local.iter_910.tape_ptr)

    code_ptr = 2 + (
      local.code_911[0] == "["
        ? local.iter_910.tape[local.iter_910.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_910.code_ptr)] : local.iter_910.code_ptr :
      local.code_911[0] == "]"
        ? local.iter_910.tape[local.iter_910.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_910.code_ptr)] : local.iter_910.code_ptr
        : local.iter_910.code_ptr)

    steps_taken = 1 + local.iter_910.steps_taken
  }
}

locals {
  code_912 = (try(local.iter_911.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_911.code_ptr, local.iter_911.code_ptr + 2)
    : [null])

  input_912 = (local.code_912[0] == ","
    ? substr(local.input_911, local.code_912[1], -1)
    : local.input_911)

  iter_912 = try(local.iter_911.code_ptr >= length(var.code), true) ? local.iter_911 : {
    output = (local.code_912[0] == "."
      ? "${local.iter_911.output}${join("", [for _ in range(local.code_912[1]) : jsondecode(format("\"\\u%04x\"", local.iter_911.tape[local.iter_911.tape_ptr]))])}"
      : local.iter_911.output)
    
    tape = (
      local.code_912[0] == "+"
        ? [for i, b in local.iter_911.tape : (i == local.iter_911.tape_ptr ? (b + local.code_912[1]) % 256 : b)] :
      local.code_912[0] == "-"
        ? [for i, b in local.iter_911.tape : (i == local.iter_911.tape_ptr ? (b - local.code_912[1] + 256) % 256 : b)] :
      local.code_912[0] == ","
        ? [for i, b in local.iter_911.tape : (i == local.iter_911.tape_ptr ? local.ascii_lookup[substr(local.input_912, 0, 1)] : b)]
        : local.iter_911.tape)

    tape_ptr = (
      local.code_912[0] == "<"
        ? local.iter_911.tape_ptr - local.code_912[1] :
      local.code_912[0] == ">"
        ? local.iter_911.tape_ptr + local.code_912[1]
        : local.iter_911.tape_ptr)

    code_ptr = 2 + (
      local.code_912[0] == "["
        ? local.iter_911.tape[local.iter_911.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_911.code_ptr)] : local.iter_911.code_ptr :
      local.code_912[0] == "]"
        ? local.iter_911.tape[local.iter_911.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_911.code_ptr)] : local.iter_911.code_ptr
        : local.iter_911.code_ptr)

    steps_taken = 1 + local.iter_911.steps_taken
  }
}

locals {
  code_913 = (try(local.iter_912.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_912.code_ptr, local.iter_912.code_ptr + 2)
    : [null])

  input_913 = (local.code_913[0] == ","
    ? substr(local.input_912, local.code_913[1], -1)
    : local.input_912)

  iter_913 = try(local.iter_912.code_ptr >= length(var.code), true) ? local.iter_912 : {
    output = (local.code_913[0] == "."
      ? "${local.iter_912.output}${join("", [for _ in range(local.code_913[1]) : jsondecode(format("\"\\u%04x\"", local.iter_912.tape[local.iter_912.tape_ptr]))])}"
      : local.iter_912.output)
    
    tape = (
      local.code_913[0] == "+"
        ? [for i, b in local.iter_912.tape : (i == local.iter_912.tape_ptr ? (b + local.code_913[1]) % 256 : b)] :
      local.code_913[0] == "-"
        ? [for i, b in local.iter_912.tape : (i == local.iter_912.tape_ptr ? (b - local.code_913[1] + 256) % 256 : b)] :
      local.code_913[0] == ","
        ? [for i, b in local.iter_912.tape : (i == local.iter_912.tape_ptr ? local.ascii_lookup[substr(local.input_913, 0, 1)] : b)]
        : local.iter_912.tape)

    tape_ptr = (
      local.code_913[0] == "<"
        ? local.iter_912.tape_ptr - local.code_913[1] :
      local.code_913[0] == ">"
        ? local.iter_912.tape_ptr + local.code_913[1]
        : local.iter_912.tape_ptr)

    code_ptr = 2 + (
      local.code_913[0] == "["
        ? local.iter_912.tape[local.iter_912.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_912.code_ptr)] : local.iter_912.code_ptr :
      local.code_913[0] == "]"
        ? local.iter_912.tape[local.iter_912.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_912.code_ptr)] : local.iter_912.code_ptr
        : local.iter_912.code_ptr)

    steps_taken = 1 + local.iter_912.steps_taken
  }
}

locals {
  code_914 = (try(local.iter_913.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_913.code_ptr, local.iter_913.code_ptr + 2)
    : [null])

  input_914 = (local.code_914[0] == ","
    ? substr(local.input_913, local.code_914[1], -1)
    : local.input_913)

  iter_914 = try(local.iter_913.code_ptr >= length(var.code), true) ? local.iter_913 : {
    output = (local.code_914[0] == "."
      ? "${local.iter_913.output}${join("", [for _ in range(local.code_914[1]) : jsondecode(format("\"\\u%04x\"", local.iter_913.tape[local.iter_913.tape_ptr]))])}"
      : local.iter_913.output)
    
    tape = (
      local.code_914[0] == "+"
        ? [for i, b in local.iter_913.tape : (i == local.iter_913.tape_ptr ? (b + local.code_914[1]) % 256 : b)] :
      local.code_914[0] == "-"
        ? [for i, b in local.iter_913.tape : (i == local.iter_913.tape_ptr ? (b - local.code_914[1] + 256) % 256 : b)] :
      local.code_914[0] == ","
        ? [for i, b in local.iter_913.tape : (i == local.iter_913.tape_ptr ? local.ascii_lookup[substr(local.input_914, 0, 1)] : b)]
        : local.iter_913.tape)

    tape_ptr = (
      local.code_914[0] == "<"
        ? local.iter_913.tape_ptr - local.code_914[1] :
      local.code_914[0] == ">"
        ? local.iter_913.tape_ptr + local.code_914[1]
        : local.iter_913.tape_ptr)

    code_ptr = 2 + (
      local.code_914[0] == "["
        ? local.iter_913.tape[local.iter_913.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_913.code_ptr)] : local.iter_913.code_ptr :
      local.code_914[0] == "]"
        ? local.iter_913.tape[local.iter_913.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_913.code_ptr)] : local.iter_913.code_ptr
        : local.iter_913.code_ptr)

    steps_taken = 1 + local.iter_913.steps_taken
  }
}

locals {
  code_915 = (try(local.iter_914.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_914.code_ptr, local.iter_914.code_ptr + 2)
    : [null])

  input_915 = (local.code_915[0] == ","
    ? substr(local.input_914, local.code_915[1], -1)
    : local.input_914)

  iter_915 = try(local.iter_914.code_ptr >= length(var.code), true) ? local.iter_914 : {
    output = (local.code_915[0] == "."
      ? "${local.iter_914.output}${join("", [for _ in range(local.code_915[1]) : jsondecode(format("\"\\u%04x\"", local.iter_914.tape[local.iter_914.tape_ptr]))])}"
      : local.iter_914.output)
    
    tape = (
      local.code_915[0] == "+"
        ? [for i, b in local.iter_914.tape : (i == local.iter_914.tape_ptr ? (b + local.code_915[1]) % 256 : b)] :
      local.code_915[0] == "-"
        ? [for i, b in local.iter_914.tape : (i == local.iter_914.tape_ptr ? (b - local.code_915[1] + 256) % 256 : b)] :
      local.code_915[0] == ","
        ? [for i, b in local.iter_914.tape : (i == local.iter_914.tape_ptr ? local.ascii_lookup[substr(local.input_915, 0, 1)] : b)]
        : local.iter_914.tape)

    tape_ptr = (
      local.code_915[0] == "<"
        ? local.iter_914.tape_ptr - local.code_915[1] :
      local.code_915[0] == ">"
        ? local.iter_914.tape_ptr + local.code_915[1]
        : local.iter_914.tape_ptr)

    code_ptr = 2 + (
      local.code_915[0] == "["
        ? local.iter_914.tape[local.iter_914.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_914.code_ptr)] : local.iter_914.code_ptr :
      local.code_915[0] == "]"
        ? local.iter_914.tape[local.iter_914.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_914.code_ptr)] : local.iter_914.code_ptr
        : local.iter_914.code_ptr)

    steps_taken = 1 + local.iter_914.steps_taken
  }
}

locals {
  code_916 = (try(local.iter_915.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_915.code_ptr, local.iter_915.code_ptr + 2)
    : [null])

  input_916 = (local.code_916[0] == ","
    ? substr(local.input_915, local.code_916[1], -1)
    : local.input_915)

  iter_916 = try(local.iter_915.code_ptr >= length(var.code), true) ? local.iter_915 : {
    output = (local.code_916[0] == "."
      ? "${local.iter_915.output}${join("", [for _ in range(local.code_916[1]) : jsondecode(format("\"\\u%04x\"", local.iter_915.tape[local.iter_915.tape_ptr]))])}"
      : local.iter_915.output)
    
    tape = (
      local.code_916[0] == "+"
        ? [for i, b in local.iter_915.tape : (i == local.iter_915.tape_ptr ? (b + local.code_916[1]) % 256 : b)] :
      local.code_916[0] == "-"
        ? [for i, b in local.iter_915.tape : (i == local.iter_915.tape_ptr ? (b - local.code_916[1] + 256) % 256 : b)] :
      local.code_916[0] == ","
        ? [for i, b in local.iter_915.tape : (i == local.iter_915.tape_ptr ? local.ascii_lookup[substr(local.input_916, 0, 1)] : b)]
        : local.iter_915.tape)

    tape_ptr = (
      local.code_916[0] == "<"
        ? local.iter_915.tape_ptr - local.code_916[1] :
      local.code_916[0] == ">"
        ? local.iter_915.tape_ptr + local.code_916[1]
        : local.iter_915.tape_ptr)

    code_ptr = 2 + (
      local.code_916[0] == "["
        ? local.iter_915.tape[local.iter_915.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_915.code_ptr)] : local.iter_915.code_ptr :
      local.code_916[0] == "]"
        ? local.iter_915.tape[local.iter_915.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_915.code_ptr)] : local.iter_915.code_ptr
        : local.iter_915.code_ptr)

    steps_taken = 1 + local.iter_915.steps_taken
  }
}

locals {
  code_917 = (try(local.iter_916.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_916.code_ptr, local.iter_916.code_ptr + 2)
    : [null])

  input_917 = (local.code_917[0] == ","
    ? substr(local.input_916, local.code_917[1], -1)
    : local.input_916)

  iter_917 = try(local.iter_916.code_ptr >= length(var.code), true) ? local.iter_916 : {
    output = (local.code_917[0] == "."
      ? "${local.iter_916.output}${join("", [for _ in range(local.code_917[1]) : jsondecode(format("\"\\u%04x\"", local.iter_916.tape[local.iter_916.tape_ptr]))])}"
      : local.iter_916.output)
    
    tape = (
      local.code_917[0] == "+"
        ? [for i, b in local.iter_916.tape : (i == local.iter_916.tape_ptr ? (b + local.code_917[1]) % 256 : b)] :
      local.code_917[0] == "-"
        ? [for i, b in local.iter_916.tape : (i == local.iter_916.tape_ptr ? (b - local.code_917[1] + 256) % 256 : b)] :
      local.code_917[0] == ","
        ? [for i, b in local.iter_916.tape : (i == local.iter_916.tape_ptr ? local.ascii_lookup[substr(local.input_917, 0, 1)] : b)]
        : local.iter_916.tape)

    tape_ptr = (
      local.code_917[0] == "<"
        ? local.iter_916.tape_ptr - local.code_917[1] :
      local.code_917[0] == ">"
        ? local.iter_916.tape_ptr + local.code_917[1]
        : local.iter_916.tape_ptr)

    code_ptr = 2 + (
      local.code_917[0] == "["
        ? local.iter_916.tape[local.iter_916.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_916.code_ptr)] : local.iter_916.code_ptr :
      local.code_917[0] == "]"
        ? local.iter_916.tape[local.iter_916.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_916.code_ptr)] : local.iter_916.code_ptr
        : local.iter_916.code_ptr)

    steps_taken = 1 + local.iter_916.steps_taken
  }
}

locals {
  code_918 = (try(local.iter_917.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_917.code_ptr, local.iter_917.code_ptr + 2)
    : [null])

  input_918 = (local.code_918[0] == ","
    ? substr(local.input_917, local.code_918[1], -1)
    : local.input_917)

  iter_918 = try(local.iter_917.code_ptr >= length(var.code), true) ? local.iter_917 : {
    output = (local.code_918[0] == "."
      ? "${local.iter_917.output}${join("", [for _ in range(local.code_918[1]) : jsondecode(format("\"\\u%04x\"", local.iter_917.tape[local.iter_917.tape_ptr]))])}"
      : local.iter_917.output)
    
    tape = (
      local.code_918[0] == "+"
        ? [for i, b in local.iter_917.tape : (i == local.iter_917.tape_ptr ? (b + local.code_918[1]) % 256 : b)] :
      local.code_918[0] == "-"
        ? [for i, b in local.iter_917.tape : (i == local.iter_917.tape_ptr ? (b - local.code_918[1] + 256) % 256 : b)] :
      local.code_918[0] == ","
        ? [for i, b in local.iter_917.tape : (i == local.iter_917.tape_ptr ? local.ascii_lookup[substr(local.input_918, 0, 1)] : b)]
        : local.iter_917.tape)

    tape_ptr = (
      local.code_918[0] == "<"
        ? local.iter_917.tape_ptr - local.code_918[1] :
      local.code_918[0] == ">"
        ? local.iter_917.tape_ptr + local.code_918[1]
        : local.iter_917.tape_ptr)

    code_ptr = 2 + (
      local.code_918[0] == "["
        ? local.iter_917.tape[local.iter_917.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_917.code_ptr)] : local.iter_917.code_ptr :
      local.code_918[0] == "]"
        ? local.iter_917.tape[local.iter_917.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_917.code_ptr)] : local.iter_917.code_ptr
        : local.iter_917.code_ptr)

    steps_taken = 1 + local.iter_917.steps_taken
  }
}

locals {
  code_919 = (try(local.iter_918.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_918.code_ptr, local.iter_918.code_ptr + 2)
    : [null])

  input_919 = (local.code_919[0] == ","
    ? substr(local.input_918, local.code_919[1], -1)
    : local.input_918)

  iter_919 = try(local.iter_918.code_ptr >= length(var.code), true) ? local.iter_918 : {
    output = (local.code_919[0] == "."
      ? "${local.iter_918.output}${join("", [for _ in range(local.code_919[1]) : jsondecode(format("\"\\u%04x\"", local.iter_918.tape[local.iter_918.tape_ptr]))])}"
      : local.iter_918.output)
    
    tape = (
      local.code_919[0] == "+"
        ? [for i, b in local.iter_918.tape : (i == local.iter_918.tape_ptr ? (b + local.code_919[1]) % 256 : b)] :
      local.code_919[0] == "-"
        ? [for i, b in local.iter_918.tape : (i == local.iter_918.tape_ptr ? (b - local.code_919[1] + 256) % 256 : b)] :
      local.code_919[0] == ","
        ? [for i, b in local.iter_918.tape : (i == local.iter_918.tape_ptr ? local.ascii_lookup[substr(local.input_919, 0, 1)] : b)]
        : local.iter_918.tape)

    tape_ptr = (
      local.code_919[0] == "<"
        ? local.iter_918.tape_ptr - local.code_919[1] :
      local.code_919[0] == ">"
        ? local.iter_918.tape_ptr + local.code_919[1]
        : local.iter_918.tape_ptr)

    code_ptr = 2 + (
      local.code_919[0] == "["
        ? local.iter_918.tape[local.iter_918.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_918.code_ptr)] : local.iter_918.code_ptr :
      local.code_919[0] == "]"
        ? local.iter_918.tape[local.iter_918.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_918.code_ptr)] : local.iter_918.code_ptr
        : local.iter_918.code_ptr)

    steps_taken = 1 + local.iter_918.steps_taken
  }
}

locals {
  code_920 = (try(local.iter_919.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_919.code_ptr, local.iter_919.code_ptr + 2)
    : [null])

  input_920 = (local.code_920[0] == ","
    ? substr(local.input_919, local.code_920[1], -1)
    : local.input_919)

  iter_920 = try(local.iter_919.code_ptr >= length(var.code), true) ? local.iter_919 : {
    output = (local.code_920[0] == "."
      ? "${local.iter_919.output}${join("", [for _ in range(local.code_920[1]) : jsondecode(format("\"\\u%04x\"", local.iter_919.tape[local.iter_919.tape_ptr]))])}"
      : local.iter_919.output)
    
    tape = (
      local.code_920[0] == "+"
        ? [for i, b in local.iter_919.tape : (i == local.iter_919.tape_ptr ? (b + local.code_920[1]) % 256 : b)] :
      local.code_920[0] == "-"
        ? [for i, b in local.iter_919.tape : (i == local.iter_919.tape_ptr ? (b - local.code_920[1] + 256) % 256 : b)] :
      local.code_920[0] == ","
        ? [for i, b in local.iter_919.tape : (i == local.iter_919.tape_ptr ? local.ascii_lookup[substr(local.input_920, 0, 1)] : b)]
        : local.iter_919.tape)

    tape_ptr = (
      local.code_920[0] == "<"
        ? local.iter_919.tape_ptr - local.code_920[1] :
      local.code_920[0] == ">"
        ? local.iter_919.tape_ptr + local.code_920[1]
        : local.iter_919.tape_ptr)

    code_ptr = 2 + (
      local.code_920[0] == "["
        ? local.iter_919.tape[local.iter_919.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_919.code_ptr)] : local.iter_919.code_ptr :
      local.code_920[0] == "]"
        ? local.iter_919.tape[local.iter_919.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_919.code_ptr)] : local.iter_919.code_ptr
        : local.iter_919.code_ptr)

    steps_taken = 1 + local.iter_919.steps_taken
  }
}

locals {
  code_921 = (try(local.iter_920.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_920.code_ptr, local.iter_920.code_ptr + 2)
    : [null])

  input_921 = (local.code_921[0] == ","
    ? substr(local.input_920, local.code_921[1], -1)
    : local.input_920)

  iter_921 = try(local.iter_920.code_ptr >= length(var.code), true) ? local.iter_920 : {
    output = (local.code_921[0] == "."
      ? "${local.iter_920.output}${join("", [for _ in range(local.code_921[1]) : jsondecode(format("\"\\u%04x\"", local.iter_920.tape[local.iter_920.tape_ptr]))])}"
      : local.iter_920.output)
    
    tape = (
      local.code_921[0] == "+"
        ? [for i, b in local.iter_920.tape : (i == local.iter_920.tape_ptr ? (b + local.code_921[1]) % 256 : b)] :
      local.code_921[0] == "-"
        ? [for i, b in local.iter_920.tape : (i == local.iter_920.tape_ptr ? (b - local.code_921[1] + 256) % 256 : b)] :
      local.code_921[0] == ","
        ? [for i, b in local.iter_920.tape : (i == local.iter_920.tape_ptr ? local.ascii_lookup[substr(local.input_921, 0, 1)] : b)]
        : local.iter_920.tape)

    tape_ptr = (
      local.code_921[0] == "<"
        ? local.iter_920.tape_ptr - local.code_921[1] :
      local.code_921[0] == ">"
        ? local.iter_920.tape_ptr + local.code_921[1]
        : local.iter_920.tape_ptr)

    code_ptr = 2 + (
      local.code_921[0] == "["
        ? local.iter_920.tape[local.iter_920.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_920.code_ptr)] : local.iter_920.code_ptr :
      local.code_921[0] == "]"
        ? local.iter_920.tape[local.iter_920.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_920.code_ptr)] : local.iter_920.code_ptr
        : local.iter_920.code_ptr)

    steps_taken = 1 + local.iter_920.steps_taken
  }
}

locals {
  code_922 = (try(local.iter_921.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_921.code_ptr, local.iter_921.code_ptr + 2)
    : [null])

  input_922 = (local.code_922[0] == ","
    ? substr(local.input_921, local.code_922[1], -1)
    : local.input_921)

  iter_922 = try(local.iter_921.code_ptr >= length(var.code), true) ? local.iter_921 : {
    output = (local.code_922[0] == "."
      ? "${local.iter_921.output}${join("", [for _ in range(local.code_922[1]) : jsondecode(format("\"\\u%04x\"", local.iter_921.tape[local.iter_921.tape_ptr]))])}"
      : local.iter_921.output)
    
    tape = (
      local.code_922[0] == "+"
        ? [for i, b in local.iter_921.tape : (i == local.iter_921.tape_ptr ? (b + local.code_922[1]) % 256 : b)] :
      local.code_922[0] == "-"
        ? [for i, b in local.iter_921.tape : (i == local.iter_921.tape_ptr ? (b - local.code_922[1] + 256) % 256 : b)] :
      local.code_922[0] == ","
        ? [for i, b in local.iter_921.tape : (i == local.iter_921.tape_ptr ? local.ascii_lookup[substr(local.input_922, 0, 1)] : b)]
        : local.iter_921.tape)

    tape_ptr = (
      local.code_922[0] == "<"
        ? local.iter_921.tape_ptr - local.code_922[1] :
      local.code_922[0] == ">"
        ? local.iter_921.tape_ptr + local.code_922[1]
        : local.iter_921.tape_ptr)

    code_ptr = 2 + (
      local.code_922[0] == "["
        ? local.iter_921.tape[local.iter_921.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_921.code_ptr)] : local.iter_921.code_ptr :
      local.code_922[0] == "]"
        ? local.iter_921.tape[local.iter_921.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_921.code_ptr)] : local.iter_921.code_ptr
        : local.iter_921.code_ptr)

    steps_taken = 1 + local.iter_921.steps_taken
  }
}

locals {
  code_923 = (try(local.iter_922.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_922.code_ptr, local.iter_922.code_ptr + 2)
    : [null])

  input_923 = (local.code_923[0] == ","
    ? substr(local.input_922, local.code_923[1], -1)
    : local.input_922)

  iter_923 = try(local.iter_922.code_ptr >= length(var.code), true) ? local.iter_922 : {
    output = (local.code_923[0] == "."
      ? "${local.iter_922.output}${join("", [for _ in range(local.code_923[1]) : jsondecode(format("\"\\u%04x\"", local.iter_922.tape[local.iter_922.tape_ptr]))])}"
      : local.iter_922.output)
    
    tape = (
      local.code_923[0] == "+"
        ? [for i, b in local.iter_922.tape : (i == local.iter_922.tape_ptr ? (b + local.code_923[1]) % 256 : b)] :
      local.code_923[0] == "-"
        ? [for i, b in local.iter_922.tape : (i == local.iter_922.tape_ptr ? (b - local.code_923[1] + 256) % 256 : b)] :
      local.code_923[0] == ","
        ? [for i, b in local.iter_922.tape : (i == local.iter_922.tape_ptr ? local.ascii_lookup[substr(local.input_923, 0, 1)] : b)]
        : local.iter_922.tape)

    tape_ptr = (
      local.code_923[0] == "<"
        ? local.iter_922.tape_ptr - local.code_923[1] :
      local.code_923[0] == ">"
        ? local.iter_922.tape_ptr + local.code_923[1]
        : local.iter_922.tape_ptr)

    code_ptr = 2 + (
      local.code_923[0] == "["
        ? local.iter_922.tape[local.iter_922.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_922.code_ptr)] : local.iter_922.code_ptr :
      local.code_923[0] == "]"
        ? local.iter_922.tape[local.iter_922.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_922.code_ptr)] : local.iter_922.code_ptr
        : local.iter_922.code_ptr)

    steps_taken = 1 + local.iter_922.steps_taken
  }
}

locals {
  code_924 = (try(local.iter_923.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_923.code_ptr, local.iter_923.code_ptr + 2)
    : [null])

  input_924 = (local.code_924[0] == ","
    ? substr(local.input_923, local.code_924[1], -1)
    : local.input_923)

  iter_924 = try(local.iter_923.code_ptr >= length(var.code), true) ? local.iter_923 : {
    output = (local.code_924[0] == "."
      ? "${local.iter_923.output}${join("", [for _ in range(local.code_924[1]) : jsondecode(format("\"\\u%04x\"", local.iter_923.tape[local.iter_923.tape_ptr]))])}"
      : local.iter_923.output)
    
    tape = (
      local.code_924[0] == "+"
        ? [for i, b in local.iter_923.tape : (i == local.iter_923.tape_ptr ? (b + local.code_924[1]) % 256 : b)] :
      local.code_924[0] == "-"
        ? [for i, b in local.iter_923.tape : (i == local.iter_923.tape_ptr ? (b - local.code_924[1] + 256) % 256 : b)] :
      local.code_924[0] == ","
        ? [for i, b in local.iter_923.tape : (i == local.iter_923.tape_ptr ? local.ascii_lookup[substr(local.input_924, 0, 1)] : b)]
        : local.iter_923.tape)

    tape_ptr = (
      local.code_924[0] == "<"
        ? local.iter_923.tape_ptr - local.code_924[1] :
      local.code_924[0] == ">"
        ? local.iter_923.tape_ptr + local.code_924[1]
        : local.iter_923.tape_ptr)

    code_ptr = 2 + (
      local.code_924[0] == "["
        ? local.iter_923.tape[local.iter_923.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_923.code_ptr)] : local.iter_923.code_ptr :
      local.code_924[0] == "]"
        ? local.iter_923.tape[local.iter_923.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_923.code_ptr)] : local.iter_923.code_ptr
        : local.iter_923.code_ptr)

    steps_taken = 1 + local.iter_923.steps_taken
  }
}

locals {
  code_925 = (try(local.iter_924.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_924.code_ptr, local.iter_924.code_ptr + 2)
    : [null])

  input_925 = (local.code_925[0] == ","
    ? substr(local.input_924, local.code_925[1], -1)
    : local.input_924)

  iter_925 = try(local.iter_924.code_ptr >= length(var.code), true) ? local.iter_924 : {
    output = (local.code_925[0] == "."
      ? "${local.iter_924.output}${join("", [for _ in range(local.code_925[1]) : jsondecode(format("\"\\u%04x\"", local.iter_924.tape[local.iter_924.tape_ptr]))])}"
      : local.iter_924.output)
    
    tape = (
      local.code_925[0] == "+"
        ? [for i, b in local.iter_924.tape : (i == local.iter_924.tape_ptr ? (b + local.code_925[1]) % 256 : b)] :
      local.code_925[0] == "-"
        ? [for i, b in local.iter_924.tape : (i == local.iter_924.tape_ptr ? (b - local.code_925[1] + 256) % 256 : b)] :
      local.code_925[0] == ","
        ? [for i, b in local.iter_924.tape : (i == local.iter_924.tape_ptr ? local.ascii_lookup[substr(local.input_925, 0, 1)] : b)]
        : local.iter_924.tape)

    tape_ptr = (
      local.code_925[0] == "<"
        ? local.iter_924.tape_ptr - local.code_925[1] :
      local.code_925[0] == ">"
        ? local.iter_924.tape_ptr + local.code_925[1]
        : local.iter_924.tape_ptr)

    code_ptr = 2 + (
      local.code_925[0] == "["
        ? local.iter_924.tape[local.iter_924.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_924.code_ptr)] : local.iter_924.code_ptr :
      local.code_925[0] == "]"
        ? local.iter_924.tape[local.iter_924.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_924.code_ptr)] : local.iter_924.code_ptr
        : local.iter_924.code_ptr)

    steps_taken = 1 + local.iter_924.steps_taken
  }
}

locals {
  code_926 = (try(local.iter_925.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_925.code_ptr, local.iter_925.code_ptr + 2)
    : [null])

  input_926 = (local.code_926[0] == ","
    ? substr(local.input_925, local.code_926[1], -1)
    : local.input_925)

  iter_926 = try(local.iter_925.code_ptr >= length(var.code), true) ? local.iter_925 : {
    output = (local.code_926[0] == "."
      ? "${local.iter_925.output}${join("", [for _ in range(local.code_926[1]) : jsondecode(format("\"\\u%04x\"", local.iter_925.tape[local.iter_925.tape_ptr]))])}"
      : local.iter_925.output)
    
    tape = (
      local.code_926[0] == "+"
        ? [for i, b in local.iter_925.tape : (i == local.iter_925.tape_ptr ? (b + local.code_926[1]) % 256 : b)] :
      local.code_926[0] == "-"
        ? [for i, b in local.iter_925.tape : (i == local.iter_925.tape_ptr ? (b - local.code_926[1] + 256) % 256 : b)] :
      local.code_926[0] == ","
        ? [for i, b in local.iter_925.tape : (i == local.iter_925.tape_ptr ? local.ascii_lookup[substr(local.input_926, 0, 1)] : b)]
        : local.iter_925.tape)

    tape_ptr = (
      local.code_926[0] == "<"
        ? local.iter_925.tape_ptr - local.code_926[1] :
      local.code_926[0] == ">"
        ? local.iter_925.tape_ptr + local.code_926[1]
        : local.iter_925.tape_ptr)

    code_ptr = 2 + (
      local.code_926[0] == "["
        ? local.iter_925.tape[local.iter_925.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_925.code_ptr)] : local.iter_925.code_ptr :
      local.code_926[0] == "]"
        ? local.iter_925.tape[local.iter_925.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_925.code_ptr)] : local.iter_925.code_ptr
        : local.iter_925.code_ptr)

    steps_taken = 1 + local.iter_925.steps_taken
  }
}

locals {
  code_927 = (try(local.iter_926.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_926.code_ptr, local.iter_926.code_ptr + 2)
    : [null])

  input_927 = (local.code_927[0] == ","
    ? substr(local.input_926, local.code_927[1], -1)
    : local.input_926)

  iter_927 = try(local.iter_926.code_ptr >= length(var.code), true) ? local.iter_926 : {
    output = (local.code_927[0] == "."
      ? "${local.iter_926.output}${join("", [for _ in range(local.code_927[1]) : jsondecode(format("\"\\u%04x\"", local.iter_926.tape[local.iter_926.tape_ptr]))])}"
      : local.iter_926.output)
    
    tape = (
      local.code_927[0] == "+"
        ? [for i, b in local.iter_926.tape : (i == local.iter_926.tape_ptr ? (b + local.code_927[1]) % 256 : b)] :
      local.code_927[0] == "-"
        ? [for i, b in local.iter_926.tape : (i == local.iter_926.tape_ptr ? (b - local.code_927[1] + 256) % 256 : b)] :
      local.code_927[0] == ","
        ? [for i, b in local.iter_926.tape : (i == local.iter_926.tape_ptr ? local.ascii_lookup[substr(local.input_927, 0, 1)] : b)]
        : local.iter_926.tape)

    tape_ptr = (
      local.code_927[0] == "<"
        ? local.iter_926.tape_ptr - local.code_927[1] :
      local.code_927[0] == ">"
        ? local.iter_926.tape_ptr + local.code_927[1]
        : local.iter_926.tape_ptr)

    code_ptr = 2 + (
      local.code_927[0] == "["
        ? local.iter_926.tape[local.iter_926.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_926.code_ptr)] : local.iter_926.code_ptr :
      local.code_927[0] == "]"
        ? local.iter_926.tape[local.iter_926.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_926.code_ptr)] : local.iter_926.code_ptr
        : local.iter_926.code_ptr)

    steps_taken = 1 + local.iter_926.steps_taken
  }
}

locals {
  code_928 = (try(local.iter_927.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_927.code_ptr, local.iter_927.code_ptr + 2)
    : [null])

  input_928 = (local.code_928[0] == ","
    ? substr(local.input_927, local.code_928[1], -1)
    : local.input_927)

  iter_928 = try(local.iter_927.code_ptr >= length(var.code), true) ? local.iter_927 : {
    output = (local.code_928[0] == "."
      ? "${local.iter_927.output}${join("", [for _ in range(local.code_928[1]) : jsondecode(format("\"\\u%04x\"", local.iter_927.tape[local.iter_927.tape_ptr]))])}"
      : local.iter_927.output)
    
    tape = (
      local.code_928[0] == "+"
        ? [for i, b in local.iter_927.tape : (i == local.iter_927.tape_ptr ? (b + local.code_928[1]) % 256 : b)] :
      local.code_928[0] == "-"
        ? [for i, b in local.iter_927.tape : (i == local.iter_927.tape_ptr ? (b - local.code_928[1] + 256) % 256 : b)] :
      local.code_928[0] == ","
        ? [for i, b in local.iter_927.tape : (i == local.iter_927.tape_ptr ? local.ascii_lookup[substr(local.input_928, 0, 1)] : b)]
        : local.iter_927.tape)

    tape_ptr = (
      local.code_928[0] == "<"
        ? local.iter_927.tape_ptr - local.code_928[1] :
      local.code_928[0] == ">"
        ? local.iter_927.tape_ptr + local.code_928[1]
        : local.iter_927.tape_ptr)

    code_ptr = 2 + (
      local.code_928[0] == "["
        ? local.iter_927.tape[local.iter_927.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_927.code_ptr)] : local.iter_927.code_ptr :
      local.code_928[0] == "]"
        ? local.iter_927.tape[local.iter_927.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_927.code_ptr)] : local.iter_927.code_ptr
        : local.iter_927.code_ptr)

    steps_taken = 1 + local.iter_927.steps_taken
  }
}

locals {
  code_929 = (try(local.iter_928.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_928.code_ptr, local.iter_928.code_ptr + 2)
    : [null])

  input_929 = (local.code_929[0] == ","
    ? substr(local.input_928, local.code_929[1], -1)
    : local.input_928)

  iter_929 = try(local.iter_928.code_ptr >= length(var.code), true) ? local.iter_928 : {
    output = (local.code_929[0] == "."
      ? "${local.iter_928.output}${join("", [for _ in range(local.code_929[1]) : jsondecode(format("\"\\u%04x\"", local.iter_928.tape[local.iter_928.tape_ptr]))])}"
      : local.iter_928.output)
    
    tape = (
      local.code_929[0] == "+"
        ? [for i, b in local.iter_928.tape : (i == local.iter_928.tape_ptr ? (b + local.code_929[1]) % 256 : b)] :
      local.code_929[0] == "-"
        ? [for i, b in local.iter_928.tape : (i == local.iter_928.tape_ptr ? (b - local.code_929[1] + 256) % 256 : b)] :
      local.code_929[0] == ","
        ? [for i, b in local.iter_928.tape : (i == local.iter_928.tape_ptr ? local.ascii_lookup[substr(local.input_929, 0, 1)] : b)]
        : local.iter_928.tape)

    tape_ptr = (
      local.code_929[0] == "<"
        ? local.iter_928.tape_ptr - local.code_929[1] :
      local.code_929[0] == ">"
        ? local.iter_928.tape_ptr + local.code_929[1]
        : local.iter_928.tape_ptr)

    code_ptr = 2 + (
      local.code_929[0] == "["
        ? local.iter_928.tape[local.iter_928.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_928.code_ptr)] : local.iter_928.code_ptr :
      local.code_929[0] == "]"
        ? local.iter_928.tape[local.iter_928.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_928.code_ptr)] : local.iter_928.code_ptr
        : local.iter_928.code_ptr)

    steps_taken = 1 + local.iter_928.steps_taken
  }
}

locals {
  code_930 = (try(local.iter_929.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_929.code_ptr, local.iter_929.code_ptr + 2)
    : [null])

  input_930 = (local.code_930[0] == ","
    ? substr(local.input_929, local.code_930[1], -1)
    : local.input_929)

  iter_930 = try(local.iter_929.code_ptr >= length(var.code), true) ? local.iter_929 : {
    output = (local.code_930[0] == "."
      ? "${local.iter_929.output}${join("", [for _ in range(local.code_930[1]) : jsondecode(format("\"\\u%04x\"", local.iter_929.tape[local.iter_929.tape_ptr]))])}"
      : local.iter_929.output)
    
    tape = (
      local.code_930[0] == "+"
        ? [for i, b in local.iter_929.tape : (i == local.iter_929.tape_ptr ? (b + local.code_930[1]) % 256 : b)] :
      local.code_930[0] == "-"
        ? [for i, b in local.iter_929.tape : (i == local.iter_929.tape_ptr ? (b - local.code_930[1] + 256) % 256 : b)] :
      local.code_930[0] == ","
        ? [for i, b in local.iter_929.tape : (i == local.iter_929.tape_ptr ? local.ascii_lookup[substr(local.input_930, 0, 1)] : b)]
        : local.iter_929.tape)

    tape_ptr = (
      local.code_930[0] == "<"
        ? local.iter_929.tape_ptr - local.code_930[1] :
      local.code_930[0] == ">"
        ? local.iter_929.tape_ptr + local.code_930[1]
        : local.iter_929.tape_ptr)

    code_ptr = 2 + (
      local.code_930[0] == "["
        ? local.iter_929.tape[local.iter_929.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_929.code_ptr)] : local.iter_929.code_ptr :
      local.code_930[0] == "]"
        ? local.iter_929.tape[local.iter_929.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_929.code_ptr)] : local.iter_929.code_ptr
        : local.iter_929.code_ptr)

    steps_taken = 1 + local.iter_929.steps_taken
  }
}

locals {
  code_931 = (try(local.iter_930.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_930.code_ptr, local.iter_930.code_ptr + 2)
    : [null])

  input_931 = (local.code_931[0] == ","
    ? substr(local.input_930, local.code_931[1], -1)
    : local.input_930)

  iter_931 = try(local.iter_930.code_ptr >= length(var.code), true) ? local.iter_930 : {
    output = (local.code_931[0] == "."
      ? "${local.iter_930.output}${join("", [for _ in range(local.code_931[1]) : jsondecode(format("\"\\u%04x\"", local.iter_930.tape[local.iter_930.tape_ptr]))])}"
      : local.iter_930.output)
    
    tape = (
      local.code_931[0] == "+"
        ? [for i, b in local.iter_930.tape : (i == local.iter_930.tape_ptr ? (b + local.code_931[1]) % 256 : b)] :
      local.code_931[0] == "-"
        ? [for i, b in local.iter_930.tape : (i == local.iter_930.tape_ptr ? (b - local.code_931[1] + 256) % 256 : b)] :
      local.code_931[0] == ","
        ? [for i, b in local.iter_930.tape : (i == local.iter_930.tape_ptr ? local.ascii_lookup[substr(local.input_931, 0, 1)] : b)]
        : local.iter_930.tape)

    tape_ptr = (
      local.code_931[0] == "<"
        ? local.iter_930.tape_ptr - local.code_931[1] :
      local.code_931[0] == ">"
        ? local.iter_930.tape_ptr + local.code_931[1]
        : local.iter_930.tape_ptr)

    code_ptr = 2 + (
      local.code_931[0] == "["
        ? local.iter_930.tape[local.iter_930.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_930.code_ptr)] : local.iter_930.code_ptr :
      local.code_931[0] == "]"
        ? local.iter_930.tape[local.iter_930.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_930.code_ptr)] : local.iter_930.code_ptr
        : local.iter_930.code_ptr)

    steps_taken = 1 + local.iter_930.steps_taken
  }
}

locals {
  code_932 = (try(local.iter_931.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_931.code_ptr, local.iter_931.code_ptr + 2)
    : [null])

  input_932 = (local.code_932[0] == ","
    ? substr(local.input_931, local.code_932[1], -1)
    : local.input_931)

  iter_932 = try(local.iter_931.code_ptr >= length(var.code), true) ? local.iter_931 : {
    output = (local.code_932[0] == "."
      ? "${local.iter_931.output}${join("", [for _ in range(local.code_932[1]) : jsondecode(format("\"\\u%04x\"", local.iter_931.tape[local.iter_931.tape_ptr]))])}"
      : local.iter_931.output)
    
    tape = (
      local.code_932[0] == "+"
        ? [for i, b in local.iter_931.tape : (i == local.iter_931.tape_ptr ? (b + local.code_932[1]) % 256 : b)] :
      local.code_932[0] == "-"
        ? [for i, b in local.iter_931.tape : (i == local.iter_931.tape_ptr ? (b - local.code_932[1] + 256) % 256 : b)] :
      local.code_932[0] == ","
        ? [for i, b in local.iter_931.tape : (i == local.iter_931.tape_ptr ? local.ascii_lookup[substr(local.input_932, 0, 1)] : b)]
        : local.iter_931.tape)

    tape_ptr = (
      local.code_932[0] == "<"
        ? local.iter_931.tape_ptr - local.code_932[1] :
      local.code_932[0] == ">"
        ? local.iter_931.tape_ptr + local.code_932[1]
        : local.iter_931.tape_ptr)

    code_ptr = 2 + (
      local.code_932[0] == "["
        ? local.iter_931.tape[local.iter_931.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_931.code_ptr)] : local.iter_931.code_ptr :
      local.code_932[0] == "]"
        ? local.iter_931.tape[local.iter_931.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_931.code_ptr)] : local.iter_931.code_ptr
        : local.iter_931.code_ptr)

    steps_taken = 1 + local.iter_931.steps_taken
  }
}

locals {
  code_933 = (try(local.iter_932.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_932.code_ptr, local.iter_932.code_ptr + 2)
    : [null])

  input_933 = (local.code_933[0] == ","
    ? substr(local.input_932, local.code_933[1], -1)
    : local.input_932)

  iter_933 = try(local.iter_932.code_ptr >= length(var.code), true) ? local.iter_932 : {
    output = (local.code_933[0] == "."
      ? "${local.iter_932.output}${join("", [for _ in range(local.code_933[1]) : jsondecode(format("\"\\u%04x\"", local.iter_932.tape[local.iter_932.tape_ptr]))])}"
      : local.iter_932.output)
    
    tape = (
      local.code_933[0] == "+"
        ? [for i, b in local.iter_932.tape : (i == local.iter_932.tape_ptr ? (b + local.code_933[1]) % 256 : b)] :
      local.code_933[0] == "-"
        ? [for i, b in local.iter_932.tape : (i == local.iter_932.tape_ptr ? (b - local.code_933[1] + 256) % 256 : b)] :
      local.code_933[0] == ","
        ? [for i, b in local.iter_932.tape : (i == local.iter_932.tape_ptr ? local.ascii_lookup[substr(local.input_933, 0, 1)] : b)]
        : local.iter_932.tape)

    tape_ptr = (
      local.code_933[0] == "<"
        ? local.iter_932.tape_ptr - local.code_933[1] :
      local.code_933[0] == ">"
        ? local.iter_932.tape_ptr + local.code_933[1]
        : local.iter_932.tape_ptr)

    code_ptr = 2 + (
      local.code_933[0] == "["
        ? local.iter_932.tape[local.iter_932.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_932.code_ptr)] : local.iter_932.code_ptr :
      local.code_933[0] == "]"
        ? local.iter_932.tape[local.iter_932.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_932.code_ptr)] : local.iter_932.code_ptr
        : local.iter_932.code_ptr)

    steps_taken = 1 + local.iter_932.steps_taken
  }
}

locals {
  code_934 = (try(local.iter_933.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_933.code_ptr, local.iter_933.code_ptr + 2)
    : [null])

  input_934 = (local.code_934[0] == ","
    ? substr(local.input_933, local.code_934[1], -1)
    : local.input_933)

  iter_934 = try(local.iter_933.code_ptr >= length(var.code), true) ? local.iter_933 : {
    output = (local.code_934[0] == "."
      ? "${local.iter_933.output}${join("", [for _ in range(local.code_934[1]) : jsondecode(format("\"\\u%04x\"", local.iter_933.tape[local.iter_933.tape_ptr]))])}"
      : local.iter_933.output)
    
    tape = (
      local.code_934[0] == "+"
        ? [for i, b in local.iter_933.tape : (i == local.iter_933.tape_ptr ? (b + local.code_934[1]) % 256 : b)] :
      local.code_934[0] == "-"
        ? [for i, b in local.iter_933.tape : (i == local.iter_933.tape_ptr ? (b - local.code_934[1] + 256) % 256 : b)] :
      local.code_934[0] == ","
        ? [for i, b in local.iter_933.tape : (i == local.iter_933.tape_ptr ? local.ascii_lookup[substr(local.input_934, 0, 1)] : b)]
        : local.iter_933.tape)

    tape_ptr = (
      local.code_934[0] == "<"
        ? local.iter_933.tape_ptr - local.code_934[1] :
      local.code_934[0] == ">"
        ? local.iter_933.tape_ptr + local.code_934[1]
        : local.iter_933.tape_ptr)

    code_ptr = 2 + (
      local.code_934[0] == "["
        ? local.iter_933.tape[local.iter_933.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_933.code_ptr)] : local.iter_933.code_ptr :
      local.code_934[0] == "]"
        ? local.iter_933.tape[local.iter_933.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_933.code_ptr)] : local.iter_933.code_ptr
        : local.iter_933.code_ptr)

    steps_taken = 1 + local.iter_933.steps_taken
  }
}

locals {
  code_935 = (try(local.iter_934.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_934.code_ptr, local.iter_934.code_ptr + 2)
    : [null])

  input_935 = (local.code_935[0] == ","
    ? substr(local.input_934, local.code_935[1], -1)
    : local.input_934)

  iter_935 = try(local.iter_934.code_ptr >= length(var.code), true) ? local.iter_934 : {
    output = (local.code_935[0] == "."
      ? "${local.iter_934.output}${join("", [for _ in range(local.code_935[1]) : jsondecode(format("\"\\u%04x\"", local.iter_934.tape[local.iter_934.tape_ptr]))])}"
      : local.iter_934.output)
    
    tape = (
      local.code_935[0] == "+"
        ? [for i, b in local.iter_934.tape : (i == local.iter_934.tape_ptr ? (b + local.code_935[1]) % 256 : b)] :
      local.code_935[0] == "-"
        ? [for i, b in local.iter_934.tape : (i == local.iter_934.tape_ptr ? (b - local.code_935[1] + 256) % 256 : b)] :
      local.code_935[0] == ","
        ? [for i, b in local.iter_934.tape : (i == local.iter_934.tape_ptr ? local.ascii_lookup[substr(local.input_935, 0, 1)] : b)]
        : local.iter_934.tape)

    tape_ptr = (
      local.code_935[0] == "<"
        ? local.iter_934.tape_ptr - local.code_935[1] :
      local.code_935[0] == ">"
        ? local.iter_934.tape_ptr + local.code_935[1]
        : local.iter_934.tape_ptr)

    code_ptr = 2 + (
      local.code_935[0] == "["
        ? local.iter_934.tape[local.iter_934.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_934.code_ptr)] : local.iter_934.code_ptr :
      local.code_935[0] == "]"
        ? local.iter_934.tape[local.iter_934.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_934.code_ptr)] : local.iter_934.code_ptr
        : local.iter_934.code_ptr)

    steps_taken = 1 + local.iter_934.steps_taken
  }
}

locals {
  code_936 = (try(local.iter_935.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_935.code_ptr, local.iter_935.code_ptr + 2)
    : [null])

  input_936 = (local.code_936[0] == ","
    ? substr(local.input_935, local.code_936[1], -1)
    : local.input_935)

  iter_936 = try(local.iter_935.code_ptr >= length(var.code), true) ? local.iter_935 : {
    output = (local.code_936[0] == "."
      ? "${local.iter_935.output}${join("", [for _ in range(local.code_936[1]) : jsondecode(format("\"\\u%04x\"", local.iter_935.tape[local.iter_935.tape_ptr]))])}"
      : local.iter_935.output)
    
    tape = (
      local.code_936[0] == "+"
        ? [for i, b in local.iter_935.tape : (i == local.iter_935.tape_ptr ? (b + local.code_936[1]) % 256 : b)] :
      local.code_936[0] == "-"
        ? [for i, b in local.iter_935.tape : (i == local.iter_935.tape_ptr ? (b - local.code_936[1] + 256) % 256 : b)] :
      local.code_936[0] == ","
        ? [for i, b in local.iter_935.tape : (i == local.iter_935.tape_ptr ? local.ascii_lookup[substr(local.input_936, 0, 1)] : b)]
        : local.iter_935.tape)

    tape_ptr = (
      local.code_936[0] == "<"
        ? local.iter_935.tape_ptr - local.code_936[1] :
      local.code_936[0] == ">"
        ? local.iter_935.tape_ptr + local.code_936[1]
        : local.iter_935.tape_ptr)

    code_ptr = 2 + (
      local.code_936[0] == "["
        ? local.iter_935.tape[local.iter_935.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_935.code_ptr)] : local.iter_935.code_ptr :
      local.code_936[0] == "]"
        ? local.iter_935.tape[local.iter_935.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_935.code_ptr)] : local.iter_935.code_ptr
        : local.iter_935.code_ptr)

    steps_taken = 1 + local.iter_935.steps_taken
  }
}

locals {
  code_937 = (try(local.iter_936.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_936.code_ptr, local.iter_936.code_ptr + 2)
    : [null])

  input_937 = (local.code_937[0] == ","
    ? substr(local.input_936, local.code_937[1], -1)
    : local.input_936)

  iter_937 = try(local.iter_936.code_ptr >= length(var.code), true) ? local.iter_936 : {
    output = (local.code_937[0] == "."
      ? "${local.iter_936.output}${join("", [for _ in range(local.code_937[1]) : jsondecode(format("\"\\u%04x\"", local.iter_936.tape[local.iter_936.tape_ptr]))])}"
      : local.iter_936.output)
    
    tape = (
      local.code_937[0] == "+"
        ? [for i, b in local.iter_936.tape : (i == local.iter_936.tape_ptr ? (b + local.code_937[1]) % 256 : b)] :
      local.code_937[0] == "-"
        ? [for i, b in local.iter_936.tape : (i == local.iter_936.tape_ptr ? (b - local.code_937[1] + 256) % 256 : b)] :
      local.code_937[0] == ","
        ? [for i, b in local.iter_936.tape : (i == local.iter_936.tape_ptr ? local.ascii_lookup[substr(local.input_937, 0, 1)] : b)]
        : local.iter_936.tape)

    tape_ptr = (
      local.code_937[0] == "<"
        ? local.iter_936.tape_ptr - local.code_937[1] :
      local.code_937[0] == ">"
        ? local.iter_936.tape_ptr + local.code_937[1]
        : local.iter_936.tape_ptr)

    code_ptr = 2 + (
      local.code_937[0] == "["
        ? local.iter_936.tape[local.iter_936.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_936.code_ptr)] : local.iter_936.code_ptr :
      local.code_937[0] == "]"
        ? local.iter_936.tape[local.iter_936.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_936.code_ptr)] : local.iter_936.code_ptr
        : local.iter_936.code_ptr)

    steps_taken = 1 + local.iter_936.steps_taken
  }
}

locals {
  code_938 = (try(local.iter_937.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_937.code_ptr, local.iter_937.code_ptr + 2)
    : [null])

  input_938 = (local.code_938[0] == ","
    ? substr(local.input_937, local.code_938[1], -1)
    : local.input_937)

  iter_938 = try(local.iter_937.code_ptr >= length(var.code), true) ? local.iter_937 : {
    output = (local.code_938[0] == "."
      ? "${local.iter_937.output}${join("", [for _ in range(local.code_938[1]) : jsondecode(format("\"\\u%04x\"", local.iter_937.tape[local.iter_937.tape_ptr]))])}"
      : local.iter_937.output)
    
    tape = (
      local.code_938[0] == "+"
        ? [for i, b in local.iter_937.tape : (i == local.iter_937.tape_ptr ? (b + local.code_938[1]) % 256 : b)] :
      local.code_938[0] == "-"
        ? [for i, b in local.iter_937.tape : (i == local.iter_937.tape_ptr ? (b - local.code_938[1] + 256) % 256 : b)] :
      local.code_938[0] == ","
        ? [for i, b in local.iter_937.tape : (i == local.iter_937.tape_ptr ? local.ascii_lookup[substr(local.input_938, 0, 1)] : b)]
        : local.iter_937.tape)

    tape_ptr = (
      local.code_938[0] == "<"
        ? local.iter_937.tape_ptr - local.code_938[1] :
      local.code_938[0] == ">"
        ? local.iter_937.tape_ptr + local.code_938[1]
        : local.iter_937.tape_ptr)

    code_ptr = 2 + (
      local.code_938[0] == "["
        ? local.iter_937.tape[local.iter_937.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_937.code_ptr)] : local.iter_937.code_ptr :
      local.code_938[0] == "]"
        ? local.iter_937.tape[local.iter_937.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_937.code_ptr)] : local.iter_937.code_ptr
        : local.iter_937.code_ptr)

    steps_taken = 1 + local.iter_937.steps_taken
  }
}

locals {
  code_939 = (try(local.iter_938.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_938.code_ptr, local.iter_938.code_ptr + 2)
    : [null])

  input_939 = (local.code_939[0] == ","
    ? substr(local.input_938, local.code_939[1], -1)
    : local.input_938)

  iter_939 = try(local.iter_938.code_ptr >= length(var.code), true) ? local.iter_938 : {
    output = (local.code_939[0] == "."
      ? "${local.iter_938.output}${join("", [for _ in range(local.code_939[1]) : jsondecode(format("\"\\u%04x\"", local.iter_938.tape[local.iter_938.tape_ptr]))])}"
      : local.iter_938.output)
    
    tape = (
      local.code_939[0] == "+"
        ? [for i, b in local.iter_938.tape : (i == local.iter_938.tape_ptr ? (b + local.code_939[1]) % 256 : b)] :
      local.code_939[0] == "-"
        ? [for i, b in local.iter_938.tape : (i == local.iter_938.tape_ptr ? (b - local.code_939[1] + 256) % 256 : b)] :
      local.code_939[0] == ","
        ? [for i, b in local.iter_938.tape : (i == local.iter_938.tape_ptr ? local.ascii_lookup[substr(local.input_939, 0, 1)] : b)]
        : local.iter_938.tape)

    tape_ptr = (
      local.code_939[0] == "<"
        ? local.iter_938.tape_ptr - local.code_939[1] :
      local.code_939[0] == ">"
        ? local.iter_938.tape_ptr + local.code_939[1]
        : local.iter_938.tape_ptr)

    code_ptr = 2 + (
      local.code_939[0] == "["
        ? local.iter_938.tape[local.iter_938.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_938.code_ptr)] : local.iter_938.code_ptr :
      local.code_939[0] == "]"
        ? local.iter_938.tape[local.iter_938.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_938.code_ptr)] : local.iter_938.code_ptr
        : local.iter_938.code_ptr)

    steps_taken = 1 + local.iter_938.steps_taken
  }
}

locals {
  code_940 = (try(local.iter_939.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_939.code_ptr, local.iter_939.code_ptr + 2)
    : [null])

  input_940 = (local.code_940[0] == ","
    ? substr(local.input_939, local.code_940[1], -1)
    : local.input_939)

  iter_940 = try(local.iter_939.code_ptr >= length(var.code), true) ? local.iter_939 : {
    output = (local.code_940[0] == "."
      ? "${local.iter_939.output}${join("", [for _ in range(local.code_940[1]) : jsondecode(format("\"\\u%04x\"", local.iter_939.tape[local.iter_939.tape_ptr]))])}"
      : local.iter_939.output)
    
    tape = (
      local.code_940[0] == "+"
        ? [for i, b in local.iter_939.tape : (i == local.iter_939.tape_ptr ? (b + local.code_940[1]) % 256 : b)] :
      local.code_940[0] == "-"
        ? [for i, b in local.iter_939.tape : (i == local.iter_939.tape_ptr ? (b - local.code_940[1] + 256) % 256 : b)] :
      local.code_940[0] == ","
        ? [for i, b in local.iter_939.tape : (i == local.iter_939.tape_ptr ? local.ascii_lookup[substr(local.input_940, 0, 1)] : b)]
        : local.iter_939.tape)

    tape_ptr = (
      local.code_940[0] == "<"
        ? local.iter_939.tape_ptr - local.code_940[1] :
      local.code_940[0] == ">"
        ? local.iter_939.tape_ptr + local.code_940[1]
        : local.iter_939.tape_ptr)

    code_ptr = 2 + (
      local.code_940[0] == "["
        ? local.iter_939.tape[local.iter_939.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_939.code_ptr)] : local.iter_939.code_ptr :
      local.code_940[0] == "]"
        ? local.iter_939.tape[local.iter_939.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_939.code_ptr)] : local.iter_939.code_ptr
        : local.iter_939.code_ptr)

    steps_taken = 1 + local.iter_939.steps_taken
  }
}

locals {
  code_941 = (try(local.iter_940.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_940.code_ptr, local.iter_940.code_ptr + 2)
    : [null])

  input_941 = (local.code_941[0] == ","
    ? substr(local.input_940, local.code_941[1], -1)
    : local.input_940)

  iter_941 = try(local.iter_940.code_ptr >= length(var.code), true) ? local.iter_940 : {
    output = (local.code_941[0] == "."
      ? "${local.iter_940.output}${join("", [for _ in range(local.code_941[1]) : jsondecode(format("\"\\u%04x\"", local.iter_940.tape[local.iter_940.tape_ptr]))])}"
      : local.iter_940.output)
    
    tape = (
      local.code_941[0] == "+"
        ? [for i, b in local.iter_940.tape : (i == local.iter_940.tape_ptr ? (b + local.code_941[1]) % 256 : b)] :
      local.code_941[0] == "-"
        ? [for i, b in local.iter_940.tape : (i == local.iter_940.tape_ptr ? (b - local.code_941[1] + 256) % 256 : b)] :
      local.code_941[0] == ","
        ? [for i, b in local.iter_940.tape : (i == local.iter_940.tape_ptr ? local.ascii_lookup[substr(local.input_941, 0, 1)] : b)]
        : local.iter_940.tape)

    tape_ptr = (
      local.code_941[0] == "<"
        ? local.iter_940.tape_ptr - local.code_941[1] :
      local.code_941[0] == ">"
        ? local.iter_940.tape_ptr + local.code_941[1]
        : local.iter_940.tape_ptr)

    code_ptr = 2 + (
      local.code_941[0] == "["
        ? local.iter_940.tape[local.iter_940.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_940.code_ptr)] : local.iter_940.code_ptr :
      local.code_941[0] == "]"
        ? local.iter_940.tape[local.iter_940.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_940.code_ptr)] : local.iter_940.code_ptr
        : local.iter_940.code_ptr)

    steps_taken = 1 + local.iter_940.steps_taken
  }
}

locals {
  code_942 = (try(local.iter_941.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_941.code_ptr, local.iter_941.code_ptr + 2)
    : [null])

  input_942 = (local.code_942[0] == ","
    ? substr(local.input_941, local.code_942[1], -1)
    : local.input_941)

  iter_942 = try(local.iter_941.code_ptr >= length(var.code), true) ? local.iter_941 : {
    output = (local.code_942[0] == "."
      ? "${local.iter_941.output}${join("", [for _ in range(local.code_942[1]) : jsondecode(format("\"\\u%04x\"", local.iter_941.tape[local.iter_941.tape_ptr]))])}"
      : local.iter_941.output)
    
    tape = (
      local.code_942[0] == "+"
        ? [for i, b in local.iter_941.tape : (i == local.iter_941.tape_ptr ? (b + local.code_942[1]) % 256 : b)] :
      local.code_942[0] == "-"
        ? [for i, b in local.iter_941.tape : (i == local.iter_941.tape_ptr ? (b - local.code_942[1] + 256) % 256 : b)] :
      local.code_942[0] == ","
        ? [for i, b in local.iter_941.tape : (i == local.iter_941.tape_ptr ? local.ascii_lookup[substr(local.input_942, 0, 1)] : b)]
        : local.iter_941.tape)

    tape_ptr = (
      local.code_942[0] == "<"
        ? local.iter_941.tape_ptr - local.code_942[1] :
      local.code_942[0] == ">"
        ? local.iter_941.tape_ptr + local.code_942[1]
        : local.iter_941.tape_ptr)

    code_ptr = 2 + (
      local.code_942[0] == "["
        ? local.iter_941.tape[local.iter_941.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_941.code_ptr)] : local.iter_941.code_ptr :
      local.code_942[0] == "]"
        ? local.iter_941.tape[local.iter_941.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_941.code_ptr)] : local.iter_941.code_ptr
        : local.iter_941.code_ptr)

    steps_taken = 1 + local.iter_941.steps_taken
  }
}

locals {
  code_943 = (try(local.iter_942.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_942.code_ptr, local.iter_942.code_ptr + 2)
    : [null])

  input_943 = (local.code_943[0] == ","
    ? substr(local.input_942, local.code_943[1], -1)
    : local.input_942)

  iter_943 = try(local.iter_942.code_ptr >= length(var.code), true) ? local.iter_942 : {
    output = (local.code_943[0] == "."
      ? "${local.iter_942.output}${join("", [for _ in range(local.code_943[1]) : jsondecode(format("\"\\u%04x\"", local.iter_942.tape[local.iter_942.tape_ptr]))])}"
      : local.iter_942.output)
    
    tape = (
      local.code_943[0] == "+"
        ? [for i, b in local.iter_942.tape : (i == local.iter_942.tape_ptr ? (b + local.code_943[1]) % 256 : b)] :
      local.code_943[0] == "-"
        ? [for i, b in local.iter_942.tape : (i == local.iter_942.tape_ptr ? (b - local.code_943[1] + 256) % 256 : b)] :
      local.code_943[0] == ","
        ? [for i, b in local.iter_942.tape : (i == local.iter_942.tape_ptr ? local.ascii_lookup[substr(local.input_943, 0, 1)] : b)]
        : local.iter_942.tape)

    tape_ptr = (
      local.code_943[0] == "<"
        ? local.iter_942.tape_ptr - local.code_943[1] :
      local.code_943[0] == ">"
        ? local.iter_942.tape_ptr + local.code_943[1]
        : local.iter_942.tape_ptr)

    code_ptr = 2 + (
      local.code_943[0] == "["
        ? local.iter_942.tape[local.iter_942.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_942.code_ptr)] : local.iter_942.code_ptr :
      local.code_943[0] == "]"
        ? local.iter_942.tape[local.iter_942.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_942.code_ptr)] : local.iter_942.code_ptr
        : local.iter_942.code_ptr)

    steps_taken = 1 + local.iter_942.steps_taken
  }
}

locals {
  code_944 = (try(local.iter_943.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_943.code_ptr, local.iter_943.code_ptr + 2)
    : [null])

  input_944 = (local.code_944[0] == ","
    ? substr(local.input_943, local.code_944[1], -1)
    : local.input_943)

  iter_944 = try(local.iter_943.code_ptr >= length(var.code), true) ? local.iter_943 : {
    output = (local.code_944[0] == "."
      ? "${local.iter_943.output}${join("", [for _ in range(local.code_944[1]) : jsondecode(format("\"\\u%04x\"", local.iter_943.tape[local.iter_943.tape_ptr]))])}"
      : local.iter_943.output)
    
    tape = (
      local.code_944[0] == "+"
        ? [for i, b in local.iter_943.tape : (i == local.iter_943.tape_ptr ? (b + local.code_944[1]) % 256 : b)] :
      local.code_944[0] == "-"
        ? [for i, b in local.iter_943.tape : (i == local.iter_943.tape_ptr ? (b - local.code_944[1] + 256) % 256 : b)] :
      local.code_944[0] == ","
        ? [for i, b in local.iter_943.tape : (i == local.iter_943.tape_ptr ? local.ascii_lookup[substr(local.input_944, 0, 1)] : b)]
        : local.iter_943.tape)

    tape_ptr = (
      local.code_944[0] == "<"
        ? local.iter_943.tape_ptr - local.code_944[1] :
      local.code_944[0] == ">"
        ? local.iter_943.tape_ptr + local.code_944[1]
        : local.iter_943.tape_ptr)

    code_ptr = 2 + (
      local.code_944[0] == "["
        ? local.iter_943.tape[local.iter_943.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_943.code_ptr)] : local.iter_943.code_ptr :
      local.code_944[0] == "]"
        ? local.iter_943.tape[local.iter_943.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_943.code_ptr)] : local.iter_943.code_ptr
        : local.iter_943.code_ptr)

    steps_taken = 1 + local.iter_943.steps_taken
  }
}

locals {
  code_945 = (try(local.iter_944.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_944.code_ptr, local.iter_944.code_ptr + 2)
    : [null])

  input_945 = (local.code_945[0] == ","
    ? substr(local.input_944, local.code_945[1], -1)
    : local.input_944)

  iter_945 = try(local.iter_944.code_ptr >= length(var.code), true) ? local.iter_944 : {
    output = (local.code_945[0] == "."
      ? "${local.iter_944.output}${join("", [for _ in range(local.code_945[1]) : jsondecode(format("\"\\u%04x\"", local.iter_944.tape[local.iter_944.tape_ptr]))])}"
      : local.iter_944.output)
    
    tape = (
      local.code_945[0] == "+"
        ? [for i, b in local.iter_944.tape : (i == local.iter_944.tape_ptr ? (b + local.code_945[1]) % 256 : b)] :
      local.code_945[0] == "-"
        ? [for i, b in local.iter_944.tape : (i == local.iter_944.tape_ptr ? (b - local.code_945[1] + 256) % 256 : b)] :
      local.code_945[0] == ","
        ? [for i, b in local.iter_944.tape : (i == local.iter_944.tape_ptr ? local.ascii_lookup[substr(local.input_945, 0, 1)] : b)]
        : local.iter_944.tape)

    tape_ptr = (
      local.code_945[0] == "<"
        ? local.iter_944.tape_ptr - local.code_945[1] :
      local.code_945[0] == ">"
        ? local.iter_944.tape_ptr + local.code_945[1]
        : local.iter_944.tape_ptr)

    code_ptr = 2 + (
      local.code_945[0] == "["
        ? local.iter_944.tape[local.iter_944.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_944.code_ptr)] : local.iter_944.code_ptr :
      local.code_945[0] == "]"
        ? local.iter_944.tape[local.iter_944.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_944.code_ptr)] : local.iter_944.code_ptr
        : local.iter_944.code_ptr)

    steps_taken = 1 + local.iter_944.steps_taken
  }
}

locals {
  code_946 = (try(local.iter_945.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_945.code_ptr, local.iter_945.code_ptr + 2)
    : [null])

  input_946 = (local.code_946[0] == ","
    ? substr(local.input_945, local.code_946[1], -1)
    : local.input_945)

  iter_946 = try(local.iter_945.code_ptr >= length(var.code), true) ? local.iter_945 : {
    output = (local.code_946[0] == "."
      ? "${local.iter_945.output}${join("", [for _ in range(local.code_946[1]) : jsondecode(format("\"\\u%04x\"", local.iter_945.tape[local.iter_945.tape_ptr]))])}"
      : local.iter_945.output)
    
    tape = (
      local.code_946[0] == "+"
        ? [for i, b in local.iter_945.tape : (i == local.iter_945.tape_ptr ? (b + local.code_946[1]) % 256 : b)] :
      local.code_946[0] == "-"
        ? [for i, b in local.iter_945.tape : (i == local.iter_945.tape_ptr ? (b - local.code_946[1] + 256) % 256 : b)] :
      local.code_946[0] == ","
        ? [for i, b in local.iter_945.tape : (i == local.iter_945.tape_ptr ? local.ascii_lookup[substr(local.input_946, 0, 1)] : b)]
        : local.iter_945.tape)

    tape_ptr = (
      local.code_946[0] == "<"
        ? local.iter_945.tape_ptr - local.code_946[1] :
      local.code_946[0] == ">"
        ? local.iter_945.tape_ptr + local.code_946[1]
        : local.iter_945.tape_ptr)

    code_ptr = 2 + (
      local.code_946[0] == "["
        ? local.iter_945.tape[local.iter_945.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_945.code_ptr)] : local.iter_945.code_ptr :
      local.code_946[0] == "]"
        ? local.iter_945.tape[local.iter_945.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_945.code_ptr)] : local.iter_945.code_ptr
        : local.iter_945.code_ptr)

    steps_taken = 1 + local.iter_945.steps_taken
  }
}

locals {
  code_947 = (try(local.iter_946.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_946.code_ptr, local.iter_946.code_ptr + 2)
    : [null])

  input_947 = (local.code_947[0] == ","
    ? substr(local.input_946, local.code_947[1], -1)
    : local.input_946)

  iter_947 = try(local.iter_946.code_ptr >= length(var.code), true) ? local.iter_946 : {
    output = (local.code_947[0] == "."
      ? "${local.iter_946.output}${join("", [for _ in range(local.code_947[1]) : jsondecode(format("\"\\u%04x\"", local.iter_946.tape[local.iter_946.tape_ptr]))])}"
      : local.iter_946.output)
    
    tape = (
      local.code_947[0] == "+"
        ? [for i, b in local.iter_946.tape : (i == local.iter_946.tape_ptr ? (b + local.code_947[1]) % 256 : b)] :
      local.code_947[0] == "-"
        ? [for i, b in local.iter_946.tape : (i == local.iter_946.tape_ptr ? (b - local.code_947[1] + 256) % 256 : b)] :
      local.code_947[0] == ","
        ? [for i, b in local.iter_946.tape : (i == local.iter_946.tape_ptr ? local.ascii_lookup[substr(local.input_947, 0, 1)] : b)]
        : local.iter_946.tape)

    tape_ptr = (
      local.code_947[0] == "<"
        ? local.iter_946.tape_ptr - local.code_947[1] :
      local.code_947[0] == ">"
        ? local.iter_946.tape_ptr + local.code_947[1]
        : local.iter_946.tape_ptr)

    code_ptr = 2 + (
      local.code_947[0] == "["
        ? local.iter_946.tape[local.iter_946.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_946.code_ptr)] : local.iter_946.code_ptr :
      local.code_947[0] == "]"
        ? local.iter_946.tape[local.iter_946.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_946.code_ptr)] : local.iter_946.code_ptr
        : local.iter_946.code_ptr)

    steps_taken = 1 + local.iter_946.steps_taken
  }
}

locals {
  code_948 = (try(local.iter_947.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_947.code_ptr, local.iter_947.code_ptr + 2)
    : [null])

  input_948 = (local.code_948[0] == ","
    ? substr(local.input_947, local.code_948[1], -1)
    : local.input_947)

  iter_948 = try(local.iter_947.code_ptr >= length(var.code), true) ? local.iter_947 : {
    output = (local.code_948[0] == "."
      ? "${local.iter_947.output}${join("", [for _ in range(local.code_948[1]) : jsondecode(format("\"\\u%04x\"", local.iter_947.tape[local.iter_947.tape_ptr]))])}"
      : local.iter_947.output)
    
    tape = (
      local.code_948[0] == "+"
        ? [for i, b in local.iter_947.tape : (i == local.iter_947.tape_ptr ? (b + local.code_948[1]) % 256 : b)] :
      local.code_948[0] == "-"
        ? [for i, b in local.iter_947.tape : (i == local.iter_947.tape_ptr ? (b - local.code_948[1] + 256) % 256 : b)] :
      local.code_948[0] == ","
        ? [for i, b in local.iter_947.tape : (i == local.iter_947.tape_ptr ? local.ascii_lookup[substr(local.input_948, 0, 1)] : b)]
        : local.iter_947.tape)

    tape_ptr = (
      local.code_948[0] == "<"
        ? local.iter_947.tape_ptr - local.code_948[1] :
      local.code_948[0] == ">"
        ? local.iter_947.tape_ptr + local.code_948[1]
        : local.iter_947.tape_ptr)

    code_ptr = 2 + (
      local.code_948[0] == "["
        ? local.iter_947.tape[local.iter_947.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_947.code_ptr)] : local.iter_947.code_ptr :
      local.code_948[0] == "]"
        ? local.iter_947.tape[local.iter_947.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_947.code_ptr)] : local.iter_947.code_ptr
        : local.iter_947.code_ptr)

    steps_taken = 1 + local.iter_947.steps_taken
  }
}

locals {
  code_949 = (try(local.iter_948.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_948.code_ptr, local.iter_948.code_ptr + 2)
    : [null])

  input_949 = (local.code_949[0] == ","
    ? substr(local.input_948, local.code_949[1], -1)
    : local.input_948)

  iter_949 = try(local.iter_948.code_ptr >= length(var.code), true) ? local.iter_948 : {
    output = (local.code_949[0] == "."
      ? "${local.iter_948.output}${join("", [for _ in range(local.code_949[1]) : jsondecode(format("\"\\u%04x\"", local.iter_948.tape[local.iter_948.tape_ptr]))])}"
      : local.iter_948.output)
    
    tape = (
      local.code_949[0] == "+"
        ? [for i, b in local.iter_948.tape : (i == local.iter_948.tape_ptr ? (b + local.code_949[1]) % 256 : b)] :
      local.code_949[0] == "-"
        ? [for i, b in local.iter_948.tape : (i == local.iter_948.tape_ptr ? (b - local.code_949[1] + 256) % 256 : b)] :
      local.code_949[0] == ","
        ? [for i, b in local.iter_948.tape : (i == local.iter_948.tape_ptr ? local.ascii_lookup[substr(local.input_949, 0, 1)] : b)]
        : local.iter_948.tape)

    tape_ptr = (
      local.code_949[0] == "<"
        ? local.iter_948.tape_ptr - local.code_949[1] :
      local.code_949[0] == ">"
        ? local.iter_948.tape_ptr + local.code_949[1]
        : local.iter_948.tape_ptr)

    code_ptr = 2 + (
      local.code_949[0] == "["
        ? local.iter_948.tape[local.iter_948.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_948.code_ptr)] : local.iter_948.code_ptr :
      local.code_949[0] == "]"
        ? local.iter_948.tape[local.iter_948.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_948.code_ptr)] : local.iter_948.code_ptr
        : local.iter_948.code_ptr)

    steps_taken = 1 + local.iter_948.steps_taken
  }
}

locals {
  code_950 = (try(local.iter_949.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_949.code_ptr, local.iter_949.code_ptr + 2)
    : [null])

  input_950 = (local.code_950[0] == ","
    ? substr(local.input_949, local.code_950[1], -1)
    : local.input_949)

  iter_950 = try(local.iter_949.code_ptr >= length(var.code), true) ? local.iter_949 : {
    output = (local.code_950[0] == "."
      ? "${local.iter_949.output}${join("", [for _ in range(local.code_950[1]) : jsondecode(format("\"\\u%04x\"", local.iter_949.tape[local.iter_949.tape_ptr]))])}"
      : local.iter_949.output)
    
    tape = (
      local.code_950[0] == "+"
        ? [for i, b in local.iter_949.tape : (i == local.iter_949.tape_ptr ? (b + local.code_950[1]) % 256 : b)] :
      local.code_950[0] == "-"
        ? [for i, b in local.iter_949.tape : (i == local.iter_949.tape_ptr ? (b - local.code_950[1] + 256) % 256 : b)] :
      local.code_950[0] == ","
        ? [for i, b in local.iter_949.tape : (i == local.iter_949.tape_ptr ? local.ascii_lookup[substr(local.input_950, 0, 1)] : b)]
        : local.iter_949.tape)

    tape_ptr = (
      local.code_950[0] == "<"
        ? local.iter_949.tape_ptr - local.code_950[1] :
      local.code_950[0] == ">"
        ? local.iter_949.tape_ptr + local.code_950[1]
        : local.iter_949.tape_ptr)

    code_ptr = 2 + (
      local.code_950[0] == "["
        ? local.iter_949.tape[local.iter_949.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_949.code_ptr)] : local.iter_949.code_ptr :
      local.code_950[0] == "]"
        ? local.iter_949.tape[local.iter_949.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_949.code_ptr)] : local.iter_949.code_ptr
        : local.iter_949.code_ptr)

    steps_taken = 1 + local.iter_949.steps_taken
  }
}

locals {
  code_951 = (try(local.iter_950.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_950.code_ptr, local.iter_950.code_ptr + 2)
    : [null])

  input_951 = (local.code_951[0] == ","
    ? substr(local.input_950, local.code_951[1], -1)
    : local.input_950)

  iter_951 = try(local.iter_950.code_ptr >= length(var.code), true) ? local.iter_950 : {
    output = (local.code_951[0] == "."
      ? "${local.iter_950.output}${join("", [for _ in range(local.code_951[1]) : jsondecode(format("\"\\u%04x\"", local.iter_950.tape[local.iter_950.tape_ptr]))])}"
      : local.iter_950.output)
    
    tape = (
      local.code_951[0] == "+"
        ? [for i, b in local.iter_950.tape : (i == local.iter_950.tape_ptr ? (b + local.code_951[1]) % 256 : b)] :
      local.code_951[0] == "-"
        ? [for i, b in local.iter_950.tape : (i == local.iter_950.tape_ptr ? (b - local.code_951[1] + 256) % 256 : b)] :
      local.code_951[0] == ","
        ? [for i, b in local.iter_950.tape : (i == local.iter_950.tape_ptr ? local.ascii_lookup[substr(local.input_951, 0, 1)] : b)]
        : local.iter_950.tape)

    tape_ptr = (
      local.code_951[0] == "<"
        ? local.iter_950.tape_ptr - local.code_951[1] :
      local.code_951[0] == ">"
        ? local.iter_950.tape_ptr + local.code_951[1]
        : local.iter_950.tape_ptr)

    code_ptr = 2 + (
      local.code_951[0] == "["
        ? local.iter_950.tape[local.iter_950.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_950.code_ptr)] : local.iter_950.code_ptr :
      local.code_951[0] == "]"
        ? local.iter_950.tape[local.iter_950.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_950.code_ptr)] : local.iter_950.code_ptr
        : local.iter_950.code_ptr)

    steps_taken = 1 + local.iter_950.steps_taken
  }
}

locals {
  code_952 = (try(local.iter_951.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_951.code_ptr, local.iter_951.code_ptr + 2)
    : [null])

  input_952 = (local.code_952[0] == ","
    ? substr(local.input_951, local.code_952[1], -1)
    : local.input_951)

  iter_952 = try(local.iter_951.code_ptr >= length(var.code), true) ? local.iter_951 : {
    output = (local.code_952[0] == "."
      ? "${local.iter_951.output}${join("", [for _ in range(local.code_952[1]) : jsondecode(format("\"\\u%04x\"", local.iter_951.tape[local.iter_951.tape_ptr]))])}"
      : local.iter_951.output)
    
    tape = (
      local.code_952[0] == "+"
        ? [for i, b in local.iter_951.tape : (i == local.iter_951.tape_ptr ? (b + local.code_952[1]) % 256 : b)] :
      local.code_952[0] == "-"
        ? [for i, b in local.iter_951.tape : (i == local.iter_951.tape_ptr ? (b - local.code_952[1] + 256) % 256 : b)] :
      local.code_952[0] == ","
        ? [for i, b in local.iter_951.tape : (i == local.iter_951.tape_ptr ? local.ascii_lookup[substr(local.input_952, 0, 1)] : b)]
        : local.iter_951.tape)

    tape_ptr = (
      local.code_952[0] == "<"
        ? local.iter_951.tape_ptr - local.code_952[1] :
      local.code_952[0] == ">"
        ? local.iter_951.tape_ptr + local.code_952[1]
        : local.iter_951.tape_ptr)

    code_ptr = 2 + (
      local.code_952[0] == "["
        ? local.iter_951.tape[local.iter_951.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_951.code_ptr)] : local.iter_951.code_ptr :
      local.code_952[0] == "]"
        ? local.iter_951.tape[local.iter_951.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_951.code_ptr)] : local.iter_951.code_ptr
        : local.iter_951.code_ptr)

    steps_taken = 1 + local.iter_951.steps_taken
  }
}

locals {
  code_953 = (try(local.iter_952.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_952.code_ptr, local.iter_952.code_ptr + 2)
    : [null])

  input_953 = (local.code_953[0] == ","
    ? substr(local.input_952, local.code_953[1], -1)
    : local.input_952)

  iter_953 = try(local.iter_952.code_ptr >= length(var.code), true) ? local.iter_952 : {
    output = (local.code_953[0] == "."
      ? "${local.iter_952.output}${join("", [for _ in range(local.code_953[1]) : jsondecode(format("\"\\u%04x\"", local.iter_952.tape[local.iter_952.tape_ptr]))])}"
      : local.iter_952.output)
    
    tape = (
      local.code_953[0] == "+"
        ? [for i, b in local.iter_952.tape : (i == local.iter_952.tape_ptr ? (b + local.code_953[1]) % 256 : b)] :
      local.code_953[0] == "-"
        ? [for i, b in local.iter_952.tape : (i == local.iter_952.tape_ptr ? (b - local.code_953[1] + 256) % 256 : b)] :
      local.code_953[0] == ","
        ? [for i, b in local.iter_952.tape : (i == local.iter_952.tape_ptr ? local.ascii_lookup[substr(local.input_953, 0, 1)] : b)]
        : local.iter_952.tape)

    tape_ptr = (
      local.code_953[0] == "<"
        ? local.iter_952.tape_ptr - local.code_953[1] :
      local.code_953[0] == ">"
        ? local.iter_952.tape_ptr + local.code_953[1]
        : local.iter_952.tape_ptr)

    code_ptr = 2 + (
      local.code_953[0] == "["
        ? local.iter_952.tape[local.iter_952.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_952.code_ptr)] : local.iter_952.code_ptr :
      local.code_953[0] == "]"
        ? local.iter_952.tape[local.iter_952.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_952.code_ptr)] : local.iter_952.code_ptr
        : local.iter_952.code_ptr)

    steps_taken = 1 + local.iter_952.steps_taken
  }
}

locals {
  code_954 = (try(local.iter_953.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_953.code_ptr, local.iter_953.code_ptr + 2)
    : [null])

  input_954 = (local.code_954[0] == ","
    ? substr(local.input_953, local.code_954[1], -1)
    : local.input_953)

  iter_954 = try(local.iter_953.code_ptr >= length(var.code), true) ? local.iter_953 : {
    output = (local.code_954[0] == "."
      ? "${local.iter_953.output}${join("", [for _ in range(local.code_954[1]) : jsondecode(format("\"\\u%04x\"", local.iter_953.tape[local.iter_953.tape_ptr]))])}"
      : local.iter_953.output)
    
    tape = (
      local.code_954[0] == "+"
        ? [for i, b in local.iter_953.tape : (i == local.iter_953.tape_ptr ? (b + local.code_954[1]) % 256 : b)] :
      local.code_954[0] == "-"
        ? [for i, b in local.iter_953.tape : (i == local.iter_953.tape_ptr ? (b - local.code_954[1] + 256) % 256 : b)] :
      local.code_954[0] == ","
        ? [for i, b in local.iter_953.tape : (i == local.iter_953.tape_ptr ? local.ascii_lookup[substr(local.input_954, 0, 1)] : b)]
        : local.iter_953.tape)

    tape_ptr = (
      local.code_954[0] == "<"
        ? local.iter_953.tape_ptr - local.code_954[1] :
      local.code_954[0] == ">"
        ? local.iter_953.tape_ptr + local.code_954[1]
        : local.iter_953.tape_ptr)

    code_ptr = 2 + (
      local.code_954[0] == "["
        ? local.iter_953.tape[local.iter_953.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_953.code_ptr)] : local.iter_953.code_ptr :
      local.code_954[0] == "]"
        ? local.iter_953.tape[local.iter_953.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_953.code_ptr)] : local.iter_953.code_ptr
        : local.iter_953.code_ptr)

    steps_taken = 1 + local.iter_953.steps_taken
  }
}

locals {
  code_955 = (try(local.iter_954.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_954.code_ptr, local.iter_954.code_ptr + 2)
    : [null])

  input_955 = (local.code_955[0] == ","
    ? substr(local.input_954, local.code_955[1], -1)
    : local.input_954)

  iter_955 = try(local.iter_954.code_ptr >= length(var.code), true) ? local.iter_954 : {
    output = (local.code_955[0] == "."
      ? "${local.iter_954.output}${join("", [for _ in range(local.code_955[1]) : jsondecode(format("\"\\u%04x\"", local.iter_954.tape[local.iter_954.tape_ptr]))])}"
      : local.iter_954.output)
    
    tape = (
      local.code_955[0] == "+"
        ? [for i, b in local.iter_954.tape : (i == local.iter_954.tape_ptr ? (b + local.code_955[1]) % 256 : b)] :
      local.code_955[0] == "-"
        ? [for i, b in local.iter_954.tape : (i == local.iter_954.tape_ptr ? (b - local.code_955[1] + 256) % 256 : b)] :
      local.code_955[0] == ","
        ? [for i, b in local.iter_954.tape : (i == local.iter_954.tape_ptr ? local.ascii_lookup[substr(local.input_955, 0, 1)] : b)]
        : local.iter_954.tape)

    tape_ptr = (
      local.code_955[0] == "<"
        ? local.iter_954.tape_ptr - local.code_955[1] :
      local.code_955[0] == ">"
        ? local.iter_954.tape_ptr + local.code_955[1]
        : local.iter_954.tape_ptr)

    code_ptr = 2 + (
      local.code_955[0] == "["
        ? local.iter_954.tape[local.iter_954.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_954.code_ptr)] : local.iter_954.code_ptr :
      local.code_955[0] == "]"
        ? local.iter_954.tape[local.iter_954.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_954.code_ptr)] : local.iter_954.code_ptr
        : local.iter_954.code_ptr)

    steps_taken = 1 + local.iter_954.steps_taken
  }
}

locals {
  code_956 = (try(local.iter_955.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_955.code_ptr, local.iter_955.code_ptr + 2)
    : [null])

  input_956 = (local.code_956[0] == ","
    ? substr(local.input_955, local.code_956[1], -1)
    : local.input_955)

  iter_956 = try(local.iter_955.code_ptr >= length(var.code), true) ? local.iter_955 : {
    output = (local.code_956[0] == "."
      ? "${local.iter_955.output}${join("", [for _ in range(local.code_956[1]) : jsondecode(format("\"\\u%04x\"", local.iter_955.tape[local.iter_955.tape_ptr]))])}"
      : local.iter_955.output)
    
    tape = (
      local.code_956[0] == "+"
        ? [for i, b in local.iter_955.tape : (i == local.iter_955.tape_ptr ? (b + local.code_956[1]) % 256 : b)] :
      local.code_956[0] == "-"
        ? [for i, b in local.iter_955.tape : (i == local.iter_955.tape_ptr ? (b - local.code_956[1] + 256) % 256 : b)] :
      local.code_956[0] == ","
        ? [for i, b in local.iter_955.tape : (i == local.iter_955.tape_ptr ? local.ascii_lookup[substr(local.input_956, 0, 1)] : b)]
        : local.iter_955.tape)

    tape_ptr = (
      local.code_956[0] == "<"
        ? local.iter_955.tape_ptr - local.code_956[1] :
      local.code_956[0] == ">"
        ? local.iter_955.tape_ptr + local.code_956[1]
        : local.iter_955.tape_ptr)

    code_ptr = 2 + (
      local.code_956[0] == "["
        ? local.iter_955.tape[local.iter_955.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_955.code_ptr)] : local.iter_955.code_ptr :
      local.code_956[0] == "]"
        ? local.iter_955.tape[local.iter_955.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_955.code_ptr)] : local.iter_955.code_ptr
        : local.iter_955.code_ptr)

    steps_taken = 1 + local.iter_955.steps_taken
  }
}

locals {
  code_957 = (try(local.iter_956.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_956.code_ptr, local.iter_956.code_ptr + 2)
    : [null])

  input_957 = (local.code_957[0] == ","
    ? substr(local.input_956, local.code_957[1], -1)
    : local.input_956)

  iter_957 = try(local.iter_956.code_ptr >= length(var.code), true) ? local.iter_956 : {
    output = (local.code_957[0] == "."
      ? "${local.iter_956.output}${join("", [for _ in range(local.code_957[1]) : jsondecode(format("\"\\u%04x\"", local.iter_956.tape[local.iter_956.tape_ptr]))])}"
      : local.iter_956.output)
    
    tape = (
      local.code_957[0] == "+"
        ? [for i, b in local.iter_956.tape : (i == local.iter_956.tape_ptr ? (b + local.code_957[1]) % 256 : b)] :
      local.code_957[0] == "-"
        ? [for i, b in local.iter_956.tape : (i == local.iter_956.tape_ptr ? (b - local.code_957[1] + 256) % 256 : b)] :
      local.code_957[0] == ","
        ? [for i, b in local.iter_956.tape : (i == local.iter_956.tape_ptr ? local.ascii_lookup[substr(local.input_957, 0, 1)] : b)]
        : local.iter_956.tape)

    tape_ptr = (
      local.code_957[0] == "<"
        ? local.iter_956.tape_ptr - local.code_957[1] :
      local.code_957[0] == ">"
        ? local.iter_956.tape_ptr + local.code_957[1]
        : local.iter_956.tape_ptr)

    code_ptr = 2 + (
      local.code_957[0] == "["
        ? local.iter_956.tape[local.iter_956.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_956.code_ptr)] : local.iter_956.code_ptr :
      local.code_957[0] == "]"
        ? local.iter_956.tape[local.iter_956.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_956.code_ptr)] : local.iter_956.code_ptr
        : local.iter_956.code_ptr)

    steps_taken = 1 + local.iter_956.steps_taken
  }
}

locals {
  code_958 = (try(local.iter_957.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_957.code_ptr, local.iter_957.code_ptr + 2)
    : [null])

  input_958 = (local.code_958[0] == ","
    ? substr(local.input_957, local.code_958[1], -1)
    : local.input_957)

  iter_958 = try(local.iter_957.code_ptr >= length(var.code), true) ? local.iter_957 : {
    output = (local.code_958[0] == "."
      ? "${local.iter_957.output}${join("", [for _ in range(local.code_958[1]) : jsondecode(format("\"\\u%04x\"", local.iter_957.tape[local.iter_957.tape_ptr]))])}"
      : local.iter_957.output)
    
    tape = (
      local.code_958[0] == "+"
        ? [for i, b in local.iter_957.tape : (i == local.iter_957.tape_ptr ? (b + local.code_958[1]) % 256 : b)] :
      local.code_958[0] == "-"
        ? [for i, b in local.iter_957.tape : (i == local.iter_957.tape_ptr ? (b - local.code_958[1] + 256) % 256 : b)] :
      local.code_958[0] == ","
        ? [for i, b in local.iter_957.tape : (i == local.iter_957.tape_ptr ? local.ascii_lookup[substr(local.input_958, 0, 1)] : b)]
        : local.iter_957.tape)

    tape_ptr = (
      local.code_958[0] == "<"
        ? local.iter_957.tape_ptr - local.code_958[1] :
      local.code_958[0] == ">"
        ? local.iter_957.tape_ptr + local.code_958[1]
        : local.iter_957.tape_ptr)

    code_ptr = 2 + (
      local.code_958[0] == "["
        ? local.iter_957.tape[local.iter_957.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_957.code_ptr)] : local.iter_957.code_ptr :
      local.code_958[0] == "]"
        ? local.iter_957.tape[local.iter_957.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_957.code_ptr)] : local.iter_957.code_ptr
        : local.iter_957.code_ptr)

    steps_taken = 1 + local.iter_957.steps_taken
  }
}

locals {
  code_959 = (try(local.iter_958.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_958.code_ptr, local.iter_958.code_ptr + 2)
    : [null])

  input_959 = (local.code_959[0] == ","
    ? substr(local.input_958, local.code_959[1], -1)
    : local.input_958)

  iter_959 = try(local.iter_958.code_ptr >= length(var.code), true) ? local.iter_958 : {
    output = (local.code_959[0] == "."
      ? "${local.iter_958.output}${join("", [for _ in range(local.code_959[1]) : jsondecode(format("\"\\u%04x\"", local.iter_958.tape[local.iter_958.tape_ptr]))])}"
      : local.iter_958.output)
    
    tape = (
      local.code_959[0] == "+"
        ? [for i, b in local.iter_958.tape : (i == local.iter_958.tape_ptr ? (b + local.code_959[1]) % 256 : b)] :
      local.code_959[0] == "-"
        ? [for i, b in local.iter_958.tape : (i == local.iter_958.tape_ptr ? (b - local.code_959[1] + 256) % 256 : b)] :
      local.code_959[0] == ","
        ? [for i, b in local.iter_958.tape : (i == local.iter_958.tape_ptr ? local.ascii_lookup[substr(local.input_959, 0, 1)] : b)]
        : local.iter_958.tape)

    tape_ptr = (
      local.code_959[0] == "<"
        ? local.iter_958.tape_ptr - local.code_959[1] :
      local.code_959[0] == ">"
        ? local.iter_958.tape_ptr + local.code_959[1]
        : local.iter_958.tape_ptr)

    code_ptr = 2 + (
      local.code_959[0] == "["
        ? local.iter_958.tape[local.iter_958.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_958.code_ptr)] : local.iter_958.code_ptr :
      local.code_959[0] == "]"
        ? local.iter_958.tape[local.iter_958.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_958.code_ptr)] : local.iter_958.code_ptr
        : local.iter_958.code_ptr)

    steps_taken = 1 + local.iter_958.steps_taken
  }
}

locals {
  code_960 = (try(local.iter_959.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_959.code_ptr, local.iter_959.code_ptr + 2)
    : [null])

  input_960 = (local.code_960[0] == ","
    ? substr(local.input_959, local.code_960[1], -1)
    : local.input_959)

  iter_960 = try(local.iter_959.code_ptr >= length(var.code), true) ? local.iter_959 : {
    output = (local.code_960[0] == "."
      ? "${local.iter_959.output}${join("", [for _ in range(local.code_960[1]) : jsondecode(format("\"\\u%04x\"", local.iter_959.tape[local.iter_959.tape_ptr]))])}"
      : local.iter_959.output)
    
    tape = (
      local.code_960[0] == "+"
        ? [for i, b in local.iter_959.tape : (i == local.iter_959.tape_ptr ? (b + local.code_960[1]) % 256 : b)] :
      local.code_960[0] == "-"
        ? [for i, b in local.iter_959.tape : (i == local.iter_959.tape_ptr ? (b - local.code_960[1] + 256) % 256 : b)] :
      local.code_960[0] == ","
        ? [for i, b in local.iter_959.tape : (i == local.iter_959.tape_ptr ? local.ascii_lookup[substr(local.input_960, 0, 1)] : b)]
        : local.iter_959.tape)

    tape_ptr = (
      local.code_960[0] == "<"
        ? local.iter_959.tape_ptr - local.code_960[1] :
      local.code_960[0] == ">"
        ? local.iter_959.tape_ptr + local.code_960[1]
        : local.iter_959.tape_ptr)

    code_ptr = 2 + (
      local.code_960[0] == "["
        ? local.iter_959.tape[local.iter_959.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_959.code_ptr)] : local.iter_959.code_ptr :
      local.code_960[0] == "]"
        ? local.iter_959.tape[local.iter_959.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_959.code_ptr)] : local.iter_959.code_ptr
        : local.iter_959.code_ptr)

    steps_taken = 1 + local.iter_959.steps_taken
  }
}

locals {
  code_961 = (try(local.iter_960.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_960.code_ptr, local.iter_960.code_ptr + 2)
    : [null])

  input_961 = (local.code_961[0] == ","
    ? substr(local.input_960, local.code_961[1], -1)
    : local.input_960)

  iter_961 = try(local.iter_960.code_ptr >= length(var.code), true) ? local.iter_960 : {
    output = (local.code_961[0] == "."
      ? "${local.iter_960.output}${join("", [for _ in range(local.code_961[1]) : jsondecode(format("\"\\u%04x\"", local.iter_960.tape[local.iter_960.tape_ptr]))])}"
      : local.iter_960.output)
    
    tape = (
      local.code_961[0] == "+"
        ? [for i, b in local.iter_960.tape : (i == local.iter_960.tape_ptr ? (b + local.code_961[1]) % 256 : b)] :
      local.code_961[0] == "-"
        ? [for i, b in local.iter_960.tape : (i == local.iter_960.tape_ptr ? (b - local.code_961[1] + 256) % 256 : b)] :
      local.code_961[0] == ","
        ? [for i, b in local.iter_960.tape : (i == local.iter_960.tape_ptr ? local.ascii_lookup[substr(local.input_961, 0, 1)] : b)]
        : local.iter_960.tape)

    tape_ptr = (
      local.code_961[0] == "<"
        ? local.iter_960.tape_ptr - local.code_961[1] :
      local.code_961[0] == ">"
        ? local.iter_960.tape_ptr + local.code_961[1]
        : local.iter_960.tape_ptr)

    code_ptr = 2 + (
      local.code_961[0] == "["
        ? local.iter_960.tape[local.iter_960.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_960.code_ptr)] : local.iter_960.code_ptr :
      local.code_961[0] == "]"
        ? local.iter_960.tape[local.iter_960.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_960.code_ptr)] : local.iter_960.code_ptr
        : local.iter_960.code_ptr)

    steps_taken = 1 + local.iter_960.steps_taken
  }
}

locals {
  code_962 = (try(local.iter_961.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_961.code_ptr, local.iter_961.code_ptr + 2)
    : [null])

  input_962 = (local.code_962[0] == ","
    ? substr(local.input_961, local.code_962[1], -1)
    : local.input_961)

  iter_962 = try(local.iter_961.code_ptr >= length(var.code), true) ? local.iter_961 : {
    output = (local.code_962[0] == "."
      ? "${local.iter_961.output}${join("", [for _ in range(local.code_962[1]) : jsondecode(format("\"\\u%04x\"", local.iter_961.tape[local.iter_961.tape_ptr]))])}"
      : local.iter_961.output)
    
    tape = (
      local.code_962[0] == "+"
        ? [for i, b in local.iter_961.tape : (i == local.iter_961.tape_ptr ? (b + local.code_962[1]) % 256 : b)] :
      local.code_962[0] == "-"
        ? [for i, b in local.iter_961.tape : (i == local.iter_961.tape_ptr ? (b - local.code_962[1] + 256) % 256 : b)] :
      local.code_962[0] == ","
        ? [for i, b in local.iter_961.tape : (i == local.iter_961.tape_ptr ? local.ascii_lookup[substr(local.input_962, 0, 1)] : b)]
        : local.iter_961.tape)

    tape_ptr = (
      local.code_962[0] == "<"
        ? local.iter_961.tape_ptr - local.code_962[1] :
      local.code_962[0] == ">"
        ? local.iter_961.tape_ptr + local.code_962[1]
        : local.iter_961.tape_ptr)

    code_ptr = 2 + (
      local.code_962[0] == "["
        ? local.iter_961.tape[local.iter_961.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_961.code_ptr)] : local.iter_961.code_ptr :
      local.code_962[0] == "]"
        ? local.iter_961.tape[local.iter_961.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_961.code_ptr)] : local.iter_961.code_ptr
        : local.iter_961.code_ptr)

    steps_taken = 1 + local.iter_961.steps_taken
  }
}

locals {
  code_963 = (try(local.iter_962.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_962.code_ptr, local.iter_962.code_ptr + 2)
    : [null])

  input_963 = (local.code_963[0] == ","
    ? substr(local.input_962, local.code_963[1], -1)
    : local.input_962)

  iter_963 = try(local.iter_962.code_ptr >= length(var.code), true) ? local.iter_962 : {
    output = (local.code_963[0] == "."
      ? "${local.iter_962.output}${join("", [for _ in range(local.code_963[1]) : jsondecode(format("\"\\u%04x\"", local.iter_962.tape[local.iter_962.tape_ptr]))])}"
      : local.iter_962.output)
    
    tape = (
      local.code_963[0] == "+"
        ? [for i, b in local.iter_962.tape : (i == local.iter_962.tape_ptr ? (b + local.code_963[1]) % 256 : b)] :
      local.code_963[0] == "-"
        ? [for i, b in local.iter_962.tape : (i == local.iter_962.tape_ptr ? (b - local.code_963[1] + 256) % 256 : b)] :
      local.code_963[0] == ","
        ? [for i, b in local.iter_962.tape : (i == local.iter_962.tape_ptr ? local.ascii_lookup[substr(local.input_963, 0, 1)] : b)]
        : local.iter_962.tape)

    tape_ptr = (
      local.code_963[0] == "<"
        ? local.iter_962.tape_ptr - local.code_963[1] :
      local.code_963[0] == ">"
        ? local.iter_962.tape_ptr + local.code_963[1]
        : local.iter_962.tape_ptr)

    code_ptr = 2 + (
      local.code_963[0] == "["
        ? local.iter_962.tape[local.iter_962.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_962.code_ptr)] : local.iter_962.code_ptr :
      local.code_963[0] == "]"
        ? local.iter_962.tape[local.iter_962.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_962.code_ptr)] : local.iter_962.code_ptr
        : local.iter_962.code_ptr)

    steps_taken = 1 + local.iter_962.steps_taken
  }
}

locals {
  code_964 = (try(local.iter_963.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_963.code_ptr, local.iter_963.code_ptr + 2)
    : [null])

  input_964 = (local.code_964[0] == ","
    ? substr(local.input_963, local.code_964[1], -1)
    : local.input_963)

  iter_964 = try(local.iter_963.code_ptr >= length(var.code), true) ? local.iter_963 : {
    output = (local.code_964[0] == "."
      ? "${local.iter_963.output}${join("", [for _ in range(local.code_964[1]) : jsondecode(format("\"\\u%04x\"", local.iter_963.tape[local.iter_963.tape_ptr]))])}"
      : local.iter_963.output)
    
    tape = (
      local.code_964[0] == "+"
        ? [for i, b in local.iter_963.tape : (i == local.iter_963.tape_ptr ? (b + local.code_964[1]) % 256 : b)] :
      local.code_964[0] == "-"
        ? [for i, b in local.iter_963.tape : (i == local.iter_963.tape_ptr ? (b - local.code_964[1] + 256) % 256 : b)] :
      local.code_964[0] == ","
        ? [for i, b in local.iter_963.tape : (i == local.iter_963.tape_ptr ? local.ascii_lookup[substr(local.input_964, 0, 1)] : b)]
        : local.iter_963.tape)

    tape_ptr = (
      local.code_964[0] == "<"
        ? local.iter_963.tape_ptr - local.code_964[1] :
      local.code_964[0] == ">"
        ? local.iter_963.tape_ptr + local.code_964[1]
        : local.iter_963.tape_ptr)

    code_ptr = 2 + (
      local.code_964[0] == "["
        ? local.iter_963.tape[local.iter_963.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_963.code_ptr)] : local.iter_963.code_ptr :
      local.code_964[0] == "]"
        ? local.iter_963.tape[local.iter_963.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_963.code_ptr)] : local.iter_963.code_ptr
        : local.iter_963.code_ptr)

    steps_taken = 1 + local.iter_963.steps_taken
  }
}

locals {
  code_965 = (try(local.iter_964.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_964.code_ptr, local.iter_964.code_ptr + 2)
    : [null])

  input_965 = (local.code_965[0] == ","
    ? substr(local.input_964, local.code_965[1], -1)
    : local.input_964)

  iter_965 = try(local.iter_964.code_ptr >= length(var.code), true) ? local.iter_964 : {
    output = (local.code_965[0] == "."
      ? "${local.iter_964.output}${join("", [for _ in range(local.code_965[1]) : jsondecode(format("\"\\u%04x\"", local.iter_964.tape[local.iter_964.tape_ptr]))])}"
      : local.iter_964.output)
    
    tape = (
      local.code_965[0] == "+"
        ? [for i, b in local.iter_964.tape : (i == local.iter_964.tape_ptr ? (b + local.code_965[1]) % 256 : b)] :
      local.code_965[0] == "-"
        ? [for i, b in local.iter_964.tape : (i == local.iter_964.tape_ptr ? (b - local.code_965[1] + 256) % 256 : b)] :
      local.code_965[0] == ","
        ? [for i, b in local.iter_964.tape : (i == local.iter_964.tape_ptr ? local.ascii_lookup[substr(local.input_965, 0, 1)] : b)]
        : local.iter_964.tape)

    tape_ptr = (
      local.code_965[0] == "<"
        ? local.iter_964.tape_ptr - local.code_965[1] :
      local.code_965[0] == ">"
        ? local.iter_964.tape_ptr + local.code_965[1]
        : local.iter_964.tape_ptr)

    code_ptr = 2 + (
      local.code_965[0] == "["
        ? local.iter_964.tape[local.iter_964.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_964.code_ptr)] : local.iter_964.code_ptr :
      local.code_965[0] == "]"
        ? local.iter_964.tape[local.iter_964.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_964.code_ptr)] : local.iter_964.code_ptr
        : local.iter_964.code_ptr)

    steps_taken = 1 + local.iter_964.steps_taken
  }
}

locals {
  code_966 = (try(local.iter_965.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_965.code_ptr, local.iter_965.code_ptr + 2)
    : [null])

  input_966 = (local.code_966[0] == ","
    ? substr(local.input_965, local.code_966[1], -1)
    : local.input_965)

  iter_966 = try(local.iter_965.code_ptr >= length(var.code), true) ? local.iter_965 : {
    output = (local.code_966[0] == "."
      ? "${local.iter_965.output}${join("", [for _ in range(local.code_966[1]) : jsondecode(format("\"\\u%04x\"", local.iter_965.tape[local.iter_965.tape_ptr]))])}"
      : local.iter_965.output)
    
    tape = (
      local.code_966[0] == "+"
        ? [for i, b in local.iter_965.tape : (i == local.iter_965.tape_ptr ? (b + local.code_966[1]) % 256 : b)] :
      local.code_966[0] == "-"
        ? [for i, b in local.iter_965.tape : (i == local.iter_965.tape_ptr ? (b - local.code_966[1] + 256) % 256 : b)] :
      local.code_966[0] == ","
        ? [for i, b in local.iter_965.tape : (i == local.iter_965.tape_ptr ? local.ascii_lookup[substr(local.input_966, 0, 1)] : b)]
        : local.iter_965.tape)

    tape_ptr = (
      local.code_966[0] == "<"
        ? local.iter_965.tape_ptr - local.code_966[1] :
      local.code_966[0] == ">"
        ? local.iter_965.tape_ptr + local.code_966[1]
        : local.iter_965.tape_ptr)

    code_ptr = 2 + (
      local.code_966[0] == "["
        ? local.iter_965.tape[local.iter_965.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_965.code_ptr)] : local.iter_965.code_ptr :
      local.code_966[0] == "]"
        ? local.iter_965.tape[local.iter_965.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_965.code_ptr)] : local.iter_965.code_ptr
        : local.iter_965.code_ptr)

    steps_taken = 1 + local.iter_965.steps_taken
  }
}

locals {
  code_967 = (try(local.iter_966.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_966.code_ptr, local.iter_966.code_ptr + 2)
    : [null])

  input_967 = (local.code_967[0] == ","
    ? substr(local.input_966, local.code_967[1], -1)
    : local.input_966)

  iter_967 = try(local.iter_966.code_ptr >= length(var.code), true) ? local.iter_966 : {
    output = (local.code_967[0] == "."
      ? "${local.iter_966.output}${join("", [for _ in range(local.code_967[1]) : jsondecode(format("\"\\u%04x\"", local.iter_966.tape[local.iter_966.tape_ptr]))])}"
      : local.iter_966.output)
    
    tape = (
      local.code_967[0] == "+"
        ? [for i, b in local.iter_966.tape : (i == local.iter_966.tape_ptr ? (b + local.code_967[1]) % 256 : b)] :
      local.code_967[0] == "-"
        ? [for i, b in local.iter_966.tape : (i == local.iter_966.tape_ptr ? (b - local.code_967[1] + 256) % 256 : b)] :
      local.code_967[0] == ","
        ? [for i, b in local.iter_966.tape : (i == local.iter_966.tape_ptr ? local.ascii_lookup[substr(local.input_967, 0, 1)] : b)]
        : local.iter_966.tape)

    tape_ptr = (
      local.code_967[0] == "<"
        ? local.iter_966.tape_ptr - local.code_967[1] :
      local.code_967[0] == ">"
        ? local.iter_966.tape_ptr + local.code_967[1]
        : local.iter_966.tape_ptr)

    code_ptr = 2 + (
      local.code_967[0] == "["
        ? local.iter_966.tape[local.iter_966.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_966.code_ptr)] : local.iter_966.code_ptr :
      local.code_967[0] == "]"
        ? local.iter_966.tape[local.iter_966.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_966.code_ptr)] : local.iter_966.code_ptr
        : local.iter_966.code_ptr)

    steps_taken = 1 + local.iter_966.steps_taken
  }
}

locals {
  code_968 = (try(local.iter_967.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_967.code_ptr, local.iter_967.code_ptr + 2)
    : [null])

  input_968 = (local.code_968[0] == ","
    ? substr(local.input_967, local.code_968[1], -1)
    : local.input_967)

  iter_968 = try(local.iter_967.code_ptr >= length(var.code), true) ? local.iter_967 : {
    output = (local.code_968[0] == "."
      ? "${local.iter_967.output}${join("", [for _ in range(local.code_968[1]) : jsondecode(format("\"\\u%04x\"", local.iter_967.tape[local.iter_967.tape_ptr]))])}"
      : local.iter_967.output)
    
    tape = (
      local.code_968[0] == "+"
        ? [for i, b in local.iter_967.tape : (i == local.iter_967.tape_ptr ? (b + local.code_968[1]) % 256 : b)] :
      local.code_968[0] == "-"
        ? [for i, b in local.iter_967.tape : (i == local.iter_967.tape_ptr ? (b - local.code_968[1] + 256) % 256 : b)] :
      local.code_968[0] == ","
        ? [for i, b in local.iter_967.tape : (i == local.iter_967.tape_ptr ? local.ascii_lookup[substr(local.input_968, 0, 1)] : b)]
        : local.iter_967.tape)

    tape_ptr = (
      local.code_968[0] == "<"
        ? local.iter_967.tape_ptr - local.code_968[1] :
      local.code_968[0] == ">"
        ? local.iter_967.tape_ptr + local.code_968[1]
        : local.iter_967.tape_ptr)

    code_ptr = 2 + (
      local.code_968[0] == "["
        ? local.iter_967.tape[local.iter_967.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_967.code_ptr)] : local.iter_967.code_ptr :
      local.code_968[0] == "]"
        ? local.iter_967.tape[local.iter_967.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_967.code_ptr)] : local.iter_967.code_ptr
        : local.iter_967.code_ptr)

    steps_taken = 1 + local.iter_967.steps_taken
  }
}

locals {
  code_969 = (try(local.iter_968.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_968.code_ptr, local.iter_968.code_ptr + 2)
    : [null])

  input_969 = (local.code_969[0] == ","
    ? substr(local.input_968, local.code_969[1], -1)
    : local.input_968)

  iter_969 = try(local.iter_968.code_ptr >= length(var.code), true) ? local.iter_968 : {
    output = (local.code_969[0] == "."
      ? "${local.iter_968.output}${join("", [for _ in range(local.code_969[1]) : jsondecode(format("\"\\u%04x\"", local.iter_968.tape[local.iter_968.tape_ptr]))])}"
      : local.iter_968.output)
    
    tape = (
      local.code_969[0] == "+"
        ? [for i, b in local.iter_968.tape : (i == local.iter_968.tape_ptr ? (b + local.code_969[1]) % 256 : b)] :
      local.code_969[0] == "-"
        ? [for i, b in local.iter_968.tape : (i == local.iter_968.tape_ptr ? (b - local.code_969[1] + 256) % 256 : b)] :
      local.code_969[0] == ","
        ? [for i, b in local.iter_968.tape : (i == local.iter_968.tape_ptr ? local.ascii_lookup[substr(local.input_969, 0, 1)] : b)]
        : local.iter_968.tape)

    tape_ptr = (
      local.code_969[0] == "<"
        ? local.iter_968.tape_ptr - local.code_969[1] :
      local.code_969[0] == ">"
        ? local.iter_968.tape_ptr + local.code_969[1]
        : local.iter_968.tape_ptr)

    code_ptr = 2 + (
      local.code_969[0] == "["
        ? local.iter_968.tape[local.iter_968.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_968.code_ptr)] : local.iter_968.code_ptr :
      local.code_969[0] == "]"
        ? local.iter_968.tape[local.iter_968.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_968.code_ptr)] : local.iter_968.code_ptr
        : local.iter_968.code_ptr)

    steps_taken = 1 + local.iter_968.steps_taken
  }
}

locals {
  code_970 = (try(local.iter_969.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_969.code_ptr, local.iter_969.code_ptr + 2)
    : [null])

  input_970 = (local.code_970[0] == ","
    ? substr(local.input_969, local.code_970[1], -1)
    : local.input_969)

  iter_970 = try(local.iter_969.code_ptr >= length(var.code), true) ? local.iter_969 : {
    output = (local.code_970[0] == "."
      ? "${local.iter_969.output}${join("", [for _ in range(local.code_970[1]) : jsondecode(format("\"\\u%04x\"", local.iter_969.tape[local.iter_969.tape_ptr]))])}"
      : local.iter_969.output)
    
    tape = (
      local.code_970[0] == "+"
        ? [for i, b in local.iter_969.tape : (i == local.iter_969.tape_ptr ? (b + local.code_970[1]) % 256 : b)] :
      local.code_970[0] == "-"
        ? [for i, b in local.iter_969.tape : (i == local.iter_969.tape_ptr ? (b - local.code_970[1] + 256) % 256 : b)] :
      local.code_970[0] == ","
        ? [for i, b in local.iter_969.tape : (i == local.iter_969.tape_ptr ? local.ascii_lookup[substr(local.input_970, 0, 1)] : b)]
        : local.iter_969.tape)

    tape_ptr = (
      local.code_970[0] == "<"
        ? local.iter_969.tape_ptr - local.code_970[1] :
      local.code_970[0] == ">"
        ? local.iter_969.tape_ptr + local.code_970[1]
        : local.iter_969.tape_ptr)

    code_ptr = 2 + (
      local.code_970[0] == "["
        ? local.iter_969.tape[local.iter_969.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_969.code_ptr)] : local.iter_969.code_ptr :
      local.code_970[0] == "]"
        ? local.iter_969.tape[local.iter_969.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_969.code_ptr)] : local.iter_969.code_ptr
        : local.iter_969.code_ptr)

    steps_taken = 1 + local.iter_969.steps_taken
  }
}

locals {
  code_971 = (try(local.iter_970.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_970.code_ptr, local.iter_970.code_ptr + 2)
    : [null])

  input_971 = (local.code_971[0] == ","
    ? substr(local.input_970, local.code_971[1], -1)
    : local.input_970)

  iter_971 = try(local.iter_970.code_ptr >= length(var.code), true) ? local.iter_970 : {
    output = (local.code_971[0] == "."
      ? "${local.iter_970.output}${join("", [for _ in range(local.code_971[1]) : jsondecode(format("\"\\u%04x\"", local.iter_970.tape[local.iter_970.tape_ptr]))])}"
      : local.iter_970.output)
    
    tape = (
      local.code_971[0] == "+"
        ? [for i, b in local.iter_970.tape : (i == local.iter_970.tape_ptr ? (b + local.code_971[1]) % 256 : b)] :
      local.code_971[0] == "-"
        ? [for i, b in local.iter_970.tape : (i == local.iter_970.tape_ptr ? (b - local.code_971[1] + 256) % 256 : b)] :
      local.code_971[0] == ","
        ? [for i, b in local.iter_970.tape : (i == local.iter_970.tape_ptr ? local.ascii_lookup[substr(local.input_971, 0, 1)] : b)]
        : local.iter_970.tape)

    tape_ptr = (
      local.code_971[0] == "<"
        ? local.iter_970.tape_ptr - local.code_971[1] :
      local.code_971[0] == ">"
        ? local.iter_970.tape_ptr + local.code_971[1]
        : local.iter_970.tape_ptr)

    code_ptr = 2 + (
      local.code_971[0] == "["
        ? local.iter_970.tape[local.iter_970.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_970.code_ptr)] : local.iter_970.code_ptr :
      local.code_971[0] == "]"
        ? local.iter_970.tape[local.iter_970.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_970.code_ptr)] : local.iter_970.code_ptr
        : local.iter_970.code_ptr)

    steps_taken = 1 + local.iter_970.steps_taken
  }
}

locals {
  code_972 = (try(local.iter_971.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_971.code_ptr, local.iter_971.code_ptr + 2)
    : [null])

  input_972 = (local.code_972[0] == ","
    ? substr(local.input_971, local.code_972[1], -1)
    : local.input_971)

  iter_972 = try(local.iter_971.code_ptr >= length(var.code), true) ? local.iter_971 : {
    output = (local.code_972[0] == "."
      ? "${local.iter_971.output}${join("", [for _ in range(local.code_972[1]) : jsondecode(format("\"\\u%04x\"", local.iter_971.tape[local.iter_971.tape_ptr]))])}"
      : local.iter_971.output)
    
    tape = (
      local.code_972[0] == "+"
        ? [for i, b in local.iter_971.tape : (i == local.iter_971.tape_ptr ? (b + local.code_972[1]) % 256 : b)] :
      local.code_972[0] == "-"
        ? [for i, b in local.iter_971.tape : (i == local.iter_971.tape_ptr ? (b - local.code_972[1] + 256) % 256 : b)] :
      local.code_972[0] == ","
        ? [for i, b in local.iter_971.tape : (i == local.iter_971.tape_ptr ? local.ascii_lookup[substr(local.input_972, 0, 1)] : b)]
        : local.iter_971.tape)

    tape_ptr = (
      local.code_972[0] == "<"
        ? local.iter_971.tape_ptr - local.code_972[1] :
      local.code_972[0] == ">"
        ? local.iter_971.tape_ptr + local.code_972[1]
        : local.iter_971.tape_ptr)

    code_ptr = 2 + (
      local.code_972[0] == "["
        ? local.iter_971.tape[local.iter_971.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_971.code_ptr)] : local.iter_971.code_ptr :
      local.code_972[0] == "]"
        ? local.iter_971.tape[local.iter_971.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_971.code_ptr)] : local.iter_971.code_ptr
        : local.iter_971.code_ptr)

    steps_taken = 1 + local.iter_971.steps_taken
  }
}

locals {
  code_973 = (try(local.iter_972.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_972.code_ptr, local.iter_972.code_ptr + 2)
    : [null])

  input_973 = (local.code_973[0] == ","
    ? substr(local.input_972, local.code_973[1], -1)
    : local.input_972)

  iter_973 = try(local.iter_972.code_ptr >= length(var.code), true) ? local.iter_972 : {
    output = (local.code_973[0] == "."
      ? "${local.iter_972.output}${join("", [for _ in range(local.code_973[1]) : jsondecode(format("\"\\u%04x\"", local.iter_972.tape[local.iter_972.tape_ptr]))])}"
      : local.iter_972.output)
    
    tape = (
      local.code_973[0] == "+"
        ? [for i, b in local.iter_972.tape : (i == local.iter_972.tape_ptr ? (b + local.code_973[1]) % 256 : b)] :
      local.code_973[0] == "-"
        ? [for i, b in local.iter_972.tape : (i == local.iter_972.tape_ptr ? (b - local.code_973[1] + 256) % 256 : b)] :
      local.code_973[0] == ","
        ? [for i, b in local.iter_972.tape : (i == local.iter_972.tape_ptr ? local.ascii_lookup[substr(local.input_973, 0, 1)] : b)]
        : local.iter_972.tape)

    tape_ptr = (
      local.code_973[0] == "<"
        ? local.iter_972.tape_ptr - local.code_973[1] :
      local.code_973[0] == ">"
        ? local.iter_972.tape_ptr + local.code_973[1]
        : local.iter_972.tape_ptr)

    code_ptr = 2 + (
      local.code_973[0] == "["
        ? local.iter_972.tape[local.iter_972.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_972.code_ptr)] : local.iter_972.code_ptr :
      local.code_973[0] == "]"
        ? local.iter_972.tape[local.iter_972.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_972.code_ptr)] : local.iter_972.code_ptr
        : local.iter_972.code_ptr)

    steps_taken = 1 + local.iter_972.steps_taken
  }
}

locals {
  code_974 = (try(local.iter_973.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_973.code_ptr, local.iter_973.code_ptr + 2)
    : [null])

  input_974 = (local.code_974[0] == ","
    ? substr(local.input_973, local.code_974[1], -1)
    : local.input_973)

  iter_974 = try(local.iter_973.code_ptr >= length(var.code), true) ? local.iter_973 : {
    output = (local.code_974[0] == "."
      ? "${local.iter_973.output}${join("", [for _ in range(local.code_974[1]) : jsondecode(format("\"\\u%04x\"", local.iter_973.tape[local.iter_973.tape_ptr]))])}"
      : local.iter_973.output)
    
    tape = (
      local.code_974[0] == "+"
        ? [for i, b in local.iter_973.tape : (i == local.iter_973.tape_ptr ? (b + local.code_974[1]) % 256 : b)] :
      local.code_974[0] == "-"
        ? [for i, b in local.iter_973.tape : (i == local.iter_973.tape_ptr ? (b - local.code_974[1] + 256) % 256 : b)] :
      local.code_974[0] == ","
        ? [for i, b in local.iter_973.tape : (i == local.iter_973.tape_ptr ? local.ascii_lookup[substr(local.input_974, 0, 1)] : b)]
        : local.iter_973.tape)

    tape_ptr = (
      local.code_974[0] == "<"
        ? local.iter_973.tape_ptr - local.code_974[1] :
      local.code_974[0] == ">"
        ? local.iter_973.tape_ptr + local.code_974[1]
        : local.iter_973.tape_ptr)

    code_ptr = 2 + (
      local.code_974[0] == "["
        ? local.iter_973.tape[local.iter_973.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_973.code_ptr)] : local.iter_973.code_ptr :
      local.code_974[0] == "]"
        ? local.iter_973.tape[local.iter_973.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_973.code_ptr)] : local.iter_973.code_ptr
        : local.iter_973.code_ptr)

    steps_taken = 1 + local.iter_973.steps_taken
  }
}

locals {
  code_975 = (try(local.iter_974.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_974.code_ptr, local.iter_974.code_ptr + 2)
    : [null])

  input_975 = (local.code_975[0] == ","
    ? substr(local.input_974, local.code_975[1], -1)
    : local.input_974)

  iter_975 = try(local.iter_974.code_ptr >= length(var.code), true) ? local.iter_974 : {
    output = (local.code_975[0] == "."
      ? "${local.iter_974.output}${join("", [for _ in range(local.code_975[1]) : jsondecode(format("\"\\u%04x\"", local.iter_974.tape[local.iter_974.tape_ptr]))])}"
      : local.iter_974.output)
    
    tape = (
      local.code_975[0] == "+"
        ? [for i, b in local.iter_974.tape : (i == local.iter_974.tape_ptr ? (b + local.code_975[1]) % 256 : b)] :
      local.code_975[0] == "-"
        ? [for i, b in local.iter_974.tape : (i == local.iter_974.tape_ptr ? (b - local.code_975[1] + 256) % 256 : b)] :
      local.code_975[0] == ","
        ? [for i, b in local.iter_974.tape : (i == local.iter_974.tape_ptr ? local.ascii_lookup[substr(local.input_975, 0, 1)] : b)]
        : local.iter_974.tape)

    tape_ptr = (
      local.code_975[0] == "<"
        ? local.iter_974.tape_ptr - local.code_975[1] :
      local.code_975[0] == ">"
        ? local.iter_974.tape_ptr + local.code_975[1]
        : local.iter_974.tape_ptr)

    code_ptr = 2 + (
      local.code_975[0] == "["
        ? local.iter_974.tape[local.iter_974.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_974.code_ptr)] : local.iter_974.code_ptr :
      local.code_975[0] == "]"
        ? local.iter_974.tape[local.iter_974.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_974.code_ptr)] : local.iter_974.code_ptr
        : local.iter_974.code_ptr)

    steps_taken = 1 + local.iter_974.steps_taken
  }
}

locals {
  code_976 = (try(local.iter_975.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_975.code_ptr, local.iter_975.code_ptr + 2)
    : [null])

  input_976 = (local.code_976[0] == ","
    ? substr(local.input_975, local.code_976[1], -1)
    : local.input_975)

  iter_976 = try(local.iter_975.code_ptr >= length(var.code), true) ? local.iter_975 : {
    output = (local.code_976[0] == "."
      ? "${local.iter_975.output}${join("", [for _ in range(local.code_976[1]) : jsondecode(format("\"\\u%04x\"", local.iter_975.tape[local.iter_975.tape_ptr]))])}"
      : local.iter_975.output)
    
    tape = (
      local.code_976[0] == "+"
        ? [for i, b in local.iter_975.tape : (i == local.iter_975.tape_ptr ? (b + local.code_976[1]) % 256 : b)] :
      local.code_976[0] == "-"
        ? [for i, b in local.iter_975.tape : (i == local.iter_975.tape_ptr ? (b - local.code_976[1] + 256) % 256 : b)] :
      local.code_976[0] == ","
        ? [for i, b in local.iter_975.tape : (i == local.iter_975.tape_ptr ? local.ascii_lookup[substr(local.input_976, 0, 1)] : b)]
        : local.iter_975.tape)

    tape_ptr = (
      local.code_976[0] == "<"
        ? local.iter_975.tape_ptr - local.code_976[1] :
      local.code_976[0] == ">"
        ? local.iter_975.tape_ptr + local.code_976[1]
        : local.iter_975.tape_ptr)

    code_ptr = 2 + (
      local.code_976[0] == "["
        ? local.iter_975.tape[local.iter_975.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_975.code_ptr)] : local.iter_975.code_ptr :
      local.code_976[0] == "]"
        ? local.iter_975.tape[local.iter_975.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_975.code_ptr)] : local.iter_975.code_ptr
        : local.iter_975.code_ptr)

    steps_taken = 1 + local.iter_975.steps_taken
  }
}

locals {
  code_977 = (try(local.iter_976.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_976.code_ptr, local.iter_976.code_ptr + 2)
    : [null])

  input_977 = (local.code_977[0] == ","
    ? substr(local.input_976, local.code_977[1], -1)
    : local.input_976)

  iter_977 = try(local.iter_976.code_ptr >= length(var.code), true) ? local.iter_976 : {
    output = (local.code_977[0] == "."
      ? "${local.iter_976.output}${join("", [for _ in range(local.code_977[1]) : jsondecode(format("\"\\u%04x\"", local.iter_976.tape[local.iter_976.tape_ptr]))])}"
      : local.iter_976.output)
    
    tape = (
      local.code_977[0] == "+"
        ? [for i, b in local.iter_976.tape : (i == local.iter_976.tape_ptr ? (b + local.code_977[1]) % 256 : b)] :
      local.code_977[0] == "-"
        ? [for i, b in local.iter_976.tape : (i == local.iter_976.tape_ptr ? (b - local.code_977[1] + 256) % 256 : b)] :
      local.code_977[0] == ","
        ? [for i, b in local.iter_976.tape : (i == local.iter_976.tape_ptr ? local.ascii_lookup[substr(local.input_977, 0, 1)] : b)]
        : local.iter_976.tape)

    tape_ptr = (
      local.code_977[0] == "<"
        ? local.iter_976.tape_ptr - local.code_977[1] :
      local.code_977[0] == ">"
        ? local.iter_976.tape_ptr + local.code_977[1]
        : local.iter_976.tape_ptr)

    code_ptr = 2 + (
      local.code_977[0] == "["
        ? local.iter_976.tape[local.iter_976.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_976.code_ptr)] : local.iter_976.code_ptr :
      local.code_977[0] == "]"
        ? local.iter_976.tape[local.iter_976.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_976.code_ptr)] : local.iter_976.code_ptr
        : local.iter_976.code_ptr)

    steps_taken = 1 + local.iter_976.steps_taken
  }
}

locals {
  code_978 = (try(local.iter_977.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_977.code_ptr, local.iter_977.code_ptr + 2)
    : [null])

  input_978 = (local.code_978[0] == ","
    ? substr(local.input_977, local.code_978[1], -1)
    : local.input_977)

  iter_978 = try(local.iter_977.code_ptr >= length(var.code), true) ? local.iter_977 : {
    output = (local.code_978[0] == "."
      ? "${local.iter_977.output}${join("", [for _ in range(local.code_978[1]) : jsondecode(format("\"\\u%04x\"", local.iter_977.tape[local.iter_977.tape_ptr]))])}"
      : local.iter_977.output)
    
    tape = (
      local.code_978[0] == "+"
        ? [for i, b in local.iter_977.tape : (i == local.iter_977.tape_ptr ? (b + local.code_978[1]) % 256 : b)] :
      local.code_978[0] == "-"
        ? [for i, b in local.iter_977.tape : (i == local.iter_977.tape_ptr ? (b - local.code_978[1] + 256) % 256 : b)] :
      local.code_978[0] == ","
        ? [for i, b in local.iter_977.tape : (i == local.iter_977.tape_ptr ? local.ascii_lookup[substr(local.input_978, 0, 1)] : b)]
        : local.iter_977.tape)

    tape_ptr = (
      local.code_978[0] == "<"
        ? local.iter_977.tape_ptr - local.code_978[1] :
      local.code_978[0] == ">"
        ? local.iter_977.tape_ptr + local.code_978[1]
        : local.iter_977.tape_ptr)

    code_ptr = 2 + (
      local.code_978[0] == "["
        ? local.iter_977.tape[local.iter_977.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_977.code_ptr)] : local.iter_977.code_ptr :
      local.code_978[0] == "]"
        ? local.iter_977.tape[local.iter_977.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_977.code_ptr)] : local.iter_977.code_ptr
        : local.iter_977.code_ptr)

    steps_taken = 1 + local.iter_977.steps_taken
  }
}

locals {
  code_979 = (try(local.iter_978.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_978.code_ptr, local.iter_978.code_ptr + 2)
    : [null])

  input_979 = (local.code_979[0] == ","
    ? substr(local.input_978, local.code_979[1], -1)
    : local.input_978)

  iter_979 = try(local.iter_978.code_ptr >= length(var.code), true) ? local.iter_978 : {
    output = (local.code_979[0] == "."
      ? "${local.iter_978.output}${join("", [for _ in range(local.code_979[1]) : jsondecode(format("\"\\u%04x\"", local.iter_978.tape[local.iter_978.tape_ptr]))])}"
      : local.iter_978.output)
    
    tape = (
      local.code_979[0] == "+"
        ? [for i, b in local.iter_978.tape : (i == local.iter_978.tape_ptr ? (b + local.code_979[1]) % 256 : b)] :
      local.code_979[0] == "-"
        ? [for i, b in local.iter_978.tape : (i == local.iter_978.tape_ptr ? (b - local.code_979[1] + 256) % 256 : b)] :
      local.code_979[0] == ","
        ? [for i, b in local.iter_978.tape : (i == local.iter_978.tape_ptr ? local.ascii_lookup[substr(local.input_979, 0, 1)] : b)]
        : local.iter_978.tape)

    tape_ptr = (
      local.code_979[0] == "<"
        ? local.iter_978.tape_ptr - local.code_979[1] :
      local.code_979[0] == ">"
        ? local.iter_978.tape_ptr + local.code_979[1]
        : local.iter_978.tape_ptr)

    code_ptr = 2 + (
      local.code_979[0] == "["
        ? local.iter_978.tape[local.iter_978.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_978.code_ptr)] : local.iter_978.code_ptr :
      local.code_979[0] == "]"
        ? local.iter_978.tape[local.iter_978.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_978.code_ptr)] : local.iter_978.code_ptr
        : local.iter_978.code_ptr)

    steps_taken = 1 + local.iter_978.steps_taken
  }
}

locals {
  code_980 = (try(local.iter_979.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_979.code_ptr, local.iter_979.code_ptr + 2)
    : [null])

  input_980 = (local.code_980[0] == ","
    ? substr(local.input_979, local.code_980[1], -1)
    : local.input_979)

  iter_980 = try(local.iter_979.code_ptr >= length(var.code), true) ? local.iter_979 : {
    output = (local.code_980[0] == "."
      ? "${local.iter_979.output}${join("", [for _ in range(local.code_980[1]) : jsondecode(format("\"\\u%04x\"", local.iter_979.tape[local.iter_979.tape_ptr]))])}"
      : local.iter_979.output)
    
    tape = (
      local.code_980[0] == "+"
        ? [for i, b in local.iter_979.tape : (i == local.iter_979.tape_ptr ? (b + local.code_980[1]) % 256 : b)] :
      local.code_980[0] == "-"
        ? [for i, b in local.iter_979.tape : (i == local.iter_979.tape_ptr ? (b - local.code_980[1] + 256) % 256 : b)] :
      local.code_980[0] == ","
        ? [for i, b in local.iter_979.tape : (i == local.iter_979.tape_ptr ? local.ascii_lookup[substr(local.input_980, 0, 1)] : b)]
        : local.iter_979.tape)

    tape_ptr = (
      local.code_980[0] == "<"
        ? local.iter_979.tape_ptr - local.code_980[1] :
      local.code_980[0] == ">"
        ? local.iter_979.tape_ptr + local.code_980[1]
        : local.iter_979.tape_ptr)

    code_ptr = 2 + (
      local.code_980[0] == "["
        ? local.iter_979.tape[local.iter_979.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_979.code_ptr)] : local.iter_979.code_ptr :
      local.code_980[0] == "]"
        ? local.iter_979.tape[local.iter_979.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_979.code_ptr)] : local.iter_979.code_ptr
        : local.iter_979.code_ptr)

    steps_taken = 1 + local.iter_979.steps_taken
  }
}

locals {
  code_981 = (try(local.iter_980.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_980.code_ptr, local.iter_980.code_ptr + 2)
    : [null])

  input_981 = (local.code_981[0] == ","
    ? substr(local.input_980, local.code_981[1], -1)
    : local.input_980)

  iter_981 = try(local.iter_980.code_ptr >= length(var.code), true) ? local.iter_980 : {
    output = (local.code_981[0] == "."
      ? "${local.iter_980.output}${join("", [for _ in range(local.code_981[1]) : jsondecode(format("\"\\u%04x\"", local.iter_980.tape[local.iter_980.tape_ptr]))])}"
      : local.iter_980.output)
    
    tape = (
      local.code_981[0] == "+"
        ? [for i, b in local.iter_980.tape : (i == local.iter_980.tape_ptr ? (b + local.code_981[1]) % 256 : b)] :
      local.code_981[0] == "-"
        ? [for i, b in local.iter_980.tape : (i == local.iter_980.tape_ptr ? (b - local.code_981[1] + 256) % 256 : b)] :
      local.code_981[0] == ","
        ? [for i, b in local.iter_980.tape : (i == local.iter_980.tape_ptr ? local.ascii_lookup[substr(local.input_981, 0, 1)] : b)]
        : local.iter_980.tape)

    tape_ptr = (
      local.code_981[0] == "<"
        ? local.iter_980.tape_ptr - local.code_981[1] :
      local.code_981[0] == ">"
        ? local.iter_980.tape_ptr + local.code_981[1]
        : local.iter_980.tape_ptr)

    code_ptr = 2 + (
      local.code_981[0] == "["
        ? local.iter_980.tape[local.iter_980.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_980.code_ptr)] : local.iter_980.code_ptr :
      local.code_981[0] == "]"
        ? local.iter_980.tape[local.iter_980.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_980.code_ptr)] : local.iter_980.code_ptr
        : local.iter_980.code_ptr)

    steps_taken = 1 + local.iter_980.steps_taken
  }
}

locals {
  code_982 = (try(local.iter_981.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_981.code_ptr, local.iter_981.code_ptr + 2)
    : [null])

  input_982 = (local.code_982[0] == ","
    ? substr(local.input_981, local.code_982[1], -1)
    : local.input_981)

  iter_982 = try(local.iter_981.code_ptr >= length(var.code), true) ? local.iter_981 : {
    output = (local.code_982[0] == "."
      ? "${local.iter_981.output}${join("", [for _ in range(local.code_982[1]) : jsondecode(format("\"\\u%04x\"", local.iter_981.tape[local.iter_981.tape_ptr]))])}"
      : local.iter_981.output)
    
    tape = (
      local.code_982[0] == "+"
        ? [for i, b in local.iter_981.tape : (i == local.iter_981.tape_ptr ? (b + local.code_982[1]) % 256 : b)] :
      local.code_982[0] == "-"
        ? [for i, b in local.iter_981.tape : (i == local.iter_981.tape_ptr ? (b - local.code_982[1] + 256) % 256 : b)] :
      local.code_982[0] == ","
        ? [for i, b in local.iter_981.tape : (i == local.iter_981.tape_ptr ? local.ascii_lookup[substr(local.input_982, 0, 1)] : b)]
        : local.iter_981.tape)

    tape_ptr = (
      local.code_982[0] == "<"
        ? local.iter_981.tape_ptr - local.code_982[1] :
      local.code_982[0] == ">"
        ? local.iter_981.tape_ptr + local.code_982[1]
        : local.iter_981.tape_ptr)

    code_ptr = 2 + (
      local.code_982[0] == "["
        ? local.iter_981.tape[local.iter_981.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_981.code_ptr)] : local.iter_981.code_ptr :
      local.code_982[0] == "]"
        ? local.iter_981.tape[local.iter_981.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_981.code_ptr)] : local.iter_981.code_ptr
        : local.iter_981.code_ptr)

    steps_taken = 1 + local.iter_981.steps_taken
  }
}

locals {
  code_983 = (try(local.iter_982.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_982.code_ptr, local.iter_982.code_ptr + 2)
    : [null])

  input_983 = (local.code_983[0] == ","
    ? substr(local.input_982, local.code_983[1], -1)
    : local.input_982)

  iter_983 = try(local.iter_982.code_ptr >= length(var.code), true) ? local.iter_982 : {
    output = (local.code_983[0] == "."
      ? "${local.iter_982.output}${join("", [for _ in range(local.code_983[1]) : jsondecode(format("\"\\u%04x\"", local.iter_982.tape[local.iter_982.tape_ptr]))])}"
      : local.iter_982.output)
    
    tape = (
      local.code_983[0] == "+"
        ? [for i, b in local.iter_982.tape : (i == local.iter_982.tape_ptr ? (b + local.code_983[1]) % 256 : b)] :
      local.code_983[0] == "-"
        ? [for i, b in local.iter_982.tape : (i == local.iter_982.tape_ptr ? (b - local.code_983[1] + 256) % 256 : b)] :
      local.code_983[0] == ","
        ? [for i, b in local.iter_982.tape : (i == local.iter_982.tape_ptr ? local.ascii_lookup[substr(local.input_983, 0, 1)] : b)]
        : local.iter_982.tape)

    tape_ptr = (
      local.code_983[0] == "<"
        ? local.iter_982.tape_ptr - local.code_983[1] :
      local.code_983[0] == ">"
        ? local.iter_982.tape_ptr + local.code_983[1]
        : local.iter_982.tape_ptr)

    code_ptr = 2 + (
      local.code_983[0] == "["
        ? local.iter_982.tape[local.iter_982.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_982.code_ptr)] : local.iter_982.code_ptr :
      local.code_983[0] == "]"
        ? local.iter_982.tape[local.iter_982.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_982.code_ptr)] : local.iter_982.code_ptr
        : local.iter_982.code_ptr)

    steps_taken = 1 + local.iter_982.steps_taken
  }
}

locals {
  code_984 = (try(local.iter_983.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_983.code_ptr, local.iter_983.code_ptr + 2)
    : [null])

  input_984 = (local.code_984[0] == ","
    ? substr(local.input_983, local.code_984[1], -1)
    : local.input_983)

  iter_984 = try(local.iter_983.code_ptr >= length(var.code), true) ? local.iter_983 : {
    output = (local.code_984[0] == "."
      ? "${local.iter_983.output}${join("", [for _ in range(local.code_984[1]) : jsondecode(format("\"\\u%04x\"", local.iter_983.tape[local.iter_983.tape_ptr]))])}"
      : local.iter_983.output)
    
    tape = (
      local.code_984[0] == "+"
        ? [for i, b in local.iter_983.tape : (i == local.iter_983.tape_ptr ? (b + local.code_984[1]) % 256 : b)] :
      local.code_984[0] == "-"
        ? [for i, b in local.iter_983.tape : (i == local.iter_983.tape_ptr ? (b - local.code_984[1] + 256) % 256 : b)] :
      local.code_984[0] == ","
        ? [for i, b in local.iter_983.tape : (i == local.iter_983.tape_ptr ? local.ascii_lookup[substr(local.input_984, 0, 1)] : b)]
        : local.iter_983.tape)

    tape_ptr = (
      local.code_984[0] == "<"
        ? local.iter_983.tape_ptr - local.code_984[1] :
      local.code_984[0] == ">"
        ? local.iter_983.tape_ptr + local.code_984[1]
        : local.iter_983.tape_ptr)

    code_ptr = 2 + (
      local.code_984[0] == "["
        ? local.iter_983.tape[local.iter_983.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_983.code_ptr)] : local.iter_983.code_ptr :
      local.code_984[0] == "]"
        ? local.iter_983.tape[local.iter_983.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_983.code_ptr)] : local.iter_983.code_ptr
        : local.iter_983.code_ptr)

    steps_taken = 1 + local.iter_983.steps_taken
  }
}

locals {
  code_985 = (try(local.iter_984.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_984.code_ptr, local.iter_984.code_ptr + 2)
    : [null])

  input_985 = (local.code_985[0] == ","
    ? substr(local.input_984, local.code_985[1], -1)
    : local.input_984)

  iter_985 = try(local.iter_984.code_ptr >= length(var.code), true) ? local.iter_984 : {
    output = (local.code_985[0] == "."
      ? "${local.iter_984.output}${join("", [for _ in range(local.code_985[1]) : jsondecode(format("\"\\u%04x\"", local.iter_984.tape[local.iter_984.tape_ptr]))])}"
      : local.iter_984.output)
    
    tape = (
      local.code_985[0] == "+"
        ? [for i, b in local.iter_984.tape : (i == local.iter_984.tape_ptr ? (b + local.code_985[1]) % 256 : b)] :
      local.code_985[0] == "-"
        ? [for i, b in local.iter_984.tape : (i == local.iter_984.tape_ptr ? (b - local.code_985[1] + 256) % 256 : b)] :
      local.code_985[0] == ","
        ? [for i, b in local.iter_984.tape : (i == local.iter_984.tape_ptr ? local.ascii_lookup[substr(local.input_985, 0, 1)] : b)]
        : local.iter_984.tape)

    tape_ptr = (
      local.code_985[0] == "<"
        ? local.iter_984.tape_ptr - local.code_985[1] :
      local.code_985[0] == ">"
        ? local.iter_984.tape_ptr + local.code_985[1]
        : local.iter_984.tape_ptr)

    code_ptr = 2 + (
      local.code_985[0] == "["
        ? local.iter_984.tape[local.iter_984.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_984.code_ptr)] : local.iter_984.code_ptr :
      local.code_985[0] == "]"
        ? local.iter_984.tape[local.iter_984.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_984.code_ptr)] : local.iter_984.code_ptr
        : local.iter_984.code_ptr)

    steps_taken = 1 + local.iter_984.steps_taken
  }
}

locals {
  code_986 = (try(local.iter_985.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_985.code_ptr, local.iter_985.code_ptr + 2)
    : [null])

  input_986 = (local.code_986[0] == ","
    ? substr(local.input_985, local.code_986[1], -1)
    : local.input_985)

  iter_986 = try(local.iter_985.code_ptr >= length(var.code), true) ? local.iter_985 : {
    output = (local.code_986[0] == "."
      ? "${local.iter_985.output}${join("", [for _ in range(local.code_986[1]) : jsondecode(format("\"\\u%04x\"", local.iter_985.tape[local.iter_985.tape_ptr]))])}"
      : local.iter_985.output)
    
    tape = (
      local.code_986[0] == "+"
        ? [for i, b in local.iter_985.tape : (i == local.iter_985.tape_ptr ? (b + local.code_986[1]) % 256 : b)] :
      local.code_986[0] == "-"
        ? [for i, b in local.iter_985.tape : (i == local.iter_985.tape_ptr ? (b - local.code_986[1] + 256) % 256 : b)] :
      local.code_986[0] == ","
        ? [for i, b in local.iter_985.tape : (i == local.iter_985.tape_ptr ? local.ascii_lookup[substr(local.input_986, 0, 1)] : b)]
        : local.iter_985.tape)

    tape_ptr = (
      local.code_986[0] == "<"
        ? local.iter_985.tape_ptr - local.code_986[1] :
      local.code_986[0] == ">"
        ? local.iter_985.tape_ptr + local.code_986[1]
        : local.iter_985.tape_ptr)

    code_ptr = 2 + (
      local.code_986[0] == "["
        ? local.iter_985.tape[local.iter_985.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_985.code_ptr)] : local.iter_985.code_ptr :
      local.code_986[0] == "]"
        ? local.iter_985.tape[local.iter_985.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_985.code_ptr)] : local.iter_985.code_ptr
        : local.iter_985.code_ptr)

    steps_taken = 1 + local.iter_985.steps_taken
  }
}

locals {
  code_987 = (try(local.iter_986.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_986.code_ptr, local.iter_986.code_ptr + 2)
    : [null])

  input_987 = (local.code_987[0] == ","
    ? substr(local.input_986, local.code_987[1], -1)
    : local.input_986)

  iter_987 = try(local.iter_986.code_ptr >= length(var.code), true) ? local.iter_986 : {
    output = (local.code_987[0] == "."
      ? "${local.iter_986.output}${join("", [for _ in range(local.code_987[1]) : jsondecode(format("\"\\u%04x\"", local.iter_986.tape[local.iter_986.tape_ptr]))])}"
      : local.iter_986.output)
    
    tape = (
      local.code_987[0] == "+"
        ? [for i, b in local.iter_986.tape : (i == local.iter_986.tape_ptr ? (b + local.code_987[1]) % 256 : b)] :
      local.code_987[0] == "-"
        ? [for i, b in local.iter_986.tape : (i == local.iter_986.tape_ptr ? (b - local.code_987[1] + 256) % 256 : b)] :
      local.code_987[0] == ","
        ? [for i, b in local.iter_986.tape : (i == local.iter_986.tape_ptr ? local.ascii_lookup[substr(local.input_987, 0, 1)] : b)]
        : local.iter_986.tape)

    tape_ptr = (
      local.code_987[0] == "<"
        ? local.iter_986.tape_ptr - local.code_987[1] :
      local.code_987[0] == ">"
        ? local.iter_986.tape_ptr + local.code_987[1]
        : local.iter_986.tape_ptr)

    code_ptr = 2 + (
      local.code_987[0] == "["
        ? local.iter_986.tape[local.iter_986.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_986.code_ptr)] : local.iter_986.code_ptr :
      local.code_987[0] == "]"
        ? local.iter_986.tape[local.iter_986.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_986.code_ptr)] : local.iter_986.code_ptr
        : local.iter_986.code_ptr)

    steps_taken = 1 + local.iter_986.steps_taken
  }
}

locals {
  code_988 = (try(local.iter_987.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_987.code_ptr, local.iter_987.code_ptr + 2)
    : [null])

  input_988 = (local.code_988[0] == ","
    ? substr(local.input_987, local.code_988[1], -1)
    : local.input_987)

  iter_988 = try(local.iter_987.code_ptr >= length(var.code), true) ? local.iter_987 : {
    output = (local.code_988[0] == "."
      ? "${local.iter_987.output}${join("", [for _ in range(local.code_988[1]) : jsondecode(format("\"\\u%04x\"", local.iter_987.tape[local.iter_987.tape_ptr]))])}"
      : local.iter_987.output)
    
    tape = (
      local.code_988[0] == "+"
        ? [for i, b in local.iter_987.tape : (i == local.iter_987.tape_ptr ? (b + local.code_988[1]) % 256 : b)] :
      local.code_988[0] == "-"
        ? [for i, b in local.iter_987.tape : (i == local.iter_987.tape_ptr ? (b - local.code_988[1] + 256) % 256 : b)] :
      local.code_988[0] == ","
        ? [for i, b in local.iter_987.tape : (i == local.iter_987.tape_ptr ? local.ascii_lookup[substr(local.input_988, 0, 1)] : b)]
        : local.iter_987.tape)

    tape_ptr = (
      local.code_988[0] == "<"
        ? local.iter_987.tape_ptr - local.code_988[1] :
      local.code_988[0] == ">"
        ? local.iter_987.tape_ptr + local.code_988[1]
        : local.iter_987.tape_ptr)

    code_ptr = 2 + (
      local.code_988[0] == "["
        ? local.iter_987.tape[local.iter_987.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_987.code_ptr)] : local.iter_987.code_ptr :
      local.code_988[0] == "]"
        ? local.iter_987.tape[local.iter_987.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_987.code_ptr)] : local.iter_987.code_ptr
        : local.iter_987.code_ptr)

    steps_taken = 1 + local.iter_987.steps_taken
  }
}

locals {
  code_989 = (try(local.iter_988.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_988.code_ptr, local.iter_988.code_ptr + 2)
    : [null])

  input_989 = (local.code_989[0] == ","
    ? substr(local.input_988, local.code_989[1], -1)
    : local.input_988)

  iter_989 = try(local.iter_988.code_ptr >= length(var.code), true) ? local.iter_988 : {
    output = (local.code_989[0] == "."
      ? "${local.iter_988.output}${join("", [for _ in range(local.code_989[1]) : jsondecode(format("\"\\u%04x\"", local.iter_988.tape[local.iter_988.tape_ptr]))])}"
      : local.iter_988.output)
    
    tape = (
      local.code_989[0] == "+"
        ? [for i, b in local.iter_988.tape : (i == local.iter_988.tape_ptr ? (b + local.code_989[1]) % 256 : b)] :
      local.code_989[0] == "-"
        ? [for i, b in local.iter_988.tape : (i == local.iter_988.tape_ptr ? (b - local.code_989[1] + 256) % 256 : b)] :
      local.code_989[0] == ","
        ? [for i, b in local.iter_988.tape : (i == local.iter_988.tape_ptr ? local.ascii_lookup[substr(local.input_989, 0, 1)] : b)]
        : local.iter_988.tape)

    tape_ptr = (
      local.code_989[0] == "<"
        ? local.iter_988.tape_ptr - local.code_989[1] :
      local.code_989[0] == ">"
        ? local.iter_988.tape_ptr + local.code_989[1]
        : local.iter_988.tape_ptr)

    code_ptr = 2 + (
      local.code_989[0] == "["
        ? local.iter_988.tape[local.iter_988.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_988.code_ptr)] : local.iter_988.code_ptr :
      local.code_989[0] == "]"
        ? local.iter_988.tape[local.iter_988.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_988.code_ptr)] : local.iter_988.code_ptr
        : local.iter_988.code_ptr)

    steps_taken = 1 + local.iter_988.steps_taken
  }
}

locals {
  code_990 = (try(local.iter_989.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_989.code_ptr, local.iter_989.code_ptr + 2)
    : [null])

  input_990 = (local.code_990[0] == ","
    ? substr(local.input_989, local.code_990[1], -1)
    : local.input_989)

  iter_990 = try(local.iter_989.code_ptr >= length(var.code), true) ? local.iter_989 : {
    output = (local.code_990[0] == "."
      ? "${local.iter_989.output}${join("", [for _ in range(local.code_990[1]) : jsondecode(format("\"\\u%04x\"", local.iter_989.tape[local.iter_989.tape_ptr]))])}"
      : local.iter_989.output)
    
    tape = (
      local.code_990[0] == "+"
        ? [for i, b in local.iter_989.tape : (i == local.iter_989.tape_ptr ? (b + local.code_990[1]) % 256 : b)] :
      local.code_990[0] == "-"
        ? [for i, b in local.iter_989.tape : (i == local.iter_989.tape_ptr ? (b - local.code_990[1] + 256) % 256 : b)] :
      local.code_990[0] == ","
        ? [for i, b in local.iter_989.tape : (i == local.iter_989.tape_ptr ? local.ascii_lookup[substr(local.input_990, 0, 1)] : b)]
        : local.iter_989.tape)

    tape_ptr = (
      local.code_990[0] == "<"
        ? local.iter_989.tape_ptr - local.code_990[1] :
      local.code_990[0] == ">"
        ? local.iter_989.tape_ptr + local.code_990[1]
        : local.iter_989.tape_ptr)

    code_ptr = 2 + (
      local.code_990[0] == "["
        ? local.iter_989.tape[local.iter_989.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_989.code_ptr)] : local.iter_989.code_ptr :
      local.code_990[0] == "]"
        ? local.iter_989.tape[local.iter_989.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_989.code_ptr)] : local.iter_989.code_ptr
        : local.iter_989.code_ptr)

    steps_taken = 1 + local.iter_989.steps_taken
  }
}

locals {
  code_991 = (try(local.iter_990.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_990.code_ptr, local.iter_990.code_ptr + 2)
    : [null])

  input_991 = (local.code_991[0] == ","
    ? substr(local.input_990, local.code_991[1], -1)
    : local.input_990)

  iter_991 = try(local.iter_990.code_ptr >= length(var.code), true) ? local.iter_990 : {
    output = (local.code_991[0] == "."
      ? "${local.iter_990.output}${join("", [for _ in range(local.code_991[1]) : jsondecode(format("\"\\u%04x\"", local.iter_990.tape[local.iter_990.tape_ptr]))])}"
      : local.iter_990.output)
    
    tape = (
      local.code_991[0] == "+"
        ? [for i, b in local.iter_990.tape : (i == local.iter_990.tape_ptr ? (b + local.code_991[1]) % 256 : b)] :
      local.code_991[0] == "-"
        ? [for i, b in local.iter_990.tape : (i == local.iter_990.tape_ptr ? (b - local.code_991[1] + 256) % 256 : b)] :
      local.code_991[0] == ","
        ? [for i, b in local.iter_990.tape : (i == local.iter_990.tape_ptr ? local.ascii_lookup[substr(local.input_991, 0, 1)] : b)]
        : local.iter_990.tape)

    tape_ptr = (
      local.code_991[0] == "<"
        ? local.iter_990.tape_ptr - local.code_991[1] :
      local.code_991[0] == ">"
        ? local.iter_990.tape_ptr + local.code_991[1]
        : local.iter_990.tape_ptr)

    code_ptr = 2 + (
      local.code_991[0] == "["
        ? local.iter_990.tape[local.iter_990.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_990.code_ptr)] : local.iter_990.code_ptr :
      local.code_991[0] == "]"
        ? local.iter_990.tape[local.iter_990.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_990.code_ptr)] : local.iter_990.code_ptr
        : local.iter_990.code_ptr)

    steps_taken = 1 + local.iter_990.steps_taken
  }
}

locals {
  code_992 = (try(local.iter_991.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_991.code_ptr, local.iter_991.code_ptr + 2)
    : [null])

  input_992 = (local.code_992[0] == ","
    ? substr(local.input_991, local.code_992[1], -1)
    : local.input_991)

  iter_992 = try(local.iter_991.code_ptr >= length(var.code), true) ? local.iter_991 : {
    output = (local.code_992[0] == "."
      ? "${local.iter_991.output}${join("", [for _ in range(local.code_992[1]) : jsondecode(format("\"\\u%04x\"", local.iter_991.tape[local.iter_991.tape_ptr]))])}"
      : local.iter_991.output)
    
    tape = (
      local.code_992[0] == "+"
        ? [for i, b in local.iter_991.tape : (i == local.iter_991.tape_ptr ? (b + local.code_992[1]) % 256 : b)] :
      local.code_992[0] == "-"
        ? [for i, b in local.iter_991.tape : (i == local.iter_991.tape_ptr ? (b - local.code_992[1] + 256) % 256 : b)] :
      local.code_992[0] == ","
        ? [for i, b in local.iter_991.tape : (i == local.iter_991.tape_ptr ? local.ascii_lookup[substr(local.input_992, 0, 1)] : b)]
        : local.iter_991.tape)

    tape_ptr = (
      local.code_992[0] == "<"
        ? local.iter_991.tape_ptr - local.code_992[1] :
      local.code_992[0] == ">"
        ? local.iter_991.tape_ptr + local.code_992[1]
        : local.iter_991.tape_ptr)

    code_ptr = 2 + (
      local.code_992[0] == "["
        ? local.iter_991.tape[local.iter_991.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_991.code_ptr)] : local.iter_991.code_ptr :
      local.code_992[0] == "]"
        ? local.iter_991.tape[local.iter_991.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_991.code_ptr)] : local.iter_991.code_ptr
        : local.iter_991.code_ptr)

    steps_taken = 1 + local.iter_991.steps_taken
  }
}

locals {
  code_993 = (try(local.iter_992.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_992.code_ptr, local.iter_992.code_ptr + 2)
    : [null])

  input_993 = (local.code_993[0] == ","
    ? substr(local.input_992, local.code_993[1], -1)
    : local.input_992)

  iter_993 = try(local.iter_992.code_ptr >= length(var.code), true) ? local.iter_992 : {
    output = (local.code_993[0] == "."
      ? "${local.iter_992.output}${join("", [for _ in range(local.code_993[1]) : jsondecode(format("\"\\u%04x\"", local.iter_992.tape[local.iter_992.tape_ptr]))])}"
      : local.iter_992.output)
    
    tape = (
      local.code_993[0] == "+"
        ? [for i, b in local.iter_992.tape : (i == local.iter_992.tape_ptr ? (b + local.code_993[1]) % 256 : b)] :
      local.code_993[0] == "-"
        ? [for i, b in local.iter_992.tape : (i == local.iter_992.tape_ptr ? (b - local.code_993[1] + 256) % 256 : b)] :
      local.code_993[0] == ","
        ? [for i, b in local.iter_992.tape : (i == local.iter_992.tape_ptr ? local.ascii_lookup[substr(local.input_993, 0, 1)] : b)]
        : local.iter_992.tape)

    tape_ptr = (
      local.code_993[0] == "<"
        ? local.iter_992.tape_ptr - local.code_993[1] :
      local.code_993[0] == ">"
        ? local.iter_992.tape_ptr + local.code_993[1]
        : local.iter_992.tape_ptr)

    code_ptr = 2 + (
      local.code_993[0] == "["
        ? local.iter_992.tape[local.iter_992.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_992.code_ptr)] : local.iter_992.code_ptr :
      local.code_993[0] == "]"
        ? local.iter_992.tape[local.iter_992.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_992.code_ptr)] : local.iter_992.code_ptr
        : local.iter_992.code_ptr)

    steps_taken = 1 + local.iter_992.steps_taken
  }
}

locals {
  code_994 = (try(local.iter_993.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_993.code_ptr, local.iter_993.code_ptr + 2)
    : [null])

  input_994 = (local.code_994[0] == ","
    ? substr(local.input_993, local.code_994[1], -1)
    : local.input_993)

  iter_994 = try(local.iter_993.code_ptr >= length(var.code), true) ? local.iter_993 : {
    output = (local.code_994[0] == "."
      ? "${local.iter_993.output}${join("", [for _ in range(local.code_994[1]) : jsondecode(format("\"\\u%04x\"", local.iter_993.tape[local.iter_993.tape_ptr]))])}"
      : local.iter_993.output)
    
    tape = (
      local.code_994[0] == "+"
        ? [for i, b in local.iter_993.tape : (i == local.iter_993.tape_ptr ? (b + local.code_994[1]) % 256 : b)] :
      local.code_994[0] == "-"
        ? [for i, b in local.iter_993.tape : (i == local.iter_993.tape_ptr ? (b - local.code_994[1] + 256) % 256 : b)] :
      local.code_994[0] == ","
        ? [for i, b in local.iter_993.tape : (i == local.iter_993.tape_ptr ? local.ascii_lookup[substr(local.input_994, 0, 1)] : b)]
        : local.iter_993.tape)

    tape_ptr = (
      local.code_994[0] == "<"
        ? local.iter_993.tape_ptr - local.code_994[1] :
      local.code_994[0] == ">"
        ? local.iter_993.tape_ptr + local.code_994[1]
        : local.iter_993.tape_ptr)

    code_ptr = 2 + (
      local.code_994[0] == "["
        ? local.iter_993.tape[local.iter_993.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_993.code_ptr)] : local.iter_993.code_ptr :
      local.code_994[0] == "]"
        ? local.iter_993.tape[local.iter_993.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_993.code_ptr)] : local.iter_993.code_ptr
        : local.iter_993.code_ptr)

    steps_taken = 1 + local.iter_993.steps_taken
  }
}

locals {
  code_995 = (try(local.iter_994.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_994.code_ptr, local.iter_994.code_ptr + 2)
    : [null])

  input_995 = (local.code_995[0] == ","
    ? substr(local.input_994, local.code_995[1], -1)
    : local.input_994)

  iter_995 = try(local.iter_994.code_ptr >= length(var.code), true) ? local.iter_994 : {
    output = (local.code_995[0] == "."
      ? "${local.iter_994.output}${join("", [for _ in range(local.code_995[1]) : jsondecode(format("\"\\u%04x\"", local.iter_994.tape[local.iter_994.tape_ptr]))])}"
      : local.iter_994.output)
    
    tape = (
      local.code_995[0] == "+"
        ? [for i, b in local.iter_994.tape : (i == local.iter_994.tape_ptr ? (b + local.code_995[1]) % 256 : b)] :
      local.code_995[0] == "-"
        ? [for i, b in local.iter_994.tape : (i == local.iter_994.tape_ptr ? (b - local.code_995[1] + 256) % 256 : b)] :
      local.code_995[0] == ","
        ? [for i, b in local.iter_994.tape : (i == local.iter_994.tape_ptr ? local.ascii_lookup[substr(local.input_995, 0, 1)] : b)]
        : local.iter_994.tape)

    tape_ptr = (
      local.code_995[0] == "<"
        ? local.iter_994.tape_ptr - local.code_995[1] :
      local.code_995[0] == ">"
        ? local.iter_994.tape_ptr + local.code_995[1]
        : local.iter_994.tape_ptr)

    code_ptr = 2 + (
      local.code_995[0] == "["
        ? local.iter_994.tape[local.iter_994.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_994.code_ptr)] : local.iter_994.code_ptr :
      local.code_995[0] == "]"
        ? local.iter_994.tape[local.iter_994.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_994.code_ptr)] : local.iter_994.code_ptr
        : local.iter_994.code_ptr)

    steps_taken = 1 + local.iter_994.steps_taken
  }
}

locals {
  code_996 = (try(local.iter_995.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_995.code_ptr, local.iter_995.code_ptr + 2)
    : [null])

  input_996 = (local.code_996[0] == ","
    ? substr(local.input_995, local.code_996[1], -1)
    : local.input_995)

  iter_996 = try(local.iter_995.code_ptr >= length(var.code), true) ? local.iter_995 : {
    output = (local.code_996[0] == "."
      ? "${local.iter_995.output}${join("", [for _ in range(local.code_996[1]) : jsondecode(format("\"\\u%04x\"", local.iter_995.tape[local.iter_995.tape_ptr]))])}"
      : local.iter_995.output)
    
    tape = (
      local.code_996[0] == "+"
        ? [for i, b in local.iter_995.tape : (i == local.iter_995.tape_ptr ? (b + local.code_996[1]) % 256 : b)] :
      local.code_996[0] == "-"
        ? [for i, b in local.iter_995.tape : (i == local.iter_995.tape_ptr ? (b - local.code_996[1] + 256) % 256 : b)] :
      local.code_996[0] == ","
        ? [for i, b in local.iter_995.tape : (i == local.iter_995.tape_ptr ? local.ascii_lookup[substr(local.input_996, 0, 1)] : b)]
        : local.iter_995.tape)

    tape_ptr = (
      local.code_996[0] == "<"
        ? local.iter_995.tape_ptr - local.code_996[1] :
      local.code_996[0] == ">"
        ? local.iter_995.tape_ptr + local.code_996[1]
        : local.iter_995.tape_ptr)

    code_ptr = 2 + (
      local.code_996[0] == "["
        ? local.iter_995.tape[local.iter_995.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_995.code_ptr)] : local.iter_995.code_ptr :
      local.code_996[0] == "]"
        ? local.iter_995.tape[local.iter_995.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_995.code_ptr)] : local.iter_995.code_ptr
        : local.iter_995.code_ptr)

    steps_taken = 1 + local.iter_995.steps_taken
  }
}

locals {
  code_997 = (try(local.iter_996.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_996.code_ptr, local.iter_996.code_ptr + 2)
    : [null])

  input_997 = (local.code_997[0] == ","
    ? substr(local.input_996, local.code_997[1], -1)
    : local.input_996)

  iter_997 = try(local.iter_996.code_ptr >= length(var.code), true) ? local.iter_996 : {
    output = (local.code_997[0] == "."
      ? "${local.iter_996.output}${join("", [for _ in range(local.code_997[1]) : jsondecode(format("\"\\u%04x\"", local.iter_996.tape[local.iter_996.tape_ptr]))])}"
      : local.iter_996.output)
    
    tape = (
      local.code_997[0] == "+"
        ? [for i, b in local.iter_996.tape : (i == local.iter_996.tape_ptr ? (b + local.code_997[1]) % 256 : b)] :
      local.code_997[0] == "-"
        ? [for i, b in local.iter_996.tape : (i == local.iter_996.tape_ptr ? (b - local.code_997[1] + 256) % 256 : b)] :
      local.code_997[0] == ","
        ? [for i, b in local.iter_996.tape : (i == local.iter_996.tape_ptr ? local.ascii_lookup[substr(local.input_997, 0, 1)] : b)]
        : local.iter_996.tape)

    tape_ptr = (
      local.code_997[0] == "<"
        ? local.iter_996.tape_ptr - local.code_997[1] :
      local.code_997[0] == ">"
        ? local.iter_996.tape_ptr + local.code_997[1]
        : local.iter_996.tape_ptr)

    code_ptr = 2 + (
      local.code_997[0] == "["
        ? local.iter_996.tape[local.iter_996.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_996.code_ptr)] : local.iter_996.code_ptr :
      local.code_997[0] == "]"
        ? local.iter_996.tape[local.iter_996.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_996.code_ptr)] : local.iter_996.code_ptr
        : local.iter_996.code_ptr)

    steps_taken = 1 + local.iter_996.steps_taken
  }
}

locals {
  code_998 = (try(local.iter_997.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_997.code_ptr, local.iter_997.code_ptr + 2)
    : [null])

  input_998 = (local.code_998[0] == ","
    ? substr(local.input_997, local.code_998[1], -1)
    : local.input_997)

  iter_998 = try(local.iter_997.code_ptr >= length(var.code), true) ? local.iter_997 : {
    output = (local.code_998[0] == "."
      ? "${local.iter_997.output}${join("", [for _ in range(local.code_998[1]) : jsondecode(format("\"\\u%04x\"", local.iter_997.tape[local.iter_997.tape_ptr]))])}"
      : local.iter_997.output)
    
    tape = (
      local.code_998[0] == "+"
        ? [for i, b in local.iter_997.tape : (i == local.iter_997.tape_ptr ? (b + local.code_998[1]) % 256 : b)] :
      local.code_998[0] == "-"
        ? [for i, b in local.iter_997.tape : (i == local.iter_997.tape_ptr ? (b - local.code_998[1] + 256) % 256 : b)] :
      local.code_998[0] == ","
        ? [for i, b in local.iter_997.tape : (i == local.iter_997.tape_ptr ? local.ascii_lookup[substr(local.input_998, 0, 1)] : b)]
        : local.iter_997.tape)

    tape_ptr = (
      local.code_998[0] == "<"
        ? local.iter_997.tape_ptr - local.code_998[1] :
      local.code_998[0] == ">"
        ? local.iter_997.tape_ptr + local.code_998[1]
        : local.iter_997.tape_ptr)

    code_ptr = 2 + (
      local.code_998[0] == "["
        ? local.iter_997.tape[local.iter_997.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_997.code_ptr)] : local.iter_997.code_ptr :
      local.code_998[0] == "]"
        ? local.iter_997.tape[local.iter_997.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_997.code_ptr)] : local.iter_997.code_ptr
        : local.iter_997.code_ptr)

    steps_taken = 1 + local.iter_997.steps_taken
  }
}

locals {
  code_999 = (try(local.iter_998.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_998.code_ptr, local.iter_998.code_ptr + 2)
    : [null])

  input_999 = (local.code_999[0] == ","
    ? substr(local.input_998, local.code_999[1], -1)
    : local.input_998)

  iter_999 = try(local.iter_998.code_ptr >= length(var.code), true) ? local.iter_998 : {
    output = (local.code_999[0] == "."
      ? "${local.iter_998.output}${join("", [for _ in range(local.code_999[1]) : jsondecode(format("\"\\u%04x\"", local.iter_998.tape[local.iter_998.tape_ptr]))])}"
      : local.iter_998.output)
    
    tape = (
      local.code_999[0] == "+"
        ? [for i, b in local.iter_998.tape : (i == local.iter_998.tape_ptr ? (b + local.code_999[1]) % 256 : b)] :
      local.code_999[0] == "-"
        ? [for i, b in local.iter_998.tape : (i == local.iter_998.tape_ptr ? (b - local.code_999[1] + 256) % 256 : b)] :
      local.code_999[0] == ","
        ? [for i, b in local.iter_998.tape : (i == local.iter_998.tape_ptr ? local.ascii_lookup[substr(local.input_999, 0, 1)] : b)]
        : local.iter_998.tape)

    tape_ptr = (
      local.code_999[0] == "<"
        ? local.iter_998.tape_ptr - local.code_999[1] :
      local.code_999[0] == ">"
        ? local.iter_998.tape_ptr + local.code_999[1]
        : local.iter_998.tape_ptr)

    code_ptr = 2 + (
      local.code_999[0] == "["
        ? local.iter_998.tape[local.iter_998.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_998.code_ptr)] : local.iter_998.code_ptr :
      local.code_999[0] == "]"
        ? local.iter_998.tape[local.iter_998.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_998.code_ptr)] : local.iter_998.code_ptr
        : local.iter_998.code_ptr)

    steps_taken = 1 + local.iter_998.steps_taken
  }
}

locals {
  code_1000 = (try(local.iter_999.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_999.code_ptr, local.iter_999.code_ptr + 2)
    : [null])

  input_1000 = (local.code_1000[0] == ","
    ? substr(local.input_999, local.code_1000[1], -1)
    : local.input_999)

  iter_1000 = try(local.iter_999.code_ptr >= length(var.code), true) ? local.iter_999 : {
    output = (local.code_1000[0] == "."
      ? "${local.iter_999.output}${join("", [for _ in range(local.code_1000[1]) : jsondecode(format("\"\\u%04x\"", local.iter_999.tape[local.iter_999.tape_ptr]))])}"
      : local.iter_999.output)
    
    tape = (
      local.code_1000[0] == "+"
        ? [for i, b in local.iter_999.tape : (i == local.iter_999.tape_ptr ? (b + local.code_1000[1]) % 256 : b)] :
      local.code_1000[0] == "-"
        ? [for i, b in local.iter_999.tape : (i == local.iter_999.tape_ptr ? (b - local.code_1000[1] + 256) % 256 : b)] :
      local.code_1000[0] == ","
        ? [for i, b in local.iter_999.tape : (i == local.iter_999.tape_ptr ? local.ascii_lookup[substr(local.input_1000, 0, 1)] : b)]
        : local.iter_999.tape)

    tape_ptr = (
      local.code_1000[0] == "<"
        ? local.iter_999.tape_ptr - local.code_1000[1] :
      local.code_1000[0] == ">"
        ? local.iter_999.tape_ptr + local.code_1000[1]
        : local.iter_999.tape_ptr)

    code_ptr = 2 + (
      local.code_1000[0] == "["
        ? local.iter_999.tape[local.iter_999.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_999.code_ptr)] : local.iter_999.code_ptr :
      local.code_1000[0] == "]"
        ? local.iter_999.tape[local.iter_999.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_999.code_ptr)] : local.iter_999.code_ptr
        : local.iter_999.code_ptr)

    steps_taken = 1 + local.iter_999.steps_taken
  }
}

locals {
  code_1001 = (try(local.iter_1000.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1000.code_ptr, local.iter_1000.code_ptr + 2)
    : [null])

  input_1001 = (local.code_1001[0] == ","
    ? substr(local.input_1000, local.code_1001[1], -1)
    : local.input_1000)

  iter_1001 = try(local.iter_1000.code_ptr >= length(var.code), true) ? local.iter_1000 : {
    output = (local.code_1001[0] == "."
      ? "${local.iter_1000.output}${join("", [for _ in range(local.code_1001[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1000.tape[local.iter_1000.tape_ptr]))])}"
      : local.iter_1000.output)
    
    tape = (
      local.code_1001[0] == "+"
        ? [for i, b in local.iter_1000.tape : (i == local.iter_1000.tape_ptr ? (b + local.code_1001[1]) % 256 : b)] :
      local.code_1001[0] == "-"
        ? [for i, b in local.iter_1000.tape : (i == local.iter_1000.tape_ptr ? (b - local.code_1001[1] + 256) % 256 : b)] :
      local.code_1001[0] == ","
        ? [for i, b in local.iter_1000.tape : (i == local.iter_1000.tape_ptr ? local.ascii_lookup[substr(local.input_1001, 0, 1)] : b)]
        : local.iter_1000.tape)

    tape_ptr = (
      local.code_1001[0] == "<"
        ? local.iter_1000.tape_ptr - local.code_1001[1] :
      local.code_1001[0] == ">"
        ? local.iter_1000.tape_ptr + local.code_1001[1]
        : local.iter_1000.tape_ptr)

    code_ptr = 2 + (
      local.code_1001[0] == "["
        ? local.iter_1000.tape[local.iter_1000.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1000.code_ptr)] : local.iter_1000.code_ptr :
      local.code_1001[0] == "]"
        ? local.iter_1000.tape[local.iter_1000.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1000.code_ptr)] : local.iter_1000.code_ptr
        : local.iter_1000.code_ptr)

    steps_taken = 1 + local.iter_1000.steps_taken
  }
}

locals {
  code_1002 = (try(local.iter_1001.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1001.code_ptr, local.iter_1001.code_ptr + 2)
    : [null])

  input_1002 = (local.code_1002[0] == ","
    ? substr(local.input_1001, local.code_1002[1], -1)
    : local.input_1001)

  iter_1002 = try(local.iter_1001.code_ptr >= length(var.code), true) ? local.iter_1001 : {
    output = (local.code_1002[0] == "."
      ? "${local.iter_1001.output}${join("", [for _ in range(local.code_1002[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1001.tape[local.iter_1001.tape_ptr]))])}"
      : local.iter_1001.output)
    
    tape = (
      local.code_1002[0] == "+"
        ? [for i, b in local.iter_1001.tape : (i == local.iter_1001.tape_ptr ? (b + local.code_1002[1]) % 256 : b)] :
      local.code_1002[0] == "-"
        ? [for i, b in local.iter_1001.tape : (i == local.iter_1001.tape_ptr ? (b - local.code_1002[1] + 256) % 256 : b)] :
      local.code_1002[0] == ","
        ? [for i, b in local.iter_1001.tape : (i == local.iter_1001.tape_ptr ? local.ascii_lookup[substr(local.input_1002, 0, 1)] : b)]
        : local.iter_1001.tape)

    tape_ptr = (
      local.code_1002[0] == "<"
        ? local.iter_1001.tape_ptr - local.code_1002[1] :
      local.code_1002[0] == ">"
        ? local.iter_1001.tape_ptr + local.code_1002[1]
        : local.iter_1001.tape_ptr)

    code_ptr = 2 + (
      local.code_1002[0] == "["
        ? local.iter_1001.tape[local.iter_1001.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1001.code_ptr)] : local.iter_1001.code_ptr :
      local.code_1002[0] == "]"
        ? local.iter_1001.tape[local.iter_1001.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1001.code_ptr)] : local.iter_1001.code_ptr
        : local.iter_1001.code_ptr)

    steps_taken = 1 + local.iter_1001.steps_taken
  }
}

locals {
  code_1003 = (try(local.iter_1002.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1002.code_ptr, local.iter_1002.code_ptr + 2)
    : [null])

  input_1003 = (local.code_1003[0] == ","
    ? substr(local.input_1002, local.code_1003[1], -1)
    : local.input_1002)

  iter_1003 = try(local.iter_1002.code_ptr >= length(var.code), true) ? local.iter_1002 : {
    output = (local.code_1003[0] == "."
      ? "${local.iter_1002.output}${join("", [for _ in range(local.code_1003[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1002.tape[local.iter_1002.tape_ptr]))])}"
      : local.iter_1002.output)
    
    tape = (
      local.code_1003[0] == "+"
        ? [for i, b in local.iter_1002.tape : (i == local.iter_1002.tape_ptr ? (b + local.code_1003[1]) % 256 : b)] :
      local.code_1003[0] == "-"
        ? [for i, b in local.iter_1002.tape : (i == local.iter_1002.tape_ptr ? (b - local.code_1003[1] + 256) % 256 : b)] :
      local.code_1003[0] == ","
        ? [for i, b in local.iter_1002.tape : (i == local.iter_1002.tape_ptr ? local.ascii_lookup[substr(local.input_1003, 0, 1)] : b)]
        : local.iter_1002.tape)

    tape_ptr = (
      local.code_1003[0] == "<"
        ? local.iter_1002.tape_ptr - local.code_1003[1] :
      local.code_1003[0] == ">"
        ? local.iter_1002.tape_ptr + local.code_1003[1]
        : local.iter_1002.tape_ptr)

    code_ptr = 2 + (
      local.code_1003[0] == "["
        ? local.iter_1002.tape[local.iter_1002.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1002.code_ptr)] : local.iter_1002.code_ptr :
      local.code_1003[0] == "]"
        ? local.iter_1002.tape[local.iter_1002.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1002.code_ptr)] : local.iter_1002.code_ptr
        : local.iter_1002.code_ptr)

    steps_taken = 1 + local.iter_1002.steps_taken
  }
}

locals {
  code_1004 = (try(local.iter_1003.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1003.code_ptr, local.iter_1003.code_ptr + 2)
    : [null])

  input_1004 = (local.code_1004[0] == ","
    ? substr(local.input_1003, local.code_1004[1], -1)
    : local.input_1003)

  iter_1004 = try(local.iter_1003.code_ptr >= length(var.code), true) ? local.iter_1003 : {
    output = (local.code_1004[0] == "."
      ? "${local.iter_1003.output}${join("", [for _ in range(local.code_1004[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1003.tape[local.iter_1003.tape_ptr]))])}"
      : local.iter_1003.output)
    
    tape = (
      local.code_1004[0] == "+"
        ? [for i, b in local.iter_1003.tape : (i == local.iter_1003.tape_ptr ? (b + local.code_1004[1]) % 256 : b)] :
      local.code_1004[0] == "-"
        ? [for i, b in local.iter_1003.tape : (i == local.iter_1003.tape_ptr ? (b - local.code_1004[1] + 256) % 256 : b)] :
      local.code_1004[0] == ","
        ? [for i, b in local.iter_1003.tape : (i == local.iter_1003.tape_ptr ? local.ascii_lookup[substr(local.input_1004, 0, 1)] : b)]
        : local.iter_1003.tape)

    tape_ptr = (
      local.code_1004[0] == "<"
        ? local.iter_1003.tape_ptr - local.code_1004[1] :
      local.code_1004[0] == ">"
        ? local.iter_1003.tape_ptr + local.code_1004[1]
        : local.iter_1003.tape_ptr)

    code_ptr = 2 + (
      local.code_1004[0] == "["
        ? local.iter_1003.tape[local.iter_1003.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1003.code_ptr)] : local.iter_1003.code_ptr :
      local.code_1004[0] == "]"
        ? local.iter_1003.tape[local.iter_1003.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1003.code_ptr)] : local.iter_1003.code_ptr
        : local.iter_1003.code_ptr)

    steps_taken = 1 + local.iter_1003.steps_taken
  }
}

locals {
  code_1005 = (try(local.iter_1004.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1004.code_ptr, local.iter_1004.code_ptr + 2)
    : [null])

  input_1005 = (local.code_1005[0] == ","
    ? substr(local.input_1004, local.code_1005[1], -1)
    : local.input_1004)

  iter_1005 = try(local.iter_1004.code_ptr >= length(var.code), true) ? local.iter_1004 : {
    output = (local.code_1005[0] == "."
      ? "${local.iter_1004.output}${join("", [for _ in range(local.code_1005[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1004.tape[local.iter_1004.tape_ptr]))])}"
      : local.iter_1004.output)
    
    tape = (
      local.code_1005[0] == "+"
        ? [for i, b in local.iter_1004.tape : (i == local.iter_1004.tape_ptr ? (b + local.code_1005[1]) % 256 : b)] :
      local.code_1005[0] == "-"
        ? [for i, b in local.iter_1004.tape : (i == local.iter_1004.tape_ptr ? (b - local.code_1005[1] + 256) % 256 : b)] :
      local.code_1005[0] == ","
        ? [for i, b in local.iter_1004.tape : (i == local.iter_1004.tape_ptr ? local.ascii_lookup[substr(local.input_1005, 0, 1)] : b)]
        : local.iter_1004.tape)

    tape_ptr = (
      local.code_1005[0] == "<"
        ? local.iter_1004.tape_ptr - local.code_1005[1] :
      local.code_1005[0] == ">"
        ? local.iter_1004.tape_ptr + local.code_1005[1]
        : local.iter_1004.tape_ptr)

    code_ptr = 2 + (
      local.code_1005[0] == "["
        ? local.iter_1004.tape[local.iter_1004.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1004.code_ptr)] : local.iter_1004.code_ptr :
      local.code_1005[0] == "]"
        ? local.iter_1004.tape[local.iter_1004.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1004.code_ptr)] : local.iter_1004.code_ptr
        : local.iter_1004.code_ptr)

    steps_taken = 1 + local.iter_1004.steps_taken
  }
}

locals {
  code_1006 = (try(local.iter_1005.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1005.code_ptr, local.iter_1005.code_ptr + 2)
    : [null])

  input_1006 = (local.code_1006[0] == ","
    ? substr(local.input_1005, local.code_1006[1], -1)
    : local.input_1005)

  iter_1006 = try(local.iter_1005.code_ptr >= length(var.code), true) ? local.iter_1005 : {
    output = (local.code_1006[0] == "."
      ? "${local.iter_1005.output}${join("", [for _ in range(local.code_1006[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1005.tape[local.iter_1005.tape_ptr]))])}"
      : local.iter_1005.output)
    
    tape = (
      local.code_1006[0] == "+"
        ? [for i, b in local.iter_1005.tape : (i == local.iter_1005.tape_ptr ? (b + local.code_1006[1]) % 256 : b)] :
      local.code_1006[0] == "-"
        ? [for i, b in local.iter_1005.tape : (i == local.iter_1005.tape_ptr ? (b - local.code_1006[1] + 256) % 256 : b)] :
      local.code_1006[0] == ","
        ? [for i, b in local.iter_1005.tape : (i == local.iter_1005.tape_ptr ? local.ascii_lookup[substr(local.input_1006, 0, 1)] : b)]
        : local.iter_1005.tape)

    tape_ptr = (
      local.code_1006[0] == "<"
        ? local.iter_1005.tape_ptr - local.code_1006[1] :
      local.code_1006[0] == ">"
        ? local.iter_1005.tape_ptr + local.code_1006[1]
        : local.iter_1005.tape_ptr)

    code_ptr = 2 + (
      local.code_1006[0] == "["
        ? local.iter_1005.tape[local.iter_1005.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1005.code_ptr)] : local.iter_1005.code_ptr :
      local.code_1006[0] == "]"
        ? local.iter_1005.tape[local.iter_1005.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1005.code_ptr)] : local.iter_1005.code_ptr
        : local.iter_1005.code_ptr)

    steps_taken = 1 + local.iter_1005.steps_taken
  }
}

locals {
  code_1007 = (try(local.iter_1006.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1006.code_ptr, local.iter_1006.code_ptr + 2)
    : [null])

  input_1007 = (local.code_1007[0] == ","
    ? substr(local.input_1006, local.code_1007[1], -1)
    : local.input_1006)

  iter_1007 = try(local.iter_1006.code_ptr >= length(var.code), true) ? local.iter_1006 : {
    output = (local.code_1007[0] == "."
      ? "${local.iter_1006.output}${join("", [for _ in range(local.code_1007[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1006.tape[local.iter_1006.tape_ptr]))])}"
      : local.iter_1006.output)
    
    tape = (
      local.code_1007[0] == "+"
        ? [for i, b in local.iter_1006.tape : (i == local.iter_1006.tape_ptr ? (b + local.code_1007[1]) % 256 : b)] :
      local.code_1007[0] == "-"
        ? [for i, b in local.iter_1006.tape : (i == local.iter_1006.tape_ptr ? (b - local.code_1007[1] + 256) % 256 : b)] :
      local.code_1007[0] == ","
        ? [for i, b in local.iter_1006.tape : (i == local.iter_1006.tape_ptr ? local.ascii_lookup[substr(local.input_1007, 0, 1)] : b)]
        : local.iter_1006.tape)

    tape_ptr = (
      local.code_1007[0] == "<"
        ? local.iter_1006.tape_ptr - local.code_1007[1] :
      local.code_1007[0] == ">"
        ? local.iter_1006.tape_ptr + local.code_1007[1]
        : local.iter_1006.tape_ptr)

    code_ptr = 2 + (
      local.code_1007[0] == "["
        ? local.iter_1006.tape[local.iter_1006.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1006.code_ptr)] : local.iter_1006.code_ptr :
      local.code_1007[0] == "]"
        ? local.iter_1006.tape[local.iter_1006.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1006.code_ptr)] : local.iter_1006.code_ptr
        : local.iter_1006.code_ptr)

    steps_taken = 1 + local.iter_1006.steps_taken
  }
}

locals {
  code_1008 = (try(local.iter_1007.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1007.code_ptr, local.iter_1007.code_ptr + 2)
    : [null])

  input_1008 = (local.code_1008[0] == ","
    ? substr(local.input_1007, local.code_1008[1], -1)
    : local.input_1007)

  iter_1008 = try(local.iter_1007.code_ptr >= length(var.code), true) ? local.iter_1007 : {
    output = (local.code_1008[0] == "."
      ? "${local.iter_1007.output}${join("", [for _ in range(local.code_1008[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1007.tape[local.iter_1007.tape_ptr]))])}"
      : local.iter_1007.output)
    
    tape = (
      local.code_1008[0] == "+"
        ? [for i, b in local.iter_1007.tape : (i == local.iter_1007.tape_ptr ? (b + local.code_1008[1]) % 256 : b)] :
      local.code_1008[0] == "-"
        ? [for i, b in local.iter_1007.tape : (i == local.iter_1007.tape_ptr ? (b - local.code_1008[1] + 256) % 256 : b)] :
      local.code_1008[0] == ","
        ? [for i, b in local.iter_1007.tape : (i == local.iter_1007.tape_ptr ? local.ascii_lookup[substr(local.input_1008, 0, 1)] : b)]
        : local.iter_1007.tape)

    tape_ptr = (
      local.code_1008[0] == "<"
        ? local.iter_1007.tape_ptr - local.code_1008[1] :
      local.code_1008[0] == ">"
        ? local.iter_1007.tape_ptr + local.code_1008[1]
        : local.iter_1007.tape_ptr)

    code_ptr = 2 + (
      local.code_1008[0] == "["
        ? local.iter_1007.tape[local.iter_1007.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1007.code_ptr)] : local.iter_1007.code_ptr :
      local.code_1008[0] == "]"
        ? local.iter_1007.tape[local.iter_1007.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1007.code_ptr)] : local.iter_1007.code_ptr
        : local.iter_1007.code_ptr)

    steps_taken = 1 + local.iter_1007.steps_taken
  }
}

locals {
  code_1009 = (try(local.iter_1008.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1008.code_ptr, local.iter_1008.code_ptr + 2)
    : [null])

  input_1009 = (local.code_1009[0] == ","
    ? substr(local.input_1008, local.code_1009[1], -1)
    : local.input_1008)

  iter_1009 = try(local.iter_1008.code_ptr >= length(var.code), true) ? local.iter_1008 : {
    output = (local.code_1009[0] == "."
      ? "${local.iter_1008.output}${join("", [for _ in range(local.code_1009[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1008.tape[local.iter_1008.tape_ptr]))])}"
      : local.iter_1008.output)
    
    tape = (
      local.code_1009[0] == "+"
        ? [for i, b in local.iter_1008.tape : (i == local.iter_1008.tape_ptr ? (b + local.code_1009[1]) % 256 : b)] :
      local.code_1009[0] == "-"
        ? [for i, b in local.iter_1008.tape : (i == local.iter_1008.tape_ptr ? (b - local.code_1009[1] + 256) % 256 : b)] :
      local.code_1009[0] == ","
        ? [for i, b in local.iter_1008.tape : (i == local.iter_1008.tape_ptr ? local.ascii_lookup[substr(local.input_1009, 0, 1)] : b)]
        : local.iter_1008.tape)

    tape_ptr = (
      local.code_1009[0] == "<"
        ? local.iter_1008.tape_ptr - local.code_1009[1] :
      local.code_1009[0] == ">"
        ? local.iter_1008.tape_ptr + local.code_1009[1]
        : local.iter_1008.tape_ptr)

    code_ptr = 2 + (
      local.code_1009[0] == "["
        ? local.iter_1008.tape[local.iter_1008.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1008.code_ptr)] : local.iter_1008.code_ptr :
      local.code_1009[0] == "]"
        ? local.iter_1008.tape[local.iter_1008.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1008.code_ptr)] : local.iter_1008.code_ptr
        : local.iter_1008.code_ptr)

    steps_taken = 1 + local.iter_1008.steps_taken
  }
}

locals {
  code_1010 = (try(local.iter_1009.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1009.code_ptr, local.iter_1009.code_ptr + 2)
    : [null])

  input_1010 = (local.code_1010[0] == ","
    ? substr(local.input_1009, local.code_1010[1], -1)
    : local.input_1009)

  iter_1010 = try(local.iter_1009.code_ptr >= length(var.code), true) ? local.iter_1009 : {
    output = (local.code_1010[0] == "."
      ? "${local.iter_1009.output}${join("", [for _ in range(local.code_1010[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1009.tape[local.iter_1009.tape_ptr]))])}"
      : local.iter_1009.output)
    
    tape = (
      local.code_1010[0] == "+"
        ? [for i, b in local.iter_1009.tape : (i == local.iter_1009.tape_ptr ? (b + local.code_1010[1]) % 256 : b)] :
      local.code_1010[0] == "-"
        ? [for i, b in local.iter_1009.tape : (i == local.iter_1009.tape_ptr ? (b - local.code_1010[1] + 256) % 256 : b)] :
      local.code_1010[0] == ","
        ? [for i, b in local.iter_1009.tape : (i == local.iter_1009.tape_ptr ? local.ascii_lookup[substr(local.input_1010, 0, 1)] : b)]
        : local.iter_1009.tape)

    tape_ptr = (
      local.code_1010[0] == "<"
        ? local.iter_1009.tape_ptr - local.code_1010[1] :
      local.code_1010[0] == ">"
        ? local.iter_1009.tape_ptr + local.code_1010[1]
        : local.iter_1009.tape_ptr)

    code_ptr = 2 + (
      local.code_1010[0] == "["
        ? local.iter_1009.tape[local.iter_1009.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1009.code_ptr)] : local.iter_1009.code_ptr :
      local.code_1010[0] == "]"
        ? local.iter_1009.tape[local.iter_1009.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1009.code_ptr)] : local.iter_1009.code_ptr
        : local.iter_1009.code_ptr)

    steps_taken = 1 + local.iter_1009.steps_taken
  }
}

locals {
  code_1011 = (try(local.iter_1010.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1010.code_ptr, local.iter_1010.code_ptr + 2)
    : [null])

  input_1011 = (local.code_1011[0] == ","
    ? substr(local.input_1010, local.code_1011[1], -1)
    : local.input_1010)

  iter_1011 = try(local.iter_1010.code_ptr >= length(var.code), true) ? local.iter_1010 : {
    output = (local.code_1011[0] == "."
      ? "${local.iter_1010.output}${join("", [for _ in range(local.code_1011[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1010.tape[local.iter_1010.tape_ptr]))])}"
      : local.iter_1010.output)
    
    tape = (
      local.code_1011[0] == "+"
        ? [for i, b in local.iter_1010.tape : (i == local.iter_1010.tape_ptr ? (b + local.code_1011[1]) % 256 : b)] :
      local.code_1011[0] == "-"
        ? [for i, b in local.iter_1010.tape : (i == local.iter_1010.tape_ptr ? (b - local.code_1011[1] + 256) % 256 : b)] :
      local.code_1011[0] == ","
        ? [for i, b in local.iter_1010.tape : (i == local.iter_1010.tape_ptr ? local.ascii_lookup[substr(local.input_1011, 0, 1)] : b)]
        : local.iter_1010.tape)

    tape_ptr = (
      local.code_1011[0] == "<"
        ? local.iter_1010.tape_ptr - local.code_1011[1] :
      local.code_1011[0] == ">"
        ? local.iter_1010.tape_ptr + local.code_1011[1]
        : local.iter_1010.tape_ptr)

    code_ptr = 2 + (
      local.code_1011[0] == "["
        ? local.iter_1010.tape[local.iter_1010.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1010.code_ptr)] : local.iter_1010.code_ptr :
      local.code_1011[0] == "]"
        ? local.iter_1010.tape[local.iter_1010.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1010.code_ptr)] : local.iter_1010.code_ptr
        : local.iter_1010.code_ptr)

    steps_taken = 1 + local.iter_1010.steps_taken
  }
}

locals {
  code_1012 = (try(local.iter_1011.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1011.code_ptr, local.iter_1011.code_ptr + 2)
    : [null])

  input_1012 = (local.code_1012[0] == ","
    ? substr(local.input_1011, local.code_1012[1], -1)
    : local.input_1011)

  iter_1012 = try(local.iter_1011.code_ptr >= length(var.code), true) ? local.iter_1011 : {
    output = (local.code_1012[0] == "."
      ? "${local.iter_1011.output}${join("", [for _ in range(local.code_1012[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1011.tape[local.iter_1011.tape_ptr]))])}"
      : local.iter_1011.output)
    
    tape = (
      local.code_1012[0] == "+"
        ? [for i, b in local.iter_1011.tape : (i == local.iter_1011.tape_ptr ? (b + local.code_1012[1]) % 256 : b)] :
      local.code_1012[0] == "-"
        ? [for i, b in local.iter_1011.tape : (i == local.iter_1011.tape_ptr ? (b - local.code_1012[1] + 256) % 256 : b)] :
      local.code_1012[0] == ","
        ? [for i, b in local.iter_1011.tape : (i == local.iter_1011.tape_ptr ? local.ascii_lookup[substr(local.input_1012, 0, 1)] : b)]
        : local.iter_1011.tape)

    tape_ptr = (
      local.code_1012[0] == "<"
        ? local.iter_1011.tape_ptr - local.code_1012[1] :
      local.code_1012[0] == ">"
        ? local.iter_1011.tape_ptr + local.code_1012[1]
        : local.iter_1011.tape_ptr)

    code_ptr = 2 + (
      local.code_1012[0] == "["
        ? local.iter_1011.tape[local.iter_1011.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1011.code_ptr)] : local.iter_1011.code_ptr :
      local.code_1012[0] == "]"
        ? local.iter_1011.tape[local.iter_1011.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1011.code_ptr)] : local.iter_1011.code_ptr
        : local.iter_1011.code_ptr)

    steps_taken = 1 + local.iter_1011.steps_taken
  }
}

locals {
  code_1013 = (try(local.iter_1012.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1012.code_ptr, local.iter_1012.code_ptr + 2)
    : [null])

  input_1013 = (local.code_1013[0] == ","
    ? substr(local.input_1012, local.code_1013[1], -1)
    : local.input_1012)

  iter_1013 = try(local.iter_1012.code_ptr >= length(var.code), true) ? local.iter_1012 : {
    output = (local.code_1013[0] == "."
      ? "${local.iter_1012.output}${join("", [for _ in range(local.code_1013[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1012.tape[local.iter_1012.tape_ptr]))])}"
      : local.iter_1012.output)
    
    tape = (
      local.code_1013[0] == "+"
        ? [for i, b in local.iter_1012.tape : (i == local.iter_1012.tape_ptr ? (b + local.code_1013[1]) % 256 : b)] :
      local.code_1013[0] == "-"
        ? [for i, b in local.iter_1012.tape : (i == local.iter_1012.tape_ptr ? (b - local.code_1013[1] + 256) % 256 : b)] :
      local.code_1013[0] == ","
        ? [for i, b in local.iter_1012.tape : (i == local.iter_1012.tape_ptr ? local.ascii_lookup[substr(local.input_1013, 0, 1)] : b)]
        : local.iter_1012.tape)

    tape_ptr = (
      local.code_1013[0] == "<"
        ? local.iter_1012.tape_ptr - local.code_1013[1] :
      local.code_1013[0] == ">"
        ? local.iter_1012.tape_ptr + local.code_1013[1]
        : local.iter_1012.tape_ptr)

    code_ptr = 2 + (
      local.code_1013[0] == "["
        ? local.iter_1012.tape[local.iter_1012.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1012.code_ptr)] : local.iter_1012.code_ptr :
      local.code_1013[0] == "]"
        ? local.iter_1012.tape[local.iter_1012.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1012.code_ptr)] : local.iter_1012.code_ptr
        : local.iter_1012.code_ptr)

    steps_taken = 1 + local.iter_1012.steps_taken
  }
}

locals {
  code_1014 = (try(local.iter_1013.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1013.code_ptr, local.iter_1013.code_ptr + 2)
    : [null])

  input_1014 = (local.code_1014[0] == ","
    ? substr(local.input_1013, local.code_1014[1], -1)
    : local.input_1013)

  iter_1014 = try(local.iter_1013.code_ptr >= length(var.code), true) ? local.iter_1013 : {
    output = (local.code_1014[0] == "."
      ? "${local.iter_1013.output}${join("", [for _ in range(local.code_1014[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1013.tape[local.iter_1013.tape_ptr]))])}"
      : local.iter_1013.output)
    
    tape = (
      local.code_1014[0] == "+"
        ? [for i, b in local.iter_1013.tape : (i == local.iter_1013.tape_ptr ? (b + local.code_1014[1]) % 256 : b)] :
      local.code_1014[0] == "-"
        ? [for i, b in local.iter_1013.tape : (i == local.iter_1013.tape_ptr ? (b - local.code_1014[1] + 256) % 256 : b)] :
      local.code_1014[0] == ","
        ? [for i, b in local.iter_1013.tape : (i == local.iter_1013.tape_ptr ? local.ascii_lookup[substr(local.input_1014, 0, 1)] : b)]
        : local.iter_1013.tape)

    tape_ptr = (
      local.code_1014[0] == "<"
        ? local.iter_1013.tape_ptr - local.code_1014[1] :
      local.code_1014[0] == ">"
        ? local.iter_1013.tape_ptr + local.code_1014[1]
        : local.iter_1013.tape_ptr)

    code_ptr = 2 + (
      local.code_1014[0] == "["
        ? local.iter_1013.tape[local.iter_1013.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1013.code_ptr)] : local.iter_1013.code_ptr :
      local.code_1014[0] == "]"
        ? local.iter_1013.tape[local.iter_1013.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1013.code_ptr)] : local.iter_1013.code_ptr
        : local.iter_1013.code_ptr)

    steps_taken = 1 + local.iter_1013.steps_taken
  }
}

locals {
  code_1015 = (try(local.iter_1014.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1014.code_ptr, local.iter_1014.code_ptr + 2)
    : [null])

  input_1015 = (local.code_1015[0] == ","
    ? substr(local.input_1014, local.code_1015[1], -1)
    : local.input_1014)

  iter_1015 = try(local.iter_1014.code_ptr >= length(var.code), true) ? local.iter_1014 : {
    output = (local.code_1015[0] == "."
      ? "${local.iter_1014.output}${join("", [for _ in range(local.code_1015[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1014.tape[local.iter_1014.tape_ptr]))])}"
      : local.iter_1014.output)
    
    tape = (
      local.code_1015[0] == "+"
        ? [for i, b in local.iter_1014.tape : (i == local.iter_1014.tape_ptr ? (b + local.code_1015[1]) % 256 : b)] :
      local.code_1015[0] == "-"
        ? [for i, b in local.iter_1014.tape : (i == local.iter_1014.tape_ptr ? (b - local.code_1015[1] + 256) % 256 : b)] :
      local.code_1015[0] == ","
        ? [for i, b in local.iter_1014.tape : (i == local.iter_1014.tape_ptr ? local.ascii_lookup[substr(local.input_1015, 0, 1)] : b)]
        : local.iter_1014.tape)

    tape_ptr = (
      local.code_1015[0] == "<"
        ? local.iter_1014.tape_ptr - local.code_1015[1] :
      local.code_1015[0] == ">"
        ? local.iter_1014.tape_ptr + local.code_1015[1]
        : local.iter_1014.tape_ptr)

    code_ptr = 2 + (
      local.code_1015[0] == "["
        ? local.iter_1014.tape[local.iter_1014.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1014.code_ptr)] : local.iter_1014.code_ptr :
      local.code_1015[0] == "]"
        ? local.iter_1014.tape[local.iter_1014.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1014.code_ptr)] : local.iter_1014.code_ptr
        : local.iter_1014.code_ptr)

    steps_taken = 1 + local.iter_1014.steps_taken
  }
}

locals {
  code_1016 = (try(local.iter_1015.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1015.code_ptr, local.iter_1015.code_ptr + 2)
    : [null])

  input_1016 = (local.code_1016[0] == ","
    ? substr(local.input_1015, local.code_1016[1], -1)
    : local.input_1015)

  iter_1016 = try(local.iter_1015.code_ptr >= length(var.code), true) ? local.iter_1015 : {
    output = (local.code_1016[0] == "."
      ? "${local.iter_1015.output}${join("", [for _ in range(local.code_1016[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1015.tape[local.iter_1015.tape_ptr]))])}"
      : local.iter_1015.output)
    
    tape = (
      local.code_1016[0] == "+"
        ? [for i, b in local.iter_1015.tape : (i == local.iter_1015.tape_ptr ? (b + local.code_1016[1]) % 256 : b)] :
      local.code_1016[0] == "-"
        ? [for i, b in local.iter_1015.tape : (i == local.iter_1015.tape_ptr ? (b - local.code_1016[1] + 256) % 256 : b)] :
      local.code_1016[0] == ","
        ? [for i, b in local.iter_1015.tape : (i == local.iter_1015.tape_ptr ? local.ascii_lookup[substr(local.input_1016, 0, 1)] : b)]
        : local.iter_1015.tape)

    tape_ptr = (
      local.code_1016[0] == "<"
        ? local.iter_1015.tape_ptr - local.code_1016[1] :
      local.code_1016[0] == ">"
        ? local.iter_1015.tape_ptr + local.code_1016[1]
        : local.iter_1015.tape_ptr)

    code_ptr = 2 + (
      local.code_1016[0] == "["
        ? local.iter_1015.tape[local.iter_1015.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1015.code_ptr)] : local.iter_1015.code_ptr :
      local.code_1016[0] == "]"
        ? local.iter_1015.tape[local.iter_1015.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1015.code_ptr)] : local.iter_1015.code_ptr
        : local.iter_1015.code_ptr)

    steps_taken = 1 + local.iter_1015.steps_taken
  }
}

locals {
  code_1017 = (try(local.iter_1016.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1016.code_ptr, local.iter_1016.code_ptr + 2)
    : [null])

  input_1017 = (local.code_1017[0] == ","
    ? substr(local.input_1016, local.code_1017[1], -1)
    : local.input_1016)

  iter_1017 = try(local.iter_1016.code_ptr >= length(var.code), true) ? local.iter_1016 : {
    output = (local.code_1017[0] == "."
      ? "${local.iter_1016.output}${join("", [for _ in range(local.code_1017[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1016.tape[local.iter_1016.tape_ptr]))])}"
      : local.iter_1016.output)
    
    tape = (
      local.code_1017[0] == "+"
        ? [for i, b in local.iter_1016.tape : (i == local.iter_1016.tape_ptr ? (b + local.code_1017[1]) % 256 : b)] :
      local.code_1017[0] == "-"
        ? [for i, b in local.iter_1016.tape : (i == local.iter_1016.tape_ptr ? (b - local.code_1017[1] + 256) % 256 : b)] :
      local.code_1017[0] == ","
        ? [for i, b in local.iter_1016.tape : (i == local.iter_1016.tape_ptr ? local.ascii_lookup[substr(local.input_1017, 0, 1)] : b)]
        : local.iter_1016.tape)

    tape_ptr = (
      local.code_1017[0] == "<"
        ? local.iter_1016.tape_ptr - local.code_1017[1] :
      local.code_1017[0] == ">"
        ? local.iter_1016.tape_ptr + local.code_1017[1]
        : local.iter_1016.tape_ptr)

    code_ptr = 2 + (
      local.code_1017[0] == "["
        ? local.iter_1016.tape[local.iter_1016.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1016.code_ptr)] : local.iter_1016.code_ptr :
      local.code_1017[0] == "]"
        ? local.iter_1016.tape[local.iter_1016.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1016.code_ptr)] : local.iter_1016.code_ptr
        : local.iter_1016.code_ptr)

    steps_taken = 1 + local.iter_1016.steps_taken
  }
}

locals {
  code_1018 = (try(local.iter_1017.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1017.code_ptr, local.iter_1017.code_ptr + 2)
    : [null])

  input_1018 = (local.code_1018[0] == ","
    ? substr(local.input_1017, local.code_1018[1], -1)
    : local.input_1017)

  iter_1018 = try(local.iter_1017.code_ptr >= length(var.code), true) ? local.iter_1017 : {
    output = (local.code_1018[0] == "."
      ? "${local.iter_1017.output}${join("", [for _ in range(local.code_1018[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1017.tape[local.iter_1017.tape_ptr]))])}"
      : local.iter_1017.output)
    
    tape = (
      local.code_1018[0] == "+"
        ? [for i, b in local.iter_1017.tape : (i == local.iter_1017.tape_ptr ? (b + local.code_1018[1]) % 256 : b)] :
      local.code_1018[0] == "-"
        ? [for i, b in local.iter_1017.tape : (i == local.iter_1017.tape_ptr ? (b - local.code_1018[1] + 256) % 256 : b)] :
      local.code_1018[0] == ","
        ? [for i, b in local.iter_1017.tape : (i == local.iter_1017.tape_ptr ? local.ascii_lookup[substr(local.input_1018, 0, 1)] : b)]
        : local.iter_1017.tape)

    tape_ptr = (
      local.code_1018[0] == "<"
        ? local.iter_1017.tape_ptr - local.code_1018[1] :
      local.code_1018[0] == ">"
        ? local.iter_1017.tape_ptr + local.code_1018[1]
        : local.iter_1017.tape_ptr)

    code_ptr = 2 + (
      local.code_1018[0] == "["
        ? local.iter_1017.tape[local.iter_1017.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1017.code_ptr)] : local.iter_1017.code_ptr :
      local.code_1018[0] == "]"
        ? local.iter_1017.tape[local.iter_1017.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1017.code_ptr)] : local.iter_1017.code_ptr
        : local.iter_1017.code_ptr)

    steps_taken = 1 + local.iter_1017.steps_taken
  }
}

locals {
  code_1019 = (try(local.iter_1018.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1018.code_ptr, local.iter_1018.code_ptr + 2)
    : [null])

  input_1019 = (local.code_1019[0] == ","
    ? substr(local.input_1018, local.code_1019[1], -1)
    : local.input_1018)

  iter_1019 = try(local.iter_1018.code_ptr >= length(var.code), true) ? local.iter_1018 : {
    output = (local.code_1019[0] == "."
      ? "${local.iter_1018.output}${join("", [for _ in range(local.code_1019[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1018.tape[local.iter_1018.tape_ptr]))])}"
      : local.iter_1018.output)
    
    tape = (
      local.code_1019[0] == "+"
        ? [for i, b in local.iter_1018.tape : (i == local.iter_1018.tape_ptr ? (b + local.code_1019[1]) % 256 : b)] :
      local.code_1019[0] == "-"
        ? [for i, b in local.iter_1018.tape : (i == local.iter_1018.tape_ptr ? (b - local.code_1019[1] + 256) % 256 : b)] :
      local.code_1019[0] == ","
        ? [for i, b in local.iter_1018.tape : (i == local.iter_1018.tape_ptr ? local.ascii_lookup[substr(local.input_1019, 0, 1)] : b)]
        : local.iter_1018.tape)

    tape_ptr = (
      local.code_1019[0] == "<"
        ? local.iter_1018.tape_ptr - local.code_1019[1] :
      local.code_1019[0] == ">"
        ? local.iter_1018.tape_ptr + local.code_1019[1]
        : local.iter_1018.tape_ptr)

    code_ptr = 2 + (
      local.code_1019[0] == "["
        ? local.iter_1018.tape[local.iter_1018.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1018.code_ptr)] : local.iter_1018.code_ptr :
      local.code_1019[0] == "]"
        ? local.iter_1018.tape[local.iter_1018.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1018.code_ptr)] : local.iter_1018.code_ptr
        : local.iter_1018.code_ptr)

    steps_taken = 1 + local.iter_1018.steps_taken
  }
}

locals {
  code_1020 = (try(local.iter_1019.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1019.code_ptr, local.iter_1019.code_ptr + 2)
    : [null])

  input_1020 = (local.code_1020[0] == ","
    ? substr(local.input_1019, local.code_1020[1], -1)
    : local.input_1019)

  iter_1020 = try(local.iter_1019.code_ptr >= length(var.code), true) ? local.iter_1019 : {
    output = (local.code_1020[0] == "."
      ? "${local.iter_1019.output}${join("", [for _ in range(local.code_1020[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1019.tape[local.iter_1019.tape_ptr]))])}"
      : local.iter_1019.output)
    
    tape = (
      local.code_1020[0] == "+"
        ? [for i, b in local.iter_1019.tape : (i == local.iter_1019.tape_ptr ? (b + local.code_1020[1]) % 256 : b)] :
      local.code_1020[0] == "-"
        ? [for i, b in local.iter_1019.tape : (i == local.iter_1019.tape_ptr ? (b - local.code_1020[1] + 256) % 256 : b)] :
      local.code_1020[0] == ","
        ? [for i, b in local.iter_1019.tape : (i == local.iter_1019.tape_ptr ? local.ascii_lookup[substr(local.input_1020, 0, 1)] : b)]
        : local.iter_1019.tape)

    tape_ptr = (
      local.code_1020[0] == "<"
        ? local.iter_1019.tape_ptr - local.code_1020[1] :
      local.code_1020[0] == ">"
        ? local.iter_1019.tape_ptr + local.code_1020[1]
        : local.iter_1019.tape_ptr)

    code_ptr = 2 + (
      local.code_1020[0] == "["
        ? local.iter_1019.tape[local.iter_1019.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1019.code_ptr)] : local.iter_1019.code_ptr :
      local.code_1020[0] == "]"
        ? local.iter_1019.tape[local.iter_1019.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1019.code_ptr)] : local.iter_1019.code_ptr
        : local.iter_1019.code_ptr)

    steps_taken = 1 + local.iter_1019.steps_taken
  }
}

locals {
  code_1021 = (try(local.iter_1020.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1020.code_ptr, local.iter_1020.code_ptr + 2)
    : [null])

  input_1021 = (local.code_1021[0] == ","
    ? substr(local.input_1020, local.code_1021[1], -1)
    : local.input_1020)

  iter_1021 = try(local.iter_1020.code_ptr >= length(var.code), true) ? local.iter_1020 : {
    output = (local.code_1021[0] == "."
      ? "${local.iter_1020.output}${join("", [for _ in range(local.code_1021[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1020.tape[local.iter_1020.tape_ptr]))])}"
      : local.iter_1020.output)
    
    tape = (
      local.code_1021[0] == "+"
        ? [for i, b in local.iter_1020.tape : (i == local.iter_1020.tape_ptr ? (b + local.code_1021[1]) % 256 : b)] :
      local.code_1021[0] == "-"
        ? [for i, b in local.iter_1020.tape : (i == local.iter_1020.tape_ptr ? (b - local.code_1021[1] + 256) % 256 : b)] :
      local.code_1021[0] == ","
        ? [for i, b in local.iter_1020.tape : (i == local.iter_1020.tape_ptr ? local.ascii_lookup[substr(local.input_1021, 0, 1)] : b)]
        : local.iter_1020.tape)

    tape_ptr = (
      local.code_1021[0] == "<"
        ? local.iter_1020.tape_ptr - local.code_1021[1] :
      local.code_1021[0] == ">"
        ? local.iter_1020.tape_ptr + local.code_1021[1]
        : local.iter_1020.tape_ptr)

    code_ptr = 2 + (
      local.code_1021[0] == "["
        ? local.iter_1020.tape[local.iter_1020.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1020.code_ptr)] : local.iter_1020.code_ptr :
      local.code_1021[0] == "]"
        ? local.iter_1020.tape[local.iter_1020.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1020.code_ptr)] : local.iter_1020.code_ptr
        : local.iter_1020.code_ptr)

    steps_taken = 1 + local.iter_1020.steps_taken
  }
}

locals {
  code_1022 = (try(local.iter_1021.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1021.code_ptr, local.iter_1021.code_ptr + 2)
    : [null])

  input_1022 = (local.code_1022[0] == ","
    ? substr(local.input_1021, local.code_1022[1], -1)
    : local.input_1021)

  iter_1022 = try(local.iter_1021.code_ptr >= length(var.code), true) ? local.iter_1021 : {
    output = (local.code_1022[0] == "."
      ? "${local.iter_1021.output}${join("", [for _ in range(local.code_1022[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1021.tape[local.iter_1021.tape_ptr]))])}"
      : local.iter_1021.output)
    
    tape = (
      local.code_1022[0] == "+"
        ? [for i, b in local.iter_1021.tape : (i == local.iter_1021.tape_ptr ? (b + local.code_1022[1]) % 256 : b)] :
      local.code_1022[0] == "-"
        ? [for i, b in local.iter_1021.tape : (i == local.iter_1021.tape_ptr ? (b - local.code_1022[1] + 256) % 256 : b)] :
      local.code_1022[0] == ","
        ? [for i, b in local.iter_1021.tape : (i == local.iter_1021.tape_ptr ? local.ascii_lookup[substr(local.input_1022, 0, 1)] : b)]
        : local.iter_1021.tape)

    tape_ptr = (
      local.code_1022[0] == "<"
        ? local.iter_1021.tape_ptr - local.code_1022[1] :
      local.code_1022[0] == ">"
        ? local.iter_1021.tape_ptr + local.code_1022[1]
        : local.iter_1021.tape_ptr)

    code_ptr = 2 + (
      local.code_1022[0] == "["
        ? local.iter_1021.tape[local.iter_1021.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1021.code_ptr)] : local.iter_1021.code_ptr :
      local.code_1022[0] == "]"
        ? local.iter_1021.tape[local.iter_1021.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1021.code_ptr)] : local.iter_1021.code_ptr
        : local.iter_1021.code_ptr)

    steps_taken = 1 + local.iter_1021.steps_taken
  }
}

locals {
  code_1023 = (try(local.iter_1022.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1022.code_ptr, local.iter_1022.code_ptr + 2)
    : [null])

  input_1023 = (local.code_1023[0] == ","
    ? substr(local.input_1022, local.code_1023[1], -1)
    : local.input_1022)

  iter_1023 = try(local.iter_1022.code_ptr >= length(var.code), true) ? local.iter_1022 : {
    output = (local.code_1023[0] == "."
      ? "${local.iter_1022.output}${join("", [for _ in range(local.code_1023[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1022.tape[local.iter_1022.tape_ptr]))])}"
      : local.iter_1022.output)
    
    tape = (
      local.code_1023[0] == "+"
        ? [for i, b in local.iter_1022.tape : (i == local.iter_1022.tape_ptr ? (b + local.code_1023[1]) % 256 : b)] :
      local.code_1023[0] == "-"
        ? [for i, b in local.iter_1022.tape : (i == local.iter_1022.tape_ptr ? (b - local.code_1023[1] + 256) % 256 : b)] :
      local.code_1023[0] == ","
        ? [for i, b in local.iter_1022.tape : (i == local.iter_1022.tape_ptr ? local.ascii_lookup[substr(local.input_1023, 0, 1)] : b)]
        : local.iter_1022.tape)

    tape_ptr = (
      local.code_1023[0] == "<"
        ? local.iter_1022.tape_ptr - local.code_1023[1] :
      local.code_1023[0] == ">"
        ? local.iter_1022.tape_ptr + local.code_1023[1]
        : local.iter_1022.tape_ptr)

    code_ptr = 2 + (
      local.code_1023[0] == "["
        ? local.iter_1022.tape[local.iter_1022.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1022.code_ptr)] : local.iter_1022.code_ptr :
      local.code_1023[0] == "]"
        ? local.iter_1022.tape[local.iter_1022.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1022.code_ptr)] : local.iter_1022.code_ptr
        : local.iter_1022.code_ptr)

    steps_taken = 1 + local.iter_1022.steps_taken
  }
}

locals {
  code_1024 = (try(local.iter_1023.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1023.code_ptr, local.iter_1023.code_ptr + 2)
    : [null])

  input_1024 = (local.code_1024[0] == ","
    ? substr(local.input_1023, local.code_1024[1], -1)
    : local.input_1023)

  iter_1024 = try(local.iter_1023.code_ptr >= length(var.code), true) ? local.iter_1023 : {
    output = (local.code_1024[0] == "."
      ? "${local.iter_1023.output}${join("", [for _ in range(local.code_1024[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1023.tape[local.iter_1023.tape_ptr]))])}"
      : local.iter_1023.output)
    
    tape = (
      local.code_1024[0] == "+"
        ? [for i, b in local.iter_1023.tape : (i == local.iter_1023.tape_ptr ? (b + local.code_1024[1]) % 256 : b)] :
      local.code_1024[0] == "-"
        ? [for i, b in local.iter_1023.tape : (i == local.iter_1023.tape_ptr ? (b - local.code_1024[1] + 256) % 256 : b)] :
      local.code_1024[0] == ","
        ? [for i, b in local.iter_1023.tape : (i == local.iter_1023.tape_ptr ? local.ascii_lookup[substr(local.input_1024, 0, 1)] : b)]
        : local.iter_1023.tape)

    tape_ptr = (
      local.code_1024[0] == "<"
        ? local.iter_1023.tape_ptr - local.code_1024[1] :
      local.code_1024[0] == ">"
        ? local.iter_1023.tape_ptr + local.code_1024[1]
        : local.iter_1023.tape_ptr)

    code_ptr = 2 + (
      local.code_1024[0] == "["
        ? local.iter_1023.tape[local.iter_1023.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1023.code_ptr)] : local.iter_1023.code_ptr :
      local.code_1024[0] == "]"
        ? local.iter_1023.tape[local.iter_1023.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1023.code_ptr)] : local.iter_1023.code_ptr
        : local.iter_1023.code_ptr)

    steps_taken = 1 + local.iter_1023.steps_taken
  }
}

locals {
  code_1025 = (try(local.iter_1024.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1024.code_ptr, local.iter_1024.code_ptr + 2)
    : [null])

  input_1025 = (local.code_1025[0] == ","
    ? substr(local.input_1024, local.code_1025[1], -1)
    : local.input_1024)

  iter_1025 = try(local.iter_1024.code_ptr >= length(var.code), true) ? local.iter_1024 : {
    output = (local.code_1025[0] == "."
      ? "${local.iter_1024.output}${join("", [for _ in range(local.code_1025[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1024.tape[local.iter_1024.tape_ptr]))])}"
      : local.iter_1024.output)
    
    tape = (
      local.code_1025[0] == "+"
        ? [for i, b in local.iter_1024.tape : (i == local.iter_1024.tape_ptr ? (b + local.code_1025[1]) % 256 : b)] :
      local.code_1025[0] == "-"
        ? [for i, b in local.iter_1024.tape : (i == local.iter_1024.tape_ptr ? (b - local.code_1025[1] + 256) % 256 : b)] :
      local.code_1025[0] == ","
        ? [for i, b in local.iter_1024.tape : (i == local.iter_1024.tape_ptr ? local.ascii_lookup[substr(local.input_1025, 0, 1)] : b)]
        : local.iter_1024.tape)

    tape_ptr = (
      local.code_1025[0] == "<"
        ? local.iter_1024.tape_ptr - local.code_1025[1] :
      local.code_1025[0] == ">"
        ? local.iter_1024.tape_ptr + local.code_1025[1]
        : local.iter_1024.tape_ptr)

    code_ptr = 2 + (
      local.code_1025[0] == "["
        ? local.iter_1024.tape[local.iter_1024.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1024.code_ptr)] : local.iter_1024.code_ptr :
      local.code_1025[0] == "]"
        ? local.iter_1024.tape[local.iter_1024.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1024.code_ptr)] : local.iter_1024.code_ptr
        : local.iter_1024.code_ptr)

    steps_taken = 1 + local.iter_1024.steps_taken
  }
}

locals {
  code_1026 = (try(local.iter_1025.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1025.code_ptr, local.iter_1025.code_ptr + 2)
    : [null])

  input_1026 = (local.code_1026[0] == ","
    ? substr(local.input_1025, local.code_1026[1], -1)
    : local.input_1025)

  iter_1026 = try(local.iter_1025.code_ptr >= length(var.code), true) ? local.iter_1025 : {
    output = (local.code_1026[0] == "."
      ? "${local.iter_1025.output}${join("", [for _ in range(local.code_1026[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1025.tape[local.iter_1025.tape_ptr]))])}"
      : local.iter_1025.output)
    
    tape = (
      local.code_1026[0] == "+"
        ? [for i, b in local.iter_1025.tape : (i == local.iter_1025.tape_ptr ? (b + local.code_1026[1]) % 256 : b)] :
      local.code_1026[0] == "-"
        ? [for i, b in local.iter_1025.tape : (i == local.iter_1025.tape_ptr ? (b - local.code_1026[1] + 256) % 256 : b)] :
      local.code_1026[0] == ","
        ? [for i, b in local.iter_1025.tape : (i == local.iter_1025.tape_ptr ? local.ascii_lookup[substr(local.input_1026, 0, 1)] : b)]
        : local.iter_1025.tape)

    tape_ptr = (
      local.code_1026[0] == "<"
        ? local.iter_1025.tape_ptr - local.code_1026[1] :
      local.code_1026[0] == ">"
        ? local.iter_1025.tape_ptr + local.code_1026[1]
        : local.iter_1025.tape_ptr)

    code_ptr = 2 + (
      local.code_1026[0] == "["
        ? local.iter_1025.tape[local.iter_1025.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1025.code_ptr)] : local.iter_1025.code_ptr :
      local.code_1026[0] == "]"
        ? local.iter_1025.tape[local.iter_1025.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1025.code_ptr)] : local.iter_1025.code_ptr
        : local.iter_1025.code_ptr)

    steps_taken = 1 + local.iter_1025.steps_taken
  }
}

locals {
  code_1027 = (try(local.iter_1026.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1026.code_ptr, local.iter_1026.code_ptr + 2)
    : [null])

  input_1027 = (local.code_1027[0] == ","
    ? substr(local.input_1026, local.code_1027[1], -1)
    : local.input_1026)

  iter_1027 = try(local.iter_1026.code_ptr >= length(var.code), true) ? local.iter_1026 : {
    output = (local.code_1027[0] == "."
      ? "${local.iter_1026.output}${join("", [for _ in range(local.code_1027[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1026.tape[local.iter_1026.tape_ptr]))])}"
      : local.iter_1026.output)
    
    tape = (
      local.code_1027[0] == "+"
        ? [for i, b in local.iter_1026.tape : (i == local.iter_1026.tape_ptr ? (b + local.code_1027[1]) % 256 : b)] :
      local.code_1027[0] == "-"
        ? [for i, b in local.iter_1026.tape : (i == local.iter_1026.tape_ptr ? (b - local.code_1027[1] + 256) % 256 : b)] :
      local.code_1027[0] == ","
        ? [for i, b in local.iter_1026.tape : (i == local.iter_1026.tape_ptr ? local.ascii_lookup[substr(local.input_1027, 0, 1)] : b)]
        : local.iter_1026.tape)

    tape_ptr = (
      local.code_1027[0] == "<"
        ? local.iter_1026.tape_ptr - local.code_1027[1] :
      local.code_1027[0] == ">"
        ? local.iter_1026.tape_ptr + local.code_1027[1]
        : local.iter_1026.tape_ptr)

    code_ptr = 2 + (
      local.code_1027[0] == "["
        ? local.iter_1026.tape[local.iter_1026.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1026.code_ptr)] : local.iter_1026.code_ptr :
      local.code_1027[0] == "]"
        ? local.iter_1026.tape[local.iter_1026.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1026.code_ptr)] : local.iter_1026.code_ptr
        : local.iter_1026.code_ptr)

    steps_taken = 1 + local.iter_1026.steps_taken
  }
}

locals {
  code_1028 = (try(local.iter_1027.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1027.code_ptr, local.iter_1027.code_ptr + 2)
    : [null])

  input_1028 = (local.code_1028[0] == ","
    ? substr(local.input_1027, local.code_1028[1], -1)
    : local.input_1027)

  iter_1028 = try(local.iter_1027.code_ptr >= length(var.code), true) ? local.iter_1027 : {
    output = (local.code_1028[0] == "."
      ? "${local.iter_1027.output}${join("", [for _ in range(local.code_1028[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1027.tape[local.iter_1027.tape_ptr]))])}"
      : local.iter_1027.output)
    
    tape = (
      local.code_1028[0] == "+"
        ? [for i, b in local.iter_1027.tape : (i == local.iter_1027.tape_ptr ? (b + local.code_1028[1]) % 256 : b)] :
      local.code_1028[0] == "-"
        ? [for i, b in local.iter_1027.tape : (i == local.iter_1027.tape_ptr ? (b - local.code_1028[1] + 256) % 256 : b)] :
      local.code_1028[0] == ","
        ? [for i, b in local.iter_1027.tape : (i == local.iter_1027.tape_ptr ? local.ascii_lookup[substr(local.input_1028, 0, 1)] : b)]
        : local.iter_1027.tape)

    tape_ptr = (
      local.code_1028[0] == "<"
        ? local.iter_1027.tape_ptr - local.code_1028[1] :
      local.code_1028[0] == ">"
        ? local.iter_1027.tape_ptr + local.code_1028[1]
        : local.iter_1027.tape_ptr)

    code_ptr = 2 + (
      local.code_1028[0] == "["
        ? local.iter_1027.tape[local.iter_1027.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1027.code_ptr)] : local.iter_1027.code_ptr :
      local.code_1028[0] == "]"
        ? local.iter_1027.tape[local.iter_1027.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1027.code_ptr)] : local.iter_1027.code_ptr
        : local.iter_1027.code_ptr)

    steps_taken = 1 + local.iter_1027.steps_taken
  }
}

locals {
  code_1029 = (try(local.iter_1028.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1028.code_ptr, local.iter_1028.code_ptr + 2)
    : [null])

  input_1029 = (local.code_1029[0] == ","
    ? substr(local.input_1028, local.code_1029[1], -1)
    : local.input_1028)

  iter_1029 = try(local.iter_1028.code_ptr >= length(var.code), true) ? local.iter_1028 : {
    output = (local.code_1029[0] == "."
      ? "${local.iter_1028.output}${join("", [for _ in range(local.code_1029[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1028.tape[local.iter_1028.tape_ptr]))])}"
      : local.iter_1028.output)
    
    tape = (
      local.code_1029[0] == "+"
        ? [for i, b in local.iter_1028.tape : (i == local.iter_1028.tape_ptr ? (b + local.code_1029[1]) % 256 : b)] :
      local.code_1029[0] == "-"
        ? [for i, b in local.iter_1028.tape : (i == local.iter_1028.tape_ptr ? (b - local.code_1029[1] + 256) % 256 : b)] :
      local.code_1029[0] == ","
        ? [for i, b in local.iter_1028.tape : (i == local.iter_1028.tape_ptr ? local.ascii_lookup[substr(local.input_1029, 0, 1)] : b)]
        : local.iter_1028.tape)

    tape_ptr = (
      local.code_1029[0] == "<"
        ? local.iter_1028.tape_ptr - local.code_1029[1] :
      local.code_1029[0] == ">"
        ? local.iter_1028.tape_ptr + local.code_1029[1]
        : local.iter_1028.tape_ptr)

    code_ptr = 2 + (
      local.code_1029[0] == "["
        ? local.iter_1028.tape[local.iter_1028.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1028.code_ptr)] : local.iter_1028.code_ptr :
      local.code_1029[0] == "]"
        ? local.iter_1028.tape[local.iter_1028.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1028.code_ptr)] : local.iter_1028.code_ptr
        : local.iter_1028.code_ptr)

    steps_taken = 1 + local.iter_1028.steps_taken
  }
}

locals {
  code_1030 = (try(local.iter_1029.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1029.code_ptr, local.iter_1029.code_ptr + 2)
    : [null])

  input_1030 = (local.code_1030[0] == ","
    ? substr(local.input_1029, local.code_1030[1], -1)
    : local.input_1029)

  iter_1030 = try(local.iter_1029.code_ptr >= length(var.code), true) ? local.iter_1029 : {
    output = (local.code_1030[0] == "."
      ? "${local.iter_1029.output}${join("", [for _ in range(local.code_1030[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1029.tape[local.iter_1029.tape_ptr]))])}"
      : local.iter_1029.output)
    
    tape = (
      local.code_1030[0] == "+"
        ? [for i, b in local.iter_1029.tape : (i == local.iter_1029.tape_ptr ? (b + local.code_1030[1]) % 256 : b)] :
      local.code_1030[0] == "-"
        ? [for i, b in local.iter_1029.tape : (i == local.iter_1029.tape_ptr ? (b - local.code_1030[1] + 256) % 256 : b)] :
      local.code_1030[0] == ","
        ? [for i, b in local.iter_1029.tape : (i == local.iter_1029.tape_ptr ? local.ascii_lookup[substr(local.input_1030, 0, 1)] : b)]
        : local.iter_1029.tape)

    tape_ptr = (
      local.code_1030[0] == "<"
        ? local.iter_1029.tape_ptr - local.code_1030[1] :
      local.code_1030[0] == ">"
        ? local.iter_1029.tape_ptr + local.code_1030[1]
        : local.iter_1029.tape_ptr)

    code_ptr = 2 + (
      local.code_1030[0] == "["
        ? local.iter_1029.tape[local.iter_1029.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1029.code_ptr)] : local.iter_1029.code_ptr :
      local.code_1030[0] == "]"
        ? local.iter_1029.tape[local.iter_1029.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1029.code_ptr)] : local.iter_1029.code_ptr
        : local.iter_1029.code_ptr)

    steps_taken = 1 + local.iter_1029.steps_taken
  }
}

locals {
  code_1031 = (try(local.iter_1030.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1030.code_ptr, local.iter_1030.code_ptr + 2)
    : [null])

  input_1031 = (local.code_1031[0] == ","
    ? substr(local.input_1030, local.code_1031[1], -1)
    : local.input_1030)

  iter_1031 = try(local.iter_1030.code_ptr >= length(var.code), true) ? local.iter_1030 : {
    output = (local.code_1031[0] == "."
      ? "${local.iter_1030.output}${join("", [for _ in range(local.code_1031[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1030.tape[local.iter_1030.tape_ptr]))])}"
      : local.iter_1030.output)
    
    tape = (
      local.code_1031[0] == "+"
        ? [for i, b in local.iter_1030.tape : (i == local.iter_1030.tape_ptr ? (b + local.code_1031[1]) % 256 : b)] :
      local.code_1031[0] == "-"
        ? [for i, b in local.iter_1030.tape : (i == local.iter_1030.tape_ptr ? (b - local.code_1031[1] + 256) % 256 : b)] :
      local.code_1031[0] == ","
        ? [for i, b in local.iter_1030.tape : (i == local.iter_1030.tape_ptr ? local.ascii_lookup[substr(local.input_1031, 0, 1)] : b)]
        : local.iter_1030.tape)

    tape_ptr = (
      local.code_1031[0] == "<"
        ? local.iter_1030.tape_ptr - local.code_1031[1] :
      local.code_1031[0] == ">"
        ? local.iter_1030.tape_ptr + local.code_1031[1]
        : local.iter_1030.tape_ptr)

    code_ptr = 2 + (
      local.code_1031[0] == "["
        ? local.iter_1030.tape[local.iter_1030.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1030.code_ptr)] : local.iter_1030.code_ptr :
      local.code_1031[0] == "]"
        ? local.iter_1030.tape[local.iter_1030.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1030.code_ptr)] : local.iter_1030.code_ptr
        : local.iter_1030.code_ptr)

    steps_taken = 1 + local.iter_1030.steps_taken
  }
}

locals {
  code_1032 = (try(local.iter_1031.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1031.code_ptr, local.iter_1031.code_ptr + 2)
    : [null])

  input_1032 = (local.code_1032[0] == ","
    ? substr(local.input_1031, local.code_1032[1], -1)
    : local.input_1031)

  iter_1032 = try(local.iter_1031.code_ptr >= length(var.code), true) ? local.iter_1031 : {
    output = (local.code_1032[0] == "."
      ? "${local.iter_1031.output}${join("", [for _ in range(local.code_1032[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1031.tape[local.iter_1031.tape_ptr]))])}"
      : local.iter_1031.output)
    
    tape = (
      local.code_1032[0] == "+"
        ? [for i, b in local.iter_1031.tape : (i == local.iter_1031.tape_ptr ? (b + local.code_1032[1]) % 256 : b)] :
      local.code_1032[0] == "-"
        ? [for i, b in local.iter_1031.tape : (i == local.iter_1031.tape_ptr ? (b - local.code_1032[1] + 256) % 256 : b)] :
      local.code_1032[0] == ","
        ? [for i, b in local.iter_1031.tape : (i == local.iter_1031.tape_ptr ? local.ascii_lookup[substr(local.input_1032, 0, 1)] : b)]
        : local.iter_1031.tape)

    tape_ptr = (
      local.code_1032[0] == "<"
        ? local.iter_1031.tape_ptr - local.code_1032[1] :
      local.code_1032[0] == ">"
        ? local.iter_1031.tape_ptr + local.code_1032[1]
        : local.iter_1031.tape_ptr)

    code_ptr = 2 + (
      local.code_1032[0] == "["
        ? local.iter_1031.tape[local.iter_1031.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1031.code_ptr)] : local.iter_1031.code_ptr :
      local.code_1032[0] == "]"
        ? local.iter_1031.tape[local.iter_1031.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1031.code_ptr)] : local.iter_1031.code_ptr
        : local.iter_1031.code_ptr)

    steps_taken = 1 + local.iter_1031.steps_taken
  }
}

locals {
  code_1033 = (try(local.iter_1032.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1032.code_ptr, local.iter_1032.code_ptr + 2)
    : [null])

  input_1033 = (local.code_1033[0] == ","
    ? substr(local.input_1032, local.code_1033[1], -1)
    : local.input_1032)

  iter_1033 = try(local.iter_1032.code_ptr >= length(var.code), true) ? local.iter_1032 : {
    output = (local.code_1033[0] == "."
      ? "${local.iter_1032.output}${join("", [for _ in range(local.code_1033[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1032.tape[local.iter_1032.tape_ptr]))])}"
      : local.iter_1032.output)
    
    tape = (
      local.code_1033[0] == "+"
        ? [for i, b in local.iter_1032.tape : (i == local.iter_1032.tape_ptr ? (b + local.code_1033[1]) % 256 : b)] :
      local.code_1033[0] == "-"
        ? [for i, b in local.iter_1032.tape : (i == local.iter_1032.tape_ptr ? (b - local.code_1033[1] + 256) % 256 : b)] :
      local.code_1033[0] == ","
        ? [for i, b in local.iter_1032.tape : (i == local.iter_1032.tape_ptr ? local.ascii_lookup[substr(local.input_1033, 0, 1)] : b)]
        : local.iter_1032.tape)

    tape_ptr = (
      local.code_1033[0] == "<"
        ? local.iter_1032.tape_ptr - local.code_1033[1] :
      local.code_1033[0] == ">"
        ? local.iter_1032.tape_ptr + local.code_1033[1]
        : local.iter_1032.tape_ptr)

    code_ptr = 2 + (
      local.code_1033[0] == "["
        ? local.iter_1032.tape[local.iter_1032.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1032.code_ptr)] : local.iter_1032.code_ptr :
      local.code_1033[0] == "]"
        ? local.iter_1032.tape[local.iter_1032.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1032.code_ptr)] : local.iter_1032.code_ptr
        : local.iter_1032.code_ptr)

    steps_taken = 1 + local.iter_1032.steps_taken
  }
}

locals {
  code_1034 = (try(local.iter_1033.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1033.code_ptr, local.iter_1033.code_ptr + 2)
    : [null])

  input_1034 = (local.code_1034[0] == ","
    ? substr(local.input_1033, local.code_1034[1], -1)
    : local.input_1033)

  iter_1034 = try(local.iter_1033.code_ptr >= length(var.code), true) ? local.iter_1033 : {
    output = (local.code_1034[0] == "."
      ? "${local.iter_1033.output}${join("", [for _ in range(local.code_1034[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1033.tape[local.iter_1033.tape_ptr]))])}"
      : local.iter_1033.output)
    
    tape = (
      local.code_1034[0] == "+"
        ? [for i, b in local.iter_1033.tape : (i == local.iter_1033.tape_ptr ? (b + local.code_1034[1]) % 256 : b)] :
      local.code_1034[0] == "-"
        ? [for i, b in local.iter_1033.tape : (i == local.iter_1033.tape_ptr ? (b - local.code_1034[1] + 256) % 256 : b)] :
      local.code_1034[0] == ","
        ? [for i, b in local.iter_1033.tape : (i == local.iter_1033.tape_ptr ? local.ascii_lookup[substr(local.input_1034, 0, 1)] : b)]
        : local.iter_1033.tape)

    tape_ptr = (
      local.code_1034[0] == "<"
        ? local.iter_1033.tape_ptr - local.code_1034[1] :
      local.code_1034[0] == ">"
        ? local.iter_1033.tape_ptr + local.code_1034[1]
        : local.iter_1033.tape_ptr)

    code_ptr = 2 + (
      local.code_1034[0] == "["
        ? local.iter_1033.tape[local.iter_1033.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1033.code_ptr)] : local.iter_1033.code_ptr :
      local.code_1034[0] == "]"
        ? local.iter_1033.tape[local.iter_1033.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1033.code_ptr)] : local.iter_1033.code_ptr
        : local.iter_1033.code_ptr)

    steps_taken = 1 + local.iter_1033.steps_taken
  }
}

locals {
  code_1035 = (try(local.iter_1034.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1034.code_ptr, local.iter_1034.code_ptr + 2)
    : [null])

  input_1035 = (local.code_1035[0] == ","
    ? substr(local.input_1034, local.code_1035[1], -1)
    : local.input_1034)

  iter_1035 = try(local.iter_1034.code_ptr >= length(var.code), true) ? local.iter_1034 : {
    output = (local.code_1035[0] == "."
      ? "${local.iter_1034.output}${join("", [for _ in range(local.code_1035[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1034.tape[local.iter_1034.tape_ptr]))])}"
      : local.iter_1034.output)
    
    tape = (
      local.code_1035[0] == "+"
        ? [for i, b in local.iter_1034.tape : (i == local.iter_1034.tape_ptr ? (b + local.code_1035[1]) % 256 : b)] :
      local.code_1035[0] == "-"
        ? [for i, b in local.iter_1034.tape : (i == local.iter_1034.tape_ptr ? (b - local.code_1035[1] + 256) % 256 : b)] :
      local.code_1035[0] == ","
        ? [for i, b in local.iter_1034.tape : (i == local.iter_1034.tape_ptr ? local.ascii_lookup[substr(local.input_1035, 0, 1)] : b)]
        : local.iter_1034.tape)

    tape_ptr = (
      local.code_1035[0] == "<"
        ? local.iter_1034.tape_ptr - local.code_1035[1] :
      local.code_1035[0] == ">"
        ? local.iter_1034.tape_ptr + local.code_1035[1]
        : local.iter_1034.tape_ptr)

    code_ptr = 2 + (
      local.code_1035[0] == "["
        ? local.iter_1034.tape[local.iter_1034.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1034.code_ptr)] : local.iter_1034.code_ptr :
      local.code_1035[0] == "]"
        ? local.iter_1034.tape[local.iter_1034.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1034.code_ptr)] : local.iter_1034.code_ptr
        : local.iter_1034.code_ptr)

    steps_taken = 1 + local.iter_1034.steps_taken
  }
}

locals {
  code_1036 = (try(local.iter_1035.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1035.code_ptr, local.iter_1035.code_ptr + 2)
    : [null])

  input_1036 = (local.code_1036[0] == ","
    ? substr(local.input_1035, local.code_1036[1], -1)
    : local.input_1035)

  iter_1036 = try(local.iter_1035.code_ptr >= length(var.code), true) ? local.iter_1035 : {
    output = (local.code_1036[0] == "."
      ? "${local.iter_1035.output}${join("", [for _ in range(local.code_1036[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1035.tape[local.iter_1035.tape_ptr]))])}"
      : local.iter_1035.output)
    
    tape = (
      local.code_1036[0] == "+"
        ? [for i, b in local.iter_1035.tape : (i == local.iter_1035.tape_ptr ? (b + local.code_1036[1]) % 256 : b)] :
      local.code_1036[0] == "-"
        ? [for i, b in local.iter_1035.tape : (i == local.iter_1035.tape_ptr ? (b - local.code_1036[1] + 256) % 256 : b)] :
      local.code_1036[0] == ","
        ? [for i, b in local.iter_1035.tape : (i == local.iter_1035.tape_ptr ? local.ascii_lookup[substr(local.input_1036, 0, 1)] : b)]
        : local.iter_1035.tape)

    tape_ptr = (
      local.code_1036[0] == "<"
        ? local.iter_1035.tape_ptr - local.code_1036[1] :
      local.code_1036[0] == ">"
        ? local.iter_1035.tape_ptr + local.code_1036[1]
        : local.iter_1035.tape_ptr)

    code_ptr = 2 + (
      local.code_1036[0] == "["
        ? local.iter_1035.tape[local.iter_1035.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1035.code_ptr)] : local.iter_1035.code_ptr :
      local.code_1036[0] == "]"
        ? local.iter_1035.tape[local.iter_1035.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1035.code_ptr)] : local.iter_1035.code_ptr
        : local.iter_1035.code_ptr)

    steps_taken = 1 + local.iter_1035.steps_taken
  }
}

locals {
  code_1037 = (try(local.iter_1036.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1036.code_ptr, local.iter_1036.code_ptr + 2)
    : [null])

  input_1037 = (local.code_1037[0] == ","
    ? substr(local.input_1036, local.code_1037[1], -1)
    : local.input_1036)

  iter_1037 = try(local.iter_1036.code_ptr >= length(var.code), true) ? local.iter_1036 : {
    output = (local.code_1037[0] == "."
      ? "${local.iter_1036.output}${join("", [for _ in range(local.code_1037[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1036.tape[local.iter_1036.tape_ptr]))])}"
      : local.iter_1036.output)
    
    tape = (
      local.code_1037[0] == "+"
        ? [for i, b in local.iter_1036.tape : (i == local.iter_1036.tape_ptr ? (b + local.code_1037[1]) % 256 : b)] :
      local.code_1037[0] == "-"
        ? [for i, b in local.iter_1036.tape : (i == local.iter_1036.tape_ptr ? (b - local.code_1037[1] + 256) % 256 : b)] :
      local.code_1037[0] == ","
        ? [for i, b in local.iter_1036.tape : (i == local.iter_1036.tape_ptr ? local.ascii_lookup[substr(local.input_1037, 0, 1)] : b)]
        : local.iter_1036.tape)

    tape_ptr = (
      local.code_1037[0] == "<"
        ? local.iter_1036.tape_ptr - local.code_1037[1] :
      local.code_1037[0] == ">"
        ? local.iter_1036.tape_ptr + local.code_1037[1]
        : local.iter_1036.tape_ptr)

    code_ptr = 2 + (
      local.code_1037[0] == "["
        ? local.iter_1036.tape[local.iter_1036.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1036.code_ptr)] : local.iter_1036.code_ptr :
      local.code_1037[0] == "]"
        ? local.iter_1036.tape[local.iter_1036.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1036.code_ptr)] : local.iter_1036.code_ptr
        : local.iter_1036.code_ptr)

    steps_taken = 1 + local.iter_1036.steps_taken
  }
}

locals {
  code_1038 = (try(local.iter_1037.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1037.code_ptr, local.iter_1037.code_ptr + 2)
    : [null])

  input_1038 = (local.code_1038[0] == ","
    ? substr(local.input_1037, local.code_1038[1], -1)
    : local.input_1037)

  iter_1038 = try(local.iter_1037.code_ptr >= length(var.code), true) ? local.iter_1037 : {
    output = (local.code_1038[0] == "."
      ? "${local.iter_1037.output}${join("", [for _ in range(local.code_1038[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1037.tape[local.iter_1037.tape_ptr]))])}"
      : local.iter_1037.output)
    
    tape = (
      local.code_1038[0] == "+"
        ? [for i, b in local.iter_1037.tape : (i == local.iter_1037.tape_ptr ? (b + local.code_1038[1]) % 256 : b)] :
      local.code_1038[0] == "-"
        ? [for i, b in local.iter_1037.tape : (i == local.iter_1037.tape_ptr ? (b - local.code_1038[1] + 256) % 256 : b)] :
      local.code_1038[0] == ","
        ? [for i, b in local.iter_1037.tape : (i == local.iter_1037.tape_ptr ? local.ascii_lookup[substr(local.input_1038, 0, 1)] : b)]
        : local.iter_1037.tape)

    tape_ptr = (
      local.code_1038[0] == "<"
        ? local.iter_1037.tape_ptr - local.code_1038[1] :
      local.code_1038[0] == ">"
        ? local.iter_1037.tape_ptr + local.code_1038[1]
        : local.iter_1037.tape_ptr)

    code_ptr = 2 + (
      local.code_1038[0] == "["
        ? local.iter_1037.tape[local.iter_1037.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1037.code_ptr)] : local.iter_1037.code_ptr :
      local.code_1038[0] == "]"
        ? local.iter_1037.tape[local.iter_1037.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1037.code_ptr)] : local.iter_1037.code_ptr
        : local.iter_1037.code_ptr)

    steps_taken = 1 + local.iter_1037.steps_taken
  }
}

locals {
  code_1039 = (try(local.iter_1038.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1038.code_ptr, local.iter_1038.code_ptr + 2)
    : [null])

  input_1039 = (local.code_1039[0] == ","
    ? substr(local.input_1038, local.code_1039[1], -1)
    : local.input_1038)

  iter_1039 = try(local.iter_1038.code_ptr >= length(var.code), true) ? local.iter_1038 : {
    output = (local.code_1039[0] == "."
      ? "${local.iter_1038.output}${join("", [for _ in range(local.code_1039[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1038.tape[local.iter_1038.tape_ptr]))])}"
      : local.iter_1038.output)
    
    tape = (
      local.code_1039[0] == "+"
        ? [for i, b in local.iter_1038.tape : (i == local.iter_1038.tape_ptr ? (b + local.code_1039[1]) % 256 : b)] :
      local.code_1039[0] == "-"
        ? [for i, b in local.iter_1038.tape : (i == local.iter_1038.tape_ptr ? (b - local.code_1039[1] + 256) % 256 : b)] :
      local.code_1039[0] == ","
        ? [for i, b in local.iter_1038.tape : (i == local.iter_1038.tape_ptr ? local.ascii_lookup[substr(local.input_1039, 0, 1)] : b)]
        : local.iter_1038.tape)

    tape_ptr = (
      local.code_1039[0] == "<"
        ? local.iter_1038.tape_ptr - local.code_1039[1] :
      local.code_1039[0] == ">"
        ? local.iter_1038.tape_ptr + local.code_1039[1]
        : local.iter_1038.tape_ptr)

    code_ptr = 2 + (
      local.code_1039[0] == "["
        ? local.iter_1038.tape[local.iter_1038.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1038.code_ptr)] : local.iter_1038.code_ptr :
      local.code_1039[0] == "]"
        ? local.iter_1038.tape[local.iter_1038.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1038.code_ptr)] : local.iter_1038.code_ptr
        : local.iter_1038.code_ptr)

    steps_taken = 1 + local.iter_1038.steps_taken
  }
}

locals {
  code_1040 = (try(local.iter_1039.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1039.code_ptr, local.iter_1039.code_ptr + 2)
    : [null])

  input_1040 = (local.code_1040[0] == ","
    ? substr(local.input_1039, local.code_1040[1], -1)
    : local.input_1039)

  iter_1040 = try(local.iter_1039.code_ptr >= length(var.code), true) ? local.iter_1039 : {
    output = (local.code_1040[0] == "."
      ? "${local.iter_1039.output}${join("", [for _ in range(local.code_1040[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1039.tape[local.iter_1039.tape_ptr]))])}"
      : local.iter_1039.output)
    
    tape = (
      local.code_1040[0] == "+"
        ? [for i, b in local.iter_1039.tape : (i == local.iter_1039.tape_ptr ? (b + local.code_1040[1]) % 256 : b)] :
      local.code_1040[0] == "-"
        ? [for i, b in local.iter_1039.tape : (i == local.iter_1039.tape_ptr ? (b - local.code_1040[1] + 256) % 256 : b)] :
      local.code_1040[0] == ","
        ? [for i, b in local.iter_1039.tape : (i == local.iter_1039.tape_ptr ? local.ascii_lookup[substr(local.input_1040, 0, 1)] : b)]
        : local.iter_1039.tape)

    tape_ptr = (
      local.code_1040[0] == "<"
        ? local.iter_1039.tape_ptr - local.code_1040[1] :
      local.code_1040[0] == ">"
        ? local.iter_1039.tape_ptr + local.code_1040[1]
        : local.iter_1039.tape_ptr)

    code_ptr = 2 + (
      local.code_1040[0] == "["
        ? local.iter_1039.tape[local.iter_1039.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1039.code_ptr)] : local.iter_1039.code_ptr :
      local.code_1040[0] == "]"
        ? local.iter_1039.tape[local.iter_1039.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1039.code_ptr)] : local.iter_1039.code_ptr
        : local.iter_1039.code_ptr)

    steps_taken = 1 + local.iter_1039.steps_taken
  }
}

locals {
  code_1041 = (try(local.iter_1040.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1040.code_ptr, local.iter_1040.code_ptr + 2)
    : [null])

  input_1041 = (local.code_1041[0] == ","
    ? substr(local.input_1040, local.code_1041[1], -1)
    : local.input_1040)

  iter_1041 = try(local.iter_1040.code_ptr >= length(var.code), true) ? local.iter_1040 : {
    output = (local.code_1041[0] == "."
      ? "${local.iter_1040.output}${join("", [for _ in range(local.code_1041[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1040.tape[local.iter_1040.tape_ptr]))])}"
      : local.iter_1040.output)
    
    tape = (
      local.code_1041[0] == "+"
        ? [for i, b in local.iter_1040.tape : (i == local.iter_1040.tape_ptr ? (b + local.code_1041[1]) % 256 : b)] :
      local.code_1041[0] == "-"
        ? [for i, b in local.iter_1040.tape : (i == local.iter_1040.tape_ptr ? (b - local.code_1041[1] + 256) % 256 : b)] :
      local.code_1041[0] == ","
        ? [for i, b in local.iter_1040.tape : (i == local.iter_1040.tape_ptr ? local.ascii_lookup[substr(local.input_1041, 0, 1)] : b)]
        : local.iter_1040.tape)

    tape_ptr = (
      local.code_1041[0] == "<"
        ? local.iter_1040.tape_ptr - local.code_1041[1] :
      local.code_1041[0] == ">"
        ? local.iter_1040.tape_ptr + local.code_1041[1]
        : local.iter_1040.tape_ptr)

    code_ptr = 2 + (
      local.code_1041[0] == "["
        ? local.iter_1040.tape[local.iter_1040.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1040.code_ptr)] : local.iter_1040.code_ptr :
      local.code_1041[0] == "]"
        ? local.iter_1040.tape[local.iter_1040.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1040.code_ptr)] : local.iter_1040.code_ptr
        : local.iter_1040.code_ptr)

    steps_taken = 1 + local.iter_1040.steps_taken
  }
}

locals {
  code_1042 = (try(local.iter_1041.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1041.code_ptr, local.iter_1041.code_ptr + 2)
    : [null])

  input_1042 = (local.code_1042[0] == ","
    ? substr(local.input_1041, local.code_1042[1], -1)
    : local.input_1041)

  iter_1042 = try(local.iter_1041.code_ptr >= length(var.code), true) ? local.iter_1041 : {
    output = (local.code_1042[0] == "."
      ? "${local.iter_1041.output}${join("", [for _ in range(local.code_1042[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1041.tape[local.iter_1041.tape_ptr]))])}"
      : local.iter_1041.output)
    
    tape = (
      local.code_1042[0] == "+"
        ? [for i, b in local.iter_1041.tape : (i == local.iter_1041.tape_ptr ? (b + local.code_1042[1]) % 256 : b)] :
      local.code_1042[0] == "-"
        ? [for i, b in local.iter_1041.tape : (i == local.iter_1041.tape_ptr ? (b - local.code_1042[1] + 256) % 256 : b)] :
      local.code_1042[0] == ","
        ? [for i, b in local.iter_1041.tape : (i == local.iter_1041.tape_ptr ? local.ascii_lookup[substr(local.input_1042, 0, 1)] : b)]
        : local.iter_1041.tape)

    tape_ptr = (
      local.code_1042[0] == "<"
        ? local.iter_1041.tape_ptr - local.code_1042[1] :
      local.code_1042[0] == ">"
        ? local.iter_1041.tape_ptr + local.code_1042[1]
        : local.iter_1041.tape_ptr)

    code_ptr = 2 + (
      local.code_1042[0] == "["
        ? local.iter_1041.tape[local.iter_1041.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1041.code_ptr)] : local.iter_1041.code_ptr :
      local.code_1042[0] == "]"
        ? local.iter_1041.tape[local.iter_1041.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1041.code_ptr)] : local.iter_1041.code_ptr
        : local.iter_1041.code_ptr)

    steps_taken = 1 + local.iter_1041.steps_taken
  }
}

locals {
  code_1043 = (try(local.iter_1042.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1042.code_ptr, local.iter_1042.code_ptr + 2)
    : [null])

  input_1043 = (local.code_1043[0] == ","
    ? substr(local.input_1042, local.code_1043[1], -1)
    : local.input_1042)

  iter_1043 = try(local.iter_1042.code_ptr >= length(var.code), true) ? local.iter_1042 : {
    output = (local.code_1043[0] == "."
      ? "${local.iter_1042.output}${join("", [for _ in range(local.code_1043[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1042.tape[local.iter_1042.tape_ptr]))])}"
      : local.iter_1042.output)
    
    tape = (
      local.code_1043[0] == "+"
        ? [for i, b in local.iter_1042.tape : (i == local.iter_1042.tape_ptr ? (b + local.code_1043[1]) % 256 : b)] :
      local.code_1043[0] == "-"
        ? [for i, b in local.iter_1042.tape : (i == local.iter_1042.tape_ptr ? (b - local.code_1043[1] + 256) % 256 : b)] :
      local.code_1043[0] == ","
        ? [for i, b in local.iter_1042.tape : (i == local.iter_1042.tape_ptr ? local.ascii_lookup[substr(local.input_1043, 0, 1)] : b)]
        : local.iter_1042.tape)

    tape_ptr = (
      local.code_1043[0] == "<"
        ? local.iter_1042.tape_ptr - local.code_1043[1] :
      local.code_1043[0] == ">"
        ? local.iter_1042.tape_ptr + local.code_1043[1]
        : local.iter_1042.tape_ptr)

    code_ptr = 2 + (
      local.code_1043[0] == "["
        ? local.iter_1042.tape[local.iter_1042.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1042.code_ptr)] : local.iter_1042.code_ptr :
      local.code_1043[0] == "]"
        ? local.iter_1042.tape[local.iter_1042.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1042.code_ptr)] : local.iter_1042.code_ptr
        : local.iter_1042.code_ptr)

    steps_taken = 1 + local.iter_1042.steps_taken
  }
}

locals {
  code_1044 = (try(local.iter_1043.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1043.code_ptr, local.iter_1043.code_ptr + 2)
    : [null])

  input_1044 = (local.code_1044[0] == ","
    ? substr(local.input_1043, local.code_1044[1], -1)
    : local.input_1043)

  iter_1044 = try(local.iter_1043.code_ptr >= length(var.code), true) ? local.iter_1043 : {
    output = (local.code_1044[0] == "."
      ? "${local.iter_1043.output}${join("", [for _ in range(local.code_1044[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1043.tape[local.iter_1043.tape_ptr]))])}"
      : local.iter_1043.output)
    
    tape = (
      local.code_1044[0] == "+"
        ? [for i, b in local.iter_1043.tape : (i == local.iter_1043.tape_ptr ? (b + local.code_1044[1]) % 256 : b)] :
      local.code_1044[0] == "-"
        ? [for i, b in local.iter_1043.tape : (i == local.iter_1043.tape_ptr ? (b - local.code_1044[1] + 256) % 256 : b)] :
      local.code_1044[0] == ","
        ? [for i, b in local.iter_1043.tape : (i == local.iter_1043.tape_ptr ? local.ascii_lookup[substr(local.input_1044, 0, 1)] : b)]
        : local.iter_1043.tape)

    tape_ptr = (
      local.code_1044[0] == "<"
        ? local.iter_1043.tape_ptr - local.code_1044[1] :
      local.code_1044[0] == ">"
        ? local.iter_1043.tape_ptr + local.code_1044[1]
        : local.iter_1043.tape_ptr)

    code_ptr = 2 + (
      local.code_1044[0] == "["
        ? local.iter_1043.tape[local.iter_1043.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1043.code_ptr)] : local.iter_1043.code_ptr :
      local.code_1044[0] == "]"
        ? local.iter_1043.tape[local.iter_1043.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1043.code_ptr)] : local.iter_1043.code_ptr
        : local.iter_1043.code_ptr)

    steps_taken = 1 + local.iter_1043.steps_taken
  }
}

locals {
  code_1045 = (try(local.iter_1044.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1044.code_ptr, local.iter_1044.code_ptr + 2)
    : [null])

  input_1045 = (local.code_1045[0] == ","
    ? substr(local.input_1044, local.code_1045[1], -1)
    : local.input_1044)

  iter_1045 = try(local.iter_1044.code_ptr >= length(var.code), true) ? local.iter_1044 : {
    output = (local.code_1045[0] == "."
      ? "${local.iter_1044.output}${join("", [for _ in range(local.code_1045[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1044.tape[local.iter_1044.tape_ptr]))])}"
      : local.iter_1044.output)
    
    tape = (
      local.code_1045[0] == "+"
        ? [for i, b in local.iter_1044.tape : (i == local.iter_1044.tape_ptr ? (b + local.code_1045[1]) % 256 : b)] :
      local.code_1045[0] == "-"
        ? [for i, b in local.iter_1044.tape : (i == local.iter_1044.tape_ptr ? (b - local.code_1045[1] + 256) % 256 : b)] :
      local.code_1045[0] == ","
        ? [for i, b in local.iter_1044.tape : (i == local.iter_1044.tape_ptr ? local.ascii_lookup[substr(local.input_1045, 0, 1)] : b)]
        : local.iter_1044.tape)

    tape_ptr = (
      local.code_1045[0] == "<"
        ? local.iter_1044.tape_ptr - local.code_1045[1] :
      local.code_1045[0] == ">"
        ? local.iter_1044.tape_ptr + local.code_1045[1]
        : local.iter_1044.tape_ptr)

    code_ptr = 2 + (
      local.code_1045[0] == "["
        ? local.iter_1044.tape[local.iter_1044.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1044.code_ptr)] : local.iter_1044.code_ptr :
      local.code_1045[0] == "]"
        ? local.iter_1044.tape[local.iter_1044.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1044.code_ptr)] : local.iter_1044.code_ptr
        : local.iter_1044.code_ptr)

    steps_taken = 1 + local.iter_1044.steps_taken
  }
}

locals {
  code_1046 = (try(local.iter_1045.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1045.code_ptr, local.iter_1045.code_ptr + 2)
    : [null])

  input_1046 = (local.code_1046[0] == ","
    ? substr(local.input_1045, local.code_1046[1], -1)
    : local.input_1045)

  iter_1046 = try(local.iter_1045.code_ptr >= length(var.code), true) ? local.iter_1045 : {
    output = (local.code_1046[0] == "."
      ? "${local.iter_1045.output}${join("", [for _ in range(local.code_1046[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1045.tape[local.iter_1045.tape_ptr]))])}"
      : local.iter_1045.output)
    
    tape = (
      local.code_1046[0] == "+"
        ? [for i, b in local.iter_1045.tape : (i == local.iter_1045.tape_ptr ? (b + local.code_1046[1]) % 256 : b)] :
      local.code_1046[0] == "-"
        ? [for i, b in local.iter_1045.tape : (i == local.iter_1045.tape_ptr ? (b - local.code_1046[1] + 256) % 256 : b)] :
      local.code_1046[0] == ","
        ? [for i, b in local.iter_1045.tape : (i == local.iter_1045.tape_ptr ? local.ascii_lookup[substr(local.input_1046, 0, 1)] : b)]
        : local.iter_1045.tape)

    tape_ptr = (
      local.code_1046[0] == "<"
        ? local.iter_1045.tape_ptr - local.code_1046[1] :
      local.code_1046[0] == ">"
        ? local.iter_1045.tape_ptr + local.code_1046[1]
        : local.iter_1045.tape_ptr)

    code_ptr = 2 + (
      local.code_1046[0] == "["
        ? local.iter_1045.tape[local.iter_1045.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1045.code_ptr)] : local.iter_1045.code_ptr :
      local.code_1046[0] == "]"
        ? local.iter_1045.tape[local.iter_1045.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1045.code_ptr)] : local.iter_1045.code_ptr
        : local.iter_1045.code_ptr)

    steps_taken = 1 + local.iter_1045.steps_taken
  }
}

locals {
  code_1047 = (try(local.iter_1046.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1046.code_ptr, local.iter_1046.code_ptr + 2)
    : [null])

  input_1047 = (local.code_1047[0] == ","
    ? substr(local.input_1046, local.code_1047[1], -1)
    : local.input_1046)

  iter_1047 = try(local.iter_1046.code_ptr >= length(var.code), true) ? local.iter_1046 : {
    output = (local.code_1047[0] == "."
      ? "${local.iter_1046.output}${join("", [for _ in range(local.code_1047[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1046.tape[local.iter_1046.tape_ptr]))])}"
      : local.iter_1046.output)
    
    tape = (
      local.code_1047[0] == "+"
        ? [for i, b in local.iter_1046.tape : (i == local.iter_1046.tape_ptr ? (b + local.code_1047[1]) % 256 : b)] :
      local.code_1047[0] == "-"
        ? [for i, b in local.iter_1046.tape : (i == local.iter_1046.tape_ptr ? (b - local.code_1047[1] + 256) % 256 : b)] :
      local.code_1047[0] == ","
        ? [for i, b in local.iter_1046.tape : (i == local.iter_1046.tape_ptr ? local.ascii_lookup[substr(local.input_1047, 0, 1)] : b)]
        : local.iter_1046.tape)

    tape_ptr = (
      local.code_1047[0] == "<"
        ? local.iter_1046.tape_ptr - local.code_1047[1] :
      local.code_1047[0] == ">"
        ? local.iter_1046.tape_ptr + local.code_1047[1]
        : local.iter_1046.tape_ptr)

    code_ptr = 2 + (
      local.code_1047[0] == "["
        ? local.iter_1046.tape[local.iter_1046.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1046.code_ptr)] : local.iter_1046.code_ptr :
      local.code_1047[0] == "]"
        ? local.iter_1046.tape[local.iter_1046.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1046.code_ptr)] : local.iter_1046.code_ptr
        : local.iter_1046.code_ptr)

    steps_taken = 1 + local.iter_1046.steps_taken
  }
}

locals {
  code_1048 = (try(local.iter_1047.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1047.code_ptr, local.iter_1047.code_ptr + 2)
    : [null])

  input_1048 = (local.code_1048[0] == ","
    ? substr(local.input_1047, local.code_1048[1], -1)
    : local.input_1047)

  iter_1048 = try(local.iter_1047.code_ptr >= length(var.code), true) ? local.iter_1047 : {
    output = (local.code_1048[0] == "."
      ? "${local.iter_1047.output}${join("", [for _ in range(local.code_1048[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1047.tape[local.iter_1047.tape_ptr]))])}"
      : local.iter_1047.output)
    
    tape = (
      local.code_1048[0] == "+"
        ? [for i, b in local.iter_1047.tape : (i == local.iter_1047.tape_ptr ? (b + local.code_1048[1]) % 256 : b)] :
      local.code_1048[0] == "-"
        ? [for i, b in local.iter_1047.tape : (i == local.iter_1047.tape_ptr ? (b - local.code_1048[1] + 256) % 256 : b)] :
      local.code_1048[0] == ","
        ? [for i, b in local.iter_1047.tape : (i == local.iter_1047.tape_ptr ? local.ascii_lookup[substr(local.input_1048, 0, 1)] : b)]
        : local.iter_1047.tape)

    tape_ptr = (
      local.code_1048[0] == "<"
        ? local.iter_1047.tape_ptr - local.code_1048[1] :
      local.code_1048[0] == ">"
        ? local.iter_1047.tape_ptr + local.code_1048[1]
        : local.iter_1047.tape_ptr)

    code_ptr = 2 + (
      local.code_1048[0] == "["
        ? local.iter_1047.tape[local.iter_1047.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1047.code_ptr)] : local.iter_1047.code_ptr :
      local.code_1048[0] == "]"
        ? local.iter_1047.tape[local.iter_1047.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1047.code_ptr)] : local.iter_1047.code_ptr
        : local.iter_1047.code_ptr)

    steps_taken = 1 + local.iter_1047.steps_taken
  }
}

locals {
  code_1049 = (try(local.iter_1048.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1048.code_ptr, local.iter_1048.code_ptr + 2)
    : [null])

  input_1049 = (local.code_1049[0] == ","
    ? substr(local.input_1048, local.code_1049[1], -1)
    : local.input_1048)

  iter_1049 = try(local.iter_1048.code_ptr >= length(var.code), true) ? local.iter_1048 : {
    output = (local.code_1049[0] == "."
      ? "${local.iter_1048.output}${join("", [for _ in range(local.code_1049[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1048.tape[local.iter_1048.tape_ptr]))])}"
      : local.iter_1048.output)
    
    tape = (
      local.code_1049[0] == "+"
        ? [for i, b in local.iter_1048.tape : (i == local.iter_1048.tape_ptr ? (b + local.code_1049[1]) % 256 : b)] :
      local.code_1049[0] == "-"
        ? [for i, b in local.iter_1048.tape : (i == local.iter_1048.tape_ptr ? (b - local.code_1049[1] + 256) % 256 : b)] :
      local.code_1049[0] == ","
        ? [for i, b in local.iter_1048.tape : (i == local.iter_1048.tape_ptr ? local.ascii_lookup[substr(local.input_1049, 0, 1)] : b)]
        : local.iter_1048.tape)

    tape_ptr = (
      local.code_1049[0] == "<"
        ? local.iter_1048.tape_ptr - local.code_1049[1] :
      local.code_1049[0] == ">"
        ? local.iter_1048.tape_ptr + local.code_1049[1]
        : local.iter_1048.tape_ptr)

    code_ptr = 2 + (
      local.code_1049[0] == "["
        ? local.iter_1048.tape[local.iter_1048.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1048.code_ptr)] : local.iter_1048.code_ptr :
      local.code_1049[0] == "]"
        ? local.iter_1048.tape[local.iter_1048.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1048.code_ptr)] : local.iter_1048.code_ptr
        : local.iter_1048.code_ptr)

    steps_taken = 1 + local.iter_1048.steps_taken
  }
}

locals {
  code_1050 = (try(local.iter_1049.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1049.code_ptr, local.iter_1049.code_ptr + 2)
    : [null])

  input_1050 = (local.code_1050[0] == ","
    ? substr(local.input_1049, local.code_1050[1], -1)
    : local.input_1049)

  iter_1050 = try(local.iter_1049.code_ptr >= length(var.code), true) ? local.iter_1049 : {
    output = (local.code_1050[0] == "."
      ? "${local.iter_1049.output}${join("", [for _ in range(local.code_1050[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1049.tape[local.iter_1049.tape_ptr]))])}"
      : local.iter_1049.output)
    
    tape = (
      local.code_1050[0] == "+"
        ? [for i, b in local.iter_1049.tape : (i == local.iter_1049.tape_ptr ? (b + local.code_1050[1]) % 256 : b)] :
      local.code_1050[0] == "-"
        ? [for i, b in local.iter_1049.tape : (i == local.iter_1049.tape_ptr ? (b - local.code_1050[1] + 256) % 256 : b)] :
      local.code_1050[0] == ","
        ? [for i, b in local.iter_1049.tape : (i == local.iter_1049.tape_ptr ? local.ascii_lookup[substr(local.input_1050, 0, 1)] : b)]
        : local.iter_1049.tape)

    tape_ptr = (
      local.code_1050[0] == "<"
        ? local.iter_1049.tape_ptr - local.code_1050[1] :
      local.code_1050[0] == ">"
        ? local.iter_1049.tape_ptr + local.code_1050[1]
        : local.iter_1049.tape_ptr)

    code_ptr = 2 + (
      local.code_1050[0] == "["
        ? local.iter_1049.tape[local.iter_1049.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1049.code_ptr)] : local.iter_1049.code_ptr :
      local.code_1050[0] == "]"
        ? local.iter_1049.tape[local.iter_1049.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1049.code_ptr)] : local.iter_1049.code_ptr
        : local.iter_1049.code_ptr)

    steps_taken = 1 + local.iter_1049.steps_taken
  }
}

locals {
  code_1051 = (try(local.iter_1050.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1050.code_ptr, local.iter_1050.code_ptr + 2)
    : [null])

  input_1051 = (local.code_1051[0] == ","
    ? substr(local.input_1050, local.code_1051[1], -1)
    : local.input_1050)

  iter_1051 = try(local.iter_1050.code_ptr >= length(var.code), true) ? local.iter_1050 : {
    output = (local.code_1051[0] == "."
      ? "${local.iter_1050.output}${join("", [for _ in range(local.code_1051[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1050.tape[local.iter_1050.tape_ptr]))])}"
      : local.iter_1050.output)
    
    tape = (
      local.code_1051[0] == "+"
        ? [for i, b in local.iter_1050.tape : (i == local.iter_1050.tape_ptr ? (b + local.code_1051[1]) % 256 : b)] :
      local.code_1051[0] == "-"
        ? [for i, b in local.iter_1050.tape : (i == local.iter_1050.tape_ptr ? (b - local.code_1051[1] + 256) % 256 : b)] :
      local.code_1051[0] == ","
        ? [for i, b in local.iter_1050.tape : (i == local.iter_1050.tape_ptr ? local.ascii_lookup[substr(local.input_1051, 0, 1)] : b)]
        : local.iter_1050.tape)

    tape_ptr = (
      local.code_1051[0] == "<"
        ? local.iter_1050.tape_ptr - local.code_1051[1] :
      local.code_1051[0] == ">"
        ? local.iter_1050.tape_ptr + local.code_1051[1]
        : local.iter_1050.tape_ptr)

    code_ptr = 2 + (
      local.code_1051[0] == "["
        ? local.iter_1050.tape[local.iter_1050.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1050.code_ptr)] : local.iter_1050.code_ptr :
      local.code_1051[0] == "]"
        ? local.iter_1050.tape[local.iter_1050.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1050.code_ptr)] : local.iter_1050.code_ptr
        : local.iter_1050.code_ptr)

    steps_taken = 1 + local.iter_1050.steps_taken
  }
}

locals {
  code_1052 = (try(local.iter_1051.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1051.code_ptr, local.iter_1051.code_ptr + 2)
    : [null])

  input_1052 = (local.code_1052[0] == ","
    ? substr(local.input_1051, local.code_1052[1], -1)
    : local.input_1051)

  iter_1052 = try(local.iter_1051.code_ptr >= length(var.code), true) ? local.iter_1051 : {
    output = (local.code_1052[0] == "."
      ? "${local.iter_1051.output}${join("", [for _ in range(local.code_1052[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1051.tape[local.iter_1051.tape_ptr]))])}"
      : local.iter_1051.output)
    
    tape = (
      local.code_1052[0] == "+"
        ? [for i, b in local.iter_1051.tape : (i == local.iter_1051.tape_ptr ? (b + local.code_1052[1]) % 256 : b)] :
      local.code_1052[0] == "-"
        ? [for i, b in local.iter_1051.tape : (i == local.iter_1051.tape_ptr ? (b - local.code_1052[1] + 256) % 256 : b)] :
      local.code_1052[0] == ","
        ? [for i, b in local.iter_1051.tape : (i == local.iter_1051.tape_ptr ? local.ascii_lookup[substr(local.input_1052, 0, 1)] : b)]
        : local.iter_1051.tape)

    tape_ptr = (
      local.code_1052[0] == "<"
        ? local.iter_1051.tape_ptr - local.code_1052[1] :
      local.code_1052[0] == ">"
        ? local.iter_1051.tape_ptr + local.code_1052[1]
        : local.iter_1051.tape_ptr)

    code_ptr = 2 + (
      local.code_1052[0] == "["
        ? local.iter_1051.tape[local.iter_1051.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1051.code_ptr)] : local.iter_1051.code_ptr :
      local.code_1052[0] == "]"
        ? local.iter_1051.tape[local.iter_1051.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1051.code_ptr)] : local.iter_1051.code_ptr
        : local.iter_1051.code_ptr)

    steps_taken = 1 + local.iter_1051.steps_taken
  }
}

locals {
  code_1053 = (try(local.iter_1052.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1052.code_ptr, local.iter_1052.code_ptr + 2)
    : [null])

  input_1053 = (local.code_1053[0] == ","
    ? substr(local.input_1052, local.code_1053[1], -1)
    : local.input_1052)

  iter_1053 = try(local.iter_1052.code_ptr >= length(var.code), true) ? local.iter_1052 : {
    output = (local.code_1053[0] == "."
      ? "${local.iter_1052.output}${join("", [for _ in range(local.code_1053[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1052.tape[local.iter_1052.tape_ptr]))])}"
      : local.iter_1052.output)
    
    tape = (
      local.code_1053[0] == "+"
        ? [for i, b in local.iter_1052.tape : (i == local.iter_1052.tape_ptr ? (b + local.code_1053[1]) % 256 : b)] :
      local.code_1053[0] == "-"
        ? [for i, b in local.iter_1052.tape : (i == local.iter_1052.tape_ptr ? (b - local.code_1053[1] + 256) % 256 : b)] :
      local.code_1053[0] == ","
        ? [for i, b in local.iter_1052.tape : (i == local.iter_1052.tape_ptr ? local.ascii_lookup[substr(local.input_1053, 0, 1)] : b)]
        : local.iter_1052.tape)

    tape_ptr = (
      local.code_1053[0] == "<"
        ? local.iter_1052.tape_ptr - local.code_1053[1] :
      local.code_1053[0] == ">"
        ? local.iter_1052.tape_ptr + local.code_1053[1]
        : local.iter_1052.tape_ptr)

    code_ptr = 2 + (
      local.code_1053[0] == "["
        ? local.iter_1052.tape[local.iter_1052.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1052.code_ptr)] : local.iter_1052.code_ptr :
      local.code_1053[0] == "]"
        ? local.iter_1052.tape[local.iter_1052.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1052.code_ptr)] : local.iter_1052.code_ptr
        : local.iter_1052.code_ptr)

    steps_taken = 1 + local.iter_1052.steps_taken
  }
}

locals {
  code_1054 = (try(local.iter_1053.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1053.code_ptr, local.iter_1053.code_ptr + 2)
    : [null])

  input_1054 = (local.code_1054[0] == ","
    ? substr(local.input_1053, local.code_1054[1], -1)
    : local.input_1053)

  iter_1054 = try(local.iter_1053.code_ptr >= length(var.code), true) ? local.iter_1053 : {
    output = (local.code_1054[0] == "."
      ? "${local.iter_1053.output}${join("", [for _ in range(local.code_1054[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1053.tape[local.iter_1053.tape_ptr]))])}"
      : local.iter_1053.output)
    
    tape = (
      local.code_1054[0] == "+"
        ? [for i, b in local.iter_1053.tape : (i == local.iter_1053.tape_ptr ? (b + local.code_1054[1]) % 256 : b)] :
      local.code_1054[0] == "-"
        ? [for i, b in local.iter_1053.tape : (i == local.iter_1053.tape_ptr ? (b - local.code_1054[1] + 256) % 256 : b)] :
      local.code_1054[0] == ","
        ? [for i, b in local.iter_1053.tape : (i == local.iter_1053.tape_ptr ? local.ascii_lookup[substr(local.input_1054, 0, 1)] : b)]
        : local.iter_1053.tape)

    tape_ptr = (
      local.code_1054[0] == "<"
        ? local.iter_1053.tape_ptr - local.code_1054[1] :
      local.code_1054[0] == ">"
        ? local.iter_1053.tape_ptr + local.code_1054[1]
        : local.iter_1053.tape_ptr)

    code_ptr = 2 + (
      local.code_1054[0] == "["
        ? local.iter_1053.tape[local.iter_1053.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1053.code_ptr)] : local.iter_1053.code_ptr :
      local.code_1054[0] == "]"
        ? local.iter_1053.tape[local.iter_1053.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1053.code_ptr)] : local.iter_1053.code_ptr
        : local.iter_1053.code_ptr)

    steps_taken = 1 + local.iter_1053.steps_taken
  }
}

locals {
  code_1055 = (try(local.iter_1054.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1054.code_ptr, local.iter_1054.code_ptr + 2)
    : [null])

  input_1055 = (local.code_1055[0] == ","
    ? substr(local.input_1054, local.code_1055[1], -1)
    : local.input_1054)

  iter_1055 = try(local.iter_1054.code_ptr >= length(var.code), true) ? local.iter_1054 : {
    output = (local.code_1055[0] == "."
      ? "${local.iter_1054.output}${join("", [for _ in range(local.code_1055[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1054.tape[local.iter_1054.tape_ptr]))])}"
      : local.iter_1054.output)
    
    tape = (
      local.code_1055[0] == "+"
        ? [for i, b in local.iter_1054.tape : (i == local.iter_1054.tape_ptr ? (b + local.code_1055[1]) % 256 : b)] :
      local.code_1055[0] == "-"
        ? [for i, b in local.iter_1054.tape : (i == local.iter_1054.tape_ptr ? (b - local.code_1055[1] + 256) % 256 : b)] :
      local.code_1055[0] == ","
        ? [for i, b in local.iter_1054.tape : (i == local.iter_1054.tape_ptr ? local.ascii_lookup[substr(local.input_1055, 0, 1)] : b)]
        : local.iter_1054.tape)

    tape_ptr = (
      local.code_1055[0] == "<"
        ? local.iter_1054.tape_ptr - local.code_1055[1] :
      local.code_1055[0] == ">"
        ? local.iter_1054.tape_ptr + local.code_1055[1]
        : local.iter_1054.tape_ptr)

    code_ptr = 2 + (
      local.code_1055[0] == "["
        ? local.iter_1054.tape[local.iter_1054.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1054.code_ptr)] : local.iter_1054.code_ptr :
      local.code_1055[0] == "]"
        ? local.iter_1054.tape[local.iter_1054.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1054.code_ptr)] : local.iter_1054.code_ptr
        : local.iter_1054.code_ptr)

    steps_taken = 1 + local.iter_1054.steps_taken
  }
}

locals {
  code_1056 = (try(local.iter_1055.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1055.code_ptr, local.iter_1055.code_ptr + 2)
    : [null])

  input_1056 = (local.code_1056[0] == ","
    ? substr(local.input_1055, local.code_1056[1], -1)
    : local.input_1055)

  iter_1056 = try(local.iter_1055.code_ptr >= length(var.code), true) ? local.iter_1055 : {
    output = (local.code_1056[0] == "."
      ? "${local.iter_1055.output}${join("", [for _ in range(local.code_1056[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1055.tape[local.iter_1055.tape_ptr]))])}"
      : local.iter_1055.output)
    
    tape = (
      local.code_1056[0] == "+"
        ? [for i, b in local.iter_1055.tape : (i == local.iter_1055.tape_ptr ? (b + local.code_1056[1]) % 256 : b)] :
      local.code_1056[0] == "-"
        ? [for i, b in local.iter_1055.tape : (i == local.iter_1055.tape_ptr ? (b - local.code_1056[1] + 256) % 256 : b)] :
      local.code_1056[0] == ","
        ? [for i, b in local.iter_1055.tape : (i == local.iter_1055.tape_ptr ? local.ascii_lookup[substr(local.input_1056, 0, 1)] : b)]
        : local.iter_1055.tape)

    tape_ptr = (
      local.code_1056[0] == "<"
        ? local.iter_1055.tape_ptr - local.code_1056[1] :
      local.code_1056[0] == ">"
        ? local.iter_1055.tape_ptr + local.code_1056[1]
        : local.iter_1055.tape_ptr)

    code_ptr = 2 + (
      local.code_1056[0] == "["
        ? local.iter_1055.tape[local.iter_1055.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1055.code_ptr)] : local.iter_1055.code_ptr :
      local.code_1056[0] == "]"
        ? local.iter_1055.tape[local.iter_1055.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1055.code_ptr)] : local.iter_1055.code_ptr
        : local.iter_1055.code_ptr)

    steps_taken = 1 + local.iter_1055.steps_taken
  }
}

locals {
  code_1057 = (try(local.iter_1056.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1056.code_ptr, local.iter_1056.code_ptr + 2)
    : [null])

  input_1057 = (local.code_1057[0] == ","
    ? substr(local.input_1056, local.code_1057[1], -1)
    : local.input_1056)

  iter_1057 = try(local.iter_1056.code_ptr >= length(var.code), true) ? local.iter_1056 : {
    output = (local.code_1057[0] == "."
      ? "${local.iter_1056.output}${join("", [for _ in range(local.code_1057[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1056.tape[local.iter_1056.tape_ptr]))])}"
      : local.iter_1056.output)
    
    tape = (
      local.code_1057[0] == "+"
        ? [for i, b in local.iter_1056.tape : (i == local.iter_1056.tape_ptr ? (b + local.code_1057[1]) % 256 : b)] :
      local.code_1057[0] == "-"
        ? [for i, b in local.iter_1056.tape : (i == local.iter_1056.tape_ptr ? (b - local.code_1057[1] + 256) % 256 : b)] :
      local.code_1057[0] == ","
        ? [for i, b in local.iter_1056.tape : (i == local.iter_1056.tape_ptr ? local.ascii_lookup[substr(local.input_1057, 0, 1)] : b)]
        : local.iter_1056.tape)

    tape_ptr = (
      local.code_1057[0] == "<"
        ? local.iter_1056.tape_ptr - local.code_1057[1] :
      local.code_1057[0] == ">"
        ? local.iter_1056.tape_ptr + local.code_1057[1]
        : local.iter_1056.tape_ptr)

    code_ptr = 2 + (
      local.code_1057[0] == "["
        ? local.iter_1056.tape[local.iter_1056.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1056.code_ptr)] : local.iter_1056.code_ptr :
      local.code_1057[0] == "]"
        ? local.iter_1056.tape[local.iter_1056.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1056.code_ptr)] : local.iter_1056.code_ptr
        : local.iter_1056.code_ptr)

    steps_taken = 1 + local.iter_1056.steps_taken
  }
}

locals {
  code_1058 = (try(local.iter_1057.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1057.code_ptr, local.iter_1057.code_ptr + 2)
    : [null])

  input_1058 = (local.code_1058[0] == ","
    ? substr(local.input_1057, local.code_1058[1], -1)
    : local.input_1057)

  iter_1058 = try(local.iter_1057.code_ptr >= length(var.code), true) ? local.iter_1057 : {
    output = (local.code_1058[0] == "."
      ? "${local.iter_1057.output}${join("", [for _ in range(local.code_1058[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1057.tape[local.iter_1057.tape_ptr]))])}"
      : local.iter_1057.output)
    
    tape = (
      local.code_1058[0] == "+"
        ? [for i, b in local.iter_1057.tape : (i == local.iter_1057.tape_ptr ? (b + local.code_1058[1]) % 256 : b)] :
      local.code_1058[0] == "-"
        ? [for i, b in local.iter_1057.tape : (i == local.iter_1057.tape_ptr ? (b - local.code_1058[1] + 256) % 256 : b)] :
      local.code_1058[0] == ","
        ? [for i, b in local.iter_1057.tape : (i == local.iter_1057.tape_ptr ? local.ascii_lookup[substr(local.input_1058, 0, 1)] : b)]
        : local.iter_1057.tape)

    tape_ptr = (
      local.code_1058[0] == "<"
        ? local.iter_1057.tape_ptr - local.code_1058[1] :
      local.code_1058[0] == ">"
        ? local.iter_1057.tape_ptr + local.code_1058[1]
        : local.iter_1057.tape_ptr)

    code_ptr = 2 + (
      local.code_1058[0] == "["
        ? local.iter_1057.tape[local.iter_1057.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1057.code_ptr)] : local.iter_1057.code_ptr :
      local.code_1058[0] == "]"
        ? local.iter_1057.tape[local.iter_1057.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1057.code_ptr)] : local.iter_1057.code_ptr
        : local.iter_1057.code_ptr)

    steps_taken = 1 + local.iter_1057.steps_taken
  }
}

locals {
  code_1059 = (try(local.iter_1058.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1058.code_ptr, local.iter_1058.code_ptr + 2)
    : [null])

  input_1059 = (local.code_1059[0] == ","
    ? substr(local.input_1058, local.code_1059[1], -1)
    : local.input_1058)

  iter_1059 = try(local.iter_1058.code_ptr >= length(var.code), true) ? local.iter_1058 : {
    output = (local.code_1059[0] == "."
      ? "${local.iter_1058.output}${join("", [for _ in range(local.code_1059[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1058.tape[local.iter_1058.tape_ptr]))])}"
      : local.iter_1058.output)
    
    tape = (
      local.code_1059[0] == "+"
        ? [for i, b in local.iter_1058.tape : (i == local.iter_1058.tape_ptr ? (b + local.code_1059[1]) % 256 : b)] :
      local.code_1059[0] == "-"
        ? [for i, b in local.iter_1058.tape : (i == local.iter_1058.tape_ptr ? (b - local.code_1059[1] + 256) % 256 : b)] :
      local.code_1059[0] == ","
        ? [for i, b in local.iter_1058.tape : (i == local.iter_1058.tape_ptr ? local.ascii_lookup[substr(local.input_1059, 0, 1)] : b)]
        : local.iter_1058.tape)

    tape_ptr = (
      local.code_1059[0] == "<"
        ? local.iter_1058.tape_ptr - local.code_1059[1] :
      local.code_1059[0] == ">"
        ? local.iter_1058.tape_ptr + local.code_1059[1]
        : local.iter_1058.tape_ptr)

    code_ptr = 2 + (
      local.code_1059[0] == "["
        ? local.iter_1058.tape[local.iter_1058.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1058.code_ptr)] : local.iter_1058.code_ptr :
      local.code_1059[0] == "]"
        ? local.iter_1058.tape[local.iter_1058.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1058.code_ptr)] : local.iter_1058.code_ptr
        : local.iter_1058.code_ptr)

    steps_taken = 1 + local.iter_1058.steps_taken
  }
}

locals {
  code_1060 = (try(local.iter_1059.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1059.code_ptr, local.iter_1059.code_ptr + 2)
    : [null])

  input_1060 = (local.code_1060[0] == ","
    ? substr(local.input_1059, local.code_1060[1], -1)
    : local.input_1059)

  iter_1060 = try(local.iter_1059.code_ptr >= length(var.code), true) ? local.iter_1059 : {
    output = (local.code_1060[0] == "."
      ? "${local.iter_1059.output}${join("", [for _ in range(local.code_1060[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1059.tape[local.iter_1059.tape_ptr]))])}"
      : local.iter_1059.output)
    
    tape = (
      local.code_1060[0] == "+"
        ? [for i, b in local.iter_1059.tape : (i == local.iter_1059.tape_ptr ? (b + local.code_1060[1]) % 256 : b)] :
      local.code_1060[0] == "-"
        ? [for i, b in local.iter_1059.tape : (i == local.iter_1059.tape_ptr ? (b - local.code_1060[1] + 256) % 256 : b)] :
      local.code_1060[0] == ","
        ? [for i, b in local.iter_1059.tape : (i == local.iter_1059.tape_ptr ? local.ascii_lookup[substr(local.input_1060, 0, 1)] : b)]
        : local.iter_1059.tape)

    tape_ptr = (
      local.code_1060[0] == "<"
        ? local.iter_1059.tape_ptr - local.code_1060[1] :
      local.code_1060[0] == ">"
        ? local.iter_1059.tape_ptr + local.code_1060[1]
        : local.iter_1059.tape_ptr)

    code_ptr = 2 + (
      local.code_1060[0] == "["
        ? local.iter_1059.tape[local.iter_1059.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1059.code_ptr)] : local.iter_1059.code_ptr :
      local.code_1060[0] == "]"
        ? local.iter_1059.tape[local.iter_1059.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1059.code_ptr)] : local.iter_1059.code_ptr
        : local.iter_1059.code_ptr)

    steps_taken = 1 + local.iter_1059.steps_taken
  }
}

locals {
  code_1061 = (try(local.iter_1060.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1060.code_ptr, local.iter_1060.code_ptr + 2)
    : [null])

  input_1061 = (local.code_1061[0] == ","
    ? substr(local.input_1060, local.code_1061[1], -1)
    : local.input_1060)

  iter_1061 = try(local.iter_1060.code_ptr >= length(var.code), true) ? local.iter_1060 : {
    output = (local.code_1061[0] == "."
      ? "${local.iter_1060.output}${join("", [for _ in range(local.code_1061[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1060.tape[local.iter_1060.tape_ptr]))])}"
      : local.iter_1060.output)
    
    tape = (
      local.code_1061[0] == "+"
        ? [for i, b in local.iter_1060.tape : (i == local.iter_1060.tape_ptr ? (b + local.code_1061[1]) % 256 : b)] :
      local.code_1061[0] == "-"
        ? [for i, b in local.iter_1060.tape : (i == local.iter_1060.tape_ptr ? (b - local.code_1061[1] + 256) % 256 : b)] :
      local.code_1061[0] == ","
        ? [for i, b in local.iter_1060.tape : (i == local.iter_1060.tape_ptr ? local.ascii_lookup[substr(local.input_1061, 0, 1)] : b)]
        : local.iter_1060.tape)

    tape_ptr = (
      local.code_1061[0] == "<"
        ? local.iter_1060.tape_ptr - local.code_1061[1] :
      local.code_1061[0] == ">"
        ? local.iter_1060.tape_ptr + local.code_1061[1]
        : local.iter_1060.tape_ptr)

    code_ptr = 2 + (
      local.code_1061[0] == "["
        ? local.iter_1060.tape[local.iter_1060.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1060.code_ptr)] : local.iter_1060.code_ptr :
      local.code_1061[0] == "]"
        ? local.iter_1060.tape[local.iter_1060.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1060.code_ptr)] : local.iter_1060.code_ptr
        : local.iter_1060.code_ptr)

    steps_taken = 1 + local.iter_1060.steps_taken
  }
}

locals {
  code_1062 = (try(local.iter_1061.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1061.code_ptr, local.iter_1061.code_ptr + 2)
    : [null])

  input_1062 = (local.code_1062[0] == ","
    ? substr(local.input_1061, local.code_1062[1], -1)
    : local.input_1061)

  iter_1062 = try(local.iter_1061.code_ptr >= length(var.code), true) ? local.iter_1061 : {
    output = (local.code_1062[0] == "."
      ? "${local.iter_1061.output}${join("", [for _ in range(local.code_1062[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1061.tape[local.iter_1061.tape_ptr]))])}"
      : local.iter_1061.output)
    
    tape = (
      local.code_1062[0] == "+"
        ? [for i, b in local.iter_1061.tape : (i == local.iter_1061.tape_ptr ? (b + local.code_1062[1]) % 256 : b)] :
      local.code_1062[0] == "-"
        ? [for i, b in local.iter_1061.tape : (i == local.iter_1061.tape_ptr ? (b - local.code_1062[1] + 256) % 256 : b)] :
      local.code_1062[0] == ","
        ? [for i, b in local.iter_1061.tape : (i == local.iter_1061.tape_ptr ? local.ascii_lookup[substr(local.input_1062, 0, 1)] : b)]
        : local.iter_1061.tape)

    tape_ptr = (
      local.code_1062[0] == "<"
        ? local.iter_1061.tape_ptr - local.code_1062[1] :
      local.code_1062[0] == ">"
        ? local.iter_1061.tape_ptr + local.code_1062[1]
        : local.iter_1061.tape_ptr)

    code_ptr = 2 + (
      local.code_1062[0] == "["
        ? local.iter_1061.tape[local.iter_1061.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1061.code_ptr)] : local.iter_1061.code_ptr :
      local.code_1062[0] == "]"
        ? local.iter_1061.tape[local.iter_1061.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1061.code_ptr)] : local.iter_1061.code_ptr
        : local.iter_1061.code_ptr)

    steps_taken = 1 + local.iter_1061.steps_taken
  }
}

locals {
  code_1063 = (try(local.iter_1062.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1062.code_ptr, local.iter_1062.code_ptr + 2)
    : [null])

  input_1063 = (local.code_1063[0] == ","
    ? substr(local.input_1062, local.code_1063[1], -1)
    : local.input_1062)

  iter_1063 = try(local.iter_1062.code_ptr >= length(var.code), true) ? local.iter_1062 : {
    output = (local.code_1063[0] == "."
      ? "${local.iter_1062.output}${join("", [for _ in range(local.code_1063[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1062.tape[local.iter_1062.tape_ptr]))])}"
      : local.iter_1062.output)
    
    tape = (
      local.code_1063[0] == "+"
        ? [for i, b in local.iter_1062.tape : (i == local.iter_1062.tape_ptr ? (b + local.code_1063[1]) % 256 : b)] :
      local.code_1063[0] == "-"
        ? [for i, b in local.iter_1062.tape : (i == local.iter_1062.tape_ptr ? (b - local.code_1063[1] + 256) % 256 : b)] :
      local.code_1063[0] == ","
        ? [for i, b in local.iter_1062.tape : (i == local.iter_1062.tape_ptr ? local.ascii_lookup[substr(local.input_1063, 0, 1)] : b)]
        : local.iter_1062.tape)

    tape_ptr = (
      local.code_1063[0] == "<"
        ? local.iter_1062.tape_ptr - local.code_1063[1] :
      local.code_1063[0] == ">"
        ? local.iter_1062.tape_ptr + local.code_1063[1]
        : local.iter_1062.tape_ptr)

    code_ptr = 2 + (
      local.code_1063[0] == "["
        ? local.iter_1062.tape[local.iter_1062.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1062.code_ptr)] : local.iter_1062.code_ptr :
      local.code_1063[0] == "]"
        ? local.iter_1062.tape[local.iter_1062.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1062.code_ptr)] : local.iter_1062.code_ptr
        : local.iter_1062.code_ptr)

    steps_taken = 1 + local.iter_1062.steps_taken
  }
}

locals {
  code_1064 = (try(local.iter_1063.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1063.code_ptr, local.iter_1063.code_ptr + 2)
    : [null])

  input_1064 = (local.code_1064[0] == ","
    ? substr(local.input_1063, local.code_1064[1], -1)
    : local.input_1063)

  iter_1064 = try(local.iter_1063.code_ptr >= length(var.code), true) ? local.iter_1063 : {
    output = (local.code_1064[0] == "."
      ? "${local.iter_1063.output}${join("", [for _ in range(local.code_1064[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1063.tape[local.iter_1063.tape_ptr]))])}"
      : local.iter_1063.output)
    
    tape = (
      local.code_1064[0] == "+"
        ? [for i, b in local.iter_1063.tape : (i == local.iter_1063.tape_ptr ? (b + local.code_1064[1]) % 256 : b)] :
      local.code_1064[0] == "-"
        ? [for i, b in local.iter_1063.tape : (i == local.iter_1063.tape_ptr ? (b - local.code_1064[1] + 256) % 256 : b)] :
      local.code_1064[0] == ","
        ? [for i, b in local.iter_1063.tape : (i == local.iter_1063.tape_ptr ? local.ascii_lookup[substr(local.input_1064, 0, 1)] : b)]
        : local.iter_1063.tape)

    tape_ptr = (
      local.code_1064[0] == "<"
        ? local.iter_1063.tape_ptr - local.code_1064[1] :
      local.code_1064[0] == ">"
        ? local.iter_1063.tape_ptr + local.code_1064[1]
        : local.iter_1063.tape_ptr)

    code_ptr = 2 + (
      local.code_1064[0] == "["
        ? local.iter_1063.tape[local.iter_1063.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1063.code_ptr)] : local.iter_1063.code_ptr :
      local.code_1064[0] == "]"
        ? local.iter_1063.tape[local.iter_1063.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1063.code_ptr)] : local.iter_1063.code_ptr
        : local.iter_1063.code_ptr)

    steps_taken = 1 + local.iter_1063.steps_taken
  }
}

locals {
  code_1065 = (try(local.iter_1064.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1064.code_ptr, local.iter_1064.code_ptr + 2)
    : [null])

  input_1065 = (local.code_1065[0] == ","
    ? substr(local.input_1064, local.code_1065[1], -1)
    : local.input_1064)

  iter_1065 = try(local.iter_1064.code_ptr >= length(var.code), true) ? local.iter_1064 : {
    output = (local.code_1065[0] == "."
      ? "${local.iter_1064.output}${join("", [for _ in range(local.code_1065[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1064.tape[local.iter_1064.tape_ptr]))])}"
      : local.iter_1064.output)
    
    tape = (
      local.code_1065[0] == "+"
        ? [for i, b in local.iter_1064.tape : (i == local.iter_1064.tape_ptr ? (b + local.code_1065[1]) % 256 : b)] :
      local.code_1065[0] == "-"
        ? [for i, b in local.iter_1064.tape : (i == local.iter_1064.tape_ptr ? (b - local.code_1065[1] + 256) % 256 : b)] :
      local.code_1065[0] == ","
        ? [for i, b in local.iter_1064.tape : (i == local.iter_1064.tape_ptr ? local.ascii_lookup[substr(local.input_1065, 0, 1)] : b)]
        : local.iter_1064.tape)

    tape_ptr = (
      local.code_1065[0] == "<"
        ? local.iter_1064.tape_ptr - local.code_1065[1] :
      local.code_1065[0] == ">"
        ? local.iter_1064.tape_ptr + local.code_1065[1]
        : local.iter_1064.tape_ptr)

    code_ptr = 2 + (
      local.code_1065[0] == "["
        ? local.iter_1064.tape[local.iter_1064.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1064.code_ptr)] : local.iter_1064.code_ptr :
      local.code_1065[0] == "]"
        ? local.iter_1064.tape[local.iter_1064.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1064.code_ptr)] : local.iter_1064.code_ptr
        : local.iter_1064.code_ptr)

    steps_taken = 1 + local.iter_1064.steps_taken
  }
}

locals {
  code_1066 = (try(local.iter_1065.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1065.code_ptr, local.iter_1065.code_ptr + 2)
    : [null])

  input_1066 = (local.code_1066[0] == ","
    ? substr(local.input_1065, local.code_1066[1], -1)
    : local.input_1065)

  iter_1066 = try(local.iter_1065.code_ptr >= length(var.code), true) ? local.iter_1065 : {
    output = (local.code_1066[0] == "."
      ? "${local.iter_1065.output}${join("", [for _ in range(local.code_1066[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1065.tape[local.iter_1065.tape_ptr]))])}"
      : local.iter_1065.output)
    
    tape = (
      local.code_1066[0] == "+"
        ? [for i, b in local.iter_1065.tape : (i == local.iter_1065.tape_ptr ? (b + local.code_1066[1]) % 256 : b)] :
      local.code_1066[0] == "-"
        ? [for i, b in local.iter_1065.tape : (i == local.iter_1065.tape_ptr ? (b - local.code_1066[1] + 256) % 256 : b)] :
      local.code_1066[0] == ","
        ? [for i, b in local.iter_1065.tape : (i == local.iter_1065.tape_ptr ? local.ascii_lookup[substr(local.input_1066, 0, 1)] : b)]
        : local.iter_1065.tape)

    tape_ptr = (
      local.code_1066[0] == "<"
        ? local.iter_1065.tape_ptr - local.code_1066[1] :
      local.code_1066[0] == ">"
        ? local.iter_1065.tape_ptr + local.code_1066[1]
        : local.iter_1065.tape_ptr)

    code_ptr = 2 + (
      local.code_1066[0] == "["
        ? local.iter_1065.tape[local.iter_1065.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1065.code_ptr)] : local.iter_1065.code_ptr :
      local.code_1066[0] == "]"
        ? local.iter_1065.tape[local.iter_1065.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1065.code_ptr)] : local.iter_1065.code_ptr
        : local.iter_1065.code_ptr)

    steps_taken = 1 + local.iter_1065.steps_taken
  }
}

locals {
  code_1067 = (try(local.iter_1066.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1066.code_ptr, local.iter_1066.code_ptr + 2)
    : [null])

  input_1067 = (local.code_1067[0] == ","
    ? substr(local.input_1066, local.code_1067[1], -1)
    : local.input_1066)

  iter_1067 = try(local.iter_1066.code_ptr >= length(var.code), true) ? local.iter_1066 : {
    output = (local.code_1067[0] == "."
      ? "${local.iter_1066.output}${join("", [for _ in range(local.code_1067[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1066.tape[local.iter_1066.tape_ptr]))])}"
      : local.iter_1066.output)
    
    tape = (
      local.code_1067[0] == "+"
        ? [for i, b in local.iter_1066.tape : (i == local.iter_1066.tape_ptr ? (b + local.code_1067[1]) % 256 : b)] :
      local.code_1067[0] == "-"
        ? [for i, b in local.iter_1066.tape : (i == local.iter_1066.tape_ptr ? (b - local.code_1067[1] + 256) % 256 : b)] :
      local.code_1067[0] == ","
        ? [for i, b in local.iter_1066.tape : (i == local.iter_1066.tape_ptr ? local.ascii_lookup[substr(local.input_1067, 0, 1)] : b)]
        : local.iter_1066.tape)

    tape_ptr = (
      local.code_1067[0] == "<"
        ? local.iter_1066.tape_ptr - local.code_1067[1] :
      local.code_1067[0] == ">"
        ? local.iter_1066.tape_ptr + local.code_1067[1]
        : local.iter_1066.tape_ptr)

    code_ptr = 2 + (
      local.code_1067[0] == "["
        ? local.iter_1066.tape[local.iter_1066.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1066.code_ptr)] : local.iter_1066.code_ptr :
      local.code_1067[0] == "]"
        ? local.iter_1066.tape[local.iter_1066.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1066.code_ptr)] : local.iter_1066.code_ptr
        : local.iter_1066.code_ptr)

    steps_taken = 1 + local.iter_1066.steps_taken
  }
}

locals {
  code_1068 = (try(local.iter_1067.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1067.code_ptr, local.iter_1067.code_ptr + 2)
    : [null])

  input_1068 = (local.code_1068[0] == ","
    ? substr(local.input_1067, local.code_1068[1], -1)
    : local.input_1067)

  iter_1068 = try(local.iter_1067.code_ptr >= length(var.code), true) ? local.iter_1067 : {
    output = (local.code_1068[0] == "."
      ? "${local.iter_1067.output}${join("", [for _ in range(local.code_1068[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1067.tape[local.iter_1067.tape_ptr]))])}"
      : local.iter_1067.output)
    
    tape = (
      local.code_1068[0] == "+"
        ? [for i, b in local.iter_1067.tape : (i == local.iter_1067.tape_ptr ? (b + local.code_1068[1]) % 256 : b)] :
      local.code_1068[0] == "-"
        ? [for i, b in local.iter_1067.tape : (i == local.iter_1067.tape_ptr ? (b - local.code_1068[1] + 256) % 256 : b)] :
      local.code_1068[0] == ","
        ? [for i, b in local.iter_1067.tape : (i == local.iter_1067.tape_ptr ? local.ascii_lookup[substr(local.input_1068, 0, 1)] : b)]
        : local.iter_1067.tape)

    tape_ptr = (
      local.code_1068[0] == "<"
        ? local.iter_1067.tape_ptr - local.code_1068[1] :
      local.code_1068[0] == ">"
        ? local.iter_1067.tape_ptr + local.code_1068[1]
        : local.iter_1067.tape_ptr)

    code_ptr = 2 + (
      local.code_1068[0] == "["
        ? local.iter_1067.tape[local.iter_1067.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1067.code_ptr)] : local.iter_1067.code_ptr :
      local.code_1068[0] == "]"
        ? local.iter_1067.tape[local.iter_1067.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1067.code_ptr)] : local.iter_1067.code_ptr
        : local.iter_1067.code_ptr)

    steps_taken = 1 + local.iter_1067.steps_taken
  }
}

locals {
  code_1069 = (try(local.iter_1068.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1068.code_ptr, local.iter_1068.code_ptr + 2)
    : [null])

  input_1069 = (local.code_1069[0] == ","
    ? substr(local.input_1068, local.code_1069[1], -1)
    : local.input_1068)

  iter_1069 = try(local.iter_1068.code_ptr >= length(var.code), true) ? local.iter_1068 : {
    output = (local.code_1069[0] == "."
      ? "${local.iter_1068.output}${join("", [for _ in range(local.code_1069[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1068.tape[local.iter_1068.tape_ptr]))])}"
      : local.iter_1068.output)
    
    tape = (
      local.code_1069[0] == "+"
        ? [for i, b in local.iter_1068.tape : (i == local.iter_1068.tape_ptr ? (b + local.code_1069[1]) % 256 : b)] :
      local.code_1069[0] == "-"
        ? [for i, b in local.iter_1068.tape : (i == local.iter_1068.tape_ptr ? (b - local.code_1069[1] + 256) % 256 : b)] :
      local.code_1069[0] == ","
        ? [for i, b in local.iter_1068.tape : (i == local.iter_1068.tape_ptr ? local.ascii_lookup[substr(local.input_1069, 0, 1)] : b)]
        : local.iter_1068.tape)

    tape_ptr = (
      local.code_1069[0] == "<"
        ? local.iter_1068.tape_ptr - local.code_1069[1] :
      local.code_1069[0] == ">"
        ? local.iter_1068.tape_ptr + local.code_1069[1]
        : local.iter_1068.tape_ptr)

    code_ptr = 2 + (
      local.code_1069[0] == "["
        ? local.iter_1068.tape[local.iter_1068.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1068.code_ptr)] : local.iter_1068.code_ptr :
      local.code_1069[0] == "]"
        ? local.iter_1068.tape[local.iter_1068.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1068.code_ptr)] : local.iter_1068.code_ptr
        : local.iter_1068.code_ptr)

    steps_taken = 1 + local.iter_1068.steps_taken
  }
}

locals {
  code_1070 = (try(local.iter_1069.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1069.code_ptr, local.iter_1069.code_ptr + 2)
    : [null])

  input_1070 = (local.code_1070[0] == ","
    ? substr(local.input_1069, local.code_1070[1], -1)
    : local.input_1069)

  iter_1070 = try(local.iter_1069.code_ptr >= length(var.code), true) ? local.iter_1069 : {
    output = (local.code_1070[0] == "."
      ? "${local.iter_1069.output}${join("", [for _ in range(local.code_1070[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1069.tape[local.iter_1069.tape_ptr]))])}"
      : local.iter_1069.output)
    
    tape = (
      local.code_1070[0] == "+"
        ? [for i, b in local.iter_1069.tape : (i == local.iter_1069.tape_ptr ? (b + local.code_1070[1]) % 256 : b)] :
      local.code_1070[0] == "-"
        ? [for i, b in local.iter_1069.tape : (i == local.iter_1069.tape_ptr ? (b - local.code_1070[1] + 256) % 256 : b)] :
      local.code_1070[0] == ","
        ? [for i, b in local.iter_1069.tape : (i == local.iter_1069.tape_ptr ? local.ascii_lookup[substr(local.input_1070, 0, 1)] : b)]
        : local.iter_1069.tape)

    tape_ptr = (
      local.code_1070[0] == "<"
        ? local.iter_1069.tape_ptr - local.code_1070[1] :
      local.code_1070[0] == ">"
        ? local.iter_1069.tape_ptr + local.code_1070[1]
        : local.iter_1069.tape_ptr)

    code_ptr = 2 + (
      local.code_1070[0] == "["
        ? local.iter_1069.tape[local.iter_1069.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1069.code_ptr)] : local.iter_1069.code_ptr :
      local.code_1070[0] == "]"
        ? local.iter_1069.tape[local.iter_1069.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1069.code_ptr)] : local.iter_1069.code_ptr
        : local.iter_1069.code_ptr)

    steps_taken = 1 + local.iter_1069.steps_taken
  }
}

locals {
  code_1071 = (try(local.iter_1070.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1070.code_ptr, local.iter_1070.code_ptr + 2)
    : [null])

  input_1071 = (local.code_1071[0] == ","
    ? substr(local.input_1070, local.code_1071[1], -1)
    : local.input_1070)

  iter_1071 = try(local.iter_1070.code_ptr >= length(var.code), true) ? local.iter_1070 : {
    output = (local.code_1071[0] == "."
      ? "${local.iter_1070.output}${join("", [for _ in range(local.code_1071[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1070.tape[local.iter_1070.tape_ptr]))])}"
      : local.iter_1070.output)
    
    tape = (
      local.code_1071[0] == "+"
        ? [for i, b in local.iter_1070.tape : (i == local.iter_1070.tape_ptr ? (b + local.code_1071[1]) % 256 : b)] :
      local.code_1071[0] == "-"
        ? [for i, b in local.iter_1070.tape : (i == local.iter_1070.tape_ptr ? (b - local.code_1071[1] + 256) % 256 : b)] :
      local.code_1071[0] == ","
        ? [for i, b in local.iter_1070.tape : (i == local.iter_1070.tape_ptr ? local.ascii_lookup[substr(local.input_1071, 0, 1)] : b)]
        : local.iter_1070.tape)

    tape_ptr = (
      local.code_1071[0] == "<"
        ? local.iter_1070.tape_ptr - local.code_1071[1] :
      local.code_1071[0] == ">"
        ? local.iter_1070.tape_ptr + local.code_1071[1]
        : local.iter_1070.tape_ptr)

    code_ptr = 2 + (
      local.code_1071[0] == "["
        ? local.iter_1070.tape[local.iter_1070.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1070.code_ptr)] : local.iter_1070.code_ptr :
      local.code_1071[0] == "]"
        ? local.iter_1070.tape[local.iter_1070.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1070.code_ptr)] : local.iter_1070.code_ptr
        : local.iter_1070.code_ptr)

    steps_taken = 1 + local.iter_1070.steps_taken
  }
}

locals {
  code_1072 = (try(local.iter_1071.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1071.code_ptr, local.iter_1071.code_ptr + 2)
    : [null])

  input_1072 = (local.code_1072[0] == ","
    ? substr(local.input_1071, local.code_1072[1], -1)
    : local.input_1071)

  iter_1072 = try(local.iter_1071.code_ptr >= length(var.code), true) ? local.iter_1071 : {
    output = (local.code_1072[0] == "."
      ? "${local.iter_1071.output}${join("", [for _ in range(local.code_1072[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1071.tape[local.iter_1071.tape_ptr]))])}"
      : local.iter_1071.output)
    
    tape = (
      local.code_1072[0] == "+"
        ? [for i, b in local.iter_1071.tape : (i == local.iter_1071.tape_ptr ? (b + local.code_1072[1]) % 256 : b)] :
      local.code_1072[0] == "-"
        ? [for i, b in local.iter_1071.tape : (i == local.iter_1071.tape_ptr ? (b - local.code_1072[1] + 256) % 256 : b)] :
      local.code_1072[0] == ","
        ? [for i, b in local.iter_1071.tape : (i == local.iter_1071.tape_ptr ? local.ascii_lookup[substr(local.input_1072, 0, 1)] : b)]
        : local.iter_1071.tape)

    tape_ptr = (
      local.code_1072[0] == "<"
        ? local.iter_1071.tape_ptr - local.code_1072[1] :
      local.code_1072[0] == ">"
        ? local.iter_1071.tape_ptr + local.code_1072[1]
        : local.iter_1071.tape_ptr)

    code_ptr = 2 + (
      local.code_1072[0] == "["
        ? local.iter_1071.tape[local.iter_1071.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1071.code_ptr)] : local.iter_1071.code_ptr :
      local.code_1072[0] == "]"
        ? local.iter_1071.tape[local.iter_1071.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1071.code_ptr)] : local.iter_1071.code_ptr
        : local.iter_1071.code_ptr)

    steps_taken = 1 + local.iter_1071.steps_taken
  }
}

locals {
  code_1073 = (try(local.iter_1072.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1072.code_ptr, local.iter_1072.code_ptr + 2)
    : [null])

  input_1073 = (local.code_1073[0] == ","
    ? substr(local.input_1072, local.code_1073[1], -1)
    : local.input_1072)

  iter_1073 = try(local.iter_1072.code_ptr >= length(var.code), true) ? local.iter_1072 : {
    output = (local.code_1073[0] == "."
      ? "${local.iter_1072.output}${join("", [for _ in range(local.code_1073[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1072.tape[local.iter_1072.tape_ptr]))])}"
      : local.iter_1072.output)
    
    tape = (
      local.code_1073[0] == "+"
        ? [for i, b in local.iter_1072.tape : (i == local.iter_1072.tape_ptr ? (b + local.code_1073[1]) % 256 : b)] :
      local.code_1073[0] == "-"
        ? [for i, b in local.iter_1072.tape : (i == local.iter_1072.tape_ptr ? (b - local.code_1073[1] + 256) % 256 : b)] :
      local.code_1073[0] == ","
        ? [for i, b in local.iter_1072.tape : (i == local.iter_1072.tape_ptr ? local.ascii_lookup[substr(local.input_1073, 0, 1)] : b)]
        : local.iter_1072.tape)

    tape_ptr = (
      local.code_1073[0] == "<"
        ? local.iter_1072.tape_ptr - local.code_1073[1] :
      local.code_1073[0] == ">"
        ? local.iter_1072.tape_ptr + local.code_1073[1]
        : local.iter_1072.tape_ptr)

    code_ptr = 2 + (
      local.code_1073[0] == "["
        ? local.iter_1072.tape[local.iter_1072.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1072.code_ptr)] : local.iter_1072.code_ptr :
      local.code_1073[0] == "]"
        ? local.iter_1072.tape[local.iter_1072.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1072.code_ptr)] : local.iter_1072.code_ptr
        : local.iter_1072.code_ptr)

    steps_taken = 1 + local.iter_1072.steps_taken
  }
}

locals {
  code_1074 = (try(local.iter_1073.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1073.code_ptr, local.iter_1073.code_ptr + 2)
    : [null])

  input_1074 = (local.code_1074[0] == ","
    ? substr(local.input_1073, local.code_1074[1], -1)
    : local.input_1073)

  iter_1074 = try(local.iter_1073.code_ptr >= length(var.code), true) ? local.iter_1073 : {
    output = (local.code_1074[0] == "."
      ? "${local.iter_1073.output}${join("", [for _ in range(local.code_1074[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1073.tape[local.iter_1073.tape_ptr]))])}"
      : local.iter_1073.output)
    
    tape = (
      local.code_1074[0] == "+"
        ? [for i, b in local.iter_1073.tape : (i == local.iter_1073.tape_ptr ? (b + local.code_1074[1]) % 256 : b)] :
      local.code_1074[0] == "-"
        ? [for i, b in local.iter_1073.tape : (i == local.iter_1073.tape_ptr ? (b - local.code_1074[1] + 256) % 256 : b)] :
      local.code_1074[0] == ","
        ? [for i, b in local.iter_1073.tape : (i == local.iter_1073.tape_ptr ? local.ascii_lookup[substr(local.input_1074, 0, 1)] : b)]
        : local.iter_1073.tape)

    tape_ptr = (
      local.code_1074[0] == "<"
        ? local.iter_1073.tape_ptr - local.code_1074[1] :
      local.code_1074[0] == ">"
        ? local.iter_1073.tape_ptr + local.code_1074[1]
        : local.iter_1073.tape_ptr)

    code_ptr = 2 + (
      local.code_1074[0] == "["
        ? local.iter_1073.tape[local.iter_1073.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1073.code_ptr)] : local.iter_1073.code_ptr :
      local.code_1074[0] == "]"
        ? local.iter_1073.tape[local.iter_1073.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1073.code_ptr)] : local.iter_1073.code_ptr
        : local.iter_1073.code_ptr)

    steps_taken = 1 + local.iter_1073.steps_taken
  }
}

locals {
  code_1075 = (try(local.iter_1074.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1074.code_ptr, local.iter_1074.code_ptr + 2)
    : [null])

  input_1075 = (local.code_1075[0] == ","
    ? substr(local.input_1074, local.code_1075[1], -1)
    : local.input_1074)

  iter_1075 = try(local.iter_1074.code_ptr >= length(var.code), true) ? local.iter_1074 : {
    output = (local.code_1075[0] == "."
      ? "${local.iter_1074.output}${join("", [for _ in range(local.code_1075[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1074.tape[local.iter_1074.tape_ptr]))])}"
      : local.iter_1074.output)
    
    tape = (
      local.code_1075[0] == "+"
        ? [for i, b in local.iter_1074.tape : (i == local.iter_1074.tape_ptr ? (b + local.code_1075[1]) % 256 : b)] :
      local.code_1075[0] == "-"
        ? [for i, b in local.iter_1074.tape : (i == local.iter_1074.tape_ptr ? (b - local.code_1075[1] + 256) % 256 : b)] :
      local.code_1075[0] == ","
        ? [for i, b in local.iter_1074.tape : (i == local.iter_1074.tape_ptr ? local.ascii_lookup[substr(local.input_1075, 0, 1)] : b)]
        : local.iter_1074.tape)

    tape_ptr = (
      local.code_1075[0] == "<"
        ? local.iter_1074.tape_ptr - local.code_1075[1] :
      local.code_1075[0] == ">"
        ? local.iter_1074.tape_ptr + local.code_1075[1]
        : local.iter_1074.tape_ptr)

    code_ptr = 2 + (
      local.code_1075[0] == "["
        ? local.iter_1074.tape[local.iter_1074.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1074.code_ptr)] : local.iter_1074.code_ptr :
      local.code_1075[0] == "]"
        ? local.iter_1074.tape[local.iter_1074.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1074.code_ptr)] : local.iter_1074.code_ptr
        : local.iter_1074.code_ptr)

    steps_taken = 1 + local.iter_1074.steps_taken
  }
}

locals {
  code_1076 = (try(local.iter_1075.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1075.code_ptr, local.iter_1075.code_ptr + 2)
    : [null])

  input_1076 = (local.code_1076[0] == ","
    ? substr(local.input_1075, local.code_1076[1], -1)
    : local.input_1075)

  iter_1076 = try(local.iter_1075.code_ptr >= length(var.code), true) ? local.iter_1075 : {
    output = (local.code_1076[0] == "."
      ? "${local.iter_1075.output}${join("", [for _ in range(local.code_1076[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1075.tape[local.iter_1075.tape_ptr]))])}"
      : local.iter_1075.output)
    
    tape = (
      local.code_1076[0] == "+"
        ? [for i, b in local.iter_1075.tape : (i == local.iter_1075.tape_ptr ? (b + local.code_1076[1]) % 256 : b)] :
      local.code_1076[0] == "-"
        ? [for i, b in local.iter_1075.tape : (i == local.iter_1075.tape_ptr ? (b - local.code_1076[1] + 256) % 256 : b)] :
      local.code_1076[0] == ","
        ? [for i, b in local.iter_1075.tape : (i == local.iter_1075.tape_ptr ? local.ascii_lookup[substr(local.input_1076, 0, 1)] : b)]
        : local.iter_1075.tape)

    tape_ptr = (
      local.code_1076[0] == "<"
        ? local.iter_1075.tape_ptr - local.code_1076[1] :
      local.code_1076[0] == ">"
        ? local.iter_1075.tape_ptr + local.code_1076[1]
        : local.iter_1075.tape_ptr)

    code_ptr = 2 + (
      local.code_1076[0] == "["
        ? local.iter_1075.tape[local.iter_1075.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1075.code_ptr)] : local.iter_1075.code_ptr :
      local.code_1076[0] == "]"
        ? local.iter_1075.tape[local.iter_1075.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1075.code_ptr)] : local.iter_1075.code_ptr
        : local.iter_1075.code_ptr)

    steps_taken = 1 + local.iter_1075.steps_taken
  }
}

locals {
  code_1077 = (try(local.iter_1076.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1076.code_ptr, local.iter_1076.code_ptr + 2)
    : [null])

  input_1077 = (local.code_1077[0] == ","
    ? substr(local.input_1076, local.code_1077[1], -1)
    : local.input_1076)

  iter_1077 = try(local.iter_1076.code_ptr >= length(var.code), true) ? local.iter_1076 : {
    output = (local.code_1077[0] == "."
      ? "${local.iter_1076.output}${join("", [for _ in range(local.code_1077[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1076.tape[local.iter_1076.tape_ptr]))])}"
      : local.iter_1076.output)
    
    tape = (
      local.code_1077[0] == "+"
        ? [for i, b in local.iter_1076.tape : (i == local.iter_1076.tape_ptr ? (b + local.code_1077[1]) % 256 : b)] :
      local.code_1077[0] == "-"
        ? [for i, b in local.iter_1076.tape : (i == local.iter_1076.tape_ptr ? (b - local.code_1077[1] + 256) % 256 : b)] :
      local.code_1077[0] == ","
        ? [for i, b in local.iter_1076.tape : (i == local.iter_1076.tape_ptr ? local.ascii_lookup[substr(local.input_1077, 0, 1)] : b)]
        : local.iter_1076.tape)

    tape_ptr = (
      local.code_1077[0] == "<"
        ? local.iter_1076.tape_ptr - local.code_1077[1] :
      local.code_1077[0] == ">"
        ? local.iter_1076.tape_ptr + local.code_1077[1]
        : local.iter_1076.tape_ptr)

    code_ptr = 2 + (
      local.code_1077[0] == "["
        ? local.iter_1076.tape[local.iter_1076.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1076.code_ptr)] : local.iter_1076.code_ptr :
      local.code_1077[0] == "]"
        ? local.iter_1076.tape[local.iter_1076.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1076.code_ptr)] : local.iter_1076.code_ptr
        : local.iter_1076.code_ptr)

    steps_taken = 1 + local.iter_1076.steps_taken
  }
}

locals {
  code_1078 = (try(local.iter_1077.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1077.code_ptr, local.iter_1077.code_ptr + 2)
    : [null])

  input_1078 = (local.code_1078[0] == ","
    ? substr(local.input_1077, local.code_1078[1], -1)
    : local.input_1077)

  iter_1078 = try(local.iter_1077.code_ptr >= length(var.code), true) ? local.iter_1077 : {
    output = (local.code_1078[0] == "."
      ? "${local.iter_1077.output}${join("", [for _ in range(local.code_1078[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1077.tape[local.iter_1077.tape_ptr]))])}"
      : local.iter_1077.output)
    
    tape = (
      local.code_1078[0] == "+"
        ? [for i, b in local.iter_1077.tape : (i == local.iter_1077.tape_ptr ? (b + local.code_1078[1]) % 256 : b)] :
      local.code_1078[0] == "-"
        ? [for i, b in local.iter_1077.tape : (i == local.iter_1077.tape_ptr ? (b - local.code_1078[1] + 256) % 256 : b)] :
      local.code_1078[0] == ","
        ? [for i, b in local.iter_1077.tape : (i == local.iter_1077.tape_ptr ? local.ascii_lookup[substr(local.input_1078, 0, 1)] : b)]
        : local.iter_1077.tape)

    tape_ptr = (
      local.code_1078[0] == "<"
        ? local.iter_1077.tape_ptr - local.code_1078[1] :
      local.code_1078[0] == ">"
        ? local.iter_1077.tape_ptr + local.code_1078[1]
        : local.iter_1077.tape_ptr)

    code_ptr = 2 + (
      local.code_1078[0] == "["
        ? local.iter_1077.tape[local.iter_1077.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1077.code_ptr)] : local.iter_1077.code_ptr :
      local.code_1078[0] == "]"
        ? local.iter_1077.tape[local.iter_1077.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1077.code_ptr)] : local.iter_1077.code_ptr
        : local.iter_1077.code_ptr)

    steps_taken = 1 + local.iter_1077.steps_taken
  }
}

locals {
  code_1079 = (try(local.iter_1078.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1078.code_ptr, local.iter_1078.code_ptr + 2)
    : [null])

  input_1079 = (local.code_1079[0] == ","
    ? substr(local.input_1078, local.code_1079[1], -1)
    : local.input_1078)

  iter_1079 = try(local.iter_1078.code_ptr >= length(var.code), true) ? local.iter_1078 : {
    output = (local.code_1079[0] == "."
      ? "${local.iter_1078.output}${join("", [for _ in range(local.code_1079[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1078.tape[local.iter_1078.tape_ptr]))])}"
      : local.iter_1078.output)
    
    tape = (
      local.code_1079[0] == "+"
        ? [for i, b in local.iter_1078.tape : (i == local.iter_1078.tape_ptr ? (b + local.code_1079[1]) % 256 : b)] :
      local.code_1079[0] == "-"
        ? [for i, b in local.iter_1078.tape : (i == local.iter_1078.tape_ptr ? (b - local.code_1079[1] + 256) % 256 : b)] :
      local.code_1079[0] == ","
        ? [for i, b in local.iter_1078.tape : (i == local.iter_1078.tape_ptr ? local.ascii_lookup[substr(local.input_1079, 0, 1)] : b)]
        : local.iter_1078.tape)

    tape_ptr = (
      local.code_1079[0] == "<"
        ? local.iter_1078.tape_ptr - local.code_1079[1] :
      local.code_1079[0] == ">"
        ? local.iter_1078.tape_ptr + local.code_1079[1]
        : local.iter_1078.tape_ptr)

    code_ptr = 2 + (
      local.code_1079[0] == "["
        ? local.iter_1078.tape[local.iter_1078.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1078.code_ptr)] : local.iter_1078.code_ptr :
      local.code_1079[0] == "]"
        ? local.iter_1078.tape[local.iter_1078.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1078.code_ptr)] : local.iter_1078.code_ptr
        : local.iter_1078.code_ptr)

    steps_taken = 1 + local.iter_1078.steps_taken
  }
}

locals {
  code_1080 = (try(local.iter_1079.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1079.code_ptr, local.iter_1079.code_ptr + 2)
    : [null])

  input_1080 = (local.code_1080[0] == ","
    ? substr(local.input_1079, local.code_1080[1], -1)
    : local.input_1079)

  iter_1080 = try(local.iter_1079.code_ptr >= length(var.code), true) ? local.iter_1079 : {
    output = (local.code_1080[0] == "."
      ? "${local.iter_1079.output}${join("", [for _ in range(local.code_1080[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1079.tape[local.iter_1079.tape_ptr]))])}"
      : local.iter_1079.output)
    
    tape = (
      local.code_1080[0] == "+"
        ? [for i, b in local.iter_1079.tape : (i == local.iter_1079.tape_ptr ? (b + local.code_1080[1]) % 256 : b)] :
      local.code_1080[0] == "-"
        ? [for i, b in local.iter_1079.tape : (i == local.iter_1079.tape_ptr ? (b - local.code_1080[1] + 256) % 256 : b)] :
      local.code_1080[0] == ","
        ? [for i, b in local.iter_1079.tape : (i == local.iter_1079.tape_ptr ? local.ascii_lookup[substr(local.input_1080, 0, 1)] : b)]
        : local.iter_1079.tape)

    tape_ptr = (
      local.code_1080[0] == "<"
        ? local.iter_1079.tape_ptr - local.code_1080[1] :
      local.code_1080[0] == ">"
        ? local.iter_1079.tape_ptr + local.code_1080[1]
        : local.iter_1079.tape_ptr)

    code_ptr = 2 + (
      local.code_1080[0] == "["
        ? local.iter_1079.tape[local.iter_1079.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1079.code_ptr)] : local.iter_1079.code_ptr :
      local.code_1080[0] == "]"
        ? local.iter_1079.tape[local.iter_1079.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1079.code_ptr)] : local.iter_1079.code_ptr
        : local.iter_1079.code_ptr)

    steps_taken = 1 + local.iter_1079.steps_taken
  }
}

locals {
  code_1081 = (try(local.iter_1080.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1080.code_ptr, local.iter_1080.code_ptr + 2)
    : [null])

  input_1081 = (local.code_1081[0] == ","
    ? substr(local.input_1080, local.code_1081[1], -1)
    : local.input_1080)

  iter_1081 = try(local.iter_1080.code_ptr >= length(var.code), true) ? local.iter_1080 : {
    output = (local.code_1081[0] == "."
      ? "${local.iter_1080.output}${join("", [for _ in range(local.code_1081[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1080.tape[local.iter_1080.tape_ptr]))])}"
      : local.iter_1080.output)
    
    tape = (
      local.code_1081[0] == "+"
        ? [for i, b in local.iter_1080.tape : (i == local.iter_1080.tape_ptr ? (b + local.code_1081[1]) % 256 : b)] :
      local.code_1081[0] == "-"
        ? [for i, b in local.iter_1080.tape : (i == local.iter_1080.tape_ptr ? (b - local.code_1081[1] + 256) % 256 : b)] :
      local.code_1081[0] == ","
        ? [for i, b in local.iter_1080.tape : (i == local.iter_1080.tape_ptr ? local.ascii_lookup[substr(local.input_1081, 0, 1)] : b)]
        : local.iter_1080.tape)

    tape_ptr = (
      local.code_1081[0] == "<"
        ? local.iter_1080.tape_ptr - local.code_1081[1] :
      local.code_1081[0] == ">"
        ? local.iter_1080.tape_ptr + local.code_1081[1]
        : local.iter_1080.tape_ptr)

    code_ptr = 2 + (
      local.code_1081[0] == "["
        ? local.iter_1080.tape[local.iter_1080.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1080.code_ptr)] : local.iter_1080.code_ptr :
      local.code_1081[0] == "]"
        ? local.iter_1080.tape[local.iter_1080.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1080.code_ptr)] : local.iter_1080.code_ptr
        : local.iter_1080.code_ptr)

    steps_taken = 1 + local.iter_1080.steps_taken
  }
}

locals {
  code_1082 = (try(local.iter_1081.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1081.code_ptr, local.iter_1081.code_ptr + 2)
    : [null])

  input_1082 = (local.code_1082[0] == ","
    ? substr(local.input_1081, local.code_1082[1], -1)
    : local.input_1081)

  iter_1082 = try(local.iter_1081.code_ptr >= length(var.code), true) ? local.iter_1081 : {
    output = (local.code_1082[0] == "."
      ? "${local.iter_1081.output}${join("", [for _ in range(local.code_1082[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1081.tape[local.iter_1081.tape_ptr]))])}"
      : local.iter_1081.output)
    
    tape = (
      local.code_1082[0] == "+"
        ? [for i, b in local.iter_1081.tape : (i == local.iter_1081.tape_ptr ? (b + local.code_1082[1]) % 256 : b)] :
      local.code_1082[0] == "-"
        ? [for i, b in local.iter_1081.tape : (i == local.iter_1081.tape_ptr ? (b - local.code_1082[1] + 256) % 256 : b)] :
      local.code_1082[0] == ","
        ? [for i, b in local.iter_1081.tape : (i == local.iter_1081.tape_ptr ? local.ascii_lookup[substr(local.input_1082, 0, 1)] : b)]
        : local.iter_1081.tape)

    tape_ptr = (
      local.code_1082[0] == "<"
        ? local.iter_1081.tape_ptr - local.code_1082[1] :
      local.code_1082[0] == ">"
        ? local.iter_1081.tape_ptr + local.code_1082[1]
        : local.iter_1081.tape_ptr)

    code_ptr = 2 + (
      local.code_1082[0] == "["
        ? local.iter_1081.tape[local.iter_1081.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1081.code_ptr)] : local.iter_1081.code_ptr :
      local.code_1082[0] == "]"
        ? local.iter_1081.tape[local.iter_1081.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1081.code_ptr)] : local.iter_1081.code_ptr
        : local.iter_1081.code_ptr)

    steps_taken = 1 + local.iter_1081.steps_taken
  }
}

locals {
  code_1083 = (try(local.iter_1082.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1082.code_ptr, local.iter_1082.code_ptr + 2)
    : [null])

  input_1083 = (local.code_1083[0] == ","
    ? substr(local.input_1082, local.code_1083[1], -1)
    : local.input_1082)

  iter_1083 = try(local.iter_1082.code_ptr >= length(var.code), true) ? local.iter_1082 : {
    output = (local.code_1083[0] == "."
      ? "${local.iter_1082.output}${join("", [for _ in range(local.code_1083[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1082.tape[local.iter_1082.tape_ptr]))])}"
      : local.iter_1082.output)
    
    tape = (
      local.code_1083[0] == "+"
        ? [for i, b in local.iter_1082.tape : (i == local.iter_1082.tape_ptr ? (b + local.code_1083[1]) % 256 : b)] :
      local.code_1083[0] == "-"
        ? [for i, b in local.iter_1082.tape : (i == local.iter_1082.tape_ptr ? (b - local.code_1083[1] + 256) % 256 : b)] :
      local.code_1083[0] == ","
        ? [for i, b in local.iter_1082.tape : (i == local.iter_1082.tape_ptr ? local.ascii_lookup[substr(local.input_1083, 0, 1)] : b)]
        : local.iter_1082.tape)

    tape_ptr = (
      local.code_1083[0] == "<"
        ? local.iter_1082.tape_ptr - local.code_1083[1] :
      local.code_1083[0] == ">"
        ? local.iter_1082.tape_ptr + local.code_1083[1]
        : local.iter_1082.tape_ptr)

    code_ptr = 2 + (
      local.code_1083[0] == "["
        ? local.iter_1082.tape[local.iter_1082.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1082.code_ptr)] : local.iter_1082.code_ptr :
      local.code_1083[0] == "]"
        ? local.iter_1082.tape[local.iter_1082.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1082.code_ptr)] : local.iter_1082.code_ptr
        : local.iter_1082.code_ptr)

    steps_taken = 1 + local.iter_1082.steps_taken
  }
}

locals {
  code_1084 = (try(local.iter_1083.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1083.code_ptr, local.iter_1083.code_ptr + 2)
    : [null])

  input_1084 = (local.code_1084[0] == ","
    ? substr(local.input_1083, local.code_1084[1], -1)
    : local.input_1083)

  iter_1084 = try(local.iter_1083.code_ptr >= length(var.code), true) ? local.iter_1083 : {
    output = (local.code_1084[0] == "."
      ? "${local.iter_1083.output}${join("", [for _ in range(local.code_1084[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1083.tape[local.iter_1083.tape_ptr]))])}"
      : local.iter_1083.output)
    
    tape = (
      local.code_1084[0] == "+"
        ? [for i, b in local.iter_1083.tape : (i == local.iter_1083.tape_ptr ? (b + local.code_1084[1]) % 256 : b)] :
      local.code_1084[0] == "-"
        ? [for i, b in local.iter_1083.tape : (i == local.iter_1083.tape_ptr ? (b - local.code_1084[1] + 256) % 256 : b)] :
      local.code_1084[0] == ","
        ? [for i, b in local.iter_1083.tape : (i == local.iter_1083.tape_ptr ? local.ascii_lookup[substr(local.input_1084, 0, 1)] : b)]
        : local.iter_1083.tape)

    tape_ptr = (
      local.code_1084[0] == "<"
        ? local.iter_1083.tape_ptr - local.code_1084[1] :
      local.code_1084[0] == ">"
        ? local.iter_1083.tape_ptr + local.code_1084[1]
        : local.iter_1083.tape_ptr)

    code_ptr = 2 + (
      local.code_1084[0] == "["
        ? local.iter_1083.tape[local.iter_1083.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1083.code_ptr)] : local.iter_1083.code_ptr :
      local.code_1084[0] == "]"
        ? local.iter_1083.tape[local.iter_1083.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1083.code_ptr)] : local.iter_1083.code_ptr
        : local.iter_1083.code_ptr)

    steps_taken = 1 + local.iter_1083.steps_taken
  }
}

locals {
  code_1085 = (try(local.iter_1084.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1084.code_ptr, local.iter_1084.code_ptr + 2)
    : [null])

  input_1085 = (local.code_1085[0] == ","
    ? substr(local.input_1084, local.code_1085[1], -1)
    : local.input_1084)

  iter_1085 = try(local.iter_1084.code_ptr >= length(var.code), true) ? local.iter_1084 : {
    output = (local.code_1085[0] == "."
      ? "${local.iter_1084.output}${join("", [for _ in range(local.code_1085[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1084.tape[local.iter_1084.tape_ptr]))])}"
      : local.iter_1084.output)
    
    tape = (
      local.code_1085[0] == "+"
        ? [for i, b in local.iter_1084.tape : (i == local.iter_1084.tape_ptr ? (b + local.code_1085[1]) % 256 : b)] :
      local.code_1085[0] == "-"
        ? [for i, b in local.iter_1084.tape : (i == local.iter_1084.tape_ptr ? (b - local.code_1085[1] + 256) % 256 : b)] :
      local.code_1085[0] == ","
        ? [for i, b in local.iter_1084.tape : (i == local.iter_1084.tape_ptr ? local.ascii_lookup[substr(local.input_1085, 0, 1)] : b)]
        : local.iter_1084.tape)

    tape_ptr = (
      local.code_1085[0] == "<"
        ? local.iter_1084.tape_ptr - local.code_1085[1] :
      local.code_1085[0] == ">"
        ? local.iter_1084.tape_ptr + local.code_1085[1]
        : local.iter_1084.tape_ptr)

    code_ptr = 2 + (
      local.code_1085[0] == "["
        ? local.iter_1084.tape[local.iter_1084.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1084.code_ptr)] : local.iter_1084.code_ptr :
      local.code_1085[0] == "]"
        ? local.iter_1084.tape[local.iter_1084.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1084.code_ptr)] : local.iter_1084.code_ptr
        : local.iter_1084.code_ptr)

    steps_taken = 1 + local.iter_1084.steps_taken
  }
}

locals {
  code_1086 = (try(local.iter_1085.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1085.code_ptr, local.iter_1085.code_ptr + 2)
    : [null])

  input_1086 = (local.code_1086[0] == ","
    ? substr(local.input_1085, local.code_1086[1], -1)
    : local.input_1085)

  iter_1086 = try(local.iter_1085.code_ptr >= length(var.code), true) ? local.iter_1085 : {
    output = (local.code_1086[0] == "."
      ? "${local.iter_1085.output}${join("", [for _ in range(local.code_1086[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1085.tape[local.iter_1085.tape_ptr]))])}"
      : local.iter_1085.output)
    
    tape = (
      local.code_1086[0] == "+"
        ? [for i, b in local.iter_1085.tape : (i == local.iter_1085.tape_ptr ? (b + local.code_1086[1]) % 256 : b)] :
      local.code_1086[0] == "-"
        ? [for i, b in local.iter_1085.tape : (i == local.iter_1085.tape_ptr ? (b - local.code_1086[1] + 256) % 256 : b)] :
      local.code_1086[0] == ","
        ? [for i, b in local.iter_1085.tape : (i == local.iter_1085.tape_ptr ? local.ascii_lookup[substr(local.input_1086, 0, 1)] : b)]
        : local.iter_1085.tape)

    tape_ptr = (
      local.code_1086[0] == "<"
        ? local.iter_1085.tape_ptr - local.code_1086[1] :
      local.code_1086[0] == ">"
        ? local.iter_1085.tape_ptr + local.code_1086[1]
        : local.iter_1085.tape_ptr)

    code_ptr = 2 + (
      local.code_1086[0] == "["
        ? local.iter_1085.tape[local.iter_1085.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1085.code_ptr)] : local.iter_1085.code_ptr :
      local.code_1086[0] == "]"
        ? local.iter_1085.tape[local.iter_1085.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1085.code_ptr)] : local.iter_1085.code_ptr
        : local.iter_1085.code_ptr)

    steps_taken = 1 + local.iter_1085.steps_taken
  }
}

locals {
  code_1087 = (try(local.iter_1086.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1086.code_ptr, local.iter_1086.code_ptr + 2)
    : [null])

  input_1087 = (local.code_1087[0] == ","
    ? substr(local.input_1086, local.code_1087[1], -1)
    : local.input_1086)

  iter_1087 = try(local.iter_1086.code_ptr >= length(var.code), true) ? local.iter_1086 : {
    output = (local.code_1087[0] == "."
      ? "${local.iter_1086.output}${join("", [for _ in range(local.code_1087[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1086.tape[local.iter_1086.tape_ptr]))])}"
      : local.iter_1086.output)
    
    tape = (
      local.code_1087[0] == "+"
        ? [for i, b in local.iter_1086.tape : (i == local.iter_1086.tape_ptr ? (b + local.code_1087[1]) % 256 : b)] :
      local.code_1087[0] == "-"
        ? [for i, b in local.iter_1086.tape : (i == local.iter_1086.tape_ptr ? (b - local.code_1087[1] + 256) % 256 : b)] :
      local.code_1087[0] == ","
        ? [for i, b in local.iter_1086.tape : (i == local.iter_1086.tape_ptr ? local.ascii_lookup[substr(local.input_1087, 0, 1)] : b)]
        : local.iter_1086.tape)

    tape_ptr = (
      local.code_1087[0] == "<"
        ? local.iter_1086.tape_ptr - local.code_1087[1] :
      local.code_1087[0] == ">"
        ? local.iter_1086.tape_ptr + local.code_1087[1]
        : local.iter_1086.tape_ptr)

    code_ptr = 2 + (
      local.code_1087[0] == "["
        ? local.iter_1086.tape[local.iter_1086.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1086.code_ptr)] : local.iter_1086.code_ptr :
      local.code_1087[0] == "]"
        ? local.iter_1086.tape[local.iter_1086.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1086.code_ptr)] : local.iter_1086.code_ptr
        : local.iter_1086.code_ptr)

    steps_taken = 1 + local.iter_1086.steps_taken
  }
}

locals {
  code_1088 = (try(local.iter_1087.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1087.code_ptr, local.iter_1087.code_ptr + 2)
    : [null])

  input_1088 = (local.code_1088[0] == ","
    ? substr(local.input_1087, local.code_1088[1], -1)
    : local.input_1087)

  iter_1088 = try(local.iter_1087.code_ptr >= length(var.code), true) ? local.iter_1087 : {
    output = (local.code_1088[0] == "."
      ? "${local.iter_1087.output}${join("", [for _ in range(local.code_1088[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1087.tape[local.iter_1087.tape_ptr]))])}"
      : local.iter_1087.output)
    
    tape = (
      local.code_1088[0] == "+"
        ? [for i, b in local.iter_1087.tape : (i == local.iter_1087.tape_ptr ? (b + local.code_1088[1]) % 256 : b)] :
      local.code_1088[0] == "-"
        ? [for i, b in local.iter_1087.tape : (i == local.iter_1087.tape_ptr ? (b - local.code_1088[1] + 256) % 256 : b)] :
      local.code_1088[0] == ","
        ? [for i, b in local.iter_1087.tape : (i == local.iter_1087.tape_ptr ? local.ascii_lookup[substr(local.input_1088, 0, 1)] : b)]
        : local.iter_1087.tape)

    tape_ptr = (
      local.code_1088[0] == "<"
        ? local.iter_1087.tape_ptr - local.code_1088[1] :
      local.code_1088[0] == ">"
        ? local.iter_1087.tape_ptr + local.code_1088[1]
        : local.iter_1087.tape_ptr)

    code_ptr = 2 + (
      local.code_1088[0] == "["
        ? local.iter_1087.tape[local.iter_1087.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1087.code_ptr)] : local.iter_1087.code_ptr :
      local.code_1088[0] == "]"
        ? local.iter_1087.tape[local.iter_1087.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1087.code_ptr)] : local.iter_1087.code_ptr
        : local.iter_1087.code_ptr)

    steps_taken = 1 + local.iter_1087.steps_taken
  }
}

locals {
  code_1089 = (try(local.iter_1088.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1088.code_ptr, local.iter_1088.code_ptr + 2)
    : [null])

  input_1089 = (local.code_1089[0] == ","
    ? substr(local.input_1088, local.code_1089[1], -1)
    : local.input_1088)

  iter_1089 = try(local.iter_1088.code_ptr >= length(var.code), true) ? local.iter_1088 : {
    output = (local.code_1089[0] == "."
      ? "${local.iter_1088.output}${join("", [for _ in range(local.code_1089[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1088.tape[local.iter_1088.tape_ptr]))])}"
      : local.iter_1088.output)
    
    tape = (
      local.code_1089[0] == "+"
        ? [for i, b in local.iter_1088.tape : (i == local.iter_1088.tape_ptr ? (b + local.code_1089[1]) % 256 : b)] :
      local.code_1089[0] == "-"
        ? [for i, b in local.iter_1088.tape : (i == local.iter_1088.tape_ptr ? (b - local.code_1089[1] + 256) % 256 : b)] :
      local.code_1089[0] == ","
        ? [for i, b in local.iter_1088.tape : (i == local.iter_1088.tape_ptr ? local.ascii_lookup[substr(local.input_1089, 0, 1)] : b)]
        : local.iter_1088.tape)

    tape_ptr = (
      local.code_1089[0] == "<"
        ? local.iter_1088.tape_ptr - local.code_1089[1] :
      local.code_1089[0] == ">"
        ? local.iter_1088.tape_ptr + local.code_1089[1]
        : local.iter_1088.tape_ptr)

    code_ptr = 2 + (
      local.code_1089[0] == "["
        ? local.iter_1088.tape[local.iter_1088.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1088.code_ptr)] : local.iter_1088.code_ptr :
      local.code_1089[0] == "]"
        ? local.iter_1088.tape[local.iter_1088.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1088.code_ptr)] : local.iter_1088.code_ptr
        : local.iter_1088.code_ptr)

    steps_taken = 1 + local.iter_1088.steps_taken
  }
}

locals {
  code_1090 = (try(local.iter_1089.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1089.code_ptr, local.iter_1089.code_ptr + 2)
    : [null])

  input_1090 = (local.code_1090[0] == ","
    ? substr(local.input_1089, local.code_1090[1], -1)
    : local.input_1089)

  iter_1090 = try(local.iter_1089.code_ptr >= length(var.code), true) ? local.iter_1089 : {
    output = (local.code_1090[0] == "."
      ? "${local.iter_1089.output}${join("", [for _ in range(local.code_1090[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1089.tape[local.iter_1089.tape_ptr]))])}"
      : local.iter_1089.output)
    
    tape = (
      local.code_1090[0] == "+"
        ? [for i, b in local.iter_1089.tape : (i == local.iter_1089.tape_ptr ? (b + local.code_1090[1]) % 256 : b)] :
      local.code_1090[0] == "-"
        ? [for i, b in local.iter_1089.tape : (i == local.iter_1089.tape_ptr ? (b - local.code_1090[1] + 256) % 256 : b)] :
      local.code_1090[0] == ","
        ? [for i, b in local.iter_1089.tape : (i == local.iter_1089.tape_ptr ? local.ascii_lookup[substr(local.input_1090, 0, 1)] : b)]
        : local.iter_1089.tape)

    tape_ptr = (
      local.code_1090[0] == "<"
        ? local.iter_1089.tape_ptr - local.code_1090[1] :
      local.code_1090[0] == ">"
        ? local.iter_1089.tape_ptr + local.code_1090[1]
        : local.iter_1089.tape_ptr)

    code_ptr = 2 + (
      local.code_1090[0] == "["
        ? local.iter_1089.tape[local.iter_1089.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1089.code_ptr)] : local.iter_1089.code_ptr :
      local.code_1090[0] == "]"
        ? local.iter_1089.tape[local.iter_1089.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1089.code_ptr)] : local.iter_1089.code_ptr
        : local.iter_1089.code_ptr)

    steps_taken = 1 + local.iter_1089.steps_taken
  }
}

locals {
  code_1091 = (try(local.iter_1090.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1090.code_ptr, local.iter_1090.code_ptr + 2)
    : [null])

  input_1091 = (local.code_1091[0] == ","
    ? substr(local.input_1090, local.code_1091[1], -1)
    : local.input_1090)

  iter_1091 = try(local.iter_1090.code_ptr >= length(var.code), true) ? local.iter_1090 : {
    output = (local.code_1091[0] == "."
      ? "${local.iter_1090.output}${join("", [for _ in range(local.code_1091[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1090.tape[local.iter_1090.tape_ptr]))])}"
      : local.iter_1090.output)
    
    tape = (
      local.code_1091[0] == "+"
        ? [for i, b in local.iter_1090.tape : (i == local.iter_1090.tape_ptr ? (b + local.code_1091[1]) % 256 : b)] :
      local.code_1091[0] == "-"
        ? [for i, b in local.iter_1090.tape : (i == local.iter_1090.tape_ptr ? (b - local.code_1091[1] + 256) % 256 : b)] :
      local.code_1091[0] == ","
        ? [for i, b in local.iter_1090.tape : (i == local.iter_1090.tape_ptr ? local.ascii_lookup[substr(local.input_1091, 0, 1)] : b)]
        : local.iter_1090.tape)

    tape_ptr = (
      local.code_1091[0] == "<"
        ? local.iter_1090.tape_ptr - local.code_1091[1] :
      local.code_1091[0] == ">"
        ? local.iter_1090.tape_ptr + local.code_1091[1]
        : local.iter_1090.tape_ptr)

    code_ptr = 2 + (
      local.code_1091[0] == "["
        ? local.iter_1090.tape[local.iter_1090.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1090.code_ptr)] : local.iter_1090.code_ptr :
      local.code_1091[0] == "]"
        ? local.iter_1090.tape[local.iter_1090.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1090.code_ptr)] : local.iter_1090.code_ptr
        : local.iter_1090.code_ptr)

    steps_taken = 1 + local.iter_1090.steps_taken
  }
}

locals {
  code_1092 = (try(local.iter_1091.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1091.code_ptr, local.iter_1091.code_ptr + 2)
    : [null])

  input_1092 = (local.code_1092[0] == ","
    ? substr(local.input_1091, local.code_1092[1], -1)
    : local.input_1091)

  iter_1092 = try(local.iter_1091.code_ptr >= length(var.code), true) ? local.iter_1091 : {
    output = (local.code_1092[0] == "."
      ? "${local.iter_1091.output}${join("", [for _ in range(local.code_1092[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1091.tape[local.iter_1091.tape_ptr]))])}"
      : local.iter_1091.output)
    
    tape = (
      local.code_1092[0] == "+"
        ? [for i, b in local.iter_1091.tape : (i == local.iter_1091.tape_ptr ? (b + local.code_1092[1]) % 256 : b)] :
      local.code_1092[0] == "-"
        ? [for i, b in local.iter_1091.tape : (i == local.iter_1091.tape_ptr ? (b - local.code_1092[1] + 256) % 256 : b)] :
      local.code_1092[0] == ","
        ? [for i, b in local.iter_1091.tape : (i == local.iter_1091.tape_ptr ? local.ascii_lookup[substr(local.input_1092, 0, 1)] : b)]
        : local.iter_1091.tape)

    tape_ptr = (
      local.code_1092[0] == "<"
        ? local.iter_1091.tape_ptr - local.code_1092[1] :
      local.code_1092[0] == ">"
        ? local.iter_1091.tape_ptr + local.code_1092[1]
        : local.iter_1091.tape_ptr)

    code_ptr = 2 + (
      local.code_1092[0] == "["
        ? local.iter_1091.tape[local.iter_1091.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1091.code_ptr)] : local.iter_1091.code_ptr :
      local.code_1092[0] == "]"
        ? local.iter_1091.tape[local.iter_1091.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1091.code_ptr)] : local.iter_1091.code_ptr
        : local.iter_1091.code_ptr)

    steps_taken = 1 + local.iter_1091.steps_taken
  }
}

locals {
  code_1093 = (try(local.iter_1092.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1092.code_ptr, local.iter_1092.code_ptr + 2)
    : [null])

  input_1093 = (local.code_1093[0] == ","
    ? substr(local.input_1092, local.code_1093[1], -1)
    : local.input_1092)

  iter_1093 = try(local.iter_1092.code_ptr >= length(var.code), true) ? local.iter_1092 : {
    output = (local.code_1093[0] == "."
      ? "${local.iter_1092.output}${join("", [for _ in range(local.code_1093[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1092.tape[local.iter_1092.tape_ptr]))])}"
      : local.iter_1092.output)
    
    tape = (
      local.code_1093[0] == "+"
        ? [for i, b in local.iter_1092.tape : (i == local.iter_1092.tape_ptr ? (b + local.code_1093[1]) % 256 : b)] :
      local.code_1093[0] == "-"
        ? [for i, b in local.iter_1092.tape : (i == local.iter_1092.tape_ptr ? (b - local.code_1093[1] + 256) % 256 : b)] :
      local.code_1093[0] == ","
        ? [for i, b in local.iter_1092.tape : (i == local.iter_1092.tape_ptr ? local.ascii_lookup[substr(local.input_1093, 0, 1)] : b)]
        : local.iter_1092.tape)

    tape_ptr = (
      local.code_1093[0] == "<"
        ? local.iter_1092.tape_ptr - local.code_1093[1] :
      local.code_1093[0] == ">"
        ? local.iter_1092.tape_ptr + local.code_1093[1]
        : local.iter_1092.tape_ptr)

    code_ptr = 2 + (
      local.code_1093[0] == "["
        ? local.iter_1092.tape[local.iter_1092.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1092.code_ptr)] : local.iter_1092.code_ptr :
      local.code_1093[0] == "]"
        ? local.iter_1092.tape[local.iter_1092.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1092.code_ptr)] : local.iter_1092.code_ptr
        : local.iter_1092.code_ptr)

    steps_taken = 1 + local.iter_1092.steps_taken
  }
}

locals {
  code_1094 = (try(local.iter_1093.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1093.code_ptr, local.iter_1093.code_ptr + 2)
    : [null])

  input_1094 = (local.code_1094[0] == ","
    ? substr(local.input_1093, local.code_1094[1], -1)
    : local.input_1093)

  iter_1094 = try(local.iter_1093.code_ptr >= length(var.code), true) ? local.iter_1093 : {
    output = (local.code_1094[0] == "."
      ? "${local.iter_1093.output}${join("", [for _ in range(local.code_1094[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1093.tape[local.iter_1093.tape_ptr]))])}"
      : local.iter_1093.output)
    
    tape = (
      local.code_1094[0] == "+"
        ? [for i, b in local.iter_1093.tape : (i == local.iter_1093.tape_ptr ? (b + local.code_1094[1]) % 256 : b)] :
      local.code_1094[0] == "-"
        ? [for i, b in local.iter_1093.tape : (i == local.iter_1093.tape_ptr ? (b - local.code_1094[1] + 256) % 256 : b)] :
      local.code_1094[0] == ","
        ? [for i, b in local.iter_1093.tape : (i == local.iter_1093.tape_ptr ? local.ascii_lookup[substr(local.input_1094, 0, 1)] : b)]
        : local.iter_1093.tape)

    tape_ptr = (
      local.code_1094[0] == "<"
        ? local.iter_1093.tape_ptr - local.code_1094[1] :
      local.code_1094[0] == ">"
        ? local.iter_1093.tape_ptr + local.code_1094[1]
        : local.iter_1093.tape_ptr)

    code_ptr = 2 + (
      local.code_1094[0] == "["
        ? local.iter_1093.tape[local.iter_1093.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1093.code_ptr)] : local.iter_1093.code_ptr :
      local.code_1094[0] == "]"
        ? local.iter_1093.tape[local.iter_1093.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1093.code_ptr)] : local.iter_1093.code_ptr
        : local.iter_1093.code_ptr)

    steps_taken = 1 + local.iter_1093.steps_taken
  }
}

locals {
  code_1095 = (try(local.iter_1094.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1094.code_ptr, local.iter_1094.code_ptr + 2)
    : [null])

  input_1095 = (local.code_1095[0] == ","
    ? substr(local.input_1094, local.code_1095[1], -1)
    : local.input_1094)

  iter_1095 = try(local.iter_1094.code_ptr >= length(var.code), true) ? local.iter_1094 : {
    output = (local.code_1095[0] == "."
      ? "${local.iter_1094.output}${join("", [for _ in range(local.code_1095[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1094.tape[local.iter_1094.tape_ptr]))])}"
      : local.iter_1094.output)
    
    tape = (
      local.code_1095[0] == "+"
        ? [for i, b in local.iter_1094.tape : (i == local.iter_1094.tape_ptr ? (b + local.code_1095[1]) % 256 : b)] :
      local.code_1095[0] == "-"
        ? [for i, b in local.iter_1094.tape : (i == local.iter_1094.tape_ptr ? (b - local.code_1095[1] + 256) % 256 : b)] :
      local.code_1095[0] == ","
        ? [for i, b in local.iter_1094.tape : (i == local.iter_1094.tape_ptr ? local.ascii_lookup[substr(local.input_1095, 0, 1)] : b)]
        : local.iter_1094.tape)

    tape_ptr = (
      local.code_1095[0] == "<"
        ? local.iter_1094.tape_ptr - local.code_1095[1] :
      local.code_1095[0] == ">"
        ? local.iter_1094.tape_ptr + local.code_1095[1]
        : local.iter_1094.tape_ptr)

    code_ptr = 2 + (
      local.code_1095[0] == "["
        ? local.iter_1094.tape[local.iter_1094.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1094.code_ptr)] : local.iter_1094.code_ptr :
      local.code_1095[0] == "]"
        ? local.iter_1094.tape[local.iter_1094.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1094.code_ptr)] : local.iter_1094.code_ptr
        : local.iter_1094.code_ptr)

    steps_taken = 1 + local.iter_1094.steps_taken
  }
}

locals {
  code_1096 = (try(local.iter_1095.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1095.code_ptr, local.iter_1095.code_ptr + 2)
    : [null])

  input_1096 = (local.code_1096[0] == ","
    ? substr(local.input_1095, local.code_1096[1], -1)
    : local.input_1095)

  iter_1096 = try(local.iter_1095.code_ptr >= length(var.code), true) ? local.iter_1095 : {
    output = (local.code_1096[0] == "."
      ? "${local.iter_1095.output}${join("", [for _ in range(local.code_1096[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1095.tape[local.iter_1095.tape_ptr]))])}"
      : local.iter_1095.output)
    
    tape = (
      local.code_1096[0] == "+"
        ? [for i, b in local.iter_1095.tape : (i == local.iter_1095.tape_ptr ? (b + local.code_1096[1]) % 256 : b)] :
      local.code_1096[0] == "-"
        ? [for i, b in local.iter_1095.tape : (i == local.iter_1095.tape_ptr ? (b - local.code_1096[1] + 256) % 256 : b)] :
      local.code_1096[0] == ","
        ? [for i, b in local.iter_1095.tape : (i == local.iter_1095.tape_ptr ? local.ascii_lookup[substr(local.input_1096, 0, 1)] : b)]
        : local.iter_1095.tape)

    tape_ptr = (
      local.code_1096[0] == "<"
        ? local.iter_1095.tape_ptr - local.code_1096[1] :
      local.code_1096[0] == ">"
        ? local.iter_1095.tape_ptr + local.code_1096[1]
        : local.iter_1095.tape_ptr)

    code_ptr = 2 + (
      local.code_1096[0] == "["
        ? local.iter_1095.tape[local.iter_1095.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1095.code_ptr)] : local.iter_1095.code_ptr :
      local.code_1096[0] == "]"
        ? local.iter_1095.tape[local.iter_1095.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1095.code_ptr)] : local.iter_1095.code_ptr
        : local.iter_1095.code_ptr)

    steps_taken = 1 + local.iter_1095.steps_taken
  }
}

locals {
  code_1097 = (try(local.iter_1096.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1096.code_ptr, local.iter_1096.code_ptr + 2)
    : [null])

  input_1097 = (local.code_1097[0] == ","
    ? substr(local.input_1096, local.code_1097[1], -1)
    : local.input_1096)

  iter_1097 = try(local.iter_1096.code_ptr >= length(var.code), true) ? local.iter_1096 : {
    output = (local.code_1097[0] == "."
      ? "${local.iter_1096.output}${join("", [for _ in range(local.code_1097[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1096.tape[local.iter_1096.tape_ptr]))])}"
      : local.iter_1096.output)
    
    tape = (
      local.code_1097[0] == "+"
        ? [for i, b in local.iter_1096.tape : (i == local.iter_1096.tape_ptr ? (b + local.code_1097[1]) % 256 : b)] :
      local.code_1097[0] == "-"
        ? [for i, b in local.iter_1096.tape : (i == local.iter_1096.tape_ptr ? (b - local.code_1097[1] + 256) % 256 : b)] :
      local.code_1097[0] == ","
        ? [for i, b in local.iter_1096.tape : (i == local.iter_1096.tape_ptr ? local.ascii_lookup[substr(local.input_1097, 0, 1)] : b)]
        : local.iter_1096.tape)

    tape_ptr = (
      local.code_1097[0] == "<"
        ? local.iter_1096.tape_ptr - local.code_1097[1] :
      local.code_1097[0] == ">"
        ? local.iter_1096.tape_ptr + local.code_1097[1]
        : local.iter_1096.tape_ptr)

    code_ptr = 2 + (
      local.code_1097[0] == "["
        ? local.iter_1096.tape[local.iter_1096.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1096.code_ptr)] : local.iter_1096.code_ptr :
      local.code_1097[0] == "]"
        ? local.iter_1096.tape[local.iter_1096.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1096.code_ptr)] : local.iter_1096.code_ptr
        : local.iter_1096.code_ptr)

    steps_taken = 1 + local.iter_1096.steps_taken
  }
}

locals {
  code_1098 = (try(local.iter_1097.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1097.code_ptr, local.iter_1097.code_ptr + 2)
    : [null])

  input_1098 = (local.code_1098[0] == ","
    ? substr(local.input_1097, local.code_1098[1], -1)
    : local.input_1097)

  iter_1098 = try(local.iter_1097.code_ptr >= length(var.code), true) ? local.iter_1097 : {
    output = (local.code_1098[0] == "."
      ? "${local.iter_1097.output}${join("", [for _ in range(local.code_1098[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1097.tape[local.iter_1097.tape_ptr]))])}"
      : local.iter_1097.output)
    
    tape = (
      local.code_1098[0] == "+"
        ? [for i, b in local.iter_1097.tape : (i == local.iter_1097.tape_ptr ? (b + local.code_1098[1]) % 256 : b)] :
      local.code_1098[0] == "-"
        ? [for i, b in local.iter_1097.tape : (i == local.iter_1097.tape_ptr ? (b - local.code_1098[1] + 256) % 256 : b)] :
      local.code_1098[0] == ","
        ? [for i, b in local.iter_1097.tape : (i == local.iter_1097.tape_ptr ? local.ascii_lookup[substr(local.input_1098, 0, 1)] : b)]
        : local.iter_1097.tape)

    tape_ptr = (
      local.code_1098[0] == "<"
        ? local.iter_1097.tape_ptr - local.code_1098[1] :
      local.code_1098[0] == ">"
        ? local.iter_1097.tape_ptr + local.code_1098[1]
        : local.iter_1097.tape_ptr)

    code_ptr = 2 + (
      local.code_1098[0] == "["
        ? local.iter_1097.tape[local.iter_1097.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1097.code_ptr)] : local.iter_1097.code_ptr :
      local.code_1098[0] == "]"
        ? local.iter_1097.tape[local.iter_1097.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1097.code_ptr)] : local.iter_1097.code_ptr
        : local.iter_1097.code_ptr)

    steps_taken = 1 + local.iter_1097.steps_taken
  }
}

locals {
  code_1099 = (try(local.iter_1098.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1098.code_ptr, local.iter_1098.code_ptr + 2)
    : [null])

  input_1099 = (local.code_1099[0] == ","
    ? substr(local.input_1098, local.code_1099[1], -1)
    : local.input_1098)

  iter_1099 = try(local.iter_1098.code_ptr >= length(var.code), true) ? local.iter_1098 : {
    output = (local.code_1099[0] == "."
      ? "${local.iter_1098.output}${join("", [for _ in range(local.code_1099[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1098.tape[local.iter_1098.tape_ptr]))])}"
      : local.iter_1098.output)
    
    tape = (
      local.code_1099[0] == "+"
        ? [for i, b in local.iter_1098.tape : (i == local.iter_1098.tape_ptr ? (b + local.code_1099[1]) % 256 : b)] :
      local.code_1099[0] == "-"
        ? [for i, b in local.iter_1098.tape : (i == local.iter_1098.tape_ptr ? (b - local.code_1099[1] + 256) % 256 : b)] :
      local.code_1099[0] == ","
        ? [for i, b in local.iter_1098.tape : (i == local.iter_1098.tape_ptr ? local.ascii_lookup[substr(local.input_1099, 0, 1)] : b)]
        : local.iter_1098.tape)

    tape_ptr = (
      local.code_1099[0] == "<"
        ? local.iter_1098.tape_ptr - local.code_1099[1] :
      local.code_1099[0] == ">"
        ? local.iter_1098.tape_ptr + local.code_1099[1]
        : local.iter_1098.tape_ptr)

    code_ptr = 2 + (
      local.code_1099[0] == "["
        ? local.iter_1098.tape[local.iter_1098.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1098.code_ptr)] : local.iter_1098.code_ptr :
      local.code_1099[0] == "]"
        ? local.iter_1098.tape[local.iter_1098.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1098.code_ptr)] : local.iter_1098.code_ptr
        : local.iter_1098.code_ptr)

    steps_taken = 1 + local.iter_1098.steps_taken
  }
}

locals {
  code_1100 = (try(local.iter_1099.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1099.code_ptr, local.iter_1099.code_ptr + 2)
    : [null])

  input_1100 = (local.code_1100[0] == ","
    ? substr(local.input_1099, local.code_1100[1], -1)
    : local.input_1099)

  iter_1100 = try(local.iter_1099.code_ptr >= length(var.code), true) ? local.iter_1099 : {
    output = (local.code_1100[0] == "."
      ? "${local.iter_1099.output}${join("", [for _ in range(local.code_1100[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1099.tape[local.iter_1099.tape_ptr]))])}"
      : local.iter_1099.output)
    
    tape = (
      local.code_1100[0] == "+"
        ? [for i, b in local.iter_1099.tape : (i == local.iter_1099.tape_ptr ? (b + local.code_1100[1]) % 256 : b)] :
      local.code_1100[0] == "-"
        ? [for i, b in local.iter_1099.tape : (i == local.iter_1099.tape_ptr ? (b - local.code_1100[1] + 256) % 256 : b)] :
      local.code_1100[0] == ","
        ? [for i, b in local.iter_1099.tape : (i == local.iter_1099.tape_ptr ? local.ascii_lookup[substr(local.input_1100, 0, 1)] : b)]
        : local.iter_1099.tape)

    tape_ptr = (
      local.code_1100[0] == "<"
        ? local.iter_1099.tape_ptr - local.code_1100[1] :
      local.code_1100[0] == ">"
        ? local.iter_1099.tape_ptr + local.code_1100[1]
        : local.iter_1099.tape_ptr)

    code_ptr = 2 + (
      local.code_1100[0] == "["
        ? local.iter_1099.tape[local.iter_1099.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1099.code_ptr)] : local.iter_1099.code_ptr :
      local.code_1100[0] == "]"
        ? local.iter_1099.tape[local.iter_1099.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1099.code_ptr)] : local.iter_1099.code_ptr
        : local.iter_1099.code_ptr)

    steps_taken = 1 + local.iter_1099.steps_taken
  }
}

locals {
  code_1101 = (try(local.iter_1100.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1100.code_ptr, local.iter_1100.code_ptr + 2)
    : [null])

  input_1101 = (local.code_1101[0] == ","
    ? substr(local.input_1100, local.code_1101[1], -1)
    : local.input_1100)

  iter_1101 = try(local.iter_1100.code_ptr >= length(var.code), true) ? local.iter_1100 : {
    output = (local.code_1101[0] == "."
      ? "${local.iter_1100.output}${join("", [for _ in range(local.code_1101[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1100.tape[local.iter_1100.tape_ptr]))])}"
      : local.iter_1100.output)
    
    tape = (
      local.code_1101[0] == "+"
        ? [for i, b in local.iter_1100.tape : (i == local.iter_1100.tape_ptr ? (b + local.code_1101[1]) % 256 : b)] :
      local.code_1101[0] == "-"
        ? [for i, b in local.iter_1100.tape : (i == local.iter_1100.tape_ptr ? (b - local.code_1101[1] + 256) % 256 : b)] :
      local.code_1101[0] == ","
        ? [for i, b in local.iter_1100.tape : (i == local.iter_1100.tape_ptr ? local.ascii_lookup[substr(local.input_1101, 0, 1)] : b)]
        : local.iter_1100.tape)

    tape_ptr = (
      local.code_1101[0] == "<"
        ? local.iter_1100.tape_ptr - local.code_1101[1] :
      local.code_1101[0] == ">"
        ? local.iter_1100.tape_ptr + local.code_1101[1]
        : local.iter_1100.tape_ptr)

    code_ptr = 2 + (
      local.code_1101[0] == "["
        ? local.iter_1100.tape[local.iter_1100.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1100.code_ptr)] : local.iter_1100.code_ptr :
      local.code_1101[0] == "]"
        ? local.iter_1100.tape[local.iter_1100.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1100.code_ptr)] : local.iter_1100.code_ptr
        : local.iter_1100.code_ptr)

    steps_taken = 1 + local.iter_1100.steps_taken
  }
}

locals {
  code_1102 = (try(local.iter_1101.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1101.code_ptr, local.iter_1101.code_ptr + 2)
    : [null])

  input_1102 = (local.code_1102[0] == ","
    ? substr(local.input_1101, local.code_1102[1], -1)
    : local.input_1101)

  iter_1102 = try(local.iter_1101.code_ptr >= length(var.code), true) ? local.iter_1101 : {
    output = (local.code_1102[0] == "."
      ? "${local.iter_1101.output}${join("", [for _ in range(local.code_1102[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1101.tape[local.iter_1101.tape_ptr]))])}"
      : local.iter_1101.output)
    
    tape = (
      local.code_1102[0] == "+"
        ? [for i, b in local.iter_1101.tape : (i == local.iter_1101.tape_ptr ? (b + local.code_1102[1]) % 256 : b)] :
      local.code_1102[0] == "-"
        ? [for i, b in local.iter_1101.tape : (i == local.iter_1101.tape_ptr ? (b - local.code_1102[1] + 256) % 256 : b)] :
      local.code_1102[0] == ","
        ? [for i, b in local.iter_1101.tape : (i == local.iter_1101.tape_ptr ? local.ascii_lookup[substr(local.input_1102, 0, 1)] : b)]
        : local.iter_1101.tape)

    tape_ptr = (
      local.code_1102[0] == "<"
        ? local.iter_1101.tape_ptr - local.code_1102[1] :
      local.code_1102[0] == ">"
        ? local.iter_1101.tape_ptr + local.code_1102[1]
        : local.iter_1101.tape_ptr)

    code_ptr = 2 + (
      local.code_1102[0] == "["
        ? local.iter_1101.tape[local.iter_1101.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1101.code_ptr)] : local.iter_1101.code_ptr :
      local.code_1102[0] == "]"
        ? local.iter_1101.tape[local.iter_1101.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1101.code_ptr)] : local.iter_1101.code_ptr
        : local.iter_1101.code_ptr)

    steps_taken = 1 + local.iter_1101.steps_taken
  }
}

locals {
  code_1103 = (try(local.iter_1102.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1102.code_ptr, local.iter_1102.code_ptr + 2)
    : [null])

  input_1103 = (local.code_1103[0] == ","
    ? substr(local.input_1102, local.code_1103[1], -1)
    : local.input_1102)

  iter_1103 = try(local.iter_1102.code_ptr >= length(var.code), true) ? local.iter_1102 : {
    output = (local.code_1103[0] == "."
      ? "${local.iter_1102.output}${join("", [for _ in range(local.code_1103[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1102.tape[local.iter_1102.tape_ptr]))])}"
      : local.iter_1102.output)
    
    tape = (
      local.code_1103[0] == "+"
        ? [for i, b in local.iter_1102.tape : (i == local.iter_1102.tape_ptr ? (b + local.code_1103[1]) % 256 : b)] :
      local.code_1103[0] == "-"
        ? [for i, b in local.iter_1102.tape : (i == local.iter_1102.tape_ptr ? (b - local.code_1103[1] + 256) % 256 : b)] :
      local.code_1103[0] == ","
        ? [for i, b in local.iter_1102.tape : (i == local.iter_1102.tape_ptr ? local.ascii_lookup[substr(local.input_1103, 0, 1)] : b)]
        : local.iter_1102.tape)

    tape_ptr = (
      local.code_1103[0] == "<"
        ? local.iter_1102.tape_ptr - local.code_1103[1] :
      local.code_1103[0] == ">"
        ? local.iter_1102.tape_ptr + local.code_1103[1]
        : local.iter_1102.tape_ptr)

    code_ptr = 2 + (
      local.code_1103[0] == "["
        ? local.iter_1102.tape[local.iter_1102.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1102.code_ptr)] : local.iter_1102.code_ptr :
      local.code_1103[0] == "]"
        ? local.iter_1102.tape[local.iter_1102.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1102.code_ptr)] : local.iter_1102.code_ptr
        : local.iter_1102.code_ptr)

    steps_taken = 1 + local.iter_1102.steps_taken
  }
}

locals {
  code_1104 = (try(local.iter_1103.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1103.code_ptr, local.iter_1103.code_ptr + 2)
    : [null])

  input_1104 = (local.code_1104[0] == ","
    ? substr(local.input_1103, local.code_1104[1], -1)
    : local.input_1103)

  iter_1104 = try(local.iter_1103.code_ptr >= length(var.code), true) ? local.iter_1103 : {
    output = (local.code_1104[0] == "."
      ? "${local.iter_1103.output}${join("", [for _ in range(local.code_1104[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1103.tape[local.iter_1103.tape_ptr]))])}"
      : local.iter_1103.output)
    
    tape = (
      local.code_1104[0] == "+"
        ? [for i, b in local.iter_1103.tape : (i == local.iter_1103.tape_ptr ? (b + local.code_1104[1]) % 256 : b)] :
      local.code_1104[0] == "-"
        ? [for i, b in local.iter_1103.tape : (i == local.iter_1103.tape_ptr ? (b - local.code_1104[1] + 256) % 256 : b)] :
      local.code_1104[0] == ","
        ? [for i, b in local.iter_1103.tape : (i == local.iter_1103.tape_ptr ? local.ascii_lookup[substr(local.input_1104, 0, 1)] : b)]
        : local.iter_1103.tape)

    tape_ptr = (
      local.code_1104[0] == "<"
        ? local.iter_1103.tape_ptr - local.code_1104[1] :
      local.code_1104[0] == ">"
        ? local.iter_1103.tape_ptr + local.code_1104[1]
        : local.iter_1103.tape_ptr)

    code_ptr = 2 + (
      local.code_1104[0] == "["
        ? local.iter_1103.tape[local.iter_1103.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1103.code_ptr)] : local.iter_1103.code_ptr :
      local.code_1104[0] == "]"
        ? local.iter_1103.tape[local.iter_1103.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1103.code_ptr)] : local.iter_1103.code_ptr
        : local.iter_1103.code_ptr)

    steps_taken = 1 + local.iter_1103.steps_taken
  }
}

locals {
  code_1105 = (try(local.iter_1104.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1104.code_ptr, local.iter_1104.code_ptr + 2)
    : [null])

  input_1105 = (local.code_1105[0] == ","
    ? substr(local.input_1104, local.code_1105[1], -1)
    : local.input_1104)

  iter_1105 = try(local.iter_1104.code_ptr >= length(var.code), true) ? local.iter_1104 : {
    output = (local.code_1105[0] == "."
      ? "${local.iter_1104.output}${join("", [for _ in range(local.code_1105[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1104.tape[local.iter_1104.tape_ptr]))])}"
      : local.iter_1104.output)
    
    tape = (
      local.code_1105[0] == "+"
        ? [for i, b in local.iter_1104.tape : (i == local.iter_1104.tape_ptr ? (b + local.code_1105[1]) % 256 : b)] :
      local.code_1105[0] == "-"
        ? [for i, b in local.iter_1104.tape : (i == local.iter_1104.tape_ptr ? (b - local.code_1105[1] + 256) % 256 : b)] :
      local.code_1105[0] == ","
        ? [for i, b in local.iter_1104.tape : (i == local.iter_1104.tape_ptr ? local.ascii_lookup[substr(local.input_1105, 0, 1)] : b)]
        : local.iter_1104.tape)

    tape_ptr = (
      local.code_1105[0] == "<"
        ? local.iter_1104.tape_ptr - local.code_1105[1] :
      local.code_1105[0] == ">"
        ? local.iter_1104.tape_ptr + local.code_1105[1]
        : local.iter_1104.tape_ptr)

    code_ptr = 2 + (
      local.code_1105[0] == "["
        ? local.iter_1104.tape[local.iter_1104.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1104.code_ptr)] : local.iter_1104.code_ptr :
      local.code_1105[0] == "]"
        ? local.iter_1104.tape[local.iter_1104.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1104.code_ptr)] : local.iter_1104.code_ptr
        : local.iter_1104.code_ptr)

    steps_taken = 1 + local.iter_1104.steps_taken
  }
}

locals {
  code_1106 = (try(local.iter_1105.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1105.code_ptr, local.iter_1105.code_ptr + 2)
    : [null])

  input_1106 = (local.code_1106[0] == ","
    ? substr(local.input_1105, local.code_1106[1], -1)
    : local.input_1105)

  iter_1106 = try(local.iter_1105.code_ptr >= length(var.code), true) ? local.iter_1105 : {
    output = (local.code_1106[0] == "."
      ? "${local.iter_1105.output}${join("", [for _ in range(local.code_1106[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1105.tape[local.iter_1105.tape_ptr]))])}"
      : local.iter_1105.output)
    
    tape = (
      local.code_1106[0] == "+"
        ? [for i, b in local.iter_1105.tape : (i == local.iter_1105.tape_ptr ? (b + local.code_1106[1]) % 256 : b)] :
      local.code_1106[0] == "-"
        ? [for i, b in local.iter_1105.tape : (i == local.iter_1105.tape_ptr ? (b - local.code_1106[1] + 256) % 256 : b)] :
      local.code_1106[0] == ","
        ? [for i, b in local.iter_1105.tape : (i == local.iter_1105.tape_ptr ? local.ascii_lookup[substr(local.input_1106, 0, 1)] : b)]
        : local.iter_1105.tape)

    tape_ptr = (
      local.code_1106[0] == "<"
        ? local.iter_1105.tape_ptr - local.code_1106[1] :
      local.code_1106[0] == ">"
        ? local.iter_1105.tape_ptr + local.code_1106[1]
        : local.iter_1105.tape_ptr)

    code_ptr = 2 + (
      local.code_1106[0] == "["
        ? local.iter_1105.tape[local.iter_1105.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1105.code_ptr)] : local.iter_1105.code_ptr :
      local.code_1106[0] == "]"
        ? local.iter_1105.tape[local.iter_1105.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1105.code_ptr)] : local.iter_1105.code_ptr
        : local.iter_1105.code_ptr)

    steps_taken = 1 + local.iter_1105.steps_taken
  }
}

locals {
  code_1107 = (try(local.iter_1106.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1106.code_ptr, local.iter_1106.code_ptr + 2)
    : [null])

  input_1107 = (local.code_1107[0] == ","
    ? substr(local.input_1106, local.code_1107[1], -1)
    : local.input_1106)

  iter_1107 = try(local.iter_1106.code_ptr >= length(var.code), true) ? local.iter_1106 : {
    output = (local.code_1107[0] == "."
      ? "${local.iter_1106.output}${join("", [for _ in range(local.code_1107[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1106.tape[local.iter_1106.tape_ptr]))])}"
      : local.iter_1106.output)
    
    tape = (
      local.code_1107[0] == "+"
        ? [for i, b in local.iter_1106.tape : (i == local.iter_1106.tape_ptr ? (b + local.code_1107[1]) % 256 : b)] :
      local.code_1107[0] == "-"
        ? [for i, b in local.iter_1106.tape : (i == local.iter_1106.tape_ptr ? (b - local.code_1107[1] + 256) % 256 : b)] :
      local.code_1107[0] == ","
        ? [for i, b in local.iter_1106.tape : (i == local.iter_1106.tape_ptr ? local.ascii_lookup[substr(local.input_1107, 0, 1)] : b)]
        : local.iter_1106.tape)

    tape_ptr = (
      local.code_1107[0] == "<"
        ? local.iter_1106.tape_ptr - local.code_1107[1] :
      local.code_1107[0] == ">"
        ? local.iter_1106.tape_ptr + local.code_1107[1]
        : local.iter_1106.tape_ptr)

    code_ptr = 2 + (
      local.code_1107[0] == "["
        ? local.iter_1106.tape[local.iter_1106.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1106.code_ptr)] : local.iter_1106.code_ptr :
      local.code_1107[0] == "]"
        ? local.iter_1106.tape[local.iter_1106.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1106.code_ptr)] : local.iter_1106.code_ptr
        : local.iter_1106.code_ptr)

    steps_taken = 1 + local.iter_1106.steps_taken
  }
}

locals {
  code_1108 = (try(local.iter_1107.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1107.code_ptr, local.iter_1107.code_ptr + 2)
    : [null])

  input_1108 = (local.code_1108[0] == ","
    ? substr(local.input_1107, local.code_1108[1], -1)
    : local.input_1107)

  iter_1108 = try(local.iter_1107.code_ptr >= length(var.code), true) ? local.iter_1107 : {
    output = (local.code_1108[0] == "."
      ? "${local.iter_1107.output}${join("", [for _ in range(local.code_1108[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1107.tape[local.iter_1107.tape_ptr]))])}"
      : local.iter_1107.output)
    
    tape = (
      local.code_1108[0] == "+"
        ? [for i, b in local.iter_1107.tape : (i == local.iter_1107.tape_ptr ? (b + local.code_1108[1]) % 256 : b)] :
      local.code_1108[0] == "-"
        ? [for i, b in local.iter_1107.tape : (i == local.iter_1107.tape_ptr ? (b - local.code_1108[1] + 256) % 256 : b)] :
      local.code_1108[0] == ","
        ? [for i, b in local.iter_1107.tape : (i == local.iter_1107.tape_ptr ? local.ascii_lookup[substr(local.input_1108, 0, 1)] : b)]
        : local.iter_1107.tape)

    tape_ptr = (
      local.code_1108[0] == "<"
        ? local.iter_1107.tape_ptr - local.code_1108[1] :
      local.code_1108[0] == ">"
        ? local.iter_1107.tape_ptr + local.code_1108[1]
        : local.iter_1107.tape_ptr)

    code_ptr = 2 + (
      local.code_1108[0] == "["
        ? local.iter_1107.tape[local.iter_1107.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1107.code_ptr)] : local.iter_1107.code_ptr :
      local.code_1108[0] == "]"
        ? local.iter_1107.tape[local.iter_1107.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1107.code_ptr)] : local.iter_1107.code_ptr
        : local.iter_1107.code_ptr)

    steps_taken = 1 + local.iter_1107.steps_taken
  }
}

locals {
  code_1109 = (try(local.iter_1108.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1108.code_ptr, local.iter_1108.code_ptr + 2)
    : [null])

  input_1109 = (local.code_1109[0] == ","
    ? substr(local.input_1108, local.code_1109[1], -1)
    : local.input_1108)

  iter_1109 = try(local.iter_1108.code_ptr >= length(var.code), true) ? local.iter_1108 : {
    output = (local.code_1109[0] == "."
      ? "${local.iter_1108.output}${join("", [for _ in range(local.code_1109[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1108.tape[local.iter_1108.tape_ptr]))])}"
      : local.iter_1108.output)
    
    tape = (
      local.code_1109[0] == "+"
        ? [for i, b in local.iter_1108.tape : (i == local.iter_1108.tape_ptr ? (b + local.code_1109[1]) % 256 : b)] :
      local.code_1109[0] == "-"
        ? [for i, b in local.iter_1108.tape : (i == local.iter_1108.tape_ptr ? (b - local.code_1109[1] + 256) % 256 : b)] :
      local.code_1109[0] == ","
        ? [for i, b in local.iter_1108.tape : (i == local.iter_1108.tape_ptr ? local.ascii_lookup[substr(local.input_1109, 0, 1)] : b)]
        : local.iter_1108.tape)

    tape_ptr = (
      local.code_1109[0] == "<"
        ? local.iter_1108.tape_ptr - local.code_1109[1] :
      local.code_1109[0] == ">"
        ? local.iter_1108.tape_ptr + local.code_1109[1]
        : local.iter_1108.tape_ptr)

    code_ptr = 2 + (
      local.code_1109[0] == "["
        ? local.iter_1108.tape[local.iter_1108.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1108.code_ptr)] : local.iter_1108.code_ptr :
      local.code_1109[0] == "]"
        ? local.iter_1108.tape[local.iter_1108.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1108.code_ptr)] : local.iter_1108.code_ptr
        : local.iter_1108.code_ptr)

    steps_taken = 1 + local.iter_1108.steps_taken
  }
}

locals {
  code_1110 = (try(local.iter_1109.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1109.code_ptr, local.iter_1109.code_ptr + 2)
    : [null])

  input_1110 = (local.code_1110[0] == ","
    ? substr(local.input_1109, local.code_1110[1], -1)
    : local.input_1109)

  iter_1110 = try(local.iter_1109.code_ptr >= length(var.code), true) ? local.iter_1109 : {
    output = (local.code_1110[0] == "."
      ? "${local.iter_1109.output}${join("", [for _ in range(local.code_1110[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1109.tape[local.iter_1109.tape_ptr]))])}"
      : local.iter_1109.output)
    
    tape = (
      local.code_1110[0] == "+"
        ? [for i, b in local.iter_1109.tape : (i == local.iter_1109.tape_ptr ? (b + local.code_1110[1]) % 256 : b)] :
      local.code_1110[0] == "-"
        ? [for i, b in local.iter_1109.tape : (i == local.iter_1109.tape_ptr ? (b - local.code_1110[1] + 256) % 256 : b)] :
      local.code_1110[0] == ","
        ? [for i, b in local.iter_1109.tape : (i == local.iter_1109.tape_ptr ? local.ascii_lookup[substr(local.input_1110, 0, 1)] : b)]
        : local.iter_1109.tape)

    tape_ptr = (
      local.code_1110[0] == "<"
        ? local.iter_1109.tape_ptr - local.code_1110[1] :
      local.code_1110[0] == ">"
        ? local.iter_1109.tape_ptr + local.code_1110[1]
        : local.iter_1109.tape_ptr)

    code_ptr = 2 + (
      local.code_1110[0] == "["
        ? local.iter_1109.tape[local.iter_1109.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1109.code_ptr)] : local.iter_1109.code_ptr :
      local.code_1110[0] == "]"
        ? local.iter_1109.tape[local.iter_1109.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1109.code_ptr)] : local.iter_1109.code_ptr
        : local.iter_1109.code_ptr)

    steps_taken = 1 + local.iter_1109.steps_taken
  }
}

locals {
  code_1111 = (try(local.iter_1110.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1110.code_ptr, local.iter_1110.code_ptr + 2)
    : [null])

  input_1111 = (local.code_1111[0] == ","
    ? substr(local.input_1110, local.code_1111[1], -1)
    : local.input_1110)

  iter_1111 = try(local.iter_1110.code_ptr >= length(var.code), true) ? local.iter_1110 : {
    output = (local.code_1111[0] == "."
      ? "${local.iter_1110.output}${join("", [for _ in range(local.code_1111[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1110.tape[local.iter_1110.tape_ptr]))])}"
      : local.iter_1110.output)
    
    tape = (
      local.code_1111[0] == "+"
        ? [for i, b in local.iter_1110.tape : (i == local.iter_1110.tape_ptr ? (b + local.code_1111[1]) % 256 : b)] :
      local.code_1111[0] == "-"
        ? [for i, b in local.iter_1110.tape : (i == local.iter_1110.tape_ptr ? (b - local.code_1111[1] + 256) % 256 : b)] :
      local.code_1111[0] == ","
        ? [for i, b in local.iter_1110.tape : (i == local.iter_1110.tape_ptr ? local.ascii_lookup[substr(local.input_1111, 0, 1)] : b)]
        : local.iter_1110.tape)

    tape_ptr = (
      local.code_1111[0] == "<"
        ? local.iter_1110.tape_ptr - local.code_1111[1] :
      local.code_1111[0] == ">"
        ? local.iter_1110.tape_ptr + local.code_1111[1]
        : local.iter_1110.tape_ptr)

    code_ptr = 2 + (
      local.code_1111[0] == "["
        ? local.iter_1110.tape[local.iter_1110.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1110.code_ptr)] : local.iter_1110.code_ptr :
      local.code_1111[0] == "]"
        ? local.iter_1110.tape[local.iter_1110.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1110.code_ptr)] : local.iter_1110.code_ptr
        : local.iter_1110.code_ptr)

    steps_taken = 1 + local.iter_1110.steps_taken
  }
}

locals {
  code_1112 = (try(local.iter_1111.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1111.code_ptr, local.iter_1111.code_ptr + 2)
    : [null])

  input_1112 = (local.code_1112[0] == ","
    ? substr(local.input_1111, local.code_1112[1], -1)
    : local.input_1111)

  iter_1112 = try(local.iter_1111.code_ptr >= length(var.code), true) ? local.iter_1111 : {
    output = (local.code_1112[0] == "."
      ? "${local.iter_1111.output}${join("", [for _ in range(local.code_1112[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1111.tape[local.iter_1111.tape_ptr]))])}"
      : local.iter_1111.output)
    
    tape = (
      local.code_1112[0] == "+"
        ? [for i, b in local.iter_1111.tape : (i == local.iter_1111.tape_ptr ? (b + local.code_1112[1]) % 256 : b)] :
      local.code_1112[0] == "-"
        ? [for i, b in local.iter_1111.tape : (i == local.iter_1111.tape_ptr ? (b - local.code_1112[1] + 256) % 256 : b)] :
      local.code_1112[0] == ","
        ? [for i, b in local.iter_1111.tape : (i == local.iter_1111.tape_ptr ? local.ascii_lookup[substr(local.input_1112, 0, 1)] : b)]
        : local.iter_1111.tape)

    tape_ptr = (
      local.code_1112[0] == "<"
        ? local.iter_1111.tape_ptr - local.code_1112[1] :
      local.code_1112[0] == ">"
        ? local.iter_1111.tape_ptr + local.code_1112[1]
        : local.iter_1111.tape_ptr)

    code_ptr = 2 + (
      local.code_1112[0] == "["
        ? local.iter_1111.tape[local.iter_1111.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1111.code_ptr)] : local.iter_1111.code_ptr :
      local.code_1112[0] == "]"
        ? local.iter_1111.tape[local.iter_1111.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1111.code_ptr)] : local.iter_1111.code_ptr
        : local.iter_1111.code_ptr)

    steps_taken = 1 + local.iter_1111.steps_taken
  }
}

locals {
  code_1113 = (try(local.iter_1112.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1112.code_ptr, local.iter_1112.code_ptr + 2)
    : [null])

  input_1113 = (local.code_1113[0] == ","
    ? substr(local.input_1112, local.code_1113[1], -1)
    : local.input_1112)

  iter_1113 = try(local.iter_1112.code_ptr >= length(var.code), true) ? local.iter_1112 : {
    output = (local.code_1113[0] == "."
      ? "${local.iter_1112.output}${join("", [for _ in range(local.code_1113[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1112.tape[local.iter_1112.tape_ptr]))])}"
      : local.iter_1112.output)
    
    tape = (
      local.code_1113[0] == "+"
        ? [for i, b in local.iter_1112.tape : (i == local.iter_1112.tape_ptr ? (b + local.code_1113[1]) % 256 : b)] :
      local.code_1113[0] == "-"
        ? [for i, b in local.iter_1112.tape : (i == local.iter_1112.tape_ptr ? (b - local.code_1113[1] + 256) % 256 : b)] :
      local.code_1113[0] == ","
        ? [for i, b in local.iter_1112.tape : (i == local.iter_1112.tape_ptr ? local.ascii_lookup[substr(local.input_1113, 0, 1)] : b)]
        : local.iter_1112.tape)

    tape_ptr = (
      local.code_1113[0] == "<"
        ? local.iter_1112.tape_ptr - local.code_1113[1] :
      local.code_1113[0] == ">"
        ? local.iter_1112.tape_ptr + local.code_1113[1]
        : local.iter_1112.tape_ptr)

    code_ptr = 2 + (
      local.code_1113[0] == "["
        ? local.iter_1112.tape[local.iter_1112.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1112.code_ptr)] : local.iter_1112.code_ptr :
      local.code_1113[0] == "]"
        ? local.iter_1112.tape[local.iter_1112.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1112.code_ptr)] : local.iter_1112.code_ptr
        : local.iter_1112.code_ptr)

    steps_taken = 1 + local.iter_1112.steps_taken
  }
}

locals {
  code_1114 = (try(local.iter_1113.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1113.code_ptr, local.iter_1113.code_ptr + 2)
    : [null])

  input_1114 = (local.code_1114[0] == ","
    ? substr(local.input_1113, local.code_1114[1], -1)
    : local.input_1113)

  iter_1114 = try(local.iter_1113.code_ptr >= length(var.code), true) ? local.iter_1113 : {
    output = (local.code_1114[0] == "."
      ? "${local.iter_1113.output}${join("", [for _ in range(local.code_1114[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1113.tape[local.iter_1113.tape_ptr]))])}"
      : local.iter_1113.output)
    
    tape = (
      local.code_1114[0] == "+"
        ? [for i, b in local.iter_1113.tape : (i == local.iter_1113.tape_ptr ? (b + local.code_1114[1]) % 256 : b)] :
      local.code_1114[0] == "-"
        ? [for i, b in local.iter_1113.tape : (i == local.iter_1113.tape_ptr ? (b - local.code_1114[1] + 256) % 256 : b)] :
      local.code_1114[0] == ","
        ? [for i, b in local.iter_1113.tape : (i == local.iter_1113.tape_ptr ? local.ascii_lookup[substr(local.input_1114, 0, 1)] : b)]
        : local.iter_1113.tape)

    tape_ptr = (
      local.code_1114[0] == "<"
        ? local.iter_1113.tape_ptr - local.code_1114[1] :
      local.code_1114[0] == ">"
        ? local.iter_1113.tape_ptr + local.code_1114[1]
        : local.iter_1113.tape_ptr)

    code_ptr = 2 + (
      local.code_1114[0] == "["
        ? local.iter_1113.tape[local.iter_1113.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1113.code_ptr)] : local.iter_1113.code_ptr :
      local.code_1114[0] == "]"
        ? local.iter_1113.tape[local.iter_1113.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1113.code_ptr)] : local.iter_1113.code_ptr
        : local.iter_1113.code_ptr)

    steps_taken = 1 + local.iter_1113.steps_taken
  }
}

locals {
  code_1115 = (try(local.iter_1114.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1114.code_ptr, local.iter_1114.code_ptr + 2)
    : [null])

  input_1115 = (local.code_1115[0] == ","
    ? substr(local.input_1114, local.code_1115[1], -1)
    : local.input_1114)

  iter_1115 = try(local.iter_1114.code_ptr >= length(var.code), true) ? local.iter_1114 : {
    output = (local.code_1115[0] == "."
      ? "${local.iter_1114.output}${join("", [for _ in range(local.code_1115[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1114.tape[local.iter_1114.tape_ptr]))])}"
      : local.iter_1114.output)
    
    tape = (
      local.code_1115[0] == "+"
        ? [for i, b in local.iter_1114.tape : (i == local.iter_1114.tape_ptr ? (b + local.code_1115[1]) % 256 : b)] :
      local.code_1115[0] == "-"
        ? [for i, b in local.iter_1114.tape : (i == local.iter_1114.tape_ptr ? (b - local.code_1115[1] + 256) % 256 : b)] :
      local.code_1115[0] == ","
        ? [for i, b in local.iter_1114.tape : (i == local.iter_1114.tape_ptr ? local.ascii_lookup[substr(local.input_1115, 0, 1)] : b)]
        : local.iter_1114.tape)

    tape_ptr = (
      local.code_1115[0] == "<"
        ? local.iter_1114.tape_ptr - local.code_1115[1] :
      local.code_1115[0] == ">"
        ? local.iter_1114.tape_ptr + local.code_1115[1]
        : local.iter_1114.tape_ptr)

    code_ptr = 2 + (
      local.code_1115[0] == "["
        ? local.iter_1114.tape[local.iter_1114.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1114.code_ptr)] : local.iter_1114.code_ptr :
      local.code_1115[0] == "]"
        ? local.iter_1114.tape[local.iter_1114.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1114.code_ptr)] : local.iter_1114.code_ptr
        : local.iter_1114.code_ptr)

    steps_taken = 1 + local.iter_1114.steps_taken
  }
}

locals {
  code_1116 = (try(local.iter_1115.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1115.code_ptr, local.iter_1115.code_ptr + 2)
    : [null])

  input_1116 = (local.code_1116[0] == ","
    ? substr(local.input_1115, local.code_1116[1], -1)
    : local.input_1115)

  iter_1116 = try(local.iter_1115.code_ptr >= length(var.code), true) ? local.iter_1115 : {
    output = (local.code_1116[0] == "."
      ? "${local.iter_1115.output}${join("", [for _ in range(local.code_1116[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1115.tape[local.iter_1115.tape_ptr]))])}"
      : local.iter_1115.output)
    
    tape = (
      local.code_1116[0] == "+"
        ? [for i, b in local.iter_1115.tape : (i == local.iter_1115.tape_ptr ? (b + local.code_1116[1]) % 256 : b)] :
      local.code_1116[0] == "-"
        ? [for i, b in local.iter_1115.tape : (i == local.iter_1115.tape_ptr ? (b - local.code_1116[1] + 256) % 256 : b)] :
      local.code_1116[0] == ","
        ? [for i, b in local.iter_1115.tape : (i == local.iter_1115.tape_ptr ? local.ascii_lookup[substr(local.input_1116, 0, 1)] : b)]
        : local.iter_1115.tape)

    tape_ptr = (
      local.code_1116[0] == "<"
        ? local.iter_1115.tape_ptr - local.code_1116[1] :
      local.code_1116[0] == ">"
        ? local.iter_1115.tape_ptr + local.code_1116[1]
        : local.iter_1115.tape_ptr)

    code_ptr = 2 + (
      local.code_1116[0] == "["
        ? local.iter_1115.tape[local.iter_1115.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1115.code_ptr)] : local.iter_1115.code_ptr :
      local.code_1116[0] == "]"
        ? local.iter_1115.tape[local.iter_1115.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1115.code_ptr)] : local.iter_1115.code_ptr
        : local.iter_1115.code_ptr)

    steps_taken = 1 + local.iter_1115.steps_taken
  }
}

locals {
  code_1117 = (try(local.iter_1116.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1116.code_ptr, local.iter_1116.code_ptr + 2)
    : [null])

  input_1117 = (local.code_1117[0] == ","
    ? substr(local.input_1116, local.code_1117[1], -1)
    : local.input_1116)

  iter_1117 = try(local.iter_1116.code_ptr >= length(var.code), true) ? local.iter_1116 : {
    output = (local.code_1117[0] == "."
      ? "${local.iter_1116.output}${join("", [for _ in range(local.code_1117[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1116.tape[local.iter_1116.tape_ptr]))])}"
      : local.iter_1116.output)
    
    tape = (
      local.code_1117[0] == "+"
        ? [for i, b in local.iter_1116.tape : (i == local.iter_1116.tape_ptr ? (b + local.code_1117[1]) % 256 : b)] :
      local.code_1117[0] == "-"
        ? [for i, b in local.iter_1116.tape : (i == local.iter_1116.tape_ptr ? (b - local.code_1117[1] + 256) % 256 : b)] :
      local.code_1117[0] == ","
        ? [for i, b in local.iter_1116.tape : (i == local.iter_1116.tape_ptr ? local.ascii_lookup[substr(local.input_1117, 0, 1)] : b)]
        : local.iter_1116.tape)

    tape_ptr = (
      local.code_1117[0] == "<"
        ? local.iter_1116.tape_ptr - local.code_1117[1] :
      local.code_1117[0] == ">"
        ? local.iter_1116.tape_ptr + local.code_1117[1]
        : local.iter_1116.tape_ptr)

    code_ptr = 2 + (
      local.code_1117[0] == "["
        ? local.iter_1116.tape[local.iter_1116.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1116.code_ptr)] : local.iter_1116.code_ptr :
      local.code_1117[0] == "]"
        ? local.iter_1116.tape[local.iter_1116.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1116.code_ptr)] : local.iter_1116.code_ptr
        : local.iter_1116.code_ptr)

    steps_taken = 1 + local.iter_1116.steps_taken
  }
}

locals {
  code_1118 = (try(local.iter_1117.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1117.code_ptr, local.iter_1117.code_ptr + 2)
    : [null])

  input_1118 = (local.code_1118[0] == ","
    ? substr(local.input_1117, local.code_1118[1], -1)
    : local.input_1117)

  iter_1118 = try(local.iter_1117.code_ptr >= length(var.code), true) ? local.iter_1117 : {
    output = (local.code_1118[0] == "."
      ? "${local.iter_1117.output}${join("", [for _ in range(local.code_1118[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1117.tape[local.iter_1117.tape_ptr]))])}"
      : local.iter_1117.output)
    
    tape = (
      local.code_1118[0] == "+"
        ? [for i, b in local.iter_1117.tape : (i == local.iter_1117.tape_ptr ? (b + local.code_1118[1]) % 256 : b)] :
      local.code_1118[0] == "-"
        ? [for i, b in local.iter_1117.tape : (i == local.iter_1117.tape_ptr ? (b - local.code_1118[1] + 256) % 256 : b)] :
      local.code_1118[0] == ","
        ? [for i, b in local.iter_1117.tape : (i == local.iter_1117.tape_ptr ? local.ascii_lookup[substr(local.input_1118, 0, 1)] : b)]
        : local.iter_1117.tape)

    tape_ptr = (
      local.code_1118[0] == "<"
        ? local.iter_1117.tape_ptr - local.code_1118[1] :
      local.code_1118[0] == ">"
        ? local.iter_1117.tape_ptr + local.code_1118[1]
        : local.iter_1117.tape_ptr)

    code_ptr = 2 + (
      local.code_1118[0] == "["
        ? local.iter_1117.tape[local.iter_1117.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1117.code_ptr)] : local.iter_1117.code_ptr :
      local.code_1118[0] == "]"
        ? local.iter_1117.tape[local.iter_1117.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1117.code_ptr)] : local.iter_1117.code_ptr
        : local.iter_1117.code_ptr)

    steps_taken = 1 + local.iter_1117.steps_taken
  }
}

locals {
  code_1119 = (try(local.iter_1118.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1118.code_ptr, local.iter_1118.code_ptr + 2)
    : [null])

  input_1119 = (local.code_1119[0] == ","
    ? substr(local.input_1118, local.code_1119[1], -1)
    : local.input_1118)

  iter_1119 = try(local.iter_1118.code_ptr >= length(var.code), true) ? local.iter_1118 : {
    output = (local.code_1119[0] == "."
      ? "${local.iter_1118.output}${join("", [for _ in range(local.code_1119[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1118.tape[local.iter_1118.tape_ptr]))])}"
      : local.iter_1118.output)
    
    tape = (
      local.code_1119[0] == "+"
        ? [for i, b in local.iter_1118.tape : (i == local.iter_1118.tape_ptr ? (b + local.code_1119[1]) % 256 : b)] :
      local.code_1119[0] == "-"
        ? [for i, b in local.iter_1118.tape : (i == local.iter_1118.tape_ptr ? (b - local.code_1119[1] + 256) % 256 : b)] :
      local.code_1119[0] == ","
        ? [for i, b in local.iter_1118.tape : (i == local.iter_1118.tape_ptr ? local.ascii_lookup[substr(local.input_1119, 0, 1)] : b)]
        : local.iter_1118.tape)

    tape_ptr = (
      local.code_1119[0] == "<"
        ? local.iter_1118.tape_ptr - local.code_1119[1] :
      local.code_1119[0] == ">"
        ? local.iter_1118.tape_ptr + local.code_1119[1]
        : local.iter_1118.tape_ptr)

    code_ptr = 2 + (
      local.code_1119[0] == "["
        ? local.iter_1118.tape[local.iter_1118.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1118.code_ptr)] : local.iter_1118.code_ptr :
      local.code_1119[0] == "]"
        ? local.iter_1118.tape[local.iter_1118.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1118.code_ptr)] : local.iter_1118.code_ptr
        : local.iter_1118.code_ptr)

    steps_taken = 1 + local.iter_1118.steps_taken
  }
}

locals {
  code_1120 = (try(local.iter_1119.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1119.code_ptr, local.iter_1119.code_ptr + 2)
    : [null])

  input_1120 = (local.code_1120[0] == ","
    ? substr(local.input_1119, local.code_1120[1], -1)
    : local.input_1119)

  iter_1120 = try(local.iter_1119.code_ptr >= length(var.code), true) ? local.iter_1119 : {
    output = (local.code_1120[0] == "."
      ? "${local.iter_1119.output}${join("", [for _ in range(local.code_1120[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1119.tape[local.iter_1119.tape_ptr]))])}"
      : local.iter_1119.output)
    
    tape = (
      local.code_1120[0] == "+"
        ? [for i, b in local.iter_1119.tape : (i == local.iter_1119.tape_ptr ? (b + local.code_1120[1]) % 256 : b)] :
      local.code_1120[0] == "-"
        ? [for i, b in local.iter_1119.tape : (i == local.iter_1119.tape_ptr ? (b - local.code_1120[1] + 256) % 256 : b)] :
      local.code_1120[0] == ","
        ? [for i, b in local.iter_1119.tape : (i == local.iter_1119.tape_ptr ? local.ascii_lookup[substr(local.input_1120, 0, 1)] : b)]
        : local.iter_1119.tape)

    tape_ptr = (
      local.code_1120[0] == "<"
        ? local.iter_1119.tape_ptr - local.code_1120[1] :
      local.code_1120[0] == ">"
        ? local.iter_1119.tape_ptr + local.code_1120[1]
        : local.iter_1119.tape_ptr)

    code_ptr = 2 + (
      local.code_1120[0] == "["
        ? local.iter_1119.tape[local.iter_1119.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1119.code_ptr)] : local.iter_1119.code_ptr :
      local.code_1120[0] == "]"
        ? local.iter_1119.tape[local.iter_1119.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1119.code_ptr)] : local.iter_1119.code_ptr
        : local.iter_1119.code_ptr)

    steps_taken = 1 + local.iter_1119.steps_taken
  }
}

locals {
  code_1121 = (try(local.iter_1120.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1120.code_ptr, local.iter_1120.code_ptr + 2)
    : [null])

  input_1121 = (local.code_1121[0] == ","
    ? substr(local.input_1120, local.code_1121[1], -1)
    : local.input_1120)

  iter_1121 = try(local.iter_1120.code_ptr >= length(var.code), true) ? local.iter_1120 : {
    output = (local.code_1121[0] == "."
      ? "${local.iter_1120.output}${join("", [for _ in range(local.code_1121[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1120.tape[local.iter_1120.tape_ptr]))])}"
      : local.iter_1120.output)
    
    tape = (
      local.code_1121[0] == "+"
        ? [for i, b in local.iter_1120.tape : (i == local.iter_1120.tape_ptr ? (b + local.code_1121[1]) % 256 : b)] :
      local.code_1121[0] == "-"
        ? [for i, b in local.iter_1120.tape : (i == local.iter_1120.tape_ptr ? (b - local.code_1121[1] + 256) % 256 : b)] :
      local.code_1121[0] == ","
        ? [for i, b in local.iter_1120.tape : (i == local.iter_1120.tape_ptr ? local.ascii_lookup[substr(local.input_1121, 0, 1)] : b)]
        : local.iter_1120.tape)

    tape_ptr = (
      local.code_1121[0] == "<"
        ? local.iter_1120.tape_ptr - local.code_1121[1] :
      local.code_1121[0] == ">"
        ? local.iter_1120.tape_ptr + local.code_1121[1]
        : local.iter_1120.tape_ptr)

    code_ptr = 2 + (
      local.code_1121[0] == "["
        ? local.iter_1120.tape[local.iter_1120.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1120.code_ptr)] : local.iter_1120.code_ptr :
      local.code_1121[0] == "]"
        ? local.iter_1120.tape[local.iter_1120.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1120.code_ptr)] : local.iter_1120.code_ptr
        : local.iter_1120.code_ptr)

    steps_taken = 1 + local.iter_1120.steps_taken
  }
}

locals {
  code_1122 = (try(local.iter_1121.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1121.code_ptr, local.iter_1121.code_ptr + 2)
    : [null])

  input_1122 = (local.code_1122[0] == ","
    ? substr(local.input_1121, local.code_1122[1], -1)
    : local.input_1121)

  iter_1122 = try(local.iter_1121.code_ptr >= length(var.code), true) ? local.iter_1121 : {
    output = (local.code_1122[0] == "."
      ? "${local.iter_1121.output}${join("", [for _ in range(local.code_1122[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1121.tape[local.iter_1121.tape_ptr]))])}"
      : local.iter_1121.output)
    
    tape = (
      local.code_1122[0] == "+"
        ? [for i, b in local.iter_1121.tape : (i == local.iter_1121.tape_ptr ? (b + local.code_1122[1]) % 256 : b)] :
      local.code_1122[0] == "-"
        ? [for i, b in local.iter_1121.tape : (i == local.iter_1121.tape_ptr ? (b - local.code_1122[1] + 256) % 256 : b)] :
      local.code_1122[0] == ","
        ? [for i, b in local.iter_1121.tape : (i == local.iter_1121.tape_ptr ? local.ascii_lookup[substr(local.input_1122, 0, 1)] : b)]
        : local.iter_1121.tape)

    tape_ptr = (
      local.code_1122[0] == "<"
        ? local.iter_1121.tape_ptr - local.code_1122[1] :
      local.code_1122[0] == ">"
        ? local.iter_1121.tape_ptr + local.code_1122[1]
        : local.iter_1121.tape_ptr)

    code_ptr = 2 + (
      local.code_1122[0] == "["
        ? local.iter_1121.tape[local.iter_1121.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1121.code_ptr)] : local.iter_1121.code_ptr :
      local.code_1122[0] == "]"
        ? local.iter_1121.tape[local.iter_1121.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1121.code_ptr)] : local.iter_1121.code_ptr
        : local.iter_1121.code_ptr)

    steps_taken = 1 + local.iter_1121.steps_taken
  }
}

locals {
  code_1123 = (try(local.iter_1122.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1122.code_ptr, local.iter_1122.code_ptr + 2)
    : [null])

  input_1123 = (local.code_1123[0] == ","
    ? substr(local.input_1122, local.code_1123[1], -1)
    : local.input_1122)

  iter_1123 = try(local.iter_1122.code_ptr >= length(var.code), true) ? local.iter_1122 : {
    output = (local.code_1123[0] == "."
      ? "${local.iter_1122.output}${join("", [for _ in range(local.code_1123[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1122.tape[local.iter_1122.tape_ptr]))])}"
      : local.iter_1122.output)
    
    tape = (
      local.code_1123[0] == "+"
        ? [for i, b in local.iter_1122.tape : (i == local.iter_1122.tape_ptr ? (b + local.code_1123[1]) % 256 : b)] :
      local.code_1123[0] == "-"
        ? [for i, b in local.iter_1122.tape : (i == local.iter_1122.tape_ptr ? (b - local.code_1123[1] + 256) % 256 : b)] :
      local.code_1123[0] == ","
        ? [for i, b in local.iter_1122.tape : (i == local.iter_1122.tape_ptr ? local.ascii_lookup[substr(local.input_1123, 0, 1)] : b)]
        : local.iter_1122.tape)

    tape_ptr = (
      local.code_1123[0] == "<"
        ? local.iter_1122.tape_ptr - local.code_1123[1] :
      local.code_1123[0] == ">"
        ? local.iter_1122.tape_ptr + local.code_1123[1]
        : local.iter_1122.tape_ptr)

    code_ptr = 2 + (
      local.code_1123[0] == "["
        ? local.iter_1122.tape[local.iter_1122.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1122.code_ptr)] : local.iter_1122.code_ptr :
      local.code_1123[0] == "]"
        ? local.iter_1122.tape[local.iter_1122.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1122.code_ptr)] : local.iter_1122.code_ptr
        : local.iter_1122.code_ptr)

    steps_taken = 1 + local.iter_1122.steps_taken
  }
}

locals {
  code_1124 = (try(local.iter_1123.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1123.code_ptr, local.iter_1123.code_ptr + 2)
    : [null])

  input_1124 = (local.code_1124[0] == ","
    ? substr(local.input_1123, local.code_1124[1], -1)
    : local.input_1123)

  iter_1124 = try(local.iter_1123.code_ptr >= length(var.code), true) ? local.iter_1123 : {
    output = (local.code_1124[0] == "."
      ? "${local.iter_1123.output}${join("", [for _ in range(local.code_1124[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1123.tape[local.iter_1123.tape_ptr]))])}"
      : local.iter_1123.output)
    
    tape = (
      local.code_1124[0] == "+"
        ? [for i, b in local.iter_1123.tape : (i == local.iter_1123.tape_ptr ? (b + local.code_1124[1]) % 256 : b)] :
      local.code_1124[0] == "-"
        ? [for i, b in local.iter_1123.tape : (i == local.iter_1123.tape_ptr ? (b - local.code_1124[1] + 256) % 256 : b)] :
      local.code_1124[0] == ","
        ? [for i, b in local.iter_1123.tape : (i == local.iter_1123.tape_ptr ? local.ascii_lookup[substr(local.input_1124, 0, 1)] : b)]
        : local.iter_1123.tape)

    tape_ptr = (
      local.code_1124[0] == "<"
        ? local.iter_1123.tape_ptr - local.code_1124[1] :
      local.code_1124[0] == ">"
        ? local.iter_1123.tape_ptr + local.code_1124[1]
        : local.iter_1123.tape_ptr)

    code_ptr = 2 + (
      local.code_1124[0] == "["
        ? local.iter_1123.tape[local.iter_1123.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1123.code_ptr)] : local.iter_1123.code_ptr :
      local.code_1124[0] == "]"
        ? local.iter_1123.tape[local.iter_1123.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1123.code_ptr)] : local.iter_1123.code_ptr
        : local.iter_1123.code_ptr)

    steps_taken = 1 + local.iter_1123.steps_taken
  }
}

locals {
  code_1125 = (try(local.iter_1124.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1124.code_ptr, local.iter_1124.code_ptr + 2)
    : [null])

  input_1125 = (local.code_1125[0] == ","
    ? substr(local.input_1124, local.code_1125[1], -1)
    : local.input_1124)

  iter_1125 = try(local.iter_1124.code_ptr >= length(var.code), true) ? local.iter_1124 : {
    output = (local.code_1125[0] == "."
      ? "${local.iter_1124.output}${join("", [for _ in range(local.code_1125[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1124.tape[local.iter_1124.tape_ptr]))])}"
      : local.iter_1124.output)
    
    tape = (
      local.code_1125[0] == "+"
        ? [for i, b in local.iter_1124.tape : (i == local.iter_1124.tape_ptr ? (b + local.code_1125[1]) % 256 : b)] :
      local.code_1125[0] == "-"
        ? [for i, b in local.iter_1124.tape : (i == local.iter_1124.tape_ptr ? (b - local.code_1125[1] + 256) % 256 : b)] :
      local.code_1125[0] == ","
        ? [for i, b in local.iter_1124.tape : (i == local.iter_1124.tape_ptr ? local.ascii_lookup[substr(local.input_1125, 0, 1)] : b)]
        : local.iter_1124.tape)

    tape_ptr = (
      local.code_1125[0] == "<"
        ? local.iter_1124.tape_ptr - local.code_1125[1] :
      local.code_1125[0] == ">"
        ? local.iter_1124.tape_ptr + local.code_1125[1]
        : local.iter_1124.tape_ptr)

    code_ptr = 2 + (
      local.code_1125[0] == "["
        ? local.iter_1124.tape[local.iter_1124.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1124.code_ptr)] : local.iter_1124.code_ptr :
      local.code_1125[0] == "]"
        ? local.iter_1124.tape[local.iter_1124.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1124.code_ptr)] : local.iter_1124.code_ptr
        : local.iter_1124.code_ptr)

    steps_taken = 1 + local.iter_1124.steps_taken
  }
}

locals {
  code_1126 = (try(local.iter_1125.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1125.code_ptr, local.iter_1125.code_ptr + 2)
    : [null])

  input_1126 = (local.code_1126[0] == ","
    ? substr(local.input_1125, local.code_1126[1], -1)
    : local.input_1125)

  iter_1126 = try(local.iter_1125.code_ptr >= length(var.code), true) ? local.iter_1125 : {
    output = (local.code_1126[0] == "."
      ? "${local.iter_1125.output}${join("", [for _ in range(local.code_1126[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1125.tape[local.iter_1125.tape_ptr]))])}"
      : local.iter_1125.output)
    
    tape = (
      local.code_1126[0] == "+"
        ? [for i, b in local.iter_1125.tape : (i == local.iter_1125.tape_ptr ? (b + local.code_1126[1]) % 256 : b)] :
      local.code_1126[0] == "-"
        ? [for i, b in local.iter_1125.tape : (i == local.iter_1125.tape_ptr ? (b - local.code_1126[1] + 256) % 256 : b)] :
      local.code_1126[0] == ","
        ? [for i, b in local.iter_1125.tape : (i == local.iter_1125.tape_ptr ? local.ascii_lookup[substr(local.input_1126, 0, 1)] : b)]
        : local.iter_1125.tape)

    tape_ptr = (
      local.code_1126[0] == "<"
        ? local.iter_1125.tape_ptr - local.code_1126[1] :
      local.code_1126[0] == ">"
        ? local.iter_1125.tape_ptr + local.code_1126[1]
        : local.iter_1125.tape_ptr)

    code_ptr = 2 + (
      local.code_1126[0] == "["
        ? local.iter_1125.tape[local.iter_1125.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1125.code_ptr)] : local.iter_1125.code_ptr :
      local.code_1126[0] == "]"
        ? local.iter_1125.tape[local.iter_1125.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1125.code_ptr)] : local.iter_1125.code_ptr
        : local.iter_1125.code_ptr)

    steps_taken = 1 + local.iter_1125.steps_taken
  }
}

locals {
  code_1127 = (try(local.iter_1126.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1126.code_ptr, local.iter_1126.code_ptr + 2)
    : [null])

  input_1127 = (local.code_1127[0] == ","
    ? substr(local.input_1126, local.code_1127[1], -1)
    : local.input_1126)

  iter_1127 = try(local.iter_1126.code_ptr >= length(var.code), true) ? local.iter_1126 : {
    output = (local.code_1127[0] == "."
      ? "${local.iter_1126.output}${join("", [for _ in range(local.code_1127[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1126.tape[local.iter_1126.tape_ptr]))])}"
      : local.iter_1126.output)
    
    tape = (
      local.code_1127[0] == "+"
        ? [for i, b in local.iter_1126.tape : (i == local.iter_1126.tape_ptr ? (b + local.code_1127[1]) % 256 : b)] :
      local.code_1127[0] == "-"
        ? [for i, b in local.iter_1126.tape : (i == local.iter_1126.tape_ptr ? (b - local.code_1127[1] + 256) % 256 : b)] :
      local.code_1127[0] == ","
        ? [for i, b in local.iter_1126.tape : (i == local.iter_1126.tape_ptr ? local.ascii_lookup[substr(local.input_1127, 0, 1)] : b)]
        : local.iter_1126.tape)

    tape_ptr = (
      local.code_1127[0] == "<"
        ? local.iter_1126.tape_ptr - local.code_1127[1] :
      local.code_1127[0] == ">"
        ? local.iter_1126.tape_ptr + local.code_1127[1]
        : local.iter_1126.tape_ptr)

    code_ptr = 2 + (
      local.code_1127[0] == "["
        ? local.iter_1126.tape[local.iter_1126.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1126.code_ptr)] : local.iter_1126.code_ptr :
      local.code_1127[0] == "]"
        ? local.iter_1126.tape[local.iter_1126.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1126.code_ptr)] : local.iter_1126.code_ptr
        : local.iter_1126.code_ptr)

    steps_taken = 1 + local.iter_1126.steps_taken
  }
}

locals {
  code_1128 = (try(local.iter_1127.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1127.code_ptr, local.iter_1127.code_ptr + 2)
    : [null])

  input_1128 = (local.code_1128[0] == ","
    ? substr(local.input_1127, local.code_1128[1], -1)
    : local.input_1127)

  iter_1128 = try(local.iter_1127.code_ptr >= length(var.code), true) ? local.iter_1127 : {
    output = (local.code_1128[0] == "."
      ? "${local.iter_1127.output}${join("", [for _ in range(local.code_1128[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1127.tape[local.iter_1127.tape_ptr]))])}"
      : local.iter_1127.output)
    
    tape = (
      local.code_1128[0] == "+"
        ? [for i, b in local.iter_1127.tape : (i == local.iter_1127.tape_ptr ? (b + local.code_1128[1]) % 256 : b)] :
      local.code_1128[0] == "-"
        ? [for i, b in local.iter_1127.tape : (i == local.iter_1127.tape_ptr ? (b - local.code_1128[1] + 256) % 256 : b)] :
      local.code_1128[0] == ","
        ? [for i, b in local.iter_1127.tape : (i == local.iter_1127.tape_ptr ? local.ascii_lookup[substr(local.input_1128, 0, 1)] : b)]
        : local.iter_1127.tape)

    tape_ptr = (
      local.code_1128[0] == "<"
        ? local.iter_1127.tape_ptr - local.code_1128[1] :
      local.code_1128[0] == ">"
        ? local.iter_1127.tape_ptr + local.code_1128[1]
        : local.iter_1127.tape_ptr)

    code_ptr = 2 + (
      local.code_1128[0] == "["
        ? local.iter_1127.tape[local.iter_1127.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1127.code_ptr)] : local.iter_1127.code_ptr :
      local.code_1128[0] == "]"
        ? local.iter_1127.tape[local.iter_1127.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1127.code_ptr)] : local.iter_1127.code_ptr
        : local.iter_1127.code_ptr)

    steps_taken = 1 + local.iter_1127.steps_taken
  }
}

locals {
  code_1129 = (try(local.iter_1128.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1128.code_ptr, local.iter_1128.code_ptr + 2)
    : [null])

  input_1129 = (local.code_1129[0] == ","
    ? substr(local.input_1128, local.code_1129[1], -1)
    : local.input_1128)

  iter_1129 = try(local.iter_1128.code_ptr >= length(var.code), true) ? local.iter_1128 : {
    output = (local.code_1129[0] == "."
      ? "${local.iter_1128.output}${join("", [for _ in range(local.code_1129[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1128.tape[local.iter_1128.tape_ptr]))])}"
      : local.iter_1128.output)
    
    tape = (
      local.code_1129[0] == "+"
        ? [for i, b in local.iter_1128.tape : (i == local.iter_1128.tape_ptr ? (b + local.code_1129[1]) % 256 : b)] :
      local.code_1129[0] == "-"
        ? [for i, b in local.iter_1128.tape : (i == local.iter_1128.tape_ptr ? (b - local.code_1129[1] + 256) % 256 : b)] :
      local.code_1129[0] == ","
        ? [for i, b in local.iter_1128.tape : (i == local.iter_1128.tape_ptr ? local.ascii_lookup[substr(local.input_1129, 0, 1)] : b)]
        : local.iter_1128.tape)

    tape_ptr = (
      local.code_1129[0] == "<"
        ? local.iter_1128.tape_ptr - local.code_1129[1] :
      local.code_1129[0] == ">"
        ? local.iter_1128.tape_ptr + local.code_1129[1]
        : local.iter_1128.tape_ptr)

    code_ptr = 2 + (
      local.code_1129[0] == "["
        ? local.iter_1128.tape[local.iter_1128.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1128.code_ptr)] : local.iter_1128.code_ptr :
      local.code_1129[0] == "]"
        ? local.iter_1128.tape[local.iter_1128.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1128.code_ptr)] : local.iter_1128.code_ptr
        : local.iter_1128.code_ptr)

    steps_taken = 1 + local.iter_1128.steps_taken
  }
}

locals {
  code_1130 = (try(local.iter_1129.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1129.code_ptr, local.iter_1129.code_ptr + 2)
    : [null])

  input_1130 = (local.code_1130[0] == ","
    ? substr(local.input_1129, local.code_1130[1], -1)
    : local.input_1129)

  iter_1130 = try(local.iter_1129.code_ptr >= length(var.code), true) ? local.iter_1129 : {
    output = (local.code_1130[0] == "."
      ? "${local.iter_1129.output}${join("", [for _ in range(local.code_1130[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1129.tape[local.iter_1129.tape_ptr]))])}"
      : local.iter_1129.output)
    
    tape = (
      local.code_1130[0] == "+"
        ? [for i, b in local.iter_1129.tape : (i == local.iter_1129.tape_ptr ? (b + local.code_1130[1]) % 256 : b)] :
      local.code_1130[0] == "-"
        ? [for i, b in local.iter_1129.tape : (i == local.iter_1129.tape_ptr ? (b - local.code_1130[1] + 256) % 256 : b)] :
      local.code_1130[0] == ","
        ? [for i, b in local.iter_1129.tape : (i == local.iter_1129.tape_ptr ? local.ascii_lookup[substr(local.input_1130, 0, 1)] : b)]
        : local.iter_1129.tape)

    tape_ptr = (
      local.code_1130[0] == "<"
        ? local.iter_1129.tape_ptr - local.code_1130[1] :
      local.code_1130[0] == ">"
        ? local.iter_1129.tape_ptr + local.code_1130[1]
        : local.iter_1129.tape_ptr)

    code_ptr = 2 + (
      local.code_1130[0] == "["
        ? local.iter_1129.tape[local.iter_1129.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1129.code_ptr)] : local.iter_1129.code_ptr :
      local.code_1130[0] == "]"
        ? local.iter_1129.tape[local.iter_1129.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1129.code_ptr)] : local.iter_1129.code_ptr
        : local.iter_1129.code_ptr)

    steps_taken = 1 + local.iter_1129.steps_taken
  }
}

locals {
  code_1131 = (try(local.iter_1130.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1130.code_ptr, local.iter_1130.code_ptr + 2)
    : [null])

  input_1131 = (local.code_1131[0] == ","
    ? substr(local.input_1130, local.code_1131[1], -1)
    : local.input_1130)

  iter_1131 = try(local.iter_1130.code_ptr >= length(var.code), true) ? local.iter_1130 : {
    output = (local.code_1131[0] == "."
      ? "${local.iter_1130.output}${join("", [for _ in range(local.code_1131[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1130.tape[local.iter_1130.tape_ptr]))])}"
      : local.iter_1130.output)
    
    tape = (
      local.code_1131[0] == "+"
        ? [for i, b in local.iter_1130.tape : (i == local.iter_1130.tape_ptr ? (b + local.code_1131[1]) % 256 : b)] :
      local.code_1131[0] == "-"
        ? [for i, b in local.iter_1130.tape : (i == local.iter_1130.tape_ptr ? (b - local.code_1131[1] + 256) % 256 : b)] :
      local.code_1131[0] == ","
        ? [for i, b in local.iter_1130.tape : (i == local.iter_1130.tape_ptr ? local.ascii_lookup[substr(local.input_1131, 0, 1)] : b)]
        : local.iter_1130.tape)

    tape_ptr = (
      local.code_1131[0] == "<"
        ? local.iter_1130.tape_ptr - local.code_1131[1] :
      local.code_1131[0] == ">"
        ? local.iter_1130.tape_ptr + local.code_1131[1]
        : local.iter_1130.tape_ptr)

    code_ptr = 2 + (
      local.code_1131[0] == "["
        ? local.iter_1130.tape[local.iter_1130.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1130.code_ptr)] : local.iter_1130.code_ptr :
      local.code_1131[0] == "]"
        ? local.iter_1130.tape[local.iter_1130.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1130.code_ptr)] : local.iter_1130.code_ptr
        : local.iter_1130.code_ptr)

    steps_taken = 1 + local.iter_1130.steps_taken
  }
}

locals {
  code_1132 = (try(local.iter_1131.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1131.code_ptr, local.iter_1131.code_ptr + 2)
    : [null])

  input_1132 = (local.code_1132[0] == ","
    ? substr(local.input_1131, local.code_1132[1], -1)
    : local.input_1131)

  iter_1132 = try(local.iter_1131.code_ptr >= length(var.code), true) ? local.iter_1131 : {
    output = (local.code_1132[0] == "."
      ? "${local.iter_1131.output}${join("", [for _ in range(local.code_1132[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1131.tape[local.iter_1131.tape_ptr]))])}"
      : local.iter_1131.output)
    
    tape = (
      local.code_1132[0] == "+"
        ? [for i, b in local.iter_1131.tape : (i == local.iter_1131.tape_ptr ? (b + local.code_1132[1]) % 256 : b)] :
      local.code_1132[0] == "-"
        ? [for i, b in local.iter_1131.tape : (i == local.iter_1131.tape_ptr ? (b - local.code_1132[1] + 256) % 256 : b)] :
      local.code_1132[0] == ","
        ? [for i, b in local.iter_1131.tape : (i == local.iter_1131.tape_ptr ? local.ascii_lookup[substr(local.input_1132, 0, 1)] : b)]
        : local.iter_1131.tape)

    tape_ptr = (
      local.code_1132[0] == "<"
        ? local.iter_1131.tape_ptr - local.code_1132[1] :
      local.code_1132[0] == ">"
        ? local.iter_1131.tape_ptr + local.code_1132[1]
        : local.iter_1131.tape_ptr)

    code_ptr = 2 + (
      local.code_1132[0] == "["
        ? local.iter_1131.tape[local.iter_1131.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1131.code_ptr)] : local.iter_1131.code_ptr :
      local.code_1132[0] == "]"
        ? local.iter_1131.tape[local.iter_1131.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1131.code_ptr)] : local.iter_1131.code_ptr
        : local.iter_1131.code_ptr)

    steps_taken = 1 + local.iter_1131.steps_taken
  }
}

locals {
  code_1133 = (try(local.iter_1132.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1132.code_ptr, local.iter_1132.code_ptr + 2)
    : [null])

  input_1133 = (local.code_1133[0] == ","
    ? substr(local.input_1132, local.code_1133[1], -1)
    : local.input_1132)

  iter_1133 = try(local.iter_1132.code_ptr >= length(var.code), true) ? local.iter_1132 : {
    output = (local.code_1133[0] == "."
      ? "${local.iter_1132.output}${join("", [for _ in range(local.code_1133[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1132.tape[local.iter_1132.tape_ptr]))])}"
      : local.iter_1132.output)
    
    tape = (
      local.code_1133[0] == "+"
        ? [for i, b in local.iter_1132.tape : (i == local.iter_1132.tape_ptr ? (b + local.code_1133[1]) % 256 : b)] :
      local.code_1133[0] == "-"
        ? [for i, b in local.iter_1132.tape : (i == local.iter_1132.tape_ptr ? (b - local.code_1133[1] + 256) % 256 : b)] :
      local.code_1133[0] == ","
        ? [for i, b in local.iter_1132.tape : (i == local.iter_1132.tape_ptr ? local.ascii_lookup[substr(local.input_1133, 0, 1)] : b)]
        : local.iter_1132.tape)

    tape_ptr = (
      local.code_1133[0] == "<"
        ? local.iter_1132.tape_ptr - local.code_1133[1] :
      local.code_1133[0] == ">"
        ? local.iter_1132.tape_ptr + local.code_1133[1]
        : local.iter_1132.tape_ptr)

    code_ptr = 2 + (
      local.code_1133[0] == "["
        ? local.iter_1132.tape[local.iter_1132.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1132.code_ptr)] : local.iter_1132.code_ptr :
      local.code_1133[0] == "]"
        ? local.iter_1132.tape[local.iter_1132.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1132.code_ptr)] : local.iter_1132.code_ptr
        : local.iter_1132.code_ptr)

    steps_taken = 1 + local.iter_1132.steps_taken
  }
}

locals {
  code_1134 = (try(local.iter_1133.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1133.code_ptr, local.iter_1133.code_ptr + 2)
    : [null])

  input_1134 = (local.code_1134[0] == ","
    ? substr(local.input_1133, local.code_1134[1], -1)
    : local.input_1133)

  iter_1134 = try(local.iter_1133.code_ptr >= length(var.code), true) ? local.iter_1133 : {
    output = (local.code_1134[0] == "."
      ? "${local.iter_1133.output}${join("", [for _ in range(local.code_1134[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1133.tape[local.iter_1133.tape_ptr]))])}"
      : local.iter_1133.output)
    
    tape = (
      local.code_1134[0] == "+"
        ? [for i, b in local.iter_1133.tape : (i == local.iter_1133.tape_ptr ? (b + local.code_1134[1]) % 256 : b)] :
      local.code_1134[0] == "-"
        ? [for i, b in local.iter_1133.tape : (i == local.iter_1133.tape_ptr ? (b - local.code_1134[1] + 256) % 256 : b)] :
      local.code_1134[0] == ","
        ? [for i, b in local.iter_1133.tape : (i == local.iter_1133.tape_ptr ? local.ascii_lookup[substr(local.input_1134, 0, 1)] : b)]
        : local.iter_1133.tape)

    tape_ptr = (
      local.code_1134[0] == "<"
        ? local.iter_1133.tape_ptr - local.code_1134[1] :
      local.code_1134[0] == ">"
        ? local.iter_1133.tape_ptr + local.code_1134[1]
        : local.iter_1133.tape_ptr)

    code_ptr = 2 + (
      local.code_1134[0] == "["
        ? local.iter_1133.tape[local.iter_1133.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1133.code_ptr)] : local.iter_1133.code_ptr :
      local.code_1134[0] == "]"
        ? local.iter_1133.tape[local.iter_1133.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1133.code_ptr)] : local.iter_1133.code_ptr
        : local.iter_1133.code_ptr)

    steps_taken = 1 + local.iter_1133.steps_taken
  }
}

locals {
  code_1135 = (try(local.iter_1134.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1134.code_ptr, local.iter_1134.code_ptr + 2)
    : [null])

  input_1135 = (local.code_1135[0] == ","
    ? substr(local.input_1134, local.code_1135[1], -1)
    : local.input_1134)

  iter_1135 = try(local.iter_1134.code_ptr >= length(var.code), true) ? local.iter_1134 : {
    output = (local.code_1135[0] == "."
      ? "${local.iter_1134.output}${join("", [for _ in range(local.code_1135[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1134.tape[local.iter_1134.tape_ptr]))])}"
      : local.iter_1134.output)
    
    tape = (
      local.code_1135[0] == "+"
        ? [for i, b in local.iter_1134.tape : (i == local.iter_1134.tape_ptr ? (b + local.code_1135[1]) % 256 : b)] :
      local.code_1135[0] == "-"
        ? [for i, b in local.iter_1134.tape : (i == local.iter_1134.tape_ptr ? (b - local.code_1135[1] + 256) % 256 : b)] :
      local.code_1135[0] == ","
        ? [for i, b in local.iter_1134.tape : (i == local.iter_1134.tape_ptr ? local.ascii_lookup[substr(local.input_1135, 0, 1)] : b)]
        : local.iter_1134.tape)

    tape_ptr = (
      local.code_1135[0] == "<"
        ? local.iter_1134.tape_ptr - local.code_1135[1] :
      local.code_1135[0] == ">"
        ? local.iter_1134.tape_ptr + local.code_1135[1]
        : local.iter_1134.tape_ptr)

    code_ptr = 2 + (
      local.code_1135[0] == "["
        ? local.iter_1134.tape[local.iter_1134.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1134.code_ptr)] : local.iter_1134.code_ptr :
      local.code_1135[0] == "]"
        ? local.iter_1134.tape[local.iter_1134.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1134.code_ptr)] : local.iter_1134.code_ptr
        : local.iter_1134.code_ptr)

    steps_taken = 1 + local.iter_1134.steps_taken
  }
}

locals {
  code_1136 = (try(local.iter_1135.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1135.code_ptr, local.iter_1135.code_ptr + 2)
    : [null])

  input_1136 = (local.code_1136[0] == ","
    ? substr(local.input_1135, local.code_1136[1], -1)
    : local.input_1135)

  iter_1136 = try(local.iter_1135.code_ptr >= length(var.code), true) ? local.iter_1135 : {
    output = (local.code_1136[0] == "."
      ? "${local.iter_1135.output}${join("", [for _ in range(local.code_1136[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1135.tape[local.iter_1135.tape_ptr]))])}"
      : local.iter_1135.output)
    
    tape = (
      local.code_1136[0] == "+"
        ? [for i, b in local.iter_1135.tape : (i == local.iter_1135.tape_ptr ? (b + local.code_1136[1]) % 256 : b)] :
      local.code_1136[0] == "-"
        ? [for i, b in local.iter_1135.tape : (i == local.iter_1135.tape_ptr ? (b - local.code_1136[1] + 256) % 256 : b)] :
      local.code_1136[0] == ","
        ? [for i, b in local.iter_1135.tape : (i == local.iter_1135.tape_ptr ? local.ascii_lookup[substr(local.input_1136, 0, 1)] : b)]
        : local.iter_1135.tape)

    tape_ptr = (
      local.code_1136[0] == "<"
        ? local.iter_1135.tape_ptr - local.code_1136[1] :
      local.code_1136[0] == ">"
        ? local.iter_1135.tape_ptr + local.code_1136[1]
        : local.iter_1135.tape_ptr)

    code_ptr = 2 + (
      local.code_1136[0] == "["
        ? local.iter_1135.tape[local.iter_1135.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1135.code_ptr)] : local.iter_1135.code_ptr :
      local.code_1136[0] == "]"
        ? local.iter_1135.tape[local.iter_1135.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1135.code_ptr)] : local.iter_1135.code_ptr
        : local.iter_1135.code_ptr)

    steps_taken = 1 + local.iter_1135.steps_taken
  }
}

locals {
  code_1137 = (try(local.iter_1136.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1136.code_ptr, local.iter_1136.code_ptr + 2)
    : [null])

  input_1137 = (local.code_1137[0] == ","
    ? substr(local.input_1136, local.code_1137[1], -1)
    : local.input_1136)

  iter_1137 = try(local.iter_1136.code_ptr >= length(var.code), true) ? local.iter_1136 : {
    output = (local.code_1137[0] == "."
      ? "${local.iter_1136.output}${join("", [for _ in range(local.code_1137[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1136.tape[local.iter_1136.tape_ptr]))])}"
      : local.iter_1136.output)
    
    tape = (
      local.code_1137[0] == "+"
        ? [for i, b in local.iter_1136.tape : (i == local.iter_1136.tape_ptr ? (b + local.code_1137[1]) % 256 : b)] :
      local.code_1137[0] == "-"
        ? [for i, b in local.iter_1136.tape : (i == local.iter_1136.tape_ptr ? (b - local.code_1137[1] + 256) % 256 : b)] :
      local.code_1137[0] == ","
        ? [for i, b in local.iter_1136.tape : (i == local.iter_1136.tape_ptr ? local.ascii_lookup[substr(local.input_1137, 0, 1)] : b)]
        : local.iter_1136.tape)

    tape_ptr = (
      local.code_1137[0] == "<"
        ? local.iter_1136.tape_ptr - local.code_1137[1] :
      local.code_1137[0] == ">"
        ? local.iter_1136.tape_ptr + local.code_1137[1]
        : local.iter_1136.tape_ptr)

    code_ptr = 2 + (
      local.code_1137[0] == "["
        ? local.iter_1136.tape[local.iter_1136.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1136.code_ptr)] : local.iter_1136.code_ptr :
      local.code_1137[0] == "]"
        ? local.iter_1136.tape[local.iter_1136.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1136.code_ptr)] : local.iter_1136.code_ptr
        : local.iter_1136.code_ptr)

    steps_taken = 1 + local.iter_1136.steps_taken
  }
}

locals {
  code_1138 = (try(local.iter_1137.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1137.code_ptr, local.iter_1137.code_ptr + 2)
    : [null])

  input_1138 = (local.code_1138[0] == ","
    ? substr(local.input_1137, local.code_1138[1], -1)
    : local.input_1137)

  iter_1138 = try(local.iter_1137.code_ptr >= length(var.code), true) ? local.iter_1137 : {
    output = (local.code_1138[0] == "."
      ? "${local.iter_1137.output}${join("", [for _ in range(local.code_1138[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1137.tape[local.iter_1137.tape_ptr]))])}"
      : local.iter_1137.output)
    
    tape = (
      local.code_1138[0] == "+"
        ? [for i, b in local.iter_1137.tape : (i == local.iter_1137.tape_ptr ? (b + local.code_1138[1]) % 256 : b)] :
      local.code_1138[0] == "-"
        ? [for i, b in local.iter_1137.tape : (i == local.iter_1137.tape_ptr ? (b - local.code_1138[1] + 256) % 256 : b)] :
      local.code_1138[0] == ","
        ? [for i, b in local.iter_1137.tape : (i == local.iter_1137.tape_ptr ? local.ascii_lookup[substr(local.input_1138, 0, 1)] : b)]
        : local.iter_1137.tape)

    tape_ptr = (
      local.code_1138[0] == "<"
        ? local.iter_1137.tape_ptr - local.code_1138[1] :
      local.code_1138[0] == ">"
        ? local.iter_1137.tape_ptr + local.code_1138[1]
        : local.iter_1137.tape_ptr)

    code_ptr = 2 + (
      local.code_1138[0] == "["
        ? local.iter_1137.tape[local.iter_1137.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1137.code_ptr)] : local.iter_1137.code_ptr :
      local.code_1138[0] == "]"
        ? local.iter_1137.tape[local.iter_1137.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1137.code_ptr)] : local.iter_1137.code_ptr
        : local.iter_1137.code_ptr)

    steps_taken = 1 + local.iter_1137.steps_taken
  }
}

locals {
  code_1139 = (try(local.iter_1138.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1138.code_ptr, local.iter_1138.code_ptr + 2)
    : [null])

  input_1139 = (local.code_1139[0] == ","
    ? substr(local.input_1138, local.code_1139[1], -1)
    : local.input_1138)

  iter_1139 = try(local.iter_1138.code_ptr >= length(var.code), true) ? local.iter_1138 : {
    output = (local.code_1139[0] == "."
      ? "${local.iter_1138.output}${join("", [for _ in range(local.code_1139[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1138.tape[local.iter_1138.tape_ptr]))])}"
      : local.iter_1138.output)
    
    tape = (
      local.code_1139[0] == "+"
        ? [for i, b in local.iter_1138.tape : (i == local.iter_1138.tape_ptr ? (b + local.code_1139[1]) % 256 : b)] :
      local.code_1139[0] == "-"
        ? [for i, b in local.iter_1138.tape : (i == local.iter_1138.tape_ptr ? (b - local.code_1139[1] + 256) % 256 : b)] :
      local.code_1139[0] == ","
        ? [for i, b in local.iter_1138.tape : (i == local.iter_1138.tape_ptr ? local.ascii_lookup[substr(local.input_1139, 0, 1)] : b)]
        : local.iter_1138.tape)

    tape_ptr = (
      local.code_1139[0] == "<"
        ? local.iter_1138.tape_ptr - local.code_1139[1] :
      local.code_1139[0] == ">"
        ? local.iter_1138.tape_ptr + local.code_1139[1]
        : local.iter_1138.tape_ptr)

    code_ptr = 2 + (
      local.code_1139[0] == "["
        ? local.iter_1138.tape[local.iter_1138.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1138.code_ptr)] : local.iter_1138.code_ptr :
      local.code_1139[0] == "]"
        ? local.iter_1138.tape[local.iter_1138.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1138.code_ptr)] : local.iter_1138.code_ptr
        : local.iter_1138.code_ptr)

    steps_taken = 1 + local.iter_1138.steps_taken
  }
}

locals {
  code_1140 = (try(local.iter_1139.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1139.code_ptr, local.iter_1139.code_ptr + 2)
    : [null])

  input_1140 = (local.code_1140[0] == ","
    ? substr(local.input_1139, local.code_1140[1], -1)
    : local.input_1139)

  iter_1140 = try(local.iter_1139.code_ptr >= length(var.code), true) ? local.iter_1139 : {
    output = (local.code_1140[0] == "."
      ? "${local.iter_1139.output}${join("", [for _ in range(local.code_1140[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1139.tape[local.iter_1139.tape_ptr]))])}"
      : local.iter_1139.output)
    
    tape = (
      local.code_1140[0] == "+"
        ? [for i, b in local.iter_1139.tape : (i == local.iter_1139.tape_ptr ? (b + local.code_1140[1]) % 256 : b)] :
      local.code_1140[0] == "-"
        ? [for i, b in local.iter_1139.tape : (i == local.iter_1139.tape_ptr ? (b - local.code_1140[1] + 256) % 256 : b)] :
      local.code_1140[0] == ","
        ? [for i, b in local.iter_1139.tape : (i == local.iter_1139.tape_ptr ? local.ascii_lookup[substr(local.input_1140, 0, 1)] : b)]
        : local.iter_1139.tape)

    tape_ptr = (
      local.code_1140[0] == "<"
        ? local.iter_1139.tape_ptr - local.code_1140[1] :
      local.code_1140[0] == ">"
        ? local.iter_1139.tape_ptr + local.code_1140[1]
        : local.iter_1139.tape_ptr)

    code_ptr = 2 + (
      local.code_1140[0] == "["
        ? local.iter_1139.tape[local.iter_1139.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1139.code_ptr)] : local.iter_1139.code_ptr :
      local.code_1140[0] == "]"
        ? local.iter_1139.tape[local.iter_1139.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1139.code_ptr)] : local.iter_1139.code_ptr
        : local.iter_1139.code_ptr)

    steps_taken = 1 + local.iter_1139.steps_taken
  }
}

locals {
  code_1141 = (try(local.iter_1140.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1140.code_ptr, local.iter_1140.code_ptr + 2)
    : [null])

  input_1141 = (local.code_1141[0] == ","
    ? substr(local.input_1140, local.code_1141[1], -1)
    : local.input_1140)

  iter_1141 = try(local.iter_1140.code_ptr >= length(var.code), true) ? local.iter_1140 : {
    output = (local.code_1141[0] == "."
      ? "${local.iter_1140.output}${join("", [for _ in range(local.code_1141[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1140.tape[local.iter_1140.tape_ptr]))])}"
      : local.iter_1140.output)
    
    tape = (
      local.code_1141[0] == "+"
        ? [for i, b in local.iter_1140.tape : (i == local.iter_1140.tape_ptr ? (b + local.code_1141[1]) % 256 : b)] :
      local.code_1141[0] == "-"
        ? [for i, b in local.iter_1140.tape : (i == local.iter_1140.tape_ptr ? (b - local.code_1141[1] + 256) % 256 : b)] :
      local.code_1141[0] == ","
        ? [for i, b in local.iter_1140.tape : (i == local.iter_1140.tape_ptr ? local.ascii_lookup[substr(local.input_1141, 0, 1)] : b)]
        : local.iter_1140.tape)

    tape_ptr = (
      local.code_1141[0] == "<"
        ? local.iter_1140.tape_ptr - local.code_1141[1] :
      local.code_1141[0] == ">"
        ? local.iter_1140.tape_ptr + local.code_1141[1]
        : local.iter_1140.tape_ptr)

    code_ptr = 2 + (
      local.code_1141[0] == "["
        ? local.iter_1140.tape[local.iter_1140.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1140.code_ptr)] : local.iter_1140.code_ptr :
      local.code_1141[0] == "]"
        ? local.iter_1140.tape[local.iter_1140.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1140.code_ptr)] : local.iter_1140.code_ptr
        : local.iter_1140.code_ptr)

    steps_taken = 1 + local.iter_1140.steps_taken
  }
}

locals {
  code_1142 = (try(local.iter_1141.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1141.code_ptr, local.iter_1141.code_ptr + 2)
    : [null])

  input_1142 = (local.code_1142[0] == ","
    ? substr(local.input_1141, local.code_1142[1], -1)
    : local.input_1141)

  iter_1142 = try(local.iter_1141.code_ptr >= length(var.code), true) ? local.iter_1141 : {
    output = (local.code_1142[0] == "."
      ? "${local.iter_1141.output}${join("", [for _ in range(local.code_1142[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1141.tape[local.iter_1141.tape_ptr]))])}"
      : local.iter_1141.output)
    
    tape = (
      local.code_1142[0] == "+"
        ? [for i, b in local.iter_1141.tape : (i == local.iter_1141.tape_ptr ? (b + local.code_1142[1]) % 256 : b)] :
      local.code_1142[0] == "-"
        ? [for i, b in local.iter_1141.tape : (i == local.iter_1141.tape_ptr ? (b - local.code_1142[1] + 256) % 256 : b)] :
      local.code_1142[0] == ","
        ? [for i, b in local.iter_1141.tape : (i == local.iter_1141.tape_ptr ? local.ascii_lookup[substr(local.input_1142, 0, 1)] : b)]
        : local.iter_1141.tape)

    tape_ptr = (
      local.code_1142[0] == "<"
        ? local.iter_1141.tape_ptr - local.code_1142[1] :
      local.code_1142[0] == ">"
        ? local.iter_1141.tape_ptr + local.code_1142[1]
        : local.iter_1141.tape_ptr)

    code_ptr = 2 + (
      local.code_1142[0] == "["
        ? local.iter_1141.tape[local.iter_1141.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1141.code_ptr)] : local.iter_1141.code_ptr :
      local.code_1142[0] == "]"
        ? local.iter_1141.tape[local.iter_1141.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1141.code_ptr)] : local.iter_1141.code_ptr
        : local.iter_1141.code_ptr)

    steps_taken = 1 + local.iter_1141.steps_taken
  }
}

locals {
  code_1143 = (try(local.iter_1142.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1142.code_ptr, local.iter_1142.code_ptr + 2)
    : [null])

  input_1143 = (local.code_1143[0] == ","
    ? substr(local.input_1142, local.code_1143[1], -1)
    : local.input_1142)

  iter_1143 = try(local.iter_1142.code_ptr >= length(var.code), true) ? local.iter_1142 : {
    output = (local.code_1143[0] == "."
      ? "${local.iter_1142.output}${join("", [for _ in range(local.code_1143[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1142.tape[local.iter_1142.tape_ptr]))])}"
      : local.iter_1142.output)
    
    tape = (
      local.code_1143[0] == "+"
        ? [for i, b in local.iter_1142.tape : (i == local.iter_1142.tape_ptr ? (b + local.code_1143[1]) % 256 : b)] :
      local.code_1143[0] == "-"
        ? [for i, b in local.iter_1142.tape : (i == local.iter_1142.tape_ptr ? (b - local.code_1143[1] + 256) % 256 : b)] :
      local.code_1143[0] == ","
        ? [for i, b in local.iter_1142.tape : (i == local.iter_1142.tape_ptr ? local.ascii_lookup[substr(local.input_1143, 0, 1)] : b)]
        : local.iter_1142.tape)

    tape_ptr = (
      local.code_1143[0] == "<"
        ? local.iter_1142.tape_ptr - local.code_1143[1] :
      local.code_1143[0] == ">"
        ? local.iter_1142.tape_ptr + local.code_1143[1]
        : local.iter_1142.tape_ptr)

    code_ptr = 2 + (
      local.code_1143[0] == "["
        ? local.iter_1142.tape[local.iter_1142.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1142.code_ptr)] : local.iter_1142.code_ptr :
      local.code_1143[0] == "]"
        ? local.iter_1142.tape[local.iter_1142.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1142.code_ptr)] : local.iter_1142.code_ptr
        : local.iter_1142.code_ptr)

    steps_taken = 1 + local.iter_1142.steps_taken
  }
}

locals {
  code_1144 = (try(local.iter_1143.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1143.code_ptr, local.iter_1143.code_ptr + 2)
    : [null])

  input_1144 = (local.code_1144[0] == ","
    ? substr(local.input_1143, local.code_1144[1], -1)
    : local.input_1143)

  iter_1144 = try(local.iter_1143.code_ptr >= length(var.code), true) ? local.iter_1143 : {
    output = (local.code_1144[0] == "."
      ? "${local.iter_1143.output}${join("", [for _ in range(local.code_1144[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1143.tape[local.iter_1143.tape_ptr]))])}"
      : local.iter_1143.output)
    
    tape = (
      local.code_1144[0] == "+"
        ? [for i, b in local.iter_1143.tape : (i == local.iter_1143.tape_ptr ? (b + local.code_1144[1]) % 256 : b)] :
      local.code_1144[0] == "-"
        ? [for i, b in local.iter_1143.tape : (i == local.iter_1143.tape_ptr ? (b - local.code_1144[1] + 256) % 256 : b)] :
      local.code_1144[0] == ","
        ? [for i, b in local.iter_1143.tape : (i == local.iter_1143.tape_ptr ? local.ascii_lookup[substr(local.input_1144, 0, 1)] : b)]
        : local.iter_1143.tape)

    tape_ptr = (
      local.code_1144[0] == "<"
        ? local.iter_1143.tape_ptr - local.code_1144[1] :
      local.code_1144[0] == ">"
        ? local.iter_1143.tape_ptr + local.code_1144[1]
        : local.iter_1143.tape_ptr)

    code_ptr = 2 + (
      local.code_1144[0] == "["
        ? local.iter_1143.tape[local.iter_1143.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1143.code_ptr)] : local.iter_1143.code_ptr :
      local.code_1144[0] == "]"
        ? local.iter_1143.tape[local.iter_1143.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1143.code_ptr)] : local.iter_1143.code_ptr
        : local.iter_1143.code_ptr)

    steps_taken = 1 + local.iter_1143.steps_taken
  }
}

locals {
  code_1145 = (try(local.iter_1144.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1144.code_ptr, local.iter_1144.code_ptr + 2)
    : [null])

  input_1145 = (local.code_1145[0] == ","
    ? substr(local.input_1144, local.code_1145[1], -1)
    : local.input_1144)

  iter_1145 = try(local.iter_1144.code_ptr >= length(var.code), true) ? local.iter_1144 : {
    output = (local.code_1145[0] == "."
      ? "${local.iter_1144.output}${join("", [for _ in range(local.code_1145[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1144.tape[local.iter_1144.tape_ptr]))])}"
      : local.iter_1144.output)
    
    tape = (
      local.code_1145[0] == "+"
        ? [for i, b in local.iter_1144.tape : (i == local.iter_1144.tape_ptr ? (b + local.code_1145[1]) % 256 : b)] :
      local.code_1145[0] == "-"
        ? [for i, b in local.iter_1144.tape : (i == local.iter_1144.tape_ptr ? (b - local.code_1145[1] + 256) % 256 : b)] :
      local.code_1145[0] == ","
        ? [for i, b in local.iter_1144.tape : (i == local.iter_1144.tape_ptr ? local.ascii_lookup[substr(local.input_1145, 0, 1)] : b)]
        : local.iter_1144.tape)

    tape_ptr = (
      local.code_1145[0] == "<"
        ? local.iter_1144.tape_ptr - local.code_1145[1] :
      local.code_1145[0] == ">"
        ? local.iter_1144.tape_ptr + local.code_1145[1]
        : local.iter_1144.tape_ptr)

    code_ptr = 2 + (
      local.code_1145[0] == "["
        ? local.iter_1144.tape[local.iter_1144.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1144.code_ptr)] : local.iter_1144.code_ptr :
      local.code_1145[0] == "]"
        ? local.iter_1144.tape[local.iter_1144.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1144.code_ptr)] : local.iter_1144.code_ptr
        : local.iter_1144.code_ptr)

    steps_taken = 1 + local.iter_1144.steps_taken
  }
}

locals {
  code_1146 = (try(local.iter_1145.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1145.code_ptr, local.iter_1145.code_ptr + 2)
    : [null])

  input_1146 = (local.code_1146[0] == ","
    ? substr(local.input_1145, local.code_1146[1], -1)
    : local.input_1145)

  iter_1146 = try(local.iter_1145.code_ptr >= length(var.code), true) ? local.iter_1145 : {
    output = (local.code_1146[0] == "."
      ? "${local.iter_1145.output}${join("", [for _ in range(local.code_1146[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1145.tape[local.iter_1145.tape_ptr]))])}"
      : local.iter_1145.output)
    
    tape = (
      local.code_1146[0] == "+"
        ? [for i, b in local.iter_1145.tape : (i == local.iter_1145.tape_ptr ? (b + local.code_1146[1]) % 256 : b)] :
      local.code_1146[0] == "-"
        ? [for i, b in local.iter_1145.tape : (i == local.iter_1145.tape_ptr ? (b - local.code_1146[1] + 256) % 256 : b)] :
      local.code_1146[0] == ","
        ? [for i, b in local.iter_1145.tape : (i == local.iter_1145.tape_ptr ? local.ascii_lookup[substr(local.input_1146, 0, 1)] : b)]
        : local.iter_1145.tape)

    tape_ptr = (
      local.code_1146[0] == "<"
        ? local.iter_1145.tape_ptr - local.code_1146[1] :
      local.code_1146[0] == ">"
        ? local.iter_1145.tape_ptr + local.code_1146[1]
        : local.iter_1145.tape_ptr)

    code_ptr = 2 + (
      local.code_1146[0] == "["
        ? local.iter_1145.tape[local.iter_1145.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1145.code_ptr)] : local.iter_1145.code_ptr :
      local.code_1146[0] == "]"
        ? local.iter_1145.tape[local.iter_1145.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1145.code_ptr)] : local.iter_1145.code_ptr
        : local.iter_1145.code_ptr)

    steps_taken = 1 + local.iter_1145.steps_taken
  }
}

locals {
  code_1147 = (try(local.iter_1146.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1146.code_ptr, local.iter_1146.code_ptr + 2)
    : [null])

  input_1147 = (local.code_1147[0] == ","
    ? substr(local.input_1146, local.code_1147[1], -1)
    : local.input_1146)

  iter_1147 = try(local.iter_1146.code_ptr >= length(var.code), true) ? local.iter_1146 : {
    output = (local.code_1147[0] == "."
      ? "${local.iter_1146.output}${join("", [for _ in range(local.code_1147[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1146.tape[local.iter_1146.tape_ptr]))])}"
      : local.iter_1146.output)
    
    tape = (
      local.code_1147[0] == "+"
        ? [for i, b in local.iter_1146.tape : (i == local.iter_1146.tape_ptr ? (b + local.code_1147[1]) % 256 : b)] :
      local.code_1147[0] == "-"
        ? [for i, b in local.iter_1146.tape : (i == local.iter_1146.tape_ptr ? (b - local.code_1147[1] + 256) % 256 : b)] :
      local.code_1147[0] == ","
        ? [for i, b in local.iter_1146.tape : (i == local.iter_1146.tape_ptr ? local.ascii_lookup[substr(local.input_1147, 0, 1)] : b)]
        : local.iter_1146.tape)

    tape_ptr = (
      local.code_1147[0] == "<"
        ? local.iter_1146.tape_ptr - local.code_1147[1] :
      local.code_1147[0] == ">"
        ? local.iter_1146.tape_ptr + local.code_1147[1]
        : local.iter_1146.tape_ptr)

    code_ptr = 2 + (
      local.code_1147[0] == "["
        ? local.iter_1146.tape[local.iter_1146.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1146.code_ptr)] : local.iter_1146.code_ptr :
      local.code_1147[0] == "]"
        ? local.iter_1146.tape[local.iter_1146.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1146.code_ptr)] : local.iter_1146.code_ptr
        : local.iter_1146.code_ptr)

    steps_taken = 1 + local.iter_1146.steps_taken
  }
}

locals {
  code_1148 = (try(local.iter_1147.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1147.code_ptr, local.iter_1147.code_ptr + 2)
    : [null])

  input_1148 = (local.code_1148[0] == ","
    ? substr(local.input_1147, local.code_1148[1], -1)
    : local.input_1147)

  iter_1148 = try(local.iter_1147.code_ptr >= length(var.code), true) ? local.iter_1147 : {
    output = (local.code_1148[0] == "."
      ? "${local.iter_1147.output}${join("", [for _ in range(local.code_1148[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1147.tape[local.iter_1147.tape_ptr]))])}"
      : local.iter_1147.output)
    
    tape = (
      local.code_1148[0] == "+"
        ? [for i, b in local.iter_1147.tape : (i == local.iter_1147.tape_ptr ? (b + local.code_1148[1]) % 256 : b)] :
      local.code_1148[0] == "-"
        ? [for i, b in local.iter_1147.tape : (i == local.iter_1147.tape_ptr ? (b - local.code_1148[1] + 256) % 256 : b)] :
      local.code_1148[0] == ","
        ? [for i, b in local.iter_1147.tape : (i == local.iter_1147.tape_ptr ? local.ascii_lookup[substr(local.input_1148, 0, 1)] : b)]
        : local.iter_1147.tape)

    tape_ptr = (
      local.code_1148[0] == "<"
        ? local.iter_1147.tape_ptr - local.code_1148[1] :
      local.code_1148[0] == ">"
        ? local.iter_1147.tape_ptr + local.code_1148[1]
        : local.iter_1147.tape_ptr)

    code_ptr = 2 + (
      local.code_1148[0] == "["
        ? local.iter_1147.tape[local.iter_1147.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1147.code_ptr)] : local.iter_1147.code_ptr :
      local.code_1148[0] == "]"
        ? local.iter_1147.tape[local.iter_1147.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1147.code_ptr)] : local.iter_1147.code_ptr
        : local.iter_1147.code_ptr)

    steps_taken = 1 + local.iter_1147.steps_taken
  }
}

locals {
  code_1149 = (try(local.iter_1148.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1148.code_ptr, local.iter_1148.code_ptr + 2)
    : [null])

  input_1149 = (local.code_1149[0] == ","
    ? substr(local.input_1148, local.code_1149[1], -1)
    : local.input_1148)

  iter_1149 = try(local.iter_1148.code_ptr >= length(var.code), true) ? local.iter_1148 : {
    output = (local.code_1149[0] == "."
      ? "${local.iter_1148.output}${join("", [for _ in range(local.code_1149[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1148.tape[local.iter_1148.tape_ptr]))])}"
      : local.iter_1148.output)
    
    tape = (
      local.code_1149[0] == "+"
        ? [for i, b in local.iter_1148.tape : (i == local.iter_1148.tape_ptr ? (b + local.code_1149[1]) % 256 : b)] :
      local.code_1149[0] == "-"
        ? [for i, b in local.iter_1148.tape : (i == local.iter_1148.tape_ptr ? (b - local.code_1149[1] + 256) % 256 : b)] :
      local.code_1149[0] == ","
        ? [for i, b in local.iter_1148.tape : (i == local.iter_1148.tape_ptr ? local.ascii_lookup[substr(local.input_1149, 0, 1)] : b)]
        : local.iter_1148.tape)

    tape_ptr = (
      local.code_1149[0] == "<"
        ? local.iter_1148.tape_ptr - local.code_1149[1] :
      local.code_1149[0] == ">"
        ? local.iter_1148.tape_ptr + local.code_1149[1]
        : local.iter_1148.tape_ptr)

    code_ptr = 2 + (
      local.code_1149[0] == "["
        ? local.iter_1148.tape[local.iter_1148.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1148.code_ptr)] : local.iter_1148.code_ptr :
      local.code_1149[0] == "]"
        ? local.iter_1148.tape[local.iter_1148.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1148.code_ptr)] : local.iter_1148.code_ptr
        : local.iter_1148.code_ptr)

    steps_taken = 1 + local.iter_1148.steps_taken
  }
}

locals {
  code_1150 = (try(local.iter_1149.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1149.code_ptr, local.iter_1149.code_ptr + 2)
    : [null])

  input_1150 = (local.code_1150[0] == ","
    ? substr(local.input_1149, local.code_1150[1], -1)
    : local.input_1149)

  iter_1150 = try(local.iter_1149.code_ptr >= length(var.code), true) ? local.iter_1149 : {
    output = (local.code_1150[0] == "."
      ? "${local.iter_1149.output}${join("", [for _ in range(local.code_1150[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1149.tape[local.iter_1149.tape_ptr]))])}"
      : local.iter_1149.output)
    
    tape = (
      local.code_1150[0] == "+"
        ? [for i, b in local.iter_1149.tape : (i == local.iter_1149.tape_ptr ? (b + local.code_1150[1]) % 256 : b)] :
      local.code_1150[0] == "-"
        ? [for i, b in local.iter_1149.tape : (i == local.iter_1149.tape_ptr ? (b - local.code_1150[1] + 256) % 256 : b)] :
      local.code_1150[0] == ","
        ? [for i, b in local.iter_1149.tape : (i == local.iter_1149.tape_ptr ? local.ascii_lookup[substr(local.input_1150, 0, 1)] : b)]
        : local.iter_1149.tape)

    tape_ptr = (
      local.code_1150[0] == "<"
        ? local.iter_1149.tape_ptr - local.code_1150[1] :
      local.code_1150[0] == ">"
        ? local.iter_1149.tape_ptr + local.code_1150[1]
        : local.iter_1149.tape_ptr)

    code_ptr = 2 + (
      local.code_1150[0] == "["
        ? local.iter_1149.tape[local.iter_1149.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1149.code_ptr)] : local.iter_1149.code_ptr :
      local.code_1150[0] == "]"
        ? local.iter_1149.tape[local.iter_1149.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1149.code_ptr)] : local.iter_1149.code_ptr
        : local.iter_1149.code_ptr)

    steps_taken = 1 + local.iter_1149.steps_taken
  }
}

locals {
  code_1151 = (try(local.iter_1150.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1150.code_ptr, local.iter_1150.code_ptr + 2)
    : [null])

  input_1151 = (local.code_1151[0] == ","
    ? substr(local.input_1150, local.code_1151[1], -1)
    : local.input_1150)

  iter_1151 = try(local.iter_1150.code_ptr >= length(var.code), true) ? local.iter_1150 : {
    output = (local.code_1151[0] == "."
      ? "${local.iter_1150.output}${join("", [for _ in range(local.code_1151[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1150.tape[local.iter_1150.tape_ptr]))])}"
      : local.iter_1150.output)
    
    tape = (
      local.code_1151[0] == "+"
        ? [for i, b in local.iter_1150.tape : (i == local.iter_1150.tape_ptr ? (b + local.code_1151[1]) % 256 : b)] :
      local.code_1151[0] == "-"
        ? [for i, b in local.iter_1150.tape : (i == local.iter_1150.tape_ptr ? (b - local.code_1151[1] + 256) % 256 : b)] :
      local.code_1151[0] == ","
        ? [for i, b in local.iter_1150.tape : (i == local.iter_1150.tape_ptr ? local.ascii_lookup[substr(local.input_1151, 0, 1)] : b)]
        : local.iter_1150.tape)

    tape_ptr = (
      local.code_1151[0] == "<"
        ? local.iter_1150.tape_ptr - local.code_1151[1] :
      local.code_1151[0] == ">"
        ? local.iter_1150.tape_ptr + local.code_1151[1]
        : local.iter_1150.tape_ptr)

    code_ptr = 2 + (
      local.code_1151[0] == "["
        ? local.iter_1150.tape[local.iter_1150.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1150.code_ptr)] : local.iter_1150.code_ptr :
      local.code_1151[0] == "]"
        ? local.iter_1150.tape[local.iter_1150.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1150.code_ptr)] : local.iter_1150.code_ptr
        : local.iter_1150.code_ptr)

    steps_taken = 1 + local.iter_1150.steps_taken
  }
}

locals {
  code_1152 = (try(local.iter_1151.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1151.code_ptr, local.iter_1151.code_ptr + 2)
    : [null])

  input_1152 = (local.code_1152[0] == ","
    ? substr(local.input_1151, local.code_1152[1], -1)
    : local.input_1151)

  iter_1152 = try(local.iter_1151.code_ptr >= length(var.code), true) ? local.iter_1151 : {
    output = (local.code_1152[0] == "."
      ? "${local.iter_1151.output}${join("", [for _ in range(local.code_1152[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1151.tape[local.iter_1151.tape_ptr]))])}"
      : local.iter_1151.output)
    
    tape = (
      local.code_1152[0] == "+"
        ? [for i, b in local.iter_1151.tape : (i == local.iter_1151.tape_ptr ? (b + local.code_1152[1]) % 256 : b)] :
      local.code_1152[0] == "-"
        ? [for i, b in local.iter_1151.tape : (i == local.iter_1151.tape_ptr ? (b - local.code_1152[1] + 256) % 256 : b)] :
      local.code_1152[0] == ","
        ? [for i, b in local.iter_1151.tape : (i == local.iter_1151.tape_ptr ? local.ascii_lookup[substr(local.input_1152, 0, 1)] : b)]
        : local.iter_1151.tape)

    tape_ptr = (
      local.code_1152[0] == "<"
        ? local.iter_1151.tape_ptr - local.code_1152[1] :
      local.code_1152[0] == ">"
        ? local.iter_1151.tape_ptr + local.code_1152[1]
        : local.iter_1151.tape_ptr)

    code_ptr = 2 + (
      local.code_1152[0] == "["
        ? local.iter_1151.tape[local.iter_1151.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1151.code_ptr)] : local.iter_1151.code_ptr :
      local.code_1152[0] == "]"
        ? local.iter_1151.tape[local.iter_1151.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1151.code_ptr)] : local.iter_1151.code_ptr
        : local.iter_1151.code_ptr)

    steps_taken = 1 + local.iter_1151.steps_taken
  }
}

locals {
  code_1153 = (try(local.iter_1152.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1152.code_ptr, local.iter_1152.code_ptr + 2)
    : [null])

  input_1153 = (local.code_1153[0] == ","
    ? substr(local.input_1152, local.code_1153[1], -1)
    : local.input_1152)

  iter_1153 = try(local.iter_1152.code_ptr >= length(var.code), true) ? local.iter_1152 : {
    output = (local.code_1153[0] == "."
      ? "${local.iter_1152.output}${join("", [for _ in range(local.code_1153[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1152.tape[local.iter_1152.tape_ptr]))])}"
      : local.iter_1152.output)
    
    tape = (
      local.code_1153[0] == "+"
        ? [for i, b in local.iter_1152.tape : (i == local.iter_1152.tape_ptr ? (b + local.code_1153[1]) % 256 : b)] :
      local.code_1153[0] == "-"
        ? [for i, b in local.iter_1152.tape : (i == local.iter_1152.tape_ptr ? (b - local.code_1153[1] + 256) % 256 : b)] :
      local.code_1153[0] == ","
        ? [for i, b in local.iter_1152.tape : (i == local.iter_1152.tape_ptr ? local.ascii_lookup[substr(local.input_1153, 0, 1)] : b)]
        : local.iter_1152.tape)

    tape_ptr = (
      local.code_1153[0] == "<"
        ? local.iter_1152.tape_ptr - local.code_1153[1] :
      local.code_1153[0] == ">"
        ? local.iter_1152.tape_ptr + local.code_1153[1]
        : local.iter_1152.tape_ptr)

    code_ptr = 2 + (
      local.code_1153[0] == "["
        ? local.iter_1152.tape[local.iter_1152.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1152.code_ptr)] : local.iter_1152.code_ptr :
      local.code_1153[0] == "]"
        ? local.iter_1152.tape[local.iter_1152.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1152.code_ptr)] : local.iter_1152.code_ptr
        : local.iter_1152.code_ptr)

    steps_taken = 1 + local.iter_1152.steps_taken
  }
}

locals {
  code_1154 = (try(local.iter_1153.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1153.code_ptr, local.iter_1153.code_ptr + 2)
    : [null])

  input_1154 = (local.code_1154[0] == ","
    ? substr(local.input_1153, local.code_1154[1], -1)
    : local.input_1153)

  iter_1154 = try(local.iter_1153.code_ptr >= length(var.code), true) ? local.iter_1153 : {
    output = (local.code_1154[0] == "."
      ? "${local.iter_1153.output}${join("", [for _ in range(local.code_1154[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1153.tape[local.iter_1153.tape_ptr]))])}"
      : local.iter_1153.output)
    
    tape = (
      local.code_1154[0] == "+"
        ? [for i, b in local.iter_1153.tape : (i == local.iter_1153.tape_ptr ? (b + local.code_1154[1]) % 256 : b)] :
      local.code_1154[0] == "-"
        ? [for i, b in local.iter_1153.tape : (i == local.iter_1153.tape_ptr ? (b - local.code_1154[1] + 256) % 256 : b)] :
      local.code_1154[0] == ","
        ? [for i, b in local.iter_1153.tape : (i == local.iter_1153.tape_ptr ? local.ascii_lookup[substr(local.input_1154, 0, 1)] : b)]
        : local.iter_1153.tape)

    tape_ptr = (
      local.code_1154[0] == "<"
        ? local.iter_1153.tape_ptr - local.code_1154[1] :
      local.code_1154[0] == ">"
        ? local.iter_1153.tape_ptr + local.code_1154[1]
        : local.iter_1153.tape_ptr)

    code_ptr = 2 + (
      local.code_1154[0] == "["
        ? local.iter_1153.tape[local.iter_1153.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1153.code_ptr)] : local.iter_1153.code_ptr :
      local.code_1154[0] == "]"
        ? local.iter_1153.tape[local.iter_1153.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1153.code_ptr)] : local.iter_1153.code_ptr
        : local.iter_1153.code_ptr)

    steps_taken = 1 + local.iter_1153.steps_taken
  }
}

locals {
  code_1155 = (try(local.iter_1154.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1154.code_ptr, local.iter_1154.code_ptr + 2)
    : [null])

  input_1155 = (local.code_1155[0] == ","
    ? substr(local.input_1154, local.code_1155[1], -1)
    : local.input_1154)

  iter_1155 = try(local.iter_1154.code_ptr >= length(var.code), true) ? local.iter_1154 : {
    output = (local.code_1155[0] == "."
      ? "${local.iter_1154.output}${join("", [for _ in range(local.code_1155[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1154.tape[local.iter_1154.tape_ptr]))])}"
      : local.iter_1154.output)
    
    tape = (
      local.code_1155[0] == "+"
        ? [for i, b in local.iter_1154.tape : (i == local.iter_1154.tape_ptr ? (b + local.code_1155[1]) % 256 : b)] :
      local.code_1155[0] == "-"
        ? [for i, b in local.iter_1154.tape : (i == local.iter_1154.tape_ptr ? (b - local.code_1155[1] + 256) % 256 : b)] :
      local.code_1155[0] == ","
        ? [for i, b in local.iter_1154.tape : (i == local.iter_1154.tape_ptr ? local.ascii_lookup[substr(local.input_1155, 0, 1)] : b)]
        : local.iter_1154.tape)

    tape_ptr = (
      local.code_1155[0] == "<"
        ? local.iter_1154.tape_ptr - local.code_1155[1] :
      local.code_1155[0] == ">"
        ? local.iter_1154.tape_ptr + local.code_1155[1]
        : local.iter_1154.tape_ptr)

    code_ptr = 2 + (
      local.code_1155[0] == "["
        ? local.iter_1154.tape[local.iter_1154.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1154.code_ptr)] : local.iter_1154.code_ptr :
      local.code_1155[0] == "]"
        ? local.iter_1154.tape[local.iter_1154.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1154.code_ptr)] : local.iter_1154.code_ptr
        : local.iter_1154.code_ptr)

    steps_taken = 1 + local.iter_1154.steps_taken
  }
}

locals {
  code_1156 = (try(local.iter_1155.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1155.code_ptr, local.iter_1155.code_ptr + 2)
    : [null])

  input_1156 = (local.code_1156[0] == ","
    ? substr(local.input_1155, local.code_1156[1], -1)
    : local.input_1155)

  iter_1156 = try(local.iter_1155.code_ptr >= length(var.code), true) ? local.iter_1155 : {
    output = (local.code_1156[0] == "."
      ? "${local.iter_1155.output}${join("", [for _ in range(local.code_1156[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1155.tape[local.iter_1155.tape_ptr]))])}"
      : local.iter_1155.output)
    
    tape = (
      local.code_1156[0] == "+"
        ? [for i, b in local.iter_1155.tape : (i == local.iter_1155.tape_ptr ? (b + local.code_1156[1]) % 256 : b)] :
      local.code_1156[0] == "-"
        ? [for i, b in local.iter_1155.tape : (i == local.iter_1155.tape_ptr ? (b - local.code_1156[1] + 256) % 256 : b)] :
      local.code_1156[0] == ","
        ? [for i, b in local.iter_1155.tape : (i == local.iter_1155.tape_ptr ? local.ascii_lookup[substr(local.input_1156, 0, 1)] : b)]
        : local.iter_1155.tape)

    tape_ptr = (
      local.code_1156[0] == "<"
        ? local.iter_1155.tape_ptr - local.code_1156[1] :
      local.code_1156[0] == ">"
        ? local.iter_1155.tape_ptr + local.code_1156[1]
        : local.iter_1155.tape_ptr)

    code_ptr = 2 + (
      local.code_1156[0] == "["
        ? local.iter_1155.tape[local.iter_1155.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1155.code_ptr)] : local.iter_1155.code_ptr :
      local.code_1156[0] == "]"
        ? local.iter_1155.tape[local.iter_1155.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1155.code_ptr)] : local.iter_1155.code_ptr
        : local.iter_1155.code_ptr)

    steps_taken = 1 + local.iter_1155.steps_taken
  }
}

locals {
  code_1157 = (try(local.iter_1156.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1156.code_ptr, local.iter_1156.code_ptr + 2)
    : [null])

  input_1157 = (local.code_1157[0] == ","
    ? substr(local.input_1156, local.code_1157[1], -1)
    : local.input_1156)

  iter_1157 = try(local.iter_1156.code_ptr >= length(var.code), true) ? local.iter_1156 : {
    output = (local.code_1157[0] == "."
      ? "${local.iter_1156.output}${join("", [for _ in range(local.code_1157[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1156.tape[local.iter_1156.tape_ptr]))])}"
      : local.iter_1156.output)
    
    tape = (
      local.code_1157[0] == "+"
        ? [for i, b in local.iter_1156.tape : (i == local.iter_1156.tape_ptr ? (b + local.code_1157[1]) % 256 : b)] :
      local.code_1157[0] == "-"
        ? [for i, b in local.iter_1156.tape : (i == local.iter_1156.tape_ptr ? (b - local.code_1157[1] + 256) % 256 : b)] :
      local.code_1157[0] == ","
        ? [for i, b in local.iter_1156.tape : (i == local.iter_1156.tape_ptr ? local.ascii_lookup[substr(local.input_1157, 0, 1)] : b)]
        : local.iter_1156.tape)

    tape_ptr = (
      local.code_1157[0] == "<"
        ? local.iter_1156.tape_ptr - local.code_1157[1] :
      local.code_1157[0] == ">"
        ? local.iter_1156.tape_ptr + local.code_1157[1]
        : local.iter_1156.tape_ptr)

    code_ptr = 2 + (
      local.code_1157[0] == "["
        ? local.iter_1156.tape[local.iter_1156.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1156.code_ptr)] : local.iter_1156.code_ptr :
      local.code_1157[0] == "]"
        ? local.iter_1156.tape[local.iter_1156.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1156.code_ptr)] : local.iter_1156.code_ptr
        : local.iter_1156.code_ptr)

    steps_taken = 1 + local.iter_1156.steps_taken
  }
}

locals {
  code_1158 = (try(local.iter_1157.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1157.code_ptr, local.iter_1157.code_ptr + 2)
    : [null])

  input_1158 = (local.code_1158[0] == ","
    ? substr(local.input_1157, local.code_1158[1], -1)
    : local.input_1157)

  iter_1158 = try(local.iter_1157.code_ptr >= length(var.code), true) ? local.iter_1157 : {
    output = (local.code_1158[0] == "."
      ? "${local.iter_1157.output}${join("", [for _ in range(local.code_1158[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1157.tape[local.iter_1157.tape_ptr]))])}"
      : local.iter_1157.output)
    
    tape = (
      local.code_1158[0] == "+"
        ? [for i, b in local.iter_1157.tape : (i == local.iter_1157.tape_ptr ? (b + local.code_1158[1]) % 256 : b)] :
      local.code_1158[0] == "-"
        ? [for i, b in local.iter_1157.tape : (i == local.iter_1157.tape_ptr ? (b - local.code_1158[1] + 256) % 256 : b)] :
      local.code_1158[0] == ","
        ? [for i, b in local.iter_1157.tape : (i == local.iter_1157.tape_ptr ? local.ascii_lookup[substr(local.input_1158, 0, 1)] : b)]
        : local.iter_1157.tape)

    tape_ptr = (
      local.code_1158[0] == "<"
        ? local.iter_1157.tape_ptr - local.code_1158[1] :
      local.code_1158[0] == ">"
        ? local.iter_1157.tape_ptr + local.code_1158[1]
        : local.iter_1157.tape_ptr)

    code_ptr = 2 + (
      local.code_1158[0] == "["
        ? local.iter_1157.tape[local.iter_1157.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1157.code_ptr)] : local.iter_1157.code_ptr :
      local.code_1158[0] == "]"
        ? local.iter_1157.tape[local.iter_1157.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1157.code_ptr)] : local.iter_1157.code_ptr
        : local.iter_1157.code_ptr)

    steps_taken = 1 + local.iter_1157.steps_taken
  }
}

locals {
  code_1159 = (try(local.iter_1158.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1158.code_ptr, local.iter_1158.code_ptr + 2)
    : [null])

  input_1159 = (local.code_1159[0] == ","
    ? substr(local.input_1158, local.code_1159[1], -1)
    : local.input_1158)

  iter_1159 = try(local.iter_1158.code_ptr >= length(var.code), true) ? local.iter_1158 : {
    output = (local.code_1159[0] == "."
      ? "${local.iter_1158.output}${join("", [for _ in range(local.code_1159[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1158.tape[local.iter_1158.tape_ptr]))])}"
      : local.iter_1158.output)
    
    tape = (
      local.code_1159[0] == "+"
        ? [for i, b in local.iter_1158.tape : (i == local.iter_1158.tape_ptr ? (b + local.code_1159[1]) % 256 : b)] :
      local.code_1159[0] == "-"
        ? [for i, b in local.iter_1158.tape : (i == local.iter_1158.tape_ptr ? (b - local.code_1159[1] + 256) % 256 : b)] :
      local.code_1159[0] == ","
        ? [for i, b in local.iter_1158.tape : (i == local.iter_1158.tape_ptr ? local.ascii_lookup[substr(local.input_1159, 0, 1)] : b)]
        : local.iter_1158.tape)

    tape_ptr = (
      local.code_1159[0] == "<"
        ? local.iter_1158.tape_ptr - local.code_1159[1] :
      local.code_1159[0] == ">"
        ? local.iter_1158.tape_ptr + local.code_1159[1]
        : local.iter_1158.tape_ptr)

    code_ptr = 2 + (
      local.code_1159[0] == "["
        ? local.iter_1158.tape[local.iter_1158.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1158.code_ptr)] : local.iter_1158.code_ptr :
      local.code_1159[0] == "]"
        ? local.iter_1158.tape[local.iter_1158.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1158.code_ptr)] : local.iter_1158.code_ptr
        : local.iter_1158.code_ptr)

    steps_taken = 1 + local.iter_1158.steps_taken
  }
}

locals {
  code_1160 = (try(local.iter_1159.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1159.code_ptr, local.iter_1159.code_ptr + 2)
    : [null])

  input_1160 = (local.code_1160[0] == ","
    ? substr(local.input_1159, local.code_1160[1], -1)
    : local.input_1159)

  iter_1160 = try(local.iter_1159.code_ptr >= length(var.code), true) ? local.iter_1159 : {
    output = (local.code_1160[0] == "."
      ? "${local.iter_1159.output}${join("", [for _ in range(local.code_1160[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1159.tape[local.iter_1159.tape_ptr]))])}"
      : local.iter_1159.output)
    
    tape = (
      local.code_1160[0] == "+"
        ? [for i, b in local.iter_1159.tape : (i == local.iter_1159.tape_ptr ? (b + local.code_1160[1]) % 256 : b)] :
      local.code_1160[0] == "-"
        ? [for i, b in local.iter_1159.tape : (i == local.iter_1159.tape_ptr ? (b - local.code_1160[1] + 256) % 256 : b)] :
      local.code_1160[0] == ","
        ? [for i, b in local.iter_1159.tape : (i == local.iter_1159.tape_ptr ? local.ascii_lookup[substr(local.input_1160, 0, 1)] : b)]
        : local.iter_1159.tape)

    tape_ptr = (
      local.code_1160[0] == "<"
        ? local.iter_1159.tape_ptr - local.code_1160[1] :
      local.code_1160[0] == ">"
        ? local.iter_1159.tape_ptr + local.code_1160[1]
        : local.iter_1159.tape_ptr)

    code_ptr = 2 + (
      local.code_1160[0] == "["
        ? local.iter_1159.tape[local.iter_1159.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1159.code_ptr)] : local.iter_1159.code_ptr :
      local.code_1160[0] == "]"
        ? local.iter_1159.tape[local.iter_1159.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1159.code_ptr)] : local.iter_1159.code_ptr
        : local.iter_1159.code_ptr)

    steps_taken = 1 + local.iter_1159.steps_taken
  }
}

locals {
  code_1161 = (try(local.iter_1160.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1160.code_ptr, local.iter_1160.code_ptr + 2)
    : [null])

  input_1161 = (local.code_1161[0] == ","
    ? substr(local.input_1160, local.code_1161[1], -1)
    : local.input_1160)

  iter_1161 = try(local.iter_1160.code_ptr >= length(var.code), true) ? local.iter_1160 : {
    output = (local.code_1161[0] == "."
      ? "${local.iter_1160.output}${join("", [for _ in range(local.code_1161[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1160.tape[local.iter_1160.tape_ptr]))])}"
      : local.iter_1160.output)
    
    tape = (
      local.code_1161[0] == "+"
        ? [for i, b in local.iter_1160.tape : (i == local.iter_1160.tape_ptr ? (b + local.code_1161[1]) % 256 : b)] :
      local.code_1161[0] == "-"
        ? [for i, b in local.iter_1160.tape : (i == local.iter_1160.tape_ptr ? (b - local.code_1161[1] + 256) % 256 : b)] :
      local.code_1161[0] == ","
        ? [for i, b in local.iter_1160.tape : (i == local.iter_1160.tape_ptr ? local.ascii_lookup[substr(local.input_1161, 0, 1)] : b)]
        : local.iter_1160.tape)

    tape_ptr = (
      local.code_1161[0] == "<"
        ? local.iter_1160.tape_ptr - local.code_1161[1] :
      local.code_1161[0] == ">"
        ? local.iter_1160.tape_ptr + local.code_1161[1]
        : local.iter_1160.tape_ptr)

    code_ptr = 2 + (
      local.code_1161[0] == "["
        ? local.iter_1160.tape[local.iter_1160.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1160.code_ptr)] : local.iter_1160.code_ptr :
      local.code_1161[0] == "]"
        ? local.iter_1160.tape[local.iter_1160.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1160.code_ptr)] : local.iter_1160.code_ptr
        : local.iter_1160.code_ptr)

    steps_taken = 1 + local.iter_1160.steps_taken
  }
}

locals {
  code_1162 = (try(local.iter_1161.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1161.code_ptr, local.iter_1161.code_ptr + 2)
    : [null])

  input_1162 = (local.code_1162[0] == ","
    ? substr(local.input_1161, local.code_1162[1], -1)
    : local.input_1161)

  iter_1162 = try(local.iter_1161.code_ptr >= length(var.code), true) ? local.iter_1161 : {
    output = (local.code_1162[0] == "."
      ? "${local.iter_1161.output}${join("", [for _ in range(local.code_1162[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1161.tape[local.iter_1161.tape_ptr]))])}"
      : local.iter_1161.output)
    
    tape = (
      local.code_1162[0] == "+"
        ? [for i, b in local.iter_1161.tape : (i == local.iter_1161.tape_ptr ? (b + local.code_1162[1]) % 256 : b)] :
      local.code_1162[0] == "-"
        ? [for i, b in local.iter_1161.tape : (i == local.iter_1161.tape_ptr ? (b - local.code_1162[1] + 256) % 256 : b)] :
      local.code_1162[0] == ","
        ? [for i, b in local.iter_1161.tape : (i == local.iter_1161.tape_ptr ? local.ascii_lookup[substr(local.input_1162, 0, 1)] : b)]
        : local.iter_1161.tape)

    tape_ptr = (
      local.code_1162[0] == "<"
        ? local.iter_1161.tape_ptr - local.code_1162[1] :
      local.code_1162[0] == ">"
        ? local.iter_1161.tape_ptr + local.code_1162[1]
        : local.iter_1161.tape_ptr)

    code_ptr = 2 + (
      local.code_1162[0] == "["
        ? local.iter_1161.tape[local.iter_1161.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1161.code_ptr)] : local.iter_1161.code_ptr :
      local.code_1162[0] == "]"
        ? local.iter_1161.tape[local.iter_1161.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1161.code_ptr)] : local.iter_1161.code_ptr
        : local.iter_1161.code_ptr)

    steps_taken = 1 + local.iter_1161.steps_taken
  }
}

locals {
  code_1163 = (try(local.iter_1162.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1162.code_ptr, local.iter_1162.code_ptr + 2)
    : [null])

  input_1163 = (local.code_1163[0] == ","
    ? substr(local.input_1162, local.code_1163[1], -1)
    : local.input_1162)

  iter_1163 = try(local.iter_1162.code_ptr >= length(var.code), true) ? local.iter_1162 : {
    output = (local.code_1163[0] == "."
      ? "${local.iter_1162.output}${join("", [for _ in range(local.code_1163[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1162.tape[local.iter_1162.tape_ptr]))])}"
      : local.iter_1162.output)
    
    tape = (
      local.code_1163[0] == "+"
        ? [for i, b in local.iter_1162.tape : (i == local.iter_1162.tape_ptr ? (b + local.code_1163[1]) % 256 : b)] :
      local.code_1163[0] == "-"
        ? [for i, b in local.iter_1162.tape : (i == local.iter_1162.tape_ptr ? (b - local.code_1163[1] + 256) % 256 : b)] :
      local.code_1163[0] == ","
        ? [for i, b in local.iter_1162.tape : (i == local.iter_1162.tape_ptr ? local.ascii_lookup[substr(local.input_1163, 0, 1)] : b)]
        : local.iter_1162.tape)

    tape_ptr = (
      local.code_1163[0] == "<"
        ? local.iter_1162.tape_ptr - local.code_1163[1] :
      local.code_1163[0] == ">"
        ? local.iter_1162.tape_ptr + local.code_1163[1]
        : local.iter_1162.tape_ptr)

    code_ptr = 2 + (
      local.code_1163[0] == "["
        ? local.iter_1162.tape[local.iter_1162.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1162.code_ptr)] : local.iter_1162.code_ptr :
      local.code_1163[0] == "]"
        ? local.iter_1162.tape[local.iter_1162.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1162.code_ptr)] : local.iter_1162.code_ptr
        : local.iter_1162.code_ptr)

    steps_taken = 1 + local.iter_1162.steps_taken
  }
}

locals {
  code_1164 = (try(local.iter_1163.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1163.code_ptr, local.iter_1163.code_ptr + 2)
    : [null])

  input_1164 = (local.code_1164[0] == ","
    ? substr(local.input_1163, local.code_1164[1], -1)
    : local.input_1163)

  iter_1164 = try(local.iter_1163.code_ptr >= length(var.code), true) ? local.iter_1163 : {
    output = (local.code_1164[0] == "."
      ? "${local.iter_1163.output}${join("", [for _ in range(local.code_1164[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1163.tape[local.iter_1163.tape_ptr]))])}"
      : local.iter_1163.output)
    
    tape = (
      local.code_1164[0] == "+"
        ? [for i, b in local.iter_1163.tape : (i == local.iter_1163.tape_ptr ? (b + local.code_1164[1]) % 256 : b)] :
      local.code_1164[0] == "-"
        ? [for i, b in local.iter_1163.tape : (i == local.iter_1163.tape_ptr ? (b - local.code_1164[1] + 256) % 256 : b)] :
      local.code_1164[0] == ","
        ? [for i, b in local.iter_1163.tape : (i == local.iter_1163.tape_ptr ? local.ascii_lookup[substr(local.input_1164, 0, 1)] : b)]
        : local.iter_1163.tape)

    tape_ptr = (
      local.code_1164[0] == "<"
        ? local.iter_1163.tape_ptr - local.code_1164[1] :
      local.code_1164[0] == ">"
        ? local.iter_1163.tape_ptr + local.code_1164[1]
        : local.iter_1163.tape_ptr)

    code_ptr = 2 + (
      local.code_1164[0] == "["
        ? local.iter_1163.tape[local.iter_1163.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1163.code_ptr)] : local.iter_1163.code_ptr :
      local.code_1164[0] == "]"
        ? local.iter_1163.tape[local.iter_1163.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1163.code_ptr)] : local.iter_1163.code_ptr
        : local.iter_1163.code_ptr)

    steps_taken = 1 + local.iter_1163.steps_taken
  }
}

locals {
  code_1165 = (try(local.iter_1164.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1164.code_ptr, local.iter_1164.code_ptr + 2)
    : [null])

  input_1165 = (local.code_1165[0] == ","
    ? substr(local.input_1164, local.code_1165[1], -1)
    : local.input_1164)

  iter_1165 = try(local.iter_1164.code_ptr >= length(var.code), true) ? local.iter_1164 : {
    output = (local.code_1165[0] == "."
      ? "${local.iter_1164.output}${join("", [for _ in range(local.code_1165[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1164.tape[local.iter_1164.tape_ptr]))])}"
      : local.iter_1164.output)
    
    tape = (
      local.code_1165[0] == "+"
        ? [for i, b in local.iter_1164.tape : (i == local.iter_1164.tape_ptr ? (b + local.code_1165[1]) % 256 : b)] :
      local.code_1165[0] == "-"
        ? [for i, b in local.iter_1164.tape : (i == local.iter_1164.tape_ptr ? (b - local.code_1165[1] + 256) % 256 : b)] :
      local.code_1165[0] == ","
        ? [for i, b in local.iter_1164.tape : (i == local.iter_1164.tape_ptr ? local.ascii_lookup[substr(local.input_1165, 0, 1)] : b)]
        : local.iter_1164.tape)

    tape_ptr = (
      local.code_1165[0] == "<"
        ? local.iter_1164.tape_ptr - local.code_1165[1] :
      local.code_1165[0] == ">"
        ? local.iter_1164.tape_ptr + local.code_1165[1]
        : local.iter_1164.tape_ptr)

    code_ptr = 2 + (
      local.code_1165[0] == "["
        ? local.iter_1164.tape[local.iter_1164.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1164.code_ptr)] : local.iter_1164.code_ptr :
      local.code_1165[0] == "]"
        ? local.iter_1164.tape[local.iter_1164.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1164.code_ptr)] : local.iter_1164.code_ptr
        : local.iter_1164.code_ptr)

    steps_taken = 1 + local.iter_1164.steps_taken
  }
}

locals {
  code_1166 = (try(local.iter_1165.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1165.code_ptr, local.iter_1165.code_ptr + 2)
    : [null])

  input_1166 = (local.code_1166[0] == ","
    ? substr(local.input_1165, local.code_1166[1], -1)
    : local.input_1165)

  iter_1166 = try(local.iter_1165.code_ptr >= length(var.code), true) ? local.iter_1165 : {
    output = (local.code_1166[0] == "."
      ? "${local.iter_1165.output}${join("", [for _ in range(local.code_1166[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1165.tape[local.iter_1165.tape_ptr]))])}"
      : local.iter_1165.output)
    
    tape = (
      local.code_1166[0] == "+"
        ? [for i, b in local.iter_1165.tape : (i == local.iter_1165.tape_ptr ? (b + local.code_1166[1]) % 256 : b)] :
      local.code_1166[0] == "-"
        ? [for i, b in local.iter_1165.tape : (i == local.iter_1165.tape_ptr ? (b - local.code_1166[1] + 256) % 256 : b)] :
      local.code_1166[0] == ","
        ? [for i, b in local.iter_1165.tape : (i == local.iter_1165.tape_ptr ? local.ascii_lookup[substr(local.input_1166, 0, 1)] : b)]
        : local.iter_1165.tape)

    tape_ptr = (
      local.code_1166[0] == "<"
        ? local.iter_1165.tape_ptr - local.code_1166[1] :
      local.code_1166[0] == ">"
        ? local.iter_1165.tape_ptr + local.code_1166[1]
        : local.iter_1165.tape_ptr)

    code_ptr = 2 + (
      local.code_1166[0] == "["
        ? local.iter_1165.tape[local.iter_1165.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1165.code_ptr)] : local.iter_1165.code_ptr :
      local.code_1166[0] == "]"
        ? local.iter_1165.tape[local.iter_1165.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1165.code_ptr)] : local.iter_1165.code_ptr
        : local.iter_1165.code_ptr)

    steps_taken = 1 + local.iter_1165.steps_taken
  }
}

locals {
  code_1167 = (try(local.iter_1166.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1166.code_ptr, local.iter_1166.code_ptr + 2)
    : [null])

  input_1167 = (local.code_1167[0] == ","
    ? substr(local.input_1166, local.code_1167[1], -1)
    : local.input_1166)

  iter_1167 = try(local.iter_1166.code_ptr >= length(var.code), true) ? local.iter_1166 : {
    output = (local.code_1167[0] == "."
      ? "${local.iter_1166.output}${join("", [for _ in range(local.code_1167[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1166.tape[local.iter_1166.tape_ptr]))])}"
      : local.iter_1166.output)
    
    tape = (
      local.code_1167[0] == "+"
        ? [for i, b in local.iter_1166.tape : (i == local.iter_1166.tape_ptr ? (b + local.code_1167[1]) % 256 : b)] :
      local.code_1167[0] == "-"
        ? [for i, b in local.iter_1166.tape : (i == local.iter_1166.tape_ptr ? (b - local.code_1167[1] + 256) % 256 : b)] :
      local.code_1167[0] == ","
        ? [for i, b in local.iter_1166.tape : (i == local.iter_1166.tape_ptr ? local.ascii_lookup[substr(local.input_1167, 0, 1)] : b)]
        : local.iter_1166.tape)

    tape_ptr = (
      local.code_1167[0] == "<"
        ? local.iter_1166.tape_ptr - local.code_1167[1] :
      local.code_1167[0] == ">"
        ? local.iter_1166.tape_ptr + local.code_1167[1]
        : local.iter_1166.tape_ptr)

    code_ptr = 2 + (
      local.code_1167[0] == "["
        ? local.iter_1166.tape[local.iter_1166.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1166.code_ptr)] : local.iter_1166.code_ptr :
      local.code_1167[0] == "]"
        ? local.iter_1166.tape[local.iter_1166.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1166.code_ptr)] : local.iter_1166.code_ptr
        : local.iter_1166.code_ptr)

    steps_taken = 1 + local.iter_1166.steps_taken
  }
}

locals {
  code_1168 = (try(local.iter_1167.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1167.code_ptr, local.iter_1167.code_ptr + 2)
    : [null])

  input_1168 = (local.code_1168[0] == ","
    ? substr(local.input_1167, local.code_1168[1], -1)
    : local.input_1167)

  iter_1168 = try(local.iter_1167.code_ptr >= length(var.code), true) ? local.iter_1167 : {
    output = (local.code_1168[0] == "."
      ? "${local.iter_1167.output}${join("", [for _ in range(local.code_1168[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1167.tape[local.iter_1167.tape_ptr]))])}"
      : local.iter_1167.output)
    
    tape = (
      local.code_1168[0] == "+"
        ? [for i, b in local.iter_1167.tape : (i == local.iter_1167.tape_ptr ? (b + local.code_1168[1]) % 256 : b)] :
      local.code_1168[0] == "-"
        ? [for i, b in local.iter_1167.tape : (i == local.iter_1167.tape_ptr ? (b - local.code_1168[1] + 256) % 256 : b)] :
      local.code_1168[0] == ","
        ? [for i, b in local.iter_1167.tape : (i == local.iter_1167.tape_ptr ? local.ascii_lookup[substr(local.input_1168, 0, 1)] : b)]
        : local.iter_1167.tape)

    tape_ptr = (
      local.code_1168[0] == "<"
        ? local.iter_1167.tape_ptr - local.code_1168[1] :
      local.code_1168[0] == ">"
        ? local.iter_1167.tape_ptr + local.code_1168[1]
        : local.iter_1167.tape_ptr)

    code_ptr = 2 + (
      local.code_1168[0] == "["
        ? local.iter_1167.tape[local.iter_1167.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1167.code_ptr)] : local.iter_1167.code_ptr :
      local.code_1168[0] == "]"
        ? local.iter_1167.tape[local.iter_1167.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1167.code_ptr)] : local.iter_1167.code_ptr
        : local.iter_1167.code_ptr)

    steps_taken = 1 + local.iter_1167.steps_taken
  }
}

locals {
  code_1169 = (try(local.iter_1168.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1168.code_ptr, local.iter_1168.code_ptr + 2)
    : [null])

  input_1169 = (local.code_1169[0] == ","
    ? substr(local.input_1168, local.code_1169[1], -1)
    : local.input_1168)

  iter_1169 = try(local.iter_1168.code_ptr >= length(var.code), true) ? local.iter_1168 : {
    output = (local.code_1169[0] == "."
      ? "${local.iter_1168.output}${join("", [for _ in range(local.code_1169[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1168.tape[local.iter_1168.tape_ptr]))])}"
      : local.iter_1168.output)
    
    tape = (
      local.code_1169[0] == "+"
        ? [for i, b in local.iter_1168.tape : (i == local.iter_1168.tape_ptr ? (b + local.code_1169[1]) % 256 : b)] :
      local.code_1169[0] == "-"
        ? [for i, b in local.iter_1168.tape : (i == local.iter_1168.tape_ptr ? (b - local.code_1169[1] + 256) % 256 : b)] :
      local.code_1169[0] == ","
        ? [for i, b in local.iter_1168.tape : (i == local.iter_1168.tape_ptr ? local.ascii_lookup[substr(local.input_1169, 0, 1)] : b)]
        : local.iter_1168.tape)

    tape_ptr = (
      local.code_1169[0] == "<"
        ? local.iter_1168.tape_ptr - local.code_1169[1] :
      local.code_1169[0] == ">"
        ? local.iter_1168.tape_ptr + local.code_1169[1]
        : local.iter_1168.tape_ptr)

    code_ptr = 2 + (
      local.code_1169[0] == "["
        ? local.iter_1168.tape[local.iter_1168.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1168.code_ptr)] : local.iter_1168.code_ptr :
      local.code_1169[0] == "]"
        ? local.iter_1168.tape[local.iter_1168.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1168.code_ptr)] : local.iter_1168.code_ptr
        : local.iter_1168.code_ptr)

    steps_taken = 1 + local.iter_1168.steps_taken
  }
}

locals {
  code_1170 = (try(local.iter_1169.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1169.code_ptr, local.iter_1169.code_ptr + 2)
    : [null])

  input_1170 = (local.code_1170[0] == ","
    ? substr(local.input_1169, local.code_1170[1], -1)
    : local.input_1169)

  iter_1170 = try(local.iter_1169.code_ptr >= length(var.code), true) ? local.iter_1169 : {
    output = (local.code_1170[0] == "."
      ? "${local.iter_1169.output}${join("", [for _ in range(local.code_1170[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1169.tape[local.iter_1169.tape_ptr]))])}"
      : local.iter_1169.output)
    
    tape = (
      local.code_1170[0] == "+"
        ? [for i, b in local.iter_1169.tape : (i == local.iter_1169.tape_ptr ? (b + local.code_1170[1]) % 256 : b)] :
      local.code_1170[0] == "-"
        ? [for i, b in local.iter_1169.tape : (i == local.iter_1169.tape_ptr ? (b - local.code_1170[1] + 256) % 256 : b)] :
      local.code_1170[0] == ","
        ? [for i, b in local.iter_1169.tape : (i == local.iter_1169.tape_ptr ? local.ascii_lookup[substr(local.input_1170, 0, 1)] : b)]
        : local.iter_1169.tape)

    tape_ptr = (
      local.code_1170[0] == "<"
        ? local.iter_1169.tape_ptr - local.code_1170[1] :
      local.code_1170[0] == ">"
        ? local.iter_1169.tape_ptr + local.code_1170[1]
        : local.iter_1169.tape_ptr)

    code_ptr = 2 + (
      local.code_1170[0] == "["
        ? local.iter_1169.tape[local.iter_1169.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1169.code_ptr)] : local.iter_1169.code_ptr :
      local.code_1170[0] == "]"
        ? local.iter_1169.tape[local.iter_1169.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1169.code_ptr)] : local.iter_1169.code_ptr
        : local.iter_1169.code_ptr)

    steps_taken = 1 + local.iter_1169.steps_taken
  }
}

locals {
  code_1171 = (try(local.iter_1170.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1170.code_ptr, local.iter_1170.code_ptr + 2)
    : [null])

  input_1171 = (local.code_1171[0] == ","
    ? substr(local.input_1170, local.code_1171[1], -1)
    : local.input_1170)

  iter_1171 = try(local.iter_1170.code_ptr >= length(var.code), true) ? local.iter_1170 : {
    output = (local.code_1171[0] == "."
      ? "${local.iter_1170.output}${join("", [for _ in range(local.code_1171[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1170.tape[local.iter_1170.tape_ptr]))])}"
      : local.iter_1170.output)
    
    tape = (
      local.code_1171[0] == "+"
        ? [for i, b in local.iter_1170.tape : (i == local.iter_1170.tape_ptr ? (b + local.code_1171[1]) % 256 : b)] :
      local.code_1171[0] == "-"
        ? [for i, b in local.iter_1170.tape : (i == local.iter_1170.tape_ptr ? (b - local.code_1171[1] + 256) % 256 : b)] :
      local.code_1171[0] == ","
        ? [for i, b in local.iter_1170.tape : (i == local.iter_1170.tape_ptr ? local.ascii_lookup[substr(local.input_1171, 0, 1)] : b)]
        : local.iter_1170.tape)

    tape_ptr = (
      local.code_1171[0] == "<"
        ? local.iter_1170.tape_ptr - local.code_1171[1] :
      local.code_1171[0] == ">"
        ? local.iter_1170.tape_ptr + local.code_1171[1]
        : local.iter_1170.tape_ptr)

    code_ptr = 2 + (
      local.code_1171[0] == "["
        ? local.iter_1170.tape[local.iter_1170.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1170.code_ptr)] : local.iter_1170.code_ptr :
      local.code_1171[0] == "]"
        ? local.iter_1170.tape[local.iter_1170.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1170.code_ptr)] : local.iter_1170.code_ptr
        : local.iter_1170.code_ptr)

    steps_taken = 1 + local.iter_1170.steps_taken
  }
}

locals {
  code_1172 = (try(local.iter_1171.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1171.code_ptr, local.iter_1171.code_ptr + 2)
    : [null])

  input_1172 = (local.code_1172[0] == ","
    ? substr(local.input_1171, local.code_1172[1], -1)
    : local.input_1171)

  iter_1172 = try(local.iter_1171.code_ptr >= length(var.code), true) ? local.iter_1171 : {
    output = (local.code_1172[0] == "."
      ? "${local.iter_1171.output}${join("", [for _ in range(local.code_1172[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1171.tape[local.iter_1171.tape_ptr]))])}"
      : local.iter_1171.output)
    
    tape = (
      local.code_1172[0] == "+"
        ? [for i, b in local.iter_1171.tape : (i == local.iter_1171.tape_ptr ? (b + local.code_1172[1]) % 256 : b)] :
      local.code_1172[0] == "-"
        ? [for i, b in local.iter_1171.tape : (i == local.iter_1171.tape_ptr ? (b - local.code_1172[1] + 256) % 256 : b)] :
      local.code_1172[0] == ","
        ? [for i, b in local.iter_1171.tape : (i == local.iter_1171.tape_ptr ? local.ascii_lookup[substr(local.input_1172, 0, 1)] : b)]
        : local.iter_1171.tape)

    tape_ptr = (
      local.code_1172[0] == "<"
        ? local.iter_1171.tape_ptr - local.code_1172[1] :
      local.code_1172[0] == ">"
        ? local.iter_1171.tape_ptr + local.code_1172[1]
        : local.iter_1171.tape_ptr)

    code_ptr = 2 + (
      local.code_1172[0] == "["
        ? local.iter_1171.tape[local.iter_1171.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1171.code_ptr)] : local.iter_1171.code_ptr :
      local.code_1172[0] == "]"
        ? local.iter_1171.tape[local.iter_1171.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1171.code_ptr)] : local.iter_1171.code_ptr
        : local.iter_1171.code_ptr)

    steps_taken = 1 + local.iter_1171.steps_taken
  }
}

locals {
  code_1173 = (try(local.iter_1172.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1172.code_ptr, local.iter_1172.code_ptr + 2)
    : [null])

  input_1173 = (local.code_1173[0] == ","
    ? substr(local.input_1172, local.code_1173[1], -1)
    : local.input_1172)

  iter_1173 = try(local.iter_1172.code_ptr >= length(var.code), true) ? local.iter_1172 : {
    output = (local.code_1173[0] == "."
      ? "${local.iter_1172.output}${join("", [for _ in range(local.code_1173[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1172.tape[local.iter_1172.tape_ptr]))])}"
      : local.iter_1172.output)
    
    tape = (
      local.code_1173[0] == "+"
        ? [for i, b in local.iter_1172.tape : (i == local.iter_1172.tape_ptr ? (b + local.code_1173[1]) % 256 : b)] :
      local.code_1173[0] == "-"
        ? [for i, b in local.iter_1172.tape : (i == local.iter_1172.tape_ptr ? (b - local.code_1173[1] + 256) % 256 : b)] :
      local.code_1173[0] == ","
        ? [for i, b in local.iter_1172.tape : (i == local.iter_1172.tape_ptr ? local.ascii_lookup[substr(local.input_1173, 0, 1)] : b)]
        : local.iter_1172.tape)

    tape_ptr = (
      local.code_1173[0] == "<"
        ? local.iter_1172.tape_ptr - local.code_1173[1] :
      local.code_1173[0] == ">"
        ? local.iter_1172.tape_ptr + local.code_1173[1]
        : local.iter_1172.tape_ptr)

    code_ptr = 2 + (
      local.code_1173[0] == "["
        ? local.iter_1172.tape[local.iter_1172.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1172.code_ptr)] : local.iter_1172.code_ptr :
      local.code_1173[0] == "]"
        ? local.iter_1172.tape[local.iter_1172.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1172.code_ptr)] : local.iter_1172.code_ptr
        : local.iter_1172.code_ptr)

    steps_taken = 1 + local.iter_1172.steps_taken
  }
}

locals {
  code_1174 = (try(local.iter_1173.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1173.code_ptr, local.iter_1173.code_ptr + 2)
    : [null])

  input_1174 = (local.code_1174[0] == ","
    ? substr(local.input_1173, local.code_1174[1], -1)
    : local.input_1173)

  iter_1174 = try(local.iter_1173.code_ptr >= length(var.code), true) ? local.iter_1173 : {
    output = (local.code_1174[0] == "."
      ? "${local.iter_1173.output}${join("", [for _ in range(local.code_1174[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1173.tape[local.iter_1173.tape_ptr]))])}"
      : local.iter_1173.output)
    
    tape = (
      local.code_1174[0] == "+"
        ? [for i, b in local.iter_1173.tape : (i == local.iter_1173.tape_ptr ? (b + local.code_1174[1]) % 256 : b)] :
      local.code_1174[0] == "-"
        ? [for i, b in local.iter_1173.tape : (i == local.iter_1173.tape_ptr ? (b - local.code_1174[1] + 256) % 256 : b)] :
      local.code_1174[0] == ","
        ? [for i, b in local.iter_1173.tape : (i == local.iter_1173.tape_ptr ? local.ascii_lookup[substr(local.input_1174, 0, 1)] : b)]
        : local.iter_1173.tape)

    tape_ptr = (
      local.code_1174[0] == "<"
        ? local.iter_1173.tape_ptr - local.code_1174[1] :
      local.code_1174[0] == ">"
        ? local.iter_1173.tape_ptr + local.code_1174[1]
        : local.iter_1173.tape_ptr)

    code_ptr = 2 + (
      local.code_1174[0] == "["
        ? local.iter_1173.tape[local.iter_1173.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1173.code_ptr)] : local.iter_1173.code_ptr :
      local.code_1174[0] == "]"
        ? local.iter_1173.tape[local.iter_1173.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1173.code_ptr)] : local.iter_1173.code_ptr
        : local.iter_1173.code_ptr)

    steps_taken = 1 + local.iter_1173.steps_taken
  }
}

locals {
  code_1175 = (try(local.iter_1174.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1174.code_ptr, local.iter_1174.code_ptr + 2)
    : [null])

  input_1175 = (local.code_1175[0] == ","
    ? substr(local.input_1174, local.code_1175[1], -1)
    : local.input_1174)

  iter_1175 = try(local.iter_1174.code_ptr >= length(var.code), true) ? local.iter_1174 : {
    output = (local.code_1175[0] == "."
      ? "${local.iter_1174.output}${join("", [for _ in range(local.code_1175[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1174.tape[local.iter_1174.tape_ptr]))])}"
      : local.iter_1174.output)
    
    tape = (
      local.code_1175[0] == "+"
        ? [for i, b in local.iter_1174.tape : (i == local.iter_1174.tape_ptr ? (b + local.code_1175[1]) % 256 : b)] :
      local.code_1175[0] == "-"
        ? [for i, b in local.iter_1174.tape : (i == local.iter_1174.tape_ptr ? (b - local.code_1175[1] + 256) % 256 : b)] :
      local.code_1175[0] == ","
        ? [for i, b in local.iter_1174.tape : (i == local.iter_1174.tape_ptr ? local.ascii_lookup[substr(local.input_1175, 0, 1)] : b)]
        : local.iter_1174.tape)

    tape_ptr = (
      local.code_1175[0] == "<"
        ? local.iter_1174.tape_ptr - local.code_1175[1] :
      local.code_1175[0] == ">"
        ? local.iter_1174.tape_ptr + local.code_1175[1]
        : local.iter_1174.tape_ptr)

    code_ptr = 2 + (
      local.code_1175[0] == "["
        ? local.iter_1174.tape[local.iter_1174.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1174.code_ptr)] : local.iter_1174.code_ptr :
      local.code_1175[0] == "]"
        ? local.iter_1174.tape[local.iter_1174.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1174.code_ptr)] : local.iter_1174.code_ptr
        : local.iter_1174.code_ptr)

    steps_taken = 1 + local.iter_1174.steps_taken
  }
}

locals {
  code_1176 = (try(local.iter_1175.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1175.code_ptr, local.iter_1175.code_ptr + 2)
    : [null])

  input_1176 = (local.code_1176[0] == ","
    ? substr(local.input_1175, local.code_1176[1], -1)
    : local.input_1175)

  iter_1176 = try(local.iter_1175.code_ptr >= length(var.code), true) ? local.iter_1175 : {
    output = (local.code_1176[0] == "."
      ? "${local.iter_1175.output}${join("", [for _ in range(local.code_1176[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1175.tape[local.iter_1175.tape_ptr]))])}"
      : local.iter_1175.output)
    
    tape = (
      local.code_1176[0] == "+"
        ? [for i, b in local.iter_1175.tape : (i == local.iter_1175.tape_ptr ? (b + local.code_1176[1]) % 256 : b)] :
      local.code_1176[0] == "-"
        ? [for i, b in local.iter_1175.tape : (i == local.iter_1175.tape_ptr ? (b - local.code_1176[1] + 256) % 256 : b)] :
      local.code_1176[0] == ","
        ? [for i, b in local.iter_1175.tape : (i == local.iter_1175.tape_ptr ? local.ascii_lookup[substr(local.input_1176, 0, 1)] : b)]
        : local.iter_1175.tape)

    tape_ptr = (
      local.code_1176[0] == "<"
        ? local.iter_1175.tape_ptr - local.code_1176[1] :
      local.code_1176[0] == ">"
        ? local.iter_1175.tape_ptr + local.code_1176[1]
        : local.iter_1175.tape_ptr)

    code_ptr = 2 + (
      local.code_1176[0] == "["
        ? local.iter_1175.tape[local.iter_1175.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1175.code_ptr)] : local.iter_1175.code_ptr :
      local.code_1176[0] == "]"
        ? local.iter_1175.tape[local.iter_1175.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1175.code_ptr)] : local.iter_1175.code_ptr
        : local.iter_1175.code_ptr)

    steps_taken = 1 + local.iter_1175.steps_taken
  }
}

locals {
  code_1177 = (try(local.iter_1176.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1176.code_ptr, local.iter_1176.code_ptr + 2)
    : [null])

  input_1177 = (local.code_1177[0] == ","
    ? substr(local.input_1176, local.code_1177[1], -1)
    : local.input_1176)

  iter_1177 = try(local.iter_1176.code_ptr >= length(var.code), true) ? local.iter_1176 : {
    output = (local.code_1177[0] == "."
      ? "${local.iter_1176.output}${join("", [for _ in range(local.code_1177[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1176.tape[local.iter_1176.tape_ptr]))])}"
      : local.iter_1176.output)
    
    tape = (
      local.code_1177[0] == "+"
        ? [for i, b in local.iter_1176.tape : (i == local.iter_1176.tape_ptr ? (b + local.code_1177[1]) % 256 : b)] :
      local.code_1177[0] == "-"
        ? [for i, b in local.iter_1176.tape : (i == local.iter_1176.tape_ptr ? (b - local.code_1177[1] + 256) % 256 : b)] :
      local.code_1177[0] == ","
        ? [for i, b in local.iter_1176.tape : (i == local.iter_1176.tape_ptr ? local.ascii_lookup[substr(local.input_1177, 0, 1)] : b)]
        : local.iter_1176.tape)

    tape_ptr = (
      local.code_1177[0] == "<"
        ? local.iter_1176.tape_ptr - local.code_1177[1] :
      local.code_1177[0] == ">"
        ? local.iter_1176.tape_ptr + local.code_1177[1]
        : local.iter_1176.tape_ptr)

    code_ptr = 2 + (
      local.code_1177[0] == "["
        ? local.iter_1176.tape[local.iter_1176.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1176.code_ptr)] : local.iter_1176.code_ptr :
      local.code_1177[0] == "]"
        ? local.iter_1176.tape[local.iter_1176.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1176.code_ptr)] : local.iter_1176.code_ptr
        : local.iter_1176.code_ptr)

    steps_taken = 1 + local.iter_1176.steps_taken
  }
}

locals {
  code_1178 = (try(local.iter_1177.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1177.code_ptr, local.iter_1177.code_ptr + 2)
    : [null])

  input_1178 = (local.code_1178[0] == ","
    ? substr(local.input_1177, local.code_1178[1], -1)
    : local.input_1177)

  iter_1178 = try(local.iter_1177.code_ptr >= length(var.code), true) ? local.iter_1177 : {
    output = (local.code_1178[0] == "."
      ? "${local.iter_1177.output}${join("", [for _ in range(local.code_1178[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1177.tape[local.iter_1177.tape_ptr]))])}"
      : local.iter_1177.output)
    
    tape = (
      local.code_1178[0] == "+"
        ? [for i, b in local.iter_1177.tape : (i == local.iter_1177.tape_ptr ? (b + local.code_1178[1]) % 256 : b)] :
      local.code_1178[0] == "-"
        ? [for i, b in local.iter_1177.tape : (i == local.iter_1177.tape_ptr ? (b - local.code_1178[1] + 256) % 256 : b)] :
      local.code_1178[0] == ","
        ? [for i, b in local.iter_1177.tape : (i == local.iter_1177.tape_ptr ? local.ascii_lookup[substr(local.input_1178, 0, 1)] : b)]
        : local.iter_1177.tape)

    tape_ptr = (
      local.code_1178[0] == "<"
        ? local.iter_1177.tape_ptr - local.code_1178[1] :
      local.code_1178[0] == ">"
        ? local.iter_1177.tape_ptr + local.code_1178[1]
        : local.iter_1177.tape_ptr)

    code_ptr = 2 + (
      local.code_1178[0] == "["
        ? local.iter_1177.tape[local.iter_1177.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1177.code_ptr)] : local.iter_1177.code_ptr :
      local.code_1178[0] == "]"
        ? local.iter_1177.tape[local.iter_1177.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1177.code_ptr)] : local.iter_1177.code_ptr
        : local.iter_1177.code_ptr)

    steps_taken = 1 + local.iter_1177.steps_taken
  }
}

locals {
  code_1179 = (try(local.iter_1178.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1178.code_ptr, local.iter_1178.code_ptr + 2)
    : [null])

  input_1179 = (local.code_1179[0] == ","
    ? substr(local.input_1178, local.code_1179[1], -1)
    : local.input_1178)

  iter_1179 = try(local.iter_1178.code_ptr >= length(var.code), true) ? local.iter_1178 : {
    output = (local.code_1179[0] == "."
      ? "${local.iter_1178.output}${join("", [for _ in range(local.code_1179[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1178.tape[local.iter_1178.tape_ptr]))])}"
      : local.iter_1178.output)
    
    tape = (
      local.code_1179[0] == "+"
        ? [for i, b in local.iter_1178.tape : (i == local.iter_1178.tape_ptr ? (b + local.code_1179[1]) % 256 : b)] :
      local.code_1179[0] == "-"
        ? [for i, b in local.iter_1178.tape : (i == local.iter_1178.tape_ptr ? (b - local.code_1179[1] + 256) % 256 : b)] :
      local.code_1179[0] == ","
        ? [for i, b in local.iter_1178.tape : (i == local.iter_1178.tape_ptr ? local.ascii_lookup[substr(local.input_1179, 0, 1)] : b)]
        : local.iter_1178.tape)

    tape_ptr = (
      local.code_1179[0] == "<"
        ? local.iter_1178.tape_ptr - local.code_1179[1] :
      local.code_1179[0] == ">"
        ? local.iter_1178.tape_ptr + local.code_1179[1]
        : local.iter_1178.tape_ptr)

    code_ptr = 2 + (
      local.code_1179[0] == "["
        ? local.iter_1178.tape[local.iter_1178.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1178.code_ptr)] : local.iter_1178.code_ptr :
      local.code_1179[0] == "]"
        ? local.iter_1178.tape[local.iter_1178.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1178.code_ptr)] : local.iter_1178.code_ptr
        : local.iter_1178.code_ptr)

    steps_taken = 1 + local.iter_1178.steps_taken
  }
}

locals {
  code_1180 = (try(local.iter_1179.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1179.code_ptr, local.iter_1179.code_ptr + 2)
    : [null])

  input_1180 = (local.code_1180[0] == ","
    ? substr(local.input_1179, local.code_1180[1], -1)
    : local.input_1179)

  iter_1180 = try(local.iter_1179.code_ptr >= length(var.code), true) ? local.iter_1179 : {
    output = (local.code_1180[0] == "."
      ? "${local.iter_1179.output}${join("", [for _ in range(local.code_1180[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1179.tape[local.iter_1179.tape_ptr]))])}"
      : local.iter_1179.output)
    
    tape = (
      local.code_1180[0] == "+"
        ? [for i, b in local.iter_1179.tape : (i == local.iter_1179.tape_ptr ? (b + local.code_1180[1]) % 256 : b)] :
      local.code_1180[0] == "-"
        ? [for i, b in local.iter_1179.tape : (i == local.iter_1179.tape_ptr ? (b - local.code_1180[1] + 256) % 256 : b)] :
      local.code_1180[0] == ","
        ? [for i, b in local.iter_1179.tape : (i == local.iter_1179.tape_ptr ? local.ascii_lookup[substr(local.input_1180, 0, 1)] : b)]
        : local.iter_1179.tape)

    tape_ptr = (
      local.code_1180[0] == "<"
        ? local.iter_1179.tape_ptr - local.code_1180[1] :
      local.code_1180[0] == ">"
        ? local.iter_1179.tape_ptr + local.code_1180[1]
        : local.iter_1179.tape_ptr)

    code_ptr = 2 + (
      local.code_1180[0] == "["
        ? local.iter_1179.tape[local.iter_1179.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1179.code_ptr)] : local.iter_1179.code_ptr :
      local.code_1180[0] == "]"
        ? local.iter_1179.tape[local.iter_1179.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1179.code_ptr)] : local.iter_1179.code_ptr
        : local.iter_1179.code_ptr)

    steps_taken = 1 + local.iter_1179.steps_taken
  }
}

locals {
  code_1181 = (try(local.iter_1180.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1180.code_ptr, local.iter_1180.code_ptr + 2)
    : [null])

  input_1181 = (local.code_1181[0] == ","
    ? substr(local.input_1180, local.code_1181[1], -1)
    : local.input_1180)

  iter_1181 = try(local.iter_1180.code_ptr >= length(var.code), true) ? local.iter_1180 : {
    output = (local.code_1181[0] == "."
      ? "${local.iter_1180.output}${join("", [for _ in range(local.code_1181[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1180.tape[local.iter_1180.tape_ptr]))])}"
      : local.iter_1180.output)
    
    tape = (
      local.code_1181[0] == "+"
        ? [for i, b in local.iter_1180.tape : (i == local.iter_1180.tape_ptr ? (b + local.code_1181[1]) % 256 : b)] :
      local.code_1181[0] == "-"
        ? [for i, b in local.iter_1180.tape : (i == local.iter_1180.tape_ptr ? (b - local.code_1181[1] + 256) % 256 : b)] :
      local.code_1181[0] == ","
        ? [for i, b in local.iter_1180.tape : (i == local.iter_1180.tape_ptr ? local.ascii_lookup[substr(local.input_1181, 0, 1)] : b)]
        : local.iter_1180.tape)

    tape_ptr = (
      local.code_1181[0] == "<"
        ? local.iter_1180.tape_ptr - local.code_1181[1] :
      local.code_1181[0] == ">"
        ? local.iter_1180.tape_ptr + local.code_1181[1]
        : local.iter_1180.tape_ptr)

    code_ptr = 2 + (
      local.code_1181[0] == "["
        ? local.iter_1180.tape[local.iter_1180.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1180.code_ptr)] : local.iter_1180.code_ptr :
      local.code_1181[0] == "]"
        ? local.iter_1180.tape[local.iter_1180.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1180.code_ptr)] : local.iter_1180.code_ptr
        : local.iter_1180.code_ptr)

    steps_taken = 1 + local.iter_1180.steps_taken
  }
}

locals {
  code_1182 = (try(local.iter_1181.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1181.code_ptr, local.iter_1181.code_ptr + 2)
    : [null])

  input_1182 = (local.code_1182[0] == ","
    ? substr(local.input_1181, local.code_1182[1], -1)
    : local.input_1181)

  iter_1182 = try(local.iter_1181.code_ptr >= length(var.code), true) ? local.iter_1181 : {
    output = (local.code_1182[0] == "."
      ? "${local.iter_1181.output}${join("", [for _ in range(local.code_1182[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1181.tape[local.iter_1181.tape_ptr]))])}"
      : local.iter_1181.output)
    
    tape = (
      local.code_1182[0] == "+"
        ? [for i, b in local.iter_1181.tape : (i == local.iter_1181.tape_ptr ? (b + local.code_1182[1]) % 256 : b)] :
      local.code_1182[0] == "-"
        ? [for i, b in local.iter_1181.tape : (i == local.iter_1181.tape_ptr ? (b - local.code_1182[1] + 256) % 256 : b)] :
      local.code_1182[0] == ","
        ? [for i, b in local.iter_1181.tape : (i == local.iter_1181.tape_ptr ? local.ascii_lookup[substr(local.input_1182, 0, 1)] : b)]
        : local.iter_1181.tape)

    tape_ptr = (
      local.code_1182[0] == "<"
        ? local.iter_1181.tape_ptr - local.code_1182[1] :
      local.code_1182[0] == ">"
        ? local.iter_1181.tape_ptr + local.code_1182[1]
        : local.iter_1181.tape_ptr)

    code_ptr = 2 + (
      local.code_1182[0] == "["
        ? local.iter_1181.tape[local.iter_1181.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1181.code_ptr)] : local.iter_1181.code_ptr :
      local.code_1182[0] == "]"
        ? local.iter_1181.tape[local.iter_1181.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1181.code_ptr)] : local.iter_1181.code_ptr
        : local.iter_1181.code_ptr)

    steps_taken = 1 + local.iter_1181.steps_taken
  }
}

locals {
  code_1183 = (try(local.iter_1182.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1182.code_ptr, local.iter_1182.code_ptr + 2)
    : [null])

  input_1183 = (local.code_1183[0] == ","
    ? substr(local.input_1182, local.code_1183[1], -1)
    : local.input_1182)

  iter_1183 = try(local.iter_1182.code_ptr >= length(var.code), true) ? local.iter_1182 : {
    output = (local.code_1183[0] == "."
      ? "${local.iter_1182.output}${join("", [for _ in range(local.code_1183[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1182.tape[local.iter_1182.tape_ptr]))])}"
      : local.iter_1182.output)
    
    tape = (
      local.code_1183[0] == "+"
        ? [for i, b in local.iter_1182.tape : (i == local.iter_1182.tape_ptr ? (b + local.code_1183[1]) % 256 : b)] :
      local.code_1183[0] == "-"
        ? [for i, b in local.iter_1182.tape : (i == local.iter_1182.tape_ptr ? (b - local.code_1183[1] + 256) % 256 : b)] :
      local.code_1183[0] == ","
        ? [for i, b in local.iter_1182.tape : (i == local.iter_1182.tape_ptr ? local.ascii_lookup[substr(local.input_1183, 0, 1)] : b)]
        : local.iter_1182.tape)

    tape_ptr = (
      local.code_1183[0] == "<"
        ? local.iter_1182.tape_ptr - local.code_1183[1] :
      local.code_1183[0] == ">"
        ? local.iter_1182.tape_ptr + local.code_1183[1]
        : local.iter_1182.tape_ptr)

    code_ptr = 2 + (
      local.code_1183[0] == "["
        ? local.iter_1182.tape[local.iter_1182.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1182.code_ptr)] : local.iter_1182.code_ptr :
      local.code_1183[0] == "]"
        ? local.iter_1182.tape[local.iter_1182.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1182.code_ptr)] : local.iter_1182.code_ptr
        : local.iter_1182.code_ptr)

    steps_taken = 1 + local.iter_1182.steps_taken
  }
}

locals {
  code_1184 = (try(local.iter_1183.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1183.code_ptr, local.iter_1183.code_ptr + 2)
    : [null])

  input_1184 = (local.code_1184[0] == ","
    ? substr(local.input_1183, local.code_1184[1], -1)
    : local.input_1183)

  iter_1184 = try(local.iter_1183.code_ptr >= length(var.code), true) ? local.iter_1183 : {
    output = (local.code_1184[0] == "."
      ? "${local.iter_1183.output}${join("", [for _ in range(local.code_1184[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1183.tape[local.iter_1183.tape_ptr]))])}"
      : local.iter_1183.output)
    
    tape = (
      local.code_1184[0] == "+"
        ? [for i, b in local.iter_1183.tape : (i == local.iter_1183.tape_ptr ? (b + local.code_1184[1]) % 256 : b)] :
      local.code_1184[0] == "-"
        ? [for i, b in local.iter_1183.tape : (i == local.iter_1183.tape_ptr ? (b - local.code_1184[1] + 256) % 256 : b)] :
      local.code_1184[0] == ","
        ? [for i, b in local.iter_1183.tape : (i == local.iter_1183.tape_ptr ? local.ascii_lookup[substr(local.input_1184, 0, 1)] : b)]
        : local.iter_1183.tape)

    tape_ptr = (
      local.code_1184[0] == "<"
        ? local.iter_1183.tape_ptr - local.code_1184[1] :
      local.code_1184[0] == ">"
        ? local.iter_1183.tape_ptr + local.code_1184[1]
        : local.iter_1183.tape_ptr)

    code_ptr = 2 + (
      local.code_1184[0] == "["
        ? local.iter_1183.tape[local.iter_1183.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1183.code_ptr)] : local.iter_1183.code_ptr :
      local.code_1184[0] == "]"
        ? local.iter_1183.tape[local.iter_1183.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1183.code_ptr)] : local.iter_1183.code_ptr
        : local.iter_1183.code_ptr)

    steps_taken = 1 + local.iter_1183.steps_taken
  }
}

locals {
  code_1185 = (try(local.iter_1184.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1184.code_ptr, local.iter_1184.code_ptr + 2)
    : [null])

  input_1185 = (local.code_1185[0] == ","
    ? substr(local.input_1184, local.code_1185[1], -1)
    : local.input_1184)

  iter_1185 = try(local.iter_1184.code_ptr >= length(var.code), true) ? local.iter_1184 : {
    output = (local.code_1185[0] == "."
      ? "${local.iter_1184.output}${join("", [for _ in range(local.code_1185[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1184.tape[local.iter_1184.tape_ptr]))])}"
      : local.iter_1184.output)
    
    tape = (
      local.code_1185[0] == "+"
        ? [for i, b in local.iter_1184.tape : (i == local.iter_1184.tape_ptr ? (b + local.code_1185[1]) % 256 : b)] :
      local.code_1185[0] == "-"
        ? [for i, b in local.iter_1184.tape : (i == local.iter_1184.tape_ptr ? (b - local.code_1185[1] + 256) % 256 : b)] :
      local.code_1185[0] == ","
        ? [for i, b in local.iter_1184.tape : (i == local.iter_1184.tape_ptr ? local.ascii_lookup[substr(local.input_1185, 0, 1)] : b)]
        : local.iter_1184.tape)

    tape_ptr = (
      local.code_1185[0] == "<"
        ? local.iter_1184.tape_ptr - local.code_1185[1] :
      local.code_1185[0] == ">"
        ? local.iter_1184.tape_ptr + local.code_1185[1]
        : local.iter_1184.tape_ptr)

    code_ptr = 2 + (
      local.code_1185[0] == "["
        ? local.iter_1184.tape[local.iter_1184.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1184.code_ptr)] : local.iter_1184.code_ptr :
      local.code_1185[0] == "]"
        ? local.iter_1184.tape[local.iter_1184.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1184.code_ptr)] : local.iter_1184.code_ptr
        : local.iter_1184.code_ptr)

    steps_taken = 1 + local.iter_1184.steps_taken
  }
}

locals {
  code_1186 = (try(local.iter_1185.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1185.code_ptr, local.iter_1185.code_ptr + 2)
    : [null])

  input_1186 = (local.code_1186[0] == ","
    ? substr(local.input_1185, local.code_1186[1], -1)
    : local.input_1185)

  iter_1186 = try(local.iter_1185.code_ptr >= length(var.code), true) ? local.iter_1185 : {
    output = (local.code_1186[0] == "."
      ? "${local.iter_1185.output}${join("", [for _ in range(local.code_1186[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1185.tape[local.iter_1185.tape_ptr]))])}"
      : local.iter_1185.output)
    
    tape = (
      local.code_1186[0] == "+"
        ? [for i, b in local.iter_1185.tape : (i == local.iter_1185.tape_ptr ? (b + local.code_1186[1]) % 256 : b)] :
      local.code_1186[0] == "-"
        ? [for i, b in local.iter_1185.tape : (i == local.iter_1185.tape_ptr ? (b - local.code_1186[1] + 256) % 256 : b)] :
      local.code_1186[0] == ","
        ? [for i, b in local.iter_1185.tape : (i == local.iter_1185.tape_ptr ? local.ascii_lookup[substr(local.input_1186, 0, 1)] : b)]
        : local.iter_1185.tape)

    tape_ptr = (
      local.code_1186[0] == "<"
        ? local.iter_1185.tape_ptr - local.code_1186[1] :
      local.code_1186[0] == ">"
        ? local.iter_1185.tape_ptr + local.code_1186[1]
        : local.iter_1185.tape_ptr)

    code_ptr = 2 + (
      local.code_1186[0] == "["
        ? local.iter_1185.tape[local.iter_1185.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1185.code_ptr)] : local.iter_1185.code_ptr :
      local.code_1186[0] == "]"
        ? local.iter_1185.tape[local.iter_1185.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1185.code_ptr)] : local.iter_1185.code_ptr
        : local.iter_1185.code_ptr)

    steps_taken = 1 + local.iter_1185.steps_taken
  }
}

locals {
  code_1187 = (try(local.iter_1186.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1186.code_ptr, local.iter_1186.code_ptr + 2)
    : [null])

  input_1187 = (local.code_1187[0] == ","
    ? substr(local.input_1186, local.code_1187[1], -1)
    : local.input_1186)

  iter_1187 = try(local.iter_1186.code_ptr >= length(var.code), true) ? local.iter_1186 : {
    output = (local.code_1187[0] == "."
      ? "${local.iter_1186.output}${join("", [for _ in range(local.code_1187[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1186.tape[local.iter_1186.tape_ptr]))])}"
      : local.iter_1186.output)
    
    tape = (
      local.code_1187[0] == "+"
        ? [for i, b in local.iter_1186.tape : (i == local.iter_1186.tape_ptr ? (b + local.code_1187[1]) % 256 : b)] :
      local.code_1187[0] == "-"
        ? [for i, b in local.iter_1186.tape : (i == local.iter_1186.tape_ptr ? (b - local.code_1187[1] + 256) % 256 : b)] :
      local.code_1187[0] == ","
        ? [for i, b in local.iter_1186.tape : (i == local.iter_1186.tape_ptr ? local.ascii_lookup[substr(local.input_1187, 0, 1)] : b)]
        : local.iter_1186.tape)

    tape_ptr = (
      local.code_1187[0] == "<"
        ? local.iter_1186.tape_ptr - local.code_1187[1] :
      local.code_1187[0] == ">"
        ? local.iter_1186.tape_ptr + local.code_1187[1]
        : local.iter_1186.tape_ptr)

    code_ptr = 2 + (
      local.code_1187[0] == "["
        ? local.iter_1186.tape[local.iter_1186.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1186.code_ptr)] : local.iter_1186.code_ptr :
      local.code_1187[0] == "]"
        ? local.iter_1186.tape[local.iter_1186.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1186.code_ptr)] : local.iter_1186.code_ptr
        : local.iter_1186.code_ptr)

    steps_taken = 1 + local.iter_1186.steps_taken
  }
}

locals {
  code_1188 = (try(local.iter_1187.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1187.code_ptr, local.iter_1187.code_ptr + 2)
    : [null])

  input_1188 = (local.code_1188[0] == ","
    ? substr(local.input_1187, local.code_1188[1], -1)
    : local.input_1187)

  iter_1188 = try(local.iter_1187.code_ptr >= length(var.code), true) ? local.iter_1187 : {
    output = (local.code_1188[0] == "."
      ? "${local.iter_1187.output}${join("", [for _ in range(local.code_1188[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1187.tape[local.iter_1187.tape_ptr]))])}"
      : local.iter_1187.output)
    
    tape = (
      local.code_1188[0] == "+"
        ? [for i, b in local.iter_1187.tape : (i == local.iter_1187.tape_ptr ? (b + local.code_1188[1]) % 256 : b)] :
      local.code_1188[0] == "-"
        ? [for i, b in local.iter_1187.tape : (i == local.iter_1187.tape_ptr ? (b - local.code_1188[1] + 256) % 256 : b)] :
      local.code_1188[0] == ","
        ? [for i, b in local.iter_1187.tape : (i == local.iter_1187.tape_ptr ? local.ascii_lookup[substr(local.input_1188, 0, 1)] : b)]
        : local.iter_1187.tape)

    tape_ptr = (
      local.code_1188[0] == "<"
        ? local.iter_1187.tape_ptr - local.code_1188[1] :
      local.code_1188[0] == ">"
        ? local.iter_1187.tape_ptr + local.code_1188[1]
        : local.iter_1187.tape_ptr)

    code_ptr = 2 + (
      local.code_1188[0] == "["
        ? local.iter_1187.tape[local.iter_1187.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1187.code_ptr)] : local.iter_1187.code_ptr :
      local.code_1188[0] == "]"
        ? local.iter_1187.tape[local.iter_1187.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1187.code_ptr)] : local.iter_1187.code_ptr
        : local.iter_1187.code_ptr)

    steps_taken = 1 + local.iter_1187.steps_taken
  }
}

locals {
  code_1189 = (try(local.iter_1188.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1188.code_ptr, local.iter_1188.code_ptr + 2)
    : [null])

  input_1189 = (local.code_1189[0] == ","
    ? substr(local.input_1188, local.code_1189[1], -1)
    : local.input_1188)

  iter_1189 = try(local.iter_1188.code_ptr >= length(var.code), true) ? local.iter_1188 : {
    output = (local.code_1189[0] == "."
      ? "${local.iter_1188.output}${join("", [for _ in range(local.code_1189[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1188.tape[local.iter_1188.tape_ptr]))])}"
      : local.iter_1188.output)
    
    tape = (
      local.code_1189[0] == "+"
        ? [for i, b in local.iter_1188.tape : (i == local.iter_1188.tape_ptr ? (b + local.code_1189[1]) % 256 : b)] :
      local.code_1189[0] == "-"
        ? [for i, b in local.iter_1188.tape : (i == local.iter_1188.tape_ptr ? (b - local.code_1189[1] + 256) % 256 : b)] :
      local.code_1189[0] == ","
        ? [for i, b in local.iter_1188.tape : (i == local.iter_1188.tape_ptr ? local.ascii_lookup[substr(local.input_1189, 0, 1)] : b)]
        : local.iter_1188.tape)

    tape_ptr = (
      local.code_1189[0] == "<"
        ? local.iter_1188.tape_ptr - local.code_1189[1] :
      local.code_1189[0] == ">"
        ? local.iter_1188.tape_ptr + local.code_1189[1]
        : local.iter_1188.tape_ptr)

    code_ptr = 2 + (
      local.code_1189[0] == "["
        ? local.iter_1188.tape[local.iter_1188.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1188.code_ptr)] : local.iter_1188.code_ptr :
      local.code_1189[0] == "]"
        ? local.iter_1188.tape[local.iter_1188.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1188.code_ptr)] : local.iter_1188.code_ptr
        : local.iter_1188.code_ptr)

    steps_taken = 1 + local.iter_1188.steps_taken
  }
}

locals {
  code_1190 = (try(local.iter_1189.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1189.code_ptr, local.iter_1189.code_ptr + 2)
    : [null])

  input_1190 = (local.code_1190[0] == ","
    ? substr(local.input_1189, local.code_1190[1], -1)
    : local.input_1189)

  iter_1190 = try(local.iter_1189.code_ptr >= length(var.code), true) ? local.iter_1189 : {
    output = (local.code_1190[0] == "."
      ? "${local.iter_1189.output}${join("", [for _ in range(local.code_1190[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1189.tape[local.iter_1189.tape_ptr]))])}"
      : local.iter_1189.output)
    
    tape = (
      local.code_1190[0] == "+"
        ? [for i, b in local.iter_1189.tape : (i == local.iter_1189.tape_ptr ? (b + local.code_1190[1]) % 256 : b)] :
      local.code_1190[0] == "-"
        ? [for i, b in local.iter_1189.tape : (i == local.iter_1189.tape_ptr ? (b - local.code_1190[1] + 256) % 256 : b)] :
      local.code_1190[0] == ","
        ? [for i, b in local.iter_1189.tape : (i == local.iter_1189.tape_ptr ? local.ascii_lookup[substr(local.input_1190, 0, 1)] : b)]
        : local.iter_1189.tape)

    tape_ptr = (
      local.code_1190[0] == "<"
        ? local.iter_1189.tape_ptr - local.code_1190[1] :
      local.code_1190[0] == ">"
        ? local.iter_1189.tape_ptr + local.code_1190[1]
        : local.iter_1189.tape_ptr)

    code_ptr = 2 + (
      local.code_1190[0] == "["
        ? local.iter_1189.tape[local.iter_1189.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1189.code_ptr)] : local.iter_1189.code_ptr :
      local.code_1190[0] == "]"
        ? local.iter_1189.tape[local.iter_1189.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1189.code_ptr)] : local.iter_1189.code_ptr
        : local.iter_1189.code_ptr)

    steps_taken = 1 + local.iter_1189.steps_taken
  }
}

locals {
  code_1191 = (try(local.iter_1190.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1190.code_ptr, local.iter_1190.code_ptr + 2)
    : [null])

  input_1191 = (local.code_1191[0] == ","
    ? substr(local.input_1190, local.code_1191[1], -1)
    : local.input_1190)

  iter_1191 = try(local.iter_1190.code_ptr >= length(var.code), true) ? local.iter_1190 : {
    output = (local.code_1191[0] == "."
      ? "${local.iter_1190.output}${join("", [for _ in range(local.code_1191[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1190.tape[local.iter_1190.tape_ptr]))])}"
      : local.iter_1190.output)
    
    tape = (
      local.code_1191[0] == "+"
        ? [for i, b in local.iter_1190.tape : (i == local.iter_1190.tape_ptr ? (b + local.code_1191[1]) % 256 : b)] :
      local.code_1191[0] == "-"
        ? [for i, b in local.iter_1190.tape : (i == local.iter_1190.tape_ptr ? (b - local.code_1191[1] + 256) % 256 : b)] :
      local.code_1191[0] == ","
        ? [for i, b in local.iter_1190.tape : (i == local.iter_1190.tape_ptr ? local.ascii_lookup[substr(local.input_1191, 0, 1)] : b)]
        : local.iter_1190.tape)

    tape_ptr = (
      local.code_1191[0] == "<"
        ? local.iter_1190.tape_ptr - local.code_1191[1] :
      local.code_1191[0] == ">"
        ? local.iter_1190.tape_ptr + local.code_1191[1]
        : local.iter_1190.tape_ptr)

    code_ptr = 2 + (
      local.code_1191[0] == "["
        ? local.iter_1190.tape[local.iter_1190.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1190.code_ptr)] : local.iter_1190.code_ptr :
      local.code_1191[0] == "]"
        ? local.iter_1190.tape[local.iter_1190.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1190.code_ptr)] : local.iter_1190.code_ptr
        : local.iter_1190.code_ptr)

    steps_taken = 1 + local.iter_1190.steps_taken
  }
}

locals {
  code_1192 = (try(local.iter_1191.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1191.code_ptr, local.iter_1191.code_ptr + 2)
    : [null])

  input_1192 = (local.code_1192[0] == ","
    ? substr(local.input_1191, local.code_1192[1], -1)
    : local.input_1191)

  iter_1192 = try(local.iter_1191.code_ptr >= length(var.code), true) ? local.iter_1191 : {
    output = (local.code_1192[0] == "."
      ? "${local.iter_1191.output}${join("", [for _ in range(local.code_1192[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1191.tape[local.iter_1191.tape_ptr]))])}"
      : local.iter_1191.output)
    
    tape = (
      local.code_1192[0] == "+"
        ? [for i, b in local.iter_1191.tape : (i == local.iter_1191.tape_ptr ? (b + local.code_1192[1]) % 256 : b)] :
      local.code_1192[0] == "-"
        ? [for i, b in local.iter_1191.tape : (i == local.iter_1191.tape_ptr ? (b - local.code_1192[1] + 256) % 256 : b)] :
      local.code_1192[0] == ","
        ? [for i, b in local.iter_1191.tape : (i == local.iter_1191.tape_ptr ? local.ascii_lookup[substr(local.input_1192, 0, 1)] : b)]
        : local.iter_1191.tape)

    tape_ptr = (
      local.code_1192[0] == "<"
        ? local.iter_1191.tape_ptr - local.code_1192[1] :
      local.code_1192[0] == ">"
        ? local.iter_1191.tape_ptr + local.code_1192[1]
        : local.iter_1191.tape_ptr)

    code_ptr = 2 + (
      local.code_1192[0] == "["
        ? local.iter_1191.tape[local.iter_1191.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1191.code_ptr)] : local.iter_1191.code_ptr :
      local.code_1192[0] == "]"
        ? local.iter_1191.tape[local.iter_1191.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1191.code_ptr)] : local.iter_1191.code_ptr
        : local.iter_1191.code_ptr)

    steps_taken = 1 + local.iter_1191.steps_taken
  }
}

locals {
  code_1193 = (try(local.iter_1192.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1192.code_ptr, local.iter_1192.code_ptr + 2)
    : [null])

  input_1193 = (local.code_1193[0] == ","
    ? substr(local.input_1192, local.code_1193[1], -1)
    : local.input_1192)

  iter_1193 = try(local.iter_1192.code_ptr >= length(var.code), true) ? local.iter_1192 : {
    output = (local.code_1193[0] == "."
      ? "${local.iter_1192.output}${join("", [for _ in range(local.code_1193[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1192.tape[local.iter_1192.tape_ptr]))])}"
      : local.iter_1192.output)
    
    tape = (
      local.code_1193[0] == "+"
        ? [for i, b in local.iter_1192.tape : (i == local.iter_1192.tape_ptr ? (b + local.code_1193[1]) % 256 : b)] :
      local.code_1193[0] == "-"
        ? [for i, b in local.iter_1192.tape : (i == local.iter_1192.tape_ptr ? (b - local.code_1193[1] + 256) % 256 : b)] :
      local.code_1193[0] == ","
        ? [for i, b in local.iter_1192.tape : (i == local.iter_1192.tape_ptr ? local.ascii_lookup[substr(local.input_1193, 0, 1)] : b)]
        : local.iter_1192.tape)

    tape_ptr = (
      local.code_1193[0] == "<"
        ? local.iter_1192.tape_ptr - local.code_1193[1] :
      local.code_1193[0] == ">"
        ? local.iter_1192.tape_ptr + local.code_1193[1]
        : local.iter_1192.tape_ptr)

    code_ptr = 2 + (
      local.code_1193[0] == "["
        ? local.iter_1192.tape[local.iter_1192.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1192.code_ptr)] : local.iter_1192.code_ptr :
      local.code_1193[0] == "]"
        ? local.iter_1192.tape[local.iter_1192.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1192.code_ptr)] : local.iter_1192.code_ptr
        : local.iter_1192.code_ptr)

    steps_taken = 1 + local.iter_1192.steps_taken
  }
}

locals {
  code_1194 = (try(local.iter_1193.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1193.code_ptr, local.iter_1193.code_ptr + 2)
    : [null])

  input_1194 = (local.code_1194[0] == ","
    ? substr(local.input_1193, local.code_1194[1], -1)
    : local.input_1193)

  iter_1194 = try(local.iter_1193.code_ptr >= length(var.code), true) ? local.iter_1193 : {
    output = (local.code_1194[0] == "."
      ? "${local.iter_1193.output}${join("", [for _ in range(local.code_1194[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1193.tape[local.iter_1193.tape_ptr]))])}"
      : local.iter_1193.output)
    
    tape = (
      local.code_1194[0] == "+"
        ? [for i, b in local.iter_1193.tape : (i == local.iter_1193.tape_ptr ? (b + local.code_1194[1]) % 256 : b)] :
      local.code_1194[0] == "-"
        ? [for i, b in local.iter_1193.tape : (i == local.iter_1193.tape_ptr ? (b - local.code_1194[1] + 256) % 256 : b)] :
      local.code_1194[0] == ","
        ? [for i, b in local.iter_1193.tape : (i == local.iter_1193.tape_ptr ? local.ascii_lookup[substr(local.input_1194, 0, 1)] : b)]
        : local.iter_1193.tape)

    tape_ptr = (
      local.code_1194[0] == "<"
        ? local.iter_1193.tape_ptr - local.code_1194[1] :
      local.code_1194[0] == ">"
        ? local.iter_1193.tape_ptr + local.code_1194[1]
        : local.iter_1193.tape_ptr)

    code_ptr = 2 + (
      local.code_1194[0] == "["
        ? local.iter_1193.tape[local.iter_1193.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1193.code_ptr)] : local.iter_1193.code_ptr :
      local.code_1194[0] == "]"
        ? local.iter_1193.tape[local.iter_1193.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1193.code_ptr)] : local.iter_1193.code_ptr
        : local.iter_1193.code_ptr)

    steps_taken = 1 + local.iter_1193.steps_taken
  }
}

locals {
  code_1195 = (try(local.iter_1194.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1194.code_ptr, local.iter_1194.code_ptr + 2)
    : [null])

  input_1195 = (local.code_1195[0] == ","
    ? substr(local.input_1194, local.code_1195[1], -1)
    : local.input_1194)

  iter_1195 = try(local.iter_1194.code_ptr >= length(var.code), true) ? local.iter_1194 : {
    output = (local.code_1195[0] == "."
      ? "${local.iter_1194.output}${join("", [for _ in range(local.code_1195[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1194.tape[local.iter_1194.tape_ptr]))])}"
      : local.iter_1194.output)
    
    tape = (
      local.code_1195[0] == "+"
        ? [for i, b in local.iter_1194.tape : (i == local.iter_1194.tape_ptr ? (b + local.code_1195[1]) % 256 : b)] :
      local.code_1195[0] == "-"
        ? [for i, b in local.iter_1194.tape : (i == local.iter_1194.tape_ptr ? (b - local.code_1195[1] + 256) % 256 : b)] :
      local.code_1195[0] == ","
        ? [for i, b in local.iter_1194.tape : (i == local.iter_1194.tape_ptr ? local.ascii_lookup[substr(local.input_1195, 0, 1)] : b)]
        : local.iter_1194.tape)

    tape_ptr = (
      local.code_1195[0] == "<"
        ? local.iter_1194.tape_ptr - local.code_1195[1] :
      local.code_1195[0] == ">"
        ? local.iter_1194.tape_ptr + local.code_1195[1]
        : local.iter_1194.tape_ptr)

    code_ptr = 2 + (
      local.code_1195[0] == "["
        ? local.iter_1194.tape[local.iter_1194.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1194.code_ptr)] : local.iter_1194.code_ptr :
      local.code_1195[0] == "]"
        ? local.iter_1194.tape[local.iter_1194.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1194.code_ptr)] : local.iter_1194.code_ptr
        : local.iter_1194.code_ptr)

    steps_taken = 1 + local.iter_1194.steps_taken
  }
}

locals {
  code_1196 = (try(local.iter_1195.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1195.code_ptr, local.iter_1195.code_ptr + 2)
    : [null])

  input_1196 = (local.code_1196[0] == ","
    ? substr(local.input_1195, local.code_1196[1], -1)
    : local.input_1195)

  iter_1196 = try(local.iter_1195.code_ptr >= length(var.code), true) ? local.iter_1195 : {
    output = (local.code_1196[0] == "."
      ? "${local.iter_1195.output}${join("", [for _ in range(local.code_1196[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1195.tape[local.iter_1195.tape_ptr]))])}"
      : local.iter_1195.output)
    
    tape = (
      local.code_1196[0] == "+"
        ? [for i, b in local.iter_1195.tape : (i == local.iter_1195.tape_ptr ? (b + local.code_1196[1]) % 256 : b)] :
      local.code_1196[0] == "-"
        ? [for i, b in local.iter_1195.tape : (i == local.iter_1195.tape_ptr ? (b - local.code_1196[1] + 256) % 256 : b)] :
      local.code_1196[0] == ","
        ? [for i, b in local.iter_1195.tape : (i == local.iter_1195.tape_ptr ? local.ascii_lookup[substr(local.input_1196, 0, 1)] : b)]
        : local.iter_1195.tape)

    tape_ptr = (
      local.code_1196[0] == "<"
        ? local.iter_1195.tape_ptr - local.code_1196[1] :
      local.code_1196[0] == ">"
        ? local.iter_1195.tape_ptr + local.code_1196[1]
        : local.iter_1195.tape_ptr)

    code_ptr = 2 + (
      local.code_1196[0] == "["
        ? local.iter_1195.tape[local.iter_1195.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1195.code_ptr)] : local.iter_1195.code_ptr :
      local.code_1196[0] == "]"
        ? local.iter_1195.tape[local.iter_1195.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1195.code_ptr)] : local.iter_1195.code_ptr
        : local.iter_1195.code_ptr)

    steps_taken = 1 + local.iter_1195.steps_taken
  }
}

locals {
  code_1197 = (try(local.iter_1196.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1196.code_ptr, local.iter_1196.code_ptr + 2)
    : [null])

  input_1197 = (local.code_1197[0] == ","
    ? substr(local.input_1196, local.code_1197[1], -1)
    : local.input_1196)

  iter_1197 = try(local.iter_1196.code_ptr >= length(var.code), true) ? local.iter_1196 : {
    output = (local.code_1197[0] == "."
      ? "${local.iter_1196.output}${join("", [for _ in range(local.code_1197[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1196.tape[local.iter_1196.tape_ptr]))])}"
      : local.iter_1196.output)
    
    tape = (
      local.code_1197[0] == "+"
        ? [for i, b in local.iter_1196.tape : (i == local.iter_1196.tape_ptr ? (b + local.code_1197[1]) % 256 : b)] :
      local.code_1197[0] == "-"
        ? [for i, b in local.iter_1196.tape : (i == local.iter_1196.tape_ptr ? (b - local.code_1197[1] + 256) % 256 : b)] :
      local.code_1197[0] == ","
        ? [for i, b in local.iter_1196.tape : (i == local.iter_1196.tape_ptr ? local.ascii_lookup[substr(local.input_1197, 0, 1)] : b)]
        : local.iter_1196.tape)

    tape_ptr = (
      local.code_1197[0] == "<"
        ? local.iter_1196.tape_ptr - local.code_1197[1] :
      local.code_1197[0] == ">"
        ? local.iter_1196.tape_ptr + local.code_1197[1]
        : local.iter_1196.tape_ptr)

    code_ptr = 2 + (
      local.code_1197[0] == "["
        ? local.iter_1196.tape[local.iter_1196.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1196.code_ptr)] : local.iter_1196.code_ptr :
      local.code_1197[0] == "]"
        ? local.iter_1196.tape[local.iter_1196.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1196.code_ptr)] : local.iter_1196.code_ptr
        : local.iter_1196.code_ptr)

    steps_taken = 1 + local.iter_1196.steps_taken
  }
}

locals {
  code_1198 = (try(local.iter_1197.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1197.code_ptr, local.iter_1197.code_ptr + 2)
    : [null])

  input_1198 = (local.code_1198[0] == ","
    ? substr(local.input_1197, local.code_1198[1], -1)
    : local.input_1197)

  iter_1198 = try(local.iter_1197.code_ptr >= length(var.code), true) ? local.iter_1197 : {
    output = (local.code_1198[0] == "."
      ? "${local.iter_1197.output}${join("", [for _ in range(local.code_1198[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1197.tape[local.iter_1197.tape_ptr]))])}"
      : local.iter_1197.output)
    
    tape = (
      local.code_1198[0] == "+"
        ? [for i, b in local.iter_1197.tape : (i == local.iter_1197.tape_ptr ? (b + local.code_1198[1]) % 256 : b)] :
      local.code_1198[0] == "-"
        ? [for i, b in local.iter_1197.tape : (i == local.iter_1197.tape_ptr ? (b - local.code_1198[1] + 256) % 256 : b)] :
      local.code_1198[0] == ","
        ? [for i, b in local.iter_1197.tape : (i == local.iter_1197.tape_ptr ? local.ascii_lookup[substr(local.input_1198, 0, 1)] : b)]
        : local.iter_1197.tape)

    tape_ptr = (
      local.code_1198[0] == "<"
        ? local.iter_1197.tape_ptr - local.code_1198[1] :
      local.code_1198[0] == ">"
        ? local.iter_1197.tape_ptr + local.code_1198[1]
        : local.iter_1197.tape_ptr)

    code_ptr = 2 + (
      local.code_1198[0] == "["
        ? local.iter_1197.tape[local.iter_1197.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1197.code_ptr)] : local.iter_1197.code_ptr :
      local.code_1198[0] == "]"
        ? local.iter_1197.tape[local.iter_1197.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1197.code_ptr)] : local.iter_1197.code_ptr
        : local.iter_1197.code_ptr)

    steps_taken = 1 + local.iter_1197.steps_taken
  }
}

locals {
  code_1199 = (try(local.iter_1198.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1198.code_ptr, local.iter_1198.code_ptr + 2)
    : [null])

  input_1199 = (local.code_1199[0] == ","
    ? substr(local.input_1198, local.code_1199[1], -1)
    : local.input_1198)

  iter_1199 = try(local.iter_1198.code_ptr >= length(var.code), true) ? local.iter_1198 : {
    output = (local.code_1199[0] == "."
      ? "${local.iter_1198.output}${join("", [for _ in range(local.code_1199[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1198.tape[local.iter_1198.tape_ptr]))])}"
      : local.iter_1198.output)
    
    tape = (
      local.code_1199[0] == "+"
        ? [for i, b in local.iter_1198.tape : (i == local.iter_1198.tape_ptr ? (b + local.code_1199[1]) % 256 : b)] :
      local.code_1199[0] == "-"
        ? [for i, b in local.iter_1198.tape : (i == local.iter_1198.tape_ptr ? (b - local.code_1199[1] + 256) % 256 : b)] :
      local.code_1199[0] == ","
        ? [for i, b in local.iter_1198.tape : (i == local.iter_1198.tape_ptr ? local.ascii_lookup[substr(local.input_1199, 0, 1)] : b)]
        : local.iter_1198.tape)

    tape_ptr = (
      local.code_1199[0] == "<"
        ? local.iter_1198.tape_ptr - local.code_1199[1] :
      local.code_1199[0] == ">"
        ? local.iter_1198.tape_ptr + local.code_1199[1]
        : local.iter_1198.tape_ptr)

    code_ptr = 2 + (
      local.code_1199[0] == "["
        ? local.iter_1198.tape[local.iter_1198.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1198.code_ptr)] : local.iter_1198.code_ptr :
      local.code_1199[0] == "]"
        ? local.iter_1198.tape[local.iter_1198.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1198.code_ptr)] : local.iter_1198.code_ptr
        : local.iter_1198.code_ptr)

    steps_taken = 1 + local.iter_1198.steps_taken
  }
}

locals {
  code_1200 = (try(local.iter_1199.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1199.code_ptr, local.iter_1199.code_ptr + 2)
    : [null])

  input_1200 = (local.code_1200[0] == ","
    ? substr(local.input_1199, local.code_1200[1], -1)
    : local.input_1199)

  iter_1200 = try(local.iter_1199.code_ptr >= length(var.code), true) ? local.iter_1199 : {
    output = (local.code_1200[0] == "."
      ? "${local.iter_1199.output}${join("", [for _ in range(local.code_1200[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1199.tape[local.iter_1199.tape_ptr]))])}"
      : local.iter_1199.output)
    
    tape = (
      local.code_1200[0] == "+"
        ? [for i, b in local.iter_1199.tape : (i == local.iter_1199.tape_ptr ? (b + local.code_1200[1]) % 256 : b)] :
      local.code_1200[0] == "-"
        ? [for i, b in local.iter_1199.tape : (i == local.iter_1199.tape_ptr ? (b - local.code_1200[1] + 256) % 256 : b)] :
      local.code_1200[0] == ","
        ? [for i, b in local.iter_1199.tape : (i == local.iter_1199.tape_ptr ? local.ascii_lookup[substr(local.input_1200, 0, 1)] : b)]
        : local.iter_1199.tape)

    tape_ptr = (
      local.code_1200[0] == "<"
        ? local.iter_1199.tape_ptr - local.code_1200[1] :
      local.code_1200[0] == ">"
        ? local.iter_1199.tape_ptr + local.code_1200[1]
        : local.iter_1199.tape_ptr)

    code_ptr = 2 + (
      local.code_1200[0] == "["
        ? local.iter_1199.tape[local.iter_1199.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1199.code_ptr)] : local.iter_1199.code_ptr :
      local.code_1200[0] == "]"
        ? local.iter_1199.tape[local.iter_1199.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1199.code_ptr)] : local.iter_1199.code_ptr
        : local.iter_1199.code_ptr)

    steps_taken = 1 + local.iter_1199.steps_taken
  }
}

locals {
  code_1201 = (try(local.iter_1200.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1200.code_ptr, local.iter_1200.code_ptr + 2)
    : [null])

  input_1201 = (local.code_1201[0] == ","
    ? substr(local.input_1200, local.code_1201[1], -1)
    : local.input_1200)

  iter_1201 = try(local.iter_1200.code_ptr >= length(var.code), true) ? local.iter_1200 : {
    output = (local.code_1201[0] == "."
      ? "${local.iter_1200.output}${join("", [for _ in range(local.code_1201[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1200.tape[local.iter_1200.tape_ptr]))])}"
      : local.iter_1200.output)
    
    tape = (
      local.code_1201[0] == "+"
        ? [for i, b in local.iter_1200.tape : (i == local.iter_1200.tape_ptr ? (b + local.code_1201[1]) % 256 : b)] :
      local.code_1201[0] == "-"
        ? [for i, b in local.iter_1200.tape : (i == local.iter_1200.tape_ptr ? (b - local.code_1201[1] + 256) % 256 : b)] :
      local.code_1201[0] == ","
        ? [for i, b in local.iter_1200.tape : (i == local.iter_1200.tape_ptr ? local.ascii_lookup[substr(local.input_1201, 0, 1)] : b)]
        : local.iter_1200.tape)

    tape_ptr = (
      local.code_1201[0] == "<"
        ? local.iter_1200.tape_ptr - local.code_1201[1] :
      local.code_1201[0] == ">"
        ? local.iter_1200.tape_ptr + local.code_1201[1]
        : local.iter_1200.tape_ptr)

    code_ptr = 2 + (
      local.code_1201[0] == "["
        ? local.iter_1200.tape[local.iter_1200.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1200.code_ptr)] : local.iter_1200.code_ptr :
      local.code_1201[0] == "]"
        ? local.iter_1200.tape[local.iter_1200.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1200.code_ptr)] : local.iter_1200.code_ptr
        : local.iter_1200.code_ptr)

    steps_taken = 1 + local.iter_1200.steps_taken
  }
}

locals {
  code_1202 = (try(local.iter_1201.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1201.code_ptr, local.iter_1201.code_ptr + 2)
    : [null])

  input_1202 = (local.code_1202[0] == ","
    ? substr(local.input_1201, local.code_1202[1], -1)
    : local.input_1201)

  iter_1202 = try(local.iter_1201.code_ptr >= length(var.code), true) ? local.iter_1201 : {
    output = (local.code_1202[0] == "."
      ? "${local.iter_1201.output}${join("", [for _ in range(local.code_1202[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1201.tape[local.iter_1201.tape_ptr]))])}"
      : local.iter_1201.output)
    
    tape = (
      local.code_1202[0] == "+"
        ? [for i, b in local.iter_1201.tape : (i == local.iter_1201.tape_ptr ? (b + local.code_1202[1]) % 256 : b)] :
      local.code_1202[0] == "-"
        ? [for i, b in local.iter_1201.tape : (i == local.iter_1201.tape_ptr ? (b - local.code_1202[1] + 256) % 256 : b)] :
      local.code_1202[0] == ","
        ? [for i, b in local.iter_1201.tape : (i == local.iter_1201.tape_ptr ? local.ascii_lookup[substr(local.input_1202, 0, 1)] : b)]
        : local.iter_1201.tape)

    tape_ptr = (
      local.code_1202[0] == "<"
        ? local.iter_1201.tape_ptr - local.code_1202[1] :
      local.code_1202[0] == ">"
        ? local.iter_1201.tape_ptr + local.code_1202[1]
        : local.iter_1201.tape_ptr)

    code_ptr = 2 + (
      local.code_1202[0] == "["
        ? local.iter_1201.tape[local.iter_1201.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1201.code_ptr)] : local.iter_1201.code_ptr :
      local.code_1202[0] == "]"
        ? local.iter_1201.tape[local.iter_1201.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1201.code_ptr)] : local.iter_1201.code_ptr
        : local.iter_1201.code_ptr)

    steps_taken = 1 + local.iter_1201.steps_taken
  }
}

locals {
  code_1203 = (try(local.iter_1202.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1202.code_ptr, local.iter_1202.code_ptr + 2)
    : [null])

  input_1203 = (local.code_1203[0] == ","
    ? substr(local.input_1202, local.code_1203[1], -1)
    : local.input_1202)

  iter_1203 = try(local.iter_1202.code_ptr >= length(var.code), true) ? local.iter_1202 : {
    output = (local.code_1203[0] == "."
      ? "${local.iter_1202.output}${join("", [for _ in range(local.code_1203[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1202.tape[local.iter_1202.tape_ptr]))])}"
      : local.iter_1202.output)
    
    tape = (
      local.code_1203[0] == "+"
        ? [for i, b in local.iter_1202.tape : (i == local.iter_1202.tape_ptr ? (b + local.code_1203[1]) % 256 : b)] :
      local.code_1203[0] == "-"
        ? [for i, b in local.iter_1202.tape : (i == local.iter_1202.tape_ptr ? (b - local.code_1203[1] + 256) % 256 : b)] :
      local.code_1203[0] == ","
        ? [for i, b in local.iter_1202.tape : (i == local.iter_1202.tape_ptr ? local.ascii_lookup[substr(local.input_1203, 0, 1)] : b)]
        : local.iter_1202.tape)

    tape_ptr = (
      local.code_1203[0] == "<"
        ? local.iter_1202.tape_ptr - local.code_1203[1] :
      local.code_1203[0] == ">"
        ? local.iter_1202.tape_ptr + local.code_1203[1]
        : local.iter_1202.tape_ptr)

    code_ptr = 2 + (
      local.code_1203[0] == "["
        ? local.iter_1202.tape[local.iter_1202.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1202.code_ptr)] : local.iter_1202.code_ptr :
      local.code_1203[0] == "]"
        ? local.iter_1202.tape[local.iter_1202.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1202.code_ptr)] : local.iter_1202.code_ptr
        : local.iter_1202.code_ptr)

    steps_taken = 1 + local.iter_1202.steps_taken
  }
}

locals {
  code_1204 = (try(local.iter_1203.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1203.code_ptr, local.iter_1203.code_ptr + 2)
    : [null])

  input_1204 = (local.code_1204[0] == ","
    ? substr(local.input_1203, local.code_1204[1], -1)
    : local.input_1203)

  iter_1204 = try(local.iter_1203.code_ptr >= length(var.code), true) ? local.iter_1203 : {
    output = (local.code_1204[0] == "."
      ? "${local.iter_1203.output}${join("", [for _ in range(local.code_1204[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1203.tape[local.iter_1203.tape_ptr]))])}"
      : local.iter_1203.output)
    
    tape = (
      local.code_1204[0] == "+"
        ? [for i, b in local.iter_1203.tape : (i == local.iter_1203.tape_ptr ? (b + local.code_1204[1]) % 256 : b)] :
      local.code_1204[0] == "-"
        ? [for i, b in local.iter_1203.tape : (i == local.iter_1203.tape_ptr ? (b - local.code_1204[1] + 256) % 256 : b)] :
      local.code_1204[0] == ","
        ? [for i, b in local.iter_1203.tape : (i == local.iter_1203.tape_ptr ? local.ascii_lookup[substr(local.input_1204, 0, 1)] : b)]
        : local.iter_1203.tape)

    tape_ptr = (
      local.code_1204[0] == "<"
        ? local.iter_1203.tape_ptr - local.code_1204[1] :
      local.code_1204[0] == ">"
        ? local.iter_1203.tape_ptr + local.code_1204[1]
        : local.iter_1203.tape_ptr)

    code_ptr = 2 + (
      local.code_1204[0] == "["
        ? local.iter_1203.tape[local.iter_1203.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1203.code_ptr)] : local.iter_1203.code_ptr :
      local.code_1204[0] == "]"
        ? local.iter_1203.tape[local.iter_1203.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1203.code_ptr)] : local.iter_1203.code_ptr
        : local.iter_1203.code_ptr)

    steps_taken = 1 + local.iter_1203.steps_taken
  }
}

locals {
  code_1205 = (try(local.iter_1204.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1204.code_ptr, local.iter_1204.code_ptr + 2)
    : [null])

  input_1205 = (local.code_1205[0] == ","
    ? substr(local.input_1204, local.code_1205[1], -1)
    : local.input_1204)

  iter_1205 = try(local.iter_1204.code_ptr >= length(var.code), true) ? local.iter_1204 : {
    output = (local.code_1205[0] == "."
      ? "${local.iter_1204.output}${join("", [for _ in range(local.code_1205[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1204.tape[local.iter_1204.tape_ptr]))])}"
      : local.iter_1204.output)
    
    tape = (
      local.code_1205[0] == "+"
        ? [for i, b in local.iter_1204.tape : (i == local.iter_1204.tape_ptr ? (b + local.code_1205[1]) % 256 : b)] :
      local.code_1205[0] == "-"
        ? [for i, b in local.iter_1204.tape : (i == local.iter_1204.tape_ptr ? (b - local.code_1205[1] + 256) % 256 : b)] :
      local.code_1205[0] == ","
        ? [for i, b in local.iter_1204.tape : (i == local.iter_1204.tape_ptr ? local.ascii_lookup[substr(local.input_1205, 0, 1)] : b)]
        : local.iter_1204.tape)

    tape_ptr = (
      local.code_1205[0] == "<"
        ? local.iter_1204.tape_ptr - local.code_1205[1] :
      local.code_1205[0] == ">"
        ? local.iter_1204.tape_ptr + local.code_1205[1]
        : local.iter_1204.tape_ptr)

    code_ptr = 2 + (
      local.code_1205[0] == "["
        ? local.iter_1204.tape[local.iter_1204.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1204.code_ptr)] : local.iter_1204.code_ptr :
      local.code_1205[0] == "]"
        ? local.iter_1204.tape[local.iter_1204.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1204.code_ptr)] : local.iter_1204.code_ptr
        : local.iter_1204.code_ptr)

    steps_taken = 1 + local.iter_1204.steps_taken
  }
}

locals {
  code_1206 = (try(local.iter_1205.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1205.code_ptr, local.iter_1205.code_ptr + 2)
    : [null])

  input_1206 = (local.code_1206[0] == ","
    ? substr(local.input_1205, local.code_1206[1], -1)
    : local.input_1205)

  iter_1206 = try(local.iter_1205.code_ptr >= length(var.code), true) ? local.iter_1205 : {
    output = (local.code_1206[0] == "."
      ? "${local.iter_1205.output}${join("", [for _ in range(local.code_1206[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1205.tape[local.iter_1205.tape_ptr]))])}"
      : local.iter_1205.output)
    
    tape = (
      local.code_1206[0] == "+"
        ? [for i, b in local.iter_1205.tape : (i == local.iter_1205.tape_ptr ? (b + local.code_1206[1]) % 256 : b)] :
      local.code_1206[0] == "-"
        ? [for i, b in local.iter_1205.tape : (i == local.iter_1205.tape_ptr ? (b - local.code_1206[1] + 256) % 256 : b)] :
      local.code_1206[0] == ","
        ? [for i, b in local.iter_1205.tape : (i == local.iter_1205.tape_ptr ? local.ascii_lookup[substr(local.input_1206, 0, 1)] : b)]
        : local.iter_1205.tape)

    tape_ptr = (
      local.code_1206[0] == "<"
        ? local.iter_1205.tape_ptr - local.code_1206[1] :
      local.code_1206[0] == ">"
        ? local.iter_1205.tape_ptr + local.code_1206[1]
        : local.iter_1205.tape_ptr)

    code_ptr = 2 + (
      local.code_1206[0] == "["
        ? local.iter_1205.tape[local.iter_1205.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1205.code_ptr)] : local.iter_1205.code_ptr :
      local.code_1206[0] == "]"
        ? local.iter_1205.tape[local.iter_1205.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1205.code_ptr)] : local.iter_1205.code_ptr
        : local.iter_1205.code_ptr)

    steps_taken = 1 + local.iter_1205.steps_taken
  }
}

locals {
  code_1207 = (try(local.iter_1206.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1206.code_ptr, local.iter_1206.code_ptr + 2)
    : [null])

  input_1207 = (local.code_1207[0] == ","
    ? substr(local.input_1206, local.code_1207[1], -1)
    : local.input_1206)

  iter_1207 = try(local.iter_1206.code_ptr >= length(var.code), true) ? local.iter_1206 : {
    output = (local.code_1207[0] == "."
      ? "${local.iter_1206.output}${join("", [for _ in range(local.code_1207[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1206.tape[local.iter_1206.tape_ptr]))])}"
      : local.iter_1206.output)
    
    tape = (
      local.code_1207[0] == "+"
        ? [for i, b in local.iter_1206.tape : (i == local.iter_1206.tape_ptr ? (b + local.code_1207[1]) % 256 : b)] :
      local.code_1207[0] == "-"
        ? [for i, b in local.iter_1206.tape : (i == local.iter_1206.tape_ptr ? (b - local.code_1207[1] + 256) % 256 : b)] :
      local.code_1207[0] == ","
        ? [for i, b in local.iter_1206.tape : (i == local.iter_1206.tape_ptr ? local.ascii_lookup[substr(local.input_1207, 0, 1)] : b)]
        : local.iter_1206.tape)

    tape_ptr = (
      local.code_1207[0] == "<"
        ? local.iter_1206.tape_ptr - local.code_1207[1] :
      local.code_1207[0] == ">"
        ? local.iter_1206.tape_ptr + local.code_1207[1]
        : local.iter_1206.tape_ptr)

    code_ptr = 2 + (
      local.code_1207[0] == "["
        ? local.iter_1206.tape[local.iter_1206.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1206.code_ptr)] : local.iter_1206.code_ptr :
      local.code_1207[0] == "]"
        ? local.iter_1206.tape[local.iter_1206.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1206.code_ptr)] : local.iter_1206.code_ptr
        : local.iter_1206.code_ptr)

    steps_taken = 1 + local.iter_1206.steps_taken
  }
}

locals {
  code_1208 = (try(local.iter_1207.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1207.code_ptr, local.iter_1207.code_ptr + 2)
    : [null])

  input_1208 = (local.code_1208[0] == ","
    ? substr(local.input_1207, local.code_1208[1], -1)
    : local.input_1207)

  iter_1208 = try(local.iter_1207.code_ptr >= length(var.code), true) ? local.iter_1207 : {
    output = (local.code_1208[0] == "."
      ? "${local.iter_1207.output}${join("", [for _ in range(local.code_1208[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1207.tape[local.iter_1207.tape_ptr]))])}"
      : local.iter_1207.output)
    
    tape = (
      local.code_1208[0] == "+"
        ? [for i, b in local.iter_1207.tape : (i == local.iter_1207.tape_ptr ? (b + local.code_1208[1]) % 256 : b)] :
      local.code_1208[0] == "-"
        ? [for i, b in local.iter_1207.tape : (i == local.iter_1207.tape_ptr ? (b - local.code_1208[1] + 256) % 256 : b)] :
      local.code_1208[0] == ","
        ? [for i, b in local.iter_1207.tape : (i == local.iter_1207.tape_ptr ? local.ascii_lookup[substr(local.input_1208, 0, 1)] : b)]
        : local.iter_1207.tape)

    tape_ptr = (
      local.code_1208[0] == "<"
        ? local.iter_1207.tape_ptr - local.code_1208[1] :
      local.code_1208[0] == ">"
        ? local.iter_1207.tape_ptr + local.code_1208[1]
        : local.iter_1207.tape_ptr)

    code_ptr = 2 + (
      local.code_1208[0] == "["
        ? local.iter_1207.tape[local.iter_1207.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1207.code_ptr)] : local.iter_1207.code_ptr :
      local.code_1208[0] == "]"
        ? local.iter_1207.tape[local.iter_1207.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1207.code_ptr)] : local.iter_1207.code_ptr
        : local.iter_1207.code_ptr)

    steps_taken = 1 + local.iter_1207.steps_taken
  }
}

locals {
  code_1209 = (try(local.iter_1208.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1208.code_ptr, local.iter_1208.code_ptr + 2)
    : [null])

  input_1209 = (local.code_1209[0] == ","
    ? substr(local.input_1208, local.code_1209[1], -1)
    : local.input_1208)

  iter_1209 = try(local.iter_1208.code_ptr >= length(var.code), true) ? local.iter_1208 : {
    output = (local.code_1209[0] == "."
      ? "${local.iter_1208.output}${join("", [for _ in range(local.code_1209[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1208.tape[local.iter_1208.tape_ptr]))])}"
      : local.iter_1208.output)
    
    tape = (
      local.code_1209[0] == "+"
        ? [for i, b in local.iter_1208.tape : (i == local.iter_1208.tape_ptr ? (b + local.code_1209[1]) % 256 : b)] :
      local.code_1209[0] == "-"
        ? [for i, b in local.iter_1208.tape : (i == local.iter_1208.tape_ptr ? (b - local.code_1209[1] + 256) % 256 : b)] :
      local.code_1209[0] == ","
        ? [for i, b in local.iter_1208.tape : (i == local.iter_1208.tape_ptr ? local.ascii_lookup[substr(local.input_1209, 0, 1)] : b)]
        : local.iter_1208.tape)

    tape_ptr = (
      local.code_1209[0] == "<"
        ? local.iter_1208.tape_ptr - local.code_1209[1] :
      local.code_1209[0] == ">"
        ? local.iter_1208.tape_ptr + local.code_1209[1]
        : local.iter_1208.tape_ptr)

    code_ptr = 2 + (
      local.code_1209[0] == "["
        ? local.iter_1208.tape[local.iter_1208.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1208.code_ptr)] : local.iter_1208.code_ptr :
      local.code_1209[0] == "]"
        ? local.iter_1208.tape[local.iter_1208.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1208.code_ptr)] : local.iter_1208.code_ptr
        : local.iter_1208.code_ptr)

    steps_taken = 1 + local.iter_1208.steps_taken
  }
}

locals {
  code_1210 = (try(local.iter_1209.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1209.code_ptr, local.iter_1209.code_ptr + 2)
    : [null])

  input_1210 = (local.code_1210[0] == ","
    ? substr(local.input_1209, local.code_1210[1], -1)
    : local.input_1209)

  iter_1210 = try(local.iter_1209.code_ptr >= length(var.code), true) ? local.iter_1209 : {
    output = (local.code_1210[0] == "."
      ? "${local.iter_1209.output}${join("", [for _ in range(local.code_1210[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1209.tape[local.iter_1209.tape_ptr]))])}"
      : local.iter_1209.output)
    
    tape = (
      local.code_1210[0] == "+"
        ? [for i, b in local.iter_1209.tape : (i == local.iter_1209.tape_ptr ? (b + local.code_1210[1]) % 256 : b)] :
      local.code_1210[0] == "-"
        ? [for i, b in local.iter_1209.tape : (i == local.iter_1209.tape_ptr ? (b - local.code_1210[1] + 256) % 256 : b)] :
      local.code_1210[0] == ","
        ? [for i, b in local.iter_1209.tape : (i == local.iter_1209.tape_ptr ? local.ascii_lookup[substr(local.input_1210, 0, 1)] : b)]
        : local.iter_1209.tape)

    tape_ptr = (
      local.code_1210[0] == "<"
        ? local.iter_1209.tape_ptr - local.code_1210[1] :
      local.code_1210[0] == ">"
        ? local.iter_1209.tape_ptr + local.code_1210[1]
        : local.iter_1209.tape_ptr)

    code_ptr = 2 + (
      local.code_1210[0] == "["
        ? local.iter_1209.tape[local.iter_1209.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1209.code_ptr)] : local.iter_1209.code_ptr :
      local.code_1210[0] == "]"
        ? local.iter_1209.tape[local.iter_1209.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1209.code_ptr)] : local.iter_1209.code_ptr
        : local.iter_1209.code_ptr)

    steps_taken = 1 + local.iter_1209.steps_taken
  }
}

locals {
  code_1211 = (try(local.iter_1210.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1210.code_ptr, local.iter_1210.code_ptr + 2)
    : [null])

  input_1211 = (local.code_1211[0] == ","
    ? substr(local.input_1210, local.code_1211[1], -1)
    : local.input_1210)

  iter_1211 = try(local.iter_1210.code_ptr >= length(var.code), true) ? local.iter_1210 : {
    output = (local.code_1211[0] == "."
      ? "${local.iter_1210.output}${join("", [for _ in range(local.code_1211[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1210.tape[local.iter_1210.tape_ptr]))])}"
      : local.iter_1210.output)
    
    tape = (
      local.code_1211[0] == "+"
        ? [for i, b in local.iter_1210.tape : (i == local.iter_1210.tape_ptr ? (b + local.code_1211[1]) % 256 : b)] :
      local.code_1211[0] == "-"
        ? [for i, b in local.iter_1210.tape : (i == local.iter_1210.tape_ptr ? (b - local.code_1211[1] + 256) % 256 : b)] :
      local.code_1211[0] == ","
        ? [for i, b in local.iter_1210.tape : (i == local.iter_1210.tape_ptr ? local.ascii_lookup[substr(local.input_1211, 0, 1)] : b)]
        : local.iter_1210.tape)

    tape_ptr = (
      local.code_1211[0] == "<"
        ? local.iter_1210.tape_ptr - local.code_1211[1] :
      local.code_1211[0] == ">"
        ? local.iter_1210.tape_ptr + local.code_1211[1]
        : local.iter_1210.tape_ptr)

    code_ptr = 2 + (
      local.code_1211[0] == "["
        ? local.iter_1210.tape[local.iter_1210.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1210.code_ptr)] : local.iter_1210.code_ptr :
      local.code_1211[0] == "]"
        ? local.iter_1210.tape[local.iter_1210.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1210.code_ptr)] : local.iter_1210.code_ptr
        : local.iter_1210.code_ptr)

    steps_taken = 1 + local.iter_1210.steps_taken
  }
}

locals {
  code_1212 = (try(local.iter_1211.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1211.code_ptr, local.iter_1211.code_ptr + 2)
    : [null])

  input_1212 = (local.code_1212[0] == ","
    ? substr(local.input_1211, local.code_1212[1], -1)
    : local.input_1211)

  iter_1212 = try(local.iter_1211.code_ptr >= length(var.code), true) ? local.iter_1211 : {
    output = (local.code_1212[0] == "."
      ? "${local.iter_1211.output}${join("", [for _ in range(local.code_1212[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1211.tape[local.iter_1211.tape_ptr]))])}"
      : local.iter_1211.output)
    
    tape = (
      local.code_1212[0] == "+"
        ? [for i, b in local.iter_1211.tape : (i == local.iter_1211.tape_ptr ? (b + local.code_1212[1]) % 256 : b)] :
      local.code_1212[0] == "-"
        ? [for i, b in local.iter_1211.tape : (i == local.iter_1211.tape_ptr ? (b - local.code_1212[1] + 256) % 256 : b)] :
      local.code_1212[0] == ","
        ? [for i, b in local.iter_1211.tape : (i == local.iter_1211.tape_ptr ? local.ascii_lookup[substr(local.input_1212, 0, 1)] : b)]
        : local.iter_1211.tape)

    tape_ptr = (
      local.code_1212[0] == "<"
        ? local.iter_1211.tape_ptr - local.code_1212[1] :
      local.code_1212[0] == ">"
        ? local.iter_1211.tape_ptr + local.code_1212[1]
        : local.iter_1211.tape_ptr)

    code_ptr = 2 + (
      local.code_1212[0] == "["
        ? local.iter_1211.tape[local.iter_1211.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1211.code_ptr)] : local.iter_1211.code_ptr :
      local.code_1212[0] == "]"
        ? local.iter_1211.tape[local.iter_1211.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1211.code_ptr)] : local.iter_1211.code_ptr
        : local.iter_1211.code_ptr)

    steps_taken = 1 + local.iter_1211.steps_taken
  }
}

locals {
  code_1213 = (try(local.iter_1212.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1212.code_ptr, local.iter_1212.code_ptr + 2)
    : [null])

  input_1213 = (local.code_1213[0] == ","
    ? substr(local.input_1212, local.code_1213[1], -1)
    : local.input_1212)

  iter_1213 = try(local.iter_1212.code_ptr >= length(var.code), true) ? local.iter_1212 : {
    output = (local.code_1213[0] == "."
      ? "${local.iter_1212.output}${join("", [for _ in range(local.code_1213[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1212.tape[local.iter_1212.tape_ptr]))])}"
      : local.iter_1212.output)
    
    tape = (
      local.code_1213[0] == "+"
        ? [for i, b in local.iter_1212.tape : (i == local.iter_1212.tape_ptr ? (b + local.code_1213[1]) % 256 : b)] :
      local.code_1213[0] == "-"
        ? [for i, b in local.iter_1212.tape : (i == local.iter_1212.tape_ptr ? (b - local.code_1213[1] + 256) % 256 : b)] :
      local.code_1213[0] == ","
        ? [for i, b in local.iter_1212.tape : (i == local.iter_1212.tape_ptr ? local.ascii_lookup[substr(local.input_1213, 0, 1)] : b)]
        : local.iter_1212.tape)

    tape_ptr = (
      local.code_1213[0] == "<"
        ? local.iter_1212.tape_ptr - local.code_1213[1] :
      local.code_1213[0] == ">"
        ? local.iter_1212.tape_ptr + local.code_1213[1]
        : local.iter_1212.tape_ptr)

    code_ptr = 2 + (
      local.code_1213[0] == "["
        ? local.iter_1212.tape[local.iter_1212.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1212.code_ptr)] : local.iter_1212.code_ptr :
      local.code_1213[0] == "]"
        ? local.iter_1212.tape[local.iter_1212.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1212.code_ptr)] : local.iter_1212.code_ptr
        : local.iter_1212.code_ptr)

    steps_taken = 1 + local.iter_1212.steps_taken
  }
}

locals {
  code_1214 = (try(local.iter_1213.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1213.code_ptr, local.iter_1213.code_ptr + 2)
    : [null])

  input_1214 = (local.code_1214[0] == ","
    ? substr(local.input_1213, local.code_1214[1], -1)
    : local.input_1213)

  iter_1214 = try(local.iter_1213.code_ptr >= length(var.code), true) ? local.iter_1213 : {
    output = (local.code_1214[0] == "."
      ? "${local.iter_1213.output}${join("", [for _ in range(local.code_1214[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1213.tape[local.iter_1213.tape_ptr]))])}"
      : local.iter_1213.output)
    
    tape = (
      local.code_1214[0] == "+"
        ? [for i, b in local.iter_1213.tape : (i == local.iter_1213.tape_ptr ? (b + local.code_1214[1]) % 256 : b)] :
      local.code_1214[0] == "-"
        ? [for i, b in local.iter_1213.tape : (i == local.iter_1213.tape_ptr ? (b - local.code_1214[1] + 256) % 256 : b)] :
      local.code_1214[0] == ","
        ? [for i, b in local.iter_1213.tape : (i == local.iter_1213.tape_ptr ? local.ascii_lookup[substr(local.input_1214, 0, 1)] : b)]
        : local.iter_1213.tape)

    tape_ptr = (
      local.code_1214[0] == "<"
        ? local.iter_1213.tape_ptr - local.code_1214[1] :
      local.code_1214[0] == ">"
        ? local.iter_1213.tape_ptr + local.code_1214[1]
        : local.iter_1213.tape_ptr)

    code_ptr = 2 + (
      local.code_1214[0] == "["
        ? local.iter_1213.tape[local.iter_1213.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1213.code_ptr)] : local.iter_1213.code_ptr :
      local.code_1214[0] == "]"
        ? local.iter_1213.tape[local.iter_1213.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1213.code_ptr)] : local.iter_1213.code_ptr
        : local.iter_1213.code_ptr)

    steps_taken = 1 + local.iter_1213.steps_taken
  }
}

locals {
  code_1215 = (try(local.iter_1214.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1214.code_ptr, local.iter_1214.code_ptr + 2)
    : [null])

  input_1215 = (local.code_1215[0] == ","
    ? substr(local.input_1214, local.code_1215[1], -1)
    : local.input_1214)

  iter_1215 = try(local.iter_1214.code_ptr >= length(var.code), true) ? local.iter_1214 : {
    output = (local.code_1215[0] == "."
      ? "${local.iter_1214.output}${join("", [for _ in range(local.code_1215[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1214.tape[local.iter_1214.tape_ptr]))])}"
      : local.iter_1214.output)
    
    tape = (
      local.code_1215[0] == "+"
        ? [for i, b in local.iter_1214.tape : (i == local.iter_1214.tape_ptr ? (b + local.code_1215[1]) % 256 : b)] :
      local.code_1215[0] == "-"
        ? [for i, b in local.iter_1214.tape : (i == local.iter_1214.tape_ptr ? (b - local.code_1215[1] + 256) % 256 : b)] :
      local.code_1215[0] == ","
        ? [for i, b in local.iter_1214.tape : (i == local.iter_1214.tape_ptr ? local.ascii_lookup[substr(local.input_1215, 0, 1)] : b)]
        : local.iter_1214.tape)

    tape_ptr = (
      local.code_1215[0] == "<"
        ? local.iter_1214.tape_ptr - local.code_1215[1] :
      local.code_1215[0] == ">"
        ? local.iter_1214.tape_ptr + local.code_1215[1]
        : local.iter_1214.tape_ptr)

    code_ptr = 2 + (
      local.code_1215[0] == "["
        ? local.iter_1214.tape[local.iter_1214.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1214.code_ptr)] : local.iter_1214.code_ptr :
      local.code_1215[0] == "]"
        ? local.iter_1214.tape[local.iter_1214.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1214.code_ptr)] : local.iter_1214.code_ptr
        : local.iter_1214.code_ptr)

    steps_taken = 1 + local.iter_1214.steps_taken
  }
}

locals {
  code_1216 = (try(local.iter_1215.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1215.code_ptr, local.iter_1215.code_ptr + 2)
    : [null])

  input_1216 = (local.code_1216[0] == ","
    ? substr(local.input_1215, local.code_1216[1], -1)
    : local.input_1215)

  iter_1216 = try(local.iter_1215.code_ptr >= length(var.code), true) ? local.iter_1215 : {
    output = (local.code_1216[0] == "."
      ? "${local.iter_1215.output}${join("", [for _ in range(local.code_1216[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1215.tape[local.iter_1215.tape_ptr]))])}"
      : local.iter_1215.output)
    
    tape = (
      local.code_1216[0] == "+"
        ? [for i, b in local.iter_1215.tape : (i == local.iter_1215.tape_ptr ? (b + local.code_1216[1]) % 256 : b)] :
      local.code_1216[0] == "-"
        ? [for i, b in local.iter_1215.tape : (i == local.iter_1215.tape_ptr ? (b - local.code_1216[1] + 256) % 256 : b)] :
      local.code_1216[0] == ","
        ? [for i, b in local.iter_1215.tape : (i == local.iter_1215.tape_ptr ? local.ascii_lookup[substr(local.input_1216, 0, 1)] : b)]
        : local.iter_1215.tape)

    tape_ptr = (
      local.code_1216[0] == "<"
        ? local.iter_1215.tape_ptr - local.code_1216[1] :
      local.code_1216[0] == ">"
        ? local.iter_1215.tape_ptr + local.code_1216[1]
        : local.iter_1215.tape_ptr)

    code_ptr = 2 + (
      local.code_1216[0] == "["
        ? local.iter_1215.tape[local.iter_1215.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1215.code_ptr)] : local.iter_1215.code_ptr :
      local.code_1216[0] == "]"
        ? local.iter_1215.tape[local.iter_1215.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1215.code_ptr)] : local.iter_1215.code_ptr
        : local.iter_1215.code_ptr)

    steps_taken = 1 + local.iter_1215.steps_taken
  }
}

locals {
  code_1217 = (try(local.iter_1216.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1216.code_ptr, local.iter_1216.code_ptr + 2)
    : [null])

  input_1217 = (local.code_1217[0] == ","
    ? substr(local.input_1216, local.code_1217[1], -1)
    : local.input_1216)

  iter_1217 = try(local.iter_1216.code_ptr >= length(var.code), true) ? local.iter_1216 : {
    output = (local.code_1217[0] == "."
      ? "${local.iter_1216.output}${join("", [for _ in range(local.code_1217[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1216.tape[local.iter_1216.tape_ptr]))])}"
      : local.iter_1216.output)
    
    tape = (
      local.code_1217[0] == "+"
        ? [for i, b in local.iter_1216.tape : (i == local.iter_1216.tape_ptr ? (b + local.code_1217[1]) % 256 : b)] :
      local.code_1217[0] == "-"
        ? [for i, b in local.iter_1216.tape : (i == local.iter_1216.tape_ptr ? (b - local.code_1217[1] + 256) % 256 : b)] :
      local.code_1217[0] == ","
        ? [for i, b in local.iter_1216.tape : (i == local.iter_1216.tape_ptr ? local.ascii_lookup[substr(local.input_1217, 0, 1)] : b)]
        : local.iter_1216.tape)

    tape_ptr = (
      local.code_1217[0] == "<"
        ? local.iter_1216.tape_ptr - local.code_1217[1] :
      local.code_1217[0] == ">"
        ? local.iter_1216.tape_ptr + local.code_1217[1]
        : local.iter_1216.tape_ptr)

    code_ptr = 2 + (
      local.code_1217[0] == "["
        ? local.iter_1216.tape[local.iter_1216.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1216.code_ptr)] : local.iter_1216.code_ptr :
      local.code_1217[0] == "]"
        ? local.iter_1216.tape[local.iter_1216.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1216.code_ptr)] : local.iter_1216.code_ptr
        : local.iter_1216.code_ptr)

    steps_taken = 1 + local.iter_1216.steps_taken
  }
}

locals {
  code_1218 = (try(local.iter_1217.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1217.code_ptr, local.iter_1217.code_ptr + 2)
    : [null])

  input_1218 = (local.code_1218[0] == ","
    ? substr(local.input_1217, local.code_1218[1], -1)
    : local.input_1217)

  iter_1218 = try(local.iter_1217.code_ptr >= length(var.code), true) ? local.iter_1217 : {
    output = (local.code_1218[0] == "."
      ? "${local.iter_1217.output}${join("", [for _ in range(local.code_1218[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1217.tape[local.iter_1217.tape_ptr]))])}"
      : local.iter_1217.output)
    
    tape = (
      local.code_1218[0] == "+"
        ? [for i, b in local.iter_1217.tape : (i == local.iter_1217.tape_ptr ? (b + local.code_1218[1]) % 256 : b)] :
      local.code_1218[0] == "-"
        ? [for i, b in local.iter_1217.tape : (i == local.iter_1217.tape_ptr ? (b - local.code_1218[1] + 256) % 256 : b)] :
      local.code_1218[0] == ","
        ? [for i, b in local.iter_1217.tape : (i == local.iter_1217.tape_ptr ? local.ascii_lookup[substr(local.input_1218, 0, 1)] : b)]
        : local.iter_1217.tape)

    tape_ptr = (
      local.code_1218[0] == "<"
        ? local.iter_1217.tape_ptr - local.code_1218[1] :
      local.code_1218[0] == ">"
        ? local.iter_1217.tape_ptr + local.code_1218[1]
        : local.iter_1217.tape_ptr)

    code_ptr = 2 + (
      local.code_1218[0] == "["
        ? local.iter_1217.tape[local.iter_1217.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1217.code_ptr)] : local.iter_1217.code_ptr :
      local.code_1218[0] == "]"
        ? local.iter_1217.tape[local.iter_1217.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1217.code_ptr)] : local.iter_1217.code_ptr
        : local.iter_1217.code_ptr)

    steps_taken = 1 + local.iter_1217.steps_taken
  }
}

locals {
  code_1219 = (try(local.iter_1218.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1218.code_ptr, local.iter_1218.code_ptr + 2)
    : [null])

  input_1219 = (local.code_1219[0] == ","
    ? substr(local.input_1218, local.code_1219[1], -1)
    : local.input_1218)

  iter_1219 = try(local.iter_1218.code_ptr >= length(var.code), true) ? local.iter_1218 : {
    output = (local.code_1219[0] == "."
      ? "${local.iter_1218.output}${join("", [for _ in range(local.code_1219[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1218.tape[local.iter_1218.tape_ptr]))])}"
      : local.iter_1218.output)
    
    tape = (
      local.code_1219[0] == "+"
        ? [for i, b in local.iter_1218.tape : (i == local.iter_1218.tape_ptr ? (b + local.code_1219[1]) % 256 : b)] :
      local.code_1219[0] == "-"
        ? [for i, b in local.iter_1218.tape : (i == local.iter_1218.tape_ptr ? (b - local.code_1219[1] + 256) % 256 : b)] :
      local.code_1219[0] == ","
        ? [for i, b in local.iter_1218.tape : (i == local.iter_1218.tape_ptr ? local.ascii_lookup[substr(local.input_1219, 0, 1)] : b)]
        : local.iter_1218.tape)

    tape_ptr = (
      local.code_1219[0] == "<"
        ? local.iter_1218.tape_ptr - local.code_1219[1] :
      local.code_1219[0] == ">"
        ? local.iter_1218.tape_ptr + local.code_1219[1]
        : local.iter_1218.tape_ptr)

    code_ptr = 2 + (
      local.code_1219[0] == "["
        ? local.iter_1218.tape[local.iter_1218.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1218.code_ptr)] : local.iter_1218.code_ptr :
      local.code_1219[0] == "]"
        ? local.iter_1218.tape[local.iter_1218.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1218.code_ptr)] : local.iter_1218.code_ptr
        : local.iter_1218.code_ptr)

    steps_taken = 1 + local.iter_1218.steps_taken
  }
}

locals {
  code_1220 = (try(local.iter_1219.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1219.code_ptr, local.iter_1219.code_ptr + 2)
    : [null])

  input_1220 = (local.code_1220[0] == ","
    ? substr(local.input_1219, local.code_1220[1], -1)
    : local.input_1219)

  iter_1220 = try(local.iter_1219.code_ptr >= length(var.code), true) ? local.iter_1219 : {
    output = (local.code_1220[0] == "."
      ? "${local.iter_1219.output}${join("", [for _ in range(local.code_1220[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1219.tape[local.iter_1219.tape_ptr]))])}"
      : local.iter_1219.output)
    
    tape = (
      local.code_1220[0] == "+"
        ? [for i, b in local.iter_1219.tape : (i == local.iter_1219.tape_ptr ? (b + local.code_1220[1]) % 256 : b)] :
      local.code_1220[0] == "-"
        ? [for i, b in local.iter_1219.tape : (i == local.iter_1219.tape_ptr ? (b - local.code_1220[1] + 256) % 256 : b)] :
      local.code_1220[0] == ","
        ? [for i, b in local.iter_1219.tape : (i == local.iter_1219.tape_ptr ? local.ascii_lookup[substr(local.input_1220, 0, 1)] : b)]
        : local.iter_1219.tape)

    tape_ptr = (
      local.code_1220[0] == "<"
        ? local.iter_1219.tape_ptr - local.code_1220[1] :
      local.code_1220[0] == ">"
        ? local.iter_1219.tape_ptr + local.code_1220[1]
        : local.iter_1219.tape_ptr)

    code_ptr = 2 + (
      local.code_1220[0] == "["
        ? local.iter_1219.tape[local.iter_1219.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1219.code_ptr)] : local.iter_1219.code_ptr :
      local.code_1220[0] == "]"
        ? local.iter_1219.tape[local.iter_1219.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1219.code_ptr)] : local.iter_1219.code_ptr
        : local.iter_1219.code_ptr)

    steps_taken = 1 + local.iter_1219.steps_taken
  }
}

locals {
  code_1221 = (try(local.iter_1220.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1220.code_ptr, local.iter_1220.code_ptr + 2)
    : [null])

  input_1221 = (local.code_1221[0] == ","
    ? substr(local.input_1220, local.code_1221[1], -1)
    : local.input_1220)

  iter_1221 = try(local.iter_1220.code_ptr >= length(var.code), true) ? local.iter_1220 : {
    output = (local.code_1221[0] == "."
      ? "${local.iter_1220.output}${join("", [for _ in range(local.code_1221[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1220.tape[local.iter_1220.tape_ptr]))])}"
      : local.iter_1220.output)
    
    tape = (
      local.code_1221[0] == "+"
        ? [for i, b in local.iter_1220.tape : (i == local.iter_1220.tape_ptr ? (b + local.code_1221[1]) % 256 : b)] :
      local.code_1221[0] == "-"
        ? [for i, b in local.iter_1220.tape : (i == local.iter_1220.tape_ptr ? (b - local.code_1221[1] + 256) % 256 : b)] :
      local.code_1221[0] == ","
        ? [for i, b in local.iter_1220.tape : (i == local.iter_1220.tape_ptr ? local.ascii_lookup[substr(local.input_1221, 0, 1)] : b)]
        : local.iter_1220.tape)

    tape_ptr = (
      local.code_1221[0] == "<"
        ? local.iter_1220.tape_ptr - local.code_1221[1] :
      local.code_1221[0] == ">"
        ? local.iter_1220.tape_ptr + local.code_1221[1]
        : local.iter_1220.tape_ptr)

    code_ptr = 2 + (
      local.code_1221[0] == "["
        ? local.iter_1220.tape[local.iter_1220.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1220.code_ptr)] : local.iter_1220.code_ptr :
      local.code_1221[0] == "]"
        ? local.iter_1220.tape[local.iter_1220.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1220.code_ptr)] : local.iter_1220.code_ptr
        : local.iter_1220.code_ptr)

    steps_taken = 1 + local.iter_1220.steps_taken
  }
}

locals {
  code_1222 = (try(local.iter_1221.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1221.code_ptr, local.iter_1221.code_ptr + 2)
    : [null])

  input_1222 = (local.code_1222[0] == ","
    ? substr(local.input_1221, local.code_1222[1], -1)
    : local.input_1221)

  iter_1222 = try(local.iter_1221.code_ptr >= length(var.code), true) ? local.iter_1221 : {
    output = (local.code_1222[0] == "."
      ? "${local.iter_1221.output}${join("", [for _ in range(local.code_1222[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1221.tape[local.iter_1221.tape_ptr]))])}"
      : local.iter_1221.output)
    
    tape = (
      local.code_1222[0] == "+"
        ? [for i, b in local.iter_1221.tape : (i == local.iter_1221.tape_ptr ? (b + local.code_1222[1]) % 256 : b)] :
      local.code_1222[0] == "-"
        ? [for i, b in local.iter_1221.tape : (i == local.iter_1221.tape_ptr ? (b - local.code_1222[1] + 256) % 256 : b)] :
      local.code_1222[0] == ","
        ? [for i, b in local.iter_1221.tape : (i == local.iter_1221.tape_ptr ? local.ascii_lookup[substr(local.input_1222, 0, 1)] : b)]
        : local.iter_1221.tape)

    tape_ptr = (
      local.code_1222[0] == "<"
        ? local.iter_1221.tape_ptr - local.code_1222[1] :
      local.code_1222[0] == ">"
        ? local.iter_1221.tape_ptr + local.code_1222[1]
        : local.iter_1221.tape_ptr)

    code_ptr = 2 + (
      local.code_1222[0] == "["
        ? local.iter_1221.tape[local.iter_1221.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1221.code_ptr)] : local.iter_1221.code_ptr :
      local.code_1222[0] == "]"
        ? local.iter_1221.tape[local.iter_1221.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1221.code_ptr)] : local.iter_1221.code_ptr
        : local.iter_1221.code_ptr)

    steps_taken = 1 + local.iter_1221.steps_taken
  }
}

locals {
  code_1223 = (try(local.iter_1222.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1222.code_ptr, local.iter_1222.code_ptr + 2)
    : [null])

  input_1223 = (local.code_1223[0] == ","
    ? substr(local.input_1222, local.code_1223[1], -1)
    : local.input_1222)

  iter_1223 = try(local.iter_1222.code_ptr >= length(var.code), true) ? local.iter_1222 : {
    output = (local.code_1223[0] == "."
      ? "${local.iter_1222.output}${join("", [for _ in range(local.code_1223[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1222.tape[local.iter_1222.tape_ptr]))])}"
      : local.iter_1222.output)
    
    tape = (
      local.code_1223[0] == "+"
        ? [for i, b in local.iter_1222.tape : (i == local.iter_1222.tape_ptr ? (b + local.code_1223[1]) % 256 : b)] :
      local.code_1223[0] == "-"
        ? [for i, b in local.iter_1222.tape : (i == local.iter_1222.tape_ptr ? (b - local.code_1223[1] + 256) % 256 : b)] :
      local.code_1223[0] == ","
        ? [for i, b in local.iter_1222.tape : (i == local.iter_1222.tape_ptr ? local.ascii_lookup[substr(local.input_1223, 0, 1)] : b)]
        : local.iter_1222.tape)

    tape_ptr = (
      local.code_1223[0] == "<"
        ? local.iter_1222.tape_ptr - local.code_1223[1] :
      local.code_1223[0] == ">"
        ? local.iter_1222.tape_ptr + local.code_1223[1]
        : local.iter_1222.tape_ptr)

    code_ptr = 2 + (
      local.code_1223[0] == "["
        ? local.iter_1222.tape[local.iter_1222.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1222.code_ptr)] : local.iter_1222.code_ptr :
      local.code_1223[0] == "]"
        ? local.iter_1222.tape[local.iter_1222.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1222.code_ptr)] : local.iter_1222.code_ptr
        : local.iter_1222.code_ptr)

    steps_taken = 1 + local.iter_1222.steps_taken
  }
}

locals {
  code_1224 = (try(local.iter_1223.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1223.code_ptr, local.iter_1223.code_ptr + 2)
    : [null])

  input_1224 = (local.code_1224[0] == ","
    ? substr(local.input_1223, local.code_1224[1], -1)
    : local.input_1223)

  iter_1224 = try(local.iter_1223.code_ptr >= length(var.code), true) ? local.iter_1223 : {
    output = (local.code_1224[0] == "."
      ? "${local.iter_1223.output}${join("", [for _ in range(local.code_1224[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1223.tape[local.iter_1223.tape_ptr]))])}"
      : local.iter_1223.output)
    
    tape = (
      local.code_1224[0] == "+"
        ? [for i, b in local.iter_1223.tape : (i == local.iter_1223.tape_ptr ? (b + local.code_1224[1]) % 256 : b)] :
      local.code_1224[0] == "-"
        ? [for i, b in local.iter_1223.tape : (i == local.iter_1223.tape_ptr ? (b - local.code_1224[1] + 256) % 256 : b)] :
      local.code_1224[0] == ","
        ? [for i, b in local.iter_1223.tape : (i == local.iter_1223.tape_ptr ? local.ascii_lookup[substr(local.input_1224, 0, 1)] : b)]
        : local.iter_1223.tape)

    tape_ptr = (
      local.code_1224[0] == "<"
        ? local.iter_1223.tape_ptr - local.code_1224[1] :
      local.code_1224[0] == ">"
        ? local.iter_1223.tape_ptr + local.code_1224[1]
        : local.iter_1223.tape_ptr)

    code_ptr = 2 + (
      local.code_1224[0] == "["
        ? local.iter_1223.tape[local.iter_1223.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1223.code_ptr)] : local.iter_1223.code_ptr :
      local.code_1224[0] == "]"
        ? local.iter_1223.tape[local.iter_1223.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1223.code_ptr)] : local.iter_1223.code_ptr
        : local.iter_1223.code_ptr)

    steps_taken = 1 + local.iter_1223.steps_taken
  }
}

locals {
  code_1225 = (try(local.iter_1224.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1224.code_ptr, local.iter_1224.code_ptr + 2)
    : [null])

  input_1225 = (local.code_1225[0] == ","
    ? substr(local.input_1224, local.code_1225[1], -1)
    : local.input_1224)

  iter_1225 = try(local.iter_1224.code_ptr >= length(var.code), true) ? local.iter_1224 : {
    output = (local.code_1225[0] == "."
      ? "${local.iter_1224.output}${join("", [for _ in range(local.code_1225[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1224.tape[local.iter_1224.tape_ptr]))])}"
      : local.iter_1224.output)
    
    tape = (
      local.code_1225[0] == "+"
        ? [for i, b in local.iter_1224.tape : (i == local.iter_1224.tape_ptr ? (b + local.code_1225[1]) % 256 : b)] :
      local.code_1225[0] == "-"
        ? [for i, b in local.iter_1224.tape : (i == local.iter_1224.tape_ptr ? (b - local.code_1225[1] + 256) % 256 : b)] :
      local.code_1225[0] == ","
        ? [for i, b in local.iter_1224.tape : (i == local.iter_1224.tape_ptr ? local.ascii_lookup[substr(local.input_1225, 0, 1)] : b)]
        : local.iter_1224.tape)

    tape_ptr = (
      local.code_1225[0] == "<"
        ? local.iter_1224.tape_ptr - local.code_1225[1] :
      local.code_1225[0] == ">"
        ? local.iter_1224.tape_ptr + local.code_1225[1]
        : local.iter_1224.tape_ptr)

    code_ptr = 2 + (
      local.code_1225[0] == "["
        ? local.iter_1224.tape[local.iter_1224.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1224.code_ptr)] : local.iter_1224.code_ptr :
      local.code_1225[0] == "]"
        ? local.iter_1224.tape[local.iter_1224.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1224.code_ptr)] : local.iter_1224.code_ptr
        : local.iter_1224.code_ptr)

    steps_taken = 1 + local.iter_1224.steps_taken
  }
}

locals {
  code_1226 = (try(local.iter_1225.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1225.code_ptr, local.iter_1225.code_ptr + 2)
    : [null])

  input_1226 = (local.code_1226[0] == ","
    ? substr(local.input_1225, local.code_1226[1], -1)
    : local.input_1225)

  iter_1226 = try(local.iter_1225.code_ptr >= length(var.code), true) ? local.iter_1225 : {
    output = (local.code_1226[0] == "."
      ? "${local.iter_1225.output}${join("", [for _ in range(local.code_1226[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1225.tape[local.iter_1225.tape_ptr]))])}"
      : local.iter_1225.output)
    
    tape = (
      local.code_1226[0] == "+"
        ? [for i, b in local.iter_1225.tape : (i == local.iter_1225.tape_ptr ? (b + local.code_1226[1]) % 256 : b)] :
      local.code_1226[0] == "-"
        ? [for i, b in local.iter_1225.tape : (i == local.iter_1225.tape_ptr ? (b - local.code_1226[1] + 256) % 256 : b)] :
      local.code_1226[0] == ","
        ? [for i, b in local.iter_1225.tape : (i == local.iter_1225.tape_ptr ? local.ascii_lookup[substr(local.input_1226, 0, 1)] : b)]
        : local.iter_1225.tape)

    tape_ptr = (
      local.code_1226[0] == "<"
        ? local.iter_1225.tape_ptr - local.code_1226[1] :
      local.code_1226[0] == ">"
        ? local.iter_1225.tape_ptr + local.code_1226[1]
        : local.iter_1225.tape_ptr)

    code_ptr = 2 + (
      local.code_1226[0] == "["
        ? local.iter_1225.tape[local.iter_1225.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1225.code_ptr)] : local.iter_1225.code_ptr :
      local.code_1226[0] == "]"
        ? local.iter_1225.tape[local.iter_1225.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1225.code_ptr)] : local.iter_1225.code_ptr
        : local.iter_1225.code_ptr)

    steps_taken = 1 + local.iter_1225.steps_taken
  }
}

locals {
  code_1227 = (try(local.iter_1226.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1226.code_ptr, local.iter_1226.code_ptr + 2)
    : [null])

  input_1227 = (local.code_1227[0] == ","
    ? substr(local.input_1226, local.code_1227[1], -1)
    : local.input_1226)

  iter_1227 = try(local.iter_1226.code_ptr >= length(var.code), true) ? local.iter_1226 : {
    output = (local.code_1227[0] == "."
      ? "${local.iter_1226.output}${join("", [for _ in range(local.code_1227[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1226.tape[local.iter_1226.tape_ptr]))])}"
      : local.iter_1226.output)
    
    tape = (
      local.code_1227[0] == "+"
        ? [for i, b in local.iter_1226.tape : (i == local.iter_1226.tape_ptr ? (b + local.code_1227[1]) % 256 : b)] :
      local.code_1227[0] == "-"
        ? [for i, b in local.iter_1226.tape : (i == local.iter_1226.tape_ptr ? (b - local.code_1227[1] + 256) % 256 : b)] :
      local.code_1227[0] == ","
        ? [for i, b in local.iter_1226.tape : (i == local.iter_1226.tape_ptr ? local.ascii_lookup[substr(local.input_1227, 0, 1)] : b)]
        : local.iter_1226.tape)

    tape_ptr = (
      local.code_1227[0] == "<"
        ? local.iter_1226.tape_ptr - local.code_1227[1] :
      local.code_1227[0] == ">"
        ? local.iter_1226.tape_ptr + local.code_1227[1]
        : local.iter_1226.tape_ptr)

    code_ptr = 2 + (
      local.code_1227[0] == "["
        ? local.iter_1226.tape[local.iter_1226.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1226.code_ptr)] : local.iter_1226.code_ptr :
      local.code_1227[0] == "]"
        ? local.iter_1226.tape[local.iter_1226.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1226.code_ptr)] : local.iter_1226.code_ptr
        : local.iter_1226.code_ptr)

    steps_taken = 1 + local.iter_1226.steps_taken
  }
}

locals {
  code_1228 = (try(local.iter_1227.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1227.code_ptr, local.iter_1227.code_ptr + 2)
    : [null])

  input_1228 = (local.code_1228[0] == ","
    ? substr(local.input_1227, local.code_1228[1], -1)
    : local.input_1227)

  iter_1228 = try(local.iter_1227.code_ptr >= length(var.code), true) ? local.iter_1227 : {
    output = (local.code_1228[0] == "."
      ? "${local.iter_1227.output}${join("", [for _ in range(local.code_1228[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1227.tape[local.iter_1227.tape_ptr]))])}"
      : local.iter_1227.output)
    
    tape = (
      local.code_1228[0] == "+"
        ? [for i, b in local.iter_1227.tape : (i == local.iter_1227.tape_ptr ? (b + local.code_1228[1]) % 256 : b)] :
      local.code_1228[0] == "-"
        ? [for i, b in local.iter_1227.tape : (i == local.iter_1227.tape_ptr ? (b - local.code_1228[1] + 256) % 256 : b)] :
      local.code_1228[0] == ","
        ? [for i, b in local.iter_1227.tape : (i == local.iter_1227.tape_ptr ? local.ascii_lookup[substr(local.input_1228, 0, 1)] : b)]
        : local.iter_1227.tape)

    tape_ptr = (
      local.code_1228[0] == "<"
        ? local.iter_1227.tape_ptr - local.code_1228[1] :
      local.code_1228[0] == ">"
        ? local.iter_1227.tape_ptr + local.code_1228[1]
        : local.iter_1227.tape_ptr)

    code_ptr = 2 + (
      local.code_1228[0] == "["
        ? local.iter_1227.tape[local.iter_1227.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1227.code_ptr)] : local.iter_1227.code_ptr :
      local.code_1228[0] == "]"
        ? local.iter_1227.tape[local.iter_1227.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1227.code_ptr)] : local.iter_1227.code_ptr
        : local.iter_1227.code_ptr)

    steps_taken = 1 + local.iter_1227.steps_taken
  }
}

locals {
  code_1229 = (try(local.iter_1228.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1228.code_ptr, local.iter_1228.code_ptr + 2)
    : [null])

  input_1229 = (local.code_1229[0] == ","
    ? substr(local.input_1228, local.code_1229[1], -1)
    : local.input_1228)

  iter_1229 = try(local.iter_1228.code_ptr >= length(var.code), true) ? local.iter_1228 : {
    output = (local.code_1229[0] == "."
      ? "${local.iter_1228.output}${join("", [for _ in range(local.code_1229[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1228.tape[local.iter_1228.tape_ptr]))])}"
      : local.iter_1228.output)
    
    tape = (
      local.code_1229[0] == "+"
        ? [for i, b in local.iter_1228.tape : (i == local.iter_1228.tape_ptr ? (b + local.code_1229[1]) % 256 : b)] :
      local.code_1229[0] == "-"
        ? [for i, b in local.iter_1228.tape : (i == local.iter_1228.tape_ptr ? (b - local.code_1229[1] + 256) % 256 : b)] :
      local.code_1229[0] == ","
        ? [for i, b in local.iter_1228.tape : (i == local.iter_1228.tape_ptr ? local.ascii_lookup[substr(local.input_1229, 0, 1)] : b)]
        : local.iter_1228.tape)

    tape_ptr = (
      local.code_1229[0] == "<"
        ? local.iter_1228.tape_ptr - local.code_1229[1] :
      local.code_1229[0] == ">"
        ? local.iter_1228.tape_ptr + local.code_1229[1]
        : local.iter_1228.tape_ptr)

    code_ptr = 2 + (
      local.code_1229[0] == "["
        ? local.iter_1228.tape[local.iter_1228.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1228.code_ptr)] : local.iter_1228.code_ptr :
      local.code_1229[0] == "]"
        ? local.iter_1228.tape[local.iter_1228.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1228.code_ptr)] : local.iter_1228.code_ptr
        : local.iter_1228.code_ptr)

    steps_taken = 1 + local.iter_1228.steps_taken
  }
}

locals {
  code_1230 = (try(local.iter_1229.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1229.code_ptr, local.iter_1229.code_ptr + 2)
    : [null])

  input_1230 = (local.code_1230[0] == ","
    ? substr(local.input_1229, local.code_1230[1], -1)
    : local.input_1229)

  iter_1230 = try(local.iter_1229.code_ptr >= length(var.code), true) ? local.iter_1229 : {
    output = (local.code_1230[0] == "."
      ? "${local.iter_1229.output}${join("", [for _ in range(local.code_1230[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1229.tape[local.iter_1229.tape_ptr]))])}"
      : local.iter_1229.output)
    
    tape = (
      local.code_1230[0] == "+"
        ? [for i, b in local.iter_1229.tape : (i == local.iter_1229.tape_ptr ? (b + local.code_1230[1]) % 256 : b)] :
      local.code_1230[0] == "-"
        ? [for i, b in local.iter_1229.tape : (i == local.iter_1229.tape_ptr ? (b - local.code_1230[1] + 256) % 256 : b)] :
      local.code_1230[0] == ","
        ? [for i, b in local.iter_1229.tape : (i == local.iter_1229.tape_ptr ? local.ascii_lookup[substr(local.input_1230, 0, 1)] : b)]
        : local.iter_1229.tape)

    tape_ptr = (
      local.code_1230[0] == "<"
        ? local.iter_1229.tape_ptr - local.code_1230[1] :
      local.code_1230[0] == ">"
        ? local.iter_1229.tape_ptr + local.code_1230[1]
        : local.iter_1229.tape_ptr)

    code_ptr = 2 + (
      local.code_1230[0] == "["
        ? local.iter_1229.tape[local.iter_1229.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1229.code_ptr)] : local.iter_1229.code_ptr :
      local.code_1230[0] == "]"
        ? local.iter_1229.tape[local.iter_1229.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1229.code_ptr)] : local.iter_1229.code_ptr
        : local.iter_1229.code_ptr)

    steps_taken = 1 + local.iter_1229.steps_taken
  }
}

locals {
  code_1231 = (try(local.iter_1230.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1230.code_ptr, local.iter_1230.code_ptr + 2)
    : [null])

  input_1231 = (local.code_1231[0] == ","
    ? substr(local.input_1230, local.code_1231[1], -1)
    : local.input_1230)

  iter_1231 = try(local.iter_1230.code_ptr >= length(var.code), true) ? local.iter_1230 : {
    output = (local.code_1231[0] == "."
      ? "${local.iter_1230.output}${join("", [for _ in range(local.code_1231[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1230.tape[local.iter_1230.tape_ptr]))])}"
      : local.iter_1230.output)
    
    tape = (
      local.code_1231[0] == "+"
        ? [for i, b in local.iter_1230.tape : (i == local.iter_1230.tape_ptr ? (b + local.code_1231[1]) % 256 : b)] :
      local.code_1231[0] == "-"
        ? [for i, b in local.iter_1230.tape : (i == local.iter_1230.tape_ptr ? (b - local.code_1231[1] + 256) % 256 : b)] :
      local.code_1231[0] == ","
        ? [for i, b in local.iter_1230.tape : (i == local.iter_1230.tape_ptr ? local.ascii_lookup[substr(local.input_1231, 0, 1)] : b)]
        : local.iter_1230.tape)

    tape_ptr = (
      local.code_1231[0] == "<"
        ? local.iter_1230.tape_ptr - local.code_1231[1] :
      local.code_1231[0] == ">"
        ? local.iter_1230.tape_ptr + local.code_1231[1]
        : local.iter_1230.tape_ptr)

    code_ptr = 2 + (
      local.code_1231[0] == "["
        ? local.iter_1230.tape[local.iter_1230.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1230.code_ptr)] : local.iter_1230.code_ptr :
      local.code_1231[0] == "]"
        ? local.iter_1230.tape[local.iter_1230.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1230.code_ptr)] : local.iter_1230.code_ptr
        : local.iter_1230.code_ptr)

    steps_taken = 1 + local.iter_1230.steps_taken
  }
}

locals {
  code_1232 = (try(local.iter_1231.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1231.code_ptr, local.iter_1231.code_ptr + 2)
    : [null])

  input_1232 = (local.code_1232[0] == ","
    ? substr(local.input_1231, local.code_1232[1], -1)
    : local.input_1231)

  iter_1232 = try(local.iter_1231.code_ptr >= length(var.code), true) ? local.iter_1231 : {
    output = (local.code_1232[0] == "."
      ? "${local.iter_1231.output}${join("", [for _ in range(local.code_1232[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1231.tape[local.iter_1231.tape_ptr]))])}"
      : local.iter_1231.output)
    
    tape = (
      local.code_1232[0] == "+"
        ? [for i, b in local.iter_1231.tape : (i == local.iter_1231.tape_ptr ? (b + local.code_1232[1]) % 256 : b)] :
      local.code_1232[0] == "-"
        ? [for i, b in local.iter_1231.tape : (i == local.iter_1231.tape_ptr ? (b - local.code_1232[1] + 256) % 256 : b)] :
      local.code_1232[0] == ","
        ? [for i, b in local.iter_1231.tape : (i == local.iter_1231.tape_ptr ? local.ascii_lookup[substr(local.input_1232, 0, 1)] : b)]
        : local.iter_1231.tape)

    tape_ptr = (
      local.code_1232[0] == "<"
        ? local.iter_1231.tape_ptr - local.code_1232[1] :
      local.code_1232[0] == ">"
        ? local.iter_1231.tape_ptr + local.code_1232[1]
        : local.iter_1231.tape_ptr)

    code_ptr = 2 + (
      local.code_1232[0] == "["
        ? local.iter_1231.tape[local.iter_1231.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1231.code_ptr)] : local.iter_1231.code_ptr :
      local.code_1232[0] == "]"
        ? local.iter_1231.tape[local.iter_1231.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1231.code_ptr)] : local.iter_1231.code_ptr
        : local.iter_1231.code_ptr)

    steps_taken = 1 + local.iter_1231.steps_taken
  }
}

locals {
  code_1233 = (try(local.iter_1232.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1232.code_ptr, local.iter_1232.code_ptr + 2)
    : [null])

  input_1233 = (local.code_1233[0] == ","
    ? substr(local.input_1232, local.code_1233[1], -1)
    : local.input_1232)

  iter_1233 = try(local.iter_1232.code_ptr >= length(var.code), true) ? local.iter_1232 : {
    output = (local.code_1233[0] == "."
      ? "${local.iter_1232.output}${join("", [for _ in range(local.code_1233[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1232.tape[local.iter_1232.tape_ptr]))])}"
      : local.iter_1232.output)
    
    tape = (
      local.code_1233[0] == "+"
        ? [for i, b in local.iter_1232.tape : (i == local.iter_1232.tape_ptr ? (b + local.code_1233[1]) % 256 : b)] :
      local.code_1233[0] == "-"
        ? [for i, b in local.iter_1232.tape : (i == local.iter_1232.tape_ptr ? (b - local.code_1233[1] + 256) % 256 : b)] :
      local.code_1233[0] == ","
        ? [for i, b in local.iter_1232.tape : (i == local.iter_1232.tape_ptr ? local.ascii_lookup[substr(local.input_1233, 0, 1)] : b)]
        : local.iter_1232.tape)

    tape_ptr = (
      local.code_1233[0] == "<"
        ? local.iter_1232.tape_ptr - local.code_1233[1] :
      local.code_1233[0] == ">"
        ? local.iter_1232.tape_ptr + local.code_1233[1]
        : local.iter_1232.tape_ptr)

    code_ptr = 2 + (
      local.code_1233[0] == "["
        ? local.iter_1232.tape[local.iter_1232.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1232.code_ptr)] : local.iter_1232.code_ptr :
      local.code_1233[0] == "]"
        ? local.iter_1232.tape[local.iter_1232.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1232.code_ptr)] : local.iter_1232.code_ptr
        : local.iter_1232.code_ptr)

    steps_taken = 1 + local.iter_1232.steps_taken
  }
}

locals {
  code_1234 = (try(local.iter_1233.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1233.code_ptr, local.iter_1233.code_ptr + 2)
    : [null])

  input_1234 = (local.code_1234[0] == ","
    ? substr(local.input_1233, local.code_1234[1], -1)
    : local.input_1233)

  iter_1234 = try(local.iter_1233.code_ptr >= length(var.code), true) ? local.iter_1233 : {
    output = (local.code_1234[0] == "."
      ? "${local.iter_1233.output}${join("", [for _ in range(local.code_1234[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1233.tape[local.iter_1233.tape_ptr]))])}"
      : local.iter_1233.output)
    
    tape = (
      local.code_1234[0] == "+"
        ? [for i, b in local.iter_1233.tape : (i == local.iter_1233.tape_ptr ? (b + local.code_1234[1]) % 256 : b)] :
      local.code_1234[0] == "-"
        ? [for i, b in local.iter_1233.tape : (i == local.iter_1233.tape_ptr ? (b - local.code_1234[1] + 256) % 256 : b)] :
      local.code_1234[0] == ","
        ? [for i, b in local.iter_1233.tape : (i == local.iter_1233.tape_ptr ? local.ascii_lookup[substr(local.input_1234, 0, 1)] : b)]
        : local.iter_1233.tape)

    tape_ptr = (
      local.code_1234[0] == "<"
        ? local.iter_1233.tape_ptr - local.code_1234[1] :
      local.code_1234[0] == ">"
        ? local.iter_1233.tape_ptr + local.code_1234[1]
        : local.iter_1233.tape_ptr)

    code_ptr = 2 + (
      local.code_1234[0] == "["
        ? local.iter_1233.tape[local.iter_1233.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1233.code_ptr)] : local.iter_1233.code_ptr :
      local.code_1234[0] == "]"
        ? local.iter_1233.tape[local.iter_1233.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1233.code_ptr)] : local.iter_1233.code_ptr
        : local.iter_1233.code_ptr)

    steps_taken = 1 + local.iter_1233.steps_taken
  }
}

locals {
  code_1235 = (try(local.iter_1234.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1234.code_ptr, local.iter_1234.code_ptr + 2)
    : [null])

  input_1235 = (local.code_1235[0] == ","
    ? substr(local.input_1234, local.code_1235[1], -1)
    : local.input_1234)

  iter_1235 = try(local.iter_1234.code_ptr >= length(var.code), true) ? local.iter_1234 : {
    output = (local.code_1235[0] == "."
      ? "${local.iter_1234.output}${join("", [for _ in range(local.code_1235[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1234.tape[local.iter_1234.tape_ptr]))])}"
      : local.iter_1234.output)
    
    tape = (
      local.code_1235[0] == "+"
        ? [for i, b in local.iter_1234.tape : (i == local.iter_1234.tape_ptr ? (b + local.code_1235[1]) % 256 : b)] :
      local.code_1235[0] == "-"
        ? [for i, b in local.iter_1234.tape : (i == local.iter_1234.tape_ptr ? (b - local.code_1235[1] + 256) % 256 : b)] :
      local.code_1235[0] == ","
        ? [for i, b in local.iter_1234.tape : (i == local.iter_1234.tape_ptr ? local.ascii_lookup[substr(local.input_1235, 0, 1)] : b)]
        : local.iter_1234.tape)

    tape_ptr = (
      local.code_1235[0] == "<"
        ? local.iter_1234.tape_ptr - local.code_1235[1] :
      local.code_1235[0] == ">"
        ? local.iter_1234.tape_ptr + local.code_1235[1]
        : local.iter_1234.tape_ptr)

    code_ptr = 2 + (
      local.code_1235[0] == "["
        ? local.iter_1234.tape[local.iter_1234.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1234.code_ptr)] : local.iter_1234.code_ptr :
      local.code_1235[0] == "]"
        ? local.iter_1234.tape[local.iter_1234.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1234.code_ptr)] : local.iter_1234.code_ptr
        : local.iter_1234.code_ptr)

    steps_taken = 1 + local.iter_1234.steps_taken
  }
}

locals {
  code_1236 = (try(local.iter_1235.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1235.code_ptr, local.iter_1235.code_ptr + 2)
    : [null])

  input_1236 = (local.code_1236[0] == ","
    ? substr(local.input_1235, local.code_1236[1], -1)
    : local.input_1235)

  iter_1236 = try(local.iter_1235.code_ptr >= length(var.code), true) ? local.iter_1235 : {
    output = (local.code_1236[0] == "."
      ? "${local.iter_1235.output}${join("", [for _ in range(local.code_1236[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1235.tape[local.iter_1235.tape_ptr]))])}"
      : local.iter_1235.output)
    
    tape = (
      local.code_1236[0] == "+"
        ? [for i, b in local.iter_1235.tape : (i == local.iter_1235.tape_ptr ? (b + local.code_1236[1]) % 256 : b)] :
      local.code_1236[0] == "-"
        ? [for i, b in local.iter_1235.tape : (i == local.iter_1235.tape_ptr ? (b - local.code_1236[1] + 256) % 256 : b)] :
      local.code_1236[0] == ","
        ? [for i, b in local.iter_1235.tape : (i == local.iter_1235.tape_ptr ? local.ascii_lookup[substr(local.input_1236, 0, 1)] : b)]
        : local.iter_1235.tape)

    tape_ptr = (
      local.code_1236[0] == "<"
        ? local.iter_1235.tape_ptr - local.code_1236[1] :
      local.code_1236[0] == ">"
        ? local.iter_1235.tape_ptr + local.code_1236[1]
        : local.iter_1235.tape_ptr)

    code_ptr = 2 + (
      local.code_1236[0] == "["
        ? local.iter_1235.tape[local.iter_1235.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1235.code_ptr)] : local.iter_1235.code_ptr :
      local.code_1236[0] == "]"
        ? local.iter_1235.tape[local.iter_1235.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1235.code_ptr)] : local.iter_1235.code_ptr
        : local.iter_1235.code_ptr)

    steps_taken = 1 + local.iter_1235.steps_taken
  }
}

locals {
  code_1237 = (try(local.iter_1236.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1236.code_ptr, local.iter_1236.code_ptr + 2)
    : [null])

  input_1237 = (local.code_1237[0] == ","
    ? substr(local.input_1236, local.code_1237[1], -1)
    : local.input_1236)

  iter_1237 = try(local.iter_1236.code_ptr >= length(var.code), true) ? local.iter_1236 : {
    output = (local.code_1237[0] == "."
      ? "${local.iter_1236.output}${join("", [for _ in range(local.code_1237[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1236.tape[local.iter_1236.tape_ptr]))])}"
      : local.iter_1236.output)
    
    tape = (
      local.code_1237[0] == "+"
        ? [for i, b in local.iter_1236.tape : (i == local.iter_1236.tape_ptr ? (b + local.code_1237[1]) % 256 : b)] :
      local.code_1237[0] == "-"
        ? [for i, b in local.iter_1236.tape : (i == local.iter_1236.tape_ptr ? (b - local.code_1237[1] + 256) % 256 : b)] :
      local.code_1237[0] == ","
        ? [for i, b in local.iter_1236.tape : (i == local.iter_1236.tape_ptr ? local.ascii_lookup[substr(local.input_1237, 0, 1)] : b)]
        : local.iter_1236.tape)

    tape_ptr = (
      local.code_1237[0] == "<"
        ? local.iter_1236.tape_ptr - local.code_1237[1] :
      local.code_1237[0] == ">"
        ? local.iter_1236.tape_ptr + local.code_1237[1]
        : local.iter_1236.tape_ptr)

    code_ptr = 2 + (
      local.code_1237[0] == "["
        ? local.iter_1236.tape[local.iter_1236.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1236.code_ptr)] : local.iter_1236.code_ptr :
      local.code_1237[0] == "]"
        ? local.iter_1236.tape[local.iter_1236.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1236.code_ptr)] : local.iter_1236.code_ptr
        : local.iter_1236.code_ptr)

    steps_taken = 1 + local.iter_1236.steps_taken
  }
}

locals {
  code_1238 = (try(local.iter_1237.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1237.code_ptr, local.iter_1237.code_ptr + 2)
    : [null])

  input_1238 = (local.code_1238[0] == ","
    ? substr(local.input_1237, local.code_1238[1], -1)
    : local.input_1237)

  iter_1238 = try(local.iter_1237.code_ptr >= length(var.code), true) ? local.iter_1237 : {
    output = (local.code_1238[0] == "."
      ? "${local.iter_1237.output}${join("", [for _ in range(local.code_1238[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1237.tape[local.iter_1237.tape_ptr]))])}"
      : local.iter_1237.output)
    
    tape = (
      local.code_1238[0] == "+"
        ? [for i, b in local.iter_1237.tape : (i == local.iter_1237.tape_ptr ? (b + local.code_1238[1]) % 256 : b)] :
      local.code_1238[0] == "-"
        ? [for i, b in local.iter_1237.tape : (i == local.iter_1237.tape_ptr ? (b - local.code_1238[1] + 256) % 256 : b)] :
      local.code_1238[0] == ","
        ? [for i, b in local.iter_1237.tape : (i == local.iter_1237.tape_ptr ? local.ascii_lookup[substr(local.input_1238, 0, 1)] : b)]
        : local.iter_1237.tape)

    tape_ptr = (
      local.code_1238[0] == "<"
        ? local.iter_1237.tape_ptr - local.code_1238[1] :
      local.code_1238[0] == ">"
        ? local.iter_1237.tape_ptr + local.code_1238[1]
        : local.iter_1237.tape_ptr)

    code_ptr = 2 + (
      local.code_1238[0] == "["
        ? local.iter_1237.tape[local.iter_1237.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1237.code_ptr)] : local.iter_1237.code_ptr :
      local.code_1238[0] == "]"
        ? local.iter_1237.tape[local.iter_1237.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1237.code_ptr)] : local.iter_1237.code_ptr
        : local.iter_1237.code_ptr)

    steps_taken = 1 + local.iter_1237.steps_taken
  }
}

locals {
  code_1239 = (try(local.iter_1238.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1238.code_ptr, local.iter_1238.code_ptr + 2)
    : [null])

  input_1239 = (local.code_1239[0] == ","
    ? substr(local.input_1238, local.code_1239[1], -1)
    : local.input_1238)

  iter_1239 = try(local.iter_1238.code_ptr >= length(var.code), true) ? local.iter_1238 : {
    output = (local.code_1239[0] == "."
      ? "${local.iter_1238.output}${join("", [for _ in range(local.code_1239[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1238.tape[local.iter_1238.tape_ptr]))])}"
      : local.iter_1238.output)
    
    tape = (
      local.code_1239[0] == "+"
        ? [for i, b in local.iter_1238.tape : (i == local.iter_1238.tape_ptr ? (b + local.code_1239[1]) % 256 : b)] :
      local.code_1239[0] == "-"
        ? [for i, b in local.iter_1238.tape : (i == local.iter_1238.tape_ptr ? (b - local.code_1239[1] + 256) % 256 : b)] :
      local.code_1239[0] == ","
        ? [for i, b in local.iter_1238.tape : (i == local.iter_1238.tape_ptr ? local.ascii_lookup[substr(local.input_1239, 0, 1)] : b)]
        : local.iter_1238.tape)

    tape_ptr = (
      local.code_1239[0] == "<"
        ? local.iter_1238.tape_ptr - local.code_1239[1] :
      local.code_1239[0] == ">"
        ? local.iter_1238.tape_ptr + local.code_1239[1]
        : local.iter_1238.tape_ptr)

    code_ptr = 2 + (
      local.code_1239[0] == "["
        ? local.iter_1238.tape[local.iter_1238.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1238.code_ptr)] : local.iter_1238.code_ptr :
      local.code_1239[0] == "]"
        ? local.iter_1238.tape[local.iter_1238.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1238.code_ptr)] : local.iter_1238.code_ptr
        : local.iter_1238.code_ptr)

    steps_taken = 1 + local.iter_1238.steps_taken
  }
}

locals {
  code_1240 = (try(local.iter_1239.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1239.code_ptr, local.iter_1239.code_ptr + 2)
    : [null])

  input_1240 = (local.code_1240[0] == ","
    ? substr(local.input_1239, local.code_1240[1], -1)
    : local.input_1239)

  iter_1240 = try(local.iter_1239.code_ptr >= length(var.code), true) ? local.iter_1239 : {
    output = (local.code_1240[0] == "."
      ? "${local.iter_1239.output}${join("", [for _ in range(local.code_1240[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1239.tape[local.iter_1239.tape_ptr]))])}"
      : local.iter_1239.output)
    
    tape = (
      local.code_1240[0] == "+"
        ? [for i, b in local.iter_1239.tape : (i == local.iter_1239.tape_ptr ? (b + local.code_1240[1]) % 256 : b)] :
      local.code_1240[0] == "-"
        ? [for i, b in local.iter_1239.tape : (i == local.iter_1239.tape_ptr ? (b - local.code_1240[1] + 256) % 256 : b)] :
      local.code_1240[0] == ","
        ? [for i, b in local.iter_1239.tape : (i == local.iter_1239.tape_ptr ? local.ascii_lookup[substr(local.input_1240, 0, 1)] : b)]
        : local.iter_1239.tape)

    tape_ptr = (
      local.code_1240[0] == "<"
        ? local.iter_1239.tape_ptr - local.code_1240[1] :
      local.code_1240[0] == ">"
        ? local.iter_1239.tape_ptr + local.code_1240[1]
        : local.iter_1239.tape_ptr)

    code_ptr = 2 + (
      local.code_1240[0] == "["
        ? local.iter_1239.tape[local.iter_1239.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1239.code_ptr)] : local.iter_1239.code_ptr :
      local.code_1240[0] == "]"
        ? local.iter_1239.tape[local.iter_1239.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1239.code_ptr)] : local.iter_1239.code_ptr
        : local.iter_1239.code_ptr)

    steps_taken = 1 + local.iter_1239.steps_taken
  }
}

locals {
  code_1241 = (try(local.iter_1240.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1240.code_ptr, local.iter_1240.code_ptr + 2)
    : [null])

  input_1241 = (local.code_1241[0] == ","
    ? substr(local.input_1240, local.code_1241[1], -1)
    : local.input_1240)

  iter_1241 = try(local.iter_1240.code_ptr >= length(var.code), true) ? local.iter_1240 : {
    output = (local.code_1241[0] == "."
      ? "${local.iter_1240.output}${join("", [for _ in range(local.code_1241[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1240.tape[local.iter_1240.tape_ptr]))])}"
      : local.iter_1240.output)
    
    tape = (
      local.code_1241[0] == "+"
        ? [for i, b in local.iter_1240.tape : (i == local.iter_1240.tape_ptr ? (b + local.code_1241[1]) % 256 : b)] :
      local.code_1241[0] == "-"
        ? [for i, b in local.iter_1240.tape : (i == local.iter_1240.tape_ptr ? (b - local.code_1241[1] + 256) % 256 : b)] :
      local.code_1241[0] == ","
        ? [for i, b in local.iter_1240.tape : (i == local.iter_1240.tape_ptr ? local.ascii_lookup[substr(local.input_1241, 0, 1)] : b)]
        : local.iter_1240.tape)

    tape_ptr = (
      local.code_1241[0] == "<"
        ? local.iter_1240.tape_ptr - local.code_1241[1] :
      local.code_1241[0] == ">"
        ? local.iter_1240.tape_ptr + local.code_1241[1]
        : local.iter_1240.tape_ptr)

    code_ptr = 2 + (
      local.code_1241[0] == "["
        ? local.iter_1240.tape[local.iter_1240.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1240.code_ptr)] : local.iter_1240.code_ptr :
      local.code_1241[0] == "]"
        ? local.iter_1240.tape[local.iter_1240.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1240.code_ptr)] : local.iter_1240.code_ptr
        : local.iter_1240.code_ptr)

    steps_taken = 1 + local.iter_1240.steps_taken
  }
}

locals {
  code_1242 = (try(local.iter_1241.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1241.code_ptr, local.iter_1241.code_ptr + 2)
    : [null])

  input_1242 = (local.code_1242[0] == ","
    ? substr(local.input_1241, local.code_1242[1], -1)
    : local.input_1241)

  iter_1242 = try(local.iter_1241.code_ptr >= length(var.code), true) ? local.iter_1241 : {
    output = (local.code_1242[0] == "."
      ? "${local.iter_1241.output}${join("", [for _ in range(local.code_1242[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1241.tape[local.iter_1241.tape_ptr]))])}"
      : local.iter_1241.output)
    
    tape = (
      local.code_1242[0] == "+"
        ? [for i, b in local.iter_1241.tape : (i == local.iter_1241.tape_ptr ? (b + local.code_1242[1]) % 256 : b)] :
      local.code_1242[0] == "-"
        ? [for i, b in local.iter_1241.tape : (i == local.iter_1241.tape_ptr ? (b - local.code_1242[1] + 256) % 256 : b)] :
      local.code_1242[0] == ","
        ? [for i, b in local.iter_1241.tape : (i == local.iter_1241.tape_ptr ? local.ascii_lookup[substr(local.input_1242, 0, 1)] : b)]
        : local.iter_1241.tape)

    tape_ptr = (
      local.code_1242[0] == "<"
        ? local.iter_1241.tape_ptr - local.code_1242[1] :
      local.code_1242[0] == ">"
        ? local.iter_1241.tape_ptr + local.code_1242[1]
        : local.iter_1241.tape_ptr)

    code_ptr = 2 + (
      local.code_1242[0] == "["
        ? local.iter_1241.tape[local.iter_1241.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1241.code_ptr)] : local.iter_1241.code_ptr :
      local.code_1242[0] == "]"
        ? local.iter_1241.tape[local.iter_1241.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1241.code_ptr)] : local.iter_1241.code_ptr
        : local.iter_1241.code_ptr)

    steps_taken = 1 + local.iter_1241.steps_taken
  }
}

locals {
  code_1243 = (try(local.iter_1242.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1242.code_ptr, local.iter_1242.code_ptr + 2)
    : [null])

  input_1243 = (local.code_1243[0] == ","
    ? substr(local.input_1242, local.code_1243[1], -1)
    : local.input_1242)

  iter_1243 = try(local.iter_1242.code_ptr >= length(var.code), true) ? local.iter_1242 : {
    output = (local.code_1243[0] == "."
      ? "${local.iter_1242.output}${join("", [for _ in range(local.code_1243[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1242.tape[local.iter_1242.tape_ptr]))])}"
      : local.iter_1242.output)
    
    tape = (
      local.code_1243[0] == "+"
        ? [for i, b in local.iter_1242.tape : (i == local.iter_1242.tape_ptr ? (b + local.code_1243[1]) % 256 : b)] :
      local.code_1243[0] == "-"
        ? [for i, b in local.iter_1242.tape : (i == local.iter_1242.tape_ptr ? (b - local.code_1243[1] + 256) % 256 : b)] :
      local.code_1243[0] == ","
        ? [for i, b in local.iter_1242.tape : (i == local.iter_1242.tape_ptr ? local.ascii_lookup[substr(local.input_1243, 0, 1)] : b)]
        : local.iter_1242.tape)

    tape_ptr = (
      local.code_1243[0] == "<"
        ? local.iter_1242.tape_ptr - local.code_1243[1] :
      local.code_1243[0] == ">"
        ? local.iter_1242.tape_ptr + local.code_1243[1]
        : local.iter_1242.tape_ptr)

    code_ptr = 2 + (
      local.code_1243[0] == "["
        ? local.iter_1242.tape[local.iter_1242.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1242.code_ptr)] : local.iter_1242.code_ptr :
      local.code_1243[0] == "]"
        ? local.iter_1242.tape[local.iter_1242.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1242.code_ptr)] : local.iter_1242.code_ptr
        : local.iter_1242.code_ptr)

    steps_taken = 1 + local.iter_1242.steps_taken
  }
}

locals {
  code_1244 = (try(local.iter_1243.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1243.code_ptr, local.iter_1243.code_ptr + 2)
    : [null])

  input_1244 = (local.code_1244[0] == ","
    ? substr(local.input_1243, local.code_1244[1], -1)
    : local.input_1243)

  iter_1244 = try(local.iter_1243.code_ptr >= length(var.code), true) ? local.iter_1243 : {
    output = (local.code_1244[0] == "."
      ? "${local.iter_1243.output}${join("", [for _ in range(local.code_1244[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1243.tape[local.iter_1243.tape_ptr]))])}"
      : local.iter_1243.output)
    
    tape = (
      local.code_1244[0] == "+"
        ? [for i, b in local.iter_1243.tape : (i == local.iter_1243.tape_ptr ? (b + local.code_1244[1]) % 256 : b)] :
      local.code_1244[0] == "-"
        ? [for i, b in local.iter_1243.tape : (i == local.iter_1243.tape_ptr ? (b - local.code_1244[1] + 256) % 256 : b)] :
      local.code_1244[0] == ","
        ? [for i, b in local.iter_1243.tape : (i == local.iter_1243.tape_ptr ? local.ascii_lookup[substr(local.input_1244, 0, 1)] : b)]
        : local.iter_1243.tape)

    tape_ptr = (
      local.code_1244[0] == "<"
        ? local.iter_1243.tape_ptr - local.code_1244[1] :
      local.code_1244[0] == ">"
        ? local.iter_1243.tape_ptr + local.code_1244[1]
        : local.iter_1243.tape_ptr)

    code_ptr = 2 + (
      local.code_1244[0] == "["
        ? local.iter_1243.tape[local.iter_1243.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1243.code_ptr)] : local.iter_1243.code_ptr :
      local.code_1244[0] == "]"
        ? local.iter_1243.tape[local.iter_1243.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1243.code_ptr)] : local.iter_1243.code_ptr
        : local.iter_1243.code_ptr)

    steps_taken = 1 + local.iter_1243.steps_taken
  }
}

locals {
  code_1245 = (try(local.iter_1244.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1244.code_ptr, local.iter_1244.code_ptr + 2)
    : [null])

  input_1245 = (local.code_1245[0] == ","
    ? substr(local.input_1244, local.code_1245[1], -1)
    : local.input_1244)

  iter_1245 = try(local.iter_1244.code_ptr >= length(var.code), true) ? local.iter_1244 : {
    output = (local.code_1245[0] == "."
      ? "${local.iter_1244.output}${join("", [for _ in range(local.code_1245[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1244.tape[local.iter_1244.tape_ptr]))])}"
      : local.iter_1244.output)
    
    tape = (
      local.code_1245[0] == "+"
        ? [for i, b in local.iter_1244.tape : (i == local.iter_1244.tape_ptr ? (b + local.code_1245[1]) % 256 : b)] :
      local.code_1245[0] == "-"
        ? [for i, b in local.iter_1244.tape : (i == local.iter_1244.tape_ptr ? (b - local.code_1245[1] + 256) % 256 : b)] :
      local.code_1245[0] == ","
        ? [for i, b in local.iter_1244.tape : (i == local.iter_1244.tape_ptr ? local.ascii_lookup[substr(local.input_1245, 0, 1)] : b)]
        : local.iter_1244.tape)

    tape_ptr = (
      local.code_1245[0] == "<"
        ? local.iter_1244.tape_ptr - local.code_1245[1] :
      local.code_1245[0] == ">"
        ? local.iter_1244.tape_ptr + local.code_1245[1]
        : local.iter_1244.tape_ptr)

    code_ptr = 2 + (
      local.code_1245[0] == "["
        ? local.iter_1244.tape[local.iter_1244.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1244.code_ptr)] : local.iter_1244.code_ptr :
      local.code_1245[0] == "]"
        ? local.iter_1244.tape[local.iter_1244.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1244.code_ptr)] : local.iter_1244.code_ptr
        : local.iter_1244.code_ptr)

    steps_taken = 1 + local.iter_1244.steps_taken
  }
}

locals {
  code_1246 = (try(local.iter_1245.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1245.code_ptr, local.iter_1245.code_ptr + 2)
    : [null])

  input_1246 = (local.code_1246[0] == ","
    ? substr(local.input_1245, local.code_1246[1], -1)
    : local.input_1245)

  iter_1246 = try(local.iter_1245.code_ptr >= length(var.code), true) ? local.iter_1245 : {
    output = (local.code_1246[0] == "."
      ? "${local.iter_1245.output}${join("", [for _ in range(local.code_1246[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1245.tape[local.iter_1245.tape_ptr]))])}"
      : local.iter_1245.output)
    
    tape = (
      local.code_1246[0] == "+"
        ? [for i, b in local.iter_1245.tape : (i == local.iter_1245.tape_ptr ? (b + local.code_1246[1]) % 256 : b)] :
      local.code_1246[0] == "-"
        ? [for i, b in local.iter_1245.tape : (i == local.iter_1245.tape_ptr ? (b - local.code_1246[1] + 256) % 256 : b)] :
      local.code_1246[0] == ","
        ? [for i, b in local.iter_1245.tape : (i == local.iter_1245.tape_ptr ? local.ascii_lookup[substr(local.input_1246, 0, 1)] : b)]
        : local.iter_1245.tape)

    tape_ptr = (
      local.code_1246[0] == "<"
        ? local.iter_1245.tape_ptr - local.code_1246[1] :
      local.code_1246[0] == ">"
        ? local.iter_1245.tape_ptr + local.code_1246[1]
        : local.iter_1245.tape_ptr)

    code_ptr = 2 + (
      local.code_1246[0] == "["
        ? local.iter_1245.tape[local.iter_1245.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1245.code_ptr)] : local.iter_1245.code_ptr :
      local.code_1246[0] == "]"
        ? local.iter_1245.tape[local.iter_1245.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1245.code_ptr)] : local.iter_1245.code_ptr
        : local.iter_1245.code_ptr)

    steps_taken = 1 + local.iter_1245.steps_taken
  }
}

locals {
  code_1247 = (try(local.iter_1246.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1246.code_ptr, local.iter_1246.code_ptr + 2)
    : [null])

  input_1247 = (local.code_1247[0] == ","
    ? substr(local.input_1246, local.code_1247[1], -1)
    : local.input_1246)

  iter_1247 = try(local.iter_1246.code_ptr >= length(var.code), true) ? local.iter_1246 : {
    output = (local.code_1247[0] == "."
      ? "${local.iter_1246.output}${join("", [for _ in range(local.code_1247[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1246.tape[local.iter_1246.tape_ptr]))])}"
      : local.iter_1246.output)
    
    tape = (
      local.code_1247[0] == "+"
        ? [for i, b in local.iter_1246.tape : (i == local.iter_1246.tape_ptr ? (b + local.code_1247[1]) % 256 : b)] :
      local.code_1247[0] == "-"
        ? [for i, b in local.iter_1246.tape : (i == local.iter_1246.tape_ptr ? (b - local.code_1247[1] + 256) % 256 : b)] :
      local.code_1247[0] == ","
        ? [for i, b in local.iter_1246.tape : (i == local.iter_1246.tape_ptr ? local.ascii_lookup[substr(local.input_1247, 0, 1)] : b)]
        : local.iter_1246.tape)

    tape_ptr = (
      local.code_1247[0] == "<"
        ? local.iter_1246.tape_ptr - local.code_1247[1] :
      local.code_1247[0] == ">"
        ? local.iter_1246.tape_ptr + local.code_1247[1]
        : local.iter_1246.tape_ptr)

    code_ptr = 2 + (
      local.code_1247[0] == "["
        ? local.iter_1246.tape[local.iter_1246.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1246.code_ptr)] : local.iter_1246.code_ptr :
      local.code_1247[0] == "]"
        ? local.iter_1246.tape[local.iter_1246.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1246.code_ptr)] : local.iter_1246.code_ptr
        : local.iter_1246.code_ptr)

    steps_taken = 1 + local.iter_1246.steps_taken
  }
}

locals {
  code_1248 = (try(local.iter_1247.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1247.code_ptr, local.iter_1247.code_ptr + 2)
    : [null])

  input_1248 = (local.code_1248[0] == ","
    ? substr(local.input_1247, local.code_1248[1], -1)
    : local.input_1247)

  iter_1248 = try(local.iter_1247.code_ptr >= length(var.code), true) ? local.iter_1247 : {
    output = (local.code_1248[0] == "."
      ? "${local.iter_1247.output}${join("", [for _ in range(local.code_1248[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1247.tape[local.iter_1247.tape_ptr]))])}"
      : local.iter_1247.output)
    
    tape = (
      local.code_1248[0] == "+"
        ? [for i, b in local.iter_1247.tape : (i == local.iter_1247.tape_ptr ? (b + local.code_1248[1]) % 256 : b)] :
      local.code_1248[0] == "-"
        ? [for i, b in local.iter_1247.tape : (i == local.iter_1247.tape_ptr ? (b - local.code_1248[1] + 256) % 256 : b)] :
      local.code_1248[0] == ","
        ? [for i, b in local.iter_1247.tape : (i == local.iter_1247.tape_ptr ? local.ascii_lookup[substr(local.input_1248, 0, 1)] : b)]
        : local.iter_1247.tape)

    tape_ptr = (
      local.code_1248[0] == "<"
        ? local.iter_1247.tape_ptr - local.code_1248[1] :
      local.code_1248[0] == ">"
        ? local.iter_1247.tape_ptr + local.code_1248[1]
        : local.iter_1247.tape_ptr)

    code_ptr = 2 + (
      local.code_1248[0] == "["
        ? local.iter_1247.tape[local.iter_1247.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1247.code_ptr)] : local.iter_1247.code_ptr :
      local.code_1248[0] == "]"
        ? local.iter_1247.tape[local.iter_1247.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1247.code_ptr)] : local.iter_1247.code_ptr
        : local.iter_1247.code_ptr)

    steps_taken = 1 + local.iter_1247.steps_taken
  }
}

locals {
  code_1249 = (try(local.iter_1248.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1248.code_ptr, local.iter_1248.code_ptr + 2)
    : [null])

  input_1249 = (local.code_1249[0] == ","
    ? substr(local.input_1248, local.code_1249[1], -1)
    : local.input_1248)

  iter_1249 = try(local.iter_1248.code_ptr >= length(var.code), true) ? local.iter_1248 : {
    output = (local.code_1249[0] == "."
      ? "${local.iter_1248.output}${join("", [for _ in range(local.code_1249[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1248.tape[local.iter_1248.tape_ptr]))])}"
      : local.iter_1248.output)
    
    tape = (
      local.code_1249[0] == "+"
        ? [for i, b in local.iter_1248.tape : (i == local.iter_1248.tape_ptr ? (b + local.code_1249[1]) % 256 : b)] :
      local.code_1249[0] == "-"
        ? [for i, b in local.iter_1248.tape : (i == local.iter_1248.tape_ptr ? (b - local.code_1249[1] + 256) % 256 : b)] :
      local.code_1249[0] == ","
        ? [for i, b in local.iter_1248.tape : (i == local.iter_1248.tape_ptr ? local.ascii_lookup[substr(local.input_1249, 0, 1)] : b)]
        : local.iter_1248.tape)

    tape_ptr = (
      local.code_1249[0] == "<"
        ? local.iter_1248.tape_ptr - local.code_1249[1] :
      local.code_1249[0] == ">"
        ? local.iter_1248.tape_ptr + local.code_1249[1]
        : local.iter_1248.tape_ptr)

    code_ptr = 2 + (
      local.code_1249[0] == "["
        ? local.iter_1248.tape[local.iter_1248.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1248.code_ptr)] : local.iter_1248.code_ptr :
      local.code_1249[0] == "]"
        ? local.iter_1248.tape[local.iter_1248.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1248.code_ptr)] : local.iter_1248.code_ptr
        : local.iter_1248.code_ptr)

    steps_taken = 1 + local.iter_1248.steps_taken
  }
}

locals {
  code_1250 = (try(local.iter_1249.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1249.code_ptr, local.iter_1249.code_ptr + 2)
    : [null])

  input_1250 = (local.code_1250[0] == ","
    ? substr(local.input_1249, local.code_1250[1], -1)
    : local.input_1249)

  iter_1250 = try(local.iter_1249.code_ptr >= length(var.code), true) ? local.iter_1249 : {
    output = (local.code_1250[0] == "."
      ? "${local.iter_1249.output}${join("", [for _ in range(local.code_1250[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1249.tape[local.iter_1249.tape_ptr]))])}"
      : local.iter_1249.output)
    
    tape = (
      local.code_1250[0] == "+"
        ? [for i, b in local.iter_1249.tape : (i == local.iter_1249.tape_ptr ? (b + local.code_1250[1]) % 256 : b)] :
      local.code_1250[0] == "-"
        ? [for i, b in local.iter_1249.tape : (i == local.iter_1249.tape_ptr ? (b - local.code_1250[1] + 256) % 256 : b)] :
      local.code_1250[0] == ","
        ? [for i, b in local.iter_1249.tape : (i == local.iter_1249.tape_ptr ? local.ascii_lookup[substr(local.input_1250, 0, 1)] : b)]
        : local.iter_1249.tape)

    tape_ptr = (
      local.code_1250[0] == "<"
        ? local.iter_1249.tape_ptr - local.code_1250[1] :
      local.code_1250[0] == ">"
        ? local.iter_1249.tape_ptr + local.code_1250[1]
        : local.iter_1249.tape_ptr)

    code_ptr = 2 + (
      local.code_1250[0] == "["
        ? local.iter_1249.tape[local.iter_1249.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1249.code_ptr)] : local.iter_1249.code_ptr :
      local.code_1250[0] == "]"
        ? local.iter_1249.tape[local.iter_1249.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1249.code_ptr)] : local.iter_1249.code_ptr
        : local.iter_1249.code_ptr)

    steps_taken = 1 + local.iter_1249.steps_taken
  }
}

locals {
  code_1251 = (try(local.iter_1250.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1250.code_ptr, local.iter_1250.code_ptr + 2)
    : [null])

  input_1251 = (local.code_1251[0] == ","
    ? substr(local.input_1250, local.code_1251[1], -1)
    : local.input_1250)

  iter_1251 = try(local.iter_1250.code_ptr >= length(var.code), true) ? local.iter_1250 : {
    output = (local.code_1251[0] == "."
      ? "${local.iter_1250.output}${join("", [for _ in range(local.code_1251[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1250.tape[local.iter_1250.tape_ptr]))])}"
      : local.iter_1250.output)
    
    tape = (
      local.code_1251[0] == "+"
        ? [for i, b in local.iter_1250.tape : (i == local.iter_1250.tape_ptr ? (b + local.code_1251[1]) % 256 : b)] :
      local.code_1251[0] == "-"
        ? [for i, b in local.iter_1250.tape : (i == local.iter_1250.tape_ptr ? (b - local.code_1251[1] + 256) % 256 : b)] :
      local.code_1251[0] == ","
        ? [for i, b in local.iter_1250.tape : (i == local.iter_1250.tape_ptr ? local.ascii_lookup[substr(local.input_1251, 0, 1)] : b)]
        : local.iter_1250.tape)

    tape_ptr = (
      local.code_1251[0] == "<"
        ? local.iter_1250.tape_ptr - local.code_1251[1] :
      local.code_1251[0] == ">"
        ? local.iter_1250.tape_ptr + local.code_1251[1]
        : local.iter_1250.tape_ptr)

    code_ptr = 2 + (
      local.code_1251[0] == "["
        ? local.iter_1250.tape[local.iter_1250.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1250.code_ptr)] : local.iter_1250.code_ptr :
      local.code_1251[0] == "]"
        ? local.iter_1250.tape[local.iter_1250.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1250.code_ptr)] : local.iter_1250.code_ptr
        : local.iter_1250.code_ptr)

    steps_taken = 1 + local.iter_1250.steps_taken
  }
}

locals {
  code_1252 = (try(local.iter_1251.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1251.code_ptr, local.iter_1251.code_ptr + 2)
    : [null])

  input_1252 = (local.code_1252[0] == ","
    ? substr(local.input_1251, local.code_1252[1], -1)
    : local.input_1251)

  iter_1252 = try(local.iter_1251.code_ptr >= length(var.code), true) ? local.iter_1251 : {
    output = (local.code_1252[0] == "."
      ? "${local.iter_1251.output}${join("", [for _ in range(local.code_1252[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1251.tape[local.iter_1251.tape_ptr]))])}"
      : local.iter_1251.output)
    
    tape = (
      local.code_1252[0] == "+"
        ? [for i, b in local.iter_1251.tape : (i == local.iter_1251.tape_ptr ? (b + local.code_1252[1]) % 256 : b)] :
      local.code_1252[0] == "-"
        ? [for i, b in local.iter_1251.tape : (i == local.iter_1251.tape_ptr ? (b - local.code_1252[1] + 256) % 256 : b)] :
      local.code_1252[0] == ","
        ? [for i, b in local.iter_1251.tape : (i == local.iter_1251.tape_ptr ? local.ascii_lookup[substr(local.input_1252, 0, 1)] : b)]
        : local.iter_1251.tape)

    tape_ptr = (
      local.code_1252[0] == "<"
        ? local.iter_1251.tape_ptr - local.code_1252[1] :
      local.code_1252[0] == ">"
        ? local.iter_1251.tape_ptr + local.code_1252[1]
        : local.iter_1251.tape_ptr)

    code_ptr = 2 + (
      local.code_1252[0] == "["
        ? local.iter_1251.tape[local.iter_1251.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1251.code_ptr)] : local.iter_1251.code_ptr :
      local.code_1252[0] == "]"
        ? local.iter_1251.tape[local.iter_1251.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1251.code_ptr)] : local.iter_1251.code_ptr
        : local.iter_1251.code_ptr)

    steps_taken = 1 + local.iter_1251.steps_taken
  }
}

locals {
  code_1253 = (try(local.iter_1252.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1252.code_ptr, local.iter_1252.code_ptr + 2)
    : [null])

  input_1253 = (local.code_1253[0] == ","
    ? substr(local.input_1252, local.code_1253[1], -1)
    : local.input_1252)

  iter_1253 = try(local.iter_1252.code_ptr >= length(var.code), true) ? local.iter_1252 : {
    output = (local.code_1253[0] == "."
      ? "${local.iter_1252.output}${join("", [for _ in range(local.code_1253[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1252.tape[local.iter_1252.tape_ptr]))])}"
      : local.iter_1252.output)
    
    tape = (
      local.code_1253[0] == "+"
        ? [for i, b in local.iter_1252.tape : (i == local.iter_1252.tape_ptr ? (b + local.code_1253[1]) % 256 : b)] :
      local.code_1253[0] == "-"
        ? [for i, b in local.iter_1252.tape : (i == local.iter_1252.tape_ptr ? (b - local.code_1253[1] + 256) % 256 : b)] :
      local.code_1253[0] == ","
        ? [for i, b in local.iter_1252.tape : (i == local.iter_1252.tape_ptr ? local.ascii_lookup[substr(local.input_1253, 0, 1)] : b)]
        : local.iter_1252.tape)

    tape_ptr = (
      local.code_1253[0] == "<"
        ? local.iter_1252.tape_ptr - local.code_1253[1] :
      local.code_1253[0] == ">"
        ? local.iter_1252.tape_ptr + local.code_1253[1]
        : local.iter_1252.tape_ptr)

    code_ptr = 2 + (
      local.code_1253[0] == "["
        ? local.iter_1252.tape[local.iter_1252.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1252.code_ptr)] : local.iter_1252.code_ptr :
      local.code_1253[0] == "]"
        ? local.iter_1252.tape[local.iter_1252.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1252.code_ptr)] : local.iter_1252.code_ptr
        : local.iter_1252.code_ptr)

    steps_taken = 1 + local.iter_1252.steps_taken
  }
}

locals {
  code_1254 = (try(local.iter_1253.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1253.code_ptr, local.iter_1253.code_ptr + 2)
    : [null])

  input_1254 = (local.code_1254[0] == ","
    ? substr(local.input_1253, local.code_1254[1], -1)
    : local.input_1253)

  iter_1254 = try(local.iter_1253.code_ptr >= length(var.code), true) ? local.iter_1253 : {
    output = (local.code_1254[0] == "."
      ? "${local.iter_1253.output}${join("", [for _ in range(local.code_1254[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1253.tape[local.iter_1253.tape_ptr]))])}"
      : local.iter_1253.output)
    
    tape = (
      local.code_1254[0] == "+"
        ? [for i, b in local.iter_1253.tape : (i == local.iter_1253.tape_ptr ? (b + local.code_1254[1]) % 256 : b)] :
      local.code_1254[0] == "-"
        ? [for i, b in local.iter_1253.tape : (i == local.iter_1253.tape_ptr ? (b - local.code_1254[1] + 256) % 256 : b)] :
      local.code_1254[0] == ","
        ? [for i, b in local.iter_1253.tape : (i == local.iter_1253.tape_ptr ? local.ascii_lookup[substr(local.input_1254, 0, 1)] : b)]
        : local.iter_1253.tape)

    tape_ptr = (
      local.code_1254[0] == "<"
        ? local.iter_1253.tape_ptr - local.code_1254[1] :
      local.code_1254[0] == ">"
        ? local.iter_1253.tape_ptr + local.code_1254[1]
        : local.iter_1253.tape_ptr)

    code_ptr = 2 + (
      local.code_1254[0] == "["
        ? local.iter_1253.tape[local.iter_1253.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1253.code_ptr)] : local.iter_1253.code_ptr :
      local.code_1254[0] == "]"
        ? local.iter_1253.tape[local.iter_1253.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1253.code_ptr)] : local.iter_1253.code_ptr
        : local.iter_1253.code_ptr)

    steps_taken = 1 + local.iter_1253.steps_taken
  }
}

locals {
  code_1255 = (try(local.iter_1254.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1254.code_ptr, local.iter_1254.code_ptr + 2)
    : [null])

  input_1255 = (local.code_1255[0] == ","
    ? substr(local.input_1254, local.code_1255[1], -1)
    : local.input_1254)

  iter_1255 = try(local.iter_1254.code_ptr >= length(var.code), true) ? local.iter_1254 : {
    output = (local.code_1255[0] == "."
      ? "${local.iter_1254.output}${join("", [for _ in range(local.code_1255[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1254.tape[local.iter_1254.tape_ptr]))])}"
      : local.iter_1254.output)
    
    tape = (
      local.code_1255[0] == "+"
        ? [for i, b in local.iter_1254.tape : (i == local.iter_1254.tape_ptr ? (b + local.code_1255[1]) % 256 : b)] :
      local.code_1255[0] == "-"
        ? [for i, b in local.iter_1254.tape : (i == local.iter_1254.tape_ptr ? (b - local.code_1255[1] + 256) % 256 : b)] :
      local.code_1255[0] == ","
        ? [for i, b in local.iter_1254.tape : (i == local.iter_1254.tape_ptr ? local.ascii_lookup[substr(local.input_1255, 0, 1)] : b)]
        : local.iter_1254.tape)

    tape_ptr = (
      local.code_1255[0] == "<"
        ? local.iter_1254.tape_ptr - local.code_1255[1] :
      local.code_1255[0] == ">"
        ? local.iter_1254.tape_ptr + local.code_1255[1]
        : local.iter_1254.tape_ptr)

    code_ptr = 2 + (
      local.code_1255[0] == "["
        ? local.iter_1254.tape[local.iter_1254.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1254.code_ptr)] : local.iter_1254.code_ptr :
      local.code_1255[0] == "]"
        ? local.iter_1254.tape[local.iter_1254.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1254.code_ptr)] : local.iter_1254.code_ptr
        : local.iter_1254.code_ptr)

    steps_taken = 1 + local.iter_1254.steps_taken
  }
}

locals {
  code_1256 = (try(local.iter_1255.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1255.code_ptr, local.iter_1255.code_ptr + 2)
    : [null])

  input_1256 = (local.code_1256[0] == ","
    ? substr(local.input_1255, local.code_1256[1], -1)
    : local.input_1255)

  iter_1256 = try(local.iter_1255.code_ptr >= length(var.code), true) ? local.iter_1255 : {
    output = (local.code_1256[0] == "."
      ? "${local.iter_1255.output}${join("", [for _ in range(local.code_1256[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1255.tape[local.iter_1255.tape_ptr]))])}"
      : local.iter_1255.output)
    
    tape = (
      local.code_1256[0] == "+"
        ? [for i, b in local.iter_1255.tape : (i == local.iter_1255.tape_ptr ? (b + local.code_1256[1]) % 256 : b)] :
      local.code_1256[0] == "-"
        ? [for i, b in local.iter_1255.tape : (i == local.iter_1255.tape_ptr ? (b - local.code_1256[1] + 256) % 256 : b)] :
      local.code_1256[0] == ","
        ? [for i, b in local.iter_1255.tape : (i == local.iter_1255.tape_ptr ? local.ascii_lookup[substr(local.input_1256, 0, 1)] : b)]
        : local.iter_1255.tape)

    tape_ptr = (
      local.code_1256[0] == "<"
        ? local.iter_1255.tape_ptr - local.code_1256[1] :
      local.code_1256[0] == ">"
        ? local.iter_1255.tape_ptr + local.code_1256[1]
        : local.iter_1255.tape_ptr)

    code_ptr = 2 + (
      local.code_1256[0] == "["
        ? local.iter_1255.tape[local.iter_1255.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1255.code_ptr)] : local.iter_1255.code_ptr :
      local.code_1256[0] == "]"
        ? local.iter_1255.tape[local.iter_1255.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1255.code_ptr)] : local.iter_1255.code_ptr
        : local.iter_1255.code_ptr)

    steps_taken = 1 + local.iter_1255.steps_taken
  }
}

locals {
  code_1257 = (try(local.iter_1256.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1256.code_ptr, local.iter_1256.code_ptr + 2)
    : [null])

  input_1257 = (local.code_1257[0] == ","
    ? substr(local.input_1256, local.code_1257[1], -1)
    : local.input_1256)

  iter_1257 = try(local.iter_1256.code_ptr >= length(var.code), true) ? local.iter_1256 : {
    output = (local.code_1257[0] == "."
      ? "${local.iter_1256.output}${join("", [for _ in range(local.code_1257[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1256.tape[local.iter_1256.tape_ptr]))])}"
      : local.iter_1256.output)
    
    tape = (
      local.code_1257[0] == "+"
        ? [for i, b in local.iter_1256.tape : (i == local.iter_1256.tape_ptr ? (b + local.code_1257[1]) % 256 : b)] :
      local.code_1257[0] == "-"
        ? [for i, b in local.iter_1256.tape : (i == local.iter_1256.tape_ptr ? (b - local.code_1257[1] + 256) % 256 : b)] :
      local.code_1257[0] == ","
        ? [for i, b in local.iter_1256.tape : (i == local.iter_1256.tape_ptr ? local.ascii_lookup[substr(local.input_1257, 0, 1)] : b)]
        : local.iter_1256.tape)

    tape_ptr = (
      local.code_1257[0] == "<"
        ? local.iter_1256.tape_ptr - local.code_1257[1] :
      local.code_1257[0] == ">"
        ? local.iter_1256.tape_ptr + local.code_1257[1]
        : local.iter_1256.tape_ptr)

    code_ptr = 2 + (
      local.code_1257[0] == "["
        ? local.iter_1256.tape[local.iter_1256.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1256.code_ptr)] : local.iter_1256.code_ptr :
      local.code_1257[0] == "]"
        ? local.iter_1256.tape[local.iter_1256.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1256.code_ptr)] : local.iter_1256.code_ptr
        : local.iter_1256.code_ptr)

    steps_taken = 1 + local.iter_1256.steps_taken
  }
}

locals {
  code_1258 = (try(local.iter_1257.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1257.code_ptr, local.iter_1257.code_ptr + 2)
    : [null])

  input_1258 = (local.code_1258[0] == ","
    ? substr(local.input_1257, local.code_1258[1], -1)
    : local.input_1257)

  iter_1258 = try(local.iter_1257.code_ptr >= length(var.code), true) ? local.iter_1257 : {
    output = (local.code_1258[0] == "."
      ? "${local.iter_1257.output}${join("", [for _ in range(local.code_1258[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1257.tape[local.iter_1257.tape_ptr]))])}"
      : local.iter_1257.output)
    
    tape = (
      local.code_1258[0] == "+"
        ? [for i, b in local.iter_1257.tape : (i == local.iter_1257.tape_ptr ? (b + local.code_1258[1]) % 256 : b)] :
      local.code_1258[0] == "-"
        ? [for i, b in local.iter_1257.tape : (i == local.iter_1257.tape_ptr ? (b - local.code_1258[1] + 256) % 256 : b)] :
      local.code_1258[0] == ","
        ? [for i, b in local.iter_1257.tape : (i == local.iter_1257.tape_ptr ? local.ascii_lookup[substr(local.input_1258, 0, 1)] : b)]
        : local.iter_1257.tape)

    tape_ptr = (
      local.code_1258[0] == "<"
        ? local.iter_1257.tape_ptr - local.code_1258[1] :
      local.code_1258[0] == ">"
        ? local.iter_1257.tape_ptr + local.code_1258[1]
        : local.iter_1257.tape_ptr)

    code_ptr = 2 + (
      local.code_1258[0] == "["
        ? local.iter_1257.tape[local.iter_1257.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1257.code_ptr)] : local.iter_1257.code_ptr :
      local.code_1258[0] == "]"
        ? local.iter_1257.tape[local.iter_1257.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1257.code_ptr)] : local.iter_1257.code_ptr
        : local.iter_1257.code_ptr)

    steps_taken = 1 + local.iter_1257.steps_taken
  }
}

locals {
  code_1259 = (try(local.iter_1258.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1258.code_ptr, local.iter_1258.code_ptr + 2)
    : [null])

  input_1259 = (local.code_1259[0] == ","
    ? substr(local.input_1258, local.code_1259[1], -1)
    : local.input_1258)

  iter_1259 = try(local.iter_1258.code_ptr >= length(var.code), true) ? local.iter_1258 : {
    output = (local.code_1259[0] == "."
      ? "${local.iter_1258.output}${join("", [for _ in range(local.code_1259[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1258.tape[local.iter_1258.tape_ptr]))])}"
      : local.iter_1258.output)
    
    tape = (
      local.code_1259[0] == "+"
        ? [for i, b in local.iter_1258.tape : (i == local.iter_1258.tape_ptr ? (b + local.code_1259[1]) % 256 : b)] :
      local.code_1259[0] == "-"
        ? [for i, b in local.iter_1258.tape : (i == local.iter_1258.tape_ptr ? (b - local.code_1259[1] + 256) % 256 : b)] :
      local.code_1259[0] == ","
        ? [for i, b in local.iter_1258.tape : (i == local.iter_1258.tape_ptr ? local.ascii_lookup[substr(local.input_1259, 0, 1)] : b)]
        : local.iter_1258.tape)

    tape_ptr = (
      local.code_1259[0] == "<"
        ? local.iter_1258.tape_ptr - local.code_1259[1] :
      local.code_1259[0] == ">"
        ? local.iter_1258.tape_ptr + local.code_1259[1]
        : local.iter_1258.tape_ptr)

    code_ptr = 2 + (
      local.code_1259[0] == "["
        ? local.iter_1258.tape[local.iter_1258.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1258.code_ptr)] : local.iter_1258.code_ptr :
      local.code_1259[0] == "]"
        ? local.iter_1258.tape[local.iter_1258.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1258.code_ptr)] : local.iter_1258.code_ptr
        : local.iter_1258.code_ptr)

    steps_taken = 1 + local.iter_1258.steps_taken
  }
}

locals {
  code_1260 = (try(local.iter_1259.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1259.code_ptr, local.iter_1259.code_ptr + 2)
    : [null])

  input_1260 = (local.code_1260[0] == ","
    ? substr(local.input_1259, local.code_1260[1], -1)
    : local.input_1259)

  iter_1260 = try(local.iter_1259.code_ptr >= length(var.code), true) ? local.iter_1259 : {
    output = (local.code_1260[0] == "."
      ? "${local.iter_1259.output}${join("", [for _ in range(local.code_1260[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1259.tape[local.iter_1259.tape_ptr]))])}"
      : local.iter_1259.output)
    
    tape = (
      local.code_1260[0] == "+"
        ? [for i, b in local.iter_1259.tape : (i == local.iter_1259.tape_ptr ? (b + local.code_1260[1]) % 256 : b)] :
      local.code_1260[0] == "-"
        ? [for i, b in local.iter_1259.tape : (i == local.iter_1259.tape_ptr ? (b - local.code_1260[1] + 256) % 256 : b)] :
      local.code_1260[0] == ","
        ? [for i, b in local.iter_1259.tape : (i == local.iter_1259.tape_ptr ? local.ascii_lookup[substr(local.input_1260, 0, 1)] : b)]
        : local.iter_1259.tape)

    tape_ptr = (
      local.code_1260[0] == "<"
        ? local.iter_1259.tape_ptr - local.code_1260[1] :
      local.code_1260[0] == ">"
        ? local.iter_1259.tape_ptr + local.code_1260[1]
        : local.iter_1259.tape_ptr)

    code_ptr = 2 + (
      local.code_1260[0] == "["
        ? local.iter_1259.tape[local.iter_1259.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1259.code_ptr)] : local.iter_1259.code_ptr :
      local.code_1260[0] == "]"
        ? local.iter_1259.tape[local.iter_1259.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1259.code_ptr)] : local.iter_1259.code_ptr
        : local.iter_1259.code_ptr)

    steps_taken = 1 + local.iter_1259.steps_taken
  }
}

locals {
  code_1261 = (try(local.iter_1260.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1260.code_ptr, local.iter_1260.code_ptr + 2)
    : [null])

  input_1261 = (local.code_1261[0] == ","
    ? substr(local.input_1260, local.code_1261[1], -1)
    : local.input_1260)

  iter_1261 = try(local.iter_1260.code_ptr >= length(var.code), true) ? local.iter_1260 : {
    output = (local.code_1261[0] == "."
      ? "${local.iter_1260.output}${join("", [for _ in range(local.code_1261[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1260.tape[local.iter_1260.tape_ptr]))])}"
      : local.iter_1260.output)
    
    tape = (
      local.code_1261[0] == "+"
        ? [for i, b in local.iter_1260.tape : (i == local.iter_1260.tape_ptr ? (b + local.code_1261[1]) % 256 : b)] :
      local.code_1261[0] == "-"
        ? [for i, b in local.iter_1260.tape : (i == local.iter_1260.tape_ptr ? (b - local.code_1261[1] + 256) % 256 : b)] :
      local.code_1261[0] == ","
        ? [for i, b in local.iter_1260.tape : (i == local.iter_1260.tape_ptr ? local.ascii_lookup[substr(local.input_1261, 0, 1)] : b)]
        : local.iter_1260.tape)

    tape_ptr = (
      local.code_1261[0] == "<"
        ? local.iter_1260.tape_ptr - local.code_1261[1] :
      local.code_1261[0] == ">"
        ? local.iter_1260.tape_ptr + local.code_1261[1]
        : local.iter_1260.tape_ptr)

    code_ptr = 2 + (
      local.code_1261[0] == "["
        ? local.iter_1260.tape[local.iter_1260.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1260.code_ptr)] : local.iter_1260.code_ptr :
      local.code_1261[0] == "]"
        ? local.iter_1260.tape[local.iter_1260.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1260.code_ptr)] : local.iter_1260.code_ptr
        : local.iter_1260.code_ptr)

    steps_taken = 1 + local.iter_1260.steps_taken
  }
}

locals {
  code_1262 = (try(local.iter_1261.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1261.code_ptr, local.iter_1261.code_ptr + 2)
    : [null])

  input_1262 = (local.code_1262[0] == ","
    ? substr(local.input_1261, local.code_1262[1], -1)
    : local.input_1261)

  iter_1262 = try(local.iter_1261.code_ptr >= length(var.code), true) ? local.iter_1261 : {
    output = (local.code_1262[0] == "."
      ? "${local.iter_1261.output}${join("", [for _ in range(local.code_1262[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1261.tape[local.iter_1261.tape_ptr]))])}"
      : local.iter_1261.output)
    
    tape = (
      local.code_1262[0] == "+"
        ? [for i, b in local.iter_1261.tape : (i == local.iter_1261.tape_ptr ? (b + local.code_1262[1]) % 256 : b)] :
      local.code_1262[0] == "-"
        ? [for i, b in local.iter_1261.tape : (i == local.iter_1261.tape_ptr ? (b - local.code_1262[1] + 256) % 256 : b)] :
      local.code_1262[0] == ","
        ? [for i, b in local.iter_1261.tape : (i == local.iter_1261.tape_ptr ? local.ascii_lookup[substr(local.input_1262, 0, 1)] : b)]
        : local.iter_1261.tape)

    tape_ptr = (
      local.code_1262[0] == "<"
        ? local.iter_1261.tape_ptr - local.code_1262[1] :
      local.code_1262[0] == ">"
        ? local.iter_1261.tape_ptr + local.code_1262[1]
        : local.iter_1261.tape_ptr)

    code_ptr = 2 + (
      local.code_1262[0] == "["
        ? local.iter_1261.tape[local.iter_1261.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1261.code_ptr)] : local.iter_1261.code_ptr :
      local.code_1262[0] == "]"
        ? local.iter_1261.tape[local.iter_1261.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1261.code_ptr)] : local.iter_1261.code_ptr
        : local.iter_1261.code_ptr)

    steps_taken = 1 + local.iter_1261.steps_taken
  }
}

locals {
  code_1263 = (try(local.iter_1262.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1262.code_ptr, local.iter_1262.code_ptr + 2)
    : [null])

  input_1263 = (local.code_1263[0] == ","
    ? substr(local.input_1262, local.code_1263[1], -1)
    : local.input_1262)

  iter_1263 = try(local.iter_1262.code_ptr >= length(var.code), true) ? local.iter_1262 : {
    output = (local.code_1263[0] == "."
      ? "${local.iter_1262.output}${join("", [for _ in range(local.code_1263[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1262.tape[local.iter_1262.tape_ptr]))])}"
      : local.iter_1262.output)
    
    tape = (
      local.code_1263[0] == "+"
        ? [for i, b in local.iter_1262.tape : (i == local.iter_1262.tape_ptr ? (b + local.code_1263[1]) % 256 : b)] :
      local.code_1263[0] == "-"
        ? [for i, b in local.iter_1262.tape : (i == local.iter_1262.tape_ptr ? (b - local.code_1263[1] + 256) % 256 : b)] :
      local.code_1263[0] == ","
        ? [for i, b in local.iter_1262.tape : (i == local.iter_1262.tape_ptr ? local.ascii_lookup[substr(local.input_1263, 0, 1)] : b)]
        : local.iter_1262.tape)

    tape_ptr = (
      local.code_1263[0] == "<"
        ? local.iter_1262.tape_ptr - local.code_1263[1] :
      local.code_1263[0] == ">"
        ? local.iter_1262.tape_ptr + local.code_1263[1]
        : local.iter_1262.tape_ptr)

    code_ptr = 2 + (
      local.code_1263[0] == "["
        ? local.iter_1262.tape[local.iter_1262.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1262.code_ptr)] : local.iter_1262.code_ptr :
      local.code_1263[0] == "]"
        ? local.iter_1262.tape[local.iter_1262.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1262.code_ptr)] : local.iter_1262.code_ptr
        : local.iter_1262.code_ptr)

    steps_taken = 1 + local.iter_1262.steps_taken
  }
}

locals {
  code_1264 = (try(local.iter_1263.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1263.code_ptr, local.iter_1263.code_ptr + 2)
    : [null])

  input_1264 = (local.code_1264[0] == ","
    ? substr(local.input_1263, local.code_1264[1], -1)
    : local.input_1263)

  iter_1264 = try(local.iter_1263.code_ptr >= length(var.code), true) ? local.iter_1263 : {
    output = (local.code_1264[0] == "."
      ? "${local.iter_1263.output}${join("", [for _ in range(local.code_1264[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1263.tape[local.iter_1263.tape_ptr]))])}"
      : local.iter_1263.output)
    
    tape = (
      local.code_1264[0] == "+"
        ? [for i, b in local.iter_1263.tape : (i == local.iter_1263.tape_ptr ? (b + local.code_1264[1]) % 256 : b)] :
      local.code_1264[0] == "-"
        ? [for i, b in local.iter_1263.tape : (i == local.iter_1263.tape_ptr ? (b - local.code_1264[1] + 256) % 256 : b)] :
      local.code_1264[0] == ","
        ? [for i, b in local.iter_1263.tape : (i == local.iter_1263.tape_ptr ? local.ascii_lookup[substr(local.input_1264, 0, 1)] : b)]
        : local.iter_1263.tape)

    tape_ptr = (
      local.code_1264[0] == "<"
        ? local.iter_1263.tape_ptr - local.code_1264[1] :
      local.code_1264[0] == ">"
        ? local.iter_1263.tape_ptr + local.code_1264[1]
        : local.iter_1263.tape_ptr)

    code_ptr = 2 + (
      local.code_1264[0] == "["
        ? local.iter_1263.tape[local.iter_1263.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1263.code_ptr)] : local.iter_1263.code_ptr :
      local.code_1264[0] == "]"
        ? local.iter_1263.tape[local.iter_1263.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1263.code_ptr)] : local.iter_1263.code_ptr
        : local.iter_1263.code_ptr)

    steps_taken = 1 + local.iter_1263.steps_taken
  }
}

locals {
  code_1265 = (try(local.iter_1264.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1264.code_ptr, local.iter_1264.code_ptr + 2)
    : [null])

  input_1265 = (local.code_1265[0] == ","
    ? substr(local.input_1264, local.code_1265[1], -1)
    : local.input_1264)

  iter_1265 = try(local.iter_1264.code_ptr >= length(var.code), true) ? local.iter_1264 : {
    output = (local.code_1265[0] == "."
      ? "${local.iter_1264.output}${join("", [for _ in range(local.code_1265[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1264.tape[local.iter_1264.tape_ptr]))])}"
      : local.iter_1264.output)
    
    tape = (
      local.code_1265[0] == "+"
        ? [for i, b in local.iter_1264.tape : (i == local.iter_1264.tape_ptr ? (b + local.code_1265[1]) % 256 : b)] :
      local.code_1265[0] == "-"
        ? [for i, b in local.iter_1264.tape : (i == local.iter_1264.tape_ptr ? (b - local.code_1265[1] + 256) % 256 : b)] :
      local.code_1265[0] == ","
        ? [for i, b in local.iter_1264.tape : (i == local.iter_1264.tape_ptr ? local.ascii_lookup[substr(local.input_1265, 0, 1)] : b)]
        : local.iter_1264.tape)

    tape_ptr = (
      local.code_1265[0] == "<"
        ? local.iter_1264.tape_ptr - local.code_1265[1] :
      local.code_1265[0] == ">"
        ? local.iter_1264.tape_ptr + local.code_1265[1]
        : local.iter_1264.tape_ptr)

    code_ptr = 2 + (
      local.code_1265[0] == "["
        ? local.iter_1264.tape[local.iter_1264.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1264.code_ptr)] : local.iter_1264.code_ptr :
      local.code_1265[0] == "]"
        ? local.iter_1264.tape[local.iter_1264.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1264.code_ptr)] : local.iter_1264.code_ptr
        : local.iter_1264.code_ptr)

    steps_taken = 1 + local.iter_1264.steps_taken
  }
}

locals {
  code_1266 = (try(local.iter_1265.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1265.code_ptr, local.iter_1265.code_ptr + 2)
    : [null])

  input_1266 = (local.code_1266[0] == ","
    ? substr(local.input_1265, local.code_1266[1], -1)
    : local.input_1265)

  iter_1266 = try(local.iter_1265.code_ptr >= length(var.code), true) ? local.iter_1265 : {
    output = (local.code_1266[0] == "."
      ? "${local.iter_1265.output}${join("", [for _ in range(local.code_1266[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1265.tape[local.iter_1265.tape_ptr]))])}"
      : local.iter_1265.output)
    
    tape = (
      local.code_1266[0] == "+"
        ? [for i, b in local.iter_1265.tape : (i == local.iter_1265.tape_ptr ? (b + local.code_1266[1]) % 256 : b)] :
      local.code_1266[0] == "-"
        ? [for i, b in local.iter_1265.tape : (i == local.iter_1265.tape_ptr ? (b - local.code_1266[1] + 256) % 256 : b)] :
      local.code_1266[0] == ","
        ? [for i, b in local.iter_1265.tape : (i == local.iter_1265.tape_ptr ? local.ascii_lookup[substr(local.input_1266, 0, 1)] : b)]
        : local.iter_1265.tape)

    tape_ptr = (
      local.code_1266[0] == "<"
        ? local.iter_1265.tape_ptr - local.code_1266[1] :
      local.code_1266[0] == ">"
        ? local.iter_1265.tape_ptr + local.code_1266[1]
        : local.iter_1265.tape_ptr)

    code_ptr = 2 + (
      local.code_1266[0] == "["
        ? local.iter_1265.tape[local.iter_1265.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1265.code_ptr)] : local.iter_1265.code_ptr :
      local.code_1266[0] == "]"
        ? local.iter_1265.tape[local.iter_1265.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1265.code_ptr)] : local.iter_1265.code_ptr
        : local.iter_1265.code_ptr)

    steps_taken = 1 + local.iter_1265.steps_taken
  }
}

locals {
  code_1267 = (try(local.iter_1266.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1266.code_ptr, local.iter_1266.code_ptr + 2)
    : [null])

  input_1267 = (local.code_1267[0] == ","
    ? substr(local.input_1266, local.code_1267[1], -1)
    : local.input_1266)

  iter_1267 = try(local.iter_1266.code_ptr >= length(var.code), true) ? local.iter_1266 : {
    output = (local.code_1267[0] == "."
      ? "${local.iter_1266.output}${join("", [for _ in range(local.code_1267[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1266.tape[local.iter_1266.tape_ptr]))])}"
      : local.iter_1266.output)
    
    tape = (
      local.code_1267[0] == "+"
        ? [for i, b in local.iter_1266.tape : (i == local.iter_1266.tape_ptr ? (b + local.code_1267[1]) % 256 : b)] :
      local.code_1267[0] == "-"
        ? [for i, b in local.iter_1266.tape : (i == local.iter_1266.tape_ptr ? (b - local.code_1267[1] + 256) % 256 : b)] :
      local.code_1267[0] == ","
        ? [for i, b in local.iter_1266.tape : (i == local.iter_1266.tape_ptr ? local.ascii_lookup[substr(local.input_1267, 0, 1)] : b)]
        : local.iter_1266.tape)

    tape_ptr = (
      local.code_1267[0] == "<"
        ? local.iter_1266.tape_ptr - local.code_1267[1] :
      local.code_1267[0] == ">"
        ? local.iter_1266.tape_ptr + local.code_1267[1]
        : local.iter_1266.tape_ptr)

    code_ptr = 2 + (
      local.code_1267[0] == "["
        ? local.iter_1266.tape[local.iter_1266.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1266.code_ptr)] : local.iter_1266.code_ptr :
      local.code_1267[0] == "]"
        ? local.iter_1266.tape[local.iter_1266.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1266.code_ptr)] : local.iter_1266.code_ptr
        : local.iter_1266.code_ptr)

    steps_taken = 1 + local.iter_1266.steps_taken
  }
}

locals {
  code_1268 = (try(local.iter_1267.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1267.code_ptr, local.iter_1267.code_ptr + 2)
    : [null])

  input_1268 = (local.code_1268[0] == ","
    ? substr(local.input_1267, local.code_1268[1], -1)
    : local.input_1267)

  iter_1268 = try(local.iter_1267.code_ptr >= length(var.code), true) ? local.iter_1267 : {
    output = (local.code_1268[0] == "."
      ? "${local.iter_1267.output}${join("", [for _ in range(local.code_1268[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1267.tape[local.iter_1267.tape_ptr]))])}"
      : local.iter_1267.output)
    
    tape = (
      local.code_1268[0] == "+"
        ? [for i, b in local.iter_1267.tape : (i == local.iter_1267.tape_ptr ? (b + local.code_1268[1]) % 256 : b)] :
      local.code_1268[0] == "-"
        ? [for i, b in local.iter_1267.tape : (i == local.iter_1267.tape_ptr ? (b - local.code_1268[1] + 256) % 256 : b)] :
      local.code_1268[0] == ","
        ? [for i, b in local.iter_1267.tape : (i == local.iter_1267.tape_ptr ? local.ascii_lookup[substr(local.input_1268, 0, 1)] : b)]
        : local.iter_1267.tape)

    tape_ptr = (
      local.code_1268[0] == "<"
        ? local.iter_1267.tape_ptr - local.code_1268[1] :
      local.code_1268[0] == ">"
        ? local.iter_1267.tape_ptr + local.code_1268[1]
        : local.iter_1267.tape_ptr)

    code_ptr = 2 + (
      local.code_1268[0] == "["
        ? local.iter_1267.tape[local.iter_1267.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1267.code_ptr)] : local.iter_1267.code_ptr :
      local.code_1268[0] == "]"
        ? local.iter_1267.tape[local.iter_1267.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1267.code_ptr)] : local.iter_1267.code_ptr
        : local.iter_1267.code_ptr)

    steps_taken = 1 + local.iter_1267.steps_taken
  }
}

locals {
  code_1269 = (try(local.iter_1268.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1268.code_ptr, local.iter_1268.code_ptr + 2)
    : [null])

  input_1269 = (local.code_1269[0] == ","
    ? substr(local.input_1268, local.code_1269[1], -1)
    : local.input_1268)

  iter_1269 = try(local.iter_1268.code_ptr >= length(var.code), true) ? local.iter_1268 : {
    output = (local.code_1269[0] == "."
      ? "${local.iter_1268.output}${join("", [for _ in range(local.code_1269[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1268.tape[local.iter_1268.tape_ptr]))])}"
      : local.iter_1268.output)
    
    tape = (
      local.code_1269[0] == "+"
        ? [for i, b in local.iter_1268.tape : (i == local.iter_1268.tape_ptr ? (b + local.code_1269[1]) % 256 : b)] :
      local.code_1269[0] == "-"
        ? [for i, b in local.iter_1268.tape : (i == local.iter_1268.tape_ptr ? (b - local.code_1269[1] + 256) % 256 : b)] :
      local.code_1269[0] == ","
        ? [for i, b in local.iter_1268.tape : (i == local.iter_1268.tape_ptr ? local.ascii_lookup[substr(local.input_1269, 0, 1)] : b)]
        : local.iter_1268.tape)

    tape_ptr = (
      local.code_1269[0] == "<"
        ? local.iter_1268.tape_ptr - local.code_1269[1] :
      local.code_1269[0] == ">"
        ? local.iter_1268.tape_ptr + local.code_1269[1]
        : local.iter_1268.tape_ptr)

    code_ptr = 2 + (
      local.code_1269[0] == "["
        ? local.iter_1268.tape[local.iter_1268.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1268.code_ptr)] : local.iter_1268.code_ptr :
      local.code_1269[0] == "]"
        ? local.iter_1268.tape[local.iter_1268.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1268.code_ptr)] : local.iter_1268.code_ptr
        : local.iter_1268.code_ptr)

    steps_taken = 1 + local.iter_1268.steps_taken
  }
}

locals {
  code_1270 = (try(local.iter_1269.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1269.code_ptr, local.iter_1269.code_ptr + 2)
    : [null])

  input_1270 = (local.code_1270[0] == ","
    ? substr(local.input_1269, local.code_1270[1], -1)
    : local.input_1269)

  iter_1270 = try(local.iter_1269.code_ptr >= length(var.code), true) ? local.iter_1269 : {
    output = (local.code_1270[0] == "."
      ? "${local.iter_1269.output}${join("", [for _ in range(local.code_1270[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1269.tape[local.iter_1269.tape_ptr]))])}"
      : local.iter_1269.output)
    
    tape = (
      local.code_1270[0] == "+"
        ? [for i, b in local.iter_1269.tape : (i == local.iter_1269.tape_ptr ? (b + local.code_1270[1]) % 256 : b)] :
      local.code_1270[0] == "-"
        ? [for i, b in local.iter_1269.tape : (i == local.iter_1269.tape_ptr ? (b - local.code_1270[1] + 256) % 256 : b)] :
      local.code_1270[0] == ","
        ? [for i, b in local.iter_1269.tape : (i == local.iter_1269.tape_ptr ? local.ascii_lookup[substr(local.input_1270, 0, 1)] : b)]
        : local.iter_1269.tape)

    tape_ptr = (
      local.code_1270[0] == "<"
        ? local.iter_1269.tape_ptr - local.code_1270[1] :
      local.code_1270[0] == ">"
        ? local.iter_1269.tape_ptr + local.code_1270[1]
        : local.iter_1269.tape_ptr)

    code_ptr = 2 + (
      local.code_1270[0] == "["
        ? local.iter_1269.tape[local.iter_1269.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1269.code_ptr)] : local.iter_1269.code_ptr :
      local.code_1270[0] == "]"
        ? local.iter_1269.tape[local.iter_1269.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1269.code_ptr)] : local.iter_1269.code_ptr
        : local.iter_1269.code_ptr)

    steps_taken = 1 + local.iter_1269.steps_taken
  }
}

locals {
  code_1271 = (try(local.iter_1270.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1270.code_ptr, local.iter_1270.code_ptr + 2)
    : [null])

  input_1271 = (local.code_1271[0] == ","
    ? substr(local.input_1270, local.code_1271[1], -1)
    : local.input_1270)

  iter_1271 = try(local.iter_1270.code_ptr >= length(var.code), true) ? local.iter_1270 : {
    output = (local.code_1271[0] == "."
      ? "${local.iter_1270.output}${join("", [for _ in range(local.code_1271[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1270.tape[local.iter_1270.tape_ptr]))])}"
      : local.iter_1270.output)
    
    tape = (
      local.code_1271[0] == "+"
        ? [for i, b in local.iter_1270.tape : (i == local.iter_1270.tape_ptr ? (b + local.code_1271[1]) % 256 : b)] :
      local.code_1271[0] == "-"
        ? [for i, b in local.iter_1270.tape : (i == local.iter_1270.tape_ptr ? (b - local.code_1271[1] + 256) % 256 : b)] :
      local.code_1271[0] == ","
        ? [for i, b in local.iter_1270.tape : (i == local.iter_1270.tape_ptr ? local.ascii_lookup[substr(local.input_1271, 0, 1)] : b)]
        : local.iter_1270.tape)

    tape_ptr = (
      local.code_1271[0] == "<"
        ? local.iter_1270.tape_ptr - local.code_1271[1] :
      local.code_1271[0] == ">"
        ? local.iter_1270.tape_ptr + local.code_1271[1]
        : local.iter_1270.tape_ptr)

    code_ptr = 2 + (
      local.code_1271[0] == "["
        ? local.iter_1270.tape[local.iter_1270.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1270.code_ptr)] : local.iter_1270.code_ptr :
      local.code_1271[0] == "]"
        ? local.iter_1270.tape[local.iter_1270.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1270.code_ptr)] : local.iter_1270.code_ptr
        : local.iter_1270.code_ptr)

    steps_taken = 1 + local.iter_1270.steps_taken
  }
}

locals {
  code_1272 = (try(local.iter_1271.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1271.code_ptr, local.iter_1271.code_ptr + 2)
    : [null])

  input_1272 = (local.code_1272[0] == ","
    ? substr(local.input_1271, local.code_1272[1], -1)
    : local.input_1271)

  iter_1272 = try(local.iter_1271.code_ptr >= length(var.code), true) ? local.iter_1271 : {
    output = (local.code_1272[0] == "."
      ? "${local.iter_1271.output}${join("", [for _ in range(local.code_1272[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1271.tape[local.iter_1271.tape_ptr]))])}"
      : local.iter_1271.output)
    
    tape = (
      local.code_1272[0] == "+"
        ? [for i, b in local.iter_1271.tape : (i == local.iter_1271.tape_ptr ? (b + local.code_1272[1]) % 256 : b)] :
      local.code_1272[0] == "-"
        ? [for i, b in local.iter_1271.tape : (i == local.iter_1271.tape_ptr ? (b - local.code_1272[1] + 256) % 256 : b)] :
      local.code_1272[0] == ","
        ? [for i, b in local.iter_1271.tape : (i == local.iter_1271.tape_ptr ? local.ascii_lookup[substr(local.input_1272, 0, 1)] : b)]
        : local.iter_1271.tape)

    tape_ptr = (
      local.code_1272[0] == "<"
        ? local.iter_1271.tape_ptr - local.code_1272[1] :
      local.code_1272[0] == ">"
        ? local.iter_1271.tape_ptr + local.code_1272[1]
        : local.iter_1271.tape_ptr)

    code_ptr = 2 + (
      local.code_1272[0] == "["
        ? local.iter_1271.tape[local.iter_1271.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1271.code_ptr)] : local.iter_1271.code_ptr :
      local.code_1272[0] == "]"
        ? local.iter_1271.tape[local.iter_1271.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1271.code_ptr)] : local.iter_1271.code_ptr
        : local.iter_1271.code_ptr)

    steps_taken = 1 + local.iter_1271.steps_taken
  }
}

locals {
  code_1273 = (try(local.iter_1272.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1272.code_ptr, local.iter_1272.code_ptr + 2)
    : [null])

  input_1273 = (local.code_1273[0] == ","
    ? substr(local.input_1272, local.code_1273[1], -1)
    : local.input_1272)

  iter_1273 = try(local.iter_1272.code_ptr >= length(var.code), true) ? local.iter_1272 : {
    output = (local.code_1273[0] == "."
      ? "${local.iter_1272.output}${join("", [for _ in range(local.code_1273[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1272.tape[local.iter_1272.tape_ptr]))])}"
      : local.iter_1272.output)
    
    tape = (
      local.code_1273[0] == "+"
        ? [for i, b in local.iter_1272.tape : (i == local.iter_1272.tape_ptr ? (b + local.code_1273[1]) % 256 : b)] :
      local.code_1273[0] == "-"
        ? [for i, b in local.iter_1272.tape : (i == local.iter_1272.tape_ptr ? (b - local.code_1273[1] + 256) % 256 : b)] :
      local.code_1273[0] == ","
        ? [for i, b in local.iter_1272.tape : (i == local.iter_1272.tape_ptr ? local.ascii_lookup[substr(local.input_1273, 0, 1)] : b)]
        : local.iter_1272.tape)

    tape_ptr = (
      local.code_1273[0] == "<"
        ? local.iter_1272.tape_ptr - local.code_1273[1] :
      local.code_1273[0] == ">"
        ? local.iter_1272.tape_ptr + local.code_1273[1]
        : local.iter_1272.tape_ptr)

    code_ptr = 2 + (
      local.code_1273[0] == "["
        ? local.iter_1272.tape[local.iter_1272.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1272.code_ptr)] : local.iter_1272.code_ptr :
      local.code_1273[0] == "]"
        ? local.iter_1272.tape[local.iter_1272.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1272.code_ptr)] : local.iter_1272.code_ptr
        : local.iter_1272.code_ptr)

    steps_taken = 1 + local.iter_1272.steps_taken
  }
}

locals {
  code_1274 = (try(local.iter_1273.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1273.code_ptr, local.iter_1273.code_ptr + 2)
    : [null])

  input_1274 = (local.code_1274[0] == ","
    ? substr(local.input_1273, local.code_1274[1], -1)
    : local.input_1273)

  iter_1274 = try(local.iter_1273.code_ptr >= length(var.code), true) ? local.iter_1273 : {
    output = (local.code_1274[0] == "."
      ? "${local.iter_1273.output}${join("", [for _ in range(local.code_1274[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1273.tape[local.iter_1273.tape_ptr]))])}"
      : local.iter_1273.output)
    
    tape = (
      local.code_1274[0] == "+"
        ? [for i, b in local.iter_1273.tape : (i == local.iter_1273.tape_ptr ? (b + local.code_1274[1]) % 256 : b)] :
      local.code_1274[0] == "-"
        ? [for i, b in local.iter_1273.tape : (i == local.iter_1273.tape_ptr ? (b - local.code_1274[1] + 256) % 256 : b)] :
      local.code_1274[0] == ","
        ? [for i, b in local.iter_1273.tape : (i == local.iter_1273.tape_ptr ? local.ascii_lookup[substr(local.input_1274, 0, 1)] : b)]
        : local.iter_1273.tape)

    tape_ptr = (
      local.code_1274[0] == "<"
        ? local.iter_1273.tape_ptr - local.code_1274[1] :
      local.code_1274[0] == ">"
        ? local.iter_1273.tape_ptr + local.code_1274[1]
        : local.iter_1273.tape_ptr)

    code_ptr = 2 + (
      local.code_1274[0] == "["
        ? local.iter_1273.tape[local.iter_1273.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1273.code_ptr)] : local.iter_1273.code_ptr :
      local.code_1274[0] == "]"
        ? local.iter_1273.tape[local.iter_1273.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1273.code_ptr)] : local.iter_1273.code_ptr
        : local.iter_1273.code_ptr)

    steps_taken = 1 + local.iter_1273.steps_taken
  }
}

locals {
  code_1275 = (try(local.iter_1274.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1274.code_ptr, local.iter_1274.code_ptr + 2)
    : [null])

  input_1275 = (local.code_1275[0] == ","
    ? substr(local.input_1274, local.code_1275[1], -1)
    : local.input_1274)

  iter_1275 = try(local.iter_1274.code_ptr >= length(var.code), true) ? local.iter_1274 : {
    output = (local.code_1275[0] == "."
      ? "${local.iter_1274.output}${join("", [for _ in range(local.code_1275[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1274.tape[local.iter_1274.tape_ptr]))])}"
      : local.iter_1274.output)
    
    tape = (
      local.code_1275[0] == "+"
        ? [for i, b in local.iter_1274.tape : (i == local.iter_1274.tape_ptr ? (b + local.code_1275[1]) % 256 : b)] :
      local.code_1275[0] == "-"
        ? [for i, b in local.iter_1274.tape : (i == local.iter_1274.tape_ptr ? (b - local.code_1275[1] + 256) % 256 : b)] :
      local.code_1275[0] == ","
        ? [for i, b in local.iter_1274.tape : (i == local.iter_1274.tape_ptr ? local.ascii_lookup[substr(local.input_1275, 0, 1)] : b)]
        : local.iter_1274.tape)

    tape_ptr = (
      local.code_1275[0] == "<"
        ? local.iter_1274.tape_ptr - local.code_1275[1] :
      local.code_1275[0] == ">"
        ? local.iter_1274.tape_ptr + local.code_1275[1]
        : local.iter_1274.tape_ptr)

    code_ptr = 2 + (
      local.code_1275[0] == "["
        ? local.iter_1274.tape[local.iter_1274.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1274.code_ptr)] : local.iter_1274.code_ptr :
      local.code_1275[0] == "]"
        ? local.iter_1274.tape[local.iter_1274.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1274.code_ptr)] : local.iter_1274.code_ptr
        : local.iter_1274.code_ptr)

    steps_taken = 1 + local.iter_1274.steps_taken
  }
}

locals {
  code_1276 = (try(local.iter_1275.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1275.code_ptr, local.iter_1275.code_ptr + 2)
    : [null])

  input_1276 = (local.code_1276[0] == ","
    ? substr(local.input_1275, local.code_1276[1], -1)
    : local.input_1275)

  iter_1276 = try(local.iter_1275.code_ptr >= length(var.code), true) ? local.iter_1275 : {
    output = (local.code_1276[0] == "."
      ? "${local.iter_1275.output}${join("", [for _ in range(local.code_1276[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1275.tape[local.iter_1275.tape_ptr]))])}"
      : local.iter_1275.output)
    
    tape = (
      local.code_1276[0] == "+"
        ? [for i, b in local.iter_1275.tape : (i == local.iter_1275.tape_ptr ? (b + local.code_1276[1]) % 256 : b)] :
      local.code_1276[0] == "-"
        ? [for i, b in local.iter_1275.tape : (i == local.iter_1275.tape_ptr ? (b - local.code_1276[1] + 256) % 256 : b)] :
      local.code_1276[0] == ","
        ? [for i, b in local.iter_1275.tape : (i == local.iter_1275.tape_ptr ? local.ascii_lookup[substr(local.input_1276, 0, 1)] : b)]
        : local.iter_1275.tape)

    tape_ptr = (
      local.code_1276[0] == "<"
        ? local.iter_1275.tape_ptr - local.code_1276[1] :
      local.code_1276[0] == ">"
        ? local.iter_1275.tape_ptr + local.code_1276[1]
        : local.iter_1275.tape_ptr)

    code_ptr = 2 + (
      local.code_1276[0] == "["
        ? local.iter_1275.tape[local.iter_1275.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1275.code_ptr)] : local.iter_1275.code_ptr :
      local.code_1276[0] == "]"
        ? local.iter_1275.tape[local.iter_1275.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1275.code_ptr)] : local.iter_1275.code_ptr
        : local.iter_1275.code_ptr)

    steps_taken = 1 + local.iter_1275.steps_taken
  }
}

locals {
  code_1277 = (try(local.iter_1276.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1276.code_ptr, local.iter_1276.code_ptr + 2)
    : [null])

  input_1277 = (local.code_1277[0] == ","
    ? substr(local.input_1276, local.code_1277[1], -1)
    : local.input_1276)

  iter_1277 = try(local.iter_1276.code_ptr >= length(var.code), true) ? local.iter_1276 : {
    output = (local.code_1277[0] == "."
      ? "${local.iter_1276.output}${join("", [for _ in range(local.code_1277[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1276.tape[local.iter_1276.tape_ptr]))])}"
      : local.iter_1276.output)
    
    tape = (
      local.code_1277[0] == "+"
        ? [for i, b in local.iter_1276.tape : (i == local.iter_1276.tape_ptr ? (b + local.code_1277[1]) % 256 : b)] :
      local.code_1277[0] == "-"
        ? [for i, b in local.iter_1276.tape : (i == local.iter_1276.tape_ptr ? (b - local.code_1277[1] + 256) % 256 : b)] :
      local.code_1277[0] == ","
        ? [for i, b in local.iter_1276.tape : (i == local.iter_1276.tape_ptr ? local.ascii_lookup[substr(local.input_1277, 0, 1)] : b)]
        : local.iter_1276.tape)

    tape_ptr = (
      local.code_1277[0] == "<"
        ? local.iter_1276.tape_ptr - local.code_1277[1] :
      local.code_1277[0] == ">"
        ? local.iter_1276.tape_ptr + local.code_1277[1]
        : local.iter_1276.tape_ptr)

    code_ptr = 2 + (
      local.code_1277[0] == "["
        ? local.iter_1276.tape[local.iter_1276.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1276.code_ptr)] : local.iter_1276.code_ptr :
      local.code_1277[0] == "]"
        ? local.iter_1276.tape[local.iter_1276.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1276.code_ptr)] : local.iter_1276.code_ptr
        : local.iter_1276.code_ptr)

    steps_taken = 1 + local.iter_1276.steps_taken
  }
}

locals {
  code_1278 = (try(local.iter_1277.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1277.code_ptr, local.iter_1277.code_ptr + 2)
    : [null])

  input_1278 = (local.code_1278[0] == ","
    ? substr(local.input_1277, local.code_1278[1], -1)
    : local.input_1277)

  iter_1278 = try(local.iter_1277.code_ptr >= length(var.code), true) ? local.iter_1277 : {
    output = (local.code_1278[0] == "."
      ? "${local.iter_1277.output}${join("", [for _ in range(local.code_1278[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1277.tape[local.iter_1277.tape_ptr]))])}"
      : local.iter_1277.output)
    
    tape = (
      local.code_1278[0] == "+"
        ? [for i, b in local.iter_1277.tape : (i == local.iter_1277.tape_ptr ? (b + local.code_1278[1]) % 256 : b)] :
      local.code_1278[0] == "-"
        ? [for i, b in local.iter_1277.tape : (i == local.iter_1277.tape_ptr ? (b - local.code_1278[1] + 256) % 256 : b)] :
      local.code_1278[0] == ","
        ? [for i, b in local.iter_1277.tape : (i == local.iter_1277.tape_ptr ? local.ascii_lookup[substr(local.input_1278, 0, 1)] : b)]
        : local.iter_1277.tape)

    tape_ptr = (
      local.code_1278[0] == "<"
        ? local.iter_1277.tape_ptr - local.code_1278[1] :
      local.code_1278[0] == ">"
        ? local.iter_1277.tape_ptr + local.code_1278[1]
        : local.iter_1277.tape_ptr)

    code_ptr = 2 + (
      local.code_1278[0] == "["
        ? local.iter_1277.tape[local.iter_1277.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1277.code_ptr)] : local.iter_1277.code_ptr :
      local.code_1278[0] == "]"
        ? local.iter_1277.tape[local.iter_1277.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1277.code_ptr)] : local.iter_1277.code_ptr
        : local.iter_1277.code_ptr)

    steps_taken = 1 + local.iter_1277.steps_taken
  }
}

locals {
  code_1279 = (try(local.iter_1278.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1278.code_ptr, local.iter_1278.code_ptr + 2)
    : [null])

  input_1279 = (local.code_1279[0] == ","
    ? substr(local.input_1278, local.code_1279[1], -1)
    : local.input_1278)

  iter_1279 = try(local.iter_1278.code_ptr >= length(var.code), true) ? local.iter_1278 : {
    output = (local.code_1279[0] == "."
      ? "${local.iter_1278.output}${join("", [for _ in range(local.code_1279[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1278.tape[local.iter_1278.tape_ptr]))])}"
      : local.iter_1278.output)
    
    tape = (
      local.code_1279[0] == "+"
        ? [for i, b in local.iter_1278.tape : (i == local.iter_1278.tape_ptr ? (b + local.code_1279[1]) % 256 : b)] :
      local.code_1279[0] == "-"
        ? [for i, b in local.iter_1278.tape : (i == local.iter_1278.tape_ptr ? (b - local.code_1279[1] + 256) % 256 : b)] :
      local.code_1279[0] == ","
        ? [for i, b in local.iter_1278.tape : (i == local.iter_1278.tape_ptr ? local.ascii_lookup[substr(local.input_1279, 0, 1)] : b)]
        : local.iter_1278.tape)

    tape_ptr = (
      local.code_1279[0] == "<"
        ? local.iter_1278.tape_ptr - local.code_1279[1] :
      local.code_1279[0] == ">"
        ? local.iter_1278.tape_ptr + local.code_1279[1]
        : local.iter_1278.tape_ptr)

    code_ptr = 2 + (
      local.code_1279[0] == "["
        ? local.iter_1278.tape[local.iter_1278.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1278.code_ptr)] : local.iter_1278.code_ptr :
      local.code_1279[0] == "]"
        ? local.iter_1278.tape[local.iter_1278.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1278.code_ptr)] : local.iter_1278.code_ptr
        : local.iter_1278.code_ptr)

    steps_taken = 1 + local.iter_1278.steps_taken
  }
}

locals {
  code_1280 = (try(local.iter_1279.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1279.code_ptr, local.iter_1279.code_ptr + 2)
    : [null])

  input_1280 = (local.code_1280[0] == ","
    ? substr(local.input_1279, local.code_1280[1], -1)
    : local.input_1279)

  iter_1280 = try(local.iter_1279.code_ptr >= length(var.code), true) ? local.iter_1279 : {
    output = (local.code_1280[0] == "."
      ? "${local.iter_1279.output}${join("", [for _ in range(local.code_1280[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1279.tape[local.iter_1279.tape_ptr]))])}"
      : local.iter_1279.output)
    
    tape = (
      local.code_1280[0] == "+"
        ? [for i, b in local.iter_1279.tape : (i == local.iter_1279.tape_ptr ? (b + local.code_1280[1]) % 256 : b)] :
      local.code_1280[0] == "-"
        ? [for i, b in local.iter_1279.tape : (i == local.iter_1279.tape_ptr ? (b - local.code_1280[1] + 256) % 256 : b)] :
      local.code_1280[0] == ","
        ? [for i, b in local.iter_1279.tape : (i == local.iter_1279.tape_ptr ? local.ascii_lookup[substr(local.input_1280, 0, 1)] : b)]
        : local.iter_1279.tape)

    tape_ptr = (
      local.code_1280[0] == "<"
        ? local.iter_1279.tape_ptr - local.code_1280[1] :
      local.code_1280[0] == ">"
        ? local.iter_1279.tape_ptr + local.code_1280[1]
        : local.iter_1279.tape_ptr)

    code_ptr = 2 + (
      local.code_1280[0] == "["
        ? local.iter_1279.tape[local.iter_1279.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1279.code_ptr)] : local.iter_1279.code_ptr :
      local.code_1280[0] == "]"
        ? local.iter_1279.tape[local.iter_1279.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1279.code_ptr)] : local.iter_1279.code_ptr
        : local.iter_1279.code_ptr)

    steps_taken = 1 + local.iter_1279.steps_taken
  }
}

locals {
  code_1281 = (try(local.iter_1280.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1280.code_ptr, local.iter_1280.code_ptr + 2)
    : [null])

  input_1281 = (local.code_1281[0] == ","
    ? substr(local.input_1280, local.code_1281[1], -1)
    : local.input_1280)

  iter_1281 = try(local.iter_1280.code_ptr >= length(var.code), true) ? local.iter_1280 : {
    output = (local.code_1281[0] == "."
      ? "${local.iter_1280.output}${join("", [for _ in range(local.code_1281[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1280.tape[local.iter_1280.tape_ptr]))])}"
      : local.iter_1280.output)
    
    tape = (
      local.code_1281[0] == "+"
        ? [for i, b in local.iter_1280.tape : (i == local.iter_1280.tape_ptr ? (b + local.code_1281[1]) % 256 : b)] :
      local.code_1281[0] == "-"
        ? [for i, b in local.iter_1280.tape : (i == local.iter_1280.tape_ptr ? (b - local.code_1281[1] + 256) % 256 : b)] :
      local.code_1281[0] == ","
        ? [for i, b in local.iter_1280.tape : (i == local.iter_1280.tape_ptr ? local.ascii_lookup[substr(local.input_1281, 0, 1)] : b)]
        : local.iter_1280.tape)

    tape_ptr = (
      local.code_1281[0] == "<"
        ? local.iter_1280.tape_ptr - local.code_1281[1] :
      local.code_1281[0] == ">"
        ? local.iter_1280.tape_ptr + local.code_1281[1]
        : local.iter_1280.tape_ptr)

    code_ptr = 2 + (
      local.code_1281[0] == "["
        ? local.iter_1280.tape[local.iter_1280.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1280.code_ptr)] : local.iter_1280.code_ptr :
      local.code_1281[0] == "]"
        ? local.iter_1280.tape[local.iter_1280.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1280.code_ptr)] : local.iter_1280.code_ptr
        : local.iter_1280.code_ptr)

    steps_taken = 1 + local.iter_1280.steps_taken
  }
}

locals {
  code_1282 = (try(local.iter_1281.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1281.code_ptr, local.iter_1281.code_ptr + 2)
    : [null])

  input_1282 = (local.code_1282[0] == ","
    ? substr(local.input_1281, local.code_1282[1], -1)
    : local.input_1281)

  iter_1282 = try(local.iter_1281.code_ptr >= length(var.code), true) ? local.iter_1281 : {
    output = (local.code_1282[0] == "."
      ? "${local.iter_1281.output}${join("", [for _ in range(local.code_1282[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1281.tape[local.iter_1281.tape_ptr]))])}"
      : local.iter_1281.output)
    
    tape = (
      local.code_1282[0] == "+"
        ? [for i, b in local.iter_1281.tape : (i == local.iter_1281.tape_ptr ? (b + local.code_1282[1]) % 256 : b)] :
      local.code_1282[0] == "-"
        ? [for i, b in local.iter_1281.tape : (i == local.iter_1281.tape_ptr ? (b - local.code_1282[1] + 256) % 256 : b)] :
      local.code_1282[0] == ","
        ? [for i, b in local.iter_1281.tape : (i == local.iter_1281.tape_ptr ? local.ascii_lookup[substr(local.input_1282, 0, 1)] : b)]
        : local.iter_1281.tape)

    tape_ptr = (
      local.code_1282[0] == "<"
        ? local.iter_1281.tape_ptr - local.code_1282[1] :
      local.code_1282[0] == ">"
        ? local.iter_1281.tape_ptr + local.code_1282[1]
        : local.iter_1281.tape_ptr)

    code_ptr = 2 + (
      local.code_1282[0] == "["
        ? local.iter_1281.tape[local.iter_1281.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1281.code_ptr)] : local.iter_1281.code_ptr :
      local.code_1282[0] == "]"
        ? local.iter_1281.tape[local.iter_1281.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1281.code_ptr)] : local.iter_1281.code_ptr
        : local.iter_1281.code_ptr)

    steps_taken = 1 + local.iter_1281.steps_taken
  }
}

locals {
  code_1283 = (try(local.iter_1282.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1282.code_ptr, local.iter_1282.code_ptr + 2)
    : [null])

  input_1283 = (local.code_1283[0] == ","
    ? substr(local.input_1282, local.code_1283[1], -1)
    : local.input_1282)

  iter_1283 = try(local.iter_1282.code_ptr >= length(var.code), true) ? local.iter_1282 : {
    output = (local.code_1283[0] == "."
      ? "${local.iter_1282.output}${join("", [for _ in range(local.code_1283[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1282.tape[local.iter_1282.tape_ptr]))])}"
      : local.iter_1282.output)
    
    tape = (
      local.code_1283[0] == "+"
        ? [for i, b in local.iter_1282.tape : (i == local.iter_1282.tape_ptr ? (b + local.code_1283[1]) % 256 : b)] :
      local.code_1283[0] == "-"
        ? [for i, b in local.iter_1282.tape : (i == local.iter_1282.tape_ptr ? (b - local.code_1283[1] + 256) % 256 : b)] :
      local.code_1283[0] == ","
        ? [for i, b in local.iter_1282.tape : (i == local.iter_1282.tape_ptr ? local.ascii_lookup[substr(local.input_1283, 0, 1)] : b)]
        : local.iter_1282.tape)

    tape_ptr = (
      local.code_1283[0] == "<"
        ? local.iter_1282.tape_ptr - local.code_1283[1] :
      local.code_1283[0] == ">"
        ? local.iter_1282.tape_ptr + local.code_1283[1]
        : local.iter_1282.tape_ptr)

    code_ptr = 2 + (
      local.code_1283[0] == "["
        ? local.iter_1282.tape[local.iter_1282.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1282.code_ptr)] : local.iter_1282.code_ptr :
      local.code_1283[0] == "]"
        ? local.iter_1282.tape[local.iter_1282.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1282.code_ptr)] : local.iter_1282.code_ptr
        : local.iter_1282.code_ptr)

    steps_taken = 1 + local.iter_1282.steps_taken
  }
}

locals {
  code_1284 = (try(local.iter_1283.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1283.code_ptr, local.iter_1283.code_ptr + 2)
    : [null])

  input_1284 = (local.code_1284[0] == ","
    ? substr(local.input_1283, local.code_1284[1], -1)
    : local.input_1283)

  iter_1284 = try(local.iter_1283.code_ptr >= length(var.code), true) ? local.iter_1283 : {
    output = (local.code_1284[0] == "."
      ? "${local.iter_1283.output}${join("", [for _ in range(local.code_1284[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1283.tape[local.iter_1283.tape_ptr]))])}"
      : local.iter_1283.output)
    
    tape = (
      local.code_1284[0] == "+"
        ? [for i, b in local.iter_1283.tape : (i == local.iter_1283.tape_ptr ? (b + local.code_1284[1]) % 256 : b)] :
      local.code_1284[0] == "-"
        ? [for i, b in local.iter_1283.tape : (i == local.iter_1283.tape_ptr ? (b - local.code_1284[1] + 256) % 256 : b)] :
      local.code_1284[0] == ","
        ? [for i, b in local.iter_1283.tape : (i == local.iter_1283.tape_ptr ? local.ascii_lookup[substr(local.input_1284, 0, 1)] : b)]
        : local.iter_1283.tape)

    tape_ptr = (
      local.code_1284[0] == "<"
        ? local.iter_1283.tape_ptr - local.code_1284[1] :
      local.code_1284[0] == ">"
        ? local.iter_1283.tape_ptr + local.code_1284[1]
        : local.iter_1283.tape_ptr)

    code_ptr = 2 + (
      local.code_1284[0] == "["
        ? local.iter_1283.tape[local.iter_1283.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1283.code_ptr)] : local.iter_1283.code_ptr :
      local.code_1284[0] == "]"
        ? local.iter_1283.tape[local.iter_1283.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1283.code_ptr)] : local.iter_1283.code_ptr
        : local.iter_1283.code_ptr)

    steps_taken = 1 + local.iter_1283.steps_taken
  }
}

locals {
  code_1285 = (try(local.iter_1284.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1284.code_ptr, local.iter_1284.code_ptr + 2)
    : [null])

  input_1285 = (local.code_1285[0] == ","
    ? substr(local.input_1284, local.code_1285[1], -1)
    : local.input_1284)

  iter_1285 = try(local.iter_1284.code_ptr >= length(var.code), true) ? local.iter_1284 : {
    output = (local.code_1285[0] == "."
      ? "${local.iter_1284.output}${join("", [for _ in range(local.code_1285[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1284.tape[local.iter_1284.tape_ptr]))])}"
      : local.iter_1284.output)
    
    tape = (
      local.code_1285[0] == "+"
        ? [for i, b in local.iter_1284.tape : (i == local.iter_1284.tape_ptr ? (b + local.code_1285[1]) % 256 : b)] :
      local.code_1285[0] == "-"
        ? [for i, b in local.iter_1284.tape : (i == local.iter_1284.tape_ptr ? (b - local.code_1285[1] + 256) % 256 : b)] :
      local.code_1285[0] == ","
        ? [for i, b in local.iter_1284.tape : (i == local.iter_1284.tape_ptr ? local.ascii_lookup[substr(local.input_1285, 0, 1)] : b)]
        : local.iter_1284.tape)

    tape_ptr = (
      local.code_1285[0] == "<"
        ? local.iter_1284.tape_ptr - local.code_1285[1] :
      local.code_1285[0] == ">"
        ? local.iter_1284.tape_ptr + local.code_1285[1]
        : local.iter_1284.tape_ptr)

    code_ptr = 2 + (
      local.code_1285[0] == "["
        ? local.iter_1284.tape[local.iter_1284.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1284.code_ptr)] : local.iter_1284.code_ptr :
      local.code_1285[0] == "]"
        ? local.iter_1284.tape[local.iter_1284.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1284.code_ptr)] : local.iter_1284.code_ptr
        : local.iter_1284.code_ptr)

    steps_taken = 1 + local.iter_1284.steps_taken
  }
}

locals {
  code_1286 = (try(local.iter_1285.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1285.code_ptr, local.iter_1285.code_ptr + 2)
    : [null])

  input_1286 = (local.code_1286[0] == ","
    ? substr(local.input_1285, local.code_1286[1], -1)
    : local.input_1285)

  iter_1286 = try(local.iter_1285.code_ptr >= length(var.code), true) ? local.iter_1285 : {
    output = (local.code_1286[0] == "."
      ? "${local.iter_1285.output}${join("", [for _ in range(local.code_1286[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1285.tape[local.iter_1285.tape_ptr]))])}"
      : local.iter_1285.output)
    
    tape = (
      local.code_1286[0] == "+"
        ? [for i, b in local.iter_1285.tape : (i == local.iter_1285.tape_ptr ? (b + local.code_1286[1]) % 256 : b)] :
      local.code_1286[0] == "-"
        ? [for i, b in local.iter_1285.tape : (i == local.iter_1285.tape_ptr ? (b - local.code_1286[1] + 256) % 256 : b)] :
      local.code_1286[0] == ","
        ? [for i, b in local.iter_1285.tape : (i == local.iter_1285.tape_ptr ? local.ascii_lookup[substr(local.input_1286, 0, 1)] : b)]
        : local.iter_1285.tape)

    tape_ptr = (
      local.code_1286[0] == "<"
        ? local.iter_1285.tape_ptr - local.code_1286[1] :
      local.code_1286[0] == ">"
        ? local.iter_1285.tape_ptr + local.code_1286[1]
        : local.iter_1285.tape_ptr)

    code_ptr = 2 + (
      local.code_1286[0] == "["
        ? local.iter_1285.tape[local.iter_1285.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1285.code_ptr)] : local.iter_1285.code_ptr :
      local.code_1286[0] == "]"
        ? local.iter_1285.tape[local.iter_1285.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1285.code_ptr)] : local.iter_1285.code_ptr
        : local.iter_1285.code_ptr)

    steps_taken = 1 + local.iter_1285.steps_taken
  }
}

locals {
  code_1287 = (try(local.iter_1286.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1286.code_ptr, local.iter_1286.code_ptr + 2)
    : [null])

  input_1287 = (local.code_1287[0] == ","
    ? substr(local.input_1286, local.code_1287[1], -1)
    : local.input_1286)

  iter_1287 = try(local.iter_1286.code_ptr >= length(var.code), true) ? local.iter_1286 : {
    output = (local.code_1287[0] == "."
      ? "${local.iter_1286.output}${join("", [for _ in range(local.code_1287[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1286.tape[local.iter_1286.tape_ptr]))])}"
      : local.iter_1286.output)
    
    tape = (
      local.code_1287[0] == "+"
        ? [for i, b in local.iter_1286.tape : (i == local.iter_1286.tape_ptr ? (b + local.code_1287[1]) % 256 : b)] :
      local.code_1287[0] == "-"
        ? [for i, b in local.iter_1286.tape : (i == local.iter_1286.tape_ptr ? (b - local.code_1287[1] + 256) % 256 : b)] :
      local.code_1287[0] == ","
        ? [for i, b in local.iter_1286.tape : (i == local.iter_1286.tape_ptr ? local.ascii_lookup[substr(local.input_1287, 0, 1)] : b)]
        : local.iter_1286.tape)

    tape_ptr = (
      local.code_1287[0] == "<"
        ? local.iter_1286.tape_ptr - local.code_1287[1] :
      local.code_1287[0] == ">"
        ? local.iter_1286.tape_ptr + local.code_1287[1]
        : local.iter_1286.tape_ptr)

    code_ptr = 2 + (
      local.code_1287[0] == "["
        ? local.iter_1286.tape[local.iter_1286.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1286.code_ptr)] : local.iter_1286.code_ptr :
      local.code_1287[0] == "]"
        ? local.iter_1286.tape[local.iter_1286.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1286.code_ptr)] : local.iter_1286.code_ptr
        : local.iter_1286.code_ptr)

    steps_taken = 1 + local.iter_1286.steps_taken
  }
}

locals {
  code_1288 = (try(local.iter_1287.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1287.code_ptr, local.iter_1287.code_ptr + 2)
    : [null])

  input_1288 = (local.code_1288[0] == ","
    ? substr(local.input_1287, local.code_1288[1], -1)
    : local.input_1287)

  iter_1288 = try(local.iter_1287.code_ptr >= length(var.code), true) ? local.iter_1287 : {
    output = (local.code_1288[0] == "."
      ? "${local.iter_1287.output}${join("", [for _ in range(local.code_1288[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1287.tape[local.iter_1287.tape_ptr]))])}"
      : local.iter_1287.output)
    
    tape = (
      local.code_1288[0] == "+"
        ? [for i, b in local.iter_1287.tape : (i == local.iter_1287.tape_ptr ? (b + local.code_1288[1]) % 256 : b)] :
      local.code_1288[0] == "-"
        ? [for i, b in local.iter_1287.tape : (i == local.iter_1287.tape_ptr ? (b - local.code_1288[1] + 256) % 256 : b)] :
      local.code_1288[0] == ","
        ? [for i, b in local.iter_1287.tape : (i == local.iter_1287.tape_ptr ? local.ascii_lookup[substr(local.input_1288, 0, 1)] : b)]
        : local.iter_1287.tape)

    tape_ptr = (
      local.code_1288[0] == "<"
        ? local.iter_1287.tape_ptr - local.code_1288[1] :
      local.code_1288[0] == ">"
        ? local.iter_1287.tape_ptr + local.code_1288[1]
        : local.iter_1287.tape_ptr)

    code_ptr = 2 + (
      local.code_1288[0] == "["
        ? local.iter_1287.tape[local.iter_1287.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1287.code_ptr)] : local.iter_1287.code_ptr :
      local.code_1288[0] == "]"
        ? local.iter_1287.tape[local.iter_1287.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1287.code_ptr)] : local.iter_1287.code_ptr
        : local.iter_1287.code_ptr)

    steps_taken = 1 + local.iter_1287.steps_taken
  }
}

locals {
  code_1289 = (try(local.iter_1288.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1288.code_ptr, local.iter_1288.code_ptr + 2)
    : [null])

  input_1289 = (local.code_1289[0] == ","
    ? substr(local.input_1288, local.code_1289[1], -1)
    : local.input_1288)

  iter_1289 = try(local.iter_1288.code_ptr >= length(var.code), true) ? local.iter_1288 : {
    output = (local.code_1289[0] == "."
      ? "${local.iter_1288.output}${join("", [for _ in range(local.code_1289[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1288.tape[local.iter_1288.tape_ptr]))])}"
      : local.iter_1288.output)
    
    tape = (
      local.code_1289[0] == "+"
        ? [for i, b in local.iter_1288.tape : (i == local.iter_1288.tape_ptr ? (b + local.code_1289[1]) % 256 : b)] :
      local.code_1289[0] == "-"
        ? [for i, b in local.iter_1288.tape : (i == local.iter_1288.tape_ptr ? (b - local.code_1289[1] + 256) % 256 : b)] :
      local.code_1289[0] == ","
        ? [for i, b in local.iter_1288.tape : (i == local.iter_1288.tape_ptr ? local.ascii_lookup[substr(local.input_1289, 0, 1)] : b)]
        : local.iter_1288.tape)

    tape_ptr = (
      local.code_1289[0] == "<"
        ? local.iter_1288.tape_ptr - local.code_1289[1] :
      local.code_1289[0] == ">"
        ? local.iter_1288.tape_ptr + local.code_1289[1]
        : local.iter_1288.tape_ptr)

    code_ptr = 2 + (
      local.code_1289[0] == "["
        ? local.iter_1288.tape[local.iter_1288.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1288.code_ptr)] : local.iter_1288.code_ptr :
      local.code_1289[0] == "]"
        ? local.iter_1288.tape[local.iter_1288.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1288.code_ptr)] : local.iter_1288.code_ptr
        : local.iter_1288.code_ptr)

    steps_taken = 1 + local.iter_1288.steps_taken
  }
}

locals {
  code_1290 = (try(local.iter_1289.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1289.code_ptr, local.iter_1289.code_ptr + 2)
    : [null])

  input_1290 = (local.code_1290[0] == ","
    ? substr(local.input_1289, local.code_1290[1], -1)
    : local.input_1289)

  iter_1290 = try(local.iter_1289.code_ptr >= length(var.code), true) ? local.iter_1289 : {
    output = (local.code_1290[0] == "."
      ? "${local.iter_1289.output}${join("", [for _ in range(local.code_1290[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1289.tape[local.iter_1289.tape_ptr]))])}"
      : local.iter_1289.output)
    
    tape = (
      local.code_1290[0] == "+"
        ? [for i, b in local.iter_1289.tape : (i == local.iter_1289.tape_ptr ? (b + local.code_1290[1]) % 256 : b)] :
      local.code_1290[0] == "-"
        ? [for i, b in local.iter_1289.tape : (i == local.iter_1289.tape_ptr ? (b - local.code_1290[1] + 256) % 256 : b)] :
      local.code_1290[0] == ","
        ? [for i, b in local.iter_1289.tape : (i == local.iter_1289.tape_ptr ? local.ascii_lookup[substr(local.input_1290, 0, 1)] : b)]
        : local.iter_1289.tape)

    tape_ptr = (
      local.code_1290[0] == "<"
        ? local.iter_1289.tape_ptr - local.code_1290[1] :
      local.code_1290[0] == ">"
        ? local.iter_1289.tape_ptr + local.code_1290[1]
        : local.iter_1289.tape_ptr)

    code_ptr = 2 + (
      local.code_1290[0] == "["
        ? local.iter_1289.tape[local.iter_1289.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1289.code_ptr)] : local.iter_1289.code_ptr :
      local.code_1290[0] == "]"
        ? local.iter_1289.tape[local.iter_1289.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1289.code_ptr)] : local.iter_1289.code_ptr
        : local.iter_1289.code_ptr)

    steps_taken = 1 + local.iter_1289.steps_taken
  }
}

locals {
  code_1291 = (try(local.iter_1290.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1290.code_ptr, local.iter_1290.code_ptr + 2)
    : [null])

  input_1291 = (local.code_1291[0] == ","
    ? substr(local.input_1290, local.code_1291[1], -1)
    : local.input_1290)

  iter_1291 = try(local.iter_1290.code_ptr >= length(var.code), true) ? local.iter_1290 : {
    output = (local.code_1291[0] == "."
      ? "${local.iter_1290.output}${join("", [for _ in range(local.code_1291[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1290.tape[local.iter_1290.tape_ptr]))])}"
      : local.iter_1290.output)
    
    tape = (
      local.code_1291[0] == "+"
        ? [for i, b in local.iter_1290.tape : (i == local.iter_1290.tape_ptr ? (b + local.code_1291[1]) % 256 : b)] :
      local.code_1291[0] == "-"
        ? [for i, b in local.iter_1290.tape : (i == local.iter_1290.tape_ptr ? (b - local.code_1291[1] + 256) % 256 : b)] :
      local.code_1291[0] == ","
        ? [for i, b in local.iter_1290.tape : (i == local.iter_1290.tape_ptr ? local.ascii_lookup[substr(local.input_1291, 0, 1)] : b)]
        : local.iter_1290.tape)

    tape_ptr = (
      local.code_1291[0] == "<"
        ? local.iter_1290.tape_ptr - local.code_1291[1] :
      local.code_1291[0] == ">"
        ? local.iter_1290.tape_ptr + local.code_1291[1]
        : local.iter_1290.tape_ptr)

    code_ptr = 2 + (
      local.code_1291[0] == "["
        ? local.iter_1290.tape[local.iter_1290.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1290.code_ptr)] : local.iter_1290.code_ptr :
      local.code_1291[0] == "]"
        ? local.iter_1290.tape[local.iter_1290.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1290.code_ptr)] : local.iter_1290.code_ptr
        : local.iter_1290.code_ptr)

    steps_taken = 1 + local.iter_1290.steps_taken
  }
}

locals {
  code_1292 = (try(local.iter_1291.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1291.code_ptr, local.iter_1291.code_ptr + 2)
    : [null])

  input_1292 = (local.code_1292[0] == ","
    ? substr(local.input_1291, local.code_1292[1], -1)
    : local.input_1291)

  iter_1292 = try(local.iter_1291.code_ptr >= length(var.code), true) ? local.iter_1291 : {
    output = (local.code_1292[0] == "."
      ? "${local.iter_1291.output}${join("", [for _ in range(local.code_1292[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1291.tape[local.iter_1291.tape_ptr]))])}"
      : local.iter_1291.output)
    
    tape = (
      local.code_1292[0] == "+"
        ? [for i, b in local.iter_1291.tape : (i == local.iter_1291.tape_ptr ? (b + local.code_1292[1]) % 256 : b)] :
      local.code_1292[0] == "-"
        ? [for i, b in local.iter_1291.tape : (i == local.iter_1291.tape_ptr ? (b - local.code_1292[1] + 256) % 256 : b)] :
      local.code_1292[0] == ","
        ? [for i, b in local.iter_1291.tape : (i == local.iter_1291.tape_ptr ? local.ascii_lookup[substr(local.input_1292, 0, 1)] : b)]
        : local.iter_1291.tape)

    tape_ptr = (
      local.code_1292[0] == "<"
        ? local.iter_1291.tape_ptr - local.code_1292[1] :
      local.code_1292[0] == ">"
        ? local.iter_1291.tape_ptr + local.code_1292[1]
        : local.iter_1291.tape_ptr)

    code_ptr = 2 + (
      local.code_1292[0] == "["
        ? local.iter_1291.tape[local.iter_1291.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1291.code_ptr)] : local.iter_1291.code_ptr :
      local.code_1292[0] == "]"
        ? local.iter_1291.tape[local.iter_1291.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1291.code_ptr)] : local.iter_1291.code_ptr
        : local.iter_1291.code_ptr)

    steps_taken = 1 + local.iter_1291.steps_taken
  }
}

locals {
  code_1293 = (try(local.iter_1292.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1292.code_ptr, local.iter_1292.code_ptr + 2)
    : [null])

  input_1293 = (local.code_1293[0] == ","
    ? substr(local.input_1292, local.code_1293[1], -1)
    : local.input_1292)

  iter_1293 = try(local.iter_1292.code_ptr >= length(var.code), true) ? local.iter_1292 : {
    output = (local.code_1293[0] == "."
      ? "${local.iter_1292.output}${join("", [for _ in range(local.code_1293[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1292.tape[local.iter_1292.tape_ptr]))])}"
      : local.iter_1292.output)
    
    tape = (
      local.code_1293[0] == "+"
        ? [for i, b in local.iter_1292.tape : (i == local.iter_1292.tape_ptr ? (b + local.code_1293[1]) % 256 : b)] :
      local.code_1293[0] == "-"
        ? [for i, b in local.iter_1292.tape : (i == local.iter_1292.tape_ptr ? (b - local.code_1293[1] + 256) % 256 : b)] :
      local.code_1293[0] == ","
        ? [for i, b in local.iter_1292.tape : (i == local.iter_1292.tape_ptr ? local.ascii_lookup[substr(local.input_1293, 0, 1)] : b)]
        : local.iter_1292.tape)

    tape_ptr = (
      local.code_1293[0] == "<"
        ? local.iter_1292.tape_ptr - local.code_1293[1] :
      local.code_1293[0] == ">"
        ? local.iter_1292.tape_ptr + local.code_1293[1]
        : local.iter_1292.tape_ptr)

    code_ptr = 2 + (
      local.code_1293[0] == "["
        ? local.iter_1292.tape[local.iter_1292.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1292.code_ptr)] : local.iter_1292.code_ptr :
      local.code_1293[0] == "]"
        ? local.iter_1292.tape[local.iter_1292.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1292.code_ptr)] : local.iter_1292.code_ptr
        : local.iter_1292.code_ptr)

    steps_taken = 1 + local.iter_1292.steps_taken
  }
}

locals {
  code_1294 = (try(local.iter_1293.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1293.code_ptr, local.iter_1293.code_ptr + 2)
    : [null])

  input_1294 = (local.code_1294[0] == ","
    ? substr(local.input_1293, local.code_1294[1], -1)
    : local.input_1293)

  iter_1294 = try(local.iter_1293.code_ptr >= length(var.code), true) ? local.iter_1293 : {
    output = (local.code_1294[0] == "."
      ? "${local.iter_1293.output}${join("", [for _ in range(local.code_1294[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1293.tape[local.iter_1293.tape_ptr]))])}"
      : local.iter_1293.output)
    
    tape = (
      local.code_1294[0] == "+"
        ? [for i, b in local.iter_1293.tape : (i == local.iter_1293.tape_ptr ? (b + local.code_1294[1]) % 256 : b)] :
      local.code_1294[0] == "-"
        ? [for i, b in local.iter_1293.tape : (i == local.iter_1293.tape_ptr ? (b - local.code_1294[1] + 256) % 256 : b)] :
      local.code_1294[0] == ","
        ? [for i, b in local.iter_1293.tape : (i == local.iter_1293.tape_ptr ? local.ascii_lookup[substr(local.input_1294, 0, 1)] : b)]
        : local.iter_1293.tape)

    tape_ptr = (
      local.code_1294[0] == "<"
        ? local.iter_1293.tape_ptr - local.code_1294[1] :
      local.code_1294[0] == ">"
        ? local.iter_1293.tape_ptr + local.code_1294[1]
        : local.iter_1293.tape_ptr)

    code_ptr = 2 + (
      local.code_1294[0] == "["
        ? local.iter_1293.tape[local.iter_1293.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1293.code_ptr)] : local.iter_1293.code_ptr :
      local.code_1294[0] == "]"
        ? local.iter_1293.tape[local.iter_1293.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1293.code_ptr)] : local.iter_1293.code_ptr
        : local.iter_1293.code_ptr)

    steps_taken = 1 + local.iter_1293.steps_taken
  }
}

locals {
  code_1295 = (try(local.iter_1294.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1294.code_ptr, local.iter_1294.code_ptr + 2)
    : [null])

  input_1295 = (local.code_1295[0] == ","
    ? substr(local.input_1294, local.code_1295[1], -1)
    : local.input_1294)

  iter_1295 = try(local.iter_1294.code_ptr >= length(var.code), true) ? local.iter_1294 : {
    output = (local.code_1295[0] == "."
      ? "${local.iter_1294.output}${join("", [for _ in range(local.code_1295[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1294.tape[local.iter_1294.tape_ptr]))])}"
      : local.iter_1294.output)
    
    tape = (
      local.code_1295[0] == "+"
        ? [for i, b in local.iter_1294.tape : (i == local.iter_1294.tape_ptr ? (b + local.code_1295[1]) % 256 : b)] :
      local.code_1295[0] == "-"
        ? [for i, b in local.iter_1294.tape : (i == local.iter_1294.tape_ptr ? (b - local.code_1295[1] + 256) % 256 : b)] :
      local.code_1295[0] == ","
        ? [for i, b in local.iter_1294.tape : (i == local.iter_1294.tape_ptr ? local.ascii_lookup[substr(local.input_1295, 0, 1)] : b)]
        : local.iter_1294.tape)

    tape_ptr = (
      local.code_1295[0] == "<"
        ? local.iter_1294.tape_ptr - local.code_1295[1] :
      local.code_1295[0] == ">"
        ? local.iter_1294.tape_ptr + local.code_1295[1]
        : local.iter_1294.tape_ptr)

    code_ptr = 2 + (
      local.code_1295[0] == "["
        ? local.iter_1294.tape[local.iter_1294.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1294.code_ptr)] : local.iter_1294.code_ptr :
      local.code_1295[0] == "]"
        ? local.iter_1294.tape[local.iter_1294.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1294.code_ptr)] : local.iter_1294.code_ptr
        : local.iter_1294.code_ptr)

    steps_taken = 1 + local.iter_1294.steps_taken
  }
}

locals {
  code_1296 = (try(local.iter_1295.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1295.code_ptr, local.iter_1295.code_ptr + 2)
    : [null])

  input_1296 = (local.code_1296[0] == ","
    ? substr(local.input_1295, local.code_1296[1], -1)
    : local.input_1295)

  iter_1296 = try(local.iter_1295.code_ptr >= length(var.code), true) ? local.iter_1295 : {
    output = (local.code_1296[0] == "."
      ? "${local.iter_1295.output}${join("", [for _ in range(local.code_1296[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1295.tape[local.iter_1295.tape_ptr]))])}"
      : local.iter_1295.output)
    
    tape = (
      local.code_1296[0] == "+"
        ? [for i, b in local.iter_1295.tape : (i == local.iter_1295.tape_ptr ? (b + local.code_1296[1]) % 256 : b)] :
      local.code_1296[0] == "-"
        ? [for i, b in local.iter_1295.tape : (i == local.iter_1295.tape_ptr ? (b - local.code_1296[1] + 256) % 256 : b)] :
      local.code_1296[0] == ","
        ? [for i, b in local.iter_1295.tape : (i == local.iter_1295.tape_ptr ? local.ascii_lookup[substr(local.input_1296, 0, 1)] : b)]
        : local.iter_1295.tape)

    tape_ptr = (
      local.code_1296[0] == "<"
        ? local.iter_1295.tape_ptr - local.code_1296[1] :
      local.code_1296[0] == ">"
        ? local.iter_1295.tape_ptr + local.code_1296[1]
        : local.iter_1295.tape_ptr)

    code_ptr = 2 + (
      local.code_1296[0] == "["
        ? local.iter_1295.tape[local.iter_1295.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1295.code_ptr)] : local.iter_1295.code_ptr :
      local.code_1296[0] == "]"
        ? local.iter_1295.tape[local.iter_1295.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1295.code_ptr)] : local.iter_1295.code_ptr
        : local.iter_1295.code_ptr)

    steps_taken = 1 + local.iter_1295.steps_taken
  }
}

locals {
  code_1297 = (try(local.iter_1296.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1296.code_ptr, local.iter_1296.code_ptr + 2)
    : [null])

  input_1297 = (local.code_1297[0] == ","
    ? substr(local.input_1296, local.code_1297[1], -1)
    : local.input_1296)

  iter_1297 = try(local.iter_1296.code_ptr >= length(var.code), true) ? local.iter_1296 : {
    output = (local.code_1297[0] == "."
      ? "${local.iter_1296.output}${join("", [for _ in range(local.code_1297[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1296.tape[local.iter_1296.tape_ptr]))])}"
      : local.iter_1296.output)
    
    tape = (
      local.code_1297[0] == "+"
        ? [for i, b in local.iter_1296.tape : (i == local.iter_1296.tape_ptr ? (b + local.code_1297[1]) % 256 : b)] :
      local.code_1297[0] == "-"
        ? [for i, b in local.iter_1296.tape : (i == local.iter_1296.tape_ptr ? (b - local.code_1297[1] + 256) % 256 : b)] :
      local.code_1297[0] == ","
        ? [for i, b in local.iter_1296.tape : (i == local.iter_1296.tape_ptr ? local.ascii_lookup[substr(local.input_1297, 0, 1)] : b)]
        : local.iter_1296.tape)

    tape_ptr = (
      local.code_1297[0] == "<"
        ? local.iter_1296.tape_ptr - local.code_1297[1] :
      local.code_1297[0] == ">"
        ? local.iter_1296.tape_ptr + local.code_1297[1]
        : local.iter_1296.tape_ptr)

    code_ptr = 2 + (
      local.code_1297[0] == "["
        ? local.iter_1296.tape[local.iter_1296.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1296.code_ptr)] : local.iter_1296.code_ptr :
      local.code_1297[0] == "]"
        ? local.iter_1296.tape[local.iter_1296.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1296.code_ptr)] : local.iter_1296.code_ptr
        : local.iter_1296.code_ptr)

    steps_taken = 1 + local.iter_1296.steps_taken
  }
}

locals {
  code_1298 = (try(local.iter_1297.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1297.code_ptr, local.iter_1297.code_ptr + 2)
    : [null])

  input_1298 = (local.code_1298[0] == ","
    ? substr(local.input_1297, local.code_1298[1], -1)
    : local.input_1297)

  iter_1298 = try(local.iter_1297.code_ptr >= length(var.code), true) ? local.iter_1297 : {
    output = (local.code_1298[0] == "."
      ? "${local.iter_1297.output}${join("", [for _ in range(local.code_1298[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1297.tape[local.iter_1297.tape_ptr]))])}"
      : local.iter_1297.output)
    
    tape = (
      local.code_1298[0] == "+"
        ? [for i, b in local.iter_1297.tape : (i == local.iter_1297.tape_ptr ? (b + local.code_1298[1]) % 256 : b)] :
      local.code_1298[0] == "-"
        ? [for i, b in local.iter_1297.tape : (i == local.iter_1297.tape_ptr ? (b - local.code_1298[1] + 256) % 256 : b)] :
      local.code_1298[0] == ","
        ? [for i, b in local.iter_1297.tape : (i == local.iter_1297.tape_ptr ? local.ascii_lookup[substr(local.input_1298, 0, 1)] : b)]
        : local.iter_1297.tape)

    tape_ptr = (
      local.code_1298[0] == "<"
        ? local.iter_1297.tape_ptr - local.code_1298[1] :
      local.code_1298[0] == ">"
        ? local.iter_1297.tape_ptr + local.code_1298[1]
        : local.iter_1297.tape_ptr)

    code_ptr = 2 + (
      local.code_1298[0] == "["
        ? local.iter_1297.tape[local.iter_1297.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1297.code_ptr)] : local.iter_1297.code_ptr :
      local.code_1298[0] == "]"
        ? local.iter_1297.tape[local.iter_1297.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1297.code_ptr)] : local.iter_1297.code_ptr
        : local.iter_1297.code_ptr)

    steps_taken = 1 + local.iter_1297.steps_taken
  }
}

locals {
  code_1299 = (try(local.iter_1298.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1298.code_ptr, local.iter_1298.code_ptr + 2)
    : [null])

  input_1299 = (local.code_1299[0] == ","
    ? substr(local.input_1298, local.code_1299[1], -1)
    : local.input_1298)

  iter_1299 = try(local.iter_1298.code_ptr >= length(var.code), true) ? local.iter_1298 : {
    output = (local.code_1299[0] == "."
      ? "${local.iter_1298.output}${join("", [for _ in range(local.code_1299[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1298.tape[local.iter_1298.tape_ptr]))])}"
      : local.iter_1298.output)
    
    tape = (
      local.code_1299[0] == "+"
        ? [for i, b in local.iter_1298.tape : (i == local.iter_1298.tape_ptr ? (b + local.code_1299[1]) % 256 : b)] :
      local.code_1299[0] == "-"
        ? [for i, b in local.iter_1298.tape : (i == local.iter_1298.tape_ptr ? (b - local.code_1299[1] + 256) % 256 : b)] :
      local.code_1299[0] == ","
        ? [for i, b in local.iter_1298.tape : (i == local.iter_1298.tape_ptr ? local.ascii_lookup[substr(local.input_1299, 0, 1)] : b)]
        : local.iter_1298.tape)

    tape_ptr = (
      local.code_1299[0] == "<"
        ? local.iter_1298.tape_ptr - local.code_1299[1] :
      local.code_1299[0] == ">"
        ? local.iter_1298.tape_ptr + local.code_1299[1]
        : local.iter_1298.tape_ptr)

    code_ptr = 2 + (
      local.code_1299[0] == "["
        ? local.iter_1298.tape[local.iter_1298.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1298.code_ptr)] : local.iter_1298.code_ptr :
      local.code_1299[0] == "]"
        ? local.iter_1298.tape[local.iter_1298.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1298.code_ptr)] : local.iter_1298.code_ptr
        : local.iter_1298.code_ptr)

    steps_taken = 1 + local.iter_1298.steps_taken
  }
}

locals {
  code_1300 = (try(local.iter_1299.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1299.code_ptr, local.iter_1299.code_ptr + 2)
    : [null])

  input_1300 = (local.code_1300[0] == ","
    ? substr(local.input_1299, local.code_1300[1], -1)
    : local.input_1299)

  iter_1300 = try(local.iter_1299.code_ptr >= length(var.code), true) ? local.iter_1299 : {
    output = (local.code_1300[0] == "."
      ? "${local.iter_1299.output}${join("", [for _ in range(local.code_1300[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1299.tape[local.iter_1299.tape_ptr]))])}"
      : local.iter_1299.output)
    
    tape = (
      local.code_1300[0] == "+"
        ? [for i, b in local.iter_1299.tape : (i == local.iter_1299.tape_ptr ? (b + local.code_1300[1]) % 256 : b)] :
      local.code_1300[0] == "-"
        ? [for i, b in local.iter_1299.tape : (i == local.iter_1299.tape_ptr ? (b - local.code_1300[1] + 256) % 256 : b)] :
      local.code_1300[0] == ","
        ? [for i, b in local.iter_1299.tape : (i == local.iter_1299.tape_ptr ? local.ascii_lookup[substr(local.input_1300, 0, 1)] : b)]
        : local.iter_1299.tape)

    tape_ptr = (
      local.code_1300[0] == "<"
        ? local.iter_1299.tape_ptr - local.code_1300[1] :
      local.code_1300[0] == ">"
        ? local.iter_1299.tape_ptr + local.code_1300[1]
        : local.iter_1299.tape_ptr)

    code_ptr = 2 + (
      local.code_1300[0] == "["
        ? local.iter_1299.tape[local.iter_1299.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1299.code_ptr)] : local.iter_1299.code_ptr :
      local.code_1300[0] == "]"
        ? local.iter_1299.tape[local.iter_1299.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1299.code_ptr)] : local.iter_1299.code_ptr
        : local.iter_1299.code_ptr)

    steps_taken = 1 + local.iter_1299.steps_taken
  }
}

locals {
  code_1301 = (try(local.iter_1300.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1300.code_ptr, local.iter_1300.code_ptr + 2)
    : [null])

  input_1301 = (local.code_1301[0] == ","
    ? substr(local.input_1300, local.code_1301[1], -1)
    : local.input_1300)

  iter_1301 = try(local.iter_1300.code_ptr >= length(var.code), true) ? local.iter_1300 : {
    output = (local.code_1301[0] == "."
      ? "${local.iter_1300.output}${join("", [for _ in range(local.code_1301[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1300.tape[local.iter_1300.tape_ptr]))])}"
      : local.iter_1300.output)
    
    tape = (
      local.code_1301[0] == "+"
        ? [for i, b in local.iter_1300.tape : (i == local.iter_1300.tape_ptr ? (b + local.code_1301[1]) % 256 : b)] :
      local.code_1301[0] == "-"
        ? [for i, b in local.iter_1300.tape : (i == local.iter_1300.tape_ptr ? (b - local.code_1301[1] + 256) % 256 : b)] :
      local.code_1301[0] == ","
        ? [for i, b in local.iter_1300.tape : (i == local.iter_1300.tape_ptr ? local.ascii_lookup[substr(local.input_1301, 0, 1)] : b)]
        : local.iter_1300.tape)

    tape_ptr = (
      local.code_1301[0] == "<"
        ? local.iter_1300.tape_ptr - local.code_1301[1] :
      local.code_1301[0] == ">"
        ? local.iter_1300.tape_ptr + local.code_1301[1]
        : local.iter_1300.tape_ptr)

    code_ptr = 2 + (
      local.code_1301[0] == "["
        ? local.iter_1300.tape[local.iter_1300.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1300.code_ptr)] : local.iter_1300.code_ptr :
      local.code_1301[0] == "]"
        ? local.iter_1300.tape[local.iter_1300.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1300.code_ptr)] : local.iter_1300.code_ptr
        : local.iter_1300.code_ptr)

    steps_taken = 1 + local.iter_1300.steps_taken
  }
}

locals {
  code_1302 = (try(local.iter_1301.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1301.code_ptr, local.iter_1301.code_ptr + 2)
    : [null])

  input_1302 = (local.code_1302[0] == ","
    ? substr(local.input_1301, local.code_1302[1], -1)
    : local.input_1301)

  iter_1302 = try(local.iter_1301.code_ptr >= length(var.code), true) ? local.iter_1301 : {
    output = (local.code_1302[0] == "."
      ? "${local.iter_1301.output}${join("", [for _ in range(local.code_1302[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1301.tape[local.iter_1301.tape_ptr]))])}"
      : local.iter_1301.output)
    
    tape = (
      local.code_1302[0] == "+"
        ? [for i, b in local.iter_1301.tape : (i == local.iter_1301.tape_ptr ? (b + local.code_1302[1]) % 256 : b)] :
      local.code_1302[0] == "-"
        ? [for i, b in local.iter_1301.tape : (i == local.iter_1301.tape_ptr ? (b - local.code_1302[1] + 256) % 256 : b)] :
      local.code_1302[0] == ","
        ? [for i, b in local.iter_1301.tape : (i == local.iter_1301.tape_ptr ? local.ascii_lookup[substr(local.input_1302, 0, 1)] : b)]
        : local.iter_1301.tape)

    tape_ptr = (
      local.code_1302[0] == "<"
        ? local.iter_1301.tape_ptr - local.code_1302[1] :
      local.code_1302[0] == ">"
        ? local.iter_1301.tape_ptr + local.code_1302[1]
        : local.iter_1301.tape_ptr)

    code_ptr = 2 + (
      local.code_1302[0] == "["
        ? local.iter_1301.tape[local.iter_1301.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1301.code_ptr)] : local.iter_1301.code_ptr :
      local.code_1302[0] == "]"
        ? local.iter_1301.tape[local.iter_1301.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1301.code_ptr)] : local.iter_1301.code_ptr
        : local.iter_1301.code_ptr)

    steps_taken = 1 + local.iter_1301.steps_taken
  }
}

locals {
  code_1303 = (try(local.iter_1302.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1302.code_ptr, local.iter_1302.code_ptr + 2)
    : [null])

  input_1303 = (local.code_1303[0] == ","
    ? substr(local.input_1302, local.code_1303[1], -1)
    : local.input_1302)

  iter_1303 = try(local.iter_1302.code_ptr >= length(var.code), true) ? local.iter_1302 : {
    output = (local.code_1303[0] == "."
      ? "${local.iter_1302.output}${join("", [for _ in range(local.code_1303[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1302.tape[local.iter_1302.tape_ptr]))])}"
      : local.iter_1302.output)
    
    tape = (
      local.code_1303[0] == "+"
        ? [for i, b in local.iter_1302.tape : (i == local.iter_1302.tape_ptr ? (b + local.code_1303[1]) % 256 : b)] :
      local.code_1303[0] == "-"
        ? [for i, b in local.iter_1302.tape : (i == local.iter_1302.tape_ptr ? (b - local.code_1303[1] + 256) % 256 : b)] :
      local.code_1303[0] == ","
        ? [for i, b in local.iter_1302.tape : (i == local.iter_1302.tape_ptr ? local.ascii_lookup[substr(local.input_1303, 0, 1)] : b)]
        : local.iter_1302.tape)

    tape_ptr = (
      local.code_1303[0] == "<"
        ? local.iter_1302.tape_ptr - local.code_1303[1] :
      local.code_1303[0] == ">"
        ? local.iter_1302.tape_ptr + local.code_1303[1]
        : local.iter_1302.tape_ptr)

    code_ptr = 2 + (
      local.code_1303[0] == "["
        ? local.iter_1302.tape[local.iter_1302.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1302.code_ptr)] : local.iter_1302.code_ptr :
      local.code_1303[0] == "]"
        ? local.iter_1302.tape[local.iter_1302.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1302.code_ptr)] : local.iter_1302.code_ptr
        : local.iter_1302.code_ptr)

    steps_taken = 1 + local.iter_1302.steps_taken
  }
}

locals {
  code_1304 = (try(local.iter_1303.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1303.code_ptr, local.iter_1303.code_ptr + 2)
    : [null])

  input_1304 = (local.code_1304[0] == ","
    ? substr(local.input_1303, local.code_1304[1], -1)
    : local.input_1303)

  iter_1304 = try(local.iter_1303.code_ptr >= length(var.code), true) ? local.iter_1303 : {
    output = (local.code_1304[0] == "."
      ? "${local.iter_1303.output}${join("", [for _ in range(local.code_1304[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1303.tape[local.iter_1303.tape_ptr]))])}"
      : local.iter_1303.output)
    
    tape = (
      local.code_1304[0] == "+"
        ? [for i, b in local.iter_1303.tape : (i == local.iter_1303.tape_ptr ? (b + local.code_1304[1]) % 256 : b)] :
      local.code_1304[0] == "-"
        ? [for i, b in local.iter_1303.tape : (i == local.iter_1303.tape_ptr ? (b - local.code_1304[1] + 256) % 256 : b)] :
      local.code_1304[0] == ","
        ? [for i, b in local.iter_1303.tape : (i == local.iter_1303.tape_ptr ? local.ascii_lookup[substr(local.input_1304, 0, 1)] : b)]
        : local.iter_1303.tape)

    tape_ptr = (
      local.code_1304[0] == "<"
        ? local.iter_1303.tape_ptr - local.code_1304[1] :
      local.code_1304[0] == ">"
        ? local.iter_1303.tape_ptr + local.code_1304[1]
        : local.iter_1303.tape_ptr)

    code_ptr = 2 + (
      local.code_1304[0] == "["
        ? local.iter_1303.tape[local.iter_1303.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1303.code_ptr)] : local.iter_1303.code_ptr :
      local.code_1304[0] == "]"
        ? local.iter_1303.tape[local.iter_1303.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1303.code_ptr)] : local.iter_1303.code_ptr
        : local.iter_1303.code_ptr)

    steps_taken = 1 + local.iter_1303.steps_taken
  }
}

locals {
  code_1305 = (try(local.iter_1304.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1304.code_ptr, local.iter_1304.code_ptr + 2)
    : [null])

  input_1305 = (local.code_1305[0] == ","
    ? substr(local.input_1304, local.code_1305[1], -1)
    : local.input_1304)

  iter_1305 = try(local.iter_1304.code_ptr >= length(var.code), true) ? local.iter_1304 : {
    output = (local.code_1305[0] == "."
      ? "${local.iter_1304.output}${join("", [for _ in range(local.code_1305[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1304.tape[local.iter_1304.tape_ptr]))])}"
      : local.iter_1304.output)
    
    tape = (
      local.code_1305[0] == "+"
        ? [for i, b in local.iter_1304.tape : (i == local.iter_1304.tape_ptr ? (b + local.code_1305[1]) % 256 : b)] :
      local.code_1305[0] == "-"
        ? [for i, b in local.iter_1304.tape : (i == local.iter_1304.tape_ptr ? (b - local.code_1305[1] + 256) % 256 : b)] :
      local.code_1305[0] == ","
        ? [for i, b in local.iter_1304.tape : (i == local.iter_1304.tape_ptr ? local.ascii_lookup[substr(local.input_1305, 0, 1)] : b)]
        : local.iter_1304.tape)

    tape_ptr = (
      local.code_1305[0] == "<"
        ? local.iter_1304.tape_ptr - local.code_1305[1] :
      local.code_1305[0] == ">"
        ? local.iter_1304.tape_ptr + local.code_1305[1]
        : local.iter_1304.tape_ptr)

    code_ptr = 2 + (
      local.code_1305[0] == "["
        ? local.iter_1304.tape[local.iter_1304.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1304.code_ptr)] : local.iter_1304.code_ptr :
      local.code_1305[0] == "]"
        ? local.iter_1304.tape[local.iter_1304.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1304.code_ptr)] : local.iter_1304.code_ptr
        : local.iter_1304.code_ptr)

    steps_taken = 1 + local.iter_1304.steps_taken
  }
}

locals {
  code_1306 = (try(local.iter_1305.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1305.code_ptr, local.iter_1305.code_ptr + 2)
    : [null])

  input_1306 = (local.code_1306[0] == ","
    ? substr(local.input_1305, local.code_1306[1], -1)
    : local.input_1305)

  iter_1306 = try(local.iter_1305.code_ptr >= length(var.code), true) ? local.iter_1305 : {
    output = (local.code_1306[0] == "."
      ? "${local.iter_1305.output}${join("", [for _ in range(local.code_1306[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1305.tape[local.iter_1305.tape_ptr]))])}"
      : local.iter_1305.output)
    
    tape = (
      local.code_1306[0] == "+"
        ? [for i, b in local.iter_1305.tape : (i == local.iter_1305.tape_ptr ? (b + local.code_1306[1]) % 256 : b)] :
      local.code_1306[0] == "-"
        ? [for i, b in local.iter_1305.tape : (i == local.iter_1305.tape_ptr ? (b - local.code_1306[1] + 256) % 256 : b)] :
      local.code_1306[0] == ","
        ? [for i, b in local.iter_1305.tape : (i == local.iter_1305.tape_ptr ? local.ascii_lookup[substr(local.input_1306, 0, 1)] : b)]
        : local.iter_1305.tape)

    tape_ptr = (
      local.code_1306[0] == "<"
        ? local.iter_1305.tape_ptr - local.code_1306[1] :
      local.code_1306[0] == ">"
        ? local.iter_1305.tape_ptr + local.code_1306[1]
        : local.iter_1305.tape_ptr)

    code_ptr = 2 + (
      local.code_1306[0] == "["
        ? local.iter_1305.tape[local.iter_1305.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1305.code_ptr)] : local.iter_1305.code_ptr :
      local.code_1306[0] == "]"
        ? local.iter_1305.tape[local.iter_1305.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1305.code_ptr)] : local.iter_1305.code_ptr
        : local.iter_1305.code_ptr)

    steps_taken = 1 + local.iter_1305.steps_taken
  }
}

locals {
  code_1307 = (try(local.iter_1306.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1306.code_ptr, local.iter_1306.code_ptr + 2)
    : [null])

  input_1307 = (local.code_1307[0] == ","
    ? substr(local.input_1306, local.code_1307[1], -1)
    : local.input_1306)

  iter_1307 = try(local.iter_1306.code_ptr >= length(var.code), true) ? local.iter_1306 : {
    output = (local.code_1307[0] == "."
      ? "${local.iter_1306.output}${join("", [for _ in range(local.code_1307[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1306.tape[local.iter_1306.tape_ptr]))])}"
      : local.iter_1306.output)
    
    tape = (
      local.code_1307[0] == "+"
        ? [for i, b in local.iter_1306.tape : (i == local.iter_1306.tape_ptr ? (b + local.code_1307[1]) % 256 : b)] :
      local.code_1307[0] == "-"
        ? [for i, b in local.iter_1306.tape : (i == local.iter_1306.tape_ptr ? (b - local.code_1307[1] + 256) % 256 : b)] :
      local.code_1307[0] == ","
        ? [for i, b in local.iter_1306.tape : (i == local.iter_1306.tape_ptr ? local.ascii_lookup[substr(local.input_1307, 0, 1)] : b)]
        : local.iter_1306.tape)

    tape_ptr = (
      local.code_1307[0] == "<"
        ? local.iter_1306.tape_ptr - local.code_1307[1] :
      local.code_1307[0] == ">"
        ? local.iter_1306.tape_ptr + local.code_1307[1]
        : local.iter_1306.tape_ptr)

    code_ptr = 2 + (
      local.code_1307[0] == "["
        ? local.iter_1306.tape[local.iter_1306.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1306.code_ptr)] : local.iter_1306.code_ptr :
      local.code_1307[0] == "]"
        ? local.iter_1306.tape[local.iter_1306.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1306.code_ptr)] : local.iter_1306.code_ptr
        : local.iter_1306.code_ptr)

    steps_taken = 1 + local.iter_1306.steps_taken
  }
}

locals {
  code_1308 = (try(local.iter_1307.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1307.code_ptr, local.iter_1307.code_ptr + 2)
    : [null])

  input_1308 = (local.code_1308[0] == ","
    ? substr(local.input_1307, local.code_1308[1], -1)
    : local.input_1307)

  iter_1308 = try(local.iter_1307.code_ptr >= length(var.code), true) ? local.iter_1307 : {
    output = (local.code_1308[0] == "."
      ? "${local.iter_1307.output}${join("", [for _ in range(local.code_1308[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1307.tape[local.iter_1307.tape_ptr]))])}"
      : local.iter_1307.output)
    
    tape = (
      local.code_1308[0] == "+"
        ? [for i, b in local.iter_1307.tape : (i == local.iter_1307.tape_ptr ? (b + local.code_1308[1]) % 256 : b)] :
      local.code_1308[0] == "-"
        ? [for i, b in local.iter_1307.tape : (i == local.iter_1307.tape_ptr ? (b - local.code_1308[1] + 256) % 256 : b)] :
      local.code_1308[0] == ","
        ? [for i, b in local.iter_1307.tape : (i == local.iter_1307.tape_ptr ? local.ascii_lookup[substr(local.input_1308, 0, 1)] : b)]
        : local.iter_1307.tape)

    tape_ptr = (
      local.code_1308[0] == "<"
        ? local.iter_1307.tape_ptr - local.code_1308[1] :
      local.code_1308[0] == ">"
        ? local.iter_1307.tape_ptr + local.code_1308[1]
        : local.iter_1307.tape_ptr)

    code_ptr = 2 + (
      local.code_1308[0] == "["
        ? local.iter_1307.tape[local.iter_1307.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1307.code_ptr)] : local.iter_1307.code_ptr :
      local.code_1308[0] == "]"
        ? local.iter_1307.tape[local.iter_1307.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1307.code_ptr)] : local.iter_1307.code_ptr
        : local.iter_1307.code_ptr)

    steps_taken = 1 + local.iter_1307.steps_taken
  }
}

locals {
  code_1309 = (try(local.iter_1308.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1308.code_ptr, local.iter_1308.code_ptr + 2)
    : [null])

  input_1309 = (local.code_1309[0] == ","
    ? substr(local.input_1308, local.code_1309[1], -1)
    : local.input_1308)

  iter_1309 = try(local.iter_1308.code_ptr >= length(var.code), true) ? local.iter_1308 : {
    output = (local.code_1309[0] == "."
      ? "${local.iter_1308.output}${join("", [for _ in range(local.code_1309[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1308.tape[local.iter_1308.tape_ptr]))])}"
      : local.iter_1308.output)
    
    tape = (
      local.code_1309[0] == "+"
        ? [for i, b in local.iter_1308.tape : (i == local.iter_1308.tape_ptr ? (b + local.code_1309[1]) % 256 : b)] :
      local.code_1309[0] == "-"
        ? [for i, b in local.iter_1308.tape : (i == local.iter_1308.tape_ptr ? (b - local.code_1309[1] + 256) % 256 : b)] :
      local.code_1309[0] == ","
        ? [for i, b in local.iter_1308.tape : (i == local.iter_1308.tape_ptr ? local.ascii_lookup[substr(local.input_1309, 0, 1)] : b)]
        : local.iter_1308.tape)

    tape_ptr = (
      local.code_1309[0] == "<"
        ? local.iter_1308.tape_ptr - local.code_1309[1] :
      local.code_1309[0] == ">"
        ? local.iter_1308.tape_ptr + local.code_1309[1]
        : local.iter_1308.tape_ptr)

    code_ptr = 2 + (
      local.code_1309[0] == "["
        ? local.iter_1308.tape[local.iter_1308.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1308.code_ptr)] : local.iter_1308.code_ptr :
      local.code_1309[0] == "]"
        ? local.iter_1308.tape[local.iter_1308.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1308.code_ptr)] : local.iter_1308.code_ptr
        : local.iter_1308.code_ptr)

    steps_taken = 1 + local.iter_1308.steps_taken
  }
}

locals {
  code_1310 = (try(local.iter_1309.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1309.code_ptr, local.iter_1309.code_ptr + 2)
    : [null])

  input_1310 = (local.code_1310[0] == ","
    ? substr(local.input_1309, local.code_1310[1], -1)
    : local.input_1309)

  iter_1310 = try(local.iter_1309.code_ptr >= length(var.code), true) ? local.iter_1309 : {
    output = (local.code_1310[0] == "."
      ? "${local.iter_1309.output}${join("", [for _ in range(local.code_1310[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1309.tape[local.iter_1309.tape_ptr]))])}"
      : local.iter_1309.output)
    
    tape = (
      local.code_1310[0] == "+"
        ? [for i, b in local.iter_1309.tape : (i == local.iter_1309.tape_ptr ? (b + local.code_1310[1]) % 256 : b)] :
      local.code_1310[0] == "-"
        ? [for i, b in local.iter_1309.tape : (i == local.iter_1309.tape_ptr ? (b - local.code_1310[1] + 256) % 256 : b)] :
      local.code_1310[0] == ","
        ? [for i, b in local.iter_1309.tape : (i == local.iter_1309.tape_ptr ? local.ascii_lookup[substr(local.input_1310, 0, 1)] : b)]
        : local.iter_1309.tape)

    tape_ptr = (
      local.code_1310[0] == "<"
        ? local.iter_1309.tape_ptr - local.code_1310[1] :
      local.code_1310[0] == ">"
        ? local.iter_1309.tape_ptr + local.code_1310[1]
        : local.iter_1309.tape_ptr)

    code_ptr = 2 + (
      local.code_1310[0] == "["
        ? local.iter_1309.tape[local.iter_1309.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1309.code_ptr)] : local.iter_1309.code_ptr :
      local.code_1310[0] == "]"
        ? local.iter_1309.tape[local.iter_1309.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1309.code_ptr)] : local.iter_1309.code_ptr
        : local.iter_1309.code_ptr)

    steps_taken = 1 + local.iter_1309.steps_taken
  }
}

locals {
  code_1311 = (try(local.iter_1310.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1310.code_ptr, local.iter_1310.code_ptr + 2)
    : [null])

  input_1311 = (local.code_1311[0] == ","
    ? substr(local.input_1310, local.code_1311[1], -1)
    : local.input_1310)

  iter_1311 = try(local.iter_1310.code_ptr >= length(var.code), true) ? local.iter_1310 : {
    output = (local.code_1311[0] == "."
      ? "${local.iter_1310.output}${join("", [for _ in range(local.code_1311[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1310.tape[local.iter_1310.tape_ptr]))])}"
      : local.iter_1310.output)
    
    tape = (
      local.code_1311[0] == "+"
        ? [for i, b in local.iter_1310.tape : (i == local.iter_1310.tape_ptr ? (b + local.code_1311[1]) % 256 : b)] :
      local.code_1311[0] == "-"
        ? [for i, b in local.iter_1310.tape : (i == local.iter_1310.tape_ptr ? (b - local.code_1311[1] + 256) % 256 : b)] :
      local.code_1311[0] == ","
        ? [for i, b in local.iter_1310.tape : (i == local.iter_1310.tape_ptr ? local.ascii_lookup[substr(local.input_1311, 0, 1)] : b)]
        : local.iter_1310.tape)

    tape_ptr = (
      local.code_1311[0] == "<"
        ? local.iter_1310.tape_ptr - local.code_1311[1] :
      local.code_1311[0] == ">"
        ? local.iter_1310.tape_ptr + local.code_1311[1]
        : local.iter_1310.tape_ptr)

    code_ptr = 2 + (
      local.code_1311[0] == "["
        ? local.iter_1310.tape[local.iter_1310.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1310.code_ptr)] : local.iter_1310.code_ptr :
      local.code_1311[0] == "]"
        ? local.iter_1310.tape[local.iter_1310.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1310.code_ptr)] : local.iter_1310.code_ptr
        : local.iter_1310.code_ptr)

    steps_taken = 1 + local.iter_1310.steps_taken
  }
}

locals {
  code_1312 = (try(local.iter_1311.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1311.code_ptr, local.iter_1311.code_ptr + 2)
    : [null])

  input_1312 = (local.code_1312[0] == ","
    ? substr(local.input_1311, local.code_1312[1], -1)
    : local.input_1311)

  iter_1312 = try(local.iter_1311.code_ptr >= length(var.code), true) ? local.iter_1311 : {
    output = (local.code_1312[0] == "."
      ? "${local.iter_1311.output}${join("", [for _ in range(local.code_1312[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1311.tape[local.iter_1311.tape_ptr]))])}"
      : local.iter_1311.output)
    
    tape = (
      local.code_1312[0] == "+"
        ? [for i, b in local.iter_1311.tape : (i == local.iter_1311.tape_ptr ? (b + local.code_1312[1]) % 256 : b)] :
      local.code_1312[0] == "-"
        ? [for i, b in local.iter_1311.tape : (i == local.iter_1311.tape_ptr ? (b - local.code_1312[1] + 256) % 256 : b)] :
      local.code_1312[0] == ","
        ? [for i, b in local.iter_1311.tape : (i == local.iter_1311.tape_ptr ? local.ascii_lookup[substr(local.input_1312, 0, 1)] : b)]
        : local.iter_1311.tape)

    tape_ptr = (
      local.code_1312[0] == "<"
        ? local.iter_1311.tape_ptr - local.code_1312[1] :
      local.code_1312[0] == ">"
        ? local.iter_1311.tape_ptr + local.code_1312[1]
        : local.iter_1311.tape_ptr)

    code_ptr = 2 + (
      local.code_1312[0] == "["
        ? local.iter_1311.tape[local.iter_1311.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1311.code_ptr)] : local.iter_1311.code_ptr :
      local.code_1312[0] == "]"
        ? local.iter_1311.tape[local.iter_1311.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1311.code_ptr)] : local.iter_1311.code_ptr
        : local.iter_1311.code_ptr)

    steps_taken = 1 + local.iter_1311.steps_taken
  }
}

locals {
  code_1313 = (try(local.iter_1312.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1312.code_ptr, local.iter_1312.code_ptr + 2)
    : [null])

  input_1313 = (local.code_1313[0] == ","
    ? substr(local.input_1312, local.code_1313[1], -1)
    : local.input_1312)

  iter_1313 = try(local.iter_1312.code_ptr >= length(var.code), true) ? local.iter_1312 : {
    output = (local.code_1313[0] == "."
      ? "${local.iter_1312.output}${join("", [for _ in range(local.code_1313[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1312.tape[local.iter_1312.tape_ptr]))])}"
      : local.iter_1312.output)
    
    tape = (
      local.code_1313[0] == "+"
        ? [for i, b in local.iter_1312.tape : (i == local.iter_1312.tape_ptr ? (b + local.code_1313[1]) % 256 : b)] :
      local.code_1313[0] == "-"
        ? [for i, b in local.iter_1312.tape : (i == local.iter_1312.tape_ptr ? (b - local.code_1313[1] + 256) % 256 : b)] :
      local.code_1313[0] == ","
        ? [for i, b in local.iter_1312.tape : (i == local.iter_1312.tape_ptr ? local.ascii_lookup[substr(local.input_1313, 0, 1)] : b)]
        : local.iter_1312.tape)

    tape_ptr = (
      local.code_1313[0] == "<"
        ? local.iter_1312.tape_ptr - local.code_1313[1] :
      local.code_1313[0] == ">"
        ? local.iter_1312.tape_ptr + local.code_1313[1]
        : local.iter_1312.tape_ptr)

    code_ptr = 2 + (
      local.code_1313[0] == "["
        ? local.iter_1312.tape[local.iter_1312.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1312.code_ptr)] : local.iter_1312.code_ptr :
      local.code_1313[0] == "]"
        ? local.iter_1312.tape[local.iter_1312.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1312.code_ptr)] : local.iter_1312.code_ptr
        : local.iter_1312.code_ptr)

    steps_taken = 1 + local.iter_1312.steps_taken
  }
}

locals {
  code_1314 = (try(local.iter_1313.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1313.code_ptr, local.iter_1313.code_ptr + 2)
    : [null])

  input_1314 = (local.code_1314[0] == ","
    ? substr(local.input_1313, local.code_1314[1], -1)
    : local.input_1313)

  iter_1314 = try(local.iter_1313.code_ptr >= length(var.code), true) ? local.iter_1313 : {
    output = (local.code_1314[0] == "."
      ? "${local.iter_1313.output}${join("", [for _ in range(local.code_1314[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1313.tape[local.iter_1313.tape_ptr]))])}"
      : local.iter_1313.output)
    
    tape = (
      local.code_1314[0] == "+"
        ? [for i, b in local.iter_1313.tape : (i == local.iter_1313.tape_ptr ? (b + local.code_1314[1]) % 256 : b)] :
      local.code_1314[0] == "-"
        ? [for i, b in local.iter_1313.tape : (i == local.iter_1313.tape_ptr ? (b - local.code_1314[1] + 256) % 256 : b)] :
      local.code_1314[0] == ","
        ? [for i, b in local.iter_1313.tape : (i == local.iter_1313.tape_ptr ? local.ascii_lookup[substr(local.input_1314, 0, 1)] : b)]
        : local.iter_1313.tape)

    tape_ptr = (
      local.code_1314[0] == "<"
        ? local.iter_1313.tape_ptr - local.code_1314[1] :
      local.code_1314[0] == ">"
        ? local.iter_1313.tape_ptr + local.code_1314[1]
        : local.iter_1313.tape_ptr)

    code_ptr = 2 + (
      local.code_1314[0] == "["
        ? local.iter_1313.tape[local.iter_1313.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1313.code_ptr)] : local.iter_1313.code_ptr :
      local.code_1314[0] == "]"
        ? local.iter_1313.tape[local.iter_1313.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1313.code_ptr)] : local.iter_1313.code_ptr
        : local.iter_1313.code_ptr)

    steps_taken = 1 + local.iter_1313.steps_taken
  }
}

locals {
  code_1315 = (try(local.iter_1314.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1314.code_ptr, local.iter_1314.code_ptr + 2)
    : [null])

  input_1315 = (local.code_1315[0] == ","
    ? substr(local.input_1314, local.code_1315[1], -1)
    : local.input_1314)

  iter_1315 = try(local.iter_1314.code_ptr >= length(var.code), true) ? local.iter_1314 : {
    output = (local.code_1315[0] == "."
      ? "${local.iter_1314.output}${join("", [for _ in range(local.code_1315[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1314.tape[local.iter_1314.tape_ptr]))])}"
      : local.iter_1314.output)
    
    tape = (
      local.code_1315[0] == "+"
        ? [for i, b in local.iter_1314.tape : (i == local.iter_1314.tape_ptr ? (b + local.code_1315[1]) % 256 : b)] :
      local.code_1315[0] == "-"
        ? [for i, b in local.iter_1314.tape : (i == local.iter_1314.tape_ptr ? (b - local.code_1315[1] + 256) % 256 : b)] :
      local.code_1315[0] == ","
        ? [for i, b in local.iter_1314.tape : (i == local.iter_1314.tape_ptr ? local.ascii_lookup[substr(local.input_1315, 0, 1)] : b)]
        : local.iter_1314.tape)

    tape_ptr = (
      local.code_1315[0] == "<"
        ? local.iter_1314.tape_ptr - local.code_1315[1] :
      local.code_1315[0] == ">"
        ? local.iter_1314.tape_ptr + local.code_1315[1]
        : local.iter_1314.tape_ptr)

    code_ptr = 2 + (
      local.code_1315[0] == "["
        ? local.iter_1314.tape[local.iter_1314.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1314.code_ptr)] : local.iter_1314.code_ptr :
      local.code_1315[0] == "]"
        ? local.iter_1314.tape[local.iter_1314.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1314.code_ptr)] : local.iter_1314.code_ptr
        : local.iter_1314.code_ptr)

    steps_taken = 1 + local.iter_1314.steps_taken
  }
}

locals {
  code_1316 = (try(local.iter_1315.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1315.code_ptr, local.iter_1315.code_ptr + 2)
    : [null])

  input_1316 = (local.code_1316[0] == ","
    ? substr(local.input_1315, local.code_1316[1], -1)
    : local.input_1315)

  iter_1316 = try(local.iter_1315.code_ptr >= length(var.code), true) ? local.iter_1315 : {
    output = (local.code_1316[0] == "."
      ? "${local.iter_1315.output}${join("", [for _ in range(local.code_1316[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1315.tape[local.iter_1315.tape_ptr]))])}"
      : local.iter_1315.output)
    
    tape = (
      local.code_1316[0] == "+"
        ? [for i, b in local.iter_1315.tape : (i == local.iter_1315.tape_ptr ? (b + local.code_1316[1]) % 256 : b)] :
      local.code_1316[0] == "-"
        ? [for i, b in local.iter_1315.tape : (i == local.iter_1315.tape_ptr ? (b - local.code_1316[1] + 256) % 256 : b)] :
      local.code_1316[0] == ","
        ? [for i, b in local.iter_1315.tape : (i == local.iter_1315.tape_ptr ? local.ascii_lookup[substr(local.input_1316, 0, 1)] : b)]
        : local.iter_1315.tape)

    tape_ptr = (
      local.code_1316[0] == "<"
        ? local.iter_1315.tape_ptr - local.code_1316[1] :
      local.code_1316[0] == ">"
        ? local.iter_1315.tape_ptr + local.code_1316[1]
        : local.iter_1315.tape_ptr)

    code_ptr = 2 + (
      local.code_1316[0] == "["
        ? local.iter_1315.tape[local.iter_1315.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1315.code_ptr)] : local.iter_1315.code_ptr :
      local.code_1316[0] == "]"
        ? local.iter_1315.tape[local.iter_1315.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1315.code_ptr)] : local.iter_1315.code_ptr
        : local.iter_1315.code_ptr)

    steps_taken = 1 + local.iter_1315.steps_taken
  }
}

locals {
  code_1317 = (try(local.iter_1316.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1316.code_ptr, local.iter_1316.code_ptr + 2)
    : [null])

  input_1317 = (local.code_1317[0] == ","
    ? substr(local.input_1316, local.code_1317[1], -1)
    : local.input_1316)

  iter_1317 = try(local.iter_1316.code_ptr >= length(var.code), true) ? local.iter_1316 : {
    output = (local.code_1317[0] == "."
      ? "${local.iter_1316.output}${join("", [for _ in range(local.code_1317[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1316.tape[local.iter_1316.tape_ptr]))])}"
      : local.iter_1316.output)
    
    tape = (
      local.code_1317[0] == "+"
        ? [for i, b in local.iter_1316.tape : (i == local.iter_1316.tape_ptr ? (b + local.code_1317[1]) % 256 : b)] :
      local.code_1317[0] == "-"
        ? [for i, b in local.iter_1316.tape : (i == local.iter_1316.tape_ptr ? (b - local.code_1317[1] + 256) % 256 : b)] :
      local.code_1317[0] == ","
        ? [for i, b in local.iter_1316.tape : (i == local.iter_1316.tape_ptr ? local.ascii_lookup[substr(local.input_1317, 0, 1)] : b)]
        : local.iter_1316.tape)

    tape_ptr = (
      local.code_1317[0] == "<"
        ? local.iter_1316.tape_ptr - local.code_1317[1] :
      local.code_1317[0] == ">"
        ? local.iter_1316.tape_ptr + local.code_1317[1]
        : local.iter_1316.tape_ptr)

    code_ptr = 2 + (
      local.code_1317[0] == "["
        ? local.iter_1316.tape[local.iter_1316.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1316.code_ptr)] : local.iter_1316.code_ptr :
      local.code_1317[0] == "]"
        ? local.iter_1316.tape[local.iter_1316.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1316.code_ptr)] : local.iter_1316.code_ptr
        : local.iter_1316.code_ptr)

    steps_taken = 1 + local.iter_1316.steps_taken
  }
}

locals {
  code_1318 = (try(local.iter_1317.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1317.code_ptr, local.iter_1317.code_ptr + 2)
    : [null])

  input_1318 = (local.code_1318[0] == ","
    ? substr(local.input_1317, local.code_1318[1], -1)
    : local.input_1317)

  iter_1318 = try(local.iter_1317.code_ptr >= length(var.code), true) ? local.iter_1317 : {
    output = (local.code_1318[0] == "."
      ? "${local.iter_1317.output}${join("", [for _ in range(local.code_1318[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1317.tape[local.iter_1317.tape_ptr]))])}"
      : local.iter_1317.output)
    
    tape = (
      local.code_1318[0] == "+"
        ? [for i, b in local.iter_1317.tape : (i == local.iter_1317.tape_ptr ? (b + local.code_1318[1]) % 256 : b)] :
      local.code_1318[0] == "-"
        ? [for i, b in local.iter_1317.tape : (i == local.iter_1317.tape_ptr ? (b - local.code_1318[1] + 256) % 256 : b)] :
      local.code_1318[0] == ","
        ? [for i, b in local.iter_1317.tape : (i == local.iter_1317.tape_ptr ? local.ascii_lookup[substr(local.input_1318, 0, 1)] : b)]
        : local.iter_1317.tape)

    tape_ptr = (
      local.code_1318[0] == "<"
        ? local.iter_1317.tape_ptr - local.code_1318[1] :
      local.code_1318[0] == ">"
        ? local.iter_1317.tape_ptr + local.code_1318[1]
        : local.iter_1317.tape_ptr)

    code_ptr = 2 + (
      local.code_1318[0] == "["
        ? local.iter_1317.tape[local.iter_1317.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1317.code_ptr)] : local.iter_1317.code_ptr :
      local.code_1318[0] == "]"
        ? local.iter_1317.tape[local.iter_1317.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1317.code_ptr)] : local.iter_1317.code_ptr
        : local.iter_1317.code_ptr)

    steps_taken = 1 + local.iter_1317.steps_taken
  }
}

locals {
  code_1319 = (try(local.iter_1318.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1318.code_ptr, local.iter_1318.code_ptr + 2)
    : [null])

  input_1319 = (local.code_1319[0] == ","
    ? substr(local.input_1318, local.code_1319[1], -1)
    : local.input_1318)

  iter_1319 = try(local.iter_1318.code_ptr >= length(var.code), true) ? local.iter_1318 : {
    output = (local.code_1319[0] == "."
      ? "${local.iter_1318.output}${join("", [for _ in range(local.code_1319[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1318.tape[local.iter_1318.tape_ptr]))])}"
      : local.iter_1318.output)
    
    tape = (
      local.code_1319[0] == "+"
        ? [for i, b in local.iter_1318.tape : (i == local.iter_1318.tape_ptr ? (b + local.code_1319[1]) % 256 : b)] :
      local.code_1319[0] == "-"
        ? [for i, b in local.iter_1318.tape : (i == local.iter_1318.tape_ptr ? (b - local.code_1319[1] + 256) % 256 : b)] :
      local.code_1319[0] == ","
        ? [for i, b in local.iter_1318.tape : (i == local.iter_1318.tape_ptr ? local.ascii_lookup[substr(local.input_1319, 0, 1)] : b)]
        : local.iter_1318.tape)

    tape_ptr = (
      local.code_1319[0] == "<"
        ? local.iter_1318.tape_ptr - local.code_1319[1] :
      local.code_1319[0] == ">"
        ? local.iter_1318.tape_ptr + local.code_1319[1]
        : local.iter_1318.tape_ptr)

    code_ptr = 2 + (
      local.code_1319[0] == "["
        ? local.iter_1318.tape[local.iter_1318.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1318.code_ptr)] : local.iter_1318.code_ptr :
      local.code_1319[0] == "]"
        ? local.iter_1318.tape[local.iter_1318.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1318.code_ptr)] : local.iter_1318.code_ptr
        : local.iter_1318.code_ptr)

    steps_taken = 1 + local.iter_1318.steps_taken
  }
}

locals {
  code_1320 = (try(local.iter_1319.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1319.code_ptr, local.iter_1319.code_ptr + 2)
    : [null])

  input_1320 = (local.code_1320[0] == ","
    ? substr(local.input_1319, local.code_1320[1], -1)
    : local.input_1319)

  iter_1320 = try(local.iter_1319.code_ptr >= length(var.code), true) ? local.iter_1319 : {
    output = (local.code_1320[0] == "."
      ? "${local.iter_1319.output}${join("", [for _ in range(local.code_1320[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1319.tape[local.iter_1319.tape_ptr]))])}"
      : local.iter_1319.output)
    
    tape = (
      local.code_1320[0] == "+"
        ? [for i, b in local.iter_1319.tape : (i == local.iter_1319.tape_ptr ? (b + local.code_1320[1]) % 256 : b)] :
      local.code_1320[0] == "-"
        ? [for i, b in local.iter_1319.tape : (i == local.iter_1319.tape_ptr ? (b - local.code_1320[1] + 256) % 256 : b)] :
      local.code_1320[0] == ","
        ? [for i, b in local.iter_1319.tape : (i == local.iter_1319.tape_ptr ? local.ascii_lookup[substr(local.input_1320, 0, 1)] : b)]
        : local.iter_1319.tape)

    tape_ptr = (
      local.code_1320[0] == "<"
        ? local.iter_1319.tape_ptr - local.code_1320[1] :
      local.code_1320[0] == ">"
        ? local.iter_1319.tape_ptr + local.code_1320[1]
        : local.iter_1319.tape_ptr)

    code_ptr = 2 + (
      local.code_1320[0] == "["
        ? local.iter_1319.tape[local.iter_1319.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1319.code_ptr)] : local.iter_1319.code_ptr :
      local.code_1320[0] == "]"
        ? local.iter_1319.tape[local.iter_1319.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1319.code_ptr)] : local.iter_1319.code_ptr
        : local.iter_1319.code_ptr)

    steps_taken = 1 + local.iter_1319.steps_taken
  }
}

locals {
  code_1321 = (try(local.iter_1320.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1320.code_ptr, local.iter_1320.code_ptr + 2)
    : [null])

  input_1321 = (local.code_1321[0] == ","
    ? substr(local.input_1320, local.code_1321[1], -1)
    : local.input_1320)

  iter_1321 = try(local.iter_1320.code_ptr >= length(var.code), true) ? local.iter_1320 : {
    output = (local.code_1321[0] == "."
      ? "${local.iter_1320.output}${join("", [for _ in range(local.code_1321[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1320.tape[local.iter_1320.tape_ptr]))])}"
      : local.iter_1320.output)
    
    tape = (
      local.code_1321[0] == "+"
        ? [for i, b in local.iter_1320.tape : (i == local.iter_1320.tape_ptr ? (b + local.code_1321[1]) % 256 : b)] :
      local.code_1321[0] == "-"
        ? [for i, b in local.iter_1320.tape : (i == local.iter_1320.tape_ptr ? (b - local.code_1321[1] + 256) % 256 : b)] :
      local.code_1321[0] == ","
        ? [for i, b in local.iter_1320.tape : (i == local.iter_1320.tape_ptr ? local.ascii_lookup[substr(local.input_1321, 0, 1)] : b)]
        : local.iter_1320.tape)

    tape_ptr = (
      local.code_1321[0] == "<"
        ? local.iter_1320.tape_ptr - local.code_1321[1] :
      local.code_1321[0] == ">"
        ? local.iter_1320.tape_ptr + local.code_1321[1]
        : local.iter_1320.tape_ptr)

    code_ptr = 2 + (
      local.code_1321[0] == "["
        ? local.iter_1320.tape[local.iter_1320.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1320.code_ptr)] : local.iter_1320.code_ptr :
      local.code_1321[0] == "]"
        ? local.iter_1320.tape[local.iter_1320.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1320.code_ptr)] : local.iter_1320.code_ptr
        : local.iter_1320.code_ptr)

    steps_taken = 1 + local.iter_1320.steps_taken
  }
}

locals {
  code_1322 = (try(local.iter_1321.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1321.code_ptr, local.iter_1321.code_ptr + 2)
    : [null])

  input_1322 = (local.code_1322[0] == ","
    ? substr(local.input_1321, local.code_1322[1], -1)
    : local.input_1321)

  iter_1322 = try(local.iter_1321.code_ptr >= length(var.code), true) ? local.iter_1321 : {
    output = (local.code_1322[0] == "."
      ? "${local.iter_1321.output}${join("", [for _ in range(local.code_1322[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1321.tape[local.iter_1321.tape_ptr]))])}"
      : local.iter_1321.output)
    
    tape = (
      local.code_1322[0] == "+"
        ? [for i, b in local.iter_1321.tape : (i == local.iter_1321.tape_ptr ? (b + local.code_1322[1]) % 256 : b)] :
      local.code_1322[0] == "-"
        ? [for i, b in local.iter_1321.tape : (i == local.iter_1321.tape_ptr ? (b - local.code_1322[1] + 256) % 256 : b)] :
      local.code_1322[0] == ","
        ? [for i, b in local.iter_1321.tape : (i == local.iter_1321.tape_ptr ? local.ascii_lookup[substr(local.input_1322, 0, 1)] : b)]
        : local.iter_1321.tape)

    tape_ptr = (
      local.code_1322[0] == "<"
        ? local.iter_1321.tape_ptr - local.code_1322[1] :
      local.code_1322[0] == ">"
        ? local.iter_1321.tape_ptr + local.code_1322[1]
        : local.iter_1321.tape_ptr)

    code_ptr = 2 + (
      local.code_1322[0] == "["
        ? local.iter_1321.tape[local.iter_1321.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1321.code_ptr)] : local.iter_1321.code_ptr :
      local.code_1322[0] == "]"
        ? local.iter_1321.tape[local.iter_1321.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1321.code_ptr)] : local.iter_1321.code_ptr
        : local.iter_1321.code_ptr)

    steps_taken = 1 + local.iter_1321.steps_taken
  }
}

locals {
  code_1323 = (try(local.iter_1322.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1322.code_ptr, local.iter_1322.code_ptr + 2)
    : [null])

  input_1323 = (local.code_1323[0] == ","
    ? substr(local.input_1322, local.code_1323[1], -1)
    : local.input_1322)

  iter_1323 = try(local.iter_1322.code_ptr >= length(var.code), true) ? local.iter_1322 : {
    output = (local.code_1323[0] == "."
      ? "${local.iter_1322.output}${join("", [for _ in range(local.code_1323[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1322.tape[local.iter_1322.tape_ptr]))])}"
      : local.iter_1322.output)
    
    tape = (
      local.code_1323[0] == "+"
        ? [for i, b in local.iter_1322.tape : (i == local.iter_1322.tape_ptr ? (b + local.code_1323[1]) % 256 : b)] :
      local.code_1323[0] == "-"
        ? [for i, b in local.iter_1322.tape : (i == local.iter_1322.tape_ptr ? (b - local.code_1323[1] + 256) % 256 : b)] :
      local.code_1323[0] == ","
        ? [for i, b in local.iter_1322.tape : (i == local.iter_1322.tape_ptr ? local.ascii_lookup[substr(local.input_1323, 0, 1)] : b)]
        : local.iter_1322.tape)

    tape_ptr = (
      local.code_1323[0] == "<"
        ? local.iter_1322.tape_ptr - local.code_1323[1] :
      local.code_1323[0] == ">"
        ? local.iter_1322.tape_ptr + local.code_1323[1]
        : local.iter_1322.tape_ptr)

    code_ptr = 2 + (
      local.code_1323[0] == "["
        ? local.iter_1322.tape[local.iter_1322.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1322.code_ptr)] : local.iter_1322.code_ptr :
      local.code_1323[0] == "]"
        ? local.iter_1322.tape[local.iter_1322.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1322.code_ptr)] : local.iter_1322.code_ptr
        : local.iter_1322.code_ptr)

    steps_taken = 1 + local.iter_1322.steps_taken
  }
}

locals {
  code_1324 = (try(local.iter_1323.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1323.code_ptr, local.iter_1323.code_ptr + 2)
    : [null])

  input_1324 = (local.code_1324[0] == ","
    ? substr(local.input_1323, local.code_1324[1], -1)
    : local.input_1323)

  iter_1324 = try(local.iter_1323.code_ptr >= length(var.code), true) ? local.iter_1323 : {
    output = (local.code_1324[0] == "."
      ? "${local.iter_1323.output}${join("", [for _ in range(local.code_1324[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1323.tape[local.iter_1323.tape_ptr]))])}"
      : local.iter_1323.output)
    
    tape = (
      local.code_1324[0] == "+"
        ? [for i, b in local.iter_1323.tape : (i == local.iter_1323.tape_ptr ? (b + local.code_1324[1]) % 256 : b)] :
      local.code_1324[0] == "-"
        ? [for i, b in local.iter_1323.tape : (i == local.iter_1323.tape_ptr ? (b - local.code_1324[1] + 256) % 256 : b)] :
      local.code_1324[0] == ","
        ? [for i, b in local.iter_1323.tape : (i == local.iter_1323.tape_ptr ? local.ascii_lookup[substr(local.input_1324, 0, 1)] : b)]
        : local.iter_1323.tape)

    tape_ptr = (
      local.code_1324[0] == "<"
        ? local.iter_1323.tape_ptr - local.code_1324[1] :
      local.code_1324[0] == ">"
        ? local.iter_1323.tape_ptr + local.code_1324[1]
        : local.iter_1323.tape_ptr)

    code_ptr = 2 + (
      local.code_1324[0] == "["
        ? local.iter_1323.tape[local.iter_1323.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1323.code_ptr)] : local.iter_1323.code_ptr :
      local.code_1324[0] == "]"
        ? local.iter_1323.tape[local.iter_1323.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1323.code_ptr)] : local.iter_1323.code_ptr
        : local.iter_1323.code_ptr)

    steps_taken = 1 + local.iter_1323.steps_taken
  }
}

locals {
  code_1325 = (try(local.iter_1324.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1324.code_ptr, local.iter_1324.code_ptr + 2)
    : [null])

  input_1325 = (local.code_1325[0] == ","
    ? substr(local.input_1324, local.code_1325[1], -1)
    : local.input_1324)

  iter_1325 = try(local.iter_1324.code_ptr >= length(var.code), true) ? local.iter_1324 : {
    output = (local.code_1325[0] == "."
      ? "${local.iter_1324.output}${join("", [for _ in range(local.code_1325[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1324.tape[local.iter_1324.tape_ptr]))])}"
      : local.iter_1324.output)
    
    tape = (
      local.code_1325[0] == "+"
        ? [for i, b in local.iter_1324.tape : (i == local.iter_1324.tape_ptr ? (b + local.code_1325[1]) % 256 : b)] :
      local.code_1325[0] == "-"
        ? [for i, b in local.iter_1324.tape : (i == local.iter_1324.tape_ptr ? (b - local.code_1325[1] + 256) % 256 : b)] :
      local.code_1325[0] == ","
        ? [for i, b in local.iter_1324.tape : (i == local.iter_1324.tape_ptr ? local.ascii_lookup[substr(local.input_1325, 0, 1)] : b)]
        : local.iter_1324.tape)

    tape_ptr = (
      local.code_1325[0] == "<"
        ? local.iter_1324.tape_ptr - local.code_1325[1] :
      local.code_1325[0] == ">"
        ? local.iter_1324.tape_ptr + local.code_1325[1]
        : local.iter_1324.tape_ptr)

    code_ptr = 2 + (
      local.code_1325[0] == "["
        ? local.iter_1324.tape[local.iter_1324.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1324.code_ptr)] : local.iter_1324.code_ptr :
      local.code_1325[0] == "]"
        ? local.iter_1324.tape[local.iter_1324.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1324.code_ptr)] : local.iter_1324.code_ptr
        : local.iter_1324.code_ptr)

    steps_taken = 1 + local.iter_1324.steps_taken
  }
}

locals {
  code_1326 = (try(local.iter_1325.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1325.code_ptr, local.iter_1325.code_ptr + 2)
    : [null])

  input_1326 = (local.code_1326[0] == ","
    ? substr(local.input_1325, local.code_1326[1], -1)
    : local.input_1325)

  iter_1326 = try(local.iter_1325.code_ptr >= length(var.code), true) ? local.iter_1325 : {
    output = (local.code_1326[0] == "."
      ? "${local.iter_1325.output}${join("", [for _ in range(local.code_1326[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1325.tape[local.iter_1325.tape_ptr]))])}"
      : local.iter_1325.output)
    
    tape = (
      local.code_1326[0] == "+"
        ? [for i, b in local.iter_1325.tape : (i == local.iter_1325.tape_ptr ? (b + local.code_1326[1]) % 256 : b)] :
      local.code_1326[0] == "-"
        ? [for i, b in local.iter_1325.tape : (i == local.iter_1325.tape_ptr ? (b - local.code_1326[1] + 256) % 256 : b)] :
      local.code_1326[0] == ","
        ? [for i, b in local.iter_1325.tape : (i == local.iter_1325.tape_ptr ? local.ascii_lookup[substr(local.input_1326, 0, 1)] : b)]
        : local.iter_1325.tape)

    tape_ptr = (
      local.code_1326[0] == "<"
        ? local.iter_1325.tape_ptr - local.code_1326[1] :
      local.code_1326[0] == ">"
        ? local.iter_1325.tape_ptr + local.code_1326[1]
        : local.iter_1325.tape_ptr)

    code_ptr = 2 + (
      local.code_1326[0] == "["
        ? local.iter_1325.tape[local.iter_1325.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1325.code_ptr)] : local.iter_1325.code_ptr :
      local.code_1326[0] == "]"
        ? local.iter_1325.tape[local.iter_1325.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1325.code_ptr)] : local.iter_1325.code_ptr
        : local.iter_1325.code_ptr)

    steps_taken = 1 + local.iter_1325.steps_taken
  }
}

locals {
  code_1327 = (try(local.iter_1326.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1326.code_ptr, local.iter_1326.code_ptr + 2)
    : [null])

  input_1327 = (local.code_1327[0] == ","
    ? substr(local.input_1326, local.code_1327[1], -1)
    : local.input_1326)

  iter_1327 = try(local.iter_1326.code_ptr >= length(var.code), true) ? local.iter_1326 : {
    output = (local.code_1327[0] == "."
      ? "${local.iter_1326.output}${join("", [for _ in range(local.code_1327[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1326.tape[local.iter_1326.tape_ptr]))])}"
      : local.iter_1326.output)
    
    tape = (
      local.code_1327[0] == "+"
        ? [for i, b in local.iter_1326.tape : (i == local.iter_1326.tape_ptr ? (b + local.code_1327[1]) % 256 : b)] :
      local.code_1327[0] == "-"
        ? [for i, b in local.iter_1326.tape : (i == local.iter_1326.tape_ptr ? (b - local.code_1327[1] + 256) % 256 : b)] :
      local.code_1327[0] == ","
        ? [for i, b in local.iter_1326.tape : (i == local.iter_1326.tape_ptr ? local.ascii_lookup[substr(local.input_1327, 0, 1)] : b)]
        : local.iter_1326.tape)

    tape_ptr = (
      local.code_1327[0] == "<"
        ? local.iter_1326.tape_ptr - local.code_1327[1] :
      local.code_1327[0] == ">"
        ? local.iter_1326.tape_ptr + local.code_1327[1]
        : local.iter_1326.tape_ptr)

    code_ptr = 2 + (
      local.code_1327[0] == "["
        ? local.iter_1326.tape[local.iter_1326.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1326.code_ptr)] : local.iter_1326.code_ptr :
      local.code_1327[0] == "]"
        ? local.iter_1326.tape[local.iter_1326.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1326.code_ptr)] : local.iter_1326.code_ptr
        : local.iter_1326.code_ptr)

    steps_taken = 1 + local.iter_1326.steps_taken
  }
}

locals {
  code_1328 = (try(local.iter_1327.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1327.code_ptr, local.iter_1327.code_ptr + 2)
    : [null])

  input_1328 = (local.code_1328[0] == ","
    ? substr(local.input_1327, local.code_1328[1], -1)
    : local.input_1327)

  iter_1328 = try(local.iter_1327.code_ptr >= length(var.code), true) ? local.iter_1327 : {
    output = (local.code_1328[0] == "."
      ? "${local.iter_1327.output}${join("", [for _ in range(local.code_1328[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1327.tape[local.iter_1327.tape_ptr]))])}"
      : local.iter_1327.output)
    
    tape = (
      local.code_1328[0] == "+"
        ? [for i, b in local.iter_1327.tape : (i == local.iter_1327.tape_ptr ? (b + local.code_1328[1]) % 256 : b)] :
      local.code_1328[0] == "-"
        ? [for i, b in local.iter_1327.tape : (i == local.iter_1327.tape_ptr ? (b - local.code_1328[1] + 256) % 256 : b)] :
      local.code_1328[0] == ","
        ? [for i, b in local.iter_1327.tape : (i == local.iter_1327.tape_ptr ? local.ascii_lookup[substr(local.input_1328, 0, 1)] : b)]
        : local.iter_1327.tape)

    tape_ptr = (
      local.code_1328[0] == "<"
        ? local.iter_1327.tape_ptr - local.code_1328[1] :
      local.code_1328[0] == ">"
        ? local.iter_1327.tape_ptr + local.code_1328[1]
        : local.iter_1327.tape_ptr)

    code_ptr = 2 + (
      local.code_1328[0] == "["
        ? local.iter_1327.tape[local.iter_1327.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1327.code_ptr)] : local.iter_1327.code_ptr :
      local.code_1328[0] == "]"
        ? local.iter_1327.tape[local.iter_1327.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1327.code_ptr)] : local.iter_1327.code_ptr
        : local.iter_1327.code_ptr)

    steps_taken = 1 + local.iter_1327.steps_taken
  }
}

locals {
  code_1329 = (try(local.iter_1328.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1328.code_ptr, local.iter_1328.code_ptr + 2)
    : [null])

  input_1329 = (local.code_1329[0] == ","
    ? substr(local.input_1328, local.code_1329[1], -1)
    : local.input_1328)

  iter_1329 = try(local.iter_1328.code_ptr >= length(var.code), true) ? local.iter_1328 : {
    output = (local.code_1329[0] == "."
      ? "${local.iter_1328.output}${join("", [for _ in range(local.code_1329[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1328.tape[local.iter_1328.tape_ptr]))])}"
      : local.iter_1328.output)
    
    tape = (
      local.code_1329[0] == "+"
        ? [for i, b in local.iter_1328.tape : (i == local.iter_1328.tape_ptr ? (b + local.code_1329[1]) % 256 : b)] :
      local.code_1329[0] == "-"
        ? [for i, b in local.iter_1328.tape : (i == local.iter_1328.tape_ptr ? (b - local.code_1329[1] + 256) % 256 : b)] :
      local.code_1329[0] == ","
        ? [for i, b in local.iter_1328.tape : (i == local.iter_1328.tape_ptr ? local.ascii_lookup[substr(local.input_1329, 0, 1)] : b)]
        : local.iter_1328.tape)

    tape_ptr = (
      local.code_1329[0] == "<"
        ? local.iter_1328.tape_ptr - local.code_1329[1] :
      local.code_1329[0] == ">"
        ? local.iter_1328.tape_ptr + local.code_1329[1]
        : local.iter_1328.tape_ptr)

    code_ptr = 2 + (
      local.code_1329[0] == "["
        ? local.iter_1328.tape[local.iter_1328.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1328.code_ptr)] : local.iter_1328.code_ptr :
      local.code_1329[0] == "]"
        ? local.iter_1328.tape[local.iter_1328.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1328.code_ptr)] : local.iter_1328.code_ptr
        : local.iter_1328.code_ptr)

    steps_taken = 1 + local.iter_1328.steps_taken
  }
}

locals {
  code_1330 = (try(local.iter_1329.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1329.code_ptr, local.iter_1329.code_ptr + 2)
    : [null])

  input_1330 = (local.code_1330[0] == ","
    ? substr(local.input_1329, local.code_1330[1], -1)
    : local.input_1329)

  iter_1330 = try(local.iter_1329.code_ptr >= length(var.code), true) ? local.iter_1329 : {
    output = (local.code_1330[0] == "."
      ? "${local.iter_1329.output}${join("", [for _ in range(local.code_1330[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1329.tape[local.iter_1329.tape_ptr]))])}"
      : local.iter_1329.output)
    
    tape = (
      local.code_1330[0] == "+"
        ? [for i, b in local.iter_1329.tape : (i == local.iter_1329.tape_ptr ? (b + local.code_1330[1]) % 256 : b)] :
      local.code_1330[0] == "-"
        ? [for i, b in local.iter_1329.tape : (i == local.iter_1329.tape_ptr ? (b - local.code_1330[1] + 256) % 256 : b)] :
      local.code_1330[0] == ","
        ? [for i, b in local.iter_1329.tape : (i == local.iter_1329.tape_ptr ? local.ascii_lookup[substr(local.input_1330, 0, 1)] : b)]
        : local.iter_1329.tape)

    tape_ptr = (
      local.code_1330[0] == "<"
        ? local.iter_1329.tape_ptr - local.code_1330[1] :
      local.code_1330[0] == ">"
        ? local.iter_1329.tape_ptr + local.code_1330[1]
        : local.iter_1329.tape_ptr)

    code_ptr = 2 + (
      local.code_1330[0] == "["
        ? local.iter_1329.tape[local.iter_1329.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1329.code_ptr)] : local.iter_1329.code_ptr :
      local.code_1330[0] == "]"
        ? local.iter_1329.tape[local.iter_1329.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1329.code_ptr)] : local.iter_1329.code_ptr
        : local.iter_1329.code_ptr)

    steps_taken = 1 + local.iter_1329.steps_taken
  }
}

locals {
  code_1331 = (try(local.iter_1330.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1330.code_ptr, local.iter_1330.code_ptr + 2)
    : [null])

  input_1331 = (local.code_1331[0] == ","
    ? substr(local.input_1330, local.code_1331[1], -1)
    : local.input_1330)

  iter_1331 = try(local.iter_1330.code_ptr >= length(var.code), true) ? local.iter_1330 : {
    output = (local.code_1331[0] == "."
      ? "${local.iter_1330.output}${join("", [for _ in range(local.code_1331[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1330.tape[local.iter_1330.tape_ptr]))])}"
      : local.iter_1330.output)
    
    tape = (
      local.code_1331[0] == "+"
        ? [for i, b in local.iter_1330.tape : (i == local.iter_1330.tape_ptr ? (b + local.code_1331[1]) % 256 : b)] :
      local.code_1331[0] == "-"
        ? [for i, b in local.iter_1330.tape : (i == local.iter_1330.tape_ptr ? (b - local.code_1331[1] + 256) % 256 : b)] :
      local.code_1331[0] == ","
        ? [for i, b in local.iter_1330.tape : (i == local.iter_1330.tape_ptr ? local.ascii_lookup[substr(local.input_1331, 0, 1)] : b)]
        : local.iter_1330.tape)

    tape_ptr = (
      local.code_1331[0] == "<"
        ? local.iter_1330.tape_ptr - local.code_1331[1] :
      local.code_1331[0] == ">"
        ? local.iter_1330.tape_ptr + local.code_1331[1]
        : local.iter_1330.tape_ptr)

    code_ptr = 2 + (
      local.code_1331[0] == "["
        ? local.iter_1330.tape[local.iter_1330.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1330.code_ptr)] : local.iter_1330.code_ptr :
      local.code_1331[0] == "]"
        ? local.iter_1330.tape[local.iter_1330.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1330.code_ptr)] : local.iter_1330.code_ptr
        : local.iter_1330.code_ptr)

    steps_taken = 1 + local.iter_1330.steps_taken
  }
}

locals {
  code_1332 = (try(local.iter_1331.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1331.code_ptr, local.iter_1331.code_ptr + 2)
    : [null])

  input_1332 = (local.code_1332[0] == ","
    ? substr(local.input_1331, local.code_1332[1], -1)
    : local.input_1331)

  iter_1332 = try(local.iter_1331.code_ptr >= length(var.code), true) ? local.iter_1331 : {
    output = (local.code_1332[0] == "."
      ? "${local.iter_1331.output}${join("", [for _ in range(local.code_1332[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1331.tape[local.iter_1331.tape_ptr]))])}"
      : local.iter_1331.output)
    
    tape = (
      local.code_1332[0] == "+"
        ? [for i, b in local.iter_1331.tape : (i == local.iter_1331.tape_ptr ? (b + local.code_1332[1]) % 256 : b)] :
      local.code_1332[0] == "-"
        ? [for i, b in local.iter_1331.tape : (i == local.iter_1331.tape_ptr ? (b - local.code_1332[1] + 256) % 256 : b)] :
      local.code_1332[0] == ","
        ? [for i, b in local.iter_1331.tape : (i == local.iter_1331.tape_ptr ? local.ascii_lookup[substr(local.input_1332, 0, 1)] : b)]
        : local.iter_1331.tape)

    tape_ptr = (
      local.code_1332[0] == "<"
        ? local.iter_1331.tape_ptr - local.code_1332[1] :
      local.code_1332[0] == ">"
        ? local.iter_1331.tape_ptr + local.code_1332[1]
        : local.iter_1331.tape_ptr)

    code_ptr = 2 + (
      local.code_1332[0] == "["
        ? local.iter_1331.tape[local.iter_1331.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1331.code_ptr)] : local.iter_1331.code_ptr :
      local.code_1332[0] == "]"
        ? local.iter_1331.tape[local.iter_1331.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1331.code_ptr)] : local.iter_1331.code_ptr
        : local.iter_1331.code_ptr)

    steps_taken = 1 + local.iter_1331.steps_taken
  }
}

locals {
  code_1333 = (try(local.iter_1332.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1332.code_ptr, local.iter_1332.code_ptr + 2)
    : [null])

  input_1333 = (local.code_1333[0] == ","
    ? substr(local.input_1332, local.code_1333[1], -1)
    : local.input_1332)

  iter_1333 = try(local.iter_1332.code_ptr >= length(var.code), true) ? local.iter_1332 : {
    output = (local.code_1333[0] == "."
      ? "${local.iter_1332.output}${join("", [for _ in range(local.code_1333[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1332.tape[local.iter_1332.tape_ptr]))])}"
      : local.iter_1332.output)
    
    tape = (
      local.code_1333[0] == "+"
        ? [for i, b in local.iter_1332.tape : (i == local.iter_1332.tape_ptr ? (b + local.code_1333[1]) % 256 : b)] :
      local.code_1333[0] == "-"
        ? [for i, b in local.iter_1332.tape : (i == local.iter_1332.tape_ptr ? (b - local.code_1333[1] + 256) % 256 : b)] :
      local.code_1333[0] == ","
        ? [for i, b in local.iter_1332.tape : (i == local.iter_1332.tape_ptr ? local.ascii_lookup[substr(local.input_1333, 0, 1)] : b)]
        : local.iter_1332.tape)

    tape_ptr = (
      local.code_1333[0] == "<"
        ? local.iter_1332.tape_ptr - local.code_1333[1] :
      local.code_1333[0] == ">"
        ? local.iter_1332.tape_ptr + local.code_1333[1]
        : local.iter_1332.tape_ptr)

    code_ptr = 2 + (
      local.code_1333[0] == "["
        ? local.iter_1332.tape[local.iter_1332.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1332.code_ptr)] : local.iter_1332.code_ptr :
      local.code_1333[0] == "]"
        ? local.iter_1332.tape[local.iter_1332.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1332.code_ptr)] : local.iter_1332.code_ptr
        : local.iter_1332.code_ptr)

    steps_taken = 1 + local.iter_1332.steps_taken
  }
}

locals {
  code_1334 = (try(local.iter_1333.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1333.code_ptr, local.iter_1333.code_ptr + 2)
    : [null])

  input_1334 = (local.code_1334[0] == ","
    ? substr(local.input_1333, local.code_1334[1], -1)
    : local.input_1333)

  iter_1334 = try(local.iter_1333.code_ptr >= length(var.code), true) ? local.iter_1333 : {
    output = (local.code_1334[0] == "."
      ? "${local.iter_1333.output}${join("", [for _ in range(local.code_1334[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1333.tape[local.iter_1333.tape_ptr]))])}"
      : local.iter_1333.output)
    
    tape = (
      local.code_1334[0] == "+"
        ? [for i, b in local.iter_1333.tape : (i == local.iter_1333.tape_ptr ? (b + local.code_1334[1]) % 256 : b)] :
      local.code_1334[0] == "-"
        ? [for i, b in local.iter_1333.tape : (i == local.iter_1333.tape_ptr ? (b - local.code_1334[1] + 256) % 256 : b)] :
      local.code_1334[0] == ","
        ? [for i, b in local.iter_1333.tape : (i == local.iter_1333.tape_ptr ? local.ascii_lookup[substr(local.input_1334, 0, 1)] : b)]
        : local.iter_1333.tape)

    tape_ptr = (
      local.code_1334[0] == "<"
        ? local.iter_1333.tape_ptr - local.code_1334[1] :
      local.code_1334[0] == ">"
        ? local.iter_1333.tape_ptr + local.code_1334[1]
        : local.iter_1333.tape_ptr)

    code_ptr = 2 + (
      local.code_1334[0] == "["
        ? local.iter_1333.tape[local.iter_1333.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1333.code_ptr)] : local.iter_1333.code_ptr :
      local.code_1334[0] == "]"
        ? local.iter_1333.tape[local.iter_1333.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1333.code_ptr)] : local.iter_1333.code_ptr
        : local.iter_1333.code_ptr)

    steps_taken = 1 + local.iter_1333.steps_taken
  }
}

locals {
  code_1335 = (try(local.iter_1334.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1334.code_ptr, local.iter_1334.code_ptr + 2)
    : [null])

  input_1335 = (local.code_1335[0] == ","
    ? substr(local.input_1334, local.code_1335[1], -1)
    : local.input_1334)

  iter_1335 = try(local.iter_1334.code_ptr >= length(var.code), true) ? local.iter_1334 : {
    output = (local.code_1335[0] == "."
      ? "${local.iter_1334.output}${join("", [for _ in range(local.code_1335[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1334.tape[local.iter_1334.tape_ptr]))])}"
      : local.iter_1334.output)
    
    tape = (
      local.code_1335[0] == "+"
        ? [for i, b in local.iter_1334.tape : (i == local.iter_1334.tape_ptr ? (b + local.code_1335[1]) % 256 : b)] :
      local.code_1335[0] == "-"
        ? [for i, b in local.iter_1334.tape : (i == local.iter_1334.tape_ptr ? (b - local.code_1335[1] + 256) % 256 : b)] :
      local.code_1335[0] == ","
        ? [for i, b in local.iter_1334.tape : (i == local.iter_1334.tape_ptr ? local.ascii_lookup[substr(local.input_1335, 0, 1)] : b)]
        : local.iter_1334.tape)

    tape_ptr = (
      local.code_1335[0] == "<"
        ? local.iter_1334.tape_ptr - local.code_1335[1] :
      local.code_1335[0] == ">"
        ? local.iter_1334.tape_ptr + local.code_1335[1]
        : local.iter_1334.tape_ptr)

    code_ptr = 2 + (
      local.code_1335[0] == "["
        ? local.iter_1334.tape[local.iter_1334.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1334.code_ptr)] : local.iter_1334.code_ptr :
      local.code_1335[0] == "]"
        ? local.iter_1334.tape[local.iter_1334.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1334.code_ptr)] : local.iter_1334.code_ptr
        : local.iter_1334.code_ptr)

    steps_taken = 1 + local.iter_1334.steps_taken
  }
}

locals {
  code_1336 = (try(local.iter_1335.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1335.code_ptr, local.iter_1335.code_ptr + 2)
    : [null])

  input_1336 = (local.code_1336[0] == ","
    ? substr(local.input_1335, local.code_1336[1], -1)
    : local.input_1335)

  iter_1336 = try(local.iter_1335.code_ptr >= length(var.code), true) ? local.iter_1335 : {
    output = (local.code_1336[0] == "."
      ? "${local.iter_1335.output}${join("", [for _ in range(local.code_1336[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1335.tape[local.iter_1335.tape_ptr]))])}"
      : local.iter_1335.output)
    
    tape = (
      local.code_1336[0] == "+"
        ? [for i, b in local.iter_1335.tape : (i == local.iter_1335.tape_ptr ? (b + local.code_1336[1]) % 256 : b)] :
      local.code_1336[0] == "-"
        ? [for i, b in local.iter_1335.tape : (i == local.iter_1335.tape_ptr ? (b - local.code_1336[1] + 256) % 256 : b)] :
      local.code_1336[0] == ","
        ? [for i, b in local.iter_1335.tape : (i == local.iter_1335.tape_ptr ? local.ascii_lookup[substr(local.input_1336, 0, 1)] : b)]
        : local.iter_1335.tape)

    tape_ptr = (
      local.code_1336[0] == "<"
        ? local.iter_1335.tape_ptr - local.code_1336[1] :
      local.code_1336[0] == ">"
        ? local.iter_1335.tape_ptr + local.code_1336[1]
        : local.iter_1335.tape_ptr)

    code_ptr = 2 + (
      local.code_1336[0] == "["
        ? local.iter_1335.tape[local.iter_1335.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1335.code_ptr)] : local.iter_1335.code_ptr :
      local.code_1336[0] == "]"
        ? local.iter_1335.tape[local.iter_1335.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1335.code_ptr)] : local.iter_1335.code_ptr
        : local.iter_1335.code_ptr)

    steps_taken = 1 + local.iter_1335.steps_taken
  }
}

locals {
  code_1337 = (try(local.iter_1336.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1336.code_ptr, local.iter_1336.code_ptr + 2)
    : [null])

  input_1337 = (local.code_1337[0] == ","
    ? substr(local.input_1336, local.code_1337[1], -1)
    : local.input_1336)

  iter_1337 = try(local.iter_1336.code_ptr >= length(var.code), true) ? local.iter_1336 : {
    output = (local.code_1337[0] == "."
      ? "${local.iter_1336.output}${join("", [for _ in range(local.code_1337[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1336.tape[local.iter_1336.tape_ptr]))])}"
      : local.iter_1336.output)
    
    tape = (
      local.code_1337[0] == "+"
        ? [for i, b in local.iter_1336.tape : (i == local.iter_1336.tape_ptr ? (b + local.code_1337[1]) % 256 : b)] :
      local.code_1337[0] == "-"
        ? [for i, b in local.iter_1336.tape : (i == local.iter_1336.tape_ptr ? (b - local.code_1337[1] + 256) % 256 : b)] :
      local.code_1337[0] == ","
        ? [for i, b in local.iter_1336.tape : (i == local.iter_1336.tape_ptr ? local.ascii_lookup[substr(local.input_1337, 0, 1)] : b)]
        : local.iter_1336.tape)

    tape_ptr = (
      local.code_1337[0] == "<"
        ? local.iter_1336.tape_ptr - local.code_1337[1] :
      local.code_1337[0] == ">"
        ? local.iter_1336.tape_ptr + local.code_1337[1]
        : local.iter_1336.tape_ptr)

    code_ptr = 2 + (
      local.code_1337[0] == "["
        ? local.iter_1336.tape[local.iter_1336.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1336.code_ptr)] : local.iter_1336.code_ptr :
      local.code_1337[0] == "]"
        ? local.iter_1336.tape[local.iter_1336.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1336.code_ptr)] : local.iter_1336.code_ptr
        : local.iter_1336.code_ptr)

    steps_taken = 1 + local.iter_1336.steps_taken
  }
}

locals {
  code_1338 = (try(local.iter_1337.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1337.code_ptr, local.iter_1337.code_ptr + 2)
    : [null])

  input_1338 = (local.code_1338[0] == ","
    ? substr(local.input_1337, local.code_1338[1], -1)
    : local.input_1337)

  iter_1338 = try(local.iter_1337.code_ptr >= length(var.code), true) ? local.iter_1337 : {
    output = (local.code_1338[0] == "."
      ? "${local.iter_1337.output}${join("", [for _ in range(local.code_1338[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1337.tape[local.iter_1337.tape_ptr]))])}"
      : local.iter_1337.output)
    
    tape = (
      local.code_1338[0] == "+"
        ? [for i, b in local.iter_1337.tape : (i == local.iter_1337.tape_ptr ? (b + local.code_1338[1]) % 256 : b)] :
      local.code_1338[0] == "-"
        ? [for i, b in local.iter_1337.tape : (i == local.iter_1337.tape_ptr ? (b - local.code_1338[1] + 256) % 256 : b)] :
      local.code_1338[0] == ","
        ? [for i, b in local.iter_1337.tape : (i == local.iter_1337.tape_ptr ? local.ascii_lookup[substr(local.input_1338, 0, 1)] : b)]
        : local.iter_1337.tape)

    tape_ptr = (
      local.code_1338[0] == "<"
        ? local.iter_1337.tape_ptr - local.code_1338[1] :
      local.code_1338[0] == ">"
        ? local.iter_1337.tape_ptr + local.code_1338[1]
        : local.iter_1337.tape_ptr)

    code_ptr = 2 + (
      local.code_1338[0] == "["
        ? local.iter_1337.tape[local.iter_1337.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1337.code_ptr)] : local.iter_1337.code_ptr :
      local.code_1338[0] == "]"
        ? local.iter_1337.tape[local.iter_1337.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1337.code_ptr)] : local.iter_1337.code_ptr
        : local.iter_1337.code_ptr)

    steps_taken = 1 + local.iter_1337.steps_taken
  }
}

locals {
  code_1339 = (try(local.iter_1338.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1338.code_ptr, local.iter_1338.code_ptr + 2)
    : [null])

  input_1339 = (local.code_1339[0] == ","
    ? substr(local.input_1338, local.code_1339[1], -1)
    : local.input_1338)

  iter_1339 = try(local.iter_1338.code_ptr >= length(var.code), true) ? local.iter_1338 : {
    output = (local.code_1339[0] == "."
      ? "${local.iter_1338.output}${join("", [for _ in range(local.code_1339[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1338.tape[local.iter_1338.tape_ptr]))])}"
      : local.iter_1338.output)
    
    tape = (
      local.code_1339[0] == "+"
        ? [for i, b in local.iter_1338.tape : (i == local.iter_1338.tape_ptr ? (b + local.code_1339[1]) % 256 : b)] :
      local.code_1339[0] == "-"
        ? [for i, b in local.iter_1338.tape : (i == local.iter_1338.tape_ptr ? (b - local.code_1339[1] + 256) % 256 : b)] :
      local.code_1339[0] == ","
        ? [for i, b in local.iter_1338.tape : (i == local.iter_1338.tape_ptr ? local.ascii_lookup[substr(local.input_1339, 0, 1)] : b)]
        : local.iter_1338.tape)

    tape_ptr = (
      local.code_1339[0] == "<"
        ? local.iter_1338.tape_ptr - local.code_1339[1] :
      local.code_1339[0] == ">"
        ? local.iter_1338.tape_ptr + local.code_1339[1]
        : local.iter_1338.tape_ptr)

    code_ptr = 2 + (
      local.code_1339[0] == "["
        ? local.iter_1338.tape[local.iter_1338.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1338.code_ptr)] : local.iter_1338.code_ptr :
      local.code_1339[0] == "]"
        ? local.iter_1338.tape[local.iter_1338.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1338.code_ptr)] : local.iter_1338.code_ptr
        : local.iter_1338.code_ptr)

    steps_taken = 1 + local.iter_1338.steps_taken
  }
}

locals {
  code_1340 = (try(local.iter_1339.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1339.code_ptr, local.iter_1339.code_ptr + 2)
    : [null])

  input_1340 = (local.code_1340[0] == ","
    ? substr(local.input_1339, local.code_1340[1], -1)
    : local.input_1339)

  iter_1340 = try(local.iter_1339.code_ptr >= length(var.code), true) ? local.iter_1339 : {
    output = (local.code_1340[0] == "."
      ? "${local.iter_1339.output}${join("", [for _ in range(local.code_1340[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1339.tape[local.iter_1339.tape_ptr]))])}"
      : local.iter_1339.output)
    
    tape = (
      local.code_1340[0] == "+"
        ? [for i, b in local.iter_1339.tape : (i == local.iter_1339.tape_ptr ? (b + local.code_1340[1]) % 256 : b)] :
      local.code_1340[0] == "-"
        ? [for i, b in local.iter_1339.tape : (i == local.iter_1339.tape_ptr ? (b - local.code_1340[1] + 256) % 256 : b)] :
      local.code_1340[0] == ","
        ? [for i, b in local.iter_1339.tape : (i == local.iter_1339.tape_ptr ? local.ascii_lookup[substr(local.input_1340, 0, 1)] : b)]
        : local.iter_1339.tape)

    tape_ptr = (
      local.code_1340[0] == "<"
        ? local.iter_1339.tape_ptr - local.code_1340[1] :
      local.code_1340[0] == ">"
        ? local.iter_1339.tape_ptr + local.code_1340[1]
        : local.iter_1339.tape_ptr)

    code_ptr = 2 + (
      local.code_1340[0] == "["
        ? local.iter_1339.tape[local.iter_1339.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1339.code_ptr)] : local.iter_1339.code_ptr :
      local.code_1340[0] == "]"
        ? local.iter_1339.tape[local.iter_1339.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1339.code_ptr)] : local.iter_1339.code_ptr
        : local.iter_1339.code_ptr)

    steps_taken = 1 + local.iter_1339.steps_taken
  }
}

locals {
  code_1341 = (try(local.iter_1340.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1340.code_ptr, local.iter_1340.code_ptr + 2)
    : [null])

  input_1341 = (local.code_1341[0] == ","
    ? substr(local.input_1340, local.code_1341[1], -1)
    : local.input_1340)

  iter_1341 = try(local.iter_1340.code_ptr >= length(var.code), true) ? local.iter_1340 : {
    output = (local.code_1341[0] == "."
      ? "${local.iter_1340.output}${join("", [for _ in range(local.code_1341[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1340.tape[local.iter_1340.tape_ptr]))])}"
      : local.iter_1340.output)
    
    tape = (
      local.code_1341[0] == "+"
        ? [for i, b in local.iter_1340.tape : (i == local.iter_1340.tape_ptr ? (b + local.code_1341[1]) % 256 : b)] :
      local.code_1341[0] == "-"
        ? [for i, b in local.iter_1340.tape : (i == local.iter_1340.tape_ptr ? (b - local.code_1341[1] + 256) % 256 : b)] :
      local.code_1341[0] == ","
        ? [for i, b in local.iter_1340.tape : (i == local.iter_1340.tape_ptr ? local.ascii_lookup[substr(local.input_1341, 0, 1)] : b)]
        : local.iter_1340.tape)

    tape_ptr = (
      local.code_1341[0] == "<"
        ? local.iter_1340.tape_ptr - local.code_1341[1] :
      local.code_1341[0] == ">"
        ? local.iter_1340.tape_ptr + local.code_1341[1]
        : local.iter_1340.tape_ptr)

    code_ptr = 2 + (
      local.code_1341[0] == "["
        ? local.iter_1340.tape[local.iter_1340.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1340.code_ptr)] : local.iter_1340.code_ptr :
      local.code_1341[0] == "]"
        ? local.iter_1340.tape[local.iter_1340.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1340.code_ptr)] : local.iter_1340.code_ptr
        : local.iter_1340.code_ptr)

    steps_taken = 1 + local.iter_1340.steps_taken
  }
}

locals {
  code_1342 = (try(local.iter_1341.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1341.code_ptr, local.iter_1341.code_ptr + 2)
    : [null])

  input_1342 = (local.code_1342[0] == ","
    ? substr(local.input_1341, local.code_1342[1], -1)
    : local.input_1341)

  iter_1342 = try(local.iter_1341.code_ptr >= length(var.code), true) ? local.iter_1341 : {
    output = (local.code_1342[0] == "."
      ? "${local.iter_1341.output}${join("", [for _ in range(local.code_1342[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1341.tape[local.iter_1341.tape_ptr]))])}"
      : local.iter_1341.output)
    
    tape = (
      local.code_1342[0] == "+"
        ? [for i, b in local.iter_1341.tape : (i == local.iter_1341.tape_ptr ? (b + local.code_1342[1]) % 256 : b)] :
      local.code_1342[0] == "-"
        ? [for i, b in local.iter_1341.tape : (i == local.iter_1341.tape_ptr ? (b - local.code_1342[1] + 256) % 256 : b)] :
      local.code_1342[0] == ","
        ? [for i, b in local.iter_1341.tape : (i == local.iter_1341.tape_ptr ? local.ascii_lookup[substr(local.input_1342, 0, 1)] : b)]
        : local.iter_1341.tape)

    tape_ptr = (
      local.code_1342[0] == "<"
        ? local.iter_1341.tape_ptr - local.code_1342[1] :
      local.code_1342[0] == ">"
        ? local.iter_1341.tape_ptr + local.code_1342[1]
        : local.iter_1341.tape_ptr)

    code_ptr = 2 + (
      local.code_1342[0] == "["
        ? local.iter_1341.tape[local.iter_1341.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1341.code_ptr)] : local.iter_1341.code_ptr :
      local.code_1342[0] == "]"
        ? local.iter_1341.tape[local.iter_1341.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1341.code_ptr)] : local.iter_1341.code_ptr
        : local.iter_1341.code_ptr)

    steps_taken = 1 + local.iter_1341.steps_taken
  }
}

locals {
  code_1343 = (try(local.iter_1342.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1342.code_ptr, local.iter_1342.code_ptr + 2)
    : [null])

  input_1343 = (local.code_1343[0] == ","
    ? substr(local.input_1342, local.code_1343[1], -1)
    : local.input_1342)

  iter_1343 = try(local.iter_1342.code_ptr >= length(var.code), true) ? local.iter_1342 : {
    output = (local.code_1343[0] == "."
      ? "${local.iter_1342.output}${join("", [for _ in range(local.code_1343[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1342.tape[local.iter_1342.tape_ptr]))])}"
      : local.iter_1342.output)
    
    tape = (
      local.code_1343[0] == "+"
        ? [for i, b in local.iter_1342.tape : (i == local.iter_1342.tape_ptr ? (b + local.code_1343[1]) % 256 : b)] :
      local.code_1343[0] == "-"
        ? [for i, b in local.iter_1342.tape : (i == local.iter_1342.tape_ptr ? (b - local.code_1343[1] + 256) % 256 : b)] :
      local.code_1343[0] == ","
        ? [for i, b in local.iter_1342.tape : (i == local.iter_1342.tape_ptr ? local.ascii_lookup[substr(local.input_1343, 0, 1)] : b)]
        : local.iter_1342.tape)

    tape_ptr = (
      local.code_1343[0] == "<"
        ? local.iter_1342.tape_ptr - local.code_1343[1] :
      local.code_1343[0] == ">"
        ? local.iter_1342.tape_ptr + local.code_1343[1]
        : local.iter_1342.tape_ptr)

    code_ptr = 2 + (
      local.code_1343[0] == "["
        ? local.iter_1342.tape[local.iter_1342.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1342.code_ptr)] : local.iter_1342.code_ptr :
      local.code_1343[0] == "]"
        ? local.iter_1342.tape[local.iter_1342.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1342.code_ptr)] : local.iter_1342.code_ptr
        : local.iter_1342.code_ptr)

    steps_taken = 1 + local.iter_1342.steps_taken
  }
}

locals {
  code_1344 = (try(local.iter_1343.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1343.code_ptr, local.iter_1343.code_ptr + 2)
    : [null])

  input_1344 = (local.code_1344[0] == ","
    ? substr(local.input_1343, local.code_1344[1], -1)
    : local.input_1343)

  iter_1344 = try(local.iter_1343.code_ptr >= length(var.code), true) ? local.iter_1343 : {
    output = (local.code_1344[0] == "."
      ? "${local.iter_1343.output}${join("", [for _ in range(local.code_1344[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1343.tape[local.iter_1343.tape_ptr]))])}"
      : local.iter_1343.output)
    
    tape = (
      local.code_1344[0] == "+"
        ? [for i, b in local.iter_1343.tape : (i == local.iter_1343.tape_ptr ? (b + local.code_1344[1]) % 256 : b)] :
      local.code_1344[0] == "-"
        ? [for i, b in local.iter_1343.tape : (i == local.iter_1343.tape_ptr ? (b - local.code_1344[1] + 256) % 256 : b)] :
      local.code_1344[0] == ","
        ? [for i, b in local.iter_1343.tape : (i == local.iter_1343.tape_ptr ? local.ascii_lookup[substr(local.input_1344, 0, 1)] : b)]
        : local.iter_1343.tape)

    tape_ptr = (
      local.code_1344[0] == "<"
        ? local.iter_1343.tape_ptr - local.code_1344[1] :
      local.code_1344[0] == ">"
        ? local.iter_1343.tape_ptr + local.code_1344[1]
        : local.iter_1343.tape_ptr)

    code_ptr = 2 + (
      local.code_1344[0] == "["
        ? local.iter_1343.tape[local.iter_1343.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1343.code_ptr)] : local.iter_1343.code_ptr :
      local.code_1344[0] == "]"
        ? local.iter_1343.tape[local.iter_1343.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1343.code_ptr)] : local.iter_1343.code_ptr
        : local.iter_1343.code_ptr)

    steps_taken = 1 + local.iter_1343.steps_taken
  }
}

locals {
  code_1345 = (try(local.iter_1344.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1344.code_ptr, local.iter_1344.code_ptr + 2)
    : [null])

  input_1345 = (local.code_1345[0] == ","
    ? substr(local.input_1344, local.code_1345[1], -1)
    : local.input_1344)

  iter_1345 = try(local.iter_1344.code_ptr >= length(var.code), true) ? local.iter_1344 : {
    output = (local.code_1345[0] == "."
      ? "${local.iter_1344.output}${join("", [for _ in range(local.code_1345[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1344.tape[local.iter_1344.tape_ptr]))])}"
      : local.iter_1344.output)
    
    tape = (
      local.code_1345[0] == "+"
        ? [for i, b in local.iter_1344.tape : (i == local.iter_1344.tape_ptr ? (b + local.code_1345[1]) % 256 : b)] :
      local.code_1345[0] == "-"
        ? [for i, b in local.iter_1344.tape : (i == local.iter_1344.tape_ptr ? (b - local.code_1345[1] + 256) % 256 : b)] :
      local.code_1345[0] == ","
        ? [for i, b in local.iter_1344.tape : (i == local.iter_1344.tape_ptr ? local.ascii_lookup[substr(local.input_1345, 0, 1)] : b)]
        : local.iter_1344.tape)

    tape_ptr = (
      local.code_1345[0] == "<"
        ? local.iter_1344.tape_ptr - local.code_1345[1] :
      local.code_1345[0] == ">"
        ? local.iter_1344.tape_ptr + local.code_1345[1]
        : local.iter_1344.tape_ptr)

    code_ptr = 2 + (
      local.code_1345[0] == "["
        ? local.iter_1344.tape[local.iter_1344.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1344.code_ptr)] : local.iter_1344.code_ptr :
      local.code_1345[0] == "]"
        ? local.iter_1344.tape[local.iter_1344.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1344.code_ptr)] : local.iter_1344.code_ptr
        : local.iter_1344.code_ptr)

    steps_taken = 1 + local.iter_1344.steps_taken
  }
}

locals {
  code_1346 = (try(local.iter_1345.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1345.code_ptr, local.iter_1345.code_ptr + 2)
    : [null])

  input_1346 = (local.code_1346[0] == ","
    ? substr(local.input_1345, local.code_1346[1], -1)
    : local.input_1345)

  iter_1346 = try(local.iter_1345.code_ptr >= length(var.code), true) ? local.iter_1345 : {
    output = (local.code_1346[0] == "."
      ? "${local.iter_1345.output}${join("", [for _ in range(local.code_1346[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1345.tape[local.iter_1345.tape_ptr]))])}"
      : local.iter_1345.output)
    
    tape = (
      local.code_1346[0] == "+"
        ? [for i, b in local.iter_1345.tape : (i == local.iter_1345.tape_ptr ? (b + local.code_1346[1]) % 256 : b)] :
      local.code_1346[0] == "-"
        ? [for i, b in local.iter_1345.tape : (i == local.iter_1345.tape_ptr ? (b - local.code_1346[1] + 256) % 256 : b)] :
      local.code_1346[0] == ","
        ? [for i, b in local.iter_1345.tape : (i == local.iter_1345.tape_ptr ? local.ascii_lookup[substr(local.input_1346, 0, 1)] : b)]
        : local.iter_1345.tape)

    tape_ptr = (
      local.code_1346[0] == "<"
        ? local.iter_1345.tape_ptr - local.code_1346[1] :
      local.code_1346[0] == ">"
        ? local.iter_1345.tape_ptr + local.code_1346[1]
        : local.iter_1345.tape_ptr)

    code_ptr = 2 + (
      local.code_1346[0] == "["
        ? local.iter_1345.tape[local.iter_1345.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1345.code_ptr)] : local.iter_1345.code_ptr :
      local.code_1346[0] == "]"
        ? local.iter_1345.tape[local.iter_1345.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1345.code_ptr)] : local.iter_1345.code_ptr
        : local.iter_1345.code_ptr)

    steps_taken = 1 + local.iter_1345.steps_taken
  }
}

locals {
  code_1347 = (try(local.iter_1346.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1346.code_ptr, local.iter_1346.code_ptr + 2)
    : [null])

  input_1347 = (local.code_1347[0] == ","
    ? substr(local.input_1346, local.code_1347[1], -1)
    : local.input_1346)

  iter_1347 = try(local.iter_1346.code_ptr >= length(var.code), true) ? local.iter_1346 : {
    output = (local.code_1347[0] == "."
      ? "${local.iter_1346.output}${join("", [for _ in range(local.code_1347[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1346.tape[local.iter_1346.tape_ptr]))])}"
      : local.iter_1346.output)
    
    tape = (
      local.code_1347[0] == "+"
        ? [for i, b in local.iter_1346.tape : (i == local.iter_1346.tape_ptr ? (b + local.code_1347[1]) % 256 : b)] :
      local.code_1347[0] == "-"
        ? [for i, b in local.iter_1346.tape : (i == local.iter_1346.tape_ptr ? (b - local.code_1347[1] + 256) % 256 : b)] :
      local.code_1347[0] == ","
        ? [for i, b in local.iter_1346.tape : (i == local.iter_1346.tape_ptr ? local.ascii_lookup[substr(local.input_1347, 0, 1)] : b)]
        : local.iter_1346.tape)

    tape_ptr = (
      local.code_1347[0] == "<"
        ? local.iter_1346.tape_ptr - local.code_1347[1] :
      local.code_1347[0] == ">"
        ? local.iter_1346.tape_ptr + local.code_1347[1]
        : local.iter_1346.tape_ptr)

    code_ptr = 2 + (
      local.code_1347[0] == "["
        ? local.iter_1346.tape[local.iter_1346.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1346.code_ptr)] : local.iter_1346.code_ptr :
      local.code_1347[0] == "]"
        ? local.iter_1346.tape[local.iter_1346.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1346.code_ptr)] : local.iter_1346.code_ptr
        : local.iter_1346.code_ptr)

    steps_taken = 1 + local.iter_1346.steps_taken
  }
}

locals {
  code_1348 = (try(local.iter_1347.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1347.code_ptr, local.iter_1347.code_ptr + 2)
    : [null])

  input_1348 = (local.code_1348[0] == ","
    ? substr(local.input_1347, local.code_1348[1], -1)
    : local.input_1347)

  iter_1348 = try(local.iter_1347.code_ptr >= length(var.code), true) ? local.iter_1347 : {
    output = (local.code_1348[0] == "."
      ? "${local.iter_1347.output}${join("", [for _ in range(local.code_1348[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1347.tape[local.iter_1347.tape_ptr]))])}"
      : local.iter_1347.output)
    
    tape = (
      local.code_1348[0] == "+"
        ? [for i, b in local.iter_1347.tape : (i == local.iter_1347.tape_ptr ? (b + local.code_1348[1]) % 256 : b)] :
      local.code_1348[0] == "-"
        ? [for i, b in local.iter_1347.tape : (i == local.iter_1347.tape_ptr ? (b - local.code_1348[1] + 256) % 256 : b)] :
      local.code_1348[0] == ","
        ? [for i, b in local.iter_1347.tape : (i == local.iter_1347.tape_ptr ? local.ascii_lookup[substr(local.input_1348, 0, 1)] : b)]
        : local.iter_1347.tape)

    tape_ptr = (
      local.code_1348[0] == "<"
        ? local.iter_1347.tape_ptr - local.code_1348[1] :
      local.code_1348[0] == ">"
        ? local.iter_1347.tape_ptr + local.code_1348[1]
        : local.iter_1347.tape_ptr)

    code_ptr = 2 + (
      local.code_1348[0] == "["
        ? local.iter_1347.tape[local.iter_1347.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1347.code_ptr)] : local.iter_1347.code_ptr :
      local.code_1348[0] == "]"
        ? local.iter_1347.tape[local.iter_1347.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1347.code_ptr)] : local.iter_1347.code_ptr
        : local.iter_1347.code_ptr)

    steps_taken = 1 + local.iter_1347.steps_taken
  }
}

locals {
  code_1349 = (try(local.iter_1348.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1348.code_ptr, local.iter_1348.code_ptr + 2)
    : [null])

  input_1349 = (local.code_1349[0] == ","
    ? substr(local.input_1348, local.code_1349[1], -1)
    : local.input_1348)

  iter_1349 = try(local.iter_1348.code_ptr >= length(var.code), true) ? local.iter_1348 : {
    output = (local.code_1349[0] == "."
      ? "${local.iter_1348.output}${join("", [for _ in range(local.code_1349[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1348.tape[local.iter_1348.tape_ptr]))])}"
      : local.iter_1348.output)
    
    tape = (
      local.code_1349[0] == "+"
        ? [for i, b in local.iter_1348.tape : (i == local.iter_1348.tape_ptr ? (b + local.code_1349[1]) % 256 : b)] :
      local.code_1349[0] == "-"
        ? [for i, b in local.iter_1348.tape : (i == local.iter_1348.tape_ptr ? (b - local.code_1349[1] + 256) % 256 : b)] :
      local.code_1349[0] == ","
        ? [for i, b in local.iter_1348.tape : (i == local.iter_1348.tape_ptr ? local.ascii_lookup[substr(local.input_1349, 0, 1)] : b)]
        : local.iter_1348.tape)

    tape_ptr = (
      local.code_1349[0] == "<"
        ? local.iter_1348.tape_ptr - local.code_1349[1] :
      local.code_1349[0] == ">"
        ? local.iter_1348.tape_ptr + local.code_1349[1]
        : local.iter_1348.tape_ptr)

    code_ptr = 2 + (
      local.code_1349[0] == "["
        ? local.iter_1348.tape[local.iter_1348.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1348.code_ptr)] : local.iter_1348.code_ptr :
      local.code_1349[0] == "]"
        ? local.iter_1348.tape[local.iter_1348.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1348.code_ptr)] : local.iter_1348.code_ptr
        : local.iter_1348.code_ptr)

    steps_taken = 1 + local.iter_1348.steps_taken
  }
}

locals {
  code_1350 = (try(local.iter_1349.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1349.code_ptr, local.iter_1349.code_ptr + 2)
    : [null])

  input_1350 = (local.code_1350[0] == ","
    ? substr(local.input_1349, local.code_1350[1], -1)
    : local.input_1349)

  iter_1350 = try(local.iter_1349.code_ptr >= length(var.code), true) ? local.iter_1349 : {
    output = (local.code_1350[0] == "."
      ? "${local.iter_1349.output}${join("", [for _ in range(local.code_1350[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1349.tape[local.iter_1349.tape_ptr]))])}"
      : local.iter_1349.output)
    
    tape = (
      local.code_1350[0] == "+"
        ? [for i, b in local.iter_1349.tape : (i == local.iter_1349.tape_ptr ? (b + local.code_1350[1]) % 256 : b)] :
      local.code_1350[0] == "-"
        ? [for i, b in local.iter_1349.tape : (i == local.iter_1349.tape_ptr ? (b - local.code_1350[1] + 256) % 256 : b)] :
      local.code_1350[0] == ","
        ? [for i, b in local.iter_1349.tape : (i == local.iter_1349.tape_ptr ? local.ascii_lookup[substr(local.input_1350, 0, 1)] : b)]
        : local.iter_1349.tape)

    tape_ptr = (
      local.code_1350[0] == "<"
        ? local.iter_1349.tape_ptr - local.code_1350[1] :
      local.code_1350[0] == ">"
        ? local.iter_1349.tape_ptr + local.code_1350[1]
        : local.iter_1349.tape_ptr)

    code_ptr = 2 + (
      local.code_1350[0] == "["
        ? local.iter_1349.tape[local.iter_1349.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1349.code_ptr)] : local.iter_1349.code_ptr :
      local.code_1350[0] == "]"
        ? local.iter_1349.tape[local.iter_1349.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1349.code_ptr)] : local.iter_1349.code_ptr
        : local.iter_1349.code_ptr)

    steps_taken = 1 + local.iter_1349.steps_taken
  }
}

locals {
  code_1351 = (try(local.iter_1350.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1350.code_ptr, local.iter_1350.code_ptr + 2)
    : [null])

  input_1351 = (local.code_1351[0] == ","
    ? substr(local.input_1350, local.code_1351[1], -1)
    : local.input_1350)

  iter_1351 = try(local.iter_1350.code_ptr >= length(var.code), true) ? local.iter_1350 : {
    output = (local.code_1351[0] == "."
      ? "${local.iter_1350.output}${join("", [for _ in range(local.code_1351[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1350.tape[local.iter_1350.tape_ptr]))])}"
      : local.iter_1350.output)
    
    tape = (
      local.code_1351[0] == "+"
        ? [for i, b in local.iter_1350.tape : (i == local.iter_1350.tape_ptr ? (b + local.code_1351[1]) % 256 : b)] :
      local.code_1351[0] == "-"
        ? [for i, b in local.iter_1350.tape : (i == local.iter_1350.tape_ptr ? (b - local.code_1351[1] + 256) % 256 : b)] :
      local.code_1351[0] == ","
        ? [for i, b in local.iter_1350.tape : (i == local.iter_1350.tape_ptr ? local.ascii_lookup[substr(local.input_1351, 0, 1)] : b)]
        : local.iter_1350.tape)

    tape_ptr = (
      local.code_1351[0] == "<"
        ? local.iter_1350.tape_ptr - local.code_1351[1] :
      local.code_1351[0] == ">"
        ? local.iter_1350.tape_ptr + local.code_1351[1]
        : local.iter_1350.tape_ptr)

    code_ptr = 2 + (
      local.code_1351[0] == "["
        ? local.iter_1350.tape[local.iter_1350.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1350.code_ptr)] : local.iter_1350.code_ptr :
      local.code_1351[0] == "]"
        ? local.iter_1350.tape[local.iter_1350.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1350.code_ptr)] : local.iter_1350.code_ptr
        : local.iter_1350.code_ptr)

    steps_taken = 1 + local.iter_1350.steps_taken
  }
}

locals {
  code_1352 = (try(local.iter_1351.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1351.code_ptr, local.iter_1351.code_ptr + 2)
    : [null])

  input_1352 = (local.code_1352[0] == ","
    ? substr(local.input_1351, local.code_1352[1], -1)
    : local.input_1351)

  iter_1352 = try(local.iter_1351.code_ptr >= length(var.code), true) ? local.iter_1351 : {
    output = (local.code_1352[0] == "."
      ? "${local.iter_1351.output}${join("", [for _ in range(local.code_1352[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1351.tape[local.iter_1351.tape_ptr]))])}"
      : local.iter_1351.output)
    
    tape = (
      local.code_1352[0] == "+"
        ? [for i, b in local.iter_1351.tape : (i == local.iter_1351.tape_ptr ? (b + local.code_1352[1]) % 256 : b)] :
      local.code_1352[0] == "-"
        ? [for i, b in local.iter_1351.tape : (i == local.iter_1351.tape_ptr ? (b - local.code_1352[1] + 256) % 256 : b)] :
      local.code_1352[0] == ","
        ? [for i, b in local.iter_1351.tape : (i == local.iter_1351.tape_ptr ? local.ascii_lookup[substr(local.input_1352, 0, 1)] : b)]
        : local.iter_1351.tape)

    tape_ptr = (
      local.code_1352[0] == "<"
        ? local.iter_1351.tape_ptr - local.code_1352[1] :
      local.code_1352[0] == ">"
        ? local.iter_1351.tape_ptr + local.code_1352[1]
        : local.iter_1351.tape_ptr)

    code_ptr = 2 + (
      local.code_1352[0] == "["
        ? local.iter_1351.tape[local.iter_1351.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1351.code_ptr)] : local.iter_1351.code_ptr :
      local.code_1352[0] == "]"
        ? local.iter_1351.tape[local.iter_1351.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1351.code_ptr)] : local.iter_1351.code_ptr
        : local.iter_1351.code_ptr)

    steps_taken = 1 + local.iter_1351.steps_taken
  }
}

locals {
  code_1353 = (try(local.iter_1352.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1352.code_ptr, local.iter_1352.code_ptr + 2)
    : [null])

  input_1353 = (local.code_1353[0] == ","
    ? substr(local.input_1352, local.code_1353[1], -1)
    : local.input_1352)

  iter_1353 = try(local.iter_1352.code_ptr >= length(var.code), true) ? local.iter_1352 : {
    output = (local.code_1353[0] == "."
      ? "${local.iter_1352.output}${join("", [for _ in range(local.code_1353[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1352.tape[local.iter_1352.tape_ptr]))])}"
      : local.iter_1352.output)
    
    tape = (
      local.code_1353[0] == "+"
        ? [for i, b in local.iter_1352.tape : (i == local.iter_1352.tape_ptr ? (b + local.code_1353[1]) % 256 : b)] :
      local.code_1353[0] == "-"
        ? [for i, b in local.iter_1352.tape : (i == local.iter_1352.tape_ptr ? (b - local.code_1353[1] + 256) % 256 : b)] :
      local.code_1353[0] == ","
        ? [for i, b in local.iter_1352.tape : (i == local.iter_1352.tape_ptr ? local.ascii_lookup[substr(local.input_1353, 0, 1)] : b)]
        : local.iter_1352.tape)

    tape_ptr = (
      local.code_1353[0] == "<"
        ? local.iter_1352.tape_ptr - local.code_1353[1] :
      local.code_1353[0] == ">"
        ? local.iter_1352.tape_ptr + local.code_1353[1]
        : local.iter_1352.tape_ptr)

    code_ptr = 2 + (
      local.code_1353[0] == "["
        ? local.iter_1352.tape[local.iter_1352.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1352.code_ptr)] : local.iter_1352.code_ptr :
      local.code_1353[0] == "]"
        ? local.iter_1352.tape[local.iter_1352.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1352.code_ptr)] : local.iter_1352.code_ptr
        : local.iter_1352.code_ptr)

    steps_taken = 1 + local.iter_1352.steps_taken
  }
}

locals {
  code_1354 = (try(local.iter_1353.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1353.code_ptr, local.iter_1353.code_ptr + 2)
    : [null])

  input_1354 = (local.code_1354[0] == ","
    ? substr(local.input_1353, local.code_1354[1], -1)
    : local.input_1353)

  iter_1354 = try(local.iter_1353.code_ptr >= length(var.code), true) ? local.iter_1353 : {
    output = (local.code_1354[0] == "."
      ? "${local.iter_1353.output}${join("", [for _ in range(local.code_1354[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1353.tape[local.iter_1353.tape_ptr]))])}"
      : local.iter_1353.output)
    
    tape = (
      local.code_1354[0] == "+"
        ? [for i, b in local.iter_1353.tape : (i == local.iter_1353.tape_ptr ? (b + local.code_1354[1]) % 256 : b)] :
      local.code_1354[0] == "-"
        ? [for i, b in local.iter_1353.tape : (i == local.iter_1353.tape_ptr ? (b - local.code_1354[1] + 256) % 256 : b)] :
      local.code_1354[0] == ","
        ? [for i, b in local.iter_1353.tape : (i == local.iter_1353.tape_ptr ? local.ascii_lookup[substr(local.input_1354, 0, 1)] : b)]
        : local.iter_1353.tape)

    tape_ptr = (
      local.code_1354[0] == "<"
        ? local.iter_1353.tape_ptr - local.code_1354[1] :
      local.code_1354[0] == ">"
        ? local.iter_1353.tape_ptr + local.code_1354[1]
        : local.iter_1353.tape_ptr)

    code_ptr = 2 + (
      local.code_1354[0] == "["
        ? local.iter_1353.tape[local.iter_1353.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1353.code_ptr)] : local.iter_1353.code_ptr :
      local.code_1354[0] == "]"
        ? local.iter_1353.tape[local.iter_1353.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1353.code_ptr)] : local.iter_1353.code_ptr
        : local.iter_1353.code_ptr)

    steps_taken = 1 + local.iter_1353.steps_taken
  }
}

locals {
  code_1355 = (try(local.iter_1354.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1354.code_ptr, local.iter_1354.code_ptr + 2)
    : [null])

  input_1355 = (local.code_1355[0] == ","
    ? substr(local.input_1354, local.code_1355[1], -1)
    : local.input_1354)

  iter_1355 = try(local.iter_1354.code_ptr >= length(var.code), true) ? local.iter_1354 : {
    output = (local.code_1355[0] == "."
      ? "${local.iter_1354.output}${join("", [for _ in range(local.code_1355[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1354.tape[local.iter_1354.tape_ptr]))])}"
      : local.iter_1354.output)
    
    tape = (
      local.code_1355[0] == "+"
        ? [for i, b in local.iter_1354.tape : (i == local.iter_1354.tape_ptr ? (b + local.code_1355[1]) % 256 : b)] :
      local.code_1355[0] == "-"
        ? [for i, b in local.iter_1354.tape : (i == local.iter_1354.tape_ptr ? (b - local.code_1355[1] + 256) % 256 : b)] :
      local.code_1355[0] == ","
        ? [for i, b in local.iter_1354.tape : (i == local.iter_1354.tape_ptr ? local.ascii_lookup[substr(local.input_1355, 0, 1)] : b)]
        : local.iter_1354.tape)

    tape_ptr = (
      local.code_1355[0] == "<"
        ? local.iter_1354.tape_ptr - local.code_1355[1] :
      local.code_1355[0] == ">"
        ? local.iter_1354.tape_ptr + local.code_1355[1]
        : local.iter_1354.tape_ptr)

    code_ptr = 2 + (
      local.code_1355[0] == "["
        ? local.iter_1354.tape[local.iter_1354.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1354.code_ptr)] : local.iter_1354.code_ptr :
      local.code_1355[0] == "]"
        ? local.iter_1354.tape[local.iter_1354.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1354.code_ptr)] : local.iter_1354.code_ptr
        : local.iter_1354.code_ptr)

    steps_taken = 1 + local.iter_1354.steps_taken
  }
}

locals {
  code_1356 = (try(local.iter_1355.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1355.code_ptr, local.iter_1355.code_ptr + 2)
    : [null])

  input_1356 = (local.code_1356[0] == ","
    ? substr(local.input_1355, local.code_1356[1], -1)
    : local.input_1355)

  iter_1356 = try(local.iter_1355.code_ptr >= length(var.code), true) ? local.iter_1355 : {
    output = (local.code_1356[0] == "."
      ? "${local.iter_1355.output}${join("", [for _ in range(local.code_1356[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1355.tape[local.iter_1355.tape_ptr]))])}"
      : local.iter_1355.output)
    
    tape = (
      local.code_1356[0] == "+"
        ? [for i, b in local.iter_1355.tape : (i == local.iter_1355.tape_ptr ? (b + local.code_1356[1]) % 256 : b)] :
      local.code_1356[0] == "-"
        ? [for i, b in local.iter_1355.tape : (i == local.iter_1355.tape_ptr ? (b - local.code_1356[1] + 256) % 256 : b)] :
      local.code_1356[0] == ","
        ? [for i, b in local.iter_1355.tape : (i == local.iter_1355.tape_ptr ? local.ascii_lookup[substr(local.input_1356, 0, 1)] : b)]
        : local.iter_1355.tape)

    tape_ptr = (
      local.code_1356[0] == "<"
        ? local.iter_1355.tape_ptr - local.code_1356[1] :
      local.code_1356[0] == ">"
        ? local.iter_1355.tape_ptr + local.code_1356[1]
        : local.iter_1355.tape_ptr)

    code_ptr = 2 + (
      local.code_1356[0] == "["
        ? local.iter_1355.tape[local.iter_1355.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1355.code_ptr)] : local.iter_1355.code_ptr :
      local.code_1356[0] == "]"
        ? local.iter_1355.tape[local.iter_1355.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1355.code_ptr)] : local.iter_1355.code_ptr
        : local.iter_1355.code_ptr)

    steps_taken = 1 + local.iter_1355.steps_taken
  }
}

locals {
  code_1357 = (try(local.iter_1356.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1356.code_ptr, local.iter_1356.code_ptr + 2)
    : [null])

  input_1357 = (local.code_1357[0] == ","
    ? substr(local.input_1356, local.code_1357[1], -1)
    : local.input_1356)

  iter_1357 = try(local.iter_1356.code_ptr >= length(var.code), true) ? local.iter_1356 : {
    output = (local.code_1357[0] == "."
      ? "${local.iter_1356.output}${join("", [for _ in range(local.code_1357[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1356.tape[local.iter_1356.tape_ptr]))])}"
      : local.iter_1356.output)
    
    tape = (
      local.code_1357[0] == "+"
        ? [for i, b in local.iter_1356.tape : (i == local.iter_1356.tape_ptr ? (b + local.code_1357[1]) % 256 : b)] :
      local.code_1357[0] == "-"
        ? [for i, b in local.iter_1356.tape : (i == local.iter_1356.tape_ptr ? (b - local.code_1357[1] + 256) % 256 : b)] :
      local.code_1357[0] == ","
        ? [for i, b in local.iter_1356.tape : (i == local.iter_1356.tape_ptr ? local.ascii_lookup[substr(local.input_1357, 0, 1)] : b)]
        : local.iter_1356.tape)

    tape_ptr = (
      local.code_1357[0] == "<"
        ? local.iter_1356.tape_ptr - local.code_1357[1] :
      local.code_1357[0] == ">"
        ? local.iter_1356.tape_ptr + local.code_1357[1]
        : local.iter_1356.tape_ptr)

    code_ptr = 2 + (
      local.code_1357[0] == "["
        ? local.iter_1356.tape[local.iter_1356.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1356.code_ptr)] : local.iter_1356.code_ptr :
      local.code_1357[0] == "]"
        ? local.iter_1356.tape[local.iter_1356.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1356.code_ptr)] : local.iter_1356.code_ptr
        : local.iter_1356.code_ptr)

    steps_taken = 1 + local.iter_1356.steps_taken
  }
}

locals {
  code_1358 = (try(local.iter_1357.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1357.code_ptr, local.iter_1357.code_ptr + 2)
    : [null])

  input_1358 = (local.code_1358[0] == ","
    ? substr(local.input_1357, local.code_1358[1], -1)
    : local.input_1357)

  iter_1358 = try(local.iter_1357.code_ptr >= length(var.code), true) ? local.iter_1357 : {
    output = (local.code_1358[0] == "."
      ? "${local.iter_1357.output}${join("", [for _ in range(local.code_1358[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1357.tape[local.iter_1357.tape_ptr]))])}"
      : local.iter_1357.output)
    
    tape = (
      local.code_1358[0] == "+"
        ? [for i, b in local.iter_1357.tape : (i == local.iter_1357.tape_ptr ? (b + local.code_1358[1]) % 256 : b)] :
      local.code_1358[0] == "-"
        ? [for i, b in local.iter_1357.tape : (i == local.iter_1357.tape_ptr ? (b - local.code_1358[1] + 256) % 256 : b)] :
      local.code_1358[0] == ","
        ? [for i, b in local.iter_1357.tape : (i == local.iter_1357.tape_ptr ? local.ascii_lookup[substr(local.input_1358, 0, 1)] : b)]
        : local.iter_1357.tape)

    tape_ptr = (
      local.code_1358[0] == "<"
        ? local.iter_1357.tape_ptr - local.code_1358[1] :
      local.code_1358[0] == ">"
        ? local.iter_1357.tape_ptr + local.code_1358[1]
        : local.iter_1357.tape_ptr)

    code_ptr = 2 + (
      local.code_1358[0] == "["
        ? local.iter_1357.tape[local.iter_1357.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1357.code_ptr)] : local.iter_1357.code_ptr :
      local.code_1358[0] == "]"
        ? local.iter_1357.tape[local.iter_1357.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1357.code_ptr)] : local.iter_1357.code_ptr
        : local.iter_1357.code_ptr)

    steps_taken = 1 + local.iter_1357.steps_taken
  }
}

locals {
  code_1359 = (try(local.iter_1358.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1358.code_ptr, local.iter_1358.code_ptr + 2)
    : [null])

  input_1359 = (local.code_1359[0] == ","
    ? substr(local.input_1358, local.code_1359[1], -1)
    : local.input_1358)

  iter_1359 = try(local.iter_1358.code_ptr >= length(var.code), true) ? local.iter_1358 : {
    output = (local.code_1359[0] == "."
      ? "${local.iter_1358.output}${join("", [for _ in range(local.code_1359[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1358.tape[local.iter_1358.tape_ptr]))])}"
      : local.iter_1358.output)
    
    tape = (
      local.code_1359[0] == "+"
        ? [for i, b in local.iter_1358.tape : (i == local.iter_1358.tape_ptr ? (b + local.code_1359[1]) % 256 : b)] :
      local.code_1359[0] == "-"
        ? [for i, b in local.iter_1358.tape : (i == local.iter_1358.tape_ptr ? (b - local.code_1359[1] + 256) % 256 : b)] :
      local.code_1359[0] == ","
        ? [for i, b in local.iter_1358.tape : (i == local.iter_1358.tape_ptr ? local.ascii_lookup[substr(local.input_1359, 0, 1)] : b)]
        : local.iter_1358.tape)

    tape_ptr = (
      local.code_1359[0] == "<"
        ? local.iter_1358.tape_ptr - local.code_1359[1] :
      local.code_1359[0] == ">"
        ? local.iter_1358.tape_ptr + local.code_1359[1]
        : local.iter_1358.tape_ptr)

    code_ptr = 2 + (
      local.code_1359[0] == "["
        ? local.iter_1358.tape[local.iter_1358.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1358.code_ptr)] : local.iter_1358.code_ptr :
      local.code_1359[0] == "]"
        ? local.iter_1358.tape[local.iter_1358.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1358.code_ptr)] : local.iter_1358.code_ptr
        : local.iter_1358.code_ptr)

    steps_taken = 1 + local.iter_1358.steps_taken
  }
}

locals {
  code_1360 = (try(local.iter_1359.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1359.code_ptr, local.iter_1359.code_ptr + 2)
    : [null])

  input_1360 = (local.code_1360[0] == ","
    ? substr(local.input_1359, local.code_1360[1], -1)
    : local.input_1359)

  iter_1360 = try(local.iter_1359.code_ptr >= length(var.code), true) ? local.iter_1359 : {
    output = (local.code_1360[0] == "."
      ? "${local.iter_1359.output}${join("", [for _ in range(local.code_1360[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1359.tape[local.iter_1359.tape_ptr]))])}"
      : local.iter_1359.output)
    
    tape = (
      local.code_1360[0] == "+"
        ? [for i, b in local.iter_1359.tape : (i == local.iter_1359.tape_ptr ? (b + local.code_1360[1]) % 256 : b)] :
      local.code_1360[0] == "-"
        ? [for i, b in local.iter_1359.tape : (i == local.iter_1359.tape_ptr ? (b - local.code_1360[1] + 256) % 256 : b)] :
      local.code_1360[0] == ","
        ? [for i, b in local.iter_1359.tape : (i == local.iter_1359.tape_ptr ? local.ascii_lookup[substr(local.input_1360, 0, 1)] : b)]
        : local.iter_1359.tape)

    tape_ptr = (
      local.code_1360[0] == "<"
        ? local.iter_1359.tape_ptr - local.code_1360[1] :
      local.code_1360[0] == ">"
        ? local.iter_1359.tape_ptr + local.code_1360[1]
        : local.iter_1359.tape_ptr)

    code_ptr = 2 + (
      local.code_1360[0] == "["
        ? local.iter_1359.tape[local.iter_1359.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1359.code_ptr)] : local.iter_1359.code_ptr :
      local.code_1360[0] == "]"
        ? local.iter_1359.tape[local.iter_1359.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1359.code_ptr)] : local.iter_1359.code_ptr
        : local.iter_1359.code_ptr)

    steps_taken = 1 + local.iter_1359.steps_taken
  }
}

locals {
  code_1361 = (try(local.iter_1360.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1360.code_ptr, local.iter_1360.code_ptr + 2)
    : [null])

  input_1361 = (local.code_1361[0] == ","
    ? substr(local.input_1360, local.code_1361[1], -1)
    : local.input_1360)

  iter_1361 = try(local.iter_1360.code_ptr >= length(var.code), true) ? local.iter_1360 : {
    output = (local.code_1361[0] == "."
      ? "${local.iter_1360.output}${join("", [for _ in range(local.code_1361[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1360.tape[local.iter_1360.tape_ptr]))])}"
      : local.iter_1360.output)
    
    tape = (
      local.code_1361[0] == "+"
        ? [for i, b in local.iter_1360.tape : (i == local.iter_1360.tape_ptr ? (b + local.code_1361[1]) % 256 : b)] :
      local.code_1361[0] == "-"
        ? [for i, b in local.iter_1360.tape : (i == local.iter_1360.tape_ptr ? (b - local.code_1361[1] + 256) % 256 : b)] :
      local.code_1361[0] == ","
        ? [for i, b in local.iter_1360.tape : (i == local.iter_1360.tape_ptr ? local.ascii_lookup[substr(local.input_1361, 0, 1)] : b)]
        : local.iter_1360.tape)

    tape_ptr = (
      local.code_1361[0] == "<"
        ? local.iter_1360.tape_ptr - local.code_1361[1] :
      local.code_1361[0] == ">"
        ? local.iter_1360.tape_ptr + local.code_1361[1]
        : local.iter_1360.tape_ptr)

    code_ptr = 2 + (
      local.code_1361[0] == "["
        ? local.iter_1360.tape[local.iter_1360.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1360.code_ptr)] : local.iter_1360.code_ptr :
      local.code_1361[0] == "]"
        ? local.iter_1360.tape[local.iter_1360.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1360.code_ptr)] : local.iter_1360.code_ptr
        : local.iter_1360.code_ptr)

    steps_taken = 1 + local.iter_1360.steps_taken
  }
}

locals {
  code_1362 = (try(local.iter_1361.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1361.code_ptr, local.iter_1361.code_ptr + 2)
    : [null])

  input_1362 = (local.code_1362[0] == ","
    ? substr(local.input_1361, local.code_1362[1], -1)
    : local.input_1361)

  iter_1362 = try(local.iter_1361.code_ptr >= length(var.code), true) ? local.iter_1361 : {
    output = (local.code_1362[0] == "."
      ? "${local.iter_1361.output}${join("", [for _ in range(local.code_1362[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1361.tape[local.iter_1361.tape_ptr]))])}"
      : local.iter_1361.output)
    
    tape = (
      local.code_1362[0] == "+"
        ? [for i, b in local.iter_1361.tape : (i == local.iter_1361.tape_ptr ? (b + local.code_1362[1]) % 256 : b)] :
      local.code_1362[0] == "-"
        ? [for i, b in local.iter_1361.tape : (i == local.iter_1361.tape_ptr ? (b - local.code_1362[1] + 256) % 256 : b)] :
      local.code_1362[0] == ","
        ? [for i, b in local.iter_1361.tape : (i == local.iter_1361.tape_ptr ? local.ascii_lookup[substr(local.input_1362, 0, 1)] : b)]
        : local.iter_1361.tape)

    tape_ptr = (
      local.code_1362[0] == "<"
        ? local.iter_1361.tape_ptr - local.code_1362[1] :
      local.code_1362[0] == ">"
        ? local.iter_1361.tape_ptr + local.code_1362[1]
        : local.iter_1361.tape_ptr)

    code_ptr = 2 + (
      local.code_1362[0] == "["
        ? local.iter_1361.tape[local.iter_1361.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1361.code_ptr)] : local.iter_1361.code_ptr :
      local.code_1362[0] == "]"
        ? local.iter_1361.tape[local.iter_1361.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1361.code_ptr)] : local.iter_1361.code_ptr
        : local.iter_1361.code_ptr)

    steps_taken = 1 + local.iter_1361.steps_taken
  }
}

locals {
  code_1363 = (try(local.iter_1362.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1362.code_ptr, local.iter_1362.code_ptr + 2)
    : [null])

  input_1363 = (local.code_1363[0] == ","
    ? substr(local.input_1362, local.code_1363[1], -1)
    : local.input_1362)

  iter_1363 = try(local.iter_1362.code_ptr >= length(var.code), true) ? local.iter_1362 : {
    output = (local.code_1363[0] == "."
      ? "${local.iter_1362.output}${join("", [for _ in range(local.code_1363[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1362.tape[local.iter_1362.tape_ptr]))])}"
      : local.iter_1362.output)
    
    tape = (
      local.code_1363[0] == "+"
        ? [for i, b in local.iter_1362.tape : (i == local.iter_1362.tape_ptr ? (b + local.code_1363[1]) % 256 : b)] :
      local.code_1363[0] == "-"
        ? [for i, b in local.iter_1362.tape : (i == local.iter_1362.tape_ptr ? (b - local.code_1363[1] + 256) % 256 : b)] :
      local.code_1363[0] == ","
        ? [for i, b in local.iter_1362.tape : (i == local.iter_1362.tape_ptr ? local.ascii_lookup[substr(local.input_1363, 0, 1)] : b)]
        : local.iter_1362.tape)

    tape_ptr = (
      local.code_1363[0] == "<"
        ? local.iter_1362.tape_ptr - local.code_1363[1] :
      local.code_1363[0] == ">"
        ? local.iter_1362.tape_ptr + local.code_1363[1]
        : local.iter_1362.tape_ptr)

    code_ptr = 2 + (
      local.code_1363[0] == "["
        ? local.iter_1362.tape[local.iter_1362.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1362.code_ptr)] : local.iter_1362.code_ptr :
      local.code_1363[0] == "]"
        ? local.iter_1362.tape[local.iter_1362.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1362.code_ptr)] : local.iter_1362.code_ptr
        : local.iter_1362.code_ptr)

    steps_taken = 1 + local.iter_1362.steps_taken
  }
}

locals {
  code_1364 = (try(local.iter_1363.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1363.code_ptr, local.iter_1363.code_ptr + 2)
    : [null])

  input_1364 = (local.code_1364[0] == ","
    ? substr(local.input_1363, local.code_1364[1], -1)
    : local.input_1363)

  iter_1364 = try(local.iter_1363.code_ptr >= length(var.code), true) ? local.iter_1363 : {
    output = (local.code_1364[0] == "."
      ? "${local.iter_1363.output}${join("", [for _ in range(local.code_1364[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1363.tape[local.iter_1363.tape_ptr]))])}"
      : local.iter_1363.output)
    
    tape = (
      local.code_1364[0] == "+"
        ? [for i, b in local.iter_1363.tape : (i == local.iter_1363.tape_ptr ? (b + local.code_1364[1]) % 256 : b)] :
      local.code_1364[0] == "-"
        ? [for i, b in local.iter_1363.tape : (i == local.iter_1363.tape_ptr ? (b - local.code_1364[1] + 256) % 256 : b)] :
      local.code_1364[0] == ","
        ? [for i, b in local.iter_1363.tape : (i == local.iter_1363.tape_ptr ? local.ascii_lookup[substr(local.input_1364, 0, 1)] : b)]
        : local.iter_1363.tape)

    tape_ptr = (
      local.code_1364[0] == "<"
        ? local.iter_1363.tape_ptr - local.code_1364[1] :
      local.code_1364[0] == ">"
        ? local.iter_1363.tape_ptr + local.code_1364[1]
        : local.iter_1363.tape_ptr)

    code_ptr = 2 + (
      local.code_1364[0] == "["
        ? local.iter_1363.tape[local.iter_1363.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1363.code_ptr)] : local.iter_1363.code_ptr :
      local.code_1364[0] == "]"
        ? local.iter_1363.tape[local.iter_1363.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1363.code_ptr)] : local.iter_1363.code_ptr
        : local.iter_1363.code_ptr)

    steps_taken = 1 + local.iter_1363.steps_taken
  }
}

locals {
  code_1365 = (try(local.iter_1364.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1364.code_ptr, local.iter_1364.code_ptr + 2)
    : [null])

  input_1365 = (local.code_1365[0] == ","
    ? substr(local.input_1364, local.code_1365[1], -1)
    : local.input_1364)

  iter_1365 = try(local.iter_1364.code_ptr >= length(var.code), true) ? local.iter_1364 : {
    output = (local.code_1365[0] == "."
      ? "${local.iter_1364.output}${join("", [for _ in range(local.code_1365[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1364.tape[local.iter_1364.tape_ptr]))])}"
      : local.iter_1364.output)
    
    tape = (
      local.code_1365[0] == "+"
        ? [for i, b in local.iter_1364.tape : (i == local.iter_1364.tape_ptr ? (b + local.code_1365[1]) % 256 : b)] :
      local.code_1365[0] == "-"
        ? [for i, b in local.iter_1364.tape : (i == local.iter_1364.tape_ptr ? (b - local.code_1365[1] + 256) % 256 : b)] :
      local.code_1365[0] == ","
        ? [for i, b in local.iter_1364.tape : (i == local.iter_1364.tape_ptr ? local.ascii_lookup[substr(local.input_1365, 0, 1)] : b)]
        : local.iter_1364.tape)

    tape_ptr = (
      local.code_1365[0] == "<"
        ? local.iter_1364.tape_ptr - local.code_1365[1] :
      local.code_1365[0] == ">"
        ? local.iter_1364.tape_ptr + local.code_1365[1]
        : local.iter_1364.tape_ptr)

    code_ptr = 2 + (
      local.code_1365[0] == "["
        ? local.iter_1364.tape[local.iter_1364.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1364.code_ptr)] : local.iter_1364.code_ptr :
      local.code_1365[0] == "]"
        ? local.iter_1364.tape[local.iter_1364.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1364.code_ptr)] : local.iter_1364.code_ptr
        : local.iter_1364.code_ptr)

    steps_taken = 1 + local.iter_1364.steps_taken
  }
}

locals {
  code_1366 = (try(local.iter_1365.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1365.code_ptr, local.iter_1365.code_ptr + 2)
    : [null])

  input_1366 = (local.code_1366[0] == ","
    ? substr(local.input_1365, local.code_1366[1], -1)
    : local.input_1365)

  iter_1366 = try(local.iter_1365.code_ptr >= length(var.code), true) ? local.iter_1365 : {
    output = (local.code_1366[0] == "."
      ? "${local.iter_1365.output}${join("", [for _ in range(local.code_1366[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1365.tape[local.iter_1365.tape_ptr]))])}"
      : local.iter_1365.output)
    
    tape = (
      local.code_1366[0] == "+"
        ? [for i, b in local.iter_1365.tape : (i == local.iter_1365.tape_ptr ? (b + local.code_1366[1]) % 256 : b)] :
      local.code_1366[0] == "-"
        ? [for i, b in local.iter_1365.tape : (i == local.iter_1365.tape_ptr ? (b - local.code_1366[1] + 256) % 256 : b)] :
      local.code_1366[0] == ","
        ? [for i, b in local.iter_1365.tape : (i == local.iter_1365.tape_ptr ? local.ascii_lookup[substr(local.input_1366, 0, 1)] : b)]
        : local.iter_1365.tape)

    tape_ptr = (
      local.code_1366[0] == "<"
        ? local.iter_1365.tape_ptr - local.code_1366[1] :
      local.code_1366[0] == ">"
        ? local.iter_1365.tape_ptr + local.code_1366[1]
        : local.iter_1365.tape_ptr)

    code_ptr = 2 + (
      local.code_1366[0] == "["
        ? local.iter_1365.tape[local.iter_1365.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1365.code_ptr)] : local.iter_1365.code_ptr :
      local.code_1366[0] == "]"
        ? local.iter_1365.tape[local.iter_1365.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1365.code_ptr)] : local.iter_1365.code_ptr
        : local.iter_1365.code_ptr)

    steps_taken = 1 + local.iter_1365.steps_taken
  }
}

locals {
  code_1367 = (try(local.iter_1366.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1366.code_ptr, local.iter_1366.code_ptr + 2)
    : [null])

  input_1367 = (local.code_1367[0] == ","
    ? substr(local.input_1366, local.code_1367[1], -1)
    : local.input_1366)

  iter_1367 = try(local.iter_1366.code_ptr >= length(var.code), true) ? local.iter_1366 : {
    output = (local.code_1367[0] == "."
      ? "${local.iter_1366.output}${join("", [for _ in range(local.code_1367[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1366.tape[local.iter_1366.tape_ptr]))])}"
      : local.iter_1366.output)
    
    tape = (
      local.code_1367[0] == "+"
        ? [for i, b in local.iter_1366.tape : (i == local.iter_1366.tape_ptr ? (b + local.code_1367[1]) % 256 : b)] :
      local.code_1367[0] == "-"
        ? [for i, b in local.iter_1366.tape : (i == local.iter_1366.tape_ptr ? (b - local.code_1367[1] + 256) % 256 : b)] :
      local.code_1367[0] == ","
        ? [for i, b in local.iter_1366.tape : (i == local.iter_1366.tape_ptr ? local.ascii_lookup[substr(local.input_1367, 0, 1)] : b)]
        : local.iter_1366.tape)

    tape_ptr = (
      local.code_1367[0] == "<"
        ? local.iter_1366.tape_ptr - local.code_1367[1] :
      local.code_1367[0] == ">"
        ? local.iter_1366.tape_ptr + local.code_1367[1]
        : local.iter_1366.tape_ptr)

    code_ptr = 2 + (
      local.code_1367[0] == "["
        ? local.iter_1366.tape[local.iter_1366.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1366.code_ptr)] : local.iter_1366.code_ptr :
      local.code_1367[0] == "]"
        ? local.iter_1366.tape[local.iter_1366.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1366.code_ptr)] : local.iter_1366.code_ptr
        : local.iter_1366.code_ptr)

    steps_taken = 1 + local.iter_1366.steps_taken
  }
}

locals {
  code_1368 = (try(local.iter_1367.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1367.code_ptr, local.iter_1367.code_ptr + 2)
    : [null])

  input_1368 = (local.code_1368[0] == ","
    ? substr(local.input_1367, local.code_1368[1], -1)
    : local.input_1367)

  iter_1368 = try(local.iter_1367.code_ptr >= length(var.code), true) ? local.iter_1367 : {
    output = (local.code_1368[0] == "."
      ? "${local.iter_1367.output}${join("", [for _ in range(local.code_1368[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1367.tape[local.iter_1367.tape_ptr]))])}"
      : local.iter_1367.output)
    
    tape = (
      local.code_1368[0] == "+"
        ? [for i, b in local.iter_1367.tape : (i == local.iter_1367.tape_ptr ? (b + local.code_1368[1]) % 256 : b)] :
      local.code_1368[0] == "-"
        ? [for i, b in local.iter_1367.tape : (i == local.iter_1367.tape_ptr ? (b - local.code_1368[1] + 256) % 256 : b)] :
      local.code_1368[0] == ","
        ? [for i, b in local.iter_1367.tape : (i == local.iter_1367.tape_ptr ? local.ascii_lookup[substr(local.input_1368, 0, 1)] : b)]
        : local.iter_1367.tape)

    tape_ptr = (
      local.code_1368[0] == "<"
        ? local.iter_1367.tape_ptr - local.code_1368[1] :
      local.code_1368[0] == ">"
        ? local.iter_1367.tape_ptr + local.code_1368[1]
        : local.iter_1367.tape_ptr)

    code_ptr = 2 + (
      local.code_1368[0] == "["
        ? local.iter_1367.tape[local.iter_1367.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1367.code_ptr)] : local.iter_1367.code_ptr :
      local.code_1368[0] == "]"
        ? local.iter_1367.tape[local.iter_1367.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1367.code_ptr)] : local.iter_1367.code_ptr
        : local.iter_1367.code_ptr)

    steps_taken = 1 + local.iter_1367.steps_taken
  }
}

locals {
  code_1369 = (try(local.iter_1368.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1368.code_ptr, local.iter_1368.code_ptr + 2)
    : [null])

  input_1369 = (local.code_1369[0] == ","
    ? substr(local.input_1368, local.code_1369[1], -1)
    : local.input_1368)

  iter_1369 = try(local.iter_1368.code_ptr >= length(var.code), true) ? local.iter_1368 : {
    output = (local.code_1369[0] == "."
      ? "${local.iter_1368.output}${join("", [for _ in range(local.code_1369[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1368.tape[local.iter_1368.tape_ptr]))])}"
      : local.iter_1368.output)
    
    tape = (
      local.code_1369[0] == "+"
        ? [for i, b in local.iter_1368.tape : (i == local.iter_1368.tape_ptr ? (b + local.code_1369[1]) % 256 : b)] :
      local.code_1369[0] == "-"
        ? [for i, b in local.iter_1368.tape : (i == local.iter_1368.tape_ptr ? (b - local.code_1369[1] + 256) % 256 : b)] :
      local.code_1369[0] == ","
        ? [for i, b in local.iter_1368.tape : (i == local.iter_1368.tape_ptr ? local.ascii_lookup[substr(local.input_1369, 0, 1)] : b)]
        : local.iter_1368.tape)

    tape_ptr = (
      local.code_1369[0] == "<"
        ? local.iter_1368.tape_ptr - local.code_1369[1] :
      local.code_1369[0] == ">"
        ? local.iter_1368.tape_ptr + local.code_1369[1]
        : local.iter_1368.tape_ptr)

    code_ptr = 2 + (
      local.code_1369[0] == "["
        ? local.iter_1368.tape[local.iter_1368.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1368.code_ptr)] : local.iter_1368.code_ptr :
      local.code_1369[0] == "]"
        ? local.iter_1368.tape[local.iter_1368.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1368.code_ptr)] : local.iter_1368.code_ptr
        : local.iter_1368.code_ptr)

    steps_taken = 1 + local.iter_1368.steps_taken
  }
}

locals {
  code_1370 = (try(local.iter_1369.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1369.code_ptr, local.iter_1369.code_ptr + 2)
    : [null])

  input_1370 = (local.code_1370[0] == ","
    ? substr(local.input_1369, local.code_1370[1], -1)
    : local.input_1369)

  iter_1370 = try(local.iter_1369.code_ptr >= length(var.code), true) ? local.iter_1369 : {
    output = (local.code_1370[0] == "."
      ? "${local.iter_1369.output}${join("", [for _ in range(local.code_1370[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1369.tape[local.iter_1369.tape_ptr]))])}"
      : local.iter_1369.output)
    
    tape = (
      local.code_1370[0] == "+"
        ? [for i, b in local.iter_1369.tape : (i == local.iter_1369.tape_ptr ? (b + local.code_1370[1]) % 256 : b)] :
      local.code_1370[0] == "-"
        ? [for i, b in local.iter_1369.tape : (i == local.iter_1369.tape_ptr ? (b - local.code_1370[1] + 256) % 256 : b)] :
      local.code_1370[0] == ","
        ? [for i, b in local.iter_1369.tape : (i == local.iter_1369.tape_ptr ? local.ascii_lookup[substr(local.input_1370, 0, 1)] : b)]
        : local.iter_1369.tape)

    tape_ptr = (
      local.code_1370[0] == "<"
        ? local.iter_1369.tape_ptr - local.code_1370[1] :
      local.code_1370[0] == ">"
        ? local.iter_1369.tape_ptr + local.code_1370[1]
        : local.iter_1369.tape_ptr)

    code_ptr = 2 + (
      local.code_1370[0] == "["
        ? local.iter_1369.tape[local.iter_1369.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1369.code_ptr)] : local.iter_1369.code_ptr :
      local.code_1370[0] == "]"
        ? local.iter_1369.tape[local.iter_1369.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1369.code_ptr)] : local.iter_1369.code_ptr
        : local.iter_1369.code_ptr)

    steps_taken = 1 + local.iter_1369.steps_taken
  }
}

locals {
  code_1371 = (try(local.iter_1370.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1370.code_ptr, local.iter_1370.code_ptr + 2)
    : [null])

  input_1371 = (local.code_1371[0] == ","
    ? substr(local.input_1370, local.code_1371[1], -1)
    : local.input_1370)

  iter_1371 = try(local.iter_1370.code_ptr >= length(var.code), true) ? local.iter_1370 : {
    output = (local.code_1371[0] == "."
      ? "${local.iter_1370.output}${join("", [for _ in range(local.code_1371[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1370.tape[local.iter_1370.tape_ptr]))])}"
      : local.iter_1370.output)
    
    tape = (
      local.code_1371[0] == "+"
        ? [for i, b in local.iter_1370.tape : (i == local.iter_1370.tape_ptr ? (b + local.code_1371[1]) % 256 : b)] :
      local.code_1371[0] == "-"
        ? [for i, b in local.iter_1370.tape : (i == local.iter_1370.tape_ptr ? (b - local.code_1371[1] + 256) % 256 : b)] :
      local.code_1371[0] == ","
        ? [for i, b in local.iter_1370.tape : (i == local.iter_1370.tape_ptr ? local.ascii_lookup[substr(local.input_1371, 0, 1)] : b)]
        : local.iter_1370.tape)

    tape_ptr = (
      local.code_1371[0] == "<"
        ? local.iter_1370.tape_ptr - local.code_1371[1] :
      local.code_1371[0] == ">"
        ? local.iter_1370.tape_ptr + local.code_1371[1]
        : local.iter_1370.tape_ptr)

    code_ptr = 2 + (
      local.code_1371[0] == "["
        ? local.iter_1370.tape[local.iter_1370.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1370.code_ptr)] : local.iter_1370.code_ptr :
      local.code_1371[0] == "]"
        ? local.iter_1370.tape[local.iter_1370.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1370.code_ptr)] : local.iter_1370.code_ptr
        : local.iter_1370.code_ptr)

    steps_taken = 1 + local.iter_1370.steps_taken
  }
}

locals {
  code_1372 = (try(local.iter_1371.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1371.code_ptr, local.iter_1371.code_ptr + 2)
    : [null])

  input_1372 = (local.code_1372[0] == ","
    ? substr(local.input_1371, local.code_1372[1], -1)
    : local.input_1371)

  iter_1372 = try(local.iter_1371.code_ptr >= length(var.code), true) ? local.iter_1371 : {
    output = (local.code_1372[0] == "."
      ? "${local.iter_1371.output}${join("", [for _ in range(local.code_1372[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1371.tape[local.iter_1371.tape_ptr]))])}"
      : local.iter_1371.output)
    
    tape = (
      local.code_1372[0] == "+"
        ? [for i, b in local.iter_1371.tape : (i == local.iter_1371.tape_ptr ? (b + local.code_1372[1]) % 256 : b)] :
      local.code_1372[0] == "-"
        ? [for i, b in local.iter_1371.tape : (i == local.iter_1371.tape_ptr ? (b - local.code_1372[1] + 256) % 256 : b)] :
      local.code_1372[0] == ","
        ? [for i, b in local.iter_1371.tape : (i == local.iter_1371.tape_ptr ? local.ascii_lookup[substr(local.input_1372, 0, 1)] : b)]
        : local.iter_1371.tape)

    tape_ptr = (
      local.code_1372[0] == "<"
        ? local.iter_1371.tape_ptr - local.code_1372[1] :
      local.code_1372[0] == ">"
        ? local.iter_1371.tape_ptr + local.code_1372[1]
        : local.iter_1371.tape_ptr)

    code_ptr = 2 + (
      local.code_1372[0] == "["
        ? local.iter_1371.tape[local.iter_1371.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1371.code_ptr)] : local.iter_1371.code_ptr :
      local.code_1372[0] == "]"
        ? local.iter_1371.tape[local.iter_1371.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1371.code_ptr)] : local.iter_1371.code_ptr
        : local.iter_1371.code_ptr)

    steps_taken = 1 + local.iter_1371.steps_taken
  }
}

locals {
  code_1373 = (try(local.iter_1372.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1372.code_ptr, local.iter_1372.code_ptr + 2)
    : [null])

  input_1373 = (local.code_1373[0] == ","
    ? substr(local.input_1372, local.code_1373[1], -1)
    : local.input_1372)

  iter_1373 = try(local.iter_1372.code_ptr >= length(var.code), true) ? local.iter_1372 : {
    output = (local.code_1373[0] == "."
      ? "${local.iter_1372.output}${join("", [for _ in range(local.code_1373[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1372.tape[local.iter_1372.tape_ptr]))])}"
      : local.iter_1372.output)
    
    tape = (
      local.code_1373[0] == "+"
        ? [for i, b in local.iter_1372.tape : (i == local.iter_1372.tape_ptr ? (b + local.code_1373[1]) % 256 : b)] :
      local.code_1373[0] == "-"
        ? [for i, b in local.iter_1372.tape : (i == local.iter_1372.tape_ptr ? (b - local.code_1373[1] + 256) % 256 : b)] :
      local.code_1373[0] == ","
        ? [for i, b in local.iter_1372.tape : (i == local.iter_1372.tape_ptr ? local.ascii_lookup[substr(local.input_1373, 0, 1)] : b)]
        : local.iter_1372.tape)

    tape_ptr = (
      local.code_1373[0] == "<"
        ? local.iter_1372.tape_ptr - local.code_1373[1] :
      local.code_1373[0] == ">"
        ? local.iter_1372.tape_ptr + local.code_1373[1]
        : local.iter_1372.tape_ptr)

    code_ptr = 2 + (
      local.code_1373[0] == "["
        ? local.iter_1372.tape[local.iter_1372.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1372.code_ptr)] : local.iter_1372.code_ptr :
      local.code_1373[0] == "]"
        ? local.iter_1372.tape[local.iter_1372.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1372.code_ptr)] : local.iter_1372.code_ptr
        : local.iter_1372.code_ptr)

    steps_taken = 1 + local.iter_1372.steps_taken
  }
}

locals {
  code_1374 = (try(local.iter_1373.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1373.code_ptr, local.iter_1373.code_ptr + 2)
    : [null])

  input_1374 = (local.code_1374[0] == ","
    ? substr(local.input_1373, local.code_1374[1], -1)
    : local.input_1373)

  iter_1374 = try(local.iter_1373.code_ptr >= length(var.code), true) ? local.iter_1373 : {
    output = (local.code_1374[0] == "."
      ? "${local.iter_1373.output}${join("", [for _ in range(local.code_1374[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1373.tape[local.iter_1373.tape_ptr]))])}"
      : local.iter_1373.output)
    
    tape = (
      local.code_1374[0] == "+"
        ? [for i, b in local.iter_1373.tape : (i == local.iter_1373.tape_ptr ? (b + local.code_1374[1]) % 256 : b)] :
      local.code_1374[0] == "-"
        ? [for i, b in local.iter_1373.tape : (i == local.iter_1373.tape_ptr ? (b - local.code_1374[1] + 256) % 256 : b)] :
      local.code_1374[0] == ","
        ? [for i, b in local.iter_1373.tape : (i == local.iter_1373.tape_ptr ? local.ascii_lookup[substr(local.input_1374, 0, 1)] : b)]
        : local.iter_1373.tape)

    tape_ptr = (
      local.code_1374[0] == "<"
        ? local.iter_1373.tape_ptr - local.code_1374[1] :
      local.code_1374[0] == ">"
        ? local.iter_1373.tape_ptr + local.code_1374[1]
        : local.iter_1373.tape_ptr)

    code_ptr = 2 + (
      local.code_1374[0] == "["
        ? local.iter_1373.tape[local.iter_1373.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1373.code_ptr)] : local.iter_1373.code_ptr :
      local.code_1374[0] == "]"
        ? local.iter_1373.tape[local.iter_1373.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1373.code_ptr)] : local.iter_1373.code_ptr
        : local.iter_1373.code_ptr)

    steps_taken = 1 + local.iter_1373.steps_taken
  }
}

locals {
  code_1375 = (try(local.iter_1374.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1374.code_ptr, local.iter_1374.code_ptr + 2)
    : [null])

  input_1375 = (local.code_1375[0] == ","
    ? substr(local.input_1374, local.code_1375[1], -1)
    : local.input_1374)

  iter_1375 = try(local.iter_1374.code_ptr >= length(var.code), true) ? local.iter_1374 : {
    output = (local.code_1375[0] == "."
      ? "${local.iter_1374.output}${join("", [for _ in range(local.code_1375[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1374.tape[local.iter_1374.tape_ptr]))])}"
      : local.iter_1374.output)
    
    tape = (
      local.code_1375[0] == "+"
        ? [for i, b in local.iter_1374.tape : (i == local.iter_1374.tape_ptr ? (b + local.code_1375[1]) % 256 : b)] :
      local.code_1375[0] == "-"
        ? [for i, b in local.iter_1374.tape : (i == local.iter_1374.tape_ptr ? (b - local.code_1375[1] + 256) % 256 : b)] :
      local.code_1375[0] == ","
        ? [for i, b in local.iter_1374.tape : (i == local.iter_1374.tape_ptr ? local.ascii_lookup[substr(local.input_1375, 0, 1)] : b)]
        : local.iter_1374.tape)

    tape_ptr = (
      local.code_1375[0] == "<"
        ? local.iter_1374.tape_ptr - local.code_1375[1] :
      local.code_1375[0] == ">"
        ? local.iter_1374.tape_ptr + local.code_1375[1]
        : local.iter_1374.tape_ptr)

    code_ptr = 2 + (
      local.code_1375[0] == "["
        ? local.iter_1374.tape[local.iter_1374.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1374.code_ptr)] : local.iter_1374.code_ptr :
      local.code_1375[0] == "]"
        ? local.iter_1374.tape[local.iter_1374.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1374.code_ptr)] : local.iter_1374.code_ptr
        : local.iter_1374.code_ptr)

    steps_taken = 1 + local.iter_1374.steps_taken
  }
}

locals {
  code_1376 = (try(local.iter_1375.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1375.code_ptr, local.iter_1375.code_ptr + 2)
    : [null])

  input_1376 = (local.code_1376[0] == ","
    ? substr(local.input_1375, local.code_1376[1], -1)
    : local.input_1375)

  iter_1376 = try(local.iter_1375.code_ptr >= length(var.code), true) ? local.iter_1375 : {
    output = (local.code_1376[0] == "."
      ? "${local.iter_1375.output}${join("", [for _ in range(local.code_1376[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1375.tape[local.iter_1375.tape_ptr]))])}"
      : local.iter_1375.output)
    
    tape = (
      local.code_1376[0] == "+"
        ? [for i, b in local.iter_1375.tape : (i == local.iter_1375.tape_ptr ? (b + local.code_1376[1]) % 256 : b)] :
      local.code_1376[0] == "-"
        ? [for i, b in local.iter_1375.tape : (i == local.iter_1375.tape_ptr ? (b - local.code_1376[1] + 256) % 256 : b)] :
      local.code_1376[0] == ","
        ? [for i, b in local.iter_1375.tape : (i == local.iter_1375.tape_ptr ? local.ascii_lookup[substr(local.input_1376, 0, 1)] : b)]
        : local.iter_1375.tape)

    tape_ptr = (
      local.code_1376[0] == "<"
        ? local.iter_1375.tape_ptr - local.code_1376[1] :
      local.code_1376[0] == ">"
        ? local.iter_1375.tape_ptr + local.code_1376[1]
        : local.iter_1375.tape_ptr)

    code_ptr = 2 + (
      local.code_1376[0] == "["
        ? local.iter_1375.tape[local.iter_1375.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1375.code_ptr)] : local.iter_1375.code_ptr :
      local.code_1376[0] == "]"
        ? local.iter_1375.tape[local.iter_1375.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1375.code_ptr)] : local.iter_1375.code_ptr
        : local.iter_1375.code_ptr)

    steps_taken = 1 + local.iter_1375.steps_taken
  }
}

locals {
  code_1377 = (try(local.iter_1376.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1376.code_ptr, local.iter_1376.code_ptr + 2)
    : [null])

  input_1377 = (local.code_1377[0] == ","
    ? substr(local.input_1376, local.code_1377[1], -1)
    : local.input_1376)

  iter_1377 = try(local.iter_1376.code_ptr >= length(var.code), true) ? local.iter_1376 : {
    output = (local.code_1377[0] == "."
      ? "${local.iter_1376.output}${join("", [for _ in range(local.code_1377[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1376.tape[local.iter_1376.tape_ptr]))])}"
      : local.iter_1376.output)
    
    tape = (
      local.code_1377[0] == "+"
        ? [for i, b in local.iter_1376.tape : (i == local.iter_1376.tape_ptr ? (b + local.code_1377[1]) % 256 : b)] :
      local.code_1377[0] == "-"
        ? [for i, b in local.iter_1376.tape : (i == local.iter_1376.tape_ptr ? (b - local.code_1377[1] + 256) % 256 : b)] :
      local.code_1377[0] == ","
        ? [for i, b in local.iter_1376.tape : (i == local.iter_1376.tape_ptr ? local.ascii_lookup[substr(local.input_1377, 0, 1)] : b)]
        : local.iter_1376.tape)

    tape_ptr = (
      local.code_1377[0] == "<"
        ? local.iter_1376.tape_ptr - local.code_1377[1] :
      local.code_1377[0] == ">"
        ? local.iter_1376.tape_ptr + local.code_1377[1]
        : local.iter_1376.tape_ptr)

    code_ptr = 2 + (
      local.code_1377[0] == "["
        ? local.iter_1376.tape[local.iter_1376.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1376.code_ptr)] : local.iter_1376.code_ptr :
      local.code_1377[0] == "]"
        ? local.iter_1376.tape[local.iter_1376.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1376.code_ptr)] : local.iter_1376.code_ptr
        : local.iter_1376.code_ptr)

    steps_taken = 1 + local.iter_1376.steps_taken
  }
}

locals {
  code_1378 = (try(local.iter_1377.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1377.code_ptr, local.iter_1377.code_ptr + 2)
    : [null])

  input_1378 = (local.code_1378[0] == ","
    ? substr(local.input_1377, local.code_1378[1], -1)
    : local.input_1377)

  iter_1378 = try(local.iter_1377.code_ptr >= length(var.code), true) ? local.iter_1377 : {
    output = (local.code_1378[0] == "."
      ? "${local.iter_1377.output}${join("", [for _ in range(local.code_1378[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1377.tape[local.iter_1377.tape_ptr]))])}"
      : local.iter_1377.output)
    
    tape = (
      local.code_1378[0] == "+"
        ? [for i, b in local.iter_1377.tape : (i == local.iter_1377.tape_ptr ? (b + local.code_1378[1]) % 256 : b)] :
      local.code_1378[0] == "-"
        ? [for i, b in local.iter_1377.tape : (i == local.iter_1377.tape_ptr ? (b - local.code_1378[1] + 256) % 256 : b)] :
      local.code_1378[0] == ","
        ? [for i, b in local.iter_1377.tape : (i == local.iter_1377.tape_ptr ? local.ascii_lookup[substr(local.input_1378, 0, 1)] : b)]
        : local.iter_1377.tape)

    tape_ptr = (
      local.code_1378[0] == "<"
        ? local.iter_1377.tape_ptr - local.code_1378[1] :
      local.code_1378[0] == ">"
        ? local.iter_1377.tape_ptr + local.code_1378[1]
        : local.iter_1377.tape_ptr)

    code_ptr = 2 + (
      local.code_1378[0] == "["
        ? local.iter_1377.tape[local.iter_1377.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1377.code_ptr)] : local.iter_1377.code_ptr :
      local.code_1378[0] == "]"
        ? local.iter_1377.tape[local.iter_1377.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1377.code_ptr)] : local.iter_1377.code_ptr
        : local.iter_1377.code_ptr)

    steps_taken = 1 + local.iter_1377.steps_taken
  }
}

locals {
  code_1379 = (try(local.iter_1378.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1378.code_ptr, local.iter_1378.code_ptr + 2)
    : [null])

  input_1379 = (local.code_1379[0] == ","
    ? substr(local.input_1378, local.code_1379[1], -1)
    : local.input_1378)

  iter_1379 = try(local.iter_1378.code_ptr >= length(var.code), true) ? local.iter_1378 : {
    output = (local.code_1379[0] == "."
      ? "${local.iter_1378.output}${join("", [for _ in range(local.code_1379[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1378.tape[local.iter_1378.tape_ptr]))])}"
      : local.iter_1378.output)
    
    tape = (
      local.code_1379[0] == "+"
        ? [for i, b in local.iter_1378.tape : (i == local.iter_1378.tape_ptr ? (b + local.code_1379[1]) % 256 : b)] :
      local.code_1379[0] == "-"
        ? [for i, b in local.iter_1378.tape : (i == local.iter_1378.tape_ptr ? (b - local.code_1379[1] + 256) % 256 : b)] :
      local.code_1379[0] == ","
        ? [for i, b in local.iter_1378.tape : (i == local.iter_1378.tape_ptr ? local.ascii_lookup[substr(local.input_1379, 0, 1)] : b)]
        : local.iter_1378.tape)

    tape_ptr = (
      local.code_1379[0] == "<"
        ? local.iter_1378.tape_ptr - local.code_1379[1] :
      local.code_1379[0] == ">"
        ? local.iter_1378.tape_ptr + local.code_1379[1]
        : local.iter_1378.tape_ptr)

    code_ptr = 2 + (
      local.code_1379[0] == "["
        ? local.iter_1378.tape[local.iter_1378.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1378.code_ptr)] : local.iter_1378.code_ptr :
      local.code_1379[0] == "]"
        ? local.iter_1378.tape[local.iter_1378.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1378.code_ptr)] : local.iter_1378.code_ptr
        : local.iter_1378.code_ptr)

    steps_taken = 1 + local.iter_1378.steps_taken
  }
}

locals {
  code_1380 = (try(local.iter_1379.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1379.code_ptr, local.iter_1379.code_ptr + 2)
    : [null])

  input_1380 = (local.code_1380[0] == ","
    ? substr(local.input_1379, local.code_1380[1], -1)
    : local.input_1379)

  iter_1380 = try(local.iter_1379.code_ptr >= length(var.code), true) ? local.iter_1379 : {
    output = (local.code_1380[0] == "."
      ? "${local.iter_1379.output}${join("", [for _ in range(local.code_1380[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1379.tape[local.iter_1379.tape_ptr]))])}"
      : local.iter_1379.output)
    
    tape = (
      local.code_1380[0] == "+"
        ? [for i, b in local.iter_1379.tape : (i == local.iter_1379.tape_ptr ? (b + local.code_1380[1]) % 256 : b)] :
      local.code_1380[0] == "-"
        ? [for i, b in local.iter_1379.tape : (i == local.iter_1379.tape_ptr ? (b - local.code_1380[1] + 256) % 256 : b)] :
      local.code_1380[0] == ","
        ? [for i, b in local.iter_1379.tape : (i == local.iter_1379.tape_ptr ? local.ascii_lookup[substr(local.input_1380, 0, 1)] : b)]
        : local.iter_1379.tape)

    tape_ptr = (
      local.code_1380[0] == "<"
        ? local.iter_1379.tape_ptr - local.code_1380[1] :
      local.code_1380[0] == ">"
        ? local.iter_1379.tape_ptr + local.code_1380[1]
        : local.iter_1379.tape_ptr)

    code_ptr = 2 + (
      local.code_1380[0] == "["
        ? local.iter_1379.tape[local.iter_1379.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1379.code_ptr)] : local.iter_1379.code_ptr :
      local.code_1380[0] == "]"
        ? local.iter_1379.tape[local.iter_1379.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1379.code_ptr)] : local.iter_1379.code_ptr
        : local.iter_1379.code_ptr)

    steps_taken = 1 + local.iter_1379.steps_taken
  }
}

locals {
  code_1381 = (try(local.iter_1380.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1380.code_ptr, local.iter_1380.code_ptr + 2)
    : [null])

  input_1381 = (local.code_1381[0] == ","
    ? substr(local.input_1380, local.code_1381[1], -1)
    : local.input_1380)

  iter_1381 = try(local.iter_1380.code_ptr >= length(var.code), true) ? local.iter_1380 : {
    output = (local.code_1381[0] == "."
      ? "${local.iter_1380.output}${join("", [for _ in range(local.code_1381[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1380.tape[local.iter_1380.tape_ptr]))])}"
      : local.iter_1380.output)
    
    tape = (
      local.code_1381[0] == "+"
        ? [for i, b in local.iter_1380.tape : (i == local.iter_1380.tape_ptr ? (b + local.code_1381[1]) % 256 : b)] :
      local.code_1381[0] == "-"
        ? [for i, b in local.iter_1380.tape : (i == local.iter_1380.tape_ptr ? (b - local.code_1381[1] + 256) % 256 : b)] :
      local.code_1381[0] == ","
        ? [for i, b in local.iter_1380.tape : (i == local.iter_1380.tape_ptr ? local.ascii_lookup[substr(local.input_1381, 0, 1)] : b)]
        : local.iter_1380.tape)

    tape_ptr = (
      local.code_1381[0] == "<"
        ? local.iter_1380.tape_ptr - local.code_1381[1] :
      local.code_1381[0] == ">"
        ? local.iter_1380.tape_ptr + local.code_1381[1]
        : local.iter_1380.tape_ptr)

    code_ptr = 2 + (
      local.code_1381[0] == "["
        ? local.iter_1380.tape[local.iter_1380.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1380.code_ptr)] : local.iter_1380.code_ptr :
      local.code_1381[0] == "]"
        ? local.iter_1380.tape[local.iter_1380.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1380.code_ptr)] : local.iter_1380.code_ptr
        : local.iter_1380.code_ptr)

    steps_taken = 1 + local.iter_1380.steps_taken
  }
}

locals {
  code_1382 = (try(local.iter_1381.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1381.code_ptr, local.iter_1381.code_ptr + 2)
    : [null])

  input_1382 = (local.code_1382[0] == ","
    ? substr(local.input_1381, local.code_1382[1], -1)
    : local.input_1381)

  iter_1382 = try(local.iter_1381.code_ptr >= length(var.code), true) ? local.iter_1381 : {
    output = (local.code_1382[0] == "."
      ? "${local.iter_1381.output}${join("", [for _ in range(local.code_1382[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1381.tape[local.iter_1381.tape_ptr]))])}"
      : local.iter_1381.output)
    
    tape = (
      local.code_1382[0] == "+"
        ? [for i, b in local.iter_1381.tape : (i == local.iter_1381.tape_ptr ? (b + local.code_1382[1]) % 256 : b)] :
      local.code_1382[0] == "-"
        ? [for i, b in local.iter_1381.tape : (i == local.iter_1381.tape_ptr ? (b - local.code_1382[1] + 256) % 256 : b)] :
      local.code_1382[0] == ","
        ? [for i, b in local.iter_1381.tape : (i == local.iter_1381.tape_ptr ? local.ascii_lookup[substr(local.input_1382, 0, 1)] : b)]
        : local.iter_1381.tape)

    tape_ptr = (
      local.code_1382[0] == "<"
        ? local.iter_1381.tape_ptr - local.code_1382[1] :
      local.code_1382[0] == ">"
        ? local.iter_1381.tape_ptr + local.code_1382[1]
        : local.iter_1381.tape_ptr)

    code_ptr = 2 + (
      local.code_1382[0] == "["
        ? local.iter_1381.tape[local.iter_1381.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1381.code_ptr)] : local.iter_1381.code_ptr :
      local.code_1382[0] == "]"
        ? local.iter_1381.tape[local.iter_1381.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1381.code_ptr)] : local.iter_1381.code_ptr
        : local.iter_1381.code_ptr)

    steps_taken = 1 + local.iter_1381.steps_taken
  }
}

locals {
  code_1383 = (try(local.iter_1382.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1382.code_ptr, local.iter_1382.code_ptr + 2)
    : [null])

  input_1383 = (local.code_1383[0] == ","
    ? substr(local.input_1382, local.code_1383[1], -1)
    : local.input_1382)

  iter_1383 = try(local.iter_1382.code_ptr >= length(var.code), true) ? local.iter_1382 : {
    output = (local.code_1383[0] == "."
      ? "${local.iter_1382.output}${join("", [for _ in range(local.code_1383[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1382.tape[local.iter_1382.tape_ptr]))])}"
      : local.iter_1382.output)
    
    tape = (
      local.code_1383[0] == "+"
        ? [for i, b in local.iter_1382.tape : (i == local.iter_1382.tape_ptr ? (b + local.code_1383[1]) % 256 : b)] :
      local.code_1383[0] == "-"
        ? [for i, b in local.iter_1382.tape : (i == local.iter_1382.tape_ptr ? (b - local.code_1383[1] + 256) % 256 : b)] :
      local.code_1383[0] == ","
        ? [for i, b in local.iter_1382.tape : (i == local.iter_1382.tape_ptr ? local.ascii_lookup[substr(local.input_1383, 0, 1)] : b)]
        : local.iter_1382.tape)

    tape_ptr = (
      local.code_1383[0] == "<"
        ? local.iter_1382.tape_ptr - local.code_1383[1] :
      local.code_1383[0] == ">"
        ? local.iter_1382.tape_ptr + local.code_1383[1]
        : local.iter_1382.tape_ptr)

    code_ptr = 2 + (
      local.code_1383[0] == "["
        ? local.iter_1382.tape[local.iter_1382.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1382.code_ptr)] : local.iter_1382.code_ptr :
      local.code_1383[0] == "]"
        ? local.iter_1382.tape[local.iter_1382.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1382.code_ptr)] : local.iter_1382.code_ptr
        : local.iter_1382.code_ptr)

    steps_taken = 1 + local.iter_1382.steps_taken
  }
}

locals {
  code_1384 = (try(local.iter_1383.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1383.code_ptr, local.iter_1383.code_ptr + 2)
    : [null])

  input_1384 = (local.code_1384[0] == ","
    ? substr(local.input_1383, local.code_1384[1], -1)
    : local.input_1383)

  iter_1384 = try(local.iter_1383.code_ptr >= length(var.code), true) ? local.iter_1383 : {
    output = (local.code_1384[0] == "."
      ? "${local.iter_1383.output}${join("", [for _ in range(local.code_1384[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1383.tape[local.iter_1383.tape_ptr]))])}"
      : local.iter_1383.output)
    
    tape = (
      local.code_1384[0] == "+"
        ? [for i, b in local.iter_1383.tape : (i == local.iter_1383.tape_ptr ? (b + local.code_1384[1]) % 256 : b)] :
      local.code_1384[0] == "-"
        ? [for i, b in local.iter_1383.tape : (i == local.iter_1383.tape_ptr ? (b - local.code_1384[1] + 256) % 256 : b)] :
      local.code_1384[0] == ","
        ? [for i, b in local.iter_1383.tape : (i == local.iter_1383.tape_ptr ? local.ascii_lookup[substr(local.input_1384, 0, 1)] : b)]
        : local.iter_1383.tape)

    tape_ptr = (
      local.code_1384[0] == "<"
        ? local.iter_1383.tape_ptr - local.code_1384[1] :
      local.code_1384[0] == ">"
        ? local.iter_1383.tape_ptr + local.code_1384[1]
        : local.iter_1383.tape_ptr)

    code_ptr = 2 + (
      local.code_1384[0] == "["
        ? local.iter_1383.tape[local.iter_1383.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1383.code_ptr)] : local.iter_1383.code_ptr :
      local.code_1384[0] == "]"
        ? local.iter_1383.tape[local.iter_1383.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1383.code_ptr)] : local.iter_1383.code_ptr
        : local.iter_1383.code_ptr)

    steps_taken = 1 + local.iter_1383.steps_taken
  }
}

locals {
  code_1385 = (try(local.iter_1384.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1384.code_ptr, local.iter_1384.code_ptr + 2)
    : [null])

  input_1385 = (local.code_1385[0] == ","
    ? substr(local.input_1384, local.code_1385[1], -1)
    : local.input_1384)

  iter_1385 = try(local.iter_1384.code_ptr >= length(var.code), true) ? local.iter_1384 : {
    output = (local.code_1385[0] == "."
      ? "${local.iter_1384.output}${join("", [for _ in range(local.code_1385[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1384.tape[local.iter_1384.tape_ptr]))])}"
      : local.iter_1384.output)
    
    tape = (
      local.code_1385[0] == "+"
        ? [for i, b in local.iter_1384.tape : (i == local.iter_1384.tape_ptr ? (b + local.code_1385[1]) % 256 : b)] :
      local.code_1385[0] == "-"
        ? [for i, b in local.iter_1384.tape : (i == local.iter_1384.tape_ptr ? (b - local.code_1385[1] + 256) % 256 : b)] :
      local.code_1385[0] == ","
        ? [for i, b in local.iter_1384.tape : (i == local.iter_1384.tape_ptr ? local.ascii_lookup[substr(local.input_1385, 0, 1)] : b)]
        : local.iter_1384.tape)

    tape_ptr = (
      local.code_1385[0] == "<"
        ? local.iter_1384.tape_ptr - local.code_1385[1] :
      local.code_1385[0] == ">"
        ? local.iter_1384.tape_ptr + local.code_1385[1]
        : local.iter_1384.tape_ptr)

    code_ptr = 2 + (
      local.code_1385[0] == "["
        ? local.iter_1384.tape[local.iter_1384.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1384.code_ptr)] : local.iter_1384.code_ptr :
      local.code_1385[0] == "]"
        ? local.iter_1384.tape[local.iter_1384.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1384.code_ptr)] : local.iter_1384.code_ptr
        : local.iter_1384.code_ptr)

    steps_taken = 1 + local.iter_1384.steps_taken
  }
}

locals {
  code_1386 = (try(local.iter_1385.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1385.code_ptr, local.iter_1385.code_ptr + 2)
    : [null])

  input_1386 = (local.code_1386[0] == ","
    ? substr(local.input_1385, local.code_1386[1], -1)
    : local.input_1385)

  iter_1386 = try(local.iter_1385.code_ptr >= length(var.code), true) ? local.iter_1385 : {
    output = (local.code_1386[0] == "."
      ? "${local.iter_1385.output}${join("", [for _ in range(local.code_1386[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1385.tape[local.iter_1385.tape_ptr]))])}"
      : local.iter_1385.output)
    
    tape = (
      local.code_1386[0] == "+"
        ? [for i, b in local.iter_1385.tape : (i == local.iter_1385.tape_ptr ? (b + local.code_1386[1]) % 256 : b)] :
      local.code_1386[0] == "-"
        ? [for i, b in local.iter_1385.tape : (i == local.iter_1385.tape_ptr ? (b - local.code_1386[1] + 256) % 256 : b)] :
      local.code_1386[0] == ","
        ? [for i, b in local.iter_1385.tape : (i == local.iter_1385.tape_ptr ? local.ascii_lookup[substr(local.input_1386, 0, 1)] : b)]
        : local.iter_1385.tape)

    tape_ptr = (
      local.code_1386[0] == "<"
        ? local.iter_1385.tape_ptr - local.code_1386[1] :
      local.code_1386[0] == ">"
        ? local.iter_1385.tape_ptr + local.code_1386[1]
        : local.iter_1385.tape_ptr)

    code_ptr = 2 + (
      local.code_1386[0] == "["
        ? local.iter_1385.tape[local.iter_1385.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1385.code_ptr)] : local.iter_1385.code_ptr :
      local.code_1386[0] == "]"
        ? local.iter_1385.tape[local.iter_1385.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1385.code_ptr)] : local.iter_1385.code_ptr
        : local.iter_1385.code_ptr)

    steps_taken = 1 + local.iter_1385.steps_taken
  }
}

locals {
  code_1387 = (try(local.iter_1386.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1386.code_ptr, local.iter_1386.code_ptr + 2)
    : [null])

  input_1387 = (local.code_1387[0] == ","
    ? substr(local.input_1386, local.code_1387[1], -1)
    : local.input_1386)

  iter_1387 = try(local.iter_1386.code_ptr >= length(var.code), true) ? local.iter_1386 : {
    output = (local.code_1387[0] == "."
      ? "${local.iter_1386.output}${join("", [for _ in range(local.code_1387[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1386.tape[local.iter_1386.tape_ptr]))])}"
      : local.iter_1386.output)
    
    tape = (
      local.code_1387[0] == "+"
        ? [for i, b in local.iter_1386.tape : (i == local.iter_1386.tape_ptr ? (b + local.code_1387[1]) % 256 : b)] :
      local.code_1387[0] == "-"
        ? [for i, b in local.iter_1386.tape : (i == local.iter_1386.tape_ptr ? (b - local.code_1387[1] + 256) % 256 : b)] :
      local.code_1387[0] == ","
        ? [for i, b in local.iter_1386.tape : (i == local.iter_1386.tape_ptr ? local.ascii_lookup[substr(local.input_1387, 0, 1)] : b)]
        : local.iter_1386.tape)

    tape_ptr = (
      local.code_1387[0] == "<"
        ? local.iter_1386.tape_ptr - local.code_1387[1] :
      local.code_1387[0] == ">"
        ? local.iter_1386.tape_ptr + local.code_1387[1]
        : local.iter_1386.tape_ptr)

    code_ptr = 2 + (
      local.code_1387[0] == "["
        ? local.iter_1386.tape[local.iter_1386.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1386.code_ptr)] : local.iter_1386.code_ptr :
      local.code_1387[0] == "]"
        ? local.iter_1386.tape[local.iter_1386.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1386.code_ptr)] : local.iter_1386.code_ptr
        : local.iter_1386.code_ptr)

    steps_taken = 1 + local.iter_1386.steps_taken
  }
}

locals {
  code_1388 = (try(local.iter_1387.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1387.code_ptr, local.iter_1387.code_ptr + 2)
    : [null])

  input_1388 = (local.code_1388[0] == ","
    ? substr(local.input_1387, local.code_1388[1], -1)
    : local.input_1387)

  iter_1388 = try(local.iter_1387.code_ptr >= length(var.code), true) ? local.iter_1387 : {
    output = (local.code_1388[0] == "."
      ? "${local.iter_1387.output}${join("", [for _ in range(local.code_1388[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1387.tape[local.iter_1387.tape_ptr]))])}"
      : local.iter_1387.output)
    
    tape = (
      local.code_1388[0] == "+"
        ? [for i, b in local.iter_1387.tape : (i == local.iter_1387.tape_ptr ? (b + local.code_1388[1]) % 256 : b)] :
      local.code_1388[0] == "-"
        ? [for i, b in local.iter_1387.tape : (i == local.iter_1387.tape_ptr ? (b - local.code_1388[1] + 256) % 256 : b)] :
      local.code_1388[0] == ","
        ? [for i, b in local.iter_1387.tape : (i == local.iter_1387.tape_ptr ? local.ascii_lookup[substr(local.input_1388, 0, 1)] : b)]
        : local.iter_1387.tape)

    tape_ptr = (
      local.code_1388[0] == "<"
        ? local.iter_1387.tape_ptr - local.code_1388[1] :
      local.code_1388[0] == ">"
        ? local.iter_1387.tape_ptr + local.code_1388[1]
        : local.iter_1387.tape_ptr)

    code_ptr = 2 + (
      local.code_1388[0] == "["
        ? local.iter_1387.tape[local.iter_1387.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1387.code_ptr)] : local.iter_1387.code_ptr :
      local.code_1388[0] == "]"
        ? local.iter_1387.tape[local.iter_1387.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1387.code_ptr)] : local.iter_1387.code_ptr
        : local.iter_1387.code_ptr)

    steps_taken = 1 + local.iter_1387.steps_taken
  }
}

locals {
  code_1389 = (try(local.iter_1388.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1388.code_ptr, local.iter_1388.code_ptr + 2)
    : [null])

  input_1389 = (local.code_1389[0] == ","
    ? substr(local.input_1388, local.code_1389[1], -1)
    : local.input_1388)

  iter_1389 = try(local.iter_1388.code_ptr >= length(var.code), true) ? local.iter_1388 : {
    output = (local.code_1389[0] == "."
      ? "${local.iter_1388.output}${join("", [for _ in range(local.code_1389[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1388.tape[local.iter_1388.tape_ptr]))])}"
      : local.iter_1388.output)
    
    tape = (
      local.code_1389[0] == "+"
        ? [for i, b in local.iter_1388.tape : (i == local.iter_1388.tape_ptr ? (b + local.code_1389[1]) % 256 : b)] :
      local.code_1389[0] == "-"
        ? [for i, b in local.iter_1388.tape : (i == local.iter_1388.tape_ptr ? (b - local.code_1389[1] + 256) % 256 : b)] :
      local.code_1389[0] == ","
        ? [for i, b in local.iter_1388.tape : (i == local.iter_1388.tape_ptr ? local.ascii_lookup[substr(local.input_1389, 0, 1)] : b)]
        : local.iter_1388.tape)

    tape_ptr = (
      local.code_1389[0] == "<"
        ? local.iter_1388.tape_ptr - local.code_1389[1] :
      local.code_1389[0] == ">"
        ? local.iter_1388.tape_ptr + local.code_1389[1]
        : local.iter_1388.tape_ptr)

    code_ptr = 2 + (
      local.code_1389[0] == "["
        ? local.iter_1388.tape[local.iter_1388.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1388.code_ptr)] : local.iter_1388.code_ptr :
      local.code_1389[0] == "]"
        ? local.iter_1388.tape[local.iter_1388.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1388.code_ptr)] : local.iter_1388.code_ptr
        : local.iter_1388.code_ptr)

    steps_taken = 1 + local.iter_1388.steps_taken
  }
}

locals {
  code_1390 = (try(local.iter_1389.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1389.code_ptr, local.iter_1389.code_ptr + 2)
    : [null])

  input_1390 = (local.code_1390[0] == ","
    ? substr(local.input_1389, local.code_1390[1], -1)
    : local.input_1389)

  iter_1390 = try(local.iter_1389.code_ptr >= length(var.code), true) ? local.iter_1389 : {
    output = (local.code_1390[0] == "."
      ? "${local.iter_1389.output}${join("", [for _ in range(local.code_1390[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1389.tape[local.iter_1389.tape_ptr]))])}"
      : local.iter_1389.output)
    
    tape = (
      local.code_1390[0] == "+"
        ? [for i, b in local.iter_1389.tape : (i == local.iter_1389.tape_ptr ? (b + local.code_1390[1]) % 256 : b)] :
      local.code_1390[0] == "-"
        ? [for i, b in local.iter_1389.tape : (i == local.iter_1389.tape_ptr ? (b - local.code_1390[1] + 256) % 256 : b)] :
      local.code_1390[0] == ","
        ? [for i, b in local.iter_1389.tape : (i == local.iter_1389.tape_ptr ? local.ascii_lookup[substr(local.input_1390, 0, 1)] : b)]
        : local.iter_1389.tape)

    tape_ptr = (
      local.code_1390[0] == "<"
        ? local.iter_1389.tape_ptr - local.code_1390[1] :
      local.code_1390[0] == ">"
        ? local.iter_1389.tape_ptr + local.code_1390[1]
        : local.iter_1389.tape_ptr)

    code_ptr = 2 + (
      local.code_1390[0] == "["
        ? local.iter_1389.tape[local.iter_1389.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1389.code_ptr)] : local.iter_1389.code_ptr :
      local.code_1390[0] == "]"
        ? local.iter_1389.tape[local.iter_1389.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1389.code_ptr)] : local.iter_1389.code_ptr
        : local.iter_1389.code_ptr)

    steps_taken = 1 + local.iter_1389.steps_taken
  }
}

locals {
  code_1391 = (try(local.iter_1390.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1390.code_ptr, local.iter_1390.code_ptr + 2)
    : [null])

  input_1391 = (local.code_1391[0] == ","
    ? substr(local.input_1390, local.code_1391[1], -1)
    : local.input_1390)

  iter_1391 = try(local.iter_1390.code_ptr >= length(var.code), true) ? local.iter_1390 : {
    output = (local.code_1391[0] == "."
      ? "${local.iter_1390.output}${join("", [for _ in range(local.code_1391[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1390.tape[local.iter_1390.tape_ptr]))])}"
      : local.iter_1390.output)
    
    tape = (
      local.code_1391[0] == "+"
        ? [for i, b in local.iter_1390.tape : (i == local.iter_1390.tape_ptr ? (b + local.code_1391[1]) % 256 : b)] :
      local.code_1391[0] == "-"
        ? [for i, b in local.iter_1390.tape : (i == local.iter_1390.tape_ptr ? (b - local.code_1391[1] + 256) % 256 : b)] :
      local.code_1391[0] == ","
        ? [for i, b in local.iter_1390.tape : (i == local.iter_1390.tape_ptr ? local.ascii_lookup[substr(local.input_1391, 0, 1)] : b)]
        : local.iter_1390.tape)

    tape_ptr = (
      local.code_1391[0] == "<"
        ? local.iter_1390.tape_ptr - local.code_1391[1] :
      local.code_1391[0] == ">"
        ? local.iter_1390.tape_ptr + local.code_1391[1]
        : local.iter_1390.tape_ptr)

    code_ptr = 2 + (
      local.code_1391[0] == "["
        ? local.iter_1390.tape[local.iter_1390.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1390.code_ptr)] : local.iter_1390.code_ptr :
      local.code_1391[0] == "]"
        ? local.iter_1390.tape[local.iter_1390.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1390.code_ptr)] : local.iter_1390.code_ptr
        : local.iter_1390.code_ptr)

    steps_taken = 1 + local.iter_1390.steps_taken
  }
}

locals {
  code_1392 = (try(local.iter_1391.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1391.code_ptr, local.iter_1391.code_ptr + 2)
    : [null])

  input_1392 = (local.code_1392[0] == ","
    ? substr(local.input_1391, local.code_1392[1], -1)
    : local.input_1391)

  iter_1392 = try(local.iter_1391.code_ptr >= length(var.code), true) ? local.iter_1391 : {
    output = (local.code_1392[0] == "."
      ? "${local.iter_1391.output}${join("", [for _ in range(local.code_1392[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1391.tape[local.iter_1391.tape_ptr]))])}"
      : local.iter_1391.output)
    
    tape = (
      local.code_1392[0] == "+"
        ? [for i, b in local.iter_1391.tape : (i == local.iter_1391.tape_ptr ? (b + local.code_1392[1]) % 256 : b)] :
      local.code_1392[0] == "-"
        ? [for i, b in local.iter_1391.tape : (i == local.iter_1391.tape_ptr ? (b - local.code_1392[1] + 256) % 256 : b)] :
      local.code_1392[0] == ","
        ? [for i, b in local.iter_1391.tape : (i == local.iter_1391.tape_ptr ? local.ascii_lookup[substr(local.input_1392, 0, 1)] : b)]
        : local.iter_1391.tape)

    tape_ptr = (
      local.code_1392[0] == "<"
        ? local.iter_1391.tape_ptr - local.code_1392[1] :
      local.code_1392[0] == ">"
        ? local.iter_1391.tape_ptr + local.code_1392[1]
        : local.iter_1391.tape_ptr)

    code_ptr = 2 + (
      local.code_1392[0] == "["
        ? local.iter_1391.tape[local.iter_1391.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1391.code_ptr)] : local.iter_1391.code_ptr :
      local.code_1392[0] == "]"
        ? local.iter_1391.tape[local.iter_1391.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1391.code_ptr)] : local.iter_1391.code_ptr
        : local.iter_1391.code_ptr)

    steps_taken = 1 + local.iter_1391.steps_taken
  }
}

locals {
  code_1393 = (try(local.iter_1392.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1392.code_ptr, local.iter_1392.code_ptr + 2)
    : [null])

  input_1393 = (local.code_1393[0] == ","
    ? substr(local.input_1392, local.code_1393[1], -1)
    : local.input_1392)

  iter_1393 = try(local.iter_1392.code_ptr >= length(var.code), true) ? local.iter_1392 : {
    output = (local.code_1393[0] == "."
      ? "${local.iter_1392.output}${join("", [for _ in range(local.code_1393[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1392.tape[local.iter_1392.tape_ptr]))])}"
      : local.iter_1392.output)
    
    tape = (
      local.code_1393[0] == "+"
        ? [for i, b in local.iter_1392.tape : (i == local.iter_1392.tape_ptr ? (b + local.code_1393[1]) % 256 : b)] :
      local.code_1393[0] == "-"
        ? [for i, b in local.iter_1392.tape : (i == local.iter_1392.tape_ptr ? (b - local.code_1393[1] + 256) % 256 : b)] :
      local.code_1393[0] == ","
        ? [for i, b in local.iter_1392.tape : (i == local.iter_1392.tape_ptr ? local.ascii_lookup[substr(local.input_1393, 0, 1)] : b)]
        : local.iter_1392.tape)

    tape_ptr = (
      local.code_1393[0] == "<"
        ? local.iter_1392.tape_ptr - local.code_1393[1] :
      local.code_1393[0] == ">"
        ? local.iter_1392.tape_ptr + local.code_1393[1]
        : local.iter_1392.tape_ptr)

    code_ptr = 2 + (
      local.code_1393[0] == "["
        ? local.iter_1392.tape[local.iter_1392.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1392.code_ptr)] : local.iter_1392.code_ptr :
      local.code_1393[0] == "]"
        ? local.iter_1392.tape[local.iter_1392.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1392.code_ptr)] : local.iter_1392.code_ptr
        : local.iter_1392.code_ptr)

    steps_taken = 1 + local.iter_1392.steps_taken
  }
}

locals {
  code_1394 = (try(local.iter_1393.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1393.code_ptr, local.iter_1393.code_ptr + 2)
    : [null])

  input_1394 = (local.code_1394[0] == ","
    ? substr(local.input_1393, local.code_1394[1], -1)
    : local.input_1393)

  iter_1394 = try(local.iter_1393.code_ptr >= length(var.code), true) ? local.iter_1393 : {
    output = (local.code_1394[0] == "."
      ? "${local.iter_1393.output}${join("", [for _ in range(local.code_1394[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1393.tape[local.iter_1393.tape_ptr]))])}"
      : local.iter_1393.output)
    
    tape = (
      local.code_1394[0] == "+"
        ? [for i, b in local.iter_1393.tape : (i == local.iter_1393.tape_ptr ? (b + local.code_1394[1]) % 256 : b)] :
      local.code_1394[0] == "-"
        ? [for i, b in local.iter_1393.tape : (i == local.iter_1393.tape_ptr ? (b - local.code_1394[1] + 256) % 256 : b)] :
      local.code_1394[0] == ","
        ? [for i, b in local.iter_1393.tape : (i == local.iter_1393.tape_ptr ? local.ascii_lookup[substr(local.input_1394, 0, 1)] : b)]
        : local.iter_1393.tape)

    tape_ptr = (
      local.code_1394[0] == "<"
        ? local.iter_1393.tape_ptr - local.code_1394[1] :
      local.code_1394[0] == ">"
        ? local.iter_1393.tape_ptr + local.code_1394[1]
        : local.iter_1393.tape_ptr)

    code_ptr = 2 + (
      local.code_1394[0] == "["
        ? local.iter_1393.tape[local.iter_1393.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1393.code_ptr)] : local.iter_1393.code_ptr :
      local.code_1394[0] == "]"
        ? local.iter_1393.tape[local.iter_1393.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1393.code_ptr)] : local.iter_1393.code_ptr
        : local.iter_1393.code_ptr)

    steps_taken = 1 + local.iter_1393.steps_taken
  }
}

locals {
  code_1395 = (try(local.iter_1394.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1394.code_ptr, local.iter_1394.code_ptr + 2)
    : [null])

  input_1395 = (local.code_1395[0] == ","
    ? substr(local.input_1394, local.code_1395[1], -1)
    : local.input_1394)

  iter_1395 = try(local.iter_1394.code_ptr >= length(var.code), true) ? local.iter_1394 : {
    output = (local.code_1395[0] == "."
      ? "${local.iter_1394.output}${join("", [for _ in range(local.code_1395[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1394.tape[local.iter_1394.tape_ptr]))])}"
      : local.iter_1394.output)
    
    tape = (
      local.code_1395[0] == "+"
        ? [for i, b in local.iter_1394.tape : (i == local.iter_1394.tape_ptr ? (b + local.code_1395[1]) % 256 : b)] :
      local.code_1395[0] == "-"
        ? [for i, b in local.iter_1394.tape : (i == local.iter_1394.tape_ptr ? (b - local.code_1395[1] + 256) % 256 : b)] :
      local.code_1395[0] == ","
        ? [for i, b in local.iter_1394.tape : (i == local.iter_1394.tape_ptr ? local.ascii_lookup[substr(local.input_1395, 0, 1)] : b)]
        : local.iter_1394.tape)

    tape_ptr = (
      local.code_1395[0] == "<"
        ? local.iter_1394.tape_ptr - local.code_1395[1] :
      local.code_1395[0] == ">"
        ? local.iter_1394.tape_ptr + local.code_1395[1]
        : local.iter_1394.tape_ptr)

    code_ptr = 2 + (
      local.code_1395[0] == "["
        ? local.iter_1394.tape[local.iter_1394.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1394.code_ptr)] : local.iter_1394.code_ptr :
      local.code_1395[0] == "]"
        ? local.iter_1394.tape[local.iter_1394.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1394.code_ptr)] : local.iter_1394.code_ptr
        : local.iter_1394.code_ptr)

    steps_taken = 1 + local.iter_1394.steps_taken
  }
}

locals {
  code_1396 = (try(local.iter_1395.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1395.code_ptr, local.iter_1395.code_ptr + 2)
    : [null])

  input_1396 = (local.code_1396[0] == ","
    ? substr(local.input_1395, local.code_1396[1], -1)
    : local.input_1395)

  iter_1396 = try(local.iter_1395.code_ptr >= length(var.code), true) ? local.iter_1395 : {
    output = (local.code_1396[0] == "."
      ? "${local.iter_1395.output}${join("", [for _ in range(local.code_1396[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1395.tape[local.iter_1395.tape_ptr]))])}"
      : local.iter_1395.output)
    
    tape = (
      local.code_1396[0] == "+"
        ? [for i, b in local.iter_1395.tape : (i == local.iter_1395.tape_ptr ? (b + local.code_1396[1]) % 256 : b)] :
      local.code_1396[0] == "-"
        ? [for i, b in local.iter_1395.tape : (i == local.iter_1395.tape_ptr ? (b - local.code_1396[1] + 256) % 256 : b)] :
      local.code_1396[0] == ","
        ? [for i, b in local.iter_1395.tape : (i == local.iter_1395.tape_ptr ? local.ascii_lookup[substr(local.input_1396, 0, 1)] : b)]
        : local.iter_1395.tape)

    tape_ptr = (
      local.code_1396[0] == "<"
        ? local.iter_1395.tape_ptr - local.code_1396[1] :
      local.code_1396[0] == ">"
        ? local.iter_1395.tape_ptr + local.code_1396[1]
        : local.iter_1395.tape_ptr)

    code_ptr = 2 + (
      local.code_1396[0] == "["
        ? local.iter_1395.tape[local.iter_1395.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1395.code_ptr)] : local.iter_1395.code_ptr :
      local.code_1396[0] == "]"
        ? local.iter_1395.tape[local.iter_1395.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1395.code_ptr)] : local.iter_1395.code_ptr
        : local.iter_1395.code_ptr)

    steps_taken = 1 + local.iter_1395.steps_taken
  }
}

locals {
  code_1397 = (try(local.iter_1396.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1396.code_ptr, local.iter_1396.code_ptr + 2)
    : [null])

  input_1397 = (local.code_1397[0] == ","
    ? substr(local.input_1396, local.code_1397[1], -1)
    : local.input_1396)

  iter_1397 = try(local.iter_1396.code_ptr >= length(var.code), true) ? local.iter_1396 : {
    output = (local.code_1397[0] == "."
      ? "${local.iter_1396.output}${join("", [for _ in range(local.code_1397[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1396.tape[local.iter_1396.tape_ptr]))])}"
      : local.iter_1396.output)
    
    tape = (
      local.code_1397[0] == "+"
        ? [for i, b in local.iter_1396.tape : (i == local.iter_1396.tape_ptr ? (b + local.code_1397[1]) % 256 : b)] :
      local.code_1397[0] == "-"
        ? [for i, b in local.iter_1396.tape : (i == local.iter_1396.tape_ptr ? (b - local.code_1397[1] + 256) % 256 : b)] :
      local.code_1397[0] == ","
        ? [for i, b in local.iter_1396.tape : (i == local.iter_1396.tape_ptr ? local.ascii_lookup[substr(local.input_1397, 0, 1)] : b)]
        : local.iter_1396.tape)

    tape_ptr = (
      local.code_1397[0] == "<"
        ? local.iter_1396.tape_ptr - local.code_1397[1] :
      local.code_1397[0] == ">"
        ? local.iter_1396.tape_ptr + local.code_1397[1]
        : local.iter_1396.tape_ptr)

    code_ptr = 2 + (
      local.code_1397[0] == "["
        ? local.iter_1396.tape[local.iter_1396.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1396.code_ptr)] : local.iter_1396.code_ptr :
      local.code_1397[0] == "]"
        ? local.iter_1396.tape[local.iter_1396.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1396.code_ptr)] : local.iter_1396.code_ptr
        : local.iter_1396.code_ptr)

    steps_taken = 1 + local.iter_1396.steps_taken
  }
}

locals {
  code_1398 = (try(local.iter_1397.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1397.code_ptr, local.iter_1397.code_ptr + 2)
    : [null])

  input_1398 = (local.code_1398[0] == ","
    ? substr(local.input_1397, local.code_1398[1], -1)
    : local.input_1397)

  iter_1398 = try(local.iter_1397.code_ptr >= length(var.code), true) ? local.iter_1397 : {
    output = (local.code_1398[0] == "."
      ? "${local.iter_1397.output}${join("", [for _ in range(local.code_1398[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1397.tape[local.iter_1397.tape_ptr]))])}"
      : local.iter_1397.output)
    
    tape = (
      local.code_1398[0] == "+"
        ? [for i, b in local.iter_1397.tape : (i == local.iter_1397.tape_ptr ? (b + local.code_1398[1]) % 256 : b)] :
      local.code_1398[0] == "-"
        ? [for i, b in local.iter_1397.tape : (i == local.iter_1397.tape_ptr ? (b - local.code_1398[1] + 256) % 256 : b)] :
      local.code_1398[0] == ","
        ? [for i, b in local.iter_1397.tape : (i == local.iter_1397.tape_ptr ? local.ascii_lookup[substr(local.input_1398, 0, 1)] : b)]
        : local.iter_1397.tape)

    tape_ptr = (
      local.code_1398[0] == "<"
        ? local.iter_1397.tape_ptr - local.code_1398[1] :
      local.code_1398[0] == ">"
        ? local.iter_1397.tape_ptr + local.code_1398[1]
        : local.iter_1397.tape_ptr)

    code_ptr = 2 + (
      local.code_1398[0] == "["
        ? local.iter_1397.tape[local.iter_1397.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1397.code_ptr)] : local.iter_1397.code_ptr :
      local.code_1398[0] == "]"
        ? local.iter_1397.tape[local.iter_1397.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1397.code_ptr)] : local.iter_1397.code_ptr
        : local.iter_1397.code_ptr)

    steps_taken = 1 + local.iter_1397.steps_taken
  }
}

locals {
  code_1399 = (try(local.iter_1398.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1398.code_ptr, local.iter_1398.code_ptr + 2)
    : [null])

  input_1399 = (local.code_1399[0] == ","
    ? substr(local.input_1398, local.code_1399[1], -1)
    : local.input_1398)

  iter_1399 = try(local.iter_1398.code_ptr >= length(var.code), true) ? local.iter_1398 : {
    output = (local.code_1399[0] == "."
      ? "${local.iter_1398.output}${join("", [for _ in range(local.code_1399[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1398.tape[local.iter_1398.tape_ptr]))])}"
      : local.iter_1398.output)
    
    tape = (
      local.code_1399[0] == "+"
        ? [for i, b in local.iter_1398.tape : (i == local.iter_1398.tape_ptr ? (b + local.code_1399[1]) % 256 : b)] :
      local.code_1399[0] == "-"
        ? [for i, b in local.iter_1398.tape : (i == local.iter_1398.tape_ptr ? (b - local.code_1399[1] + 256) % 256 : b)] :
      local.code_1399[0] == ","
        ? [for i, b in local.iter_1398.tape : (i == local.iter_1398.tape_ptr ? local.ascii_lookup[substr(local.input_1399, 0, 1)] : b)]
        : local.iter_1398.tape)

    tape_ptr = (
      local.code_1399[0] == "<"
        ? local.iter_1398.tape_ptr - local.code_1399[1] :
      local.code_1399[0] == ">"
        ? local.iter_1398.tape_ptr + local.code_1399[1]
        : local.iter_1398.tape_ptr)

    code_ptr = 2 + (
      local.code_1399[0] == "["
        ? local.iter_1398.tape[local.iter_1398.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1398.code_ptr)] : local.iter_1398.code_ptr :
      local.code_1399[0] == "]"
        ? local.iter_1398.tape[local.iter_1398.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1398.code_ptr)] : local.iter_1398.code_ptr
        : local.iter_1398.code_ptr)

    steps_taken = 1 + local.iter_1398.steps_taken
  }
}

locals {
  code_1400 = (try(local.iter_1399.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1399.code_ptr, local.iter_1399.code_ptr + 2)
    : [null])

  input_1400 = (local.code_1400[0] == ","
    ? substr(local.input_1399, local.code_1400[1], -1)
    : local.input_1399)

  iter_1400 = try(local.iter_1399.code_ptr >= length(var.code), true) ? local.iter_1399 : {
    output = (local.code_1400[0] == "."
      ? "${local.iter_1399.output}${join("", [for _ in range(local.code_1400[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1399.tape[local.iter_1399.tape_ptr]))])}"
      : local.iter_1399.output)
    
    tape = (
      local.code_1400[0] == "+"
        ? [for i, b in local.iter_1399.tape : (i == local.iter_1399.tape_ptr ? (b + local.code_1400[1]) % 256 : b)] :
      local.code_1400[0] == "-"
        ? [for i, b in local.iter_1399.tape : (i == local.iter_1399.tape_ptr ? (b - local.code_1400[1] + 256) % 256 : b)] :
      local.code_1400[0] == ","
        ? [for i, b in local.iter_1399.tape : (i == local.iter_1399.tape_ptr ? local.ascii_lookup[substr(local.input_1400, 0, 1)] : b)]
        : local.iter_1399.tape)

    tape_ptr = (
      local.code_1400[0] == "<"
        ? local.iter_1399.tape_ptr - local.code_1400[1] :
      local.code_1400[0] == ">"
        ? local.iter_1399.tape_ptr + local.code_1400[1]
        : local.iter_1399.tape_ptr)

    code_ptr = 2 + (
      local.code_1400[0] == "["
        ? local.iter_1399.tape[local.iter_1399.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1399.code_ptr)] : local.iter_1399.code_ptr :
      local.code_1400[0] == "]"
        ? local.iter_1399.tape[local.iter_1399.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1399.code_ptr)] : local.iter_1399.code_ptr
        : local.iter_1399.code_ptr)

    steps_taken = 1 + local.iter_1399.steps_taken
  }
}

locals {
  code_1401 = (try(local.iter_1400.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1400.code_ptr, local.iter_1400.code_ptr + 2)
    : [null])

  input_1401 = (local.code_1401[0] == ","
    ? substr(local.input_1400, local.code_1401[1], -1)
    : local.input_1400)

  iter_1401 = try(local.iter_1400.code_ptr >= length(var.code), true) ? local.iter_1400 : {
    output = (local.code_1401[0] == "."
      ? "${local.iter_1400.output}${join("", [for _ in range(local.code_1401[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1400.tape[local.iter_1400.tape_ptr]))])}"
      : local.iter_1400.output)
    
    tape = (
      local.code_1401[0] == "+"
        ? [for i, b in local.iter_1400.tape : (i == local.iter_1400.tape_ptr ? (b + local.code_1401[1]) % 256 : b)] :
      local.code_1401[0] == "-"
        ? [for i, b in local.iter_1400.tape : (i == local.iter_1400.tape_ptr ? (b - local.code_1401[1] + 256) % 256 : b)] :
      local.code_1401[0] == ","
        ? [for i, b in local.iter_1400.tape : (i == local.iter_1400.tape_ptr ? local.ascii_lookup[substr(local.input_1401, 0, 1)] : b)]
        : local.iter_1400.tape)

    tape_ptr = (
      local.code_1401[0] == "<"
        ? local.iter_1400.tape_ptr - local.code_1401[1] :
      local.code_1401[0] == ">"
        ? local.iter_1400.tape_ptr + local.code_1401[1]
        : local.iter_1400.tape_ptr)

    code_ptr = 2 + (
      local.code_1401[0] == "["
        ? local.iter_1400.tape[local.iter_1400.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1400.code_ptr)] : local.iter_1400.code_ptr :
      local.code_1401[0] == "]"
        ? local.iter_1400.tape[local.iter_1400.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1400.code_ptr)] : local.iter_1400.code_ptr
        : local.iter_1400.code_ptr)

    steps_taken = 1 + local.iter_1400.steps_taken
  }
}

locals {
  code_1402 = (try(local.iter_1401.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1401.code_ptr, local.iter_1401.code_ptr + 2)
    : [null])

  input_1402 = (local.code_1402[0] == ","
    ? substr(local.input_1401, local.code_1402[1], -1)
    : local.input_1401)

  iter_1402 = try(local.iter_1401.code_ptr >= length(var.code), true) ? local.iter_1401 : {
    output = (local.code_1402[0] == "."
      ? "${local.iter_1401.output}${join("", [for _ in range(local.code_1402[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1401.tape[local.iter_1401.tape_ptr]))])}"
      : local.iter_1401.output)
    
    tape = (
      local.code_1402[0] == "+"
        ? [for i, b in local.iter_1401.tape : (i == local.iter_1401.tape_ptr ? (b + local.code_1402[1]) % 256 : b)] :
      local.code_1402[0] == "-"
        ? [for i, b in local.iter_1401.tape : (i == local.iter_1401.tape_ptr ? (b - local.code_1402[1] + 256) % 256 : b)] :
      local.code_1402[0] == ","
        ? [for i, b in local.iter_1401.tape : (i == local.iter_1401.tape_ptr ? local.ascii_lookup[substr(local.input_1402, 0, 1)] : b)]
        : local.iter_1401.tape)

    tape_ptr = (
      local.code_1402[0] == "<"
        ? local.iter_1401.tape_ptr - local.code_1402[1] :
      local.code_1402[0] == ">"
        ? local.iter_1401.tape_ptr + local.code_1402[1]
        : local.iter_1401.tape_ptr)

    code_ptr = 2 + (
      local.code_1402[0] == "["
        ? local.iter_1401.tape[local.iter_1401.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1401.code_ptr)] : local.iter_1401.code_ptr :
      local.code_1402[0] == "]"
        ? local.iter_1401.tape[local.iter_1401.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1401.code_ptr)] : local.iter_1401.code_ptr
        : local.iter_1401.code_ptr)

    steps_taken = 1 + local.iter_1401.steps_taken
  }
}

locals {
  code_1403 = (try(local.iter_1402.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1402.code_ptr, local.iter_1402.code_ptr + 2)
    : [null])

  input_1403 = (local.code_1403[0] == ","
    ? substr(local.input_1402, local.code_1403[1], -1)
    : local.input_1402)

  iter_1403 = try(local.iter_1402.code_ptr >= length(var.code), true) ? local.iter_1402 : {
    output = (local.code_1403[0] == "."
      ? "${local.iter_1402.output}${join("", [for _ in range(local.code_1403[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1402.tape[local.iter_1402.tape_ptr]))])}"
      : local.iter_1402.output)
    
    tape = (
      local.code_1403[0] == "+"
        ? [for i, b in local.iter_1402.tape : (i == local.iter_1402.tape_ptr ? (b + local.code_1403[1]) % 256 : b)] :
      local.code_1403[0] == "-"
        ? [for i, b in local.iter_1402.tape : (i == local.iter_1402.tape_ptr ? (b - local.code_1403[1] + 256) % 256 : b)] :
      local.code_1403[0] == ","
        ? [for i, b in local.iter_1402.tape : (i == local.iter_1402.tape_ptr ? local.ascii_lookup[substr(local.input_1403, 0, 1)] : b)]
        : local.iter_1402.tape)

    tape_ptr = (
      local.code_1403[0] == "<"
        ? local.iter_1402.tape_ptr - local.code_1403[1] :
      local.code_1403[0] == ">"
        ? local.iter_1402.tape_ptr + local.code_1403[1]
        : local.iter_1402.tape_ptr)

    code_ptr = 2 + (
      local.code_1403[0] == "["
        ? local.iter_1402.tape[local.iter_1402.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1402.code_ptr)] : local.iter_1402.code_ptr :
      local.code_1403[0] == "]"
        ? local.iter_1402.tape[local.iter_1402.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1402.code_ptr)] : local.iter_1402.code_ptr
        : local.iter_1402.code_ptr)

    steps_taken = 1 + local.iter_1402.steps_taken
  }
}

locals {
  code_1404 = (try(local.iter_1403.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1403.code_ptr, local.iter_1403.code_ptr + 2)
    : [null])

  input_1404 = (local.code_1404[0] == ","
    ? substr(local.input_1403, local.code_1404[1], -1)
    : local.input_1403)

  iter_1404 = try(local.iter_1403.code_ptr >= length(var.code), true) ? local.iter_1403 : {
    output = (local.code_1404[0] == "."
      ? "${local.iter_1403.output}${join("", [for _ in range(local.code_1404[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1403.tape[local.iter_1403.tape_ptr]))])}"
      : local.iter_1403.output)
    
    tape = (
      local.code_1404[0] == "+"
        ? [for i, b in local.iter_1403.tape : (i == local.iter_1403.tape_ptr ? (b + local.code_1404[1]) % 256 : b)] :
      local.code_1404[0] == "-"
        ? [for i, b in local.iter_1403.tape : (i == local.iter_1403.tape_ptr ? (b - local.code_1404[1] + 256) % 256 : b)] :
      local.code_1404[0] == ","
        ? [for i, b in local.iter_1403.tape : (i == local.iter_1403.tape_ptr ? local.ascii_lookup[substr(local.input_1404, 0, 1)] : b)]
        : local.iter_1403.tape)

    tape_ptr = (
      local.code_1404[0] == "<"
        ? local.iter_1403.tape_ptr - local.code_1404[1] :
      local.code_1404[0] == ">"
        ? local.iter_1403.tape_ptr + local.code_1404[1]
        : local.iter_1403.tape_ptr)

    code_ptr = 2 + (
      local.code_1404[0] == "["
        ? local.iter_1403.tape[local.iter_1403.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1403.code_ptr)] : local.iter_1403.code_ptr :
      local.code_1404[0] == "]"
        ? local.iter_1403.tape[local.iter_1403.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1403.code_ptr)] : local.iter_1403.code_ptr
        : local.iter_1403.code_ptr)

    steps_taken = 1 + local.iter_1403.steps_taken
  }
}

locals {
  code_1405 = (try(local.iter_1404.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1404.code_ptr, local.iter_1404.code_ptr + 2)
    : [null])

  input_1405 = (local.code_1405[0] == ","
    ? substr(local.input_1404, local.code_1405[1], -1)
    : local.input_1404)

  iter_1405 = try(local.iter_1404.code_ptr >= length(var.code), true) ? local.iter_1404 : {
    output = (local.code_1405[0] == "."
      ? "${local.iter_1404.output}${join("", [for _ in range(local.code_1405[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1404.tape[local.iter_1404.tape_ptr]))])}"
      : local.iter_1404.output)
    
    tape = (
      local.code_1405[0] == "+"
        ? [for i, b in local.iter_1404.tape : (i == local.iter_1404.tape_ptr ? (b + local.code_1405[1]) % 256 : b)] :
      local.code_1405[0] == "-"
        ? [for i, b in local.iter_1404.tape : (i == local.iter_1404.tape_ptr ? (b - local.code_1405[1] + 256) % 256 : b)] :
      local.code_1405[0] == ","
        ? [for i, b in local.iter_1404.tape : (i == local.iter_1404.tape_ptr ? local.ascii_lookup[substr(local.input_1405, 0, 1)] : b)]
        : local.iter_1404.tape)

    tape_ptr = (
      local.code_1405[0] == "<"
        ? local.iter_1404.tape_ptr - local.code_1405[1] :
      local.code_1405[0] == ">"
        ? local.iter_1404.tape_ptr + local.code_1405[1]
        : local.iter_1404.tape_ptr)

    code_ptr = 2 + (
      local.code_1405[0] == "["
        ? local.iter_1404.tape[local.iter_1404.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1404.code_ptr)] : local.iter_1404.code_ptr :
      local.code_1405[0] == "]"
        ? local.iter_1404.tape[local.iter_1404.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1404.code_ptr)] : local.iter_1404.code_ptr
        : local.iter_1404.code_ptr)

    steps_taken = 1 + local.iter_1404.steps_taken
  }
}

locals {
  code_1406 = (try(local.iter_1405.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1405.code_ptr, local.iter_1405.code_ptr + 2)
    : [null])

  input_1406 = (local.code_1406[0] == ","
    ? substr(local.input_1405, local.code_1406[1], -1)
    : local.input_1405)

  iter_1406 = try(local.iter_1405.code_ptr >= length(var.code), true) ? local.iter_1405 : {
    output = (local.code_1406[0] == "."
      ? "${local.iter_1405.output}${join("", [for _ in range(local.code_1406[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1405.tape[local.iter_1405.tape_ptr]))])}"
      : local.iter_1405.output)
    
    tape = (
      local.code_1406[0] == "+"
        ? [for i, b in local.iter_1405.tape : (i == local.iter_1405.tape_ptr ? (b + local.code_1406[1]) % 256 : b)] :
      local.code_1406[0] == "-"
        ? [for i, b in local.iter_1405.tape : (i == local.iter_1405.tape_ptr ? (b - local.code_1406[1] + 256) % 256 : b)] :
      local.code_1406[0] == ","
        ? [for i, b in local.iter_1405.tape : (i == local.iter_1405.tape_ptr ? local.ascii_lookup[substr(local.input_1406, 0, 1)] : b)]
        : local.iter_1405.tape)

    tape_ptr = (
      local.code_1406[0] == "<"
        ? local.iter_1405.tape_ptr - local.code_1406[1] :
      local.code_1406[0] == ">"
        ? local.iter_1405.tape_ptr + local.code_1406[1]
        : local.iter_1405.tape_ptr)

    code_ptr = 2 + (
      local.code_1406[0] == "["
        ? local.iter_1405.tape[local.iter_1405.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1405.code_ptr)] : local.iter_1405.code_ptr :
      local.code_1406[0] == "]"
        ? local.iter_1405.tape[local.iter_1405.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1405.code_ptr)] : local.iter_1405.code_ptr
        : local.iter_1405.code_ptr)

    steps_taken = 1 + local.iter_1405.steps_taken
  }
}

locals {
  code_1407 = (try(local.iter_1406.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1406.code_ptr, local.iter_1406.code_ptr + 2)
    : [null])

  input_1407 = (local.code_1407[0] == ","
    ? substr(local.input_1406, local.code_1407[1], -1)
    : local.input_1406)

  iter_1407 = try(local.iter_1406.code_ptr >= length(var.code), true) ? local.iter_1406 : {
    output = (local.code_1407[0] == "."
      ? "${local.iter_1406.output}${join("", [for _ in range(local.code_1407[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1406.tape[local.iter_1406.tape_ptr]))])}"
      : local.iter_1406.output)
    
    tape = (
      local.code_1407[0] == "+"
        ? [for i, b in local.iter_1406.tape : (i == local.iter_1406.tape_ptr ? (b + local.code_1407[1]) % 256 : b)] :
      local.code_1407[0] == "-"
        ? [for i, b in local.iter_1406.tape : (i == local.iter_1406.tape_ptr ? (b - local.code_1407[1] + 256) % 256 : b)] :
      local.code_1407[0] == ","
        ? [for i, b in local.iter_1406.tape : (i == local.iter_1406.tape_ptr ? local.ascii_lookup[substr(local.input_1407, 0, 1)] : b)]
        : local.iter_1406.tape)

    tape_ptr = (
      local.code_1407[0] == "<"
        ? local.iter_1406.tape_ptr - local.code_1407[1] :
      local.code_1407[0] == ">"
        ? local.iter_1406.tape_ptr + local.code_1407[1]
        : local.iter_1406.tape_ptr)

    code_ptr = 2 + (
      local.code_1407[0] == "["
        ? local.iter_1406.tape[local.iter_1406.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1406.code_ptr)] : local.iter_1406.code_ptr :
      local.code_1407[0] == "]"
        ? local.iter_1406.tape[local.iter_1406.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1406.code_ptr)] : local.iter_1406.code_ptr
        : local.iter_1406.code_ptr)

    steps_taken = 1 + local.iter_1406.steps_taken
  }
}

locals {
  code_1408 = (try(local.iter_1407.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1407.code_ptr, local.iter_1407.code_ptr + 2)
    : [null])

  input_1408 = (local.code_1408[0] == ","
    ? substr(local.input_1407, local.code_1408[1], -1)
    : local.input_1407)

  iter_1408 = try(local.iter_1407.code_ptr >= length(var.code), true) ? local.iter_1407 : {
    output = (local.code_1408[0] == "."
      ? "${local.iter_1407.output}${join("", [for _ in range(local.code_1408[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1407.tape[local.iter_1407.tape_ptr]))])}"
      : local.iter_1407.output)
    
    tape = (
      local.code_1408[0] == "+"
        ? [for i, b in local.iter_1407.tape : (i == local.iter_1407.tape_ptr ? (b + local.code_1408[1]) % 256 : b)] :
      local.code_1408[0] == "-"
        ? [for i, b in local.iter_1407.tape : (i == local.iter_1407.tape_ptr ? (b - local.code_1408[1] + 256) % 256 : b)] :
      local.code_1408[0] == ","
        ? [for i, b in local.iter_1407.tape : (i == local.iter_1407.tape_ptr ? local.ascii_lookup[substr(local.input_1408, 0, 1)] : b)]
        : local.iter_1407.tape)

    tape_ptr = (
      local.code_1408[0] == "<"
        ? local.iter_1407.tape_ptr - local.code_1408[1] :
      local.code_1408[0] == ">"
        ? local.iter_1407.tape_ptr + local.code_1408[1]
        : local.iter_1407.tape_ptr)

    code_ptr = 2 + (
      local.code_1408[0] == "["
        ? local.iter_1407.tape[local.iter_1407.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1407.code_ptr)] : local.iter_1407.code_ptr :
      local.code_1408[0] == "]"
        ? local.iter_1407.tape[local.iter_1407.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1407.code_ptr)] : local.iter_1407.code_ptr
        : local.iter_1407.code_ptr)

    steps_taken = 1 + local.iter_1407.steps_taken
  }
}

locals {
  code_1409 = (try(local.iter_1408.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1408.code_ptr, local.iter_1408.code_ptr + 2)
    : [null])

  input_1409 = (local.code_1409[0] == ","
    ? substr(local.input_1408, local.code_1409[1], -1)
    : local.input_1408)

  iter_1409 = try(local.iter_1408.code_ptr >= length(var.code), true) ? local.iter_1408 : {
    output = (local.code_1409[0] == "."
      ? "${local.iter_1408.output}${join("", [for _ in range(local.code_1409[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1408.tape[local.iter_1408.tape_ptr]))])}"
      : local.iter_1408.output)
    
    tape = (
      local.code_1409[0] == "+"
        ? [for i, b in local.iter_1408.tape : (i == local.iter_1408.tape_ptr ? (b + local.code_1409[1]) % 256 : b)] :
      local.code_1409[0] == "-"
        ? [for i, b in local.iter_1408.tape : (i == local.iter_1408.tape_ptr ? (b - local.code_1409[1] + 256) % 256 : b)] :
      local.code_1409[0] == ","
        ? [for i, b in local.iter_1408.tape : (i == local.iter_1408.tape_ptr ? local.ascii_lookup[substr(local.input_1409, 0, 1)] : b)]
        : local.iter_1408.tape)

    tape_ptr = (
      local.code_1409[0] == "<"
        ? local.iter_1408.tape_ptr - local.code_1409[1] :
      local.code_1409[0] == ">"
        ? local.iter_1408.tape_ptr + local.code_1409[1]
        : local.iter_1408.tape_ptr)

    code_ptr = 2 + (
      local.code_1409[0] == "["
        ? local.iter_1408.tape[local.iter_1408.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1408.code_ptr)] : local.iter_1408.code_ptr :
      local.code_1409[0] == "]"
        ? local.iter_1408.tape[local.iter_1408.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1408.code_ptr)] : local.iter_1408.code_ptr
        : local.iter_1408.code_ptr)

    steps_taken = 1 + local.iter_1408.steps_taken
  }
}

locals {
  code_1410 = (try(local.iter_1409.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1409.code_ptr, local.iter_1409.code_ptr + 2)
    : [null])

  input_1410 = (local.code_1410[0] == ","
    ? substr(local.input_1409, local.code_1410[1], -1)
    : local.input_1409)

  iter_1410 = try(local.iter_1409.code_ptr >= length(var.code), true) ? local.iter_1409 : {
    output = (local.code_1410[0] == "."
      ? "${local.iter_1409.output}${join("", [for _ in range(local.code_1410[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1409.tape[local.iter_1409.tape_ptr]))])}"
      : local.iter_1409.output)
    
    tape = (
      local.code_1410[0] == "+"
        ? [for i, b in local.iter_1409.tape : (i == local.iter_1409.tape_ptr ? (b + local.code_1410[1]) % 256 : b)] :
      local.code_1410[0] == "-"
        ? [for i, b in local.iter_1409.tape : (i == local.iter_1409.tape_ptr ? (b - local.code_1410[1] + 256) % 256 : b)] :
      local.code_1410[0] == ","
        ? [for i, b in local.iter_1409.tape : (i == local.iter_1409.tape_ptr ? local.ascii_lookup[substr(local.input_1410, 0, 1)] : b)]
        : local.iter_1409.tape)

    tape_ptr = (
      local.code_1410[0] == "<"
        ? local.iter_1409.tape_ptr - local.code_1410[1] :
      local.code_1410[0] == ">"
        ? local.iter_1409.tape_ptr + local.code_1410[1]
        : local.iter_1409.tape_ptr)

    code_ptr = 2 + (
      local.code_1410[0] == "["
        ? local.iter_1409.tape[local.iter_1409.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1409.code_ptr)] : local.iter_1409.code_ptr :
      local.code_1410[0] == "]"
        ? local.iter_1409.tape[local.iter_1409.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1409.code_ptr)] : local.iter_1409.code_ptr
        : local.iter_1409.code_ptr)

    steps_taken = 1 + local.iter_1409.steps_taken
  }
}

locals {
  code_1411 = (try(local.iter_1410.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1410.code_ptr, local.iter_1410.code_ptr + 2)
    : [null])

  input_1411 = (local.code_1411[0] == ","
    ? substr(local.input_1410, local.code_1411[1], -1)
    : local.input_1410)

  iter_1411 = try(local.iter_1410.code_ptr >= length(var.code), true) ? local.iter_1410 : {
    output = (local.code_1411[0] == "."
      ? "${local.iter_1410.output}${join("", [for _ in range(local.code_1411[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1410.tape[local.iter_1410.tape_ptr]))])}"
      : local.iter_1410.output)
    
    tape = (
      local.code_1411[0] == "+"
        ? [for i, b in local.iter_1410.tape : (i == local.iter_1410.tape_ptr ? (b + local.code_1411[1]) % 256 : b)] :
      local.code_1411[0] == "-"
        ? [for i, b in local.iter_1410.tape : (i == local.iter_1410.tape_ptr ? (b - local.code_1411[1] + 256) % 256 : b)] :
      local.code_1411[0] == ","
        ? [for i, b in local.iter_1410.tape : (i == local.iter_1410.tape_ptr ? local.ascii_lookup[substr(local.input_1411, 0, 1)] : b)]
        : local.iter_1410.tape)

    tape_ptr = (
      local.code_1411[0] == "<"
        ? local.iter_1410.tape_ptr - local.code_1411[1] :
      local.code_1411[0] == ">"
        ? local.iter_1410.tape_ptr + local.code_1411[1]
        : local.iter_1410.tape_ptr)

    code_ptr = 2 + (
      local.code_1411[0] == "["
        ? local.iter_1410.tape[local.iter_1410.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1410.code_ptr)] : local.iter_1410.code_ptr :
      local.code_1411[0] == "]"
        ? local.iter_1410.tape[local.iter_1410.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1410.code_ptr)] : local.iter_1410.code_ptr
        : local.iter_1410.code_ptr)

    steps_taken = 1 + local.iter_1410.steps_taken
  }
}

locals {
  code_1412 = (try(local.iter_1411.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1411.code_ptr, local.iter_1411.code_ptr + 2)
    : [null])

  input_1412 = (local.code_1412[0] == ","
    ? substr(local.input_1411, local.code_1412[1], -1)
    : local.input_1411)

  iter_1412 = try(local.iter_1411.code_ptr >= length(var.code), true) ? local.iter_1411 : {
    output = (local.code_1412[0] == "."
      ? "${local.iter_1411.output}${join("", [for _ in range(local.code_1412[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1411.tape[local.iter_1411.tape_ptr]))])}"
      : local.iter_1411.output)
    
    tape = (
      local.code_1412[0] == "+"
        ? [for i, b in local.iter_1411.tape : (i == local.iter_1411.tape_ptr ? (b + local.code_1412[1]) % 256 : b)] :
      local.code_1412[0] == "-"
        ? [for i, b in local.iter_1411.tape : (i == local.iter_1411.tape_ptr ? (b - local.code_1412[1] + 256) % 256 : b)] :
      local.code_1412[0] == ","
        ? [for i, b in local.iter_1411.tape : (i == local.iter_1411.tape_ptr ? local.ascii_lookup[substr(local.input_1412, 0, 1)] : b)]
        : local.iter_1411.tape)

    tape_ptr = (
      local.code_1412[0] == "<"
        ? local.iter_1411.tape_ptr - local.code_1412[1] :
      local.code_1412[0] == ">"
        ? local.iter_1411.tape_ptr + local.code_1412[1]
        : local.iter_1411.tape_ptr)

    code_ptr = 2 + (
      local.code_1412[0] == "["
        ? local.iter_1411.tape[local.iter_1411.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1411.code_ptr)] : local.iter_1411.code_ptr :
      local.code_1412[0] == "]"
        ? local.iter_1411.tape[local.iter_1411.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1411.code_ptr)] : local.iter_1411.code_ptr
        : local.iter_1411.code_ptr)

    steps_taken = 1 + local.iter_1411.steps_taken
  }
}

locals {
  code_1413 = (try(local.iter_1412.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1412.code_ptr, local.iter_1412.code_ptr + 2)
    : [null])

  input_1413 = (local.code_1413[0] == ","
    ? substr(local.input_1412, local.code_1413[1], -1)
    : local.input_1412)

  iter_1413 = try(local.iter_1412.code_ptr >= length(var.code), true) ? local.iter_1412 : {
    output = (local.code_1413[0] == "."
      ? "${local.iter_1412.output}${join("", [for _ in range(local.code_1413[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1412.tape[local.iter_1412.tape_ptr]))])}"
      : local.iter_1412.output)
    
    tape = (
      local.code_1413[0] == "+"
        ? [for i, b in local.iter_1412.tape : (i == local.iter_1412.tape_ptr ? (b + local.code_1413[1]) % 256 : b)] :
      local.code_1413[0] == "-"
        ? [for i, b in local.iter_1412.tape : (i == local.iter_1412.tape_ptr ? (b - local.code_1413[1] + 256) % 256 : b)] :
      local.code_1413[0] == ","
        ? [for i, b in local.iter_1412.tape : (i == local.iter_1412.tape_ptr ? local.ascii_lookup[substr(local.input_1413, 0, 1)] : b)]
        : local.iter_1412.tape)

    tape_ptr = (
      local.code_1413[0] == "<"
        ? local.iter_1412.tape_ptr - local.code_1413[1] :
      local.code_1413[0] == ">"
        ? local.iter_1412.tape_ptr + local.code_1413[1]
        : local.iter_1412.tape_ptr)

    code_ptr = 2 + (
      local.code_1413[0] == "["
        ? local.iter_1412.tape[local.iter_1412.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1412.code_ptr)] : local.iter_1412.code_ptr :
      local.code_1413[0] == "]"
        ? local.iter_1412.tape[local.iter_1412.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1412.code_ptr)] : local.iter_1412.code_ptr
        : local.iter_1412.code_ptr)

    steps_taken = 1 + local.iter_1412.steps_taken
  }
}

locals {
  code_1414 = (try(local.iter_1413.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1413.code_ptr, local.iter_1413.code_ptr + 2)
    : [null])

  input_1414 = (local.code_1414[0] == ","
    ? substr(local.input_1413, local.code_1414[1], -1)
    : local.input_1413)

  iter_1414 = try(local.iter_1413.code_ptr >= length(var.code), true) ? local.iter_1413 : {
    output = (local.code_1414[0] == "."
      ? "${local.iter_1413.output}${join("", [for _ in range(local.code_1414[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1413.tape[local.iter_1413.tape_ptr]))])}"
      : local.iter_1413.output)
    
    tape = (
      local.code_1414[0] == "+"
        ? [for i, b in local.iter_1413.tape : (i == local.iter_1413.tape_ptr ? (b + local.code_1414[1]) % 256 : b)] :
      local.code_1414[0] == "-"
        ? [for i, b in local.iter_1413.tape : (i == local.iter_1413.tape_ptr ? (b - local.code_1414[1] + 256) % 256 : b)] :
      local.code_1414[0] == ","
        ? [for i, b in local.iter_1413.tape : (i == local.iter_1413.tape_ptr ? local.ascii_lookup[substr(local.input_1414, 0, 1)] : b)]
        : local.iter_1413.tape)

    tape_ptr = (
      local.code_1414[0] == "<"
        ? local.iter_1413.tape_ptr - local.code_1414[1] :
      local.code_1414[0] == ">"
        ? local.iter_1413.tape_ptr + local.code_1414[1]
        : local.iter_1413.tape_ptr)

    code_ptr = 2 + (
      local.code_1414[0] == "["
        ? local.iter_1413.tape[local.iter_1413.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1413.code_ptr)] : local.iter_1413.code_ptr :
      local.code_1414[0] == "]"
        ? local.iter_1413.tape[local.iter_1413.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1413.code_ptr)] : local.iter_1413.code_ptr
        : local.iter_1413.code_ptr)

    steps_taken = 1 + local.iter_1413.steps_taken
  }
}

locals {
  code_1415 = (try(local.iter_1414.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1414.code_ptr, local.iter_1414.code_ptr + 2)
    : [null])

  input_1415 = (local.code_1415[0] == ","
    ? substr(local.input_1414, local.code_1415[1], -1)
    : local.input_1414)

  iter_1415 = try(local.iter_1414.code_ptr >= length(var.code), true) ? local.iter_1414 : {
    output = (local.code_1415[0] == "."
      ? "${local.iter_1414.output}${join("", [for _ in range(local.code_1415[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1414.tape[local.iter_1414.tape_ptr]))])}"
      : local.iter_1414.output)
    
    tape = (
      local.code_1415[0] == "+"
        ? [for i, b in local.iter_1414.tape : (i == local.iter_1414.tape_ptr ? (b + local.code_1415[1]) % 256 : b)] :
      local.code_1415[0] == "-"
        ? [for i, b in local.iter_1414.tape : (i == local.iter_1414.tape_ptr ? (b - local.code_1415[1] + 256) % 256 : b)] :
      local.code_1415[0] == ","
        ? [for i, b in local.iter_1414.tape : (i == local.iter_1414.tape_ptr ? local.ascii_lookup[substr(local.input_1415, 0, 1)] : b)]
        : local.iter_1414.tape)

    tape_ptr = (
      local.code_1415[0] == "<"
        ? local.iter_1414.tape_ptr - local.code_1415[1] :
      local.code_1415[0] == ">"
        ? local.iter_1414.tape_ptr + local.code_1415[1]
        : local.iter_1414.tape_ptr)

    code_ptr = 2 + (
      local.code_1415[0] == "["
        ? local.iter_1414.tape[local.iter_1414.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1414.code_ptr)] : local.iter_1414.code_ptr :
      local.code_1415[0] == "]"
        ? local.iter_1414.tape[local.iter_1414.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1414.code_ptr)] : local.iter_1414.code_ptr
        : local.iter_1414.code_ptr)

    steps_taken = 1 + local.iter_1414.steps_taken
  }
}

locals {
  code_1416 = (try(local.iter_1415.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1415.code_ptr, local.iter_1415.code_ptr + 2)
    : [null])

  input_1416 = (local.code_1416[0] == ","
    ? substr(local.input_1415, local.code_1416[1], -1)
    : local.input_1415)

  iter_1416 = try(local.iter_1415.code_ptr >= length(var.code), true) ? local.iter_1415 : {
    output = (local.code_1416[0] == "."
      ? "${local.iter_1415.output}${join("", [for _ in range(local.code_1416[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1415.tape[local.iter_1415.tape_ptr]))])}"
      : local.iter_1415.output)
    
    tape = (
      local.code_1416[0] == "+"
        ? [for i, b in local.iter_1415.tape : (i == local.iter_1415.tape_ptr ? (b + local.code_1416[1]) % 256 : b)] :
      local.code_1416[0] == "-"
        ? [for i, b in local.iter_1415.tape : (i == local.iter_1415.tape_ptr ? (b - local.code_1416[1] + 256) % 256 : b)] :
      local.code_1416[0] == ","
        ? [for i, b in local.iter_1415.tape : (i == local.iter_1415.tape_ptr ? local.ascii_lookup[substr(local.input_1416, 0, 1)] : b)]
        : local.iter_1415.tape)

    tape_ptr = (
      local.code_1416[0] == "<"
        ? local.iter_1415.tape_ptr - local.code_1416[1] :
      local.code_1416[0] == ">"
        ? local.iter_1415.tape_ptr + local.code_1416[1]
        : local.iter_1415.tape_ptr)

    code_ptr = 2 + (
      local.code_1416[0] == "["
        ? local.iter_1415.tape[local.iter_1415.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1415.code_ptr)] : local.iter_1415.code_ptr :
      local.code_1416[0] == "]"
        ? local.iter_1415.tape[local.iter_1415.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1415.code_ptr)] : local.iter_1415.code_ptr
        : local.iter_1415.code_ptr)

    steps_taken = 1 + local.iter_1415.steps_taken
  }
}

locals {
  code_1417 = (try(local.iter_1416.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1416.code_ptr, local.iter_1416.code_ptr + 2)
    : [null])

  input_1417 = (local.code_1417[0] == ","
    ? substr(local.input_1416, local.code_1417[1], -1)
    : local.input_1416)

  iter_1417 = try(local.iter_1416.code_ptr >= length(var.code), true) ? local.iter_1416 : {
    output = (local.code_1417[0] == "."
      ? "${local.iter_1416.output}${join("", [for _ in range(local.code_1417[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1416.tape[local.iter_1416.tape_ptr]))])}"
      : local.iter_1416.output)
    
    tape = (
      local.code_1417[0] == "+"
        ? [for i, b in local.iter_1416.tape : (i == local.iter_1416.tape_ptr ? (b + local.code_1417[1]) % 256 : b)] :
      local.code_1417[0] == "-"
        ? [for i, b in local.iter_1416.tape : (i == local.iter_1416.tape_ptr ? (b - local.code_1417[1] + 256) % 256 : b)] :
      local.code_1417[0] == ","
        ? [for i, b in local.iter_1416.tape : (i == local.iter_1416.tape_ptr ? local.ascii_lookup[substr(local.input_1417, 0, 1)] : b)]
        : local.iter_1416.tape)

    tape_ptr = (
      local.code_1417[0] == "<"
        ? local.iter_1416.tape_ptr - local.code_1417[1] :
      local.code_1417[0] == ">"
        ? local.iter_1416.tape_ptr + local.code_1417[1]
        : local.iter_1416.tape_ptr)

    code_ptr = 2 + (
      local.code_1417[0] == "["
        ? local.iter_1416.tape[local.iter_1416.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1416.code_ptr)] : local.iter_1416.code_ptr :
      local.code_1417[0] == "]"
        ? local.iter_1416.tape[local.iter_1416.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1416.code_ptr)] : local.iter_1416.code_ptr
        : local.iter_1416.code_ptr)

    steps_taken = 1 + local.iter_1416.steps_taken
  }
}

locals {
  code_1418 = (try(local.iter_1417.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1417.code_ptr, local.iter_1417.code_ptr + 2)
    : [null])

  input_1418 = (local.code_1418[0] == ","
    ? substr(local.input_1417, local.code_1418[1], -1)
    : local.input_1417)

  iter_1418 = try(local.iter_1417.code_ptr >= length(var.code), true) ? local.iter_1417 : {
    output = (local.code_1418[0] == "."
      ? "${local.iter_1417.output}${join("", [for _ in range(local.code_1418[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1417.tape[local.iter_1417.tape_ptr]))])}"
      : local.iter_1417.output)
    
    tape = (
      local.code_1418[0] == "+"
        ? [for i, b in local.iter_1417.tape : (i == local.iter_1417.tape_ptr ? (b + local.code_1418[1]) % 256 : b)] :
      local.code_1418[0] == "-"
        ? [for i, b in local.iter_1417.tape : (i == local.iter_1417.tape_ptr ? (b - local.code_1418[1] + 256) % 256 : b)] :
      local.code_1418[0] == ","
        ? [for i, b in local.iter_1417.tape : (i == local.iter_1417.tape_ptr ? local.ascii_lookup[substr(local.input_1418, 0, 1)] : b)]
        : local.iter_1417.tape)

    tape_ptr = (
      local.code_1418[0] == "<"
        ? local.iter_1417.tape_ptr - local.code_1418[1] :
      local.code_1418[0] == ">"
        ? local.iter_1417.tape_ptr + local.code_1418[1]
        : local.iter_1417.tape_ptr)

    code_ptr = 2 + (
      local.code_1418[0] == "["
        ? local.iter_1417.tape[local.iter_1417.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1417.code_ptr)] : local.iter_1417.code_ptr :
      local.code_1418[0] == "]"
        ? local.iter_1417.tape[local.iter_1417.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1417.code_ptr)] : local.iter_1417.code_ptr
        : local.iter_1417.code_ptr)

    steps_taken = 1 + local.iter_1417.steps_taken
  }
}

locals {
  code_1419 = (try(local.iter_1418.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1418.code_ptr, local.iter_1418.code_ptr + 2)
    : [null])

  input_1419 = (local.code_1419[0] == ","
    ? substr(local.input_1418, local.code_1419[1], -1)
    : local.input_1418)

  iter_1419 = try(local.iter_1418.code_ptr >= length(var.code), true) ? local.iter_1418 : {
    output = (local.code_1419[0] == "."
      ? "${local.iter_1418.output}${join("", [for _ in range(local.code_1419[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1418.tape[local.iter_1418.tape_ptr]))])}"
      : local.iter_1418.output)
    
    tape = (
      local.code_1419[0] == "+"
        ? [for i, b in local.iter_1418.tape : (i == local.iter_1418.tape_ptr ? (b + local.code_1419[1]) % 256 : b)] :
      local.code_1419[0] == "-"
        ? [for i, b in local.iter_1418.tape : (i == local.iter_1418.tape_ptr ? (b - local.code_1419[1] + 256) % 256 : b)] :
      local.code_1419[0] == ","
        ? [for i, b in local.iter_1418.tape : (i == local.iter_1418.tape_ptr ? local.ascii_lookup[substr(local.input_1419, 0, 1)] : b)]
        : local.iter_1418.tape)

    tape_ptr = (
      local.code_1419[0] == "<"
        ? local.iter_1418.tape_ptr - local.code_1419[1] :
      local.code_1419[0] == ">"
        ? local.iter_1418.tape_ptr + local.code_1419[1]
        : local.iter_1418.tape_ptr)

    code_ptr = 2 + (
      local.code_1419[0] == "["
        ? local.iter_1418.tape[local.iter_1418.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1418.code_ptr)] : local.iter_1418.code_ptr :
      local.code_1419[0] == "]"
        ? local.iter_1418.tape[local.iter_1418.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1418.code_ptr)] : local.iter_1418.code_ptr
        : local.iter_1418.code_ptr)

    steps_taken = 1 + local.iter_1418.steps_taken
  }
}

locals {
  code_1420 = (try(local.iter_1419.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1419.code_ptr, local.iter_1419.code_ptr + 2)
    : [null])

  input_1420 = (local.code_1420[0] == ","
    ? substr(local.input_1419, local.code_1420[1], -1)
    : local.input_1419)

  iter_1420 = try(local.iter_1419.code_ptr >= length(var.code), true) ? local.iter_1419 : {
    output = (local.code_1420[0] == "."
      ? "${local.iter_1419.output}${join("", [for _ in range(local.code_1420[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1419.tape[local.iter_1419.tape_ptr]))])}"
      : local.iter_1419.output)
    
    tape = (
      local.code_1420[0] == "+"
        ? [for i, b in local.iter_1419.tape : (i == local.iter_1419.tape_ptr ? (b + local.code_1420[1]) % 256 : b)] :
      local.code_1420[0] == "-"
        ? [for i, b in local.iter_1419.tape : (i == local.iter_1419.tape_ptr ? (b - local.code_1420[1] + 256) % 256 : b)] :
      local.code_1420[0] == ","
        ? [for i, b in local.iter_1419.tape : (i == local.iter_1419.tape_ptr ? local.ascii_lookup[substr(local.input_1420, 0, 1)] : b)]
        : local.iter_1419.tape)

    tape_ptr = (
      local.code_1420[0] == "<"
        ? local.iter_1419.tape_ptr - local.code_1420[1] :
      local.code_1420[0] == ">"
        ? local.iter_1419.tape_ptr + local.code_1420[1]
        : local.iter_1419.tape_ptr)

    code_ptr = 2 + (
      local.code_1420[0] == "["
        ? local.iter_1419.tape[local.iter_1419.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1419.code_ptr)] : local.iter_1419.code_ptr :
      local.code_1420[0] == "]"
        ? local.iter_1419.tape[local.iter_1419.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1419.code_ptr)] : local.iter_1419.code_ptr
        : local.iter_1419.code_ptr)

    steps_taken = 1 + local.iter_1419.steps_taken
  }
}

locals {
  code_1421 = (try(local.iter_1420.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1420.code_ptr, local.iter_1420.code_ptr + 2)
    : [null])

  input_1421 = (local.code_1421[0] == ","
    ? substr(local.input_1420, local.code_1421[1], -1)
    : local.input_1420)

  iter_1421 = try(local.iter_1420.code_ptr >= length(var.code), true) ? local.iter_1420 : {
    output = (local.code_1421[0] == "."
      ? "${local.iter_1420.output}${join("", [for _ in range(local.code_1421[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1420.tape[local.iter_1420.tape_ptr]))])}"
      : local.iter_1420.output)
    
    tape = (
      local.code_1421[0] == "+"
        ? [for i, b in local.iter_1420.tape : (i == local.iter_1420.tape_ptr ? (b + local.code_1421[1]) % 256 : b)] :
      local.code_1421[0] == "-"
        ? [for i, b in local.iter_1420.tape : (i == local.iter_1420.tape_ptr ? (b - local.code_1421[1] + 256) % 256 : b)] :
      local.code_1421[0] == ","
        ? [for i, b in local.iter_1420.tape : (i == local.iter_1420.tape_ptr ? local.ascii_lookup[substr(local.input_1421, 0, 1)] : b)]
        : local.iter_1420.tape)

    tape_ptr = (
      local.code_1421[0] == "<"
        ? local.iter_1420.tape_ptr - local.code_1421[1] :
      local.code_1421[0] == ">"
        ? local.iter_1420.tape_ptr + local.code_1421[1]
        : local.iter_1420.tape_ptr)

    code_ptr = 2 + (
      local.code_1421[0] == "["
        ? local.iter_1420.tape[local.iter_1420.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1420.code_ptr)] : local.iter_1420.code_ptr :
      local.code_1421[0] == "]"
        ? local.iter_1420.tape[local.iter_1420.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1420.code_ptr)] : local.iter_1420.code_ptr
        : local.iter_1420.code_ptr)

    steps_taken = 1 + local.iter_1420.steps_taken
  }
}

locals {
  code_1422 = (try(local.iter_1421.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1421.code_ptr, local.iter_1421.code_ptr + 2)
    : [null])

  input_1422 = (local.code_1422[0] == ","
    ? substr(local.input_1421, local.code_1422[1], -1)
    : local.input_1421)

  iter_1422 = try(local.iter_1421.code_ptr >= length(var.code), true) ? local.iter_1421 : {
    output = (local.code_1422[0] == "."
      ? "${local.iter_1421.output}${join("", [for _ in range(local.code_1422[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1421.tape[local.iter_1421.tape_ptr]))])}"
      : local.iter_1421.output)
    
    tape = (
      local.code_1422[0] == "+"
        ? [for i, b in local.iter_1421.tape : (i == local.iter_1421.tape_ptr ? (b + local.code_1422[1]) % 256 : b)] :
      local.code_1422[0] == "-"
        ? [for i, b in local.iter_1421.tape : (i == local.iter_1421.tape_ptr ? (b - local.code_1422[1] + 256) % 256 : b)] :
      local.code_1422[0] == ","
        ? [for i, b in local.iter_1421.tape : (i == local.iter_1421.tape_ptr ? local.ascii_lookup[substr(local.input_1422, 0, 1)] : b)]
        : local.iter_1421.tape)

    tape_ptr = (
      local.code_1422[0] == "<"
        ? local.iter_1421.tape_ptr - local.code_1422[1] :
      local.code_1422[0] == ">"
        ? local.iter_1421.tape_ptr + local.code_1422[1]
        : local.iter_1421.tape_ptr)

    code_ptr = 2 + (
      local.code_1422[0] == "["
        ? local.iter_1421.tape[local.iter_1421.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1421.code_ptr)] : local.iter_1421.code_ptr :
      local.code_1422[0] == "]"
        ? local.iter_1421.tape[local.iter_1421.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1421.code_ptr)] : local.iter_1421.code_ptr
        : local.iter_1421.code_ptr)

    steps_taken = 1 + local.iter_1421.steps_taken
  }
}

locals {
  code_1423 = (try(local.iter_1422.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1422.code_ptr, local.iter_1422.code_ptr + 2)
    : [null])

  input_1423 = (local.code_1423[0] == ","
    ? substr(local.input_1422, local.code_1423[1], -1)
    : local.input_1422)

  iter_1423 = try(local.iter_1422.code_ptr >= length(var.code), true) ? local.iter_1422 : {
    output = (local.code_1423[0] == "."
      ? "${local.iter_1422.output}${join("", [for _ in range(local.code_1423[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1422.tape[local.iter_1422.tape_ptr]))])}"
      : local.iter_1422.output)
    
    tape = (
      local.code_1423[0] == "+"
        ? [for i, b in local.iter_1422.tape : (i == local.iter_1422.tape_ptr ? (b + local.code_1423[1]) % 256 : b)] :
      local.code_1423[0] == "-"
        ? [for i, b in local.iter_1422.tape : (i == local.iter_1422.tape_ptr ? (b - local.code_1423[1] + 256) % 256 : b)] :
      local.code_1423[0] == ","
        ? [for i, b in local.iter_1422.tape : (i == local.iter_1422.tape_ptr ? local.ascii_lookup[substr(local.input_1423, 0, 1)] : b)]
        : local.iter_1422.tape)

    tape_ptr = (
      local.code_1423[0] == "<"
        ? local.iter_1422.tape_ptr - local.code_1423[1] :
      local.code_1423[0] == ">"
        ? local.iter_1422.tape_ptr + local.code_1423[1]
        : local.iter_1422.tape_ptr)

    code_ptr = 2 + (
      local.code_1423[0] == "["
        ? local.iter_1422.tape[local.iter_1422.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1422.code_ptr)] : local.iter_1422.code_ptr :
      local.code_1423[0] == "]"
        ? local.iter_1422.tape[local.iter_1422.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1422.code_ptr)] : local.iter_1422.code_ptr
        : local.iter_1422.code_ptr)

    steps_taken = 1 + local.iter_1422.steps_taken
  }
}

locals {
  code_1424 = (try(local.iter_1423.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1423.code_ptr, local.iter_1423.code_ptr + 2)
    : [null])

  input_1424 = (local.code_1424[0] == ","
    ? substr(local.input_1423, local.code_1424[1], -1)
    : local.input_1423)

  iter_1424 = try(local.iter_1423.code_ptr >= length(var.code), true) ? local.iter_1423 : {
    output = (local.code_1424[0] == "."
      ? "${local.iter_1423.output}${join("", [for _ in range(local.code_1424[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1423.tape[local.iter_1423.tape_ptr]))])}"
      : local.iter_1423.output)
    
    tape = (
      local.code_1424[0] == "+"
        ? [for i, b in local.iter_1423.tape : (i == local.iter_1423.tape_ptr ? (b + local.code_1424[1]) % 256 : b)] :
      local.code_1424[0] == "-"
        ? [for i, b in local.iter_1423.tape : (i == local.iter_1423.tape_ptr ? (b - local.code_1424[1] + 256) % 256 : b)] :
      local.code_1424[0] == ","
        ? [for i, b in local.iter_1423.tape : (i == local.iter_1423.tape_ptr ? local.ascii_lookup[substr(local.input_1424, 0, 1)] : b)]
        : local.iter_1423.tape)

    tape_ptr = (
      local.code_1424[0] == "<"
        ? local.iter_1423.tape_ptr - local.code_1424[1] :
      local.code_1424[0] == ">"
        ? local.iter_1423.tape_ptr + local.code_1424[1]
        : local.iter_1423.tape_ptr)

    code_ptr = 2 + (
      local.code_1424[0] == "["
        ? local.iter_1423.tape[local.iter_1423.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1423.code_ptr)] : local.iter_1423.code_ptr :
      local.code_1424[0] == "]"
        ? local.iter_1423.tape[local.iter_1423.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1423.code_ptr)] : local.iter_1423.code_ptr
        : local.iter_1423.code_ptr)

    steps_taken = 1 + local.iter_1423.steps_taken
  }
}

locals {
  code_1425 = (try(local.iter_1424.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1424.code_ptr, local.iter_1424.code_ptr + 2)
    : [null])

  input_1425 = (local.code_1425[0] == ","
    ? substr(local.input_1424, local.code_1425[1], -1)
    : local.input_1424)

  iter_1425 = try(local.iter_1424.code_ptr >= length(var.code), true) ? local.iter_1424 : {
    output = (local.code_1425[0] == "."
      ? "${local.iter_1424.output}${join("", [for _ in range(local.code_1425[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1424.tape[local.iter_1424.tape_ptr]))])}"
      : local.iter_1424.output)
    
    tape = (
      local.code_1425[0] == "+"
        ? [for i, b in local.iter_1424.tape : (i == local.iter_1424.tape_ptr ? (b + local.code_1425[1]) % 256 : b)] :
      local.code_1425[0] == "-"
        ? [for i, b in local.iter_1424.tape : (i == local.iter_1424.tape_ptr ? (b - local.code_1425[1] + 256) % 256 : b)] :
      local.code_1425[0] == ","
        ? [for i, b in local.iter_1424.tape : (i == local.iter_1424.tape_ptr ? local.ascii_lookup[substr(local.input_1425, 0, 1)] : b)]
        : local.iter_1424.tape)

    tape_ptr = (
      local.code_1425[0] == "<"
        ? local.iter_1424.tape_ptr - local.code_1425[1] :
      local.code_1425[0] == ">"
        ? local.iter_1424.tape_ptr + local.code_1425[1]
        : local.iter_1424.tape_ptr)

    code_ptr = 2 + (
      local.code_1425[0] == "["
        ? local.iter_1424.tape[local.iter_1424.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1424.code_ptr)] : local.iter_1424.code_ptr :
      local.code_1425[0] == "]"
        ? local.iter_1424.tape[local.iter_1424.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1424.code_ptr)] : local.iter_1424.code_ptr
        : local.iter_1424.code_ptr)

    steps_taken = 1 + local.iter_1424.steps_taken
  }
}

locals {
  code_1426 = (try(local.iter_1425.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1425.code_ptr, local.iter_1425.code_ptr + 2)
    : [null])

  input_1426 = (local.code_1426[0] == ","
    ? substr(local.input_1425, local.code_1426[1], -1)
    : local.input_1425)

  iter_1426 = try(local.iter_1425.code_ptr >= length(var.code), true) ? local.iter_1425 : {
    output = (local.code_1426[0] == "."
      ? "${local.iter_1425.output}${join("", [for _ in range(local.code_1426[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1425.tape[local.iter_1425.tape_ptr]))])}"
      : local.iter_1425.output)
    
    tape = (
      local.code_1426[0] == "+"
        ? [for i, b in local.iter_1425.tape : (i == local.iter_1425.tape_ptr ? (b + local.code_1426[1]) % 256 : b)] :
      local.code_1426[0] == "-"
        ? [for i, b in local.iter_1425.tape : (i == local.iter_1425.tape_ptr ? (b - local.code_1426[1] + 256) % 256 : b)] :
      local.code_1426[0] == ","
        ? [for i, b in local.iter_1425.tape : (i == local.iter_1425.tape_ptr ? local.ascii_lookup[substr(local.input_1426, 0, 1)] : b)]
        : local.iter_1425.tape)

    tape_ptr = (
      local.code_1426[0] == "<"
        ? local.iter_1425.tape_ptr - local.code_1426[1] :
      local.code_1426[0] == ">"
        ? local.iter_1425.tape_ptr + local.code_1426[1]
        : local.iter_1425.tape_ptr)

    code_ptr = 2 + (
      local.code_1426[0] == "["
        ? local.iter_1425.tape[local.iter_1425.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1425.code_ptr)] : local.iter_1425.code_ptr :
      local.code_1426[0] == "]"
        ? local.iter_1425.tape[local.iter_1425.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1425.code_ptr)] : local.iter_1425.code_ptr
        : local.iter_1425.code_ptr)

    steps_taken = 1 + local.iter_1425.steps_taken
  }
}

locals {
  code_1427 = (try(local.iter_1426.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1426.code_ptr, local.iter_1426.code_ptr + 2)
    : [null])

  input_1427 = (local.code_1427[0] == ","
    ? substr(local.input_1426, local.code_1427[1], -1)
    : local.input_1426)

  iter_1427 = try(local.iter_1426.code_ptr >= length(var.code), true) ? local.iter_1426 : {
    output = (local.code_1427[0] == "."
      ? "${local.iter_1426.output}${join("", [for _ in range(local.code_1427[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1426.tape[local.iter_1426.tape_ptr]))])}"
      : local.iter_1426.output)
    
    tape = (
      local.code_1427[0] == "+"
        ? [for i, b in local.iter_1426.tape : (i == local.iter_1426.tape_ptr ? (b + local.code_1427[1]) % 256 : b)] :
      local.code_1427[0] == "-"
        ? [for i, b in local.iter_1426.tape : (i == local.iter_1426.tape_ptr ? (b - local.code_1427[1] + 256) % 256 : b)] :
      local.code_1427[0] == ","
        ? [for i, b in local.iter_1426.tape : (i == local.iter_1426.tape_ptr ? local.ascii_lookup[substr(local.input_1427, 0, 1)] : b)]
        : local.iter_1426.tape)

    tape_ptr = (
      local.code_1427[0] == "<"
        ? local.iter_1426.tape_ptr - local.code_1427[1] :
      local.code_1427[0] == ">"
        ? local.iter_1426.tape_ptr + local.code_1427[1]
        : local.iter_1426.tape_ptr)

    code_ptr = 2 + (
      local.code_1427[0] == "["
        ? local.iter_1426.tape[local.iter_1426.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1426.code_ptr)] : local.iter_1426.code_ptr :
      local.code_1427[0] == "]"
        ? local.iter_1426.tape[local.iter_1426.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1426.code_ptr)] : local.iter_1426.code_ptr
        : local.iter_1426.code_ptr)

    steps_taken = 1 + local.iter_1426.steps_taken
  }
}

locals {
  code_1428 = (try(local.iter_1427.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1427.code_ptr, local.iter_1427.code_ptr + 2)
    : [null])

  input_1428 = (local.code_1428[0] == ","
    ? substr(local.input_1427, local.code_1428[1], -1)
    : local.input_1427)

  iter_1428 = try(local.iter_1427.code_ptr >= length(var.code), true) ? local.iter_1427 : {
    output = (local.code_1428[0] == "."
      ? "${local.iter_1427.output}${join("", [for _ in range(local.code_1428[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1427.tape[local.iter_1427.tape_ptr]))])}"
      : local.iter_1427.output)
    
    tape = (
      local.code_1428[0] == "+"
        ? [for i, b in local.iter_1427.tape : (i == local.iter_1427.tape_ptr ? (b + local.code_1428[1]) % 256 : b)] :
      local.code_1428[0] == "-"
        ? [for i, b in local.iter_1427.tape : (i == local.iter_1427.tape_ptr ? (b - local.code_1428[1] + 256) % 256 : b)] :
      local.code_1428[0] == ","
        ? [for i, b in local.iter_1427.tape : (i == local.iter_1427.tape_ptr ? local.ascii_lookup[substr(local.input_1428, 0, 1)] : b)]
        : local.iter_1427.tape)

    tape_ptr = (
      local.code_1428[0] == "<"
        ? local.iter_1427.tape_ptr - local.code_1428[1] :
      local.code_1428[0] == ">"
        ? local.iter_1427.tape_ptr + local.code_1428[1]
        : local.iter_1427.tape_ptr)

    code_ptr = 2 + (
      local.code_1428[0] == "["
        ? local.iter_1427.tape[local.iter_1427.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1427.code_ptr)] : local.iter_1427.code_ptr :
      local.code_1428[0] == "]"
        ? local.iter_1427.tape[local.iter_1427.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1427.code_ptr)] : local.iter_1427.code_ptr
        : local.iter_1427.code_ptr)

    steps_taken = 1 + local.iter_1427.steps_taken
  }
}

locals {
  code_1429 = (try(local.iter_1428.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1428.code_ptr, local.iter_1428.code_ptr + 2)
    : [null])

  input_1429 = (local.code_1429[0] == ","
    ? substr(local.input_1428, local.code_1429[1], -1)
    : local.input_1428)

  iter_1429 = try(local.iter_1428.code_ptr >= length(var.code), true) ? local.iter_1428 : {
    output = (local.code_1429[0] == "."
      ? "${local.iter_1428.output}${join("", [for _ in range(local.code_1429[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1428.tape[local.iter_1428.tape_ptr]))])}"
      : local.iter_1428.output)
    
    tape = (
      local.code_1429[0] == "+"
        ? [for i, b in local.iter_1428.tape : (i == local.iter_1428.tape_ptr ? (b + local.code_1429[1]) % 256 : b)] :
      local.code_1429[0] == "-"
        ? [for i, b in local.iter_1428.tape : (i == local.iter_1428.tape_ptr ? (b - local.code_1429[1] + 256) % 256 : b)] :
      local.code_1429[0] == ","
        ? [for i, b in local.iter_1428.tape : (i == local.iter_1428.tape_ptr ? local.ascii_lookup[substr(local.input_1429, 0, 1)] : b)]
        : local.iter_1428.tape)

    tape_ptr = (
      local.code_1429[0] == "<"
        ? local.iter_1428.tape_ptr - local.code_1429[1] :
      local.code_1429[0] == ">"
        ? local.iter_1428.tape_ptr + local.code_1429[1]
        : local.iter_1428.tape_ptr)

    code_ptr = 2 + (
      local.code_1429[0] == "["
        ? local.iter_1428.tape[local.iter_1428.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1428.code_ptr)] : local.iter_1428.code_ptr :
      local.code_1429[0] == "]"
        ? local.iter_1428.tape[local.iter_1428.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1428.code_ptr)] : local.iter_1428.code_ptr
        : local.iter_1428.code_ptr)

    steps_taken = 1 + local.iter_1428.steps_taken
  }
}

locals {
  code_1430 = (try(local.iter_1429.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1429.code_ptr, local.iter_1429.code_ptr + 2)
    : [null])

  input_1430 = (local.code_1430[0] == ","
    ? substr(local.input_1429, local.code_1430[1], -1)
    : local.input_1429)

  iter_1430 = try(local.iter_1429.code_ptr >= length(var.code), true) ? local.iter_1429 : {
    output = (local.code_1430[0] == "."
      ? "${local.iter_1429.output}${join("", [for _ in range(local.code_1430[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1429.tape[local.iter_1429.tape_ptr]))])}"
      : local.iter_1429.output)
    
    tape = (
      local.code_1430[0] == "+"
        ? [for i, b in local.iter_1429.tape : (i == local.iter_1429.tape_ptr ? (b + local.code_1430[1]) % 256 : b)] :
      local.code_1430[0] == "-"
        ? [for i, b in local.iter_1429.tape : (i == local.iter_1429.tape_ptr ? (b - local.code_1430[1] + 256) % 256 : b)] :
      local.code_1430[0] == ","
        ? [for i, b in local.iter_1429.tape : (i == local.iter_1429.tape_ptr ? local.ascii_lookup[substr(local.input_1430, 0, 1)] : b)]
        : local.iter_1429.tape)

    tape_ptr = (
      local.code_1430[0] == "<"
        ? local.iter_1429.tape_ptr - local.code_1430[1] :
      local.code_1430[0] == ">"
        ? local.iter_1429.tape_ptr + local.code_1430[1]
        : local.iter_1429.tape_ptr)

    code_ptr = 2 + (
      local.code_1430[0] == "["
        ? local.iter_1429.tape[local.iter_1429.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1429.code_ptr)] : local.iter_1429.code_ptr :
      local.code_1430[0] == "]"
        ? local.iter_1429.tape[local.iter_1429.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1429.code_ptr)] : local.iter_1429.code_ptr
        : local.iter_1429.code_ptr)

    steps_taken = 1 + local.iter_1429.steps_taken
  }
}

locals {
  code_1431 = (try(local.iter_1430.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1430.code_ptr, local.iter_1430.code_ptr + 2)
    : [null])

  input_1431 = (local.code_1431[0] == ","
    ? substr(local.input_1430, local.code_1431[1], -1)
    : local.input_1430)

  iter_1431 = try(local.iter_1430.code_ptr >= length(var.code), true) ? local.iter_1430 : {
    output = (local.code_1431[0] == "."
      ? "${local.iter_1430.output}${join("", [for _ in range(local.code_1431[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1430.tape[local.iter_1430.tape_ptr]))])}"
      : local.iter_1430.output)
    
    tape = (
      local.code_1431[0] == "+"
        ? [for i, b in local.iter_1430.tape : (i == local.iter_1430.tape_ptr ? (b + local.code_1431[1]) % 256 : b)] :
      local.code_1431[0] == "-"
        ? [for i, b in local.iter_1430.tape : (i == local.iter_1430.tape_ptr ? (b - local.code_1431[1] + 256) % 256 : b)] :
      local.code_1431[0] == ","
        ? [for i, b in local.iter_1430.tape : (i == local.iter_1430.tape_ptr ? local.ascii_lookup[substr(local.input_1431, 0, 1)] : b)]
        : local.iter_1430.tape)

    tape_ptr = (
      local.code_1431[0] == "<"
        ? local.iter_1430.tape_ptr - local.code_1431[1] :
      local.code_1431[0] == ">"
        ? local.iter_1430.tape_ptr + local.code_1431[1]
        : local.iter_1430.tape_ptr)

    code_ptr = 2 + (
      local.code_1431[0] == "["
        ? local.iter_1430.tape[local.iter_1430.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1430.code_ptr)] : local.iter_1430.code_ptr :
      local.code_1431[0] == "]"
        ? local.iter_1430.tape[local.iter_1430.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1430.code_ptr)] : local.iter_1430.code_ptr
        : local.iter_1430.code_ptr)

    steps_taken = 1 + local.iter_1430.steps_taken
  }
}

locals {
  code_1432 = (try(local.iter_1431.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1431.code_ptr, local.iter_1431.code_ptr + 2)
    : [null])

  input_1432 = (local.code_1432[0] == ","
    ? substr(local.input_1431, local.code_1432[1], -1)
    : local.input_1431)

  iter_1432 = try(local.iter_1431.code_ptr >= length(var.code), true) ? local.iter_1431 : {
    output = (local.code_1432[0] == "."
      ? "${local.iter_1431.output}${join("", [for _ in range(local.code_1432[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1431.tape[local.iter_1431.tape_ptr]))])}"
      : local.iter_1431.output)
    
    tape = (
      local.code_1432[0] == "+"
        ? [for i, b in local.iter_1431.tape : (i == local.iter_1431.tape_ptr ? (b + local.code_1432[1]) % 256 : b)] :
      local.code_1432[0] == "-"
        ? [for i, b in local.iter_1431.tape : (i == local.iter_1431.tape_ptr ? (b - local.code_1432[1] + 256) % 256 : b)] :
      local.code_1432[0] == ","
        ? [for i, b in local.iter_1431.tape : (i == local.iter_1431.tape_ptr ? local.ascii_lookup[substr(local.input_1432, 0, 1)] : b)]
        : local.iter_1431.tape)

    tape_ptr = (
      local.code_1432[0] == "<"
        ? local.iter_1431.tape_ptr - local.code_1432[1] :
      local.code_1432[0] == ">"
        ? local.iter_1431.tape_ptr + local.code_1432[1]
        : local.iter_1431.tape_ptr)

    code_ptr = 2 + (
      local.code_1432[0] == "["
        ? local.iter_1431.tape[local.iter_1431.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1431.code_ptr)] : local.iter_1431.code_ptr :
      local.code_1432[0] == "]"
        ? local.iter_1431.tape[local.iter_1431.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1431.code_ptr)] : local.iter_1431.code_ptr
        : local.iter_1431.code_ptr)

    steps_taken = 1 + local.iter_1431.steps_taken
  }
}

locals {
  code_1433 = (try(local.iter_1432.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1432.code_ptr, local.iter_1432.code_ptr + 2)
    : [null])

  input_1433 = (local.code_1433[0] == ","
    ? substr(local.input_1432, local.code_1433[1], -1)
    : local.input_1432)

  iter_1433 = try(local.iter_1432.code_ptr >= length(var.code), true) ? local.iter_1432 : {
    output = (local.code_1433[0] == "."
      ? "${local.iter_1432.output}${join("", [for _ in range(local.code_1433[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1432.tape[local.iter_1432.tape_ptr]))])}"
      : local.iter_1432.output)
    
    tape = (
      local.code_1433[0] == "+"
        ? [for i, b in local.iter_1432.tape : (i == local.iter_1432.tape_ptr ? (b + local.code_1433[1]) % 256 : b)] :
      local.code_1433[0] == "-"
        ? [for i, b in local.iter_1432.tape : (i == local.iter_1432.tape_ptr ? (b - local.code_1433[1] + 256) % 256 : b)] :
      local.code_1433[0] == ","
        ? [for i, b in local.iter_1432.tape : (i == local.iter_1432.tape_ptr ? local.ascii_lookup[substr(local.input_1433, 0, 1)] : b)]
        : local.iter_1432.tape)

    tape_ptr = (
      local.code_1433[0] == "<"
        ? local.iter_1432.tape_ptr - local.code_1433[1] :
      local.code_1433[0] == ">"
        ? local.iter_1432.tape_ptr + local.code_1433[1]
        : local.iter_1432.tape_ptr)

    code_ptr = 2 + (
      local.code_1433[0] == "["
        ? local.iter_1432.tape[local.iter_1432.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1432.code_ptr)] : local.iter_1432.code_ptr :
      local.code_1433[0] == "]"
        ? local.iter_1432.tape[local.iter_1432.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1432.code_ptr)] : local.iter_1432.code_ptr
        : local.iter_1432.code_ptr)

    steps_taken = 1 + local.iter_1432.steps_taken
  }
}

locals {
  code_1434 = (try(local.iter_1433.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1433.code_ptr, local.iter_1433.code_ptr + 2)
    : [null])

  input_1434 = (local.code_1434[0] == ","
    ? substr(local.input_1433, local.code_1434[1], -1)
    : local.input_1433)

  iter_1434 = try(local.iter_1433.code_ptr >= length(var.code), true) ? local.iter_1433 : {
    output = (local.code_1434[0] == "."
      ? "${local.iter_1433.output}${join("", [for _ in range(local.code_1434[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1433.tape[local.iter_1433.tape_ptr]))])}"
      : local.iter_1433.output)
    
    tape = (
      local.code_1434[0] == "+"
        ? [for i, b in local.iter_1433.tape : (i == local.iter_1433.tape_ptr ? (b + local.code_1434[1]) % 256 : b)] :
      local.code_1434[0] == "-"
        ? [for i, b in local.iter_1433.tape : (i == local.iter_1433.tape_ptr ? (b - local.code_1434[1] + 256) % 256 : b)] :
      local.code_1434[0] == ","
        ? [for i, b in local.iter_1433.tape : (i == local.iter_1433.tape_ptr ? local.ascii_lookup[substr(local.input_1434, 0, 1)] : b)]
        : local.iter_1433.tape)

    tape_ptr = (
      local.code_1434[0] == "<"
        ? local.iter_1433.tape_ptr - local.code_1434[1] :
      local.code_1434[0] == ">"
        ? local.iter_1433.tape_ptr + local.code_1434[1]
        : local.iter_1433.tape_ptr)

    code_ptr = 2 + (
      local.code_1434[0] == "["
        ? local.iter_1433.tape[local.iter_1433.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1433.code_ptr)] : local.iter_1433.code_ptr :
      local.code_1434[0] == "]"
        ? local.iter_1433.tape[local.iter_1433.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1433.code_ptr)] : local.iter_1433.code_ptr
        : local.iter_1433.code_ptr)

    steps_taken = 1 + local.iter_1433.steps_taken
  }
}

locals {
  code_1435 = (try(local.iter_1434.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1434.code_ptr, local.iter_1434.code_ptr + 2)
    : [null])

  input_1435 = (local.code_1435[0] == ","
    ? substr(local.input_1434, local.code_1435[1], -1)
    : local.input_1434)

  iter_1435 = try(local.iter_1434.code_ptr >= length(var.code), true) ? local.iter_1434 : {
    output = (local.code_1435[0] == "."
      ? "${local.iter_1434.output}${join("", [for _ in range(local.code_1435[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1434.tape[local.iter_1434.tape_ptr]))])}"
      : local.iter_1434.output)
    
    tape = (
      local.code_1435[0] == "+"
        ? [for i, b in local.iter_1434.tape : (i == local.iter_1434.tape_ptr ? (b + local.code_1435[1]) % 256 : b)] :
      local.code_1435[0] == "-"
        ? [for i, b in local.iter_1434.tape : (i == local.iter_1434.tape_ptr ? (b - local.code_1435[1] + 256) % 256 : b)] :
      local.code_1435[0] == ","
        ? [for i, b in local.iter_1434.tape : (i == local.iter_1434.tape_ptr ? local.ascii_lookup[substr(local.input_1435, 0, 1)] : b)]
        : local.iter_1434.tape)

    tape_ptr = (
      local.code_1435[0] == "<"
        ? local.iter_1434.tape_ptr - local.code_1435[1] :
      local.code_1435[0] == ">"
        ? local.iter_1434.tape_ptr + local.code_1435[1]
        : local.iter_1434.tape_ptr)

    code_ptr = 2 + (
      local.code_1435[0] == "["
        ? local.iter_1434.tape[local.iter_1434.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1434.code_ptr)] : local.iter_1434.code_ptr :
      local.code_1435[0] == "]"
        ? local.iter_1434.tape[local.iter_1434.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1434.code_ptr)] : local.iter_1434.code_ptr
        : local.iter_1434.code_ptr)

    steps_taken = 1 + local.iter_1434.steps_taken
  }
}

locals {
  code_1436 = (try(local.iter_1435.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1435.code_ptr, local.iter_1435.code_ptr + 2)
    : [null])

  input_1436 = (local.code_1436[0] == ","
    ? substr(local.input_1435, local.code_1436[1], -1)
    : local.input_1435)

  iter_1436 = try(local.iter_1435.code_ptr >= length(var.code), true) ? local.iter_1435 : {
    output = (local.code_1436[0] == "."
      ? "${local.iter_1435.output}${join("", [for _ in range(local.code_1436[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1435.tape[local.iter_1435.tape_ptr]))])}"
      : local.iter_1435.output)
    
    tape = (
      local.code_1436[0] == "+"
        ? [for i, b in local.iter_1435.tape : (i == local.iter_1435.tape_ptr ? (b + local.code_1436[1]) % 256 : b)] :
      local.code_1436[0] == "-"
        ? [for i, b in local.iter_1435.tape : (i == local.iter_1435.tape_ptr ? (b - local.code_1436[1] + 256) % 256 : b)] :
      local.code_1436[0] == ","
        ? [for i, b in local.iter_1435.tape : (i == local.iter_1435.tape_ptr ? local.ascii_lookup[substr(local.input_1436, 0, 1)] : b)]
        : local.iter_1435.tape)

    tape_ptr = (
      local.code_1436[0] == "<"
        ? local.iter_1435.tape_ptr - local.code_1436[1] :
      local.code_1436[0] == ">"
        ? local.iter_1435.tape_ptr + local.code_1436[1]
        : local.iter_1435.tape_ptr)

    code_ptr = 2 + (
      local.code_1436[0] == "["
        ? local.iter_1435.tape[local.iter_1435.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1435.code_ptr)] : local.iter_1435.code_ptr :
      local.code_1436[0] == "]"
        ? local.iter_1435.tape[local.iter_1435.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1435.code_ptr)] : local.iter_1435.code_ptr
        : local.iter_1435.code_ptr)

    steps_taken = 1 + local.iter_1435.steps_taken
  }
}

locals {
  code_1437 = (try(local.iter_1436.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1436.code_ptr, local.iter_1436.code_ptr + 2)
    : [null])

  input_1437 = (local.code_1437[0] == ","
    ? substr(local.input_1436, local.code_1437[1], -1)
    : local.input_1436)

  iter_1437 = try(local.iter_1436.code_ptr >= length(var.code), true) ? local.iter_1436 : {
    output = (local.code_1437[0] == "."
      ? "${local.iter_1436.output}${join("", [for _ in range(local.code_1437[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1436.tape[local.iter_1436.tape_ptr]))])}"
      : local.iter_1436.output)
    
    tape = (
      local.code_1437[0] == "+"
        ? [for i, b in local.iter_1436.tape : (i == local.iter_1436.tape_ptr ? (b + local.code_1437[1]) % 256 : b)] :
      local.code_1437[0] == "-"
        ? [for i, b in local.iter_1436.tape : (i == local.iter_1436.tape_ptr ? (b - local.code_1437[1] + 256) % 256 : b)] :
      local.code_1437[0] == ","
        ? [for i, b in local.iter_1436.tape : (i == local.iter_1436.tape_ptr ? local.ascii_lookup[substr(local.input_1437, 0, 1)] : b)]
        : local.iter_1436.tape)

    tape_ptr = (
      local.code_1437[0] == "<"
        ? local.iter_1436.tape_ptr - local.code_1437[1] :
      local.code_1437[0] == ">"
        ? local.iter_1436.tape_ptr + local.code_1437[1]
        : local.iter_1436.tape_ptr)

    code_ptr = 2 + (
      local.code_1437[0] == "["
        ? local.iter_1436.tape[local.iter_1436.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1436.code_ptr)] : local.iter_1436.code_ptr :
      local.code_1437[0] == "]"
        ? local.iter_1436.tape[local.iter_1436.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1436.code_ptr)] : local.iter_1436.code_ptr
        : local.iter_1436.code_ptr)

    steps_taken = 1 + local.iter_1436.steps_taken
  }
}

locals {
  code_1438 = (try(local.iter_1437.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1437.code_ptr, local.iter_1437.code_ptr + 2)
    : [null])

  input_1438 = (local.code_1438[0] == ","
    ? substr(local.input_1437, local.code_1438[1], -1)
    : local.input_1437)

  iter_1438 = try(local.iter_1437.code_ptr >= length(var.code), true) ? local.iter_1437 : {
    output = (local.code_1438[0] == "."
      ? "${local.iter_1437.output}${join("", [for _ in range(local.code_1438[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1437.tape[local.iter_1437.tape_ptr]))])}"
      : local.iter_1437.output)
    
    tape = (
      local.code_1438[0] == "+"
        ? [for i, b in local.iter_1437.tape : (i == local.iter_1437.tape_ptr ? (b + local.code_1438[1]) % 256 : b)] :
      local.code_1438[0] == "-"
        ? [for i, b in local.iter_1437.tape : (i == local.iter_1437.tape_ptr ? (b - local.code_1438[1] + 256) % 256 : b)] :
      local.code_1438[0] == ","
        ? [for i, b in local.iter_1437.tape : (i == local.iter_1437.tape_ptr ? local.ascii_lookup[substr(local.input_1438, 0, 1)] : b)]
        : local.iter_1437.tape)

    tape_ptr = (
      local.code_1438[0] == "<"
        ? local.iter_1437.tape_ptr - local.code_1438[1] :
      local.code_1438[0] == ">"
        ? local.iter_1437.tape_ptr + local.code_1438[1]
        : local.iter_1437.tape_ptr)

    code_ptr = 2 + (
      local.code_1438[0] == "["
        ? local.iter_1437.tape[local.iter_1437.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1437.code_ptr)] : local.iter_1437.code_ptr :
      local.code_1438[0] == "]"
        ? local.iter_1437.tape[local.iter_1437.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1437.code_ptr)] : local.iter_1437.code_ptr
        : local.iter_1437.code_ptr)

    steps_taken = 1 + local.iter_1437.steps_taken
  }
}

locals {
  code_1439 = (try(local.iter_1438.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1438.code_ptr, local.iter_1438.code_ptr + 2)
    : [null])

  input_1439 = (local.code_1439[0] == ","
    ? substr(local.input_1438, local.code_1439[1], -1)
    : local.input_1438)

  iter_1439 = try(local.iter_1438.code_ptr >= length(var.code), true) ? local.iter_1438 : {
    output = (local.code_1439[0] == "."
      ? "${local.iter_1438.output}${join("", [for _ in range(local.code_1439[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1438.tape[local.iter_1438.tape_ptr]))])}"
      : local.iter_1438.output)
    
    tape = (
      local.code_1439[0] == "+"
        ? [for i, b in local.iter_1438.tape : (i == local.iter_1438.tape_ptr ? (b + local.code_1439[1]) % 256 : b)] :
      local.code_1439[0] == "-"
        ? [for i, b in local.iter_1438.tape : (i == local.iter_1438.tape_ptr ? (b - local.code_1439[1] + 256) % 256 : b)] :
      local.code_1439[0] == ","
        ? [for i, b in local.iter_1438.tape : (i == local.iter_1438.tape_ptr ? local.ascii_lookup[substr(local.input_1439, 0, 1)] : b)]
        : local.iter_1438.tape)

    tape_ptr = (
      local.code_1439[0] == "<"
        ? local.iter_1438.tape_ptr - local.code_1439[1] :
      local.code_1439[0] == ">"
        ? local.iter_1438.tape_ptr + local.code_1439[1]
        : local.iter_1438.tape_ptr)

    code_ptr = 2 + (
      local.code_1439[0] == "["
        ? local.iter_1438.tape[local.iter_1438.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1438.code_ptr)] : local.iter_1438.code_ptr :
      local.code_1439[0] == "]"
        ? local.iter_1438.tape[local.iter_1438.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1438.code_ptr)] : local.iter_1438.code_ptr
        : local.iter_1438.code_ptr)

    steps_taken = 1 + local.iter_1438.steps_taken
  }
}

locals {
  code_1440 = (try(local.iter_1439.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1439.code_ptr, local.iter_1439.code_ptr + 2)
    : [null])

  input_1440 = (local.code_1440[0] == ","
    ? substr(local.input_1439, local.code_1440[1], -1)
    : local.input_1439)

  iter_1440 = try(local.iter_1439.code_ptr >= length(var.code), true) ? local.iter_1439 : {
    output = (local.code_1440[0] == "."
      ? "${local.iter_1439.output}${join("", [for _ in range(local.code_1440[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1439.tape[local.iter_1439.tape_ptr]))])}"
      : local.iter_1439.output)
    
    tape = (
      local.code_1440[0] == "+"
        ? [for i, b in local.iter_1439.tape : (i == local.iter_1439.tape_ptr ? (b + local.code_1440[1]) % 256 : b)] :
      local.code_1440[0] == "-"
        ? [for i, b in local.iter_1439.tape : (i == local.iter_1439.tape_ptr ? (b - local.code_1440[1] + 256) % 256 : b)] :
      local.code_1440[0] == ","
        ? [for i, b in local.iter_1439.tape : (i == local.iter_1439.tape_ptr ? local.ascii_lookup[substr(local.input_1440, 0, 1)] : b)]
        : local.iter_1439.tape)

    tape_ptr = (
      local.code_1440[0] == "<"
        ? local.iter_1439.tape_ptr - local.code_1440[1] :
      local.code_1440[0] == ">"
        ? local.iter_1439.tape_ptr + local.code_1440[1]
        : local.iter_1439.tape_ptr)

    code_ptr = 2 + (
      local.code_1440[0] == "["
        ? local.iter_1439.tape[local.iter_1439.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1439.code_ptr)] : local.iter_1439.code_ptr :
      local.code_1440[0] == "]"
        ? local.iter_1439.tape[local.iter_1439.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1439.code_ptr)] : local.iter_1439.code_ptr
        : local.iter_1439.code_ptr)

    steps_taken = 1 + local.iter_1439.steps_taken
  }
}

locals {
  code_1441 = (try(local.iter_1440.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1440.code_ptr, local.iter_1440.code_ptr + 2)
    : [null])

  input_1441 = (local.code_1441[0] == ","
    ? substr(local.input_1440, local.code_1441[1], -1)
    : local.input_1440)

  iter_1441 = try(local.iter_1440.code_ptr >= length(var.code), true) ? local.iter_1440 : {
    output = (local.code_1441[0] == "."
      ? "${local.iter_1440.output}${join("", [for _ in range(local.code_1441[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1440.tape[local.iter_1440.tape_ptr]))])}"
      : local.iter_1440.output)
    
    tape = (
      local.code_1441[0] == "+"
        ? [for i, b in local.iter_1440.tape : (i == local.iter_1440.tape_ptr ? (b + local.code_1441[1]) % 256 : b)] :
      local.code_1441[0] == "-"
        ? [for i, b in local.iter_1440.tape : (i == local.iter_1440.tape_ptr ? (b - local.code_1441[1] + 256) % 256 : b)] :
      local.code_1441[0] == ","
        ? [for i, b in local.iter_1440.tape : (i == local.iter_1440.tape_ptr ? local.ascii_lookup[substr(local.input_1441, 0, 1)] : b)]
        : local.iter_1440.tape)

    tape_ptr = (
      local.code_1441[0] == "<"
        ? local.iter_1440.tape_ptr - local.code_1441[1] :
      local.code_1441[0] == ">"
        ? local.iter_1440.tape_ptr + local.code_1441[1]
        : local.iter_1440.tape_ptr)

    code_ptr = 2 + (
      local.code_1441[0] == "["
        ? local.iter_1440.tape[local.iter_1440.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1440.code_ptr)] : local.iter_1440.code_ptr :
      local.code_1441[0] == "]"
        ? local.iter_1440.tape[local.iter_1440.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1440.code_ptr)] : local.iter_1440.code_ptr
        : local.iter_1440.code_ptr)

    steps_taken = 1 + local.iter_1440.steps_taken
  }
}

locals {
  code_1442 = (try(local.iter_1441.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1441.code_ptr, local.iter_1441.code_ptr + 2)
    : [null])

  input_1442 = (local.code_1442[0] == ","
    ? substr(local.input_1441, local.code_1442[1], -1)
    : local.input_1441)

  iter_1442 = try(local.iter_1441.code_ptr >= length(var.code), true) ? local.iter_1441 : {
    output = (local.code_1442[0] == "."
      ? "${local.iter_1441.output}${join("", [for _ in range(local.code_1442[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1441.tape[local.iter_1441.tape_ptr]))])}"
      : local.iter_1441.output)
    
    tape = (
      local.code_1442[0] == "+"
        ? [for i, b in local.iter_1441.tape : (i == local.iter_1441.tape_ptr ? (b + local.code_1442[1]) % 256 : b)] :
      local.code_1442[0] == "-"
        ? [for i, b in local.iter_1441.tape : (i == local.iter_1441.tape_ptr ? (b - local.code_1442[1] + 256) % 256 : b)] :
      local.code_1442[0] == ","
        ? [for i, b in local.iter_1441.tape : (i == local.iter_1441.tape_ptr ? local.ascii_lookup[substr(local.input_1442, 0, 1)] : b)]
        : local.iter_1441.tape)

    tape_ptr = (
      local.code_1442[0] == "<"
        ? local.iter_1441.tape_ptr - local.code_1442[1] :
      local.code_1442[0] == ">"
        ? local.iter_1441.tape_ptr + local.code_1442[1]
        : local.iter_1441.tape_ptr)

    code_ptr = 2 + (
      local.code_1442[0] == "["
        ? local.iter_1441.tape[local.iter_1441.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1441.code_ptr)] : local.iter_1441.code_ptr :
      local.code_1442[0] == "]"
        ? local.iter_1441.tape[local.iter_1441.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1441.code_ptr)] : local.iter_1441.code_ptr
        : local.iter_1441.code_ptr)

    steps_taken = 1 + local.iter_1441.steps_taken
  }
}

locals {
  code_1443 = (try(local.iter_1442.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1442.code_ptr, local.iter_1442.code_ptr + 2)
    : [null])

  input_1443 = (local.code_1443[0] == ","
    ? substr(local.input_1442, local.code_1443[1], -1)
    : local.input_1442)

  iter_1443 = try(local.iter_1442.code_ptr >= length(var.code), true) ? local.iter_1442 : {
    output = (local.code_1443[0] == "."
      ? "${local.iter_1442.output}${join("", [for _ in range(local.code_1443[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1442.tape[local.iter_1442.tape_ptr]))])}"
      : local.iter_1442.output)
    
    tape = (
      local.code_1443[0] == "+"
        ? [for i, b in local.iter_1442.tape : (i == local.iter_1442.tape_ptr ? (b + local.code_1443[1]) % 256 : b)] :
      local.code_1443[0] == "-"
        ? [for i, b in local.iter_1442.tape : (i == local.iter_1442.tape_ptr ? (b - local.code_1443[1] + 256) % 256 : b)] :
      local.code_1443[0] == ","
        ? [for i, b in local.iter_1442.tape : (i == local.iter_1442.tape_ptr ? local.ascii_lookup[substr(local.input_1443, 0, 1)] : b)]
        : local.iter_1442.tape)

    tape_ptr = (
      local.code_1443[0] == "<"
        ? local.iter_1442.tape_ptr - local.code_1443[1] :
      local.code_1443[0] == ">"
        ? local.iter_1442.tape_ptr + local.code_1443[1]
        : local.iter_1442.tape_ptr)

    code_ptr = 2 + (
      local.code_1443[0] == "["
        ? local.iter_1442.tape[local.iter_1442.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1442.code_ptr)] : local.iter_1442.code_ptr :
      local.code_1443[0] == "]"
        ? local.iter_1442.tape[local.iter_1442.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1442.code_ptr)] : local.iter_1442.code_ptr
        : local.iter_1442.code_ptr)

    steps_taken = 1 + local.iter_1442.steps_taken
  }
}

locals {
  code_1444 = (try(local.iter_1443.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1443.code_ptr, local.iter_1443.code_ptr + 2)
    : [null])

  input_1444 = (local.code_1444[0] == ","
    ? substr(local.input_1443, local.code_1444[1], -1)
    : local.input_1443)

  iter_1444 = try(local.iter_1443.code_ptr >= length(var.code), true) ? local.iter_1443 : {
    output = (local.code_1444[0] == "."
      ? "${local.iter_1443.output}${join("", [for _ in range(local.code_1444[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1443.tape[local.iter_1443.tape_ptr]))])}"
      : local.iter_1443.output)
    
    tape = (
      local.code_1444[0] == "+"
        ? [for i, b in local.iter_1443.tape : (i == local.iter_1443.tape_ptr ? (b + local.code_1444[1]) % 256 : b)] :
      local.code_1444[0] == "-"
        ? [for i, b in local.iter_1443.tape : (i == local.iter_1443.tape_ptr ? (b - local.code_1444[1] + 256) % 256 : b)] :
      local.code_1444[0] == ","
        ? [for i, b in local.iter_1443.tape : (i == local.iter_1443.tape_ptr ? local.ascii_lookup[substr(local.input_1444, 0, 1)] : b)]
        : local.iter_1443.tape)

    tape_ptr = (
      local.code_1444[0] == "<"
        ? local.iter_1443.tape_ptr - local.code_1444[1] :
      local.code_1444[0] == ">"
        ? local.iter_1443.tape_ptr + local.code_1444[1]
        : local.iter_1443.tape_ptr)

    code_ptr = 2 + (
      local.code_1444[0] == "["
        ? local.iter_1443.tape[local.iter_1443.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1443.code_ptr)] : local.iter_1443.code_ptr :
      local.code_1444[0] == "]"
        ? local.iter_1443.tape[local.iter_1443.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1443.code_ptr)] : local.iter_1443.code_ptr
        : local.iter_1443.code_ptr)

    steps_taken = 1 + local.iter_1443.steps_taken
  }
}

locals {
  code_1445 = (try(local.iter_1444.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1444.code_ptr, local.iter_1444.code_ptr + 2)
    : [null])

  input_1445 = (local.code_1445[0] == ","
    ? substr(local.input_1444, local.code_1445[1], -1)
    : local.input_1444)

  iter_1445 = try(local.iter_1444.code_ptr >= length(var.code), true) ? local.iter_1444 : {
    output = (local.code_1445[0] == "."
      ? "${local.iter_1444.output}${join("", [for _ in range(local.code_1445[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1444.tape[local.iter_1444.tape_ptr]))])}"
      : local.iter_1444.output)
    
    tape = (
      local.code_1445[0] == "+"
        ? [for i, b in local.iter_1444.tape : (i == local.iter_1444.tape_ptr ? (b + local.code_1445[1]) % 256 : b)] :
      local.code_1445[0] == "-"
        ? [for i, b in local.iter_1444.tape : (i == local.iter_1444.tape_ptr ? (b - local.code_1445[1] + 256) % 256 : b)] :
      local.code_1445[0] == ","
        ? [for i, b in local.iter_1444.tape : (i == local.iter_1444.tape_ptr ? local.ascii_lookup[substr(local.input_1445, 0, 1)] : b)]
        : local.iter_1444.tape)

    tape_ptr = (
      local.code_1445[0] == "<"
        ? local.iter_1444.tape_ptr - local.code_1445[1] :
      local.code_1445[0] == ">"
        ? local.iter_1444.tape_ptr + local.code_1445[1]
        : local.iter_1444.tape_ptr)

    code_ptr = 2 + (
      local.code_1445[0] == "["
        ? local.iter_1444.tape[local.iter_1444.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1444.code_ptr)] : local.iter_1444.code_ptr :
      local.code_1445[0] == "]"
        ? local.iter_1444.tape[local.iter_1444.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1444.code_ptr)] : local.iter_1444.code_ptr
        : local.iter_1444.code_ptr)

    steps_taken = 1 + local.iter_1444.steps_taken
  }
}

locals {
  code_1446 = (try(local.iter_1445.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1445.code_ptr, local.iter_1445.code_ptr + 2)
    : [null])

  input_1446 = (local.code_1446[0] == ","
    ? substr(local.input_1445, local.code_1446[1], -1)
    : local.input_1445)

  iter_1446 = try(local.iter_1445.code_ptr >= length(var.code), true) ? local.iter_1445 : {
    output = (local.code_1446[0] == "."
      ? "${local.iter_1445.output}${join("", [for _ in range(local.code_1446[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1445.tape[local.iter_1445.tape_ptr]))])}"
      : local.iter_1445.output)
    
    tape = (
      local.code_1446[0] == "+"
        ? [for i, b in local.iter_1445.tape : (i == local.iter_1445.tape_ptr ? (b + local.code_1446[1]) % 256 : b)] :
      local.code_1446[0] == "-"
        ? [for i, b in local.iter_1445.tape : (i == local.iter_1445.tape_ptr ? (b - local.code_1446[1] + 256) % 256 : b)] :
      local.code_1446[0] == ","
        ? [for i, b in local.iter_1445.tape : (i == local.iter_1445.tape_ptr ? local.ascii_lookup[substr(local.input_1446, 0, 1)] : b)]
        : local.iter_1445.tape)

    tape_ptr = (
      local.code_1446[0] == "<"
        ? local.iter_1445.tape_ptr - local.code_1446[1] :
      local.code_1446[0] == ">"
        ? local.iter_1445.tape_ptr + local.code_1446[1]
        : local.iter_1445.tape_ptr)

    code_ptr = 2 + (
      local.code_1446[0] == "["
        ? local.iter_1445.tape[local.iter_1445.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1445.code_ptr)] : local.iter_1445.code_ptr :
      local.code_1446[0] == "]"
        ? local.iter_1445.tape[local.iter_1445.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1445.code_ptr)] : local.iter_1445.code_ptr
        : local.iter_1445.code_ptr)

    steps_taken = 1 + local.iter_1445.steps_taken
  }
}

locals {
  code_1447 = (try(local.iter_1446.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1446.code_ptr, local.iter_1446.code_ptr + 2)
    : [null])

  input_1447 = (local.code_1447[0] == ","
    ? substr(local.input_1446, local.code_1447[1], -1)
    : local.input_1446)

  iter_1447 = try(local.iter_1446.code_ptr >= length(var.code), true) ? local.iter_1446 : {
    output = (local.code_1447[0] == "."
      ? "${local.iter_1446.output}${join("", [for _ in range(local.code_1447[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1446.tape[local.iter_1446.tape_ptr]))])}"
      : local.iter_1446.output)
    
    tape = (
      local.code_1447[0] == "+"
        ? [for i, b in local.iter_1446.tape : (i == local.iter_1446.tape_ptr ? (b + local.code_1447[1]) % 256 : b)] :
      local.code_1447[0] == "-"
        ? [for i, b in local.iter_1446.tape : (i == local.iter_1446.tape_ptr ? (b - local.code_1447[1] + 256) % 256 : b)] :
      local.code_1447[0] == ","
        ? [for i, b in local.iter_1446.tape : (i == local.iter_1446.tape_ptr ? local.ascii_lookup[substr(local.input_1447, 0, 1)] : b)]
        : local.iter_1446.tape)

    tape_ptr = (
      local.code_1447[0] == "<"
        ? local.iter_1446.tape_ptr - local.code_1447[1] :
      local.code_1447[0] == ">"
        ? local.iter_1446.tape_ptr + local.code_1447[1]
        : local.iter_1446.tape_ptr)

    code_ptr = 2 + (
      local.code_1447[0] == "["
        ? local.iter_1446.tape[local.iter_1446.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1446.code_ptr)] : local.iter_1446.code_ptr :
      local.code_1447[0] == "]"
        ? local.iter_1446.tape[local.iter_1446.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1446.code_ptr)] : local.iter_1446.code_ptr
        : local.iter_1446.code_ptr)

    steps_taken = 1 + local.iter_1446.steps_taken
  }
}

locals {
  code_1448 = (try(local.iter_1447.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1447.code_ptr, local.iter_1447.code_ptr + 2)
    : [null])

  input_1448 = (local.code_1448[0] == ","
    ? substr(local.input_1447, local.code_1448[1], -1)
    : local.input_1447)

  iter_1448 = try(local.iter_1447.code_ptr >= length(var.code), true) ? local.iter_1447 : {
    output = (local.code_1448[0] == "."
      ? "${local.iter_1447.output}${join("", [for _ in range(local.code_1448[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1447.tape[local.iter_1447.tape_ptr]))])}"
      : local.iter_1447.output)
    
    tape = (
      local.code_1448[0] == "+"
        ? [for i, b in local.iter_1447.tape : (i == local.iter_1447.tape_ptr ? (b + local.code_1448[1]) % 256 : b)] :
      local.code_1448[0] == "-"
        ? [for i, b in local.iter_1447.tape : (i == local.iter_1447.tape_ptr ? (b - local.code_1448[1] + 256) % 256 : b)] :
      local.code_1448[0] == ","
        ? [for i, b in local.iter_1447.tape : (i == local.iter_1447.tape_ptr ? local.ascii_lookup[substr(local.input_1448, 0, 1)] : b)]
        : local.iter_1447.tape)

    tape_ptr = (
      local.code_1448[0] == "<"
        ? local.iter_1447.tape_ptr - local.code_1448[1] :
      local.code_1448[0] == ">"
        ? local.iter_1447.tape_ptr + local.code_1448[1]
        : local.iter_1447.tape_ptr)

    code_ptr = 2 + (
      local.code_1448[0] == "["
        ? local.iter_1447.tape[local.iter_1447.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1447.code_ptr)] : local.iter_1447.code_ptr :
      local.code_1448[0] == "]"
        ? local.iter_1447.tape[local.iter_1447.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1447.code_ptr)] : local.iter_1447.code_ptr
        : local.iter_1447.code_ptr)

    steps_taken = 1 + local.iter_1447.steps_taken
  }
}

locals {
  code_1449 = (try(local.iter_1448.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1448.code_ptr, local.iter_1448.code_ptr + 2)
    : [null])

  input_1449 = (local.code_1449[0] == ","
    ? substr(local.input_1448, local.code_1449[1], -1)
    : local.input_1448)

  iter_1449 = try(local.iter_1448.code_ptr >= length(var.code), true) ? local.iter_1448 : {
    output = (local.code_1449[0] == "."
      ? "${local.iter_1448.output}${join("", [for _ in range(local.code_1449[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1448.tape[local.iter_1448.tape_ptr]))])}"
      : local.iter_1448.output)
    
    tape = (
      local.code_1449[0] == "+"
        ? [for i, b in local.iter_1448.tape : (i == local.iter_1448.tape_ptr ? (b + local.code_1449[1]) % 256 : b)] :
      local.code_1449[0] == "-"
        ? [for i, b in local.iter_1448.tape : (i == local.iter_1448.tape_ptr ? (b - local.code_1449[1] + 256) % 256 : b)] :
      local.code_1449[0] == ","
        ? [for i, b in local.iter_1448.tape : (i == local.iter_1448.tape_ptr ? local.ascii_lookup[substr(local.input_1449, 0, 1)] : b)]
        : local.iter_1448.tape)

    tape_ptr = (
      local.code_1449[0] == "<"
        ? local.iter_1448.tape_ptr - local.code_1449[1] :
      local.code_1449[0] == ">"
        ? local.iter_1448.tape_ptr + local.code_1449[1]
        : local.iter_1448.tape_ptr)

    code_ptr = 2 + (
      local.code_1449[0] == "["
        ? local.iter_1448.tape[local.iter_1448.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1448.code_ptr)] : local.iter_1448.code_ptr :
      local.code_1449[0] == "]"
        ? local.iter_1448.tape[local.iter_1448.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1448.code_ptr)] : local.iter_1448.code_ptr
        : local.iter_1448.code_ptr)

    steps_taken = 1 + local.iter_1448.steps_taken
  }
}

locals {
  code_1450 = (try(local.iter_1449.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1449.code_ptr, local.iter_1449.code_ptr + 2)
    : [null])

  input_1450 = (local.code_1450[0] == ","
    ? substr(local.input_1449, local.code_1450[1], -1)
    : local.input_1449)

  iter_1450 = try(local.iter_1449.code_ptr >= length(var.code), true) ? local.iter_1449 : {
    output = (local.code_1450[0] == "."
      ? "${local.iter_1449.output}${join("", [for _ in range(local.code_1450[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1449.tape[local.iter_1449.tape_ptr]))])}"
      : local.iter_1449.output)
    
    tape = (
      local.code_1450[0] == "+"
        ? [for i, b in local.iter_1449.tape : (i == local.iter_1449.tape_ptr ? (b + local.code_1450[1]) % 256 : b)] :
      local.code_1450[0] == "-"
        ? [for i, b in local.iter_1449.tape : (i == local.iter_1449.tape_ptr ? (b - local.code_1450[1] + 256) % 256 : b)] :
      local.code_1450[0] == ","
        ? [for i, b in local.iter_1449.tape : (i == local.iter_1449.tape_ptr ? local.ascii_lookup[substr(local.input_1450, 0, 1)] : b)]
        : local.iter_1449.tape)

    tape_ptr = (
      local.code_1450[0] == "<"
        ? local.iter_1449.tape_ptr - local.code_1450[1] :
      local.code_1450[0] == ">"
        ? local.iter_1449.tape_ptr + local.code_1450[1]
        : local.iter_1449.tape_ptr)

    code_ptr = 2 + (
      local.code_1450[0] == "["
        ? local.iter_1449.tape[local.iter_1449.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1449.code_ptr)] : local.iter_1449.code_ptr :
      local.code_1450[0] == "]"
        ? local.iter_1449.tape[local.iter_1449.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1449.code_ptr)] : local.iter_1449.code_ptr
        : local.iter_1449.code_ptr)

    steps_taken = 1 + local.iter_1449.steps_taken
  }
}

locals {
  code_1451 = (try(local.iter_1450.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1450.code_ptr, local.iter_1450.code_ptr + 2)
    : [null])

  input_1451 = (local.code_1451[0] == ","
    ? substr(local.input_1450, local.code_1451[1], -1)
    : local.input_1450)

  iter_1451 = try(local.iter_1450.code_ptr >= length(var.code), true) ? local.iter_1450 : {
    output = (local.code_1451[0] == "."
      ? "${local.iter_1450.output}${join("", [for _ in range(local.code_1451[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1450.tape[local.iter_1450.tape_ptr]))])}"
      : local.iter_1450.output)
    
    tape = (
      local.code_1451[0] == "+"
        ? [for i, b in local.iter_1450.tape : (i == local.iter_1450.tape_ptr ? (b + local.code_1451[1]) % 256 : b)] :
      local.code_1451[0] == "-"
        ? [for i, b in local.iter_1450.tape : (i == local.iter_1450.tape_ptr ? (b - local.code_1451[1] + 256) % 256 : b)] :
      local.code_1451[0] == ","
        ? [for i, b in local.iter_1450.tape : (i == local.iter_1450.tape_ptr ? local.ascii_lookup[substr(local.input_1451, 0, 1)] : b)]
        : local.iter_1450.tape)

    tape_ptr = (
      local.code_1451[0] == "<"
        ? local.iter_1450.tape_ptr - local.code_1451[1] :
      local.code_1451[0] == ">"
        ? local.iter_1450.tape_ptr + local.code_1451[1]
        : local.iter_1450.tape_ptr)

    code_ptr = 2 + (
      local.code_1451[0] == "["
        ? local.iter_1450.tape[local.iter_1450.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1450.code_ptr)] : local.iter_1450.code_ptr :
      local.code_1451[0] == "]"
        ? local.iter_1450.tape[local.iter_1450.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1450.code_ptr)] : local.iter_1450.code_ptr
        : local.iter_1450.code_ptr)

    steps_taken = 1 + local.iter_1450.steps_taken
  }
}

locals {
  code_1452 = (try(local.iter_1451.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1451.code_ptr, local.iter_1451.code_ptr + 2)
    : [null])

  input_1452 = (local.code_1452[0] == ","
    ? substr(local.input_1451, local.code_1452[1], -1)
    : local.input_1451)

  iter_1452 = try(local.iter_1451.code_ptr >= length(var.code), true) ? local.iter_1451 : {
    output = (local.code_1452[0] == "."
      ? "${local.iter_1451.output}${join("", [for _ in range(local.code_1452[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1451.tape[local.iter_1451.tape_ptr]))])}"
      : local.iter_1451.output)
    
    tape = (
      local.code_1452[0] == "+"
        ? [for i, b in local.iter_1451.tape : (i == local.iter_1451.tape_ptr ? (b + local.code_1452[1]) % 256 : b)] :
      local.code_1452[0] == "-"
        ? [for i, b in local.iter_1451.tape : (i == local.iter_1451.tape_ptr ? (b - local.code_1452[1] + 256) % 256 : b)] :
      local.code_1452[0] == ","
        ? [for i, b in local.iter_1451.tape : (i == local.iter_1451.tape_ptr ? local.ascii_lookup[substr(local.input_1452, 0, 1)] : b)]
        : local.iter_1451.tape)

    tape_ptr = (
      local.code_1452[0] == "<"
        ? local.iter_1451.tape_ptr - local.code_1452[1] :
      local.code_1452[0] == ">"
        ? local.iter_1451.tape_ptr + local.code_1452[1]
        : local.iter_1451.tape_ptr)

    code_ptr = 2 + (
      local.code_1452[0] == "["
        ? local.iter_1451.tape[local.iter_1451.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1451.code_ptr)] : local.iter_1451.code_ptr :
      local.code_1452[0] == "]"
        ? local.iter_1451.tape[local.iter_1451.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1451.code_ptr)] : local.iter_1451.code_ptr
        : local.iter_1451.code_ptr)

    steps_taken = 1 + local.iter_1451.steps_taken
  }
}

locals {
  code_1453 = (try(local.iter_1452.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1452.code_ptr, local.iter_1452.code_ptr + 2)
    : [null])

  input_1453 = (local.code_1453[0] == ","
    ? substr(local.input_1452, local.code_1453[1], -1)
    : local.input_1452)

  iter_1453 = try(local.iter_1452.code_ptr >= length(var.code), true) ? local.iter_1452 : {
    output = (local.code_1453[0] == "."
      ? "${local.iter_1452.output}${join("", [for _ in range(local.code_1453[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1452.tape[local.iter_1452.tape_ptr]))])}"
      : local.iter_1452.output)
    
    tape = (
      local.code_1453[0] == "+"
        ? [for i, b in local.iter_1452.tape : (i == local.iter_1452.tape_ptr ? (b + local.code_1453[1]) % 256 : b)] :
      local.code_1453[0] == "-"
        ? [for i, b in local.iter_1452.tape : (i == local.iter_1452.tape_ptr ? (b - local.code_1453[1] + 256) % 256 : b)] :
      local.code_1453[0] == ","
        ? [for i, b in local.iter_1452.tape : (i == local.iter_1452.tape_ptr ? local.ascii_lookup[substr(local.input_1453, 0, 1)] : b)]
        : local.iter_1452.tape)

    tape_ptr = (
      local.code_1453[0] == "<"
        ? local.iter_1452.tape_ptr - local.code_1453[1] :
      local.code_1453[0] == ">"
        ? local.iter_1452.tape_ptr + local.code_1453[1]
        : local.iter_1452.tape_ptr)

    code_ptr = 2 + (
      local.code_1453[0] == "["
        ? local.iter_1452.tape[local.iter_1452.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1452.code_ptr)] : local.iter_1452.code_ptr :
      local.code_1453[0] == "]"
        ? local.iter_1452.tape[local.iter_1452.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1452.code_ptr)] : local.iter_1452.code_ptr
        : local.iter_1452.code_ptr)

    steps_taken = 1 + local.iter_1452.steps_taken
  }
}

locals {
  code_1454 = (try(local.iter_1453.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1453.code_ptr, local.iter_1453.code_ptr + 2)
    : [null])

  input_1454 = (local.code_1454[0] == ","
    ? substr(local.input_1453, local.code_1454[1], -1)
    : local.input_1453)

  iter_1454 = try(local.iter_1453.code_ptr >= length(var.code), true) ? local.iter_1453 : {
    output = (local.code_1454[0] == "."
      ? "${local.iter_1453.output}${join("", [for _ in range(local.code_1454[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1453.tape[local.iter_1453.tape_ptr]))])}"
      : local.iter_1453.output)
    
    tape = (
      local.code_1454[0] == "+"
        ? [for i, b in local.iter_1453.tape : (i == local.iter_1453.tape_ptr ? (b + local.code_1454[1]) % 256 : b)] :
      local.code_1454[0] == "-"
        ? [for i, b in local.iter_1453.tape : (i == local.iter_1453.tape_ptr ? (b - local.code_1454[1] + 256) % 256 : b)] :
      local.code_1454[0] == ","
        ? [for i, b in local.iter_1453.tape : (i == local.iter_1453.tape_ptr ? local.ascii_lookup[substr(local.input_1454, 0, 1)] : b)]
        : local.iter_1453.tape)

    tape_ptr = (
      local.code_1454[0] == "<"
        ? local.iter_1453.tape_ptr - local.code_1454[1] :
      local.code_1454[0] == ">"
        ? local.iter_1453.tape_ptr + local.code_1454[1]
        : local.iter_1453.tape_ptr)

    code_ptr = 2 + (
      local.code_1454[0] == "["
        ? local.iter_1453.tape[local.iter_1453.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1453.code_ptr)] : local.iter_1453.code_ptr :
      local.code_1454[0] == "]"
        ? local.iter_1453.tape[local.iter_1453.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1453.code_ptr)] : local.iter_1453.code_ptr
        : local.iter_1453.code_ptr)

    steps_taken = 1 + local.iter_1453.steps_taken
  }
}

locals {
  code_1455 = (try(local.iter_1454.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1454.code_ptr, local.iter_1454.code_ptr + 2)
    : [null])

  input_1455 = (local.code_1455[0] == ","
    ? substr(local.input_1454, local.code_1455[1], -1)
    : local.input_1454)

  iter_1455 = try(local.iter_1454.code_ptr >= length(var.code), true) ? local.iter_1454 : {
    output = (local.code_1455[0] == "."
      ? "${local.iter_1454.output}${join("", [for _ in range(local.code_1455[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1454.tape[local.iter_1454.tape_ptr]))])}"
      : local.iter_1454.output)
    
    tape = (
      local.code_1455[0] == "+"
        ? [for i, b in local.iter_1454.tape : (i == local.iter_1454.tape_ptr ? (b + local.code_1455[1]) % 256 : b)] :
      local.code_1455[0] == "-"
        ? [for i, b in local.iter_1454.tape : (i == local.iter_1454.tape_ptr ? (b - local.code_1455[1] + 256) % 256 : b)] :
      local.code_1455[0] == ","
        ? [for i, b in local.iter_1454.tape : (i == local.iter_1454.tape_ptr ? local.ascii_lookup[substr(local.input_1455, 0, 1)] : b)]
        : local.iter_1454.tape)

    tape_ptr = (
      local.code_1455[0] == "<"
        ? local.iter_1454.tape_ptr - local.code_1455[1] :
      local.code_1455[0] == ">"
        ? local.iter_1454.tape_ptr + local.code_1455[1]
        : local.iter_1454.tape_ptr)

    code_ptr = 2 + (
      local.code_1455[0] == "["
        ? local.iter_1454.tape[local.iter_1454.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1454.code_ptr)] : local.iter_1454.code_ptr :
      local.code_1455[0] == "]"
        ? local.iter_1454.tape[local.iter_1454.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1454.code_ptr)] : local.iter_1454.code_ptr
        : local.iter_1454.code_ptr)

    steps_taken = 1 + local.iter_1454.steps_taken
  }
}

locals {
  code_1456 = (try(local.iter_1455.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1455.code_ptr, local.iter_1455.code_ptr + 2)
    : [null])

  input_1456 = (local.code_1456[0] == ","
    ? substr(local.input_1455, local.code_1456[1], -1)
    : local.input_1455)

  iter_1456 = try(local.iter_1455.code_ptr >= length(var.code), true) ? local.iter_1455 : {
    output = (local.code_1456[0] == "."
      ? "${local.iter_1455.output}${join("", [for _ in range(local.code_1456[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1455.tape[local.iter_1455.tape_ptr]))])}"
      : local.iter_1455.output)
    
    tape = (
      local.code_1456[0] == "+"
        ? [for i, b in local.iter_1455.tape : (i == local.iter_1455.tape_ptr ? (b + local.code_1456[1]) % 256 : b)] :
      local.code_1456[0] == "-"
        ? [for i, b in local.iter_1455.tape : (i == local.iter_1455.tape_ptr ? (b - local.code_1456[1] + 256) % 256 : b)] :
      local.code_1456[0] == ","
        ? [for i, b in local.iter_1455.tape : (i == local.iter_1455.tape_ptr ? local.ascii_lookup[substr(local.input_1456, 0, 1)] : b)]
        : local.iter_1455.tape)

    tape_ptr = (
      local.code_1456[0] == "<"
        ? local.iter_1455.tape_ptr - local.code_1456[1] :
      local.code_1456[0] == ">"
        ? local.iter_1455.tape_ptr + local.code_1456[1]
        : local.iter_1455.tape_ptr)

    code_ptr = 2 + (
      local.code_1456[0] == "["
        ? local.iter_1455.tape[local.iter_1455.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1455.code_ptr)] : local.iter_1455.code_ptr :
      local.code_1456[0] == "]"
        ? local.iter_1455.tape[local.iter_1455.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1455.code_ptr)] : local.iter_1455.code_ptr
        : local.iter_1455.code_ptr)

    steps_taken = 1 + local.iter_1455.steps_taken
  }
}

locals {
  code_1457 = (try(local.iter_1456.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1456.code_ptr, local.iter_1456.code_ptr + 2)
    : [null])

  input_1457 = (local.code_1457[0] == ","
    ? substr(local.input_1456, local.code_1457[1], -1)
    : local.input_1456)

  iter_1457 = try(local.iter_1456.code_ptr >= length(var.code), true) ? local.iter_1456 : {
    output = (local.code_1457[0] == "."
      ? "${local.iter_1456.output}${join("", [for _ in range(local.code_1457[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1456.tape[local.iter_1456.tape_ptr]))])}"
      : local.iter_1456.output)
    
    tape = (
      local.code_1457[0] == "+"
        ? [for i, b in local.iter_1456.tape : (i == local.iter_1456.tape_ptr ? (b + local.code_1457[1]) % 256 : b)] :
      local.code_1457[0] == "-"
        ? [for i, b in local.iter_1456.tape : (i == local.iter_1456.tape_ptr ? (b - local.code_1457[1] + 256) % 256 : b)] :
      local.code_1457[0] == ","
        ? [for i, b in local.iter_1456.tape : (i == local.iter_1456.tape_ptr ? local.ascii_lookup[substr(local.input_1457, 0, 1)] : b)]
        : local.iter_1456.tape)

    tape_ptr = (
      local.code_1457[0] == "<"
        ? local.iter_1456.tape_ptr - local.code_1457[1] :
      local.code_1457[0] == ">"
        ? local.iter_1456.tape_ptr + local.code_1457[1]
        : local.iter_1456.tape_ptr)

    code_ptr = 2 + (
      local.code_1457[0] == "["
        ? local.iter_1456.tape[local.iter_1456.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1456.code_ptr)] : local.iter_1456.code_ptr :
      local.code_1457[0] == "]"
        ? local.iter_1456.tape[local.iter_1456.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1456.code_ptr)] : local.iter_1456.code_ptr
        : local.iter_1456.code_ptr)

    steps_taken = 1 + local.iter_1456.steps_taken
  }
}

locals {
  code_1458 = (try(local.iter_1457.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1457.code_ptr, local.iter_1457.code_ptr + 2)
    : [null])

  input_1458 = (local.code_1458[0] == ","
    ? substr(local.input_1457, local.code_1458[1], -1)
    : local.input_1457)

  iter_1458 = try(local.iter_1457.code_ptr >= length(var.code), true) ? local.iter_1457 : {
    output = (local.code_1458[0] == "."
      ? "${local.iter_1457.output}${join("", [for _ in range(local.code_1458[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1457.tape[local.iter_1457.tape_ptr]))])}"
      : local.iter_1457.output)
    
    tape = (
      local.code_1458[0] == "+"
        ? [for i, b in local.iter_1457.tape : (i == local.iter_1457.tape_ptr ? (b + local.code_1458[1]) % 256 : b)] :
      local.code_1458[0] == "-"
        ? [for i, b in local.iter_1457.tape : (i == local.iter_1457.tape_ptr ? (b - local.code_1458[1] + 256) % 256 : b)] :
      local.code_1458[0] == ","
        ? [for i, b in local.iter_1457.tape : (i == local.iter_1457.tape_ptr ? local.ascii_lookup[substr(local.input_1458, 0, 1)] : b)]
        : local.iter_1457.tape)

    tape_ptr = (
      local.code_1458[0] == "<"
        ? local.iter_1457.tape_ptr - local.code_1458[1] :
      local.code_1458[0] == ">"
        ? local.iter_1457.tape_ptr + local.code_1458[1]
        : local.iter_1457.tape_ptr)

    code_ptr = 2 + (
      local.code_1458[0] == "["
        ? local.iter_1457.tape[local.iter_1457.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1457.code_ptr)] : local.iter_1457.code_ptr :
      local.code_1458[0] == "]"
        ? local.iter_1457.tape[local.iter_1457.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1457.code_ptr)] : local.iter_1457.code_ptr
        : local.iter_1457.code_ptr)

    steps_taken = 1 + local.iter_1457.steps_taken
  }
}

locals {
  code_1459 = (try(local.iter_1458.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1458.code_ptr, local.iter_1458.code_ptr + 2)
    : [null])

  input_1459 = (local.code_1459[0] == ","
    ? substr(local.input_1458, local.code_1459[1], -1)
    : local.input_1458)

  iter_1459 = try(local.iter_1458.code_ptr >= length(var.code), true) ? local.iter_1458 : {
    output = (local.code_1459[0] == "."
      ? "${local.iter_1458.output}${join("", [for _ in range(local.code_1459[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1458.tape[local.iter_1458.tape_ptr]))])}"
      : local.iter_1458.output)
    
    tape = (
      local.code_1459[0] == "+"
        ? [for i, b in local.iter_1458.tape : (i == local.iter_1458.tape_ptr ? (b + local.code_1459[1]) % 256 : b)] :
      local.code_1459[0] == "-"
        ? [for i, b in local.iter_1458.tape : (i == local.iter_1458.tape_ptr ? (b - local.code_1459[1] + 256) % 256 : b)] :
      local.code_1459[0] == ","
        ? [for i, b in local.iter_1458.tape : (i == local.iter_1458.tape_ptr ? local.ascii_lookup[substr(local.input_1459, 0, 1)] : b)]
        : local.iter_1458.tape)

    tape_ptr = (
      local.code_1459[0] == "<"
        ? local.iter_1458.tape_ptr - local.code_1459[1] :
      local.code_1459[0] == ">"
        ? local.iter_1458.tape_ptr + local.code_1459[1]
        : local.iter_1458.tape_ptr)

    code_ptr = 2 + (
      local.code_1459[0] == "["
        ? local.iter_1458.tape[local.iter_1458.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1458.code_ptr)] : local.iter_1458.code_ptr :
      local.code_1459[0] == "]"
        ? local.iter_1458.tape[local.iter_1458.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1458.code_ptr)] : local.iter_1458.code_ptr
        : local.iter_1458.code_ptr)

    steps_taken = 1 + local.iter_1458.steps_taken
  }
}

locals {
  code_1460 = (try(local.iter_1459.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1459.code_ptr, local.iter_1459.code_ptr + 2)
    : [null])

  input_1460 = (local.code_1460[0] == ","
    ? substr(local.input_1459, local.code_1460[1], -1)
    : local.input_1459)

  iter_1460 = try(local.iter_1459.code_ptr >= length(var.code), true) ? local.iter_1459 : {
    output = (local.code_1460[0] == "."
      ? "${local.iter_1459.output}${join("", [for _ in range(local.code_1460[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1459.tape[local.iter_1459.tape_ptr]))])}"
      : local.iter_1459.output)
    
    tape = (
      local.code_1460[0] == "+"
        ? [for i, b in local.iter_1459.tape : (i == local.iter_1459.tape_ptr ? (b + local.code_1460[1]) % 256 : b)] :
      local.code_1460[0] == "-"
        ? [for i, b in local.iter_1459.tape : (i == local.iter_1459.tape_ptr ? (b - local.code_1460[1] + 256) % 256 : b)] :
      local.code_1460[0] == ","
        ? [for i, b in local.iter_1459.tape : (i == local.iter_1459.tape_ptr ? local.ascii_lookup[substr(local.input_1460, 0, 1)] : b)]
        : local.iter_1459.tape)

    tape_ptr = (
      local.code_1460[0] == "<"
        ? local.iter_1459.tape_ptr - local.code_1460[1] :
      local.code_1460[0] == ">"
        ? local.iter_1459.tape_ptr + local.code_1460[1]
        : local.iter_1459.tape_ptr)

    code_ptr = 2 + (
      local.code_1460[0] == "["
        ? local.iter_1459.tape[local.iter_1459.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1459.code_ptr)] : local.iter_1459.code_ptr :
      local.code_1460[0] == "]"
        ? local.iter_1459.tape[local.iter_1459.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1459.code_ptr)] : local.iter_1459.code_ptr
        : local.iter_1459.code_ptr)

    steps_taken = 1 + local.iter_1459.steps_taken
  }
}

locals {
  code_1461 = (try(local.iter_1460.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1460.code_ptr, local.iter_1460.code_ptr + 2)
    : [null])

  input_1461 = (local.code_1461[0] == ","
    ? substr(local.input_1460, local.code_1461[1], -1)
    : local.input_1460)

  iter_1461 = try(local.iter_1460.code_ptr >= length(var.code), true) ? local.iter_1460 : {
    output = (local.code_1461[0] == "."
      ? "${local.iter_1460.output}${join("", [for _ in range(local.code_1461[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1460.tape[local.iter_1460.tape_ptr]))])}"
      : local.iter_1460.output)
    
    tape = (
      local.code_1461[0] == "+"
        ? [for i, b in local.iter_1460.tape : (i == local.iter_1460.tape_ptr ? (b + local.code_1461[1]) % 256 : b)] :
      local.code_1461[0] == "-"
        ? [for i, b in local.iter_1460.tape : (i == local.iter_1460.tape_ptr ? (b - local.code_1461[1] + 256) % 256 : b)] :
      local.code_1461[0] == ","
        ? [for i, b in local.iter_1460.tape : (i == local.iter_1460.tape_ptr ? local.ascii_lookup[substr(local.input_1461, 0, 1)] : b)]
        : local.iter_1460.tape)

    tape_ptr = (
      local.code_1461[0] == "<"
        ? local.iter_1460.tape_ptr - local.code_1461[1] :
      local.code_1461[0] == ">"
        ? local.iter_1460.tape_ptr + local.code_1461[1]
        : local.iter_1460.tape_ptr)

    code_ptr = 2 + (
      local.code_1461[0] == "["
        ? local.iter_1460.tape[local.iter_1460.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1460.code_ptr)] : local.iter_1460.code_ptr :
      local.code_1461[0] == "]"
        ? local.iter_1460.tape[local.iter_1460.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1460.code_ptr)] : local.iter_1460.code_ptr
        : local.iter_1460.code_ptr)

    steps_taken = 1 + local.iter_1460.steps_taken
  }
}

locals {
  code_1462 = (try(local.iter_1461.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1461.code_ptr, local.iter_1461.code_ptr + 2)
    : [null])

  input_1462 = (local.code_1462[0] == ","
    ? substr(local.input_1461, local.code_1462[1], -1)
    : local.input_1461)

  iter_1462 = try(local.iter_1461.code_ptr >= length(var.code), true) ? local.iter_1461 : {
    output = (local.code_1462[0] == "."
      ? "${local.iter_1461.output}${join("", [for _ in range(local.code_1462[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1461.tape[local.iter_1461.tape_ptr]))])}"
      : local.iter_1461.output)
    
    tape = (
      local.code_1462[0] == "+"
        ? [for i, b in local.iter_1461.tape : (i == local.iter_1461.tape_ptr ? (b + local.code_1462[1]) % 256 : b)] :
      local.code_1462[0] == "-"
        ? [for i, b in local.iter_1461.tape : (i == local.iter_1461.tape_ptr ? (b - local.code_1462[1] + 256) % 256 : b)] :
      local.code_1462[0] == ","
        ? [for i, b in local.iter_1461.tape : (i == local.iter_1461.tape_ptr ? local.ascii_lookup[substr(local.input_1462, 0, 1)] : b)]
        : local.iter_1461.tape)

    tape_ptr = (
      local.code_1462[0] == "<"
        ? local.iter_1461.tape_ptr - local.code_1462[1] :
      local.code_1462[0] == ">"
        ? local.iter_1461.tape_ptr + local.code_1462[1]
        : local.iter_1461.tape_ptr)

    code_ptr = 2 + (
      local.code_1462[0] == "["
        ? local.iter_1461.tape[local.iter_1461.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1461.code_ptr)] : local.iter_1461.code_ptr :
      local.code_1462[0] == "]"
        ? local.iter_1461.tape[local.iter_1461.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1461.code_ptr)] : local.iter_1461.code_ptr
        : local.iter_1461.code_ptr)

    steps_taken = 1 + local.iter_1461.steps_taken
  }
}

locals {
  code_1463 = (try(local.iter_1462.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1462.code_ptr, local.iter_1462.code_ptr + 2)
    : [null])

  input_1463 = (local.code_1463[0] == ","
    ? substr(local.input_1462, local.code_1463[1], -1)
    : local.input_1462)

  iter_1463 = try(local.iter_1462.code_ptr >= length(var.code), true) ? local.iter_1462 : {
    output = (local.code_1463[0] == "."
      ? "${local.iter_1462.output}${join("", [for _ in range(local.code_1463[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1462.tape[local.iter_1462.tape_ptr]))])}"
      : local.iter_1462.output)
    
    tape = (
      local.code_1463[0] == "+"
        ? [for i, b in local.iter_1462.tape : (i == local.iter_1462.tape_ptr ? (b + local.code_1463[1]) % 256 : b)] :
      local.code_1463[0] == "-"
        ? [for i, b in local.iter_1462.tape : (i == local.iter_1462.tape_ptr ? (b - local.code_1463[1] + 256) % 256 : b)] :
      local.code_1463[0] == ","
        ? [for i, b in local.iter_1462.tape : (i == local.iter_1462.tape_ptr ? local.ascii_lookup[substr(local.input_1463, 0, 1)] : b)]
        : local.iter_1462.tape)

    tape_ptr = (
      local.code_1463[0] == "<"
        ? local.iter_1462.tape_ptr - local.code_1463[1] :
      local.code_1463[0] == ">"
        ? local.iter_1462.tape_ptr + local.code_1463[1]
        : local.iter_1462.tape_ptr)

    code_ptr = 2 + (
      local.code_1463[0] == "["
        ? local.iter_1462.tape[local.iter_1462.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1462.code_ptr)] : local.iter_1462.code_ptr :
      local.code_1463[0] == "]"
        ? local.iter_1462.tape[local.iter_1462.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1462.code_ptr)] : local.iter_1462.code_ptr
        : local.iter_1462.code_ptr)

    steps_taken = 1 + local.iter_1462.steps_taken
  }
}

locals {
  code_1464 = (try(local.iter_1463.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1463.code_ptr, local.iter_1463.code_ptr + 2)
    : [null])

  input_1464 = (local.code_1464[0] == ","
    ? substr(local.input_1463, local.code_1464[1], -1)
    : local.input_1463)

  iter_1464 = try(local.iter_1463.code_ptr >= length(var.code), true) ? local.iter_1463 : {
    output = (local.code_1464[0] == "."
      ? "${local.iter_1463.output}${join("", [for _ in range(local.code_1464[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1463.tape[local.iter_1463.tape_ptr]))])}"
      : local.iter_1463.output)
    
    tape = (
      local.code_1464[0] == "+"
        ? [for i, b in local.iter_1463.tape : (i == local.iter_1463.tape_ptr ? (b + local.code_1464[1]) % 256 : b)] :
      local.code_1464[0] == "-"
        ? [for i, b in local.iter_1463.tape : (i == local.iter_1463.tape_ptr ? (b - local.code_1464[1] + 256) % 256 : b)] :
      local.code_1464[0] == ","
        ? [for i, b in local.iter_1463.tape : (i == local.iter_1463.tape_ptr ? local.ascii_lookup[substr(local.input_1464, 0, 1)] : b)]
        : local.iter_1463.tape)

    tape_ptr = (
      local.code_1464[0] == "<"
        ? local.iter_1463.tape_ptr - local.code_1464[1] :
      local.code_1464[0] == ">"
        ? local.iter_1463.tape_ptr + local.code_1464[1]
        : local.iter_1463.tape_ptr)

    code_ptr = 2 + (
      local.code_1464[0] == "["
        ? local.iter_1463.tape[local.iter_1463.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1463.code_ptr)] : local.iter_1463.code_ptr :
      local.code_1464[0] == "]"
        ? local.iter_1463.tape[local.iter_1463.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1463.code_ptr)] : local.iter_1463.code_ptr
        : local.iter_1463.code_ptr)

    steps_taken = 1 + local.iter_1463.steps_taken
  }
}

locals {
  code_1465 = (try(local.iter_1464.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1464.code_ptr, local.iter_1464.code_ptr + 2)
    : [null])

  input_1465 = (local.code_1465[0] == ","
    ? substr(local.input_1464, local.code_1465[1], -1)
    : local.input_1464)

  iter_1465 = try(local.iter_1464.code_ptr >= length(var.code), true) ? local.iter_1464 : {
    output = (local.code_1465[0] == "."
      ? "${local.iter_1464.output}${join("", [for _ in range(local.code_1465[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1464.tape[local.iter_1464.tape_ptr]))])}"
      : local.iter_1464.output)
    
    tape = (
      local.code_1465[0] == "+"
        ? [for i, b in local.iter_1464.tape : (i == local.iter_1464.tape_ptr ? (b + local.code_1465[1]) % 256 : b)] :
      local.code_1465[0] == "-"
        ? [for i, b in local.iter_1464.tape : (i == local.iter_1464.tape_ptr ? (b - local.code_1465[1] + 256) % 256 : b)] :
      local.code_1465[0] == ","
        ? [for i, b in local.iter_1464.tape : (i == local.iter_1464.tape_ptr ? local.ascii_lookup[substr(local.input_1465, 0, 1)] : b)]
        : local.iter_1464.tape)

    tape_ptr = (
      local.code_1465[0] == "<"
        ? local.iter_1464.tape_ptr - local.code_1465[1] :
      local.code_1465[0] == ">"
        ? local.iter_1464.tape_ptr + local.code_1465[1]
        : local.iter_1464.tape_ptr)

    code_ptr = 2 + (
      local.code_1465[0] == "["
        ? local.iter_1464.tape[local.iter_1464.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1464.code_ptr)] : local.iter_1464.code_ptr :
      local.code_1465[0] == "]"
        ? local.iter_1464.tape[local.iter_1464.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1464.code_ptr)] : local.iter_1464.code_ptr
        : local.iter_1464.code_ptr)

    steps_taken = 1 + local.iter_1464.steps_taken
  }
}

locals {
  code_1466 = (try(local.iter_1465.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1465.code_ptr, local.iter_1465.code_ptr + 2)
    : [null])

  input_1466 = (local.code_1466[0] == ","
    ? substr(local.input_1465, local.code_1466[1], -1)
    : local.input_1465)

  iter_1466 = try(local.iter_1465.code_ptr >= length(var.code), true) ? local.iter_1465 : {
    output = (local.code_1466[0] == "."
      ? "${local.iter_1465.output}${join("", [for _ in range(local.code_1466[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1465.tape[local.iter_1465.tape_ptr]))])}"
      : local.iter_1465.output)
    
    tape = (
      local.code_1466[0] == "+"
        ? [for i, b in local.iter_1465.tape : (i == local.iter_1465.tape_ptr ? (b + local.code_1466[1]) % 256 : b)] :
      local.code_1466[0] == "-"
        ? [for i, b in local.iter_1465.tape : (i == local.iter_1465.tape_ptr ? (b - local.code_1466[1] + 256) % 256 : b)] :
      local.code_1466[0] == ","
        ? [for i, b in local.iter_1465.tape : (i == local.iter_1465.tape_ptr ? local.ascii_lookup[substr(local.input_1466, 0, 1)] : b)]
        : local.iter_1465.tape)

    tape_ptr = (
      local.code_1466[0] == "<"
        ? local.iter_1465.tape_ptr - local.code_1466[1] :
      local.code_1466[0] == ">"
        ? local.iter_1465.tape_ptr + local.code_1466[1]
        : local.iter_1465.tape_ptr)

    code_ptr = 2 + (
      local.code_1466[0] == "["
        ? local.iter_1465.tape[local.iter_1465.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1465.code_ptr)] : local.iter_1465.code_ptr :
      local.code_1466[0] == "]"
        ? local.iter_1465.tape[local.iter_1465.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1465.code_ptr)] : local.iter_1465.code_ptr
        : local.iter_1465.code_ptr)

    steps_taken = 1 + local.iter_1465.steps_taken
  }
}

locals {
  code_1467 = (try(local.iter_1466.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1466.code_ptr, local.iter_1466.code_ptr + 2)
    : [null])

  input_1467 = (local.code_1467[0] == ","
    ? substr(local.input_1466, local.code_1467[1], -1)
    : local.input_1466)

  iter_1467 = try(local.iter_1466.code_ptr >= length(var.code), true) ? local.iter_1466 : {
    output = (local.code_1467[0] == "."
      ? "${local.iter_1466.output}${join("", [for _ in range(local.code_1467[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1466.tape[local.iter_1466.tape_ptr]))])}"
      : local.iter_1466.output)
    
    tape = (
      local.code_1467[0] == "+"
        ? [for i, b in local.iter_1466.tape : (i == local.iter_1466.tape_ptr ? (b + local.code_1467[1]) % 256 : b)] :
      local.code_1467[0] == "-"
        ? [for i, b in local.iter_1466.tape : (i == local.iter_1466.tape_ptr ? (b - local.code_1467[1] + 256) % 256 : b)] :
      local.code_1467[0] == ","
        ? [for i, b in local.iter_1466.tape : (i == local.iter_1466.tape_ptr ? local.ascii_lookup[substr(local.input_1467, 0, 1)] : b)]
        : local.iter_1466.tape)

    tape_ptr = (
      local.code_1467[0] == "<"
        ? local.iter_1466.tape_ptr - local.code_1467[1] :
      local.code_1467[0] == ">"
        ? local.iter_1466.tape_ptr + local.code_1467[1]
        : local.iter_1466.tape_ptr)

    code_ptr = 2 + (
      local.code_1467[0] == "["
        ? local.iter_1466.tape[local.iter_1466.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1466.code_ptr)] : local.iter_1466.code_ptr :
      local.code_1467[0] == "]"
        ? local.iter_1466.tape[local.iter_1466.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1466.code_ptr)] : local.iter_1466.code_ptr
        : local.iter_1466.code_ptr)

    steps_taken = 1 + local.iter_1466.steps_taken
  }
}

locals {
  code_1468 = (try(local.iter_1467.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1467.code_ptr, local.iter_1467.code_ptr + 2)
    : [null])

  input_1468 = (local.code_1468[0] == ","
    ? substr(local.input_1467, local.code_1468[1], -1)
    : local.input_1467)

  iter_1468 = try(local.iter_1467.code_ptr >= length(var.code), true) ? local.iter_1467 : {
    output = (local.code_1468[0] == "."
      ? "${local.iter_1467.output}${join("", [for _ in range(local.code_1468[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1467.tape[local.iter_1467.tape_ptr]))])}"
      : local.iter_1467.output)
    
    tape = (
      local.code_1468[0] == "+"
        ? [for i, b in local.iter_1467.tape : (i == local.iter_1467.tape_ptr ? (b + local.code_1468[1]) % 256 : b)] :
      local.code_1468[0] == "-"
        ? [for i, b in local.iter_1467.tape : (i == local.iter_1467.tape_ptr ? (b - local.code_1468[1] + 256) % 256 : b)] :
      local.code_1468[0] == ","
        ? [for i, b in local.iter_1467.tape : (i == local.iter_1467.tape_ptr ? local.ascii_lookup[substr(local.input_1468, 0, 1)] : b)]
        : local.iter_1467.tape)

    tape_ptr = (
      local.code_1468[0] == "<"
        ? local.iter_1467.tape_ptr - local.code_1468[1] :
      local.code_1468[0] == ">"
        ? local.iter_1467.tape_ptr + local.code_1468[1]
        : local.iter_1467.tape_ptr)

    code_ptr = 2 + (
      local.code_1468[0] == "["
        ? local.iter_1467.tape[local.iter_1467.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1467.code_ptr)] : local.iter_1467.code_ptr :
      local.code_1468[0] == "]"
        ? local.iter_1467.tape[local.iter_1467.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1467.code_ptr)] : local.iter_1467.code_ptr
        : local.iter_1467.code_ptr)

    steps_taken = 1 + local.iter_1467.steps_taken
  }
}

locals {
  code_1469 = (try(local.iter_1468.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1468.code_ptr, local.iter_1468.code_ptr + 2)
    : [null])

  input_1469 = (local.code_1469[0] == ","
    ? substr(local.input_1468, local.code_1469[1], -1)
    : local.input_1468)

  iter_1469 = try(local.iter_1468.code_ptr >= length(var.code), true) ? local.iter_1468 : {
    output = (local.code_1469[0] == "."
      ? "${local.iter_1468.output}${join("", [for _ in range(local.code_1469[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1468.tape[local.iter_1468.tape_ptr]))])}"
      : local.iter_1468.output)
    
    tape = (
      local.code_1469[0] == "+"
        ? [for i, b in local.iter_1468.tape : (i == local.iter_1468.tape_ptr ? (b + local.code_1469[1]) % 256 : b)] :
      local.code_1469[0] == "-"
        ? [for i, b in local.iter_1468.tape : (i == local.iter_1468.tape_ptr ? (b - local.code_1469[1] + 256) % 256 : b)] :
      local.code_1469[0] == ","
        ? [for i, b in local.iter_1468.tape : (i == local.iter_1468.tape_ptr ? local.ascii_lookup[substr(local.input_1469, 0, 1)] : b)]
        : local.iter_1468.tape)

    tape_ptr = (
      local.code_1469[0] == "<"
        ? local.iter_1468.tape_ptr - local.code_1469[1] :
      local.code_1469[0] == ">"
        ? local.iter_1468.tape_ptr + local.code_1469[1]
        : local.iter_1468.tape_ptr)

    code_ptr = 2 + (
      local.code_1469[0] == "["
        ? local.iter_1468.tape[local.iter_1468.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1468.code_ptr)] : local.iter_1468.code_ptr :
      local.code_1469[0] == "]"
        ? local.iter_1468.tape[local.iter_1468.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1468.code_ptr)] : local.iter_1468.code_ptr
        : local.iter_1468.code_ptr)

    steps_taken = 1 + local.iter_1468.steps_taken
  }
}

locals {
  code_1470 = (try(local.iter_1469.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1469.code_ptr, local.iter_1469.code_ptr + 2)
    : [null])

  input_1470 = (local.code_1470[0] == ","
    ? substr(local.input_1469, local.code_1470[1], -1)
    : local.input_1469)

  iter_1470 = try(local.iter_1469.code_ptr >= length(var.code), true) ? local.iter_1469 : {
    output = (local.code_1470[0] == "."
      ? "${local.iter_1469.output}${join("", [for _ in range(local.code_1470[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1469.tape[local.iter_1469.tape_ptr]))])}"
      : local.iter_1469.output)
    
    tape = (
      local.code_1470[0] == "+"
        ? [for i, b in local.iter_1469.tape : (i == local.iter_1469.tape_ptr ? (b + local.code_1470[1]) % 256 : b)] :
      local.code_1470[0] == "-"
        ? [for i, b in local.iter_1469.tape : (i == local.iter_1469.tape_ptr ? (b - local.code_1470[1] + 256) % 256 : b)] :
      local.code_1470[0] == ","
        ? [for i, b in local.iter_1469.tape : (i == local.iter_1469.tape_ptr ? local.ascii_lookup[substr(local.input_1470, 0, 1)] : b)]
        : local.iter_1469.tape)

    tape_ptr = (
      local.code_1470[0] == "<"
        ? local.iter_1469.tape_ptr - local.code_1470[1] :
      local.code_1470[0] == ">"
        ? local.iter_1469.tape_ptr + local.code_1470[1]
        : local.iter_1469.tape_ptr)

    code_ptr = 2 + (
      local.code_1470[0] == "["
        ? local.iter_1469.tape[local.iter_1469.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1469.code_ptr)] : local.iter_1469.code_ptr :
      local.code_1470[0] == "]"
        ? local.iter_1469.tape[local.iter_1469.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1469.code_ptr)] : local.iter_1469.code_ptr
        : local.iter_1469.code_ptr)

    steps_taken = 1 + local.iter_1469.steps_taken
  }
}

locals {
  code_1471 = (try(local.iter_1470.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1470.code_ptr, local.iter_1470.code_ptr + 2)
    : [null])

  input_1471 = (local.code_1471[0] == ","
    ? substr(local.input_1470, local.code_1471[1], -1)
    : local.input_1470)

  iter_1471 = try(local.iter_1470.code_ptr >= length(var.code), true) ? local.iter_1470 : {
    output = (local.code_1471[0] == "."
      ? "${local.iter_1470.output}${join("", [for _ in range(local.code_1471[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1470.tape[local.iter_1470.tape_ptr]))])}"
      : local.iter_1470.output)
    
    tape = (
      local.code_1471[0] == "+"
        ? [for i, b in local.iter_1470.tape : (i == local.iter_1470.tape_ptr ? (b + local.code_1471[1]) % 256 : b)] :
      local.code_1471[0] == "-"
        ? [for i, b in local.iter_1470.tape : (i == local.iter_1470.tape_ptr ? (b - local.code_1471[1] + 256) % 256 : b)] :
      local.code_1471[0] == ","
        ? [for i, b in local.iter_1470.tape : (i == local.iter_1470.tape_ptr ? local.ascii_lookup[substr(local.input_1471, 0, 1)] : b)]
        : local.iter_1470.tape)

    tape_ptr = (
      local.code_1471[0] == "<"
        ? local.iter_1470.tape_ptr - local.code_1471[1] :
      local.code_1471[0] == ">"
        ? local.iter_1470.tape_ptr + local.code_1471[1]
        : local.iter_1470.tape_ptr)

    code_ptr = 2 + (
      local.code_1471[0] == "["
        ? local.iter_1470.tape[local.iter_1470.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1470.code_ptr)] : local.iter_1470.code_ptr :
      local.code_1471[0] == "]"
        ? local.iter_1470.tape[local.iter_1470.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1470.code_ptr)] : local.iter_1470.code_ptr
        : local.iter_1470.code_ptr)

    steps_taken = 1 + local.iter_1470.steps_taken
  }
}

locals {
  code_1472 = (try(local.iter_1471.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1471.code_ptr, local.iter_1471.code_ptr + 2)
    : [null])

  input_1472 = (local.code_1472[0] == ","
    ? substr(local.input_1471, local.code_1472[1], -1)
    : local.input_1471)

  iter_1472 = try(local.iter_1471.code_ptr >= length(var.code), true) ? local.iter_1471 : {
    output = (local.code_1472[0] == "."
      ? "${local.iter_1471.output}${join("", [for _ in range(local.code_1472[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1471.tape[local.iter_1471.tape_ptr]))])}"
      : local.iter_1471.output)
    
    tape = (
      local.code_1472[0] == "+"
        ? [for i, b in local.iter_1471.tape : (i == local.iter_1471.tape_ptr ? (b + local.code_1472[1]) % 256 : b)] :
      local.code_1472[0] == "-"
        ? [for i, b in local.iter_1471.tape : (i == local.iter_1471.tape_ptr ? (b - local.code_1472[1] + 256) % 256 : b)] :
      local.code_1472[0] == ","
        ? [for i, b in local.iter_1471.tape : (i == local.iter_1471.tape_ptr ? local.ascii_lookup[substr(local.input_1472, 0, 1)] : b)]
        : local.iter_1471.tape)

    tape_ptr = (
      local.code_1472[0] == "<"
        ? local.iter_1471.tape_ptr - local.code_1472[1] :
      local.code_1472[0] == ">"
        ? local.iter_1471.tape_ptr + local.code_1472[1]
        : local.iter_1471.tape_ptr)

    code_ptr = 2 + (
      local.code_1472[0] == "["
        ? local.iter_1471.tape[local.iter_1471.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1471.code_ptr)] : local.iter_1471.code_ptr :
      local.code_1472[0] == "]"
        ? local.iter_1471.tape[local.iter_1471.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1471.code_ptr)] : local.iter_1471.code_ptr
        : local.iter_1471.code_ptr)

    steps_taken = 1 + local.iter_1471.steps_taken
  }
}

locals {
  code_1473 = (try(local.iter_1472.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1472.code_ptr, local.iter_1472.code_ptr + 2)
    : [null])

  input_1473 = (local.code_1473[0] == ","
    ? substr(local.input_1472, local.code_1473[1], -1)
    : local.input_1472)

  iter_1473 = try(local.iter_1472.code_ptr >= length(var.code), true) ? local.iter_1472 : {
    output = (local.code_1473[0] == "."
      ? "${local.iter_1472.output}${join("", [for _ in range(local.code_1473[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1472.tape[local.iter_1472.tape_ptr]))])}"
      : local.iter_1472.output)
    
    tape = (
      local.code_1473[0] == "+"
        ? [for i, b in local.iter_1472.tape : (i == local.iter_1472.tape_ptr ? (b + local.code_1473[1]) % 256 : b)] :
      local.code_1473[0] == "-"
        ? [for i, b in local.iter_1472.tape : (i == local.iter_1472.tape_ptr ? (b - local.code_1473[1] + 256) % 256 : b)] :
      local.code_1473[0] == ","
        ? [for i, b in local.iter_1472.tape : (i == local.iter_1472.tape_ptr ? local.ascii_lookup[substr(local.input_1473, 0, 1)] : b)]
        : local.iter_1472.tape)

    tape_ptr = (
      local.code_1473[0] == "<"
        ? local.iter_1472.tape_ptr - local.code_1473[1] :
      local.code_1473[0] == ">"
        ? local.iter_1472.tape_ptr + local.code_1473[1]
        : local.iter_1472.tape_ptr)

    code_ptr = 2 + (
      local.code_1473[0] == "["
        ? local.iter_1472.tape[local.iter_1472.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1472.code_ptr)] : local.iter_1472.code_ptr :
      local.code_1473[0] == "]"
        ? local.iter_1472.tape[local.iter_1472.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1472.code_ptr)] : local.iter_1472.code_ptr
        : local.iter_1472.code_ptr)

    steps_taken = 1 + local.iter_1472.steps_taken
  }
}

locals {
  code_1474 = (try(local.iter_1473.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1473.code_ptr, local.iter_1473.code_ptr + 2)
    : [null])

  input_1474 = (local.code_1474[0] == ","
    ? substr(local.input_1473, local.code_1474[1], -1)
    : local.input_1473)

  iter_1474 = try(local.iter_1473.code_ptr >= length(var.code), true) ? local.iter_1473 : {
    output = (local.code_1474[0] == "."
      ? "${local.iter_1473.output}${join("", [for _ in range(local.code_1474[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1473.tape[local.iter_1473.tape_ptr]))])}"
      : local.iter_1473.output)
    
    tape = (
      local.code_1474[0] == "+"
        ? [for i, b in local.iter_1473.tape : (i == local.iter_1473.tape_ptr ? (b + local.code_1474[1]) % 256 : b)] :
      local.code_1474[0] == "-"
        ? [for i, b in local.iter_1473.tape : (i == local.iter_1473.tape_ptr ? (b - local.code_1474[1] + 256) % 256 : b)] :
      local.code_1474[0] == ","
        ? [for i, b in local.iter_1473.tape : (i == local.iter_1473.tape_ptr ? local.ascii_lookup[substr(local.input_1474, 0, 1)] : b)]
        : local.iter_1473.tape)

    tape_ptr = (
      local.code_1474[0] == "<"
        ? local.iter_1473.tape_ptr - local.code_1474[1] :
      local.code_1474[0] == ">"
        ? local.iter_1473.tape_ptr + local.code_1474[1]
        : local.iter_1473.tape_ptr)

    code_ptr = 2 + (
      local.code_1474[0] == "["
        ? local.iter_1473.tape[local.iter_1473.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1473.code_ptr)] : local.iter_1473.code_ptr :
      local.code_1474[0] == "]"
        ? local.iter_1473.tape[local.iter_1473.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1473.code_ptr)] : local.iter_1473.code_ptr
        : local.iter_1473.code_ptr)

    steps_taken = 1 + local.iter_1473.steps_taken
  }
}

locals {
  code_1475 = (try(local.iter_1474.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1474.code_ptr, local.iter_1474.code_ptr + 2)
    : [null])

  input_1475 = (local.code_1475[0] == ","
    ? substr(local.input_1474, local.code_1475[1], -1)
    : local.input_1474)

  iter_1475 = try(local.iter_1474.code_ptr >= length(var.code), true) ? local.iter_1474 : {
    output = (local.code_1475[0] == "."
      ? "${local.iter_1474.output}${join("", [for _ in range(local.code_1475[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1474.tape[local.iter_1474.tape_ptr]))])}"
      : local.iter_1474.output)
    
    tape = (
      local.code_1475[0] == "+"
        ? [for i, b in local.iter_1474.tape : (i == local.iter_1474.tape_ptr ? (b + local.code_1475[1]) % 256 : b)] :
      local.code_1475[0] == "-"
        ? [for i, b in local.iter_1474.tape : (i == local.iter_1474.tape_ptr ? (b - local.code_1475[1] + 256) % 256 : b)] :
      local.code_1475[0] == ","
        ? [for i, b in local.iter_1474.tape : (i == local.iter_1474.tape_ptr ? local.ascii_lookup[substr(local.input_1475, 0, 1)] : b)]
        : local.iter_1474.tape)

    tape_ptr = (
      local.code_1475[0] == "<"
        ? local.iter_1474.tape_ptr - local.code_1475[1] :
      local.code_1475[0] == ">"
        ? local.iter_1474.tape_ptr + local.code_1475[1]
        : local.iter_1474.tape_ptr)

    code_ptr = 2 + (
      local.code_1475[0] == "["
        ? local.iter_1474.tape[local.iter_1474.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1474.code_ptr)] : local.iter_1474.code_ptr :
      local.code_1475[0] == "]"
        ? local.iter_1474.tape[local.iter_1474.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1474.code_ptr)] : local.iter_1474.code_ptr
        : local.iter_1474.code_ptr)

    steps_taken = 1 + local.iter_1474.steps_taken
  }
}

locals {
  code_1476 = (try(local.iter_1475.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1475.code_ptr, local.iter_1475.code_ptr + 2)
    : [null])

  input_1476 = (local.code_1476[0] == ","
    ? substr(local.input_1475, local.code_1476[1], -1)
    : local.input_1475)

  iter_1476 = try(local.iter_1475.code_ptr >= length(var.code), true) ? local.iter_1475 : {
    output = (local.code_1476[0] == "."
      ? "${local.iter_1475.output}${join("", [for _ in range(local.code_1476[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1475.tape[local.iter_1475.tape_ptr]))])}"
      : local.iter_1475.output)
    
    tape = (
      local.code_1476[0] == "+"
        ? [for i, b in local.iter_1475.tape : (i == local.iter_1475.tape_ptr ? (b + local.code_1476[1]) % 256 : b)] :
      local.code_1476[0] == "-"
        ? [for i, b in local.iter_1475.tape : (i == local.iter_1475.tape_ptr ? (b - local.code_1476[1] + 256) % 256 : b)] :
      local.code_1476[0] == ","
        ? [for i, b in local.iter_1475.tape : (i == local.iter_1475.tape_ptr ? local.ascii_lookup[substr(local.input_1476, 0, 1)] : b)]
        : local.iter_1475.tape)

    tape_ptr = (
      local.code_1476[0] == "<"
        ? local.iter_1475.tape_ptr - local.code_1476[1] :
      local.code_1476[0] == ">"
        ? local.iter_1475.tape_ptr + local.code_1476[1]
        : local.iter_1475.tape_ptr)

    code_ptr = 2 + (
      local.code_1476[0] == "["
        ? local.iter_1475.tape[local.iter_1475.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1475.code_ptr)] : local.iter_1475.code_ptr :
      local.code_1476[0] == "]"
        ? local.iter_1475.tape[local.iter_1475.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1475.code_ptr)] : local.iter_1475.code_ptr
        : local.iter_1475.code_ptr)

    steps_taken = 1 + local.iter_1475.steps_taken
  }
}

locals {
  code_1477 = (try(local.iter_1476.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1476.code_ptr, local.iter_1476.code_ptr + 2)
    : [null])

  input_1477 = (local.code_1477[0] == ","
    ? substr(local.input_1476, local.code_1477[1], -1)
    : local.input_1476)

  iter_1477 = try(local.iter_1476.code_ptr >= length(var.code), true) ? local.iter_1476 : {
    output = (local.code_1477[0] == "."
      ? "${local.iter_1476.output}${join("", [for _ in range(local.code_1477[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1476.tape[local.iter_1476.tape_ptr]))])}"
      : local.iter_1476.output)
    
    tape = (
      local.code_1477[0] == "+"
        ? [for i, b in local.iter_1476.tape : (i == local.iter_1476.tape_ptr ? (b + local.code_1477[1]) % 256 : b)] :
      local.code_1477[0] == "-"
        ? [for i, b in local.iter_1476.tape : (i == local.iter_1476.tape_ptr ? (b - local.code_1477[1] + 256) % 256 : b)] :
      local.code_1477[0] == ","
        ? [for i, b in local.iter_1476.tape : (i == local.iter_1476.tape_ptr ? local.ascii_lookup[substr(local.input_1477, 0, 1)] : b)]
        : local.iter_1476.tape)

    tape_ptr = (
      local.code_1477[0] == "<"
        ? local.iter_1476.tape_ptr - local.code_1477[1] :
      local.code_1477[0] == ">"
        ? local.iter_1476.tape_ptr + local.code_1477[1]
        : local.iter_1476.tape_ptr)

    code_ptr = 2 + (
      local.code_1477[0] == "["
        ? local.iter_1476.tape[local.iter_1476.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1476.code_ptr)] : local.iter_1476.code_ptr :
      local.code_1477[0] == "]"
        ? local.iter_1476.tape[local.iter_1476.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1476.code_ptr)] : local.iter_1476.code_ptr
        : local.iter_1476.code_ptr)

    steps_taken = 1 + local.iter_1476.steps_taken
  }
}

locals {
  code_1478 = (try(local.iter_1477.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1477.code_ptr, local.iter_1477.code_ptr + 2)
    : [null])

  input_1478 = (local.code_1478[0] == ","
    ? substr(local.input_1477, local.code_1478[1], -1)
    : local.input_1477)

  iter_1478 = try(local.iter_1477.code_ptr >= length(var.code), true) ? local.iter_1477 : {
    output = (local.code_1478[0] == "."
      ? "${local.iter_1477.output}${join("", [for _ in range(local.code_1478[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1477.tape[local.iter_1477.tape_ptr]))])}"
      : local.iter_1477.output)
    
    tape = (
      local.code_1478[0] == "+"
        ? [for i, b in local.iter_1477.tape : (i == local.iter_1477.tape_ptr ? (b + local.code_1478[1]) % 256 : b)] :
      local.code_1478[0] == "-"
        ? [for i, b in local.iter_1477.tape : (i == local.iter_1477.tape_ptr ? (b - local.code_1478[1] + 256) % 256 : b)] :
      local.code_1478[0] == ","
        ? [for i, b in local.iter_1477.tape : (i == local.iter_1477.tape_ptr ? local.ascii_lookup[substr(local.input_1478, 0, 1)] : b)]
        : local.iter_1477.tape)

    tape_ptr = (
      local.code_1478[0] == "<"
        ? local.iter_1477.tape_ptr - local.code_1478[1] :
      local.code_1478[0] == ">"
        ? local.iter_1477.tape_ptr + local.code_1478[1]
        : local.iter_1477.tape_ptr)

    code_ptr = 2 + (
      local.code_1478[0] == "["
        ? local.iter_1477.tape[local.iter_1477.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1477.code_ptr)] : local.iter_1477.code_ptr :
      local.code_1478[0] == "]"
        ? local.iter_1477.tape[local.iter_1477.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1477.code_ptr)] : local.iter_1477.code_ptr
        : local.iter_1477.code_ptr)

    steps_taken = 1 + local.iter_1477.steps_taken
  }
}

locals {
  code_1479 = (try(local.iter_1478.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1478.code_ptr, local.iter_1478.code_ptr + 2)
    : [null])

  input_1479 = (local.code_1479[0] == ","
    ? substr(local.input_1478, local.code_1479[1], -1)
    : local.input_1478)

  iter_1479 = try(local.iter_1478.code_ptr >= length(var.code), true) ? local.iter_1478 : {
    output = (local.code_1479[0] == "."
      ? "${local.iter_1478.output}${join("", [for _ in range(local.code_1479[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1478.tape[local.iter_1478.tape_ptr]))])}"
      : local.iter_1478.output)
    
    tape = (
      local.code_1479[0] == "+"
        ? [for i, b in local.iter_1478.tape : (i == local.iter_1478.tape_ptr ? (b + local.code_1479[1]) % 256 : b)] :
      local.code_1479[0] == "-"
        ? [for i, b in local.iter_1478.tape : (i == local.iter_1478.tape_ptr ? (b - local.code_1479[1] + 256) % 256 : b)] :
      local.code_1479[0] == ","
        ? [for i, b in local.iter_1478.tape : (i == local.iter_1478.tape_ptr ? local.ascii_lookup[substr(local.input_1479, 0, 1)] : b)]
        : local.iter_1478.tape)

    tape_ptr = (
      local.code_1479[0] == "<"
        ? local.iter_1478.tape_ptr - local.code_1479[1] :
      local.code_1479[0] == ">"
        ? local.iter_1478.tape_ptr + local.code_1479[1]
        : local.iter_1478.tape_ptr)

    code_ptr = 2 + (
      local.code_1479[0] == "["
        ? local.iter_1478.tape[local.iter_1478.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1478.code_ptr)] : local.iter_1478.code_ptr :
      local.code_1479[0] == "]"
        ? local.iter_1478.tape[local.iter_1478.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1478.code_ptr)] : local.iter_1478.code_ptr
        : local.iter_1478.code_ptr)

    steps_taken = 1 + local.iter_1478.steps_taken
  }
}

locals {
  code_1480 = (try(local.iter_1479.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1479.code_ptr, local.iter_1479.code_ptr + 2)
    : [null])

  input_1480 = (local.code_1480[0] == ","
    ? substr(local.input_1479, local.code_1480[1], -1)
    : local.input_1479)

  iter_1480 = try(local.iter_1479.code_ptr >= length(var.code), true) ? local.iter_1479 : {
    output = (local.code_1480[0] == "."
      ? "${local.iter_1479.output}${join("", [for _ in range(local.code_1480[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1479.tape[local.iter_1479.tape_ptr]))])}"
      : local.iter_1479.output)
    
    tape = (
      local.code_1480[0] == "+"
        ? [for i, b in local.iter_1479.tape : (i == local.iter_1479.tape_ptr ? (b + local.code_1480[1]) % 256 : b)] :
      local.code_1480[0] == "-"
        ? [for i, b in local.iter_1479.tape : (i == local.iter_1479.tape_ptr ? (b - local.code_1480[1] + 256) % 256 : b)] :
      local.code_1480[0] == ","
        ? [for i, b in local.iter_1479.tape : (i == local.iter_1479.tape_ptr ? local.ascii_lookup[substr(local.input_1480, 0, 1)] : b)]
        : local.iter_1479.tape)

    tape_ptr = (
      local.code_1480[0] == "<"
        ? local.iter_1479.tape_ptr - local.code_1480[1] :
      local.code_1480[0] == ">"
        ? local.iter_1479.tape_ptr + local.code_1480[1]
        : local.iter_1479.tape_ptr)

    code_ptr = 2 + (
      local.code_1480[0] == "["
        ? local.iter_1479.tape[local.iter_1479.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1479.code_ptr)] : local.iter_1479.code_ptr :
      local.code_1480[0] == "]"
        ? local.iter_1479.tape[local.iter_1479.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1479.code_ptr)] : local.iter_1479.code_ptr
        : local.iter_1479.code_ptr)

    steps_taken = 1 + local.iter_1479.steps_taken
  }
}

locals {
  code_1481 = (try(local.iter_1480.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1480.code_ptr, local.iter_1480.code_ptr + 2)
    : [null])

  input_1481 = (local.code_1481[0] == ","
    ? substr(local.input_1480, local.code_1481[1], -1)
    : local.input_1480)

  iter_1481 = try(local.iter_1480.code_ptr >= length(var.code), true) ? local.iter_1480 : {
    output = (local.code_1481[0] == "."
      ? "${local.iter_1480.output}${join("", [for _ in range(local.code_1481[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1480.tape[local.iter_1480.tape_ptr]))])}"
      : local.iter_1480.output)
    
    tape = (
      local.code_1481[0] == "+"
        ? [for i, b in local.iter_1480.tape : (i == local.iter_1480.tape_ptr ? (b + local.code_1481[1]) % 256 : b)] :
      local.code_1481[0] == "-"
        ? [for i, b in local.iter_1480.tape : (i == local.iter_1480.tape_ptr ? (b - local.code_1481[1] + 256) % 256 : b)] :
      local.code_1481[0] == ","
        ? [for i, b in local.iter_1480.tape : (i == local.iter_1480.tape_ptr ? local.ascii_lookup[substr(local.input_1481, 0, 1)] : b)]
        : local.iter_1480.tape)

    tape_ptr = (
      local.code_1481[0] == "<"
        ? local.iter_1480.tape_ptr - local.code_1481[1] :
      local.code_1481[0] == ">"
        ? local.iter_1480.tape_ptr + local.code_1481[1]
        : local.iter_1480.tape_ptr)

    code_ptr = 2 + (
      local.code_1481[0] == "["
        ? local.iter_1480.tape[local.iter_1480.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1480.code_ptr)] : local.iter_1480.code_ptr :
      local.code_1481[0] == "]"
        ? local.iter_1480.tape[local.iter_1480.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1480.code_ptr)] : local.iter_1480.code_ptr
        : local.iter_1480.code_ptr)

    steps_taken = 1 + local.iter_1480.steps_taken
  }
}

locals {
  code_1482 = (try(local.iter_1481.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1481.code_ptr, local.iter_1481.code_ptr + 2)
    : [null])

  input_1482 = (local.code_1482[0] == ","
    ? substr(local.input_1481, local.code_1482[1], -1)
    : local.input_1481)

  iter_1482 = try(local.iter_1481.code_ptr >= length(var.code), true) ? local.iter_1481 : {
    output = (local.code_1482[0] == "."
      ? "${local.iter_1481.output}${join("", [for _ in range(local.code_1482[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1481.tape[local.iter_1481.tape_ptr]))])}"
      : local.iter_1481.output)
    
    tape = (
      local.code_1482[0] == "+"
        ? [for i, b in local.iter_1481.tape : (i == local.iter_1481.tape_ptr ? (b + local.code_1482[1]) % 256 : b)] :
      local.code_1482[0] == "-"
        ? [for i, b in local.iter_1481.tape : (i == local.iter_1481.tape_ptr ? (b - local.code_1482[1] + 256) % 256 : b)] :
      local.code_1482[0] == ","
        ? [for i, b in local.iter_1481.tape : (i == local.iter_1481.tape_ptr ? local.ascii_lookup[substr(local.input_1482, 0, 1)] : b)]
        : local.iter_1481.tape)

    tape_ptr = (
      local.code_1482[0] == "<"
        ? local.iter_1481.tape_ptr - local.code_1482[1] :
      local.code_1482[0] == ">"
        ? local.iter_1481.tape_ptr + local.code_1482[1]
        : local.iter_1481.tape_ptr)

    code_ptr = 2 + (
      local.code_1482[0] == "["
        ? local.iter_1481.tape[local.iter_1481.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1481.code_ptr)] : local.iter_1481.code_ptr :
      local.code_1482[0] == "]"
        ? local.iter_1481.tape[local.iter_1481.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1481.code_ptr)] : local.iter_1481.code_ptr
        : local.iter_1481.code_ptr)

    steps_taken = 1 + local.iter_1481.steps_taken
  }
}

locals {
  code_1483 = (try(local.iter_1482.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1482.code_ptr, local.iter_1482.code_ptr + 2)
    : [null])

  input_1483 = (local.code_1483[0] == ","
    ? substr(local.input_1482, local.code_1483[1], -1)
    : local.input_1482)

  iter_1483 = try(local.iter_1482.code_ptr >= length(var.code), true) ? local.iter_1482 : {
    output = (local.code_1483[0] == "."
      ? "${local.iter_1482.output}${join("", [for _ in range(local.code_1483[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1482.tape[local.iter_1482.tape_ptr]))])}"
      : local.iter_1482.output)
    
    tape = (
      local.code_1483[0] == "+"
        ? [for i, b in local.iter_1482.tape : (i == local.iter_1482.tape_ptr ? (b + local.code_1483[1]) % 256 : b)] :
      local.code_1483[0] == "-"
        ? [for i, b in local.iter_1482.tape : (i == local.iter_1482.tape_ptr ? (b - local.code_1483[1] + 256) % 256 : b)] :
      local.code_1483[0] == ","
        ? [for i, b in local.iter_1482.tape : (i == local.iter_1482.tape_ptr ? local.ascii_lookup[substr(local.input_1483, 0, 1)] : b)]
        : local.iter_1482.tape)

    tape_ptr = (
      local.code_1483[0] == "<"
        ? local.iter_1482.tape_ptr - local.code_1483[1] :
      local.code_1483[0] == ">"
        ? local.iter_1482.tape_ptr + local.code_1483[1]
        : local.iter_1482.tape_ptr)

    code_ptr = 2 + (
      local.code_1483[0] == "["
        ? local.iter_1482.tape[local.iter_1482.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1482.code_ptr)] : local.iter_1482.code_ptr :
      local.code_1483[0] == "]"
        ? local.iter_1482.tape[local.iter_1482.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1482.code_ptr)] : local.iter_1482.code_ptr
        : local.iter_1482.code_ptr)

    steps_taken = 1 + local.iter_1482.steps_taken
  }
}

locals {
  code_1484 = (try(local.iter_1483.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1483.code_ptr, local.iter_1483.code_ptr + 2)
    : [null])

  input_1484 = (local.code_1484[0] == ","
    ? substr(local.input_1483, local.code_1484[1], -1)
    : local.input_1483)

  iter_1484 = try(local.iter_1483.code_ptr >= length(var.code), true) ? local.iter_1483 : {
    output = (local.code_1484[0] == "."
      ? "${local.iter_1483.output}${join("", [for _ in range(local.code_1484[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1483.tape[local.iter_1483.tape_ptr]))])}"
      : local.iter_1483.output)
    
    tape = (
      local.code_1484[0] == "+"
        ? [for i, b in local.iter_1483.tape : (i == local.iter_1483.tape_ptr ? (b + local.code_1484[1]) % 256 : b)] :
      local.code_1484[0] == "-"
        ? [for i, b in local.iter_1483.tape : (i == local.iter_1483.tape_ptr ? (b - local.code_1484[1] + 256) % 256 : b)] :
      local.code_1484[0] == ","
        ? [for i, b in local.iter_1483.tape : (i == local.iter_1483.tape_ptr ? local.ascii_lookup[substr(local.input_1484, 0, 1)] : b)]
        : local.iter_1483.tape)

    tape_ptr = (
      local.code_1484[0] == "<"
        ? local.iter_1483.tape_ptr - local.code_1484[1] :
      local.code_1484[0] == ">"
        ? local.iter_1483.tape_ptr + local.code_1484[1]
        : local.iter_1483.tape_ptr)

    code_ptr = 2 + (
      local.code_1484[0] == "["
        ? local.iter_1483.tape[local.iter_1483.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1483.code_ptr)] : local.iter_1483.code_ptr :
      local.code_1484[0] == "]"
        ? local.iter_1483.tape[local.iter_1483.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1483.code_ptr)] : local.iter_1483.code_ptr
        : local.iter_1483.code_ptr)

    steps_taken = 1 + local.iter_1483.steps_taken
  }
}

locals {
  code_1485 = (try(local.iter_1484.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1484.code_ptr, local.iter_1484.code_ptr + 2)
    : [null])

  input_1485 = (local.code_1485[0] == ","
    ? substr(local.input_1484, local.code_1485[1], -1)
    : local.input_1484)

  iter_1485 = try(local.iter_1484.code_ptr >= length(var.code), true) ? local.iter_1484 : {
    output = (local.code_1485[0] == "."
      ? "${local.iter_1484.output}${join("", [for _ in range(local.code_1485[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1484.tape[local.iter_1484.tape_ptr]))])}"
      : local.iter_1484.output)
    
    tape = (
      local.code_1485[0] == "+"
        ? [for i, b in local.iter_1484.tape : (i == local.iter_1484.tape_ptr ? (b + local.code_1485[1]) % 256 : b)] :
      local.code_1485[0] == "-"
        ? [for i, b in local.iter_1484.tape : (i == local.iter_1484.tape_ptr ? (b - local.code_1485[1] + 256) % 256 : b)] :
      local.code_1485[0] == ","
        ? [for i, b in local.iter_1484.tape : (i == local.iter_1484.tape_ptr ? local.ascii_lookup[substr(local.input_1485, 0, 1)] : b)]
        : local.iter_1484.tape)

    tape_ptr = (
      local.code_1485[0] == "<"
        ? local.iter_1484.tape_ptr - local.code_1485[1] :
      local.code_1485[0] == ">"
        ? local.iter_1484.tape_ptr + local.code_1485[1]
        : local.iter_1484.tape_ptr)

    code_ptr = 2 + (
      local.code_1485[0] == "["
        ? local.iter_1484.tape[local.iter_1484.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1484.code_ptr)] : local.iter_1484.code_ptr :
      local.code_1485[0] == "]"
        ? local.iter_1484.tape[local.iter_1484.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1484.code_ptr)] : local.iter_1484.code_ptr
        : local.iter_1484.code_ptr)

    steps_taken = 1 + local.iter_1484.steps_taken
  }
}

locals {
  code_1486 = (try(local.iter_1485.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1485.code_ptr, local.iter_1485.code_ptr + 2)
    : [null])

  input_1486 = (local.code_1486[0] == ","
    ? substr(local.input_1485, local.code_1486[1], -1)
    : local.input_1485)

  iter_1486 = try(local.iter_1485.code_ptr >= length(var.code), true) ? local.iter_1485 : {
    output = (local.code_1486[0] == "."
      ? "${local.iter_1485.output}${join("", [for _ in range(local.code_1486[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1485.tape[local.iter_1485.tape_ptr]))])}"
      : local.iter_1485.output)
    
    tape = (
      local.code_1486[0] == "+"
        ? [for i, b in local.iter_1485.tape : (i == local.iter_1485.tape_ptr ? (b + local.code_1486[1]) % 256 : b)] :
      local.code_1486[0] == "-"
        ? [for i, b in local.iter_1485.tape : (i == local.iter_1485.tape_ptr ? (b - local.code_1486[1] + 256) % 256 : b)] :
      local.code_1486[0] == ","
        ? [for i, b in local.iter_1485.tape : (i == local.iter_1485.tape_ptr ? local.ascii_lookup[substr(local.input_1486, 0, 1)] : b)]
        : local.iter_1485.tape)

    tape_ptr = (
      local.code_1486[0] == "<"
        ? local.iter_1485.tape_ptr - local.code_1486[1] :
      local.code_1486[0] == ">"
        ? local.iter_1485.tape_ptr + local.code_1486[1]
        : local.iter_1485.tape_ptr)

    code_ptr = 2 + (
      local.code_1486[0] == "["
        ? local.iter_1485.tape[local.iter_1485.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1485.code_ptr)] : local.iter_1485.code_ptr :
      local.code_1486[0] == "]"
        ? local.iter_1485.tape[local.iter_1485.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1485.code_ptr)] : local.iter_1485.code_ptr
        : local.iter_1485.code_ptr)

    steps_taken = 1 + local.iter_1485.steps_taken
  }
}

locals {
  code_1487 = (try(local.iter_1486.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1486.code_ptr, local.iter_1486.code_ptr + 2)
    : [null])

  input_1487 = (local.code_1487[0] == ","
    ? substr(local.input_1486, local.code_1487[1], -1)
    : local.input_1486)

  iter_1487 = try(local.iter_1486.code_ptr >= length(var.code), true) ? local.iter_1486 : {
    output = (local.code_1487[0] == "."
      ? "${local.iter_1486.output}${join("", [for _ in range(local.code_1487[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1486.tape[local.iter_1486.tape_ptr]))])}"
      : local.iter_1486.output)
    
    tape = (
      local.code_1487[0] == "+"
        ? [for i, b in local.iter_1486.tape : (i == local.iter_1486.tape_ptr ? (b + local.code_1487[1]) % 256 : b)] :
      local.code_1487[0] == "-"
        ? [for i, b in local.iter_1486.tape : (i == local.iter_1486.tape_ptr ? (b - local.code_1487[1] + 256) % 256 : b)] :
      local.code_1487[0] == ","
        ? [for i, b in local.iter_1486.tape : (i == local.iter_1486.tape_ptr ? local.ascii_lookup[substr(local.input_1487, 0, 1)] : b)]
        : local.iter_1486.tape)

    tape_ptr = (
      local.code_1487[0] == "<"
        ? local.iter_1486.tape_ptr - local.code_1487[1] :
      local.code_1487[0] == ">"
        ? local.iter_1486.tape_ptr + local.code_1487[1]
        : local.iter_1486.tape_ptr)

    code_ptr = 2 + (
      local.code_1487[0] == "["
        ? local.iter_1486.tape[local.iter_1486.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1486.code_ptr)] : local.iter_1486.code_ptr :
      local.code_1487[0] == "]"
        ? local.iter_1486.tape[local.iter_1486.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1486.code_ptr)] : local.iter_1486.code_ptr
        : local.iter_1486.code_ptr)

    steps_taken = 1 + local.iter_1486.steps_taken
  }
}

locals {
  code_1488 = (try(local.iter_1487.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1487.code_ptr, local.iter_1487.code_ptr + 2)
    : [null])

  input_1488 = (local.code_1488[0] == ","
    ? substr(local.input_1487, local.code_1488[1], -1)
    : local.input_1487)

  iter_1488 = try(local.iter_1487.code_ptr >= length(var.code), true) ? local.iter_1487 : {
    output = (local.code_1488[0] == "."
      ? "${local.iter_1487.output}${join("", [for _ in range(local.code_1488[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1487.tape[local.iter_1487.tape_ptr]))])}"
      : local.iter_1487.output)
    
    tape = (
      local.code_1488[0] == "+"
        ? [for i, b in local.iter_1487.tape : (i == local.iter_1487.tape_ptr ? (b + local.code_1488[1]) % 256 : b)] :
      local.code_1488[0] == "-"
        ? [for i, b in local.iter_1487.tape : (i == local.iter_1487.tape_ptr ? (b - local.code_1488[1] + 256) % 256 : b)] :
      local.code_1488[0] == ","
        ? [for i, b in local.iter_1487.tape : (i == local.iter_1487.tape_ptr ? local.ascii_lookup[substr(local.input_1488, 0, 1)] : b)]
        : local.iter_1487.tape)

    tape_ptr = (
      local.code_1488[0] == "<"
        ? local.iter_1487.tape_ptr - local.code_1488[1] :
      local.code_1488[0] == ">"
        ? local.iter_1487.tape_ptr + local.code_1488[1]
        : local.iter_1487.tape_ptr)

    code_ptr = 2 + (
      local.code_1488[0] == "["
        ? local.iter_1487.tape[local.iter_1487.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1487.code_ptr)] : local.iter_1487.code_ptr :
      local.code_1488[0] == "]"
        ? local.iter_1487.tape[local.iter_1487.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1487.code_ptr)] : local.iter_1487.code_ptr
        : local.iter_1487.code_ptr)

    steps_taken = 1 + local.iter_1487.steps_taken
  }
}

locals {
  code_1489 = (try(local.iter_1488.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1488.code_ptr, local.iter_1488.code_ptr + 2)
    : [null])

  input_1489 = (local.code_1489[0] == ","
    ? substr(local.input_1488, local.code_1489[1], -1)
    : local.input_1488)

  iter_1489 = try(local.iter_1488.code_ptr >= length(var.code), true) ? local.iter_1488 : {
    output = (local.code_1489[0] == "."
      ? "${local.iter_1488.output}${join("", [for _ in range(local.code_1489[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1488.tape[local.iter_1488.tape_ptr]))])}"
      : local.iter_1488.output)
    
    tape = (
      local.code_1489[0] == "+"
        ? [for i, b in local.iter_1488.tape : (i == local.iter_1488.tape_ptr ? (b + local.code_1489[1]) % 256 : b)] :
      local.code_1489[0] == "-"
        ? [for i, b in local.iter_1488.tape : (i == local.iter_1488.tape_ptr ? (b - local.code_1489[1] + 256) % 256 : b)] :
      local.code_1489[0] == ","
        ? [for i, b in local.iter_1488.tape : (i == local.iter_1488.tape_ptr ? local.ascii_lookup[substr(local.input_1489, 0, 1)] : b)]
        : local.iter_1488.tape)

    tape_ptr = (
      local.code_1489[0] == "<"
        ? local.iter_1488.tape_ptr - local.code_1489[1] :
      local.code_1489[0] == ">"
        ? local.iter_1488.tape_ptr + local.code_1489[1]
        : local.iter_1488.tape_ptr)

    code_ptr = 2 + (
      local.code_1489[0] == "["
        ? local.iter_1488.tape[local.iter_1488.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1488.code_ptr)] : local.iter_1488.code_ptr :
      local.code_1489[0] == "]"
        ? local.iter_1488.tape[local.iter_1488.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1488.code_ptr)] : local.iter_1488.code_ptr
        : local.iter_1488.code_ptr)

    steps_taken = 1 + local.iter_1488.steps_taken
  }
}

locals {
  code_1490 = (try(local.iter_1489.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1489.code_ptr, local.iter_1489.code_ptr + 2)
    : [null])

  input_1490 = (local.code_1490[0] == ","
    ? substr(local.input_1489, local.code_1490[1], -1)
    : local.input_1489)

  iter_1490 = try(local.iter_1489.code_ptr >= length(var.code), true) ? local.iter_1489 : {
    output = (local.code_1490[0] == "."
      ? "${local.iter_1489.output}${join("", [for _ in range(local.code_1490[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1489.tape[local.iter_1489.tape_ptr]))])}"
      : local.iter_1489.output)
    
    tape = (
      local.code_1490[0] == "+"
        ? [for i, b in local.iter_1489.tape : (i == local.iter_1489.tape_ptr ? (b + local.code_1490[1]) % 256 : b)] :
      local.code_1490[0] == "-"
        ? [for i, b in local.iter_1489.tape : (i == local.iter_1489.tape_ptr ? (b - local.code_1490[1] + 256) % 256 : b)] :
      local.code_1490[0] == ","
        ? [for i, b in local.iter_1489.tape : (i == local.iter_1489.tape_ptr ? local.ascii_lookup[substr(local.input_1490, 0, 1)] : b)]
        : local.iter_1489.tape)

    tape_ptr = (
      local.code_1490[0] == "<"
        ? local.iter_1489.tape_ptr - local.code_1490[1] :
      local.code_1490[0] == ">"
        ? local.iter_1489.tape_ptr + local.code_1490[1]
        : local.iter_1489.tape_ptr)

    code_ptr = 2 + (
      local.code_1490[0] == "["
        ? local.iter_1489.tape[local.iter_1489.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1489.code_ptr)] : local.iter_1489.code_ptr :
      local.code_1490[0] == "]"
        ? local.iter_1489.tape[local.iter_1489.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1489.code_ptr)] : local.iter_1489.code_ptr
        : local.iter_1489.code_ptr)

    steps_taken = 1 + local.iter_1489.steps_taken
  }
}

locals {
  code_1491 = (try(local.iter_1490.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1490.code_ptr, local.iter_1490.code_ptr + 2)
    : [null])

  input_1491 = (local.code_1491[0] == ","
    ? substr(local.input_1490, local.code_1491[1], -1)
    : local.input_1490)

  iter_1491 = try(local.iter_1490.code_ptr >= length(var.code), true) ? local.iter_1490 : {
    output = (local.code_1491[0] == "."
      ? "${local.iter_1490.output}${join("", [for _ in range(local.code_1491[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1490.tape[local.iter_1490.tape_ptr]))])}"
      : local.iter_1490.output)
    
    tape = (
      local.code_1491[0] == "+"
        ? [for i, b in local.iter_1490.tape : (i == local.iter_1490.tape_ptr ? (b + local.code_1491[1]) % 256 : b)] :
      local.code_1491[0] == "-"
        ? [for i, b in local.iter_1490.tape : (i == local.iter_1490.tape_ptr ? (b - local.code_1491[1] + 256) % 256 : b)] :
      local.code_1491[0] == ","
        ? [for i, b in local.iter_1490.tape : (i == local.iter_1490.tape_ptr ? local.ascii_lookup[substr(local.input_1491, 0, 1)] : b)]
        : local.iter_1490.tape)

    tape_ptr = (
      local.code_1491[0] == "<"
        ? local.iter_1490.tape_ptr - local.code_1491[1] :
      local.code_1491[0] == ">"
        ? local.iter_1490.tape_ptr + local.code_1491[1]
        : local.iter_1490.tape_ptr)

    code_ptr = 2 + (
      local.code_1491[0] == "["
        ? local.iter_1490.tape[local.iter_1490.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1490.code_ptr)] : local.iter_1490.code_ptr :
      local.code_1491[0] == "]"
        ? local.iter_1490.tape[local.iter_1490.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1490.code_ptr)] : local.iter_1490.code_ptr
        : local.iter_1490.code_ptr)

    steps_taken = 1 + local.iter_1490.steps_taken
  }
}

locals {
  code_1492 = (try(local.iter_1491.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1491.code_ptr, local.iter_1491.code_ptr + 2)
    : [null])

  input_1492 = (local.code_1492[0] == ","
    ? substr(local.input_1491, local.code_1492[1], -1)
    : local.input_1491)

  iter_1492 = try(local.iter_1491.code_ptr >= length(var.code), true) ? local.iter_1491 : {
    output = (local.code_1492[0] == "."
      ? "${local.iter_1491.output}${join("", [for _ in range(local.code_1492[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1491.tape[local.iter_1491.tape_ptr]))])}"
      : local.iter_1491.output)
    
    tape = (
      local.code_1492[0] == "+"
        ? [for i, b in local.iter_1491.tape : (i == local.iter_1491.tape_ptr ? (b + local.code_1492[1]) % 256 : b)] :
      local.code_1492[0] == "-"
        ? [for i, b in local.iter_1491.tape : (i == local.iter_1491.tape_ptr ? (b - local.code_1492[1] + 256) % 256 : b)] :
      local.code_1492[0] == ","
        ? [for i, b in local.iter_1491.tape : (i == local.iter_1491.tape_ptr ? local.ascii_lookup[substr(local.input_1492, 0, 1)] : b)]
        : local.iter_1491.tape)

    tape_ptr = (
      local.code_1492[0] == "<"
        ? local.iter_1491.tape_ptr - local.code_1492[1] :
      local.code_1492[0] == ">"
        ? local.iter_1491.tape_ptr + local.code_1492[1]
        : local.iter_1491.tape_ptr)

    code_ptr = 2 + (
      local.code_1492[0] == "["
        ? local.iter_1491.tape[local.iter_1491.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1491.code_ptr)] : local.iter_1491.code_ptr :
      local.code_1492[0] == "]"
        ? local.iter_1491.tape[local.iter_1491.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1491.code_ptr)] : local.iter_1491.code_ptr
        : local.iter_1491.code_ptr)

    steps_taken = 1 + local.iter_1491.steps_taken
  }
}

locals {
  code_1493 = (try(local.iter_1492.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1492.code_ptr, local.iter_1492.code_ptr + 2)
    : [null])

  input_1493 = (local.code_1493[0] == ","
    ? substr(local.input_1492, local.code_1493[1], -1)
    : local.input_1492)

  iter_1493 = try(local.iter_1492.code_ptr >= length(var.code), true) ? local.iter_1492 : {
    output = (local.code_1493[0] == "."
      ? "${local.iter_1492.output}${join("", [for _ in range(local.code_1493[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1492.tape[local.iter_1492.tape_ptr]))])}"
      : local.iter_1492.output)
    
    tape = (
      local.code_1493[0] == "+"
        ? [for i, b in local.iter_1492.tape : (i == local.iter_1492.tape_ptr ? (b + local.code_1493[1]) % 256 : b)] :
      local.code_1493[0] == "-"
        ? [for i, b in local.iter_1492.tape : (i == local.iter_1492.tape_ptr ? (b - local.code_1493[1] + 256) % 256 : b)] :
      local.code_1493[0] == ","
        ? [for i, b in local.iter_1492.tape : (i == local.iter_1492.tape_ptr ? local.ascii_lookup[substr(local.input_1493, 0, 1)] : b)]
        : local.iter_1492.tape)

    tape_ptr = (
      local.code_1493[0] == "<"
        ? local.iter_1492.tape_ptr - local.code_1493[1] :
      local.code_1493[0] == ">"
        ? local.iter_1492.tape_ptr + local.code_1493[1]
        : local.iter_1492.tape_ptr)

    code_ptr = 2 + (
      local.code_1493[0] == "["
        ? local.iter_1492.tape[local.iter_1492.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1492.code_ptr)] : local.iter_1492.code_ptr :
      local.code_1493[0] == "]"
        ? local.iter_1492.tape[local.iter_1492.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1492.code_ptr)] : local.iter_1492.code_ptr
        : local.iter_1492.code_ptr)

    steps_taken = 1 + local.iter_1492.steps_taken
  }
}

locals {
  code_1494 = (try(local.iter_1493.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1493.code_ptr, local.iter_1493.code_ptr + 2)
    : [null])

  input_1494 = (local.code_1494[0] == ","
    ? substr(local.input_1493, local.code_1494[1], -1)
    : local.input_1493)

  iter_1494 = try(local.iter_1493.code_ptr >= length(var.code), true) ? local.iter_1493 : {
    output = (local.code_1494[0] == "."
      ? "${local.iter_1493.output}${join("", [for _ in range(local.code_1494[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1493.tape[local.iter_1493.tape_ptr]))])}"
      : local.iter_1493.output)
    
    tape = (
      local.code_1494[0] == "+"
        ? [for i, b in local.iter_1493.tape : (i == local.iter_1493.tape_ptr ? (b + local.code_1494[1]) % 256 : b)] :
      local.code_1494[0] == "-"
        ? [for i, b in local.iter_1493.tape : (i == local.iter_1493.tape_ptr ? (b - local.code_1494[1] + 256) % 256 : b)] :
      local.code_1494[0] == ","
        ? [for i, b in local.iter_1493.tape : (i == local.iter_1493.tape_ptr ? local.ascii_lookup[substr(local.input_1494, 0, 1)] : b)]
        : local.iter_1493.tape)

    tape_ptr = (
      local.code_1494[0] == "<"
        ? local.iter_1493.tape_ptr - local.code_1494[1] :
      local.code_1494[0] == ">"
        ? local.iter_1493.tape_ptr + local.code_1494[1]
        : local.iter_1493.tape_ptr)

    code_ptr = 2 + (
      local.code_1494[0] == "["
        ? local.iter_1493.tape[local.iter_1493.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1493.code_ptr)] : local.iter_1493.code_ptr :
      local.code_1494[0] == "]"
        ? local.iter_1493.tape[local.iter_1493.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1493.code_ptr)] : local.iter_1493.code_ptr
        : local.iter_1493.code_ptr)

    steps_taken = 1 + local.iter_1493.steps_taken
  }
}

locals {
  code_1495 = (try(local.iter_1494.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1494.code_ptr, local.iter_1494.code_ptr + 2)
    : [null])

  input_1495 = (local.code_1495[0] == ","
    ? substr(local.input_1494, local.code_1495[1], -1)
    : local.input_1494)

  iter_1495 = try(local.iter_1494.code_ptr >= length(var.code), true) ? local.iter_1494 : {
    output = (local.code_1495[0] == "."
      ? "${local.iter_1494.output}${join("", [for _ in range(local.code_1495[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1494.tape[local.iter_1494.tape_ptr]))])}"
      : local.iter_1494.output)
    
    tape = (
      local.code_1495[0] == "+"
        ? [for i, b in local.iter_1494.tape : (i == local.iter_1494.tape_ptr ? (b + local.code_1495[1]) % 256 : b)] :
      local.code_1495[0] == "-"
        ? [for i, b in local.iter_1494.tape : (i == local.iter_1494.tape_ptr ? (b - local.code_1495[1] + 256) % 256 : b)] :
      local.code_1495[0] == ","
        ? [for i, b in local.iter_1494.tape : (i == local.iter_1494.tape_ptr ? local.ascii_lookup[substr(local.input_1495, 0, 1)] : b)]
        : local.iter_1494.tape)

    tape_ptr = (
      local.code_1495[0] == "<"
        ? local.iter_1494.tape_ptr - local.code_1495[1] :
      local.code_1495[0] == ">"
        ? local.iter_1494.tape_ptr + local.code_1495[1]
        : local.iter_1494.tape_ptr)

    code_ptr = 2 + (
      local.code_1495[0] == "["
        ? local.iter_1494.tape[local.iter_1494.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1494.code_ptr)] : local.iter_1494.code_ptr :
      local.code_1495[0] == "]"
        ? local.iter_1494.tape[local.iter_1494.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1494.code_ptr)] : local.iter_1494.code_ptr
        : local.iter_1494.code_ptr)

    steps_taken = 1 + local.iter_1494.steps_taken
  }
}

locals {
  code_1496 = (try(local.iter_1495.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1495.code_ptr, local.iter_1495.code_ptr + 2)
    : [null])

  input_1496 = (local.code_1496[0] == ","
    ? substr(local.input_1495, local.code_1496[1], -1)
    : local.input_1495)

  iter_1496 = try(local.iter_1495.code_ptr >= length(var.code), true) ? local.iter_1495 : {
    output = (local.code_1496[0] == "."
      ? "${local.iter_1495.output}${join("", [for _ in range(local.code_1496[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1495.tape[local.iter_1495.tape_ptr]))])}"
      : local.iter_1495.output)
    
    tape = (
      local.code_1496[0] == "+"
        ? [for i, b in local.iter_1495.tape : (i == local.iter_1495.tape_ptr ? (b + local.code_1496[1]) % 256 : b)] :
      local.code_1496[0] == "-"
        ? [for i, b in local.iter_1495.tape : (i == local.iter_1495.tape_ptr ? (b - local.code_1496[1] + 256) % 256 : b)] :
      local.code_1496[0] == ","
        ? [for i, b in local.iter_1495.tape : (i == local.iter_1495.tape_ptr ? local.ascii_lookup[substr(local.input_1496, 0, 1)] : b)]
        : local.iter_1495.tape)

    tape_ptr = (
      local.code_1496[0] == "<"
        ? local.iter_1495.tape_ptr - local.code_1496[1] :
      local.code_1496[0] == ">"
        ? local.iter_1495.tape_ptr + local.code_1496[1]
        : local.iter_1495.tape_ptr)

    code_ptr = 2 + (
      local.code_1496[0] == "["
        ? local.iter_1495.tape[local.iter_1495.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1495.code_ptr)] : local.iter_1495.code_ptr :
      local.code_1496[0] == "]"
        ? local.iter_1495.tape[local.iter_1495.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1495.code_ptr)] : local.iter_1495.code_ptr
        : local.iter_1495.code_ptr)

    steps_taken = 1 + local.iter_1495.steps_taken
  }
}

locals {
  code_1497 = (try(local.iter_1496.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1496.code_ptr, local.iter_1496.code_ptr + 2)
    : [null])

  input_1497 = (local.code_1497[0] == ","
    ? substr(local.input_1496, local.code_1497[1], -1)
    : local.input_1496)

  iter_1497 = try(local.iter_1496.code_ptr >= length(var.code), true) ? local.iter_1496 : {
    output = (local.code_1497[0] == "."
      ? "${local.iter_1496.output}${join("", [for _ in range(local.code_1497[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1496.tape[local.iter_1496.tape_ptr]))])}"
      : local.iter_1496.output)
    
    tape = (
      local.code_1497[0] == "+"
        ? [for i, b in local.iter_1496.tape : (i == local.iter_1496.tape_ptr ? (b + local.code_1497[1]) % 256 : b)] :
      local.code_1497[0] == "-"
        ? [for i, b in local.iter_1496.tape : (i == local.iter_1496.tape_ptr ? (b - local.code_1497[1] + 256) % 256 : b)] :
      local.code_1497[0] == ","
        ? [for i, b in local.iter_1496.tape : (i == local.iter_1496.tape_ptr ? local.ascii_lookup[substr(local.input_1497, 0, 1)] : b)]
        : local.iter_1496.tape)

    tape_ptr = (
      local.code_1497[0] == "<"
        ? local.iter_1496.tape_ptr - local.code_1497[1] :
      local.code_1497[0] == ">"
        ? local.iter_1496.tape_ptr + local.code_1497[1]
        : local.iter_1496.tape_ptr)

    code_ptr = 2 + (
      local.code_1497[0] == "["
        ? local.iter_1496.tape[local.iter_1496.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1496.code_ptr)] : local.iter_1496.code_ptr :
      local.code_1497[0] == "]"
        ? local.iter_1496.tape[local.iter_1496.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1496.code_ptr)] : local.iter_1496.code_ptr
        : local.iter_1496.code_ptr)

    steps_taken = 1 + local.iter_1496.steps_taken
  }
}

locals {
  code_1498 = (try(local.iter_1497.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1497.code_ptr, local.iter_1497.code_ptr + 2)
    : [null])

  input_1498 = (local.code_1498[0] == ","
    ? substr(local.input_1497, local.code_1498[1], -1)
    : local.input_1497)

  iter_1498 = try(local.iter_1497.code_ptr >= length(var.code), true) ? local.iter_1497 : {
    output = (local.code_1498[0] == "."
      ? "${local.iter_1497.output}${join("", [for _ in range(local.code_1498[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1497.tape[local.iter_1497.tape_ptr]))])}"
      : local.iter_1497.output)
    
    tape = (
      local.code_1498[0] == "+"
        ? [for i, b in local.iter_1497.tape : (i == local.iter_1497.tape_ptr ? (b + local.code_1498[1]) % 256 : b)] :
      local.code_1498[0] == "-"
        ? [for i, b in local.iter_1497.tape : (i == local.iter_1497.tape_ptr ? (b - local.code_1498[1] + 256) % 256 : b)] :
      local.code_1498[0] == ","
        ? [for i, b in local.iter_1497.tape : (i == local.iter_1497.tape_ptr ? local.ascii_lookup[substr(local.input_1498, 0, 1)] : b)]
        : local.iter_1497.tape)

    tape_ptr = (
      local.code_1498[0] == "<"
        ? local.iter_1497.tape_ptr - local.code_1498[1] :
      local.code_1498[0] == ">"
        ? local.iter_1497.tape_ptr + local.code_1498[1]
        : local.iter_1497.tape_ptr)

    code_ptr = 2 + (
      local.code_1498[0] == "["
        ? local.iter_1497.tape[local.iter_1497.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1497.code_ptr)] : local.iter_1497.code_ptr :
      local.code_1498[0] == "]"
        ? local.iter_1497.tape[local.iter_1497.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1497.code_ptr)] : local.iter_1497.code_ptr
        : local.iter_1497.code_ptr)

    steps_taken = 1 + local.iter_1497.steps_taken
  }
}

locals {
  code_1499 = (try(local.iter_1498.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1498.code_ptr, local.iter_1498.code_ptr + 2)
    : [null])

  input_1499 = (local.code_1499[0] == ","
    ? substr(local.input_1498, local.code_1499[1], -1)
    : local.input_1498)

  iter_1499 = try(local.iter_1498.code_ptr >= length(var.code), true) ? local.iter_1498 : {
    output = (local.code_1499[0] == "."
      ? "${local.iter_1498.output}${join("", [for _ in range(local.code_1499[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1498.tape[local.iter_1498.tape_ptr]))])}"
      : local.iter_1498.output)
    
    tape = (
      local.code_1499[0] == "+"
        ? [for i, b in local.iter_1498.tape : (i == local.iter_1498.tape_ptr ? (b + local.code_1499[1]) % 256 : b)] :
      local.code_1499[0] == "-"
        ? [for i, b in local.iter_1498.tape : (i == local.iter_1498.tape_ptr ? (b - local.code_1499[1] + 256) % 256 : b)] :
      local.code_1499[0] == ","
        ? [for i, b in local.iter_1498.tape : (i == local.iter_1498.tape_ptr ? local.ascii_lookup[substr(local.input_1499, 0, 1)] : b)]
        : local.iter_1498.tape)

    tape_ptr = (
      local.code_1499[0] == "<"
        ? local.iter_1498.tape_ptr - local.code_1499[1] :
      local.code_1499[0] == ">"
        ? local.iter_1498.tape_ptr + local.code_1499[1]
        : local.iter_1498.tape_ptr)

    code_ptr = 2 + (
      local.code_1499[0] == "["
        ? local.iter_1498.tape[local.iter_1498.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1498.code_ptr)] : local.iter_1498.code_ptr :
      local.code_1499[0] == "]"
        ? local.iter_1498.tape[local.iter_1498.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1498.code_ptr)] : local.iter_1498.code_ptr
        : local.iter_1498.code_ptr)

    steps_taken = 1 + local.iter_1498.steps_taken
  }
}

locals {
  code_1500 = (try(local.iter_1499.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1499.code_ptr, local.iter_1499.code_ptr + 2)
    : [null])

  input_1500 = (local.code_1500[0] == ","
    ? substr(local.input_1499, local.code_1500[1], -1)
    : local.input_1499)

  iter_1500 = try(local.iter_1499.code_ptr >= length(var.code), true) ? local.iter_1499 : {
    output = (local.code_1500[0] == "."
      ? "${local.iter_1499.output}${join("", [for _ in range(local.code_1500[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1499.tape[local.iter_1499.tape_ptr]))])}"
      : local.iter_1499.output)
    
    tape = (
      local.code_1500[0] == "+"
        ? [for i, b in local.iter_1499.tape : (i == local.iter_1499.tape_ptr ? (b + local.code_1500[1]) % 256 : b)] :
      local.code_1500[0] == "-"
        ? [for i, b in local.iter_1499.tape : (i == local.iter_1499.tape_ptr ? (b - local.code_1500[1] + 256) % 256 : b)] :
      local.code_1500[0] == ","
        ? [for i, b in local.iter_1499.tape : (i == local.iter_1499.tape_ptr ? local.ascii_lookup[substr(local.input_1500, 0, 1)] : b)]
        : local.iter_1499.tape)

    tape_ptr = (
      local.code_1500[0] == "<"
        ? local.iter_1499.tape_ptr - local.code_1500[1] :
      local.code_1500[0] == ">"
        ? local.iter_1499.tape_ptr + local.code_1500[1]
        : local.iter_1499.tape_ptr)

    code_ptr = 2 + (
      local.code_1500[0] == "["
        ? local.iter_1499.tape[local.iter_1499.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1499.code_ptr)] : local.iter_1499.code_ptr :
      local.code_1500[0] == "]"
        ? local.iter_1499.tape[local.iter_1499.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1499.code_ptr)] : local.iter_1499.code_ptr
        : local.iter_1499.code_ptr)

    steps_taken = 1 + local.iter_1499.steps_taken
  }
}

locals {
  code_1501 = (try(local.iter_1500.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1500.code_ptr, local.iter_1500.code_ptr + 2)
    : [null])

  input_1501 = (local.code_1501[0] == ","
    ? substr(local.input_1500, local.code_1501[1], -1)
    : local.input_1500)

  iter_1501 = try(local.iter_1500.code_ptr >= length(var.code), true) ? local.iter_1500 : {
    output = (local.code_1501[0] == "."
      ? "${local.iter_1500.output}${join("", [for _ in range(local.code_1501[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1500.tape[local.iter_1500.tape_ptr]))])}"
      : local.iter_1500.output)
    
    tape = (
      local.code_1501[0] == "+"
        ? [for i, b in local.iter_1500.tape : (i == local.iter_1500.tape_ptr ? (b + local.code_1501[1]) % 256 : b)] :
      local.code_1501[0] == "-"
        ? [for i, b in local.iter_1500.tape : (i == local.iter_1500.tape_ptr ? (b - local.code_1501[1] + 256) % 256 : b)] :
      local.code_1501[0] == ","
        ? [for i, b in local.iter_1500.tape : (i == local.iter_1500.tape_ptr ? local.ascii_lookup[substr(local.input_1501, 0, 1)] : b)]
        : local.iter_1500.tape)

    tape_ptr = (
      local.code_1501[0] == "<"
        ? local.iter_1500.tape_ptr - local.code_1501[1] :
      local.code_1501[0] == ">"
        ? local.iter_1500.tape_ptr + local.code_1501[1]
        : local.iter_1500.tape_ptr)

    code_ptr = 2 + (
      local.code_1501[0] == "["
        ? local.iter_1500.tape[local.iter_1500.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1500.code_ptr)] : local.iter_1500.code_ptr :
      local.code_1501[0] == "]"
        ? local.iter_1500.tape[local.iter_1500.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1500.code_ptr)] : local.iter_1500.code_ptr
        : local.iter_1500.code_ptr)

    steps_taken = 1 + local.iter_1500.steps_taken
  }
}

locals {
  code_1502 = (try(local.iter_1501.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1501.code_ptr, local.iter_1501.code_ptr + 2)
    : [null])

  input_1502 = (local.code_1502[0] == ","
    ? substr(local.input_1501, local.code_1502[1], -1)
    : local.input_1501)

  iter_1502 = try(local.iter_1501.code_ptr >= length(var.code), true) ? local.iter_1501 : {
    output = (local.code_1502[0] == "."
      ? "${local.iter_1501.output}${join("", [for _ in range(local.code_1502[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1501.tape[local.iter_1501.tape_ptr]))])}"
      : local.iter_1501.output)
    
    tape = (
      local.code_1502[0] == "+"
        ? [for i, b in local.iter_1501.tape : (i == local.iter_1501.tape_ptr ? (b + local.code_1502[1]) % 256 : b)] :
      local.code_1502[0] == "-"
        ? [for i, b in local.iter_1501.tape : (i == local.iter_1501.tape_ptr ? (b - local.code_1502[1] + 256) % 256 : b)] :
      local.code_1502[0] == ","
        ? [for i, b in local.iter_1501.tape : (i == local.iter_1501.tape_ptr ? local.ascii_lookup[substr(local.input_1502, 0, 1)] : b)]
        : local.iter_1501.tape)

    tape_ptr = (
      local.code_1502[0] == "<"
        ? local.iter_1501.tape_ptr - local.code_1502[1] :
      local.code_1502[0] == ">"
        ? local.iter_1501.tape_ptr + local.code_1502[1]
        : local.iter_1501.tape_ptr)

    code_ptr = 2 + (
      local.code_1502[0] == "["
        ? local.iter_1501.tape[local.iter_1501.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1501.code_ptr)] : local.iter_1501.code_ptr :
      local.code_1502[0] == "]"
        ? local.iter_1501.tape[local.iter_1501.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1501.code_ptr)] : local.iter_1501.code_ptr
        : local.iter_1501.code_ptr)

    steps_taken = 1 + local.iter_1501.steps_taken
  }
}

locals {
  code_1503 = (try(local.iter_1502.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1502.code_ptr, local.iter_1502.code_ptr + 2)
    : [null])

  input_1503 = (local.code_1503[0] == ","
    ? substr(local.input_1502, local.code_1503[1], -1)
    : local.input_1502)

  iter_1503 = try(local.iter_1502.code_ptr >= length(var.code), true) ? local.iter_1502 : {
    output = (local.code_1503[0] == "."
      ? "${local.iter_1502.output}${join("", [for _ in range(local.code_1503[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1502.tape[local.iter_1502.tape_ptr]))])}"
      : local.iter_1502.output)
    
    tape = (
      local.code_1503[0] == "+"
        ? [for i, b in local.iter_1502.tape : (i == local.iter_1502.tape_ptr ? (b + local.code_1503[1]) % 256 : b)] :
      local.code_1503[0] == "-"
        ? [for i, b in local.iter_1502.tape : (i == local.iter_1502.tape_ptr ? (b - local.code_1503[1] + 256) % 256 : b)] :
      local.code_1503[0] == ","
        ? [for i, b in local.iter_1502.tape : (i == local.iter_1502.tape_ptr ? local.ascii_lookup[substr(local.input_1503, 0, 1)] : b)]
        : local.iter_1502.tape)

    tape_ptr = (
      local.code_1503[0] == "<"
        ? local.iter_1502.tape_ptr - local.code_1503[1] :
      local.code_1503[0] == ">"
        ? local.iter_1502.tape_ptr + local.code_1503[1]
        : local.iter_1502.tape_ptr)

    code_ptr = 2 + (
      local.code_1503[0] == "["
        ? local.iter_1502.tape[local.iter_1502.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1502.code_ptr)] : local.iter_1502.code_ptr :
      local.code_1503[0] == "]"
        ? local.iter_1502.tape[local.iter_1502.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1502.code_ptr)] : local.iter_1502.code_ptr
        : local.iter_1502.code_ptr)

    steps_taken = 1 + local.iter_1502.steps_taken
  }
}

locals {
  code_1504 = (try(local.iter_1503.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1503.code_ptr, local.iter_1503.code_ptr + 2)
    : [null])

  input_1504 = (local.code_1504[0] == ","
    ? substr(local.input_1503, local.code_1504[1], -1)
    : local.input_1503)

  iter_1504 = try(local.iter_1503.code_ptr >= length(var.code), true) ? local.iter_1503 : {
    output = (local.code_1504[0] == "."
      ? "${local.iter_1503.output}${join("", [for _ in range(local.code_1504[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1503.tape[local.iter_1503.tape_ptr]))])}"
      : local.iter_1503.output)
    
    tape = (
      local.code_1504[0] == "+"
        ? [for i, b in local.iter_1503.tape : (i == local.iter_1503.tape_ptr ? (b + local.code_1504[1]) % 256 : b)] :
      local.code_1504[0] == "-"
        ? [for i, b in local.iter_1503.tape : (i == local.iter_1503.tape_ptr ? (b - local.code_1504[1] + 256) % 256 : b)] :
      local.code_1504[0] == ","
        ? [for i, b in local.iter_1503.tape : (i == local.iter_1503.tape_ptr ? local.ascii_lookup[substr(local.input_1504, 0, 1)] : b)]
        : local.iter_1503.tape)

    tape_ptr = (
      local.code_1504[0] == "<"
        ? local.iter_1503.tape_ptr - local.code_1504[1] :
      local.code_1504[0] == ">"
        ? local.iter_1503.tape_ptr + local.code_1504[1]
        : local.iter_1503.tape_ptr)

    code_ptr = 2 + (
      local.code_1504[0] == "["
        ? local.iter_1503.tape[local.iter_1503.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1503.code_ptr)] : local.iter_1503.code_ptr :
      local.code_1504[0] == "]"
        ? local.iter_1503.tape[local.iter_1503.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1503.code_ptr)] : local.iter_1503.code_ptr
        : local.iter_1503.code_ptr)

    steps_taken = 1 + local.iter_1503.steps_taken
  }
}

locals {
  code_1505 = (try(local.iter_1504.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1504.code_ptr, local.iter_1504.code_ptr + 2)
    : [null])

  input_1505 = (local.code_1505[0] == ","
    ? substr(local.input_1504, local.code_1505[1], -1)
    : local.input_1504)

  iter_1505 = try(local.iter_1504.code_ptr >= length(var.code), true) ? local.iter_1504 : {
    output = (local.code_1505[0] == "."
      ? "${local.iter_1504.output}${join("", [for _ in range(local.code_1505[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1504.tape[local.iter_1504.tape_ptr]))])}"
      : local.iter_1504.output)
    
    tape = (
      local.code_1505[0] == "+"
        ? [for i, b in local.iter_1504.tape : (i == local.iter_1504.tape_ptr ? (b + local.code_1505[1]) % 256 : b)] :
      local.code_1505[0] == "-"
        ? [for i, b in local.iter_1504.tape : (i == local.iter_1504.tape_ptr ? (b - local.code_1505[1] + 256) % 256 : b)] :
      local.code_1505[0] == ","
        ? [for i, b in local.iter_1504.tape : (i == local.iter_1504.tape_ptr ? local.ascii_lookup[substr(local.input_1505, 0, 1)] : b)]
        : local.iter_1504.tape)

    tape_ptr = (
      local.code_1505[0] == "<"
        ? local.iter_1504.tape_ptr - local.code_1505[1] :
      local.code_1505[0] == ">"
        ? local.iter_1504.tape_ptr + local.code_1505[1]
        : local.iter_1504.tape_ptr)

    code_ptr = 2 + (
      local.code_1505[0] == "["
        ? local.iter_1504.tape[local.iter_1504.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1504.code_ptr)] : local.iter_1504.code_ptr :
      local.code_1505[0] == "]"
        ? local.iter_1504.tape[local.iter_1504.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1504.code_ptr)] : local.iter_1504.code_ptr
        : local.iter_1504.code_ptr)

    steps_taken = 1 + local.iter_1504.steps_taken
  }
}

locals {
  code_1506 = (try(local.iter_1505.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1505.code_ptr, local.iter_1505.code_ptr + 2)
    : [null])

  input_1506 = (local.code_1506[0] == ","
    ? substr(local.input_1505, local.code_1506[1], -1)
    : local.input_1505)

  iter_1506 = try(local.iter_1505.code_ptr >= length(var.code), true) ? local.iter_1505 : {
    output = (local.code_1506[0] == "."
      ? "${local.iter_1505.output}${join("", [for _ in range(local.code_1506[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1505.tape[local.iter_1505.tape_ptr]))])}"
      : local.iter_1505.output)
    
    tape = (
      local.code_1506[0] == "+"
        ? [for i, b in local.iter_1505.tape : (i == local.iter_1505.tape_ptr ? (b + local.code_1506[1]) % 256 : b)] :
      local.code_1506[0] == "-"
        ? [for i, b in local.iter_1505.tape : (i == local.iter_1505.tape_ptr ? (b - local.code_1506[1] + 256) % 256 : b)] :
      local.code_1506[0] == ","
        ? [for i, b in local.iter_1505.tape : (i == local.iter_1505.tape_ptr ? local.ascii_lookup[substr(local.input_1506, 0, 1)] : b)]
        : local.iter_1505.tape)

    tape_ptr = (
      local.code_1506[0] == "<"
        ? local.iter_1505.tape_ptr - local.code_1506[1] :
      local.code_1506[0] == ">"
        ? local.iter_1505.tape_ptr + local.code_1506[1]
        : local.iter_1505.tape_ptr)

    code_ptr = 2 + (
      local.code_1506[0] == "["
        ? local.iter_1505.tape[local.iter_1505.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1505.code_ptr)] : local.iter_1505.code_ptr :
      local.code_1506[0] == "]"
        ? local.iter_1505.tape[local.iter_1505.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1505.code_ptr)] : local.iter_1505.code_ptr
        : local.iter_1505.code_ptr)

    steps_taken = 1 + local.iter_1505.steps_taken
  }
}

locals {
  code_1507 = (try(local.iter_1506.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1506.code_ptr, local.iter_1506.code_ptr + 2)
    : [null])

  input_1507 = (local.code_1507[0] == ","
    ? substr(local.input_1506, local.code_1507[1], -1)
    : local.input_1506)

  iter_1507 = try(local.iter_1506.code_ptr >= length(var.code), true) ? local.iter_1506 : {
    output = (local.code_1507[0] == "."
      ? "${local.iter_1506.output}${join("", [for _ in range(local.code_1507[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1506.tape[local.iter_1506.tape_ptr]))])}"
      : local.iter_1506.output)
    
    tape = (
      local.code_1507[0] == "+"
        ? [for i, b in local.iter_1506.tape : (i == local.iter_1506.tape_ptr ? (b + local.code_1507[1]) % 256 : b)] :
      local.code_1507[0] == "-"
        ? [for i, b in local.iter_1506.tape : (i == local.iter_1506.tape_ptr ? (b - local.code_1507[1] + 256) % 256 : b)] :
      local.code_1507[0] == ","
        ? [for i, b in local.iter_1506.tape : (i == local.iter_1506.tape_ptr ? local.ascii_lookup[substr(local.input_1507, 0, 1)] : b)]
        : local.iter_1506.tape)

    tape_ptr = (
      local.code_1507[0] == "<"
        ? local.iter_1506.tape_ptr - local.code_1507[1] :
      local.code_1507[0] == ">"
        ? local.iter_1506.tape_ptr + local.code_1507[1]
        : local.iter_1506.tape_ptr)

    code_ptr = 2 + (
      local.code_1507[0] == "["
        ? local.iter_1506.tape[local.iter_1506.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1506.code_ptr)] : local.iter_1506.code_ptr :
      local.code_1507[0] == "]"
        ? local.iter_1506.tape[local.iter_1506.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1506.code_ptr)] : local.iter_1506.code_ptr
        : local.iter_1506.code_ptr)

    steps_taken = 1 + local.iter_1506.steps_taken
  }
}

locals {
  code_1508 = (try(local.iter_1507.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1507.code_ptr, local.iter_1507.code_ptr + 2)
    : [null])

  input_1508 = (local.code_1508[0] == ","
    ? substr(local.input_1507, local.code_1508[1], -1)
    : local.input_1507)

  iter_1508 = try(local.iter_1507.code_ptr >= length(var.code), true) ? local.iter_1507 : {
    output = (local.code_1508[0] == "."
      ? "${local.iter_1507.output}${join("", [for _ in range(local.code_1508[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1507.tape[local.iter_1507.tape_ptr]))])}"
      : local.iter_1507.output)
    
    tape = (
      local.code_1508[0] == "+"
        ? [for i, b in local.iter_1507.tape : (i == local.iter_1507.tape_ptr ? (b + local.code_1508[1]) % 256 : b)] :
      local.code_1508[0] == "-"
        ? [for i, b in local.iter_1507.tape : (i == local.iter_1507.tape_ptr ? (b - local.code_1508[1] + 256) % 256 : b)] :
      local.code_1508[0] == ","
        ? [for i, b in local.iter_1507.tape : (i == local.iter_1507.tape_ptr ? local.ascii_lookup[substr(local.input_1508, 0, 1)] : b)]
        : local.iter_1507.tape)

    tape_ptr = (
      local.code_1508[0] == "<"
        ? local.iter_1507.tape_ptr - local.code_1508[1] :
      local.code_1508[0] == ">"
        ? local.iter_1507.tape_ptr + local.code_1508[1]
        : local.iter_1507.tape_ptr)

    code_ptr = 2 + (
      local.code_1508[0] == "["
        ? local.iter_1507.tape[local.iter_1507.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1507.code_ptr)] : local.iter_1507.code_ptr :
      local.code_1508[0] == "]"
        ? local.iter_1507.tape[local.iter_1507.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1507.code_ptr)] : local.iter_1507.code_ptr
        : local.iter_1507.code_ptr)

    steps_taken = 1 + local.iter_1507.steps_taken
  }
}

locals {
  code_1509 = (try(local.iter_1508.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1508.code_ptr, local.iter_1508.code_ptr + 2)
    : [null])

  input_1509 = (local.code_1509[0] == ","
    ? substr(local.input_1508, local.code_1509[1], -1)
    : local.input_1508)

  iter_1509 = try(local.iter_1508.code_ptr >= length(var.code), true) ? local.iter_1508 : {
    output = (local.code_1509[0] == "."
      ? "${local.iter_1508.output}${join("", [for _ in range(local.code_1509[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1508.tape[local.iter_1508.tape_ptr]))])}"
      : local.iter_1508.output)
    
    tape = (
      local.code_1509[0] == "+"
        ? [for i, b in local.iter_1508.tape : (i == local.iter_1508.tape_ptr ? (b + local.code_1509[1]) % 256 : b)] :
      local.code_1509[0] == "-"
        ? [for i, b in local.iter_1508.tape : (i == local.iter_1508.tape_ptr ? (b - local.code_1509[1] + 256) % 256 : b)] :
      local.code_1509[0] == ","
        ? [for i, b in local.iter_1508.tape : (i == local.iter_1508.tape_ptr ? local.ascii_lookup[substr(local.input_1509, 0, 1)] : b)]
        : local.iter_1508.tape)

    tape_ptr = (
      local.code_1509[0] == "<"
        ? local.iter_1508.tape_ptr - local.code_1509[1] :
      local.code_1509[0] == ">"
        ? local.iter_1508.tape_ptr + local.code_1509[1]
        : local.iter_1508.tape_ptr)

    code_ptr = 2 + (
      local.code_1509[0] == "["
        ? local.iter_1508.tape[local.iter_1508.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1508.code_ptr)] : local.iter_1508.code_ptr :
      local.code_1509[0] == "]"
        ? local.iter_1508.tape[local.iter_1508.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1508.code_ptr)] : local.iter_1508.code_ptr
        : local.iter_1508.code_ptr)

    steps_taken = 1 + local.iter_1508.steps_taken
  }
}

locals {
  code_1510 = (try(local.iter_1509.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1509.code_ptr, local.iter_1509.code_ptr + 2)
    : [null])

  input_1510 = (local.code_1510[0] == ","
    ? substr(local.input_1509, local.code_1510[1], -1)
    : local.input_1509)

  iter_1510 = try(local.iter_1509.code_ptr >= length(var.code), true) ? local.iter_1509 : {
    output = (local.code_1510[0] == "."
      ? "${local.iter_1509.output}${join("", [for _ in range(local.code_1510[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1509.tape[local.iter_1509.tape_ptr]))])}"
      : local.iter_1509.output)
    
    tape = (
      local.code_1510[0] == "+"
        ? [for i, b in local.iter_1509.tape : (i == local.iter_1509.tape_ptr ? (b + local.code_1510[1]) % 256 : b)] :
      local.code_1510[0] == "-"
        ? [for i, b in local.iter_1509.tape : (i == local.iter_1509.tape_ptr ? (b - local.code_1510[1] + 256) % 256 : b)] :
      local.code_1510[0] == ","
        ? [for i, b in local.iter_1509.tape : (i == local.iter_1509.tape_ptr ? local.ascii_lookup[substr(local.input_1510, 0, 1)] : b)]
        : local.iter_1509.tape)

    tape_ptr = (
      local.code_1510[0] == "<"
        ? local.iter_1509.tape_ptr - local.code_1510[1] :
      local.code_1510[0] == ">"
        ? local.iter_1509.tape_ptr + local.code_1510[1]
        : local.iter_1509.tape_ptr)

    code_ptr = 2 + (
      local.code_1510[0] == "["
        ? local.iter_1509.tape[local.iter_1509.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1509.code_ptr)] : local.iter_1509.code_ptr :
      local.code_1510[0] == "]"
        ? local.iter_1509.tape[local.iter_1509.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1509.code_ptr)] : local.iter_1509.code_ptr
        : local.iter_1509.code_ptr)

    steps_taken = 1 + local.iter_1509.steps_taken
  }
}

locals {
  code_1511 = (try(local.iter_1510.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1510.code_ptr, local.iter_1510.code_ptr + 2)
    : [null])

  input_1511 = (local.code_1511[0] == ","
    ? substr(local.input_1510, local.code_1511[1], -1)
    : local.input_1510)

  iter_1511 = try(local.iter_1510.code_ptr >= length(var.code), true) ? local.iter_1510 : {
    output = (local.code_1511[0] == "."
      ? "${local.iter_1510.output}${join("", [for _ in range(local.code_1511[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1510.tape[local.iter_1510.tape_ptr]))])}"
      : local.iter_1510.output)
    
    tape = (
      local.code_1511[0] == "+"
        ? [for i, b in local.iter_1510.tape : (i == local.iter_1510.tape_ptr ? (b + local.code_1511[1]) % 256 : b)] :
      local.code_1511[0] == "-"
        ? [for i, b in local.iter_1510.tape : (i == local.iter_1510.tape_ptr ? (b - local.code_1511[1] + 256) % 256 : b)] :
      local.code_1511[0] == ","
        ? [for i, b in local.iter_1510.tape : (i == local.iter_1510.tape_ptr ? local.ascii_lookup[substr(local.input_1511, 0, 1)] : b)]
        : local.iter_1510.tape)

    tape_ptr = (
      local.code_1511[0] == "<"
        ? local.iter_1510.tape_ptr - local.code_1511[1] :
      local.code_1511[0] == ">"
        ? local.iter_1510.tape_ptr + local.code_1511[1]
        : local.iter_1510.tape_ptr)

    code_ptr = 2 + (
      local.code_1511[0] == "["
        ? local.iter_1510.tape[local.iter_1510.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1510.code_ptr)] : local.iter_1510.code_ptr :
      local.code_1511[0] == "]"
        ? local.iter_1510.tape[local.iter_1510.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1510.code_ptr)] : local.iter_1510.code_ptr
        : local.iter_1510.code_ptr)

    steps_taken = 1 + local.iter_1510.steps_taken
  }
}

locals {
  code_1512 = (try(local.iter_1511.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1511.code_ptr, local.iter_1511.code_ptr + 2)
    : [null])

  input_1512 = (local.code_1512[0] == ","
    ? substr(local.input_1511, local.code_1512[1], -1)
    : local.input_1511)

  iter_1512 = try(local.iter_1511.code_ptr >= length(var.code), true) ? local.iter_1511 : {
    output = (local.code_1512[0] == "."
      ? "${local.iter_1511.output}${join("", [for _ in range(local.code_1512[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1511.tape[local.iter_1511.tape_ptr]))])}"
      : local.iter_1511.output)
    
    tape = (
      local.code_1512[0] == "+"
        ? [for i, b in local.iter_1511.tape : (i == local.iter_1511.tape_ptr ? (b + local.code_1512[1]) % 256 : b)] :
      local.code_1512[0] == "-"
        ? [for i, b in local.iter_1511.tape : (i == local.iter_1511.tape_ptr ? (b - local.code_1512[1] + 256) % 256 : b)] :
      local.code_1512[0] == ","
        ? [for i, b in local.iter_1511.tape : (i == local.iter_1511.tape_ptr ? local.ascii_lookup[substr(local.input_1512, 0, 1)] : b)]
        : local.iter_1511.tape)

    tape_ptr = (
      local.code_1512[0] == "<"
        ? local.iter_1511.tape_ptr - local.code_1512[1] :
      local.code_1512[0] == ">"
        ? local.iter_1511.tape_ptr + local.code_1512[1]
        : local.iter_1511.tape_ptr)

    code_ptr = 2 + (
      local.code_1512[0] == "["
        ? local.iter_1511.tape[local.iter_1511.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1511.code_ptr)] : local.iter_1511.code_ptr :
      local.code_1512[0] == "]"
        ? local.iter_1511.tape[local.iter_1511.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1511.code_ptr)] : local.iter_1511.code_ptr
        : local.iter_1511.code_ptr)

    steps_taken = 1 + local.iter_1511.steps_taken
  }
}

locals {
  code_1513 = (try(local.iter_1512.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1512.code_ptr, local.iter_1512.code_ptr + 2)
    : [null])

  input_1513 = (local.code_1513[0] == ","
    ? substr(local.input_1512, local.code_1513[1], -1)
    : local.input_1512)

  iter_1513 = try(local.iter_1512.code_ptr >= length(var.code), true) ? local.iter_1512 : {
    output = (local.code_1513[0] == "."
      ? "${local.iter_1512.output}${join("", [for _ in range(local.code_1513[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1512.tape[local.iter_1512.tape_ptr]))])}"
      : local.iter_1512.output)
    
    tape = (
      local.code_1513[0] == "+"
        ? [for i, b in local.iter_1512.tape : (i == local.iter_1512.tape_ptr ? (b + local.code_1513[1]) % 256 : b)] :
      local.code_1513[0] == "-"
        ? [for i, b in local.iter_1512.tape : (i == local.iter_1512.tape_ptr ? (b - local.code_1513[1] + 256) % 256 : b)] :
      local.code_1513[0] == ","
        ? [for i, b in local.iter_1512.tape : (i == local.iter_1512.tape_ptr ? local.ascii_lookup[substr(local.input_1513, 0, 1)] : b)]
        : local.iter_1512.tape)

    tape_ptr = (
      local.code_1513[0] == "<"
        ? local.iter_1512.tape_ptr - local.code_1513[1] :
      local.code_1513[0] == ">"
        ? local.iter_1512.tape_ptr + local.code_1513[1]
        : local.iter_1512.tape_ptr)

    code_ptr = 2 + (
      local.code_1513[0] == "["
        ? local.iter_1512.tape[local.iter_1512.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1512.code_ptr)] : local.iter_1512.code_ptr :
      local.code_1513[0] == "]"
        ? local.iter_1512.tape[local.iter_1512.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1512.code_ptr)] : local.iter_1512.code_ptr
        : local.iter_1512.code_ptr)

    steps_taken = 1 + local.iter_1512.steps_taken
  }
}

locals {
  code_1514 = (try(local.iter_1513.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1513.code_ptr, local.iter_1513.code_ptr + 2)
    : [null])

  input_1514 = (local.code_1514[0] == ","
    ? substr(local.input_1513, local.code_1514[1], -1)
    : local.input_1513)

  iter_1514 = try(local.iter_1513.code_ptr >= length(var.code), true) ? local.iter_1513 : {
    output = (local.code_1514[0] == "."
      ? "${local.iter_1513.output}${join("", [for _ in range(local.code_1514[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1513.tape[local.iter_1513.tape_ptr]))])}"
      : local.iter_1513.output)
    
    tape = (
      local.code_1514[0] == "+"
        ? [for i, b in local.iter_1513.tape : (i == local.iter_1513.tape_ptr ? (b + local.code_1514[1]) % 256 : b)] :
      local.code_1514[0] == "-"
        ? [for i, b in local.iter_1513.tape : (i == local.iter_1513.tape_ptr ? (b - local.code_1514[1] + 256) % 256 : b)] :
      local.code_1514[0] == ","
        ? [for i, b in local.iter_1513.tape : (i == local.iter_1513.tape_ptr ? local.ascii_lookup[substr(local.input_1514, 0, 1)] : b)]
        : local.iter_1513.tape)

    tape_ptr = (
      local.code_1514[0] == "<"
        ? local.iter_1513.tape_ptr - local.code_1514[1] :
      local.code_1514[0] == ">"
        ? local.iter_1513.tape_ptr + local.code_1514[1]
        : local.iter_1513.tape_ptr)

    code_ptr = 2 + (
      local.code_1514[0] == "["
        ? local.iter_1513.tape[local.iter_1513.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1513.code_ptr)] : local.iter_1513.code_ptr :
      local.code_1514[0] == "]"
        ? local.iter_1513.tape[local.iter_1513.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1513.code_ptr)] : local.iter_1513.code_ptr
        : local.iter_1513.code_ptr)

    steps_taken = 1 + local.iter_1513.steps_taken
  }
}

locals {
  code_1515 = (try(local.iter_1514.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1514.code_ptr, local.iter_1514.code_ptr + 2)
    : [null])

  input_1515 = (local.code_1515[0] == ","
    ? substr(local.input_1514, local.code_1515[1], -1)
    : local.input_1514)

  iter_1515 = try(local.iter_1514.code_ptr >= length(var.code), true) ? local.iter_1514 : {
    output = (local.code_1515[0] == "."
      ? "${local.iter_1514.output}${join("", [for _ in range(local.code_1515[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1514.tape[local.iter_1514.tape_ptr]))])}"
      : local.iter_1514.output)
    
    tape = (
      local.code_1515[0] == "+"
        ? [for i, b in local.iter_1514.tape : (i == local.iter_1514.tape_ptr ? (b + local.code_1515[1]) % 256 : b)] :
      local.code_1515[0] == "-"
        ? [for i, b in local.iter_1514.tape : (i == local.iter_1514.tape_ptr ? (b - local.code_1515[1] + 256) % 256 : b)] :
      local.code_1515[0] == ","
        ? [for i, b in local.iter_1514.tape : (i == local.iter_1514.tape_ptr ? local.ascii_lookup[substr(local.input_1515, 0, 1)] : b)]
        : local.iter_1514.tape)

    tape_ptr = (
      local.code_1515[0] == "<"
        ? local.iter_1514.tape_ptr - local.code_1515[1] :
      local.code_1515[0] == ">"
        ? local.iter_1514.tape_ptr + local.code_1515[1]
        : local.iter_1514.tape_ptr)

    code_ptr = 2 + (
      local.code_1515[0] == "["
        ? local.iter_1514.tape[local.iter_1514.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1514.code_ptr)] : local.iter_1514.code_ptr :
      local.code_1515[0] == "]"
        ? local.iter_1514.tape[local.iter_1514.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1514.code_ptr)] : local.iter_1514.code_ptr
        : local.iter_1514.code_ptr)

    steps_taken = 1 + local.iter_1514.steps_taken
  }
}

locals {
  code_1516 = (try(local.iter_1515.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1515.code_ptr, local.iter_1515.code_ptr + 2)
    : [null])

  input_1516 = (local.code_1516[0] == ","
    ? substr(local.input_1515, local.code_1516[1], -1)
    : local.input_1515)

  iter_1516 = try(local.iter_1515.code_ptr >= length(var.code), true) ? local.iter_1515 : {
    output = (local.code_1516[0] == "."
      ? "${local.iter_1515.output}${join("", [for _ in range(local.code_1516[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1515.tape[local.iter_1515.tape_ptr]))])}"
      : local.iter_1515.output)
    
    tape = (
      local.code_1516[0] == "+"
        ? [for i, b in local.iter_1515.tape : (i == local.iter_1515.tape_ptr ? (b + local.code_1516[1]) % 256 : b)] :
      local.code_1516[0] == "-"
        ? [for i, b in local.iter_1515.tape : (i == local.iter_1515.tape_ptr ? (b - local.code_1516[1] + 256) % 256 : b)] :
      local.code_1516[0] == ","
        ? [for i, b in local.iter_1515.tape : (i == local.iter_1515.tape_ptr ? local.ascii_lookup[substr(local.input_1516, 0, 1)] : b)]
        : local.iter_1515.tape)

    tape_ptr = (
      local.code_1516[0] == "<"
        ? local.iter_1515.tape_ptr - local.code_1516[1] :
      local.code_1516[0] == ">"
        ? local.iter_1515.tape_ptr + local.code_1516[1]
        : local.iter_1515.tape_ptr)

    code_ptr = 2 + (
      local.code_1516[0] == "["
        ? local.iter_1515.tape[local.iter_1515.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1515.code_ptr)] : local.iter_1515.code_ptr :
      local.code_1516[0] == "]"
        ? local.iter_1515.tape[local.iter_1515.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1515.code_ptr)] : local.iter_1515.code_ptr
        : local.iter_1515.code_ptr)

    steps_taken = 1 + local.iter_1515.steps_taken
  }
}

locals {
  code_1517 = (try(local.iter_1516.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1516.code_ptr, local.iter_1516.code_ptr + 2)
    : [null])

  input_1517 = (local.code_1517[0] == ","
    ? substr(local.input_1516, local.code_1517[1], -1)
    : local.input_1516)

  iter_1517 = try(local.iter_1516.code_ptr >= length(var.code), true) ? local.iter_1516 : {
    output = (local.code_1517[0] == "."
      ? "${local.iter_1516.output}${join("", [for _ in range(local.code_1517[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1516.tape[local.iter_1516.tape_ptr]))])}"
      : local.iter_1516.output)
    
    tape = (
      local.code_1517[0] == "+"
        ? [for i, b in local.iter_1516.tape : (i == local.iter_1516.tape_ptr ? (b + local.code_1517[1]) % 256 : b)] :
      local.code_1517[0] == "-"
        ? [for i, b in local.iter_1516.tape : (i == local.iter_1516.tape_ptr ? (b - local.code_1517[1] + 256) % 256 : b)] :
      local.code_1517[0] == ","
        ? [for i, b in local.iter_1516.tape : (i == local.iter_1516.tape_ptr ? local.ascii_lookup[substr(local.input_1517, 0, 1)] : b)]
        : local.iter_1516.tape)

    tape_ptr = (
      local.code_1517[0] == "<"
        ? local.iter_1516.tape_ptr - local.code_1517[1] :
      local.code_1517[0] == ">"
        ? local.iter_1516.tape_ptr + local.code_1517[1]
        : local.iter_1516.tape_ptr)

    code_ptr = 2 + (
      local.code_1517[0] == "["
        ? local.iter_1516.tape[local.iter_1516.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1516.code_ptr)] : local.iter_1516.code_ptr :
      local.code_1517[0] == "]"
        ? local.iter_1516.tape[local.iter_1516.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1516.code_ptr)] : local.iter_1516.code_ptr
        : local.iter_1516.code_ptr)

    steps_taken = 1 + local.iter_1516.steps_taken
  }
}

locals {
  code_1518 = (try(local.iter_1517.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1517.code_ptr, local.iter_1517.code_ptr + 2)
    : [null])

  input_1518 = (local.code_1518[0] == ","
    ? substr(local.input_1517, local.code_1518[1], -1)
    : local.input_1517)

  iter_1518 = try(local.iter_1517.code_ptr >= length(var.code), true) ? local.iter_1517 : {
    output = (local.code_1518[0] == "."
      ? "${local.iter_1517.output}${join("", [for _ in range(local.code_1518[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1517.tape[local.iter_1517.tape_ptr]))])}"
      : local.iter_1517.output)
    
    tape = (
      local.code_1518[0] == "+"
        ? [for i, b in local.iter_1517.tape : (i == local.iter_1517.tape_ptr ? (b + local.code_1518[1]) % 256 : b)] :
      local.code_1518[0] == "-"
        ? [for i, b in local.iter_1517.tape : (i == local.iter_1517.tape_ptr ? (b - local.code_1518[1] + 256) % 256 : b)] :
      local.code_1518[0] == ","
        ? [for i, b in local.iter_1517.tape : (i == local.iter_1517.tape_ptr ? local.ascii_lookup[substr(local.input_1518, 0, 1)] : b)]
        : local.iter_1517.tape)

    tape_ptr = (
      local.code_1518[0] == "<"
        ? local.iter_1517.tape_ptr - local.code_1518[1] :
      local.code_1518[0] == ">"
        ? local.iter_1517.tape_ptr + local.code_1518[1]
        : local.iter_1517.tape_ptr)

    code_ptr = 2 + (
      local.code_1518[0] == "["
        ? local.iter_1517.tape[local.iter_1517.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1517.code_ptr)] : local.iter_1517.code_ptr :
      local.code_1518[0] == "]"
        ? local.iter_1517.tape[local.iter_1517.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1517.code_ptr)] : local.iter_1517.code_ptr
        : local.iter_1517.code_ptr)

    steps_taken = 1 + local.iter_1517.steps_taken
  }
}

locals {
  code_1519 = (try(local.iter_1518.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1518.code_ptr, local.iter_1518.code_ptr + 2)
    : [null])

  input_1519 = (local.code_1519[0] == ","
    ? substr(local.input_1518, local.code_1519[1], -1)
    : local.input_1518)

  iter_1519 = try(local.iter_1518.code_ptr >= length(var.code), true) ? local.iter_1518 : {
    output = (local.code_1519[0] == "."
      ? "${local.iter_1518.output}${join("", [for _ in range(local.code_1519[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1518.tape[local.iter_1518.tape_ptr]))])}"
      : local.iter_1518.output)
    
    tape = (
      local.code_1519[0] == "+"
        ? [for i, b in local.iter_1518.tape : (i == local.iter_1518.tape_ptr ? (b + local.code_1519[1]) % 256 : b)] :
      local.code_1519[0] == "-"
        ? [for i, b in local.iter_1518.tape : (i == local.iter_1518.tape_ptr ? (b - local.code_1519[1] + 256) % 256 : b)] :
      local.code_1519[0] == ","
        ? [for i, b in local.iter_1518.tape : (i == local.iter_1518.tape_ptr ? local.ascii_lookup[substr(local.input_1519, 0, 1)] : b)]
        : local.iter_1518.tape)

    tape_ptr = (
      local.code_1519[0] == "<"
        ? local.iter_1518.tape_ptr - local.code_1519[1] :
      local.code_1519[0] == ">"
        ? local.iter_1518.tape_ptr + local.code_1519[1]
        : local.iter_1518.tape_ptr)

    code_ptr = 2 + (
      local.code_1519[0] == "["
        ? local.iter_1518.tape[local.iter_1518.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1518.code_ptr)] : local.iter_1518.code_ptr :
      local.code_1519[0] == "]"
        ? local.iter_1518.tape[local.iter_1518.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1518.code_ptr)] : local.iter_1518.code_ptr
        : local.iter_1518.code_ptr)

    steps_taken = 1 + local.iter_1518.steps_taken
  }
}

locals {
  code_1520 = (try(local.iter_1519.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1519.code_ptr, local.iter_1519.code_ptr + 2)
    : [null])

  input_1520 = (local.code_1520[0] == ","
    ? substr(local.input_1519, local.code_1520[1], -1)
    : local.input_1519)

  iter_1520 = try(local.iter_1519.code_ptr >= length(var.code), true) ? local.iter_1519 : {
    output = (local.code_1520[0] == "."
      ? "${local.iter_1519.output}${join("", [for _ in range(local.code_1520[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1519.tape[local.iter_1519.tape_ptr]))])}"
      : local.iter_1519.output)
    
    tape = (
      local.code_1520[0] == "+"
        ? [for i, b in local.iter_1519.tape : (i == local.iter_1519.tape_ptr ? (b + local.code_1520[1]) % 256 : b)] :
      local.code_1520[0] == "-"
        ? [for i, b in local.iter_1519.tape : (i == local.iter_1519.tape_ptr ? (b - local.code_1520[1] + 256) % 256 : b)] :
      local.code_1520[0] == ","
        ? [for i, b in local.iter_1519.tape : (i == local.iter_1519.tape_ptr ? local.ascii_lookup[substr(local.input_1520, 0, 1)] : b)]
        : local.iter_1519.tape)

    tape_ptr = (
      local.code_1520[0] == "<"
        ? local.iter_1519.tape_ptr - local.code_1520[1] :
      local.code_1520[0] == ">"
        ? local.iter_1519.tape_ptr + local.code_1520[1]
        : local.iter_1519.tape_ptr)

    code_ptr = 2 + (
      local.code_1520[0] == "["
        ? local.iter_1519.tape[local.iter_1519.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1519.code_ptr)] : local.iter_1519.code_ptr :
      local.code_1520[0] == "]"
        ? local.iter_1519.tape[local.iter_1519.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1519.code_ptr)] : local.iter_1519.code_ptr
        : local.iter_1519.code_ptr)

    steps_taken = 1 + local.iter_1519.steps_taken
  }
}

locals {
  code_1521 = (try(local.iter_1520.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1520.code_ptr, local.iter_1520.code_ptr + 2)
    : [null])

  input_1521 = (local.code_1521[0] == ","
    ? substr(local.input_1520, local.code_1521[1], -1)
    : local.input_1520)

  iter_1521 = try(local.iter_1520.code_ptr >= length(var.code), true) ? local.iter_1520 : {
    output = (local.code_1521[0] == "."
      ? "${local.iter_1520.output}${join("", [for _ in range(local.code_1521[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1520.tape[local.iter_1520.tape_ptr]))])}"
      : local.iter_1520.output)
    
    tape = (
      local.code_1521[0] == "+"
        ? [for i, b in local.iter_1520.tape : (i == local.iter_1520.tape_ptr ? (b + local.code_1521[1]) % 256 : b)] :
      local.code_1521[0] == "-"
        ? [for i, b in local.iter_1520.tape : (i == local.iter_1520.tape_ptr ? (b - local.code_1521[1] + 256) % 256 : b)] :
      local.code_1521[0] == ","
        ? [for i, b in local.iter_1520.tape : (i == local.iter_1520.tape_ptr ? local.ascii_lookup[substr(local.input_1521, 0, 1)] : b)]
        : local.iter_1520.tape)

    tape_ptr = (
      local.code_1521[0] == "<"
        ? local.iter_1520.tape_ptr - local.code_1521[1] :
      local.code_1521[0] == ">"
        ? local.iter_1520.tape_ptr + local.code_1521[1]
        : local.iter_1520.tape_ptr)

    code_ptr = 2 + (
      local.code_1521[0] == "["
        ? local.iter_1520.tape[local.iter_1520.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1520.code_ptr)] : local.iter_1520.code_ptr :
      local.code_1521[0] == "]"
        ? local.iter_1520.tape[local.iter_1520.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1520.code_ptr)] : local.iter_1520.code_ptr
        : local.iter_1520.code_ptr)

    steps_taken = 1 + local.iter_1520.steps_taken
  }
}

locals {
  code_1522 = (try(local.iter_1521.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1521.code_ptr, local.iter_1521.code_ptr + 2)
    : [null])

  input_1522 = (local.code_1522[0] == ","
    ? substr(local.input_1521, local.code_1522[1], -1)
    : local.input_1521)

  iter_1522 = try(local.iter_1521.code_ptr >= length(var.code), true) ? local.iter_1521 : {
    output = (local.code_1522[0] == "."
      ? "${local.iter_1521.output}${join("", [for _ in range(local.code_1522[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1521.tape[local.iter_1521.tape_ptr]))])}"
      : local.iter_1521.output)
    
    tape = (
      local.code_1522[0] == "+"
        ? [for i, b in local.iter_1521.tape : (i == local.iter_1521.tape_ptr ? (b + local.code_1522[1]) % 256 : b)] :
      local.code_1522[0] == "-"
        ? [for i, b in local.iter_1521.tape : (i == local.iter_1521.tape_ptr ? (b - local.code_1522[1] + 256) % 256 : b)] :
      local.code_1522[0] == ","
        ? [for i, b in local.iter_1521.tape : (i == local.iter_1521.tape_ptr ? local.ascii_lookup[substr(local.input_1522, 0, 1)] : b)]
        : local.iter_1521.tape)

    tape_ptr = (
      local.code_1522[0] == "<"
        ? local.iter_1521.tape_ptr - local.code_1522[1] :
      local.code_1522[0] == ">"
        ? local.iter_1521.tape_ptr + local.code_1522[1]
        : local.iter_1521.tape_ptr)

    code_ptr = 2 + (
      local.code_1522[0] == "["
        ? local.iter_1521.tape[local.iter_1521.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1521.code_ptr)] : local.iter_1521.code_ptr :
      local.code_1522[0] == "]"
        ? local.iter_1521.tape[local.iter_1521.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1521.code_ptr)] : local.iter_1521.code_ptr
        : local.iter_1521.code_ptr)

    steps_taken = 1 + local.iter_1521.steps_taken
  }
}

locals {
  code_1523 = (try(local.iter_1522.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1522.code_ptr, local.iter_1522.code_ptr + 2)
    : [null])

  input_1523 = (local.code_1523[0] == ","
    ? substr(local.input_1522, local.code_1523[1], -1)
    : local.input_1522)

  iter_1523 = try(local.iter_1522.code_ptr >= length(var.code), true) ? local.iter_1522 : {
    output = (local.code_1523[0] == "."
      ? "${local.iter_1522.output}${join("", [for _ in range(local.code_1523[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1522.tape[local.iter_1522.tape_ptr]))])}"
      : local.iter_1522.output)
    
    tape = (
      local.code_1523[0] == "+"
        ? [for i, b in local.iter_1522.tape : (i == local.iter_1522.tape_ptr ? (b + local.code_1523[1]) % 256 : b)] :
      local.code_1523[0] == "-"
        ? [for i, b in local.iter_1522.tape : (i == local.iter_1522.tape_ptr ? (b - local.code_1523[1] + 256) % 256 : b)] :
      local.code_1523[0] == ","
        ? [for i, b in local.iter_1522.tape : (i == local.iter_1522.tape_ptr ? local.ascii_lookup[substr(local.input_1523, 0, 1)] : b)]
        : local.iter_1522.tape)

    tape_ptr = (
      local.code_1523[0] == "<"
        ? local.iter_1522.tape_ptr - local.code_1523[1] :
      local.code_1523[0] == ">"
        ? local.iter_1522.tape_ptr + local.code_1523[1]
        : local.iter_1522.tape_ptr)

    code_ptr = 2 + (
      local.code_1523[0] == "["
        ? local.iter_1522.tape[local.iter_1522.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1522.code_ptr)] : local.iter_1522.code_ptr :
      local.code_1523[0] == "]"
        ? local.iter_1522.tape[local.iter_1522.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1522.code_ptr)] : local.iter_1522.code_ptr
        : local.iter_1522.code_ptr)

    steps_taken = 1 + local.iter_1522.steps_taken
  }
}

locals {
  code_1524 = (try(local.iter_1523.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1523.code_ptr, local.iter_1523.code_ptr + 2)
    : [null])

  input_1524 = (local.code_1524[0] == ","
    ? substr(local.input_1523, local.code_1524[1], -1)
    : local.input_1523)

  iter_1524 = try(local.iter_1523.code_ptr >= length(var.code), true) ? local.iter_1523 : {
    output = (local.code_1524[0] == "."
      ? "${local.iter_1523.output}${join("", [for _ in range(local.code_1524[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1523.tape[local.iter_1523.tape_ptr]))])}"
      : local.iter_1523.output)
    
    tape = (
      local.code_1524[0] == "+"
        ? [for i, b in local.iter_1523.tape : (i == local.iter_1523.tape_ptr ? (b + local.code_1524[1]) % 256 : b)] :
      local.code_1524[0] == "-"
        ? [for i, b in local.iter_1523.tape : (i == local.iter_1523.tape_ptr ? (b - local.code_1524[1] + 256) % 256 : b)] :
      local.code_1524[0] == ","
        ? [for i, b in local.iter_1523.tape : (i == local.iter_1523.tape_ptr ? local.ascii_lookup[substr(local.input_1524, 0, 1)] : b)]
        : local.iter_1523.tape)

    tape_ptr = (
      local.code_1524[0] == "<"
        ? local.iter_1523.tape_ptr - local.code_1524[1] :
      local.code_1524[0] == ">"
        ? local.iter_1523.tape_ptr + local.code_1524[1]
        : local.iter_1523.tape_ptr)

    code_ptr = 2 + (
      local.code_1524[0] == "["
        ? local.iter_1523.tape[local.iter_1523.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1523.code_ptr)] : local.iter_1523.code_ptr :
      local.code_1524[0] == "]"
        ? local.iter_1523.tape[local.iter_1523.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1523.code_ptr)] : local.iter_1523.code_ptr
        : local.iter_1523.code_ptr)

    steps_taken = 1 + local.iter_1523.steps_taken
  }
}

locals {
  code_1525 = (try(local.iter_1524.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1524.code_ptr, local.iter_1524.code_ptr + 2)
    : [null])

  input_1525 = (local.code_1525[0] == ","
    ? substr(local.input_1524, local.code_1525[1], -1)
    : local.input_1524)

  iter_1525 = try(local.iter_1524.code_ptr >= length(var.code), true) ? local.iter_1524 : {
    output = (local.code_1525[0] == "."
      ? "${local.iter_1524.output}${join("", [for _ in range(local.code_1525[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1524.tape[local.iter_1524.tape_ptr]))])}"
      : local.iter_1524.output)
    
    tape = (
      local.code_1525[0] == "+"
        ? [for i, b in local.iter_1524.tape : (i == local.iter_1524.tape_ptr ? (b + local.code_1525[1]) % 256 : b)] :
      local.code_1525[0] == "-"
        ? [for i, b in local.iter_1524.tape : (i == local.iter_1524.tape_ptr ? (b - local.code_1525[1] + 256) % 256 : b)] :
      local.code_1525[0] == ","
        ? [for i, b in local.iter_1524.tape : (i == local.iter_1524.tape_ptr ? local.ascii_lookup[substr(local.input_1525, 0, 1)] : b)]
        : local.iter_1524.tape)

    tape_ptr = (
      local.code_1525[0] == "<"
        ? local.iter_1524.tape_ptr - local.code_1525[1] :
      local.code_1525[0] == ">"
        ? local.iter_1524.tape_ptr + local.code_1525[1]
        : local.iter_1524.tape_ptr)

    code_ptr = 2 + (
      local.code_1525[0] == "["
        ? local.iter_1524.tape[local.iter_1524.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1524.code_ptr)] : local.iter_1524.code_ptr :
      local.code_1525[0] == "]"
        ? local.iter_1524.tape[local.iter_1524.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1524.code_ptr)] : local.iter_1524.code_ptr
        : local.iter_1524.code_ptr)

    steps_taken = 1 + local.iter_1524.steps_taken
  }
}

locals {
  code_1526 = (try(local.iter_1525.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1525.code_ptr, local.iter_1525.code_ptr + 2)
    : [null])

  input_1526 = (local.code_1526[0] == ","
    ? substr(local.input_1525, local.code_1526[1], -1)
    : local.input_1525)

  iter_1526 = try(local.iter_1525.code_ptr >= length(var.code), true) ? local.iter_1525 : {
    output = (local.code_1526[0] == "."
      ? "${local.iter_1525.output}${join("", [for _ in range(local.code_1526[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1525.tape[local.iter_1525.tape_ptr]))])}"
      : local.iter_1525.output)
    
    tape = (
      local.code_1526[0] == "+"
        ? [for i, b in local.iter_1525.tape : (i == local.iter_1525.tape_ptr ? (b + local.code_1526[1]) % 256 : b)] :
      local.code_1526[0] == "-"
        ? [for i, b in local.iter_1525.tape : (i == local.iter_1525.tape_ptr ? (b - local.code_1526[1] + 256) % 256 : b)] :
      local.code_1526[0] == ","
        ? [for i, b in local.iter_1525.tape : (i == local.iter_1525.tape_ptr ? local.ascii_lookup[substr(local.input_1526, 0, 1)] : b)]
        : local.iter_1525.tape)

    tape_ptr = (
      local.code_1526[0] == "<"
        ? local.iter_1525.tape_ptr - local.code_1526[1] :
      local.code_1526[0] == ">"
        ? local.iter_1525.tape_ptr + local.code_1526[1]
        : local.iter_1525.tape_ptr)

    code_ptr = 2 + (
      local.code_1526[0] == "["
        ? local.iter_1525.tape[local.iter_1525.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1525.code_ptr)] : local.iter_1525.code_ptr :
      local.code_1526[0] == "]"
        ? local.iter_1525.tape[local.iter_1525.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1525.code_ptr)] : local.iter_1525.code_ptr
        : local.iter_1525.code_ptr)

    steps_taken = 1 + local.iter_1525.steps_taken
  }
}

locals {
  code_1527 = (try(local.iter_1526.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1526.code_ptr, local.iter_1526.code_ptr + 2)
    : [null])

  input_1527 = (local.code_1527[0] == ","
    ? substr(local.input_1526, local.code_1527[1], -1)
    : local.input_1526)

  iter_1527 = try(local.iter_1526.code_ptr >= length(var.code), true) ? local.iter_1526 : {
    output = (local.code_1527[0] == "."
      ? "${local.iter_1526.output}${join("", [for _ in range(local.code_1527[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1526.tape[local.iter_1526.tape_ptr]))])}"
      : local.iter_1526.output)
    
    tape = (
      local.code_1527[0] == "+"
        ? [for i, b in local.iter_1526.tape : (i == local.iter_1526.tape_ptr ? (b + local.code_1527[1]) % 256 : b)] :
      local.code_1527[0] == "-"
        ? [for i, b in local.iter_1526.tape : (i == local.iter_1526.tape_ptr ? (b - local.code_1527[1] + 256) % 256 : b)] :
      local.code_1527[0] == ","
        ? [for i, b in local.iter_1526.tape : (i == local.iter_1526.tape_ptr ? local.ascii_lookup[substr(local.input_1527, 0, 1)] : b)]
        : local.iter_1526.tape)

    tape_ptr = (
      local.code_1527[0] == "<"
        ? local.iter_1526.tape_ptr - local.code_1527[1] :
      local.code_1527[0] == ">"
        ? local.iter_1526.tape_ptr + local.code_1527[1]
        : local.iter_1526.tape_ptr)

    code_ptr = 2 + (
      local.code_1527[0] == "["
        ? local.iter_1526.tape[local.iter_1526.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1526.code_ptr)] : local.iter_1526.code_ptr :
      local.code_1527[0] == "]"
        ? local.iter_1526.tape[local.iter_1526.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1526.code_ptr)] : local.iter_1526.code_ptr
        : local.iter_1526.code_ptr)

    steps_taken = 1 + local.iter_1526.steps_taken
  }
}

locals {
  code_1528 = (try(local.iter_1527.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1527.code_ptr, local.iter_1527.code_ptr + 2)
    : [null])

  input_1528 = (local.code_1528[0] == ","
    ? substr(local.input_1527, local.code_1528[1], -1)
    : local.input_1527)

  iter_1528 = try(local.iter_1527.code_ptr >= length(var.code), true) ? local.iter_1527 : {
    output = (local.code_1528[0] == "."
      ? "${local.iter_1527.output}${join("", [for _ in range(local.code_1528[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1527.tape[local.iter_1527.tape_ptr]))])}"
      : local.iter_1527.output)
    
    tape = (
      local.code_1528[0] == "+"
        ? [for i, b in local.iter_1527.tape : (i == local.iter_1527.tape_ptr ? (b + local.code_1528[1]) % 256 : b)] :
      local.code_1528[0] == "-"
        ? [for i, b in local.iter_1527.tape : (i == local.iter_1527.tape_ptr ? (b - local.code_1528[1] + 256) % 256 : b)] :
      local.code_1528[0] == ","
        ? [for i, b in local.iter_1527.tape : (i == local.iter_1527.tape_ptr ? local.ascii_lookup[substr(local.input_1528, 0, 1)] : b)]
        : local.iter_1527.tape)

    tape_ptr = (
      local.code_1528[0] == "<"
        ? local.iter_1527.tape_ptr - local.code_1528[1] :
      local.code_1528[0] == ">"
        ? local.iter_1527.tape_ptr + local.code_1528[1]
        : local.iter_1527.tape_ptr)

    code_ptr = 2 + (
      local.code_1528[0] == "["
        ? local.iter_1527.tape[local.iter_1527.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1527.code_ptr)] : local.iter_1527.code_ptr :
      local.code_1528[0] == "]"
        ? local.iter_1527.tape[local.iter_1527.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1527.code_ptr)] : local.iter_1527.code_ptr
        : local.iter_1527.code_ptr)

    steps_taken = 1 + local.iter_1527.steps_taken
  }
}

locals {
  code_1529 = (try(local.iter_1528.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1528.code_ptr, local.iter_1528.code_ptr + 2)
    : [null])

  input_1529 = (local.code_1529[0] == ","
    ? substr(local.input_1528, local.code_1529[1], -1)
    : local.input_1528)

  iter_1529 = try(local.iter_1528.code_ptr >= length(var.code), true) ? local.iter_1528 : {
    output = (local.code_1529[0] == "."
      ? "${local.iter_1528.output}${join("", [for _ in range(local.code_1529[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1528.tape[local.iter_1528.tape_ptr]))])}"
      : local.iter_1528.output)
    
    tape = (
      local.code_1529[0] == "+"
        ? [for i, b in local.iter_1528.tape : (i == local.iter_1528.tape_ptr ? (b + local.code_1529[1]) % 256 : b)] :
      local.code_1529[0] == "-"
        ? [for i, b in local.iter_1528.tape : (i == local.iter_1528.tape_ptr ? (b - local.code_1529[1] + 256) % 256 : b)] :
      local.code_1529[0] == ","
        ? [for i, b in local.iter_1528.tape : (i == local.iter_1528.tape_ptr ? local.ascii_lookup[substr(local.input_1529, 0, 1)] : b)]
        : local.iter_1528.tape)

    tape_ptr = (
      local.code_1529[0] == "<"
        ? local.iter_1528.tape_ptr - local.code_1529[1] :
      local.code_1529[0] == ">"
        ? local.iter_1528.tape_ptr + local.code_1529[1]
        : local.iter_1528.tape_ptr)

    code_ptr = 2 + (
      local.code_1529[0] == "["
        ? local.iter_1528.tape[local.iter_1528.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1528.code_ptr)] : local.iter_1528.code_ptr :
      local.code_1529[0] == "]"
        ? local.iter_1528.tape[local.iter_1528.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1528.code_ptr)] : local.iter_1528.code_ptr
        : local.iter_1528.code_ptr)

    steps_taken = 1 + local.iter_1528.steps_taken
  }
}

locals {
  code_1530 = (try(local.iter_1529.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1529.code_ptr, local.iter_1529.code_ptr + 2)
    : [null])

  input_1530 = (local.code_1530[0] == ","
    ? substr(local.input_1529, local.code_1530[1], -1)
    : local.input_1529)

  iter_1530 = try(local.iter_1529.code_ptr >= length(var.code), true) ? local.iter_1529 : {
    output = (local.code_1530[0] == "."
      ? "${local.iter_1529.output}${join("", [for _ in range(local.code_1530[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1529.tape[local.iter_1529.tape_ptr]))])}"
      : local.iter_1529.output)
    
    tape = (
      local.code_1530[0] == "+"
        ? [for i, b in local.iter_1529.tape : (i == local.iter_1529.tape_ptr ? (b + local.code_1530[1]) % 256 : b)] :
      local.code_1530[0] == "-"
        ? [for i, b in local.iter_1529.tape : (i == local.iter_1529.tape_ptr ? (b - local.code_1530[1] + 256) % 256 : b)] :
      local.code_1530[0] == ","
        ? [for i, b in local.iter_1529.tape : (i == local.iter_1529.tape_ptr ? local.ascii_lookup[substr(local.input_1530, 0, 1)] : b)]
        : local.iter_1529.tape)

    tape_ptr = (
      local.code_1530[0] == "<"
        ? local.iter_1529.tape_ptr - local.code_1530[1] :
      local.code_1530[0] == ">"
        ? local.iter_1529.tape_ptr + local.code_1530[1]
        : local.iter_1529.tape_ptr)

    code_ptr = 2 + (
      local.code_1530[0] == "["
        ? local.iter_1529.tape[local.iter_1529.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1529.code_ptr)] : local.iter_1529.code_ptr :
      local.code_1530[0] == "]"
        ? local.iter_1529.tape[local.iter_1529.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1529.code_ptr)] : local.iter_1529.code_ptr
        : local.iter_1529.code_ptr)

    steps_taken = 1 + local.iter_1529.steps_taken
  }
}

locals {
  code_1531 = (try(local.iter_1530.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1530.code_ptr, local.iter_1530.code_ptr + 2)
    : [null])

  input_1531 = (local.code_1531[0] == ","
    ? substr(local.input_1530, local.code_1531[1], -1)
    : local.input_1530)

  iter_1531 = try(local.iter_1530.code_ptr >= length(var.code), true) ? local.iter_1530 : {
    output = (local.code_1531[0] == "."
      ? "${local.iter_1530.output}${join("", [for _ in range(local.code_1531[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1530.tape[local.iter_1530.tape_ptr]))])}"
      : local.iter_1530.output)
    
    tape = (
      local.code_1531[0] == "+"
        ? [for i, b in local.iter_1530.tape : (i == local.iter_1530.tape_ptr ? (b + local.code_1531[1]) % 256 : b)] :
      local.code_1531[0] == "-"
        ? [for i, b in local.iter_1530.tape : (i == local.iter_1530.tape_ptr ? (b - local.code_1531[1] + 256) % 256 : b)] :
      local.code_1531[0] == ","
        ? [for i, b in local.iter_1530.tape : (i == local.iter_1530.tape_ptr ? local.ascii_lookup[substr(local.input_1531, 0, 1)] : b)]
        : local.iter_1530.tape)

    tape_ptr = (
      local.code_1531[0] == "<"
        ? local.iter_1530.tape_ptr - local.code_1531[1] :
      local.code_1531[0] == ">"
        ? local.iter_1530.tape_ptr + local.code_1531[1]
        : local.iter_1530.tape_ptr)

    code_ptr = 2 + (
      local.code_1531[0] == "["
        ? local.iter_1530.tape[local.iter_1530.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1530.code_ptr)] : local.iter_1530.code_ptr :
      local.code_1531[0] == "]"
        ? local.iter_1530.tape[local.iter_1530.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1530.code_ptr)] : local.iter_1530.code_ptr
        : local.iter_1530.code_ptr)

    steps_taken = 1 + local.iter_1530.steps_taken
  }
}

locals {
  code_1532 = (try(local.iter_1531.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1531.code_ptr, local.iter_1531.code_ptr + 2)
    : [null])

  input_1532 = (local.code_1532[0] == ","
    ? substr(local.input_1531, local.code_1532[1], -1)
    : local.input_1531)

  iter_1532 = try(local.iter_1531.code_ptr >= length(var.code), true) ? local.iter_1531 : {
    output = (local.code_1532[0] == "."
      ? "${local.iter_1531.output}${join("", [for _ in range(local.code_1532[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1531.tape[local.iter_1531.tape_ptr]))])}"
      : local.iter_1531.output)
    
    tape = (
      local.code_1532[0] == "+"
        ? [for i, b in local.iter_1531.tape : (i == local.iter_1531.tape_ptr ? (b + local.code_1532[1]) % 256 : b)] :
      local.code_1532[0] == "-"
        ? [for i, b in local.iter_1531.tape : (i == local.iter_1531.tape_ptr ? (b - local.code_1532[1] + 256) % 256 : b)] :
      local.code_1532[0] == ","
        ? [for i, b in local.iter_1531.tape : (i == local.iter_1531.tape_ptr ? local.ascii_lookup[substr(local.input_1532, 0, 1)] : b)]
        : local.iter_1531.tape)

    tape_ptr = (
      local.code_1532[0] == "<"
        ? local.iter_1531.tape_ptr - local.code_1532[1] :
      local.code_1532[0] == ">"
        ? local.iter_1531.tape_ptr + local.code_1532[1]
        : local.iter_1531.tape_ptr)

    code_ptr = 2 + (
      local.code_1532[0] == "["
        ? local.iter_1531.tape[local.iter_1531.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1531.code_ptr)] : local.iter_1531.code_ptr :
      local.code_1532[0] == "]"
        ? local.iter_1531.tape[local.iter_1531.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1531.code_ptr)] : local.iter_1531.code_ptr
        : local.iter_1531.code_ptr)

    steps_taken = 1 + local.iter_1531.steps_taken
  }
}

locals {
  code_1533 = (try(local.iter_1532.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1532.code_ptr, local.iter_1532.code_ptr + 2)
    : [null])

  input_1533 = (local.code_1533[0] == ","
    ? substr(local.input_1532, local.code_1533[1], -1)
    : local.input_1532)

  iter_1533 = try(local.iter_1532.code_ptr >= length(var.code), true) ? local.iter_1532 : {
    output = (local.code_1533[0] == "."
      ? "${local.iter_1532.output}${join("", [for _ in range(local.code_1533[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1532.tape[local.iter_1532.tape_ptr]))])}"
      : local.iter_1532.output)
    
    tape = (
      local.code_1533[0] == "+"
        ? [for i, b in local.iter_1532.tape : (i == local.iter_1532.tape_ptr ? (b + local.code_1533[1]) % 256 : b)] :
      local.code_1533[0] == "-"
        ? [for i, b in local.iter_1532.tape : (i == local.iter_1532.tape_ptr ? (b - local.code_1533[1] + 256) % 256 : b)] :
      local.code_1533[0] == ","
        ? [for i, b in local.iter_1532.tape : (i == local.iter_1532.tape_ptr ? local.ascii_lookup[substr(local.input_1533, 0, 1)] : b)]
        : local.iter_1532.tape)

    tape_ptr = (
      local.code_1533[0] == "<"
        ? local.iter_1532.tape_ptr - local.code_1533[1] :
      local.code_1533[0] == ">"
        ? local.iter_1532.tape_ptr + local.code_1533[1]
        : local.iter_1532.tape_ptr)

    code_ptr = 2 + (
      local.code_1533[0] == "["
        ? local.iter_1532.tape[local.iter_1532.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1532.code_ptr)] : local.iter_1532.code_ptr :
      local.code_1533[0] == "]"
        ? local.iter_1532.tape[local.iter_1532.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1532.code_ptr)] : local.iter_1532.code_ptr
        : local.iter_1532.code_ptr)

    steps_taken = 1 + local.iter_1532.steps_taken
  }
}

locals {
  code_1534 = (try(local.iter_1533.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1533.code_ptr, local.iter_1533.code_ptr + 2)
    : [null])

  input_1534 = (local.code_1534[0] == ","
    ? substr(local.input_1533, local.code_1534[1], -1)
    : local.input_1533)

  iter_1534 = try(local.iter_1533.code_ptr >= length(var.code), true) ? local.iter_1533 : {
    output = (local.code_1534[0] == "."
      ? "${local.iter_1533.output}${join("", [for _ in range(local.code_1534[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1533.tape[local.iter_1533.tape_ptr]))])}"
      : local.iter_1533.output)
    
    tape = (
      local.code_1534[0] == "+"
        ? [for i, b in local.iter_1533.tape : (i == local.iter_1533.tape_ptr ? (b + local.code_1534[1]) % 256 : b)] :
      local.code_1534[0] == "-"
        ? [for i, b in local.iter_1533.tape : (i == local.iter_1533.tape_ptr ? (b - local.code_1534[1] + 256) % 256 : b)] :
      local.code_1534[0] == ","
        ? [for i, b in local.iter_1533.tape : (i == local.iter_1533.tape_ptr ? local.ascii_lookup[substr(local.input_1534, 0, 1)] : b)]
        : local.iter_1533.tape)

    tape_ptr = (
      local.code_1534[0] == "<"
        ? local.iter_1533.tape_ptr - local.code_1534[1] :
      local.code_1534[0] == ">"
        ? local.iter_1533.tape_ptr + local.code_1534[1]
        : local.iter_1533.tape_ptr)

    code_ptr = 2 + (
      local.code_1534[0] == "["
        ? local.iter_1533.tape[local.iter_1533.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1533.code_ptr)] : local.iter_1533.code_ptr :
      local.code_1534[0] == "]"
        ? local.iter_1533.tape[local.iter_1533.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1533.code_ptr)] : local.iter_1533.code_ptr
        : local.iter_1533.code_ptr)

    steps_taken = 1 + local.iter_1533.steps_taken
  }
}

locals {
  code_1535 = (try(local.iter_1534.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1534.code_ptr, local.iter_1534.code_ptr + 2)
    : [null])

  input_1535 = (local.code_1535[0] == ","
    ? substr(local.input_1534, local.code_1535[1], -1)
    : local.input_1534)

  iter_1535 = try(local.iter_1534.code_ptr >= length(var.code), true) ? local.iter_1534 : {
    output = (local.code_1535[0] == "."
      ? "${local.iter_1534.output}${join("", [for _ in range(local.code_1535[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1534.tape[local.iter_1534.tape_ptr]))])}"
      : local.iter_1534.output)
    
    tape = (
      local.code_1535[0] == "+"
        ? [for i, b in local.iter_1534.tape : (i == local.iter_1534.tape_ptr ? (b + local.code_1535[1]) % 256 : b)] :
      local.code_1535[0] == "-"
        ? [for i, b in local.iter_1534.tape : (i == local.iter_1534.tape_ptr ? (b - local.code_1535[1] + 256) % 256 : b)] :
      local.code_1535[0] == ","
        ? [for i, b in local.iter_1534.tape : (i == local.iter_1534.tape_ptr ? local.ascii_lookup[substr(local.input_1535, 0, 1)] : b)]
        : local.iter_1534.tape)

    tape_ptr = (
      local.code_1535[0] == "<"
        ? local.iter_1534.tape_ptr - local.code_1535[1] :
      local.code_1535[0] == ">"
        ? local.iter_1534.tape_ptr + local.code_1535[1]
        : local.iter_1534.tape_ptr)

    code_ptr = 2 + (
      local.code_1535[0] == "["
        ? local.iter_1534.tape[local.iter_1534.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1534.code_ptr)] : local.iter_1534.code_ptr :
      local.code_1535[0] == "]"
        ? local.iter_1534.tape[local.iter_1534.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1534.code_ptr)] : local.iter_1534.code_ptr
        : local.iter_1534.code_ptr)

    steps_taken = 1 + local.iter_1534.steps_taken
  }
}

locals {
  code_1536 = (try(local.iter_1535.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1535.code_ptr, local.iter_1535.code_ptr + 2)
    : [null])

  input_1536 = (local.code_1536[0] == ","
    ? substr(local.input_1535, local.code_1536[1], -1)
    : local.input_1535)

  iter_1536 = try(local.iter_1535.code_ptr >= length(var.code), true) ? local.iter_1535 : {
    output = (local.code_1536[0] == "."
      ? "${local.iter_1535.output}${join("", [for _ in range(local.code_1536[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1535.tape[local.iter_1535.tape_ptr]))])}"
      : local.iter_1535.output)
    
    tape = (
      local.code_1536[0] == "+"
        ? [for i, b in local.iter_1535.tape : (i == local.iter_1535.tape_ptr ? (b + local.code_1536[1]) % 256 : b)] :
      local.code_1536[0] == "-"
        ? [for i, b in local.iter_1535.tape : (i == local.iter_1535.tape_ptr ? (b - local.code_1536[1] + 256) % 256 : b)] :
      local.code_1536[0] == ","
        ? [for i, b in local.iter_1535.tape : (i == local.iter_1535.tape_ptr ? local.ascii_lookup[substr(local.input_1536, 0, 1)] : b)]
        : local.iter_1535.tape)

    tape_ptr = (
      local.code_1536[0] == "<"
        ? local.iter_1535.tape_ptr - local.code_1536[1] :
      local.code_1536[0] == ">"
        ? local.iter_1535.tape_ptr + local.code_1536[1]
        : local.iter_1535.tape_ptr)

    code_ptr = 2 + (
      local.code_1536[0] == "["
        ? local.iter_1535.tape[local.iter_1535.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1535.code_ptr)] : local.iter_1535.code_ptr :
      local.code_1536[0] == "]"
        ? local.iter_1535.tape[local.iter_1535.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1535.code_ptr)] : local.iter_1535.code_ptr
        : local.iter_1535.code_ptr)

    steps_taken = 1 + local.iter_1535.steps_taken
  }
}

locals {
  code_1537 = (try(local.iter_1536.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1536.code_ptr, local.iter_1536.code_ptr + 2)
    : [null])

  input_1537 = (local.code_1537[0] == ","
    ? substr(local.input_1536, local.code_1537[1], -1)
    : local.input_1536)

  iter_1537 = try(local.iter_1536.code_ptr >= length(var.code), true) ? local.iter_1536 : {
    output = (local.code_1537[0] == "."
      ? "${local.iter_1536.output}${join("", [for _ in range(local.code_1537[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1536.tape[local.iter_1536.tape_ptr]))])}"
      : local.iter_1536.output)
    
    tape = (
      local.code_1537[0] == "+"
        ? [for i, b in local.iter_1536.tape : (i == local.iter_1536.tape_ptr ? (b + local.code_1537[1]) % 256 : b)] :
      local.code_1537[0] == "-"
        ? [for i, b in local.iter_1536.tape : (i == local.iter_1536.tape_ptr ? (b - local.code_1537[1] + 256) % 256 : b)] :
      local.code_1537[0] == ","
        ? [for i, b in local.iter_1536.tape : (i == local.iter_1536.tape_ptr ? local.ascii_lookup[substr(local.input_1537, 0, 1)] : b)]
        : local.iter_1536.tape)

    tape_ptr = (
      local.code_1537[0] == "<"
        ? local.iter_1536.tape_ptr - local.code_1537[1] :
      local.code_1537[0] == ">"
        ? local.iter_1536.tape_ptr + local.code_1537[1]
        : local.iter_1536.tape_ptr)

    code_ptr = 2 + (
      local.code_1537[0] == "["
        ? local.iter_1536.tape[local.iter_1536.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1536.code_ptr)] : local.iter_1536.code_ptr :
      local.code_1537[0] == "]"
        ? local.iter_1536.tape[local.iter_1536.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1536.code_ptr)] : local.iter_1536.code_ptr
        : local.iter_1536.code_ptr)

    steps_taken = 1 + local.iter_1536.steps_taken
  }
}

locals {
  code_1538 = (try(local.iter_1537.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1537.code_ptr, local.iter_1537.code_ptr + 2)
    : [null])

  input_1538 = (local.code_1538[0] == ","
    ? substr(local.input_1537, local.code_1538[1], -1)
    : local.input_1537)

  iter_1538 = try(local.iter_1537.code_ptr >= length(var.code), true) ? local.iter_1537 : {
    output = (local.code_1538[0] == "."
      ? "${local.iter_1537.output}${join("", [for _ in range(local.code_1538[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1537.tape[local.iter_1537.tape_ptr]))])}"
      : local.iter_1537.output)
    
    tape = (
      local.code_1538[0] == "+"
        ? [for i, b in local.iter_1537.tape : (i == local.iter_1537.tape_ptr ? (b + local.code_1538[1]) % 256 : b)] :
      local.code_1538[0] == "-"
        ? [for i, b in local.iter_1537.tape : (i == local.iter_1537.tape_ptr ? (b - local.code_1538[1] + 256) % 256 : b)] :
      local.code_1538[0] == ","
        ? [for i, b in local.iter_1537.tape : (i == local.iter_1537.tape_ptr ? local.ascii_lookup[substr(local.input_1538, 0, 1)] : b)]
        : local.iter_1537.tape)

    tape_ptr = (
      local.code_1538[0] == "<"
        ? local.iter_1537.tape_ptr - local.code_1538[1] :
      local.code_1538[0] == ">"
        ? local.iter_1537.tape_ptr + local.code_1538[1]
        : local.iter_1537.tape_ptr)

    code_ptr = 2 + (
      local.code_1538[0] == "["
        ? local.iter_1537.tape[local.iter_1537.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1537.code_ptr)] : local.iter_1537.code_ptr :
      local.code_1538[0] == "]"
        ? local.iter_1537.tape[local.iter_1537.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1537.code_ptr)] : local.iter_1537.code_ptr
        : local.iter_1537.code_ptr)

    steps_taken = 1 + local.iter_1537.steps_taken
  }
}

locals {
  code_1539 = (try(local.iter_1538.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1538.code_ptr, local.iter_1538.code_ptr + 2)
    : [null])

  input_1539 = (local.code_1539[0] == ","
    ? substr(local.input_1538, local.code_1539[1], -1)
    : local.input_1538)

  iter_1539 = try(local.iter_1538.code_ptr >= length(var.code), true) ? local.iter_1538 : {
    output = (local.code_1539[0] == "."
      ? "${local.iter_1538.output}${join("", [for _ in range(local.code_1539[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1538.tape[local.iter_1538.tape_ptr]))])}"
      : local.iter_1538.output)
    
    tape = (
      local.code_1539[0] == "+"
        ? [for i, b in local.iter_1538.tape : (i == local.iter_1538.tape_ptr ? (b + local.code_1539[1]) % 256 : b)] :
      local.code_1539[0] == "-"
        ? [for i, b in local.iter_1538.tape : (i == local.iter_1538.tape_ptr ? (b - local.code_1539[1] + 256) % 256 : b)] :
      local.code_1539[0] == ","
        ? [for i, b in local.iter_1538.tape : (i == local.iter_1538.tape_ptr ? local.ascii_lookup[substr(local.input_1539, 0, 1)] : b)]
        : local.iter_1538.tape)

    tape_ptr = (
      local.code_1539[0] == "<"
        ? local.iter_1538.tape_ptr - local.code_1539[1] :
      local.code_1539[0] == ">"
        ? local.iter_1538.tape_ptr + local.code_1539[1]
        : local.iter_1538.tape_ptr)

    code_ptr = 2 + (
      local.code_1539[0] == "["
        ? local.iter_1538.tape[local.iter_1538.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1538.code_ptr)] : local.iter_1538.code_ptr :
      local.code_1539[0] == "]"
        ? local.iter_1538.tape[local.iter_1538.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1538.code_ptr)] : local.iter_1538.code_ptr
        : local.iter_1538.code_ptr)

    steps_taken = 1 + local.iter_1538.steps_taken
  }
}

locals {
  code_1540 = (try(local.iter_1539.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1539.code_ptr, local.iter_1539.code_ptr + 2)
    : [null])

  input_1540 = (local.code_1540[0] == ","
    ? substr(local.input_1539, local.code_1540[1], -1)
    : local.input_1539)

  iter_1540 = try(local.iter_1539.code_ptr >= length(var.code), true) ? local.iter_1539 : {
    output = (local.code_1540[0] == "."
      ? "${local.iter_1539.output}${join("", [for _ in range(local.code_1540[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1539.tape[local.iter_1539.tape_ptr]))])}"
      : local.iter_1539.output)
    
    tape = (
      local.code_1540[0] == "+"
        ? [for i, b in local.iter_1539.tape : (i == local.iter_1539.tape_ptr ? (b + local.code_1540[1]) % 256 : b)] :
      local.code_1540[0] == "-"
        ? [for i, b in local.iter_1539.tape : (i == local.iter_1539.tape_ptr ? (b - local.code_1540[1] + 256) % 256 : b)] :
      local.code_1540[0] == ","
        ? [for i, b in local.iter_1539.tape : (i == local.iter_1539.tape_ptr ? local.ascii_lookup[substr(local.input_1540, 0, 1)] : b)]
        : local.iter_1539.tape)

    tape_ptr = (
      local.code_1540[0] == "<"
        ? local.iter_1539.tape_ptr - local.code_1540[1] :
      local.code_1540[0] == ">"
        ? local.iter_1539.tape_ptr + local.code_1540[1]
        : local.iter_1539.tape_ptr)

    code_ptr = 2 + (
      local.code_1540[0] == "["
        ? local.iter_1539.tape[local.iter_1539.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1539.code_ptr)] : local.iter_1539.code_ptr :
      local.code_1540[0] == "]"
        ? local.iter_1539.tape[local.iter_1539.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1539.code_ptr)] : local.iter_1539.code_ptr
        : local.iter_1539.code_ptr)

    steps_taken = 1 + local.iter_1539.steps_taken
  }
}

locals {
  code_1541 = (try(local.iter_1540.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1540.code_ptr, local.iter_1540.code_ptr + 2)
    : [null])

  input_1541 = (local.code_1541[0] == ","
    ? substr(local.input_1540, local.code_1541[1], -1)
    : local.input_1540)

  iter_1541 = try(local.iter_1540.code_ptr >= length(var.code), true) ? local.iter_1540 : {
    output = (local.code_1541[0] == "."
      ? "${local.iter_1540.output}${join("", [for _ in range(local.code_1541[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1540.tape[local.iter_1540.tape_ptr]))])}"
      : local.iter_1540.output)
    
    tape = (
      local.code_1541[0] == "+"
        ? [for i, b in local.iter_1540.tape : (i == local.iter_1540.tape_ptr ? (b + local.code_1541[1]) % 256 : b)] :
      local.code_1541[0] == "-"
        ? [for i, b in local.iter_1540.tape : (i == local.iter_1540.tape_ptr ? (b - local.code_1541[1] + 256) % 256 : b)] :
      local.code_1541[0] == ","
        ? [for i, b in local.iter_1540.tape : (i == local.iter_1540.tape_ptr ? local.ascii_lookup[substr(local.input_1541, 0, 1)] : b)]
        : local.iter_1540.tape)

    tape_ptr = (
      local.code_1541[0] == "<"
        ? local.iter_1540.tape_ptr - local.code_1541[1] :
      local.code_1541[0] == ">"
        ? local.iter_1540.tape_ptr + local.code_1541[1]
        : local.iter_1540.tape_ptr)

    code_ptr = 2 + (
      local.code_1541[0] == "["
        ? local.iter_1540.tape[local.iter_1540.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1540.code_ptr)] : local.iter_1540.code_ptr :
      local.code_1541[0] == "]"
        ? local.iter_1540.tape[local.iter_1540.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1540.code_ptr)] : local.iter_1540.code_ptr
        : local.iter_1540.code_ptr)

    steps_taken = 1 + local.iter_1540.steps_taken
  }
}

locals {
  code_1542 = (try(local.iter_1541.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1541.code_ptr, local.iter_1541.code_ptr + 2)
    : [null])

  input_1542 = (local.code_1542[0] == ","
    ? substr(local.input_1541, local.code_1542[1], -1)
    : local.input_1541)

  iter_1542 = try(local.iter_1541.code_ptr >= length(var.code), true) ? local.iter_1541 : {
    output = (local.code_1542[0] == "."
      ? "${local.iter_1541.output}${join("", [for _ in range(local.code_1542[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1541.tape[local.iter_1541.tape_ptr]))])}"
      : local.iter_1541.output)
    
    tape = (
      local.code_1542[0] == "+"
        ? [for i, b in local.iter_1541.tape : (i == local.iter_1541.tape_ptr ? (b + local.code_1542[1]) % 256 : b)] :
      local.code_1542[0] == "-"
        ? [for i, b in local.iter_1541.tape : (i == local.iter_1541.tape_ptr ? (b - local.code_1542[1] + 256) % 256 : b)] :
      local.code_1542[0] == ","
        ? [for i, b in local.iter_1541.tape : (i == local.iter_1541.tape_ptr ? local.ascii_lookup[substr(local.input_1542, 0, 1)] : b)]
        : local.iter_1541.tape)

    tape_ptr = (
      local.code_1542[0] == "<"
        ? local.iter_1541.tape_ptr - local.code_1542[1] :
      local.code_1542[0] == ">"
        ? local.iter_1541.tape_ptr + local.code_1542[1]
        : local.iter_1541.tape_ptr)

    code_ptr = 2 + (
      local.code_1542[0] == "["
        ? local.iter_1541.tape[local.iter_1541.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1541.code_ptr)] : local.iter_1541.code_ptr :
      local.code_1542[0] == "]"
        ? local.iter_1541.tape[local.iter_1541.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1541.code_ptr)] : local.iter_1541.code_ptr
        : local.iter_1541.code_ptr)

    steps_taken = 1 + local.iter_1541.steps_taken
  }
}

locals {
  code_1543 = (try(local.iter_1542.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1542.code_ptr, local.iter_1542.code_ptr + 2)
    : [null])

  input_1543 = (local.code_1543[0] == ","
    ? substr(local.input_1542, local.code_1543[1], -1)
    : local.input_1542)

  iter_1543 = try(local.iter_1542.code_ptr >= length(var.code), true) ? local.iter_1542 : {
    output = (local.code_1543[0] == "."
      ? "${local.iter_1542.output}${join("", [for _ in range(local.code_1543[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1542.tape[local.iter_1542.tape_ptr]))])}"
      : local.iter_1542.output)
    
    tape = (
      local.code_1543[0] == "+"
        ? [for i, b in local.iter_1542.tape : (i == local.iter_1542.tape_ptr ? (b + local.code_1543[1]) % 256 : b)] :
      local.code_1543[0] == "-"
        ? [for i, b in local.iter_1542.tape : (i == local.iter_1542.tape_ptr ? (b - local.code_1543[1] + 256) % 256 : b)] :
      local.code_1543[0] == ","
        ? [for i, b in local.iter_1542.tape : (i == local.iter_1542.tape_ptr ? local.ascii_lookup[substr(local.input_1543, 0, 1)] : b)]
        : local.iter_1542.tape)

    tape_ptr = (
      local.code_1543[0] == "<"
        ? local.iter_1542.tape_ptr - local.code_1543[1] :
      local.code_1543[0] == ">"
        ? local.iter_1542.tape_ptr + local.code_1543[1]
        : local.iter_1542.tape_ptr)

    code_ptr = 2 + (
      local.code_1543[0] == "["
        ? local.iter_1542.tape[local.iter_1542.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1542.code_ptr)] : local.iter_1542.code_ptr :
      local.code_1543[0] == "]"
        ? local.iter_1542.tape[local.iter_1542.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1542.code_ptr)] : local.iter_1542.code_ptr
        : local.iter_1542.code_ptr)

    steps_taken = 1 + local.iter_1542.steps_taken
  }
}

locals {
  code_1544 = (try(local.iter_1543.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1543.code_ptr, local.iter_1543.code_ptr + 2)
    : [null])

  input_1544 = (local.code_1544[0] == ","
    ? substr(local.input_1543, local.code_1544[1], -1)
    : local.input_1543)

  iter_1544 = try(local.iter_1543.code_ptr >= length(var.code), true) ? local.iter_1543 : {
    output = (local.code_1544[0] == "."
      ? "${local.iter_1543.output}${join("", [for _ in range(local.code_1544[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1543.tape[local.iter_1543.tape_ptr]))])}"
      : local.iter_1543.output)
    
    tape = (
      local.code_1544[0] == "+"
        ? [for i, b in local.iter_1543.tape : (i == local.iter_1543.tape_ptr ? (b + local.code_1544[1]) % 256 : b)] :
      local.code_1544[0] == "-"
        ? [for i, b in local.iter_1543.tape : (i == local.iter_1543.tape_ptr ? (b - local.code_1544[1] + 256) % 256 : b)] :
      local.code_1544[0] == ","
        ? [for i, b in local.iter_1543.tape : (i == local.iter_1543.tape_ptr ? local.ascii_lookup[substr(local.input_1544, 0, 1)] : b)]
        : local.iter_1543.tape)

    tape_ptr = (
      local.code_1544[0] == "<"
        ? local.iter_1543.tape_ptr - local.code_1544[1] :
      local.code_1544[0] == ">"
        ? local.iter_1543.tape_ptr + local.code_1544[1]
        : local.iter_1543.tape_ptr)

    code_ptr = 2 + (
      local.code_1544[0] == "["
        ? local.iter_1543.tape[local.iter_1543.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1543.code_ptr)] : local.iter_1543.code_ptr :
      local.code_1544[0] == "]"
        ? local.iter_1543.tape[local.iter_1543.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1543.code_ptr)] : local.iter_1543.code_ptr
        : local.iter_1543.code_ptr)

    steps_taken = 1 + local.iter_1543.steps_taken
  }
}

locals {
  code_1545 = (try(local.iter_1544.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1544.code_ptr, local.iter_1544.code_ptr + 2)
    : [null])

  input_1545 = (local.code_1545[0] == ","
    ? substr(local.input_1544, local.code_1545[1], -1)
    : local.input_1544)

  iter_1545 = try(local.iter_1544.code_ptr >= length(var.code), true) ? local.iter_1544 : {
    output = (local.code_1545[0] == "."
      ? "${local.iter_1544.output}${join("", [for _ in range(local.code_1545[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1544.tape[local.iter_1544.tape_ptr]))])}"
      : local.iter_1544.output)
    
    tape = (
      local.code_1545[0] == "+"
        ? [for i, b in local.iter_1544.tape : (i == local.iter_1544.tape_ptr ? (b + local.code_1545[1]) % 256 : b)] :
      local.code_1545[0] == "-"
        ? [for i, b in local.iter_1544.tape : (i == local.iter_1544.tape_ptr ? (b - local.code_1545[1] + 256) % 256 : b)] :
      local.code_1545[0] == ","
        ? [for i, b in local.iter_1544.tape : (i == local.iter_1544.tape_ptr ? local.ascii_lookup[substr(local.input_1545, 0, 1)] : b)]
        : local.iter_1544.tape)

    tape_ptr = (
      local.code_1545[0] == "<"
        ? local.iter_1544.tape_ptr - local.code_1545[1] :
      local.code_1545[0] == ">"
        ? local.iter_1544.tape_ptr + local.code_1545[1]
        : local.iter_1544.tape_ptr)

    code_ptr = 2 + (
      local.code_1545[0] == "["
        ? local.iter_1544.tape[local.iter_1544.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1544.code_ptr)] : local.iter_1544.code_ptr :
      local.code_1545[0] == "]"
        ? local.iter_1544.tape[local.iter_1544.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1544.code_ptr)] : local.iter_1544.code_ptr
        : local.iter_1544.code_ptr)

    steps_taken = 1 + local.iter_1544.steps_taken
  }
}

locals {
  code_1546 = (try(local.iter_1545.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1545.code_ptr, local.iter_1545.code_ptr + 2)
    : [null])

  input_1546 = (local.code_1546[0] == ","
    ? substr(local.input_1545, local.code_1546[1], -1)
    : local.input_1545)

  iter_1546 = try(local.iter_1545.code_ptr >= length(var.code), true) ? local.iter_1545 : {
    output = (local.code_1546[0] == "."
      ? "${local.iter_1545.output}${join("", [for _ in range(local.code_1546[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1545.tape[local.iter_1545.tape_ptr]))])}"
      : local.iter_1545.output)
    
    tape = (
      local.code_1546[0] == "+"
        ? [for i, b in local.iter_1545.tape : (i == local.iter_1545.tape_ptr ? (b + local.code_1546[1]) % 256 : b)] :
      local.code_1546[0] == "-"
        ? [for i, b in local.iter_1545.tape : (i == local.iter_1545.tape_ptr ? (b - local.code_1546[1] + 256) % 256 : b)] :
      local.code_1546[0] == ","
        ? [for i, b in local.iter_1545.tape : (i == local.iter_1545.tape_ptr ? local.ascii_lookup[substr(local.input_1546, 0, 1)] : b)]
        : local.iter_1545.tape)

    tape_ptr = (
      local.code_1546[0] == "<"
        ? local.iter_1545.tape_ptr - local.code_1546[1] :
      local.code_1546[0] == ">"
        ? local.iter_1545.tape_ptr + local.code_1546[1]
        : local.iter_1545.tape_ptr)

    code_ptr = 2 + (
      local.code_1546[0] == "["
        ? local.iter_1545.tape[local.iter_1545.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1545.code_ptr)] : local.iter_1545.code_ptr :
      local.code_1546[0] == "]"
        ? local.iter_1545.tape[local.iter_1545.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1545.code_ptr)] : local.iter_1545.code_ptr
        : local.iter_1545.code_ptr)

    steps_taken = 1 + local.iter_1545.steps_taken
  }
}

locals {
  code_1547 = (try(local.iter_1546.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1546.code_ptr, local.iter_1546.code_ptr + 2)
    : [null])

  input_1547 = (local.code_1547[0] == ","
    ? substr(local.input_1546, local.code_1547[1], -1)
    : local.input_1546)

  iter_1547 = try(local.iter_1546.code_ptr >= length(var.code), true) ? local.iter_1546 : {
    output = (local.code_1547[0] == "."
      ? "${local.iter_1546.output}${join("", [for _ in range(local.code_1547[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1546.tape[local.iter_1546.tape_ptr]))])}"
      : local.iter_1546.output)
    
    tape = (
      local.code_1547[0] == "+"
        ? [for i, b in local.iter_1546.tape : (i == local.iter_1546.tape_ptr ? (b + local.code_1547[1]) % 256 : b)] :
      local.code_1547[0] == "-"
        ? [for i, b in local.iter_1546.tape : (i == local.iter_1546.tape_ptr ? (b - local.code_1547[1] + 256) % 256 : b)] :
      local.code_1547[0] == ","
        ? [for i, b in local.iter_1546.tape : (i == local.iter_1546.tape_ptr ? local.ascii_lookup[substr(local.input_1547, 0, 1)] : b)]
        : local.iter_1546.tape)

    tape_ptr = (
      local.code_1547[0] == "<"
        ? local.iter_1546.tape_ptr - local.code_1547[1] :
      local.code_1547[0] == ">"
        ? local.iter_1546.tape_ptr + local.code_1547[1]
        : local.iter_1546.tape_ptr)

    code_ptr = 2 + (
      local.code_1547[0] == "["
        ? local.iter_1546.tape[local.iter_1546.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1546.code_ptr)] : local.iter_1546.code_ptr :
      local.code_1547[0] == "]"
        ? local.iter_1546.tape[local.iter_1546.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1546.code_ptr)] : local.iter_1546.code_ptr
        : local.iter_1546.code_ptr)

    steps_taken = 1 + local.iter_1546.steps_taken
  }
}

locals {
  code_1548 = (try(local.iter_1547.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1547.code_ptr, local.iter_1547.code_ptr + 2)
    : [null])

  input_1548 = (local.code_1548[0] == ","
    ? substr(local.input_1547, local.code_1548[1], -1)
    : local.input_1547)

  iter_1548 = try(local.iter_1547.code_ptr >= length(var.code), true) ? local.iter_1547 : {
    output = (local.code_1548[0] == "."
      ? "${local.iter_1547.output}${join("", [for _ in range(local.code_1548[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1547.tape[local.iter_1547.tape_ptr]))])}"
      : local.iter_1547.output)
    
    tape = (
      local.code_1548[0] == "+"
        ? [for i, b in local.iter_1547.tape : (i == local.iter_1547.tape_ptr ? (b + local.code_1548[1]) % 256 : b)] :
      local.code_1548[0] == "-"
        ? [for i, b in local.iter_1547.tape : (i == local.iter_1547.tape_ptr ? (b - local.code_1548[1] + 256) % 256 : b)] :
      local.code_1548[0] == ","
        ? [for i, b in local.iter_1547.tape : (i == local.iter_1547.tape_ptr ? local.ascii_lookup[substr(local.input_1548, 0, 1)] : b)]
        : local.iter_1547.tape)

    tape_ptr = (
      local.code_1548[0] == "<"
        ? local.iter_1547.tape_ptr - local.code_1548[1] :
      local.code_1548[0] == ">"
        ? local.iter_1547.tape_ptr + local.code_1548[1]
        : local.iter_1547.tape_ptr)

    code_ptr = 2 + (
      local.code_1548[0] == "["
        ? local.iter_1547.tape[local.iter_1547.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1547.code_ptr)] : local.iter_1547.code_ptr :
      local.code_1548[0] == "]"
        ? local.iter_1547.tape[local.iter_1547.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1547.code_ptr)] : local.iter_1547.code_ptr
        : local.iter_1547.code_ptr)

    steps_taken = 1 + local.iter_1547.steps_taken
  }
}

locals {
  code_1549 = (try(local.iter_1548.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1548.code_ptr, local.iter_1548.code_ptr + 2)
    : [null])

  input_1549 = (local.code_1549[0] == ","
    ? substr(local.input_1548, local.code_1549[1], -1)
    : local.input_1548)

  iter_1549 = try(local.iter_1548.code_ptr >= length(var.code), true) ? local.iter_1548 : {
    output = (local.code_1549[0] == "."
      ? "${local.iter_1548.output}${join("", [for _ in range(local.code_1549[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1548.tape[local.iter_1548.tape_ptr]))])}"
      : local.iter_1548.output)
    
    tape = (
      local.code_1549[0] == "+"
        ? [for i, b in local.iter_1548.tape : (i == local.iter_1548.tape_ptr ? (b + local.code_1549[1]) % 256 : b)] :
      local.code_1549[0] == "-"
        ? [for i, b in local.iter_1548.tape : (i == local.iter_1548.tape_ptr ? (b - local.code_1549[1] + 256) % 256 : b)] :
      local.code_1549[0] == ","
        ? [for i, b in local.iter_1548.tape : (i == local.iter_1548.tape_ptr ? local.ascii_lookup[substr(local.input_1549, 0, 1)] : b)]
        : local.iter_1548.tape)

    tape_ptr = (
      local.code_1549[0] == "<"
        ? local.iter_1548.tape_ptr - local.code_1549[1] :
      local.code_1549[0] == ">"
        ? local.iter_1548.tape_ptr + local.code_1549[1]
        : local.iter_1548.tape_ptr)

    code_ptr = 2 + (
      local.code_1549[0] == "["
        ? local.iter_1548.tape[local.iter_1548.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1548.code_ptr)] : local.iter_1548.code_ptr :
      local.code_1549[0] == "]"
        ? local.iter_1548.tape[local.iter_1548.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1548.code_ptr)] : local.iter_1548.code_ptr
        : local.iter_1548.code_ptr)

    steps_taken = 1 + local.iter_1548.steps_taken
  }
}

locals {
  code_1550 = (try(local.iter_1549.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1549.code_ptr, local.iter_1549.code_ptr + 2)
    : [null])

  input_1550 = (local.code_1550[0] == ","
    ? substr(local.input_1549, local.code_1550[1], -1)
    : local.input_1549)

  iter_1550 = try(local.iter_1549.code_ptr >= length(var.code), true) ? local.iter_1549 : {
    output = (local.code_1550[0] == "."
      ? "${local.iter_1549.output}${join("", [for _ in range(local.code_1550[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1549.tape[local.iter_1549.tape_ptr]))])}"
      : local.iter_1549.output)
    
    tape = (
      local.code_1550[0] == "+"
        ? [for i, b in local.iter_1549.tape : (i == local.iter_1549.tape_ptr ? (b + local.code_1550[1]) % 256 : b)] :
      local.code_1550[0] == "-"
        ? [for i, b in local.iter_1549.tape : (i == local.iter_1549.tape_ptr ? (b - local.code_1550[1] + 256) % 256 : b)] :
      local.code_1550[0] == ","
        ? [for i, b in local.iter_1549.tape : (i == local.iter_1549.tape_ptr ? local.ascii_lookup[substr(local.input_1550, 0, 1)] : b)]
        : local.iter_1549.tape)

    tape_ptr = (
      local.code_1550[0] == "<"
        ? local.iter_1549.tape_ptr - local.code_1550[1] :
      local.code_1550[0] == ">"
        ? local.iter_1549.tape_ptr + local.code_1550[1]
        : local.iter_1549.tape_ptr)

    code_ptr = 2 + (
      local.code_1550[0] == "["
        ? local.iter_1549.tape[local.iter_1549.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1549.code_ptr)] : local.iter_1549.code_ptr :
      local.code_1550[0] == "]"
        ? local.iter_1549.tape[local.iter_1549.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1549.code_ptr)] : local.iter_1549.code_ptr
        : local.iter_1549.code_ptr)

    steps_taken = 1 + local.iter_1549.steps_taken
  }
}

locals {
  code_1551 = (try(local.iter_1550.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1550.code_ptr, local.iter_1550.code_ptr + 2)
    : [null])

  input_1551 = (local.code_1551[0] == ","
    ? substr(local.input_1550, local.code_1551[1], -1)
    : local.input_1550)

  iter_1551 = try(local.iter_1550.code_ptr >= length(var.code), true) ? local.iter_1550 : {
    output = (local.code_1551[0] == "."
      ? "${local.iter_1550.output}${join("", [for _ in range(local.code_1551[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1550.tape[local.iter_1550.tape_ptr]))])}"
      : local.iter_1550.output)
    
    tape = (
      local.code_1551[0] == "+"
        ? [for i, b in local.iter_1550.tape : (i == local.iter_1550.tape_ptr ? (b + local.code_1551[1]) % 256 : b)] :
      local.code_1551[0] == "-"
        ? [for i, b in local.iter_1550.tape : (i == local.iter_1550.tape_ptr ? (b - local.code_1551[1] + 256) % 256 : b)] :
      local.code_1551[0] == ","
        ? [for i, b in local.iter_1550.tape : (i == local.iter_1550.tape_ptr ? local.ascii_lookup[substr(local.input_1551, 0, 1)] : b)]
        : local.iter_1550.tape)

    tape_ptr = (
      local.code_1551[0] == "<"
        ? local.iter_1550.tape_ptr - local.code_1551[1] :
      local.code_1551[0] == ">"
        ? local.iter_1550.tape_ptr + local.code_1551[1]
        : local.iter_1550.tape_ptr)

    code_ptr = 2 + (
      local.code_1551[0] == "["
        ? local.iter_1550.tape[local.iter_1550.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1550.code_ptr)] : local.iter_1550.code_ptr :
      local.code_1551[0] == "]"
        ? local.iter_1550.tape[local.iter_1550.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1550.code_ptr)] : local.iter_1550.code_ptr
        : local.iter_1550.code_ptr)

    steps_taken = 1 + local.iter_1550.steps_taken
  }
}

locals {
  code_1552 = (try(local.iter_1551.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1551.code_ptr, local.iter_1551.code_ptr + 2)
    : [null])

  input_1552 = (local.code_1552[0] == ","
    ? substr(local.input_1551, local.code_1552[1], -1)
    : local.input_1551)

  iter_1552 = try(local.iter_1551.code_ptr >= length(var.code), true) ? local.iter_1551 : {
    output = (local.code_1552[0] == "."
      ? "${local.iter_1551.output}${join("", [for _ in range(local.code_1552[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1551.tape[local.iter_1551.tape_ptr]))])}"
      : local.iter_1551.output)
    
    tape = (
      local.code_1552[0] == "+"
        ? [for i, b in local.iter_1551.tape : (i == local.iter_1551.tape_ptr ? (b + local.code_1552[1]) % 256 : b)] :
      local.code_1552[0] == "-"
        ? [for i, b in local.iter_1551.tape : (i == local.iter_1551.tape_ptr ? (b - local.code_1552[1] + 256) % 256 : b)] :
      local.code_1552[0] == ","
        ? [for i, b in local.iter_1551.tape : (i == local.iter_1551.tape_ptr ? local.ascii_lookup[substr(local.input_1552, 0, 1)] : b)]
        : local.iter_1551.tape)

    tape_ptr = (
      local.code_1552[0] == "<"
        ? local.iter_1551.tape_ptr - local.code_1552[1] :
      local.code_1552[0] == ">"
        ? local.iter_1551.tape_ptr + local.code_1552[1]
        : local.iter_1551.tape_ptr)

    code_ptr = 2 + (
      local.code_1552[0] == "["
        ? local.iter_1551.tape[local.iter_1551.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1551.code_ptr)] : local.iter_1551.code_ptr :
      local.code_1552[0] == "]"
        ? local.iter_1551.tape[local.iter_1551.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1551.code_ptr)] : local.iter_1551.code_ptr
        : local.iter_1551.code_ptr)

    steps_taken = 1 + local.iter_1551.steps_taken
  }
}

locals {
  code_1553 = (try(local.iter_1552.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1552.code_ptr, local.iter_1552.code_ptr + 2)
    : [null])

  input_1553 = (local.code_1553[0] == ","
    ? substr(local.input_1552, local.code_1553[1], -1)
    : local.input_1552)

  iter_1553 = try(local.iter_1552.code_ptr >= length(var.code), true) ? local.iter_1552 : {
    output = (local.code_1553[0] == "."
      ? "${local.iter_1552.output}${join("", [for _ in range(local.code_1553[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1552.tape[local.iter_1552.tape_ptr]))])}"
      : local.iter_1552.output)
    
    tape = (
      local.code_1553[0] == "+"
        ? [for i, b in local.iter_1552.tape : (i == local.iter_1552.tape_ptr ? (b + local.code_1553[1]) % 256 : b)] :
      local.code_1553[0] == "-"
        ? [for i, b in local.iter_1552.tape : (i == local.iter_1552.tape_ptr ? (b - local.code_1553[1] + 256) % 256 : b)] :
      local.code_1553[0] == ","
        ? [for i, b in local.iter_1552.tape : (i == local.iter_1552.tape_ptr ? local.ascii_lookup[substr(local.input_1553, 0, 1)] : b)]
        : local.iter_1552.tape)

    tape_ptr = (
      local.code_1553[0] == "<"
        ? local.iter_1552.tape_ptr - local.code_1553[1] :
      local.code_1553[0] == ">"
        ? local.iter_1552.tape_ptr + local.code_1553[1]
        : local.iter_1552.tape_ptr)

    code_ptr = 2 + (
      local.code_1553[0] == "["
        ? local.iter_1552.tape[local.iter_1552.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1552.code_ptr)] : local.iter_1552.code_ptr :
      local.code_1553[0] == "]"
        ? local.iter_1552.tape[local.iter_1552.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1552.code_ptr)] : local.iter_1552.code_ptr
        : local.iter_1552.code_ptr)

    steps_taken = 1 + local.iter_1552.steps_taken
  }
}

locals {
  code_1554 = (try(local.iter_1553.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1553.code_ptr, local.iter_1553.code_ptr + 2)
    : [null])

  input_1554 = (local.code_1554[0] == ","
    ? substr(local.input_1553, local.code_1554[1], -1)
    : local.input_1553)

  iter_1554 = try(local.iter_1553.code_ptr >= length(var.code), true) ? local.iter_1553 : {
    output = (local.code_1554[0] == "."
      ? "${local.iter_1553.output}${join("", [for _ in range(local.code_1554[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1553.tape[local.iter_1553.tape_ptr]))])}"
      : local.iter_1553.output)
    
    tape = (
      local.code_1554[0] == "+"
        ? [for i, b in local.iter_1553.tape : (i == local.iter_1553.tape_ptr ? (b + local.code_1554[1]) % 256 : b)] :
      local.code_1554[0] == "-"
        ? [for i, b in local.iter_1553.tape : (i == local.iter_1553.tape_ptr ? (b - local.code_1554[1] + 256) % 256 : b)] :
      local.code_1554[0] == ","
        ? [for i, b in local.iter_1553.tape : (i == local.iter_1553.tape_ptr ? local.ascii_lookup[substr(local.input_1554, 0, 1)] : b)]
        : local.iter_1553.tape)

    tape_ptr = (
      local.code_1554[0] == "<"
        ? local.iter_1553.tape_ptr - local.code_1554[1] :
      local.code_1554[0] == ">"
        ? local.iter_1553.tape_ptr + local.code_1554[1]
        : local.iter_1553.tape_ptr)

    code_ptr = 2 + (
      local.code_1554[0] == "["
        ? local.iter_1553.tape[local.iter_1553.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1553.code_ptr)] : local.iter_1553.code_ptr :
      local.code_1554[0] == "]"
        ? local.iter_1553.tape[local.iter_1553.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1553.code_ptr)] : local.iter_1553.code_ptr
        : local.iter_1553.code_ptr)

    steps_taken = 1 + local.iter_1553.steps_taken
  }
}

locals {
  code_1555 = (try(local.iter_1554.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1554.code_ptr, local.iter_1554.code_ptr + 2)
    : [null])

  input_1555 = (local.code_1555[0] == ","
    ? substr(local.input_1554, local.code_1555[1], -1)
    : local.input_1554)

  iter_1555 = try(local.iter_1554.code_ptr >= length(var.code), true) ? local.iter_1554 : {
    output = (local.code_1555[0] == "."
      ? "${local.iter_1554.output}${join("", [for _ in range(local.code_1555[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1554.tape[local.iter_1554.tape_ptr]))])}"
      : local.iter_1554.output)
    
    tape = (
      local.code_1555[0] == "+"
        ? [for i, b in local.iter_1554.tape : (i == local.iter_1554.tape_ptr ? (b + local.code_1555[1]) % 256 : b)] :
      local.code_1555[0] == "-"
        ? [for i, b in local.iter_1554.tape : (i == local.iter_1554.tape_ptr ? (b - local.code_1555[1] + 256) % 256 : b)] :
      local.code_1555[0] == ","
        ? [for i, b in local.iter_1554.tape : (i == local.iter_1554.tape_ptr ? local.ascii_lookup[substr(local.input_1555, 0, 1)] : b)]
        : local.iter_1554.tape)

    tape_ptr = (
      local.code_1555[0] == "<"
        ? local.iter_1554.tape_ptr - local.code_1555[1] :
      local.code_1555[0] == ">"
        ? local.iter_1554.tape_ptr + local.code_1555[1]
        : local.iter_1554.tape_ptr)

    code_ptr = 2 + (
      local.code_1555[0] == "["
        ? local.iter_1554.tape[local.iter_1554.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1554.code_ptr)] : local.iter_1554.code_ptr :
      local.code_1555[0] == "]"
        ? local.iter_1554.tape[local.iter_1554.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1554.code_ptr)] : local.iter_1554.code_ptr
        : local.iter_1554.code_ptr)

    steps_taken = 1 + local.iter_1554.steps_taken
  }
}

locals {
  code_1556 = (try(local.iter_1555.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1555.code_ptr, local.iter_1555.code_ptr + 2)
    : [null])

  input_1556 = (local.code_1556[0] == ","
    ? substr(local.input_1555, local.code_1556[1], -1)
    : local.input_1555)

  iter_1556 = try(local.iter_1555.code_ptr >= length(var.code), true) ? local.iter_1555 : {
    output = (local.code_1556[0] == "."
      ? "${local.iter_1555.output}${join("", [for _ in range(local.code_1556[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1555.tape[local.iter_1555.tape_ptr]))])}"
      : local.iter_1555.output)
    
    tape = (
      local.code_1556[0] == "+"
        ? [for i, b in local.iter_1555.tape : (i == local.iter_1555.tape_ptr ? (b + local.code_1556[1]) % 256 : b)] :
      local.code_1556[0] == "-"
        ? [for i, b in local.iter_1555.tape : (i == local.iter_1555.tape_ptr ? (b - local.code_1556[1] + 256) % 256 : b)] :
      local.code_1556[0] == ","
        ? [for i, b in local.iter_1555.tape : (i == local.iter_1555.tape_ptr ? local.ascii_lookup[substr(local.input_1556, 0, 1)] : b)]
        : local.iter_1555.tape)

    tape_ptr = (
      local.code_1556[0] == "<"
        ? local.iter_1555.tape_ptr - local.code_1556[1] :
      local.code_1556[0] == ">"
        ? local.iter_1555.tape_ptr + local.code_1556[1]
        : local.iter_1555.tape_ptr)

    code_ptr = 2 + (
      local.code_1556[0] == "["
        ? local.iter_1555.tape[local.iter_1555.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1555.code_ptr)] : local.iter_1555.code_ptr :
      local.code_1556[0] == "]"
        ? local.iter_1555.tape[local.iter_1555.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1555.code_ptr)] : local.iter_1555.code_ptr
        : local.iter_1555.code_ptr)

    steps_taken = 1 + local.iter_1555.steps_taken
  }
}

locals {
  code_1557 = (try(local.iter_1556.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1556.code_ptr, local.iter_1556.code_ptr + 2)
    : [null])

  input_1557 = (local.code_1557[0] == ","
    ? substr(local.input_1556, local.code_1557[1], -1)
    : local.input_1556)

  iter_1557 = try(local.iter_1556.code_ptr >= length(var.code), true) ? local.iter_1556 : {
    output = (local.code_1557[0] == "."
      ? "${local.iter_1556.output}${join("", [for _ in range(local.code_1557[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1556.tape[local.iter_1556.tape_ptr]))])}"
      : local.iter_1556.output)
    
    tape = (
      local.code_1557[0] == "+"
        ? [for i, b in local.iter_1556.tape : (i == local.iter_1556.tape_ptr ? (b + local.code_1557[1]) % 256 : b)] :
      local.code_1557[0] == "-"
        ? [for i, b in local.iter_1556.tape : (i == local.iter_1556.tape_ptr ? (b - local.code_1557[1] + 256) % 256 : b)] :
      local.code_1557[0] == ","
        ? [for i, b in local.iter_1556.tape : (i == local.iter_1556.tape_ptr ? local.ascii_lookup[substr(local.input_1557, 0, 1)] : b)]
        : local.iter_1556.tape)

    tape_ptr = (
      local.code_1557[0] == "<"
        ? local.iter_1556.tape_ptr - local.code_1557[1] :
      local.code_1557[0] == ">"
        ? local.iter_1556.tape_ptr + local.code_1557[1]
        : local.iter_1556.tape_ptr)

    code_ptr = 2 + (
      local.code_1557[0] == "["
        ? local.iter_1556.tape[local.iter_1556.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1556.code_ptr)] : local.iter_1556.code_ptr :
      local.code_1557[0] == "]"
        ? local.iter_1556.tape[local.iter_1556.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1556.code_ptr)] : local.iter_1556.code_ptr
        : local.iter_1556.code_ptr)

    steps_taken = 1 + local.iter_1556.steps_taken
  }
}

locals {
  code_1558 = (try(local.iter_1557.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1557.code_ptr, local.iter_1557.code_ptr + 2)
    : [null])

  input_1558 = (local.code_1558[0] == ","
    ? substr(local.input_1557, local.code_1558[1], -1)
    : local.input_1557)

  iter_1558 = try(local.iter_1557.code_ptr >= length(var.code), true) ? local.iter_1557 : {
    output = (local.code_1558[0] == "."
      ? "${local.iter_1557.output}${join("", [for _ in range(local.code_1558[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1557.tape[local.iter_1557.tape_ptr]))])}"
      : local.iter_1557.output)
    
    tape = (
      local.code_1558[0] == "+"
        ? [for i, b in local.iter_1557.tape : (i == local.iter_1557.tape_ptr ? (b + local.code_1558[1]) % 256 : b)] :
      local.code_1558[0] == "-"
        ? [for i, b in local.iter_1557.tape : (i == local.iter_1557.tape_ptr ? (b - local.code_1558[1] + 256) % 256 : b)] :
      local.code_1558[0] == ","
        ? [for i, b in local.iter_1557.tape : (i == local.iter_1557.tape_ptr ? local.ascii_lookup[substr(local.input_1558, 0, 1)] : b)]
        : local.iter_1557.tape)

    tape_ptr = (
      local.code_1558[0] == "<"
        ? local.iter_1557.tape_ptr - local.code_1558[1] :
      local.code_1558[0] == ">"
        ? local.iter_1557.tape_ptr + local.code_1558[1]
        : local.iter_1557.tape_ptr)

    code_ptr = 2 + (
      local.code_1558[0] == "["
        ? local.iter_1557.tape[local.iter_1557.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1557.code_ptr)] : local.iter_1557.code_ptr :
      local.code_1558[0] == "]"
        ? local.iter_1557.tape[local.iter_1557.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1557.code_ptr)] : local.iter_1557.code_ptr
        : local.iter_1557.code_ptr)

    steps_taken = 1 + local.iter_1557.steps_taken
  }
}

locals {
  code_1559 = (try(local.iter_1558.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1558.code_ptr, local.iter_1558.code_ptr + 2)
    : [null])

  input_1559 = (local.code_1559[0] == ","
    ? substr(local.input_1558, local.code_1559[1], -1)
    : local.input_1558)

  iter_1559 = try(local.iter_1558.code_ptr >= length(var.code), true) ? local.iter_1558 : {
    output = (local.code_1559[0] == "."
      ? "${local.iter_1558.output}${join("", [for _ in range(local.code_1559[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1558.tape[local.iter_1558.tape_ptr]))])}"
      : local.iter_1558.output)
    
    tape = (
      local.code_1559[0] == "+"
        ? [for i, b in local.iter_1558.tape : (i == local.iter_1558.tape_ptr ? (b + local.code_1559[1]) % 256 : b)] :
      local.code_1559[0] == "-"
        ? [for i, b in local.iter_1558.tape : (i == local.iter_1558.tape_ptr ? (b - local.code_1559[1] + 256) % 256 : b)] :
      local.code_1559[0] == ","
        ? [for i, b in local.iter_1558.tape : (i == local.iter_1558.tape_ptr ? local.ascii_lookup[substr(local.input_1559, 0, 1)] : b)]
        : local.iter_1558.tape)

    tape_ptr = (
      local.code_1559[0] == "<"
        ? local.iter_1558.tape_ptr - local.code_1559[1] :
      local.code_1559[0] == ">"
        ? local.iter_1558.tape_ptr + local.code_1559[1]
        : local.iter_1558.tape_ptr)

    code_ptr = 2 + (
      local.code_1559[0] == "["
        ? local.iter_1558.tape[local.iter_1558.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1558.code_ptr)] : local.iter_1558.code_ptr :
      local.code_1559[0] == "]"
        ? local.iter_1558.tape[local.iter_1558.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1558.code_ptr)] : local.iter_1558.code_ptr
        : local.iter_1558.code_ptr)

    steps_taken = 1 + local.iter_1558.steps_taken
  }
}

locals {
  code_1560 = (try(local.iter_1559.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1559.code_ptr, local.iter_1559.code_ptr + 2)
    : [null])

  input_1560 = (local.code_1560[0] == ","
    ? substr(local.input_1559, local.code_1560[1], -1)
    : local.input_1559)

  iter_1560 = try(local.iter_1559.code_ptr >= length(var.code), true) ? local.iter_1559 : {
    output = (local.code_1560[0] == "."
      ? "${local.iter_1559.output}${join("", [for _ in range(local.code_1560[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1559.tape[local.iter_1559.tape_ptr]))])}"
      : local.iter_1559.output)
    
    tape = (
      local.code_1560[0] == "+"
        ? [for i, b in local.iter_1559.tape : (i == local.iter_1559.tape_ptr ? (b + local.code_1560[1]) % 256 : b)] :
      local.code_1560[0] == "-"
        ? [for i, b in local.iter_1559.tape : (i == local.iter_1559.tape_ptr ? (b - local.code_1560[1] + 256) % 256 : b)] :
      local.code_1560[0] == ","
        ? [for i, b in local.iter_1559.tape : (i == local.iter_1559.tape_ptr ? local.ascii_lookup[substr(local.input_1560, 0, 1)] : b)]
        : local.iter_1559.tape)

    tape_ptr = (
      local.code_1560[0] == "<"
        ? local.iter_1559.tape_ptr - local.code_1560[1] :
      local.code_1560[0] == ">"
        ? local.iter_1559.tape_ptr + local.code_1560[1]
        : local.iter_1559.tape_ptr)

    code_ptr = 2 + (
      local.code_1560[0] == "["
        ? local.iter_1559.tape[local.iter_1559.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1559.code_ptr)] : local.iter_1559.code_ptr :
      local.code_1560[0] == "]"
        ? local.iter_1559.tape[local.iter_1559.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1559.code_ptr)] : local.iter_1559.code_ptr
        : local.iter_1559.code_ptr)

    steps_taken = 1 + local.iter_1559.steps_taken
  }
}

locals {
  code_1561 = (try(local.iter_1560.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1560.code_ptr, local.iter_1560.code_ptr + 2)
    : [null])

  input_1561 = (local.code_1561[0] == ","
    ? substr(local.input_1560, local.code_1561[1], -1)
    : local.input_1560)

  iter_1561 = try(local.iter_1560.code_ptr >= length(var.code), true) ? local.iter_1560 : {
    output = (local.code_1561[0] == "."
      ? "${local.iter_1560.output}${join("", [for _ in range(local.code_1561[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1560.tape[local.iter_1560.tape_ptr]))])}"
      : local.iter_1560.output)
    
    tape = (
      local.code_1561[0] == "+"
        ? [for i, b in local.iter_1560.tape : (i == local.iter_1560.tape_ptr ? (b + local.code_1561[1]) % 256 : b)] :
      local.code_1561[0] == "-"
        ? [for i, b in local.iter_1560.tape : (i == local.iter_1560.tape_ptr ? (b - local.code_1561[1] + 256) % 256 : b)] :
      local.code_1561[0] == ","
        ? [for i, b in local.iter_1560.tape : (i == local.iter_1560.tape_ptr ? local.ascii_lookup[substr(local.input_1561, 0, 1)] : b)]
        : local.iter_1560.tape)

    tape_ptr = (
      local.code_1561[0] == "<"
        ? local.iter_1560.tape_ptr - local.code_1561[1] :
      local.code_1561[0] == ">"
        ? local.iter_1560.tape_ptr + local.code_1561[1]
        : local.iter_1560.tape_ptr)

    code_ptr = 2 + (
      local.code_1561[0] == "["
        ? local.iter_1560.tape[local.iter_1560.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1560.code_ptr)] : local.iter_1560.code_ptr :
      local.code_1561[0] == "]"
        ? local.iter_1560.tape[local.iter_1560.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1560.code_ptr)] : local.iter_1560.code_ptr
        : local.iter_1560.code_ptr)

    steps_taken = 1 + local.iter_1560.steps_taken
  }
}

locals {
  code_1562 = (try(local.iter_1561.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1561.code_ptr, local.iter_1561.code_ptr + 2)
    : [null])

  input_1562 = (local.code_1562[0] == ","
    ? substr(local.input_1561, local.code_1562[1], -1)
    : local.input_1561)

  iter_1562 = try(local.iter_1561.code_ptr >= length(var.code), true) ? local.iter_1561 : {
    output = (local.code_1562[0] == "."
      ? "${local.iter_1561.output}${join("", [for _ in range(local.code_1562[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1561.tape[local.iter_1561.tape_ptr]))])}"
      : local.iter_1561.output)
    
    tape = (
      local.code_1562[0] == "+"
        ? [for i, b in local.iter_1561.tape : (i == local.iter_1561.tape_ptr ? (b + local.code_1562[1]) % 256 : b)] :
      local.code_1562[0] == "-"
        ? [for i, b in local.iter_1561.tape : (i == local.iter_1561.tape_ptr ? (b - local.code_1562[1] + 256) % 256 : b)] :
      local.code_1562[0] == ","
        ? [for i, b in local.iter_1561.tape : (i == local.iter_1561.tape_ptr ? local.ascii_lookup[substr(local.input_1562, 0, 1)] : b)]
        : local.iter_1561.tape)

    tape_ptr = (
      local.code_1562[0] == "<"
        ? local.iter_1561.tape_ptr - local.code_1562[1] :
      local.code_1562[0] == ">"
        ? local.iter_1561.tape_ptr + local.code_1562[1]
        : local.iter_1561.tape_ptr)

    code_ptr = 2 + (
      local.code_1562[0] == "["
        ? local.iter_1561.tape[local.iter_1561.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1561.code_ptr)] : local.iter_1561.code_ptr :
      local.code_1562[0] == "]"
        ? local.iter_1561.tape[local.iter_1561.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1561.code_ptr)] : local.iter_1561.code_ptr
        : local.iter_1561.code_ptr)

    steps_taken = 1 + local.iter_1561.steps_taken
  }
}

locals {
  code_1563 = (try(local.iter_1562.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1562.code_ptr, local.iter_1562.code_ptr + 2)
    : [null])

  input_1563 = (local.code_1563[0] == ","
    ? substr(local.input_1562, local.code_1563[1], -1)
    : local.input_1562)

  iter_1563 = try(local.iter_1562.code_ptr >= length(var.code), true) ? local.iter_1562 : {
    output = (local.code_1563[0] == "."
      ? "${local.iter_1562.output}${join("", [for _ in range(local.code_1563[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1562.tape[local.iter_1562.tape_ptr]))])}"
      : local.iter_1562.output)
    
    tape = (
      local.code_1563[0] == "+"
        ? [for i, b in local.iter_1562.tape : (i == local.iter_1562.tape_ptr ? (b + local.code_1563[1]) % 256 : b)] :
      local.code_1563[0] == "-"
        ? [for i, b in local.iter_1562.tape : (i == local.iter_1562.tape_ptr ? (b - local.code_1563[1] + 256) % 256 : b)] :
      local.code_1563[0] == ","
        ? [for i, b in local.iter_1562.tape : (i == local.iter_1562.tape_ptr ? local.ascii_lookup[substr(local.input_1563, 0, 1)] : b)]
        : local.iter_1562.tape)

    tape_ptr = (
      local.code_1563[0] == "<"
        ? local.iter_1562.tape_ptr - local.code_1563[1] :
      local.code_1563[0] == ">"
        ? local.iter_1562.tape_ptr + local.code_1563[1]
        : local.iter_1562.tape_ptr)

    code_ptr = 2 + (
      local.code_1563[0] == "["
        ? local.iter_1562.tape[local.iter_1562.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1562.code_ptr)] : local.iter_1562.code_ptr :
      local.code_1563[0] == "]"
        ? local.iter_1562.tape[local.iter_1562.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1562.code_ptr)] : local.iter_1562.code_ptr
        : local.iter_1562.code_ptr)

    steps_taken = 1 + local.iter_1562.steps_taken
  }
}

locals {
  code_1564 = (try(local.iter_1563.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1563.code_ptr, local.iter_1563.code_ptr + 2)
    : [null])

  input_1564 = (local.code_1564[0] == ","
    ? substr(local.input_1563, local.code_1564[1], -1)
    : local.input_1563)

  iter_1564 = try(local.iter_1563.code_ptr >= length(var.code), true) ? local.iter_1563 : {
    output = (local.code_1564[0] == "."
      ? "${local.iter_1563.output}${join("", [for _ in range(local.code_1564[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1563.tape[local.iter_1563.tape_ptr]))])}"
      : local.iter_1563.output)
    
    tape = (
      local.code_1564[0] == "+"
        ? [for i, b in local.iter_1563.tape : (i == local.iter_1563.tape_ptr ? (b + local.code_1564[1]) % 256 : b)] :
      local.code_1564[0] == "-"
        ? [for i, b in local.iter_1563.tape : (i == local.iter_1563.tape_ptr ? (b - local.code_1564[1] + 256) % 256 : b)] :
      local.code_1564[0] == ","
        ? [for i, b in local.iter_1563.tape : (i == local.iter_1563.tape_ptr ? local.ascii_lookup[substr(local.input_1564, 0, 1)] : b)]
        : local.iter_1563.tape)

    tape_ptr = (
      local.code_1564[0] == "<"
        ? local.iter_1563.tape_ptr - local.code_1564[1] :
      local.code_1564[0] == ">"
        ? local.iter_1563.tape_ptr + local.code_1564[1]
        : local.iter_1563.tape_ptr)

    code_ptr = 2 + (
      local.code_1564[0] == "["
        ? local.iter_1563.tape[local.iter_1563.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1563.code_ptr)] : local.iter_1563.code_ptr :
      local.code_1564[0] == "]"
        ? local.iter_1563.tape[local.iter_1563.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1563.code_ptr)] : local.iter_1563.code_ptr
        : local.iter_1563.code_ptr)

    steps_taken = 1 + local.iter_1563.steps_taken
  }
}

locals {
  code_1565 = (try(local.iter_1564.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1564.code_ptr, local.iter_1564.code_ptr + 2)
    : [null])

  input_1565 = (local.code_1565[0] == ","
    ? substr(local.input_1564, local.code_1565[1], -1)
    : local.input_1564)

  iter_1565 = try(local.iter_1564.code_ptr >= length(var.code), true) ? local.iter_1564 : {
    output = (local.code_1565[0] == "."
      ? "${local.iter_1564.output}${join("", [for _ in range(local.code_1565[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1564.tape[local.iter_1564.tape_ptr]))])}"
      : local.iter_1564.output)
    
    tape = (
      local.code_1565[0] == "+"
        ? [for i, b in local.iter_1564.tape : (i == local.iter_1564.tape_ptr ? (b + local.code_1565[1]) % 256 : b)] :
      local.code_1565[0] == "-"
        ? [for i, b in local.iter_1564.tape : (i == local.iter_1564.tape_ptr ? (b - local.code_1565[1] + 256) % 256 : b)] :
      local.code_1565[0] == ","
        ? [for i, b in local.iter_1564.tape : (i == local.iter_1564.tape_ptr ? local.ascii_lookup[substr(local.input_1565, 0, 1)] : b)]
        : local.iter_1564.tape)

    tape_ptr = (
      local.code_1565[0] == "<"
        ? local.iter_1564.tape_ptr - local.code_1565[1] :
      local.code_1565[0] == ">"
        ? local.iter_1564.tape_ptr + local.code_1565[1]
        : local.iter_1564.tape_ptr)

    code_ptr = 2 + (
      local.code_1565[0] == "["
        ? local.iter_1564.tape[local.iter_1564.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1564.code_ptr)] : local.iter_1564.code_ptr :
      local.code_1565[0] == "]"
        ? local.iter_1564.tape[local.iter_1564.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1564.code_ptr)] : local.iter_1564.code_ptr
        : local.iter_1564.code_ptr)

    steps_taken = 1 + local.iter_1564.steps_taken
  }
}

locals {
  code_1566 = (try(local.iter_1565.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1565.code_ptr, local.iter_1565.code_ptr + 2)
    : [null])

  input_1566 = (local.code_1566[0] == ","
    ? substr(local.input_1565, local.code_1566[1], -1)
    : local.input_1565)

  iter_1566 = try(local.iter_1565.code_ptr >= length(var.code), true) ? local.iter_1565 : {
    output = (local.code_1566[0] == "."
      ? "${local.iter_1565.output}${join("", [for _ in range(local.code_1566[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1565.tape[local.iter_1565.tape_ptr]))])}"
      : local.iter_1565.output)
    
    tape = (
      local.code_1566[0] == "+"
        ? [for i, b in local.iter_1565.tape : (i == local.iter_1565.tape_ptr ? (b + local.code_1566[1]) % 256 : b)] :
      local.code_1566[0] == "-"
        ? [for i, b in local.iter_1565.tape : (i == local.iter_1565.tape_ptr ? (b - local.code_1566[1] + 256) % 256 : b)] :
      local.code_1566[0] == ","
        ? [for i, b in local.iter_1565.tape : (i == local.iter_1565.tape_ptr ? local.ascii_lookup[substr(local.input_1566, 0, 1)] : b)]
        : local.iter_1565.tape)

    tape_ptr = (
      local.code_1566[0] == "<"
        ? local.iter_1565.tape_ptr - local.code_1566[1] :
      local.code_1566[0] == ">"
        ? local.iter_1565.tape_ptr + local.code_1566[1]
        : local.iter_1565.tape_ptr)

    code_ptr = 2 + (
      local.code_1566[0] == "["
        ? local.iter_1565.tape[local.iter_1565.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1565.code_ptr)] : local.iter_1565.code_ptr :
      local.code_1566[0] == "]"
        ? local.iter_1565.tape[local.iter_1565.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1565.code_ptr)] : local.iter_1565.code_ptr
        : local.iter_1565.code_ptr)

    steps_taken = 1 + local.iter_1565.steps_taken
  }
}

locals {
  code_1567 = (try(local.iter_1566.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1566.code_ptr, local.iter_1566.code_ptr + 2)
    : [null])

  input_1567 = (local.code_1567[0] == ","
    ? substr(local.input_1566, local.code_1567[1], -1)
    : local.input_1566)

  iter_1567 = try(local.iter_1566.code_ptr >= length(var.code), true) ? local.iter_1566 : {
    output = (local.code_1567[0] == "."
      ? "${local.iter_1566.output}${join("", [for _ in range(local.code_1567[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1566.tape[local.iter_1566.tape_ptr]))])}"
      : local.iter_1566.output)
    
    tape = (
      local.code_1567[0] == "+"
        ? [for i, b in local.iter_1566.tape : (i == local.iter_1566.tape_ptr ? (b + local.code_1567[1]) % 256 : b)] :
      local.code_1567[0] == "-"
        ? [for i, b in local.iter_1566.tape : (i == local.iter_1566.tape_ptr ? (b - local.code_1567[1] + 256) % 256 : b)] :
      local.code_1567[0] == ","
        ? [for i, b in local.iter_1566.tape : (i == local.iter_1566.tape_ptr ? local.ascii_lookup[substr(local.input_1567, 0, 1)] : b)]
        : local.iter_1566.tape)

    tape_ptr = (
      local.code_1567[0] == "<"
        ? local.iter_1566.tape_ptr - local.code_1567[1] :
      local.code_1567[0] == ">"
        ? local.iter_1566.tape_ptr + local.code_1567[1]
        : local.iter_1566.tape_ptr)

    code_ptr = 2 + (
      local.code_1567[0] == "["
        ? local.iter_1566.tape[local.iter_1566.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1566.code_ptr)] : local.iter_1566.code_ptr :
      local.code_1567[0] == "]"
        ? local.iter_1566.tape[local.iter_1566.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1566.code_ptr)] : local.iter_1566.code_ptr
        : local.iter_1566.code_ptr)

    steps_taken = 1 + local.iter_1566.steps_taken
  }
}

locals {
  code_1568 = (try(local.iter_1567.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1567.code_ptr, local.iter_1567.code_ptr + 2)
    : [null])

  input_1568 = (local.code_1568[0] == ","
    ? substr(local.input_1567, local.code_1568[1], -1)
    : local.input_1567)

  iter_1568 = try(local.iter_1567.code_ptr >= length(var.code), true) ? local.iter_1567 : {
    output = (local.code_1568[0] == "."
      ? "${local.iter_1567.output}${join("", [for _ in range(local.code_1568[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1567.tape[local.iter_1567.tape_ptr]))])}"
      : local.iter_1567.output)
    
    tape = (
      local.code_1568[0] == "+"
        ? [for i, b in local.iter_1567.tape : (i == local.iter_1567.tape_ptr ? (b + local.code_1568[1]) % 256 : b)] :
      local.code_1568[0] == "-"
        ? [for i, b in local.iter_1567.tape : (i == local.iter_1567.tape_ptr ? (b - local.code_1568[1] + 256) % 256 : b)] :
      local.code_1568[0] == ","
        ? [for i, b in local.iter_1567.tape : (i == local.iter_1567.tape_ptr ? local.ascii_lookup[substr(local.input_1568, 0, 1)] : b)]
        : local.iter_1567.tape)

    tape_ptr = (
      local.code_1568[0] == "<"
        ? local.iter_1567.tape_ptr - local.code_1568[1] :
      local.code_1568[0] == ">"
        ? local.iter_1567.tape_ptr + local.code_1568[1]
        : local.iter_1567.tape_ptr)

    code_ptr = 2 + (
      local.code_1568[0] == "["
        ? local.iter_1567.tape[local.iter_1567.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1567.code_ptr)] : local.iter_1567.code_ptr :
      local.code_1568[0] == "]"
        ? local.iter_1567.tape[local.iter_1567.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1567.code_ptr)] : local.iter_1567.code_ptr
        : local.iter_1567.code_ptr)

    steps_taken = 1 + local.iter_1567.steps_taken
  }
}

locals {
  code_1569 = (try(local.iter_1568.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1568.code_ptr, local.iter_1568.code_ptr + 2)
    : [null])

  input_1569 = (local.code_1569[0] == ","
    ? substr(local.input_1568, local.code_1569[1], -1)
    : local.input_1568)

  iter_1569 = try(local.iter_1568.code_ptr >= length(var.code), true) ? local.iter_1568 : {
    output = (local.code_1569[0] == "."
      ? "${local.iter_1568.output}${join("", [for _ in range(local.code_1569[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1568.tape[local.iter_1568.tape_ptr]))])}"
      : local.iter_1568.output)
    
    tape = (
      local.code_1569[0] == "+"
        ? [for i, b in local.iter_1568.tape : (i == local.iter_1568.tape_ptr ? (b + local.code_1569[1]) % 256 : b)] :
      local.code_1569[0] == "-"
        ? [for i, b in local.iter_1568.tape : (i == local.iter_1568.tape_ptr ? (b - local.code_1569[1] + 256) % 256 : b)] :
      local.code_1569[0] == ","
        ? [for i, b in local.iter_1568.tape : (i == local.iter_1568.tape_ptr ? local.ascii_lookup[substr(local.input_1569, 0, 1)] : b)]
        : local.iter_1568.tape)

    tape_ptr = (
      local.code_1569[0] == "<"
        ? local.iter_1568.tape_ptr - local.code_1569[1] :
      local.code_1569[0] == ">"
        ? local.iter_1568.tape_ptr + local.code_1569[1]
        : local.iter_1568.tape_ptr)

    code_ptr = 2 + (
      local.code_1569[0] == "["
        ? local.iter_1568.tape[local.iter_1568.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1568.code_ptr)] : local.iter_1568.code_ptr :
      local.code_1569[0] == "]"
        ? local.iter_1568.tape[local.iter_1568.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1568.code_ptr)] : local.iter_1568.code_ptr
        : local.iter_1568.code_ptr)

    steps_taken = 1 + local.iter_1568.steps_taken
  }
}

locals {
  code_1570 = (try(local.iter_1569.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1569.code_ptr, local.iter_1569.code_ptr + 2)
    : [null])

  input_1570 = (local.code_1570[0] == ","
    ? substr(local.input_1569, local.code_1570[1], -1)
    : local.input_1569)

  iter_1570 = try(local.iter_1569.code_ptr >= length(var.code), true) ? local.iter_1569 : {
    output = (local.code_1570[0] == "."
      ? "${local.iter_1569.output}${join("", [for _ in range(local.code_1570[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1569.tape[local.iter_1569.tape_ptr]))])}"
      : local.iter_1569.output)
    
    tape = (
      local.code_1570[0] == "+"
        ? [for i, b in local.iter_1569.tape : (i == local.iter_1569.tape_ptr ? (b + local.code_1570[1]) % 256 : b)] :
      local.code_1570[0] == "-"
        ? [for i, b in local.iter_1569.tape : (i == local.iter_1569.tape_ptr ? (b - local.code_1570[1] + 256) % 256 : b)] :
      local.code_1570[0] == ","
        ? [for i, b in local.iter_1569.tape : (i == local.iter_1569.tape_ptr ? local.ascii_lookup[substr(local.input_1570, 0, 1)] : b)]
        : local.iter_1569.tape)

    tape_ptr = (
      local.code_1570[0] == "<"
        ? local.iter_1569.tape_ptr - local.code_1570[1] :
      local.code_1570[0] == ">"
        ? local.iter_1569.tape_ptr + local.code_1570[1]
        : local.iter_1569.tape_ptr)

    code_ptr = 2 + (
      local.code_1570[0] == "["
        ? local.iter_1569.tape[local.iter_1569.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1569.code_ptr)] : local.iter_1569.code_ptr :
      local.code_1570[0] == "]"
        ? local.iter_1569.tape[local.iter_1569.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1569.code_ptr)] : local.iter_1569.code_ptr
        : local.iter_1569.code_ptr)

    steps_taken = 1 + local.iter_1569.steps_taken
  }
}

locals {
  code_1571 = (try(local.iter_1570.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1570.code_ptr, local.iter_1570.code_ptr + 2)
    : [null])

  input_1571 = (local.code_1571[0] == ","
    ? substr(local.input_1570, local.code_1571[1], -1)
    : local.input_1570)

  iter_1571 = try(local.iter_1570.code_ptr >= length(var.code), true) ? local.iter_1570 : {
    output = (local.code_1571[0] == "."
      ? "${local.iter_1570.output}${join("", [for _ in range(local.code_1571[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1570.tape[local.iter_1570.tape_ptr]))])}"
      : local.iter_1570.output)
    
    tape = (
      local.code_1571[0] == "+"
        ? [for i, b in local.iter_1570.tape : (i == local.iter_1570.tape_ptr ? (b + local.code_1571[1]) % 256 : b)] :
      local.code_1571[0] == "-"
        ? [for i, b in local.iter_1570.tape : (i == local.iter_1570.tape_ptr ? (b - local.code_1571[1] + 256) % 256 : b)] :
      local.code_1571[0] == ","
        ? [for i, b in local.iter_1570.tape : (i == local.iter_1570.tape_ptr ? local.ascii_lookup[substr(local.input_1571, 0, 1)] : b)]
        : local.iter_1570.tape)

    tape_ptr = (
      local.code_1571[0] == "<"
        ? local.iter_1570.tape_ptr - local.code_1571[1] :
      local.code_1571[0] == ">"
        ? local.iter_1570.tape_ptr + local.code_1571[1]
        : local.iter_1570.tape_ptr)

    code_ptr = 2 + (
      local.code_1571[0] == "["
        ? local.iter_1570.tape[local.iter_1570.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1570.code_ptr)] : local.iter_1570.code_ptr :
      local.code_1571[0] == "]"
        ? local.iter_1570.tape[local.iter_1570.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1570.code_ptr)] : local.iter_1570.code_ptr
        : local.iter_1570.code_ptr)

    steps_taken = 1 + local.iter_1570.steps_taken
  }
}

locals {
  code_1572 = (try(local.iter_1571.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1571.code_ptr, local.iter_1571.code_ptr + 2)
    : [null])

  input_1572 = (local.code_1572[0] == ","
    ? substr(local.input_1571, local.code_1572[1], -1)
    : local.input_1571)

  iter_1572 = try(local.iter_1571.code_ptr >= length(var.code), true) ? local.iter_1571 : {
    output = (local.code_1572[0] == "."
      ? "${local.iter_1571.output}${join("", [for _ in range(local.code_1572[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1571.tape[local.iter_1571.tape_ptr]))])}"
      : local.iter_1571.output)
    
    tape = (
      local.code_1572[0] == "+"
        ? [for i, b in local.iter_1571.tape : (i == local.iter_1571.tape_ptr ? (b + local.code_1572[1]) % 256 : b)] :
      local.code_1572[0] == "-"
        ? [for i, b in local.iter_1571.tape : (i == local.iter_1571.tape_ptr ? (b - local.code_1572[1] + 256) % 256 : b)] :
      local.code_1572[0] == ","
        ? [for i, b in local.iter_1571.tape : (i == local.iter_1571.tape_ptr ? local.ascii_lookup[substr(local.input_1572, 0, 1)] : b)]
        : local.iter_1571.tape)

    tape_ptr = (
      local.code_1572[0] == "<"
        ? local.iter_1571.tape_ptr - local.code_1572[1] :
      local.code_1572[0] == ">"
        ? local.iter_1571.tape_ptr + local.code_1572[1]
        : local.iter_1571.tape_ptr)

    code_ptr = 2 + (
      local.code_1572[0] == "["
        ? local.iter_1571.tape[local.iter_1571.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1571.code_ptr)] : local.iter_1571.code_ptr :
      local.code_1572[0] == "]"
        ? local.iter_1571.tape[local.iter_1571.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1571.code_ptr)] : local.iter_1571.code_ptr
        : local.iter_1571.code_ptr)

    steps_taken = 1 + local.iter_1571.steps_taken
  }
}

locals {
  code_1573 = (try(local.iter_1572.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1572.code_ptr, local.iter_1572.code_ptr + 2)
    : [null])

  input_1573 = (local.code_1573[0] == ","
    ? substr(local.input_1572, local.code_1573[1], -1)
    : local.input_1572)

  iter_1573 = try(local.iter_1572.code_ptr >= length(var.code), true) ? local.iter_1572 : {
    output = (local.code_1573[0] == "."
      ? "${local.iter_1572.output}${join("", [for _ in range(local.code_1573[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1572.tape[local.iter_1572.tape_ptr]))])}"
      : local.iter_1572.output)
    
    tape = (
      local.code_1573[0] == "+"
        ? [for i, b in local.iter_1572.tape : (i == local.iter_1572.tape_ptr ? (b + local.code_1573[1]) % 256 : b)] :
      local.code_1573[0] == "-"
        ? [for i, b in local.iter_1572.tape : (i == local.iter_1572.tape_ptr ? (b - local.code_1573[1] + 256) % 256 : b)] :
      local.code_1573[0] == ","
        ? [for i, b in local.iter_1572.tape : (i == local.iter_1572.tape_ptr ? local.ascii_lookup[substr(local.input_1573, 0, 1)] : b)]
        : local.iter_1572.tape)

    tape_ptr = (
      local.code_1573[0] == "<"
        ? local.iter_1572.tape_ptr - local.code_1573[1] :
      local.code_1573[0] == ">"
        ? local.iter_1572.tape_ptr + local.code_1573[1]
        : local.iter_1572.tape_ptr)

    code_ptr = 2 + (
      local.code_1573[0] == "["
        ? local.iter_1572.tape[local.iter_1572.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1572.code_ptr)] : local.iter_1572.code_ptr :
      local.code_1573[0] == "]"
        ? local.iter_1572.tape[local.iter_1572.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1572.code_ptr)] : local.iter_1572.code_ptr
        : local.iter_1572.code_ptr)

    steps_taken = 1 + local.iter_1572.steps_taken
  }
}

locals {
  code_1574 = (try(local.iter_1573.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1573.code_ptr, local.iter_1573.code_ptr + 2)
    : [null])

  input_1574 = (local.code_1574[0] == ","
    ? substr(local.input_1573, local.code_1574[1], -1)
    : local.input_1573)

  iter_1574 = try(local.iter_1573.code_ptr >= length(var.code), true) ? local.iter_1573 : {
    output = (local.code_1574[0] == "."
      ? "${local.iter_1573.output}${join("", [for _ in range(local.code_1574[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1573.tape[local.iter_1573.tape_ptr]))])}"
      : local.iter_1573.output)
    
    tape = (
      local.code_1574[0] == "+"
        ? [for i, b in local.iter_1573.tape : (i == local.iter_1573.tape_ptr ? (b + local.code_1574[1]) % 256 : b)] :
      local.code_1574[0] == "-"
        ? [for i, b in local.iter_1573.tape : (i == local.iter_1573.tape_ptr ? (b - local.code_1574[1] + 256) % 256 : b)] :
      local.code_1574[0] == ","
        ? [for i, b in local.iter_1573.tape : (i == local.iter_1573.tape_ptr ? local.ascii_lookup[substr(local.input_1574, 0, 1)] : b)]
        : local.iter_1573.tape)

    tape_ptr = (
      local.code_1574[0] == "<"
        ? local.iter_1573.tape_ptr - local.code_1574[1] :
      local.code_1574[0] == ">"
        ? local.iter_1573.tape_ptr + local.code_1574[1]
        : local.iter_1573.tape_ptr)

    code_ptr = 2 + (
      local.code_1574[0] == "["
        ? local.iter_1573.tape[local.iter_1573.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1573.code_ptr)] : local.iter_1573.code_ptr :
      local.code_1574[0] == "]"
        ? local.iter_1573.tape[local.iter_1573.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1573.code_ptr)] : local.iter_1573.code_ptr
        : local.iter_1573.code_ptr)

    steps_taken = 1 + local.iter_1573.steps_taken
  }
}

locals {
  code_1575 = (try(local.iter_1574.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1574.code_ptr, local.iter_1574.code_ptr + 2)
    : [null])

  input_1575 = (local.code_1575[0] == ","
    ? substr(local.input_1574, local.code_1575[1], -1)
    : local.input_1574)

  iter_1575 = try(local.iter_1574.code_ptr >= length(var.code), true) ? local.iter_1574 : {
    output = (local.code_1575[0] == "."
      ? "${local.iter_1574.output}${join("", [for _ in range(local.code_1575[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1574.tape[local.iter_1574.tape_ptr]))])}"
      : local.iter_1574.output)
    
    tape = (
      local.code_1575[0] == "+"
        ? [for i, b in local.iter_1574.tape : (i == local.iter_1574.tape_ptr ? (b + local.code_1575[1]) % 256 : b)] :
      local.code_1575[0] == "-"
        ? [for i, b in local.iter_1574.tape : (i == local.iter_1574.tape_ptr ? (b - local.code_1575[1] + 256) % 256 : b)] :
      local.code_1575[0] == ","
        ? [for i, b in local.iter_1574.tape : (i == local.iter_1574.tape_ptr ? local.ascii_lookup[substr(local.input_1575, 0, 1)] : b)]
        : local.iter_1574.tape)

    tape_ptr = (
      local.code_1575[0] == "<"
        ? local.iter_1574.tape_ptr - local.code_1575[1] :
      local.code_1575[0] == ">"
        ? local.iter_1574.tape_ptr + local.code_1575[1]
        : local.iter_1574.tape_ptr)

    code_ptr = 2 + (
      local.code_1575[0] == "["
        ? local.iter_1574.tape[local.iter_1574.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1574.code_ptr)] : local.iter_1574.code_ptr :
      local.code_1575[0] == "]"
        ? local.iter_1574.tape[local.iter_1574.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1574.code_ptr)] : local.iter_1574.code_ptr
        : local.iter_1574.code_ptr)

    steps_taken = 1 + local.iter_1574.steps_taken
  }
}

locals {
  code_1576 = (try(local.iter_1575.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1575.code_ptr, local.iter_1575.code_ptr + 2)
    : [null])

  input_1576 = (local.code_1576[0] == ","
    ? substr(local.input_1575, local.code_1576[1], -1)
    : local.input_1575)

  iter_1576 = try(local.iter_1575.code_ptr >= length(var.code), true) ? local.iter_1575 : {
    output = (local.code_1576[0] == "."
      ? "${local.iter_1575.output}${join("", [for _ in range(local.code_1576[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1575.tape[local.iter_1575.tape_ptr]))])}"
      : local.iter_1575.output)
    
    tape = (
      local.code_1576[0] == "+"
        ? [for i, b in local.iter_1575.tape : (i == local.iter_1575.tape_ptr ? (b + local.code_1576[1]) % 256 : b)] :
      local.code_1576[0] == "-"
        ? [for i, b in local.iter_1575.tape : (i == local.iter_1575.tape_ptr ? (b - local.code_1576[1] + 256) % 256 : b)] :
      local.code_1576[0] == ","
        ? [for i, b in local.iter_1575.tape : (i == local.iter_1575.tape_ptr ? local.ascii_lookup[substr(local.input_1576, 0, 1)] : b)]
        : local.iter_1575.tape)

    tape_ptr = (
      local.code_1576[0] == "<"
        ? local.iter_1575.tape_ptr - local.code_1576[1] :
      local.code_1576[0] == ">"
        ? local.iter_1575.tape_ptr + local.code_1576[1]
        : local.iter_1575.tape_ptr)

    code_ptr = 2 + (
      local.code_1576[0] == "["
        ? local.iter_1575.tape[local.iter_1575.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1575.code_ptr)] : local.iter_1575.code_ptr :
      local.code_1576[0] == "]"
        ? local.iter_1575.tape[local.iter_1575.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1575.code_ptr)] : local.iter_1575.code_ptr
        : local.iter_1575.code_ptr)

    steps_taken = 1 + local.iter_1575.steps_taken
  }
}

locals {
  code_1577 = (try(local.iter_1576.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1576.code_ptr, local.iter_1576.code_ptr + 2)
    : [null])

  input_1577 = (local.code_1577[0] == ","
    ? substr(local.input_1576, local.code_1577[1], -1)
    : local.input_1576)

  iter_1577 = try(local.iter_1576.code_ptr >= length(var.code), true) ? local.iter_1576 : {
    output = (local.code_1577[0] == "."
      ? "${local.iter_1576.output}${join("", [for _ in range(local.code_1577[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1576.tape[local.iter_1576.tape_ptr]))])}"
      : local.iter_1576.output)
    
    tape = (
      local.code_1577[0] == "+"
        ? [for i, b in local.iter_1576.tape : (i == local.iter_1576.tape_ptr ? (b + local.code_1577[1]) % 256 : b)] :
      local.code_1577[0] == "-"
        ? [for i, b in local.iter_1576.tape : (i == local.iter_1576.tape_ptr ? (b - local.code_1577[1] + 256) % 256 : b)] :
      local.code_1577[0] == ","
        ? [for i, b in local.iter_1576.tape : (i == local.iter_1576.tape_ptr ? local.ascii_lookup[substr(local.input_1577, 0, 1)] : b)]
        : local.iter_1576.tape)

    tape_ptr = (
      local.code_1577[0] == "<"
        ? local.iter_1576.tape_ptr - local.code_1577[1] :
      local.code_1577[0] == ">"
        ? local.iter_1576.tape_ptr + local.code_1577[1]
        : local.iter_1576.tape_ptr)

    code_ptr = 2 + (
      local.code_1577[0] == "["
        ? local.iter_1576.tape[local.iter_1576.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1576.code_ptr)] : local.iter_1576.code_ptr :
      local.code_1577[0] == "]"
        ? local.iter_1576.tape[local.iter_1576.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1576.code_ptr)] : local.iter_1576.code_ptr
        : local.iter_1576.code_ptr)

    steps_taken = 1 + local.iter_1576.steps_taken
  }
}

locals {
  code_1578 = (try(local.iter_1577.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1577.code_ptr, local.iter_1577.code_ptr + 2)
    : [null])

  input_1578 = (local.code_1578[0] == ","
    ? substr(local.input_1577, local.code_1578[1], -1)
    : local.input_1577)

  iter_1578 = try(local.iter_1577.code_ptr >= length(var.code), true) ? local.iter_1577 : {
    output = (local.code_1578[0] == "."
      ? "${local.iter_1577.output}${join("", [for _ in range(local.code_1578[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1577.tape[local.iter_1577.tape_ptr]))])}"
      : local.iter_1577.output)
    
    tape = (
      local.code_1578[0] == "+"
        ? [for i, b in local.iter_1577.tape : (i == local.iter_1577.tape_ptr ? (b + local.code_1578[1]) % 256 : b)] :
      local.code_1578[0] == "-"
        ? [for i, b in local.iter_1577.tape : (i == local.iter_1577.tape_ptr ? (b - local.code_1578[1] + 256) % 256 : b)] :
      local.code_1578[0] == ","
        ? [for i, b in local.iter_1577.tape : (i == local.iter_1577.tape_ptr ? local.ascii_lookup[substr(local.input_1578, 0, 1)] : b)]
        : local.iter_1577.tape)

    tape_ptr = (
      local.code_1578[0] == "<"
        ? local.iter_1577.tape_ptr - local.code_1578[1] :
      local.code_1578[0] == ">"
        ? local.iter_1577.tape_ptr + local.code_1578[1]
        : local.iter_1577.tape_ptr)

    code_ptr = 2 + (
      local.code_1578[0] == "["
        ? local.iter_1577.tape[local.iter_1577.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1577.code_ptr)] : local.iter_1577.code_ptr :
      local.code_1578[0] == "]"
        ? local.iter_1577.tape[local.iter_1577.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1577.code_ptr)] : local.iter_1577.code_ptr
        : local.iter_1577.code_ptr)

    steps_taken = 1 + local.iter_1577.steps_taken
  }
}

locals {
  code_1579 = (try(local.iter_1578.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1578.code_ptr, local.iter_1578.code_ptr + 2)
    : [null])

  input_1579 = (local.code_1579[0] == ","
    ? substr(local.input_1578, local.code_1579[1], -1)
    : local.input_1578)

  iter_1579 = try(local.iter_1578.code_ptr >= length(var.code), true) ? local.iter_1578 : {
    output = (local.code_1579[0] == "."
      ? "${local.iter_1578.output}${join("", [for _ in range(local.code_1579[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1578.tape[local.iter_1578.tape_ptr]))])}"
      : local.iter_1578.output)
    
    tape = (
      local.code_1579[0] == "+"
        ? [for i, b in local.iter_1578.tape : (i == local.iter_1578.tape_ptr ? (b + local.code_1579[1]) % 256 : b)] :
      local.code_1579[0] == "-"
        ? [for i, b in local.iter_1578.tape : (i == local.iter_1578.tape_ptr ? (b - local.code_1579[1] + 256) % 256 : b)] :
      local.code_1579[0] == ","
        ? [for i, b in local.iter_1578.tape : (i == local.iter_1578.tape_ptr ? local.ascii_lookup[substr(local.input_1579, 0, 1)] : b)]
        : local.iter_1578.tape)

    tape_ptr = (
      local.code_1579[0] == "<"
        ? local.iter_1578.tape_ptr - local.code_1579[1] :
      local.code_1579[0] == ">"
        ? local.iter_1578.tape_ptr + local.code_1579[1]
        : local.iter_1578.tape_ptr)

    code_ptr = 2 + (
      local.code_1579[0] == "["
        ? local.iter_1578.tape[local.iter_1578.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1578.code_ptr)] : local.iter_1578.code_ptr :
      local.code_1579[0] == "]"
        ? local.iter_1578.tape[local.iter_1578.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1578.code_ptr)] : local.iter_1578.code_ptr
        : local.iter_1578.code_ptr)

    steps_taken = 1 + local.iter_1578.steps_taken
  }
}

locals {
  code_1580 = (try(local.iter_1579.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1579.code_ptr, local.iter_1579.code_ptr + 2)
    : [null])

  input_1580 = (local.code_1580[0] == ","
    ? substr(local.input_1579, local.code_1580[1], -1)
    : local.input_1579)

  iter_1580 = try(local.iter_1579.code_ptr >= length(var.code), true) ? local.iter_1579 : {
    output = (local.code_1580[0] == "."
      ? "${local.iter_1579.output}${join("", [for _ in range(local.code_1580[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1579.tape[local.iter_1579.tape_ptr]))])}"
      : local.iter_1579.output)
    
    tape = (
      local.code_1580[0] == "+"
        ? [for i, b in local.iter_1579.tape : (i == local.iter_1579.tape_ptr ? (b + local.code_1580[1]) % 256 : b)] :
      local.code_1580[0] == "-"
        ? [for i, b in local.iter_1579.tape : (i == local.iter_1579.tape_ptr ? (b - local.code_1580[1] + 256) % 256 : b)] :
      local.code_1580[0] == ","
        ? [for i, b in local.iter_1579.tape : (i == local.iter_1579.tape_ptr ? local.ascii_lookup[substr(local.input_1580, 0, 1)] : b)]
        : local.iter_1579.tape)

    tape_ptr = (
      local.code_1580[0] == "<"
        ? local.iter_1579.tape_ptr - local.code_1580[1] :
      local.code_1580[0] == ">"
        ? local.iter_1579.tape_ptr + local.code_1580[1]
        : local.iter_1579.tape_ptr)

    code_ptr = 2 + (
      local.code_1580[0] == "["
        ? local.iter_1579.tape[local.iter_1579.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1579.code_ptr)] : local.iter_1579.code_ptr :
      local.code_1580[0] == "]"
        ? local.iter_1579.tape[local.iter_1579.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1579.code_ptr)] : local.iter_1579.code_ptr
        : local.iter_1579.code_ptr)

    steps_taken = 1 + local.iter_1579.steps_taken
  }
}

locals {
  code_1581 = (try(local.iter_1580.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1580.code_ptr, local.iter_1580.code_ptr + 2)
    : [null])

  input_1581 = (local.code_1581[0] == ","
    ? substr(local.input_1580, local.code_1581[1], -1)
    : local.input_1580)

  iter_1581 = try(local.iter_1580.code_ptr >= length(var.code), true) ? local.iter_1580 : {
    output = (local.code_1581[0] == "."
      ? "${local.iter_1580.output}${join("", [for _ in range(local.code_1581[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1580.tape[local.iter_1580.tape_ptr]))])}"
      : local.iter_1580.output)
    
    tape = (
      local.code_1581[0] == "+"
        ? [for i, b in local.iter_1580.tape : (i == local.iter_1580.tape_ptr ? (b + local.code_1581[1]) % 256 : b)] :
      local.code_1581[0] == "-"
        ? [for i, b in local.iter_1580.tape : (i == local.iter_1580.tape_ptr ? (b - local.code_1581[1] + 256) % 256 : b)] :
      local.code_1581[0] == ","
        ? [for i, b in local.iter_1580.tape : (i == local.iter_1580.tape_ptr ? local.ascii_lookup[substr(local.input_1581, 0, 1)] : b)]
        : local.iter_1580.tape)

    tape_ptr = (
      local.code_1581[0] == "<"
        ? local.iter_1580.tape_ptr - local.code_1581[1] :
      local.code_1581[0] == ">"
        ? local.iter_1580.tape_ptr + local.code_1581[1]
        : local.iter_1580.tape_ptr)

    code_ptr = 2 + (
      local.code_1581[0] == "["
        ? local.iter_1580.tape[local.iter_1580.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1580.code_ptr)] : local.iter_1580.code_ptr :
      local.code_1581[0] == "]"
        ? local.iter_1580.tape[local.iter_1580.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1580.code_ptr)] : local.iter_1580.code_ptr
        : local.iter_1580.code_ptr)

    steps_taken = 1 + local.iter_1580.steps_taken
  }
}

locals {
  code_1582 = (try(local.iter_1581.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1581.code_ptr, local.iter_1581.code_ptr + 2)
    : [null])

  input_1582 = (local.code_1582[0] == ","
    ? substr(local.input_1581, local.code_1582[1], -1)
    : local.input_1581)

  iter_1582 = try(local.iter_1581.code_ptr >= length(var.code), true) ? local.iter_1581 : {
    output = (local.code_1582[0] == "."
      ? "${local.iter_1581.output}${join("", [for _ in range(local.code_1582[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1581.tape[local.iter_1581.tape_ptr]))])}"
      : local.iter_1581.output)
    
    tape = (
      local.code_1582[0] == "+"
        ? [for i, b in local.iter_1581.tape : (i == local.iter_1581.tape_ptr ? (b + local.code_1582[1]) % 256 : b)] :
      local.code_1582[0] == "-"
        ? [for i, b in local.iter_1581.tape : (i == local.iter_1581.tape_ptr ? (b - local.code_1582[1] + 256) % 256 : b)] :
      local.code_1582[0] == ","
        ? [for i, b in local.iter_1581.tape : (i == local.iter_1581.tape_ptr ? local.ascii_lookup[substr(local.input_1582, 0, 1)] : b)]
        : local.iter_1581.tape)

    tape_ptr = (
      local.code_1582[0] == "<"
        ? local.iter_1581.tape_ptr - local.code_1582[1] :
      local.code_1582[0] == ">"
        ? local.iter_1581.tape_ptr + local.code_1582[1]
        : local.iter_1581.tape_ptr)

    code_ptr = 2 + (
      local.code_1582[0] == "["
        ? local.iter_1581.tape[local.iter_1581.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1581.code_ptr)] : local.iter_1581.code_ptr :
      local.code_1582[0] == "]"
        ? local.iter_1581.tape[local.iter_1581.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1581.code_ptr)] : local.iter_1581.code_ptr
        : local.iter_1581.code_ptr)

    steps_taken = 1 + local.iter_1581.steps_taken
  }
}

locals {
  code_1583 = (try(local.iter_1582.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1582.code_ptr, local.iter_1582.code_ptr + 2)
    : [null])

  input_1583 = (local.code_1583[0] == ","
    ? substr(local.input_1582, local.code_1583[1], -1)
    : local.input_1582)

  iter_1583 = try(local.iter_1582.code_ptr >= length(var.code), true) ? local.iter_1582 : {
    output = (local.code_1583[0] == "."
      ? "${local.iter_1582.output}${join("", [for _ in range(local.code_1583[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1582.tape[local.iter_1582.tape_ptr]))])}"
      : local.iter_1582.output)
    
    tape = (
      local.code_1583[0] == "+"
        ? [for i, b in local.iter_1582.tape : (i == local.iter_1582.tape_ptr ? (b + local.code_1583[1]) % 256 : b)] :
      local.code_1583[0] == "-"
        ? [for i, b in local.iter_1582.tape : (i == local.iter_1582.tape_ptr ? (b - local.code_1583[1] + 256) % 256 : b)] :
      local.code_1583[0] == ","
        ? [for i, b in local.iter_1582.tape : (i == local.iter_1582.tape_ptr ? local.ascii_lookup[substr(local.input_1583, 0, 1)] : b)]
        : local.iter_1582.tape)

    tape_ptr = (
      local.code_1583[0] == "<"
        ? local.iter_1582.tape_ptr - local.code_1583[1] :
      local.code_1583[0] == ">"
        ? local.iter_1582.tape_ptr + local.code_1583[1]
        : local.iter_1582.tape_ptr)

    code_ptr = 2 + (
      local.code_1583[0] == "["
        ? local.iter_1582.tape[local.iter_1582.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1582.code_ptr)] : local.iter_1582.code_ptr :
      local.code_1583[0] == "]"
        ? local.iter_1582.tape[local.iter_1582.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1582.code_ptr)] : local.iter_1582.code_ptr
        : local.iter_1582.code_ptr)

    steps_taken = 1 + local.iter_1582.steps_taken
  }
}

locals {
  code_1584 = (try(local.iter_1583.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1583.code_ptr, local.iter_1583.code_ptr + 2)
    : [null])

  input_1584 = (local.code_1584[0] == ","
    ? substr(local.input_1583, local.code_1584[1], -1)
    : local.input_1583)

  iter_1584 = try(local.iter_1583.code_ptr >= length(var.code), true) ? local.iter_1583 : {
    output = (local.code_1584[0] == "."
      ? "${local.iter_1583.output}${join("", [for _ in range(local.code_1584[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1583.tape[local.iter_1583.tape_ptr]))])}"
      : local.iter_1583.output)
    
    tape = (
      local.code_1584[0] == "+"
        ? [for i, b in local.iter_1583.tape : (i == local.iter_1583.tape_ptr ? (b + local.code_1584[1]) % 256 : b)] :
      local.code_1584[0] == "-"
        ? [for i, b in local.iter_1583.tape : (i == local.iter_1583.tape_ptr ? (b - local.code_1584[1] + 256) % 256 : b)] :
      local.code_1584[0] == ","
        ? [for i, b in local.iter_1583.tape : (i == local.iter_1583.tape_ptr ? local.ascii_lookup[substr(local.input_1584, 0, 1)] : b)]
        : local.iter_1583.tape)

    tape_ptr = (
      local.code_1584[0] == "<"
        ? local.iter_1583.tape_ptr - local.code_1584[1] :
      local.code_1584[0] == ">"
        ? local.iter_1583.tape_ptr + local.code_1584[1]
        : local.iter_1583.tape_ptr)

    code_ptr = 2 + (
      local.code_1584[0] == "["
        ? local.iter_1583.tape[local.iter_1583.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1583.code_ptr)] : local.iter_1583.code_ptr :
      local.code_1584[0] == "]"
        ? local.iter_1583.tape[local.iter_1583.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1583.code_ptr)] : local.iter_1583.code_ptr
        : local.iter_1583.code_ptr)

    steps_taken = 1 + local.iter_1583.steps_taken
  }
}

locals {
  code_1585 = (try(local.iter_1584.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1584.code_ptr, local.iter_1584.code_ptr + 2)
    : [null])

  input_1585 = (local.code_1585[0] == ","
    ? substr(local.input_1584, local.code_1585[1], -1)
    : local.input_1584)

  iter_1585 = try(local.iter_1584.code_ptr >= length(var.code), true) ? local.iter_1584 : {
    output = (local.code_1585[0] == "."
      ? "${local.iter_1584.output}${join("", [for _ in range(local.code_1585[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1584.tape[local.iter_1584.tape_ptr]))])}"
      : local.iter_1584.output)
    
    tape = (
      local.code_1585[0] == "+"
        ? [for i, b in local.iter_1584.tape : (i == local.iter_1584.tape_ptr ? (b + local.code_1585[1]) % 256 : b)] :
      local.code_1585[0] == "-"
        ? [for i, b in local.iter_1584.tape : (i == local.iter_1584.tape_ptr ? (b - local.code_1585[1] + 256) % 256 : b)] :
      local.code_1585[0] == ","
        ? [for i, b in local.iter_1584.tape : (i == local.iter_1584.tape_ptr ? local.ascii_lookup[substr(local.input_1585, 0, 1)] : b)]
        : local.iter_1584.tape)

    tape_ptr = (
      local.code_1585[0] == "<"
        ? local.iter_1584.tape_ptr - local.code_1585[1] :
      local.code_1585[0] == ">"
        ? local.iter_1584.tape_ptr + local.code_1585[1]
        : local.iter_1584.tape_ptr)

    code_ptr = 2 + (
      local.code_1585[0] == "["
        ? local.iter_1584.tape[local.iter_1584.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1584.code_ptr)] : local.iter_1584.code_ptr :
      local.code_1585[0] == "]"
        ? local.iter_1584.tape[local.iter_1584.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1584.code_ptr)] : local.iter_1584.code_ptr
        : local.iter_1584.code_ptr)

    steps_taken = 1 + local.iter_1584.steps_taken
  }
}

locals {
  code_1586 = (try(local.iter_1585.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1585.code_ptr, local.iter_1585.code_ptr + 2)
    : [null])

  input_1586 = (local.code_1586[0] == ","
    ? substr(local.input_1585, local.code_1586[1], -1)
    : local.input_1585)

  iter_1586 = try(local.iter_1585.code_ptr >= length(var.code), true) ? local.iter_1585 : {
    output = (local.code_1586[0] == "."
      ? "${local.iter_1585.output}${join("", [for _ in range(local.code_1586[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1585.tape[local.iter_1585.tape_ptr]))])}"
      : local.iter_1585.output)
    
    tape = (
      local.code_1586[0] == "+"
        ? [for i, b in local.iter_1585.tape : (i == local.iter_1585.tape_ptr ? (b + local.code_1586[1]) % 256 : b)] :
      local.code_1586[0] == "-"
        ? [for i, b in local.iter_1585.tape : (i == local.iter_1585.tape_ptr ? (b - local.code_1586[1] + 256) % 256 : b)] :
      local.code_1586[0] == ","
        ? [for i, b in local.iter_1585.tape : (i == local.iter_1585.tape_ptr ? local.ascii_lookup[substr(local.input_1586, 0, 1)] : b)]
        : local.iter_1585.tape)

    tape_ptr = (
      local.code_1586[0] == "<"
        ? local.iter_1585.tape_ptr - local.code_1586[1] :
      local.code_1586[0] == ">"
        ? local.iter_1585.tape_ptr + local.code_1586[1]
        : local.iter_1585.tape_ptr)

    code_ptr = 2 + (
      local.code_1586[0] == "["
        ? local.iter_1585.tape[local.iter_1585.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1585.code_ptr)] : local.iter_1585.code_ptr :
      local.code_1586[0] == "]"
        ? local.iter_1585.tape[local.iter_1585.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1585.code_ptr)] : local.iter_1585.code_ptr
        : local.iter_1585.code_ptr)

    steps_taken = 1 + local.iter_1585.steps_taken
  }
}

locals {
  code_1587 = (try(local.iter_1586.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1586.code_ptr, local.iter_1586.code_ptr + 2)
    : [null])

  input_1587 = (local.code_1587[0] == ","
    ? substr(local.input_1586, local.code_1587[1], -1)
    : local.input_1586)

  iter_1587 = try(local.iter_1586.code_ptr >= length(var.code), true) ? local.iter_1586 : {
    output = (local.code_1587[0] == "."
      ? "${local.iter_1586.output}${join("", [for _ in range(local.code_1587[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1586.tape[local.iter_1586.tape_ptr]))])}"
      : local.iter_1586.output)
    
    tape = (
      local.code_1587[0] == "+"
        ? [for i, b in local.iter_1586.tape : (i == local.iter_1586.tape_ptr ? (b + local.code_1587[1]) % 256 : b)] :
      local.code_1587[0] == "-"
        ? [for i, b in local.iter_1586.tape : (i == local.iter_1586.tape_ptr ? (b - local.code_1587[1] + 256) % 256 : b)] :
      local.code_1587[0] == ","
        ? [for i, b in local.iter_1586.tape : (i == local.iter_1586.tape_ptr ? local.ascii_lookup[substr(local.input_1587, 0, 1)] : b)]
        : local.iter_1586.tape)

    tape_ptr = (
      local.code_1587[0] == "<"
        ? local.iter_1586.tape_ptr - local.code_1587[1] :
      local.code_1587[0] == ">"
        ? local.iter_1586.tape_ptr + local.code_1587[1]
        : local.iter_1586.tape_ptr)

    code_ptr = 2 + (
      local.code_1587[0] == "["
        ? local.iter_1586.tape[local.iter_1586.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1586.code_ptr)] : local.iter_1586.code_ptr :
      local.code_1587[0] == "]"
        ? local.iter_1586.tape[local.iter_1586.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1586.code_ptr)] : local.iter_1586.code_ptr
        : local.iter_1586.code_ptr)

    steps_taken = 1 + local.iter_1586.steps_taken
  }
}

locals {
  code_1588 = (try(local.iter_1587.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1587.code_ptr, local.iter_1587.code_ptr + 2)
    : [null])

  input_1588 = (local.code_1588[0] == ","
    ? substr(local.input_1587, local.code_1588[1], -1)
    : local.input_1587)

  iter_1588 = try(local.iter_1587.code_ptr >= length(var.code), true) ? local.iter_1587 : {
    output = (local.code_1588[0] == "."
      ? "${local.iter_1587.output}${join("", [for _ in range(local.code_1588[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1587.tape[local.iter_1587.tape_ptr]))])}"
      : local.iter_1587.output)
    
    tape = (
      local.code_1588[0] == "+"
        ? [for i, b in local.iter_1587.tape : (i == local.iter_1587.tape_ptr ? (b + local.code_1588[1]) % 256 : b)] :
      local.code_1588[0] == "-"
        ? [for i, b in local.iter_1587.tape : (i == local.iter_1587.tape_ptr ? (b - local.code_1588[1] + 256) % 256 : b)] :
      local.code_1588[0] == ","
        ? [for i, b in local.iter_1587.tape : (i == local.iter_1587.tape_ptr ? local.ascii_lookup[substr(local.input_1588, 0, 1)] : b)]
        : local.iter_1587.tape)

    tape_ptr = (
      local.code_1588[0] == "<"
        ? local.iter_1587.tape_ptr - local.code_1588[1] :
      local.code_1588[0] == ">"
        ? local.iter_1587.tape_ptr + local.code_1588[1]
        : local.iter_1587.tape_ptr)

    code_ptr = 2 + (
      local.code_1588[0] == "["
        ? local.iter_1587.tape[local.iter_1587.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1587.code_ptr)] : local.iter_1587.code_ptr :
      local.code_1588[0] == "]"
        ? local.iter_1587.tape[local.iter_1587.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1587.code_ptr)] : local.iter_1587.code_ptr
        : local.iter_1587.code_ptr)

    steps_taken = 1 + local.iter_1587.steps_taken
  }
}

locals {
  code_1589 = (try(local.iter_1588.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1588.code_ptr, local.iter_1588.code_ptr + 2)
    : [null])

  input_1589 = (local.code_1589[0] == ","
    ? substr(local.input_1588, local.code_1589[1], -1)
    : local.input_1588)

  iter_1589 = try(local.iter_1588.code_ptr >= length(var.code), true) ? local.iter_1588 : {
    output = (local.code_1589[0] == "."
      ? "${local.iter_1588.output}${join("", [for _ in range(local.code_1589[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1588.tape[local.iter_1588.tape_ptr]))])}"
      : local.iter_1588.output)
    
    tape = (
      local.code_1589[0] == "+"
        ? [for i, b in local.iter_1588.tape : (i == local.iter_1588.tape_ptr ? (b + local.code_1589[1]) % 256 : b)] :
      local.code_1589[0] == "-"
        ? [for i, b in local.iter_1588.tape : (i == local.iter_1588.tape_ptr ? (b - local.code_1589[1] + 256) % 256 : b)] :
      local.code_1589[0] == ","
        ? [for i, b in local.iter_1588.tape : (i == local.iter_1588.tape_ptr ? local.ascii_lookup[substr(local.input_1589, 0, 1)] : b)]
        : local.iter_1588.tape)

    tape_ptr = (
      local.code_1589[0] == "<"
        ? local.iter_1588.tape_ptr - local.code_1589[1] :
      local.code_1589[0] == ">"
        ? local.iter_1588.tape_ptr + local.code_1589[1]
        : local.iter_1588.tape_ptr)

    code_ptr = 2 + (
      local.code_1589[0] == "["
        ? local.iter_1588.tape[local.iter_1588.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1588.code_ptr)] : local.iter_1588.code_ptr :
      local.code_1589[0] == "]"
        ? local.iter_1588.tape[local.iter_1588.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1588.code_ptr)] : local.iter_1588.code_ptr
        : local.iter_1588.code_ptr)

    steps_taken = 1 + local.iter_1588.steps_taken
  }
}

locals {
  code_1590 = (try(local.iter_1589.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1589.code_ptr, local.iter_1589.code_ptr + 2)
    : [null])

  input_1590 = (local.code_1590[0] == ","
    ? substr(local.input_1589, local.code_1590[1], -1)
    : local.input_1589)

  iter_1590 = try(local.iter_1589.code_ptr >= length(var.code), true) ? local.iter_1589 : {
    output = (local.code_1590[0] == "."
      ? "${local.iter_1589.output}${join("", [for _ in range(local.code_1590[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1589.tape[local.iter_1589.tape_ptr]))])}"
      : local.iter_1589.output)
    
    tape = (
      local.code_1590[0] == "+"
        ? [for i, b in local.iter_1589.tape : (i == local.iter_1589.tape_ptr ? (b + local.code_1590[1]) % 256 : b)] :
      local.code_1590[0] == "-"
        ? [for i, b in local.iter_1589.tape : (i == local.iter_1589.tape_ptr ? (b - local.code_1590[1] + 256) % 256 : b)] :
      local.code_1590[0] == ","
        ? [for i, b in local.iter_1589.tape : (i == local.iter_1589.tape_ptr ? local.ascii_lookup[substr(local.input_1590, 0, 1)] : b)]
        : local.iter_1589.tape)

    tape_ptr = (
      local.code_1590[0] == "<"
        ? local.iter_1589.tape_ptr - local.code_1590[1] :
      local.code_1590[0] == ">"
        ? local.iter_1589.tape_ptr + local.code_1590[1]
        : local.iter_1589.tape_ptr)

    code_ptr = 2 + (
      local.code_1590[0] == "["
        ? local.iter_1589.tape[local.iter_1589.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1589.code_ptr)] : local.iter_1589.code_ptr :
      local.code_1590[0] == "]"
        ? local.iter_1589.tape[local.iter_1589.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1589.code_ptr)] : local.iter_1589.code_ptr
        : local.iter_1589.code_ptr)

    steps_taken = 1 + local.iter_1589.steps_taken
  }
}

locals {
  code_1591 = (try(local.iter_1590.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1590.code_ptr, local.iter_1590.code_ptr + 2)
    : [null])

  input_1591 = (local.code_1591[0] == ","
    ? substr(local.input_1590, local.code_1591[1], -1)
    : local.input_1590)

  iter_1591 = try(local.iter_1590.code_ptr >= length(var.code), true) ? local.iter_1590 : {
    output = (local.code_1591[0] == "."
      ? "${local.iter_1590.output}${join("", [for _ in range(local.code_1591[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1590.tape[local.iter_1590.tape_ptr]))])}"
      : local.iter_1590.output)
    
    tape = (
      local.code_1591[0] == "+"
        ? [for i, b in local.iter_1590.tape : (i == local.iter_1590.tape_ptr ? (b + local.code_1591[1]) % 256 : b)] :
      local.code_1591[0] == "-"
        ? [for i, b in local.iter_1590.tape : (i == local.iter_1590.tape_ptr ? (b - local.code_1591[1] + 256) % 256 : b)] :
      local.code_1591[0] == ","
        ? [for i, b in local.iter_1590.tape : (i == local.iter_1590.tape_ptr ? local.ascii_lookup[substr(local.input_1591, 0, 1)] : b)]
        : local.iter_1590.tape)

    tape_ptr = (
      local.code_1591[0] == "<"
        ? local.iter_1590.tape_ptr - local.code_1591[1] :
      local.code_1591[0] == ">"
        ? local.iter_1590.tape_ptr + local.code_1591[1]
        : local.iter_1590.tape_ptr)

    code_ptr = 2 + (
      local.code_1591[0] == "["
        ? local.iter_1590.tape[local.iter_1590.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1590.code_ptr)] : local.iter_1590.code_ptr :
      local.code_1591[0] == "]"
        ? local.iter_1590.tape[local.iter_1590.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1590.code_ptr)] : local.iter_1590.code_ptr
        : local.iter_1590.code_ptr)

    steps_taken = 1 + local.iter_1590.steps_taken
  }
}

locals {
  code_1592 = (try(local.iter_1591.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1591.code_ptr, local.iter_1591.code_ptr + 2)
    : [null])

  input_1592 = (local.code_1592[0] == ","
    ? substr(local.input_1591, local.code_1592[1], -1)
    : local.input_1591)

  iter_1592 = try(local.iter_1591.code_ptr >= length(var.code), true) ? local.iter_1591 : {
    output = (local.code_1592[0] == "."
      ? "${local.iter_1591.output}${join("", [for _ in range(local.code_1592[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1591.tape[local.iter_1591.tape_ptr]))])}"
      : local.iter_1591.output)
    
    tape = (
      local.code_1592[0] == "+"
        ? [for i, b in local.iter_1591.tape : (i == local.iter_1591.tape_ptr ? (b + local.code_1592[1]) % 256 : b)] :
      local.code_1592[0] == "-"
        ? [for i, b in local.iter_1591.tape : (i == local.iter_1591.tape_ptr ? (b - local.code_1592[1] + 256) % 256 : b)] :
      local.code_1592[0] == ","
        ? [for i, b in local.iter_1591.tape : (i == local.iter_1591.tape_ptr ? local.ascii_lookup[substr(local.input_1592, 0, 1)] : b)]
        : local.iter_1591.tape)

    tape_ptr = (
      local.code_1592[0] == "<"
        ? local.iter_1591.tape_ptr - local.code_1592[1] :
      local.code_1592[0] == ">"
        ? local.iter_1591.tape_ptr + local.code_1592[1]
        : local.iter_1591.tape_ptr)

    code_ptr = 2 + (
      local.code_1592[0] == "["
        ? local.iter_1591.tape[local.iter_1591.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1591.code_ptr)] : local.iter_1591.code_ptr :
      local.code_1592[0] == "]"
        ? local.iter_1591.tape[local.iter_1591.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1591.code_ptr)] : local.iter_1591.code_ptr
        : local.iter_1591.code_ptr)

    steps_taken = 1 + local.iter_1591.steps_taken
  }
}

locals {
  code_1593 = (try(local.iter_1592.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1592.code_ptr, local.iter_1592.code_ptr + 2)
    : [null])

  input_1593 = (local.code_1593[0] == ","
    ? substr(local.input_1592, local.code_1593[1], -1)
    : local.input_1592)

  iter_1593 = try(local.iter_1592.code_ptr >= length(var.code), true) ? local.iter_1592 : {
    output = (local.code_1593[0] == "."
      ? "${local.iter_1592.output}${join("", [for _ in range(local.code_1593[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1592.tape[local.iter_1592.tape_ptr]))])}"
      : local.iter_1592.output)
    
    tape = (
      local.code_1593[0] == "+"
        ? [for i, b in local.iter_1592.tape : (i == local.iter_1592.tape_ptr ? (b + local.code_1593[1]) % 256 : b)] :
      local.code_1593[0] == "-"
        ? [for i, b in local.iter_1592.tape : (i == local.iter_1592.tape_ptr ? (b - local.code_1593[1] + 256) % 256 : b)] :
      local.code_1593[0] == ","
        ? [for i, b in local.iter_1592.tape : (i == local.iter_1592.tape_ptr ? local.ascii_lookup[substr(local.input_1593, 0, 1)] : b)]
        : local.iter_1592.tape)

    tape_ptr = (
      local.code_1593[0] == "<"
        ? local.iter_1592.tape_ptr - local.code_1593[1] :
      local.code_1593[0] == ">"
        ? local.iter_1592.tape_ptr + local.code_1593[1]
        : local.iter_1592.tape_ptr)

    code_ptr = 2 + (
      local.code_1593[0] == "["
        ? local.iter_1592.tape[local.iter_1592.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1592.code_ptr)] : local.iter_1592.code_ptr :
      local.code_1593[0] == "]"
        ? local.iter_1592.tape[local.iter_1592.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1592.code_ptr)] : local.iter_1592.code_ptr
        : local.iter_1592.code_ptr)

    steps_taken = 1 + local.iter_1592.steps_taken
  }
}

locals {
  code_1594 = (try(local.iter_1593.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1593.code_ptr, local.iter_1593.code_ptr + 2)
    : [null])

  input_1594 = (local.code_1594[0] == ","
    ? substr(local.input_1593, local.code_1594[1], -1)
    : local.input_1593)

  iter_1594 = try(local.iter_1593.code_ptr >= length(var.code), true) ? local.iter_1593 : {
    output = (local.code_1594[0] == "."
      ? "${local.iter_1593.output}${join("", [for _ in range(local.code_1594[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1593.tape[local.iter_1593.tape_ptr]))])}"
      : local.iter_1593.output)
    
    tape = (
      local.code_1594[0] == "+"
        ? [for i, b in local.iter_1593.tape : (i == local.iter_1593.tape_ptr ? (b + local.code_1594[1]) % 256 : b)] :
      local.code_1594[0] == "-"
        ? [for i, b in local.iter_1593.tape : (i == local.iter_1593.tape_ptr ? (b - local.code_1594[1] + 256) % 256 : b)] :
      local.code_1594[0] == ","
        ? [for i, b in local.iter_1593.tape : (i == local.iter_1593.tape_ptr ? local.ascii_lookup[substr(local.input_1594, 0, 1)] : b)]
        : local.iter_1593.tape)

    tape_ptr = (
      local.code_1594[0] == "<"
        ? local.iter_1593.tape_ptr - local.code_1594[1] :
      local.code_1594[0] == ">"
        ? local.iter_1593.tape_ptr + local.code_1594[1]
        : local.iter_1593.tape_ptr)

    code_ptr = 2 + (
      local.code_1594[0] == "["
        ? local.iter_1593.tape[local.iter_1593.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1593.code_ptr)] : local.iter_1593.code_ptr :
      local.code_1594[0] == "]"
        ? local.iter_1593.tape[local.iter_1593.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1593.code_ptr)] : local.iter_1593.code_ptr
        : local.iter_1593.code_ptr)

    steps_taken = 1 + local.iter_1593.steps_taken
  }
}

locals {
  code_1595 = (try(local.iter_1594.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1594.code_ptr, local.iter_1594.code_ptr + 2)
    : [null])

  input_1595 = (local.code_1595[0] == ","
    ? substr(local.input_1594, local.code_1595[1], -1)
    : local.input_1594)

  iter_1595 = try(local.iter_1594.code_ptr >= length(var.code), true) ? local.iter_1594 : {
    output = (local.code_1595[0] == "."
      ? "${local.iter_1594.output}${join("", [for _ in range(local.code_1595[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1594.tape[local.iter_1594.tape_ptr]))])}"
      : local.iter_1594.output)
    
    tape = (
      local.code_1595[0] == "+"
        ? [for i, b in local.iter_1594.tape : (i == local.iter_1594.tape_ptr ? (b + local.code_1595[1]) % 256 : b)] :
      local.code_1595[0] == "-"
        ? [for i, b in local.iter_1594.tape : (i == local.iter_1594.tape_ptr ? (b - local.code_1595[1] + 256) % 256 : b)] :
      local.code_1595[0] == ","
        ? [for i, b in local.iter_1594.tape : (i == local.iter_1594.tape_ptr ? local.ascii_lookup[substr(local.input_1595, 0, 1)] : b)]
        : local.iter_1594.tape)

    tape_ptr = (
      local.code_1595[0] == "<"
        ? local.iter_1594.tape_ptr - local.code_1595[1] :
      local.code_1595[0] == ">"
        ? local.iter_1594.tape_ptr + local.code_1595[1]
        : local.iter_1594.tape_ptr)

    code_ptr = 2 + (
      local.code_1595[0] == "["
        ? local.iter_1594.tape[local.iter_1594.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1594.code_ptr)] : local.iter_1594.code_ptr :
      local.code_1595[0] == "]"
        ? local.iter_1594.tape[local.iter_1594.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1594.code_ptr)] : local.iter_1594.code_ptr
        : local.iter_1594.code_ptr)

    steps_taken = 1 + local.iter_1594.steps_taken
  }
}

locals {
  code_1596 = (try(local.iter_1595.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1595.code_ptr, local.iter_1595.code_ptr + 2)
    : [null])

  input_1596 = (local.code_1596[0] == ","
    ? substr(local.input_1595, local.code_1596[1], -1)
    : local.input_1595)

  iter_1596 = try(local.iter_1595.code_ptr >= length(var.code), true) ? local.iter_1595 : {
    output = (local.code_1596[0] == "."
      ? "${local.iter_1595.output}${join("", [for _ in range(local.code_1596[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1595.tape[local.iter_1595.tape_ptr]))])}"
      : local.iter_1595.output)
    
    tape = (
      local.code_1596[0] == "+"
        ? [for i, b in local.iter_1595.tape : (i == local.iter_1595.tape_ptr ? (b + local.code_1596[1]) % 256 : b)] :
      local.code_1596[0] == "-"
        ? [for i, b in local.iter_1595.tape : (i == local.iter_1595.tape_ptr ? (b - local.code_1596[1] + 256) % 256 : b)] :
      local.code_1596[0] == ","
        ? [for i, b in local.iter_1595.tape : (i == local.iter_1595.tape_ptr ? local.ascii_lookup[substr(local.input_1596, 0, 1)] : b)]
        : local.iter_1595.tape)

    tape_ptr = (
      local.code_1596[0] == "<"
        ? local.iter_1595.tape_ptr - local.code_1596[1] :
      local.code_1596[0] == ">"
        ? local.iter_1595.tape_ptr + local.code_1596[1]
        : local.iter_1595.tape_ptr)

    code_ptr = 2 + (
      local.code_1596[0] == "["
        ? local.iter_1595.tape[local.iter_1595.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1595.code_ptr)] : local.iter_1595.code_ptr :
      local.code_1596[0] == "]"
        ? local.iter_1595.tape[local.iter_1595.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1595.code_ptr)] : local.iter_1595.code_ptr
        : local.iter_1595.code_ptr)

    steps_taken = 1 + local.iter_1595.steps_taken
  }
}

locals {
  code_1597 = (try(local.iter_1596.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1596.code_ptr, local.iter_1596.code_ptr + 2)
    : [null])

  input_1597 = (local.code_1597[0] == ","
    ? substr(local.input_1596, local.code_1597[1], -1)
    : local.input_1596)

  iter_1597 = try(local.iter_1596.code_ptr >= length(var.code), true) ? local.iter_1596 : {
    output = (local.code_1597[0] == "."
      ? "${local.iter_1596.output}${join("", [for _ in range(local.code_1597[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1596.tape[local.iter_1596.tape_ptr]))])}"
      : local.iter_1596.output)
    
    tape = (
      local.code_1597[0] == "+"
        ? [for i, b in local.iter_1596.tape : (i == local.iter_1596.tape_ptr ? (b + local.code_1597[1]) % 256 : b)] :
      local.code_1597[0] == "-"
        ? [for i, b in local.iter_1596.tape : (i == local.iter_1596.tape_ptr ? (b - local.code_1597[1] + 256) % 256 : b)] :
      local.code_1597[0] == ","
        ? [for i, b in local.iter_1596.tape : (i == local.iter_1596.tape_ptr ? local.ascii_lookup[substr(local.input_1597, 0, 1)] : b)]
        : local.iter_1596.tape)

    tape_ptr = (
      local.code_1597[0] == "<"
        ? local.iter_1596.tape_ptr - local.code_1597[1] :
      local.code_1597[0] == ">"
        ? local.iter_1596.tape_ptr + local.code_1597[1]
        : local.iter_1596.tape_ptr)

    code_ptr = 2 + (
      local.code_1597[0] == "["
        ? local.iter_1596.tape[local.iter_1596.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1596.code_ptr)] : local.iter_1596.code_ptr :
      local.code_1597[0] == "]"
        ? local.iter_1596.tape[local.iter_1596.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1596.code_ptr)] : local.iter_1596.code_ptr
        : local.iter_1596.code_ptr)

    steps_taken = 1 + local.iter_1596.steps_taken
  }
}

locals {
  code_1598 = (try(local.iter_1597.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1597.code_ptr, local.iter_1597.code_ptr + 2)
    : [null])

  input_1598 = (local.code_1598[0] == ","
    ? substr(local.input_1597, local.code_1598[1], -1)
    : local.input_1597)

  iter_1598 = try(local.iter_1597.code_ptr >= length(var.code), true) ? local.iter_1597 : {
    output = (local.code_1598[0] == "."
      ? "${local.iter_1597.output}${join("", [for _ in range(local.code_1598[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1597.tape[local.iter_1597.tape_ptr]))])}"
      : local.iter_1597.output)
    
    tape = (
      local.code_1598[0] == "+"
        ? [for i, b in local.iter_1597.tape : (i == local.iter_1597.tape_ptr ? (b + local.code_1598[1]) % 256 : b)] :
      local.code_1598[0] == "-"
        ? [for i, b in local.iter_1597.tape : (i == local.iter_1597.tape_ptr ? (b - local.code_1598[1] + 256) % 256 : b)] :
      local.code_1598[0] == ","
        ? [for i, b in local.iter_1597.tape : (i == local.iter_1597.tape_ptr ? local.ascii_lookup[substr(local.input_1598, 0, 1)] : b)]
        : local.iter_1597.tape)

    tape_ptr = (
      local.code_1598[0] == "<"
        ? local.iter_1597.tape_ptr - local.code_1598[1] :
      local.code_1598[0] == ">"
        ? local.iter_1597.tape_ptr + local.code_1598[1]
        : local.iter_1597.tape_ptr)

    code_ptr = 2 + (
      local.code_1598[0] == "["
        ? local.iter_1597.tape[local.iter_1597.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1597.code_ptr)] : local.iter_1597.code_ptr :
      local.code_1598[0] == "]"
        ? local.iter_1597.tape[local.iter_1597.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1597.code_ptr)] : local.iter_1597.code_ptr
        : local.iter_1597.code_ptr)

    steps_taken = 1 + local.iter_1597.steps_taken
  }
}

locals {
  code_1599 = (try(local.iter_1598.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1598.code_ptr, local.iter_1598.code_ptr + 2)
    : [null])

  input_1599 = (local.code_1599[0] == ","
    ? substr(local.input_1598, local.code_1599[1], -1)
    : local.input_1598)

  iter_1599 = try(local.iter_1598.code_ptr >= length(var.code), true) ? local.iter_1598 : {
    output = (local.code_1599[0] == "."
      ? "${local.iter_1598.output}${join("", [for _ in range(local.code_1599[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1598.tape[local.iter_1598.tape_ptr]))])}"
      : local.iter_1598.output)
    
    tape = (
      local.code_1599[0] == "+"
        ? [for i, b in local.iter_1598.tape : (i == local.iter_1598.tape_ptr ? (b + local.code_1599[1]) % 256 : b)] :
      local.code_1599[0] == "-"
        ? [for i, b in local.iter_1598.tape : (i == local.iter_1598.tape_ptr ? (b - local.code_1599[1] + 256) % 256 : b)] :
      local.code_1599[0] == ","
        ? [for i, b in local.iter_1598.tape : (i == local.iter_1598.tape_ptr ? local.ascii_lookup[substr(local.input_1599, 0, 1)] : b)]
        : local.iter_1598.tape)

    tape_ptr = (
      local.code_1599[0] == "<"
        ? local.iter_1598.tape_ptr - local.code_1599[1] :
      local.code_1599[0] == ">"
        ? local.iter_1598.tape_ptr + local.code_1599[1]
        : local.iter_1598.tape_ptr)

    code_ptr = 2 + (
      local.code_1599[0] == "["
        ? local.iter_1598.tape[local.iter_1598.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1598.code_ptr)] : local.iter_1598.code_ptr :
      local.code_1599[0] == "]"
        ? local.iter_1598.tape[local.iter_1598.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1598.code_ptr)] : local.iter_1598.code_ptr
        : local.iter_1598.code_ptr)

    steps_taken = 1 + local.iter_1598.steps_taken
  }
}

locals {
  code_1600 = (try(local.iter_1599.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1599.code_ptr, local.iter_1599.code_ptr + 2)
    : [null])

  input_1600 = (local.code_1600[0] == ","
    ? substr(local.input_1599, local.code_1600[1], -1)
    : local.input_1599)

  iter_1600 = try(local.iter_1599.code_ptr >= length(var.code), true) ? local.iter_1599 : {
    output = (local.code_1600[0] == "."
      ? "${local.iter_1599.output}${join("", [for _ in range(local.code_1600[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1599.tape[local.iter_1599.tape_ptr]))])}"
      : local.iter_1599.output)
    
    tape = (
      local.code_1600[0] == "+"
        ? [for i, b in local.iter_1599.tape : (i == local.iter_1599.tape_ptr ? (b + local.code_1600[1]) % 256 : b)] :
      local.code_1600[0] == "-"
        ? [for i, b in local.iter_1599.tape : (i == local.iter_1599.tape_ptr ? (b - local.code_1600[1] + 256) % 256 : b)] :
      local.code_1600[0] == ","
        ? [for i, b in local.iter_1599.tape : (i == local.iter_1599.tape_ptr ? local.ascii_lookup[substr(local.input_1600, 0, 1)] : b)]
        : local.iter_1599.tape)

    tape_ptr = (
      local.code_1600[0] == "<"
        ? local.iter_1599.tape_ptr - local.code_1600[1] :
      local.code_1600[0] == ">"
        ? local.iter_1599.tape_ptr + local.code_1600[1]
        : local.iter_1599.tape_ptr)

    code_ptr = 2 + (
      local.code_1600[0] == "["
        ? local.iter_1599.tape[local.iter_1599.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1599.code_ptr)] : local.iter_1599.code_ptr :
      local.code_1600[0] == "]"
        ? local.iter_1599.tape[local.iter_1599.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1599.code_ptr)] : local.iter_1599.code_ptr
        : local.iter_1599.code_ptr)

    steps_taken = 1 + local.iter_1599.steps_taken
  }
}

locals {
  code_1601 = (try(local.iter_1600.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1600.code_ptr, local.iter_1600.code_ptr + 2)
    : [null])

  input_1601 = (local.code_1601[0] == ","
    ? substr(local.input_1600, local.code_1601[1], -1)
    : local.input_1600)

  iter_1601 = try(local.iter_1600.code_ptr >= length(var.code), true) ? local.iter_1600 : {
    output = (local.code_1601[0] == "."
      ? "${local.iter_1600.output}${join("", [for _ in range(local.code_1601[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1600.tape[local.iter_1600.tape_ptr]))])}"
      : local.iter_1600.output)
    
    tape = (
      local.code_1601[0] == "+"
        ? [for i, b in local.iter_1600.tape : (i == local.iter_1600.tape_ptr ? (b + local.code_1601[1]) % 256 : b)] :
      local.code_1601[0] == "-"
        ? [for i, b in local.iter_1600.tape : (i == local.iter_1600.tape_ptr ? (b - local.code_1601[1] + 256) % 256 : b)] :
      local.code_1601[0] == ","
        ? [for i, b in local.iter_1600.tape : (i == local.iter_1600.tape_ptr ? local.ascii_lookup[substr(local.input_1601, 0, 1)] : b)]
        : local.iter_1600.tape)

    tape_ptr = (
      local.code_1601[0] == "<"
        ? local.iter_1600.tape_ptr - local.code_1601[1] :
      local.code_1601[0] == ">"
        ? local.iter_1600.tape_ptr + local.code_1601[1]
        : local.iter_1600.tape_ptr)

    code_ptr = 2 + (
      local.code_1601[0] == "["
        ? local.iter_1600.tape[local.iter_1600.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1600.code_ptr)] : local.iter_1600.code_ptr :
      local.code_1601[0] == "]"
        ? local.iter_1600.tape[local.iter_1600.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1600.code_ptr)] : local.iter_1600.code_ptr
        : local.iter_1600.code_ptr)

    steps_taken = 1 + local.iter_1600.steps_taken
  }
}

locals {
  code_1602 = (try(local.iter_1601.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1601.code_ptr, local.iter_1601.code_ptr + 2)
    : [null])

  input_1602 = (local.code_1602[0] == ","
    ? substr(local.input_1601, local.code_1602[1], -1)
    : local.input_1601)

  iter_1602 = try(local.iter_1601.code_ptr >= length(var.code), true) ? local.iter_1601 : {
    output = (local.code_1602[0] == "."
      ? "${local.iter_1601.output}${join("", [for _ in range(local.code_1602[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1601.tape[local.iter_1601.tape_ptr]))])}"
      : local.iter_1601.output)
    
    tape = (
      local.code_1602[0] == "+"
        ? [for i, b in local.iter_1601.tape : (i == local.iter_1601.tape_ptr ? (b + local.code_1602[1]) % 256 : b)] :
      local.code_1602[0] == "-"
        ? [for i, b in local.iter_1601.tape : (i == local.iter_1601.tape_ptr ? (b - local.code_1602[1] + 256) % 256 : b)] :
      local.code_1602[0] == ","
        ? [for i, b in local.iter_1601.tape : (i == local.iter_1601.tape_ptr ? local.ascii_lookup[substr(local.input_1602, 0, 1)] : b)]
        : local.iter_1601.tape)

    tape_ptr = (
      local.code_1602[0] == "<"
        ? local.iter_1601.tape_ptr - local.code_1602[1] :
      local.code_1602[0] == ">"
        ? local.iter_1601.tape_ptr + local.code_1602[1]
        : local.iter_1601.tape_ptr)

    code_ptr = 2 + (
      local.code_1602[0] == "["
        ? local.iter_1601.tape[local.iter_1601.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1601.code_ptr)] : local.iter_1601.code_ptr :
      local.code_1602[0] == "]"
        ? local.iter_1601.tape[local.iter_1601.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1601.code_ptr)] : local.iter_1601.code_ptr
        : local.iter_1601.code_ptr)

    steps_taken = 1 + local.iter_1601.steps_taken
  }
}

locals {
  code_1603 = (try(local.iter_1602.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1602.code_ptr, local.iter_1602.code_ptr + 2)
    : [null])

  input_1603 = (local.code_1603[0] == ","
    ? substr(local.input_1602, local.code_1603[1], -1)
    : local.input_1602)

  iter_1603 = try(local.iter_1602.code_ptr >= length(var.code), true) ? local.iter_1602 : {
    output = (local.code_1603[0] == "."
      ? "${local.iter_1602.output}${join("", [for _ in range(local.code_1603[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1602.tape[local.iter_1602.tape_ptr]))])}"
      : local.iter_1602.output)
    
    tape = (
      local.code_1603[0] == "+"
        ? [for i, b in local.iter_1602.tape : (i == local.iter_1602.tape_ptr ? (b + local.code_1603[1]) % 256 : b)] :
      local.code_1603[0] == "-"
        ? [for i, b in local.iter_1602.tape : (i == local.iter_1602.tape_ptr ? (b - local.code_1603[1] + 256) % 256 : b)] :
      local.code_1603[0] == ","
        ? [for i, b in local.iter_1602.tape : (i == local.iter_1602.tape_ptr ? local.ascii_lookup[substr(local.input_1603, 0, 1)] : b)]
        : local.iter_1602.tape)

    tape_ptr = (
      local.code_1603[0] == "<"
        ? local.iter_1602.tape_ptr - local.code_1603[1] :
      local.code_1603[0] == ">"
        ? local.iter_1602.tape_ptr + local.code_1603[1]
        : local.iter_1602.tape_ptr)

    code_ptr = 2 + (
      local.code_1603[0] == "["
        ? local.iter_1602.tape[local.iter_1602.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1602.code_ptr)] : local.iter_1602.code_ptr :
      local.code_1603[0] == "]"
        ? local.iter_1602.tape[local.iter_1602.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1602.code_ptr)] : local.iter_1602.code_ptr
        : local.iter_1602.code_ptr)

    steps_taken = 1 + local.iter_1602.steps_taken
  }
}

locals {
  code_1604 = (try(local.iter_1603.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1603.code_ptr, local.iter_1603.code_ptr + 2)
    : [null])

  input_1604 = (local.code_1604[0] == ","
    ? substr(local.input_1603, local.code_1604[1], -1)
    : local.input_1603)

  iter_1604 = try(local.iter_1603.code_ptr >= length(var.code), true) ? local.iter_1603 : {
    output = (local.code_1604[0] == "."
      ? "${local.iter_1603.output}${join("", [for _ in range(local.code_1604[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1603.tape[local.iter_1603.tape_ptr]))])}"
      : local.iter_1603.output)
    
    tape = (
      local.code_1604[0] == "+"
        ? [for i, b in local.iter_1603.tape : (i == local.iter_1603.tape_ptr ? (b + local.code_1604[1]) % 256 : b)] :
      local.code_1604[0] == "-"
        ? [for i, b in local.iter_1603.tape : (i == local.iter_1603.tape_ptr ? (b - local.code_1604[1] + 256) % 256 : b)] :
      local.code_1604[0] == ","
        ? [for i, b in local.iter_1603.tape : (i == local.iter_1603.tape_ptr ? local.ascii_lookup[substr(local.input_1604, 0, 1)] : b)]
        : local.iter_1603.tape)

    tape_ptr = (
      local.code_1604[0] == "<"
        ? local.iter_1603.tape_ptr - local.code_1604[1] :
      local.code_1604[0] == ">"
        ? local.iter_1603.tape_ptr + local.code_1604[1]
        : local.iter_1603.tape_ptr)

    code_ptr = 2 + (
      local.code_1604[0] == "["
        ? local.iter_1603.tape[local.iter_1603.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1603.code_ptr)] : local.iter_1603.code_ptr :
      local.code_1604[0] == "]"
        ? local.iter_1603.tape[local.iter_1603.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1603.code_ptr)] : local.iter_1603.code_ptr
        : local.iter_1603.code_ptr)

    steps_taken = 1 + local.iter_1603.steps_taken
  }
}

locals {
  code_1605 = (try(local.iter_1604.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1604.code_ptr, local.iter_1604.code_ptr + 2)
    : [null])

  input_1605 = (local.code_1605[0] == ","
    ? substr(local.input_1604, local.code_1605[1], -1)
    : local.input_1604)

  iter_1605 = try(local.iter_1604.code_ptr >= length(var.code), true) ? local.iter_1604 : {
    output = (local.code_1605[0] == "."
      ? "${local.iter_1604.output}${join("", [for _ in range(local.code_1605[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1604.tape[local.iter_1604.tape_ptr]))])}"
      : local.iter_1604.output)
    
    tape = (
      local.code_1605[0] == "+"
        ? [for i, b in local.iter_1604.tape : (i == local.iter_1604.tape_ptr ? (b + local.code_1605[1]) % 256 : b)] :
      local.code_1605[0] == "-"
        ? [for i, b in local.iter_1604.tape : (i == local.iter_1604.tape_ptr ? (b - local.code_1605[1] + 256) % 256 : b)] :
      local.code_1605[0] == ","
        ? [for i, b in local.iter_1604.tape : (i == local.iter_1604.tape_ptr ? local.ascii_lookup[substr(local.input_1605, 0, 1)] : b)]
        : local.iter_1604.tape)

    tape_ptr = (
      local.code_1605[0] == "<"
        ? local.iter_1604.tape_ptr - local.code_1605[1] :
      local.code_1605[0] == ">"
        ? local.iter_1604.tape_ptr + local.code_1605[1]
        : local.iter_1604.tape_ptr)

    code_ptr = 2 + (
      local.code_1605[0] == "["
        ? local.iter_1604.tape[local.iter_1604.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1604.code_ptr)] : local.iter_1604.code_ptr :
      local.code_1605[0] == "]"
        ? local.iter_1604.tape[local.iter_1604.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1604.code_ptr)] : local.iter_1604.code_ptr
        : local.iter_1604.code_ptr)

    steps_taken = 1 + local.iter_1604.steps_taken
  }
}

locals {
  code_1606 = (try(local.iter_1605.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1605.code_ptr, local.iter_1605.code_ptr + 2)
    : [null])

  input_1606 = (local.code_1606[0] == ","
    ? substr(local.input_1605, local.code_1606[1], -1)
    : local.input_1605)

  iter_1606 = try(local.iter_1605.code_ptr >= length(var.code), true) ? local.iter_1605 : {
    output = (local.code_1606[0] == "."
      ? "${local.iter_1605.output}${join("", [for _ in range(local.code_1606[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1605.tape[local.iter_1605.tape_ptr]))])}"
      : local.iter_1605.output)
    
    tape = (
      local.code_1606[0] == "+"
        ? [for i, b in local.iter_1605.tape : (i == local.iter_1605.tape_ptr ? (b + local.code_1606[1]) % 256 : b)] :
      local.code_1606[0] == "-"
        ? [for i, b in local.iter_1605.tape : (i == local.iter_1605.tape_ptr ? (b - local.code_1606[1] + 256) % 256 : b)] :
      local.code_1606[0] == ","
        ? [for i, b in local.iter_1605.tape : (i == local.iter_1605.tape_ptr ? local.ascii_lookup[substr(local.input_1606, 0, 1)] : b)]
        : local.iter_1605.tape)

    tape_ptr = (
      local.code_1606[0] == "<"
        ? local.iter_1605.tape_ptr - local.code_1606[1] :
      local.code_1606[0] == ">"
        ? local.iter_1605.tape_ptr + local.code_1606[1]
        : local.iter_1605.tape_ptr)

    code_ptr = 2 + (
      local.code_1606[0] == "["
        ? local.iter_1605.tape[local.iter_1605.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1605.code_ptr)] : local.iter_1605.code_ptr :
      local.code_1606[0] == "]"
        ? local.iter_1605.tape[local.iter_1605.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1605.code_ptr)] : local.iter_1605.code_ptr
        : local.iter_1605.code_ptr)

    steps_taken = 1 + local.iter_1605.steps_taken
  }
}

locals {
  code_1607 = (try(local.iter_1606.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1606.code_ptr, local.iter_1606.code_ptr + 2)
    : [null])

  input_1607 = (local.code_1607[0] == ","
    ? substr(local.input_1606, local.code_1607[1], -1)
    : local.input_1606)

  iter_1607 = try(local.iter_1606.code_ptr >= length(var.code), true) ? local.iter_1606 : {
    output = (local.code_1607[0] == "."
      ? "${local.iter_1606.output}${join("", [for _ in range(local.code_1607[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1606.tape[local.iter_1606.tape_ptr]))])}"
      : local.iter_1606.output)
    
    tape = (
      local.code_1607[0] == "+"
        ? [for i, b in local.iter_1606.tape : (i == local.iter_1606.tape_ptr ? (b + local.code_1607[1]) % 256 : b)] :
      local.code_1607[0] == "-"
        ? [for i, b in local.iter_1606.tape : (i == local.iter_1606.tape_ptr ? (b - local.code_1607[1] + 256) % 256 : b)] :
      local.code_1607[0] == ","
        ? [for i, b in local.iter_1606.tape : (i == local.iter_1606.tape_ptr ? local.ascii_lookup[substr(local.input_1607, 0, 1)] : b)]
        : local.iter_1606.tape)

    tape_ptr = (
      local.code_1607[0] == "<"
        ? local.iter_1606.tape_ptr - local.code_1607[1] :
      local.code_1607[0] == ">"
        ? local.iter_1606.tape_ptr + local.code_1607[1]
        : local.iter_1606.tape_ptr)

    code_ptr = 2 + (
      local.code_1607[0] == "["
        ? local.iter_1606.tape[local.iter_1606.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1606.code_ptr)] : local.iter_1606.code_ptr :
      local.code_1607[0] == "]"
        ? local.iter_1606.tape[local.iter_1606.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1606.code_ptr)] : local.iter_1606.code_ptr
        : local.iter_1606.code_ptr)

    steps_taken = 1 + local.iter_1606.steps_taken
  }
}

locals {
  code_1608 = (try(local.iter_1607.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1607.code_ptr, local.iter_1607.code_ptr + 2)
    : [null])

  input_1608 = (local.code_1608[0] == ","
    ? substr(local.input_1607, local.code_1608[1], -1)
    : local.input_1607)

  iter_1608 = try(local.iter_1607.code_ptr >= length(var.code), true) ? local.iter_1607 : {
    output = (local.code_1608[0] == "."
      ? "${local.iter_1607.output}${join("", [for _ in range(local.code_1608[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1607.tape[local.iter_1607.tape_ptr]))])}"
      : local.iter_1607.output)
    
    tape = (
      local.code_1608[0] == "+"
        ? [for i, b in local.iter_1607.tape : (i == local.iter_1607.tape_ptr ? (b + local.code_1608[1]) % 256 : b)] :
      local.code_1608[0] == "-"
        ? [for i, b in local.iter_1607.tape : (i == local.iter_1607.tape_ptr ? (b - local.code_1608[1] + 256) % 256 : b)] :
      local.code_1608[0] == ","
        ? [for i, b in local.iter_1607.tape : (i == local.iter_1607.tape_ptr ? local.ascii_lookup[substr(local.input_1608, 0, 1)] : b)]
        : local.iter_1607.tape)

    tape_ptr = (
      local.code_1608[0] == "<"
        ? local.iter_1607.tape_ptr - local.code_1608[1] :
      local.code_1608[0] == ">"
        ? local.iter_1607.tape_ptr + local.code_1608[1]
        : local.iter_1607.tape_ptr)

    code_ptr = 2 + (
      local.code_1608[0] == "["
        ? local.iter_1607.tape[local.iter_1607.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1607.code_ptr)] : local.iter_1607.code_ptr :
      local.code_1608[0] == "]"
        ? local.iter_1607.tape[local.iter_1607.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1607.code_ptr)] : local.iter_1607.code_ptr
        : local.iter_1607.code_ptr)

    steps_taken = 1 + local.iter_1607.steps_taken
  }
}

locals {
  code_1609 = (try(local.iter_1608.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1608.code_ptr, local.iter_1608.code_ptr + 2)
    : [null])

  input_1609 = (local.code_1609[0] == ","
    ? substr(local.input_1608, local.code_1609[1], -1)
    : local.input_1608)

  iter_1609 = try(local.iter_1608.code_ptr >= length(var.code), true) ? local.iter_1608 : {
    output = (local.code_1609[0] == "."
      ? "${local.iter_1608.output}${join("", [for _ in range(local.code_1609[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1608.tape[local.iter_1608.tape_ptr]))])}"
      : local.iter_1608.output)
    
    tape = (
      local.code_1609[0] == "+"
        ? [for i, b in local.iter_1608.tape : (i == local.iter_1608.tape_ptr ? (b + local.code_1609[1]) % 256 : b)] :
      local.code_1609[0] == "-"
        ? [for i, b in local.iter_1608.tape : (i == local.iter_1608.tape_ptr ? (b - local.code_1609[1] + 256) % 256 : b)] :
      local.code_1609[0] == ","
        ? [for i, b in local.iter_1608.tape : (i == local.iter_1608.tape_ptr ? local.ascii_lookup[substr(local.input_1609, 0, 1)] : b)]
        : local.iter_1608.tape)

    tape_ptr = (
      local.code_1609[0] == "<"
        ? local.iter_1608.tape_ptr - local.code_1609[1] :
      local.code_1609[0] == ">"
        ? local.iter_1608.tape_ptr + local.code_1609[1]
        : local.iter_1608.tape_ptr)

    code_ptr = 2 + (
      local.code_1609[0] == "["
        ? local.iter_1608.tape[local.iter_1608.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1608.code_ptr)] : local.iter_1608.code_ptr :
      local.code_1609[0] == "]"
        ? local.iter_1608.tape[local.iter_1608.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1608.code_ptr)] : local.iter_1608.code_ptr
        : local.iter_1608.code_ptr)

    steps_taken = 1 + local.iter_1608.steps_taken
  }
}

locals {
  code_1610 = (try(local.iter_1609.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1609.code_ptr, local.iter_1609.code_ptr + 2)
    : [null])

  input_1610 = (local.code_1610[0] == ","
    ? substr(local.input_1609, local.code_1610[1], -1)
    : local.input_1609)

  iter_1610 = try(local.iter_1609.code_ptr >= length(var.code), true) ? local.iter_1609 : {
    output = (local.code_1610[0] == "."
      ? "${local.iter_1609.output}${join("", [for _ in range(local.code_1610[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1609.tape[local.iter_1609.tape_ptr]))])}"
      : local.iter_1609.output)
    
    tape = (
      local.code_1610[0] == "+"
        ? [for i, b in local.iter_1609.tape : (i == local.iter_1609.tape_ptr ? (b + local.code_1610[1]) % 256 : b)] :
      local.code_1610[0] == "-"
        ? [for i, b in local.iter_1609.tape : (i == local.iter_1609.tape_ptr ? (b - local.code_1610[1] + 256) % 256 : b)] :
      local.code_1610[0] == ","
        ? [for i, b in local.iter_1609.tape : (i == local.iter_1609.tape_ptr ? local.ascii_lookup[substr(local.input_1610, 0, 1)] : b)]
        : local.iter_1609.tape)

    tape_ptr = (
      local.code_1610[0] == "<"
        ? local.iter_1609.tape_ptr - local.code_1610[1] :
      local.code_1610[0] == ">"
        ? local.iter_1609.tape_ptr + local.code_1610[1]
        : local.iter_1609.tape_ptr)

    code_ptr = 2 + (
      local.code_1610[0] == "["
        ? local.iter_1609.tape[local.iter_1609.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1609.code_ptr)] : local.iter_1609.code_ptr :
      local.code_1610[0] == "]"
        ? local.iter_1609.tape[local.iter_1609.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1609.code_ptr)] : local.iter_1609.code_ptr
        : local.iter_1609.code_ptr)

    steps_taken = 1 + local.iter_1609.steps_taken
  }
}

locals {
  code_1611 = (try(local.iter_1610.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1610.code_ptr, local.iter_1610.code_ptr + 2)
    : [null])

  input_1611 = (local.code_1611[0] == ","
    ? substr(local.input_1610, local.code_1611[1], -1)
    : local.input_1610)

  iter_1611 = try(local.iter_1610.code_ptr >= length(var.code), true) ? local.iter_1610 : {
    output = (local.code_1611[0] == "."
      ? "${local.iter_1610.output}${join("", [for _ in range(local.code_1611[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1610.tape[local.iter_1610.tape_ptr]))])}"
      : local.iter_1610.output)
    
    tape = (
      local.code_1611[0] == "+"
        ? [for i, b in local.iter_1610.tape : (i == local.iter_1610.tape_ptr ? (b + local.code_1611[1]) % 256 : b)] :
      local.code_1611[0] == "-"
        ? [for i, b in local.iter_1610.tape : (i == local.iter_1610.tape_ptr ? (b - local.code_1611[1] + 256) % 256 : b)] :
      local.code_1611[0] == ","
        ? [for i, b in local.iter_1610.tape : (i == local.iter_1610.tape_ptr ? local.ascii_lookup[substr(local.input_1611, 0, 1)] : b)]
        : local.iter_1610.tape)

    tape_ptr = (
      local.code_1611[0] == "<"
        ? local.iter_1610.tape_ptr - local.code_1611[1] :
      local.code_1611[0] == ">"
        ? local.iter_1610.tape_ptr + local.code_1611[1]
        : local.iter_1610.tape_ptr)

    code_ptr = 2 + (
      local.code_1611[0] == "["
        ? local.iter_1610.tape[local.iter_1610.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1610.code_ptr)] : local.iter_1610.code_ptr :
      local.code_1611[0] == "]"
        ? local.iter_1610.tape[local.iter_1610.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1610.code_ptr)] : local.iter_1610.code_ptr
        : local.iter_1610.code_ptr)

    steps_taken = 1 + local.iter_1610.steps_taken
  }
}

locals {
  code_1612 = (try(local.iter_1611.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1611.code_ptr, local.iter_1611.code_ptr + 2)
    : [null])

  input_1612 = (local.code_1612[0] == ","
    ? substr(local.input_1611, local.code_1612[1], -1)
    : local.input_1611)

  iter_1612 = try(local.iter_1611.code_ptr >= length(var.code), true) ? local.iter_1611 : {
    output = (local.code_1612[0] == "."
      ? "${local.iter_1611.output}${join("", [for _ in range(local.code_1612[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1611.tape[local.iter_1611.tape_ptr]))])}"
      : local.iter_1611.output)
    
    tape = (
      local.code_1612[0] == "+"
        ? [for i, b in local.iter_1611.tape : (i == local.iter_1611.tape_ptr ? (b + local.code_1612[1]) % 256 : b)] :
      local.code_1612[0] == "-"
        ? [for i, b in local.iter_1611.tape : (i == local.iter_1611.tape_ptr ? (b - local.code_1612[1] + 256) % 256 : b)] :
      local.code_1612[0] == ","
        ? [for i, b in local.iter_1611.tape : (i == local.iter_1611.tape_ptr ? local.ascii_lookup[substr(local.input_1612, 0, 1)] : b)]
        : local.iter_1611.tape)

    tape_ptr = (
      local.code_1612[0] == "<"
        ? local.iter_1611.tape_ptr - local.code_1612[1] :
      local.code_1612[0] == ">"
        ? local.iter_1611.tape_ptr + local.code_1612[1]
        : local.iter_1611.tape_ptr)

    code_ptr = 2 + (
      local.code_1612[0] == "["
        ? local.iter_1611.tape[local.iter_1611.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1611.code_ptr)] : local.iter_1611.code_ptr :
      local.code_1612[0] == "]"
        ? local.iter_1611.tape[local.iter_1611.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1611.code_ptr)] : local.iter_1611.code_ptr
        : local.iter_1611.code_ptr)

    steps_taken = 1 + local.iter_1611.steps_taken
  }
}

locals {
  code_1613 = (try(local.iter_1612.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1612.code_ptr, local.iter_1612.code_ptr + 2)
    : [null])

  input_1613 = (local.code_1613[0] == ","
    ? substr(local.input_1612, local.code_1613[1], -1)
    : local.input_1612)

  iter_1613 = try(local.iter_1612.code_ptr >= length(var.code), true) ? local.iter_1612 : {
    output = (local.code_1613[0] == "."
      ? "${local.iter_1612.output}${join("", [for _ in range(local.code_1613[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1612.tape[local.iter_1612.tape_ptr]))])}"
      : local.iter_1612.output)
    
    tape = (
      local.code_1613[0] == "+"
        ? [for i, b in local.iter_1612.tape : (i == local.iter_1612.tape_ptr ? (b + local.code_1613[1]) % 256 : b)] :
      local.code_1613[0] == "-"
        ? [for i, b in local.iter_1612.tape : (i == local.iter_1612.tape_ptr ? (b - local.code_1613[1] + 256) % 256 : b)] :
      local.code_1613[0] == ","
        ? [for i, b in local.iter_1612.tape : (i == local.iter_1612.tape_ptr ? local.ascii_lookup[substr(local.input_1613, 0, 1)] : b)]
        : local.iter_1612.tape)

    tape_ptr = (
      local.code_1613[0] == "<"
        ? local.iter_1612.tape_ptr - local.code_1613[1] :
      local.code_1613[0] == ">"
        ? local.iter_1612.tape_ptr + local.code_1613[1]
        : local.iter_1612.tape_ptr)

    code_ptr = 2 + (
      local.code_1613[0] == "["
        ? local.iter_1612.tape[local.iter_1612.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1612.code_ptr)] : local.iter_1612.code_ptr :
      local.code_1613[0] == "]"
        ? local.iter_1612.tape[local.iter_1612.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1612.code_ptr)] : local.iter_1612.code_ptr
        : local.iter_1612.code_ptr)

    steps_taken = 1 + local.iter_1612.steps_taken
  }
}

locals {
  code_1614 = (try(local.iter_1613.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1613.code_ptr, local.iter_1613.code_ptr + 2)
    : [null])

  input_1614 = (local.code_1614[0] == ","
    ? substr(local.input_1613, local.code_1614[1], -1)
    : local.input_1613)

  iter_1614 = try(local.iter_1613.code_ptr >= length(var.code), true) ? local.iter_1613 : {
    output = (local.code_1614[0] == "."
      ? "${local.iter_1613.output}${join("", [for _ in range(local.code_1614[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1613.tape[local.iter_1613.tape_ptr]))])}"
      : local.iter_1613.output)
    
    tape = (
      local.code_1614[0] == "+"
        ? [for i, b in local.iter_1613.tape : (i == local.iter_1613.tape_ptr ? (b + local.code_1614[1]) % 256 : b)] :
      local.code_1614[0] == "-"
        ? [for i, b in local.iter_1613.tape : (i == local.iter_1613.tape_ptr ? (b - local.code_1614[1] + 256) % 256 : b)] :
      local.code_1614[0] == ","
        ? [for i, b in local.iter_1613.tape : (i == local.iter_1613.tape_ptr ? local.ascii_lookup[substr(local.input_1614, 0, 1)] : b)]
        : local.iter_1613.tape)

    tape_ptr = (
      local.code_1614[0] == "<"
        ? local.iter_1613.tape_ptr - local.code_1614[1] :
      local.code_1614[0] == ">"
        ? local.iter_1613.tape_ptr + local.code_1614[1]
        : local.iter_1613.tape_ptr)

    code_ptr = 2 + (
      local.code_1614[0] == "["
        ? local.iter_1613.tape[local.iter_1613.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1613.code_ptr)] : local.iter_1613.code_ptr :
      local.code_1614[0] == "]"
        ? local.iter_1613.tape[local.iter_1613.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1613.code_ptr)] : local.iter_1613.code_ptr
        : local.iter_1613.code_ptr)

    steps_taken = 1 + local.iter_1613.steps_taken
  }
}

locals {
  code_1615 = (try(local.iter_1614.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1614.code_ptr, local.iter_1614.code_ptr + 2)
    : [null])

  input_1615 = (local.code_1615[0] == ","
    ? substr(local.input_1614, local.code_1615[1], -1)
    : local.input_1614)

  iter_1615 = try(local.iter_1614.code_ptr >= length(var.code), true) ? local.iter_1614 : {
    output = (local.code_1615[0] == "."
      ? "${local.iter_1614.output}${join("", [for _ in range(local.code_1615[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1614.tape[local.iter_1614.tape_ptr]))])}"
      : local.iter_1614.output)
    
    tape = (
      local.code_1615[0] == "+"
        ? [for i, b in local.iter_1614.tape : (i == local.iter_1614.tape_ptr ? (b + local.code_1615[1]) % 256 : b)] :
      local.code_1615[0] == "-"
        ? [for i, b in local.iter_1614.tape : (i == local.iter_1614.tape_ptr ? (b - local.code_1615[1] + 256) % 256 : b)] :
      local.code_1615[0] == ","
        ? [for i, b in local.iter_1614.tape : (i == local.iter_1614.tape_ptr ? local.ascii_lookup[substr(local.input_1615, 0, 1)] : b)]
        : local.iter_1614.tape)

    tape_ptr = (
      local.code_1615[0] == "<"
        ? local.iter_1614.tape_ptr - local.code_1615[1] :
      local.code_1615[0] == ">"
        ? local.iter_1614.tape_ptr + local.code_1615[1]
        : local.iter_1614.tape_ptr)

    code_ptr = 2 + (
      local.code_1615[0] == "["
        ? local.iter_1614.tape[local.iter_1614.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1614.code_ptr)] : local.iter_1614.code_ptr :
      local.code_1615[0] == "]"
        ? local.iter_1614.tape[local.iter_1614.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1614.code_ptr)] : local.iter_1614.code_ptr
        : local.iter_1614.code_ptr)

    steps_taken = 1 + local.iter_1614.steps_taken
  }
}

locals {
  code_1616 = (try(local.iter_1615.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1615.code_ptr, local.iter_1615.code_ptr + 2)
    : [null])

  input_1616 = (local.code_1616[0] == ","
    ? substr(local.input_1615, local.code_1616[1], -1)
    : local.input_1615)

  iter_1616 = try(local.iter_1615.code_ptr >= length(var.code), true) ? local.iter_1615 : {
    output = (local.code_1616[0] == "."
      ? "${local.iter_1615.output}${join("", [for _ in range(local.code_1616[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1615.tape[local.iter_1615.tape_ptr]))])}"
      : local.iter_1615.output)
    
    tape = (
      local.code_1616[0] == "+"
        ? [for i, b in local.iter_1615.tape : (i == local.iter_1615.tape_ptr ? (b + local.code_1616[1]) % 256 : b)] :
      local.code_1616[0] == "-"
        ? [for i, b in local.iter_1615.tape : (i == local.iter_1615.tape_ptr ? (b - local.code_1616[1] + 256) % 256 : b)] :
      local.code_1616[0] == ","
        ? [for i, b in local.iter_1615.tape : (i == local.iter_1615.tape_ptr ? local.ascii_lookup[substr(local.input_1616, 0, 1)] : b)]
        : local.iter_1615.tape)

    tape_ptr = (
      local.code_1616[0] == "<"
        ? local.iter_1615.tape_ptr - local.code_1616[1] :
      local.code_1616[0] == ">"
        ? local.iter_1615.tape_ptr + local.code_1616[1]
        : local.iter_1615.tape_ptr)

    code_ptr = 2 + (
      local.code_1616[0] == "["
        ? local.iter_1615.tape[local.iter_1615.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1615.code_ptr)] : local.iter_1615.code_ptr :
      local.code_1616[0] == "]"
        ? local.iter_1615.tape[local.iter_1615.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1615.code_ptr)] : local.iter_1615.code_ptr
        : local.iter_1615.code_ptr)

    steps_taken = 1 + local.iter_1615.steps_taken
  }
}

locals {
  code_1617 = (try(local.iter_1616.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1616.code_ptr, local.iter_1616.code_ptr + 2)
    : [null])

  input_1617 = (local.code_1617[0] == ","
    ? substr(local.input_1616, local.code_1617[1], -1)
    : local.input_1616)

  iter_1617 = try(local.iter_1616.code_ptr >= length(var.code), true) ? local.iter_1616 : {
    output = (local.code_1617[0] == "."
      ? "${local.iter_1616.output}${join("", [for _ in range(local.code_1617[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1616.tape[local.iter_1616.tape_ptr]))])}"
      : local.iter_1616.output)
    
    tape = (
      local.code_1617[0] == "+"
        ? [for i, b in local.iter_1616.tape : (i == local.iter_1616.tape_ptr ? (b + local.code_1617[1]) % 256 : b)] :
      local.code_1617[0] == "-"
        ? [for i, b in local.iter_1616.tape : (i == local.iter_1616.tape_ptr ? (b - local.code_1617[1] + 256) % 256 : b)] :
      local.code_1617[0] == ","
        ? [for i, b in local.iter_1616.tape : (i == local.iter_1616.tape_ptr ? local.ascii_lookup[substr(local.input_1617, 0, 1)] : b)]
        : local.iter_1616.tape)

    tape_ptr = (
      local.code_1617[0] == "<"
        ? local.iter_1616.tape_ptr - local.code_1617[1] :
      local.code_1617[0] == ">"
        ? local.iter_1616.tape_ptr + local.code_1617[1]
        : local.iter_1616.tape_ptr)

    code_ptr = 2 + (
      local.code_1617[0] == "["
        ? local.iter_1616.tape[local.iter_1616.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1616.code_ptr)] : local.iter_1616.code_ptr :
      local.code_1617[0] == "]"
        ? local.iter_1616.tape[local.iter_1616.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1616.code_ptr)] : local.iter_1616.code_ptr
        : local.iter_1616.code_ptr)

    steps_taken = 1 + local.iter_1616.steps_taken
  }
}

locals {
  code_1618 = (try(local.iter_1617.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1617.code_ptr, local.iter_1617.code_ptr + 2)
    : [null])

  input_1618 = (local.code_1618[0] == ","
    ? substr(local.input_1617, local.code_1618[1], -1)
    : local.input_1617)

  iter_1618 = try(local.iter_1617.code_ptr >= length(var.code), true) ? local.iter_1617 : {
    output = (local.code_1618[0] == "."
      ? "${local.iter_1617.output}${join("", [for _ in range(local.code_1618[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1617.tape[local.iter_1617.tape_ptr]))])}"
      : local.iter_1617.output)
    
    tape = (
      local.code_1618[0] == "+"
        ? [for i, b in local.iter_1617.tape : (i == local.iter_1617.tape_ptr ? (b + local.code_1618[1]) % 256 : b)] :
      local.code_1618[0] == "-"
        ? [for i, b in local.iter_1617.tape : (i == local.iter_1617.tape_ptr ? (b - local.code_1618[1] + 256) % 256 : b)] :
      local.code_1618[0] == ","
        ? [for i, b in local.iter_1617.tape : (i == local.iter_1617.tape_ptr ? local.ascii_lookup[substr(local.input_1618, 0, 1)] : b)]
        : local.iter_1617.tape)

    tape_ptr = (
      local.code_1618[0] == "<"
        ? local.iter_1617.tape_ptr - local.code_1618[1] :
      local.code_1618[0] == ">"
        ? local.iter_1617.tape_ptr + local.code_1618[1]
        : local.iter_1617.tape_ptr)

    code_ptr = 2 + (
      local.code_1618[0] == "["
        ? local.iter_1617.tape[local.iter_1617.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1617.code_ptr)] : local.iter_1617.code_ptr :
      local.code_1618[0] == "]"
        ? local.iter_1617.tape[local.iter_1617.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1617.code_ptr)] : local.iter_1617.code_ptr
        : local.iter_1617.code_ptr)

    steps_taken = 1 + local.iter_1617.steps_taken
  }
}

locals {
  code_1619 = (try(local.iter_1618.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1618.code_ptr, local.iter_1618.code_ptr + 2)
    : [null])

  input_1619 = (local.code_1619[0] == ","
    ? substr(local.input_1618, local.code_1619[1], -1)
    : local.input_1618)

  iter_1619 = try(local.iter_1618.code_ptr >= length(var.code), true) ? local.iter_1618 : {
    output = (local.code_1619[0] == "."
      ? "${local.iter_1618.output}${join("", [for _ in range(local.code_1619[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1618.tape[local.iter_1618.tape_ptr]))])}"
      : local.iter_1618.output)
    
    tape = (
      local.code_1619[0] == "+"
        ? [for i, b in local.iter_1618.tape : (i == local.iter_1618.tape_ptr ? (b + local.code_1619[1]) % 256 : b)] :
      local.code_1619[0] == "-"
        ? [for i, b in local.iter_1618.tape : (i == local.iter_1618.tape_ptr ? (b - local.code_1619[1] + 256) % 256 : b)] :
      local.code_1619[0] == ","
        ? [for i, b in local.iter_1618.tape : (i == local.iter_1618.tape_ptr ? local.ascii_lookup[substr(local.input_1619, 0, 1)] : b)]
        : local.iter_1618.tape)

    tape_ptr = (
      local.code_1619[0] == "<"
        ? local.iter_1618.tape_ptr - local.code_1619[1] :
      local.code_1619[0] == ">"
        ? local.iter_1618.tape_ptr + local.code_1619[1]
        : local.iter_1618.tape_ptr)

    code_ptr = 2 + (
      local.code_1619[0] == "["
        ? local.iter_1618.tape[local.iter_1618.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1618.code_ptr)] : local.iter_1618.code_ptr :
      local.code_1619[0] == "]"
        ? local.iter_1618.tape[local.iter_1618.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1618.code_ptr)] : local.iter_1618.code_ptr
        : local.iter_1618.code_ptr)

    steps_taken = 1 + local.iter_1618.steps_taken
  }
}

locals {
  code_1620 = (try(local.iter_1619.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1619.code_ptr, local.iter_1619.code_ptr + 2)
    : [null])

  input_1620 = (local.code_1620[0] == ","
    ? substr(local.input_1619, local.code_1620[1], -1)
    : local.input_1619)

  iter_1620 = try(local.iter_1619.code_ptr >= length(var.code), true) ? local.iter_1619 : {
    output = (local.code_1620[0] == "."
      ? "${local.iter_1619.output}${join("", [for _ in range(local.code_1620[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1619.tape[local.iter_1619.tape_ptr]))])}"
      : local.iter_1619.output)
    
    tape = (
      local.code_1620[0] == "+"
        ? [for i, b in local.iter_1619.tape : (i == local.iter_1619.tape_ptr ? (b + local.code_1620[1]) % 256 : b)] :
      local.code_1620[0] == "-"
        ? [for i, b in local.iter_1619.tape : (i == local.iter_1619.tape_ptr ? (b - local.code_1620[1] + 256) % 256 : b)] :
      local.code_1620[0] == ","
        ? [for i, b in local.iter_1619.tape : (i == local.iter_1619.tape_ptr ? local.ascii_lookup[substr(local.input_1620, 0, 1)] : b)]
        : local.iter_1619.tape)

    tape_ptr = (
      local.code_1620[0] == "<"
        ? local.iter_1619.tape_ptr - local.code_1620[1] :
      local.code_1620[0] == ">"
        ? local.iter_1619.tape_ptr + local.code_1620[1]
        : local.iter_1619.tape_ptr)

    code_ptr = 2 + (
      local.code_1620[0] == "["
        ? local.iter_1619.tape[local.iter_1619.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1619.code_ptr)] : local.iter_1619.code_ptr :
      local.code_1620[0] == "]"
        ? local.iter_1619.tape[local.iter_1619.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1619.code_ptr)] : local.iter_1619.code_ptr
        : local.iter_1619.code_ptr)

    steps_taken = 1 + local.iter_1619.steps_taken
  }
}

locals {
  code_1621 = (try(local.iter_1620.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1620.code_ptr, local.iter_1620.code_ptr + 2)
    : [null])

  input_1621 = (local.code_1621[0] == ","
    ? substr(local.input_1620, local.code_1621[1], -1)
    : local.input_1620)

  iter_1621 = try(local.iter_1620.code_ptr >= length(var.code), true) ? local.iter_1620 : {
    output = (local.code_1621[0] == "."
      ? "${local.iter_1620.output}${join("", [for _ in range(local.code_1621[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1620.tape[local.iter_1620.tape_ptr]))])}"
      : local.iter_1620.output)
    
    tape = (
      local.code_1621[0] == "+"
        ? [for i, b in local.iter_1620.tape : (i == local.iter_1620.tape_ptr ? (b + local.code_1621[1]) % 256 : b)] :
      local.code_1621[0] == "-"
        ? [for i, b in local.iter_1620.tape : (i == local.iter_1620.tape_ptr ? (b - local.code_1621[1] + 256) % 256 : b)] :
      local.code_1621[0] == ","
        ? [for i, b in local.iter_1620.tape : (i == local.iter_1620.tape_ptr ? local.ascii_lookup[substr(local.input_1621, 0, 1)] : b)]
        : local.iter_1620.tape)

    tape_ptr = (
      local.code_1621[0] == "<"
        ? local.iter_1620.tape_ptr - local.code_1621[1] :
      local.code_1621[0] == ">"
        ? local.iter_1620.tape_ptr + local.code_1621[1]
        : local.iter_1620.tape_ptr)

    code_ptr = 2 + (
      local.code_1621[0] == "["
        ? local.iter_1620.tape[local.iter_1620.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1620.code_ptr)] : local.iter_1620.code_ptr :
      local.code_1621[0] == "]"
        ? local.iter_1620.tape[local.iter_1620.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1620.code_ptr)] : local.iter_1620.code_ptr
        : local.iter_1620.code_ptr)

    steps_taken = 1 + local.iter_1620.steps_taken
  }
}

locals {
  code_1622 = (try(local.iter_1621.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1621.code_ptr, local.iter_1621.code_ptr + 2)
    : [null])

  input_1622 = (local.code_1622[0] == ","
    ? substr(local.input_1621, local.code_1622[1], -1)
    : local.input_1621)

  iter_1622 = try(local.iter_1621.code_ptr >= length(var.code), true) ? local.iter_1621 : {
    output = (local.code_1622[0] == "."
      ? "${local.iter_1621.output}${join("", [for _ in range(local.code_1622[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1621.tape[local.iter_1621.tape_ptr]))])}"
      : local.iter_1621.output)
    
    tape = (
      local.code_1622[0] == "+"
        ? [for i, b in local.iter_1621.tape : (i == local.iter_1621.tape_ptr ? (b + local.code_1622[1]) % 256 : b)] :
      local.code_1622[0] == "-"
        ? [for i, b in local.iter_1621.tape : (i == local.iter_1621.tape_ptr ? (b - local.code_1622[1] + 256) % 256 : b)] :
      local.code_1622[0] == ","
        ? [for i, b in local.iter_1621.tape : (i == local.iter_1621.tape_ptr ? local.ascii_lookup[substr(local.input_1622, 0, 1)] : b)]
        : local.iter_1621.tape)

    tape_ptr = (
      local.code_1622[0] == "<"
        ? local.iter_1621.tape_ptr - local.code_1622[1] :
      local.code_1622[0] == ">"
        ? local.iter_1621.tape_ptr + local.code_1622[1]
        : local.iter_1621.tape_ptr)

    code_ptr = 2 + (
      local.code_1622[0] == "["
        ? local.iter_1621.tape[local.iter_1621.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1621.code_ptr)] : local.iter_1621.code_ptr :
      local.code_1622[0] == "]"
        ? local.iter_1621.tape[local.iter_1621.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1621.code_ptr)] : local.iter_1621.code_ptr
        : local.iter_1621.code_ptr)

    steps_taken = 1 + local.iter_1621.steps_taken
  }
}

locals {
  code_1623 = (try(local.iter_1622.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1622.code_ptr, local.iter_1622.code_ptr + 2)
    : [null])

  input_1623 = (local.code_1623[0] == ","
    ? substr(local.input_1622, local.code_1623[1], -1)
    : local.input_1622)

  iter_1623 = try(local.iter_1622.code_ptr >= length(var.code), true) ? local.iter_1622 : {
    output = (local.code_1623[0] == "."
      ? "${local.iter_1622.output}${join("", [for _ in range(local.code_1623[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1622.tape[local.iter_1622.tape_ptr]))])}"
      : local.iter_1622.output)
    
    tape = (
      local.code_1623[0] == "+"
        ? [for i, b in local.iter_1622.tape : (i == local.iter_1622.tape_ptr ? (b + local.code_1623[1]) % 256 : b)] :
      local.code_1623[0] == "-"
        ? [for i, b in local.iter_1622.tape : (i == local.iter_1622.tape_ptr ? (b - local.code_1623[1] + 256) % 256 : b)] :
      local.code_1623[0] == ","
        ? [for i, b in local.iter_1622.tape : (i == local.iter_1622.tape_ptr ? local.ascii_lookup[substr(local.input_1623, 0, 1)] : b)]
        : local.iter_1622.tape)

    tape_ptr = (
      local.code_1623[0] == "<"
        ? local.iter_1622.tape_ptr - local.code_1623[1] :
      local.code_1623[0] == ">"
        ? local.iter_1622.tape_ptr + local.code_1623[1]
        : local.iter_1622.tape_ptr)

    code_ptr = 2 + (
      local.code_1623[0] == "["
        ? local.iter_1622.tape[local.iter_1622.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1622.code_ptr)] : local.iter_1622.code_ptr :
      local.code_1623[0] == "]"
        ? local.iter_1622.tape[local.iter_1622.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1622.code_ptr)] : local.iter_1622.code_ptr
        : local.iter_1622.code_ptr)

    steps_taken = 1 + local.iter_1622.steps_taken
  }
}

locals {
  code_1624 = (try(local.iter_1623.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1623.code_ptr, local.iter_1623.code_ptr + 2)
    : [null])

  input_1624 = (local.code_1624[0] == ","
    ? substr(local.input_1623, local.code_1624[1], -1)
    : local.input_1623)

  iter_1624 = try(local.iter_1623.code_ptr >= length(var.code), true) ? local.iter_1623 : {
    output = (local.code_1624[0] == "."
      ? "${local.iter_1623.output}${join("", [for _ in range(local.code_1624[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1623.tape[local.iter_1623.tape_ptr]))])}"
      : local.iter_1623.output)
    
    tape = (
      local.code_1624[0] == "+"
        ? [for i, b in local.iter_1623.tape : (i == local.iter_1623.tape_ptr ? (b + local.code_1624[1]) % 256 : b)] :
      local.code_1624[0] == "-"
        ? [for i, b in local.iter_1623.tape : (i == local.iter_1623.tape_ptr ? (b - local.code_1624[1] + 256) % 256 : b)] :
      local.code_1624[0] == ","
        ? [for i, b in local.iter_1623.tape : (i == local.iter_1623.tape_ptr ? local.ascii_lookup[substr(local.input_1624, 0, 1)] : b)]
        : local.iter_1623.tape)

    tape_ptr = (
      local.code_1624[0] == "<"
        ? local.iter_1623.tape_ptr - local.code_1624[1] :
      local.code_1624[0] == ">"
        ? local.iter_1623.tape_ptr + local.code_1624[1]
        : local.iter_1623.tape_ptr)

    code_ptr = 2 + (
      local.code_1624[0] == "["
        ? local.iter_1623.tape[local.iter_1623.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1623.code_ptr)] : local.iter_1623.code_ptr :
      local.code_1624[0] == "]"
        ? local.iter_1623.tape[local.iter_1623.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1623.code_ptr)] : local.iter_1623.code_ptr
        : local.iter_1623.code_ptr)

    steps_taken = 1 + local.iter_1623.steps_taken
  }
}

locals {
  code_1625 = (try(local.iter_1624.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1624.code_ptr, local.iter_1624.code_ptr + 2)
    : [null])

  input_1625 = (local.code_1625[0] == ","
    ? substr(local.input_1624, local.code_1625[1], -1)
    : local.input_1624)

  iter_1625 = try(local.iter_1624.code_ptr >= length(var.code), true) ? local.iter_1624 : {
    output = (local.code_1625[0] == "."
      ? "${local.iter_1624.output}${join("", [for _ in range(local.code_1625[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1624.tape[local.iter_1624.tape_ptr]))])}"
      : local.iter_1624.output)
    
    tape = (
      local.code_1625[0] == "+"
        ? [for i, b in local.iter_1624.tape : (i == local.iter_1624.tape_ptr ? (b + local.code_1625[1]) % 256 : b)] :
      local.code_1625[0] == "-"
        ? [for i, b in local.iter_1624.tape : (i == local.iter_1624.tape_ptr ? (b - local.code_1625[1] + 256) % 256 : b)] :
      local.code_1625[0] == ","
        ? [for i, b in local.iter_1624.tape : (i == local.iter_1624.tape_ptr ? local.ascii_lookup[substr(local.input_1625, 0, 1)] : b)]
        : local.iter_1624.tape)

    tape_ptr = (
      local.code_1625[0] == "<"
        ? local.iter_1624.tape_ptr - local.code_1625[1] :
      local.code_1625[0] == ">"
        ? local.iter_1624.tape_ptr + local.code_1625[1]
        : local.iter_1624.tape_ptr)

    code_ptr = 2 + (
      local.code_1625[0] == "["
        ? local.iter_1624.tape[local.iter_1624.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1624.code_ptr)] : local.iter_1624.code_ptr :
      local.code_1625[0] == "]"
        ? local.iter_1624.tape[local.iter_1624.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1624.code_ptr)] : local.iter_1624.code_ptr
        : local.iter_1624.code_ptr)

    steps_taken = 1 + local.iter_1624.steps_taken
  }
}

locals {
  code_1626 = (try(local.iter_1625.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1625.code_ptr, local.iter_1625.code_ptr + 2)
    : [null])

  input_1626 = (local.code_1626[0] == ","
    ? substr(local.input_1625, local.code_1626[1], -1)
    : local.input_1625)

  iter_1626 = try(local.iter_1625.code_ptr >= length(var.code), true) ? local.iter_1625 : {
    output = (local.code_1626[0] == "."
      ? "${local.iter_1625.output}${join("", [for _ in range(local.code_1626[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1625.tape[local.iter_1625.tape_ptr]))])}"
      : local.iter_1625.output)
    
    tape = (
      local.code_1626[0] == "+"
        ? [for i, b in local.iter_1625.tape : (i == local.iter_1625.tape_ptr ? (b + local.code_1626[1]) % 256 : b)] :
      local.code_1626[0] == "-"
        ? [for i, b in local.iter_1625.tape : (i == local.iter_1625.tape_ptr ? (b - local.code_1626[1] + 256) % 256 : b)] :
      local.code_1626[0] == ","
        ? [for i, b in local.iter_1625.tape : (i == local.iter_1625.tape_ptr ? local.ascii_lookup[substr(local.input_1626, 0, 1)] : b)]
        : local.iter_1625.tape)

    tape_ptr = (
      local.code_1626[0] == "<"
        ? local.iter_1625.tape_ptr - local.code_1626[1] :
      local.code_1626[0] == ">"
        ? local.iter_1625.tape_ptr + local.code_1626[1]
        : local.iter_1625.tape_ptr)

    code_ptr = 2 + (
      local.code_1626[0] == "["
        ? local.iter_1625.tape[local.iter_1625.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1625.code_ptr)] : local.iter_1625.code_ptr :
      local.code_1626[0] == "]"
        ? local.iter_1625.tape[local.iter_1625.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1625.code_ptr)] : local.iter_1625.code_ptr
        : local.iter_1625.code_ptr)

    steps_taken = 1 + local.iter_1625.steps_taken
  }
}

locals {
  code_1627 = (try(local.iter_1626.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1626.code_ptr, local.iter_1626.code_ptr + 2)
    : [null])

  input_1627 = (local.code_1627[0] == ","
    ? substr(local.input_1626, local.code_1627[1], -1)
    : local.input_1626)

  iter_1627 = try(local.iter_1626.code_ptr >= length(var.code), true) ? local.iter_1626 : {
    output = (local.code_1627[0] == "."
      ? "${local.iter_1626.output}${join("", [for _ in range(local.code_1627[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1626.tape[local.iter_1626.tape_ptr]))])}"
      : local.iter_1626.output)
    
    tape = (
      local.code_1627[0] == "+"
        ? [for i, b in local.iter_1626.tape : (i == local.iter_1626.tape_ptr ? (b + local.code_1627[1]) % 256 : b)] :
      local.code_1627[0] == "-"
        ? [for i, b in local.iter_1626.tape : (i == local.iter_1626.tape_ptr ? (b - local.code_1627[1] + 256) % 256 : b)] :
      local.code_1627[0] == ","
        ? [for i, b in local.iter_1626.tape : (i == local.iter_1626.tape_ptr ? local.ascii_lookup[substr(local.input_1627, 0, 1)] : b)]
        : local.iter_1626.tape)

    tape_ptr = (
      local.code_1627[0] == "<"
        ? local.iter_1626.tape_ptr - local.code_1627[1] :
      local.code_1627[0] == ">"
        ? local.iter_1626.tape_ptr + local.code_1627[1]
        : local.iter_1626.tape_ptr)

    code_ptr = 2 + (
      local.code_1627[0] == "["
        ? local.iter_1626.tape[local.iter_1626.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1626.code_ptr)] : local.iter_1626.code_ptr :
      local.code_1627[0] == "]"
        ? local.iter_1626.tape[local.iter_1626.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1626.code_ptr)] : local.iter_1626.code_ptr
        : local.iter_1626.code_ptr)

    steps_taken = 1 + local.iter_1626.steps_taken
  }
}

locals {
  code_1628 = (try(local.iter_1627.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1627.code_ptr, local.iter_1627.code_ptr + 2)
    : [null])

  input_1628 = (local.code_1628[0] == ","
    ? substr(local.input_1627, local.code_1628[1], -1)
    : local.input_1627)

  iter_1628 = try(local.iter_1627.code_ptr >= length(var.code), true) ? local.iter_1627 : {
    output = (local.code_1628[0] == "."
      ? "${local.iter_1627.output}${join("", [for _ in range(local.code_1628[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1627.tape[local.iter_1627.tape_ptr]))])}"
      : local.iter_1627.output)
    
    tape = (
      local.code_1628[0] == "+"
        ? [for i, b in local.iter_1627.tape : (i == local.iter_1627.tape_ptr ? (b + local.code_1628[1]) % 256 : b)] :
      local.code_1628[0] == "-"
        ? [for i, b in local.iter_1627.tape : (i == local.iter_1627.tape_ptr ? (b - local.code_1628[1] + 256) % 256 : b)] :
      local.code_1628[0] == ","
        ? [for i, b in local.iter_1627.tape : (i == local.iter_1627.tape_ptr ? local.ascii_lookup[substr(local.input_1628, 0, 1)] : b)]
        : local.iter_1627.tape)

    tape_ptr = (
      local.code_1628[0] == "<"
        ? local.iter_1627.tape_ptr - local.code_1628[1] :
      local.code_1628[0] == ">"
        ? local.iter_1627.tape_ptr + local.code_1628[1]
        : local.iter_1627.tape_ptr)

    code_ptr = 2 + (
      local.code_1628[0] == "["
        ? local.iter_1627.tape[local.iter_1627.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1627.code_ptr)] : local.iter_1627.code_ptr :
      local.code_1628[0] == "]"
        ? local.iter_1627.tape[local.iter_1627.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1627.code_ptr)] : local.iter_1627.code_ptr
        : local.iter_1627.code_ptr)

    steps_taken = 1 + local.iter_1627.steps_taken
  }
}

locals {
  code_1629 = (try(local.iter_1628.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1628.code_ptr, local.iter_1628.code_ptr + 2)
    : [null])

  input_1629 = (local.code_1629[0] == ","
    ? substr(local.input_1628, local.code_1629[1], -1)
    : local.input_1628)

  iter_1629 = try(local.iter_1628.code_ptr >= length(var.code), true) ? local.iter_1628 : {
    output = (local.code_1629[0] == "."
      ? "${local.iter_1628.output}${join("", [for _ in range(local.code_1629[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1628.tape[local.iter_1628.tape_ptr]))])}"
      : local.iter_1628.output)
    
    tape = (
      local.code_1629[0] == "+"
        ? [for i, b in local.iter_1628.tape : (i == local.iter_1628.tape_ptr ? (b + local.code_1629[1]) % 256 : b)] :
      local.code_1629[0] == "-"
        ? [for i, b in local.iter_1628.tape : (i == local.iter_1628.tape_ptr ? (b - local.code_1629[1] + 256) % 256 : b)] :
      local.code_1629[0] == ","
        ? [for i, b in local.iter_1628.tape : (i == local.iter_1628.tape_ptr ? local.ascii_lookup[substr(local.input_1629, 0, 1)] : b)]
        : local.iter_1628.tape)

    tape_ptr = (
      local.code_1629[0] == "<"
        ? local.iter_1628.tape_ptr - local.code_1629[1] :
      local.code_1629[0] == ">"
        ? local.iter_1628.tape_ptr + local.code_1629[1]
        : local.iter_1628.tape_ptr)

    code_ptr = 2 + (
      local.code_1629[0] == "["
        ? local.iter_1628.tape[local.iter_1628.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1628.code_ptr)] : local.iter_1628.code_ptr :
      local.code_1629[0] == "]"
        ? local.iter_1628.tape[local.iter_1628.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1628.code_ptr)] : local.iter_1628.code_ptr
        : local.iter_1628.code_ptr)

    steps_taken = 1 + local.iter_1628.steps_taken
  }
}

locals {
  code_1630 = (try(local.iter_1629.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1629.code_ptr, local.iter_1629.code_ptr + 2)
    : [null])

  input_1630 = (local.code_1630[0] == ","
    ? substr(local.input_1629, local.code_1630[1], -1)
    : local.input_1629)

  iter_1630 = try(local.iter_1629.code_ptr >= length(var.code), true) ? local.iter_1629 : {
    output = (local.code_1630[0] == "."
      ? "${local.iter_1629.output}${join("", [for _ in range(local.code_1630[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1629.tape[local.iter_1629.tape_ptr]))])}"
      : local.iter_1629.output)
    
    tape = (
      local.code_1630[0] == "+"
        ? [for i, b in local.iter_1629.tape : (i == local.iter_1629.tape_ptr ? (b + local.code_1630[1]) % 256 : b)] :
      local.code_1630[0] == "-"
        ? [for i, b in local.iter_1629.tape : (i == local.iter_1629.tape_ptr ? (b - local.code_1630[1] + 256) % 256 : b)] :
      local.code_1630[0] == ","
        ? [for i, b in local.iter_1629.tape : (i == local.iter_1629.tape_ptr ? local.ascii_lookup[substr(local.input_1630, 0, 1)] : b)]
        : local.iter_1629.tape)

    tape_ptr = (
      local.code_1630[0] == "<"
        ? local.iter_1629.tape_ptr - local.code_1630[1] :
      local.code_1630[0] == ">"
        ? local.iter_1629.tape_ptr + local.code_1630[1]
        : local.iter_1629.tape_ptr)

    code_ptr = 2 + (
      local.code_1630[0] == "["
        ? local.iter_1629.tape[local.iter_1629.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1629.code_ptr)] : local.iter_1629.code_ptr :
      local.code_1630[0] == "]"
        ? local.iter_1629.tape[local.iter_1629.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1629.code_ptr)] : local.iter_1629.code_ptr
        : local.iter_1629.code_ptr)

    steps_taken = 1 + local.iter_1629.steps_taken
  }
}

locals {
  code_1631 = (try(local.iter_1630.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1630.code_ptr, local.iter_1630.code_ptr + 2)
    : [null])

  input_1631 = (local.code_1631[0] == ","
    ? substr(local.input_1630, local.code_1631[1], -1)
    : local.input_1630)

  iter_1631 = try(local.iter_1630.code_ptr >= length(var.code), true) ? local.iter_1630 : {
    output = (local.code_1631[0] == "."
      ? "${local.iter_1630.output}${join("", [for _ in range(local.code_1631[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1630.tape[local.iter_1630.tape_ptr]))])}"
      : local.iter_1630.output)
    
    tape = (
      local.code_1631[0] == "+"
        ? [for i, b in local.iter_1630.tape : (i == local.iter_1630.tape_ptr ? (b + local.code_1631[1]) % 256 : b)] :
      local.code_1631[0] == "-"
        ? [for i, b in local.iter_1630.tape : (i == local.iter_1630.tape_ptr ? (b - local.code_1631[1] + 256) % 256 : b)] :
      local.code_1631[0] == ","
        ? [for i, b in local.iter_1630.tape : (i == local.iter_1630.tape_ptr ? local.ascii_lookup[substr(local.input_1631, 0, 1)] : b)]
        : local.iter_1630.tape)

    tape_ptr = (
      local.code_1631[0] == "<"
        ? local.iter_1630.tape_ptr - local.code_1631[1] :
      local.code_1631[0] == ">"
        ? local.iter_1630.tape_ptr + local.code_1631[1]
        : local.iter_1630.tape_ptr)

    code_ptr = 2 + (
      local.code_1631[0] == "["
        ? local.iter_1630.tape[local.iter_1630.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1630.code_ptr)] : local.iter_1630.code_ptr :
      local.code_1631[0] == "]"
        ? local.iter_1630.tape[local.iter_1630.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1630.code_ptr)] : local.iter_1630.code_ptr
        : local.iter_1630.code_ptr)

    steps_taken = 1 + local.iter_1630.steps_taken
  }
}

locals {
  code_1632 = (try(local.iter_1631.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1631.code_ptr, local.iter_1631.code_ptr + 2)
    : [null])

  input_1632 = (local.code_1632[0] == ","
    ? substr(local.input_1631, local.code_1632[1], -1)
    : local.input_1631)

  iter_1632 = try(local.iter_1631.code_ptr >= length(var.code), true) ? local.iter_1631 : {
    output = (local.code_1632[0] == "."
      ? "${local.iter_1631.output}${join("", [for _ in range(local.code_1632[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1631.tape[local.iter_1631.tape_ptr]))])}"
      : local.iter_1631.output)
    
    tape = (
      local.code_1632[0] == "+"
        ? [for i, b in local.iter_1631.tape : (i == local.iter_1631.tape_ptr ? (b + local.code_1632[1]) % 256 : b)] :
      local.code_1632[0] == "-"
        ? [for i, b in local.iter_1631.tape : (i == local.iter_1631.tape_ptr ? (b - local.code_1632[1] + 256) % 256 : b)] :
      local.code_1632[0] == ","
        ? [for i, b in local.iter_1631.tape : (i == local.iter_1631.tape_ptr ? local.ascii_lookup[substr(local.input_1632, 0, 1)] : b)]
        : local.iter_1631.tape)

    tape_ptr = (
      local.code_1632[0] == "<"
        ? local.iter_1631.tape_ptr - local.code_1632[1] :
      local.code_1632[0] == ">"
        ? local.iter_1631.tape_ptr + local.code_1632[1]
        : local.iter_1631.tape_ptr)

    code_ptr = 2 + (
      local.code_1632[0] == "["
        ? local.iter_1631.tape[local.iter_1631.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1631.code_ptr)] : local.iter_1631.code_ptr :
      local.code_1632[0] == "]"
        ? local.iter_1631.tape[local.iter_1631.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1631.code_ptr)] : local.iter_1631.code_ptr
        : local.iter_1631.code_ptr)

    steps_taken = 1 + local.iter_1631.steps_taken
  }
}

locals {
  code_1633 = (try(local.iter_1632.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1632.code_ptr, local.iter_1632.code_ptr + 2)
    : [null])

  input_1633 = (local.code_1633[0] == ","
    ? substr(local.input_1632, local.code_1633[1], -1)
    : local.input_1632)

  iter_1633 = try(local.iter_1632.code_ptr >= length(var.code), true) ? local.iter_1632 : {
    output = (local.code_1633[0] == "."
      ? "${local.iter_1632.output}${join("", [for _ in range(local.code_1633[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1632.tape[local.iter_1632.tape_ptr]))])}"
      : local.iter_1632.output)
    
    tape = (
      local.code_1633[0] == "+"
        ? [for i, b in local.iter_1632.tape : (i == local.iter_1632.tape_ptr ? (b + local.code_1633[1]) % 256 : b)] :
      local.code_1633[0] == "-"
        ? [for i, b in local.iter_1632.tape : (i == local.iter_1632.tape_ptr ? (b - local.code_1633[1] + 256) % 256 : b)] :
      local.code_1633[0] == ","
        ? [for i, b in local.iter_1632.tape : (i == local.iter_1632.tape_ptr ? local.ascii_lookup[substr(local.input_1633, 0, 1)] : b)]
        : local.iter_1632.tape)

    tape_ptr = (
      local.code_1633[0] == "<"
        ? local.iter_1632.tape_ptr - local.code_1633[1] :
      local.code_1633[0] == ">"
        ? local.iter_1632.tape_ptr + local.code_1633[1]
        : local.iter_1632.tape_ptr)

    code_ptr = 2 + (
      local.code_1633[0] == "["
        ? local.iter_1632.tape[local.iter_1632.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1632.code_ptr)] : local.iter_1632.code_ptr :
      local.code_1633[0] == "]"
        ? local.iter_1632.tape[local.iter_1632.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1632.code_ptr)] : local.iter_1632.code_ptr
        : local.iter_1632.code_ptr)

    steps_taken = 1 + local.iter_1632.steps_taken
  }
}

locals {
  code_1634 = (try(local.iter_1633.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1633.code_ptr, local.iter_1633.code_ptr + 2)
    : [null])

  input_1634 = (local.code_1634[0] == ","
    ? substr(local.input_1633, local.code_1634[1], -1)
    : local.input_1633)

  iter_1634 = try(local.iter_1633.code_ptr >= length(var.code), true) ? local.iter_1633 : {
    output = (local.code_1634[0] == "."
      ? "${local.iter_1633.output}${join("", [for _ in range(local.code_1634[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1633.tape[local.iter_1633.tape_ptr]))])}"
      : local.iter_1633.output)
    
    tape = (
      local.code_1634[0] == "+"
        ? [for i, b in local.iter_1633.tape : (i == local.iter_1633.tape_ptr ? (b + local.code_1634[1]) % 256 : b)] :
      local.code_1634[0] == "-"
        ? [for i, b in local.iter_1633.tape : (i == local.iter_1633.tape_ptr ? (b - local.code_1634[1] + 256) % 256 : b)] :
      local.code_1634[0] == ","
        ? [for i, b in local.iter_1633.tape : (i == local.iter_1633.tape_ptr ? local.ascii_lookup[substr(local.input_1634, 0, 1)] : b)]
        : local.iter_1633.tape)

    tape_ptr = (
      local.code_1634[0] == "<"
        ? local.iter_1633.tape_ptr - local.code_1634[1] :
      local.code_1634[0] == ">"
        ? local.iter_1633.tape_ptr + local.code_1634[1]
        : local.iter_1633.tape_ptr)

    code_ptr = 2 + (
      local.code_1634[0] == "["
        ? local.iter_1633.tape[local.iter_1633.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1633.code_ptr)] : local.iter_1633.code_ptr :
      local.code_1634[0] == "]"
        ? local.iter_1633.tape[local.iter_1633.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1633.code_ptr)] : local.iter_1633.code_ptr
        : local.iter_1633.code_ptr)

    steps_taken = 1 + local.iter_1633.steps_taken
  }
}

locals {
  code_1635 = (try(local.iter_1634.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1634.code_ptr, local.iter_1634.code_ptr + 2)
    : [null])

  input_1635 = (local.code_1635[0] == ","
    ? substr(local.input_1634, local.code_1635[1], -1)
    : local.input_1634)

  iter_1635 = try(local.iter_1634.code_ptr >= length(var.code), true) ? local.iter_1634 : {
    output = (local.code_1635[0] == "."
      ? "${local.iter_1634.output}${join("", [for _ in range(local.code_1635[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1634.tape[local.iter_1634.tape_ptr]))])}"
      : local.iter_1634.output)
    
    tape = (
      local.code_1635[0] == "+"
        ? [for i, b in local.iter_1634.tape : (i == local.iter_1634.tape_ptr ? (b + local.code_1635[1]) % 256 : b)] :
      local.code_1635[0] == "-"
        ? [for i, b in local.iter_1634.tape : (i == local.iter_1634.tape_ptr ? (b - local.code_1635[1] + 256) % 256 : b)] :
      local.code_1635[0] == ","
        ? [for i, b in local.iter_1634.tape : (i == local.iter_1634.tape_ptr ? local.ascii_lookup[substr(local.input_1635, 0, 1)] : b)]
        : local.iter_1634.tape)

    tape_ptr = (
      local.code_1635[0] == "<"
        ? local.iter_1634.tape_ptr - local.code_1635[1] :
      local.code_1635[0] == ">"
        ? local.iter_1634.tape_ptr + local.code_1635[1]
        : local.iter_1634.tape_ptr)

    code_ptr = 2 + (
      local.code_1635[0] == "["
        ? local.iter_1634.tape[local.iter_1634.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1634.code_ptr)] : local.iter_1634.code_ptr :
      local.code_1635[0] == "]"
        ? local.iter_1634.tape[local.iter_1634.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1634.code_ptr)] : local.iter_1634.code_ptr
        : local.iter_1634.code_ptr)

    steps_taken = 1 + local.iter_1634.steps_taken
  }
}

locals {
  code_1636 = (try(local.iter_1635.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1635.code_ptr, local.iter_1635.code_ptr + 2)
    : [null])

  input_1636 = (local.code_1636[0] == ","
    ? substr(local.input_1635, local.code_1636[1], -1)
    : local.input_1635)

  iter_1636 = try(local.iter_1635.code_ptr >= length(var.code), true) ? local.iter_1635 : {
    output = (local.code_1636[0] == "."
      ? "${local.iter_1635.output}${join("", [for _ in range(local.code_1636[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1635.tape[local.iter_1635.tape_ptr]))])}"
      : local.iter_1635.output)
    
    tape = (
      local.code_1636[0] == "+"
        ? [for i, b in local.iter_1635.tape : (i == local.iter_1635.tape_ptr ? (b + local.code_1636[1]) % 256 : b)] :
      local.code_1636[0] == "-"
        ? [for i, b in local.iter_1635.tape : (i == local.iter_1635.tape_ptr ? (b - local.code_1636[1] + 256) % 256 : b)] :
      local.code_1636[0] == ","
        ? [for i, b in local.iter_1635.tape : (i == local.iter_1635.tape_ptr ? local.ascii_lookup[substr(local.input_1636, 0, 1)] : b)]
        : local.iter_1635.tape)

    tape_ptr = (
      local.code_1636[0] == "<"
        ? local.iter_1635.tape_ptr - local.code_1636[1] :
      local.code_1636[0] == ">"
        ? local.iter_1635.tape_ptr + local.code_1636[1]
        : local.iter_1635.tape_ptr)

    code_ptr = 2 + (
      local.code_1636[0] == "["
        ? local.iter_1635.tape[local.iter_1635.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1635.code_ptr)] : local.iter_1635.code_ptr :
      local.code_1636[0] == "]"
        ? local.iter_1635.tape[local.iter_1635.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1635.code_ptr)] : local.iter_1635.code_ptr
        : local.iter_1635.code_ptr)

    steps_taken = 1 + local.iter_1635.steps_taken
  }
}

locals {
  code_1637 = (try(local.iter_1636.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1636.code_ptr, local.iter_1636.code_ptr + 2)
    : [null])

  input_1637 = (local.code_1637[0] == ","
    ? substr(local.input_1636, local.code_1637[1], -1)
    : local.input_1636)

  iter_1637 = try(local.iter_1636.code_ptr >= length(var.code), true) ? local.iter_1636 : {
    output = (local.code_1637[0] == "."
      ? "${local.iter_1636.output}${join("", [for _ in range(local.code_1637[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1636.tape[local.iter_1636.tape_ptr]))])}"
      : local.iter_1636.output)
    
    tape = (
      local.code_1637[0] == "+"
        ? [for i, b in local.iter_1636.tape : (i == local.iter_1636.tape_ptr ? (b + local.code_1637[1]) % 256 : b)] :
      local.code_1637[0] == "-"
        ? [for i, b in local.iter_1636.tape : (i == local.iter_1636.tape_ptr ? (b - local.code_1637[1] + 256) % 256 : b)] :
      local.code_1637[0] == ","
        ? [for i, b in local.iter_1636.tape : (i == local.iter_1636.tape_ptr ? local.ascii_lookup[substr(local.input_1637, 0, 1)] : b)]
        : local.iter_1636.tape)

    tape_ptr = (
      local.code_1637[0] == "<"
        ? local.iter_1636.tape_ptr - local.code_1637[1] :
      local.code_1637[0] == ">"
        ? local.iter_1636.tape_ptr + local.code_1637[1]
        : local.iter_1636.tape_ptr)

    code_ptr = 2 + (
      local.code_1637[0] == "["
        ? local.iter_1636.tape[local.iter_1636.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1636.code_ptr)] : local.iter_1636.code_ptr :
      local.code_1637[0] == "]"
        ? local.iter_1636.tape[local.iter_1636.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1636.code_ptr)] : local.iter_1636.code_ptr
        : local.iter_1636.code_ptr)

    steps_taken = 1 + local.iter_1636.steps_taken
  }
}

locals {
  code_1638 = (try(local.iter_1637.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1637.code_ptr, local.iter_1637.code_ptr + 2)
    : [null])

  input_1638 = (local.code_1638[0] == ","
    ? substr(local.input_1637, local.code_1638[1], -1)
    : local.input_1637)

  iter_1638 = try(local.iter_1637.code_ptr >= length(var.code), true) ? local.iter_1637 : {
    output = (local.code_1638[0] == "."
      ? "${local.iter_1637.output}${join("", [for _ in range(local.code_1638[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1637.tape[local.iter_1637.tape_ptr]))])}"
      : local.iter_1637.output)
    
    tape = (
      local.code_1638[0] == "+"
        ? [for i, b in local.iter_1637.tape : (i == local.iter_1637.tape_ptr ? (b + local.code_1638[1]) % 256 : b)] :
      local.code_1638[0] == "-"
        ? [for i, b in local.iter_1637.tape : (i == local.iter_1637.tape_ptr ? (b - local.code_1638[1] + 256) % 256 : b)] :
      local.code_1638[0] == ","
        ? [for i, b in local.iter_1637.tape : (i == local.iter_1637.tape_ptr ? local.ascii_lookup[substr(local.input_1638, 0, 1)] : b)]
        : local.iter_1637.tape)

    tape_ptr = (
      local.code_1638[0] == "<"
        ? local.iter_1637.tape_ptr - local.code_1638[1] :
      local.code_1638[0] == ">"
        ? local.iter_1637.tape_ptr + local.code_1638[1]
        : local.iter_1637.tape_ptr)

    code_ptr = 2 + (
      local.code_1638[0] == "["
        ? local.iter_1637.tape[local.iter_1637.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1637.code_ptr)] : local.iter_1637.code_ptr :
      local.code_1638[0] == "]"
        ? local.iter_1637.tape[local.iter_1637.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1637.code_ptr)] : local.iter_1637.code_ptr
        : local.iter_1637.code_ptr)

    steps_taken = 1 + local.iter_1637.steps_taken
  }
}

locals {
  code_1639 = (try(local.iter_1638.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1638.code_ptr, local.iter_1638.code_ptr + 2)
    : [null])

  input_1639 = (local.code_1639[0] == ","
    ? substr(local.input_1638, local.code_1639[1], -1)
    : local.input_1638)

  iter_1639 = try(local.iter_1638.code_ptr >= length(var.code), true) ? local.iter_1638 : {
    output = (local.code_1639[0] == "."
      ? "${local.iter_1638.output}${join("", [for _ in range(local.code_1639[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1638.tape[local.iter_1638.tape_ptr]))])}"
      : local.iter_1638.output)
    
    tape = (
      local.code_1639[0] == "+"
        ? [for i, b in local.iter_1638.tape : (i == local.iter_1638.tape_ptr ? (b + local.code_1639[1]) % 256 : b)] :
      local.code_1639[0] == "-"
        ? [for i, b in local.iter_1638.tape : (i == local.iter_1638.tape_ptr ? (b - local.code_1639[1] + 256) % 256 : b)] :
      local.code_1639[0] == ","
        ? [for i, b in local.iter_1638.tape : (i == local.iter_1638.tape_ptr ? local.ascii_lookup[substr(local.input_1639, 0, 1)] : b)]
        : local.iter_1638.tape)

    tape_ptr = (
      local.code_1639[0] == "<"
        ? local.iter_1638.tape_ptr - local.code_1639[1] :
      local.code_1639[0] == ">"
        ? local.iter_1638.tape_ptr + local.code_1639[1]
        : local.iter_1638.tape_ptr)

    code_ptr = 2 + (
      local.code_1639[0] == "["
        ? local.iter_1638.tape[local.iter_1638.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1638.code_ptr)] : local.iter_1638.code_ptr :
      local.code_1639[0] == "]"
        ? local.iter_1638.tape[local.iter_1638.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1638.code_ptr)] : local.iter_1638.code_ptr
        : local.iter_1638.code_ptr)

    steps_taken = 1 + local.iter_1638.steps_taken
  }
}

locals {
  code_1640 = (try(local.iter_1639.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1639.code_ptr, local.iter_1639.code_ptr + 2)
    : [null])

  input_1640 = (local.code_1640[0] == ","
    ? substr(local.input_1639, local.code_1640[1], -1)
    : local.input_1639)

  iter_1640 = try(local.iter_1639.code_ptr >= length(var.code), true) ? local.iter_1639 : {
    output = (local.code_1640[0] == "."
      ? "${local.iter_1639.output}${join("", [for _ in range(local.code_1640[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1639.tape[local.iter_1639.tape_ptr]))])}"
      : local.iter_1639.output)
    
    tape = (
      local.code_1640[0] == "+"
        ? [for i, b in local.iter_1639.tape : (i == local.iter_1639.tape_ptr ? (b + local.code_1640[1]) % 256 : b)] :
      local.code_1640[0] == "-"
        ? [for i, b in local.iter_1639.tape : (i == local.iter_1639.tape_ptr ? (b - local.code_1640[1] + 256) % 256 : b)] :
      local.code_1640[0] == ","
        ? [for i, b in local.iter_1639.tape : (i == local.iter_1639.tape_ptr ? local.ascii_lookup[substr(local.input_1640, 0, 1)] : b)]
        : local.iter_1639.tape)

    tape_ptr = (
      local.code_1640[0] == "<"
        ? local.iter_1639.tape_ptr - local.code_1640[1] :
      local.code_1640[0] == ">"
        ? local.iter_1639.tape_ptr + local.code_1640[1]
        : local.iter_1639.tape_ptr)

    code_ptr = 2 + (
      local.code_1640[0] == "["
        ? local.iter_1639.tape[local.iter_1639.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1639.code_ptr)] : local.iter_1639.code_ptr :
      local.code_1640[0] == "]"
        ? local.iter_1639.tape[local.iter_1639.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1639.code_ptr)] : local.iter_1639.code_ptr
        : local.iter_1639.code_ptr)

    steps_taken = 1 + local.iter_1639.steps_taken
  }
}

locals {
  code_1641 = (try(local.iter_1640.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1640.code_ptr, local.iter_1640.code_ptr + 2)
    : [null])

  input_1641 = (local.code_1641[0] == ","
    ? substr(local.input_1640, local.code_1641[1], -1)
    : local.input_1640)

  iter_1641 = try(local.iter_1640.code_ptr >= length(var.code), true) ? local.iter_1640 : {
    output = (local.code_1641[0] == "."
      ? "${local.iter_1640.output}${join("", [for _ in range(local.code_1641[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1640.tape[local.iter_1640.tape_ptr]))])}"
      : local.iter_1640.output)
    
    tape = (
      local.code_1641[0] == "+"
        ? [for i, b in local.iter_1640.tape : (i == local.iter_1640.tape_ptr ? (b + local.code_1641[1]) % 256 : b)] :
      local.code_1641[0] == "-"
        ? [for i, b in local.iter_1640.tape : (i == local.iter_1640.tape_ptr ? (b - local.code_1641[1] + 256) % 256 : b)] :
      local.code_1641[0] == ","
        ? [for i, b in local.iter_1640.tape : (i == local.iter_1640.tape_ptr ? local.ascii_lookup[substr(local.input_1641, 0, 1)] : b)]
        : local.iter_1640.tape)

    tape_ptr = (
      local.code_1641[0] == "<"
        ? local.iter_1640.tape_ptr - local.code_1641[1] :
      local.code_1641[0] == ">"
        ? local.iter_1640.tape_ptr + local.code_1641[1]
        : local.iter_1640.tape_ptr)

    code_ptr = 2 + (
      local.code_1641[0] == "["
        ? local.iter_1640.tape[local.iter_1640.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1640.code_ptr)] : local.iter_1640.code_ptr :
      local.code_1641[0] == "]"
        ? local.iter_1640.tape[local.iter_1640.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1640.code_ptr)] : local.iter_1640.code_ptr
        : local.iter_1640.code_ptr)

    steps_taken = 1 + local.iter_1640.steps_taken
  }
}

locals {
  code_1642 = (try(local.iter_1641.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1641.code_ptr, local.iter_1641.code_ptr + 2)
    : [null])

  input_1642 = (local.code_1642[0] == ","
    ? substr(local.input_1641, local.code_1642[1], -1)
    : local.input_1641)

  iter_1642 = try(local.iter_1641.code_ptr >= length(var.code), true) ? local.iter_1641 : {
    output = (local.code_1642[0] == "."
      ? "${local.iter_1641.output}${join("", [for _ in range(local.code_1642[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1641.tape[local.iter_1641.tape_ptr]))])}"
      : local.iter_1641.output)
    
    tape = (
      local.code_1642[0] == "+"
        ? [for i, b in local.iter_1641.tape : (i == local.iter_1641.tape_ptr ? (b + local.code_1642[1]) % 256 : b)] :
      local.code_1642[0] == "-"
        ? [for i, b in local.iter_1641.tape : (i == local.iter_1641.tape_ptr ? (b - local.code_1642[1] + 256) % 256 : b)] :
      local.code_1642[0] == ","
        ? [for i, b in local.iter_1641.tape : (i == local.iter_1641.tape_ptr ? local.ascii_lookup[substr(local.input_1642, 0, 1)] : b)]
        : local.iter_1641.tape)

    tape_ptr = (
      local.code_1642[0] == "<"
        ? local.iter_1641.tape_ptr - local.code_1642[1] :
      local.code_1642[0] == ">"
        ? local.iter_1641.tape_ptr + local.code_1642[1]
        : local.iter_1641.tape_ptr)

    code_ptr = 2 + (
      local.code_1642[0] == "["
        ? local.iter_1641.tape[local.iter_1641.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1641.code_ptr)] : local.iter_1641.code_ptr :
      local.code_1642[0] == "]"
        ? local.iter_1641.tape[local.iter_1641.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1641.code_ptr)] : local.iter_1641.code_ptr
        : local.iter_1641.code_ptr)

    steps_taken = 1 + local.iter_1641.steps_taken
  }
}

locals {
  code_1643 = (try(local.iter_1642.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1642.code_ptr, local.iter_1642.code_ptr + 2)
    : [null])

  input_1643 = (local.code_1643[0] == ","
    ? substr(local.input_1642, local.code_1643[1], -1)
    : local.input_1642)

  iter_1643 = try(local.iter_1642.code_ptr >= length(var.code), true) ? local.iter_1642 : {
    output = (local.code_1643[0] == "."
      ? "${local.iter_1642.output}${join("", [for _ in range(local.code_1643[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1642.tape[local.iter_1642.tape_ptr]))])}"
      : local.iter_1642.output)
    
    tape = (
      local.code_1643[0] == "+"
        ? [for i, b in local.iter_1642.tape : (i == local.iter_1642.tape_ptr ? (b + local.code_1643[1]) % 256 : b)] :
      local.code_1643[0] == "-"
        ? [for i, b in local.iter_1642.tape : (i == local.iter_1642.tape_ptr ? (b - local.code_1643[1] + 256) % 256 : b)] :
      local.code_1643[0] == ","
        ? [for i, b in local.iter_1642.tape : (i == local.iter_1642.tape_ptr ? local.ascii_lookup[substr(local.input_1643, 0, 1)] : b)]
        : local.iter_1642.tape)

    tape_ptr = (
      local.code_1643[0] == "<"
        ? local.iter_1642.tape_ptr - local.code_1643[1] :
      local.code_1643[0] == ">"
        ? local.iter_1642.tape_ptr + local.code_1643[1]
        : local.iter_1642.tape_ptr)

    code_ptr = 2 + (
      local.code_1643[0] == "["
        ? local.iter_1642.tape[local.iter_1642.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1642.code_ptr)] : local.iter_1642.code_ptr :
      local.code_1643[0] == "]"
        ? local.iter_1642.tape[local.iter_1642.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1642.code_ptr)] : local.iter_1642.code_ptr
        : local.iter_1642.code_ptr)

    steps_taken = 1 + local.iter_1642.steps_taken
  }
}

locals {
  code_1644 = (try(local.iter_1643.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1643.code_ptr, local.iter_1643.code_ptr + 2)
    : [null])

  input_1644 = (local.code_1644[0] == ","
    ? substr(local.input_1643, local.code_1644[1], -1)
    : local.input_1643)

  iter_1644 = try(local.iter_1643.code_ptr >= length(var.code), true) ? local.iter_1643 : {
    output = (local.code_1644[0] == "."
      ? "${local.iter_1643.output}${join("", [for _ in range(local.code_1644[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1643.tape[local.iter_1643.tape_ptr]))])}"
      : local.iter_1643.output)
    
    tape = (
      local.code_1644[0] == "+"
        ? [for i, b in local.iter_1643.tape : (i == local.iter_1643.tape_ptr ? (b + local.code_1644[1]) % 256 : b)] :
      local.code_1644[0] == "-"
        ? [for i, b in local.iter_1643.tape : (i == local.iter_1643.tape_ptr ? (b - local.code_1644[1] + 256) % 256 : b)] :
      local.code_1644[0] == ","
        ? [for i, b in local.iter_1643.tape : (i == local.iter_1643.tape_ptr ? local.ascii_lookup[substr(local.input_1644, 0, 1)] : b)]
        : local.iter_1643.tape)

    tape_ptr = (
      local.code_1644[0] == "<"
        ? local.iter_1643.tape_ptr - local.code_1644[1] :
      local.code_1644[0] == ">"
        ? local.iter_1643.tape_ptr + local.code_1644[1]
        : local.iter_1643.tape_ptr)

    code_ptr = 2 + (
      local.code_1644[0] == "["
        ? local.iter_1643.tape[local.iter_1643.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1643.code_ptr)] : local.iter_1643.code_ptr :
      local.code_1644[0] == "]"
        ? local.iter_1643.tape[local.iter_1643.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1643.code_ptr)] : local.iter_1643.code_ptr
        : local.iter_1643.code_ptr)

    steps_taken = 1 + local.iter_1643.steps_taken
  }
}

locals {
  code_1645 = (try(local.iter_1644.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1644.code_ptr, local.iter_1644.code_ptr + 2)
    : [null])

  input_1645 = (local.code_1645[0] == ","
    ? substr(local.input_1644, local.code_1645[1], -1)
    : local.input_1644)

  iter_1645 = try(local.iter_1644.code_ptr >= length(var.code), true) ? local.iter_1644 : {
    output = (local.code_1645[0] == "."
      ? "${local.iter_1644.output}${join("", [for _ in range(local.code_1645[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1644.tape[local.iter_1644.tape_ptr]))])}"
      : local.iter_1644.output)
    
    tape = (
      local.code_1645[0] == "+"
        ? [for i, b in local.iter_1644.tape : (i == local.iter_1644.tape_ptr ? (b + local.code_1645[1]) % 256 : b)] :
      local.code_1645[0] == "-"
        ? [for i, b in local.iter_1644.tape : (i == local.iter_1644.tape_ptr ? (b - local.code_1645[1] + 256) % 256 : b)] :
      local.code_1645[0] == ","
        ? [for i, b in local.iter_1644.tape : (i == local.iter_1644.tape_ptr ? local.ascii_lookup[substr(local.input_1645, 0, 1)] : b)]
        : local.iter_1644.tape)

    tape_ptr = (
      local.code_1645[0] == "<"
        ? local.iter_1644.tape_ptr - local.code_1645[1] :
      local.code_1645[0] == ">"
        ? local.iter_1644.tape_ptr + local.code_1645[1]
        : local.iter_1644.tape_ptr)

    code_ptr = 2 + (
      local.code_1645[0] == "["
        ? local.iter_1644.tape[local.iter_1644.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1644.code_ptr)] : local.iter_1644.code_ptr :
      local.code_1645[0] == "]"
        ? local.iter_1644.tape[local.iter_1644.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1644.code_ptr)] : local.iter_1644.code_ptr
        : local.iter_1644.code_ptr)

    steps_taken = 1 + local.iter_1644.steps_taken
  }
}

locals {
  code_1646 = (try(local.iter_1645.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1645.code_ptr, local.iter_1645.code_ptr + 2)
    : [null])

  input_1646 = (local.code_1646[0] == ","
    ? substr(local.input_1645, local.code_1646[1], -1)
    : local.input_1645)

  iter_1646 = try(local.iter_1645.code_ptr >= length(var.code), true) ? local.iter_1645 : {
    output = (local.code_1646[0] == "."
      ? "${local.iter_1645.output}${join("", [for _ in range(local.code_1646[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1645.tape[local.iter_1645.tape_ptr]))])}"
      : local.iter_1645.output)
    
    tape = (
      local.code_1646[0] == "+"
        ? [for i, b in local.iter_1645.tape : (i == local.iter_1645.tape_ptr ? (b + local.code_1646[1]) % 256 : b)] :
      local.code_1646[0] == "-"
        ? [for i, b in local.iter_1645.tape : (i == local.iter_1645.tape_ptr ? (b - local.code_1646[1] + 256) % 256 : b)] :
      local.code_1646[0] == ","
        ? [for i, b in local.iter_1645.tape : (i == local.iter_1645.tape_ptr ? local.ascii_lookup[substr(local.input_1646, 0, 1)] : b)]
        : local.iter_1645.tape)

    tape_ptr = (
      local.code_1646[0] == "<"
        ? local.iter_1645.tape_ptr - local.code_1646[1] :
      local.code_1646[0] == ">"
        ? local.iter_1645.tape_ptr + local.code_1646[1]
        : local.iter_1645.tape_ptr)

    code_ptr = 2 + (
      local.code_1646[0] == "["
        ? local.iter_1645.tape[local.iter_1645.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1645.code_ptr)] : local.iter_1645.code_ptr :
      local.code_1646[0] == "]"
        ? local.iter_1645.tape[local.iter_1645.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1645.code_ptr)] : local.iter_1645.code_ptr
        : local.iter_1645.code_ptr)

    steps_taken = 1 + local.iter_1645.steps_taken
  }
}

locals {
  code_1647 = (try(local.iter_1646.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1646.code_ptr, local.iter_1646.code_ptr + 2)
    : [null])

  input_1647 = (local.code_1647[0] == ","
    ? substr(local.input_1646, local.code_1647[1], -1)
    : local.input_1646)

  iter_1647 = try(local.iter_1646.code_ptr >= length(var.code), true) ? local.iter_1646 : {
    output = (local.code_1647[0] == "."
      ? "${local.iter_1646.output}${join("", [for _ in range(local.code_1647[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1646.tape[local.iter_1646.tape_ptr]))])}"
      : local.iter_1646.output)
    
    tape = (
      local.code_1647[0] == "+"
        ? [for i, b in local.iter_1646.tape : (i == local.iter_1646.tape_ptr ? (b + local.code_1647[1]) % 256 : b)] :
      local.code_1647[0] == "-"
        ? [for i, b in local.iter_1646.tape : (i == local.iter_1646.tape_ptr ? (b - local.code_1647[1] + 256) % 256 : b)] :
      local.code_1647[0] == ","
        ? [for i, b in local.iter_1646.tape : (i == local.iter_1646.tape_ptr ? local.ascii_lookup[substr(local.input_1647, 0, 1)] : b)]
        : local.iter_1646.tape)

    tape_ptr = (
      local.code_1647[0] == "<"
        ? local.iter_1646.tape_ptr - local.code_1647[1] :
      local.code_1647[0] == ">"
        ? local.iter_1646.tape_ptr + local.code_1647[1]
        : local.iter_1646.tape_ptr)

    code_ptr = 2 + (
      local.code_1647[0] == "["
        ? local.iter_1646.tape[local.iter_1646.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1646.code_ptr)] : local.iter_1646.code_ptr :
      local.code_1647[0] == "]"
        ? local.iter_1646.tape[local.iter_1646.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1646.code_ptr)] : local.iter_1646.code_ptr
        : local.iter_1646.code_ptr)

    steps_taken = 1 + local.iter_1646.steps_taken
  }
}

locals {
  code_1648 = (try(local.iter_1647.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1647.code_ptr, local.iter_1647.code_ptr + 2)
    : [null])

  input_1648 = (local.code_1648[0] == ","
    ? substr(local.input_1647, local.code_1648[1], -1)
    : local.input_1647)

  iter_1648 = try(local.iter_1647.code_ptr >= length(var.code), true) ? local.iter_1647 : {
    output = (local.code_1648[0] == "."
      ? "${local.iter_1647.output}${join("", [for _ in range(local.code_1648[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1647.tape[local.iter_1647.tape_ptr]))])}"
      : local.iter_1647.output)
    
    tape = (
      local.code_1648[0] == "+"
        ? [for i, b in local.iter_1647.tape : (i == local.iter_1647.tape_ptr ? (b + local.code_1648[1]) % 256 : b)] :
      local.code_1648[0] == "-"
        ? [for i, b in local.iter_1647.tape : (i == local.iter_1647.tape_ptr ? (b - local.code_1648[1] + 256) % 256 : b)] :
      local.code_1648[0] == ","
        ? [for i, b in local.iter_1647.tape : (i == local.iter_1647.tape_ptr ? local.ascii_lookup[substr(local.input_1648, 0, 1)] : b)]
        : local.iter_1647.tape)

    tape_ptr = (
      local.code_1648[0] == "<"
        ? local.iter_1647.tape_ptr - local.code_1648[1] :
      local.code_1648[0] == ">"
        ? local.iter_1647.tape_ptr + local.code_1648[1]
        : local.iter_1647.tape_ptr)

    code_ptr = 2 + (
      local.code_1648[0] == "["
        ? local.iter_1647.tape[local.iter_1647.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1647.code_ptr)] : local.iter_1647.code_ptr :
      local.code_1648[0] == "]"
        ? local.iter_1647.tape[local.iter_1647.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1647.code_ptr)] : local.iter_1647.code_ptr
        : local.iter_1647.code_ptr)

    steps_taken = 1 + local.iter_1647.steps_taken
  }
}

locals {
  code_1649 = (try(local.iter_1648.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1648.code_ptr, local.iter_1648.code_ptr + 2)
    : [null])

  input_1649 = (local.code_1649[0] == ","
    ? substr(local.input_1648, local.code_1649[1], -1)
    : local.input_1648)

  iter_1649 = try(local.iter_1648.code_ptr >= length(var.code), true) ? local.iter_1648 : {
    output = (local.code_1649[0] == "."
      ? "${local.iter_1648.output}${join("", [for _ in range(local.code_1649[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1648.tape[local.iter_1648.tape_ptr]))])}"
      : local.iter_1648.output)
    
    tape = (
      local.code_1649[0] == "+"
        ? [for i, b in local.iter_1648.tape : (i == local.iter_1648.tape_ptr ? (b + local.code_1649[1]) % 256 : b)] :
      local.code_1649[0] == "-"
        ? [for i, b in local.iter_1648.tape : (i == local.iter_1648.tape_ptr ? (b - local.code_1649[1] + 256) % 256 : b)] :
      local.code_1649[0] == ","
        ? [for i, b in local.iter_1648.tape : (i == local.iter_1648.tape_ptr ? local.ascii_lookup[substr(local.input_1649, 0, 1)] : b)]
        : local.iter_1648.tape)

    tape_ptr = (
      local.code_1649[0] == "<"
        ? local.iter_1648.tape_ptr - local.code_1649[1] :
      local.code_1649[0] == ">"
        ? local.iter_1648.tape_ptr + local.code_1649[1]
        : local.iter_1648.tape_ptr)

    code_ptr = 2 + (
      local.code_1649[0] == "["
        ? local.iter_1648.tape[local.iter_1648.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1648.code_ptr)] : local.iter_1648.code_ptr :
      local.code_1649[0] == "]"
        ? local.iter_1648.tape[local.iter_1648.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1648.code_ptr)] : local.iter_1648.code_ptr
        : local.iter_1648.code_ptr)

    steps_taken = 1 + local.iter_1648.steps_taken
  }
}

locals {
  code_1650 = (try(local.iter_1649.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1649.code_ptr, local.iter_1649.code_ptr + 2)
    : [null])

  input_1650 = (local.code_1650[0] == ","
    ? substr(local.input_1649, local.code_1650[1], -1)
    : local.input_1649)

  iter_1650 = try(local.iter_1649.code_ptr >= length(var.code), true) ? local.iter_1649 : {
    output = (local.code_1650[0] == "."
      ? "${local.iter_1649.output}${join("", [for _ in range(local.code_1650[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1649.tape[local.iter_1649.tape_ptr]))])}"
      : local.iter_1649.output)
    
    tape = (
      local.code_1650[0] == "+"
        ? [for i, b in local.iter_1649.tape : (i == local.iter_1649.tape_ptr ? (b + local.code_1650[1]) % 256 : b)] :
      local.code_1650[0] == "-"
        ? [for i, b in local.iter_1649.tape : (i == local.iter_1649.tape_ptr ? (b - local.code_1650[1] + 256) % 256 : b)] :
      local.code_1650[0] == ","
        ? [for i, b in local.iter_1649.tape : (i == local.iter_1649.tape_ptr ? local.ascii_lookup[substr(local.input_1650, 0, 1)] : b)]
        : local.iter_1649.tape)

    tape_ptr = (
      local.code_1650[0] == "<"
        ? local.iter_1649.tape_ptr - local.code_1650[1] :
      local.code_1650[0] == ">"
        ? local.iter_1649.tape_ptr + local.code_1650[1]
        : local.iter_1649.tape_ptr)

    code_ptr = 2 + (
      local.code_1650[0] == "["
        ? local.iter_1649.tape[local.iter_1649.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1649.code_ptr)] : local.iter_1649.code_ptr :
      local.code_1650[0] == "]"
        ? local.iter_1649.tape[local.iter_1649.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1649.code_ptr)] : local.iter_1649.code_ptr
        : local.iter_1649.code_ptr)

    steps_taken = 1 + local.iter_1649.steps_taken
  }
}

locals {
  code_1651 = (try(local.iter_1650.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1650.code_ptr, local.iter_1650.code_ptr + 2)
    : [null])

  input_1651 = (local.code_1651[0] == ","
    ? substr(local.input_1650, local.code_1651[1], -1)
    : local.input_1650)

  iter_1651 = try(local.iter_1650.code_ptr >= length(var.code), true) ? local.iter_1650 : {
    output = (local.code_1651[0] == "."
      ? "${local.iter_1650.output}${join("", [for _ in range(local.code_1651[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1650.tape[local.iter_1650.tape_ptr]))])}"
      : local.iter_1650.output)
    
    tape = (
      local.code_1651[0] == "+"
        ? [for i, b in local.iter_1650.tape : (i == local.iter_1650.tape_ptr ? (b + local.code_1651[1]) % 256 : b)] :
      local.code_1651[0] == "-"
        ? [for i, b in local.iter_1650.tape : (i == local.iter_1650.tape_ptr ? (b - local.code_1651[1] + 256) % 256 : b)] :
      local.code_1651[0] == ","
        ? [for i, b in local.iter_1650.tape : (i == local.iter_1650.tape_ptr ? local.ascii_lookup[substr(local.input_1651, 0, 1)] : b)]
        : local.iter_1650.tape)

    tape_ptr = (
      local.code_1651[0] == "<"
        ? local.iter_1650.tape_ptr - local.code_1651[1] :
      local.code_1651[0] == ">"
        ? local.iter_1650.tape_ptr + local.code_1651[1]
        : local.iter_1650.tape_ptr)

    code_ptr = 2 + (
      local.code_1651[0] == "["
        ? local.iter_1650.tape[local.iter_1650.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1650.code_ptr)] : local.iter_1650.code_ptr :
      local.code_1651[0] == "]"
        ? local.iter_1650.tape[local.iter_1650.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1650.code_ptr)] : local.iter_1650.code_ptr
        : local.iter_1650.code_ptr)

    steps_taken = 1 + local.iter_1650.steps_taken
  }
}

locals {
  code_1652 = (try(local.iter_1651.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1651.code_ptr, local.iter_1651.code_ptr + 2)
    : [null])

  input_1652 = (local.code_1652[0] == ","
    ? substr(local.input_1651, local.code_1652[1], -1)
    : local.input_1651)

  iter_1652 = try(local.iter_1651.code_ptr >= length(var.code), true) ? local.iter_1651 : {
    output = (local.code_1652[0] == "."
      ? "${local.iter_1651.output}${join("", [for _ in range(local.code_1652[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1651.tape[local.iter_1651.tape_ptr]))])}"
      : local.iter_1651.output)
    
    tape = (
      local.code_1652[0] == "+"
        ? [for i, b in local.iter_1651.tape : (i == local.iter_1651.tape_ptr ? (b + local.code_1652[1]) % 256 : b)] :
      local.code_1652[0] == "-"
        ? [for i, b in local.iter_1651.tape : (i == local.iter_1651.tape_ptr ? (b - local.code_1652[1] + 256) % 256 : b)] :
      local.code_1652[0] == ","
        ? [for i, b in local.iter_1651.tape : (i == local.iter_1651.tape_ptr ? local.ascii_lookup[substr(local.input_1652, 0, 1)] : b)]
        : local.iter_1651.tape)

    tape_ptr = (
      local.code_1652[0] == "<"
        ? local.iter_1651.tape_ptr - local.code_1652[1] :
      local.code_1652[0] == ">"
        ? local.iter_1651.tape_ptr + local.code_1652[1]
        : local.iter_1651.tape_ptr)

    code_ptr = 2 + (
      local.code_1652[0] == "["
        ? local.iter_1651.tape[local.iter_1651.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1651.code_ptr)] : local.iter_1651.code_ptr :
      local.code_1652[0] == "]"
        ? local.iter_1651.tape[local.iter_1651.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1651.code_ptr)] : local.iter_1651.code_ptr
        : local.iter_1651.code_ptr)

    steps_taken = 1 + local.iter_1651.steps_taken
  }
}

locals {
  code_1653 = (try(local.iter_1652.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1652.code_ptr, local.iter_1652.code_ptr + 2)
    : [null])

  input_1653 = (local.code_1653[0] == ","
    ? substr(local.input_1652, local.code_1653[1], -1)
    : local.input_1652)

  iter_1653 = try(local.iter_1652.code_ptr >= length(var.code), true) ? local.iter_1652 : {
    output = (local.code_1653[0] == "."
      ? "${local.iter_1652.output}${join("", [for _ in range(local.code_1653[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1652.tape[local.iter_1652.tape_ptr]))])}"
      : local.iter_1652.output)
    
    tape = (
      local.code_1653[0] == "+"
        ? [for i, b in local.iter_1652.tape : (i == local.iter_1652.tape_ptr ? (b + local.code_1653[1]) % 256 : b)] :
      local.code_1653[0] == "-"
        ? [for i, b in local.iter_1652.tape : (i == local.iter_1652.tape_ptr ? (b - local.code_1653[1] + 256) % 256 : b)] :
      local.code_1653[0] == ","
        ? [for i, b in local.iter_1652.tape : (i == local.iter_1652.tape_ptr ? local.ascii_lookup[substr(local.input_1653, 0, 1)] : b)]
        : local.iter_1652.tape)

    tape_ptr = (
      local.code_1653[0] == "<"
        ? local.iter_1652.tape_ptr - local.code_1653[1] :
      local.code_1653[0] == ">"
        ? local.iter_1652.tape_ptr + local.code_1653[1]
        : local.iter_1652.tape_ptr)

    code_ptr = 2 + (
      local.code_1653[0] == "["
        ? local.iter_1652.tape[local.iter_1652.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1652.code_ptr)] : local.iter_1652.code_ptr :
      local.code_1653[0] == "]"
        ? local.iter_1652.tape[local.iter_1652.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1652.code_ptr)] : local.iter_1652.code_ptr
        : local.iter_1652.code_ptr)

    steps_taken = 1 + local.iter_1652.steps_taken
  }
}

locals {
  code_1654 = (try(local.iter_1653.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1653.code_ptr, local.iter_1653.code_ptr + 2)
    : [null])

  input_1654 = (local.code_1654[0] == ","
    ? substr(local.input_1653, local.code_1654[1], -1)
    : local.input_1653)

  iter_1654 = try(local.iter_1653.code_ptr >= length(var.code), true) ? local.iter_1653 : {
    output = (local.code_1654[0] == "."
      ? "${local.iter_1653.output}${join("", [for _ in range(local.code_1654[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1653.tape[local.iter_1653.tape_ptr]))])}"
      : local.iter_1653.output)
    
    tape = (
      local.code_1654[0] == "+"
        ? [for i, b in local.iter_1653.tape : (i == local.iter_1653.tape_ptr ? (b + local.code_1654[1]) % 256 : b)] :
      local.code_1654[0] == "-"
        ? [for i, b in local.iter_1653.tape : (i == local.iter_1653.tape_ptr ? (b - local.code_1654[1] + 256) % 256 : b)] :
      local.code_1654[0] == ","
        ? [for i, b in local.iter_1653.tape : (i == local.iter_1653.tape_ptr ? local.ascii_lookup[substr(local.input_1654, 0, 1)] : b)]
        : local.iter_1653.tape)

    tape_ptr = (
      local.code_1654[0] == "<"
        ? local.iter_1653.tape_ptr - local.code_1654[1] :
      local.code_1654[0] == ">"
        ? local.iter_1653.tape_ptr + local.code_1654[1]
        : local.iter_1653.tape_ptr)

    code_ptr = 2 + (
      local.code_1654[0] == "["
        ? local.iter_1653.tape[local.iter_1653.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1653.code_ptr)] : local.iter_1653.code_ptr :
      local.code_1654[0] == "]"
        ? local.iter_1653.tape[local.iter_1653.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1653.code_ptr)] : local.iter_1653.code_ptr
        : local.iter_1653.code_ptr)

    steps_taken = 1 + local.iter_1653.steps_taken
  }
}

locals {
  code_1655 = (try(local.iter_1654.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1654.code_ptr, local.iter_1654.code_ptr + 2)
    : [null])

  input_1655 = (local.code_1655[0] == ","
    ? substr(local.input_1654, local.code_1655[1], -1)
    : local.input_1654)

  iter_1655 = try(local.iter_1654.code_ptr >= length(var.code), true) ? local.iter_1654 : {
    output = (local.code_1655[0] == "."
      ? "${local.iter_1654.output}${join("", [for _ in range(local.code_1655[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1654.tape[local.iter_1654.tape_ptr]))])}"
      : local.iter_1654.output)
    
    tape = (
      local.code_1655[0] == "+"
        ? [for i, b in local.iter_1654.tape : (i == local.iter_1654.tape_ptr ? (b + local.code_1655[1]) % 256 : b)] :
      local.code_1655[0] == "-"
        ? [for i, b in local.iter_1654.tape : (i == local.iter_1654.tape_ptr ? (b - local.code_1655[1] + 256) % 256 : b)] :
      local.code_1655[0] == ","
        ? [for i, b in local.iter_1654.tape : (i == local.iter_1654.tape_ptr ? local.ascii_lookup[substr(local.input_1655, 0, 1)] : b)]
        : local.iter_1654.tape)

    tape_ptr = (
      local.code_1655[0] == "<"
        ? local.iter_1654.tape_ptr - local.code_1655[1] :
      local.code_1655[0] == ">"
        ? local.iter_1654.tape_ptr + local.code_1655[1]
        : local.iter_1654.tape_ptr)

    code_ptr = 2 + (
      local.code_1655[0] == "["
        ? local.iter_1654.tape[local.iter_1654.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1654.code_ptr)] : local.iter_1654.code_ptr :
      local.code_1655[0] == "]"
        ? local.iter_1654.tape[local.iter_1654.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1654.code_ptr)] : local.iter_1654.code_ptr
        : local.iter_1654.code_ptr)

    steps_taken = 1 + local.iter_1654.steps_taken
  }
}

locals {
  code_1656 = (try(local.iter_1655.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1655.code_ptr, local.iter_1655.code_ptr + 2)
    : [null])

  input_1656 = (local.code_1656[0] == ","
    ? substr(local.input_1655, local.code_1656[1], -1)
    : local.input_1655)

  iter_1656 = try(local.iter_1655.code_ptr >= length(var.code), true) ? local.iter_1655 : {
    output = (local.code_1656[0] == "."
      ? "${local.iter_1655.output}${join("", [for _ in range(local.code_1656[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1655.tape[local.iter_1655.tape_ptr]))])}"
      : local.iter_1655.output)
    
    tape = (
      local.code_1656[0] == "+"
        ? [for i, b in local.iter_1655.tape : (i == local.iter_1655.tape_ptr ? (b + local.code_1656[1]) % 256 : b)] :
      local.code_1656[0] == "-"
        ? [for i, b in local.iter_1655.tape : (i == local.iter_1655.tape_ptr ? (b - local.code_1656[1] + 256) % 256 : b)] :
      local.code_1656[0] == ","
        ? [for i, b in local.iter_1655.tape : (i == local.iter_1655.tape_ptr ? local.ascii_lookup[substr(local.input_1656, 0, 1)] : b)]
        : local.iter_1655.tape)

    tape_ptr = (
      local.code_1656[0] == "<"
        ? local.iter_1655.tape_ptr - local.code_1656[1] :
      local.code_1656[0] == ">"
        ? local.iter_1655.tape_ptr + local.code_1656[1]
        : local.iter_1655.tape_ptr)

    code_ptr = 2 + (
      local.code_1656[0] == "["
        ? local.iter_1655.tape[local.iter_1655.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1655.code_ptr)] : local.iter_1655.code_ptr :
      local.code_1656[0] == "]"
        ? local.iter_1655.tape[local.iter_1655.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1655.code_ptr)] : local.iter_1655.code_ptr
        : local.iter_1655.code_ptr)

    steps_taken = 1 + local.iter_1655.steps_taken
  }
}

locals {
  code_1657 = (try(local.iter_1656.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1656.code_ptr, local.iter_1656.code_ptr + 2)
    : [null])

  input_1657 = (local.code_1657[0] == ","
    ? substr(local.input_1656, local.code_1657[1], -1)
    : local.input_1656)

  iter_1657 = try(local.iter_1656.code_ptr >= length(var.code), true) ? local.iter_1656 : {
    output = (local.code_1657[0] == "."
      ? "${local.iter_1656.output}${join("", [for _ in range(local.code_1657[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1656.tape[local.iter_1656.tape_ptr]))])}"
      : local.iter_1656.output)
    
    tape = (
      local.code_1657[0] == "+"
        ? [for i, b in local.iter_1656.tape : (i == local.iter_1656.tape_ptr ? (b + local.code_1657[1]) % 256 : b)] :
      local.code_1657[0] == "-"
        ? [for i, b in local.iter_1656.tape : (i == local.iter_1656.tape_ptr ? (b - local.code_1657[1] + 256) % 256 : b)] :
      local.code_1657[0] == ","
        ? [for i, b in local.iter_1656.tape : (i == local.iter_1656.tape_ptr ? local.ascii_lookup[substr(local.input_1657, 0, 1)] : b)]
        : local.iter_1656.tape)

    tape_ptr = (
      local.code_1657[0] == "<"
        ? local.iter_1656.tape_ptr - local.code_1657[1] :
      local.code_1657[0] == ">"
        ? local.iter_1656.tape_ptr + local.code_1657[1]
        : local.iter_1656.tape_ptr)

    code_ptr = 2 + (
      local.code_1657[0] == "["
        ? local.iter_1656.tape[local.iter_1656.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1656.code_ptr)] : local.iter_1656.code_ptr :
      local.code_1657[0] == "]"
        ? local.iter_1656.tape[local.iter_1656.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1656.code_ptr)] : local.iter_1656.code_ptr
        : local.iter_1656.code_ptr)

    steps_taken = 1 + local.iter_1656.steps_taken
  }
}

locals {
  code_1658 = (try(local.iter_1657.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1657.code_ptr, local.iter_1657.code_ptr + 2)
    : [null])

  input_1658 = (local.code_1658[0] == ","
    ? substr(local.input_1657, local.code_1658[1], -1)
    : local.input_1657)

  iter_1658 = try(local.iter_1657.code_ptr >= length(var.code), true) ? local.iter_1657 : {
    output = (local.code_1658[0] == "."
      ? "${local.iter_1657.output}${join("", [for _ in range(local.code_1658[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1657.tape[local.iter_1657.tape_ptr]))])}"
      : local.iter_1657.output)
    
    tape = (
      local.code_1658[0] == "+"
        ? [for i, b in local.iter_1657.tape : (i == local.iter_1657.tape_ptr ? (b + local.code_1658[1]) % 256 : b)] :
      local.code_1658[0] == "-"
        ? [for i, b in local.iter_1657.tape : (i == local.iter_1657.tape_ptr ? (b - local.code_1658[1] + 256) % 256 : b)] :
      local.code_1658[0] == ","
        ? [for i, b in local.iter_1657.tape : (i == local.iter_1657.tape_ptr ? local.ascii_lookup[substr(local.input_1658, 0, 1)] : b)]
        : local.iter_1657.tape)

    tape_ptr = (
      local.code_1658[0] == "<"
        ? local.iter_1657.tape_ptr - local.code_1658[1] :
      local.code_1658[0] == ">"
        ? local.iter_1657.tape_ptr + local.code_1658[1]
        : local.iter_1657.tape_ptr)

    code_ptr = 2 + (
      local.code_1658[0] == "["
        ? local.iter_1657.tape[local.iter_1657.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1657.code_ptr)] : local.iter_1657.code_ptr :
      local.code_1658[0] == "]"
        ? local.iter_1657.tape[local.iter_1657.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1657.code_ptr)] : local.iter_1657.code_ptr
        : local.iter_1657.code_ptr)

    steps_taken = 1 + local.iter_1657.steps_taken
  }
}

locals {
  code_1659 = (try(local.iter_1658.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1658.code_ptr, local.iter_1658.code_ptr + 2)
    : [null])

  input_1659 = (local.code_1659[0] == ","
    ? substr(local.input_1658, local.code_1659[1], -1)
    : local.input_1658)

  iter_1659 = try(local.iter_1658.code_ptr >= length(var.code), true) ? local.iter_1658 : {
    output = (local.code_1659[0] == "."
      ? "${local.iter_1658.output}${join("", [for _ in range(local.code_1659[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1658.tape[local.iter_1658.tape_ptr]))])}"
      : local.iter_1658.output)
    
    tape = (
      local.code_1659[0] == "+"
        ? [for i, b in local.iter_1658.tape : (i == local.iter_1658.tape_ptr ? (b + local.code_1659[1]) % 256 : b)] :
      local.code_1659[0] == "-"
        ? [for i, b in local.iter_1658.tape : (i == local.iter_1658.tape_ptr ? (b - local.code_1659[1] + 256) % 256 : b)] :
      local.code_1659[0] == ","
        ? [for i, b in local.iter_1658.tape : (i == local.iter_1658.tape_ptr ? local.ascii_lookup[substr(local.input_1659, 0, 1)] : b)]
        : local.iter_1658.tape)

    tape_ptr = (
      local.code_1659[0] == "<"
        ? local.iter_1658.tape_ptr - local.code_1659[1] :
      local.code_1659[0] == ">"
        ? local.iter_1658.tape_ptr + local.code_1659[1]
        : local.iter_1658.tape_ptr)

    code_ptr = 2 + (
      local.code_1659[0] == "["
        ? local.iter_1658.tape[local.iter_1658.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1658.code_ptr)] : local.iter_1658.code_ptr :
      local.code_1659[0] == "]"
        ? local.iter_1658.tape[local.iter_1658.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1658.code_ptr)] : local.iter_1658.code_ptr
        : local.iter_1658.code_ptr)

    steps_taken = 1 + local.iter_1658.steps_taken
  }
}

locals {
  code_1660 = (try(local.iter_1659.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1659.code_ptr, local.iter_1659.code_ptr + 2)
    : [null])

  input_1660 = (local.code_1660[0] == ","
    ? substr(local.input_1659, local.code_1660[1], -1)
    : local.input_1659)

  iter_1660 = try(local.iter_1659.code_ptr >= length(var.code), true) ? local.iter_1659 : {
    output = (local.code_1660[0] == "."
      ? "${local.iter_1659.output}${join("", [for _ in range(local.code_1660[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1659.tape[local.iter_1659.tape_ptr]))])}"
      : local.iter_1659.output)
    
    tape = (
      local.code_1660[0] == "+"
        ? [for i, b in local.iter_1659.tape : (i == local.iter_1659.tape_ptr ? (b + local.code_1660[1]) % 256 : b)] :
      local.code_1660[0] == "-"
        ? [for i, b in local.iter_1659.tape : (i == local.iter_1659.tape_ptr ? (b - local.code_1660[1] + 256) % 256 : b)] :
      local.code_1660[0] == ","
        ? [for i, b in local.iter_1659.tape : (i == local.iter_1659.tape_ptr ? local.ascii_lookup[substr(local.input_1660, 0, 1)] : b)]
        : local.iter_1659.tape)

    tape_ptr = (
      local.code_1660[0] == "<"
        ? local.iter_1659.tape_ptr - local.code_1660[1] :
      local.code_1660[0] == ">"
        ? local.iter_1659.tape_ptr + local.code_1660[1]
        : local.iter_1659.tape_ptr)

    code_ptr = 2 + (
      local.code_1660[0] == "["
        ? local.iter_1659.tape[local.iter_1659.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1659.code_ptr)] : local.iter_1659.code_ptr :
      local.code_1660[0] == "]"
        ? local.iter_1659.tape[local.iter_1659.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1659.code_ptr)] : local.iter_1659.code_ptr
        : local.iter_1659.code_ptr)

    steps_taken = 1 + local.iter_1659.steps_taken
  }
}

locals {
  code_1661 = (try(local.iter_1660.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1660.code_ptr, local.iter_1660.code_ptr + 2)
    : [null])

  input_1661 = (local.code_1661[0] == ","
    ? substr(local.input_1660, local.code_1661[1], -1)
    : local.input_1660)

  iter_1661 = try(local.iter_1660.code_ptr >= length(var.code), true) ? local.iter_1660 : {
    output = (local.code_1661[0] == "."
      ? "${local.iter_1660.output}${join("", [for _ in range(local.code_1661[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1660.tape[local.iter_1660.tape_ptr]))])}"
      : local.iter_1660.output)
    
    tape = (
      local.code_1661[0] == "+"
        ? [for i, b in local.iter_1660.tape : (i == local.iter_1660.tape_ptr ? (b + local.code_1661[1]) % 256 : b)] :
      local.code_1661[0] == "-"
        ? [for i, b in local.iter_1660.tape : (i == local.iter_1660.tape_ptr ? (b - local.code_1661[1] + 256) % 256 : b)] :
      local.code_1661[0] == ","
        ? [for i, b in local.iter_1660.tape : (i == local.iter_1660.tape_ptr ? local.ascii_lookup[substr(local.input_1661, 0, 1)] : b)]
        : local.iter_1660.tape)

    tape_ptr = (
      local.code_1661[0] == "<"
        ? local.iter_1660.tape_ptr - local.code_1661[1] :
      local.code_1661[0] == ">"
        ? local.iter_1660.tape_ptr + local.code_1661[1]
        : local.iter_1660.tape_ptr)

    code_ptr = 2 + (
      local.code_1661[0] == "["
        ? local.iter_1660.tape[local.iter_1660.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1660.code_ptr)] : local.iter_1660.code_ptr :
      local.code_1661[0] == "]"
        ? local.iter_1660.tape[local.iter_1660.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1660.code_ptr)] : local.iter_1660.code_ptr
        : local.iter_1660.code_ptr)

    steps_taken = 1 + local.iter_1660.steps_taken
  }
}

locals {
  code_1662 = (try(local.iter_1661.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1661.code_ptr, local.iter_1661.code_ptr + 2)
    : [null])

  input_1662 = (local.code_1662[0] == ","
    ? substr(local.input_1661, local.code_1662[1], -1)
    : local.input_1661)

  iter_1662 = try(local.iter_1661.code_ptr >= length(var.code), true) ? local.iter_1661 : {
    output = (local.code_1662[0] == "."
      ? "${local.iter_1661.output}${join("", [for _ in range(local.code_1662[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1661.tape[local.iter_1661.tape_ptr]))])}"
      : local.iter_1661.output)
    
    tape = (
      local.code_1662[0] == "+"
        ? [for i, b in local.iter_1661.tape : (i == local.iter_1661.tape_ptr ? (b + local.code_1662[1]) % 256 : b)] :
      local.code_1662[0] == "-"
        ? [for i, b in local.iter_1661.tape : (i == local.iter_1661.tape_ptr ? (b - local.code_1662[1] + 256) % 256 : b)] :
      local.code_1662[0] == ","
        ? [for i, b in local.iter_1661.tape : (i == local.iter_1661.tape_ptr ? local.ascii_lookup[substr(local.input_1662, 0, 1)] : b)]
        : local.iter_1661.tape)

    tape_ptr = (
      local.code_1662[0] == "<"
        ? local.iter_1661.tape_ptr - local.code_1662[1] :
      local.code_1662[0] == ">"
        ? local.iter_1661.tape_ptr + local.code_1662[1]
        : local.iter_1661.tape_ptr)

    code_ptr = 2 + (
      local.code_1662[0] == "["
        ? local.iter_1661.tape[local.iter_1661.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1661.code_ptr)] : local.iter_1661.code_ptr :
      local.code_1662[0] == "]"
        ? local.iter_1661.tape[local.iter_1661.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1661.code_ptr)] : local.iter_1661.code_ptr
        : local.iter_1661.code_ptr)

    steps_taken = 1 + local.iter_1661.steps_taken
  }
}

locals {
  code_1663 = (try(local.iter_1662.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1662.code_ptr, local.iter_1662.code_ptr + 2)
    : [null])

  input_1663 = (local.code_1663[0] == ","
    ? substr(local.input_1662, local.code_1663[1], -1)
    : local.input_1662)

  iter_1663 = try(local.iter_1662.code_ptr >= length(var.code), true) ? local.iter_1662 : {
    output = (local.code_1663[0] == "."
      ? "${local.iter_1662.output}${join("", [for _ in range(local.code_1663[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1662.tape[local.iter_1662.tape_ptr]))])}"
      : local.iter_1662.output)
    
    tape = (
      local.code_1663[0] == "+"
        ? [for i, b in local.iter_1662.tape : (i == local.iter_1662.tape_ptr ? (b + local.code_1663[1]) % 256 : b)] :
      local.code_1663[0] == "-"
        ? [for i, b in local.iter_1662.tape : (i == local.iter_1662.tape_ptr ? (b - local.code_1663[1] + 256) % 256 : b)] :
      local.code_1663[0] == ","
        ? [for i, b in local.iter_1662.tape : (i == local.iter_1662.tape_ptr ? local.ascii_lookup[substr(local.input_1663, 0, 1)] : b)]
        : local.iter_1662.tape)

    tape_ptr = (
      local.code_1663[0] == "<"
        ? local.iter_1662.tape_ptr - local.code_1663[1] :
      local.code_1663[0] == ">"
        ? local.iter_1662.tape_ptr + local.code_1663[1]
        : local.iter_1662.tape_ptr)

    code_ptr = 2 + (
      local.code_1663[0] == "["
        ? local.iter_1662.tape[local.iter_1662.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1662.code_ptr)] : local.iter_1662.code_ptr :
      local.code_1663[0] == "]"
        ? local.iter_1662.tape[local.iter_1662.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1662.code_ptr)] : local.iter_1662.code_ptr
        : local.iter_1662.code_ptr)

    steps_taken = 1 + local.iter_1662.steps_taken
  }
}

locals {
  code_1664 = (try(local.iter_1663.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1663.code_ptr, local.iter_1663.code_ptr + 2)
    : [null])

  input_1664 = (local.code_1664[0] == ","
    ? substr(local.input_1663, local.code_1664[1], -1)
    : local.input_1663)

  iter_1664 = try(local.iter_1663.code_ptr >= length(var.code), true) ? local.iter_1663 : {
    output = (local.code_1664[0] == "."
      ? "${local.iter_1663.output}${join("", [for _ in range(local.code_1664[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1663.tape[local.iter_1663.tape_ptr]))])}"
      : local.iter_1663.output)
    
    tape = (
      local.code_1664[0] == "+"
        ? [for i, b in local.iter_1663.tape : (i == local.iter_1663.tape_ptr ? (b + local.code_1664[1]) % 256 : b)] :
      local.code_1664[0] == "-"
        ? [for i, b in local.iter_1663.tape : (i == local.iter_1663.tape_ptr ? (b - local.code_1664[1] + 256) % 256 : b)] :
      local.code_1664[0] == ","
        ? [for i, b in local.iter_1663.tape : (i == local.iter_1663.tape_ptr ? local.ascii_lookup[substr(local.input_1664, 0, 1)] : b)]
        : local.iter_1663.tape)

    tape_ptr = (
      local.code_1664[0] == "<"
        ? local.iter_1663.tape_ptr - local.code_1664[1] :
      local.code_1664[0] == ">"
        ? local.iter_1663.tape_ptr + local.code_1664[1]
        : local.iter_1663.tape_ptr)

    code_ptr = 2 + (
      local.code_1664[0] == "["
        ? local.iter_1663.tape[local.iter_1663.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1663.code_ptr)] : local.iter_1663.code_ptr :
      local.code_1664[0] == "]"
        ? local.iter_1663.tape[local.iter_1663.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1663.code_ptr)] : local.iter_1663.code_ptr
        : local.iter_1663.code_ptr)

    steps_taken = 1 + local.iter_1663.steps_taken
  }
}

locals {
  code_1665 = (try(local.iter_1664.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1664.code_ptr, local.iter_1664.code_ptr + 2)
    : [null])

  input_1665 = (local.code_1665[0] == ","
    ? substr(local.input_1664, local.code_1665[1], -1)
    : local.input_1664)

  iter_1665 = try(local.iter_1664.code_ptr >= length(var.code), true) ? local.iter_1664 : {
    output = (local.code_1665[0] == "."
      ? "${local.iter_1664.output}${join("", [for _ in range(local.code_1665[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1664.tape[local.iter_1664.tape_ptr]))])}"
      : local.iter_1664.output)
    
    tape = (
      local.code_1665[0] == "+"
        ? [for i, b in local.iter_1664.tape : (i == local.iter_1664.tape_ptr ? (b + local.code_1665[1]) % 256 : b)] :
      local.code_1665[0] == "-"
        ? [for i, b in local.iter_1664.tape : (i == local.iter_1664.tape_ptr ? (b - local.code_1665[1] + 256) % 256 : b)] :
      local.code_1665[0] == ","
        ? [for i, b in local.iter_1664.tape : (i == local.iter_1664.tape_ptr ? local.ascii_lookup[substr(local.input_1665, 0, 1)] : b)]
        : local.iter_1664.tape)

    tape_ptr = (
      local.code_1665[0] == "<"
        ? local.iter_1664.tape_ptr - local.code_1665[1] :
      local.code_1665[0] == ">"
        ? local.iter_1664.tape_ptr + local.code_1665[1]
        : local.iter_1664.tape_ptr)

    code_ptr = 2 + (
      local.code_1665[0] == "["
        ? local.iter_1664.tape[local.iter_1664.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1664.code_ptr)] : local.iter_1664.code_ptr :
      local.code_1665[0] == "]"
        ? local.iter_1664.tape[local.iter_1664.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1664.code_ptr)] : local.iter_1664.code_ptr
        : local.iter_1664.code_ptr)

    steps_taken = 1 + local.iter_1664.steps_taken
  }
}

locals {
  code_1666 = (try(local.iter_1665.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1665.code_ptr, local.iter_1665.code_ptr + 2)
    : [null])

  input_1666 = (local.code_1666[0] == ","
    ? substr(local.input_1665, local.code_1666[1], -1)
    : local.input_1665)

  iter_1666 = try(local.iter_1665.code_ptr >= length(var.code), true) ? local.iter_1665 : {
    output = (local.code_1666[0] == "."
      ? "${local.iter_1665.output}${join("", [for _ in range(local.code_1666[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1665.tape[local.iter_1665.tape_ptr]))])}"
      : local.iter_1665.output)
    
    tape = (
      local.code_1666[0] == "+"
        ? [for i, b in local.iter_1665.tape : (i == local.iter_1665.tape_ptr ? (b + local.code_1666[1]) % 256 : b)] :
      local.code_1666[0] == "-"
        ? [for i, b in local.iter_1665.tape : (i == local.iter_1665.tape_ptr ? (b - local.code_1666[1] + 256) % 256 : b)] :
      local.code_1666[0] == ","
        ? [for i, b in local.iter_1665.tape : (i == local.iter_1665.tape_ptr ? local.ascii_lookup[substr(local.input_1666, 0, 1)] : b)]
        : local.iter_1665.tape)

    tape_ptr = (
      local.code_1666[0] == "<"
        ? local.iter_1665.tape_ptr - local.code_1666[1] :
      local.code_1666[0] == ">"
        ? local.iter_1665.tape_ptr + local.code_1666[1]
        : local.iter_1665.tape_ptr)

    code_ptr = 2 + (
      local.code_1666[0] == "["
        ? local.iter_1665.tape[local.iter_1665.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1665.code_ptr)] : local.iter_1665.code_ptr :
      local.code_1666[0] == "]"
        ? local.iter_1665.tape[local.iter_1665.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1665.code_ptr)] : local.iter_1665.code_ptr
        : local.iter_1665.code_ptr)

    steps_taken = 1 + local.iter_1665.steps_taken
  }
}

locals {
  code_1667 = (try(local.iter_1666.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1666.code_ptr, local.iter_1666.code_ptr + 2)
    : [null])

  input_1667 = (local.code_1667[0] == ","
    ? substr(local.input_1666, local.code_1667[1], -1)
    : local.input_1666)

  iter_1667 = try(local.iter_1666.code_ptr >= length(var.code), true) ? local.iter_1666 : {
    output = (local.code_1667[0] == "."
      ? "${local.iter_1666.output}${join("", [for _ in range(local.code_1667[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1666.tape[local.iter_1666.tape_ptr]))])}"
      : local.iter_1666.output)
    
    tape = (
      local.code_1667[0] == "+"
        ? [for i, b in local.iter_1666.tape : (i == local.iter_1666.tape_ptr ? (b + local.code_1667[1]) % 256 : b)] :
      local.code_1667[0] == "-"
        ? [for i, b in local.iter_1666.tape : (i == local.iter_1666.tape_ptr ? (b - local.code_1667[1] + 256) % 256 : b)] :
      local.code_1667[0] == ","
        ? [for i, b in local.iter_1666.tape : (i == local.iter_1666.tape_ptr ? local.ascii_lookup[substr(local.input_1667, 0, 1)] : b)]
        : local.iter_1666.tape)

    tape_ptr = (
      local.code_1667[0] == "<"
        ? local.iter_1666.tape_ptr - local.code_1667[1] :
      local.code_1667[0] == ">"
        ? local.iter_1666.tape_ptr + local.code_1667[1]
        : local.iter_1666.tape_ptr)

    code_ptr = 2 + (
      local.code_1667[0] == "["
        ? local.iter_1666.tape[local.iter_1666.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1666.code_ptr)] : local.iter_1666.code_ptr :
      local.code_1667[0] == "]"
        ? local.iter_1666.tape[local.iter_1666.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1666.code_ptr)] : local.iter_1666.code_ptr
        : local.iter_1666.code_ptr)

    steps_taken = 1 + local.iter_1666.steps_taken
  }
}

locals {
  code_1668 = (try(local.iter_1667.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1667.code_ptr, local.iter_1667.code_ptr + 2)
    : [null])

  input_1668 = (local.code_1668[0] == ","
    ? substr(local.input_1667, local.code_1668[1], -1)
    : local.input_1667)

  iter_1668 = try(local.iter_1667.code_ptr >= length(var.code), true) ? local.iter_1667 : {
    output = (local.code_1668[0] == "."
      ? "${local.iter_1667.output}${join("", [for _ in range(local.code_1668[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1667.tape[local.iter_1667.tape_ptr]))])}"
      : local.iter_1667.output)
    
    tape = (
      local.code_1668[0] == "+"
        ? [for i, b in local.iter_1667.tape : (i == local.iter_1667.tape_ptr ? (b + local.code_1668[1]) % 256 : b)] :
      local.code_1668[0] == "-"
        ? [for i, b in local.iter_1667.tape : (i == local.iter_1667.tape_ptr ? (b - local.code_1668[1] + 256) % 256 : b)] :
      local.code_1668[0] == ","
        ? [for i, b in local.iter_1667.tape : (i == local.iter_1667.tape_ptr ? local.ascii_lookup[substr(local.input_1668, 0, 1)] : b)]
        : local.iter_1667.tape)

    tape_ptr = (
      local.code_1668[0] == "<"
        ? local.iter_1667.tape_ptr - local.code_1668[1] :
      local.code_1668[0] == ">"
        ? local.iter_1667.tape_ptr + local.code_1668[1]
        : local.iter_1667.tape_ptr)

    code_ptr = 2 + (
      local.code_1668[0] == "["
        ? local.iter_1667.tape[local.iter_1667.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1667.code_ptr)] : local.iter_1667.code_ptr :
      local.code_1668[0] == "]"
        ? local.iter_1667.tape[local.iter_1667.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1667.code_ptr)] : local.iter_1667.code_ptr
        : local.iter_1667.code_ptr)

    steps_taken = 1 + local.iter_1667.steps_taken
  }
}

locals {
  code_1669 = (try(local.iter_1668.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1668.code_ptr, local.iter_1668.code_ptr + 2)
    : [null])

  input_1669 = (local.code_1669[0] == ","
    ? substr(local.input_1668, local.code_1669[1], -1)
    : local.input_1668)

  iter_1669 = try(local.iter_1668.code_ptr >= length(var.code), true) ? local.iter_1668 : {
    output = (local.code_1669[0] == "."
      ? "${local.iter_1668.output}${join("", [for _ in range(local.code_1669[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1668.tape[local.iter_1668.tape_ptr]))])}"
      : local.iter_1668.output)
    
    tape = (
      local.code_1669[0] == "+"
        ? [for i, b in local.iter_1668.tape : (i == local.iter_1668.tape_ptr ? (b + local.code_1669[1]) % 256 : b)] :
      local.code_1669[0] == "-"
        ? [for i, b in local.iter_1668.tape : (i == local.iter_1668.tape_ptr ? (b - local.code_1669[1] + 256) % 256 : b)] :
      local.code_1669[0] == ","
        ? [for i, b in local.iter_1668.tape : (i == local.iter_1668.tape_ptr ? local.ascii_lookup[substr(local.input_1669, 0, 1)] : b)]
        : local.iter_1668.tape)

    tape_ptr = (
      local.code_1669[0] == "<"
        ? local.iter_1668.tape_ptr - local.code_1669[1] :
      local.code_1669[0] == ">"
        ? local.iter_1668.tape_ptr + local.code_1669[1]
        : local.iter_1668.tape_ptr)

    code_ptr = 2 + (
      local.code_1669[0] == "["
        ? local.iter_1668.tape[local.iter_1668.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1668.code_ptr)] : local.iter_1668.code_ptr :
      local.code_1669[0] == "]"
        ? local.iter_1668.tape[local.iter_1668.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1668.code_ptr)] : local.iter_1668.code_ptr
        : local.iter_1668.code_ptr)

    steps_taken = 1 + local.iter_1668.steps_taken
  }
}

locals {
  code_1670 = (try(local.iter_1669.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1669.code_ptr, local.iter_1669.code_ptr + 2)
    : [null])

  input_1670 = (local.code_1670[0] == ","
    ? substr(local.input_1669, local.code_1670[1], -1)
    : local.input_1669)

  iter_1670 = try(local.iter_1669.code_ptr >= length(var.code), true) ? local.iter_1669 : {
    output = (local.code_1670[0] == "."
      ? "${local.iter_1669.output}${join("", [for _ in range(local.code_1670[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1669.tape[local.iter_1669.tape_ptr]))])}"
      : local.iter_1669.output)
    
    tape = (
      local.code_1670[0] == "+"
        ? [for i, b in local.iter_1669.tape : (i == local.iter_1669.tape_ptr ? (b + local.code_1670[1]) % 256 : b)] :
      local.code_1670[0] == "-"
        ? [for i, b in local.iter_1669.tape : (i == local.iter_1669.tape_ptr ? (b - local.code_1670[1] + 256) % 256 : b)] :
      local.code_1670[0] == ","
        ? [for i, b in local.iter_1669.tape : (i == local.iter_1669.tape_ptr ? local.ascii_lookup[substr(local.input_1670, 0, 1)] : b)]
        : local.iter_1669.tape)

    tape_ptr = (
      local.code_1670[0] == "<"
        ? local.iter_1669.tape_ptr - local.code_1670[1] :
      local.code_1670[0] == ">"
        ? local.iter_1669.tape_ptr + local.code_1670[1]
        : local.iter_1669.tape_ptr)

    code_ptr = 2 + (
      local.code_1670[0] == "["
        ? local.iter_1669.tape[local.iter_1669.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1669.code_ptr)] : local.iter_1669.code_ptr :
      local.code_1670[0] == "]"
        ? local.iter_1669.tape[local.iter_1669.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1669.code_ptr)] : local.iter_1669.code_ptr
        : local.iter_1669.code_ptr)

    steps_taken = 1 + local.iter_1669.steps_taken
  }
}

locals {
  code_1671 = (try(local.iter_1670.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1670.code_ptr, local.iter_1670.code_ptr + 2)
    : [null])

  input_1671 = (local.code_1671[0] == ","
    ? substr(local.input_1670, local.code_1671[1], -1)
    : local.input_1670)

  iter_1671 = try(local.iter_1670.code_ptr >= length(var.code), true) ? local.iter_1670 : {
    output = (local.code_1671[0] == "."
      ? "${local.iter_1670.output}${join("", [for _ in range(local.code_1671[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1670.tape[local.iter_1670.tape_ptr]))])}"
      : local.iter_1670.output)
    
    tape = (
      local.code_1671[0] == "+"
        ? [for i, b in local.iter_1670.tape : (i == local.iter_1670.tape_ptr ? (b + local.code_1671[1]) % 256 : b)] :
      local.code_1671[0] == "-"
        ? [for i, b in local.iter_1670.tape : (i == local.iter_1670.tape_ptr ? (b - local.code_1671[1] + 256) % 256 : b)] :
      local.code_1671[0] == ","
        ? [for i, b in local.iter_1670.tape : (i == local.iter_1670.tape_ptr ? local.ascii_lookup[substr(local.input_1671, 0, 1)] : b)]
        : local.iter_1670.tape)

    tape_ptr = (
      local.code_1671[0] == "<"
        ? local.iter_1670.tape_ptr - local.code_1671[1] :
      local.code_1671[0] == ">"
        ? local.iter_1670.tape_ptr + local.code_1671[1]
        : local.iter_1670.tape_ptr)

    code_ptr = 2 + (
      local.code_1671[0] == "["
        ? local.iter_1670.tape[local.iter_1670.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1670.code_ptr)] : local.iter_1670.code_ptr :
      local.code_1671[0] == "]"
        ? local.iter_1670.tape[local.iter_1670.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1670.code_ptr)] : local.iter_1670.code_ptr
        : local.iter_1670.code_ptr)

    steps_taken = 1 + local.iter_1670.steps_taken
  }
}

locals {
  code_1672 = (try(local.iter_1671.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1671.code_ptr, local.iter_1671.code_ptr + 2)
    : [null])

  input_1672 = (local.code_1672[0] == ","
    ? substr(local.input_1671, local.code_1672[1], -1)
    : local.input_1671)

  iter_1672 = try(local.iter_1671.code_ptr >= length(var.code), true) ? local.iter_1671 : {
    output = (local.code_1672[0] == "."
      ? "${local.iter_1671.output}${join("", [for _ in range(local.code_1672[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1671.tape[local.iter_1671.tape_ptr]))])}"
      : local.iter_1671.output)
    
    tape = (
      local.code_1672[0] == "+"
        ? [for i, b in local.iter_1671.tape : (i == local.iter_1671.tape_ptr ? (b + local.code_1672[1]) % 256 : b)] :
      local.code_1672[0] == "-"
        ? [for i, b in local.iter_1671.tape : (i == local.iter_1671.tape_ptr ? (b - local.code_1672[1] + 256) % 256 : b)] :
      local.code_1672[0] == ","
        ? [for i, b in local.iter_1671.tape : (i == local.iter_1671.tape_ptr ? local.ascii_lookup[substr(local.input_1672, 0, 1)] : b)]
        : local.iter_1671.tape)

    tape_ptr = (
      local.code_1672[0] == "<"
        ? local.iter_1671.tape_ptr - local.code_1672[1] :
      local.code_1672[0] == ">"
        ? local.iter_1671.tape_ptr + local.code_1672[1]
        : local.iter_1671.tape_ptr)

    code_ptr = 2 + (
      local.code_1672[0] == "["
        ? local.iter_1671.tape[local.iter_1671.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1671.code_ptr)] : local.iter_1671.code_ptr :
      local.code_1672[0] == "]"
        ? local.iter_1671.tape[local.iter_1671.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1671.code_ptr)] : local.iter_1671.code_ptr
        : local.iter_1671.code_ptr)

    steps_taken = 1 + local.iter_1671.steps_taken
  }
}

locals {
  code_1673 = (try(local.iter_1672.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1672.code_ptr, local.iter_1672.code_ptr + 2)
    : [null])

  input_1673 = (local.code_1673[0] == ","
    ? substr(local.input_1672, local.code_1673[1], -1)
    : local.input_1672)

  iter_1673 = try(local.iter_1672.code_ptr >= length(var.code), true) ? local.iter_1672 : {
    output = (local.code_1673[0] == "."
      ? "${local.iter_1672.output}${join("", [for _ in range(local.code_1673[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1672.tape[local.iter_1672.tape_ptr]))])}"
      : local.iter_1672.output)
    
    tape = (
      local.code_1673[0] == "+"
        ? [for i, b in local.iter_1672.tape : (i == local.iter_1672.tape_ptr ? (b + local.code_1673[1]) % 256 : b)] :
      local.code_1673[0] == "-"
        ? [for i, b in local.iter_1672.tape : (i == local.iter_1672.tape_ptr ? (b - local.code_1673[1] + 256) % 256 : b)] :
      local.code_1673[0] == ","
        ? [for i, b in local.iter_1672.tape : (i == local.iter_1672.tape_ptr ? local.ascii_lookup[substr(local.input_1673, 0, 1)] : b)]
        : local.iter_1672.tape)

    tape_ptr = (
      local.code_1673[0] == "<"
        ? local.iter_1672.tape_ptr - local.code_1673[1] :
      local.code_1673[0] == ">"
        ? local.iter_1672.tape_ptr + local.code_1673[1]
        : local.iter_1672.tape_ptr)

    code_ptr = 2 + (
      local.code_1673[0] == "["
        ? local.iter_1672.tape[local.iter_1672.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1672.code_ptr)] : local.iter_1672.code_ptr :
      local.code_1673[0] == "]"
        ? local.iter_1672.tape[local.iter_1672.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1672.code_ptr)] : local.iter_1672.code_ptr
        : local.iter_1672.code_ptr)

    steps_taken = 1 + local.iter_1672.steps_taken
  }
}

locals {
  code_1674 = (try(local.iter_1673.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1673.code_ptr, local.iter_1673.code_ptr + 2)
    : [null])

  input_1674 = (local.code_1674[0] == ","
    ? substr(local.input_1673, local.code_1674[1], -1)
    : local.input_1673)

  iter_1674 = try(local.iter_1673.code_ptr >= length(var.code), true) ? local.iter_1673 : {
    output = (local.code_1674[0] == "."
      ? "${local.iter_1673.output}${join("", [for _ in range(local.code_1674[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1673.tape[local.iter_1673.tape_ptr]))])}"
      : local.iter_1673.output)
    
    tape = (
      local.code_1674[0] == "+"
        ? [for i, b in local.iter_1673.tape : (i == local.iter_1673.tape_ptr ? (b + local.code_1674[1]) % 256 : b)] :
      local.code_1674[0] == "-"
        ? [for i, b in local.iter_1673.tape : (i == local.iter_1673.tape_ptr ? (b - local.code_1674[1] + 256) % 256 : b)] :
      local.code_1674[0] == ","
        ? [for i, b in local.iter_1673.tape : (i == local.iter_1673.tape_ptr ? local.ascii_lookup[substr(local.input_1674, 0, 1)] : b)]
        : local.iter_1673.tape)

    tape_ptr = (
      local.code_1674[0] == "<"
        ? local.iter_1673.tape_ptr - local.code_1674[1] :
      local.code_1674[0] == ">"
        ? local.iter_1673.tape_ptr + local.code_1674[1]
        : local.iter_1673.tape_ptr)

    code_ptr = 2 + (
      local.code_1674[0] == "["
        ? local.iter_1673.tape[local.iter_1673.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1673.code_ptr)] : local.iter_1673.code_ptr :
      local.code_1674[0] == "]"
        ? local.iter_1673.tape[local.iter_1673.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1673.code_ptr)] : local.iter_1673.code_ptr
        : local.iter_1673.code_ptr)

    steps_taken = 1 + local.iter_1673.steps_taken
  }
}

locals {
  code_1675 = (try(local.iter_1674.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1674.code_ptr, local.iter_1674.code_ptr + 2)
    : [null])

  input_1675 = (local.code_1675[0] == ","
    ? substr(local.input_1674, local.code_1675[1], -1)
    : local.input_1674)

  iter_1675 = try(local.iter_1674.code_ptr >= length(var.code), true) ? local.iter_1674 : {
    output = (local.code_1675[0] == "."
      ? "${local.iter_1674.output}${join("", [for _ in range(local.code_1675[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1674.tape[local.iter_1674.tape_ptr]))])}"
      : local.iter_1674.output)
    
    tape = (
      local.code_1675[0] == "+"
        ? [for i, b in local.iter_1674.tape : (i == local.iter_1674.tape_ptr ? (b + local.code_1675[1]) % 256 : b)] :
      local.code_1675[0] == "-"
        ? [for i, b in local.iter_1674.tape : (i == local.iter_1674.tape_ptr ? (b - local.code_1675[1] + 256) % 256 : b)] :
      local.code_1675[0] == ","
        ? [for i, b in local.iter_1674.tape : (i == local.iter_1674.tape_ptr ? local.ascii_lookup[substr(local.input_1675, 0, 1)] : b)]
        : local.iter_1674.tape)

    tape_ptr = (
      local.code_1675[0] == "<"
        ? local.iter_1674.tape_ptr - local.code_1675[1] :
      local.code_1675[0] == ">"
        ? local.iter_1674.tape_ptr + local.code_1675[1]
        : local.iter_1674.tape_ptr)

    code_ptr = 2 + (
      local.code_1675[0] == "["
        ? local.iter_1674.tape[local.iter_1674.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1674.code_ptr)] : local.iter_1674.code_ptr :
      local.code_1675[0] == "]"
        ? local.iter_1674.tape[local.iter_1674.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1674.code_ptr)] : local.iter_1674.code_ptr
        : local.iter_1674.code_ptr)

    steps_taken = 1 + local.iter_1674.steps_taken
  }
}

locals {
  code_1676 = (try(local.iter_1675.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1675.code_ptr, local.iter_1675.code_ptr + 2)
    : [null])

  input_1676 = (local.code_1676[0] == ","
    ? substr(local.input_1675, local.code_1676[1], -1)
    : local.input_1675)

  iter_1676 = try(local.iter_1675.code_ptr >= length(var.code), true) ? local.iter_1675 : {
    output = (local.code_1676[0] == "."
      ? "${local.iter_1675.output}${join("", [for _ in range(local.code_1676[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1675.tape[local.iter_1675.tape_ptr]))])}"
      : local.iter_1675.output)
    
    tape = (
      local.code_1676[0] == "+"
        ? [for i, b in local.iter_1675.tape : (i == local.iter_1675.tape_ptr ? (b + local.code_1676[1]) % 256 : b)] :
      local.code_1676[0] == "-"
        ? [for i, b in local.iter_1675.tape : (i == local.iter_1675.tape_ptr ? (b - local.code_1676[1] + 256) % 256 : b)] :
      local.code_1676[0] == ","
        ? [for i, b in local.iter_1675.tape : (i == local.iter_1675.tape_ptr ? local.ascii_lookup[substr(local.input_1676, 0, 1)] : b)]
        : local.iter_1675.tape)

    tape_ptr = (
      local.code_1676[0] == "<"
        ? local.iter_1675.tape_ptr - local.code_1676[1] :
      local.code_1676[0] == ">"
        ? local.iter_1675.tape_ptr + local.code_1676[1]
        : local.iter_1675.tape_ptr)

    code_ptr = 2 + (
      local.code_1676[0] == "["
        ? local.iter_1675.tape[local.iter_1675.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1675.code_ptr)] : local.iter_1675.code_ptr :
      local.code_1676[0] == "]"
        ? local.iter_1675.tape[local.iter_1675.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1675.code_ptr)] : local.iter_1675.code_ptr
        : local.iter_1675.code_ptr)

    steps_taken = 1 + local.iter_1675.steps_taken
  }
}

locals {
  code_1677 = (try(local.iter_1676.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1676.code_ptr, local.iter_1676.code_ptr + 2)
    : [null])

  input_1677 = (local.code_1677[0] == ","
    ? substr(local.input_1676, local.code_1677[1], -1)
    : local.input_1676)

  iter_1677 = try(local.iter_1676.code_ptr >= length(var.code), true) ? local.iter_1676 : {
    output = (local.code_1677[0] == "."
      ? "${local.iter_1676.output}${join("", [for _ in range(local.code_1677[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1676.tape[local.iter_1676.tape_ptr]))])}"
      : local.iter_1676.output)
    
    tape = (
      local.code_1677[0] == "+"
        ? [for i, b in local.iter_1676.tape : (i == local.iter_1676.tape_ptr ? (b + local.code_1677[1]) % 256 : b)] :
      local.code_1677[0] == "-"
        ? [for i, b in local.iter_1676.tape : (i == local.iter_1676.tape_ptr ? (b - local.code_1677[1] + 256) % 256 : b)] :
      local.code_1677[0] == ","
        ? [for i, b in local.iter_1676.tape : (i == local.iter_1676.tape_ptr ? local.ascii_lookup[substr(local.input_1677, 0, 1)] : b)]
        : local.iter_1676.tape)

    tape_ptr = (
      local.code_1677[0] == "<"
        ? local.iter_1676.tape_ptr - local.code_1677[1] :
      local.code_1677[0] == ">"
        ? local.iter_1676.tape_ptr + local.code_1677[1]
        : local.iter_1676.tape_ptr)

    code_ptr = 2 + (
      local.code_1677[0] == "["
        ? local.iter_1676.tape[local.iter_1676.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1676.code_ptr)] : local.iter_1676.code_ptr :
      local.code_1677[0] == "]"
        ? local.iter_1676.tape[local.iter_1676.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1676.code_ptr)] : local.iter_1676.code_ptr
        : local.iter_1676.code_ptr)

    steps_taken = 1 + local.iter_1676.steps_taken
  }
}

locals {
  code_1678 = (try(local.iter_1677.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1677.code_ptr, local.iter_1677.code_ptr + 2)
    : [null])

  input_1678 = (local.code_1678[0] == ","
    ? substr(local.input_1677, local.code_1678[1], -1)
    : local.input_1677)

  iter_1678 = try(local.iter_1677.code_ptr >= length(var.code), true) ? local.iter_1677 : {
    output = (local.code_1678[0] == "."
      ? "${local.iter_1677.output}${join("", [for _ in range(local.code_1678[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1677.tape[local.iter_1677.tape_ptr]))])}"
      : local.iter_1677.output)
    
    tape = (
      local.code_1678[0] == "+"
        ? [for i, b in local.iter_1677.tape : (i == local.iter_1677.tape_ptr ? (b + local.code_1678[1]) % 256 : b)] :
      local.code_1678[0] == "-"
        ? [for i, b in local.iter_1677.tape : (i == local.iter_1677.tape_ptr ? (b - local.code_1678[1] + 256) % 256 : b)] :
      local.code_1678[0] == ","
        ? [for i, b in local.iter_1677.tape : (i == local.iter_1677.tape_ptr ? local.ascii_lookup[substr(local.input_1678, 0, 1)] : b)]
        : local.iter_1677.tape)

    tape_ptr = (
      local.code_1678[0] == "<"
        ? local.iter_1677.tape_ptr - local.code_1678[1] :
      local.code_1678[0] == ">"
        ? local.iter_1677.tape_ptr + local.code_1678[1]
        : local.iter_1677.tape_ptr)

    code_ptr = 2 + (
      local.code_1678[0] == "["
        ? local.iter_1677.tape[local.iter_1677.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1677.code_ptr)] : local.iter_1677.code_ptr :
      local.code_1678[0] == "]"
        ? local.iter_1677.tape[local.iter_1677.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1677.code_ptr)] : local.iter_1677.code_ptr
        : local.iter_1677.code_ptr)

    steps_taken = 1 + local.iter_1677.steps_taken
  }
}

locals {
  code_1679 = (try(local.iter_1678.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1678.code_ptr, local.iter_1678.code_ptr + 2)
    : [null])

  input_1679 = (local.code_1679[0] == ","
    ? substr(local.input_1678, local.code_1679[1], -1)
    : local.input_1678)

  iter_1679 = try(local.iter_1678.code_ptr >= length(var.code), true) ? local.iter_1678 : {
    output = (local.code_1679[0] == "."
      ? "${local.iter_1678.output}${join("", [for _ in range(local.code_1679[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1678.tape[local.iter_1678.tape_ptr]))])}"
      : local.iter_1678.output)
    
    tape = (
      local.code_1679[0] == "+"
        ? [for i, b in local.iter_1678.tape : (i == local.iter_1678.tape_ptr ? (b + local.code_1679[1]) % 256 : b)] :
      local.code_1679[0] == "-"
        ? [for i, b in local.iter_1678.tape : (i == local.iter_1678.tape_ptr ? (b - local.code_1679[1] + 256) % 256 : b)] :
      local.code_1679[0] == ","
        ? [for i, b in local.iter_1678.tape : (i == local.iter_1678.tape_ptr ? local.ascii_lookup[substr(local.input_1679, 0, 1)] : b)]
        : local.iter_1678.tape)

    tape_ptr = (
      local.code_1679[0] == "<"
        ? local.iter_1678.tape_ptr - local.code_1679[1] :
      local.code_1679[0] == ">"
        ? local.iter_1678.tape_ptr + local.code_1679[1]
        : local.iter_1678.tape_ptr)

    code_ptr = 2 + (
      local.code_1679[0] == "["
        ? local.iter_1678.tape[local.iter_1678.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1678.code_ptr)] : local.iter_1678.code_ptr :
      local.code_1679[0] == "]"
        ? local.iter_1678.tape[local.iter_1678.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1678.code_ptr)] : local.iter_1678.code_ptr
        : local.iter_1678.code_ptr)

    steps_taken = 1 + local.iter_1678.steps_taken
  }
}

locals {
  code_1680 = (try(local.iter_1679.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1679.code_ptr, local.iter_1679.code_ptr + 2)
    : [null])

  input_1680 = (local.code_1680[0] == ","
    ? substr(local.input_1679, local.code_1680[1], -1)
    : local.input_1679)

  iter_1680 = try(local.iter_1679.code_ptr >= length(var.code), true) ? local.iter_1679 : {
    output = (local.code_1680[0] == "."
      ? "${local.iter_1679.output}${join("", [for _ in range(local.code_1680[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1679.tape[local.iter_1679.tape_ptr]))])}"
      : local.iter_1679.output)
    
    tape = (
      local.code_1680[0] == "+"
        ? [for i, b in local.iter_1679.tape : (i == local.iter_1679.tape_ptr ? (b + local.code_1680[1]) % 256 : b)] :
      local.code_1680[0] == "-"
        ? [for i, b in local.iter_1679.tape : (i == local.iter_1679.tape_ptr ? (b - local.code_1680[1] + 256) % 256 : b)] :
      local.code_1680[0] == ","
        ? [for i, b in local.iter_1679.tape : (i == local.iter_1679.tape_ptr ? local.ascii_lookup[substr(local.input_1680, 0, 1)] : b)]
        : local.iter_1679.tape)

    tape_ptr = (
      local.code_1680[0] == "<"
        ? local.iter_1679.tape_ptr - local.code_1680[1] :
      local.code_1680[0] == ">"
        ? local.iter_1679.tape_ptr + local.code_1680[1]
        : local.iter_1679.tape_ptr)

    code_ptr = 2 + (
      local.code_1680[0] == "["
        ? local.iter_1679.tape[local.iter_1679.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1679.code_ptr)] : local.iter_1679.code_ptr :
      local.code_1680[0] == "]"
        ? local.iter_1679.tape[local.iter_1679.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1679.code_ptr)] : local.iter_1679.code_ptr
        : local.iter_1679.code_ptr)

    steps_taken = 1 + local.iter_1679.steps_taken
  }
}

locals {
  code_1681 = (try(local.iter_1680.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1680.code_ptr, local.iter_1680.code_ptr + 2)
    : [null])

  input_1681 = (local.code_1681[0] == ","
    ? substr(local.input_1680, local.code_1681[1], -1)
    : local.input_1680)

  iter_1681 = try(local.iter_1680.code_ptr >= length(var.code), true) ? local.iter_1680 : {
    output = (local.code_1681[0] == "."
      ? "${local.iter_1680.output}${join("", [for _ in range(local.code_1681[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1680.tape[local.iter_1680.tape_ptr]))])}"
      : local.iter_1680.output)
    
    tape = (
      local.code_1681[0] == "+"
        ? [for i, b in local.iter_1680.tape : (i == local.iter_1680.tape_ptr ? (b + local.code_1681[1]) % 256 : b)] :
      local.code_1681[0] == "-"
        ? [for i, b in local.iter_1680.tape : (i == local.iter_1680.tape_ptr ? (b - local.code_1681[1] + 256) % 256 : b)] :
      local.code_1681[0] == ","
        ? [for i, b in local.iter_1680.tape : (i == local.iter_1680.tape_ptr ? local.ascii_lookup[substr(local.input_1681, 0, 1)] : b)]
        : local.iter_1680.tape)

    tape_ptr = (
      local.code_1681[0] == "<"
        ? local.iter_1680.tape_ptr - local.code_1681[1] :
      local.code_1681[0] == ">"
        ? local.iter_1680.tape_ptr + local.code_1681[1]
        : local.iter_1680.tape_ptr)

    code_ptr = 2 + (
      local.code_1681[0] == "["
        ? local.iter_1680.tape[local.iter_1680.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1680.code_ptr)] : local.iter_1680.code_ptr :
      local.code_1681[0] == "]"
        ? local.iter_1680.tape[local.iter_1680.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1680.code_ptr)] : local.iter_1680.code_ptr
        : local.iter_1680.code_ptr)

    steps_taken = 1 + local.iter_1680.steps_taken
  }
}

locals {
  code_1682 = (try(local.iter_1681.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1681.code_ptr, local.iter_1681.code_ptr + 2)
    : [null])

  input_1682 = (local.code_1682[0] == ","
    ? substr(local.input_1681, local.code_1682[1], -1)
    : local.input_1681)

  iter_1682 = try(local.iter_1681.code_ptr >= length(var.code), true) ? local.iter_1681 : {
    output = (local.code_1682[0] == "."
      ? "${local.iter_1681.output}${join("", [for _ in range(local.code_1682[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1681.tape[local.iter_1681.tape_ptr]))])}"
      : local.iter_1681.output)
    
    tape = (
      local.code_1682[0] == "+"
        ? [for i, b in local.iter_1681.tape : (i == local.iter_1681.tape_ptr ? (b + local.code_1682[1]) % 256 : b)] :
      local.code_1682[0] == "-"
        ? [for i, b in local.iter_1681.tape : (i == local.iter_1681.tape_ptr ? (b - local.code_1682[1] + 256) % 256 : b)] :
      local.code_1682[0] == ","
        ? [for i, b in local.iter_1681.tape : (i == local.iter_1681.tape_ptr ? local.ascii_lookup[substr(local.input_1682, 0, 1)] : b)]
        : local.iter_1681.tape)

    tape_ptr = (
      local.code_1682[0] == "<"
        ? local.iter_1681.tape_ptr - local.code_1682[1] :
      local.code_1682[0] == ">"
        ? local.iter_1681.tape_ptr + local.code_1682[1]
        : local.iter_1681.tape_ptr)

    code_ptr = 2 + (
      local.code_1682[0] == "["
        ? local.iter_1681.tape[local.iter_1681.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1681.code_ptr)] : local.iter_1681.code_ptr :
      local.code_1682[0] == "]"
        ? local.iter_1681.tape[local.iter_1681.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1681.code_ptr)] : local.iter_1681.code_ptr
        : local.iter_1681.code_ptr)

    steps_taken = 1 + local.iter_1681.steps_taken
  }
}

locals {
  code_1683 = (try(local.iter_1682.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1682.code_ptr, local.iter_1682.code_ptr + 2)
    : [null])

  input_1683 = (local.code_1683[0] == ","
    ? substr(local.input_1682, local.code_1683[1], -1)
    : local.input_1682)

  iter_1683 = try(local.iter_1682.code_ptr >= length(var.code), true) ? local.iter_1682 : {
    output = (local.code_1683[0] == "."
      ? "${local.iter_1682.output}${join("", [for _ in range(local.code_1683[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1682.tape[local.iter_1682.tape_ptr]))])}"
      : local.iter_1682.output)
    
    tape = (
      local.code_1683[0] == "+"
        ? [for i, b in local.iter_1682.tape : (i == local.iter_1682.tape_ptr ? (b + local.code_1683[1]) % 256 : b)] :
      local.code_1683[0] == "-"
        ? [for i, b in local.iter_1682.tape : (i == local.iter_1682.tape_ptr ? (b - local.code_1683[1] + 256) % 256 : b)] :
      local.code_1683[0] == ","
        ? [for i, b in local.iter_1682.tape : (i == local.iter_1682.tape_ptr ? local.ascii_lookup[substr(local.input_1683, 0, 1)] : b)]
        : local.iter_1682.tape)

    tape_ptr = (
      local.code_1683[0] == "<"
        ? local.iter_1682.tape_ptr - local.code_1683[1] :
      local.code_1683[0] == ">"
        ? local.iter_1682.tape_ptr + local.code_1683[1]
        : local.iter_1682.tape_ptr)

    code_ptr = 2 + (
      local.code_1683[0] == "["
        ? local.iter_1682.tape[local.iter_1682.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1682.code_ptr)] : local.iter_1682.code_ptr :
      local.code_1683[0] == "]"
        ? local.iter_1682.tape[local.iter_1682.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1682.code_ptr)] : local.iter_1682.code_ptr
        : local.iter_1682.code_ptr)

    steps_taken = 1 + local.iter_1682.steps_taken
  }
}

locals {
  code_1684 = (try(local.iter_1683.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1683.code_ptr, local.iter_1683.code_ptr + 2)
    : [null])

  input_1684 = (local.code_1684[0] == ","
    ? substr(local.input_1683, local.code_1684[1], -1)
    : local.input_1683)

  iter_1684 = try(local.iter_1683.code_ptr >= length(var.code), true) ? local.iter_1683 : {
    output = (local.code_1684[0] == "."
      ? "${local.iter_1683.output}${join("", [for _ in range(local.code_1684[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1683.tape[local.iter_1683.tape_ptr]))])}"
      : local.iter_1683.output)
    
    tape = (
      local.code_1684[0] == "+"
        ? [for i, b in local.iter_1683.tape : (i == local.iter_1683.tape_ptr ? (b + local.code_1684[1]) % 256 : b)] :
      local.code_1684[0] == "-"
        ? [for i, b in local.iter_1683.tape : (i == local.iter_1683.tape_ptr ? (b - local.code_1684[1] + 256) % 256 : b)] :
      local.code_1684[0] == ","
        ? [for i, b in local.iter_1683.tape : (i == local.iter_1683.tape_ptr ? local.ascii_lookup[substr(local.input_1684, 0, 1)] : b)]
        : local.iter_1683.tape)

    tape_ptr = (
      local.code_1684[0] == "<"
        ? local.iter_1683.tape_ptr - local.code_1684[1] :
      local.code_1684[0] == ">"
        ? local.iter_1683.tape_ptr + local.code_1684[1]
        : local.iter_1683.tape_ptr)

    code_ptr = 2 + (
      local.code_1684[0] == "["
        ? local.iter_1683.tape[local.iter_1683.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1683.code_ptr)] : local.iter_1683.code_ptr :
      local.code_1684[0] == "]"
        ? local.iter_1683.tape[local.iter_1683.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1683.code_ptr)] : local.iter_1683.code_ptr
        : local.iter_1683.code_ptr)

    steps_taken = 1 + local.iter_1683.steps_taken
  }
}

locals {
  code_1685 = (try(local.iter_1684.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1684.code_ptr, local.iter_1684.code_ptr + 2)
    : [null])

  input_1685 = (local.code_1685[0] == ","
    ? substr(local.input_1684, local.code_1685[1], -1)
    : local.input_1684)

  iter_1685 = try(local.iter_1684.code_ptr >= length(var.code), true) ? local.iter_1684 : {
    output = (local.code_1685[0] == "."
      ? "${local.iter_1684.output}${join("", [for _ in range(local.code_1685[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1684.tape[local.iter_1684.tape_ptr]))])}"
      : local.iter_1684.output)
    
    tape = (
      local.code_1685[0] == "+"
        ? [for i, b in local.iter_1684.tape : (i == local.iter_1684.tape_ptr ? (b + local.code_1685[1]) % 256 : b)] :
      local.code_1685[0] == "-"
        ? [for i, b in local.iter_1684.tape : (i == local.iter_1684.tape_ptr ? (b - local.code_1685[1] + 256) % 256 : b)] :
      local.code_1685[0] == ","
        ? [for i, b in local.iter_1684.tape : (i == local.iter_1684.tape_ptr ? local.ascii_lookup[substr(local.input_1685, 0, 1)] : b)]
        : local.iter_1684.tape)

    tape_ptr = (
      local.code_1685[0] == "<"
        ? local.iter_1684.tape_ptr - local.code_1685[1] :
      local.code_1685[0] == ">"
        ? local.iter_1684.tape_ptr + local.code_1685[1]
        : local.iter_1684.tape_ptr)

    code_ptr = 2 + (
      local.code_1685[0] == "["
        ? local.iter_1684.tape[local.iter_1684.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1684.code_ptr)] : local.iter_1684.code_ptr :
      local.code_1685[0] == "]"
        ? local.iter_1684.tape[local.iter_1684.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1684.code_ptr)] : local.iter_1684.code_ptr
        : local.iter_1684.code_ptr)

    steps_taken = 1 + local.iter_1684.steps_taken
  }
}

locals {
  code_1686 = (try(local.iter_1685.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1685.code_ptr, local.iter_1685.code_ptr + 2)
    : [null])

  input_1686 = (local.code_1686[0] == ","
    ? substr(local.input_1685, local.code_1686[1], -1)
    : local.input_1685)

  iter_1686 = try(local.iter_1685.code_ptr >= length(var.code), true) ? local.iter_1685 : {
    output = (local.code_1686[0] == "."
      ? "${local.iter_1685.output}${join("", [for _ in range(local.code_1686[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1685.tape[local.iter_1685.tape_ptr]))])}"
      : local.iter_1685.output)
    
    tape = (
      local.code_1686[0] == "+"
        ? [for i, b in local.iter_1685.tape : (i == local.iter_1685.tape_ptr ? (b + local.code_1686[1]) % 256 : b)] :
      local.code_1686[0] == "-"
        ? [for i, b in local.iter_1685.tape : (i == local.iter_1685.tape_ptr ? (b - local.code_1686[1] + 256) % 256 : b)] :
      local.code_1686[0] == ","
        ? [for i, b in local.iter_1685.tape : (i == local.iter_1685.tape_ptr ? local.ascii_lookup[substr(local.input_1686, 0, 1)] : b)]
        : local.iter_1685.tape)

    tape_ptr = (
      local.code_1686[0] == "<"
        ? local.iter_1685.tape_ptr - local.code_1686[1] :
      local.code_1686[0] == ">"
        ? local.iter_1685.tape_ptr + local.code_1686[1]
        : local.iter_1685.tape_ptr)

    code_ptr = 2 + (
      local.code_1686[0] == "["
        ? local.iter_1685.tape[local.iter_1685.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1685.code_ptr)] : local.iter_1685.code_ptr :
      local.code_1686[0] == "]"
        ? local.iter_1685.tape[local.iter_1685.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1685.code_ptr)] : local.iter_1685.code_ptr
        : local.iter_1685.code_ptr)

    steps_taken = 1 + local.iter_1685.steps_taken
  }
}

locals {
  code_1687 = (try(local.iter_1686.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1686.code_ptr, local.iter_1686.code_ptr + 2)
    : [null])

  input_1687 = (local.code_1687[0] == ","
    ? substr(local.input_1686, local.code_1687[1], -1)
    : local.input_1686)

  iter_1687 = try(local.iter_1686.code_ptr >= length(var.code), true) ? local.iter_1686 : {
    output = (local.code_1687[0] == "."
      ? "${local.iter_1686.output}${join("", [for _ in range(local.code_1687[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1686.tape[local.iter_1686.tape_ptr]))])}"
      : local.iter_1686.output)
    
    tape = (
      local.code_1687[0] == "+"
        ? [for i, b in local.iter_1686.tape : (i == local.iter_1686.tape_ptr ? (b + local.code_1687[1]) % 256 : b)] :
      local.code_1687[0] == "-"
        ? [for i, b in local.iter_1686.tape : (i == local.iter_1686.tape_ptr ? (b - local.code_1687[1] + 256) % 256 : b)] :
      local.code_1687[0] == ","
        ? [for i, b in local.iter_1686.tape : (i == local.iter_1686.tape_ptr ? local.ascii_lookup[substr(local.input_1687, 0, 1)] : b)]
        : local.iter_1686.tape)

    tape_ptr = (
      local.code_1687[0] == "<"
        ? local.iter_1686.tape_ptr - local.code_1687[1] :
      local.code_1687[0] == ">"
        ? local.iter_1686.tape_ptr + local.code_1687[1]
        : local.iter_1686.tape_ptr)

    code_ptr = 2 + (
      local.code_1687[0] == "["
        ? local.iter_1686.tape[local.iter_1686.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1686.code_ptr)] : local.iter_1686.code_ptr :
      local.code_1687[0] == "]"
        ? local.iter_1686.tape[local.iter_1686.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1686.code_ptr)] : local.iter_1686.code_ptr
        : local.iter_1686.code_ptr)

    steps_taken = 1 + local.iter_1686.steps_taken
  }
}

locals {
  code_1688 = (try(local.iter_1687.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1687.code_ptr, local.iter_1687.code_ptr + 2)
    : [null])

  input_1688 = (local.code_1688[0] == ","
    ? substr(local.input_1687, local.code_1688[1], -1)
    : local.input_1687)

  iter_1688 = try(local.iter_1687.code_ptr >= length(var.code), true) ? local.iter_1687 : {
    output = (local.code_1688[0] == "."
      ? "${local.iter_1687.output}${join("", [for _ in range(local.code_1688[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1687.tape[local.iter_1687.tape_ptr]))])}"
      : local.iter_1687.output)
    
    tape = (
      local.code_1688[0] == "+"
        ? [for i, b in local.iter_1687.tape : (i == local.iter_1687.tape_ptr ? (b + local.code_1688[1]) % 256 : b)] :
      local.code_1688[0] == "-"
        ? [for i, b in local.iter_1687.tape : (i == local.iter_1687.tape_ptr ? (b - local.code_1688[1] + 256) % 256 : b)] :
      local.code_1688[0] == ","
        ? [for i, b in local.iter_1687.tape : (i == local.iter_1687.tape_ptr ? local.ascii_lookup[substr(local.input_1688, 0, 1)] : b)]
        : local.iter_1687.tape)

    tape_ptr = (
      local.code_1688[0] == "<"
        ? local.iter_1687.tape_ptr - local.code_1688[1] :
      local.code_1688[0] == ">"
        ? local.iter_1687.tape_ptr + local.code_1688[1]
        : local.iter_1687.tape_ptr)

    code_ptr = 2 + (
      local.code_1688[0] == "["
        ? local.iter_1687.tape[local.iter_1687.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1687.code_ptr)] : local.iter_1687.code_ptr :
      local.code_1688[0] == "]"
        ? local.iter_1687.tape[local.iter_1687.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1687.code_ptr)] : local.iter_1687.code_ptr
        : local.iter_1687.code_ptr)

    steps_taken = 1 + local.iter_1687.steps_taken
  }
}

locals {
  code_1689 = (try(local.iter_1688.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1688.code_ptr, local.iter_1688.code_ptr + 2)
    : [null])

  input_1689 = (local.code_1689[0] == ","
    ? substr(local.input_1688, local.code_1689[1], -1)
    : local.input_1688)

  iter_1689 = try(local.iter_1688.code_ptr >= length(var.code), true) ? local.iter_1688 : {
    output = (local.code_1689[0] == "."
      ? "${local.iter_1688.output}${join("", [for _ in range(local.code_1689[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1688.tape[local.iter_1688.tape_ptr]))])}"
      : local.iter_1688.output)
    
    tape = (
      local.code_1689[0] == "+"
        ? [for i, b in local.iter_1688.tape : (i == local.iter_1688.tape_ptr ? (b + local.code_1689[1]) % 256 : b)] :
      local.code_1689[0] == "-"
        ? [for i, b in local.iter_1688.tape : (i == local.iter_1688.tape_ptr ? (b - local.code_1689[1] + 256) % 256 : b)] :
      local.code_1689[0] == ","
        ? [for i, b in local.iter_1688.tape : (i == local.iter_1688.tape_ptr ? local.ascii_lookup[substr(local.input_1689, 0, 1)] : b)]
        : local.iter_1688.tape)

    tape_ptr = (
      local.code_1689[0] == "<"
        ? local.iter_1688.tape_ptr - local.code_1689[1] :
      local.code_1689[0] == ">"
        ? local.iter_1688.tape_ptr + local.code_1689[1]
        : local.iter_1688.tape_ptr)

    code_ptr = 2 + (
      local.code_1689[0] == "["
        ? local.iter_1688.tape[local.iter_1688.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1688.code_ptr)] : local.iter_1688.code_ptr :
      local.code_1689[0] == "]"
        ? local.iter_1688.tape[local.iter_1688.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1688.code_ptr)] : local.iter_1688.code_ptr
        : local.iter_1688.code_ptr)

    steps_taken = 1 + local.iter_1688.steps_taken
  }
}

locals {
  code_1690 = (try(local.iter_1689.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1689.code_ptr, local.iter_1689.code_ptr + 2)
    : [null])

  input_1690 = (local.code_1690[0] == ","
    ? substr(local.input_1689, local.code_1690[1], -1)
    : local.input_1689)

  iter_1690 = try(local.iter_1689.code_ptr >= length(var.code), true) ? local.iter_1689 : {
    output = (local.code_1690[0] == "."
      ? "${local.iter_1689.output}${join("", [for _ in range(local.code_1690[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1689.tape[local.iter_1689.tape_ptr]))])}"
      : local.iter_1689.output)
    
    tape = (
      local.code_1690[0] == "+"
        ? [for i, b in local.iter_1689.tape : (i == local.iter_1689.tape_ptr ? (b + local.code_1690[1]) % 256 : b)] :
      local.code_1690[0] == "-"
        ? [for i, b in local.iter_1689.tape : (i == local.iter_1689.tape_ptr ? (b - local.code_1690[1] + 256) % 256 : b)] :
      local.code_1690[0] == ","
        ? [for i, b in local.iter_1689.tape : (i == local.iter_1689.tape_ptr ? local.ascii_lookup[substr(local.input_1690, 0, 1)] : b)]
        : local.iter_1689.tape)

    tape_ptr = (
      local.code_1690[0] == "<"
        ? local.iter_1689.tape_ptr - local.code_1690[1] :
      local.code_1690[0] == ">"
        ? local.iter_1689.tape_ptr + local.code_1690[1]
        : local.iter_1689.tape_ptr)

    code_ptr = 2 + (
      local.code_1690[0] == "["
        ? local.iter_1689.tape[local.iter_1689.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1689.code_ptr)] : local.iter_1689.code_ptr :
      local.code_1690[0] == "]"
        ? local.iter_1689.tape[local.iter_1689.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1689.code_ptr)] : local.iter_1689.code_ptr
        : local.iter_1689.code_ptr)

    steps_taken = 1 + local.iter_1689.steps_taken
  }
}

locals {
  code_1691 = (try(local.iter_1690.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1690.code_ptr, local.iter_1690.code_ptr + 2)
    : [null])

  input_1691 = (local.code_1691[0] == ","
    ? substr(local.input_1690, local.code_1691[1], -1)
    : local.input_1690)

  iter_1691 = try(local.iter_1690.code_ptr >= length(var.code), true) ? local.iter_1690 : {
    output = (local.code_1691[0] == "."
      ? "${local.iter_1690.output}${join("", [for _ in range(local.code_1691[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1690.tape[local.iter_1690.tape_ptr]))])}"
      : local.iter_1690.output)
    
    tape = (
      local.code_1691[0] == "+"
        ? [for i, b in local.iter_1690.tape : (i == local.iter_1690.tape_ptr ? (b + local.code_1691[1]) % 256 : b)] :
      local.code_1691[0] == "-"
        ? [for i, b in local.iter_1690.tape : (i == local.iter_1690.tape_ptr ? (b - local.code_1691[1] + 256) % 256 : b)] :
      local.code_1691[0] == ","
        ? [for i, b in local.iter_1690.tape : (i == local.iter_1690.tape_ptr ? local.ascii_lookup[substr(local.input_1691, 0, 1)] : b)]
        : local.iter_1690.tape)

    tape_ptr = (
      local.code_1691[0] == "<"
        ? local.iter_1690.tape_ptr - local.code_1691[1] :
      local.code_1691[0] == ">"
        ? local.iter_1690.tape_ptr + local.code_1691[1]
        : local.iter_1690.tape_ptr)

    code_ptr = 2 + (
      local.code_1691[0] == "["
        ? local.iter_1690.tape[local.iter_1690.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1690.code_ptr)] : local.iter_1690.code_ptr :
      local.code_1691[0] == "]"
        ? local.iter_1690.tape[local.iter_1690.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1690.code_ptr)] : local.iter_1690.code_ptr
        : local.iter_1690.code_ptr)

    steps_taken = 1 + local.iter_1690.steps_taken
  }
}

locals {
  code_1692 = (try(local.iter_1691.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1691.code_ptr, local.iter_1691.code_ptr + 2)
    : [null])

  input_1692 = (local.code_1692[0] == ","
    ? substr(local.input_1691, local.code_1692[1], -1)
    : local.input_1691)

  iter_1692 = try(local.iter_1691.code_ptr >= length(var.code), true) ? local.iter_1691 : {
    output = (local.code_1692[0] == "."
      ? "${local.iter_1691.output}${join("", [for _ in range(local.code_1692[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1691.tape[local.iter_1691.tape_ptr]))])}"
      : local.iter_1691.output)
    
    tape = (
      local.code_1692[0] == "+"
        ? [for i, b in local.iter_1691.tape : (i == local.iter_1691.tape_ptr ? (b + local.code_1692[1]) % 256 : b)] :
      local.code_1692[0] == "-"
        ? [for i, b in local.iter_1691.tape : (i == local.iter_1691.tape_ptr ? (b - local.code_1692[1] + 256) % 256 : b)] :
      local.code_1692[0] == ","
        ? [for i, b in local.iter_1691.tape : (i == local.iter_1691.tape_ptr ? local.ascii_lookup[substr(local.input_1692, 0, 1)] : b)]
        : local.iter_1691.tape)

    tape_ptr = (
      local.code_1692[0] == "<"
        ? local.iter_1691.tape_ptr - local.code_1692[1] :
      local.code_1692[0] == ">"
        ? local.iter_1691.tape_ptr + local.code_1692[1]
        : local.iter_1691.tape_ptr)

    code_ptr = 2 + (
      local.code_1692[0] == "["
        ? local.iter_1691.tape[local.iter_1691.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1691.code_ptr)] : local.iter_1691.code_ptr :
      local.code_1692[0] == "]"
        ? local.iter_1691.tape[local.iter_1691.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1691.code_ptr)] : local.iter_1691.code_ptr
        : local.iter_1691.code_ptr)

    steps_taken = 1 + local.iter_1691.steps_taken
  }
}

locals {
  code_1693 = (try(local.iter_1692.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1692.code_ptr, local.iter_1692.code_ptr + 2)
    : [null])

  input_1693 = (local.code_1693[0] == ","
    ? substr(local.input_1692, local.code_1693[1], -1)
    : local.input_1692)

  iter_1693 = try(local.iter_1692.code_ptr >= length(var.code), true) ? local.iter_1692 : {
    output = (local.code_1693[0] == "."
      ? "${local.iter_1692.output}${join("", [for _ in range(local.code_1693[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1692.tape[local.iter_1692.tape_ptr]))])}"
      : local.iter_1692.output)
    
    tape = (
      local.code_1693[0] == "+"
        ? [for i, b in local.iter_1692.tape : (i == local.iter_1692.tape_ptr ? (b + local.code_1693[1]) % 256 : b)] :
      local.code_1693[0] == "-"
        ? [for i, b in local.iter_1692.tape : (i == local.iter_1692.tape_ptr ? (b - local.code_1693[1] + 256) % 256 : b)] :
      local.code_1693[0] == ","
        ? [for i, b in local.iter_1692.tape : (i == local.iter_1692.tape_ptr ? local.ascii_lookup[substr(local.input_1693, 0, 1)] : b)]
        : local.iter_1692.tape)

    tape_ptr = (
      local.code_1693[0] == "<"
        ? local.iter_1692.tape_ptr - local.code_1693[1] :
      local.code_1693[0] == ">"
        ? local.iter_1692.tape_ptr + local.code_1693[1]
        : local.iter_1692.tape_ptr)

    code_ptr = 2 + (
      local.code_1693[0] == "["
        ? local.iter_1692.tape[local.iter_1692.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1692.code_ptr)] : local.iter_1692.code_ptr :
      local.code_1693[0] == "]"
        ? local.iter_1692.tape[local.iter_1692.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1692.code_ptr)] : local.iter_1692.code_ptr
        : local.iter_1692.code_ptr)

    steps_taken = 1 + local.iter_1692.steps_taken
  }
}

locals {
  code_1694 = (try(local.iter_1693.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1693.code_ptr, local.iter_1693.code_ptr + 2)
    : [null])

  input_1694 = (local.code_1694[0] == ","
    ? substr(local.input_1693, local.code_1694[1], -1)
    : local.input_1693)

  iter_1694 = try(local.iter_1693.code_ptr >= length(var.code), true) ? local.iter_1693 : {
    output = (local.code_1694[0] == "."
      ? "${local.iter_1693.output}${join("", [for _ in range(local.code_1694[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1693.tape[local.iter_1693.tape_ptr]))])}"
      : local.iter_1693.output)
    
    tape = (
      local.code_1694[0] == "+"
        ? [for i, b in local.iter_1693.tape : (i == local.iter_1693.tape_ptr ? (b + local.code_1694[1]) % 256 : b)] :
      local.code_1694[0] == "-"
        ? [for i, b in local.iter_1693.tape : (i == local.iter_1693.tape_ptr ? (b - local.code_1694[1] + 256) % 256 : b)] :
      local.code_1694[0] == ","
        ? [for i, b in local.iter_1693.tape : (i == local.iter_1693.tape_ptr ? local.ascii_lookup[substr(local.input_1694, 0, 1)] : b)]
        : local.iter_1693.tape)

    tape_ptr = (
      local.code_1694[0] == "<"
        ? local.iter_1693.tape_ptr - local.code_1694[1] :
      local.code_1694[0] == ">"
        ? local.iter_1693.tape_ptr + local.code_1694[1]
        : local.iter_1693.tape_ptr)

    code_ptr = 2 + (
      local.code_1694[0] == "["
        ? local.iter_1693.tape[local.iter_1693.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1693.code_ptr)] : local.iter_1693.code_ptr :
      local.code_1694[0] == "]"
        ? local.iter_1693.tape[local.iter_1693.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1693.code_ptr)] : local.iter_1693.code_ptr
        : local.iter_1693.code_ptr)

    steps_taken = 1 + local.iter_1693.steps_taken
  }
}

locals {
  code_1695 = (try(local.iter_1694.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1694.code_ptr, local.iter_1694.code_ptr + 2)
    : [null])

  input_1695 = (local.code_1695[0] == ","
    ? substr(local.input_1694, local.code_1695[1], -1)
    : local.input_1694)

  iter_1695 = try(local.iter_1694.code_ptr >= length(var.code), true) ? local.iter_1694 : {
    output = (local.code_1695[0] == "."
      ? "${local.iter_1694.output}${join("", [for _ in range(local.code_1695[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1694.tape[local.iter_1694.tape_ptr]))])}"
      : local.iter_1694.output)
    
    tape = (
      local.code_1695[0] == "+"
        ? [for i, b in local.iter_1694.tape : (i == local.iter_1694.tape_ptr ? (b + local.code_1695[1]) % 256 : b)] :
      local.code_1695[0] == "-"
        ? [for i, b in local.iter_1694.tape : (i == local.iter_1694.tape_ptr ? (b - local.code_1695[1] + 256) % 256 : b)] :
      local.code_1695[0] == ","
        ? [for i, b in local.iter_1694.tape : (i == local.iter_1694.tape_ptr ? local.ascii_lookup[substr(local.input_1695, 0, 1)] : b)]
        : local.iter_1694.tape)

    tape_ptr = (
      local.code_1695[0] == "<"
        ? local.iter_1694.tape_ptr - local.code_1695[1] :
      local.code_1695[0] == ">"
        ? local.iter_1694.tape_ptr + local.code_1695[1]
        : local.iter_1694.tape_ptr)

    code_ptr = 2 + (
      local.code_1695[0] == "["
        ? local.iter_1694.tape[local.iter_1694.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1694.code_ptr)] : local.iter_1694.code_ptr :
      local.code_1695[0] == "]"
        ? local.iter_1694.tape[local.iter_1694.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1694.code_ptr)] : local.iter_1694.code_ptr
        : local.iter_1694.code_ptr)

    steps_taken = 1 + local.iter_1694.steps_taken
  }
}

locals {
  code_1696 = (try(local.iter_1695.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1695.code_ptr, local.iter_1695.code_ptr + 2)
    : [null])

  input_1696 = (local.code_1696[0] == ","
    ? substr(local.input_1695, local.code_1696[1], -1)
    : local.input_1695)

  iter_1696 = try(local.iter_1695.code_ptr >= length(var.code), true) ? local.iter_1695 : {
    output = (local.code_1696[0] == "."
      ? "${local.iter_1695.output}${join("", [for _ in range(local.code_1696[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1695.tape[local.iter_1695.tape_ptr]))])}"
      : local.iter_1695.output)
    
    tape = (
      local.code_1696[0] == "+"
        ? [for i, b in local.iter_1695.tape : (i == local.iter_1695.tape_ptr ? (b + local.code_1696[1]) % 256 : b)] :
      local.code_1696[0] == "-"
        ? [for i, b in local.iter_1695.tape : (i == local.iter_1695.tape_ptr ? (b - local.code_1696[1] + 256) % 256 : b)] :
      local.code_1696[0] == ","
        ? [for i, b in local.iter_1695.tape : (i == local.iter_1695.tape_ptr ? local.ascii_lookup[substr(local.input_1696, 0, 1)] : b)]
        : local.iter_1695.tape)

    tape_ptr = (
      local.code_1696[0] == "<"
        ? local.iter_1695.tape_ptr - local.code_1696[1] :
      local.code_1696[0] == ">"
        ? local.iter_1695.tape_ptr + local.code_1696[1]
        : local.iter_1695.tape_ptr)

    code_ptr = 2 + (
      local.code_1696[0] == "["
        ? local.iter_1695.tape[local.iter_1695.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1695.code_ptr)] : local.iter_1695.code_ptr :
      local.code_1696[0] == "]"
        ? local.iter_1695.tape[local.iter_1695.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1695.code_ptr)] : local.iter_1695.code_ptr
        : local.iter_1695.code_ptr)

    steps_taken = 1 + local.iter_1695.steps_taken
  }
}

locals {
  code_1697 = (try(local.iter_1696.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1696.code_ptr, local.iter_1696.code_ptr + 2)
    : [null])

  input_1697 = (local.code_1697[0] == ","
    ? substr(local.input_1696, local.code_1697[1], -1)
    : local.input_1696)

  iter_1697 = try(local.iter_1696.code_ptr >= length(var.code), true) ? local.iter_1696 : {
    output = (local.code_1697[0] == "."
      ? "${local.iter_1696.output}${join("", [for _ in range(local.code_1697[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1696.tape[local.iter_1696.tape_ptr]))])}"
      : local.iter_1696.output)
    
    tape = (
      local.code_1697[0] == "+"
        ? [for i, b in local.iter_1696.tape : (i == local.iter_1696.tape_ptr ? (b + local.code_1697[1]) % 256 : b)] :
      local.code_1697[0] == "-"
        ? [for i, b in local.iter_1696.tape : (i == local.iter_1696.tape_ptr ? (b - local.code_1697[1] + 256) % 256 : b)] :
      local.code_1697[0] == ","
        ? [for i, b in local.iter_1696.tape : (i == local.iter_1696.tape_ptr ? local.ascii_lookup[substr(local.input_1697, 0, 1)] : b)]
        : local.iter_1696.tape)

    tape_ptr = (
      local.code_1697[0] == "<"
        ? local.iter_1696.tape_ptr - local.code_1697[1] :
      local.code_1697[0] == ">"
        ? local.iter_1696.tape_ptr + local.code_1697[1]
        : local.iter_1696.tape_ptr)

    code_ptr = 2 + (
      local.code_1697[0] == "["
        ? local.iter_1696.tape[local.iter_1696.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1696.code_ptr)] : local.iter_1696.code_ptr :
      local.code_1697[0] == "]"
        ? local.iter_1696.tape[local.iter_1696.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1696.code_ptr)] : local.iter_1696.code_ptr
        : local.iter_1696.code_ptr)

    steps_taken = 1 + local.iter_1696.steps_taken
  }
}

locals {
  code_1698 = (try(local.iter_1697.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1697.code_ptr, local.iter_1697.code_ptr + 2)
    : [null])

  input_1698 = (local.code_1698[0] == ","
    ? substr(local.input_1697, local.code_1698[1], -1)
    : local.input_1697)

  iter_1698 = try(local.iter_1697.code_ptr >= length(var.code), true) ? local.iter_1697 : {
    output = (local.code_1698[0] == "."
      ? "${local.iter_1697.output}${join("", [for _ in range(local.code_1698[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1697.tape[local.iter_1697.tape_ptr]))])}"
      : local.iter_1697.output)
    
    tape = (
      local.code_1698[0] == "+"
        ? [for i, b in local.iter_1697.tape : (i == local.iter_1697.tape_ptr ? (b + local.code_1698[1]) % 256 : b)] :
      local.code_1698[0] == "-"
        ? [for i, b in local.iter_1697.tape : (i == local.iter_1697.tape_ptr ? (b - local.code_1698[1] + 256) % 256 : b)] :
      local.code_1698[0] == ","
        ? [for i, b in local.iter_1697.tape : (i == local.iter_1697.tape_ptr ? local.ascii_lookup[substr(local.input_1698, 0, 1)] : b)]
        : local.iter_1697.tape)

    tape_ptr = (
      local.code_1698[0] == "<"
        ? local.iter_1697.tape_ptr - local.code_1698[1] :
      local.code_1698[0] == ">"
        ? local.iter_1697.tape_ptr + local.code_1698[1]
        : local.iter_1697.tape_ptr)

    code_ptr = 2 + (
      local.code_1698[0] == "["
        ? local.iter_1697.tape[local.iter_1697.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1697.code_ptr)] : local.iter_1697.code_ptr :
      local.code_1698[0] == "]"
        ? local.iter_1697.tape[local.iter_1697.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1697.code_ptr)] : local.iter_1697.code_ptr
        : local.iter_1697.code_ptr)

    steps_taken = 1 + local.iter_1697.steps_taken
  }
}

locals {
  code_1699 = (try(local.iter_1698.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1698.code_ptr, local.iter_1698.code_ptr + 2)
    : [null])

  input_1699 = (local.code_1699[0] == ","
    ? substr(local.input_1698, local.code_1699[1], -1)
    : local.input_1698)

  iter_1699 = try(local.iter_1698.code_ptr >= length(var.code), true) ? local.iter_1698 : {
    output = (local.code_1699[0] == "."
      ? "${local.iter_1698.output}${join("", [for _ in range(local.code_1699[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1698.tape[local.iter_1698.tape_ptr]))])}"
      : local.iter_1698.output)
    
    tape = (
      local.code_1699[0] == "+"
        ? [for i, b in local.iter_1698.tape : (i == local.iter_1698.tape_ptr ? (b + local.code_1699[1]) % 256 : b)] :
      local.code_1699[0] == "-"
        ? [for i, b in local.iter_1698.tape : (i == local.iter_1698.tape_ptr ? (b - local.code_1699[1] + 256) % 256 : b)] :
      local.code_1699[0] == ","
        ? [for i, b in local.iter_1698.tape : (i == local.iter_1698.tape_ptr ? local.ascii_lookup[substr(local.input_1699, 0, 1)] : b)]
        : local.iter_1698.tape)

    tape_ptr = (
      local.code_1699[0] == "<"
        ? local.iter_1698.tape_ptr - local.code_1699[1] :
      local.code_1699[0] == ">"
        ? local.iter_1698.tape_ptr + local.code_1699[1]
        : local.iter_1698.tape_ptr)

    code_ptr = 2 + (
      local.code_1699[0] == "["
        ? local.iter_1698.tape[local.iter_1698.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1698.code_ptr)] : local.iter_1698.code_ptr :
      local.code_1699[0] == "]"
        ? local.iter_1698.tape[local.iter_1698.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1698.code_ptr)] : local.iter_1698.code_ptr
        : local.iter_1698.code_ptr)

    steps_taken = 1 + local.iter_1698.steps_taken
  }
}

locals {
  code_1700 = (try(local.iter_1699.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1699.code_ptr, local.iter_1699.code_ptr + 2)
    : [null])

  input_1700 = (local.code_1700[0] == ","
    ? substr(local.input_1699, local.code_1700[1], -1)
    : local.input_1699)

  iter_1700 = try(local.iter_1699.code_ptr >= length(var.code), true) ? local.iter_1699 : {
    output = (local.code_1700[0] == "."
      ? "${local.iter_1699.output}${join("", [for _ in range(local.code_1700[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1699.tape[local.iter_1699.tape_ptr]))])}"
      : local.iter_1699.output)
    
    tape = (
      local.code_1700[0] == "+"
        ? [for i, b in local.iter_1699.tape : (i == local.iter_1699.tape_ptr ? (b + local.code_1700[1]) % 256 : b)] :
      local.code_1700[0] == "-"
        ? [for i, b in local.iter_1699.tape : (i == local.iter_1699.tape_ptr ? (b - local.code_1700[1] + 256) % 256 : b)] :
      local.code_1700[0] == ","
        ? [for i, b in local.iter_1699.tape : (i == local.iter_1699.tape_ptr ? local.ascii_lookup[substr(local.input_1700, 0, 1)] : b)]
        : local.iter_1699.tape)

    tape_ptr = (
      local.code_1700[0] == "<"
        ? local.iter_1699.tape_ptr - local.code_1700[1] :
      local.code_1700[0] == ">"
        ? local.iter_1699.tape_ptr + local.code_1700[1]
        : local.iter_1699.tape_ptr)

    code_ptr = 2 + (
      local.code_1700[0] == "["
        ? local.iter_1699.tape[local.iter_1699.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1699.code_ptr)] : local.iter_1699.code_ptr :
      local.code_1700[0] == "]"
        ? local.iter_1699.tape[local.iter_1699.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1699.code_ptr)] : local.iter_1699.code_ptr
        : local.iter_1699.code_ptr)

    steps_taken = 1 + local.iter_1699.steps_taken
  }
}

locals {
  code_1701 = (try(local.iter_1700.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1700.code_ptr, local.iter_1700.code_ptr + 2)
    : [null])

  input_1701 = (local.code_1701[0] == ","
    ? substr(local.input_1700, local.code_1701[1], -1)
    : local.input_1700)

  iter_1701 = try(local.iter_1700.code_ptr >= length(var.code), true) ? local.iter_1700 : {
    output = (local.code_1701[0] == "."
      ? "${local.iter_1700.output}${join("", [for _ in range(local.code_1701[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1700.tape[local.iter_1700.tape_ptr]))])}"
      : local.iter_1700.output)
    
    tape = (
      local.code_1701[0] == "+"
        ? [for i, b in local.iter_1700.tape : (i == local.iter_1700.tape_ptr ? (b + local.code_1701[1]) % 256 : b)] :
      local.code_1701[0] == "-"
        ? [for i, b in local.iter_1700.tape : (i == local.iter_1700.tape_ptr ? (b - local.code_1701[1] + 256) % 256 : b)] :
      local.code_1701[0] == ","
        ? [for i, b in local.iter_1700.tape : (i == local.iter_1700.tape_ptr ? local.ascii_lookup[substr(local.input_1701, 0, 1)] : b)]
        : local.iter_1700.tape)

    tape_ptr = (
      local.code_1701[0] == "<"
        ? local.iter_1700.tape_ptr - local.code_1701[1] :
      local.code_1701[0] == ">"
        ? local.iter_1700.tape_ptr + local.code_1701[1]
        : local.iter_1700.tape_ptr)

    code_ptr = 2 + (
      local.code_1701[0] == "["
        ? local.iter_1700.tape[local.iter_1700.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1700.code_ptr)] : local.iter_1700.code_ptr :
      local.code_1701[0] == "]"
        ? local.iter_1700.tape[local.iter_1700.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1700.code_ptr)] : local.iter_1700.code_ptr
        : local.iter_1700.code_ptr)

    steps_taken = 1 + local.iter_1700.steps_taken
  }
}

locals {
  code_1702 = (try(local.iter_1701.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1701.code_ptr, local.iter_1701.code_ptr + 2)
    : [null])

  input_1702 = (local.code_1702[0] == ","
    ? substr(local.input_1701, local.code_1702[1], -1)
    : local.input_1701)

  iter_1702 = try(local.iter_1701.code_ptr >= length(var.code), true) ? local.iter_1701 : {
    output = (local.code_1702[0] == "."
      ? "${local.iter_1701.output}${join("", [for _ in range(local.code_1702[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1701.tape[local.iter_1701.tape_ptr]))])}"
      : local.iter_1701.output)
    
    tape = (
      local.code_1702[0] == "+"
        ? [for i, b in local.iter_1701.tape : (i == local.iter_1701.tape_ptr ? (b + local.code_1702[1]) % 256 : b)] :
      local.code_1702[0] == "-"
        ? [for i, b in local.iter_1701.tape : (i == local.iter_1701.tape_ptr ? (b - local.code_1702[1] + 256) % 256 : b)] :
      local.code_1702[0] == ","
        ? [for i, b in local.iter_1701.tape : (i == local.iter_1701.tape_ptr ? local.ascii_lookup[substr(local.input_1702, 0, 1)] : b)]
        : local.iter_1701.tape)

    tape_ptr = (
      local.code_1702[0] == "<"
        ? local.iter_1701.tape_ptr - local.code_1702[1] :
      local.code_1702[0] == ">"
        ? local.iter_1701.tape_ptr + local.code_1702[1]
        : local.iter_1701.tape_ptr)

    code_ptr = 2 + (
      local.code_1702[0] == "["
        ? local.iter_1701.tape[local.iter_1701.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1701.code_ptr)] : local.iter_1701.code_ptr :
      local.code_1702[0] == "]"
        ? local.iter_1701.tape[local.iter_1701.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1701.code_ptr)] : local.iter_1701.code_ptr
        : local.iter_1701.code_ptr)

    steps_taken = 1 + local.iter_1701.steps_taken
  }
}

locals {
  code_1703 = (try(local.iter_1702.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1702.code_ptr, local.iter_1702.code_ptr + 2)
    : [null])

  input_1703 = (local.code_1703[0] == ","
    ? substr(local.input_1702, local.code_1703[1], -1)
    : local.input_1702)

  iter_1703 = try(local.iter_1702.code_ptr >= length(var.code), true) ? local.iter_1702 : {
    output = (local.code_1703[0] == "."
      ? "${local.iter_1702.output}${join("", [for _ in range(local.code_1703[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1702.tape[local.iter_1702.tape_ptr]))])}"
      : local.iter_1702.output)
    
    tape = (
      local.code_1703[0] == "+"
        ? [for i, b in local.iter_1702.tape : (i == local.iter_1702.tape_ptr ? (b + local.code_1703[1]) % 256 : b)] :
      local.code_1703[0] == "-"
        ? [for i, b in local.iter_1702.tape : (i == local.iter_1702.tape_ptr ? (b - local.code_1703[1] + 256) % 256 : b)] :
      local.code_1703[0] == ","
        ? [for i, b in local.iter_1702.tape : (i == local.iter_1702.tape_ptr ? local.ascii_lookup[substr(local.input_1703, 0, 1)] : b)]
        : local.iter_1702.tape)

    tape_ptr = (
      local.code_1703[0] == "<"
        ? local.iter_1702.tape_ptr - local.code_1703[1] :
      local.code_1703[0] == ">"
        ? local.iter_1702.tape_ptr + local.code_1703[1]
        : local.iter_1702.tape_ptr)

    code_ptr = 2 + (
      local.code_1703[0] == "["
        ? local.iter_1702.tape[local.iter_1702.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1702.code_ptr)] : local.iter_1702.code_ptr :
      local.code_1703[0] == "]"
        ? local.iter_1702.tape[local.iter_1702.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1702.code_ptr)] : local.iter_1702.code_ptr
        : local.iter_1702.code_ptr)

    steps_taken = 1 + local.iter_1702.steps_taken
  }
}

locals {
  code_1704 = (try(local.iter_1703.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1703.code_ptr, local.iter_1703.code_ptr + 2)
    : [null])

  input_1704 = (local.code_1704[0] == ","
    ? substr(local.input_1703, local.code_1704[1], -1)
    : local.input_1703)

  iter_1704 = try(local.iter_1703.code_ptr >= length(var.code), true) ? local.iter_1703 : {
    output = (local.code_1704[0] == "."
      ? "${local.iter_1703.output}${join("", [for _ in range(local.code_1704[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1703.tape[local.iter_1703.tape_ptr]))])}"
      : local.iter_1703.output)
    
    tape = (
      local.code_1704[0] == "+"
        ? [for i, b in local.iter_1703.tape : (i == local.iter_1703.tape_ptr ? (b + local.code_1704[1]) % 256 : b)] :
      local.code_1704[0] == "-"
        ? [for i, b in local.iter_1703.tape : (i == local.iter_1703.tape_ptr ? (b - local.code_1704[1] + 256) % 256 : b)] :
      local.code_1704[0] == ","
        ? [for i, b in local.iter_1703.tape : (i == local.iter_1703.tape_ptr ? local.ascii_lookup[substr(local.input_1704, 0, 1)] : b)]
        : local.iter_1703.tape)

    tape_ptr = (
      local.code_1704[0] == "<"
        ? local.iter_1703.tape_ptr - local.code_1704[1] :
      local.code_1704[0] == ">"
        ? local.iter_1703.tape_ptr + local.code_1704[1]
        : local.iter_1703.tape_ptr)

    code_ptr = 2 + (
      local.code_1704[0] == "["
        ? local.iter_1703.tape[local.iter_1703.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1703.code_ptr)] : local.iter_1703.code_ptr :
      local.code_1704[0] == "]"
        ? local.iter_1703.tape[local.iter_1703.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1703.code_ptr)] : local.iter_1703.code_ptr
        : local.iter_1703.code_ptr)

    steps_taken = 1 + local.iter_1703.steps_taken
  }
}

locals {
  code_1705 = (try(local.iter_1704.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1704.code_ptr, local.iter_1704.code_ptr + 2)
    : [null])

  input_1705 = (local.code_1705[0] == ","
    ? substr(local.input_1704, local.code_1705[1], -1)
    : local.input_1704)

  iter_1705 = try(local.iter_1704.code_ptr >= length(var.code), true) ? local.iter_1704 : {
    output = (local.code_1705[0] == "."
      ? "${local.iter_1704.output}${join("", [for _ in range(local.code_1705[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1704.tape[local.iter_1704.tape_ptr]))])}"
      : local.iter_1704.output)
    
    tape = (
      local.code_1705[0] == "+"
        ? [for i, b in local.iter_1704.tape : (i == local.iter_1704.tape_ptr ? (b + local.code_1705[1]) % 256 : b)] :
      local.code_1705[0] == "-"
        ? [for i, b in local.iter_1704.tape : (i == local.iter_1704.tape_ptr ? (b - local.code_1705[1] + 256) % 256 : b)] :
      local.code_1705[0] == ","
        ? [for i, b in local.iter_1704.tape : (i == local.iter_1704.tape_ptr ? local.ascii_lookup[substr(local.input_1705, 0, 1)] : b)]
        : local.iter_1704.tape)

    tape_ptr = (
      local.code_1705[0] == "<"
        ? local.iter_1704.tape_ptr - local.code_1705[1] :
      local.code_1705[0] == ">"
        ? local.iter_1704.tape_ptr + local.code_1705[1]
        : local.iter_1704.tape_ptr)

    code_ptr = 2 + (
      local.code_1705[0] == "["
        ? local.iter_1704.tape[local.iter_1704.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1704.code_ptr)] : local.iter_1704.code_ptr :
      local.code_1705[0] == "]"
        ? local.iter_1704.tape[local.iter_1704.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1704.code_ptr)] : local.iter_1704.code_ptr
        : local.iter_1704.code_ptr)

    steps_taken = 1 + local.iter_1704.steps_taken
  }
}

locals {
  code_1706 = (try(local.iter_1705.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1705.code_ptr, local.iter_1705.code_ptr + 2)
    : [null])

  input_1706 = (local.code_1706[0] == ","
    ? substr(local.input_1705, local.code_1706[1], -1)
    : local.input_1705)

  iter_1706 = try(local.iter_1705.code_ptr >= length(var.code), true) ? local.iter_1705 : {
    output = (local.code_1706[0] == "."
      ? "${local.iter_1705.output}${join("", [for _ in range(local.code_1706[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1705.tape[local.iter_1705.tape_ptr]))])}"
      : local.iter_1705.output)
    
    tape = (
      local.code_1706[0] == "+"
        ? [for i, b in local.iter_1705.tape : (i == local.iter_1705.tape_ptr ? (b + local.code_1706[1]) % 256 : b)] :
      local.code_1706[0] == "-"
        ? [for i, b in local.iter_1705.tape : (i == local.iter_1705.tape_ptr ? (b - local.code_1706[1] + 256) % 256 : b)] :
      local.code_1706[0] == ","
        ? [for i, b in local.iter_1705.tape : (i == local.iter_1705.tape_ptr ? local.ascii_lookup[substr(local.input_1706, 0, 1)] : b)]
        : local.iter_1705.tape)

    tape_ptr = (
      local.code_1706[0] == "<"
        ? local.iter_1705.tape_ptr - local.code_1706[1] :
      local.code_1706[0] == ">"
        ? local.iter_1705.tape_ptr + local.code_1706[1]
        : local.iter_1705.tape_ptr)

    code_ptr = 2 + (
      local.code_1706[0] == "["
        ? local.iter_1705.tape[local.iter_1705.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1705.code_ptr)] : local.iter_1705.code_ptr :
      local.code_1706[0] == "]"
        ? local.iter_1705.tape[local.iter_1705.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1705.code_ptr)] : local.iter_1705.code_ptr
        : local.iter_1705.code_ptr)

    steps_taken = 1 + local.iter_1705.steps_taken
  }
}

locals {
  code_1707 = (try(local.iter_1706.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1706.code_ptr, local.iter_1706.code_ptr + 2)
    : [null])

  input_1707 = (local.code_1707[0] == ","
    ? substr(local.input_1706, local.code_1707[1], -1)
    : local.input_1706)

  iter_1707 = try(local.iter_1706.code_ptr >= length(var.code), true) ? local.iter_1706 : {
    output = (local.code_1707[0] == "."
      ? "${local.iter_1706.output}${join("", [for _ in range(local.code_1707[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1706.tape[local.iter_1706.tape_ptr]))])}"
      : local.iter_1706.output)
    
    tape = (
      local.code_1707[0] == "+"
        ? [for i, b in local.iter_1706.tape : (i == local.iter_1706.tape_ptr ? (b + local.code_1707[1]) % 256 : b)] :
      local.code_1707[0] == "-"
        ? [for i, b in local.iter_1706.tape : (i == local.iter_1706.tape_ptr ? (b - local.code_1707[1] + 256) % 256 : b)] :
      local.code_1707[0] == ","
        ? [for i, b in local.iter_1706.tape : (i == local.iter_1706.tape_ptr ? local.ascii_lookup[substr(local.input_1707, 0, 1)] : b)]
        : local.iter_1706.tape)

    tape_ptr = (
      local.code_1707[0] == "<"
        ? local.iter_1706.tape_ptr - local.code_1707[1] :
      local.code_1707[0] == ">"
        ? local.iter_1706.tape_ptr + local.code_1707[1]
        : local.iter_1706.tape_ptr)

    code_ptr = 2 + (
      local.code_1707[0] == "["
        ? local.iter_1706.tape[local.iter_1706.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1706.code_ptr)] : local.iter_1706.code_ptr :
      local.code_1707[0] == "]"
        ? local.iter_1706.tape[local.iter_1706.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1706.code_ptr)] : local.iter_1706.code_ptr
        : local.iter_1706.code_ptr)

    steps_taken = 1 + local.iter_1706.steps_taken
  }
}

locals {
  code_1708 = (try(local.iter_1707.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1707.code_ptr, local.iter_1707.code_ptr + 2)
    : [null])

  input_1708 = (local.code_1708[0] == ","
    ? substr(local.input_1707, local.code_1708[1], -1)
    : local.input_1707)

  iter_1708 = try(local.iter_1707.code_ptr >= length(var.code), true) ? local.iter_1707 : {
    output = (local.code_1708[0] == "."
      ? "${local.iter_1707.output}${join("", [for _ in range(local.code_1708[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1707.tape[local.iter_1707.tape_ptr]))])}"
      : local.iter_1707.output)
    
    tape = (
      local.code_1708[0] == "+"
        ? [for i, b in local.iter_1707.tape : (i == local.iter_1707.tape_ptr ? (b + local.code_1708[1]) % 256 : b)] :
      local.code_1708[0] == "-"
        ? [for i, b in local.iter_1707.tape : (i == local.iter_1707.tape_ptr ? (b - local.code_1708[1] + 256) % 256 : b)] :
      local.code_1708[0] == ","
        ? [for i, b in local.iter_1707.tape : (i == local.iter_1707.tape_ptr ? local.ascii_lookup[substr(local.input_1708, 0, 1)] : b)]
        : local.iter_1707.tape)

    tape_ptr = (
      local.code_1708[0] == "<"
        ? local.iter_1707.tape_ptr - local.code_1708[1] :
      local.code_1708[0] == ">"
        ? local.iter_1707.tape_ptr + local.code_1708[1]
        : local.iter_1707.tape_ptr)

    code_ptr = 2 + (
      local.code_1708[0] == "["
        ? local.iter_1707.tape[local.iter_1707.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1707.code_ptr)] : local.iter_1707.code_ptr :
      local.code_1708[0] == "]"
        ? local.iter_1707.tape[local.iter_1707.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1707.code_ptr)] : local.iter_1707.code_ptr
        : local.iter_1707.code_ptr)

    steps_taken = 1 + local.iter_1707.steps_taken
  }
}

locals {
  code_1709 = (try(local.iter_1708.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1708.code_ptr, local.iter_1708.code_ptr + 2)
    : [null])

  input_1709 = (local.code_1709[0] == ","
    ? substr(local.input_1708, local.code_1709[1], -1)
    : local.input_1708)

  iter_1709 = try(local.iter_1708.code_ptr >= length(var.code), true) ? local.iter_1708 : {
    output = (local.code_1709[0] == "."
      ? "${local.iter_1708.output}${join("", [for _ in range(local.code_1709[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1708.tape[local.iter_1708.tape_ptr]))])}"
      : local.iter_1708.output)
    
    tape = (
      local.code_1709[0] == "+"
        ? [for i, b in local.iter_1708.tape : (i == local.iter_1708.tape_ptr ? (b + local.code_1709[1]) % 256 : b)] :
      local.code_1709[0] == "-"
        ? [for i, b in local.iter_1708.tape : (i == local.iter_1708.tape_ptr ? (b - local.code_1709[1] + 256) % 256 : b)] :
      local.code_1709[0] == ","
        ? [for i, b in local.iter_1708.tape : (i == local.iter_1708.tape_ptr ? local.ascii_lookup[substr(local.input_1709, 0, 1)] : b)]
        : local.iter_1708.tape)

    tape_ptr = (
      local.code_1709[0] == "<"
        ? local.iter_1708.tape_ptr - local.code_1709[1] :
      local.code_1709[0] == ">"
        ? local.iter_1708.tape_ptr + local.code_1709[1]
        : local.iter_1708.tape_ptr)

    code_ptr = 2 + (
      local.code_1709[0] == "["
        ? local.iter_1708.tape[local.iter_1708.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1708.code_ptr)] : local.iter_1708.code_ptr :
      local.code_1709[0] == "]"
        ? local.iter_1708.tape[local.iter_1708.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1708.code_ptr)] : local.iter_1708.code_ptr
        : local.iter_1708.code_ptr)

    steps_taken = 1 + local.iter_1708.steps_taken
  }
}

locals {
  code_1710 = (try(local.iter_1709.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1709.code_ptr, local.iter_1709.code_ptr + 2)
    : [null])

  input_1710 = (local.code_1710[0] == ","
    ? substr(local.input_1709, local.code_1710[1], -1)
    : local.input_1709)

  iter_1710 = try(local.iter_1709.code_ptr >= length(var.code), true) ? local.iter_1709 : {
    output = (local.code_1710[0] == "."
      ? "${local.iter_1709.output}${join("", [for _ in range(local.code_1710[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1709.tape[local.iter_1709.tape_ptr]))])}"
      : local.iter_1709.output)
    
    tape = (
      local.code_1710[0] == "+"
        ? [for i, b in local.iter_1709.tape : (i == local.iter_1709.tape_ptr ? (b + local.code_1710[1]) % 256 : b)] :
      local.code_1710[0] == "-"
        ? [for i, b in local.iter_1709.tape : (i == local.iter_1709.tape_ptr ? (b - local.code_1710[1] + 256) % 256 : b)] :
      local.code_1710[0] == ","
        ? [for i, b in local.iter_1709.tape : (i == local.iter_1709.tape_ptr ? local.ascii_lookup[substr(local.input_1710, 0, 1)] : b)]
        : local.iter_1709.tape)

    tape_ptr = (
      local.code_1710[0] == "<"
        ? local.iter_1709.tape_ptr - local.code_1710[1] :
      local.code_1710[0] == ">"
        ? local.iter_1709.tape_ptr + local.code_1710[1]
        : local.iter_1709.tape_ptr)

    code_ptr = 2 + (
      local.code_1710[0] == "["
        ? local.iter_1709.tape[local.iter_1709.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1709.code_ptr)] : local.iter_1709.code_ptr :
      local.code_1710[0] == "]"
        ? local.iter_1709.tape[local.iter_1709.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1709.code_ptr)] : local.iter_1709.code_ptr
        : local.iter_1709.code_ptr)

    steps_taken = 1 + local.iter_1709.steps_taken
  }
}

locals {
  code_1711 = (try(local.iter_1710.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1710.code_ptr, local.iter_1710.code_ptr + 2)
    : [null])

  input_1711 = (local.code_1711[0] == ","
    ? substr(local.input_1710, local.code_1711[1], -1)
    : local.input_1710)

  iter_1711 = try(local.iter_1710.code_ptr >= length(var.code), true) ? local.iter_1710 : {
    output = (local.code_1711[0] == "."
      ? "${local.iter_1710.output}${join("", [for _ in range(local.code_1711[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1710.tape[local.iter_1710.tape_ptr]))])}"
      : local.iter_1710.output)
    
    tape = (
      local.code_1711[0] == "+"
        ? [for i, b in local.iter_1710.tape : (i == local.iter_1710.tape_ptr ? (b + local.code_1711[1]) % 256 : b)] :
      local.code_1711[0] == "-"
        ? [for i, b in local.iter_1710.tape : (i == local.iter_1710.tape_ptr ? (b - local.code_1711[1] + 256) % 256 : b)] :
      local.code_1711[0] == ","
        ? [for i, b in local.iter_1710.tape : (i == local.iter_1710.tape_ptr ? local.ascii_lookup[substr(local.input_1711, 0, 1)] : b)]
        : local.iter_1710.tape)

    tape_ptr = (
      local.code_1711[0] == "<"
        ? local.iter_1710.tape_ptr - local.code_1711[1] :
      local.code_1711[0] == ">"
        ? local.iter_1710.tape_ptr + local.code_1711[1]
        : local.iter_1710.tape_ptr)

    code_ptr = 2 + (
      local.code_1711[0] == "["
        ? local.iter_1710.tape[local.iter_1710.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1710.code_ptr)] : local.iter_1710.code_ptr :
      local.code_1711[0] == "]"
        ? local.iter_1710.tape[local.iter_1710.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1710.code_ptr)] : local.iter_1710.code_ptr
        : local.iter_1710.code_ptr)

    steps_taken = 1 + local.iter_1710.steps_taken
  }
}

locals {
  code_1712 = (try(local.iter_1711.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1711.code_ptr, local.iter_1711.code_ptr + 2)
    : [null])

  input_1712 = (local.code_1712[0] == ","
    ? substr(local.input_1711, local.code_1712[1], -1)
    : local.input_1711)

  iter_1712 = try(local.iter_1711.code_ptr >= length(var.code), true) ? local.iter_1711 : {
    output = (local.code_1712[0] == "."
      ? "${local.iter_1711.output}${join("", [for _ in range(local.code_1712[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1711.tape[local.iter_1711.tape_ptr]))])}"
      : local.iter_1711.output)
    
    tape = (
      local.code_1712[0] == "+"
        ? [for i, b in local.iter_1711.tape : (i == local.iter_1711.tape_ptr ? (b + local.code_1712[1]) % 256 : b)] :
      local.code_1712[0] == "-"
        ? [for i, b in local.iter_1711.tape : (i == local.iter_1711.tape_ptr ? (b - local.code_1712[1] + 256) % 256 : b)] :
      local.code_1712[0] == ","
        ? [for i, b in local.iter_1711.tape : (i == local.iter_1711.tape_ptr ? local.ascii_lookup[substr(local.input_1712, 0, 1)] : b)]
        : local.iter_1711.tape)

    tape_ptr = (
      local.code_1712[0] == "<"
        ? local.iter_1711.tape_ptr - local.code_1712[1] :
      local.code_1712[0] == ">"
        ? local.iter_1711.tape_ptr + local.code_1712[1]
        : local.iter_1711.tape_ptr)

    code_ptr = 2 + (
      local.code_1712[0] == "["
        ? local.iter_1711.tape[local.iter_1711.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1711.code_ptr)] : local.iter_1711.code_ptr :
      local.code_1712[0] == "]"
        ? local.iter_1711.tape[local.iter_1711.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1711.code_ptr)] : local.iter_1711.code_ptr
        : local.iter_1711.code_ptr)

    steps_taken = 1 + local.iter_1711.steps_taken
  }
}

locals {
  code_1713 = (try(local.iter_1712.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1712.code_ptr, local.iter_1712.code_ptr + 2)
    : [null])

  input_1713 = (local.code_1713[0] == ","
    ? substr(local.input_1712, local.code_1713[1], -1)
    : local.input_1712)

  iter_1713 = try(local.iter_1712.code_ptr >= length(var.code), true) ? local.iter_1712 : {
    output = (local.code_1713[0] == "."
      ? "${local.iter_1712.output}${join("", [for _ in range(local.code_1713[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1712.tape[local.iter_1712.tape_ptr]))])}"
      : local.iter_1712.output)
    
    tape = (
      local.code_1713[0] == "+"
        ? [for i, b in local.iter_1712.tape : (i == local.iter_1712.tape_ptr ? (b + local.code_1713[1]) % 256 : b)] :
      local.code_1713[0] == "-"
        ? [for i, b in local.iter_1712.tape : (i == local.iter_1712.tape_ptr ? (b - local.code_1713[1] + 256) % 256 : b)] :
      local.code_1713[0] == ","
        ? [for i, b in local.iter_1712.tape : (i == local.iter_1712.tape_ptr ? local.ascii_lookup[substr(local.input_1713, 0, 1)] : b)]
        : local.iter_1712.tape)

    tape_ptr = (
      local.code_1713[0] == "<"
        ? local.iter_1712.tape_ptr - local.code_1713[1] :
      local.code_1713[0] == ">"
        ? local.iter_1712.tape_ptr + local.code_1713[1]
        : local.iter_1712.tape_ptr)

    code_ptr = 2 + (
      local.code_1713[0] == "["
        ? local.iter_1712.tape[local.iter_1712.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1712.code_ptr)] : local.iter_1712.code_ptr :
      local.code_1713[0] == "]"
        ? local.iter_1712.tape[local.iter_1712.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1712.code_ptr)] : local.iter_1712.code_ptr
        : local.iter_1712.code_ptr)

    steps_taken = 1 + local.iter_1712.steps_taken
  }
}

locals {
  code_1714 = (try(local.iter_1713.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1713.code_ptr, local.iter_1713.code_ptr + 2)
    : [null])

  input_1714 = (local.code_1714[0] == ","
    ? substr(local.input_1713, local.code_1714[1], -1)
    : local.input_1713)

  iter_1714 = try(local.iter_1713.code_ptr >= length(var.code), true) ? local.iter_1713 : {
    output = (local.code_1714[0] == "."
      ? "${local.iter_1713.output}${join("", [for _ in range(local.code_1714[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1713.tape[local.iter_1713.tape_ptr]))])}"
      : local.iter_1713.output)
    
    tape = (
      local.code_1714[0] == "+"
        ? [for i, b in local.iter_1713.tape : (i == local.iter_1713.tape_ptr ? (b + local.code_1714[1]) % 256 : b)] :
      local.code_1714[0] == "-"
        ? [for i, b in local.iter_1713.tape : (i == local.iter_1713.tape_ptr ? (b - local.code_1714[1] + 256) % 256 : b)] :
      local.code_1714[0] == ","
        ? [for i, b in local.iter_1713.tape : (i == local.iter_1713.tape_ptr ? local.ascii_lookup[substr(local.input_1714, 0, 1)] : b)]
        : local.iter_1713.tape)

    tape_ptr = (
      local.code_1714[0] == "<"
        ? local.iter_1713.tape_ptr - local.code_1714[1] :
      local.code_1714[0] == ">"
        ? local.iter_1713.tape_ptr + local.code_1714[1]
        : local.iter_1713.tape_ptr)

    code_ptr = 2 + (
      local.code_1714[0] == "["
        ? local.iter_1713.tape[local.iter_1713.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1713.code_ptr)] : local.iter_1713.code_ptr :
      local.code_1714[0] == "]"
        ? local.iter_1713.tape[local.iter_1713.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1713.code_ptr)] : local.iter_1713.code_ptr
        : local.iter_1713.code_ptr)

    steps_taken = 1 + local.iter_1713.steps_taken
  }
}

locals {
  code_1715 = (try(local.iter_1714.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1714.code_ptr, local.iter_1714.code_ptr + 2)
    : [null])

  input_1715 = (local.code_1715[0] == ","
    ? substr(local.input_1714, local.code_1715[1], -1)
    : local.input_1714)

  iter_1715 = try(local.iter_1714.code_ptr >= length(var.code), true) ? local.iter_1714 : {
    output = (local.code_1715[0] == "."
      ? "${local.iter_1714.output}${join("", [for _ in range(local.code_1715[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1714.tape[local.iter_1714.tape_ptr]))])}"
      : local.iter_1714.output)
    
    tape = (
      local.code_1715[0] == "+"
        ? [for i, b in local.iter_1714.tape : (i == local.iter_1714.tape_ptr ? (b + local.code_1715[1]) % 256 : b)] :
      local.code_1715[0] == "-"
        ? [for i, b in local.iter_1714.tape : (i == local.iter_1714.tape_ptr ? (b - local.code_1715[1] + 256) % 256 : b)] :
      local.code_1715[0] == ","
        ? [for i, b in local.iter_1714.tape : (i == local.iter_1714.tape_ptr ? local.ascii_lookup[substr(local.input_1715, 0, 1)] : b)]
        : local.iter_1714.tape)

    tape_ptr = (
      local.code_1715[0] == "<"
        ? local.iter_1714.tape_ptr - local.code_1715[1] :
      local.code_1715[0] == ">"
        ? local.iter_1714.tape_ptr + local.code_1715[1]
        : local.iter_1714.tape_ptr)

    code_ptr = 2 + (
      local.code_1715[0] == "["
        ? local.iter_1714.tape[local.iter_1714.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1714.code_ptr)] : local.iter_1714.code_ptr :
      local.code_1715[0] == "]"
        ? local.iter_1714.tape[local.iter_1714.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1714.code_ptr)] : local.iter_1714.code_ptr
        : local.iter_1714.code_ptr)

    steps_taken = 1 + local.iter_1714.steps_taken
  }
}

locals {
  code_1716 = (try(local.iter_1715.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1715.code_ptr, local.iter_1715.code_ptr + 2)
    : [null])

  input_1716 = (local.code_1716[0] == ","
    ? substr(local.input_1715, local.code_1716[1], -1)
    : local.input_1715)

  iter_1716 = try(local.iter_1715.code_ptr >= length(var.code), true) ? local.iter_1715 : {
    output = (local.code_1716[0] == "."
      ? "${local.iter_1715.output}${join("", [for _ in range(local.code_1716[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1715.tape[local.iter_1715.tape_ptr]))])}"
      : local.iter_1715.output)
    
    tape = (
      local.code_1716[0] == "+"
        ? [for i, b in local.iter_1715.tape : (i == local.iter_1715.tape_ptr ? (b + local.code_1716[1]) % 256 : b)] :
      local.code_1716[0] == "-"
        ? [for i, b in local.iter_1715.tape : (i == local.iter_1715.tape_ptr ? (b - local.code_1716[1] + 256) % 256 : b)] :
      local.code_1716[0] == ","
        ? [for i, b in local.iter_1715.tape : (i == local.iter_1715.tape_ptr ? local.ascii_lookup[substr(local.input_1716, 0, 1)] : b)]
        : local.iter_1715.tape)

    tape_ptr = (
      local.code_1716[0] == "<"
        ? local.iter_1715.tape_ptr - local.code_1716[1] :
      local.code_1716[0] == ">"
        ? local.iter_1715.tape_ptr + local.code_1716[1]
        : local.iter_1715.tape_ptr)

    code_ptr = 2 + (
      local.code_1716[0] == "["
        ? local.iter_1715.tape[local.iter_1715.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1715.code_ptr)] : local.iter_1715.code_ptr :
      local.code_1716[0] == "]"
        ? local.iter_1715.tape[local.iter_1715.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1715.code_ptr)] : local.iter_1715.code_ptr
        : local.iter_1715.code_ptr)

    steps_taken = 1 + local.iter_1715.steps_taken
  }
}

locals {
  code_1717 = (try(local.iter_1716.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1716.code_ptr, local.iter_1716.code_ptr + 2)
    : [null])

  input_1717 = (local.code_1717[0] == ","
    ? substr(local.input_1716, local.code_1717[1], -1)
    : local.input_1716)

  iter_1717 = try(local.iter_1716.code_ptr >= length(var.code), true) ? local.iter_1716 : {
    output = (local.code_1717[0] == "."
      ? "${local.iter_1716.output}${join("", [for _ in range(local.code_1717[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1716.tape[local.iter_1716.tape_ptr]))])}"
      : local.iter_1716.output)
    
    tape = (
      local.code_1717[0] == "+"
        ? [for i, b in local.iter_1716.tape : (i == local.iter_1716.tape_ptr ? (b + local.code_1717[1]) % 256 : b)] :
      local.code_1717[0] == "-"
        ? [for i, b in local.iter_1716.tape : (i == local.iter_1716.tape_ptr ? (b - local.code_1717[1] + 256) % 256 : b)] :
      local.code_1717[0] == ","
        ? [for i, b in local.iter_1716.tape : (i == local.iter_1716.tape_ptr ? local.ascii_lookup[substr(local.input_1717, 0, 1)] : b)]
        : local.iter_1716.tape)

    tape_ptr = (
      local.code_1717[0] == "<"
        ? local.iter_1716.tape_ptr - local.code_1717[1] :
      local.code_1717[0] == ">"
        ? local.iter_1716.tape_ptr + local.code_1717[1]
        : local.iter_1716.tape_ptr)

    code_ptr = 2 + (
      local.code_1717[0] == "["
        ? local.iter_1716.tape[local.iter_1716.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1716.code_ptr)] : local.iter_1716.code_ptr :
      local.code_1717[0] == "]"
        ? local.iter_1716.tape[local.iter_1716.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1716.code_ptr)] : local.iter_1716.code_ptr
        : local.iter_1716.code_ptr)

    steps_taken = 1 + local.iter_1716.steps_taken
  }
}

locals {
  code_1718 = (try(local.iter_1717.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1717.code_ptr, local.iter_1717.code_ptr + 2)
    : [null])

  input_1718 = (local.code_1718[0] == ","
    ? substr(local.input_1717, local.code_1718[1], -1)
    : local.input_1717)

  iter_1718 = try(local.iter_1717.code_ptr >= length(var.code), true) ? local.iter_1717 : {
    output = (local.code_1718[0] == "."
      ? "${local.iter_1717.output}${join("", [for _ in range(local.code_1718[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1717.tape[local.iter_1717.tape_ptr]))])}"
      : local.iter_1717.output)
    
    tape = (
      local.code_1718[0] == "+"
        ? [for i, b in local.iter_1717.tape : (i == local.iter_1717.tape_ptr ? (b + local.code_1718[1]) % 256 : b)] :
      local.code_1718[0] == "-"
        ? [for i, b in local.iter_1717.tape : (i == local.iter_1717.tape_ptr ? (b - local.code_1718[1] + 256) % 256 : b)] :
      local.code_1718[0] == ","
        ? [for i, b in local.iter_1717.tape : (i == local.iter_1717.tape_ptr ? local.ascii_lookup[substr(local.input_1718, 0, 1)] : b)]
        : local.iter_1717.tape)

    tape_ptr = (
      local.code_1718[0] == "<"
        ? local.iter_1717.tape_ptr - local.code_1718[1] :
      local.code_1718[0] == ">"
        ? local.iter_1717.tape_ptr + local.code_1718[1]
        : local.iter_1717.tape_ptr)

    code_ptr = 2 + (
      local.code_1718[0] == "["
        ? local.iter_1717.tape[local.iter_1717.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1717.code_ptr)] : local.iter_1717.code_ptr :
      local.code_1718[0] == "]"
        ? local.iter_1717.tape[local.iter_1717.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1717.code_ptr)] : local.iter_1717.code_ptr
        : local.iter_1717.code_ptr)

    steps_taken = 1 + local.iter_1717.steps_taken
  }
}

locals {
  code_1719 = (try(local.iter_1718.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1718.code_ptr, local.iter_1718.code_ptr + 2)
    : [null])

  input_1719 = (local.code_1719[0] == ","
    ? substr(local.input_1718, local.code_1719[1], -1)
    : local.input_1718)

  iter_1719 = try(local.iter_1718.code_ptr >= length(var.code), true) ? local.iter_1718 : {
    output = (local.code_1719[0] == "."
      ? "${local.iter_1718.output}${join("", [for _ in range(local.code_1719[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1718.tape[local.iter_1718.tape_ptr]))])}"
      : local.iter_1718.output)
    
    tape = (
      local.code_1719[0] == "+"
        ? [for i, b in local.iter_1718.tape : (i == local.iter_1718.tape_ptr ? (b + local.code_1719[1]) % 256 : b)] :
      local.code_1719[0] == "-"
        ? [for i, b in local.iter_1718.tape : (i == local.iter_1718.tape_ptr ? (b - local.code_1719[1] + 256) % 256 : b)] :
      local.code_1719[0] == ","
        ? [for i, b in local.iter_1718.tape : (i == local.iter_1718.tape_ptr ? local.ascii_lookup[substr(local.input_1719, 0, 1)] : b)]
        : local.iter_1718.tape)

    tape_ptr = (
      local.code_1719[0] == "<"
        ? local.iter_1718.tape_ptr - local.code_1719[1] :
      local.code_1719[0] == ">"
        ? local.iter_1718.tape_ptr + local.code_1719[1]
        : local.iter_1718.tape_ptr)

    code_ptr = 2 + (
      local.code_1719[0] == "["
        ? local.iter_1718.tape[local.iter_1718.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1718.code_ptr)] : local.iter_1718.code_ptr :
      local.code_1719[0] == "]"
        ? local.iter_1718.tape[local.iter_1718.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1718.code_ptr)] : local.iter_1718.code_ptr
        : local.iter_1718.code_ptr)

    steps_taken = 1 + local.iter_1718.steps_taken
  }
}

locals {
  code_1720 = (try(local.iter_1719.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1719.code_ptr, local.iter_1719.code_ptr + 2)
    : [null])

  input_1720 = (local.code_1720[0] == ","
    ? substr(local.input_1719, local.code_1720[1], -1)
    : local.input_1719)

  iter_1720 = try(local.iter_1719.code_ptr >= length(var.code), true) ? local.iter_1719 : {
    output = (local.code_1720[0] == "."
      ? "${local.iter_1719.output}${join("", [for _ in range(local.code_1720[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1719.tape[local.iter_1719.tape_ptr]))])}"
      : local.iter_1719.output)
    
    tape = (
      local.code_1720[0] == "+"
        ? [for i, b in local.iter_1719.tape : (i == local.iter_1719.tape_ptr ? (b + local.code_1720[1]) % 256 : b)] :
      local.code_1720[0] == "-"
        ? [for i, b in local.iter_1719.tape : (i == local.iter_1719.tape_ptr ? (b - local.code_1720[1] + 256) % 256 : b)] :
      local.code_1720[0] == ","
        ? [for i, b in local.iter_1719.tape : (i == local.iter_1719.tape_ptr ? local.ascii_lookup[substr(local.input_1720, 0, 1)] : b)]
        : local.iter_1719.tape)

    tape_ptr = (
      local.code_1720[0] == "<"
        ? local.iter_1719.tape_ptr - local.code_1720[1] :
      local.code_1720[0] == ">"
        ? local.iter_1719.tape_ptr + local.code_1720[1]
        : local.iter_1719.tape_ptr)

    code_ptr = 2 + (
      local.code_1720[0] == "["
        ? local.iter_1719.tape[local.iter_1719.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1719.code_ptr)] : local.iter_1719.code_ptr :
      local.code_1720[0] == "]"
        ? local.iter_1719.tape[local.iter_1719.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1719.code_ptr)] : local.iter_1719.code_ptr
        : local.iter_1719.code_ptr)

    steps_taken = 1 + local.iter_1719.steps_taken
  }
}

locals {
  code_1721 = (try(local.iter_1720.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1720.code_ptr, local.iter_1720.code_ptr + 2)
    : [null])

  input_1721 = (local.code_1721[0] == ","
    ? substr(local.input_1720, local.code_1721[1], -1)
    : local.input_1720)

  iter_1721 = try(local.iter_1720.code_ptr >= length(var.code), true) ? local.iter_1720 : {
    output = (local.code_1721[0] == "."
      ? "${local.iter_1720.output}${join("", [for _ in range(local.code_1721[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1720.tape[local.iter_1720.tape_ptr]))])}"
      : local.iter_1720.output)
    
    tape = (
      local.code_1721[0] == "+"
        ? [for i, b in local.iter_1720.tape : (i == local.iter_1720.tape_ptr ? (b + local.code_1721[1]) % 256 : b)] :
      local.code_1721[0] == "-"
        ? [for i, b in local.iter_1720.tape : (i == local.iter_1720.tape_ptr ? (b - local.code_1721[1] + 256) % 256 : b)] :
      local.code_1721[0] == ","
        ? [for i, b in local.iter_1720.tape : (i == local.iter_1720.tape_ptr ? local.ascii_lookup[substr(local.input_1721, 0, 1)] : b)]
        : local.iter_1720.tape)

    tape_ptr = (
      local.code_1721[0] == "<"
        ? local.iter_1720.tape_ptr - local.code_1721[1] :
      local.code_1721[0] == ">"
        ? local.iter_1720.tape_ptr + local.code_1721[1]
        : local.iter_1720.tape_ptr)

    code_ptr = 2 + (
      local.code_1721[0] == "["
        ? local.iter_1720.tape[local.iter_1720.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1720.code_ptr)] : local.iter_1720.code_ptr :
      local.code_1721[0] == "]"
        ? local.iter_1720.tape[local.iter_1720.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1720.code_ptr)] : local.iter_1720.code_ptr
        : local.iter_1720.code_ptr)

    steps_taken = 1 + local.iter_1720.steps_taken
  }
}

locals {
  code_1722 = (try(local.iter_1721.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1721.code_ptr, local.iter_1721.code_ptr + 2)
    : [null])

  input_1722 = (local.code_1722[0] == ","
    ? substr(local.input_1721, local.code_1722[1], -1)
    : local.input_1721)

  iter_1722 = try(local.iter_1721.code_ptr >= length(var.code), true) ? local.iter_1721 : {
    output = (local.code_1722[0] == "."
      ? "${local.iter_1721.output}${join("", [for _ in range(local.code_1722[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1721.tape[local.iter_1721.tape_ptr]))])}"
      : local.iter_1721.output)
    
    tape = (
      local.code_1722[0] == "+"
        ? [for i, b in local.iter_1721.tape : (i == local.iter_1721.tape_ptr ? (b + local.code_1722[1]) % 256 : b)] :
      local.code_1722[0] == "-"
        ? [for i, b in local.iter_1721.tape : (i == local.iter_1721.tape_ptr ? (b - local.code_1722[1] + 256) % 256 : b)] :
      local.code_1722[0] == ","
        ? [for i, b in local.iter_1721.tape : (i == local.iter_1721.tape_ptr ? local.ascii_lookup[substr(local.input_1722, 0, 1)] : b)]
        : local.iter_1721.tape)

    tape_ptr = (
      local.code_1722[0] == "<"
        ? local.iter_1721.tape_ptr - local.code_1722[1] :
      local.code_1722[0] == ">"
        ? local.iter_1721.tape_ptr + local.code_1722[1]
        : local.iter_1721.tape_ptr)

    code_ptr = 2 + (
      local.code_1722[0] == "["
        ? local.iter_1721.tape[local.iter_1721.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1721.code_ptr)] : local.iter_1721.code_ptr :
      local.code_1722[0] == "]"
        ? local.iter_1721.tape[local.iter_1721.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1721.code_ptr)] : local.iter_1721.code_ptr
        : local.iter_1721.code_ptr)

    steps_taken = 1 + local.iter_1721.steps_taken
  }
}

locals {
  code_1723 = (try(local.iter_1722.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1722.code_ptr, local.iter_1722.code_ptr + 2)
    : [null])

  input_1723 = (local.code_1723[0] == ","
    ? substr(local.input_1722, local.code_1723[1], -1)
    : local.input_1722)

  iter_1723 = try(local.iter_1722.code_ptr >= length(var.code), true) ? local.iter_1722 : {
    output = (local.code_1723[0] == "."
      ? "${local.iter_1722.output}${join("", [for _ in range(local.code_1723[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1722.tape[local.iter_1722.tape_ptr]))])}"
      : local.iter_1722.output)
    
    tape = (
      local.code_1723[0] == "+"
        ? [for i, b in local.iter_1722.tape : (i == local.iter_1722.tape_ptr ? (b + local.code_1723[1]) % 256 : b)] :
      local.code_1723[0] == "-"
        ? [for i, b in local.iter_1722.tape : (i == local.iter_1722.tape_ptr ? (b - local.code_1723[1] + 256) % 256 : b)] :
      local.code_1723[0] == ","
        ? [for i, b in local.iter_1722.tape : (i == local.iter_1722.tape_ptr ? local.ascii_lookup[substr(local.input_1723, 0, 1)] : b)]
        : local.iter_1722.tape)

    tape_ptr = (
      local.code_1723[0] == "<"
        ? local.iter_1722.tape_ptr - local.code_1723[1] :
      local.code_1723[0] == ">"
        ? local.iter_1722.tape_ptr + local.code_1723[1]
        : local.iter_1722.tape_ptr)

    code_ptr = 2 + (
      local.code_1723[0] == "["
        ? local.iter_1722.tape[local.iter_1722.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1722.code_ptr)] : local.iter_1722.code_ptr :
      local.code_1723[0] == "]"
        ? local.iter_1722.tape[local.iter_1722.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1722.code_ptr)] : local.iter_1722.code_ptr
        : local.iter_1722.code_ptr)

    steps_taken = 1 + local.iter_1722.steps_taken
  }
}

locals {
  code_1724 = (try(local.iter_1723.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1723.code_ptr, local.iter_1723.code_ptr + 2)
    : [null])

  input_1724 = (local.code_1724[0] == ","
    ? substr(local.input_1723, local.code_1724[1], -1)
    : local.input_1723)

  iter_1724 = try(local.iter_1723.code_ptr >= length(var.code), true) ? local.iter_1723 : {
    output = (local.code_1724[0] == "."
      ? "${local.iter_1723.output}${join("", [for _ in range(local.code_1724[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1723.tape[local.iter_1723.tape_ptr]))])}"
      : local.iter_1723.output)
    
    tape = (
      local.code_1724[0] == "+"
        ? [for i, b in local.iter_1723.tape : (i == local.iter_1723.tape_ptr ? (b + local.code_1724[1]) % 256 : b)] :
      local.code_1724[0] == "-"
        ? [for i, b in local.iter_1723.tape : (i == local.iter_1723.tape_ptr ? (b - local.code_1724[1] + 256) % 256 : b)] :
      local.code_1724[0] == ","
        ? [for i, b in local.iter_1723.tape : (i == local.iter_1723.tape_ptr ? local.ascii_lookup[substr(local.input_1724, 0, 1)] : b)]
        : local.iter_1723.tape)

    tape_ptr = (
      local.code_1724[0] == "<"
        ? local.iter_1723.tape_ptr - local.code_1724[1] :
      local.code_1724[0] == ">"
        ? local.iter_1723.tape_ptr + local.code_1724[1]
        : local.iter_1723.tape_ptr)

    code_ptr = 2 + (
      local.code_1724[0] == "["
        ? local.iter_1723.tape[local.iter_1723.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1723.code_ptr)] : local.iter_1723.code_ptr :
      local.code_1724[0] == "]"
        ? local.iter_1723.tape[local.iter_1723.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1723.code_ptr)] : local.iter_1723.code_ptr
        : local.iter_1723.code_ptr)

    steps_taken = 1 + local.iter_1723.steps_taken
  }
}

locals {
  code_1725 = (try(local.iter_1724.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1724.code_ptr, local.iter_1724.code_ptr + 2)
    : [null])

  input_1725 = (local.code_1725[0] == ","
    ? substr(local.input_1724, local.code_1725[1], -1)
    : local.input_1724)

  iter_1725 = try(local.iter_1724.code_ptr >= length(var.code), true) ? local.iter_1724 : {
    output = (local.code_1725[0] == "."
      ? "${local.iter_1724.output}${join("", [for _ in range(local.code_1725[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1724.tape[local.iter_1724.tape_ptr]))])}"
      : local.iter_1724.output)
    
    tape = (
      local.code_1725[0] == "+"
        ? [for i, b in local.iter_1724.tape : (i == local.iter_1724.tape_ptr ? (b + local.code_1725[1]) % 256 : b)] :
      local.code_1725[0] == "-"
        ? [for i, b in local.iter_1724.tape : (i == local.iter_1724.tape_ptr ? (b - local.code_1725[1] + 256) % 256 : b)] :
      local.code_1725[0] == ","
        ? [for i, b in local.iter_1724.tape : (i == local.iter_1724.tape_ptr ? local.ascii_lookup[substr(local.input_1725, 0, 1)] : b)]
        : local.iter_1724.tape)

    tape_ptr = (
      local.code_1725[0] == "<"
        ? local.iter_1724.tape_ptr - local.code_1725[1] :
      local.code_1725[0] == ">"
        ? local.iter_1724.tape_ptr + local.code_1725[1]
        : local.iter_1724.tape_ptr)

    code_ptr = 2 + (
      local.code_1725[0] == "["
        ? local.iter_1724.tape[local.iter_1724.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1724.code_ptr)] : local.iter_1724.code_ptr :
      local.code_1725[0] == "]"
        ? local.iter_1724.tape[local.iter_1724.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1724.code_ptr)] : local.iter_1724.code_ptr
        : local.iter_1724.code_ptr)

    steps_taken = 1 + local.iter_1724.steps_taken
  }
}

locals {
  code_1726 = (try(local.iter_1725.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1725.code_ptr, local.iter_1725.code_ptr + 2)
    : [null])

  input_1726 = (local.code_1726[0] == ","
    ? substr(local.input_1725, local.code_1726[1], -1)
    : local.input_1725)

  iter_1726 = try(local.iter_1725.code_ptr >= length(var.code), true) ? local.iter_1725 : {
    output = (local.code_1726[0] == "."
      ? "${local.iter_1725.output}${join("", [for _ in range(local.code_1726[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1725.tape[local.iter_1725.tape_ptr]))])}"
      : local.iter_1725.output)
    
    tape = (
      local.code_1726[0] == "+"
        ? [for i, b in local.iter_1725.tape : (i == local.iter_1725.tape_ptr ? (b + local.code_1726[1]) % 256 : b)] :
      local.code_1726[0] == "-"
        ? [for i, b in local.iter_1725.tape : (i == local.iter_1725.tape_ptr ? (b - local.code_1726[1] + 256) % 256 : b)] :
      local.code_1726[0] == ","
        ? [for i, b in local.iter_1725.tape : (i == local.iter_1725.tape_ptr ? local.ascii_lookup[substr(local.input_1726, 0, 1)] : b)]
        : local.iter_1725.tape)

    tape_ptr = (
      local.code_1726[0] == "<"
        ? local.iter_1725.tape_ptr - local.code_1726[1] :
      local.code_1726[0] == ">"
        ? local.iter_1725.tape_ptr + local.code_1726[1]
        : local.iter_1725.tape_ptr)

    code_ptr = 2 + (
      local.code_1726[0] == "["
        ? local.iter_1725.tape[local.iter_1725.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1725.code_ptr)] : local.iter_1725.code_ptr :
      local.code_1726[0] == "]"
        ? local.iter_1725.tape[local.iter_1725.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1725.code_ptr)] : local.iter_1725.code_ptr
        : local.iter_1725.code_ptr)

    steps_taken = 1 + local.iter_1725.steps_taken
  }
}

locals {
  code_1727 = (try(local.iter_1726.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1726.code_ptr, local.iter_1726.code_ptr + 2)
    : [null])

  input_1727 = (local.code_1727[0] == ","
    ? substr(local.input_1726, local.code_1727[1], -1)
    : local.input_1726)

  iter_1727 = try(local.iter_1726.code_ptr >= length(var.code), true) ? local.iter_1726 : {
    output = (local.code_1727[0] == "."
      ? "${local.iter_1726.output}${join("", [for _ in range(local.code_1727[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1726.tape[local.iter_1726.tape_ptr]))])}"
      : local.iter_1726.output)
    
    tape = (
      local.code_1727[0] == "+"
        ? [for i, b in local.iter_1726.tape : (i == local.iter_1726.tape_ptr ? (b + local.code_1727[1]) % 256 : b)] :
      local.code_1727[0] == "-"
        ? [for i, b in local.iter_1726.tape : (i == local.iter_1726.tape_ptr ? (b - local.code_1727[1] + 256) % 256 : b)] :
      local.code_1727[0] == ","
        ? [for i, b in local.iter_1726.tape : (i == local.iter_1726.tape_ptr ? local.ascii_lookup[substr(local.input_1727, 0, 1)] : b)]
        : local.iter_1726.tape)

    tape_ptr = (
      local.code_1727[0] == "<"
        ? local.iter_1726.tape_ptr - local.code_1727[1] :
      local.code_1727[0] == ">"
        ? local.iter_1726.tape_ptr + local.code_1727[1]
        : local.iter_1726.tape_ptr)

    code_ptr = 2 + (
      local.code_1727[0] == "["
        ? local.iter_1726.tape[local.iter_1726.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1726.code_ptr)] : local.iter_1726.code_ptr :
      local.code_1727[0] == "]"
        ? local.iter_1726.tape[local.iter_1726.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1726.code_ptr)] : local.iter_1726.code_ptr
        : local.iter_1726.code_ptr)

    steps_taken = 1 + local.iter_1726.steps_taken
  }
}

locals {
  code_1728 = (try(local.iter_1727.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1727.code_ptr, local.iter_1727.code_ptr + 2)
    : [null])

  input_1728 = (local.code_1728[0] == ","
    ? substr(local.input_1727, local.code_1728[1], -1)
    : local.input_1727)

  iter_1728 = try(local.iter_1727.code_ptr >= length(var.code), true) ? local.iter_1727 : {
    output = (local.code_1728[0] == "."
      ? "${local.iter_1727.output}${join("", [for _ in range(local.code_1728[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1727.tape[local.iter_1727.tape_ptr]))])}"
      : local.iter_1727.output)
    
    tape = (
      local.code_1728[0] == "+"
        ? [for i, b in local.iter_1727.tape : (i == local.iter_1727.tape_ptr ? (b + local.code_1728[1]) % 256 : b)] :
      local.code_1728[0] == "-"
        ? [for i, b in local.iter_1727.tape : (i == local.iter_1727.tape_ptr ? (b - local.code_1728[1] + 256) % 256 : b)] :
      local.code_1728[0] == ","
        ? [for i, b in local.iter_1727.tape : (i == local.iter_1727.tape_ptr ? local.ascii_lookup[substr(local.input_1728, 0, 1)] : b)]
        : local.iter_1727.tape)

    tape_ptr = (
      local.code_1728[0] == "<"
        ? local.iter_1727.tape_ptr - local.code_1728[1] :
      local.code_1728[0] == ">"
        ? local.iter_1727.tape_ptr + local.code_1728[1]
        : local.iter_1727.tape_ptr)

    code_ptr = 2 + (
      local.code_1728[0] == "["
        ? local.iter_1727.tape[local.iter_1727.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1727.code_ptr)] : local.iter_1727.code_ptr :
      local.code_1728[0] == "]"
        ? local.iter_1727.tape[local.iter_1727.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1727.code_ptr)] : local.iter_1727.code_ptr
        : local.iter_1727.code_ptr)

    steps_taken = 1 + local.iter_1727.steps_taken
  }
}

locals {
  code_1729 = (try(local.iter_1728.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1728.code_ptr, local.iter_1728.code_ptr + 2)
    : [null])

  input_1729 = (local.code_1729[0] == ","
    ? substr(local.input_1728, local.code_1729[1], -1)
    : local.input_1728)

  iter_1729 = try(local.iter_1728.code_ptr >= length(var.code), true) ? local.iter_1728 : {
    output = (local.code_1729[0] == "."
      ? "${local.iter_1728.output}${join("", [for _ in range(local.code_1729[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1728.tape[local.iter_1728.tape_ptr]))])}"
      : local.iter_1728.output)
    
    tape = (
      local.code_1729[0] == "+"
        ? [for i, b in local.iter_1728.tape : (i == local.iter_1728.tape_ptr ? (b + local.code_1729[1]) % 256 : b)] :
      local.code_1729[0] == "-"
        ? [for i, b in local.iter_1728.tape : (i == local.iter_1728.tape_ptr ? (b - local.code_1729[1] + 256) % 256 : b)] :
      local.code_1729[0] == ","
        ? [for i, b in local.iter_1728.tape : (i == local.iter_1728.tape_ptr ? local.ascii_lookup[substr(local.input_1729, 0, 1)] : b)]
        : local.iter_1728.tape)

    tape_ptr = (
      local.code_1729[0] == "<"
        ? local.iter_1728.tape_ptr - local.code_1729[1] :
      local.code_1729[0] == ">"
        ? local.iter_1728.tape_ptr + local.code_1729[1]
        : local.iter_1728.tape_ptr)

    code_ptr = 2 + (
      local.code_1729[0] == "["
        ? local.iter_1728.tape[local.iter_1728.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1728.code_ptr)] : local.iter_1728.code_ptr :
      local.code_1729[0] == "]"
        ? local.iter_1728.tape[local.iter_1728.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1728.code_ptr)] : local.iter_1728.code_ptr
        : local.iter_1728.code_ptr)

    steps_taken = 1 + local.iter_1728.steps_taken
  }
}

locals {
  code_1730 = (try(local.iter_1729.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1729.code_ptr, local.iter_1729.code_ptr + 2)
    : [null])

  input_1730 = (local.code_1730[0] == ","
    ? substr(local.input_1729, local.code_1730[1], -1)
    : local.input_1729)

  iter_1730 = try(local.iter_1729.code_ptr >= length(var.code), true) ? local.iter_1729 : {
    output = (local.code_1730[0] == "."
      ? "${local.iter_1729.output}${join("", [for _ in range(local.code_1730[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1729.tape[local.iter_1729.tape_ptr]))])}"
      : local.iter_1729.output)
    
    tape = (
      local.code_1730[0] == "+"
        ? [for i, b in local.iter_1729.tape : (i == local.iter_1729.tape_ptr ? (b + local.code_1730[1]) % 256 : b)] :
      local.code_1730[0] == "-"
        ? [for i, b in local.iter_1729.tape : (i == local.iter_1729.tape_ptr ? (b - local.code_1730[1] + 256) % 256 : b)] :
      local.code_1730[0] == ","
        ? [for i, b in local.iter_1729.tape : (i == local.iter_1729.tape_ptr ? local.ascii_lookup[substr(local.input_1730, 0, 1)] : b)]
        : local.iter_1729.tape)

    tape_ptr = (
      local.code_1730[0] == "<"
        ? local.iter_1729.tape_ptr - local.code_1730[1] :
      local.code_1730[0] == ">"
        ? local.iter_1729.tape_ptr + local.code_1730[1]
        : local.iter_1729.tape_ptr)

    code_ptr = 2 + (
      local.code_1730[0] == "["
        ? local.iter_1729.tape[local.iter_1729.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1729.code_ptr)] : local.iter_1729.code_ptr :
      local.code_1730[0] == "]"
        ? local.iter_1729.tape[local.iter_1729.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1729.code_ptr)] : local.iter_1729.code_ptr
        : local.iter_1729.code_ptr)

    steps_taken = 1 + local.iter_1729.steps_taken
  }
}

locals {
  code_1731 = (try(local.iter_1730.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1730.code_ptr, local.iter_1730.code_ptr + 2)
    : [null])

  input_1731 = (local.code_1731[0] == ","
    ? substr(local.input_1730, local.code_1731[1], -1)
    : local.input_1730)

  iter_1731 = try(local.iter_1730.code_ptr >= length(var.code), true) ? local.iter_1730 : {
    output = (local.code_1731[0] == "."
      ? "${local.iter_1730.output}${join("", [for _ in range(local.code_1731[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1730.tape[local.iter_1730.tape_ptr]))])}"
      : local.iter_1730.output)
    
    tape = (
      local.code_1731[0] == "+"
        ? [for i, b in local.iter_1730.tape : (i == local.iter_1730.tape_ptr ? (b + local.code_1731[1]) % 256 : b)] :
      local.code_1731[0] == "-"
        ? [for i, b in local.iter_1730.tape : (i == local.iter_1730.tape_ptr ? (b - local.code_1731[1] + 256) % 256 : b)] :
      local.code_1731[0] == ","
        ? [for i, b in local.iter_1730.tape : (i == local.iter_1730.tape_ptr ? local.ascii_lookup[substr(local.input_1731, 0, 1)] : b)]
        : local.iter_1730.tape)

    tape_ptr = (
      local.code_1731[0] == "<"
        ? local.iter_1730.tape_ptr - local.code_1731[1] :
      local.code_1731[0] == ">"
        ? local.iter_1730.tape_ptr + local.code_1731[1]
        : local.iter_1730.tape_ptr)

    code_ptr = 2 + (
      local.code_1731[0] == "["
        ? local.iter_1730.tape[local.iter_1730.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1730.code_ptr)] : local.iter_1730.code_ptr :
      local.code_1731[0] == "]"
        ? local.iter_1730.tape[local.iter_1730.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1730.code_ptr)] : local.iter_1730.code_ptr
        : local.iter_1730.code_ptr)

    steps_taken = 1 + local.iter_1730.steps_taken
  }
}

locals {
  code_1732 = (try(local.iter_1731.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1731.code_ptr, local.iter_1731.code_ptr + 2)
    : [null])

  input_1732 = (local.code_1732[0] == ","
    ? substr(local.input_1731, local.code_1732[1], -1)
    : local.input_1731)

  iter_1732 = try(local.iter_1731.code_ptr >= length(var.code), true) ? local.iter_1731 : {
    output = (local.code_1732[0] == "."
      ? "${local.iter_1731.output}${join("", [for _ in range(local.code_1732[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1731.tape[local.iter_1731.tape_ptr]))])}"
      : local.iter_1731.output)
    
    tape = (
      local.code_1732[0] == "+"
        ? [for i, b in local.iter_1731.tape : (i == local.iter_1731.tape_ptr ? (b + local.code_1732[1]) % 256 : b)] :
      local.code_1732[0] == "-"
        ? [for i, b in local.iter_1731.tape : (i == local.iter_1731.tape_ptr ? (b - local.code_1732[1] + 256) % 256 : b)] :
      local.code_1732[0] == ","
        ? [for i, b in local.iter_1731.tape : (i == local.iter_1731.tape_ptr ? local.ascii_lookup[substr(local.input_1732, 0, 1)] : b)]
        : local.iter_1731.tape)

    tape_ptr = (
      local.code_1732[0] == "<"
        ? local.iter_1731.tape_ptr - local.code_1732[1] :
      local.code_1732[0] == ">"
        ? local.iter_1731.tape_ptr + local.code_1732[1]
        : local.iter_1731.tape_ptr)

    code_ptr = 2 + (
      local.code_1732[0] == "["
        ? local.iter_1731.tape[local.iter_1731.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1731.code_ptr)] : local.iter_1731.code_ptr :
      local.code_1732[0] == "]"
        ? local.iter_1731.tape[local.iter_1731.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1731.code_ptr)] : local.iter_1731.code_ptr
        : local.iter_1731.code_ptr)

    steps_taken = 1 + local.iter_1731.steps_taken
  }
}

locals {
  code_1733 = (try(local.iter_1732.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1732.code_ptr, local.iter_1732.code_ptr + 2)
    : [null])

  input_1733 = (local.code_1733[0] == ","
    ? substr(local.input_1732, local.code_1733[1], -1)
    : local.input_1732)

  iter_1733 = try(local.iter_1732.code_ptr >= length(var.code), true) ? local.iter_1732 : {
    output = (local.code_1733[0] == "."
      ? "${local.iter_1732.output}${join("", [for _ in range(local.code_1733[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1732.tape[local.iter_1732.tape_ptr]))])}"
      : local.iter_1732.output)
    
    tape = (
      local.code_1733[0] == "+"
        ? [for i, b in local.iter_1732.tape : (i == local.iter_1732.tape_ptr ? (b + local.code_1733[1]) % 256 : b)] :
      local.code_1733[0] == "-"
        ? [for i, b in local.iter_1732.tape : (i == local.iter_1732.tape_ptr ? (b - local.code_1733[1] + 256) % 256 : b)] :
      local.code_1733[0] == ","
        ? [for i, b in local.iter_1732.tape : (i == local.iter_1732.tape_ptr ? local.ascii_lookup[substr(local.input_1733, 0, 1)] : b)]
        : local.iter_1732.tape)

    tape_ptr = (
      local.code_1733[0] == "<"
        ? local.iter_1732.tape_ptr - local.code_1733[1] :
      local.code_1733[0] == ">"
        ? local.iter_1732.tape_ptr + local.code_1733[1]
        : local.iter_1732.tape_ptr)

    code_ptr = 2 + (
      local.code_1733[0] == "["
        ? local.iter_1732.tape[local.iter_1732.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1732.code_ptr)] : local.iter_1732.code_ptr :
      local.code_1733[0] == "]"
        ? local.iter_1732.tape[local.iter_1732.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1732.code_ptr)] : local.iter_1732.code_ptr
        : local.iter_1732.code_ptr)

    steps_taken = 1 + local.iter_1732.steps_taken
  }
}

locals {
  code_1734 = (try(local.iter_1733.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1733.code_ptr, local.iter_1733.code_ptr + 2)
    : [null])

  input_1734 = (local.code_1734[0] == ","
    ? substr(local.input_1733, local.code_1734[1], -1)
    : local.input_1733)

  iter_1734 = try(local.iter_1733.code_ptr >= length(var.code), true) ? local.iter_1733 : {
    output = (local.code_1734[0] == "."
      ? "${local.iter_1733.output}${join("", [for _ in range(local.code_1734[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1733.tape[local.iter_1733.tape_ptr]))])}"
      : local.iter_1733.output)
    
    tape = (
      local.code_1734[0] == "+"
        ? [for i, b in local.iter_1733.tape : (i == local.iter_1733.tape_ptr ? (b + local.code_1734[1]) % 256 : b)] :
      local.code_1734[0] == "-"
        ? [for i, b in local.iter_1733.tape : (i == local.iter_1733.tape_ptr ? (b - local.code_1734[1] + 256) % 256 : b)] :
      local.code_1734[0] == ","
        ? [for i, b in local.iter_1733.tape : (i == local.iter_1733.tape_ptr ? local.ascii_lookup[substr(local.input_1734, 0, 1)] : b)]
        : local.iter_1733.tape)

    tape_ptr = (
      local.code_1734[0] == "<"
        ? local.iter_1733.tape_ptr - local.code_1734[1] :
      local.code_1734[0] == ">"
        ? local.iter_1733.tape_ptr + local.code_1734[1]
        : local.iter_1733.tape_ptr)

    code_ptr = 2 + (
      local.code_1734[0] == "["
        ? local.iter_1733.tape[local.iter_1733.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1733.code_ptr)] : local.iter_1733.code_ptr :
      local.code_1734[0] == "]"
        ? local.iter_1733.tape[local.iter_1733.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1733.code_ptr)] : local.iter_1733.code_ptr
        : local.iter_1733.code_ptr)

    steps_taken = 1 + local.iter_1733.steps_taken
  }
}

locals {
  code_1735 = (try(local.iter_1734.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1734.code_ptr, local.iter_1734.code_ptr + 2)
    : [null])

  input_1735 = (local.code_1735[0] == ","
    ? substr(local.input_1734, local.code_1735[1], -1)
    : local.input_1734)

  iter_1735 = try(local.iter_1734.code_ptr >= length(var.code), true) ? local.iter_1734 : {
    output = (local.code_1735[0] == "."
      ? "${local.iter_1734.output}${join("", [for _ in range(local.code_1735[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1734.tape[local.iter_1734.tape_ptr]))])}"
      : local.iter_1734.output)
    
    tape = (
      local.code_1735[0] == "+"
        ? [for i, b in local.iter_1734.tape : (i == local.iter_1734.tape_ptr ? (b + local.code_1735[1]) % 256 : b)] :
      local.code_1735[0] == "-"
        ? [for i, b in local.iter_1734.tape : (i == local.iter_1734.tape_ptr ? (b - local.code_1735[1] + 256) % 256 : b)] :
      local.code_1735[0] == ","
        ? [for i, b in local.iter_1734.tape : (i == local.iter_1734.tape_ptr ? local.ascii_lookup[substr(local.input_1735, 0, 1)] : b)]
        : local.iter_1734.tape)

    tape_ptr = (
      local.code_1735[0] == "<"
        ? local.iter_1734.tape_ptr - local.code_1735[1] :
      local.code_1735[0] == ">"
        ? local.iter_1734.tape_ptr + local.code_1735[1]
        : local.iter_1734.tape_ptr)

    code_ptr = 2 + (
      local.code_1735[0] == "["
        ? local.iter_1734.tape[local.iter_1734.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1734.code_ptr)] : local.iter_1734.code_ptr :
      local.code_1735[0] == "]"
        ? local.iter_1734.tape[local.iter_1734.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1734.code_ptr)] : local.iter_1734.code_ptr
        : local.iter_1734.code_ptr)

    steps_taken = 1 + local.iter_1734.steps_taken
  }
}

locals {
  code_1736 = (try(local.iter_1735.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1735.code_ptr, local.iter_1735.code_ptr + 2)
    : [null])

  input_1736 = (local.code_1736[0] == ","
    ? substr(local.input_1735, local.code_1736[1], -1)
    : local.input_1735)

  iter_1736 = try(local.iter_1735.code_ptr >= length(var.code), true) ? local.iter_1735 : {
    output = (local.code_1736[0] == "."
      ? "${local.iter_1735.output}${join("", [for _ in range(local.code_1736[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1735.tape[local.iter_1735.tape_ptr]))])}"
      : local.iter_1735.output)
    
    tape = (
      local.code_1736[0] == "+"
        ? [for i, b in local.iter_1735.tape : (i == local.iter_1735.tape_ptr ? (b + local.code_1736[1]) % 256 : b)] :
      local.code_1736[0] == "-"
        ? [for i, b in local.iter_1735.tape : (i == local.iter_1735.tape_ptr ? (b - local.code_1736[1] + 256) % 256 : b)] :
      local.code_1736[0] == ","
        ? [for i, b in local.iter_1735.tape : (i == local.iter_1735.tape_ptr ? local.ascii_lookup[substr(local.input_1736, 0, 1)] : b)]
        : local.iter_1735.tape)

    tape_ptr = (
      local.code_1736[0] == "<"
        ? local.iter_1735.tape_ptr - local.code_1736[1] :
      local.code_1736[0] == ">"
        ? local.iter_1735.tape_ptr + local.code_1736[1]
        : local.iter_1735.tape_ptr)

    code_ptr = 2 + (
      local.code_1736[0] == "["
        ? local.iter_1735.tape[local.iter_1735.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1735.code_ptr)] : local.iter_1735.code_ptr :
      local.code_1736[0] == "]"
        ? local.iter_1735.tape[local.iter_1735.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1735.code_ptr)] : local.iter_1735.code_ptr
        : local.iter_1735.code_ptr)

    steps_taken = 1 + local.iter_1735.steps_taken
  }
}

locals {
  code_1737 = (try(local.iter_1736.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1736.code_ptr, local.iter_1736.code_ptr + 2)
    : [null])

  input_1737 = (local.code_1737[0] == ","
    ? substr(local.input_1736, local.code_1737[1], -1)
    : local.input_1736)

  iter_1737 = try(local.iter_1736.code_ptr >= length(var.code), true) ? local.iter_1736 : {
    output = (local.code_1737[0] == "."
      ? "${local.iter_1736.output}${join("", [for _ in range(local.code_1737[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1736.tape[local.iter_1736.tape_ptr]))])}"
      : local.iter_1736.output)
    
    tape = (
      local.code_1737[0] == "+"
        ? [for i, b in local.iter_1736.tape : (i == local.iter_1736.tape_ptr ? (b + local.code_1737[1]) % 256 : b)] :
      local.code_1737[0] == "-"
        ? [for i, b in local.iter_1736.tape : (i == local.iter_1736.tape_ptr ? (b - local.code_1737[1] + 256) % 256 : b)] :
      local.code_1737[0] == ","
        ? [for i, b in local.iter_1736.tape : (i == local.iter_1736.tape_ptr ? local.ascii_lookup[substr(local.input_1737, 0, 1)] : b)]
        : local.iter_1736.tape)

    tape_ptr = (
      local.code_1737[0] == "<"
        ? local.iter_1736.tape_ptr - local.code_1737[1] :
      local.code_1737[0] == ">"
        ? local.iter_1736.tape_ptr + local.code_1737[1]
        : local.iter_1736.tape_ptr)

    code_ptr = 2 + (
      local.code_1737[0] == "["
        ? local.iter_1736.tape[local.iter_1736.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1736.code_ptr)] : local.iter_1736.code_ptr :
      local.code_1737[0] == "]"
        ? local.iter_1736.tape[local.iter_1736.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1736.code_ptr)] : local.iter_1736.code_ptr
        : local.iter_1736.code_ptr)

    steps_taken = 1 + local.iter_1736.steps_taken
  }
}

locals {
  code_1738 = (try(local.iter_1737.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1737.code_ptr, local.iter_1737.code_ptr + 2)
    : [null])

  input_1738 = (local.code_1738[0] == ","
    ? substr(local.input_1737, local.code_1738[1], -1)
    : local.input_1737)

  iter_1738 = try(local.iter_1737.code_ptr >= length(var.code), true) ? local.iter_1737 : {
    output = (local.code_1738[0] == "."
      ? "${local.iter_1737.output}${join("", [for _ in range(local.code_1738[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1737.tape[local.iter_1737.tape_ptr]))])}"
      : local.iter_1737.output)
    
    tape = (
      local.code_1738[0] == "+"
        ? [for i, b in local.iter_1737.tape : (i == local.iter_1737.tape_ptr ? (b + local.code_1738[1]) % 256 : b)] :
      local.code_1738[0] == "-"
        ? [for i, b in local.iter_1737.tape : (i == local.iter_1737.tape_ptr ? (b - local.code_1738[1] + 256) % 256 : b)] :
      local.code_1738[0] == ","
        ? [for i, b in local.iter_1737.tape : (i == local.iter_1737.tape_ptr ? local.ascii_lookup[substr(local.input_1738, 0, 1)] : b)]
        : local.iter_1737.tape)

    tape_ptr = (
      local.code_1738[0] == "<"
        ? local.iter_1737.tape_ptr - local.code_1738[1] :
      local.code_1738[0] == ">"
        ? local.iter_1737.tape_ptr + local.code_1738[1]
        : local.iter_1737.tape_ptr)

    code_ptr = 2 + (
      local.code_1738[0] == "["
        ? local.iter_1737.tape[local.iter_1737.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1737.code_ptr)] : local.iter_1737.code_ptr :
      local.code_1738[0] == "]"
        ? local.iter_1737.tape[local.iter_1737.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1737.code_ptr)] : local.iter_1737.code_ptr
        : local.iter_1737.code_ptr)

    steps_taken = 1 + local.iter_1737.steps_taken
  }
}

locals {
  code_1739 = (try(local.iter_1738.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1738.code_ptr, local.iter_1738.code_ptr + 2)
    : [null])

  input_1739 = (local.code_1739[0] == ","
    ? substr(local.input_1738, local.code_1739[1], -1)
    : local.input_1738)

  iter_1739 = try(local.iter_1738.code_ptr >= length(var.code), true) ? local.iter_1738 : {
    output = (local.code_1739[0] == "."
      ? "${local.iter_1738.output}${join("", [for _ in range(local.code_1739[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1738.tape[local.iter_1738.tape_ptr]))])}"
      : local.iter_1738.output)
    
    tape = (
      local.code_1739[0] == "+"
        ? [for i, b in local.iter_1738.tape : (i == local.iter_1738.tape_ptr ? (b + local.code_1739[1]) % 256 : b)] :
      local.code_1739[0] == "-"
        ? [for i, b in local.iter_1738.tape : (i == local.iter_1738.tape_ptr ? (b - local.code_1739[1] + 256) % 256 : b)] :
      local.code_1739[0] == ","
        ? [for i, b in local.iter_1738.tape : (i == local.iter_1738.tape_ptr ? local.ascii_lookup[substr(local.input_1739, 0, 1)] : b)]
        : local.iter_1738.tape)

    tape_ptr = (
      local.code_1739[0] == "<"
        ? local.iter_1738.tape_ptr - local.code_1739[1] :
      local.code_1739[0] == ">"
        ? local.iter_1738.tape_ptr + local.code_1739[1]
        : local.iter_1738.tape_ptr)

    code_ptr = 2 + (
      local.code_1739[0] == "["
        ? local.iter_1738.tape[local.iter_1738.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1738.code_ptr)] : local.iter_1738.code_ptr :
      local.code_1739[0] == "]"
        ? local.iter_1738.tape[local.iter_1738.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1738.code_ptr)] : local.iter_1738.code_ptr
        : local.iter_1738.code_ptr)

    steps_taken = 1 + local.iter_1738.steps_taken
  }
}

locals {
  code_1740 = (try(local.iter_1739.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1739.code_ptr, local.iter_1739.code_ptr + 2)
    : [null])

  input_1740 = (local.code_1740[0] == ","
    ? substr(local.input_1739, local.code_1740[1], -1)
    : local.input_1739)

  iter_1740 = try(local.iter_1739.code_ptr >= length(var.code), true) ? local.iter_1739 : {
    output = (local.code_1740[0] == "."
      ? "${local.iter_1739.output}${join("", [for _ in range(local.code_1740[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1739.tape[local.iter_1739.tape_ptr]))])}"
      : local.iter_1739.output)
    
    tape = (
      local.code_1740[0] == "+"
        ? [for i, b in local.iter_1739.tape : (i == local.iter_1739.tape_ptr ? (b + local.code_1740[1]) % 256 : b)] :
      local.code_1740[0] == "-"
        ? [for i, b in local.iter_1739.tape : (i == local.iter_1739.tape_ptr ? (b - local.code_1740[1] + 256) % 256 : b)] :
      local.code_1740[0] == ","
        ? [for i, b in local.iter_1739.tape : (i == local.iter_1739.tape_ptr ? local.ascii_lookup[substr(local.input_1740, 0, 1)] : b)]
        : local.iter_1739.tape)

    tape_ptr = (
      local.code_1740[0] == "<"
        ? local.iter_1739.tape_ptr - local.code_1740[1] :
      local.code_1740[0] == ">"
        ? local.iter_1739.tape_ptr + local.code_1740[1]
        : local.iter_1739.tape_ptr)

    code_ptr = 2 + (
      local.code_1740[0] == "["
        ? local.iter_1739.tape[local.iter_1739.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1739.code_ptr)] : local.iter_1739.code_ptr :
      local.code_1740[0] == "]"
        ? local.iter_1739.tape[local.iter_1739.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1739.code_ptr)] : local.iter_1739.code_ptr
        : local.iter_1739.code_ptr)

    steps_taken = 1 + local.iter_1739.steps_taken
  }
}

locals {
  code_1741 = (try(local.iter_1740.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1740.code_ptr, local.iter_1740.code_ptr + 2)
    : [null])

  input_1741 = (local.code_1741[0] == ","
    ? substr(local.input_1740, local.code_1741[1], -1)
    : local.input_1740)

  iter_1741 = try(local.iter_1740.code_ptr >= length(var.code), true) ? local.iter_1740 : {
    output = (local.code_1741[0] == "."
      ? "${local.iter_1740.output}${join("", [for _ in range(local.code_1741[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1740.tape[local.iter_1740.tape_ptr]))])}"
      : local.iter_1740.output)
    
    tape = (
      local.code_1741[0] == "+"
        ? [for i, b in local.iter_1740.tape : (i == local.iter_1740.tape_ptr ? (b + local.code_1741[1]) % 256 : b)] :
      local.code_1741[0] == "-"
        ? [for i, b in local.iter_1740.tape : (i == local.iter_1740.tape_ptr ? (b - local.code_1741[1] + 256) % 256 : b)] :
      local.code_1741[0] == ","
        ? [for i, b in local.iter_1740.tape : (i == local.iter_1740.tape_ptr ? local.ascii_lookup[substr(local.input_1741, 0, 1)] : b)]
        : local.iter_1740.tape)

    tape_ptr = (
      local.code_1741[0] == "<"
        ? local.iter_1740.tape_ptr - local.code_1741[1] :
      local.code_1741[0] == ">"
        ? local.iter_1740.tape_ptr + local.code_1741[1]
        : local.iter_1740.tape_ptr)

    code_ptr = 2 + (
      local.code_1741[0] == "["
        ? local.iter_1740.tape[local.iter_1740.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1740.code_ptr)] : local.iter_1740.code_ptr :
      local.code_1741[0] == "]"
        ? local.iter_1740.tape[local.iter_1740.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1740.code_ptr)] : local.iter_1740.code_ptr
        : local.iter_1740.code_ptr)

    steps_taken = 1 + local.iter_1740.steps_taken
  }
}

locals {
  code_1742 = (try(local.iter_1741.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1741.code_ptr, local.iter_1741.code_ptr + 2)
    : [null])

  input_1742 = (local.code_1742[0] == ","
    ? substr(local.input_1741, local.code_1742[1], -1)
    : local.input_1741)

  iter_1742 = try(local.iter_1741.code_ptr >= length(var.code), true) ? local.iter_1741 : {
    output = (local.code_1742[0] == "."
      ? "${local.iter_1741.output}${join("", [for _ in range(local.code_1742[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1741.tape[local.iter_1741.tape_ptr]))])}"
      : local.iter_1741.output)
    
    tape = (
      local.code_1742[0] == "+"
        ? [for i, b in local.iter_1741.tape : (i == local.iter_1741.tape_ptr ? (b + local.code_1742[1]) % 256 : b)] :
      local.code_1742[0] == "-"
        ? [for i, b in local.iter_1741.tape : (i == local.iter_1741.tape_ptr ? (b - local.code_1742[1] + 256) % 256 : b)] :
      local.code_1742[0] == ","
        ? [for i, b in local.iter_1741.tape : (i == local.iter_1741.tape_ptr ? local.ascii_lookup[substr(local.input_1742, 0, 1)] : b)]
        : local.iter_1741.tape)

    tape_ptr = (
      local.code_1742[0] == "<"
        ? local.iter_1741.tape_ptr - local.code_1742[1] :
      local.code_1742[0] == ">"
        ? local.iter_1741.tape_ptr + local.code_1742[1]
        : local.iter_1741.tape_ptr)

    code_ptr = 2 + (
      local.code_1742[0] == "["
        ? local.iter_1741.tape[local.iter_1741.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1741.code_ptr)] : local.iter_1741.code_ptr :
      local.code_1742[0] == "]"
        ? local.iter_1741.tape[local.iter_1741.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1741.code_ptr)] : local.iter_1741.code_ptr
        : local.iter_1741.code_ptr)

    steps_taken = 1 + local.iter_1741.steps_taken
  }
}

locals {
  code_1743 = (try(local.iter_1742.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1742.code_ptr, local.iter_1742.code_ptr + 2)
    : [null])

  input_1743 = (local.code_1743[0] == ","
    ? substr(local.input_1742, local.code_1743[1], -1)
    : local.input_1742)

  iter_1743 = try(local.iter_1742.code_ptr >= length(var.code), true) ? local.iter_1742 : {
    output = (local.code_1743[0] == "."
      ? "${local.iter_1742.output}${join("", [for _ in range(local.code_1743[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1742.tape[local.iter_1742.tape_ptr]))])}"
      : local.iter_1742.output)
    
    tape = (
      local.code_1743[0] == "+"
        ? [for i, b in local.iter_1742.tape : (i == local.iter_1742.tape_ptr ? (b + local.code_1743[1]) % 256 : b)] :
      local.code_1743[0] == "-"
        ? [for i, b in local.iter_1742.tape : (i == local.iter_1742.tape_ptr ? (b - local.code_1743[1] + 256) % 256 : b)] :
      local.code_1743[0] == ","
        ? [for i, b in local.iter_1742.tape : (i == local.iter_1742.tape_ptr ? local.ascii_lookup[substr(local.input_1743, 0, 1)] : b)]
        : local.iter_1742.tape)

    tape_ptr = (
      local.code_1743[0] == "<"
        ? local.iter_1742.tape_ptr - local.code_1743[1] :
      local.code_1743[0] == ">"
        ? local.iter_1742.tape_ptr + local.code_1743[1]
        : local.iter_1742.tape_ptr)

    code_ptr = 2 + (
      local.code_1743[0] == "["
        ? local.iter_1742.tape[local.iter_1742.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1742.code_ptr)] : local.iter_1742.code_ptr :
      local.code_1743[0] == "]"
        ? local.iter_1742.tape[local.iter_1742.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1742.code_ptr)] : local.iter_1742.code_ptr
        : local.iter_1742.code_ptr)

    steps_taken = 1 + local.iter_1742.steps_taken
  }
}

locals {
  code_1744 = (try(local.iter_1743.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1743.code_ptr, local.iter_1743.code_ptr + 2)
    : [null])

  input_1744 = (local.code_1744[0] == ","
    ? substr(local.input_1743, local.code_1744[1], -1)
    : local.input_1743)

  iter_1744 = try(local.iter_1743.code_ptr >= length(var.code), true) ? local.iter_1743 : {
    output = (local.code_1744[0] == "."
      ? "${local.iter_1743.output}${join("", [for _ in range(local.code_1744[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1743.tape[local.iter_1743.tape_ptr]))])}"
      : local.iter_1743.output)
    
    tape = (
      local.code_1744[0] == "+"
        ? [for i, b in local.iter_1743.tape : (i == local.iter_1743.tape_ptr ? (b + local.code_1744[1]) % 256 : b)] :
      local.code_1744[0] == "-"
        ? [for i, b in local.iter_1743.tape : (i == local.iter_1743.tape_ptr ? (b - local.code_1744[1] + 256) % 256 : b)] :
      local.code_1744[0] == ","
        ? [for i, b in local.iter_1743.tape : (i == local.iter_1743.tape_ptr ? local.ascii_lookup[substr(local.input_1744, 0, 1)] : b)]
        : local.iter_1743.tape)

    tape_ptr = (
      local.code_1744[0] == "<"
        ? local.iter_1743.tape_ptr - local.code_1744[1] :
      local.code_1744[0] == ">"
        ? local.iter_1743.tape_ptr + local.code_1744[1]
        : local.iter_1743.tape_ptr)

    code_ptr = 2 + (
      local.code_1744[0] == "["
        ? local.iter_1743.tape[local.iter_1743.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1743.code_ptr)] : local.iter_1743.code_ptr :
      local.code_1744[0] == "]"
        ? local.iter_1743.tape[local.iter_1743.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1743.code_ptr)] : local.iter_1743.code_ptr
        : local.iter_1743.code_ptr)

    steps_taken = 1 + local.iter_1743.steps_taken
  }
}

locals {
  code_1745 = (try(local.iter_1744.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1744.code_ptr, local.iter_1744.code_ptr + 2)
    : [null])

  input_1745 = (local.code_1745[0] == ","
    ? substr(local.input_1744, local.code_1745[1], -1)
    : local.input_1744)

  iter_1745 = try(local.iter_1744.code_ptr >= length(var.code), true) ? local.iter_1744 : {
    output = (local.code_1745[0] == "."
      ? "${local.iter_1744.output}${join("", [for _ in range(local.code_1745[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1744.tape[local.iter_1744.tape_ptr]))])}"
      : local.iter_1744.output)
    
    tape = (
      local.code_1745[0] == "+"
        ? [for i, b in local.iter_1744.tape : (i == local.iter_1744.tape_ptr ? (b + local.code_1745[1]) % 256 : b)] :
      local.code_1745[0] == "-"
        ? [for i, b in local.iter_1744.tape : (i == local.iter_1744.tape_ptr ? (b - local.code_1745[1] + 256) % 256 : b)] :
      local.code_1745[0] == ","
        ? [for i, b in local.iter_1744.tape : (i == local.iter_1744.tape_ptr ? local.ascii_lookup[substr(local.input_1745, 0, 1)] : b)]
        : local.iter_1744.tape)

    tape_ptr = (
      local.code_1745[0] == "<"
        ? local.iter_1744.tape_ptr - local.code_1745[1] :
      local.code_1745[0] == ">"
        ? local.iter_1744.tape_ptr + local.code_1745[1]
        : local.iter_1744.tape_ptr)

    code_ptr = 2 + (
      local.code_1745[0] == "["
        ? local.iter_1744.tape[local.iter_1744.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1744.code_ptr)] : local.iter_1744.code_ptr :
      local.code_1745[0] == "]"
        ? local.iter_1744.tape[local.iter_1744.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1744.code_ptr)] : local.iter_1744.code_ptr
        : local.iter_1744.code_ptr)

    steps_taken = 1 + local.iter_1744.steps_taken
  }
}

locals {
  code_1746 = (try(local.iter_1745.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1745.code_ptr, local.iter_1745.code_ptr + 2)
    : [null])

  input_1746 = (local.code_1746[0] == ","
    ? substr(local.input_1745, local.code_1746[1], -1)
    : local.input_1745)

  iter_1746 = try(local.iter_1745.code_ptr >= length(var.code), true) ? local.iter_1745 : {
    output = (local.code_1746[0] == "."
      ? "${local.iter_1745.output}${join("", [for _ in range(local.code_1746[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1745.tape[local.iter_1745.tape_ptr]))])}"
      : local.iter_1745.output)
    
    tape = (
      local.code_1746[0] == "+"
        ? [for i, b in local.iter_1745.tape : (i == local.iter_1745.tape_ptr ? (b + local.code_1746[1]) % 256 : b)] :
      local.code_1746[0] == "-"
        ? [for i, b in local.iter_1745.tape : (i == local.iter_1745.tape_ptr ? (b - local.code_1746[1] + 256) % 256 : b)] :
      local.code_1746[0] == ","
        ? [for i, b in local.iter_1745.tape : (i == local.iter_1745.tape_ptr ? local.ascii_lookup[substr(local.input_1746, 0, 1)] : b)]
        : local.iter_1745.tape)

    tape_ptr = (
      local.code_1746[0] == "<"
        ? local.iter_1745.tape_ptr - local.code_1746[1] :
      local.code_1746[0] == ">"
        ? local.iter_1745.tape_ptr + local.code_1746[1]
        : local.iter_1745.tape_ptr)

    code_ptr = 2 + (
      local.code_1746[0] == "["
        ? local.iter_1745.tape[local.iter_1745.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1745.code_ptr)] : local.iter_1745.code_ptr :
      local.code_1746[0] == "]"
        ? local.iter_1745.tape[local.iter_1745.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1745.code_ptr)] : local.iter_1745.code_ptr
        : local.iter_1745.code_ptr)

    steps_taken = 1 + local.iter_1745.steps_taken
  }
}

locals {
  code_1747 = (try(local.iter_1746.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1746.code_ptr, local.iter_1746.code_ptr + 2)
    : [null])

  input_1747 = (local.code_1747[0] == ","
    ? substr(local.input_1746, local.code_1747[1], -1)
    : local.input_1746)

  iter_1747 = try(local.iter_1746.code_ptr >= length(var.code), true) ? local.iter_1746 : {
    output = (local.code_1747[0] == "."
      ? "${local.iter_1746.output}${join("", [for _ in range(local.code_1747[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1746.tape[local.iter_1746.tape_ptr]))])}"
      : local.iter_1746.output)
    
    tape = (
      local.code_1747[0] == "+"
        ? [for i, b in local.iter_1746.tape : (i == local.iter_1746.tape_ptr ? (b + local.code_1747[1]) % 256 : b)] :
      local.code_1747[0] == "-"
        ? [for i, b in local.iter_1746.tape : (i == local.iter_1746.tape_ptr ? (b - local.code_1747[1] + 256) % 256 : b)] :
      local.code_1747[0] == ","
        ? [for i, b in local.iter_1746.tape : (i == local.iter_1746.tape_ptr ? local.ascii_lookup[substr(local.input_1747, 0, 1)] : b)]
        : local.iter_1746.tape)

    tape_ptr = (
      local.code_1747[0] == "<"
        ? local.iter_1746.tape_ptr - local.code_1747[1] :
      local.code_1747[0] == ">"
        ? local.iter_1746.tape_ptr + local.code_1747[1]
        : local.iter_1746.tape_ptr)

    code_ptr = 2 + (
      local.code_1747[0] == "["
        ? local.iter_1746.tape[local.iter_1746.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1746.code_ptr)] : local.iter_1746.code_ptr :
      local.code_1747[0] == "]"
        ? local.iter_1746.tape[local.iter_1746.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1746.code_ptr)] : local.iter_1746.code_ptr
        : local.iter_1746.code_ptr)

    steps_taken = 1 + local.iter_1746.steps_taken
  }
}

locals {
  code_1748 = (try(local.iter_1747.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1747.code_ptr, local.iter_1747.code_ptr + 2)
    : [null])

  input_1748 = (local.code_1748[0] == ","
    ? substr(local.input_1747, local.code_1748[1], -1)
    : local.input_1747)

  iter_1748 = try(local.iter_1747.code_ptr >= length(var.code), true) ? local.iter_1747 : {
    output = (local.code_1748[0] == "."
      ? "${local.iter_1747.output}${join("", [for _ in range(local.code_1748[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1747.tape[local.iter_1747.tape_ptr]))])}"
      : local.iter_1747.output)
    
    tape = (
      local.code_1748[0] == "+"
        ? [for i, b in local.iter_1747.tape : (i == local.iter_1747.tape_ptr ? (b + local.code_1748[1]) % 256 : b)] :
      local.code_1748[0] == "-"
        ? [for i, b in local.iter_1747.tape : (i == local.iter_1747.tape_ptr ? (b - local.code_1748[1] + 256) % 256 : b)] :
      local.code_1748[0] == ","
        ? [for i, b in local.iter_1747.tape : (i == local.iter_1747.tape_ptr ? local.ascii_lookup[substr(local.input_1748, 0, 1)] : b)]
        : local.iter_1747.tape)

    tape_ptr = (
      local.code_1748[0] == "<"
        ? local.iter_1747.tape_ptr - local.code_1748[1] :
      local.code_1748[0] == ">"
        ? local.iter_1747.tape_ptr + local.code_1748[1]
        : local.iter_1747.tape_ptr)

    code_ptr = 2 + (
      local.code_1748[0] == "["
        ? local.iter_1747.tape[local.iter_1747.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1747.code_ptr)] : local.iter_1747.code_ptr :
      local.code_1748[0] == "]"
        ? local.iter_1747.tape[local.iter_1747.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1747.code_ptr)] : local.iter_1747.code_ptr
        : local.iter_1747.code_ptr)

    steps_taken = 1 + local.iter_1747.steps_taken
  }
}

locals {
  code_1749 = (try(local.iter_1748.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1748.code_ptr, local.iter_1748.code_ptr + 2)
    : [null])

  input_1749 = (local.code_1749[0] == ","
    ? substr(local.input_1748, local.code_1749[1], -1)
    : local.input_1748)

  iter_1749 = try(local.iter_1748.code_ptr >= length(var.code), true) ? local.iter_1748 : {
    output = (local.code_1749[0] == "."
      ? "${local.iter_1748.output}${join("", [for _ in range(local.code_1749[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1748.tape[local.iter_1748.tape_ptr]))])}"
      : local.iter_1748.output)
    
    tape = (
      local.code_1749[0] == "+"
        ? [for i, b in local.iter_1748.tape : (i == local.iter_1748.tape_ptr ? (b + local.code_1749[1]) % 256 : b)] :
      local.code_1749[0] == "-"
        ? [for i, b in local.iter_1748.tape : (i == local.iter_1748.tape_ptr ? (b - local.code_1749[1] + 256) % 256 : b)] :
      local.code_1749[0] == ","
        ? [for i, b in local.iter_1748.tape : (i == local.iter_1748.tape_ptr ? local.ascii_lookup[substr(local.input_1749, 0, 1)] : b)]
        : local.iter_1748.tape)

    tape_ptr = (
      local.code_1749[0] == "<"
        ? local.iter_1748.tape_ptr - local.code_1749[1] :
      local.code_1749[0] == ">"
        ? local.iter_1748.tape_ptr + local.code_1749[1]
        : local.iter_1748.tape_ptr)

    code_ptr = 2 + (
      local.code_1749[0] == "["
        ? local.iter_1748.tape[local.iter_1748.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1748.code_ptr)] : local.iter_1748.code_ptr :
      local.code_1749[0] == "]"
        ? local.iter_1748.tape[local.iter_1748.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1748.code_ptr)] : local.iter_1748.code_ptr
        : local.iter_1748.code_ptr)

    steps_taken = 1 + local.iter_1748.steps_taken
  }
}

locals {
  code_1750 = (try(local.iter_1749.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1749.code_ptr, local.iter_1749.code_ptr + 2)
    : [null])

  input_1750 = (local.code_1750[0] == ","
    ? substr(local.input_1749, local.code_1750[1], -1)
    : local.input_1749)

  iter_1750 = try(local.iter_1749.code_ptr >= length(var.code), true) ? local.iter_1749 : {
    output = (local.code_1750[0] == "."
      ? "${local.iter_1749.output}${join("", [for _ in range(local.code_1750[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1749.tape[local.iter_1749.tape_ptr]))])}"
      : local.iter_1749.output)
    
    tape = (
      local.code_1750[0] == "+"
        ? [for i, b in local.iter_1749.tape : (i == local.iter_1749.tape_ptr ? (b + local.code_1750[1]) % 256 : b)] :
      local.code_1750[0] == "-"
        ? [for i, b in local.iter_1749.tape : (i == local.iter_1749.tape_ptr ? (b - local.code_1750[1] + 256) % 256 : b)] :
      local.code_1750[0] == ","
        ? [for i, b in local.iter_1749.tape : (i == local.iter_1749.tape_ptr ? local.ascii_lookup[substr(local.input_1750, 0, 1)] : b)]
        : local.iter_1749.tape)

    tape_ptr = (
      local.code_1750[0] == "<"
        ? local.iter_1749.tape_ptr - local.code_1750[1] :
      local.code_1750[0] == ">"
        ? local.iter_1749.tape_ptr + local.code_1750[1]
        : local.iter_1749.tape_ptr)

    code_ptr = 2 + (
      local.code_1750[0] == "["
        ? local.iter_1749.tape[local.iter_1749.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1749.code_ptr)] : local.iter_1749.code_ptr :
      local.code_1750[0] == "]"
        ? local.iter_1749.tape[local.iter_1749.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1749.code_ptr)] : local.iter_1749.code_ptr
        : local.iter_1749.code_ptr)

    steps_taken = 1 + local.iter_1749.steps_taken
  }
}

locals {
  code_1751 = (try(local.iter_1750.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1750.code_ptr, local.iter_1750.code_ptr + 2)
    : [null])

  input_1751 = (local.code_1751[0] == ","
    ? substr(local.input_1750, local.code_1751[1], -1)
    : local.input_1750)

  iter_1751 = try(local.iter_1750.code_ptr >= length(var.code), true) ? local.iter_1750 : {
    output = (local.code_1751[0] == "."
      ? "${local.iter_1750.output}${join("", [for _ in range(local.code_1751[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1750.tape[local.iter_1750.tape_ptr]))])}"
      : local.iter_1750.output)
    
    tape = (
      local.code_1751[0] == "+"
        ? [for i, b in local.iter_1750.tape : (i == local.iter_1750.tape_ptr ? (b + local.code_1751[1]) % 256 : b)] :
      local.code_1751[0] == "-"
        ? [for i, b in local.iter_1750.tape : (i == local.iter_1750.tape_ptr ? (b - local.code_1751[1] + 256) % 256 : b)] :
      local.code_1751[0] == ","
        ? [for i, b in local.iter_1750.tape : (i == local.iter_1750.tape_ptr ? local.ascii_lookup[substr(local.input_1751, 0, 1)] : b)]
        : local.iter_1750.tape)

    tape_ptr = (
      local.code_1751[0] == "<"
        ? local.iter_1750.tape_ptr - local.code_1751[1] :
      local.code_1751[0] == ">"
        ? local.iter_1750.tape_ptr + local.code_1751[1]
        : local.iter_1750.tape_ptr)

    code_ptr = 2 + (
      local.code_1751[0] == "["
        ? local.iter_1750.tape[local.iter_1750.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1750.code_ptr)] : local.iter_1750.code_ptr :
      local.code_1751[0] == "]"
        ? local.iter_1750.tape[local.iter_1750.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1750.code_ptr)] : local.iter_1750.code_ptr
        : local.iter_1750.code_ptr)

    steps_taken = 1 + local.iter_1750.steps_taken
  }
}

locals {
  code_1752 = (try(local.iter_1751.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1751.code_ptr, local.iter_1751.code_ptr + 2)
    : [null])

  input_1752 = (local.code_1752[0] == ","
    ? substr(local.input_1751, local.code_1752[1], -1)
    : local.input_1751)

  iter_1752 = try(local.iter_1751.code_ptr >= length(var.code), true) ? local.iter_1751 : {
    output = (local.code_1752[0] == "."
      ? "${local.iter_1751.output}${join("", [for _ in range(local.code_1752[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1751.tape[local.iter_1751.tape_ptr]))])}"
      : local.iter_1751.output)
    
    tape = (
      local.code_1752[0] == "+"
        ? [for i, b in local.iter_1751.tape : (i == local.iter_1751.tape_ptr ? (b + local.code_1752[1]) % 256 : b)] :
      local.code_1752[0] == "-"
        ? [for i, b in local.iter_1751.tape : (i == local.iter_1751.tape_ptr ? (b - local.code_1752[1] + 256) % 256 : b)] :
      local.code_1752[0] == ","
        ? [for i, b in local.iter_1751.tape : (i == local.iter_1751.tape_ptr ? local.ascii_lookup[substr(local.input_1752, 0, 1)] : b)]
        : local.iter_1751.tape)

    tape_ptr = (
      local.code_1752[0] == "<"
        ? local.iter_1751.tape_ptr - local.code_1752[1] :
      local.code_1752[0] == ">"
        ? local.iter_1751.tape_ptr + local.code_1752[1]
        : local.iter_1751.tape_ptr)

    code_ptr = 2 + (
      local.code_1752[0] == "["
        ? local.iter_1751.tape[local.iter_1751.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1751.code_ptr)] : local.iter_1751.code_ptr :
      local.code_1752[0] == "]"
        ? local.iter_1751.tape[local.iter_1751.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1751.code_ptr)] : local.iter_1751.code_ptr
        : local.iter_1751.code_ptr)

    steps_taken = 1 + local.iter_1751.steps_taken
  }
}

locals {
  code_1753 = (try(local.iter_1752.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1752.code_ptr, local.iter_1752.code_ptr + 2)
    : [null])

  input_1753 = (local.code_1753[0] == ","
    ? substr(local.input_1752, local.code_1753[1], -1)
    : local.input_1752)

  iter_1753 = try(local.iter_1752.code_ptr >= length(var.code), true) ? local.iter_1752 : {
    output = (local.code_1753[0] == "."
      ? "${local.iter_1752.output}${join("", [for _ in range(local.code_1753[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1752.tape[local.iter_1752.tape_ptr]))])}"
      : local.iter_1752.output)
    
    tape = (
      local.code_1753[0] == "+"
        ? [for i, b in local.iter_1752.tape : (i == local.iter_1752.tape_ptr ? (b + local.code_1753[1]) % 256 : b)] :
      local.code_1753[0] == "-"
        ? [for i, b in local.iter_1752.tape : (i == local.iter_1752.tape_ptr ? (b - local.code_1753[1] + 256) % 256 : b)] :
      local.code_1753[0] == ","
        ? [for i, b in local.iter_1752.tape : (i == local.iter_1752.tape_ptr ? local.ascii_lookup[substr(local.input_1753, 0, 1)] : b)]
        : local.iter_1752.tape)

    tape_ptr = (
      local.code_1753[0] == "<"
        ? local.iter_1752.tape_ptr - local.code_1753[1] :
      local.code_1753[0] == ">"
        ? local.iter_1752.tape_ptr + local.code_1753[1]
        : local.iter_1752.tape_ptr)

    code_ptr = 2 + (
      local.code_1753[0] == "["
        ? local.iter_1752.tape[local.iter_1752.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1752.code_ptr)] : local.iter_1752.code_ptr :
      local.code_1753[0] == "]"
        ? local.iter_1752.tape[local.iter_1752.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1752.code_ptr)] : local.iter_1752.code_ptr
        : local.iter_1752.code_ptr)

    steps_taken = 1 + local.iter_1752.steps_taken
  }
}

locals {
  code_1754 = (try(local.iter_1753.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1753.code_ptr, local.iter_1753.code_ptr + 2)
    : [null])

  input_1754 = (local.code_1754[0] == ","
    ? substr(local.input_1753, local.code_1754[1], -1)
    : local.input_1753)

  iter_1754 = try(local.iter_1753.code_ptr >= length(var.code), true) ? local.iter_1753 : {
    output = (local.code_1754[0] == "."
      ? "${local.iter_1753.output}${join("", [for _ in range(local.code_1754[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1753.tape[local.iter_1753.tape_ptr]))])}"
      : local.iter_1753.output)
    
    tape = (
      local.code_1754[0] == "+"
        ? [for i, b in local.iter_1753.tape : (i == local.iter_1753.tape_ptr ? (b + local.code_1754[1]) % 256 : b)] :
      local.code_1754[0] == "-"
        ? [for i, b in local.iter_1753.tape : (i == local.iter_1753.tape_ptr ? (b - local.code_1754[1] + 256) % 256 : b)] :
      local.code_1754[0] == ","
        ? [for i, b in local.iter_1753.tape : (i == local.iter_1753.tape_ptr ? local.ascii_lookup[substr(local.input_1754, 0, 1)] : b)]
        : local.iter_1753.tape)

    tape_ptr = (
      local.code_1754[0] == "<"
        ? local.iter_1753.tape_ptr - local.code_1754[1] :
      local.code_1754[0] == ">"
        ? local.iter_1753.tape_ptr + local.code_1754[1]
        : local.iter_1753.tape_ptr)

    code_ptr = 2 + (
      local.code_1754[0] == "["
        ? local.iter_1753.tape[local.iter_1753.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1753.code_ptr)] : local.iter_1753.code_ptr :
      local.code_1754[0] == "]"
        ? local.iter_1753.tape[local.iter_1753.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1753.code_ptr)] : local.iter_1753.code_ptr
        : local.iter_1753.code_ptr)

    steps_taken = 1 + local.iter_1753.steps_taken
  }
}

locals {
  code_1755 = (try(local.iter_1754.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1754.code_ptr, local.iter_1754.code_ptr + 2)
    : [null])

  input_1755 = (local.code_1755[0] == ","
    ? substr(local.input_1754, local.code_1755[1], -1)
    : local.input_1754)

  iter_1755 = try(local.iter_1754.code_ptr >= length(var.code), true) ? local.iter_1754 : {
    output = (local.code_1755[0] == "."
      ? "${local.iter_1754.output}${join("", [for _ in range(local.code_1755[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1754.tape[local.iter_1754.tape_ptr]))])}"
      : local.iter_1754.output)
    
    tape = (
      local.code_1755[0] == "+"
        ? [for i, b in local.iter_1754.tape : (i == local.iter_1754.tape_ptr ? (b + local.code_1755[1]) % 256 : b)] :
      local.code_1755[0] == "-"
        ? [for i, b in local.iter_1754.tape : (i == local.iter_1754.tape_ptr ? (b - local.code_1755[1] + 256) % 256 : b)] :
      local.code_1755[0] == ","
        ? [for i, b in local.iter_1754.tape : (i == local.iter_1754.tape_ptr ? local.ascii_lookup[substr(local.input_1755, 0, 1)] : b)]
        : local.iter_1754.tape)

    tape_ptr = (
      local.code_1755[0] == "<"
        ? local.iter_1754.tape_ptr - local.code_1755[1] :
      local.code_1755[0] == ">"
        ? local.iter_1754.tape_ptr + local.code_1755[1]
        : local.iter_1754.tape_ptr)

    code_ptr = 2 + (
      local.code_1755[0] == "["
        ? local.iter_1754.tape[local.iter_1754.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1754.code_ptr)] : local.iter_1754.code_ptr :
      local.code_1755[0] == "]"
        ? local.iter_1754.tape[local.iter_1754.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1754.code_ptr)] : local.iter_1754.code_ptr
        : local.iter_1754.code_ptr)

    steps_taken = 1 + local.iter_1754.steps_taken
  }
}

locals {
  code_1756 = (try(local.iter_1755.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1755.code_ptr, local.iter_1755.code_ptr + 2)
    : [null])

  input_1756 = (local.code_1756[0] == ","
    ? substr(local.input_1755, local.code_1756[1], -1)
    : local.input_1755)

  iter_1756 = try(local.iter_1755.code_ptr >= length(var.code), true) ? local.iter_1755 : {
    output = (local.code_1756[0] == "."
      ? "${local.iter_1755.output}${join("", [for _ in range(local.code_1756[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1755.tape[local.iter_1755.tape_ptr]))])}"
      : local.iter_1755.output)
    
    tape = (
      local.code_1756[0] == "+"
        ? [for i, b in local.iter_1755.tape : (i == local.iter_1755.tape_ptr ? (b + local.code_1756[1]) % 256 : b)] :
      local.code_1756[0] == "-"
        ? [for i, b in local.iter_1755.tape : (i == local.iter_1755.tape_ptr ? (b - local.code_1756[1] + 256) % 256 : b)] :
      local.code_1756[0] == ","
        ? [for i, b in local.iter_1755.tape : (i == local.iter_1755.tape_ptr ? local.ascii_lookup[substr(local.input_1756, 0, 1)] : b)]
        : local.iter_1755.tape)

    tape_ptr = (
      local.code_1756[0] == "<"
        ? local.iter_1755.tape_ptr - local.code_1756[1] :
      local.code_1756[0] == ">"
        ? local.iter_1755.tape_ptr + local.code_1756[1]
        : local.iter_1755.tape_ptr)

    code_ptr = 2 + (
      local.code_1756[0] == "["
        ? local.iter_1755.tape[local.iter_1755.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1755.code_ptr)] : local.iter_1755.code_ptr :
      local.code_1756[0] == "]"
        ? local.iter_1755.tape[local.iter_1755.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1755.code_ptr)] : local.iter_1755.code_ptr
        : local.iter_1755.code_ptr)

    steps_taken = 1 + local.iter_1755.steps_taken
  }
}

locals {
  code_1757 = (try(local.iter_1756.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1756.code_ptr, local.iter_1756.code_ptr + 2)
    : [null])

  input_1757 = (local.code_1757[0] == ","
    ? substr(local.input_1756, local.code_1757[1], -1)
    : local.input_1756)

  iter_1757 = try(local.iter_1756.code_ptr >= length(var.code), true) ? local.iter_1756 : {
    output = (local.code_1757[0] == "."
      ? "${local.iter_1756.output}${join("", [for _ in range(local.code_1757[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1756.tape[local.iter_1756.tape_ptr]))])}"
      : local.iter_1756.output)
    
    tape = (
      local.code_1757[0] == "+"
        ? [for i, b in local.iter_1756.tape : (i == local.iter_1756.tape_ptr ? (b + local.code_1757[1]) % 256 : b)] :
      local.code_1757[0] == "-"
        ? [for i, b in local.iter_1756.tape : (i == local.iter_1756.tape_ptr ? (b - local.code_1757[1] + 256) % 256 : b)] :
      local.code_1757[0] == ","
        ? [for i, b in local.iter_1756.tape : (i == local.iter_1756.tape_ptr ? local.ascii_lookup[substr(local.input_1757, 0, 1)] : b)]
        : local.iter_1756.tape)

    tape_ptr = (
      local.code_1757[0] == "<"
        ? local.iter_1756.tape_ptr - local.code_1757[1] :
      local.code_1757[0] == ">"
        ? local.iter_1756.tape_ptr + local.code_1757[1]
        : local.iter_1756.tape_ptr)

    code_ptr = 2 + (
      local.code_1757[0] == "["
        ? local.iter_1756.tape[local.iter_1756.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1756.code_ptr)] : local.iter_1756.code_ptr :
      local.code_1757[0] == "]"
        ? local.iter_1756.tape[local.iter_1756.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1756.code_ptr)] : local.iter_1756.code_ptr
        : local.iter_1756.code_ptr)

    steps_taken = 1 + local.iter_1756.steps_taken
  }
}

locals {
  code_1758 = (try(local.iter_1757.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1757.code_ptr, local.iter_1757.code_ptr + 2)
    : [null])

  input_1758 = (local.code_1758[0] == ","
    ? substr(local.input_1757, local.code_1758[1], -1)
    : local.input_1757)

  iter_1758 = try(local.iter_1757.code_ptr >= length(var.code), true) ? local.iter_1757 : {
    output = (local.code_1758[0] == "."
      ? "${local.iter_1757.output}${join("", [for _ in range(local.code_1758[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1757.tape[local.iter_1757.tape_ptr]))])}"
      : local.iter_1757.output)
    
    tape = (
      local.code_1758[0] == "+"
        ? [for i, b in local.iter_1757.tape : (i == local.iter_1757.tape_ptr ? (b + local.code_1758[1]) % 256 : b)] :
      local.code_1758[0] == "-"
        ? [for i, b in local.iter_1757.tape : (i == local.iter_1757.tape_ptr ? (b - local.code_1758[1] + 256) % 256 : b)] :
      local.code_1758[0] == ","
        ? [for i, b in local.iter_1757.tape : (i == local.iter_1757.tape_ptr ? local.ascii_lookup[substr(local.input_1758, 0, 1)] : b)]
        : local.iter_1757.tape)

    tape_ptr = (
      local.code_1758[0] == "<"
        ? local.iter_1757.tape_ptr - local.code_1758[1] :
      local.code_1758[0] == ">"
        ? local.iter_1757.tape_ptr + local.code_1758[1]
        : local.iter_1757.tape_ptr)

    code_ptr = 2 + (
      local.code_1758[0] == "["
        ? local.iter_1757.tape[local.iter_1757.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1757.code_ptr)] : local.iter_1757.code_ptr :
      local.code_1758[0] == "]"
        ? local.iter_1757.tape[local.iter_1757.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1757.code_ptr)] : local.iter_1757.code_ptr
        : local.iter_1757.code_ptr)

    steps_taken = 1 + local.iter_1757.steps_taken
  }
}

locals {
  code_1759 = (try(local.iter_1758.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1758.code_ptr, local.iter_1758.code_ptr + 2)
    : [null])

  input_1759 = (local.code_1759[0] == ","
    ? substr(local.input_1758, local.code_1759[1], -1)
    : local.input_1758)

  iter_1759 = try(local.iter_1758.code_ptr >= length(var.code), true) ? local.iter_1758 : {
    output = (local.code_1759[0] == "."
      ? "${local.iter_1758.output}${join("", [for _ in range(local.code_1759[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1758.tape[local.iter_1758.tape_ptr]))])}"
      : local.iter_1758.output)
    
    tape = (
      local.code_1759[0] == "+"
        ? [for i, b in local.iter_1758.tape : (i == local.iter_1758.tape_ptr ? (b + local.code_1759[1]) % 256 : b)] :
      local.code_1759[0] == "-"
        ? [for i, b in local.iter_1758.tape : (i == local.iter_1758.tape_ptr ? (b - local.code_1759[1] + 256) % 256 : b)] :
      local.code_1759[0] == ","
        ? [for i, b in local.iter_1758.tape : (i == local.iter_1758.tape_ptr ? local.ascii_lookup[substr(local.input_1759, 0, 1)] : b)]
        : local.iter_1758.tape)

    tape_ptr = (
      local.code_1759[0] == "<"
        ? local.iter_1758.tape_ptr - local.code_1759[1] :
      local.code_1759[0] == ">"
        ? local.iter_1758.tape_ptr + local.code_1759[1]
        : local.iter_1758.tape_ptr)

    code_ptr = 2 + (
      local.code_1759[0] == "["
        ? local.iter_1758.tape[local.iter_1758.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1758.code_ptr)] : local.iter_1758.code_ptr :
      local.code_1759[0] == "]"
        ? local.iter_1758.tape[local.iter_1758.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1758.code_ptr)] : local.iter_1758.code_ptr
        : local.iter_1758.code_ptr)

    steps_taken = 1 + local.iter_1758.steps_taken
  }
}

locals {
  code_1760 = (try(local.iter_1759.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1759.code_ptr, local.iter_1759.code_ptr + 2)
    : [null])

  input_1760 = (local.code_1760[0] == ","
    ? substr(local.input_1759, local.code_1760[1], -1)
    : local.input_1759)

  iter_1760 = try(local.iter_1759.code_ptr >= length(var.code), true) ? local.iter_1759 : {
    output = (local.code_1760[0] == "."
      ? "${local.iter_1759.output}${join("", [for _ in range(local.code_1760[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1759.tape[local.iter_1759.tape_ptr]))])}"
      : local.iter_1759.output)
    
    tape = (
      local.code_1760[0] == "+"
        ? [for i, b in local.iter_1759.tape : (i == local.iter_1759.tape_ptr ? (b + local.code_1760[1]) % 256 : b)] :
      local.code_1760[0] == "-"
        ? [for i, b in local.iter_1759.tape : (i == local.iter_1759.tape_ptr ? (b - local.code_1760[1] + 256) % 256 : b)] :
      local.code_1760[0] == ","
        ? [for i, b in local.iter_1759.tape : (i == local.iter_1759.tape_ptr ? local.ascii_lookup[substr(local.input_1760, 0, 1)] : b)]
        : local.iter_1759.tape)

    tape_ptr = (
      local.code_1760[0] == "<"
        ? local.iter_1759.tape_ptr - local.code_1760[1] :
      local.code_1760[0] == ">"
        ? local.iter_1759.tape_ptr + local.code_1760[1]
        : local.iter_1759.tape_ptr)

    code_ptr = 2 + (
      local.code_1760[0] == "["
        ? local.iter_1759.tape[local.iter_1759.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1759.code_ptr)] : local.iter_1759.code_ptr :
      local.code_1760[0] == "]"
        ? local.iter_1759.tape[local.iter_1759.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1759.code_ptr)] : local.iter_1759.code_ptr
        : local.iter_1759.code_ptr)

    steps_taken = 1 + local.iter_1759.steps_taken
  }
}

locals {
  code_1761 = (try(local.iter_1760.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1760.code_ptr, local.iter_1760.code_ptr + 2)
    : [null])

  input_1761 = (local.code_1761[0] == ","
    ? substr(local.input_1760, local.code_1761[1], -1)
    : local.input_1760)

  iter_1761 = try(local.iter_1760.code_ptr >= length(var.code), true) ? local.iter_1760 : {
    output = (local.code_1761[0] == "."
      ? "${local.iter_1760.output}${join("", [for _ in range(local.code_1761[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1760.tape[local.iter_1760.tape_ptr]))])}"
      : local.iter_1760.output)
    
    tape = (
      local.code_1761[0] == "+"
        ? [for i, b in local.iter_1760.tape : (i == local.iter_1760.tape_ptr ? (b + local.code_1761[1]) % 256 : b)] :
      local.code_1761[0] == "-"
        ? [for i, b in local.iter_1760.tape : (i == local.iter_1760.tape_ptr ? (b - local.code_1761[1] + 256) % 256 : b)] :
      local.code_1761[0] == ","
        ? [for i, b in local.iter_1760.tape : (i == local.iter_1760.tape_ptr ? local.ascii_lookup[substr(local.input_1761, 0, 1)] : b)]
        : local.iter_1760.tape)

    tape_ptr = (
      local.code_1761[0] == "<"
        ? local.iter_1760.tape_ptr - local.code_1761[1] :
      local.code_1761[0] == ">"
        ? local.iter_1760.tape_ptr + local.code_1761[1]
        : local.iter_1760.tape_ptr)

    code_ptr = 2 + (
      local.code_1761[0] == "["
        ? local.iter_1760.tape[local.iter_1760.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1760.code_ptr)] : local.iter_1760.code_ptr :
      local.code_1761[0] == "]"
        ? local.iter_1760.tape[local.iter_1760.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1760.code_ptr)] : local.iter_1760.code_ptr
        : local.iter_1760.code_ptr)

    steps_taken = 1 + local.iter_1760.steps_taken
  }
}

locals {
  code_1762 = (try(local.iter_1761.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1761.code_ptr, local.iter_1761.code_ptr + 2)
    : [null])

  input_1762 = (local.code_1762[0] == ","
    ? substr(local.input_1761, local.code_1762[1], -1)
    : local.input_1761)

  iter_1762 = try(local.iter_1761.code_ptr >= length(var.code), true) ? local.iter_1761 : {
    output = (local.code_1762[0] == "."
      ? "${local.iter_1761.output}${join("", [for _ in range(local.code_1762[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1761.tape[local.iter_1761.tape_ptr]))])}"
      : local.iter_1761.output)
    
    tape = (
      local.code_1762[0] == "+"
        ? [for i, b in local.iter_1761.tape : (i == local.iter_1761.tape_ptr ? (b + local.code_1762[1]) % 256 : b)] :
      local.code_1762[0] == "-"
        ? [for i, b in local.iter_1761.tape : (i == local.iter_1761.tape_ptr ? (b - local.code_1762[1] + 256) % 256 : b)] :
      local.code_1762[0] == ","
        ? [for i, b in local.iter_1761.tape : (i == local.iter_1761.tape_ptr ? local.ascii_lookup[substr(local.input_1762, 0, 1)] : b)]
        : local.iter_1761.tape)

    tape_ptr = (
      local.code_1762[0] == "<"
        ? local.iter_1761.tape_ptr - local.code_1762[1] :
      local.code_1762[0] == ">"
        ? local.iter_1761.tape_ptr + local.code_1762[1]
        : local.iter_1761.tape_ptr)

    code_ptr = 2 + (
      local.code_1762[0] == "["
        ? local.iter_1761.tape[local.iter_1761.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1761.code_ptr)] : local.iter_1761.code_ptr :
      local.code_1762[0] == "]"
        ? local.iter_1761.tape[local.iter_1761.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1761.code_ptr)] : local.iter_1761.code_ptr
        : local.iter_1761.code_ptr)

    steps_taken = 1 + local.iter_1761.steps_taken
  }
}

locals {
  code_1763 = (try(local.iter_1762.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1762.code_ptr, local.iter_1762.code_ptr + 2)
    : [null])

  input_1763 = (local.code_1763[0] == ","
    ? substr(local.input_1762, local.code_1763[1], -1)
    : local.input_1762)

  iter_1763 = try(local.iter_1762.code_ptr >= length(var.code), true) ? local.iter_1762 : {
    output = (local.code_1763[0] == "."
      ? "${local.iter_1762.output}${join("", [for _ in range(local.code_1763[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1762.tape[local.iter_1762.tape_ptr]))])}"
      : local.iter_1762.output)
    
    tape = (
      local.code_1763[0] == "+"
        ? [for i, b in local.iter_1762.tape : (i == local.iter_1762.tape_ptr ? (b + local.code_1763[1]) % 256 : b)] :
      local.code_1763[0] == "-"
        ? [for i, b in local.iter_1762.tape : (i == local.iter_1762.tape_ptr ? (b - local.code_1763[1] + 256) % 256 : b)] :
      local.code_1763[0] == ","
        ? [for i, b in local.iter_1762.tape : (i == local.iter_1762.tape_ptr ? local.ascii_lookup[substr(local.input_1763, 0, 1)] : b)]
        : local.iter_1762.tape)

    tape_ptr = (
      local.code_1763[0] == "<"
        ? local.iter_1762.tape_ptr - local.code_1763[1] :
      local.code_1763[0] == ">"
        ? local.iter_1762.tape_ptr + local.code_1763[1]
        : local.iter_1762.tape_ptr)

    code_ptr = 2 + (
      local.code_1763[0] == "["
        ? local.iter_1762.tape[local.iter_1762.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1762.code_ptr)] : local.iter_1762.code_ptr :
      local.code_1763[0] == "]"
        ? local.iter_1762.tape[local.iter_1762.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1762.code_ptr)] : local.iter_1762.code_ptr
        : local.iter_1762.code_ptr)

    steps_taken = 1 + local.iter_1762.steps_taken
  }
}

locals {
  code_1764 = (try(local.iter_1763.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1763.code_ptr, local.iter_1763.code_ptr + 2)
    : [null])

  input_1764 = (local.code_1764[0] == ","
    ? substr(local.input_1763, local.code_1764[1], -1)
    : local.input_1763)

  iter_1764 = try(local.iter_1763.code_ptr >= length(var.code), true) ? local.iter_1763 : {
    output = (local.code_1764[0] == "."
      ? "${local.iter_1763.output}${join("", [for _ in range(local.code_1764[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1763.tape[local.iter_1763.tape_ptr]))])}"
      : local.iter_1763.output)
    
    tape = (
      local.code_1764[0] == "+"
        ? [for i, b in local.iter_1763.tape : (i == local.iter_1763.tape_ptr ? (b + local.code_1764[1]) % 256 : b)] :
      local.code_1764[0] == "-"
        ? [for i, b in local.iter_1763.tape : (i == local.iter_1763.tape_ptr ? (b - local.code_1764[1] + 256) % 256 : b)] :
      local.code_1764[0] == ","
        ? [for i, b in local.iter_1763.tape : (i == local.iter_1763.tape_ptr ? local.ascii_lookup[substr(local.input_1764, 0, 1)] : b)]
        : local.iter_1763.tape)

    tape_ptr = (
      local.code_1764[0] == "<"
        ? local.iter_1763.tape_ptr - local.code_1764[1] :
      local.code_1764[0] == ">"
        ? local.iter_1763.tape_ptr + local.code_1764[1]
        : local.iter_1763.tape_ptr)

    code_ptr = 2 + (
      local.code_1764[0] == "["
        ? local.iter_1763.tape[local.iter_1763.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1763.code_ptr)] : local.iter_1763.code_ptr :
      local.code_1764[0] == "]"
        ? local.iter_1763.tape[local.iter_1763.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1763.code_ptr)] : local.iter_1763.code_ptr
        : local.iter_1763.code_ptr)

    steps_taken = 1 + local.iter_1763.steps_taken
  }
}

locals {
  code_1765 = (try(local.iter_1764.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1764.code_ptr, local.iter_1764.code_ptr + 2)
    : [null])

  input_1765 = (local.code_1765[0] == ","
    ? substr(local.input_1764, local.code_1765[1], -1)
    : local.input_1764)

  iter_1765 = try(local.iter_1764.code_ptr >= length(var.code), true) ? local.iter_1764 : {
    output = (local.code_1765[0] == "."
      ? "${local.iter_1764.output}${join("", [for _ in range(local.code_1765[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1764.tape[local.iter_1764.tape_ptr]))])}"
      : local.iter_1764.output)
    
    tape = (
      local.code_1765[0] == "+"
        ? [for i, b in local.iter_1764.tape : (i == local.iter_1764.tape_ptr ? (b + local.code_1765[1]) % 256 : b)] :
      local.code_1765[0] == "-"
        ? [for i, b in local.iter_1764.tape : (i == local.iter_1764.tape_ptr ? (b - local.code_1765[1] + 256) % 256 : b)] :
      local.code_1765[0] == ","
        ? [for i, b in local.iter_1764.tape : (i == local.iter_1764.tape_ptr ? local.ascii_lookup[substr(local.input_1765, 0, 1)] : b)]
        : local.iter_1764.tape)

    tape_ptr = (
      local.code_1765[0] == "<"
        ? local.iter_1764.tape_ptr - local.code_1765[1] :
      local.code_1765[0] == ">"
        ? local.iter_1764.tape_ptr + local.code_1765[1]
        : local.iter_1764.tape_ptr)

    code_ptr = 2 + (
      local.code_1765[0] == "["
        ? local.iter_1764.tape[local.iter_1764.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1764.code_ptr)] : local.iter_1764.code_ptr :
      local.code_1765[0] == "]"
        ? local.iter_1764.tape[local.iter_1764.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1764.code_ptr)] : local.iter_1764.code_ptr
        : local.iter_1764.code_ptr)

    steps_taken = 1 + local.iter_1764.steps_taken
  }
}

locals {
  code_1766 = (try(local.iter_1765.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1765.code_ptr, local.iter_1765.code_ptr + 2)
    : [null])

  input_1766 = (local.code_1766[0] == ","
    ? substr(local.input_1765, local.code_1766[1], -1)
    : local.input_1765)

  iter_1766 = try(local.iter_1765.code_ptr >= length(var.code), true) ? local.iter_1765 : {
    output = (local.code_1766[0] == "."
      ? "${local.iter_1765.output}${join("", [for _ in range(local.code_1766[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1765.tape[local.iter_1765.tape_ptr]))])}"
      : local.iter_1765.output)
    
    tape = (
      local.code_1766[0] == "+"
        ? [for i, b in local.iter_1765.tape : (i == local.iter_1765.tape_ptr ? (b + local.code_1766[1]) % 256 : b)] :
      local.code_1766[0] == "-"
        ? [for i, b in local.iter_1765.tape : (i == local.iter_1765.tape_ptr ? (b - local.code_1766[1] + 256) % 256 : b)] :
      local.code_1766[0] == ","
        ? [for i, b in local.iter_1765.tape : (i == local.iter_1765.tape_ptr ? local.ascii_lookup[substr(local.input_1766, 0, 1)] : b)]
        : local.iter_1765.tape)

    tape_ptr = (
      local.code_1766[0] == "<"
        ? local.iter_1765.tape_ptr - local.code_1766[1] :
      local.code_1766[0] == ">"
        ? local.iter_1765.tape_ptr + local.code_1766[1]
        : local.iter_1765.tape_ptr)

    code_ptr = 2 + (
      local.code_1766[0] == "["
        ? local.iter_1765.tape[local.iter_1765.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1765.code_ptr)] : local.iter_1765.code_ptr :
      local.code_1766[0] == "]"
        ? local.iter_1765.tape[local.iter_1765.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1765.code_ptr)] : local.iter_1765.code_ptr
        : local.iter_1765.code_ptr)

    steps_taken = 1 + local.iter_1765.steps_taken
  }
}

locals {
  code_1767 = (try(local.iter_1766.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1766.code_ptr, local.iter_1766.code_ptr + 2)
    : [null])

  input_1767 = (local.code_1767[0] == ","
    ? substr(local.input_1766, local.code_1767[1], -1)
    : local.input_1766)

  iter_1767 = try(local.iter_1766.code_ptr >= length(var.code), true) ? local.iter_1766 : {
    output = (local.code_1767[0] == "."
      ? "${local.iter_1766.output}${join("", [for _ in range(local.code_1767[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1766.tape[local.iter_1766.tape_ptr]))])}"
      : local.iter_1766.output)
    
    tape = (
      local.code_1767[0] == "+"
        ? [for i, b in local.iter_1766.tape : (i == local.iter_1766.tape_ptr ? (b + local.code_1767[1]) % 256 : b)] :
      local.code_1767[0] == "-"
        ? [for i, b in local.iter_1766.tape : (i == local.iter_1766.tape_ptr ? (b - local.code_1767[1] + 256) % 256 : b)] :
      local.code_1767[0] == ","
        ? [for i, b in local.iter_1766.tape : (i == local.iter_1766.tape_ptr ? local.ascii_lookup[substr(local.input_1767, 0, 1)] : b)]
        : local.iter_1766.tape)

    tape_ptr = (
      local.code_1767[0] == "<"
        ? local.iter_1766.tape_ptr - local.code_1767[1] :
      local.code_1767[0] == ">"
        ? local.iter_1766.tape_ptr + local.code_1767[1]
        : local.iter_1766.tape_ptr)

    code_ptr = 2 + (
      local.code_1767[0] == "["
        ? local.iter_1766.tape[local.iter_1766.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1766.code_ptr)] : local.iter_1766.code_ptr :
      local.code_1767[0] == "]"
        ? local.iter_1766.tape[local.iter_1766.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1766.code_ptr)] : local.iter_1766.code_ptr
        : local.iter_1766.code_ptr)

    steps_taken = 1 + local.iter_1766.steps_taken
  }
}

locals {
  code_1768 = (try(local.iter_1767.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1767.code_ptr, local.iter_1767.code_ptr + 2)
    : [null])

  input_1768 = (local.code_1768[0] == ","
    ? substr(local.input_1767, local.code_1768[1], -1)
    : local.input_1767)

  iter_1768 = try(local.iter_1767.code_ptr >= length(var.code), true) ? local.iter_1767 : {
    output = (local.code_1768[0] == "."
      ? "${local.iter_1767.output}${join("", [for _ in range(local.code_1768[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1767.tape[local.iter_1767.tape_ptr]))])}"
      : local.iter_1767.output)
    
    tape = (
      local.code_1768[0] == "+"
        ? [for i, b in local.iter_1767.tape : (i == local.iter_1767.tape_ptr ? (b + local.code_1768[1]) % 256 : b)] :
      local.code_1768[0] == "-"
        ? [for i, b in local.iter_1767.tape : (i == local.iter_1767.tape_ptr ? (b - local.code_1768[1] + 256) % 256 : b)] :
      local.code_1768[0] == ","
        ? [for i, b in local.iter_1767.tape : (i == local.iter_1767.tape_ptr ? local.ascii_lookup[substr(local.input_1768, 0, 1)] : b)]
        : local.iter_1767.tape)

    tape_ptr = (
      local.code_1768[0] == "<"
        ? local.iter_1767.tape_ptr - local.code_1768[1] :
      local.code_1768[0] == ">"
        ? local.iter_1767.tape_ptr + local.code_1768[1]
        : local.iter_1767.tape_ptr)

    code_ptr = 2 + (
      local.code_1768[0] == "["
        ? local.iter_1767.tape[local.iter_1767.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1767.code_ptr)] : local.iter_1767.code_ptr :
      local.code_1768[0] == "]"
        ? local.iter_1767.tape[local.iter_1767.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1767.code_ptr)] : local.iter_1767.code_ptr
        : local.iter_1767.code_ptr)

    steps_taken = 1 + local.iter_1767.steps_taken
  }
}

locals {
  code_1769 = (try(local.iter_1768.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1768.code_ptr, local.iter_1768.code_ptr + 2)
    : [null])

  input_1769 = (local.code_1769[0] == ","
    ? substr(local.input_1768, local.code_1769[1], -1)
    : local.input_1768)

  iter_1769 = try(local.iter_1768.code_ptr >= length(var.code), true) ? local.iter_1768 : {
    output = (local.code_1769[0] == "."
      ? "${local.iter_1768.output}${join("", [for _ in range(local.code_1769[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1768.tape[local.iter_1768.tape_ptr]))])}"
      : local.iter_1768.output)
    
    tape = (
      local.code_1769[0] == "+"
        ? [for i, b in local.iter_1768.tape : (i == local.iter_1768.tape_ptr ? (b + local.code_1769[1]) % 256 : b)] :
      local.code_1769[0] == "-"
        ? [for i, b in local.iter_1768.tape : (i == local.iter_1768.tape_ptr ? (b - local.code_1769[1] + 256) % 256 : b)] :
      local.code_1769[0] == ","
        ? [for i, b in local.iter_1768.tape : (i == local.iter_1768.tape_ptr ? local.ascii_lookup[substr(local.input_1769, 0, 1)] : b)]
        : local.iter_1768.tape)

    tape_ptr = (
      local.code_1769[0] == "<"
        ? local.iter_1768.tape_ptr - local.code_1769[1] :
      local.code_1769[0] == ">"
        ? local.iter_1768.tape_ptr + local.code_1769[1]
        : local.iter_1768.tape_ptr)

    code_ptr = 2 + (
      local.code_1769[0] == "["
        ? local.iter_1768.tape[local.iter_1768.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1768.code_ptr)] : local.iter_1768.code_ptr :
      local.code_1769[0] == "]"
        ? local.iter_1768.tape[local.iter_1768.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1768.code_ptr)] : local.iter_1768.code_ptr
        : local.iter_1768.code_ptr)

    steps_taken = 1 + local.iter_1768.steps_taken
  }
}

locals {
  code_1770 = (try(local.iter_1769.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1769.code_ptr, local.iter_1769.code_ptr + 2)
    : [null])

  input_1770 = (local.code_1770[0] == ","
    ? substr(local.input_1769, local.code_1770[1], -1)
    : local.input_1769)

  iter_1770 = try(local.iter_1769.code_ptr >= length(var.code), true) ? local.iter_1769 : {
    output = (local.code_1770[0] == "."
      ? "${local.iter_1769.output}${join("", [for _ in range(local.code_1770[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1769.tape[local.iter_1769.tape_ptr]))])}"
      : local.iter_1769.output)
    
    tape = (
      local.code_1770[0] == "+"
        ? [for i, b in local.iter_1769.tape : (i == local.iter_1769.tape_ptr ? (b + local.code_1770[1]) % 256 : b)] :
      local.code_1770[0] == "-"
        ? [for i, b in local.iter_1769.tape : (i == local.iter_1769.tape_ptr ? (b - local.code_1770[1] + 256) % 256 : b)] :
      local.code_1770[0] == ","
        ? [for i, b in local.iter_1769.tape : (i == local.iter_1769.tape_ptr ? local.ascii_lookup[substr(local.input_1770, 0, 1)] : b)]
        : local.iter_1769.tape)

    tape_ptr = (
      local.code_1770[0] == "<"
        ? local.iter_1769.tape_ptr - local.code_1770[1] :
      local.code_1770[0] == ">"
        ? local.iter_1769.tape_ptr + local.code_1770[1]
        : local.iter_1769.tape_ptr)

    code_ptr = 2 + (
      local.code_1770[0] == "["
        ? local.iter_1769.tape[local.iter_1769.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1769.code_ptr)] : local.iter_1769.code_ptr :
      local.code_1770[0] == "]"
        ? local.iter_1769.tape[local.iter_1769.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1769.code_ptr)] : local.iter_1769.code_ptr
        : local.iter_1769.code_ptr)

    steps_taken = 1 + local.iter_1769.steps_taken
  }
}

locals {
  code_1771 = (try(local.iter_1770.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1770.code_ptr, local.iter_1770.code_ptr + 2)
    : [null])

  input_1771 = (local.code_1771[0] == ","
    ? substr(local.input_1770, local.code_1771[1], -1)
    : local.input_1770)

  iter_1771 = try(local.iter_1770.code_ptr >= length(var.code), true) ? local.iter_1770 : {
    output = (local.code_1771[0] == "."
      ? "${local.iter_1770.output}${join("", [for _ in range(local.code_1771[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1770.tape[local.iter_1770.tape_ptr]))])}"
      : local.iter_1770.output)
    
    tape = (
      local.code_1771[0] == "+"
        ? [for i, b in local.iter_1770.tape : (i == local.iter_1770.tape_ptr ? (b + local.code_1771[1]) % 256 : b)] :
      local.code_1771[0] == "-"
        ? [for i, b in local.iter_1770.tape : (i == local.iter_1770.tape_ptr ? (b - local.code_1771[1] + 256) % 256 : b)] :
      local.code_1771[0] == ","
        ? [for i, b in local.iter_1770.tape : (i == local.iter_1770.tape_ptr ? local.ascii_lookup[substr(local.input_1771, 0, 1)] : b)]
        : local.iter_1770.tape)

    tape_ptr = (
      local.code_1771[0] == "<"
        ? local.iter_1770.tape_ptr - local.code_1771[1] :
      local.code_1771[0] == ">"
        ? local.iter_1770.tape_ptr + local.code_1771[1]
        : local.iter_1770.tape_ptr)

    code_ptr = 2 + (
      local.code_1771[0] == "["
        ? local.iter_1770.tape[local.iter_1770.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1770.code_ptr)] : local.iter_1770.code_ptr :
      local.code_1771[0] == "]"
        ? local.iter_1770.tape[local.iter_1770.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1770.code_ptr)] : local.iter_1770.code_ptr
        : local.iter_1770.code_ptr)

    steps_taken = 1 + local.iter_1770.steps_taken
  }
}

locals {
  code_1772 = (try(local.iter_1771.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1771.code_ptr, local.iter_1771.code_ptr + 2)
    : [null])

  input_1772 = (local.code_1772[0] == ","
    ? substr(local.input_1771, local.code_1772[1], -1)
    : local.input_1771)

  iter_1772 = try(local.iter_1771.code_ptr >= length(var.code), true) ? local.iter_1771 : {
    output = (local.code_1772[0] == "."
      ? "${local.iter_1771.output}${join("", [for _ in range(local.code_1772[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1771.tape[local.iter_1771.tape_ptr]))])}"
      : local.iter_1771.output)
    
    tape = (
      local.code_1772[0] == "+"
        ? [for i, b in local.iter_1771.tape : (i == local.iter_1771.tape_ptr ? (b + local.code_1772[1]) % 256 : b)] :
      local.code_1772[0] == "-"
        ? [for i, b in local.iter_1771.tape : (i == local.iter_1771.tape_ptr ? (b - local.code_1772[1] + 256) % 256 : b)] :
      local.code_1772[0] == ","
        ? [for i, b in local.iter_1771.tape : (i == local.iter_1771.tape_ptr ? local.ascii_lookup[substr(local.input_1772, 0, 1)] : b)]
        : local.iter_1771.tape)

    tape_ptr = (
      local.code_1772[0] == "<"
        ? local.iter_1771.tape_ptr - local.code_1772[1] :
      local.code_1772[0] == ">"
        ? local.iter_1771.tape_ptr + local.code_1772[1]
        : local.iter_1771.tape_ptr)

    code_ptr = 2 + (
      local.code_1772[0] == "["
        ? local.iter_1771.tape[local.iter_1771.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1771.code_ptr)] : local.iter_1771.code_ptr :
      local.code_1772[0] == "]"
        ? local.iter_1771.tape[local.iter_1771.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1771.code_ptr)] : local.iter_1771.code_ptr
        : local.iter_1771.code_ptr)

    steps_taken = 1 + local.iter_1771.steps_taken
  }
}

locals {
  code_1773 = (try(local.iter_1772.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1772.code_ptr, local.iter_1772.code_ptr + 2)
    : [null])

  input_1773 = (local.code_1773[0] == ","
    ? substr(local.input_1772, local.code_1773[1], -1)
    : local.input_1772)

  iter_1773 = try(local.iter_1772.code_ptr >= length(var.code), true) ? local.iter_1772 : {
    output = (local.code_1773[0] == "."
      ? "${local.iter_1772.output}${join("", [for _ in range(local.code_1773[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1772.tape[local.iter_1772.tape_ptr]))])}"
      : local.iter_1772.output)
    
    tape = (
      local.code_1773[0] == "+"
        ? [for i, b in local.iter_1772.tape : (i == local.iter_1772.tape_ptr ? (b + local.code_1773[1]) % 256 : b)] :
      local.code_1773[0] == "-"
        ? [for i, b in local.iter_1772.tape : (i == local.iter_1772.tape_ptr ? (b - local.code_1773[1] + 256) % 256 : b)] :
      local.code_1773[0] == ","
        ? [for i, b in local.iter_1772.tape : (i == local.iter_1772.tape_ptr ? local.ascii_lookup[substr(local.input_1773, 0, 1)] : b)]
        : local.iter_1772.tape)

    tape_ptr = (
      local.code_1773[0] == "<"
        ? local.iter_1772.tape_ptr - local.code_1773[1] :
      local.code_1773[0] == ">"
        ? local.iter_1772.tape_ptr + local.code_1773[1]
        : local.iter_1772.tape_ptr)

    code_ptr = 2 + (
      local.code_1773[0] == "["
        ? local.iter_1772.tape[local.iter_1772.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1772.code_ptr)] : local.iter_1772.code_ptr :
      local.code_1773[0] == "]"
        ? local.iter_1772.tape[local.iter_1772.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1772.code_ptr)] : local.iter_1772.code_ptr
        : local.iter_1772.code_ptr)

    steps_taken = 1 + local.iter_1772.steps_taken
  }
}

locals {
  code_1774 = (try(local.iter_1773.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1773.code_ptr, local.iter_1773.code_ptr + 2)
    : [null])

  input_1774 = (local.code_1774[0] == ","
    ? substr(local.input_1773, local.code_1774[1], -1)
    : local.input_1773)

  iter_1774 = try(local.iter_1773.code_ptr >= length(var.code), true) ? local.iter_1773 : {
    output = (local.code_1774[0] == "."
      ? "${local.iter_1773.output}${join("", [for _ in range(local.code_1774[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1773.tape[local.iter_1773.tape_ptr]))])}"
      : local.iter_1773.output)
    
    tape = (
      local.code_1774[0] == "+"
        ? [for i, b in local.iter_1773.tape : (i == local.iter_1773.tape_ptr ? (b + local.code_1774[1]) % 256 : b)] :
      local.code_1774[0] == "-"
        ? [for i, b in local.iter_1773.tape : (i == local.iter_1773.tape_ptr ? (b - local.code_1774[1] + 256) % 256 : b)] :
      local.code_1774[0] == ","
        ? [for i, b in local.iter_1773.tape : (i == local.iter_1773.tape_ptr ? local.ascii_lookup[substr(local.input_1774, 0, 1)] : b)]
        : local.iter_1773.tape)

    tape_ptr = (
      local.code_1774[0] == "<"
        ? local.iter_1773.tape_ptr - local.code_1774[1] :
      local.code_1774[0] == ">"
        ? local.iter_1773.tape_ptr + local.code_1774[1]
        : local.iter_1773.tape_ptr)

    code_ptr = 2 + (
      local.code_1774[0] == "["
        ? local.iter_1773.tape[local.iter_1773.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1773.code_ptr)] : local.iter_1773.code_ptr :
      local.code_1774[0] == "]"
        ? local.iter_1773.tape[local.iter_1773.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1773.code_ptr)] : local.iter_1773.code_ptr
        : local.iter_1773.code_ptr)

    steps_taken = 1 + local.iter_1773.steps_taken
  }
}

locals {
  code_1775 = (try(local.iter_1774.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1774.code_ptr, local.iter_1774.code_ptr + 2)
    : [null])

  input_1775 = (local.code_1775[0] == ","
    ? substr(local.input_1774, local.code_1775[1], -1)
    : local.input_1774)

  iter_1775 = try(local.iter_1774.code_ptr >= length(var.code), true) ? local.iter_1774 : {
    output = (local.code_1775[0] == "."
      ? "${local.iter_1774.output}${join("", [for _ in range(local.code_1775[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1774.tape[local.iter_1774.tape_ptr]))])}"
      : local.iter_1774.output)
    
    tape = (
      local.code_1775[0] == "+"
        ? [for i, b in local.iter_1774.tape : (i == local.iter_1774.tape_ptr ? (b + local.code_1775[1]) % 256 : b)] :
      local.code_1775[0] == "-"
        ? [for i, b in local.iter_1774.tape : (i == local.iter_1774.tape_ptr ? (b - local.code_1775[1] + 256) % 256 : b)] :
      local.code_1775[0] == ","
        ? [for i, b in local.iter_1774.tape : (i == local.iter_1774.tape_ptr ? local.ascii_lookup[substr(local.input_1775, 0, 1)] : b)]
        : local.iter_1774.tape)

    tape_ptr = (
      local.code_1775[0] == "<"
        ? local.iter_1774.tape_ptr - local.code_1775[1] :
      local.code_1775[0] == ">"
        ? local.iter_1774.tape_ptr + local.code_1775[1]
        : local.iter_1774.tape_ptr)

    code_ptr = 2 + (
      local.code_1775[0] == "["
        ? local.iter_1774.tape[local.iter_1774.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1774.code_ptr)] : local.iter_1774.code_ptr :
      local.code_1775[0] == "]"
        ? local.iter_1774.tape[local.iter_1774.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1774.code_ptr)] : local.iter_1774.code_ptr
        : local.iter_1774.code_ptr)

    steps_taken = 1 + local.iter_1774.steps_taken
  }
}

locals {
  code_1776 = (try(local.iter_1775.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1775.code_ptr, local.iter_1775.code_ptr + 2)
    : [null])

  input_1776 = (local.code_1776[0] == ","
    ? substr(local.input_1775, local.code_1776[1], -1)
    : local.input_1775)

  iter_1776 = try(local.iter_1775.code_ptr >= length(var.code), true) ? local.iter_1775 : {
    output = (local.code_1776[0] == "."
      ? "${local.iter_1775.output}${join("", [for _ in range(local.code_1776[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1775.tape[local.iter_1775.tape_ptr]))])}"
      : local.iter_1775.output)
    
    tape = (
      local.code_1776[0] == "+"
        ? [for i, b in local.iter_1775.tape : (i == local.iter_1775.tape_ptr ? (b + local.code_1776[1]) % 256 : b)] :
      local.code_1776[0] == "-"
        ? [for i, b in local.iter_1775.tape : (i == local.iter_1775.tape_ptr ? (b - local.code_1776[1] + 256) % 256 : b)] :
      local.code_1776[0] == ","
        ? [for i, b in local.iter_1775.tape : (i == local.iter_1775.tape_ptr ? local.ascii_lookup[substr(local.input_1776, 0, 1)] : b)]
        : local.iter_1775.tape)

    tape_ptr = (
      local.code_1776[0] == "<"
        ? local.iter_1775.tape_ptr - local.code_1776[1] :
      local.code_1776[0] == ">"
        ? local.iter_1775.tape_ptr + local.code_1776[1]
        : local.iter_1775.tape_ptr)

    code_ptr = 2 + (
      local.code_1776[0] == "["
        ? local.iter_1775.tape[local.iter_1775.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1775.code_ptr)] : local.iter_1775.code_ptr :
      local.code_1776[0] == "]"
        ? local.iter_1775.tape[local.iter_1775.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1775.code_ptr)] : local.iter_1775.code_ptr
        : local.iter_1775.code_ptr)

    steps_taken = 1 + local.iter_1775.steps_taken
  }
}

locals {
  code_1777 = (try(local.iter_1776.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1776.code_ptr, local.iter_1776.code_ptr + 2)
    : [null])

  input_1777 = (local.code_1777[0] == ","
    ? substr(local.input_1776, local.code_1777[1], -1)
    : local.input_1776)

  iter_1777 = try(local.iter_1776.code_ptr >= length(var.code), true) ? local.iter_1776 : {
    output = (local.code_1777[0] == "."
      ? "${local.iter_1776.output}${join("", [for _ in range(local.code_1777[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1776.tape[local.iter_1776.tape_ptr]))])}"
      : local.iter_1776.output)
    
    tape = (
      local.code_1777[0] == "+"
        ? [for i, b in local.iter_1776.tape : (i == local.iter_1776.tape_ptr ? (b + local.code_1777[1]) % 256 : b)] :
      local.code_1777[0] == "-"
        ? [for i, b in local.iter_1776.tape : (i == local.iter_1776.tape_ptr ? (b - local.code_1777[1] + 256) % 256 : b)] :
      local.code_1777[0] == ","
        ? [for i, b in local.iter_1776.tape : (i == local.iter_1776.tape_ptr ? local.ascii_lookup[substr(local.input_1777, 0, 1)] : b)]
        : local.iter_1776.tape)

    tape_ptr = (
      local.code_1777[0] == "<"
        ? local.iter_1776.tape_ptr - local.code_1777[1] :
      local.code_1777[0] == ">"
        ? local.iter_1776.tape_ptr + local.code_1777[1]
        : local.iter_1776.tape_ptr)

    code_ptr = 2 + (
      local.code_1777[0] == "["
        ? local.iter_1776.tape[local.iter_1776.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1776.code_ptr)] : local.iter_1776.code_ptr :
      local.code_1777[0] == "]"
        ? local.iter_1776.tape[local.iter_1776.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1776.code_ptr)] : local.iter_1776.code_ptr
        : local.iter_1776.code_ptr)

    steps_taken = 1 + local.iter_1776.steps_taken
  }
}

locals {
  code_1778 = (try(local.iter_1777.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1777.code_ptr, local.iter_1777.code_ptr + 2)
    : [null])

  input_1778 = (local.code_1778[0] == ","
    ? substr(local.input_1777, local.code_1778[1], -1)
    : local.input_1777)

  iter_1778 = try(local.iter_1777.code_ptr >= length(var.code), true) ? local.iter_1777 : {
    output = (local.code_1778[0] == "."
      ? "${local.iter_1777.output}${join("", [for _ in range(local.code_1778[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1777.tape[local.iter_1777.tape_ptr]))])}"
      : local.iter_1777.output)
    
    tape = (
      local.code_1778[0] == "+"
        ? [for i, b in local.iter_1777.tape : (i == local.iter_1777.tape_ptr ? (b + local.code_1778[1]) % 256 : b)] :
      local.code_1778[0] == "-"
        ? [for i, b in local.iter_1777.tape : (i == local.iter_1777.tape_ptr ? (b - local.code_1778[1] + 256) % 256 : b)] :
      local.code_1778[0] == ","
        ? [for i, b in local.iter_1777.tape : (i == local.iter_1777.tape_ptr ? local.ascii_lookup[substr(local.input_1778, 0, 1)] : b)]
        : local.iter_1777.tape)

    tape_ptr = (
      local.code_1778[0] == "<"
        ? local.iter_1777.tape_ptr - local.code_1778[1] :
      local.code_1778[0] == ">"
        ? local.iter_1777.tape_ptr + local.code_1778[1]
        : local.iter_1777.tape_ptr)

    code_ptr = 2 + (
      local.code_1778[0] == "["
        ? local.iter_1777.tape[local.iter_1777.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1777.code_ptr)] : local.iter_1777.code_ptr :
      local.code_1778[0] == "]"
        ? local.iter_1777.tape[local.iter_1777.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1777.code_ptr)] : local.iter_1777.code_ptr
        : local.iter_1777.code_ptr)

    steps_taken = 1 + local.iter_1777.steps_taken
  }
}

locals {
  code_1779 = (try(local.iter_1778.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1778.code_ptr, local.iter_1778.code_ptr + 2)
    : [null])

  input_1779 = (local.code_1779[0] == ","
    ? substr(local.input_1778, local.code_1779[1], -1)
    : local.input_1778)

  iter_1779 = try(local.iter_1778.code_ptr >= length(var.code), true) ? local.iter_1778 : {
    output = (local.code_1779[0] == "."
      ? "${local.iter_1778.output}${join("", [for _ in range(local.code_1779[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1778.tape[local.iter_1778.tape_ptr]))])}"
      : local.iter_1778.output)
    
    tape = (
      local.code_1779[0] == "+"
        ? [for i, b in local.iter_1778.tape : (i == local.iter_1778.tape_ptr ? (b + local.code_1779[1]) % 256 : b)] :
      local.code_1779[0] == "-"
        ? [for i, b in local.iter_1778.tape : (i == local.iter_1778.tape_ptr ? (b - local.code_1779[1] + 256) % 256 : b)] :
      local.code_1779[0] == ","
        ? [for i, b in local.iter_1778.tape : (i == local.iter_1778.tape_ptr ? local.ascii_lookup[substr(local.input_1779, 0, 1)] : b)]
        : local.iter_1778.tape)

    tape_ptr = (
      local.code_1779[0] == "<"
        ? local.iter_1778.tape_ptr - local.code_1779[1] :
      local.code_1779[0] == ">"
        ? local.iter_1778.tape_ptr + local.code_1779[1]
        : local.iter_1778.tape_ptr)

    code_ptr = 2 + (
      local.code_1779[0] == "["
        ? local.iter_1778.tape[local.iter_1778.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1778.code_ptr)] : local.iter_1778.code_ptr :
      local.code_1779[0] == "]"
        ? local.iter_1778.tape[local.iter_1778.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1778.code_ptr)] : local.iter_1778.code_ptr
        : local.iter_1778.code_ptr)

    steps_taken = 1 + local.iter_1778.steps_taken
  }
}

locals {
  code_1780 = (try(local.iter_1779.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1779.code_ptr, local.iter_1779.code_ptr + 2)
    : [null])

  input_1780 = (local.code_1780[0] == ","
    ? substr(local.input_1779, local.code_1780[1], -1)
    : local.input_1779)

  iter_1780 = try(local.iter_1779.code_ptr >= length(var.code), true) ? local.iter_1779 : {
    output = (local.code_1780[0] == "."
      ? "${local.iter_1779.output}${join("", [for _ in range(local.code_1780[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1779.tape[local.iter_1779.tape_ptr]))])}"
      : local.iter_1779.output)
    
    tape = (
      local.code_1780[0] == "+"
        ? [for i, b in local.iter_1779.tape : (i == local.iter_1779.tape_ptr ? (b + local.code_1780[1]) % 256 : b)] :
      local.code_1780[0] == "-"
        ? [for i, b in local.iter_1779.tape : (i == local.iter_1779.tape_ptr ? (b - local.code_1780[1] + 256) % 256 : b)] :
      local.code_1780[0] == ","
        ? [for i, b in local.iter_1779.tape : (i == local.iter_1779.tape_ptr ? local.ascii_lookup[substr(local.input_1780, 0, 1)] : b)]
        : local.iter_1779.tape)

    tape_ptr = (
      local.code_1780[0] == "<"
        ? local.iter_1779.tape_ptr - local.code_1780[1] :
      local.code_1780[0] == ">"
        ? local.iter_1779.tape_ptr + local.code_1780[1]
        : local.iter_1779.tape_ptr)

    code_ptr = 2 + (
      local.code_1780[0] == "["
        ? local.iter_1779.tape[local.iter_1779.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1779.code_ptr)] : local.iter_1779.code_ptr :
      local.code_1780[0] == "]"
        ? local.iter_1779.tape[local.iter_1779.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1779.code_ptr)] : local.iter_1779.code_ptr
        : local.iter_1779.code_ptr)

    steps_taken = 1 + local.iter_1779.steps_taken
  }
}

locals {
  code_1781 = (try(local.iter_1780.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1780.code_ptr, local.iter_1780.code_ptr + 2)
    : [null])

  input_1781 = (local.code_1781[0] == ","
    ? substr(local.input_1780, local.code_1781[1], -1)
    : local.input_1780)

  iter_1781 = try(local.iter_1780.code_ptr >= length(var.code), true) ? local.iter_1780 : {
    output = (local.code_1781[0] == "."
      ? "${local.iter_1780.output}${join("", [for _ in range(local.code_1781[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1780.tape[local.iter_1780.tape_ptr]))])}"
      : local.iter_1780.output)
    
    tape = (
      local.code_1781[0] == "+"
        ? [for i, b in local.iter_1780.tape : (i == local.iter_1780.tape_ptr ? (b + local.code_1781[1]) % 256 : b)] :
      local.code_1781[0] == "-"
        ? [for i, b in local.iter_1780.tape : (i == local.iter_1780.tape_ptr ? (b - local.code_1781[1] + 256) % 256 : b)] :
      local.code_1781[0] == ","
        ? [for i, b in local.iter_1780.tape : (i == local.iter_1780.tape_ptr ? local.ascii_lookup[substr(local.input_1781, 0, 1)] : b)]
        : local.iter_1780.tape)

    tape_ptr = (
      local.code_1781[0] == "<"
        ? local.iter_1780.tape_ptr - local.code_1781[1] :
      local.code_1781[0] == ">"
        ? local.iter_1780.tape_ptr + local.code_1781[1]
        : local.iter_1780.tape_ptr)

    code_ptr = 2 + (
      local.code_1781[0] == "["
        ? local.iter_1780.tape[local.iter_1780.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1780.code_ptr)] : local.iter_1780.code_ptr :
      local.code_1781[0] == "]"
        ? local.iter_1780.tape[local.iter_1780.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1780.code_ptr)] : local.iter_1780.code_ptr
        : local.iter_1780.code_ptr)

    steps_taken = 1 + local.iter_1780.steps_taken
  }
}

locals {
  code_1782 = (try(local.iter_1781.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1781.code_ptr, local.iter_1781.code_ptr + 2)
    : [null])

  input_1782 = (local.code_1782[0] == ","
    ? substr(local.input_1781, local.code_1782[1], -1)
    : local.input_1781)

  iter_1782 = try(local.iter_1781.code_ptr >= length(var.code), true) ? local.iter_1781 : {
    output = (local.code_1782[0] == "."
      ? "${local.iter_1781.output}${join("", [for _ in range(local.code_1782[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1781.tape[local.iter_1781.tape_ptr]))])}"
      : local.iter_1781.output)
    
    tape = (
      local.code_1782[0] == "+"
        ? [for i, b in local.iter_1781.tape : (i == local.iter_1781.tape_ptr ? (b + local.code_1782[1]) % 256 : b)] :
      local.code_1782[0] == "-"
        ? [for i, b in local.iter_1781.tape : (i == local.iter_1781.tape_ptr ? (b - local.code_1782[1] + 256) % 256 : b)] :
      local.code_1782[0] == ","
        ? [for i, b in local.iter_1781.tape : (i == local.iter_1781.tape_ptr ? local.ascii_lookup[substr(local.input_1782, 0, 1)] : b)]
        : local.iter_1781.tape)

    tape_ptr = (
      local.code_1782[0] == "<"
        ? local.iter_1781.tape_ptr - local.code_1782[1] :
      local.code_1782[0] == ">"
        ? local.iter_1781.tape_ptr + local.code_1782[1]
        : local.iter_1781.tape_ptr)

    code_ptr = 2 + (
      local.code_1782[0] == "["
        ? local.iter_1781.tape[local.iter_1781.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1781.code_ptr)] : local.iter_1781.code_ptr :
      local.code_1782[0] == "]"
        ? local.iter_1781.tape[local.iter_1781.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1781.code_ptr)] : local.iter_1781.code_ptr
        : local.iter_1781.code_ptr)

    steps_taken = 1 + local.iter_1781.steps_taken
  }
}

locals {
  code_1783 = (try(local.iter_1782.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1782.code_ptr, local.iter_1782.code_ptr + 2)
    : [null])

  input_1783 = (local.code_1783[0] == ","
    ? substr(local.input_1782, local.code_1783[1], -1)
    : local.input_1782)

  iter_1783 = try(local.iter_1782.code_ptr >= length(var.code), true) ? local.iter_1782 : {
    output = (local.code_1783[0] == "."
      ? "${local.iter_1782.output}${join("", [for _ in range(local.code_1783[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1782.tape[local.iter_1782.tape_ptr]))])}"
      : local.iter_1782.output)
    
    tape = (
      local.code_1783[0] == "+"
        ? [for i, b in local.iter_1782.tape : (i == local.iter_1782.tape_ptr ? (b + local.code_1783[1]) % 256 : b)] :
      local.code_1783[0] == "-"
        ? [for i, b in local.iter_1782.tape : (i == local.iter_1782.tape_ptr ? (b - local.code_1783[1] + 256) % 256 : b)] :
      local.code_1783[0] == ","
        ? [for i, b in local.iter_1782.tape : (i == local.iter_1782.tape_ptr ? local.ascii_lookup[substr(local.input_1783, 0, 1)] : b)]
        : local.iter_1782.tape)

    tape_ptr = (
      local.code_1783[0] == "<"
        ? local.iter_1782.tape_ptr - local.code_1783[1] :
      local.code_1783[0] == ">"
        ? local.iter_1782.tape_ptr + local.code_1783[1]
        : local.iter_1782.tape_ptr)

    code_ptr = 2 + (
      local.code_1783[0] == "["
        ? local.iter_1782.tape[local.iter_1782.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1782.code_ptr)] : local.iter_1782.code_ptr :
      local.code_1783[0] == "]"
        ? local.iter_1782.tape[local.iter_1782.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1782.code_ptr)] : local.iter_1782.code_ptr
        : local.iter_1782.code_ptr)

    steps_taken = 1 + local.iter_1782.steps_taken
  }
}

locals {
  code_1784 = (try(local.iter_1783.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1783.code_ptr, local.iter_1783.code_ptr + 2)
    : [null])

  input_1784 = (local.code_1784[0] == ","
    ? substr(local.input_1783, local.code_1784[1], -1)
    : local.input_1783)

  iter_1784 = try(local.iter_1783.code_ptr >= length(var.code), true) ? local.iter_1783 : {
    output = (local.code_1784[0] == "."
      ? "${local.iter_1783.output}${join("", [for _ in range(local.code_1784[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1783.tape[local.iter_1783.tape_ptr]))])}"
      : local.iter_1783.output)
    
    tape = (
      local.code_1784[0] == "+"
        ? [for i, b in local.iter_1783.tape : (i == local.iter_1783.tape_ptr ? (b + local.code_1784[1]) % 256 : b)] :
      local.code_1784[0] == "-"
        ? [for i, b in local.iter_1783.tape : (i == local.iter_1783.tape_ptr ? (b - local.code_1784[1] + 256) % 256 : b)] :
      local.code_1784[0] == ","
        ? [for i, b in local.iter_1783.tape : (i == local.iter_1783.tape_ptr ? local.ascii_lookup[substr(local.input_1784, 0, 1)] : b)]
        : local.iter_1783.tape)

    tape_ptr = (
      local.code_1784[0] == "<"
        ? local.iter_1783.tape_ptr - local.code_1784[1] :
      local.code_1784[0] == ">"
        ? local.iter_1783.tape_ptr + local.code_1784[1]
        : local.iter_1783.tape_ptr)

    code_ptr = 2 + (
      local.code_1784[0] == "["
        ? local.iter_1783.tape[local.iter_1783.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1783.code_ptr)] : local.iter_1783.code_ptr :
      local.code_1784[0] == "]"
        ? local.iter_1783.tape[local.iter_1783.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1783.code_ptr)] : local.iter_1783.code_ptr
        : local.iter_1783.code_ptr)

    steps_taken = 1 + local.iter_1783.steps_taken
  }
}

locals {
  code_1785 = (try(local.iter_1784.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1784.code_ptr, local.iter_1784.code_ptr + 2)
    : [null])

  input_1785 = (local.code_1785[0] == ","
    ? substr(local.input_1784, local.code_1785[1], -1)
    : local.input_1784)

  iter_1785 = try(local.iter_1784.code_ptr >= length(var.code), true) ? local.iter_1784 : {
    output = (local.code_1785[0] == "."
      ? "${local.iter_1784.output}${join("", [for _ in range(local.code_1785[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1784.tape[local.iter_1784.tape_ptr]))])}"
      : local.iter_1784.output)
    
    tape = (
      local.code_1785[0] == "+"
        ? [for i, b in local.iter_1784.tape : (i == local.iter_1784.tape_ptr ? (b + local.code_1785[1]) % 256 : b)] :
      local.code_1785[0] == "-"
        ? [for i, b in local.iter_1784.tape : (i == local.iter_1784.tape_ptr ? (b - local.code_1785[1] + 256) % 256 : b)] :
      local.code_1785[0] == ","
        ? [for i, b in local.iter_1784.tape : (i == local.iter_1784.tape_ptr ? local.ascii_lookup[substr(local.input_1785, 0, 1)] : b)]
        : local.iter_1784.tape)

    tape_ptr = (
      local.code_1785[0] == "<"
        ? local.iter_1784.tape_ptr - local.code_1785[1] :
      local.code_1785[0] == ">"
        ? local.iter_1784.tape_ptr + local.code_1785[1]
        : local.iter_1784.tape_ptr)

    code_ptr = 2 + (
      local.code_1785[0] == "["
        ? local.iter_1784.tape[local.iter_1784.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1784.code_ptr)] : local.iter_1784.code_ptr :
      local.code_1785[0] == "]"
        ? local.iter_1784.tape[local.iter_1784.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1784.code_ptr)] : local.iter_1784.code_ptr
        : local.iter_1784.code_ptr)

    steps_taken = 1 + local.iter_1784.steps_taken
  }
}

locals {
  code_1786 = (try(local.iter_1785.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1785.code_ptr, local.iter_1785.code_ptr + 2)
    : [null])

  input_1786 = (local.code_1786[0] == ","
    ? substr(local.input_1785, local.code_1786[1], -1)
    : local.input_1785)

  iter_1786 = try(local.iter_1785.code_ptr >= length(var.code), true) ? local.iter_1785 : {
    output = (local.code_1786[0] == "."
      ? "${local.iter_1785.output}${join("", [for _ in range(local.code_1786[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1785.tape[local.iter_1785.tape_ptr]))])}"
      : local.iter_1785.output)
    
    tape = (
      local.code_1786[0] == "+"
        ? [for i, b in local.iter_1785.tape : (i == local.iter_1785.tape_ptr ? (b + local.code_1786[1]) % 256 : b)] :
      local.code_1786[0] == "-"
        ? [for i, b in local.iter_1785.tape : (i == local.iter_1785.tape_ptr ? (b - local.code_1786[1] + 256) % 256 : b)] :
      local.code_1786[0] == ","
        ? [for i, b in local.iter_1785.tape : (i == local.iter_1785.tape_ptr ? local.ascii_lookup[substr(local.input_1786, 0, 1)] : b)]
        : local.iter_1785.tape)

    tape_ptr = (
      local.code_1786[0] == "<"
        ? local.iter_1785.tape_ptr - local.code_1786[1] :
      local.code_1786[0] == ">"
        ? local.iter_1785.tape_ptr + local.code_1786[1]
        : local.iter_1785.tape_ptr)

    code_ptr = 2 + (
      local.code_1786[0] == "["
        ? local.iter_1785.tape[local.iter_1785.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1785.code_ptr)] : local.iter_1785.code_ptr :
      local.code_1786[0] == "]"
        ? local.iter_1785.tape[local.iter_1785.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1785.code_ptr)] : local.iter_1785.code_ptr
        : local.iter_1785.code_ptr)

    steps_taken = 1 + local.iter_1785.steps_taken
  }
}

locals {
  code_1787 = (try(local.iter_1786.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1786.code_ptr, local.iter_1786.code_ptr + 2)
    : [null])

  input_1787 = (local.code_1787[0] == ","
    ? substr(local.input_1786, local.code_1787[1], -1)
    : local.input_1786)

  iter_1787 = try(local.iter_1786.code_ptr >= length(var.code), true) ? local.iter_1786 : {
    output = (local.code_1787[0] == "."
      ? "${local.iter_1786.output}${join("", [for _ in range(local.code_1787[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1786.tape[local.iter_1786.tape_ptr]))])}"
      : local.iter_1786.output)
    
    tape = (
      local.code_1787[0] == "+"
        ? [for i, b in local.iter_1786.tape : (i == local.iter_1786.tape_ptr ? (b + local.code_1787[1]) % 256 : b)] :
      local.code_1787[0] == "-"
        ? [for i, b in local.iter_1786.tape : (i == local.iter_1786.tape_ptr ? (b - local.code_1787[1] + 256) % 256 : b)] :
      local.code_1787[0] == ","
        ? [for i, b in local.iter_1786.tape : (i == local.iter_1786.tape_ptr ? local.ascii_lookup[substr(local.input_1787, 0, 1)] : b)]
        : local.iter_1786.tape)

    tape_ptr = (
      local.code_1787[0] == "<"
        ? local.iter_1786.tape_ptr - local.code_1787[1] :
      local.code_1787[0] == ">"
        ? local.iter_1786.tape_ptr + local.code_1787[1]
        : local.iter_1786.tape_ptr)

    code_ptr = 2 + (
      local.code_1787[0] == "["
        ? local.iter_1786.tape[local.iter_1786.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1786.code_ptr)] : local.iter_1786.code_ptr :
      local.code_1787[0] == "]"
        ? local.iter_1786.tape[local.iter_1786.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1786.code_ptr)] : local.iter_1786.code_ptr
        : local.iter_1786.code_ptr)

    steps_taken = 1 + local.iter_1786.steps_taken
  }
}

locals {
  code_1788 = (try(local.iter_1787.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1787.code_ptr, local.iter_1787.code_ptr + 2)
    : [null])

  input_1788 = (local.code_1788[0] == ","
    ? substr(local.input_1787, local.code_1788[1], -1)
    : local.input_1787)

  iter_1788 = try(local.iter_1787.code_ptr >= length(var.code), true) ? local.iter_1787 : {
    output = (local.code_1788[0] == "."
      ? "${local.iter_1787.output}${join("", [for _ in range(local.code_1788[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1787.tape[local.iter_1787.tape_ptr]))])}"
      : local.iter_1787.output)
    
    tape = (
      local.code_1788[0] == "+"
        ? [for i, b in local.iter_1787.tape : (i == local.iter_1787.tape_ptr ? (b + local.code_1788[1]) % 256 : b)] :
      local.code_1788[0] == "-"
        ? [for i, b in local.iter_1787.tape : (i == local.iter_1787.tape_ptr ? (b - local.code_1788[1] + 256) % 256 : b)] :
      local.code_1788[0] == ","
        ? [for i, b in local.iter_1787.tape : (i == local.iter_1787.tape_ptr ? local.ascii_lookup[substr(local.input_1788, 0, 1)] : b)]
        : local.iter_1787.tape)

    tape_ptr = (
      local.code_1788[0] == "<"
        ? local.iter_1787.tape_ptr - local.code_1788[1] :
      local.code_1788[0] == ">"
        ? local.iter_1787.tape_ptr + local.code_1788[1]
        : local.iter_1787.tape_ptr)

    code_ptr = 2 + (
      local.code_1788[0] == "["
        ? local.iter_1787.tape[local.iter_1787.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1787.code_ptr)] : local.iter_1787.code_ptr :
      local.code_1788[0] == "]"
        ? local.iter_1787.tape[local.iter_1787.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1787.code_ptr)] : local.iter_1787.code_ptr
        : local.iter_1787.code_ptr)

    steps_taken = 1 + local.iter_1787.steps_taken
  }
}

locals {
  code_1789 = (try(local.iter_1788.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1788.code_ptr, local.iter_1788.code_ptr + 2)
    : [null])

  input_1789 = (local.code_1789[0] == ","
    ? substr(local.input_1788, local.code_1789[1], -1)
    : local.input_1788)

  iter_1789 = try(local.iter_1788.code_ptr >= length(var.code), true) ? local.iter_1788 : {
    output = (local.code_1789[0] == "."
      ? "${local.iter_1788.output}${join("", [for _ in range(local.code_1789[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1788.tape[local.iter_1788.tape_ptr]))])}"
      : local.iter_1788.output)
    
    tape = (
      local.code_1789[0] == "+"
        ? [for i, b in local.iter_1788.tape : (i == local.iter_1788.tape_ptr ? (b + local.code_1789[1]) % 256 : b)] :
      local.code_1789[0] == "-"
        ? [for i, b in local.iter_1788.tape : (i == local.iter_1788.tape_ptr ? (b - local.code_1789[1] + 256) % 256 : b)] :
      local.code_1789[0] == ","
        ? [for i, b in local.iter_1788.tape : (i == local.iter_1788.tape_ptr ? local.ascii_lookup[substr(local.input_1789, 0, 1)] : b)]
        : local.iter_1788.tape)

    tape_ptr = (
      local.code_1789[0] == "<"
        ? local.iter_1788.tape_ptr - local.code_1789[1] :
      local.code_1789[0] == ">"
        ? local.iter_1788.tape_ptr + local.code_1789[1]
        : local.iter_1788.tape_ptr)

    code_ptr = 2 + (
      local.code_1789[0] == "["
        ? local.iter_1788.tape[local.iter_1788.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1788.code_ptr)] : local.iter_1788.code_ptr :
      local.code_1789[0] == "]"
        ? local.iter_1788.tape[local.iter_1788.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1788.code_ptr)] : local.iter_1788.code_ptr
        : local.iter_1788.code_ptr)

    steps_taken = 1 + local.iter_1788.steps_taken
  }
}

locals {
  code_1790 = (try(local.iter_1789.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1789.code_ptr, local.iter_1789.code_ptr + 2)
    : [null])

  input_1790 = (local.code_1790[0] == ","
    ? substr(local.input_1789, local.code_1790[1], -1)
    : local.input_1789)

  iter_1790 = try(local.iter_1789.code_ptr >= length(var.code), true) ? local.iter_1789 : {
    output = (local.code_1790[0] == "."
      ? "${local.iter_1789.output}${join("", [for _ in range(local.code_1790[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1789.tape[local.iter_1789.tape_ptr]))])}"
      : local.iter_1789.output)
    
    tape = (
      local.code_1790[0] == "+"
        ? [for i, b in local.iter_1789.tape : (i == local.iter_1789.tape_ptr ? (b + local.code_1790[1]) % 256 : b)] :
      local.code_1790[0] == "-"
        ? [for i, b in local.iter_1789.tape : (i == local.iter_1789.tape_ptr ? (b - local.code_1790[1] + 256) % 256 : b)] :
      local.code_1790[0] == ","
        ? [for i, b in local.iter_1789.tape : (i == local.iter_1789.tape_ptr ? local.ascii_lookup[substr(local.input_1790, 0, 1)] : b)]
        : local.iter_1789.tape)

    tape_ptr = (
      local.code_1790[0] == "<"
        ? local.iter_1789.tape_ptr - local.code_1790[1] :
      local.code_1790[0] == ">"
        ? local.iter_1789.tape_ptr + local.code_1790[1]
        : local.iter_1789.tape_ptr)

    code_ptr = 2 + (
      local.code_1790[0] == "["
        ? local.iter_1789.tape[local.iter_1789.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1789.code_ptr)] : local.iter_1789.code_ptr :
      local.code_1790[0] == "]"
        ? local.iter_1789.tape[local.iter_1789.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1789.code_ptr)] : local.iter_1789.code_ptr
        : local.iter_1789.code_ptr)

    steps_taken = 1 + local.iter_1789.steps_taken
  }
}

locals {
  code_1791 = (try(local.iter_1790.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1790.code_ptr, local.iter_1790.code_ptr + 2)
    : [null])

  input_1791 = (local.code_1791[0] == ","
    ? substr(local.input_1790, local.code_1791[1], -1)
    : local.input_1790)

  iter_1791 = try(local.iter_1790.code_ptr >= length(var.code), true) ? local.iter_1790 : {
    output = (local.code_1791[0] == "."
      ? "${local.iter_1790.output}${join("", [for _ in range(local.code_1791[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1790.tape[local.iter_1790.tape_ptr]))])}"
      : local.iter_1790.output)
    
    tape = (
      local.code_1791[0] == "+"
        ? [for i, b in local.iter_1790.tape : (i == local.iter_1790.tape_ptr ? (b + local.code_1791[1]) % 256 : b)] :
      local.code_1791[0] == "-"
        ? [for i, b in local.iter_1790.tape : (i == local.iter_1790.tape_ptr ? (b - local.code_1791[1] + 256) % 256 : b)] :
      local.code_1791[0] == ","
        ? [for i, b in local.iter_1790.tape : (i == local.iter_1790.tape_ptr ? local.ascii_lookup[substr(local.input_1791, 0, 1)] : b)]
        : local.iter_1790.tape)

    tape_ptr = (
      local.code_1791[0] == "<"
        ? local.iter_1790.tape_ptr - local.code_1791[1] :
      local.code_1791[0] == ">"
        ? local.iter_1790.tape_ptr + local.code_1791[1]
        : local.iter_1790.tape_ptr)

    code_ptr = 2 + (
      local.code_1791[0] == "["
        ? local.iter_1790.tape[local.iter_1790.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1790.code_ptr)] : local.iter_1790.code_ptr :
      local.code_1791[0] == "]"
        ? local.iter_1790.tape[local.iter_1790.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1790.code_ptr)] : local.iter_1790.code_ptr
        : local.iter_1790.code_ptr)

    steps_taken = 1 + local.iter_1790.steps_taken
  }
}

locals {
  code_1792 = (try(local.iter_1791.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1791.code_ptr, local.iter_1791.code_ptr + 2)
    : [null])

  input_1792 = (local.code_1792[0] == ","
    ? substr(local.input_1791, local.code_1792[1], -1)
    : local.input_1791)

  iter_1792 = try(local.iter_1791.code_ptr >= length(var.code), true) ? local.iter_1791 : {
    output = (local.code_1792[0] == "."
      ? "${local.iter_1791.output}${join("", [for _ in range(local.code_1792[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1791.tape[local.iter_1791.tape_ptr]))])}"
      : local.iter_1791.output)
    
    tape = (
      local.code_1792[0] == "+"
        ? [for i, b in local.iter_1791.tape : (i == local.iter_1791.tape_ptr ? (b + local.code_1792[1]) % 256 : b)] :
      local.code_1792[0] == "-"
        ? [for i, b in local.iter_1791.tape : (i == local.iter_1791.tape_ptr ? (b - local.code_1792[1] + 256) % 256 : b)] :
      local.code_1792[0] == ","
        ? [for i, b in local.iter_1791.tape : (i == local.iter_1791.tape_ptr ? local.ascii_lookup[substr(local.input_1792, 0, 1)] : b)]
        : local.iter_1791.tape)

    tape_ptr = (
      local.code_1792[0] == "<"
        ? local.iter_1791.tape_ptr - local.code_1792[1] :
      local.code_1792[0] == ">"
        ? local.iter_1791.tape_ptr + local.code_1792[1]
        : local.iter_1791.tape_ptr)

    code_ptr = 2 + (
      local.code_1792[0] == "["
        ? local.iter_1791.tape[local.iter_1791.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1791.code_ptr)] : local.iter_1791.code_ptr :
      local.code_1792[0] == "]"
        ? local.iter_1791.tape[local.iter_1791.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1791.code_ptr)] : local.iter_1791.code_ptr
        : local.iter_1791.code_ptr)

    steps_taken = 1 + local.iter_1791.steps_taken
  }
}

locals {
  code_1793 = (try(local.iter_1792.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1792.code_ptr, local.iter_1792.code_ptr + 2)
    : [null])

  input_1793 = (local.code_1793[0] == ","
    ? substr(local.input_1792, local.code_1793[1], -1)
    : local.input_1792)

  iter_1793 = try(local.iter_1792.code_ptr >= length(var.code), true) ? local.iter_1792 : {
    output = (local.code_1793[0] == "."
      ? "${local.iter_1792.output}${join("", [for _ in range(local.code_1793[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1792.tape[local.iter_1792.tape_ptr]))])}"
      : local.iter_1792.output)
    
    tape = (
      local.code_1793[0] == "+"
        ? [for i, b in local.iter_1792.tape : (i == local.iter_1792.tape_ptr ? (b + local.code_1793[1]) % 256 : b)] :
      local.code_1793[0] == "-"
        ? [for i, b in local.iter_1792.tape : (i == local.iter_1792.tape_ptr ? (b - local.code_1793[1] + 256) % 256 : b)] :
      local.code_1793[0] == ","
        ? [for i, b in local.iter_1792.tape : (i == local.iter_1792.tape_ptr ? local.ascii_lookup[substr(local.input_1793, 0, 1)] : b)]
        : local.iter_1792.tape)

    tape_ptr = (
      local.code_1793[0] == "<"
        ? local.iter_1792.tape_ptr - local.code_1793[1] :
      local.code_1793[0] == ">"
        ? local.iter_1792.tape_ptr + local.code_1793[1]
        : local.iter_1792.tape_ptr)

    code_ptr = 2 + (
      local.code_1793[0] == "["
        ? local.iter_1792.tape[local.iter_1792.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1792.code_ptr)] : local.iter_1792.code_ptr :
      local.code_1793[0] == "]"
        ? local.iter_1792.tape[local.iter_1792.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1792.code_ptr)] : local.iter_1792.code_ptr
        : local.iter_1792.code_ptr)

    steps_taken = 1 + local.iter_1792.steps_taken
  }
}

locals {
  code_1794 = (try(local.iter_1793.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1793.code_ptr, local.iter_1793.code_ptr + 2)
    : [null])

  input_1794 = (local.code_1794[0] == ","
    ? substr(local.input_1793, local.code_1794[1], -1)
    : local.input_1793)

  iter_1794 = try(local.iter_1793.code_ptr >= length(var.code), true) ? local.iter_1793 : {
    output = (local.code_1794[0] == "."
      ? "${local.iter_1793.output}${join("", [for _ in range(local.code_1794[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1793.tape[local.iter_1793.tape_ptr]))])}"
      : local.iter_1793.output)
    
    tape = (
      local.code_1794[0] == "+"
        ? [for i, b in local.iter_1793.tape : (i == local.iter_1793.tape_ptr ? (b + local.code_1794[1]) % 256 : b)] :
      local.code_1794[0] == "-"
        ? [for i, b in local.iter_1793.tape : (i == local.iter_1793.tape_ptr ? (b - local.code_1794[1] + 256) % 256 : b)] :
      local.code_1794[0] == ","
        ? [for i, b in local.iter_1793.tape : (i == local.iter_1793.tape_ptr ? local.ascii_lookup[substr(local.input_1794, 0, 1)] : b)]
        : local.iter_1793.tape)

    tape_ptr = (
      local.code_1794[0] == "<"
        ? local.iter_1793.tape_ptr - local.code_1794[1] :
      local.code_1794[0] == ">"
        ? local.iter_1793.tape_ptr + local.code_1794[1]
        : local.iter_1793.tape_ptr)

    code_ptr = 2 + (
      local.code_1794[0] == "["
        ? local.iter_1793.tape[local.iter_1793.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1793.code_ptr)] : local.iter_1793.code_ptr :
      local.code_1794[0] == "]"
        ? local.iter_1793.tape[local.iter_1793.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1793.code_ptr)] : local.iter_1793.code_ptr
        : local.iter_1793.code_ptr)

    steps_taken = 1 + local.iter_1793.steps_taken
  }
}

locals {
  code_1795 = (try(local.iter_1794.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1794.code_ptr, local.iter_1794.code_ptr + 2)
    : [null])

  input_1795 = (local.code_1795[0] == ","
    ? substr(local.input_1794, local.code_1795[1], -1)
    : local.input_1794)

  iter_1795 = try(local.iter_1794.code_ptr >= length(var.code), true) ? local.iter_1794 : {
    output = (local.code_1795[0] == "."
      ? "${local.iter_1794.output}${join("", [for _ in range(local.code_1795[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1794.tape[local.iter_1794.tape_ptr]))])}"
      : local.iter_1794.output)
    
    tape = (
      local.code_1795[0] == "+"
        ? [for i, b in local.iter_1794.tape : (i == local.iter_1794.tape_ptr ? (b + local.code_1795[1]) % 256 : b)] :
      local.code_1795[0] == "-"
        ? [for i, b in local.iter_1794.tape : (i == local.iter_1794.tape_ptr ? (b - local.code_1795[1] + 256) % 256 : b)] :
      local.code_1795[0] == ","
        ? [for i, b in local.iter_1794.tape : (i == local.iter_1794.tape_ptr ? local.ascii_lookup[substr(local.input_1795, 0, 1)] : b)]
        : local.iter_1794.tape)

    tape_ptr = (
      local.code_1795[0] == "<"
        ? local.iter_1794.tape_ptr - local.code_1795[1] :
      local.code_1795[0] == ">"
        ? local.iter_1794.tape_ptr + local.code_1795[1]
        : local.iter_1794.tape_ptr)

    code_ptr = 2 + (
      local.code_1795[0] == "["
        ? local.iter_1794.tape[local.iter_1794.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1794.code_ptr)] : local.iter_1794.code_ptr :
      local.code_1795[0] == "]"
        ? local.iter_1794.tape[local.iter_1794.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1794.code_ptr)] : local.iter_1794.code_ptr
        : local.iter_1794.code_ptr)

    steps_taken = 1 + local.iter_1794.steps_taken
  }
}

locals {
  code_1796 = (try(local.iter_1795.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1795.code_ptr, local.iter_1795.code_ptr + 2)
    : [null])

  input_1796 = (local.code_1796[0] == ","
    ? substr(local.input_1795, local.code_1796[1], -1)
    : local.input_1795)

  iter_1796 = try(local.iter_1795.code_ptr >= length(var.code), true) ? local.iter_1795 : {
    output = (local.code_1796[0] == "."
      ? "${local.iter_1795.output}${join("", [for _ in range(local.code_1796[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1795.tape[local.iter_1795.tape_ptr]))])}"
      : local.iter_1795.output)
    
    tape = (
      local.code_1796[0] == "+"
        ? [for i, b in local.iter_1795.tape : (i == local.iter_1795.tape_ptr ? (b + local.code_1796[1]) % 256 : b)] :
      local.code_1796[0] == "-"
        ? [for i, b in local.iter_1795.tape : (i == local.iter_1795.tape_ptr ? (b - local.code_1796[1] + 256) % 256 : b)] :
      local.code_1796[0] == ","
        ? [for i, b in local.iter_1795.tape : (i == local.iter_1795.tape_ptr ? local.ascii_lookup[substr(local.input_1796, 0, 1)] : b)]
        : local.iter_1795.tape)

    tape_ptr = (
      local.code_1796[0] == "<"
        ? local.iter_1795.tape_ptr - local.code_1796[1] :
      local.code_1796[0] == ">"
        ? local.iter_1795.tape_ptr + local.code_1796[1]
        : local.iter_1795.tape_ptr)

    code_ptr = 2 + (
      local.code_1796[0] == "["
        ? local.iter_1795.tape[local.iter_1795.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1795.code_ptr)] : local.iter_1795.code_ptr :
      local.code_1796[0] == "]"
        ? local.iter_1795.tape[local.iter_1795.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1795.code_ptr)] : local.iter_1795.code_ptr
        : local.iter_1795.code_ptr)

    steps_taken = 1 + local.iter_1795.steps_taken
  }
}

locals {
  code_1797 = (try(local.iter_1796.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1796.code_ptr, local.iter_1796.code_ptr + 2)
    : [null])

  input_1797 = (local.code_1797[0] == ","
    ? substr(local.input_1796, local.code_1797[1], -1)
    : local.input_1796)

  iter_1797 = try(local.iter_1796.code_ptr >= length(var.code), true) ? local.iter_1796 : {
    output = (local.code_1797[0] == "."
      ? "${local.iter_1796.output}${join("", [for _ in range(local.code_1797[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1796.tape[local.iter_1796.tape_ptr]))])}"
      : local.iter_1796.output)
    
    tape = (
      local.code_1797[0] == "+"
        ? [for i, b in local.iter_1796.tape : (i == local.iter_1796.tape_ptr ? (b + local.code_1797[1]) % 256 : b)] :
      local.code_1797[0] == "-"
        ? [for i, b in local.iter_1796.tape : (i == local.iter_1796.tape_ptr ? (b - local.code_1797[1] + 256) % 256 : b)] :
      local.code_1797[0] == ","
        ? [for i, b in local.iter_1796.tape : (i == local.iter_1796.tape_ptr ? local.ascii_lookup[substr(local.input_1797, 0, 1)] : b)]
        : local.iter_1796.tape)

    tape_ptr = (
      local.code_1797[0] == "<"
        ? local.iter_1796.tape_ptr - local.code_1797[1] :
      local.code_1797[0] == ">"
        ? local.iter_1796.tape_ptr + local.code_1797[1]
        : local.iter_1796.tape_ptr)

    code_ptr = 2 + (
      local.code_1797[0] == "["
        ? local.iter_1796.tape[local.iter_1796.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1796.code_ptr)] : local.iter_1796.code_ptr :
      local.code_1797[0] == "]"
        ? local.iter_1796.tape[local.iter_1796.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1796.code_ptr)] : local.iter_1796.code_ptr
        : local.iter_1796.code_ptr)

    steps_taken = 1 + local.iter_1796.steps_taken
  }
}

locals {
  code_1798 = (try(local.iter_1797.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1797.code_ptr, local.iter_1797.code_ptr + 2)
    : [null])

  input_1798 = (local.code_1798[0] == ","
    ? substr(local.input_1797, local.code_1798[1], -1)
    : local.input_1797)

  iter_1798 = try(local.iter_1797.code_ptr >= length(var.code), true) ? local.iter_1797 : {
    output = (local.code_1798[0] == "."
      ? "${local.iter_1797.output}${join("", [for _ in range(local.code_1798[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1797.tape[local.iter_1797.tape_ptr]))])}"
      : local.iter_1797.output)
    
    tape = (
      local.code_1798[0] == "+"
        ? [for i, b in local.iter_1797.tape : (i == local.iter_1797.tape_ptr ? (b + local.code_1798[1]) % 256 : b)] :
      local.code_1798[0] == "-"
        ? [for i, b in local.iter_1797.tape : (i == local.iter_1797.tape_ptr ? (b - local.code_1798[1] + 256) % 256 : b)] :
      local.code_1798[0] == ","
        ? [for i, b in local.iter_1797.tape : (i == local.iter_1797.tape_ptr ? local.ascii_lookup[substr(local.input_1798, 0, 1)] : b)]
        : local.iter_1797.tape)

    tape_ptr = (
      local.code_1798[0] == "<"
        ? local.iter_1797.tape_ptr - local.code_1798[1] :
      local.code_1798[0] == ">"
        ? local.iter_1797.tape_ptr + local.code_1798[1]
        : local.iter_1797.tape_ptr)

    code_ptr = 2 + (
      local.code_1798[0] == "["
        ? local.iter_1797.tape[local.iter_1797.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1797.code_ptr)] : local.iter_1797.code_ptr :
      local.code_1798[0] == "]"
        ? local.iter_1797.tape[local.iter_1797.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1797.code_ptr)] : local.iter_1797.code_ptr
        : local.iter_1797.code_ptr)

    steps_taken = 1 + local.iter_1797.steps_taken
  }
}

locals {
  code_1799 = (try(local.iter_1798.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1798.code_ptr, local.iter_1798.code_ptr + 2)
    : [null])

  input_1799 = (local.code_1799[0] == ","
    ? substr(local.input_1798, local.code_1799[1], -1)
    : local.input_1798)

  iter_1799 = try(local.iter_1798.code_ptr >= length(var.code), true) ? local.iter_1798 : {
    output = (local.code_1799[0] == "."
      ? "${local.iter_1798.output}${join("", [for _ in range(local.code_1799[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1798.tape[local.iter_1798.tape_ptr]))])}"
      : local.iter_1798.output)
    
    tape = (
      local.code_1799[0] == "+"
        ? [for i, b in local.iter_1798.tape : (i == local.iter_1798.tape_ptr ? (b + local.code_1799[1]) % 256 : b)] :
      local.code_1799[0] == "-"
        ? [for i, b in local.iter_1798.tape : (i == local.iter_1798.tape_ptr ? (b - local.code_1799[1] + 256) % 256 : b)] :
      local.code_1799[0] == ","
        ? [for i, b in local.iter_1798.tape : (i == local.iter_1798.tape_ptr ? local.ascii_lookup[substr(local.input_1799, 0, 1)] : b)]
        : local.iter_1798.tape)

    tape_ptr = (
      local.code_1799[0] == "<"
        ? local.iter_1798.tape_ptr - local.code_1799[1] :
      local.code_1799[0] == ">"
        ? local.iter_1798.tape_ptr + local.code_1799[1]
        : local.iter_1798.tape_ptr)

    code_ptr = 2 + (
      local.code_1799[0] == "["
        ? local.iter_1798.tape[local.iter_1798.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1798.code_ptr)] : local.iter_1798.code_ptr :
      local.code_1799[0] == "]"
        ? local.iter_1798.tape[local.iter_1798.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1798.code_ptr)] : local.iter_1798.code_ptr
        : local.iter_1798.code_ptr)

    steps_taken = 1 + local.iter_1798.steps_taken
  }
}

locals {
  code_1800 = (try(local.iter_1799.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1799.code_ptr, local.iter_1799.code_ptr + 2)
    : [null])

  input_1800 = (local.code_1800[0] == ","
    ? substr(local.input_1799, local.code_1800[1], -1)
    : local.input_1799)

  iter_1800 = try(local.iter_1799.code_ptr >= length(var.code), true) ? local.iter_1799 : {
    output = (local.code_1800[0] == "."
      ? "${local.iter_1799.output}${join("", [for _ in range(local.code_1800[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1799.tape[local.iter_1799.tape_ptr]))])}"
      : local.iter_1799.output)
    
    tape = (
      local.code_1800[0] == "+"
        ? [for i, b in local.iter_1799.tape : (i == local.iter_1799.tape_ptr ? (b + local.code_1800[1]) % 256 : b)] :
      local.code_1800[0] == "-"
        ? [for i, b in local.iter_1799.tape : (i == local.iter_1799.tape_ptr ? (b - local.code_1800[1] + 256) % 256 : b)] :
      local.code_1800[0] == ","
        ? [for i, b in local.iter_1799.tape : (i == local.iter_1799.tape_ptr ? local.ascii_lookup[substr(local.input_1800, 0, 1)] : b)]
        : local.iter_1799.tape)

    tape_ptr = (
      local.code_1800[0] == "<"
        ? local.iter_1799.tape_ptr - local.code_1800[1] :
      local.code_1800[0] == ">"
        ? local.iter_1799.tape_ptr + local.code_1800[1]
        : local.iter_1799.tape_ptr)

    code_ptr = 2 + (
      local.code_1800[0] == "["
        ? local.iter_1799.tape[local.iter_1799.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1799.code_ptr)] : local.iter_1799.code_ptr :
      local.code_1800[0] == "]"
        ? local.iter_1799.tape[local.iter_1799.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1799.code_ptr)] : local.iter_1799.code_ptr
        : local.iter_1799.code_ptr)

    steps_taken = 1 + local.iter_1799.steps_taken
  }
}

locals {
  code_1801 = (try(local.iter_1800.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1800.code_ptr, local.iter_1800.code_ptr + 2)
    : [null])

  input_1801 = (local.code_1801[0] == ","
    ? substr(local.input_1800, local.code_1801[1], -1)
    : local.input_1800)

  iter_1801 = try(local.iter_1800.code_ptr >= length(var.code), true) ? local.iter_1800 : {
    output = (local.code_1801[0] == "."
      ? "${local.iter_1800.output}${join("", [for _ in range(local.code_1801[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1800.tape[local.iter_1800.tape_ptr]))])}"
      : local.iter_1800.output)
    
    tape = (
      local.code_1801[0] == "+"
        ? [for i, b in local.iter_1800.tape : (i == local.iter_1800.tape_ptr ? (b + local.code_1801[1]) % 256 : b)] :
      local.code_1801[0] == "-"
        ? [for i, b in local.iter_1800.tape : (i == local.iter_1800.tape_ptr ? (b - local.code_1801[1] + 256) % 256 : b)] :
      local.code_1801[0] == ","
        ? [for i, b in local.iter_1800.tape : (i == local.iter_1800.tape_ptr ? local.ascii_lookup[substr(local.input_1801, 0, 1)] : b)]
        : local.iter_1800.tape)

    tape_ptr = (
      local.code_1801[0] == "<"
        ? local.iter_1800.tape_ptr - local.code_1801[1] :
      local.code_1801[0] == ">"
        ? local.iter_1800.tape_ptr + local.code_1801[1]
        : local.iter_1800.tape_ptr)

    code_ptr = 2 + (
      local.code_1801[0] == "["
        ? local.iter_1800.tape[local.iter_1800.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1800.code_ptr)] : local.iter_1800.code_ptr :
      local.code_1801[0] == "]"
        ? local.iter_1800.tape[local.iter_1800.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1800.code_ptr)] : local.iter_1800.code_ptr
        : local.iter_1800.code_ptr)

    steps_taken = 1 + local.iter_1800.steps_taken
  }
}

locals {
  code_1802 = (try(local.iter_1801.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1801.code_ptr, local.iter_1801.code_ptr + 2)
    : [null])

  input_1802 = (local.code_1802[0] == ","
    ? substr(local.input_1801, local.code_1802[1], -1)
    : local.input_1801)

  iter_1802 = try(local.iter_1801.code_ptr >= length(var.code), true) ? local.iter_1801 : {
    output = (local.code_1802[0] == "."
      ? "${local.iter_1801.output}${join("", [for _ in range(local.code_1802[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1801.tape[local.iter_1801.tape_ptr]))])}"
      : local.iter_1801.output)
    
    tape = (
      local.code_1802[0] == "+"
        ? [for i, b in local.iter_1801.tape : (i == local.iter_1801.tape_ptr ? (b + local.code_1802[1]) % 256 : b)] :
      local.code_1802[0] == "-"
        ? [for i, b in local.iter_1801.tape : (i == local.iter_1801.tape_ptr ? (b - local.code_1802[1] + 256) % 256 : b)] :
      local.code_1802[0] == ","
        ? [for i, b in local.iter_1801.tape : (i == local.iter_1801.tape_ptr ? local.ascii_lookup[substr(local.input_1802, 0, 1)] : b)]
        : local.iter_1801.tape)

    tape_ptr = (
      local.code_1802[0] == "<"
        ? local.iter_1801.tape_ptr - local.code_1802[1] :
      local.code_1802[0] == ">"
        ? local.iter_1801.tape_ptr + local.code_1802[1]
        : local.iter_1801.tape_ptr)

    code_ptr = 2 + (
      local.code_1802[0] == "["
        ? local.iter_1801.tape[local.iter_1801.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1801.code_ptr)] : local.iter_1801.code_ptr :
      local.code_1802[0] == "]"
        ? local.iter_1801.tape[local.iter_1801.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1801.code_ptr)] : local.iter_1801.code_ptr
        : local.iter_1801.code_ptr)

    steps_taken = 1 + local.iter_1801.steps_taken
  }
}

locals {
  code_1803 = (try(local.iter_1802.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1802.code_ptr, local.iter_1802.code_ptr + 2)
    : [null])

  input_1803 = (local.code_1803[0] == ","
    ? substr(local.input_1802, local.code_1803[1], -1)
    : local.input_1802)

  iter_1803 = try(local.iter_1802.code_ptr >= length(var.code), true) ? local.iter_1802 : {
    output = (local.code_1803[0] == "."
      ? "${local.iter_1802.output}${join("", [for _ in range(local.code_1803[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1802.tape[local.iter_1802.tape_ptr]))])}"
      : local.iter_1802.output)
    
    tape = (
      local.code_1803[0] == "+"
        ? [for i, b in local.iter_1802.tape : (i == local.iter_1802.tape_ptr ? (b + local.code_1803[1]) % 256 : b)] :
      local.code_1803[0] == "-"
        ? [for i, b in local.iter_1802.tape : (i == local.iter_1802.tape_ptr ? (b - local.code_1803[1] + 256) % 256 : b)] :
      local.code_1803[0] == ","
        ? [for i, b in local.iter_1802.tape : (i == local.iter_1802.tape_ptr ? local.ascii_lookup[substr(local.input_1803, 0, 1)] : b)]
        : local.iter_1802.tape)

    tape_ptr = (
      local.code_1803[0] == "<"
        ? local.iter_1802.tape_ptr - local.code_1803[1] :
      local.code_1803[0] == ">"
        ? local.iter_1802.tape_ptr + local.code_1803[1]
        : local.iter_1802.tape_ptr)

    code_ptr = 2 + (
      local.code_1803[0] == "["
        ? local.iter_1802.tape[local.iter_1802.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1802.code_ptr)] : local.iter_1802.code_ptr :
      local.code_1803[0] == "]"
        ? local.iter_1802.tape[local.iter_1802.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1802.code_ptr)] : local.iter_1802.code_ptr
        : local.iter_1802.code_ptr)

    steps_taken = 1 + local.iter_1802.steps_taken
  }
}

locals {
  code_1804 = (try(local.iter_1803.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1803.code_ptr, local.iter_1803.code_ptr + 2)
    : [null])

  input_1804 = (local.code_1804[0] == ","
    ? substr(local.input_1803, local.code_1804[1], -1)
    : local.input_1803)

  iter_1804 = try(local.iter_1803.code_ptr >= length(var.code), true) ? local.iter_1803 : {
    output = (local.code_1804[0] == "."
      ? "${local.iter_1803.output}${join("", [for _ in range(local.code_1804[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1803.tape[local.iter_1803.tape_ptr]))])}"
      : local.iter_1803.output)
    
    tape = (
      local.code_1804[0] == "+"
        ? [for i, b in local.iter_1803.tape : (i == local.iter_1803.tape_ptr ? (b + local.code_1804[1]) % 256 : b)] :
      local.code_1804[0] == "-"
        ? [for i, b in local.iter_1803.tape : (i == local.iter_1803.tape_ptr ? (b - local.code_1804[1] + 256) % 256 : b)] :
      local.code_1804[0] == ","
        ? [for i, b in local.iter_1803.tape : (i == local.iter_1803.tape_ptr ? local.ascii_lookup[substr(local.input_1804, 0, 1)] : b)]
        : local.iter_1803.tape)

    tape_ptr = (
      local.code_1804[0] == "<"
        ? local.iter_1803.tape_ptr - local.code_1804[1] :
      local.code_1804[0] == ">"
        ? local.iter_1803.tape_ptr + local.code_1804[1]
        : local.iter_1803.tape_ptr)

    code_ptr = 2 + (
      local.code_1804[0] == "["
        ? local.iter_1803.tape[local.iter_1803.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1803.code_ptr)] : local.iter_1803.code_ptr :
      local.code_1804[0] == "]"
        ? local.iter_1803.tape[local.iter_1803.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1803.code_ptr)] : local.iter_1803.code_ptr
        : local.iter_1803.code_ptr)

    steps_taken = 1 + local.iter_1803.steps_taken
  }
}

locals {
  code_1805 = (try(local.iter_1804.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1804.code_ptr, local.iter_1804.code_ptr + 2)
    : [null])

  input_1805 = (local.code_1805[0] == ","
    ? substr(local.input_1804, local.code_1805[1], -1)
    : local.input_1804)

  iter_1805 = try(local.iter_1804.code_ptr >= length(var.code), true) ? local.iter_1804 : {
    output = (local.code_1805[0] == "."
      ? "${local.iter_1804.output}${join("", [for _ in range(local.code_1805[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1804.tape[local.iter_1804.tape_ptr]))])}"
      : local.iter_1804.output)
    
    tape = (
      local.code_1805[0] == "+"
        ? [for i, b in local.iter_1804.tape : (i == local.iter_1804.tape_ptr ? (b + local.code_1805[1]) % 256 : b)] :
      local.code_1805[0] == "-"
        ? [for i, b in local.iter_1804.tape : (i == local.iter_1804.tape_ptr ? (b - local.code_1805[1] + 256) % 256 : b)] :
      local.code_1805[0] == ","
        ? [for i, b in local.iter_1804.tape : (i == local.iter_1804.tape_ptr ? local.ascii_lookup[substr(local.input_1805, 0, 1)] : b)]
        : local.iter_1804.tape)

    tape_ptr = (
      local.code_1805[0] == "<"
        ? local.iter_1804.tape_ptr - local.code_1805[1] :
      local.code_1805[0] == ">"
        ? local.iter_1804.tape_ptr + local.code_1805[1]
        : local.iter_1804.tape_ptr)

    code_ptr = 2 + (
      local.code_1805[0] == "["
        ? local.iter_1804.tape[local.iter_1804.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1804.code_ptr)] : local.iter_1804.code_ptr :
      local.code_1805[0] == "]"
        ? local.iter_1804.tape[local.iter_1804.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1804.code_ptr)] : local.iter_1804.code_ptr
        : local.iter_1804.code_ptr)

    steps_taken = 1 + local.iter_1804.steps_taken
  }
}

locals {
  code_1806 = (try(local.iter_1805.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1805.code_ptr, local.iter_1805.code_ptr + 2)
    : [null])

  input_1806 = (local.code_1806[0] == ","
    ? substr(local.input_1805, local.code_1806[1], -1)
    : local.input_1805)

  iter_1806 = try(local.iter_1805.code_ptr >= length(var.code), true) ? local.iter_1805 : {
    output = (local.code_1806[0] == "."
      ? "${local.iter_1805.output}${join("", [for _ in range(local.code_1806[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1805.tape[local.iter_1805.tape_ptr]))])}"
      : local.iter_1805.output)
    
    tape = (
      local.code_1806[0] == "+"
        ? [for i, b in local.iter_1805.tape : (i == local.iter_1805.tape_ptr ? (b + local.code_1806[1]) % 256 : b)] :
      local.code_1806[0] == "-"
        ? [for i, b in local.iter_1805.tape : (i == local.iter_1805.tape_ptr ? (b - local.code_1806[1] + 256) % 256 : b)] :
      local.code_1806[0] == ","
        ? [for i, b in local.iter_1805.tape : (i == local.iter_1805.tape_ptr ? local.ascii_lookup[substr(local.input_1806, 0, 1)] : b)]
        : local.iter_1805.tape)

    tape_ptr = (
      local.code_1806[0] == "<"
        ? local.iter_1805.tape_ptr - local.code_1806[1] :
      local.code_1806[0] == ">"
        ? local.iter_1805.tape_ptr + local.code_1806[1]
        : local.iter_1805.tape_ptr)

    code_ptr = 2 + (
      local.code_1806[0] == "["
        ? local.iter_1805.tape[local.iter_1805.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1805.code_ptr)] : local.iter_1805.code_ptr :
      local.code_1806[0] == "]"
        ? local.iter_1805.tape[local.iter_1805.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1805.code_ptr)] : local.iter_1805.code_ptr
        : local.iter_1805.code_ptr)

    steps_taken = 1 + local.iter_1805.steps_taken
  }
}

locals {
  code_1807 = (try(local.iter_1806.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1806.code_ptr, local.iter_1806.code_ptr + 2)
    : [null])

  input_1807 = (local.code_1807[0] == ","
    ? substr(local.input_1806, local.code_1807[1], -1)
    : local.input_1806)

  iter_1807 = try(local.iter_1806.code_ptr >= length(var.code), true) ? local.iter_1806 : {
    output = (local.code_1807[0] == "."
      ? "${local.iter_1806.output}${join("", [for _ in range(local.code_1807[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1806.tape[local.iter_1806.tape_ptr]))])}"
      : local.iter_1806.output)
    
    tape = (
      local.code_1807[0] == "+"
        ? [for i, b in local.iter_1806.tape : (i == local.iter_1806.tape_ptr ? (b + local.code_1807[1]) % 256 : b)] :
      local.code_1807[0] == "-"
        ? [for i, b in local.iter_1806.tape : (i == local.iter_1806.tape_ptr ? (b - local.code_1807[1] + 256) % 256 : b)] :
      local.code_1807[0] == ","
        ? [for i, b in local.iter_1806.tape : (i == local.iter_1806.tape_ptr ? local.ascii_lookup[substr(local.input_1807, 0, 1)] : b)]
        : local.iter_1806.tape)

    tape_ptr = (
      local.code_1807[0] == "<"
        ? local.iter_1806.tape_ptr - local.code_1807[1] :
      local.code_1807[0] == ">"
        ? local.iter_1806.tape_ptr + local.code_1807[1]
        : local.iter_1806.tape_ptr)

    code_ptr = 2 + (
      local.code_1807[0] == "["
        ? local.iter_1806.tape[local.iter_1806.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1806.code_ptr)] : local.iter_1806.code_ptr :
      local.code_1807[0] == "]"
        ? local.iter_1806.tape[local.iter_1806.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1806.code_ptr)] : local.iter_1806.code_ptr
        : local.iter_1806.code_ptr)

    steps_taken = 1 + local.iter_1806.steps_taken
  }
}

locals {
  code_1808 = (try(local.iter_1807.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1807.code_ptr, local.iter_1807.code_ptr + 2)
    : [null])

  input_1808 = (local.code_1808[0] == ","
    ? substr(local.input_1807, local.code_1808[1], -1)
    : local.input_1807)

  iter_1808 = try(local.iter_1807.code_ptr >= length(var.code), true) ? local.iter_1807 : {
    output = (local.code_1808[0] == "."
      ? "${local.iter_1807.output}${join("", [for _ in range(local.code_1808[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1807.tape[local.iter_1807.tape_ptr]))])}"
      : local.iter_1807.output)
    
    tape = (
      local.code_1808[0] == "+"
        ? [for i, b in local.iter_1807.tape : (i == local.iter_1807.tape_ptr ? (b + local.code_1808[1]) % 256 : b)] :
      local.code_1808[0] == "-"
        ? [for i, b in local.iter_1807.tape : (i == local.iter_1807.tape_ptr ? (b - local.code_1808[1] + 256) % 256 : b)] :
      local.code_1808[0] == ","
        ? [for i, b in local.iter_1807.tape : (i == local.iter_1807.tape_ptr ? local.ascii_lookup[substr(local.input_1808, 0, 1)] : b)]
        : local.iter_1807.tape)

    tape_ptr = (
      local.code_1808[0] == "<"
        ? local.iter_1807.tape_ptr - local.code_1808[1] :
      local.code_1808[0] == ">"
        ? local.iter_1807.tape_ptr + local.code_1808[1]
        : local.iter_1807.tape_ptr)

    code_ptr = 2 + (
      local.code_1808[0] == "["
        ? local.iter_1807.tape[local.iter_1807.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1807.code_ptr)] : local.iter_1807.code_ptr :
      local.code_1808[0] == "]"
        ? local.iter_1807.tape[local.iter_1807.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1807.code_ptr)] : local.iter_1807.code_ptr
        : local.iter_1807.code_ptr)

    steps_taken = 1 + local.iter_1807.steps_taken
  }
}

locals {
  code_1809 = (try(local.iter_1808.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1808.code_ptr, local.iter_1808.code_ptr + 2)
    : [null])

  input_1809 = (local.code_1809[0] == ","
    ? substr(local.input_1808, local.code_1809[1], -1)
    : local.input_1808)

  iter_1809 = try(local.iter_1808.code_ptr >= length(var.code), true) ? local.iter_1808 : {
    output = (local.code_1809[0] == "."
      ? "${local.iter_1808.output}${join("", [for _ in range(local.code_1809[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1808.tape[local.iter_1808.tape_ptr]))])}"
      : local.iter_1808.output)
    
    tape = (
      local.code_1809[0] == "+"
        ? [for i, b in local.iter_1808.tape : (i == local.iter_1808.tape_ptr ? (b + local.code_1809[1]) % 256 : b)] :
      local.code_1809[0] == "-"
        ? [for i, b in local.iter_1808.tape : (i == local.iter_1808.tape_ptr ? (b - local.code_1809[1] + 256) % 256 : b)] :
      local.code_1809[0] == ","
        ? [for i, b in local.iter_1808.tape : (i == local.iter_1808.tape_ptr ? local.ascii_lookup[substr(local.input_1809, 0, 1)] : b)]
        : local.iter_1808.tape)

    tape_ptr = (
      local.code_1809[0] == "<"
        ? local.iter_1808.tape_ptr - local.code_1809[1] :
      local.code_1809[0] == ">"
        ? local.iter_1808.tape_ptr + local.code_1809[1]
        : local.iter_1808.tape_ptr)

    code_ptr = 2 + (
      local.code_1809[0] == "["
        ? local.iter_1808.tape[local.iter_1808.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1808.code_ptr)] : local.iter_1808.code_ptr :
      local.code_1809[0] == "]"
        ? local.iter_1808.tape[local.iter_1808.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1808.code_ptr)] : local.iter_1808.code_ptr
        : local.iter_1808.code_ptr)

    steps_taken = 1 + local.iter_1808.steps_taken
  }
}

locals {
  code_1810 = (try(local.iter_1809.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1809.code_ptr, local.iter_1809.code_ptr + 2)
    : [null])

  input_1810 = (local.code_1810[0] == ","
    ? substr(local.input_1809, local.code_1810[1], -1)
    : local.input_1809)

  iter_1810 = try(local.iter_1809.code_ptr >= length(var.code), true) ? local.iter_1809 : {
    output = (local.code_1810[0] == "."
      ? "${local.iter_1809.output}${join("", [for _ in range(local.code_1810[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1809.tape[local.iter_1809.tape_ptr]))])}"
      : local.iter_1809.output)
    
    tape = (
      local.code_1810[0] == "+"
        ? [for i, b in local.iter_1809.tape : (i == local.iter_1809.tape_ptr ? (b + local.code_1810[1]) % 256 : b)] :
      local.code_1810[0] == "-"
        ? [for i, b in local.iter_1809.tape : (i == local.iter_1809.tape_ptr ? (b - local.code_1810[1] + 256) % 256 : b)] :
      local.code_1810[0] == ","
        ? [for i, b in local.iter_1809.tape : (i == local.iter_1809.tape_ptr ? local.ascii_lookup[substr(local.input_1810, 0, 1)] : b)]
        : local.iter_1809.tape)

    tape_ptr = (
      local.code_1810[0] == "<"
        ? local.iter_1809.tape_ptr - local.code_1810[1] :
      local.code_1810[0] == ">"
        ? local.iter_1809.tape_ptr + local.code_1810[1]
        : local.iter_1809.tape_ptr)

    code_ptr = 2 + (
      local.code_1810[0] == "["
        ? local.iter_1809.tape[local.iter_1809.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1809.code_ptr)] : local.iter_1809.code_ptr :
      local.code_1810[0] == "]"
        ? local.iter_1809.tape[local.iter_1809.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1809.code_ptr)] : local.iter_1809.code_ptr
        : local.iter_1809.code_ptr)

    steps_taken = 1 + local.iter_1809.steps_taken
  }
}

locals {
  code_1811 = (try(local.iter_1810.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1810.code_ptr, local.iter_1810.code_ptr + 2)
    : [null])

  input_1811 = (local.code_1811[0] == ","
    ? substr(local.input_1810, local.code_1811[1], -1)
    : local.input_1810)

  iter_1811 = try(local.iter_1810.code_ptr >= length(var.code), true) ? local.iter_1810 : {
    output = (local.code_1811[0] == "."
      ? "${local.iter_1810.output}${join("", [for _ in range(local.code_1811[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1810.tape[local.iter_1810.tape_ptr]))])}"
      : local.iter_1810.output)
    
    tape = (
      local.code_1811[0] == "+"
        ? [for i, b in local.iter_1810.tape : (i == local.iter_1810.tape_ptr ? (b + local.code_1811[1]) % 256 : b)] :
      local.code_1811[0] == "-"
        ? [for i, b in local.iter_1810.tape : (i == local.iter_1810.tape_ptr ? (b - local.code_1811[1] + 256) % 256 : b)] :
      local.code_1811[0] == ","
        ? [for i, b in local.iter_1810.tape : (i == local.iter_1810.tape_ptr ? local.ascii_lookup[substr(local.input_1811, 0, 1)] : b)]
        : local.iter_1810.tape)

    tape_ptr = (
      local.code_1811[0] == "<"
        ? local.iter_1810.tape_ptr - local.code_1811[1] :
      local.code_1811[0] == ">"
        ? local.iter_1810.tape_ptr + local.code_1811[1]
        : local.iter_1810.tape_ptr)

    code_ptr = 2 + (
      local.code_1811[0] == "["
        ? local.iter_1810.tape[local.iter_1810.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1810.code_ptr)] : local.iter_1810.code_ptr :
      local.code_1811[0] == "]"
        ? local.iter_1810.tape[local.iter_1810.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1810.code_ptr)] : local.iter_1810.code_ptr
        : local.iter_1810.code_ptr)

    steps_taken = 1 + local.iter_1810.steps_taken
  }
}

locals {
  code_1812 = (try(local.iter_1811.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1811.code_ptr, local.iter_1811.code_ptr + 2)
    : [null])

  input_1812 = (local.code_1812[0] == ","
    ? substr(local.input_1811, local.code_1812[1], -1)
    : local.input_1811)

  iter_1812 = try(local.iter_1811.code_ptr >= length(var.code), true) ? local.iter_1811 : {
    output = (local.code_1812[0] == "."
      ? "${local.iter_1811.output}${join("", [for _ in range(local.code_1812[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1811.tape[local.iter_1811.tape_ptr]))])}"
      : local.iter_1811.output)
    
    tape = (
      local.code_1812[0] == "+"
        ? [for i, b in local.iter_1811.tape : (i == local.iter_1811.tape_ptr ? (b + local.code_1812[1]) % 256 : b)] :
      local.code_1812[0] == "-"
        ? [for i, b in local.iter_1811.tape : (i == local.iter_1811.tape_ptr ? (b - local.code_1812[1] + 256) % 256 : b)] :
      local.code_1812[0] == ","
        ? [for i, b in local.iter_1811.tape : (i == local.iter_1811.tape_ptr ? local.ascii_lookup[substr(local.input_1812, 0, 1)] : b)]
        : local.iter_1811.tape)

    tape_ptr = (
      local.code_1812[0] == "<"
        ? local.iter_1811.tape_ptr - local.code_1812[1] :
      local.code_1812[0] == ">"
        ? local.iter_1811.tape_ptr + local.code_1812[1]
        : local.iter_1811.tape_ptr)

    code_ptr = 2 + (
      local.code_1812[0] == "["
        ? local.iter_1811.tape[local.iter_1811.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1811.code_ptr)] : local.iter_1811.code_ptr :
      local.code_1812[0] == "]"
        ? local.iter_1811.tape[local.iter_1811.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1811.code_ptr)] : local.iter_1811.code_ptr
        : local.iter_1811.code_ptr)

    steps_taken = 1 + local.iter_1811.steps_taken
  }
}

locals {
  code_1813 = (try(local.iter_1812.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1812.code_ptr, local.iter_1812.code_ptr + 2)
    : [null])

  input_1813 = (local.code_1813[0] == ","
    ? substr(local.input_1812, local.code_1813[1], -1)
    : local.input_1812)

  iter_1813 = try(local.iter_1812.code_ptr >= length(var.code), true) ? local.iter_1812 : {
    output = (local.code_1813[0] == "."
      ? "${local.iter_1812.output}${join("", [for _ in range(local.code_1813[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1812.tape[local.iter_1812.tape_ptr]))])}"
      : local.iter_1812.output)
    
    tape = (
      local.code_1813[0] == "+"
        ? [for i, b in local.iter_1812.tape : (i == local.iter_1812.tape_ptr ? (b + local.code_1813[1]) % 256 : b)] :
      local.code_1813[0] == "-"
        ? [for i, b in local.iter_1812.tape : (i == local.iter_1812.tape_ptr ? (b - local.code_1813[1] + 256) % 256 : b)] :
      local.code_1813[0] == ","
        ? [for i, b in local.iter_1812.tape : (i == local.iter_1812.tape_ptr ? local.ascii_lookup[substr(local.input_1813, 0, 1)] : b)]
        : local.iter_1812.tape)

    tape_ptr = (
      local.code_1813[0] == "<"
        ? local.iter_1812.tape_ptr - local.code_1813[1] :
      local.code_1813[0] == ">"
        ? local.iter_1812.tape_ptr + local.code_1813[1]
        : local.iter_1812.tape_ptr)

    code_ptr = 2 + (
      local.code_1813[0] == "["
        ? local.iter_1812.tape[local.iter_1812.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1812.code_ptr)] : local.iter_1812.code_ptr :
      local.code_1813[0] == "]"
        ? local.iter_1812.tape[local.iter_1812.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1812.code_ptr)] : local.iter_1812.code_ptr
        : local.iter_1812.code_ptr)

    steps_taken = 1 + local.iter_1812.steps_taken
  }
}

locals {
  code_1814 = (try(local.iter_1813.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1813.code_ptr, local.iter_1813.code_ptr + 2)
    : [null])

  input_1814 = (local.code_1814[0] == ","
    ? substr(local.input_1813, local.code_1814[1], -1)
    : local.input_1813)

  iter_1814 = try(local.iter_1813.code_ptr >= length(var.code), true) ? local.iter_1813 : {
    output = (local.code_1814[0] == "."
      ? "${local.iter_1813.output}${join("", [for _ in range(local.code_1814[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1813.tape[local.iter_1813.tape_ptr]))])}"
      : local.iter_1813.output)
    
    tape = (
      local.code_1814[0] == "+"
        ? [for i, b in local.iter_1813.tape : (i == local.iter_1813.tape_ptr ? (b + local.code_1814[1]) % 256 : b)] :
      local.code_1814[0] == "-"
        ? [for i, b in local.iter_1813.tape : (i == local.iter_1813.tape_ptr ? (b - local.code_1814[1] + 256) % 256 : b)] :
      local.code_1814[0] == ","
        ? [for i, b in local.iter_1813.tape : (i == local.iter_1813.tape_ptr ? local.ascii_lookup[substr(local.input_1814, 0, 1)] : b)]
        : local.iter_1813.tape)

    tape_ptr = (
      local.code_1814[0] == "<"
        ? local.iter_1813.tape_ptr - local.code_1814[1] :
      local.code_1814[0] == ">"
        ? local.iter_1813.tape_ptr + local.code_1814[1]
        : local.iter_1813.tape_ptr)

    code_ptr = 2 + (
      local.code_1814[0] == "["
        ? local.iter_1813.tape[local.iter_1813.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1813.code_ptr)] : local.iter_1813.code_ptr :
      local.code_1814[0] == "]"
        ? local.iter_1813.tape[local.iter_1813.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1813.code_ptr)] : local.iter_1813.code_ptr
        : local.iter_1813.code_ptr)

    steps_taken = 1 + local.iter_1813.steps_taken
  }
}

locals {
  code_1815 = (try(local.iter_1814.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1814.code_ptr, local.iter_1814.code_ptr + 2)
    : [null])

  input_1815 = (local.code_1815[0] == ","
    ? substr(local.input_1814, local.code_1815[1], -1)
    : local.input_1814)

  iter_1815 = try(local.iter_1814.code_ptr >= length(var.code), true) ? local.iter_1814 : {
    output = (local.code_1815[0] == "."
      ? "${local.iter_1814.output}${join("", [for _ in range(local.code_1815[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1814.tape[local.iter_1814.tape_ptr]))])}"
      : local.iter_1814.output)
    
    tape = (
      local.code_1815[0] == "+"
        ? [for i, b in local.iter_1814.tape : (i == local.iter_1814.tape_ptr ? (b + local.code_1815[1]) % 256 : b)] :
      local.code_1815[0] == "-"
        ? [for i, b in local.iter_1814.tape : (i == local.iter_1814.tape_ptr ? (b - local.code_1815[1] + 256) % 256 : b)] :
      local.code_1815[0] == ","
        ? [for i, b in local.iter_1814.tape : (i == local.iter_1814.tape_ptr ? local.ascii_lookup[substr(local.input_1815, 0, 1)] : b)]
        : local.iter_1814.tape)

    tape_ptr = (
      local.code_1815[0] == "<"
        ? local.iter_1814.tape_ptr - local.code_1815[1] :
      local.code_1815[0] == ">"
        ? local.iter_1814.tape_ptr + local.code_1815[1]
        : local.iter_1814.tape_ptr)

    code_ptr = 2 + (
      local.code_1815[0] == "["
        ? local.iter_1814.tape[local.iter_1814.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1814.code_ptr)] : local.iter_1814.code_ptr :
      local.code_1815[0] == "]"
        ? local.iter_1814.tape[local.iter_1814.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1814.code_ptr)] : local.iter_1814.code_ptr
        : local.iter_1814.code_ptr)

    steps_taken = 1 + local.iter_1814.steps_taken
  }
}

locals {
  code_1816 = (try(local.iter_1815.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1815.code_ptr, local.iter_1815.code_ptr + 2)
    : [null])

  input_1816 = (local.code_1816[0] == ","
    ? substr(local.input_1815, local.code_1816[1], -1)
    : local.input_1815)

  iter_1816 = try(local.iter_1815.code_ptr >= length(var.code), true) ? local.iter_1815 : {
    output = (local.code_1816[0] == "."
      ? "${local.iter_1815.output}${join("", [for _ in range(local.code_1816[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1815.tape[local.iter_1815.tape_ptr]))])}"
      : local.iter_1815.output)
    
    tape = (
      local.code_1816[0] == "+"
        ? [for i, b in local.iter_1815.tape : (i == local.iter_1815.tape_ptr ? (b + local.code_1816[1]) % 256 : b)] :
      local.code_1816[0] == "-"
        ? [for i, b in local.iter_1815.tape : (i == local.iter_1815.tape_ptr ? (b - local.code_1816[1] + 256) % 256 : b)] :
      local.code_1816[0] == ","
        ? [for i, b in local.iter_1815.tape : (i == local.iter_1815.tape_ptr ? local.ascii_lookup[substr(local.input_1816, 0, 1)] : b)]
        : local.iter_1815.tape)

    tape_ptr = (
      local.code_1816[0] == "<"
        ? local.iter_1815.tape_ptr - local.code_1816[1] :
      local.code_1816[0] == ">"
        ? local.iter_1815.tape_ptr + local.code_1816[1]
        : local.iter_1815.tape_ptr)

    code_ptr = 2 + (
      local.code_1816[0] == "["
        ? local.iter_1815.tape[local.iter_1815.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1815.code_ptr)] : local.iter_1815.code_ptr :
      local.code_1816[0] == "]"
        ? local.iter_1815.tape[local.iter_1815.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1815.code_ptr)] : local.iter_1815.code_ptr
        : local.iter_1815.code_ptr)

    steps_taken = 1 + local.iter_1815.steps_taken
  }
}

locals {
  code_1817 = (try(local.iter_1816.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1816.code_ptr, local.iter_1816.code_ptr + 2)
    : [null])

  input_1817 = (local.code_1817[0] == ","
    ? substr(local.input_1816, local.code_1817[1], -1)
    : local.input_1816)

  iter_1817 = try(local.iter_1816.code_ptr >= length(var.code), true) ? local.iter_1816 : {
    output = (local.code_1817[0] == "."
      ? "${local.iter_1816.output}${join("", [for _ in range(local.code_1817[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1816.tape[local.iter_1816.tape_ptr]))])}"
      : local.iter_1816.output)
    
    tape = (
      local.code_1817[0] == "+"
        ? [for i, b in local.iter_1816.tape : (i == local.iter_1816.tape_ptr ? (b + local.code_1817[1]) % 256 : b)] :
      local.code_1817[0] == "-"
        ? [for i, b in local.iter_1816.tape : (i == local.iter_1816.tape_ptr ? (b - local.code_1817[1] + 256) % 256 : b)] :
      local.code_1817[0] == ","
        ? [for i, b in local.iter_1816.tape : (i == local.iter_1816.tape_ptr ? local.ascii_lookup[substr(local.input_1817, 0, 1)] : b)]
        : local.iter_1816.tape)

    tape_ptr = (
      local.code_1817[0] == "<"
        ? local.iter_1816.tape_ptr - local.code_1817[1] :
      local.code_1817[0] == ">"
        ? local.iter_1816.tape_ptr + local.code_1817[1]
        : local.iter_1816.tape_ptr)

    code_ptr = 2 + (
      local.code_1817[0] == "["
        ? local.iter_1816.tape[local.iter_1816.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1816.code_ptr)] : local.iter_1816.code_ptr :
      local.code_1817[0] == "]"
        ? local.iter_1816.tape[local.iter_1816.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1816.code_ptr)] : local.iter_1816.code_ptr
        : local.iter_1816.code_ptr)

    steps_taken = 1 + local.iter_1816.steps_taken
  }
}

locals {
  code_1818 = (try(local.iter_1817.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1817.code_ptr, local.iter_1817.code_ptr + 2)
    : [null])

  input_1818 = (local.code_1818[0] == ","
    ? substr(local.input_1817, local.code_1818[1], -1)
    : local.input_1817)

  iter_1818 = try(local.iter_1817.code_ptr >= length(var.code), true) ? local.iter_1817 : {
    output = (local.code_1818[0] == "."
      ? "${local.iter_1817.output}${join("", [for _ in range(local.code_1818[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1817.tape[local.iter_1817.tape_ptr]))])}"
      : local.iter_1817.output)
    
    tape = (
      local.code_1818[0] == "+"
        ? [for i, b in local.iter_1817.tape : (i == local.iter_1817.tape_ptr ? (b + local.code_1818[1]) % 256 : b)] :
      local.code_1818[0] == "-"
        ? [for i, b in local.iter_1817.tape : (i == local.iter_1817.tape_ptr ? (b - local.code_1818[1] + 256) % 256 : b)] :
      local.code_1818[0] == ","
        ? [for i, b in local.iter_1817.tape : (i == local.iter_1817.tape_ptr ? local.ascii_lookup[substr(local.input_1818, 0, 1)] : b)]
        : local.iter_1817.tape)

    tape_ptr = (
      local.code_1818[0] == "<"
        ? local.iter_1817.tape_ptr - local.code_1818[1] :
      local.code_1818[0] == ">"
        ? local.iter_1817.tape_ptr + local.code_1818[1]
        : local.iter_1817.tape_ptr)

    code_ptr = 2 + (
      local.code_1818[0] == "["
        ? local.iter_1817.tape[local.iter_1817.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1817.code_ptr)] : local.iter_1817.code_ptr :
      local.code_1818[0] == "]"
        ? local.iter_1817.tape[local.iter_1817.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1817.code_ptr)] : local.iter_1817.code_ptr
        : local.iter_1817.code_ptr)

    steps_taken = 1 + local.iter_1817.steps_taken
  }
}

locals {
  code_1819 = (try(local.iter_1818.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1818.code_ptr, local.iter_1818.code_ptr + 2)
    : [null])

  input_1819 = (local.code_1819[0] == ","
    ? substr(local.input_1818, local.code_1819[1], -1)
    : local.input_1818)

  iter_1819 = try(local.iter_1818.code_ptr >= length(var.code), true) ? local.iter_1818 : {
    output = (local.code_1819[0] == "."
      ? "${local.iter_1818.output}${join("", [for _ in range(local.code_1819[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1818.tape[local.iter_1818.tape_ptr]))])}"
      : local.iter_1818.output)
    
    tape = (
      local.code_1819[0] == "+"
        ? [for i, b in local.iter_1818.tape : (i == local.iter_1818.tape_ptr ? (b + local.code_1819[1]) % 256 : b)] :
      local.code_1819[0] == "-"
        ? [for i, b in local.iter_1818.tape : (i == local.iter_1818.tape_ptr ? (b - local.code_1819[1] + 256) % 256 : b)] :
      local.code_1819[0] == ","
        ? [for i, b in local.iter_1818.tape : (i == local.iter_1818.tape_ptr ? local.ascii_lookup[substr(local.input_1819, 0, 1)] : b)]
        : local.iter_1818.tape)

    tape_ptr = (
      local.code_1819[0] == "<"
        ? local.iter_1818.tape_ptr - local.code_1819[1] :
      local.code_1819[0] == ">"
        ? local.iter_1818.tape_ptr + local.code_1819[1]
        : local.iter_1818.tape_ptr)

    code_ptr = 2 + (
      local.code_1819[0] == "["
        ? local.iter_1818.tape[local.iter_1818.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1818.code_ptr)] : local.iter_1818.code_ptr :
      local.code_1819[0] == "]"
        ? local.iter_1818.tape[local.iter_1818.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1818.code_ptr)] : local.iter_1818.code_ptr
        : local.iter_1818.code_ptr)

    steps_taken = 1 + local.iter_1818.steps_taken
  }
}

locals {
  code_1820 = (try(local.iter_1819.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1819.code_ptr, local.iter_1819.code_ptr + 2)
    : [null])

  input_1820 = (local.code_1820[0] == ","
    ? substr(local.input_1819, local.code_1820[1], -1)
    : local.input_1819)

  iter_1820 = try(local.iter_1819.code_ptr >= length(var.code), true) ? local.iter_1819 : {
    output = (local.code_1820[0] == "."
      ? "${local.iter_1819.output}${join("", [for _ in range(local.code_1820[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1819.tape[local.iter_1819.tape_ptr]))])}"
      : local.iter_1819.output)
    
    tape = (
      local.code_1820[0] == "+"
        ? [for i, b in local.iter_1819.tape : (i == local.iter_1819.tape_ptr ? (b + local.code_1820[1]) % 256 : b)] :
      local.code_1820[0] == "-"
        ? [for i, b in local.iter_1819.tape : (i == local.iter_1819.tape_ptr ? (b - local.code_1820[1] + 256) % 256 : b)] :
      local.code_1820[0] == ","
        ? [for i, b in local.iter_1819.tape : (i == local.iter_1819.tape_ptr ? local.ascii_lookup[substr(local.input_1820, 0, 1)] : b)]
        : local.iter_1819.tape)

    tape_ptr = (
      local.code_1820[0] == "<"
        ? local.iter_1819.tape_ptr - local.code_1820[1] :
      local.code_1820[0] == ">"
        ? local.iter_1819.tape_ptr + local.code_1820[1]
        : local.iter_1819.tape_ptr)

    code_ptr = 2 + (
      local.code_1820[0] == "["
        ? local.iter_1819.tape[local.iter_1819.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1819.code_ptr)] : local.iter_1819.code_ptr :
      local.code_1820[0] == "]"
        ? local.iter_1819.tape[local.iter_1819.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1819.code_ptr)] : local.iter_1819.code_ptr
        : local.iter_1819.code_ptr)

    steps_taken = 1 + local.iter_1819.steps_taken
  }
}

locals {
  code_1821 = (try(local.iter_1820.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1820.code_ptr, local.iter_1820.code_ptr + 2)
    : [null])

  input_1821 = (local.code_1821[0] == ","
    ? substr(local.input_1820, local.code_1821[1], -1)
    : local.input_1820)

  iter_1821 = try(local.iter_1820.code_ptr >= length(var.code), true) ? local.iter_1820 : {
    output = (local.code_1821[0] == "."
      ? "${local.iter_1820.output}${join("", [for _ in range(local.code_1821[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1820.tape[local.iter_1820.tape_ptr]))])}"
      : local.iter_1820.output)
    
    tape = (
      local.code_1821[0] == "+"
        ? [for i, b in local.iter_1820.tape : (i == local.iter_1820.tape_ptr ? (b + local.code_1821[1]) % 256 : b)] :
      local.code_1821[0] == "-"
        ? [for i, b in local.iter_1820.tape : (i == local.iter_1820.tape_ptr ? (b - local.code_1821[1] + 256) % 256 : b)] :
      local.code_1821[0] == ","
        ? [for i, b in local.iter_1820.tape : (i == local.iter_1820.tape_ptr ? local.ascii_lookup[substr(local.input_1821, 0, 1)] : b)]
        : local.iter_1820.tape)

    tape_ptr = (
      local.code_1821[0] == "<"
        ? local.iter_1820.tape_ptr - local.code_1821[1] :
      local.code_1821[0] == ">"
        ? local.iter_1820.tape_ptr + local.code_1821[1]
        : local.iter_1820.tape_ptr)

    code_ptr = 2 + (
      local.code_1821[0] == "["
        ? local.iter_1820.tape[local.iter_1820.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1820.code_ptr)] : local.iter_1820.code_ptr :
      local.code_1821[0] == "]"
        ? local.iter_1820.tape[local.iter_1820.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1820.code_ptr)] : local.iter_1820.code_ptr
        : local.iter_1820.code_ptr)

    steps_taken = 1 + local.iter_1820.steps_taken
  }
}

locals {
  code_1822 = (try(local.iter_1821.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1821.code_ptr, local.iter_1821.code_ptr + 2)
    : [null])

  input_1822 = (local.code_1822[0] == ","
    ? substr(local.input_1821, local.code_1822[1], -1)
    : local.input_1821)

  iter_1822 = try(local.iter_1821.code_ptr >= length(var.code), true) ? local.iter_1821 : {
    output = (local.code_1822[0] == "."
      ? "${local.iter_1821.output}${join("", [for _ in range(local.code_1822[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1821.tape[local.iter_1821.tape_ptr]))])}"
      : local.iter_1821.output)
    
    tape = (
      local.code_1822[0] == "+"
        ? [for i, b in local.iter_1821.tape : (i == local.iter_1821.tape_ptr ? (b + local.code_1822[1]) % 256 : b)] :
      local.code_1822[0] == "-"
        ? [for i, b in local.iter_1821.tape : (i == local.iter_1821.tape_ptr ? (b - local.code_1822[1] + 256) % 256 : b)] :
      local.code_1822[0] == ","
        ? [for i, b in local.iter_1821.tape : (i == local.iter_1821.tape_ptr ? local.ascii_lookup[substr(local.input_1822, 0, 1)] : b)]
        : local.iter_1821.tape)

    tape_ptr = (
      local.code_1822[0] == "<"
        ? local.iter_1821.tape_ptr - local.code_1822[1] :
      local.code_1822[0] == ">"
        ? local.iter_1821.tape_ptr + local.code_1822[1]
        : local.iter_1821.tape_ptr)

    code_ptr = 2 + (
      local.code_1822[0] == "["
        ? local.iter_1821.tape[local.iter_1821.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1821.code_ptr)] : local.iter_1821.code_ptr :
      local.code_1822[0] == "]"
        ? local.iter_1821.tape[local.iter_1821.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1821.code_ptr)] : local.iter_1821.code_ptr
        : local.iter_1821.code_ptr)

    steps_taken = 1 + local.iter_1821.steps_taken
  }
}

locals {
  code_1823 = (try(local.iter_1822.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1822.code_ptr, local.iter_1822.code_ptr + 2)
    : [null])

  input_1823 = (local.code_1823[0] == ","
    ? substr(local.input_1822, local.code_1823[1], -1)
    : local.input_1822)

  iter_1823 = try(local.iter_1822.code_ptr >= length(var.code), true) ? local.iter_1822 : {
    output = (local.code_1823[0] == "."
      ? "${local.iter_1822.output}${join("", [for _ in range(local.code_1823[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1822.tape[local.iter_1822.tape_ptr]))])}"
      : local.iter_1822.output)
    
    tape = (
      local.code_1823[0] == "+"
        ? [for i, b in local.iter_1822.tape : (i == local.iter_1822.tape_ptr ? (b + local.code_1823[1]) % 256 : b)] :
      local.code_1823[0] == "-"
        ? [for i, b in local.iter_1822.tape : (i == local.iter_1822.tape_ptr ? (b - local.code_1823[1] + 256) % 256 : b)] :
      local.code_1823[0] == ","
        ? [for i, b in local.iter_1822.tape : (i == local.iter_1822.tape_ptr ? local.ascii_lookup[substr(local.input_1823, 0, 1)] : b)]
        : local.iter_1822.tape)

    tape_ptr = (
      local.code_1823[0] == "<"
        ? local.iter_1822.tape_ptr - local.code_1823[1] :
      local.code_1823[0] == ">"
        ? local.iter_1822.tape_ptr + local.code_1823[1]
        : local.iter_1822.tape_ptr)

    code_ptr = 2 + (
      local.code_1823[0] == "["
        ? local.iter_1822.tape[local.iter_1822.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1822.code_ptr)] : local.iter_1822.code_ptr :
      local.code_1823[0] == "]"
        ? local.iter_1822.tape[local.iter_1822.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1822.code_ptr)] : local.iter_1822.code_ptr
        : local.iter_1822.code_ptr)

    steps_taken = 1 + local.iter_1822.steps_taken
  }
}

locals {
  code_1824 = (try(local.iter_1823.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1823.code_ptr, local.iter_1823.code_ptr + 2)
    : [null])

  input_1824 = (local.code_1824[0] == ","
    ? substr(local.input_1823, local.code_1824[1], -1)
    : local.input_1823)

  iter_1824 = try(local.iter_1823.code_ptr >= length(var.code), true) ? local.iter_1823 : {
    output = (local.code_1824[0] == "."
      ? "${local.iter_1823.output}${join("", [for _ in range(local.code_1824[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1823.tape[local.iter_1823.tape_ptr]))])}"
      : local.iter_1823.output)
    
    tape = (
      local.code_1824[0] == "+"
        ? [for i, b in local.iter_1823.tape : (i == local.iter_1823.tape_ptr ? (b + local.code_1824[1]) % 256 : b)] :
      local.code_1824[0] == "-"
        ? [for i, b in local.iter_1823.tape : (i == local.iter_1823.tape_ptr ? (b - local.code_1824[1] + 256) % 256 : b)] :
      local.code_1824[0] == ","
        ? [for i, b in local.iter_1823.tape : (i == local.iter_1823.tape_ptr ? local.ascii_lookup[substr(local.input_1824, 0, 1)] : b)]
        : local.iter_1823.tape)

    tape_ptr = (
      local.code_1824[0] == "<"
        ? local.iter_1823.tape_ptr - local.code_1824[1] :
      local.code_1824[0] == ">"
        ? local.iter_1823.tape_ptr + local.code_1824[1]
        : local.iter_1823.tape_ptr)

    code_ptr = 2 + (
      local.code_1824[0] == "["
        ? local.iter_1823.tape[local.iter_1823.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1823.code_ptr)] : local.iter_1823.code_ptr :
      local.code_1824[0] == "]"
        ? local.iter_1823.tape[local.iter_1823.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1823.code_ptr)] : local.iter_1823.code_ptr
        : local.iter_1823.code_ptr)

    steps_taken = 1 + local.iter_1823.steps_taken
  }
}

locals {
  code_1825 = (try(local.iter_1824.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1824.code_ptr, local.iter_1824.code_ptr + 2)
    : [null])

  input_1825 = (local.code_1825[0] == ","
    ? substr(local.input_1824, local.code_1825[1], -1)
    : local.input_1824)

  iter_1825 = try(local.iter_1824.code_ptr >= length(var.code), true) ? local.iter_1824 : {
    output = (local.code_1825[0] == "."
      ? "${local.iter_1824.output}${join("", [for _ in range(local.code_1825[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1824.tape[local.iter_1824.tape_ptr]))])}"
      : local.iter_1824.output)
    
    tape = (
      local.code_1825[0] == "+"
        ? [for i, b in local.iter_1824.tape : (i == local.iter_1824.tape_ptr ? (b + local.code_1825[1]) % 256 : b)] :
      local.code_1825[0] == "-"
        ? [for i, b in local.iter_1824.tape : (i == local.iter_1824.tape_ptr ? (b - local.code_1825[1] + 256) % 256 : b)] :
      local.code_1825[0] == ","
        ? [for i, b in local.iter_1824.tape : (i == local.iter_1824.tape_ptr ? local.ascii_lookup[substr(local.input_1825, 0, 1)] : b)]
        : local.iter_1824.tape)

    tape_ptr = (
      local.code_1825[0] == "<"
        ? local.iter_1824.tape_ptr - local.code_1825[1] :
      local.code_1825[0] == ">"
        ? local.iter_1824.tape_ptr + local.code_1825[1]
        : local.iter_1824.tape_ptr)

    code_ptr = 2 + (
      local.code_1825[0] == "["
        ? local.iter_1824.tape[local.iter_1824.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1824.code_ptr)] : local.iter_1824.code_ptr :
      local.code_1825[0] == "]"
        ? local.iter_1824.tape[local.iter_1824.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1824.code_ptr)] : local.iter_1824.code_ptr
        : local.iter_1824.code_ptr)

    steps_taken = 1 + local.iter_1824.steps_taken
  }
}

locals {
  code_1826 = (try(local.iter_1825.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1825.code_ptr, local.iter_1825.code_ptr + 2)
    : [null])

  input_1826 = (local.code_1826[0] == ","
    ? substr(local.input_1825, local.code_1826[1], -1)
    : local.input_1825)

  iter_1826 = try(local.iter_1825.code_ptr >= length(var.code), true) ? local.iter_1825 : {
    output = (local.code_1826[0] == "."
      ? "${local.iter_1825.output}${join("", [for _ in range(local.code_1826[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1825.tape[local.iter_1825.tape_ptr]))])}"
      : local.iter_1825.output)
    
    tape = (
      local.code_1826[0] == "+"
        ? [for i, b in local.iter_1825.tape : (i == local.iter_1825.tape_ptr ? (b + local.code_1826[1]) % 256 : b)] :
      local.code_1826[0] == "-"
        ? [for i, b in local.iter_1825.tape : (i == local.iter_1825.tape_ptr ? (b - local.code_1826[1] + 256) % 256 : b)] :
      local.code_1826[0] == ","
        ? [for i, b in local.iter_1825.tape : (i == local.iter_1825.tape_ptr ? local.ascii_lookup[substr(local.input_1826, 0, 1)] : b)]
        : local.iter_1825.tape)

    tape_ptr = (
      local.code_1826[0] == "<"
        ? local.iter_1825.tape_ptr - local.code_1826[1] :
      local.code_1826[0] == ">"
        ? local.iter_1825.tape_ptr + local.code_1826[1]
        : local.iter_1825.tape_ptr)

    code_ptr = 2 + (
      local.code_1826[0] == "["
        ? local.iter_1825.tape[local.iter_1825.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1825.code_ptr)] : local.iter_1825.code_ptr :
      local.code_1826[0] == "]"
        ? local.iter_1825.tape[local.iter_1825.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1825.code_ptr)] : local.iter_1825.code_ptr
        : local.iter_1825.code_ptr)

    steps_taken = 1 + local.iter_1825.steps_taken
  }
}

locals {
  code_1827 = (try(local.iter_1826.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1826.code_ptr, local.iter_1826.code_ptr + 2)
    : [null])

  input_1827 = (local.code_1827[0] == ","
    ? substr(local.input_1826, local.code_1827[1], -1)
    : local.input_1826)

  iter_1827 = try(local.iter_1826.code_ptr >= length(var.code), true) ? local.iter_1826 : {
    output = (local.code_1827[0] == "."
      ? "${local.iter_1826.output}${join("", [for _ in range(local.code_1827[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1826.tape[local.iter_1826.tape_ptr]))])}"
      : local.iter_1826.output)
    
    tape = (
      local.code_1827[0] == "+"
        ? [for i, b in local.iter_1826.tape : (i == local.iter_1826.tape_ptr ? (b + local.code_1827[1]) % 256 : b)] :
      local.code_1827[0] == "-"
        ? [for i, b in local.iter_1826.tape : (i == local.iter_1826.tape_ptr ? (b - local.code_1827[1] + 256) % 256 : b)] :
      local.code_1827[0] == ","
        ? [for i, b in local.iter_1826.tape : (i == local.iter_1826.tape_ptr ? local.ascii_lookup[substr(local.input_1827, 0, 1)] : b)]
        : local.iter_1826.tape)

    tape_ptr = (
      local.code_1827[0] == "<"
        ? local.iter_1826.tape_ptr - local.code_1827[1] :
      local.code_1827[0] == ">"
        ? local.iter_1826.tape_ptr + local.code_1827[1]
        : local.iter_1826.tape_ptr)

    code_ptr = 2 + (
      local.code_1827[0] == "["
        ? local.iter_1826.tape[local.iter_1826.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1826.code_ptr)] : local.iter_1826.code_ptr :
      local.code_1827[0] == "]"
        ? local.iter_1826.tape[local.iter_1826.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1826.code_ptr)] : local.iter_1826.code_ptr
        : local.iter_1826.code_ptr)

    steps_taken = 1 + local.iter_1826.steps_taken
  }
}

locals {
  code_1828 = (try(local.iter_1827.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1827.code_ptr, local.iter_1827.code_ptr + 2)
    : [null])

  input_1828 = (local.code_1828[0] == ","
    ? substr(local.input_1827, local.code_1828[1], -1)
    : local.input_1827)

  iter_1828 = try(local.iter_1827.code_ptr >= length(var.code), true) ? local.iter_1827 : {
    output = (local.code_1828[0] == "."
      ? "${local.iter_1827.output}${join("", [for _ in range(local.code_1828[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1827.tape[local.iter_1827.tape_ptr]))])}"
      : local.iter_1827.output)
    
    tape = (
      local.code_1828[0] == "+"
        ? [for i, b in local.iter_1827.tape : (i == local.iter_1827.tape_ptr ? (b + local.code_1828[1]) % 256 : b)] :
      local.code_1828[0] == "-"
        ? [for i, b in local.iter_1827.tape : (i == local.iter_1827.tape_ptr ? (b - local.code_1828[1] + 256) % 256 : b)] :
      local.code_1828[0] == ","
        ? [for i, b in local.iter_1827.tape : (i == local.iter_1827.tape_ptr ? local.ascii_lookup[substr(local.input_1828, 0, 1)] : b)]
        : local.iter_1827.tape)

    tape_ptr = (
      local.code_1828[0] == "<"
        ? local.iter_1827.tape_ptr - local.code_1828[1] :
      local.code_1828[0] == ">"
        ? local.iter_1827.tape_ptr + local.code_1828[1]
        : local.iter_1827.tape_ptr)

    code_ptr = 2 + (
      local.code_1828[0] == "["
        ? local.iter_1827.tape[local.iter_1827.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1827.code_ptr)] : local.iter_1827.code_ptr :
      local.code_1828[0] == "]"
        ? local.iter_1827.tape[local.iter_1827.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1827.code_ptr)] : local.iter_1827.code_ptr
        : local.iter_1827.code_ptr)

    steps_taken = 1 + local.iter_1827.steps_taken
  }
}

locals {
  code_1829 = (try(local.iter_1828.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1828.code_ptr, local.iter_1828.code_ptr + 2)
    : [null])

  input_1829 = (local.code_1829[0] == ","
    ? substr(local.input_1828, local.code_1829[1], -1)
    : local.input_1828)

  iter_1829 = try(local.iter_1828.code_ptr >= length(var.code), true) ? local.iter_1828 : {
    output = (local.code_1829[0] == "."
      ? "${local.iter_1828.output}${join("", [for _ in range(local.code_1829[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1828.tape[local.iter_1828.tape_ptr]))])}"
      : local.iter_1828.output)
    
    tape = (
      local.code_1829[0] == "+"
        ? [for i, b in local.iter_1828.tape : (i == local.iter_1828.tape_ptr ? (b + local.code_1829[1]) % 256 : b)] :
      local.code_1829[0] == "-"
        ? [for i, b in local.iter_1828.tape : (i == local.iter_1828.tape_ptr ? (b - local.code_1829[1] + 256) % 256 : b)] :
      local.code_1829[0] == ","
        ? [for i, b in local.iter_1828.tape : (i == local.iter_1828.tape_ptr ? local.ascii_lookup[substr(local.input_1829, 0, 1)] : b)]
        : local.iter_1828.tape)

    tape_ptr = (
      local.code_1829[0] == "<"
        ? local.iter_1828.tape_ptr - local.code_1829[1] :
      local.code_1829[0] == ">"
        ? local.iter_1828.tape_ptr + local.code_1829[1]
        : local.iter_1828.tape_ptr)

    code_ptr = 2 + (
      local.code_1829[0] == "["
        ? local.iter_1828.tape[local.iter_1828.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1828.code_ptr)] : local.iter_1828.code_ptr :
      local.code_1829[0] == "]"
        ? local.iter_1828.tape[local.iter_1828.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1828.code_ptr)] : local.iter_1828.code_ptr
        : local.iter_1828.code_ptr)

    steps_taken = 1 + local.iter_1828.steps_taken
  }
}

locals {
  code_1830 = (try(local.iter_1829.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1829.code_ptr, local.iter_1829.code_ptr + 2)
    : [null])

  input_1830 = (local.code_1830[0] == ","
    ? substr(local.input_1829, local.code_1830[1], -1)
    : local.input_1829)

  iter_1830 = try(local.iter_1829.code_ptr >= length(var.code), true) ? local.iter_1829 : {
    output = (local.code_1830[0] == "."
      ? "${local.iter_1829.output}${join("", [for _ in range(local.code_1830[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1829.tape[local.iter_1829.tape_ptr]))])}"
      : local.iter_1829.output)
    
    tape = (
      local.code_1830[0] == "+"
        ? [for i, b in local.iter_1829.tape : (i == local.iter_1829.tape_ptr ? (b + local.code_1830[1]) % 256 : b)] :
      local.code_1830[0] == "-"
        ? [for i, b in local.iter_1829.tape : (i == local.iter_1829.tape_ptr ? (b - local.code_1830[1] + 256) % 256 : b)] :
      local.code_1830[0] == ","
        ? [for i, b in local.iter_1829.tape : (i == local.iter_1829.tape_ptr ? local.ascii_lookup[substr(local.input_1830, 0, 1)] : b)]
        : local.iter_1829.tape)

    tape_ptr = (
      local.code_1830[0] == "<"
        ? local.iter_1829.tape_ptr - local.code_1830[1] :
      local.code_1830[0] == ">"
        ? local.iter_1829.tape_ptr + local.code_1830[1]
        : local.iter_1829.tape_ptr)

    code_ptr = 2 + (
      local.code_1830[0] == "["
        ? local.iter_1829.tape[local.iter_1829.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1829.code_ptr)] : local.iter_1829.code_ptr :
      local.code_1830[0] == "]"
        ? local.iter_1829.tape[local.iter_1829.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1829.code_ptr)] : local.iter_1829.code_ptr
        : local.iter_1829.code_ptr)

    steps_taken = 1 + local.iter_1829.steps_taken
  }
}

locals {
  code_1831 = (try(local.iter_1830.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1830.code_ptr, local.iter_1830.code_ptr + 2)
    : [null])

  input_1831 = (local.code_1831[0] == ","
    ? substr(local.input_1830, local.code_1831[1], -1)
    : local.input_1830)

  iter_1831 = try(local.iter_1830.code_ptr >= length(var.code), true) ? local.iter_1830 : {
    output = (local.code_1831[0] == "."
      ? "${local.iter_1830.output}${join("", [for _ in range(local.code_1831[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1830.tape[local.iter_1830.tape_ptr]))])}"
      : local.iter_1830.output)
    
    tape = (
      local.code_1831[0] == "+"
        ? [for i, b in local.iter_1830.tape : (i == local.iter_1830.tape_ptr ? (b + local.code_1831[1]) % 256 : b)] :
      local.code_1831[0] == "-"
        ? [for i, b in local.iter_1830.tape : (i == local.iter_1830.tape_ptr ? (b - local.code_1831[1] + 256) % 256 : b)] :
      local.code_1831[0] == ","
        ? [for i, b in local.iter_1830.tape : (i == local.iter_1830.tape_ptr ? local.ascii_lookup[substr(local.input_1831, 0, 1)] : b)]
        : local.iter_1830.tape)

    tape_ptr = (
      local.code_1831[0] == "<"
        ? local.iter_1830.tape_ptr - local.code_1831[1] :
      local.code_1831[0] == ">"
        ? local.iter_1830.tape_ptr + local.code_1831[1]
        : local.iter_1830.tape_ptr)

    code_ptr = 2 + (
      local.code_1831[0] == "["
        ? local.iter_1830.tape[local.iter_1830.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1830.code_ptr)] : local.iter_1830.code_ptr :
      local.code_1831[0] == "]"
        ? local.iter_1830.tape[local.iter_1830.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1830.code_ptr)] : local.iter_1830.code_ptr
        : local.iter_1830.code_ptr)

    steps_taken = 1 + local.iter_1830.steps_taken
  }
}

locals {
  code_1832 = (try(local.iter_1831.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1831.code_ptr, local.iter_1831.code_ptr + 2)
    : [null])

  input_1832 = (local.code_1832[0] == ","
    ? substr(local.input_1831, local.code_1832[1], -1)
    : local.input_1831)

  iter_1832 = try(local.iter_1831.code_ptr >= length(var.code), true) ? local.iter_1831 : {
    output = (local.code_1832[0] == "."
      ? "${local.iter_1831.output}${join("", [for _ in range(local.code_1832[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1831.tape[local.iter_1831.tape_ptr]))])}"
      : local.iter_1831.output)
    
    tape = (
      local.code_1832[0] == "+"
        ? [for i, b in local.iter_1831.tape : (i == local.iter_1831.tape_ptr ? (b + local.code_1832[1]) % 256 : b)] :
      local.code_1832[0] == "-"
        ? [for i, b in local.iter_1831.tape : (i == local.iter_1831.tape_ptr ? (b - local.code_1832[1] + 256) % 256 : b)] :
      local.code_1832[0] == ","
        ? [for i, b in local.iter_1831.tape : (i == local.iter_1831.tape_ptr ? local.ascii_lookup[substr(local.input_1832, 0, 1)] : b)]
        : local.iter_1831.tape)

    tape_ptr = (
      local.code_1832[0] == "<"
        ? local.iter_1831.tape_ptr - local.code_1832[1] :
      local.code_1832[0] == ">"
        ? local.iter_1831.tape_ptr + local.code_1832[1]
        : local.iter_1831.tape_ptr)

    code_ptr = 2 + (
      local.code_1832[0] == "["
        ? local.iter_1831.tape[local.iter_1831.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1831.code_ptr)] : local.iter_1831.code_ptr :
      local.code_1832[0] == "]"
        ? local.iter_1831.tape[local.iter_1831.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1831.code_ptr)] : local.iter_1831.code_ptr
        : local.iter_1831.code_ptr)

    steps_taken = 1 + local.iter_1831.steps_taken
  }
}

locals {
  code_1833 = (try(local.iter_1832.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1832.code_ptr, local.iter_1832.code_ptr + 2)
    : [null])

  input_1833 = (local.code_1833[0] == ","
    ? substr(local.input_1832, local.code_1833[1], -1)
    : local.input_1832)

  iter_1833 = try(local.iter_1832.code_ptr >= length(var.code), true) ? local.iter_1832 : {
    output = (local.code_1833[0] == "."
      ? "${local.iter_1832.output}${join("", [for _ in range(local.code_1833[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1832.tape[local.iter_1832.tape_ptr]))])}"
      : local.iter_1832.output)
    
    tape = (
      local.code_1833[0] == "+"
        ? [for i, b in local.iter_1832.tape : (i == local.iter_1832.tape_ptr ? (b + local.code_1833[1]) % 256 : b)] :
      local.code_1833[0] == "-"
        ? [for i, b in local.iter_1832.tape : (i == local.iter_1832.tape_ptr ? (b - local.code_1833[1] + 256) % 256 : b)] :
      local.code_1833[0] == ","
        ? [for i, b in local.iter_1832.tape : (i == local.iter_1832.tape_ptr ? local.ascii_lookup[substr(local.input_1833, 0, 1)] : b)]
        : local.iter_1832.tape)

    tape_ptr = (
      local.code_1833[0] == "<"
        ? local.iter_1832.tape_ptr - local.code_1833[1] :
      local.code_1833[0] == ">"
        ? local.iter_1832.tape_ptr + local.code_1833[1]
        : local.iter_1832.tape_ptr)

    code_ptr = 2 + (
      local.code_1833[0] == "["
        ? local.iter_1832.tape[local.iter_1832.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1832.code_ptr)] : local.iter_1832.code_ptr :
      local.code_1833[0] == "]"
        ? local.iter_1832.tape[local.iter_1832.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1832.code_ptr)] : local.iter_1832.code_ptr
        : local.iter_1832.code_ptr)

    steps_taken = 1 + local.iter_1832.steps_taken
  }
}

locals {
  code_1834 = (try(local.iter_1833.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1833.code_ptr, local.iter_1833.code_ptr + 2)
    : [null])

  input_1834 = (local.code_1834[0] == ","
    ? substr(local.input_1833, local.code_1834[1], -1)
    : local.input_1833)

  iter_1834 = try(local.iter_1833.code_ptr >= length(var.code), true) ? local.iter_1833 : {
    output = (local.code_1834[0] == "."
      ? "${local.iter_1833.output}${join("", [for _ in range(local.code_1834[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1833.tape[local.iter_1833.tape_ptr]))])}"
      : local.iter_1833.output)
    
    tape = (
      local.code_1834[0] == "+"
        ? [for i, b in local.iter_1833.tape : (i == local.iter_1833.tape_ptr ? (b + local.code_1834[1]) % 256 : b)] :
      local.code_1834[0] == "-"
        ? [for i, b in local.iter_1833.tape : (i == local.iter_1833.tape_ptr ? (b - local.code_1834[1] + 256) % 256 : b)] :
      local.code_1834[0] == ","
        ? [for i, b in local.iter_1833.tape : (i == local.iter_1833.tape_ptr ? local.ascii_lookup[substr(local.input_1834, 0, 1)] : b)]
        : local.iter_1833.tape)

    tape_ptr = (
      local.code_1834[0] == "<"
        ? local.iter_1833.tape_ptr - local.code_1834[1] :
      local.code_1834[0] == ">"
        ? local.iter_1833.tape_ptr + local.code_1834[1]
        : local.iter_1833.tape_ptr)

    code_ptr = 2 + (
      local.code_1834[0] == "["
        ? local.iter_1833.tape[local.iter_1833.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1833.code_ptr)] : local.iter_1833.code_ptr :
      local.code_1834[0] == "]"
        ? local.iter_1833.tape[local.iter_1833.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1833.code_ptr)] : local.iter_1833.code_ptr
        : local.iter_1833.code_ptr)

    steps_taken = 1 + local.iter_1833.steps_taken
  }
}

locals {
  code_1835 = (try(local.iter_1834.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1834.code_ptr, local.iter_1834.code_ptr + 2)
    : [null])

  input_1835 = (local.code_1835[0] == ","
    ? substr(local.input_1834, local.code_1835[1], -1)
    : local.input_1834)

  iter_1835 = try(local.iter_1834.code_ptr >= length(var.code), true) ? local.iter_1834 : {
    output = (local.code_1835[0] == "."
      ? "${local.iter_1834.output}${join("", [for _ in range(local.code_1835[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1834.tape[local.iter_1834.tape_ptr]))])}"
      : local.iter_1834.output)
    
    tape = (
      local.code_1835[0] == "+"
        ? [for i, b in local.iter_1834.tape : (i == local.iter_1834.tape_ptr ? (b + local.code_1835[1]) % 256 : b)] :
      local.code_1835[0] == "-"
        ? [for i, b in local.iter_1834.tape : (i == local.iter_1834.tape_ptr ? (b - local.code_1835[1] + 256) % 256 : b)] :
      local.code_1835[0] == ","
        ? [for i, b in local.iter_1834.tape : (i == local.iter_1834.tape_ptr ? local.ascii_lookup[substr(local.input_1835, 0, 1)] : b)]
        : local.iter_1834.tape)

    tape_ptr = (
      local.code_1835[0] == "<"
        ? local.iter_1834.tape_ptr - local.code_1835[1] :
      local.code_1835[0] == ">"
        ? local.iter_1834.tape_ptr + local.code_1835[1]
        : local.iter_1834.tape_ptr)

    code_ptr = 2 + (
      local.code_1835[0] == "["
        ? local.iter_1834.tape[local.iter_1834.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1834.code_ptr)] : local.iter_1834.code_ptr :
      local.code_1835[0] == "]"
        ? local.iter_1834.tape[local.iter_1834.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1834.code_ptr)] : local.iter_1834.code_ptr
        : local.iter_1834.code_ptr)

    steps_taken = 1 + local.iter_1834.steps_taken
  }
}

locals {
  code_1836 = (try(local.iter_1835.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1835.code_ptr, local.iter_1835.code_ptr + 2)
    : [null])

  input_1836 = (local.code_1836[0] == ","
    ? substr(local.input_1835, local.code_1836[1], -1)
    : local.input_1835)

  iter_1836 = try(local.iter_1835.code_ptr >= length(var.code), true) ? local.iter_1835 : {
    output = (local.code_1836[0] == "."
      ? "${local.iter_1835.output}${join("", [for _ in range(local.code_1836[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1835.tape[local.iter_1835.tape_ptr]))])}"
      : local.iter_1835.output)
    
    tape = (
      local.code_1836[0] == "+"
        ? [for i, b in local.iter_1835.tape : (i == local.iter_1835.tape_ptr ? (b + local.code_1836[1]) % 256 : b)] :
      local.code_1836[0] == "-"
        ? [for i, b in local.iter_1835.tape : (i == local.iter_1835.tape_ptr ? (b - local.code_1836[1] + 256) % 256 : b)] :
      local.code_1836[0] == ","
        ? [for i, b in local.iter_1835.tape : (i == local.iter_1835.tape_ptr ? local.ascii_lookup[substr(local.input_1836, 0, 1)] : b)]
        : local.iter_1835.tape)

    tape_ptr = (
      local.code_1836[0] == "<"
        ? local.iter_1835.tape_ptr - local.code_1836[1] :
      local.code_1836[0] == ">"
        ? local.iter_1835.tape_ptr + local.code_1836[1]
        : local.iter_1835.tape_ptr)

    code_ptr = 2 + (
      local.code_1836[0] == "["
        ? local.iter_1835.tape[local.iter_1835.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1835.code_ptr)] : local.iter_1835.code_ptr :
      local.code_1836[0] == "]"
        ? local.iter_1835.tape[local.iter_1835.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1835.code_ptr)] : local.iter_1835.code_ptr
        : local.iter_1835.code_ptr)

    steps_taken = 1 + local.iter_1835.steps_taken
  }
}

locals {
  code_1837 = (try(local.iter_1836.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1836.code_ptr, local.iter_1836.code_ptr + 2)
    : [null])

  input_1837 = (local.code_1837[0] == ","
    ? substr(local.input_1836, local.code_1837[1], -1)
    : local.input_1836)

  iter_1837 = try(local.iter_1836.code_ptr >= length(var.code), true) ? local.iter_1836 : {
    output = (local.code_1837[0] == "."
      ? "${local.iter_1836.output}${join("", [for _ in range(local.code_1837[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1836.tape[local.iter_1836.tape_ptr]))])}"
      : local.iter_1836.output)
    
    tape = (
      local.code_1837[0] == "+"
        ? [for i, b in local.iter_1836.tape : (i == local.iter_1836.tape_ptr ? (b + local.code_1837[1]) % 256 : b)] :
      local.code_1837[0] == "-"
        ? [for i, b in local.iter_1836.tape : (i == local.iter_1836.tape_ptr ? (b - local.code_1837[1] + 256) % 256 : b)] :
      local.code_1837[0] == ","
        ? [for i, b in local.iter_1836.tape : (i == local.iter_1836.tape_ptr ? local.ascii_lookup[substr(local.input_1837, 0, 1)] : b)]
        : local.iter_1836.tape)

    tape_ptr = (
      local.code_1837[0] == "<"
        ? local.iter_1836.tape_ptr - local.code_1837[1] :
      local.code_1837[0] == ">"
        ? local.iter_1836.tape_ptr + local.code_1837[1]
        : local.iter_1836.tape_ptr)

    code_ptr = 2 + (
      local.code_1837[0] == "["
        ? local.iter_1836.tape[local.iter_1836.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1836.code_ptr)] : local.iter_1836.code_ptr :
      local.code_1837[0] == "]"
        ? local.iter_1836.tape[local.iter_1836.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1836.code_ptr)] : local.iter_1836.code_ptr
        : local.iter_1836.code_ptr)

    steps_taken = 1 + local.iter_1836.steps_taken
  }
}

locals {
  code_1838 = (try(local.iter_1837.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1837.code_ptr, local.iter_1837.code_ptr + 2)
    : [null])

  input_1838 = (local.code_1838[0] == ","
    ? substr(local.input_1837, local.code_1838[1], -1)
    : local.input_1837)

  iter_1838 = try(local.iter_1837.code_ptr >= length(var.code), true) ? local.iter_1837 : {
    output = (local.code_1838[0] == "."
      ? "${local.iter_1837.output}${join("", [for _ in range(local.code_1838[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1837.tape[local.iter_1837.tape_ptr]))])}"
      : local.iter_1837.output)
    
    tape = (
      local.code_1838[0] == "+"
        ? [for i, b in local.iter_1837.tape : (i == local.iter_1837.tape_ptr ? (b + local.code_1838[1]) % 256 : b)] :
      local.code_1838[0] == "-"
        ? [for i, b in local.iter_1837.tape : (i == local.iter_1837.tape_ptr ? (b - local.code_1838[1] + 256) % 256 : b)] :
      local.code_1838[0] == ","
        ? [for i, b in local.iter_1837.tape : (i == local.iter_1837.tape_ptr ? local.ascii_lookup[substr(local.input_1838, 0, 1)] : b)]
        : local.iter_1837.tape)

    tape_ptr = (
      local.code_1838[0] == "<"
        ? local.iter_1837.tape_ptr - local.code_1838[1] :
      local.code_1838[0] == ">"
        ? local.iter_1837.tape_ptr + local.code_1838[1]
        : local.iter_1837.tape_ptr)

    code_ptr = 2 + (
      local.code_1838[0] == "["
        ? local.iter_1837.tape[local.iter_1837.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1837.code_ptr)] : local.iter_1837.code_ptr :
      local.code_1838[0] == "]"
        ? local.iter_1837.tape[local.iter_1837.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1837.code_ptr)] : local.iter_1837.code_ptr
        : local.iter_1837.code_ptr)

    steps_taken = 1 + local.iter_1837.steps_taken
  }
}

locals {
  code_1839 = (try(local.iter_1838.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1838.code_ptr, local.iter_1838.code_ptr + 2)
    : [null])

  input_1839 = (local.code_1839[0] == ","
    ? substr(local.input_1838, local.code_1839[1], -1)
    : local.input_1838)

  iter_1839 = try(local.iter_1838.code_ptr >= length(var.code), true) ? local.iter_1838 : {
    output = (local.code_1839[0] == "."
      ? "${local.iter_1838.output}${join("", [for _ in range(local.code_1839[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1838.tape[local.iter_1838.tape_ptr]))])}"
      : local.iter_1838.output)
    
    tape = (
      local.code_1839[0] == "+"
        ? [for i, b in local.iter_1838.tape : (i == local.iter_1838.tape_ptr ? (b + local.code_1839[1]) % 256 : b)] :
      local.code_1839[0] == "-"
        ? [for i, b in local.iter_1838.tape : (i == local.iter_1838.tape_ptr ? (b - local.code_1839[1] + 256) % 256 : b)] :
      local.code_1839[0] == ","
        ? [for i, b in local.iter_1838.tape : (i == local.iter_1838.tape_ptr ? local.ascii_lookup[substr(local.input_1839, 0, 1)] : b)]
        : local.iter_1838.tape)

    tape_ptr = (
      local.code_1839[0] == "<"
        ? local.iter_1838.tape_ptr - local.code_1839[1] :
      local.code_1839[0] == ">"
        ? local.iter_1838.tape_ptr + local.code_1839[1]
        : local.iter_1838.tape_ptr)

    code_ptr = 2 + (
      local.code_1839[0] == "["
        ? local.iter_1838.tape[local.iter_1838.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1838.code_ptr)] : local.iter_1838.code_ptr :
      local.code_1839[0] == "]"
        ? local.iter_1838.tape[local.iter_1838.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1838.code_ptr)] : local.iter_1838.code_ptr
        : local.iter_1838.code_ptr)

    steps_taken = 1 + local.iter_1838.steps_taken
  }
}

locals {
  code_1840 = (try(local.iter_1839.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1839.code_ptr, local.iter_1839.code_ptr + 2)
    : [null])

  input_1840 = (local.code_1840[0] == ","
    ? substr(local.input_1839, local.code_1840[1], -1)
    : local.input_1839)

  iter_1840 = try(local.iter_1839.code_ptr >= length(var.code), true) ? local.iter_1839 : {
    output = (local.code_1840[0] == "."
      ? "${local.iter_1839.output}${join("", [for _ in range(local.code_1840[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1839.tape[local.iter_1839.tape_ptr]))])}"
      : local.iter_1839.output)
    
    tape = (
      local.code_1840[0] == "+"
        ? [for i, b in local.iter_1839.tape : (i == local.iter_1839.tape_ptr ? (b + local.code_1840[1]) % 256 : b)] :
      local.code_1840[0] == "-"
        ? [for i, b in local.iter_1839.tape : (i == local.iter_1839.tape_ptr ? (b - local.code_1840[1] + 256) % 256 : b)] :
      local.code_1840[0] == ","
        ? [for i, b in local.iter_1839.tape : (i == local.iter_1839.tape_ptr ? local.ascii_lookup[substr(local.input_1840, 0, 1)] : b)]
        : local.iter_1839.tape)

    tape_ptr = (
      local.code_1840[0] == "<"
        ? local.iter_1839.tape_ptr - local.code_1840[1] :
      local.code_1840[0] == ">"
        ? local.iter_1839.tape_ptr + local.code_1840[1]
        : local.iter_1839.tape_ptr)

    code_ptr = 2 + (
      local.code_1840[0] == "["
        ? local.iter_1839.tape[local.iter_1839.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1839.code_ptr)] : local.iter_1839.code_ptr :
      local.code_1840[0] == "]"
        ? local.iter_1839.tape[local.iter_1839.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1839.code_ptr)] : local.iter_1839.code_ptr
        : local.iter_1839.code_ptr)

    steps_taken = 1 + local.iter_1839.steps_taken
  }
}

locals {
  code_1841 = (try(local.iter_1840.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1840.code_ptr, local.iter_1840.code_ptr + 2)
    : [null])

  input_1841 = (local.code_1841[0] == ","
    ? substr(local.input_1840, local.code_1841[1], -1)
    : local.input_1840)

  iter_1841 = try(local.iter_1840.code_ptr >= length(var.code), true) ? local.iter_1840 : {
    output = (local.code_1841[0] == "."
      ? "${local.iter_1840.output}${join("", [for _ in range(local.code_1841[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1840.tape[local.iter_1840.tape_ptr]))])}"
      : local.iter_1840.output)
    
    tape = (
      local.code_1841[0] == "+"
        ? [for i, b in local.iter_1840.tape : (i == local.iter_1840.tape_ptr ? (b + local.code_1841[1]) % 256 : b)] :
      local.code_1841[0] == "-"
        ? [for i, b in local.iter_1840.tape : (i == local.iter_1840.tape_ptr ? (b - local.code_1841[1] + 256) % 256 : b)] :
      local.code_1841[0] == ","
        ? [for i, b in local.iter_1840.tape : (i == local.iter_1840.tape_ptr ? local.ascii_lookup[substr(local.input_1841, 0, 1)] : b)]
        : local.iter_1840.tape)

    tape_ptr = (
      local.code_1841[0] == "<"
        ? local.iter_1840.tape_ptr - local.code_1841[1] :
      local.code_1841[0] == ">"
        ? local.iter_1840.tape_ptr + local.code_1841[1]
        : local.iter_1840.tape_ptr)

    code_ptr = 2 + (
      local.code_1841[0] == "["
        ? local.iter_1840.tape[local.iter_1840.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1840.code_ptr)] : local.iter_1840.code_ptr :
      local.code_1841[0] == "]"
        ? local.iter_1840.tape[local.iter_1840.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1840.code_ptr)] : local.iter_1840.code_ptr
        : local.iter_1840.code_ptr)

    steps_taken = 1 + local.iter_1840.steps_taken
  }
}

locals {
  code_1842 = (try(local.iter_1841.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1841.code_ptr, local.iter_1841.code_ptr + 2)
    : [null])

  input_1842 = (local.code_1842[0] == ","
    ? substr(local.input_1841, local.code_1842[1], -1)
    : local.input_1841)

  iter_1842 = try(local.iter_1841.code_ptr >= length(var.code), true) ? local.iter_1841 : {
    output = (local.code_1842[0] == "."
      ? "${local.iter_1841.output}${join("", [for _ in range(local.code_1842[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1841.tape[local.iter_1841.tape_ptr]))])}"
      : local.iter_1841.output)
    
    tape = (
      local.code_1842[0] == "+"
        ? [for i, b in local.iter_1841.tape : (i == local.iter_1841.tape_ptr ? (b + local.code_1842[1]) % 256 : b)] :
      local.code_1842[0] == "-"
        ? [for i, b in local.iter_1841.tape : (i == local.iter_1841.tape_ptr ? (b - local.code_1842[1] + 256) % 256 : b)] :
      local.code_1842[0] == ","
        ? [for i, b in local.iter_1841.tape : (i == local.iter_1841.tape_ptr ? local.ascii_lookup[substr(local.input_1842, 0, 1)] : b)]
        : local.iter_1841.tape)

    tape_ptr = (
      local.code_1842[0] == "<"
        ? local.iter_1841.tape_ptr - local.code_1842[1] :
      local.code_1842[0] == ">"
        ? local.iter_1841.tape_ptr + local.code_1842[1]
        : local.iter_1841.tape_ptr)

    code_ptr = 2 + (
      local.code_1842[0] == "["
        ? local.iter_1841.tape[local.iter_1841.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1841.code_ptr)] : local.iter_1841.code_ptr :
      local.code_1842[0] == "]"
        ? local.iter_1841.tape[local.iter_1841.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1841.code_ptr)] : local.iter_1841.code_ptr
        : local.iter_1841.code_ptr)

    steps_taken = 1 + local.iter_1841.steps_taken
  }
}

locals {
  code_1843 = (try(local.iter_1842.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1842.code_ptr, local.iter_1842.code_ptr + 2)
    : [null])

  input_1843 = (local.code_1843[0] == ","
    ? substr(local.input_1842, local.code_1843[1], -1)
    : local.input_1842)

  iter_1843 = try(local.iter_1842.code_ptr >= length(var.code), true) ? local.iter_1842 : {
    output = (local.code_1843[0] == "."
      ? "${local.iter_1842.output}${join("", [for _ in range(local.code_1843[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1842.tape[local.iter_1842.tape_ptr]))])}"
      : local.iter_1842.output)
    
    tape = (
      local.code_1843[0] == "+"
        ? [for i, b in local.iter_1842.tape : (i == local.iter_1842.tape_ptr ? (b + local.code_1843[1]) % 256 : b)] :
      local.code_1843[0] == "-"
        ? [for i, b in local.iter_1842.tape : (i == local.iter_1842.tape_ptr ? (b - local.code_1843[1] + 256) % 256 : b)] :
      local.code_1843[0] == ","
        ? [for i, b in local.iter_1842.tape : (i == local.iter_1842.tape_ptr ? local.ascii_lookup[substr(local.input_1843, 0, 1)] : b)]
        : local.iter_1842.tape)

    tape_ptr = (
      local.code_1843[0] == "<"
        ? local.iter_1842.tape_ptr - local.code_1843[1] :
      local.code_1843[0] == ">"
        ? local.iter_1842.tape_ptr + local.code_1843[1]
        : local.iter_1842.tape_ptr)

    code_ptr = 2 + (
      local.code_1843[0] == "["
        ? local.iter_1842.tape[local.iter_1842.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1842.code_ptr)] : local.iter_1842.code_ptr :
      local.code_1843[0] == "]"
        ? local.iter_1842.tape[local.iter_1842.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1842.code_ptr)] : local.iter_1842.code_ptr
        : local.iter_1842.code_ptr)

    steps_taken = 1 + local.iter_1842.steps_taken
  }
}

locals {
  code_1844 = (try(local.iter_1843.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1843.code_ptr, local.iter_1843.code_ptr + 2)
    : [null])

  input_1844 = (local.code_1844[0] == ","
    ? substr(local.input_1843, local.code_1844[1], -1)
    : local.input_1843)

  iter_1844 = try(local.iter_1843.code_ptr >= length(var.code), true) ? local.iter_1843 : {
    output = (local.code_1844[0] == "."
      ? "${local.iter_1843.output}${join("", [for _ in range(local.code_1844[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1843.tape[local.iter_1843.tape_ptr]))])}"
      : local.iter_1843.output)
    
    tape = (
      local.code_1844[0] == "+"
        ? [for i, b in local.iter_1843.tape : (i == local.iter_1843.tape_ptr ? (b + local.code_1844[1]) % 256 : b)] :
      local.code_1844[0] == "-"
        ? [for i, b in local.iter_1843.tape : (i == local.iter_1843.tape_ptr ? (b - local.code_1844[1] + 256) % 256 : b)] :
      local.code_1844[0] == ","
        ? [for i, b in local.iter_1843.tape : (i == local.iter_1843.tape_ptr ? local.ascii_lookup[substr(local.input_1844, 0, 1)] : b)]
        : local.iter_1843.tape)

    tape_ptr = (
      local.code_1844[0] == "<"
        ? local.iter_1843.tape_ptr - local.code_1844[1] :
      local.code_1844[0] == ">"
        ? local.iter_1843.tape_ptr + local.code_1844[1]
        : local.iter_1843.tape_ptr)

    code_ptr = 2 + (
      local.code_1844[0] == "["
        ? local.iter_1843.tape[local.iter_1843.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1843.code_ptr)] : local.iter_1843.code_ptr :
      local.code_1844[0] == "]"
        ? local.iter_1843.tape[local.iter_1843.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1843.code_ptr)] : local.iter_1843.code_ptr
        : local.iter_1843.code_ptr)

    steps_taken = 1 + local.iter_1843.steps_taken
  }
}

locals {
  code_1845 = (try(local.iter_1844.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1844.code_ptr, local.iter_1844.code_ptr + 2)
    : [null])

  input_1845 = (local.code_1845[0] == ","
    ? substr(local.input_1844, local.code_1845[1], -1)
    : local.input_1844)

  iter_1845 = try(local.iter_1844.code_ptr >= length(var.code), true) ? local.iter_1844 : {
    output = (local.code_1845[0] == "."
      ? "${local.iter_1844.output}${join("", [for _ in range(local.code_1845[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1844.tape[local.iter_1844.tape_ptr]))])}"
      : local.iter_1844.output)
    
    tape = (
      local.code_1845[0] == "+"
        ? [for i, b in local.iter_1844.tape : (i == local.iter_1844.tape_ptr ? (b + local.code_1845[1]) % 256 : b)] :
      local.code_1845[0] == "-"
        ? [for i, b in local.iter_1844.tape : (i == local.iter_1844.tape_ptr ? (b - local.code_1845[1] + 256) % 256 : b)] :
      local.code_1845[0] == ","
        ? [for i, b in local.iter_1844.tape : (i == local.iter_1844.tape_ptr ? local.ascii_lookup[substr(local.input_1845, 0, 1)] : b)]
        : local.iter_1844.tape)

    tape_ptr = (
      local.code_1845[0] == "<"
        ? local.iter_1844.tape_ptr - local.code_1845[1] :
      local.code_1845[0] == ">"
        ? local.iter_1844.tape_ptr + local.code_1845[1]
        : local.iter_1844.tape_ptr)

    code_ptr = 2 + (
      local.code_1845[0] == "["
        ? local.iter_1844.tape[local.iter_1844.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1844.code_ptr)] : local.iter_1844.code_ptr :
      local.code_1845[0] == "]"
        ? local.iter_1844.tape[local.iter_1844.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1844.code_ptr)] : local.iter_1844.code_ptr
        : local.iter_1844.code_ptr)

    steps_taken = 1 + local.iter_1844.steps_taken
  }
}

locals {
  code_1846 = (try(local.iter_1845.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1845.code_ptr, local.iter_1845.code_ptr + 2)
    : [null])

  input_1846 = (local.code_1846[0] == ","
    ? substr(local.input_1845, local.code_1846[1], -1)
    : local.input_1845)

  iter_1846 = try(local.iter_1845.code_ptr >= length(var.code), true) ? local.iter_1845 : {
    output = (local.code_1846[0] == "."
      ? "${local.iter_1845.output}${join("", [for _ in range(local.code_1846[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1845.tape[local.iter_1845.tape_ptr]))])}"
      : local.iter_1845.output)
    
    tape = (
      local.code_1846[0] == "+"
        ? [for i, b in local.iter_1845.tape : (i == local.iter_1845.tape_ptr ? (b + local.code_1846[1]) % 256 : b)] :
      local.code_1846[0] == "-"
        ? [for i, b in local.iter_1845.tape : (i == local.iter_1845.tape_ptr ? (b - local.code_1846[1] + 256) % 256 : b)] :
      local.code_1846[0] == ","
        ? [for i, b in local.iter_1845.tape : (i == local.iter_1845.tape_ptr ? local.ascii_lookup[substr(local.input_1846, 0, 1)] : b)]
        : local.iter_1845.tape)

    tape_ptr = (
      local.code_1846[0] == "<"
        ? local.iter_1845.tape_ptr - local.code_1846[1] :
      local.code_1846[0] == ">"
        ? local.iter_1845.tape_ptr + local.code_1846[1]
        : local.iter_1845.tape_ptr)

    code_ptr = 2 + (
      local.code_1846[0] == "["
        ? local.iter_1845.tape[local.iter_1845.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1845.code_ptr)] : local.iter_1845.code_ptr :
      local.code_1846[0] == "]"
        ? local.iter_1845.tape[local.iter_1845.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1845.code_ptr)] : local.iter_1845.code_ptr
        : local.iter_1845.code_ptr)

    steps_taken = 1 + local.iter_1845.steps_taken
  }
}

locals {
  code_1847 = (try(local.iter_1846.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1846.code_ptr, local.iter_1846.code_ptr + 2)
    : [null])

  input_1847 = (local.code_1847[0] == ","
    ? substr(local.input_1846, local.code_1847[1], -1)
    : local.input_1846)

  iter_1847 = try(local.iter_1846.code_ptr >= length(var.code), true) ? local.iter_1846 : {
    output = (local.code_1847[0] == "."
      ? "${local.iter_1846.output}${join("", [for _ in range(local.code_1847[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1846.tape[local.iter_1846.tape_ptr]))])}"
      : local.iter_1846.output)
    
    tape = (
      local.code_1847[0] == "+"
        ? [for i, b in local.iter_1846.tape : (i == local.iter_1846.tape_ptr ? (b + local.code_1847[1]) % 256 : b)] :
      local.code_1847[0] == "-"
        ? [for i, b in local.iter_1846.tape : (i == local.iter_1846.tape_ptr ? (b - local.code_1847[1] + 256) % 256 : b)] :
      local.code_1847[0] == ","
        ? [for i, b in local.iter_1846.tape : (i == local.iter_1846.tape_ptr ? local.ascii_lookup[substr(local.input_1847, 0, 1)] : b)]
        : local.iter_1846.tape)

    tape_ptr = (
      local.code_1847[0] == "<"
        ? local.iter_1846.tape_ptr - local.code_1847[1] :
      local.code_1847[0] == ">"
        ? local.iter_1846.tape_ptr + local.code_1847[1]
        : local.iter_1846.tape_ptr)

    code_ptr = 2 + (
      local.code_1847[0] == "["
        ? local.iter_1846.tape[local.iter_1846.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1846.code_ptr)] : local.iter_1846.code_ptr :
      local.code_1847[0] == "]"
        ? local.iter_1846.tape[local.iter_1846.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1846.code_ptr)] : local.iter_1846.code_ptr
        : local.iter_1846.code_ptr)

    steps_taken = 1 + local.iter_1846.steps_taken
  }
}

locals {
  code_1848 = (try(local.iter_1847.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1847.code_ptr, local.iter_1847.code_ptr + 2)
    : [null])

  input_1848 = (local.code_1848[0] == ","
    ? substr(local.input_1847, local.code_1848[1], -1)
    : local.input_1847)

  iter_1848 = try(local.iter_1847.code_ptr >= length(var.code), true) ? local.iter_1847 : {
    output = (local.code_1848[0] == "."
      ? "${local.iter_1847.output}${join("", [for _ in range(local.code_1848[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1847.tape[local.iter_1847.tape_ptr]))])}"
      : local.iter_1847.output)
    
    tape = (
      local.code_1848[0] == "+"
        ? [for i, b in local.iter_1847.tape : (i == local.iter_1847.tape_ptr ? (b + local.code_1848[1]) % 256 : b)] :
      local.code_1848[0] == "-"
        ? [for i, b in local.iter_1847.tape : (i == local.iter_1847.tape_ptr ? (b - local.code_1848[1] + 256) % 256 : b)] :
      local.code_1848[0] == ","
        ? [for i, b in local.iter_1847.tape : (i == local.iter_1847.tape_ptr ? local.ascii_lookup[substr(local.input_1848, 0, 1)] : b)]
        : local.iter_1847.tape)

    tape_ptr = (
      local.code_1848[0] == "<"
        ? local.iter_1847.tape_ptr - local.code_1848[1] :
      local.code_1848[0] == ">"
        ? local.iter_1847.tape_ptr + local.code_1848[1]
        : local.iter_1847.tape_ptr)

    code_ptr = 2 + (
      local.code_1848[0] == "["
        ? local.iter_1847.tape[local.iter_1847.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1847.code_ptr)] : local.iter_1847.code_ptr :
      local.code_1848[0] == "]"
        ? local.iter_1847.tape[local.iter_1847.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1847.code_ptr)] : local.iter_1847.code_ptr
        : local.iter_1847.code_ptr)

    steps_taken = 1 + local.iter_1847.steps_taken
  }
}

locals {
  code_1849 = (try(local.iter_1848.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1848.code_ptr, local.iter_1848.code_ptr + 2)
    : [null])

  input_1849 = (local.code_1849[0] == ","
    ? substr(local.input_1848, local.code_1849[1], -1)
    : local.input_1848)

  iter_1849 = try(local.iter_1848.code_ptr >= length(var.code), true) ? local.iter_1848 : {
    output = (local.code_1849[0] == "."
      ? "${local.iter_1848.output}${join("", [for _ in range(local.code_1849[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1848.tape[local.iter_1848.tape_ptr]))])}"
      : local.iter_1848.output)
    
    tape = (
      local.code_1849[0] == "+"
        ? [for i, b in local.iter_1848.tape : (i == local.iter_1848.tape_ptr ? (b + local.code_1849[1]) % 256 : b)] :
      local.code_1849[0] == "-"
        ? [for i, b in local.iter_1848.tape : (i == local.iter_1848.tape_ptr ? (b - local.code_1849[1] + 256) % 256 : b)] :
      local.code_1849[0] == ","
        ? [for i, b in local.iter_1848.tape : (i == local.iter_1848.tape_ptr ? local.ascii_lookup[substr(local.input_1849, 0, 1)] : b)]
        : local.iter_1848.tape)

    tape_ptr = (
      local.code_1849[0] == "<"
        ? local.iter_1848.tape_ptr - local.code_1849[1] :
      local.code_1849[0] == ">"
        ? local.iter_1848.tape_ptr + local.code_1849[1]
        : local.iter_1848.tape_ptr)

    code_ptr = 2 + (
      local.code_1849[0] == "["
        ? local.iter_1848.tape[local.iter_1848.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1848.code_ptr)] : local.iter_1848.code_ptr :
      local.code_1849[0] == "]"
        ? local.iter_1848.tape[local.iter_1848.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1848.code_ptr)] : local.iter_1848.code_ptr
        : local.iter_1848.code_ptr)

    steps_taken = 1 + local.iter_1848.steps_taken
  }
}

locals {
  code_1850 = (try(local.iter_1849.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1849.code_ptr, local.iter_1849.code_ptr + 2)
    : [null])

  input_1850 = (local.code_1850[0] == ","
    ? substr(local.input_1849, local.code_1850[1], -1)
    : local.input_1849)

  iter_1850 = try(local.iter_1849.code_ptr >= length(var.code), true) ? local.iter_1849 : {
    output = (local.code_1850[0] == "."
      ? "${local.iter_1849.output}${join("", [for _ in range(local.code_1850[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1849.tape[local.iter_1849.tape_ptr]))])}"
      : local.iter_1849.output)
    
    tape = (
      local.code_1850[0] == "+"
        ? [for i, b in local.iter_1849.tape : (i == local.iter_1849.tape_ptr ? (b + local.code_1850[1]) % 256 : b)] :
      local.code_1850[0] == "-"
        ? [for i, b in local.iter_1849.tape : (i == local.iter_1849.tape_ptr ? (b - local.code_1850[1] + 256) % 256 : b)] :
      local.code_1850[0] == ","
        ? [for i, b in local.iter_1849.tape : (i == local.iter_1849.tape_ptr ? local.ascii_lookup[substr(local.input_1850, 0, 1)] : b)]
        : local.iter_1849.tape)

    tape_ptr = (
      local.code_1850[0] == "<"
        ? local.iter_1849.tape_ptr - local.code_1850[1] :
      local.code_1850[0] == ">"
        ? local.iter_1849.tape_ptr + local.code_1850[1]
        : local.iter_1849.tape_ptr)

    code_ptr = 2 + (
      local.code_1850[0] == "["
        ? local.iter_1849.tape[local.iter_1849.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1849.code_ptr)] : local.iter_1849.code_ptr :
      local.code_1850[0] == "]"
        ? local.iter_1849.tape[local.iter_1849.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1849.code_ptr)] : local.iter_1849.code_ptr
        : local.iter_1849.code_ptr)

    steps_taken = 1 + local.iter_1849.steps_taken
  }
}

locals {
  code_1851 = (try(local.iter_1850.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1850.code_ptr, local.iter_1850.code_ptr + 2)
    : [null])

  input_1851 = (local.code_1851[0] == ","
    ? substr(local.input_1850, local.code_1851[1], -1)
    : local.input_1850)

  iter_1851 = try(local.iter_1850.code_ptr >= length(var.code), true) ? local.iter_1850 : {
    output = (local.code_1851[0] == "."
      ? "${local.iter_1850.output}${join("", [for _ in range(local.code_1851[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1850.tape[local.iter_1850.tape_ptr]))])}"
      : local.iter_1850.output)
    
    tape = (
      local.code_1851[0] == "+"
        ? [for i, b in local.iter_1850.tape : (i == local.iter_1850.tape_ptr ? (b + local.code_1851[1]) % 256 : b)] :
      local.code_1851[0] == "-"
        ? [for i, b in local.iter_1850.tape : (i == local.iter_1850.tape_ptr ? (b - local.code_1851[1] + 256) % 256 : b)] :
      local.code_1851[0] == ","
        ? [for i, b in local.iter_1850.tape : (i == local.iter_1850.tape_ptr ? local.ascii_lookup[substr(local.input_1851, 0, 1)] : b)]
        : local.iter_1850.tape)

    tape_ptr = (
      local.code_1851[0] == "<"
        ? local.iter_1850.tape_ptr - local.code_1851[1] :
      local.code_1851[0] == ">"
        ? local.iter_1850.tape_ptr + local.code_1851[1]
        : local.iter_1850.tape_ptr)

    code_ptr = 2 + (
      local.code_1851[0] == "["
        ? local.iter_1850.tape[local.iter_1850.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1850.code_ptr)] : local.iter_1850.code_ptr :
      local.code_1851[0] == "]"
        ? local.iter_1850.tape[local.iter_1850.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1850.code_ptr)] : local.iter_1850.code_ptr
        : local.iter_1850.code_ptr)

    steps_taken = 1 + local.iter_1850.steps_taken
  }
}

locals {
  code_1852 = (try(local.iter_1851.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1851.code_ptr, local.iter_1851.code_ptr + 2)
    : [null])

  input_1852 = (local.code_1852[0] == ","
    ? substr(local.input_1851, local.code_1852[1], -1)
    : local.input_1851)

  iter_1852 = try(local.iter_1851.code_ptr >= length(var.code), true) ? local.iter_1851 : {
    output = (local.code_1852[0] == "."
      ? "${local.iter_1851.output}${join("", [for _ in range(local.code_1852[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1851.tape[local.iter_1851.tape_ptr]))])}"
      : local.iter_1851.output)
    
    tape = (
      local.code_1852[0] == "+"
        ? [for i, b in local.iter_1851.tape : (i == local.iter_1851.tape_ptr ? (b + local.code_1852[1]) % 256 : b)] :
      local.code_1852[0] == "-"
        ? [for i, b in local.iter_1851.tape : (i == local.iter_1851.tape_ptr ? (b - local.code_1852[1] + 256) % 256 : b)] :
      local.code_1852[0] == ","
        ? [for i, b in local.iter_1851.tape : (i == local.iter_1851.tape_ptr ? local.ascii_lookup[substr(local.input_1852, 0, 1)] : b)]
        : local.iter_1851.tape)

    tape_ptr = (
      local.code_1852[0] == "<"
        ? local.iter_1851.tape_ptr - local.code_1852[1] :
      local.code_1852[0] == ">"
        ? local.iter_1851.tape_ptr + local.code_1852[1]
        : local.iter_1851.tape_ptr)

    code_ptr = 2 + (
      local.code_1852[0] == "["
        ? local.iter_1851.tape[local.iter_1851.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1851.code_ptr)] : local.iter_1851.code_ptr :
      local.code_1852[0] == "]"
        ? local.iter_1851.tape[local.iter_1851.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1851.code_ptr)] : local.iter_1851.code_ptr
        : local.iter_1851.code_ptr)

    steps_taken = 1 + local.iter_1851.steps_taken
  }
}

locals {
  code_1853 = (try(local.iter_1852.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1852.code_ptr, local.iter_1852.code_ptr + 2)
    : [null])

  input_1853 = (local.code_1853[0] == ","
    ? substr(local.input_1852, local.code_1853[1], -1)
    : local.input_1852)

  iter_1853 = try(local.iter_1852.code_ptr >= length(var.code), true) ? local.iter_1852 : {
    output = (local.code_1853[0] == "."
      ? "${local.iter_1852.output}${join("", [for _ in range(local.code_1853[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1852.tape[local.iter_1852.tape_ptr]))])}"
      : local.iter_1852.output)
    
    tape = (
      local.code_1853[0] == "+"
        ? [for i, b in local.iter_1852.tape : (i == local.iter_1852.tape_ptr ? (b + local.code_1853[1]) % 256 : b)] :
      local.code_1853[0] == "-"
        ? [for i, b in local.iter_1852.tape : (i == local.iter_1852.tape_ptr ? (b - local.code_1853[1] + 256) % 256 : b)] :
      local.code_1853[0] == ","
        ? [for i, b in local.iter_1852.tape : (i == local.iter_1852.tape_ptr ? local.ascii_lookup[substr(local.input_1853, 0, 1)] : b)]
        : local.iter_1852.tape)

    tape_ptr = (
      local.code_1853[0] == "<"
        ? local.iter_1852.tape_ptr - local.code_1853[1] :
      local.code_1853[0] == ">"
        ? local.iter_1852.tape_ptr + local.code_1853[1]
        : local.iter_1852.tape_ptr)

    code_ptr = 2 + (
      local.code_1853[0] == "["
        ? local.iter_1852.tape[local.iter_1852.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1852.code_ptr)] : local.iter_1852.code_ptr :
      local.code_1853[0] == "]"
        ? local.iter_1852.tape[local.iter_1852.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1852.code_ptr)] : local.iter_1852.code_ptr
        : local.iter_1852.code_ptr)

    steps_taken = 1 + local.iter_1852.steps_taken
  }
}

locals {
  code_1854 = (try(local.iter_1853.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1853.code_ptr, local.iter_1853.code_ptr + 2)
    : [null])

  input_1854 = (local.code_1854[0] == ","
    ? substr(local.input_1853, local.code_1854[1], -1)
    : local.input_1853)

  iter_1854 = try(local.iter_1853.code_ptr >= length(var.code), true) ? local.iter_1853 : {
    output = (local.code_1854[0] == "."
      ? "${local.iter_1853.output}${join("", [for _ in range(local.code_1854[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1853.tape[local.iter_1853.tape_ptr]))])}"
      : local.iter_1853.output)
    
    tape = (
      local.code_1854[0] == "+"
        ? [for i, b in local.iter_1853.tape : (i == local.iter_1853.tape_ptr ? (b + local.code_1854[1]) % 256 : b)] :
      local.code_1854[0] == "-"
        ? [for i, b in local.iter_1853.tape : (i == local.iter_1853.tape_ptr ? (b - local.code_1854[1] + 256) % 256 : b)] :
      local.code_1854[0] == ","
        ? [for i, b in local.iter_1853.tape : (i == local.iter_1853.tape_ptr ? local.ascii_lookup[substr(local.input_1854, 0, 1)] : b)]
        : local.iter_1853.tape)

    tape_ptr = (
      local.code_1854[0] == "<"
        ? local.iter_1853.tape_ptr - local.code_1854[1] :
      local.code_1854[0] == ">"
        ? local.iter_1853.tape_ptr + local.code_1854[1]
        : local.iter_1853.tape_ptr)

    code_ptr = 2 + (
      local.code_1854[0] == "["
        ? local.iter_1853.tape[local.iter_1853.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1853.code_ptr)] : local.iter_1853.code_ptr :
      local.code_1854[0] == "]"
        ? local.iter_1853.tape[local.iter_1853.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1853.code_ptr)] : local.iter_1853.code_ptr
        : local.iter_1853.code_ptr)

    steps_taken = 1 + local.iter_1853.steps_taken
  }
}

locals {
  code_1855 = (try(local.iter_1854.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1854.code_ptr, local.iter_1854.code_ptr + 2)
    : [null])

  input_1855 = (local.code_1855[0] == ","
    ? substr(local.input_1854, local.code_1855[1], -1)
    : local.input_1854)

  iter_1855 = try(local.iter_1854.code_ptr >= length(var.code), true) ? local.iter_1854 : {
    output = (local.code_1855[0] == "."
      ? "${local.iter_1854.output}${join("", [for _ in range(local.code_1855[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1854.tape[local.iter_1854.tape_ptr]))])}"
      : local.iter_1854.output)
    
    tape = (
      local.code_1855[0] == "+"
        ? [for i, b in local.iter_1854.tape : (i == local.iter_1854.tape_ptr ? (b + local.code_1855[1]) % 256 : b)] :
      local.code_1855[0] == "-"
        ? [for i, b in local.iter_1854.tape : (i == local.iter_1854.tape_ptr ? (b - local.code_1855[1] + 256) % 256 : b)] :
      local.code_1855[0] == ","
        ? [for i, b in local.iter_1854.tape : (i == local.iter_1854.tape_ptr ? local.ascii_lookup[substr(local.input_1855, 0, 1)] : b)]
        : local.iter_1854.tape)

    tape_ptr = (
      local.code_1855[0] == "<"
        ? local.iter_1854.tape_ptr - local.code_1855[1] :
      local.code_1855[0] == ">"
        ? local.iter_1854.tape_ptr + local.code_1855[1]
        : local.iter_1854.tape_ptr)

    code_ptr = 2 + (
      local.code_1855[0] == "["
        ? local.iter_1854.tape[local.iter_1854.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1854.code_ptr)] : local.iter_1854.code_ptr :
      local.code_1855[0] == "]"
        ? local.iter_1854.tape[local.iter_1854.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1854.code_ptr)] : local.iter_1854.code_ptr
        : local.iter_1854.code_ptr)

    steps_taken = 1 + local.iter_1854.steps_taken
  }
}

locals {
  code_1856 = (try(local.iter_1855.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1855.code_ptr, local.iter_1855.code_ptr + 2)
    : [null])

  input_1856 = (local.code_1856[0] == ","
    ? substr(local.input_1855, local.code_1856[1], -1)
    : local.input_1855)

  iter_1856 = try(local.iter_1855.code_ptr >= length(var.code), true) ? local.iter_1855 : {
    output = (local.code_1856[0] == "."
      ? "${local.iter_1855.output}${join("", [for _ in range(local.code_1856[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1855.tape[local.iter_1855.tape_ptr]))])}"
      : local.iter_1855.output)
    
    tape = (
      local.code_1856[0] == "+"
        ? [for i, b in local.iter_1855.tape : (i == local.iter_1855.tape_ptr ? (b + local.code_1856[1]) % 256 : b)] :
      local.code_1856[0] == "-"
        ? [for i, b in local.iter_1855.tape : (i == local.iter_1855.tape_ptr ? (b - local.code_1856[1] + 256) % 256 : b)] :
      local.code_1856[0] == ","
        ? [for i, b in local.iter_1855.tape : (i == local.iter_1855.tape_ptr ? local.ascii_lookup[substr(local.input_1856, 0, 1)] : b)]
        : local.iter_1855.tape)

    tape_ptr = (
      local.code_1856[0] == "<"
        ? local.iter_1855.tape_ptr - local.code_1856[1] :
      local.code_1856[0] == ">"
        ? local.iter_1855.tape_ptr + local.code_1856[1]
        : local.iter_1855.tape_ptr)

    code_ptr = 2 + (
      local.code_1856[0] == "["
        ? local.iter_1855.tape[local.iter_1855.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1855.code_ptr)] : local.iter_1855.code_ptr :
      local.code_1856[0] == "]"
        ? local.iter_1855.tape[local.iter_1855.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1855.code_ptr)] : local.iter_1855.code_ptr
        : local.iter_1855.code_ptr)

    steps_taken = 1 + local.iter_1855.steps_taken
  }
}

locals {
  code_1857 = (try(local.iter_1856.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1856.code_ptr, local.iter_1856.code_ptr + 2)
    : [null])

  input_1857 = (local.code_1857[0] == ","
    ? substr(local.input_1856, local.code_1857[1], -1)
    : local.input_1856)

  iter_1857 = try(local.iter_1856.code_ptr >= length(var.code), true) ? local.iter_1856 : {
    output = (local.code_1857[0] == "."
      ? "${local.iter_1856.output}${join("", [for _ in range(local.code_1857[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1856.tape[local.iter_1856.tape_ptr]))])}"
      : local.iter_1856.output)
    
    tape = (
      local.code_1857[0] == "+"
        ? [for i, b in local.iter_1856.tape : (i == local.iter_1856.tape_ptr ? (b + local.code_1857[1]) % 256 : b)] :
      local.code_1857[0] == "-"
        ? [for i, b in local.iter_1856.tape : (i == local.iter_1856.tape_ptr ? (b - local.code_1857[1] + 256) % 256 : b)] :
      local.code_1857[0] == ","
        ? [for i, b in local.iter_1856.tape : (i == local.iter_1856.tape_ptr ? local.ascii_lookup[substr(local.input_1857, 0, 1)] : b)]
        : local.iter_1856.tape)

    tape_ptr = (
      local.code_1857[0] == "<"
        ? local.iter_1856.tape_ptr - local.code_1857[1] :
      local.code_1857[0] == ">"
        ? local.iter_1856.tape_ptr + local.code_1857[1]
        : local.iter_1856.tape_ptr)

    code_ptr = 2 + (
      local.code_1857[0] == "["
        ? local.iter_1856.tape[local.iter_1856.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1856.code_ptr)] : local.iter_1856.code_ptr :
      local.code_1857[0] == "]"
        ? local.iter_1856.tape[local.iter_1856.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1856.code_ptr)] : local.iter_1856.code_ptr
        : local.iter_1856.code_ptr)

    steps_taken = 1 + local.iter_1856.steps_taken
  }
}

locals {
  code_1858 = (try(local.iter_1857.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1857.code_ptr, local.iter_1857.code_ptr + 2)
    : [null])

  input_1858 = (local.code_1858[0] == ","
    ? substr(local.input_1857, local.code_1858[1], -1)
    : local.input_1857)

  iter_1858 = try(local.iter_1857.code_ptr >= length(var.code), true) ? local.iter_1857 : {
    output = (local.code_1858[0] == "."
      ? "${local.iter_1857.output}${join("", [for _ in range(local.code_1858[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1857.tape[local.iter_1857.tape_ptr]))])}"
      : local.iter_1857.output)
    
    tape = (
      local.code_1858[0] == "+"
        ? [for i, b in local.iter_1857.tape : (i == local.iter_1857.tape_ptr ? (b + local.code_1858[1]) % 256 : b)] :
      local.code_1858[0] == "-"
        ? [for i, b in local.iter_1857.tape : (i == local.iter_1857.tape_ptr ? (b - local.code_1858[1] + 256) % 256 : b)] :
      local.code_1858[0] == ","
        ? [for i, b in local.iter_1857.tape : (i == local.iter_1857.tape_ptr ? local.ascii_lookup[substr(local.input_1858, 0, 1)] : b)]
        : local.iter_1857.tape)

    tape_ptr = (
      local.code_1858[0] == "<"
        ? local.iter_1857.tape_ptr - local.code_1858[1] :
      local.code_1858[0] == ">"
        ? local.iter_1857.tape_ptr + local.code_1858[1]
        : local.iter_1857.tape_ptr)

    code_ptr = 2 + (
      local.code_1858[0] == "["
        ? local.iter_1857.tape[local.iter_1857.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1857.code_ptr)] : local.iter_1857.code_ptr :
      local.code_1858[0] == "]"
        ? local.iter_1857.tape[local.iter_1857.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1857.code_ptr)] : local.iter_1857.code_ptr
        : local.iter_1857.code_ptr)

    steps_taken = 1 + local.iter_1857.steps_taken
  }
}

locals {
  code_1859 = (try(local.iter_1858.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1858.code_ptr, local.iter_1858.code_ptr + 2)
    : [null])

  input_1859 = (local.code_1859[0] == ","
    ? substr(local.input_1858, local.code_1859[1], -1)
    : local.input_1858)

  iter_1859 = try(local.iter_1858.code_ptr >= length(var.code), true) ? local.iter_1858 : {
    output = (local.code_1859[0] == "."
      ? "${local.iter_1858.output}${join("", [for _ in range(local.code_1859[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1858.tape[local.iter_1858.tape_ptr]))])}"
      : local.iter_1858.output)
    
    tape = (
      local.code_1859[0] == "+"
        ? [for i, b in local.iter_1858.tape : (i == local.iter_1858.tape_ptr ? (b + local.code_1859[1]) % 256 : b)] :
      local.code_1859[0] == "-"
        ? [for i, b in local.iter_1858.tape : (i == local.iter_1858.tape_ptr ? (b - local.code_1859[1] + 256) % 256 : b)] :
      local.code_1859[0] == ","
        ? [for i, b in local.iter_1858.tape : (i == local.iter_1858.tape_ptr ? local.ascii_lookup[substr(local.input_1859, 0, 1)] : b)]
        : local.iter_1858.tape)

    tape_ptr = (
      local.code_1859[0] == "<"
        ? local.iter_1858.tape_ptr - local.code_1859[1] :
      local.code_1859[0] == ">"
        ? local.iter_1858.tape_ptr + local.code_1859[1]
        : local.iter_1858.tape_ptr)

    code_ptr = 2 + (
      local.code_1859[0] == "["
        ? local.iter_1858.tape[local.iter_1858.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1858.code_ptr)] : local.iter_1858.code_ptr :
      local.code_1859[0] == "]"
        ? local.iter_1858.tape[local.iter_1858.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1858.code_ptr)] : local.iter_1858.code_ptr
        : local.iter_1858.code_ptr)

    steps_taken = 1 + local.iter_1858.steps_taken
  }
}

locals {
  code_1860 = (try(local.iter_1859.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1859.code_ptr, local.iter_1859.code_ptr + 2)
    : [null])

  input_1860 = (local.code_1860[0] == ","
    ? substr(local.input_1859, local.code_1860[1], -1)
    : local.input_1859)

  iter_1860 = try(local.iter_1859.code_ptr >= length(var.code), true) ? local.iter_1859 : {
    output = (local.code_1860[0] == "."
      ? "${local.iter_1859.output}${join("", [for _ in range(local.code_1860[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1859.tape[local.iter_1859.tape_ptr]))])}"
      : local.iter_1859.output)
    
    tape = (
      local.code_1860[0] == "+"
        ? [for i, b in local.iter_1859.tape : (i == local.iter_1859.tape_ptr ? (b + local.code_1860[1]) % 256 : b)] :
      local.code_1860[0] == "-"
        ? [for i, b in local.iter_1859.tape : (i == local.iter_1859.tape_ptr ? (b - local.code_1860[1] + 256) % 256 : b)] :
      local.code_1860[0] == ","
        ? [for i, b in local.iter_1859.tape : (i == local.iter_1859.tape_ptr ? local.ascii_lookup[substr(local.input_1860, 0, 1)] : b)]
        : local.iter_1859.tape)

    tape_ptr = (
      local.code_1860[0] == "<"
        ? local.iter_1859.tape_ptr - local.code_1860[1] :
      local.code_1860[0] == ">"
        ? local.iter_1859.tape_ptr + local.code_1860[1]
        : local.iter_1859.tape_ptr)

    code_ptr = 2 + (
      local.code_1860[0] == "["
        ? local.iter_1859.tape[local.iter_1859.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1859.code_ptr)] : local.iter_1859.code_ptr :
      local.code_1860[0] == "]"
        ? local.iter_1859.tape[local.iter_1859.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1859.code_ptr)] : local.iter_1859.code_ptr
        : local.iter_1859.code_ptr)

    steps_taken = 1 + local.iter_1859.steps_taken
  }
}

locals {
  code_1861 = (try(local.iter_1860.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1860.code_ptr, local.iter_1860.code_ptr + 2)
    : [null])

  input_1861 = (local.code_1861[0] == ","
    ? substr(local.input_1860, local.code_1861[1], -1)
    : local.input_1860)

  iter_1861 = try(local.iter_1860.code_ptr >= length(var.code), true) ? local.iter_1860 : {
    output = (local.code_1861[0] == "."
      ? "${local.iter_1860.output}${join("", [for _ in range(local.code_1861[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1860.tape[local.iter_1860.tape_ptr]))])}"
      : local.iter_1860.output)
    
    tape = (
      local.code_1861[0] == "+"
        ? [for i, b in local.iter_1860.tape : (i == local.iter_1860.tape_ptr ? (b + local.code_1861[1]) % 256 : b)] :
      local.code_1861[0] == "-"
        ? [for i, b in local.iter_1860.tape : (i == local.iter_1860.tape_ptr ? (b - local.code_1861[1] + 256) % 256 : b)] :
      local.code_1861[0] == ","
        ? [for i, b in local.iter_1860.tape : (i == local.iter_1860.tape_ptr ? local.ascii_lookup[substr(local.input_1861, 0, 1)] : b)]
        : local.iter_1860.tape)

    tape_ptr = (
      local.code_1861[0] == "<"
        ? local.iter_1860.tape_ptr - local.code_1861[1] :
      local.code_1861[0] == ">"
        ? local.iter_1860.tape_ptr + local.code_1861[1]
        : local.iter_1860.tape_ptr)

    code_ptr = 2 + (
      local.code_1861[0] == "["
        ? local.iter_1860.tape[local.iter_1860.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1860.code_ptr)] : local.iter_1860.code_ptr :
      local.code_1861[0] == "]"
        ? local.iter_1860.tape[local.iter_1860.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1860.code_ptr)] : local.iter_1860.code_ptr
        : local.iter_1860.code_ptr)

    steps_taken = 1 + local.iter_1860.steps_taken
  }
}

locals {
  code_1862 = (try(local.iter_1861.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1861.code_ptr, local.iter_1861.code_ptr + 2)
    : [null])

  input_1862 = (local.code_1862[0] == ","
    ? substr(local.input_1861, local.code_1862[1], -1)
    : local.input_1861)

  iter_1862 = try(local.iter_1861.code_ptr >= length(var.code), true) ? local.iter_1861 : {
    output = (local.code_1862[0] == "."
      ? "${local.iter_1861.output}${join("", [for _ in range(local.code_1862[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1861.tape[local.iter_1861.tape_ptr]))])}"
      : local.iter_1861.output)
    
    tape = (
      local.code_1862[0] == "+"
        ? [for i, b in local.iter_1861.tape : (i == local.iter_1861.tape_ptr ? (b + local.code_1862[1]) % 256 : b)] :
      local.code_1862[0] == "-"
        ? [for i, b in local.iter_1861.tape : (i == local.iter_1861.tape_ptr ? (b - local.code_1862[1] + 256) % 256 : b)] :
      local.code_1862[0] == ","
        ? [for i, b in local.iter_1861.tape : (i == local.iter_1861.tape_ptr ? local.ascii_lookup[substr(local.input_1862, 0, 1)] : b)]
        : local.iter_1861.tape)

    tape_ptr = (
      local.code_1862[0] == "<"
        ? local.iter_1861.tape_ptr - local.code_1862[1] :
      local.code_1862[0] == ">"
        ? local.iter_1861.tape_ptr + local.code_1862[1]
        : local.iter_1861.tape_ptr)

    code_ptr = 2 + (
      local.code_1862[0] == "["
        ? local.iter_1861.tape[local.iter_1861.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1861.code_ptr)] : local.iter_1861.code_ptr :
      local.code_1862[0] == "]"
        ? local.iter_1861.tape[local.iter_1861.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1861.code_ptr)] : local.iter_1861.code_ptr
        : local.iter_1861.code_ptr)

    steps_taken = 1 + local.iter_1861.steps_taken
  }
}

locals {
  code_1863 = (try(local.iter_1862.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1862.code_ptr, local.iter_1862.code_ptr + 2)
    : [null])

  input_1863 = (local.code_1863[0] == ","
    ? substr(local.input_1862, local.code_1863[1], -1)
    : local.input_1862)

  iter_1863 = try(local.iter_1862.code_ptr >= length(var.code), true) ? local.iter_1862 : {
    output = (local.code_1863[0] == "."
      ? "${local.iter_1862.output}${join("", [for _ in range(local.code_1863[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1862.tape[local.iter_1862.tape_ptr]))])}"
      : local.iter_1862.output)
    
    tape = (
      local.code_1863[0] == "+"
        ? [for i, b in local.iter_1862.tape : (i == local.iter_1862.tape_ptr ? (b + local.code_1863[1]) % 256 : b)] :
      local.code_1863[0] == "-"
        ? [for i, b in local.iter_1862.tape : (i == local.iter_1862.tape_ptr ? (b - local.code_1863[1] + 256) % 256 : b)] :
      local.code_1863[0] == ","
        ? [for i, b in local.iter_1862.tape : (i == local.iter_1862.tape_ptr ? local.ascii_lookup[substr(local.input_1863, 0, 1)] : b)]
        : local.iter_1862.tape)

    tape_ptr = (
      local.code_1863[0] == "<"
        ? local.iter_1862.tape_ptr - local.code_1863[1] :
      local.code_1863[0] == ">"
        ? local.iter_1862.tape_ptr + local.code_1863[1]
        : local.iter_1862.tape_ptr)

    code_ptr = 2 + (
      local.code_1863[0] == "["
        ? local.iter_1862.tape[local.iter_1862.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1862.code_ptr)] : local.iter_1862.code_ptr :
      local.code_1863[0] == "]"
        ? local.iter_1862.tape[local.iter_1862.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1862.code_ptr)] : local.iter_1862.code_ptr
        : local.iter_1862.code_ptr)

    steps_taken = 1 + local.iter_1862.steps_taken
  }
}

locals {
  code_1864 = (try(local.iter_1863.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1863.code_ptr, local.iter_1863.code_ptr + 2)
    : [null])

  input_1864 = (local.code_1864[0] == ","
    ? substr(local.input_1863, local.code_1864[1], -1)
    : local.input_1863)

  iter_1864 = try(local.iter_1863.code_ptr >= length(var.code), true) ? local.iter_1863 : {
    output = (local.code_1864[0] == "."
      ? "${local.iter_1863.output}${join("", [for _ in range(local.code_1864[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1863.tape[local.iter_1863.tape_ptr]))])}"
      : local.iter_1863.output)
    
    tape = (
      local.code_1864[0] == "+"
        ? [for i, b in local.iter_1863.tape : (i == local.iter_1863.tape_ptr ? (b + local.code_1864[1]) % 256 : b)] :
      local.code_1864[0] == "-"
        ? [for i, b in local.iter_1863.tape : (i == local.iter_1863.tape_ptr ? (b - local.code_1864[1] + 256) % 256 : b)] :
      local.code_1864[0] == ","
        ? [for i, b in local.iter_1863.tape : (i == local.iter_1863.tape_ptr ? local.ascii_lookup[substr(local.input_1864, 0, 1)] : b)]
        : local.iter_1863.tape)

    tape_ptr = (
      local.code_1864[0] == "<"
        ? local.iter_1863.tape_ptr - local.code_1864[1] :
      local.code_1864[0] == ">"
        ? local.iter_1863.tape_ptr + local.code_1864[1]
        : local.iter_1863.tape_ptr)

    code_ptr = 2 + (
      local.code_1864[0] == "["
        ? local.iter_1863.tape[local.iter_1863.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1863.code_ptr)] : local.iter_1863.code_ptr :
      local.code_1864[0] == "]"
        ? local.iter_1863.tape[local.iter_1863.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1863.code_ptr)] : local.iter_1863.code_ptr
        : local.iter_1863.code_ptr)

    steps_taken = 1 + local.iter_1863.steps_taken
  }
}

locals {
  code_1865 = (try(local.iter_1864.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1864.code_ptr, local.iter_1864.code_ptr + 2)
    : [null])

  input_1865 = (local.code_1865[0] == ","
    ? substr(local.input_1864, local.code_1865[1], -1)
    : local.input_1864)

  iter_1865 = try(local.iter_1864.code_ptr >= length(var.code), true) ? local.iter_1864 : {
    output = (local.code_1865[0] == "."
      ? "${local.iter_1864.output}${join("", [for _ in range(local.code_1865[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1864.tape[local.iter_1864.tape_ptr]))])}"
      : local.iter_1864.output)
    
    tape = (
      local.code_1865[0] == "+"
        ? [for i, b in local.iter_1864.tape : (i == local.iter_1864.tape_ptr ? (b + local.code_1865[1]) % 256 : b)] :
      local.code_1865[0] == "-"
        ? [for i, b in local.iter_1864.tape : (i == local.iter_1864.tape_ptr ? (b - local.code_1865[1] + 256) % 256 : b)] :
      local.code_1865[0] == ","
        ? [for i, b in local.iter_1864.tape : (i == local.iter_1864.tape_ptr ? local.ascii_lookup[substr(local.input_1865, 0, 1)] : b)]
        : local.iter_1864.tape)

    tape_ptr = (
      local.code_1865[0] == "<"
        ? local.iter_1864.tape_ptr - local.code_1865[1] :
      local.code_1865[0] == ">"
        ? local.iter_1864.tape_ptr + local.code_1865[1]
        : local.iter_1864.tape_ptr)

    code_ptr = 2 + (
      local.code_1865[0] == "["
        ? local.iter_1864.tape[local.iter_1864.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1864.code_ptr)] : local.iter_1864.code_ptr :
      local.code_1865[0] == "]"
        ? local.iter_1864.tape[local.iter_1864.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1864.code_ptr)] : local.iter_1864.code_ptr
        : local.iter_1864.code_ptr)

    steps_taken = 1 + local.iter_1864.steps_taken
  }
}

locals {
  code_1866 = (try(local.iter_1865.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1865.code_ptr, local.iter_1865.code_ptr + 2)
    : [null])

  input_1866 = (local.code_1866[0] == ","
    ? substr(local.input_1865, local.code_1866[1], -1)
    : local.input_1865)

  iter_1866 = try(local.iter_1865.code_ptr >= length(var.code), true) ? local.iter_1865 : {
    output = (local.code_1866[0] == "."
      ? "${local.iter_1865.output}${join("", [for _ in range(local.code_1866[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1865.tape[local.iter_1865.tape_ptr]))])}"
      : local.iter_1865.output)
    
    tape = (
      local.code_1866[0] == "+"
        ? [for i, b in local.iter_1865.tape : (i == local.iter_1865.tape_ptr ? (b + local.code_1866[1]) % 256 : b)] :
      local.code_1866[0] == "-"
        ? [for i, b in local.iter_1865.tape : (i == local.iter_1865.tape_ptr ? (b - local.code_1866[1] + 256) % 256 : b)] :
      local.code_1866[0] == ","
        ? [for i, b in local.iter_1865.tape : (i == local.iter_1865.tape_ptr ? local.ascii_lookup[substr(local.input_1866, 0, 1)] : b)]
        : local.iter_1865.tape)

    tape_ptr = (
      local.code_1866[0] == "<"
        ? local.iter_1865.tape_ptr - local.code_1866[1] :
      local.code_1866[0] == ">"
        ? local.iter_1865.tape_ptr + local.code_1866[1]
        : local.iter_1865.tape_ptr)

    code_ptr = 2 + (
      local.code_1866[0] == "["
        ? local.iter_1865.tape[local.iter_1865.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1865.code_ptr)] : local.iter_1865.code_ptr :
      local.code_1866[0] == "]"
        ? local.iter_1865.tape[local.iter_1865.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1865.code_ptr)] : local.iter_1865.code_ptr
        : local.iter_1865.code_ptr)

    steps_taken = 1 + local.iter_1865.steps_taken
  }
}

locals {
  code_1867 = (try(local.iter_1866.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1866.code_ptr, local.iter_1866.code_ptr + 2)
    : [null])

  input_1867 = (local.code_1867[0] == ","
    ? substr(local.input_1866, local.code_1867[1], -1)
    : local.input_1866)

  iter_1867 = try(local.iter_1866.code_ptr >= length(var.code), true) ? local.iter_1866 : {
    output = (local.code_1867[0] == "."
      ? "${local.iter_1866.output}${join("", [for _ in range(local.code_1867[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1866.tape[local.iter_1866.tape_ptr]))])}"
      : local.iter_1866.output)
    
    tape = (
      local.code_1867[0] == "+"
        ? [for i, b in local.iter_1866.tape : (i == local.iter_1866.tape_ptr ? (b + local.code_1867[1]) % 256 : b)] :
      local.code_1867[0] == "-"
        ? [for i, b in local.iter_1866.tape : (i == local.iter_1866.tape_ptr ? (b - local.code_1867[1] + 256) % 256 : b)] :
      local.code_1867[0] == ","
        ? [for i, b in local.iter_1866.tape : (i == local.iter_1866.tape_ptr ? local.ascii_lookup[substr(local.input_1867, 0, 1)] : b)]
        : local.iter_1866.tape)

    tape_ptr = (
      local.code_1867[0] == "<"
        ? local.iter_1866.tape_ptr - local.code_1867[1] :
      local.code_1867[0] == ">"
        ? local.iter_1866.tape_ptr + local.code_1867[1]
        : local.iter_1866.tape_ptr)

    code_ptr = 2 + (
      local.code_1867[0] == "["
        ? local.iter_1866.tape[local.iter_1866.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1866.code_ptr)] : local.iter_1866.code_ptr :
      local.code_1867[0] == "]"
        ? local.iter_1866.tape[local.iter_1866.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1866.code_ptr)] : local.iter_1866.code_ptr
        : local.iter_1866.code_ptr)

    steps_taken = 1 + local.iter_1866.steps_taken
  }
}

locals {
  code_1868 = (try(local.iter_1867.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1867.code_ptr, local.iter_1867.code_ptr + 2)
    : [null])

  input_1868 = (local.code_1868[0] == ","
    ? substr(local.input_1867, local.code_1868[1], -1)
    : local.input_1867)

  iter_1868 = try(local.iter_1867.code_ptr >= length(var.code), true) ? local.iter_1867 : {
    output = (local.code_1868[0] == "."
      ? "${local.iter_1867.output}${join("", [for _ in range(local.code_1868[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1867.tape[local.iter_1867.tape_ptr]))])}"
      : local.iter_1867.output)
    
    tape = (
      local.code_1868[0] == "+"
        ? [for i, b in local.iter_1867.tape : (i == local.iter_1867.tape_ptr ? (b + local.code_1868[1]) % 256 : b)] :
      local.code_1868[0] == "-"
        ? [for i, b in local.iter_1867.tape : (i == local.iter_1867.tape_ptr ? (b - local.code_1868[1] + 256) % 256 : b)] :
      local.code_1868[0] == ","
        ? [for i, b in local.iter_1867.tape : (i == local.iter_1867.tape_ptr ? local.ascii_lookup[substr(local.input_1868, 0, 1)] : b)]
        : local.iter_1867.tape)

    tape_ptr = (
      local.code_1868[0] == "<"
        ? local.iter_1867.tape_ptr - local.code_1868[1] :
      local.code_1868[0] == ">"
        ? local.iter_1867.tape_ptr + local.code_1868[1]
        : local.iter_1867.tape_ptr)

    code_ptr = 2 + (
      local.code_1868[0] == "["
        ? local.iter_1867.tape[local.iter_1867.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1867.code_ptr)] : local.iter_1867.code_ptr :
      local.code_1868[0] == "]"
        ? local.iter_1867.tape[local.iter_1867.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1867.code_ptr)] : local.iter_1867.code_ptr
        : local.iter_1867.code_ptr)

    steps_taken = 1 + local.iter_1867.steps_taken
  }
}

locals {
  code_1869 = (try(local.iter_1868.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1868.code_ptr, local.iter_1868.code_ptr + 2)
    : [null])

  input_1869 = (local.code_1869[0] == ","
    ? substr(local.input_1868, local.code_1869[1], -1)
    : local.input_1868)

  iter_1869 = try(local.iter_1868.code_ptr >= length(var.code), true) ? local.iter_1868 : {
    output = (local.code_1869[0] == "."
      ? "${local.iter_1868.output}${join("", [for _ in range(local.code_1869[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1868.tape[local.iter_1868.tape_ptr]))])}"
      : local.iter_1868.output)
    
    tape = (
      local.code_1869[0] == "+"
        ? [for i, b in local.iter_1868.tape : (i == local.iter_1868.tape_ptr ? (b + local.code_1869[1]) % 256 : b)] :
      local.code_1869[0] == "-"
        ? [for i, b in local.iter_1868.tape : (i == local.iter_1868.tape_ptr ? (b - local.code_1869[1] + 256) % 256 : b)] :
      local.code_1869[0] == ","
        ? [for i, b in local.iter_1868.tape : (i == local.iter_1868.tape_ptr ? local.ascii_lookup[substr(local.input_1869, 0, 1)] : b)]
        : local.iter_1868.tape)

    tape_ptr = (
      local.code_1869[0] == "<"
        ? local.iter_1868.tape_ptr - local.code_1869[1] :
      local.code_1869[0] == ">"
        ? local.iter_1868.tape_ptr + local.code_1869[1]
        : local.iter_1868.tape_ptr)

    code_ptr = 2 + (
      local.code_1869[0] == "["
        ? local.iter_1868.tape[local.iter_1868.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1868.code_ptr)] : local.iter_1868.code_ptr :
      local.code_1869[0] == "]"
        ? local.iter_1868.tape[local.iter_1868.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1868.code_ptr)] : local.iter_1868.code_ptr
        : local.iter_1868.code_ptr)

    steps_taken = 1 + local.iter_1868.steps_taken
  }
}

locals {
  code_1870 = (try(local.iter_1869.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1869.code_ptr, local.iter_1869.code_ptr + 2)
    : [null])

  input_1870 = (local.code_1870[0] == ","
    ? substr(local.input_1869, local.code_1870[1], -1)
    : local.input_1869)

  iter_1870 = try(local.iter_1869.code_ptr >= length(var.code), true) ? local.iter_1869 : {
    output = (local.code_1870[0] == "."
      ? "${local.iter_1869.output}${join("", [for _ in range(local.code_1870[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1869.tape[local.iter_1869.tape_ptr]))])}"
      : local.iter_1869.output)
    
    tape = (
      local.code_1870[0] == "+"
        ? [for i, b in local.iter_1869.tape : (i == local.iter_1869.tape_ptr ? (b + local.code_1870[1]) % 256 : b)] :
      local.code_1870[0] == "-"
        ? [for i, b in local.iter_1869.tape : (i == local.iter_1869.tape_ptr ? (b - local.code_1870[1] + 256) % 256 : b)] :
      local.code_1870[0] == ","
        ? [for i, b in local.iter_1869.tape : (i == local.iter_1869.tape_ptr ? local.ascii_lookup[substr(local.input_1870, 0, 1)] : b)]
        : local.iter_1869.tape)

    tape_ptr = (
      local.code_1870[0] == "<"
        ? local.iter_1869.tape_ptr - local.code_1870[1] :
      local.code_1870[0] == ">"
        ? local.iter_1869.tape_ptr + local.code_1870[1]
        : local.iter_1869.tape_ptr)

    code_ptr = 2 + (
      local.code_1870[0] == "["
        ? local.iter_1869.tape[local.iter_1869.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1869.code_ptr)] : local.iter_1869.code_ptr :
      local.code_1870[0] == "]"
        ? local.iter_1869.tape[local.iter_1869.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1869.code_ptr)] : local.iter_1869.code_ptr
        : local.iter_1869.code_ptr)

    steps_taken = 1 + local.iter_1869.steps_taken
  }
}

locals {
  code_1871 = (try(local.iter_1870.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1870.code_ptr, local.iter_1870.code_ptr + 2)
    : [null])

  input_1871 = (local.code_1871[0] == ","
    ? substr(local.input_1870, local.code_1871[1], -1)
    : local.input_1870)

  iter_1871 = try(local.iter_1870.code_ptr >= length(var.code), true) ? local.iter_1870 : {
    output = (local.code_1871[0] == "."
      ? "${local.iter_1870.output}${join("", [for _ in range(local.code_1871[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1870.tape[local.iter_1870.tape_ptr]))])}"
      : local.iter_1870.output)
    
    tape = (
      local.code_1871[0] == "+"
        ? [for i, b in local.iter_1870.tape : (i == local.iter_1870.tape_ptr ? (b + local.code_1871[1]) % 256 : b)] :
      local.code_1871[0] == "-"
        ? [for i, b in local.iter_1870.tape : (i == local.iter_1870.tape_ptr ? (b - local.code_1871[1] + 256) % 256 : b)] :
      local.code_1871[0] == ","
        ? [for i, b in local.iter_1870.tape : (i == local.iter_1870.tape_ptr ? local.ascii_lookup[substr(local.input_1871, 0, 1)] : b)]
        : local.iter_1870.tape)

    tape_ptr = (
      local.code_1871[0] == "<"
        ? local.iter_1870.tape_ptr - local.code_1871[1] :
      local.code_1871[0] == ">"
        ? local.iter_1870.tape_ptr + local.code_1871[1]
        : local.iter_1870.tape_ptr)

    code_ptr = 2 + (
      local.code_1871[0] == "["
        ? local.iter_1870.tape[local.iter_1870.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1870.code_ptr)] : local.iter_1870.code_ptr :
      local.code_1871[0] == "]"
        ? local.iter_1870.tape[local.iter_1870.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1870.code_ptr)] : local.iter_1870.code_ptr
        : local.iter_1870.code_ptr)

    steps_taken = 1 + local.iter_1870.steps_taken
  }
}

locals {
  code_1872 = (try(local.iter_1871.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1871.code_ptr, local.iter_1871.code_ptr + 2)
    : [null])

  input_1872 = (local.code_1872[0] == ","
    ? substr(local.input_1871, local.code_1872[1], -1)
    : local.input_1871)

  iter_1872 = try(local.iter_1871.code_ptr >= length(var.code), true) ? local.iter_1871 : {
    output = (local.code_1872[0] == "."
      ? "${local.iter_1871.output}${join("", [for _ in range(local.code_1872[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1871.tape[local.iter_1871.tape_ptr]))])}"
      : local.iter_1871.output)
    
    tape = (
      local.code_1872[0] == "+"
        ? [for i, b in local.iter_1871.tape : (i == local.iter_1871.tape_ptr ? (b + local.code_1872[1]) % 256 : b)] :
      local.code_1872[0] == "-"
        ? [for i, b in local.iter_1871.tape : (i == local.iter_1871.tape_ptr ? (b - local.code_1872[1] + 256) % 256 : b)] :
      local.code_1872[0] == ","
        ? [for i, b in local.iter_1871.tape : (i == local.iter_1871.tape_ptr ? local.ascii_lookup[substr(local.input_1872, 0, 1)] : b)]
        : local.iter_1871.tape)

    tape_ptr = (
      local.code_1872[0] == "<"
        ? local.iter_1871.tape_ptr - local.code_1872[1] :
      local.code_1872[0] == ">"
        ? local.iter_1871.tape_ptr + local.code_1872[1]
        : local.iter_1871.tape_ptr)

    code_ptr = 2 + (
      local.code_1872[0] == "["
        ? local.iter_1871.tape[local.iter_1871.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1871.code_ptr)] : local.iter_1871.code_ptr :
      local.code_1872[0] == "]"
        ? local.iter_1871.tape[local.iter_1871.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1871.code_ptr)] : local.iter_1871.code_ptr
        : local.iter_1871.code_ptr)

    steps_taken = 1 + local.iter_1871.steps_taken
  }
}

locals {
  code_1873 = (try(local.iter_1872.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1872.code_ptr, local.iter_1872.code_ptr + 2)
    : [null])

  input_1873 = (local.code_1873[0] == ","
    ? substr(local.input_1872, local.code_1873[1], -1)
    : local.input_1872)

  iter_1873 = try(local.iter_1872.code_ptr >= length(var.code), true) ? local.iter_1872 : {
    output = (local.code_1873[0] == "."
      ? "${local.iter_1872.output}${join("", [for _ in range(local.code_1873[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1872.tape[local.iter_1872.tape_ptr]))])}"
      : local.iter_1872.output)
    
    tape = (
      local.code_1873[0] == "+"
        ? [for i, b in local.iter_1872.tape : (i == local.iter_1872.tape_ptr ? (b + local.code_1873[1]) % 256 : b)] :
      local.code_1873[0] == "-"
        ? [for i, b in local.iter_1872.tape : (i == local.iter_1872.tape_ptr ? (b - local.code_1873[1] + 256) % 256 : b)] :
      local.code_1873[0] == ","
        ? [for i, b in local.iter_1872.tape : (i == local.iter_1872.tape_ptr ? local.ascii_lookup[substr(local.input_1873, 0, 1)] : b)]
        : local.iter_1872.tape)

    tape_ptr = (
      local.code_1873[0] == "<"
        ? local.iter_1872.tape_ptr - local.code_1873[1] :
      local.code_1873[0] == ">"
        ? local.iter_1872.tape_ptr + local.code_1873[1]
        : local.iter_1872.tape_ptr)

    code_ptr = 2 + (
      local.code_1873[0] == "["
        ? local.iter_1872.tape[local.iter_1872.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1872.code_ptr)] : local.iter_1872.code_ptr :
      local.code_1873[0] == "]"
        ? local.iter_1872.tape[local.iter_1872.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1872.code_ptr)] : local.iter_1872.code_ptr
        : local.iter_1872.code_ptr)

    steps_taken = 1 + local.iter_1872.steps_taken
  }
}

locals {
  code_1874 = (try(local.iter_1873.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1873.code_ptr, local.iter_1873.code_ptr + 2)
    : [null])

  input_1874 = (local.code_1874[0] == ","
    ? substr(local.input_1873, local.code_1874[1], -1)
    : local.input_1873)

  iter_1874 = try(local.iter_1873.code_ptr >= length(var.code), true) ? local.iter_1873 : {
    output = (local.code_1874[0] == "."
      ? "${local.iter_1873.output}${join("", [for _ in range(local.code_1874[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1873.tape[local.iter_1873.tape_ptr]))])}"
      : local.iter_1873.output)
    
    tape = (
      local.code_1874[0] == "+"
        ? [for i, b in local.iter_1873.tape : (i == local.iter_1873.tape_ptr ? (b + local.code_1874[1]) % 256 : b)] :
      local.code_1874[0] == "-"
        ? [for i, b in local.iter_1873.tape : (i == local.iter_1873.tape_ptr ? (b - local.code_1874[1] + 256) % 256 : b)] :
      local.code_1874[0] == ","
        ? [for i, b in local.iter_1873.tape : (i == local.iter_1873.tape_ptr ? local.ascii_lookup[substr(local.input_1874, 0, 1)] : b)]
        : local.iter_1873.tape)

    tape_ptr = (
      local.code_1874[0] == "<"
        ? local.iter_1873.tape_ptr - local.code_1874[1] :
      local.code_1874[0] == ">"
        ? local.iter_1873.tape_ptr + local.code_1874[1]
        : local.iter_1873.tape_ptr)

    code_ptr = 2 + (
      local.code_1874[0] == "["
        ? local.iter_1873.tape[local.iter_1873.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1873.code_ptr)] : local.iter_1873.code_ptr :
      local.code_1874[0] == "]"
        ? local.iter_1873.tape[local.iter_1873.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1873.code_ptr)] : local.iter_1873.code_ptr
        : local.iter_1873.code_ptr)

    steps_taken = 1 + local.iter_1873.steps_taken
  }
}

locals {
  code_1875 = (try(local.iter_1874.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1874.code_ptr, local.iter_1874.code_ptr + 2)
    : [null])

  input_1875 = (local.code_1875[0] == ","
    ? substr(local.input_1874, local.code_1875[1], -1)
    : local.input_1874)

  iter_1875 = try(local.iter_1874.code_ptr >= length(var.code), true) ? local.iter_1874 : {
    output = (local.code_1875[0] == "."
      ? "${local.iter_1874.output}${join("", [for _ in range(local.code_1875[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1874.tape[local.iter_1874.tape_ptr]))])}"
      : local.iter_1874.output)
    
    tape = (
      local.code_1875[0] == "+"
        ? [for i, b in local.iter_1874.tape : (i == local.iter_1874.tape_ptr ? (b + local.code_1875[1]) % 256 : b)] :
      local.code_1875[0] == "-"
        ? [for i, b in local.iter_1874.tape : (i == local.iter_1874.tape_ptr ? (b - local.code_1875[1] + 256) % 256 : b)] :
      local.code_1875[0] == ","
        ? [for i, b in local.iter_1874.tape : (i == local.iter_1874.tape_ptr ? local.ascii_lookup[substr(local.input_1875, 0, 1)] : b)]
        : local.iter_1874.tape)

    tape_ptr = (
      local.code_1875[0] == "<"
        ? local.iter_1874.tape_ptr - local.code_1875[1] :
      local.code_1875[0] == ">"
        ? local.iter_1874.tape_ptr + local.code_1875[1]
        : local.iter_1874.tape_ptr)

    code_ptr = 2 + (
      local.code_1875[0] == "["
        ? local.iter_1874.tape[local.iter_1874.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1874.code_ptr)] : local.iter_1874.code_ptr :
      local.code_1875[0] == "]"
        ? local.iter_1874.tape[local.iter_1874.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1874.code_ptr)] : local.iter_1874.code_ptr
        : local.iter_1874.code_ptr)

    steps_taken = 1 + local.iter_1874.steps_taken
  }
}

locals {
  code_1876 = (try(local.iter_1875.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1875.code_ptr, local.iter_1875.code_ptr + 2)
    : [null])

  input_1876 = (local.code_1876[0] == ","
    ? substr(local.input_1875, local.code_1876[1], -1)
    : local.input_1875)

  iter_1876 = try(local.iter_1875.code_ptr >= length(var.code), true) ? local.iter_1875 : {
    output = (local.code_1876[0] == "."
      ? "${local.iter_1875.output}${join("", [for _ in range(local.code_1876[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1875.tape[local.iter_1875.tape_ptr]))])}"
      : local.iter_1875.output)
    
    tape = (
      local.code_1876[0] == "+"
        ? [for i, b in local.iter_1875.tape : (i == local.iter_1875.tape_ptr ? (b + local.code_1876[1]) % 256 : b)] :
      local.code_1876[0] == "-"
        ? [for i, b in local.iter_1875.tape : (i == local.iter_1875.tape_ptr ? (b - local.code_1876[1] + 256) % 256 : b)] :
      local.code_1876[0] == ","
        ? [for i, b in local.iter_1875.tape : (i == local.iter_1875.tape_ptr ? local.ascii_lookup[substr(local.input_1876, 0, 1)] : b)]
        : local.iter_1875.tape)

    tape_ptr = (
      local.code_1876[0] == "<"
        ? local.iter_1875.tape_ptr - local.code_1876[1] :
      local.code_1876[0] == ">"
        ? local.iter_1875.tape_ptr + local.code_1876[1]
        : local.iter_1875.tape_ptr)

    code_ptr = 2 + (
      local.code_1876[0] == "["
        ? local.iter_1875.tape[local.iter_1875.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1875.code_ptr)] : local.iter_1875.code_ptr :
      local.code_1876[0] == "]"
        ? local.iter_1875.tape[local.iter_1875.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1875.code_ptr)] : local.iter_1875.code_ptr
        : local.iter_1875.code_ptr)

    steps_taken = 1 + local.iter_1875.steps_taken
  }
}

locals {
  code_1877 = (try(local.iter_1876.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1876.code_ptr, local.iter_1876.code_ptr + 2)
    : [null])

  input_1877 = (local.code_1877[0] == ","
    ? substr(local.input_1876, local.code_1877[1], -1)
    : local.input_1876)

  iter_1877 = try(local.iter_1876.code_ptr >= length(var.code), true) ? local.iter_1876 : {
    output = (local.code_1877[0] == "."
      ? "${local.iter_1876.output}${join("", [for _ in range(local.code_1877[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1876.tape[local.iter_1876.tape_ptr]))])}"
      : local.iter_1876.output)
    
    tape = (
      local.code_1877[0] == "+"
        ? [for i, b in local.iter_1876.tape : (i == local.iter_1876.tape_ptr ? (b + local.code_1877[1]) % 256 : b)] :
      local.code_1877[0] == "-"
        ? [for i, b in local.iter_1876.tape : (i == local.iter_1876.tape_ptr ? (b - local.code_1877[1] + 256) % 256 : b)] :
      local.code_1877[0] == ","
        ? [for i, b in local.iter_1876.tape : (i == local.iter_1876.tape_ptr ? local.ascii_lookup[substr(local.input_1877, 0, 1)] : b)]
        : local.iter_1876.tape)

    tape_ptr = (
      local.code_1877[0] == "<"
        ? local.iter_1876.tape_ptr - local.code_1877[1] :
      local.code_1877[0] == ">"
        ? local.iter_1876.tape_ptr + local.code_1877[1]
        : local.iter_1876.tape_ptr)

    code_ptr = 2 + (
      local.code_1877[0] == "["
        ? local.iter_1876.tape[local.iter_1876.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1876.code_ptr)] : local.iter_1876.code_ptr :
      local.code_1877[0] == "]"
        ? local.iter_1876.tape[local.iter_1876.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1876.code_ptr)] : local.iter_1876.code_ptr
        : local.iter_1876.code_ptr)

    steps_taken = 1 + local.iter_1876.steps_taken
  }
}

locals {
  code_1878 = (try(local.iter_1877.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1877.code_ptr, local.iter_1877.code_ptr + 2)
    : [null])

  input_1878 = (local.code_1878[0] == ","
    ? substr(local.input_1877, local.code_1878[1], -1)
    : local.input_1877)

  iter_1878 = try(local.iter_1877.code_ptr >= length(var.code), true) ? local.iter_1877 : {
    output = (local.code_1878[0] == "."
      ? "${local.iter_1877.output}${join("", [for _ in range(local.code_1878[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1877.tape[local.iter_1877.tape_ptr]))])}"
      : local.iter_1877.output)
    
    tape = (
      local.code_1878[0] == "+"
        ? [for i, b in local.iter_1877.tape : (i == local.iter_1877.tape_ptr ? (b + local.code_1878[1]) % 256 : b)] :
      local.code_1878[0] == "-"
        ? [for i, b in local.iter_1877.tape : (i == local.iter_1877.tape_ptr ? (b - local.code_1878[1] + 256) % 256 : b)] :
      local.code_1878[0] == ","
        ? [for i, b in local.iter_1877.tape : (i == local.iter_1877.tape_ptr ? local.ascii_lookup[substr(local.input_1878, 0, 1)] : b)]
        : local.iter_1877.tape)

    tape_ptr = (
      local.code_1878[0] == "<"
        ? local.iter_1877.tape_ptr - local.code_1878[1] :
      local.code_1878[0] == ">"
        ? local.iter_1877.tape_ptr + local.code_1878[1]
        : local.iter_1877.tape_ptr)

    code_ptr = 2 + (
      local.code_1878[0] == "["
        ? local.iter_1877.tape[local.iter_1877.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1877.code_ptr)] : local.iter_1877.code_ptr :
      local.code_1878[0] == "]"
        ? local.iter_1877.tape[local.iter_1877.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1877.code_ptr)] : local.iter_1877.code_ptr
        : local.iter_1877.code_ptr)

    steps_taken = 1 + local.iter_1877.steps_taken
  }
}

locals {
  code_1879 = (try(local.iter_1878.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1878.code_ptr, local.iter_1878.code_ptr + 2)
    : [null])

  input_1879 = (local.code_1879[0] == ","
    ? substr(local.input_1878, local.code_1879[1], -1)
    : local.input_1878)

  iter_1879 = try(local.iter_1878.code_ptr >= length(var.code), true) ? local.iter_1878 : {
    output = (local.code_1879[0] == "."
      ? "${local.iter_1878.output}${join("", [for _ in range(local.code_1879[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1878.tape[local.iter_1878.tape_ptr]))])}"
      : local.iter_1878.output)
    
    tape = (
      local.code_1879[0] == "+"
        ? [for i, b in local.iter_1878.tape : (i == local.iter_1878.tape_ptr ? (b + local.code_1879[1]) % 256 : b)] :
      local.code_1879[0] == "-"
        ? [for i, b in local.iter_1878.tape : (i == local.iter_1878.tape_ptr ? (b - local.code_1879[1] + 256) % 256 : b)] :
      local.code_1879[0] == ","
        ? [for i, b in local.iter_1878.tape : (i == local.iter_1878.tape_ptr ? local.ascii_lookup[substr(local.input_1879, 0, 1)] : b)]
        : local.iter_1878.tape)

    tape_ptr = (
      local.code_1879[0] == "<"
        ? local.iter_1878.tape_ptr - local.code_1879[1] :
      local.code_1879[0] == ">"
        ? local.iter_1878.tape_ptr + local.code_1879[1]
        : local.iter_1878.tape_ptr)

    code_ptr = 2 + (
      local.code_1879[0] == "["
        ? local.iter_1878.tape[local.iter_1878.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1878.code_ptr)] : local.iter_1878.code_ptr :
      local.code_1879[0] == "]"
        ? local.iter_1878.tape[local.iter_1878.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1878.code_ptr)] : local.iter_1878.code_ptr
        : local.iter_1878.code_ptr)

    steps_taken = 1 + local.iter_1878.steps_taken
  }
}

locals {
  code_1880 = (try(local.iter_1879.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1879.code_ptr, local.iter_1879.code_ptr + 2)
    : [null])

  input_1880 = (local.code_1880[0] == ","
    ? substr(local.input_1879, local.code_1880[1], -1)
    : local.input_1879)

  iter_1880 = try(local.iter_1879.code_ptr >= length(var.code), true) ? local.iter_1879 : {
    output = (local.code_1880[0] == "."
      ? "${local.iter_1879.output}${join("", [for _ in range(local.code_1880[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1879.tape[local.iter_1879.tape_ptr]))])}"
      : local.iter_1879.output)
    
    tape = (
      local.code_1880[0] == "+"
        ? [for i, b in local.iter_1879.tape : (i == local.iter_1879.tape_ptr ? (b + local.code_1880[1]) % 256 : b)] :
      local.code_1880[0] == "-"
        ? [for i, b in local.iter_1879.tape : (i == local.iter_1879.tape_ptr ? (b - local.code_1880[1] + 256) % 256 : b)] :
      local.code_1880[0] == ","
        ? [for i, b in local.iter_1879.tape : (i == local.iter_1879.tape_ptr ? local.ascii_lookup[substr(local.input_1880, 0, 1)] : b)]
        : local.iter_1879.tape)

    tape_ptr = (
      local.code_1880[0] == "<"
        ? local.iter_1879.tape_ptr - local.code_1880[1] :
      local.code_1880[0] == ">"
        ? local.iter_1879.tape_ptr + local.code_1880[1]
        : local.iter_1879.tape_ptr)

    code_ptr = 2 + (
      local.code_1880[0] == "["
        ? local.iter_1879.tape[local.iter_1879.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1879.code_ptr)] : local.iter_1879.code_ptr :
      local.code_1880[0] == "]"
        ? local.iter_1879.tape[local.iter_1879.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1879.code_ptr)] : local.iter_1879.code_ptr
        : local.iter_1879.code_ptr)

    steps_taken = 1 + local.iter_1879.steps_taken
  }
}

locals {
  code_1881 = (try(local.iter_1880.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1880.code_ptr, local.iter_1880.code_ptr + 2)
    : [null])

  input_1881 = (local.code_1881[0] == ","
    ? substr(local.input_1880, local.code_1881[1], -1)
    : local.input_1880)

  iter_1881 = try(local.iter_1880.code_ptr >= length(var.code), true) ? local.iter_1880 : {
    output = (local.code_1881[0] == "."
      ? "${local.iter_1880.output}${join("", [for _ in range(local.code_1881[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1880.tape[local.iter_1880.tape_ptr]))])}"
      : local.iter_1880.output)
    
    tape = (
      local.code_1881[0] == "+"
        ? [for i, b in local.iter_1880.tape : (i == local.iter_1880.tape_ptr ? (b + local.code_1881[1]) % 256 : b)] :
      local.code_1881[0] == "-"
        ? [for i, b in local.iter_1880.tape : (i == local.iter_1880.tape_ptr ? (b - local.code_1881[1] + 256) % 256 : b)] :
      local.code_1881[0] == ","
        ? [for i, b in local.iter_1880.tape : (i == local.iter_1880.tape_ptr ? local.ascii_lookup[substr(local.input_1881, 0, 1)] : b)]
        : local.iter_1880.tape)

    tape_ptr = (
      local.code_1881[0] == "<"
        ? local.iter_1880.tape_ptr - local.code_1881[1] :
      local.code_1881[0] == ">"
        ? local.iter_1880.tape_ptr + local.code_1881[1]
        : local.iter_1880.tape_ptr)

    code_ptr = 2 + (
      local.code_1881[0] == "["
        ? local.iter_1880.tape[local.iter_1880.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1880.code_ptr)] : local.iter_1880.code_ptr :
      local.code_1881[0] == "]"
        ? local.iter_1880.tape[local.iter_1880.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1880.code_ptr)] : local.iter_1880.code_ptr
        : local.iter_1880.code_ptr)

    steps_taken = 1 + local.iter_1880.steps_taken
  }
}

locals {
  code_1882 = (try(local.iter_1881.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1881.code_ptr, local.iter_1881.code_ptr + 2)
    : [null])

  input_1882 = (local.code_1882[0] == ","
    ? substr(local.input_1881, local.code_1882[1], -1)
    : local.input_1881)

  iter_1882 = try(local.iter_1881.code_ptr >= length(var.code), true) ? local.iter_1881 : {
    output = (local.code_1882[0] == "."
      ? "${local.iter_1881.output}${join("", [for _ in range(local.code_1882[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1881.tape[local.iter_1881.tape_ptr]))])}"
      : local.iter_1881.output)
    
    tape = (
      local.code_1882[0] == "+"
        ? [for i, b in local.iter_1881.tape : (i == local.iter_1881.tape_ptr ? (b + local.code_1882[1]) % 256 : b)] :
      local.code_1882[0] == "-"
        ? [for i, b in local.iter_1881.tape : (i == local.iter_1881.tape_ptr ? (b - local.code_1882[1] + 256) % 256 : b)] :
      local.code_1882[0] == ","
        ? [for i, b in local.iter_1881.tape : (i == local.iter_1881.tape_ptr ? local.ascii_lookup[substr(local.input_1882, 0, 1)] : b)]
        : local.iter_1881.tape)

    tape_ptr = (
      local.code_1882[0] == "<"
        ? local.iter_1881.tape_ptr - local.code_1882[1] :
      local.code_1882[0] == ">"
        ? local.iter_1881.tape_ptr + local.code_1882[1]
        : local.iter_1881.tape_ptr)

    code_ptr = 2 + (
      local.code_1882[0] == "["
        ? local.iter_1881.tape[local.iter_1881.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1881.code_ptr)] : local.iter_1881.code_ptr :
      local.code_1882[0] == "]"
        ? local.iter_1881.tape[local.iter_1881.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1881.code_ptr)] : local.iter_1881.code_ptr
        : local.iter_1881.code_ptr)

    steps_taken = 1 + local.iter_1881.steps_taken
  }
}

locals {
  code_1883 = (try(local.iter_1882.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1882.code_ptr, local.iter_1882.code_ptr + 2)
    : [null])

  input_1883 = (local.code_1883[0] == ","
    ? substr(local.input_1882, local.code_1883[1], -1)
    : local.input_1882)

  iter_1883 = try(local.iter_1882.code_ptr >= length(var.code), true) ? local.iter_1882 : {
    output = (local.code_1883[0] == "."
      ? "${local.iter_1882.output}${join("", [for _ in range(local.code_1883[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1882.tape[local.iter_1882.tape_ptr]))])}"
      : local.iter_1882.output)
    
    tape = (
      local.code_1883[0] == "+"
        ? [for i, b in local.iter_1882.tape : (i == local.iter_1882.tape_ptr ? (b + local.code_1883[1]) % 256 : b)] :
      local.code_1883[0] == "-"
        ? [for i, b in local.iter_1882.tape : (i == local.iter_1882.tape_ptr ? (b - local.code_1883[1] + 256) % 256 : b)] :
      local.code_1883[0] == ","
        ? [for i, b in local.iter_1882.tape : (i == local.iter_1882.tape_ptr ? local.ascii_lookup[substr(local.input_1883, 0, 1)] : b)]
        : local.iter_1882.tape)

    tape_ptr = (
      local.code_1883[0] == "<"
        ? local.iter_1882.tape_ptr - local.code_1883[1] :
      local.code_1883[0] == ">"
        ? local.iter_1882.tape_ptr + local.code_1883[1]
        : local.iter_1882.tape_ptr)

    code_ptr = 2 + (
      local.code_1883[0] == "["
        ? local.iter_1882.tape[local.iter_1882.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1882.code_ptr)] : local.iter_1882.code_ptr :
      local.code_1883[0] == "]"
        ? local.iter_1882.tape[local.iter_1882.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1882.code_ptr)] : local.iter_1882.code_ptr
        : local.iter_1882.code_ptr)

    steps_taken = 1 + local.iter_1882.steps_taken
  }
}

locals {
  code_1884 = (try(local.iter_1883.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1883.code_ptr, local.iter_1883.code_ptr + 2)
    : [null])

  input_1884 = (local.code_1884[0] == ","
    ? substr(local.input_1883, local.code_1884[1], -1)
    : local.input_1883)

  iter_1884 = try(local.iter_1883.code_ptr >= length(var.code), true) ? local.iter_1883 : {
    output = (local.code_1884[0] == "."
      ? "${local.iter_1883.output}${join("", [for _ in range(local.code_1884[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1883.tape[local.iter_1883.tape_ptr]))])}"
      : local.iter_1883.output)
    
    tape = (
      local.code_1884[0] == "+"
        ? [for i, b in local.iter_1883.tape : (i == local.iter_1883.tape_ptr ? (b + local.code_1884[1]) % 256 : b)] :
      local.code_1884[0] == "-"
        ? [for i, b in local.iter_1883.tape : (i == local.iter_1883.tape_ptr ? (b - local.code_1884[1] + 256) % 256 : b)] :
      local.code_1884[0] == ","
        ? [for i, b in local.iter_1883.tape : (i == local.iter_1883.tape_ptr ? local.ascii_lookup[substr(local.input_1884, 0, 1)] : b)]
        : local.iter_1883.tape)

    tape_ptr = (
      local.code_1884[0] == "<"
        ? local.iter_1883.tape_ptr - local.code_1884[1] :
      local.code_1884[0] == ">"
        ? local.iter_1883.tape_ptr + local.code_1884[1]
        : local.iter_1883.tape_ptr)

    code_ptr = 2 + (
      local.code_1884[0] == "["
        ? local.iter_1883.tape[local.iter_1883.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1883.code_ptr)] : local.iter_1883.code_ptr :
      local.code_1884[0] == "]"
        ? local.iter_1883.tape[local.iter_1883.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1883.code_ptr)] : local.iter_1883.code_ptr
        : local.iter_1883.code_ptr)

    steps_taken = 1 + local.iter_1883.steps_taken
  }
}

locals {
  code_1885 = (try(local.iter_1884.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1884.code_ptr, local.iter_1884.code_ptr + 2)
    : [null])

  input_1885 = (local.code_1885[0] == ","
    ? substr(local.input_1884, local.code_1885[1], -1)
    : local.input_1884)

  iter_1885 = try(local.iter_1884.code_ptr >= length(var.code), true) ? local.iter_1884 : {
    output = (local.code_1885[0] == "."
      ? "${local.iter_1884.output}${join("", [for _ in range(local.code_1885[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1884.tape[local.iter_1884.tape_ptr]))])}"
      : local.iter_1884.output)
    
    tape = (
      local.code_1885[0] == "+"
        ? [for i, b in local.iter_1884.tape : (i == local.iter_1884.tape_ptr ? (b + local.code_1885[1]) % 256 : b)] :
      local.code_1885[0] == "-"
        ? [for i, b in local.iter_1884.tape : (i == local.iter_1884.tape_ptr ? (b - local.code_1885[1] + 256) % 256 : b)] :
      local.code_1885[0] == ","
        ? [for i, b in local.iter_1884.tape : (i == local.iter_1884.tape_ptr ? local.ascii_lookup[substr(local.input_1885, 0, 1)] : b)]
        : local.iter_1884.tape)

    tape_ptr = (
      local.code_1885[0] == "<"
        ? local.iter_1884.tape_ptr - local.code_1885[1] :
      local.code_1885[0] == ">"
        ? local.iter_1884.tape_ptr + local.code_1885[1]
        : local.iter_1884.tape_ptr)

    code_ptr = 2 + (
      local.code_1885[0] == "["
        ? local.iter_1884.tape[local.iter_1884.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1884.code_ptr)] : local.iter_1884.code_ptr :
      local.code_1885[0] == "]"
        ? local.iter_1884.tape[local.iter_1884.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1884.code_ptr)] : local.iter_1884.code_ptr
        : local.iter_1884.code_ptr)

    steps_taken = 1 + local.iter_1884.steps_taken
  }
}

locals {
  code_1886 = (try(local.iter_1885.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1885.code_ptr, local.iter_1885.code_ptr + 2)
    : [null])

  input_1886 = (local.code_1886[0] == ","
    ? substr(local.input_1885, local.code_1886[1], -1)
    : local.input_1885)

  iter_1886 = try(local.iter_1885.code_ptr >= length(var.code), true) ? local.iter_1885 : {
    output = (local.code_1886[0] == "."
      ? "${local.iter_1885.output}${join("", [for _ in range(local.code_1886[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1885.tape[local.iter_1885.tape_ptr]))])}"
      : local.iter_1885.output)
    
    tape = (
      local.code_1886[0] == "+"
        ? [for i, b in local.iter_1885.tape : (i == local.iter_1885.tape_ptr ? (b + local.code_1886[1]) % 256 : b)] :
      local.code_1886[0] == "-"
        ? [for i, b in local.iter_1885.tape : (i == local.iter_1885.tape_ptr ? (b - local.code_1886[1] + 256) % 256 : b)] :
      local.code_1886[0] == ","
        ? [for i, b in local.iter_1885.tape : (i == local.iter_1885.tape_ptr ? local.ascii_lookup[substr(local.input_1886, 0, 1)] : b)]
        : local.iter_1885.tape)

    tape_ptr = (
      local.code_1886[0] == "<"
        ? local.iter_1885.tape_ptr - local.code_1886[1] :
      local.code_1886[0] == ">"
        ? local.iter_1885.tape_ptr + local.code_1886[1]
        : local.iter_1885.tape_ptr)

    code_ptr = 2 + (
      local.code_1886[0] == "["
        ? local.iter_1885.tape[local.iter_1885.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1885.code_ptr)] : local.iter_1885.code_ptr :
      local.code_1886[0] == "]"
        ? local.iter_1885.tape[local.iter_1885.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1885.code_ptr)] : local.iter_1885.code_ptr
        : local.iter_1885.code_ptr)

    steps_taken = 1 + local.iter_1885.steps_taken
  }
}

locals {
  code_1887 = (try(local.iter_1886.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1886.code_ptr, local.iter_1886.code_ptr + 2)
    : [null])

  input_1887 = (local.code_1887[0] == ","
    ? substr(local.input_1886, local.code_1887[1], -1)
    : local.input_1886)

  iter_1887 = try(local.iter_1886.code_ptr >= length(var.code), true) ? local.iter_1886 : {
    output = (local.code_1887[0] == "."
      ? "${local.iter_1886.output}${join("", [for _ in range(local.code_1887[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1886.tape[local.iter_1886.tape_ptr]))])}"
      : local.iter_1886.output)
    
    tape = (
      local.code_1887[0] == "+"
        ? [for i, b in local.iter_1886.tape : (i == local.iter_1886.tape_ptr ? (b + local.code_1887[1]) % 256 : b)] :
      local.code_1887[0] == "-"
        ? [for i, b in local.iter_1886.tape : (i == local.iter_1886.tape_ptr ? (b - local.code_1887[1] + 256) % 256 : b)] :
      local.code_1887[0] == ","
        ? [for i, b in local.iter_1886.tape : (i == local.iter_1886.tape_ptr ? local.ascii_lookup[substr(local.input_1887, 0, 1)] : b)]
        : local.iter_1886.tape)

    tape_ptr = (
      local.code_1887[0] == "<"
        ? local.iter_1886.tape_ptr - local.code_1887[1] :
      local.code_1887[0] == ">"
        ? local.iter_1886.tape_ptr + local.code_1887[1]
        : local.iter_1886.tape_ptr)

    code_ptr = 2 + (
      local.code_1887[0] == "["
        ? local.iter_1886.tape[local.iter_1886.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1886.code_ptr)] : local.iter_1886.code_ptr :
      local.code_1887[0] == "]"
        ? local.iter_1886.tape[local.iter_1886.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1886.code_ptr)] : local.iter_1886.code_ptr
        : local.iter_1886.code_ptr)

    steps_taken = 1 + local.iter_1886.steps_taken
  }
}

locals {
  code_1888 = (try(local.iter_1887.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1887.code_ptr, local.iter_1887.code_ptr + 2)
    : [null])

  input_1888 = (local.code_1888[0] == ","
    ? substr(local.input_1887, local.code_1888[1], -1)
    : local.input_1887)

  iter_1888 = try(local.iter_1887.code_ptr >= length(var.code), true) ? local.iter_1887 : {
    output = (local.code_1888[0] == "."
      ? "${local.iter_1887.output}${join("", [for _ in range(local.code_1888[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1887.tape[local.iter_1887.tape_ptr]))])}"
      : local.iter_1887.output)
    
    tape = (
      local.code_1888[0] == "+"
        ? [for i, b in local.iter_1887.tape : (i == local.iter_1887.tape_ptr ? (b + local.code_1888[1]) % 256 : b)] :
      local.code_1888[0] == "-"
        ? [for i, b in local.iter_1887.tape : (i == local.iter_1887.tape_ptr ? (b - local.code_1888[1] + 256) % 256 : b)] :
      local.code_1888[0] == ","
        ? [for i, b in local.iter_1887.tape : (i == local.iter_1887.tape_ptr ? local.ascii_lookup[substr(local.input_1888, 0, 1)] : b)]
        : local.iter_1887.tape)

    tape_ptr = (
      local.code_1888[0] == "<"
        ? local.iter_1887.tape_ptr - local.code_1888[1] :
      local.code_1888[0] == ">"
        ? local.iter_1887.tape_ptr + local.code_1888[1]
        : local.iter_1887.tape_ptr)

    code_ptr = 2 + (
      local.code_1888[0] == "["
        ? local.iter_1887.tape[local.iter_1887.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1887.code_ptr)] : local.iter_1887.code_ptr :
      local.code_1888[0] == "]"
        ? local.iter_1887.tape[local.iter_1887.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1887.code_ptr)] : local.iter_1887.code_ptr
        : local.iter_1887.code_ptr)

    steps_taken = 1 + local.iter_1887.steps_taken
  }
}

locals {
  code_1889 = (try(local.iter_1888.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1888.code_ptr, local.iter_1888.code_ptr + 2)
    : [null])

  input_1889 = (local.code_1889[0] == ","
    ? substr(local.input_1888, local.code_1889[1], -1)
    : local.input_1888)

  iter_1889 = try(local.iter_1888.code_ptr >= length(var.code), true) ? local.iter_1888 : {
    output = (local.code_1889[0] == "."
      ? "${local.iter_1888.output}${join("", [for _ in range(local.code_1889[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1888.tape[local.iter_1888.tape_ptr]))])}"
      : local.iter_1888.output)
    
    tape = (
      local.code_1889[0] == "+"
        ? [for i, b in local.iter_1888.tape : (i == local.iter_1888.tape_ptr ? (b + local.code_1889[1]) % 256 : b)] :
      local.code_1889[0] == "-"
        ? [for i, b in local.iter_1888.tape : (i == local.iter_1888.tape_ptr ? (b - local.code_1889[1] + 256) % 256 : b)] :
      local.code_1889[0] == ","
        ? [for i, b in local.iter_1888.tape : (i == local.iter_1888.tape_ptr ? local.ascii_lookup[substr(local.input_1889, 0, 1)] : b)]
        : local.iter_1888.tape)

    tape_ptr = (
      local.code_1889[0] == "<"
        ? local.iter_1888.tape_ptr - local.code_1889[1] :
      local.code_1889[0] == ">"
        ? local.iter_1888.tape_ptr + local.code_1889[1]
        : local.iter_1888.tape_ptr)

    code_ptr = 2 + (
      local.code_1889[0] == "["
        ? local.iter_1888.tape[local.iter_1888.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1888.code_ptr)] : local.iter_1888.code_ptr :
      local.code_1889[0] == "]"
        ? local.iter_1888.tape[local.iter_1888.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1888.code_ptr)] : local.iter_1888.code_ptr
        : local.iter_1888.code_ptr)

    steps_taken = 1 + local.iter_1888.steps_taken
  }
}

locals {
  code_1890 = (try(local.iter_1889.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1889.code_ptr, local.iter_1889.code_ptr + 2)
    : [null])

  input_1890 = (local.code_1890[0] == ","
    ? substr(local.input_1889, local.code_1890[1], -1)
    : local.input_1889)

  iter_1890 = try(local.iter_1889.code_ptr >= length(var.code), true) ? local.iter_1889 : {
    output = (local.code_1890[0] == "."
      ? "${local.iter_1889.output}${join("", [for _ in range(local.code_1890[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1889.tape[local.iter_1889.tape_ptr]))])}"
      : local.iter_1889.output)
    
    tape = (
      local.code_1890[0] == "+"
        ? [for i, b in local.iter_1889.tape : (i == local.iter_1889.tape_ptr ? (b + local.code_1890[1]) % 256 : b)] :
      local.code_1890[0] == "-"
        ? [for i, b in local.iter_1889.tape : (i == local.iter_1889.tape_ptr ? (b - local.code_1890[1] + 256) % 256 : b)] :
      local.code_1890[0] == ","
        ? [for i, b in local.iter_1889.tape : (i == local.iter_1889.tape_ptr ? local.ascii_lookup[substr(local.input_1890, 0, 1)] : b)]
        : local.iter_1889.tape)

    tape_ptr = (
      local.code_1890[0] == "<"
        ? local.iter_1889.tape_ptr - local.code_1890[1] :
      local.code_1890[0] == ">"
        ? local.iter_1889.tape_ptr + local.code_1890[1]
        : local.iter_1889.tape_ptr)

    code_ptr = 2 + (
      local.code_1890[0] == "["
        ? local.iter_1889.tape[local.iter_1889.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1889.code_ptr)] : local.iter_1889.code_ptr :
      local.code_1890[0] == "]"
        ? local.iter_1889.tape[local.iter_1889.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1889.code_ptr)] : local.iter_1889.code_ptr
        : local.iter_1889.code_ptr)

    steps_taken = 1 + local.iter_1889.steps_taken
  }
}

locals {
  code_1891 = (try(local.iter_1890.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1890.code_ptr, local.iter_1890.code_ptr + 2)
    : [null])

  input_1891 = (local.code_1891[0] == ","
    ? substr(local.input_1890, local.code_1891[1], -1)
    : local.input_1890)

  iter_1891 = try(local.iter_1890.code_ptr >= length(var.code), true) ? local.iter_1890 : {
    output = (local.code_1891[0] == "."
      ? "${local.iter_1890.output}${join("", [for _ in range(local.code_1891[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1890.tape[local.iter_1890.tape_ptr]))])}"
      : local.iter_1890.output)
    
    tape = (
      local.code_1891[0] == "+"
        ? [for i, b in local.iter_1890.tape : (i == local.iter_1890.tape_ptr ? (b + local.code_1891[1]) % 256 : b)] :
      local.code_1891[0] == "-"
        ? [for i, b in local.iter_1890.tape : (i == local.iter_1890.tape_ptr ? (b - local.code_1891[1] + 256) % 256 : b)] :
      local.code_1891[0] == ","
        ? [for i, b in local.iter_1890.tape : (i == local.iter_1890.tape_ptr ? local.ascii_lookup[substr(local.input_1891, 0, 1)] : b)]
        : local.iter_1890.tape)

    tape_ptr = (
      local.code_1891[0] == "<"
        ? local.iter_1890.tape_ptr - local.code_1891[1] :
      local.code_1891[0] == ">"
        ? local.iter_1890.tape_ptr + local.code_1891[1]
        : local.iter_1890.tape_ptr)

    code_ptr = 2 + (
      local.code_1891[0] == "["
        ? local.iter_1890.tape[local.iter_1890.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1890.code_ptr)] : local.iter_1890.code_ptr :
      local.code_1891[0] == "]"
        ? local.iter_1890.tape[local.iter_1890.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1890.code_ptr)] : local.iter_1890.code_ptr
        : local.iter_1890.code_ptr)

    steps_taken = 1 + local.iter_1890.steps_taken
  }
}

locals {
  code_1892 = (try(local.iter_1891.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1891.code_ptr, local.iter_1891.code_ptr + 2)
    : [null])

  input_1892 = (local.code_1892[0] == ","
    ? substr(local.input_1891, local.code_1892[1], -1)
    : local.input_1891)

  iter_1892 = try(local.iter_1891.code_ptr >= length(var.code), true) ? local.iter_1891 : {
    output = (local.code_1892[0] == "."
      ? "${local.iter_1891.output}${join("", [for _ in range(local.code_1892[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1891.tape[local.iter_1891.tape_ptr]))])}"
      : local.iter_1891.output)
    
    tape = (
      local.code_1892[0] == "+"
        ? [for i, b in local.iter_1891.tape : (i == local.iter_1891.tape_ptr ? (b + local.code_1892[1]) % 256 : b)] :
      local.code_1892[0] == "-"
        ? [for i, b in local.iter_1891.tape : (i == local.iter_1891.tape_ptr ? (b - local.code_1892[1] + 256) % 256 : b)] :
      local.code_1892[0] == ","
        ? [for i, b in local.iter_1891.tape : (i == local.iter_1891.tape_ptr ? local.ascii_lookup[substr(local.input_1892, 0, 1)] : b)]
        : local.iter_1891.tape)

    tape_ptr = (
      local.code_1892[0] == "<"
        ? local.iter_1891.tape_ptr - local.code_1892[1] :
      local.code_1892[0] == ">"
        ? local.iter_1891.tape_ptr + local.code_1892[1]
        : local.iter_1891.tape_ptr)

    code_ptr = 2 + (
      local.code_1892[0] == "["
        ? local.iter_1891.tape[local.iter_1891.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1891.code_ptr)] : local.iter_1891.code_ptr :
      local.code_1892[0] == "]"
        ? local.iter_1891.tape[local.iter_1891.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1891.code_ptr)] : local.iter_1891.code_ptr
        : local.iter_1891.code_ptr)

    steps_taken = 1 + local.iter_1891.steps_taken
  }
}

locals {
  code_1893 = (try(local.iter_1892.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1892.code_ptr, local.iter_1892.code_ptr + 2)
    : [null])

  input_1893 = (local.code_1893[0] == ","
    ? substr(local.input_1892, local.code_1893[1], -1)
    : local.input_1892)

  iter_1893 = try(local.iter_1892.code_ptr >= length(var.code), true) ? local.iter_1892 : {
    output = (local.code_1893[0] == "."
      ? "${local.iter_1892.output}${join("", [for _ in range(local.code_1893[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1892.tape[local.iter_1892.tape_ptr]))])}"
      : local.iter_1892.output)
    
    tape = (
      local.code_1893[0] == "+"
        ? [for i, b in local.iter_1892.tape : (i == local.iter_1892.tape_ptr ? (b + local.code_1893[1]) % 256 : b)] :
      local.code_1893[0] == "-"
        ? [for i, b in local.iter_1892.tape : (i == local.iter_1892.tape_ptr ? (b - local.code_1893[1] + 256) % 256 : b)] :
      local.code_1893[0] == ","
        ? [for i, b in local.iter_1892.tape : (i == local.iter_1892.tape_ptr ? local.ascii_lookup[substr(local.input_1893, 0, 1)] : b)]
        : local.iter_1892.tape)

    tape_ptr = (
      local.code_1893[0] == "<"
        ? local.iter_1892.tape_ptr - local.code_1893[1] :
      local.code_1893[0] == ">"
        ? local.iter_1892.tape_ptr + local.code_1893[1]
        : local.iter_1892.tape_ptr)

    code_ptr = 2 + (
      local.code_1893[0] == "["
        ? local.iter_1892.tape[local.iter_1892.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1892.code_ptr)] : local.iter_1892.code_ptr :
      local.code_1893[0] == "]"
        ? local.iter_1892.tape[local.iter_1892.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1892.code_ptr)] : local.iter_1892.code_ptr
        : local.iter_1892.code_ptr)

    steps_taken = 1 + local.iter_1892.steps_taken
  }
}

locals {
  code_1894 = (try(local.iter_1893.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1893.code_ptr, local.iter_1893.code_ptr + 2)
    : [null])

  input_1894 = (local.code_1894[0] == ","
    ? substr(local.input_1893, local.code_1894[1], -1)
    : local.input_1893)

  iter_1894 = try(local.iter_1893.code_ptr >= length(var.code), true) ? local.iter_1893 : {
    output = (local.code_1894[0] == "."
      ? "${local.iter_1893.output}${join("", [for _ in range(local.code_1894[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1893.tape[local.iter_1893.tape_ptr]))])}"
      : local.iter_1893.output)
    
    tape = (
      local.code_1894[0] == "+"
        ? [for i, b in local.iter_1893.tape : (i == local.iter_1893.tape_ptr ? (b + local.code_1894[1]) % 256 : b)] :
      local.code_1894[0] == "-"
        ? [for i, b in local.iter_1893.tape : (i == local.iter_1893.tape_ptr ? (b - local.code_1894[1] + 256) % 256 : b)] :
      local.code_1894[0] == ","
        ? [for i, b in local.iter_1893.tape : (i == local.iter_1893.tape_ptr ? local.ascii_lookup[substr(local.input_1894, 0, 1)] : b)]
        : local.iter_1893.tape)

    tape_ptr = (
      local.code_1894[0] == "<"
        ? local.iter_1893.tape_ptr - local.code_1894[1] :
      local.code_1894[0] == ">"
        ? local.iter_1893.tape_ptr + local.code_1894[1]
        : local.iter_1893.tape_ptr)

    code_ptr = 2 + (
      local.code_1894[0] == "["
        ? local.iter_1893.tape[local.iter_1893.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1893.code_ptr)] : local.iter_1893.code_ptr :
      local.code_1894[0] == "]"
        ? local.iter_1893.tape[local.iter_1893.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1893.code_ptr)] : local.iter_1893.code_ptr
        : local.iter_1893.code_ptr)

    steps_taken = 1 + local.iter_1893.steps_taken
  }
}

locals {
  code_1895 = (try(local.iter_1894.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1894.code_ptr, local.iter_1894.code_ptr + 2)
    : [null])

  input_1895 = (local.code_1895[0] == ","
    ? substr(local.input_1894, local.code_1895[1], -1)
    : local.input_1894)

  iter_1895 = try(local.iter_1894.code_ptr >= length(var.code), true) ? local.iter_1894 : {
    output = (local.code_1895[0] == "."
      ? "${local.iter_1894.output}${join("", [for _ in range(local.code_1895[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1894.tape[local.iter_1894.tape_ptr]))])}"
      : local.iter_1894.output)
    
    tape = (
      local.code_1895[0] == "+"
        ? [for i, b in local.iter_1894.tape : (i == local.iter_1894.tape_ptr ? (b + local.code_1895[1]) % 256 : b)] :
      local.code_1895[0] == "-"
        ? [for i, b in local.iter_1894.tape : (i == local.iter_1894.tape_ptr ? (b - local.code_1895[1] + 256) % 256 : b)] :
      local.code_1895[0] == ","
        ? [for i, b in local.iter_1894.tape : (i == local.iter_1894.tape_ptr ? local.ascii_lookup[substr(local.input_1895, 0, 1)] : b)]
        : local.iter_1894.tape)

    tape_ptr = (
      local.code_1895[0] == "<"
        ? local.iter_1894.tape_ptr - local.code_1895[1] :
      local.code_1895[0] == ">"
        ? local.iter_1894.tape_ptr + local.code_1895[1]
        : local.iter_1894.tape_ptr)

    code_ptr = 2 + (
      local.code_1895[0] == "["
        ? local.iter_1894.tape[local.iter_1894.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1894.code_ptr)] : local.iter_1894.code_ptr :
      local.code_1895[0] == "]"
        ? local.iter_1894.tape[local.iter_1894.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1894.code_ptr)] : local.iter_1894.code_ptr
        : local.iter_1894.code_ptr)

    steps_taken = 1 + local.iter_1894.steps_taken
  }
}

locals {
  code_1896 = (try(local.iter_1895.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1895.code_ptr, local.iter_1895.code_ptr + 2)
    : [null])

  input_1896 = (local.code_1896[0] == ","
    ? substr(local.input_1895, local.code_1896[1], -1)
    : local.input_1895)

  iter_1896 = try(local.iter_1895.code_ptr >= length(var.code), true) ? local.iter_1895 : {
    output = (local.code_1896[0] == "."
      ? "${local.iter_1895.output}${join("", [for _ in range(local.code_1896[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1895.tape[local.iter_1895.tape_ptr]))])}"
      : local.iter_1895.output)
    
    tape = (
      local.code_1896[0] == "+"
        ? [for i, b in local.iter_1895.tape : (i == local.iter_1895.tape_ptr ? (b + local.code_1896[1]) % 256 : b)] :
      local.code_1896[0] == "-"
        ? [for i, b in local.iter_1895.tape : (i == local.iter_1895.tape_ptr ? (b - local.code_1896[1] + 256) % 256 : b)] :
      local.code_1896[0] == ","
        ? [for i, b in local.iter_1895.tape : (i == local.iter_1895.tape_ptr ? local.ascii_lookup[substr(local.input_1896, 0, 1)] : b)]
        : local.iter_1895.tape)

    tape_ptr = (
      local.code_1896[0] == "<"
        ? local.iter_1895.tape_ptr - local.code_1896[1] :
      local.code_1896[0] == ">"
        ? local.iter_1895.tape_ptr + local.code_1896[1]
        : local.iter_1895.tape_ptr)

    code_ptr = 2 + (
      local.code_1896[0] == "["
        ? local.iter_1895.tape[local.iter_1895.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1895.code_ptr)] : local.iter_1895.code_ptr :
      local.code_1896[0] == "]"
        ? local.iter_1895.tape[local.iter_1895.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1895.code_ptr)] : local.iter_1895.code_ptr
        : local.iter_1895.code_ptr)

    steps_taken = 1 + local.iter_1895.steps_taken
  }
}

locals {
  code_1897 = (try(local.iter_1896.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1896.code_ptr, local.iter_1896.code_ptr + 2)
    : [null])

  input_1897 = (local.code_1897[0] == ","
    ? substr(local.input_1896, local.code_1897[1], -1)
    : local.input_1896)

  iter_1897 = try(local.iter_1896.code_ptr >= length(var.code), true) ? local.iter_1896 : {
    output = (local.code_1897[0] == "."
      ? "${local.iter_1896.output}${join("", [for _ in range(local.code_1897[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1896.tape[local.iter_1896.tape_ptr]))])}"
      : local.iter_1896.output)
    
    tape = (
      local.code_1897[0] == "+"
        ? [for i, b in local.iter_1896.tape : (i == local.iter_1896.tape_ptr ? (b + local.code_1897[1]) % 256 : b)] :
      local.code_1897[0] == "-"
        ? [for i, b in local.iter_1896.tape : (i == local.iter_1896.tape_ptr ? (b - local.code_1897[1] + 256) % 256 : b)] :
      local.code_1897[0] == ","
        ? [for i, b in local.iter_1896.tape : (i == local.iter_1896.tape_ptr ? local.ascii_lookup[substr(local.input_1897, 0, 1)] : b)]
        : local.iter_1896.tape)

    tape_ptr = (
      local.code_1897[0] == "<"
        ? local.iter_1896.tape_ptr - local.code_1897[1] :
      local.code_1897[0] == ">"
        ? local.iter_1896.tape_ptr + local.code_1897[1]
        : local.iter_1896.tape_ptr)

    code_ptr = 2 + (
      local.code_1897[0] == "["
        ? local.iter_1896.tape[local.iter_1896.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1896.code_ptr)] : local.iter_1896.code_ptr :
      local.code_1897[0] == "]"
        ? local.iter_1896.tape[local.iter_1896.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1896.code_ptr)] : local.iter_1896.code_ptr
        : local.iter_1896.code_ptr)

    steps_taken = 1 + local.iter_1896.steps_taken
  }
}

locals {
  code_1898 = (try(local.iter_1897.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1897.code_ptr, local.iter_1897.code_ptr + 2)
    : [null])

  input_1898 = (local.code_1898[0] == ","
    ? substr(local.input_1897, local.code_1898[1], -1)
    : local.input_1897)

  iter_1898 = try(local.iter_1897.code_ptr >= length(var.code), true) ? local.iter_1897 : {
    output = (local.code_1898[0] == "."
      ? "${local.iter_1897.output}${join("", [for _ in range(local.code_1898[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1897.tape[local.iter_1897.tape_ptr]))])}"
      : local.iter_1897.output)
    
    tape = (
      local.code_1898[0] == "+"
        ? [for i, b in local.iter_1897.tape : (i == local.iter_1897.tape_ptr ? (b + local.code_1898[1]) % 256 : b)] :
      local.code_1898[0] == "-"
        ? [for i, b in local.iter_1897.tape : (i == local.iter_1897.tape_ptr ? (b - local.code_1898[1] + 256) % 256 : b)] :
      local.code_1898[0] == ","
        ? [for i, b in local.iter_1897.tape : (i == local.iter_1897.tape_ptr ? local.ascii_lookup[substr(local.input_1898, 0, 1)] : b)]
        : local.iter_1897.tape)

    tape_ptr = (
      local.code_1898[0] == "<"
        ? local.iter_1897.tape_ptr - local.code_1898[1] :
      local.code_1898[0] == ">"
        ? local.iter_1897.tape_ptr + local.code_1898[1]
        : local.iter_1897.tape_ptr)

    code_ptr = 2 + (
      local.code_1898[0] == "["
        ? local.iter_1897.tape[local.iter_1897.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1897.code_ptr)] : local.iter_1897.code_ptr :
      local.code_1898[0] == "]"
        ? local.iter_1897.tape[local.iter_1897.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1897.code_ptr)] : local.iter_1897.code_ptr
        : local.iter_1897.code_ptr)

    steps_taken = 1 + local.iter_1897.steps_taken
  }
}

locals {
  code_1899 = (try(local.iter_1898.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1898.code_ptr, local.iter_1898.code_ptr + 2)
    : [null])

  input_1899 = (local.code_1899[0] == ","
    ? substr(local.input_1898, local.code_1899[1], -1)
    : local.input_1898)

  iter_1899 = try(local.iter_1898.code_ptr >= length(var.code), true) ? local.iter_1898 : {
    output = (local.code_1899[0] == "."
      ? "${local.iter_1898.output}${join("", [for _ in range(local.code_1899[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1898.tape[local.iter_1898.tape_ptr]))])}"
      : local.iter_1898.output)
    
    tape = (
      local.code_1899[0] == "+"
        ? [for i, b in local.iter_1898.tape : (i == local.iter_1898.tape_ptr ? (b + local.code_1899[1]) % 256 : b)] :
      local.code_1899[0] == "-"
        ? [for i, b in local.iter_1898.tape : (i == local.iter_1898.tape_ptr ? (b - local.code_1899[1] + 256) % 256 : b)] :
      local.code_1899[0] == ","
        ? [for i, b in local.iter_1898.tape : (i == local.iter_1898.tape_ptr ? local.ascii_lookup[substr(local.input_1899, 0, 1)] : b)]
        : local.iter_1898.tape)

    tape_ptr = (
      local.code_1899[0] == "<"
        ? local.iter_1898.tape_ptr - local.code_1899[1] :
      local.code_1899[0] == ">"
        ? local.iter_1898.tape_ptr + local.code_1899[1]
        : local.iter_1898.tape_ptr)

    code_ptr = 2 + (
      local.code_1899[0] == "["
        ? local.iter_1898.tape[local.iter_1898.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1898.code_ptr)] : local.iter_1898.code_ptr :
      local.code_1899[0] == "]"
        ? local.iter_1898.tape[local.iter_1898.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1898.code_ptr)] : local.iter_1898.code_ptr
        : local.iter_1898.code_ptr)

    steps_taken = 1 + local.iter_1898.steps_taken
  }
}

locals {
  code_1900 = (try(local.iter_1899.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1899.code_ptr, local.iter_1899.code_ptr + 2)
    : [null])

  input_1900 = (local.code_1900[0] == ","
    ? substr(local.input_1899, local.code_1900[1], -1)
    : local.input_1899)

  iter_1900 = try(local.iter_1899.code_ptr >= length(var.code), true) ? local.iter_1899 : {
    output = (local.code_1900[0] == "."
      ? "${local.iter_1899.output}${join("", [for _ in range(local.code_1900[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1899.tape[local.iter_1899.tape_ptr]))])}"
      : local.iter_1899.output)
    
    tape = (
      local.code_1900[0] == "+"
        ? [for i, b in local.iter_1899.tape : (i == local.iter_1899.tape_ptr ? (b + local.code_1900[1]) % 256 : b)] :
      local.code_1900[0] == "-"
        ? [for i, b in local.iter_1899.tape : (i == local.iter_1899.tape_ptr ? (b - local.code_1900[1] + 256) % 256 : b)] :
      local.code_1900[0] == ","
        ? [for i, b in local.iter_1899.tape : (i == local.iter_1899.tape_ptr ? local.ascii_lookup[substr(local.input_1900, 0, 1)] : b)]
        : local.iter_1899.tape)

    tape_ptr = (
      local.code_1900[0] == "<"
        ? local.iter_1899.tape_ptr - local.code_1900[1] :
      local.code_1900[0] == ">"
        ? local.iter_1899.tape_ptr + local.code_1900[1]
        : local.iter_1899.tape_ptr)

    code_ptr = 2 + (
      local.code_1900[0] == "["
        ? local.iter_1899.tape[local.iter_1899.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1899.code_ptr)] : local.iter_1899.code_ptr :
      local.code_1900[0] == "]"
        ? local.iter_1899.tape[local.iter_1899.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1899.code_ptr)] : local.iter_1899.code_ptr
        : local.iter_1899.code_ptr)

    steps_taken = 1 + local.iter_1899.steps_taken
  }
}

locals {
  code_1901 = (try(local.iter_1900.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1900.code_ptr, local.iter_1900.code_ptr + 2)
    : [null])

  input_1901 = (local.code_1901[0] == ","
    ? substr(local.input_1900, local.code_1901[1], -1)
    : local.input_1900)

  iter_1901 = try(local.iter_1900.code_ptr >= length(var.code), true) ? local.iter_1900 : {
    output = (local.code_1901[0] == "."
      ? "${local.iter_1900.output}${join("", [for _ in range(local.code_1901[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1900.tape[local.iter_1900.tape_ptr]))])}"
      : local.iter_1900.output)
    
    tape = (
      local.code_1901[0] == "+"
        ? [for i, b in local.iter_1900.tape : (i == local.iter_1900.tape_ptr ? (b + local.code_1901[1]) % 256 : b)] :
      local.code_1901[0] == "-"
        ? [for i, b in local.iter_1900.tape : (i == local.iter_1900.tape_ptr ? (b - local.code_1901[1] + 256) % 256 : b)] :
      local.code_1901[0] == ","
        ? [for i, b in local.iter_1900.tape : (i == local.iter_1900.tape_ptr ? local.ascii_lookup[substr(local.input_1901, 0, 1)] : b)]
        : local.iter_1900.tape)

    tape_ptr = (
      local.code_1901[0] == "<"
        ? local.iter_1900.tape_ptr - local.code_1901[1] :
      local.code_1901[0] == ">"
        ? local.iter_1900.tape_ptr + local.code_1901[1]
        : local.iter_1900.tape_ptr)

    code_ptr = 2 + (
      local.code_1901[0] == "["
        ? local.iter_1900.tape[local.iter_1900.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1900.code_ptr)] : local.iter_1900.code_ptr :
      local.code_1901[0] == "]"
        ? local.iter_1900.tape[local.iter_1900.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1900.code_ptr)] : local.iter_1900.code_ptr
        : local.iter_1900.code_ptr)

    steps_taken = 1 + local.iter_1900.steps_taken
  }
}

locals {
  code_1902 = (try(local.iter_1901.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1901.code_ptr, local.iter_1901.code_ptr + 2)
    : [null])

  input_1902 = (local.code_1902[0] == ","
    ? substr(local.input_1901, local.code_1902[1], -1)
    : local.input_1901)

  iter_1902 = try(local.iter_1901.code_ptr >= length(var.code), true) ? local.iter_1901 : {
    output = (local.code_1902[0] == "."
      ? "${local.iter_1901.output}${join("", [for _ in range(local.code_1902[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1901.tape[local.iter_1901.tape_ptr]))])}"
      : local.iter_1901.output)
    
    tape = (
      local.code_1902[0] == "+"
        ? [for i, b in local.iter_1901.tape : (i == local.iter_1901.tape_ptr ? (b + local.code_1902[1]) % 256 : b)] :
      local.code_1902[0] == "-"
        ? [for i, b in local.iter_1901.tape : (i == local.iter_1901.tape_ptr ? (b - local.code_1902[1] + 256) % 256 : b)] :
      local.code_1902[0] == ","
        ? [for i, b in local.iter_1901.tape : (i == local.iter_1901.tape_ptr ? local.ascii_lookup[substr(local.input_1902, 0, 1)] : b)]
        : local.iter_1901.tape)

    tape_ptr = (
      local.code_1902[0] == "<"
        ? local.iter_1901.tape_ptr - local.code_1902[1] :
      local.code_1902[0] == ">"
        ? local.iter_1901.tape_ptr + local.code_1902[1]
        : local.iter_1901.tape_ptr)

    code_ptr = 2 + (
      local.code_1902[0] == "["
        ? local.iter_1901.tape[local.iter_1901.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1901.code_ptr)] : local.iter_1901.code_ptr :
      local.code_1902[0] == "]"
        ? local.iter_1901.tape[local.iter_1901.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1901.code_ptr)] : local.iter_1901.code_ptr
        : local.iter_1901.code_ptr)

    steps_taken = 1 + local.iter_1901.steps_taken
  }
}

locals {
  code_1903 = (try(local.iter_1902.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1902.code_ptr, local.iter_1902.code_ptr + 2)
    : [null])

  input_1903 = (local.code_1903[0] == ","
    ? substr(local.input_1902, local.code_1903[1], -1)
    : local.input_1902)

  iter_1903 = try(local.iter_1902.code_ptr >= length(var.code), true) ? local.iter_1902 : {
    output = (local.code_1903[0] == "."
      ? "${local.iter_1902.output}${join("", [for _ in range(local.code_1903[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1902.tape[local.iter_1902.tape_ptr]))])}"
      : local.iter_1902.output)
    
    tape = (
      local.code_1903[0] == "+"
        ? [for i, b in local.iter_1902.tape : (i == local.iter_1902.tape_ptr ? (b + local.code_1903[1]) % 256 : b)] :
      local.code_1903[0] == "-"
        ? [for i, b in local.iter_1902.tape : (i == local.iter_1902.tape_ptr ? (b - local.code_1903[1] + 256) % 256 : b)] :
      local.code_1903[0] == ","
        ? [for i, b in local.iter_1902.tape : (i == local.iter_1902.tape_ptr ? local.ascii_lookup[substr(local.input_1903, 0, 1)] : b)]
        : local.iter_1902.tape)

    tape_ptr = (
      local.code_1903[0] == "<"
        ? local.iter_1902.tape_ptr - local.code_1903[1] :
      local.code_1903[0] == ">"
        ? local.iter_1902.tape_ptr + local.code_1903[1]
        : local.iter_1902.tape_ptr)

    code_ptr = 2 + (
      local.code_1903[0] == "["
        ? local.iter_1902.tape[local.iter_1902.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1902.code_ptr)] : local.iter_1902.code_ptr :
      local.code_1903[0] == "]"
        ? local.iter_1902.tape[local.iter_1902.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1902.code_ptr)] : local.iter_1902.code_ptr
        : local.iter_1902.code_ptr)

    steps_taken = 1 + local.iter_1902.steps_taken
  }
}

locals {
  code_1904 = (try(local.iter_1903.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1903.code_ptr, local.iter_1903.code_ptr + 2)
    : [null])

  input_1904 = (local.code_1904[0] == ","
    ? substr(local.input_1903, local.code_1904[1], -1)
    : local.input_1903)

  iter_1904 = try(local.iter_1903.code_ptr >= length(var.code), true) ? local.iter_1903 : {
    output = (local.code_1904[0] == "."
      ? "${local.iter_1903.output}${join("", [for _ in range(local.code_1904[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1903.tape[local.iter_1903.tape_ptr]))])}"
      : local.iter_1903.output)
    
    tape = (
      local.code_1904[0] == "+"
        ? [for i, b in local.iter_1903.tape : (i == local.iter_1903.tape_ptr ? (b + local.code_1904[1]) % 256 : b)] :
      local.code_1904[0] == "-"
        ? [for i, b in local.iter_1903.tape : (i == local.iter_1903.tape_ptr ? (b - local.code_1904[1] + 256) % 256 : b)] :
      local.code_1904[0] == ","
        ? [for i, b in local.iter_1903.tape : (i == local.iter_1903.tape_ptr ? local.ascii_lookup[substr(local.input_1904, 0, 1)] : b)]
        : local.iter_1903.tape)

    tape_ptr = (
      local.code_1904[0] == "<"
        ? local.iter_1903.tape_ptr - local.code_1904[1] :
      local.code_1904[0] == ">"
        ? local.iter_1903.tape_ptr + local.code_1904[1]
        : local.iter_1903.tape_ptr)

    code_ptr = 2 + (
      local.code_1904[0] == "["
        ? local.iter_1903.tape[local.iter_1903.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1903.code_ptr)] : local.iter_1903.code_ptr :
      local.code_1904[0] == "]"
        ? local.iter_1903.tape[local.iter_1903.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1903.code_ptr)] : local.iter_1903.code_ptr
        : local.iter_1903.code_ptr)

    steps_taken = 1 + local.iter_1903.steps_taken
  }
}

locals {
  code_1905 = (try(local.iter_1904.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1904.code_ptr, local.iter_1904.code_ptr + 2)
    : [null])

  input_1905 = (local.code_1905[0] == ","
    ? substr(local.input_1904, local.code_1905[1], -1)
    : local.input_1904)

  iter_1905 = try(local.iter_1904.code_ptr >= length(var.code), true) ? local.iter_1904 : {
    output = (local.code_1905[0] == "."
      ? "${local.iter_1904.output}${join("", [for _ in range(local.code_1905[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1904.tape[local.iter_1904.tape_ptr]))])}"
      : local.iter_1904.output)
    
    tape = (
      local.code_1905[0] == "+"
        ? [for i, b in local.iter_1904.tape : (i == local.iter_1904.tape_ptr ? (b + local.code_1905[1]) % 256 : b)] :
      local.code_1905[0] == "-"
        ? [for i, b in local.iter_1904.tape : (i == local.iter_1904.tape_ptr ? (b - local.code_1905[1] + 256) % 256 : b)] :
      local.code_1905[0] == ","
        ? [for i, b in local.iter_1904.tape : (i == local.iter_1904.tape_ptr ? local.ascii_lookup[substr(local.input_1905, 0, 1)] : b)]
        : local.iter_1904.tape)

    tape_ptr = (
      local.code_1905[0] == "<"
        ? local.iter_1904.tape_ptr - local.code_1905[1] :
      local.code_1905[0] == ">"
        ? local.iter_1904.tape_ptr + local.code_1905[1]
        : local.iter_1904.tape_ptr)

    code_ptr = 2 + (
      local.code_1905[0] == "["
        ? local.iter_1904.tape[local.iter_1904.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1904.code_ptr)] : local.iter_1904.code_ptr :
      local.code_1905[0] == "]"
        ? local.iter_1904.tape[local.iter_1904.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1904.code_ptr)] : local.iter_1904.code_ptr
        : local.iter_1904.code_ptr)

    steps_taken = 1 + local.iter_1904.steps_taken
  }
}

locals {
  code_1906 = (try(local.iter_1905.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1905.code_ptr, local.iter_1905.code_ptr + 2)
    : [null])

  input_1906 = (local.code_1906[0] == ","
    ? substr(local.input_1905, local.code_1906[1], -1)
    : local.input_1905)

  iter_1906 = try(local.iter_1905.code_ptr >= length(var.code), true) ? local.iter_1905 : {
    output = (local.code_1906[0] == "."
      ? "${local.iter_1905.output}${join("", [for _ in range(local.code_1906[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1905.tape[local.iter_1905.tape_ptr]))])}"
      : local.iter_1905.output)
    
    tape = (
      local.code_1906[0] == "+"
        ? [for i, b in local.iter_1905.tape : (i == local.iter_1905.tape_ptr ? (b + local.code_1906[1]) % 256 : b)] :
      local.code_1906[0] == "-"
        ? [for i, b in local.iter_1905.tape : (i == local.iter_1905.tape_ptr ? (b - local.code_1906[1] + 256) % 256 : b)] :
      local.code_1906[0] == ","
        ? [for i, b in local.iter_1905.tape : (i == local.iter_1905.tape_ptr ? local.ascii_lookup[substr(local.input_1906, 0, 1)] : b)]
        : local.iter_1905.tape)

    tape_ptr = (
      local.code_1906[0] == "<"
        ? local.iter_1905.tape_ptr - local.code_1906[1] :
      local.code_1906[0] == ">"
        ? local.iter_1905.tape_ptr + local.code_1906[1]
        : local.iter_1905.tape_ptr)

    code_ptr = 2 + (
      local.code_1906[0] == "["
        ? local.iter_1905.tape[local.iter_1905.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1905.code_ptr)] : local.iter_1905.code_ptr :
      local.code_1906[0] == "]"
        ? local.iter_1905.tape[local.iter_1905.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1905.code_ptr)] : local.iter_1905.code_ptr
        : local.iter_1905.code_ptr)

    steps_taken = 1 + local.iter_1905.steps_taken
  }
}

locals {
  code_1907 = (try(local.iter_1906.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1906.code_ptr, local.iter_1906.code_ptr + 2)
    : [null])

  input_1907 = (local.code_1907[0] == ","
    ? substr(local.input_1906, local.code_1907[1], -1)
    : local.input_1906)

  iter_1907 = try(local.iter_1906.code_ptr >= length(var.code), true) ? local.iter_1906 : {
    output = (local.code_1907[0] == "."
      ? "${local.iter_1906.output}${join("", [for _ in range(local.code_1907[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1906.tape[local.iter_1906.tape_ptr]))])}"
      : local.iter_1906.output)
    
    tape = (
      local.code_1907[0] == "+"
        ? [for i, b in local.iter_1906.tape : (i == local.iter_1906.tape_ptr ? (b + local.code_1907[1]) % 256 : b)] :
      local.code_1907[0] == "-"
        ? [for i, b in local.iter_1906.tape : (i == local.iter_1906.tape_ptr ? (b - local.code_1907[1] + 256) % 256 : b)] :
      local.code_1907[0] == ","
        ? [for i, b in local.iter_1906.tape : (i == local.iter_1906.tape_ptr ? local.ascii_lookup[substr(local.input_1907, 0, 1)] : b)]
        : local.iter_1906.tape)

    tape_ptr = (
      local.code_1907[0] == "<"
        ? local.iter_1906.tape_ptr - local.code_1907[1] :
      local.code_1907[0] == ">"
        ? local.iter_1906.tape_ptr + local.code_1907[1]
        : local.iter_1906.tape_ptr)

    code_ptr = 2 + (
      local.code_1907[0] == "["
        ? local.iter_1906.tape[local.iter_1906.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1906.code_ptr)] : local.iter_1906.code_ptr :
      local.code_1907[0] == "]"
        ? local.iter_1906.tape[local.iter_1906.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1906.code_ptr)] : local.iter_1906.code_ptr
        : local.iter_1906.code_ptr)

    steps_taken = 1 + local.iter_1906.steps_taken
  }
}

locals {
  code_1908 = (try(local.iter_1907.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1907.code_ptr, local.iter_1907.code_ptr + 2)
    : [null])

  input_1908 = (local.code_1908[0] == ","
    ? substr(local.input_1907, local.code_1908[1], -1)
    : local.input_1907)

  iter_1908 = try(local.iter_1907.code_ptr >= length(var.code), true) ? local.iter_1907 : {
    output = (local.code_1908[0] == "."
      ? "${local.iter_1907.output}${join("", [for _ in range(local.code_1908[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1907.tape[local.iter_1907.tape_ptr]))])}"
      : local.iter_1907.output)
    
    tape = (
      local.code_1908[0] == "+"
        ? [for i, b in local.iter_1907.tape : (i == local.iter_1907.tape_ptr ? (b + local.code_1908[1]) % 256 : b)] :
      local.code_1908[0] == "-"
        ? [for i, b in local.iter_1907.tape : (i == local.iter_1907.tape_ptr ? (b - local.code_1908[1] + 256) % 256 : b)] :
      local.code_1908[0] == ","
        ? [for i, b in local.iter_1907.tape : (i == local.iter_1907.tape_ptr ? local.ascii_lookup[substr(local.input_1908, 0, 1)] : b)]
        : local.iter_1907.tape)

    tape_ptr = (
      local.code_1908[0] == "<"
        ? local.iter_1907.tape_ptr - local.code_1908[1] :
      local.code_1908[0] == ">"
        ? local.iter_1907.tape_ptr + local.code_1908[1]
        : local.iter_1907.tape_ptr)

    code_ptr = 2 + (
      local.code_1908[0] == "["
        ? local.iter_1907.tape[local.iter_1907.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1907.code_ptr)] : local.iter_1907.code_ptr :
      local.code_1908[0] == "]"
        ? local.iter_1907.tape[local.iter_1907.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1907.code_ptr)] : local.iter_1907.code_ptr
        : local.iter_1907.code_ptr)

    steps_taken = 1 + local.iter_1907.steps_taken
  }
}

locals {
  code_1909 = (try(local.iter_1908.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1908.code_ptr, local.iter_1908.code_ptr + 2)
    : [null])

  input_1909 = (local.code_1909[0] == ","
    ? substr(local.input_1908, local.code_1909[1], -1)
    : local.input_1908)

  iter_1909 = try(local.iter_1908.code_ptr >= length(var.code), true) ? local.iter_1908 : {
    output = (local.code_1909[0] == "."
      ? "${local.iter_1908.output}${join("", [for _ in range(local.code_1909[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1908.tape[local.iter_1908.tape_ptr]))])}"
      : local.iter_1908.output)
    
    tape = (
      local.code_1909[0] == "+"
        ? [for i, b in local.iter_1908.tape : (i == local.iter_1908.tape_ptr ? (b + local.code_1909[1]) % 256 : b)] :
      local.code_1909[0] == "-"
        ? [for i, b in local.iter_1908.tape : (i == local.iter_1908.tape_ptr ? (b - local.code_1909[1] + 256) % 256 : b)] :
      local.code_1909[0] == ","
        ? [for i, b in local.iter_1908.tape : (i == local.iter_1908.tape_ptr ? local.ascii_lookup[substr(local.input_1909, 0, 1)] : b)]
        : local.iter_1908.tape)

    tape_ptr = (
      local.code_1909[0] == "<"
        ? local.iter_1908.tape_ptr - local.code_1909[1] :
      local.code_1909[0] == ">"
        ? local.iter_1908.tape_ptr + local.code_1909[1]
        : local.iter_1908.tape_ptr)

    code_ptr = 2 + (
      local.code_1909[0] == "["
        ? local.iter_1908.tape[local.iter_1908.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1908.code_ptr)] : local.iter_1908.code_ptr :
      local.code_1909[0] == "]"
        ? local.iter_1908.tape[local.iter_1908.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1908.code_ptr)] : local.iter_1908.code_ptr
        : local.iter_1908.code_ptr)

    steps_taken = 1 + local.iter_1908.steps_taken
  }
}

locals {
  code_1910 = (try(local.iter_1909.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1909.code_ptr, local.iter_1909.code_ptr + 2)
    : [null])

  input_1910 = (local.code_1910[0] == ","
    ? substr(local.input_1909, local.code_1910[1], -1)
    : local.input_1909)

  iter_1910 = try(local.iter_1909.code_ptr >= length(var.code), true) ? local.iter_1909 : {
    output = (local.code_1910[0] == "."
      ? "${local.iter_1909.output}${join("", [for _ in range(local.code_1910[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1909.tape[local.iter_1909.tape_ptr]))])}"
      : local.iter_1909.output)
    
    tape = (
      local.code_1910[0] == "+"
        ? [for i, b in local.iter_1909.tape : (i == local.iter_1909.tape_ptr ? (b + local.code_1910[1]) % 256 : b)] :
      local.code_1910[0] == "-"
        ? [for i, b in local.iter_1909.tape : (i == local.iter_1909.tape_ptr ? (b - local.code_1910[1] + 256) % 256 : b)] :
      local.code_1910[0] == ","
        ? [for i, b in local.iter_1909.tape : (i == local.iter_1909.tape_ptr ? local.ascii_lookup[substr(local.input_1910, 0, 1)] : b)]
        : local.iter_1909.tape)

    tape_ptr = (
      local.code_1910[0] == "<"
        ? local.iter_1909.tape_ptr - local.code_1910[1] :
      local.code_1910[0] == ">"
        ? local.iter_1909.tape_ptr + local.code_1910[1]
        : local.iter_1909.tape_ptr)

    code_ptr = 2 + (
      local.code_1910[0] == "["
        ? local.iter_1909.tape[local.iter_1909.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1909.code_ptr)] : local.iter_1909.code_ptr :
      local.code_1910[0] == "]"
        ? local.iter_1909.tape[local.iter_1909.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1909.code_ptr)] : local.iter_1909.code_ptr
        : local.iter_1909.code_ptr)

    steps_taken = 1 + local.iter_1909.steps_taken
  }
}

locals {
  code_1911 = (try(local.iter_1910.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1910.code_ptr, local.iter_1910.code_ptr + 2)
    : [null])

  input_1911 = (local.code_1911[0] == ","
    ? substr(local.input_1910, local.code_1911[1], -1)
    : local.input_1910)

  iter_1911 = try(local.iter_1910.code_ptr >= length(var.code), true) ? local.iter_1910 : {
    output = (local.code_1911[0] == "."
      ? "${local.iter_1910.output}${join("", [for _ in range(local.code_1911[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1910.tape[local.iter_1910.tape_ptr]))])}"
      : local.iter_1910.output)
    
    tape = (
      local.code_1911[0] == "+"
        ? [for i, b in local.iter_1910.tape : (i == local.iter_1910.tape_ptr ? (b + local.code_1911[1]) % 256 : b)] :
      local.code_1911[0] == "-"
        ? [for i, b in local.iter_1910.tape : (i == local.iter_1910.tape_ptr ? (b - local.code_1911[1] + 256) % 256 : b)] :
      local.code_1911[0] == ","
        ? [for i, b in local.iter_1910.tape : (i == local.iter_1910.tape_ptr ? local.ascii_lookup[substr(local.input_1911, 0, 1)] : b)]
        : local.iter_1910.tape)

    tape_ptr = (
      local.code_1911[0] == "<"
        ? local.iter_1910.tape_ptr - local.code_1911[1] :
      local.code_1911[0] == ">"
        ? local.iter_1910.tape_ptr + local.code_1911[1]
        : local.iter_1910.tape_ptr)

    code_ptr = 2 + (
      local.code_1911[0] == "["
        ? local.iter_1910.tape[local.iter_1910.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1910.code_ptr)] : local.iter_1910.code_ptr :
      local.code_1911[0] == "]"
        ? local.iter_1910.tape[local.iter_1910.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1910.code_ptr)] : local.iter_1910.code_ptr
        : local.iter_1910.code_ptr)

    steps_taken = 1 + local.iter_1910.steps_taken
  }
}

locals {
  code_1912 = (try(local.iter_1911.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1911.code_ptr, local.iter_1911.code_ptr + 2)
    : [null])

  input_1912 = (local.code_1912[0] == ","
    ? substr(local.input_1911, local.code_1912[1], -1)
    : local.input_1911)

  iter_1912 = try(local.iter_1911.code_ptr >= length(var.code), true) ? local.iter_1911 : {
    output = (local.code_1912[0] == "."
      ? "${local.iter_1911.output}${join("", [for _ in range(local.code_1912[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1911.tape[local.iter_1911.tape_ptr]))])}"
      : local.iter_1911.output)
    
    tape = (
      local.code_1912[0] == "+"
        ? [for i, b in local.iter_1911.tape : (i == local.iter_1911.tape_ptr ? (b + local.code_1912[1]) % 256 : b)] :
      local.code_1912[0] == "-"
        ? [for i, b in local.iter_1911.tape : (i == local.iter_1911.tape_ptr ? (b - local.code_1912[1] + 256) % 256 : b)] :
      local.code_1912[0] == ","
        ? [for i, b in local.iter_1911.tape : (i == local.iter_1911.tape_ptr ? local.ascii_lookup[substr(local.input_1912, 0, 1)] : b)]
        : local.iter_1911.tape)

    tape_ptr = (
      local.code_1912[0] == "<"
        ? local.iter_1911.tape_ptr - local.code_1912[1] :
      local.code_1912[0] == ">"
        ? local.iter_1911.tape_ptr + local.code_1912[1]
        : local.iter_1911.tape_ptr)

    code_ptr = 2 + (
      local.code_1912[0] == "["
        ? local.iter_1911.tape[local.iter_1911.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1911.code_ptr)] : local.iter_1911.code_ptr :
      local.code_1912[0] == "]"
        ? local.iter_1911.tape[local.iter_1911.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1911.code_ptr)] : local.iter_1911.code_ptr
        : local.iter_1911.code_ptr)

    steps_taken = 1 + local.iter_1911.steps_taken
  }
}

locals {
  code_1913 = (try(local.iter_1912.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1912.code_ptr, local.iter_1912.code_ptr + 2)
    : [null])

  input_1913 = (local.code_1913[0] == ","
    ? substr(local.input_1912, local.code_1913[1], -1)
    : local.input_1912)

  iter_1913 = try(local.iter_1912.code_ptr >= length(var.code), true) ? local.iter_1912 : {
    output = (local.code_1913[0] == "."
      ? "${local.iter_1912.output}${join("", [for _ in range(local.code_1913[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1912.tape[local.iter_1912.tape_ptr]))])}"
      : local.iter_1912.output)
    
    tape = (
      local.code_1913[0] == "+"
        ? [for i, b in local.iter_1912.tape : (i == local.iter_1912.tape_ptr ? (b + local.code_1913[1]) % 256 : b)] :
      local.code_1913[0] == "-"
        ? [for i, b in local.iter_1912.tape : (i == local.iter_1912.tape_ptr ? (b - local.code_1913[1] + 256) % 256 : b)] :
      local.code_1913[0] == ","
        ? [for i, b in local.iter_1912.tape : (i == local.iter_1912.tape_ptr ? local.ascii_lookup[substr(local.input_1913, 0, 1)] : b)]
        : local.iter_1912.tape)

    tape_ptr = (
      local.code_1913[0] == "<"
        ? local.iter_1912.tape_ptr - local.code_1913[1] :
      local.code_1913[0] == ">"
        ? local.iter_1912.tape_ptr + local.code_1913[1]
        : local.iter_1912.tape_ptr)

    code_ptr = 2 + (
      local.code_1913[0] == "["
        ? local.iter_1912.tape[local.iter_1912.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1912.code_ptr)] : local.iter_1912.code_ptr :
      local.code_1913[0] == "]"
        ? local.iter_1912.tape[local.iter_1912.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1912.code_ptr)] : local.iter_1912.code_ptr
        : local.iter_1912.code_ptr)

    steps_taken = 1 + local.iter_1912.steps_taken
  }
}

locals {
  code_1914 = (try(local.iter_1913.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1913.code_ptr, local.iter_1913.code_ptr + 2)
    : [null])

  input_1914 = (local.code_1914[0] == ","
    ? substr(local.input_1913, local.code_1914[1], -1)
    : local.input_1913)

  iter_1914 = try(local.iter_1913.code_ptr >= length(var.code), true) ? local.iter_1913 : {
    output = (local.code_1914[0] == "."
      ? "${local.iter_1913.output}${join("", [for _ in range(local.code_1914[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1913.tape[local.iter_1913.tape_ptr]))])}"
      : local.iter_1913.output)
    
    tape = (
      local.code_1914[0] == "+"
        ? [for i, b in local.iter_1913.tape : (i == local.iter_1913.tape_ptr ? (b + local.code_1914[1]) % 256 : b)] :
      local.code_1914[0] == "-"
        ? [for i, b in local.iter_1913.tape : (i == local.iter_1913.tape_ptr ? (b - local.code_1914[1] + 256) % 256 : b)] :
      local.code_1914[0] == ","
        ? [for i, b in local.iter_1913.tape : (i == local.iter_1913.tape_ptr ? local.ascii_lookup[substr(local.input_1914, 0, 1)] : b)]
        : local.iter_1913.tape)

    tape_ptr = (
      local.code_1914[0] == "<"
        ? local.iter_1913.tape_ptr - local.code_1914[1] :
      local.code_1914[0] == ">"
        ? local.iter_1913.tape_ptr + local.code_1914[1]
        : local.iter_1913.tape_ptr)

    code_ptr = 2 + (
      local.code_1914[0] == "["
        ? local.iter_1913.tape[local.iter_1913.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1913.code_ptr)] : local.iter_1913.code_ptr :
      local.code_1914[0] == "]"
        ? local.iter_1913.tape[local.iter_1913.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1913.code_ptr)] : local.iter_1913.code_ptr
        : local.iter_1913.code_ptr)

    steps_taken = 1 + local.iter_1913.steps_taken
  }
}

locals {
  code_1915 = (try(local.iter_1914.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1914.code_ptr, local.iter_1914.code_ptr + 2)
    : [null])

  input_1915 = (local.code_1915[0] == ","
    ? substr(local.input_1914, local.code_1915[1], -1)
    : local.input_1914)

  iter_1915 = try(local.iter_1914.code_ptr >= length(var.code), true) ? local.iter_1914 : {
    output = (local.code_1915[0] == "."
      ? "${local.iter_1914.output}${join("", [for _ in range(local.code_1915[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1914.tape[local.iter_1914.tape_ptr]))])}"
      : local.iter_1914.output)
    
    tape = (
      local.code_1915[0] == "+"
        ? [for i, b in local.iter_1914.tape : (i == local.iter_1914.tape_ptr ? (b + local.code_1915[1]) % 256 : b)] :
      local.code_1915[0] == "-"
        ? [for i, b in local.iter_1914.tape : (i == local.iter_1914.tape_ptr ? (b - local.code_1915[1] + 256) % 256 : b)] :
      local.code_1915[0] == ","
        ? [for i, b in local.iter_1914.tape : (i == local.iter_1914.tape_ptr ? local.ascii_lookup[substr(local.input_1915, 0, 1)] : b)]
        : local.iter_1914.tape)

    tape_ptr = (
      local.code_1915[0] == "<"
        ? local.iter_1914.tape_ptr - local.code_1915[1] :
      local.code_1915[0] == ">"
        ? local.iter_1914.tape_ptr + local.code_1915[1]
        : local.iter_1914.tape_ptr)

    code_ptr = 2 + (
      local.code_1915[0] == "["
        ? local.iter_1914.tape[local.iter_1914.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1914.code_ptr)] : local.iter_1914.code_ptr :
      local.code_1915[0] == "]"
        ? local.iter_1914.tape[local.iter_1914.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1914.code_ptr)] : local.iter_1914.code_ptr
        : local.iter_1914.code_ptr)

    steps_taken = 1 + local.iter_1914.steps_taken
  }
}

locals {
  code_1916 = (try(local.iter_1915.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1915.code_ptr, local.iter_1915.code_ptr + 2)
    : [null])

  input_1916 = (local.code_1916[0] == ","
    ? substr(local.input_1915, local.code_1916[1], -1)
    : local.input_1915)

  iter_1916 = try(local.iter_1915.code_ptr >= length(var.code), true) ? local.iter_1915 : {
    output = (local.code_1916[0] == "."
      ? "${local.iter_1915.output}${join("", [for _ in range(local.code_1916[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1915.tape[local.iter_1915.tape_ptr]))])}"
      : local.iter_1915.output)
    
    tape = (
      local.code_1916[0] == "+"
        ? [for i, b in local.iter_1915.tape : (i == local.iter_1915.tape_ptr ? (b + local.code_1916[1]) % 256 : b)] :
      local.code_1916[0] == "-"
        ? [for i, b in local.iter_1915.tape : (i == local.iter_1915.tape_ptr ? (b - local.code_1916[1] + 256) % 256 : b)] :
      local.code_1916[0] == ","
        ? [for i, b in local.iter_1915.tape : (i == local.iter_1915.tape_ptr ? local.ascii_lookup[substr(local.input_1916, 0, 1)] : b)]
        : local.iter_1915.tape)

    tape_ptr = (
      local.code_1916[0] == "<"
        ? local.iter_1915.tape_ptr - local.code_1916[1] :
      local.code_1916[0] == ">"
        ? local.iter_1915.tape_ptr + local.code_1916[1]
        : local.iter_1915.tape_ptr)

    code_ptr = 2 + (
      local.code_1916[0] == "["
        ? local.iter_1915.tape[local.iter_1915.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1915.code_ptr)] : local.iter_1915.code_ptr :
      local.code_1916[0] == "]"
        ? local.iter_1915.tape[local.iter_1915.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1915.code_ptr)] : local.iter_1915.code_ptr
        : local.iter_1915.code_ptr)

    steps_taken = 1 + local.iter_1915.steps_taken
  }
}

locals {
  code_1917 = (try(local.iter_1916.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1916.code_ptr, local.iter_1916.code_ptr + 2)
    : [null])

  input_1917 = (local.code_1917[0] == ","
    ? substr(local.input_1916, local.code_1917[1], -1)
    : local.input_1916)

  iter_1917 = try(local.iter_1916.code_ptr >= length(var.code), true) ? local.iter_1916 : {
    output = (local.code_1917[0] == "."
      ? "${local.iter_1916.output}${join("", [for _ in range(local.code_1917[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1916.tape[local.iter_1916.tape_ptr]))])}"
      : local.iter_1916.output)
    
    tape = (
      local.code_1917[0] == "+"
        ? [for i, b in local.iter_1916.tape : (i == local.iter_1916.tape_ptr ? (b + local.code_1917[1]) % 256 : b)] :
      local.code_1917[0] == "-"
        ? [for i, b in local.iter_1916.tape : (i == local.iter_1916.tape_ptr ? (b - local.code_1917[1] + 256) % 256 : b)] :
      local.code_1917[0] == ","
        ? [for i, b in local.iter_1916.tape : (i == local.iter_1916.tape_ptr ? local.ascii_lookup[substr(local.input_1917, 0, 1)] : b)]
        : local.iter_1916.tape)

    tape_ptr = (
      local.code_1917[0] == "<"
        ? local.iter_1916.tape_ptr - local.code_1917[1] :
      local.code_1917[0] == ">"
        ? local.iter_1916.tape_ptr + local.code_1917[1]
        : local.iter_1916.tape_ptr)

    code_ptr = 2 + (
      local.code_1917[0] == "["
        ? local.iter_1916.tape[local.iter_1916.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1916.code_ptr)] : local.iter_1916.code_ptr :
      local.code_1917[0] == "]"
        ? local.iter_1916.tape[local.iter_1916.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1916.code_ptr)] : local.iter_1916.code_ptr
        : local.iter_1916.code_ptr)

    steps_taken = 1 + local.iter_1916.steps_taken
  }
}

locals {
  code_1918 = (try(local.iter_1917.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1917.code_ptr, local.iter_1917.code_ptr + 2)
    : [null])

  input_1918 = (local.code_1918[0] == ","
    ? substr(local.input_1917, local.code_1918[1], -1)
    : local.input_1917)

  iter_1918 = try(local.iter_1917.code_ptr >= length(var.code), true) ? local.iter_1917 : {
    output = (local.code_1918[0] == "."
      ? "${local.iter_1917.output}${join("", [for _ in range(local.code_1918[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1917.tape[local.iter_1917.tape_ptr]))])}"
      : local.iter_1917.output)
    
    tape = (
      local.code_1918[0] == "+"
        ? [for i, b in local.iter_1917.tape : (i == local.iter_1917.tape_ptr ? (b + local.code_1918[1]) % 256 : b)] :
      local.code_1918[0] == "-"
        ? [for i, b in local.iter_1917.tape : (i == local.iter_1917.tape_ptr ? (b - local.code_1918[1] + 256) % 256 : b)] :
      local.code_1918[0] == ","
        ? [for i, b in local.iter_1917.tape : (i == local.iter_1917.tape_ptr ? local.ascii_lookup[substr(local.input_1918, 0, 1)] : b)]
        : local.iter_1917.tape)

    tape_ptr = (
      local.code_1918[0] == "<"
        ? local.iter_1917.tape_ptr - local.code_1918[1] :
      local.code_1918[0] == ">"
        ? local.iter_1917.tape_ptr + local.code_1918[1]
        : local.iter_1917.tape_ptr)

    code_ptr = 2 + (
      local.code_1918[0] == "["
        ? local.iter_1917.tape[local.iter_1917.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1917.code_ptr)] : local.iter_1917.code_ptr :
      local.code_1918[0] == "]"
        ? local.iter_1917.tape[local.iter_1917.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1917.code_ptr)] : local.iter_1917.code_ptr
        : local.iter_1917.code_ptr)

    steps_taken = 1 + local.iter_1917.steps_taken
  }
}

locals {
  code_1919 = (try(local.iter_1918.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1918.code_ptr, local.iter_1918.code_ptr + 2)
    : [null])

  input_1919 = (local.code_1919[0] == ","
    ? substr(local.input_1918, local.code_1919[1], -1)
    : local.input_1918)

  iter_1919 = try(local.iter_1918.code_ptr >= length(var.code), true) ? local.iter_1918 : {
    output = (local.code_1919[0] == "."
      ? "${local.iter_1918.output}${join("", [for _ in range(local.code_1919[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1918.tape[local.iter_1918.tape_ptr]))])}"
      : local.iter_1918.output)
    
    tape = (
      local.code_1919[0] == "+"
        ? [for i, b in local.iter_1918.tape : (i == local.iter_1918.tape_ptr ? (b + local.code_1919[1]) % 256 : b)] :
      local.code_1919[0] == "-"
        ? [for i, b in local.iter_1918.tape : (i == local.iter_1918.tape_ptr ? (b - local.code_1919[1] + 256) % 256 : b)] :
      local.code_1919[0] == ","
        ? [for i, b in local.iter_1918.tape : (i == local.iter_1918.tape_ptr ? local.ascii_lookup[substr(local.input_1919, 0, 1)] : b)]
        : local.iter_1918.tape)

    tape_ptr = (
      local.code_1919[0] == "<"
        ? local.iter_1918.tape_ptr - local.code_1919[1] :
      local.code_1919[0] == ">"
        ? local.iter_1918.tape_ptr + local.code_1919[1]
        : local.iter_1918.tape_ptr)

    code_ptr = 2 + (
      local.code_1919[0] == "["
        ? local.iter_1918.tape[local.iter_1918.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1918.code_ptr)] : local.iter_1918.code_ptr :
      local.code_1919[0] == "]"
        ? local.iter_1918.tape[local.iter_1918.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1918.code_ptr)] : local.iter_1918.code_ptr
        : local.iter_1918.code_ptr)

    steps_taken = 1 + local.iter_1918.steps_taken
  }
}

locals {
  code_1920 = (try(local.iter_1919.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1919.code_ptr, local.iter_1919.code_ptr + 2)
    : [null])

  input_1920 = (local.code_1920[0] == ","
    ? substr(local.input_1919, local.code_1920[1], -1)
    : local.input_1919)

  iter_1920 = try(local.iter_1919.code_ptr >= length(var.code), true) ? local.iter_1919 : {
    output = (local.code_1920[0] == "."
      ? "${local.iter_1919.output}${join("", [for _ in range(local.code_1920[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1919.tape[local.iter_1919.tape_ptr]))])}"
      : local.iter_1919.output)
    
    tape = (
      local.code_1920[0] == "+"
        ? [for i, b in local.iter_1919.tape : (i == local.iter_1919.tape_ptr ? (b + local.code_1920[1]) % 256 : b)] :
      local.code_1920[0] == "-"
        ? [for i, b in local.iter_1919.tape : (i == local.iter_1919.tape_ptr ? (b - local.code_1920[1] + 256) % 256 : b)] :
      local.code_1920[0] == ","
        ? [for i, b in local.iter_1919.tape : (i == local.iter_1919.tape_ptr ? local.ascii_lookup[substr(local.input_1920, 0, 1)] : b)]
        : local.iter_1919.tape)

    tape_ptr = (
      local.code_1920[0] == "<"
        ? local.iter_1919.tape_ptr - local.code_1920[1] :
      local.code_1920[0] == ">"
        ? local.iter_1919.tape_ptr + local.code_1920[1]
        : local.iter_1919.tape_ptr)

    code_ptr = 2 + (
      local.code_1920[0] == "["
        ? local.iter_1919.tape[local.iter_1919.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1919.code_ptr)] : local.iter_1919.code_ptr :
      local.code_1920[0] == "]"
        ? local.iter_1919.tape[local.iter_1919.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1919.code_ptr)] : local.iter_1919.code_ptr
        : local.iter_1919.code_ptr)

    steps_taken = 1 + local.iter_1919.steps_taken
  }
}

locals {
  code_1921 = (try(local.iter_1920.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1920.code_ptr, local.iter_1920.code_ptr + 2)
    : [null])

  input_1921 = (local.code_1921[0] == ","
    ? substr(local.input_1920, local.code_1921[1], -1)
    : local.input_1920)

  iter_1921 = try(local.iter_1920.code_ptr >= length(var.code), true) ? local.iter_1920 : {
    output = (local.code_1921[0] == "."
      ? "${local.iter_1920.output}${join("", [for _ in range(local.code_1921[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1920.tape[local.iter_1920.tape_ptr]))])}"
      : local.iter_1920.output)
    
    tape = (
      local.code_1921[0] == "+"
        ? [for i, b in local.iter_1920.tape : (i == local.iter_1920.tape_ptr ? (b + local.code_1921[1]) % 256 : b)] :
      local.code_1921[0] == "-"
        ? [for i, b in local.iter_1920.tape : (i == local.iter_1920.tape_ptr ? (b - local.code_1921[1] + 256) % 256 : b)] :
      local.code_1921[0] == ","
        ? [for i, b in local.iter_1920.tape : (i == local.iter_1920.tape_ptr ? local.ascii_lookup[substr(local.input_1921, 0, 1)] : b)]
        : local.iter_1920.tape)

    tape_ptr = (
      local.code_1921[0] == "<"
        ? local.iter_1920.tape_ptr - local.code_1921[1] :
      local.code_1921[0] == ">"
        ? local.iter_1920.tape_ptr + local.code_1921[1]
        : local.iter_1920.tape_ptr)

    code_ptr = 2 + (
      local.code_1921[0] == "["
        ? local.iter_1920.tape[local.iter_1920.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1920.code_ptr)] : local.iter_1920.code_ptr :
      local.code_1921[0] == "]"
        ? local.iter_1920.tape[local.iter_1920.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1920.code_ptr)] : local.iter_1920.code_ptr
        : local.iter_1920.code_ptr)

    steps_taken = 1 + local.iter_1920.steps_taken
  }
}

locals {
  code_1922 = (try(local.iter_1921.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1921.code_ptr, local.iter_1921.code_ptr + 2)
    : [null])

  input_1922 = (local.code_1922[0] == ","
    ? substr(local.input_1921, local.code_1922[1], -1)
    : local.input_1921)

  iter_1922 = try(local.iter_1921.code_ptr >= length(var.code), true) ? local.iter_1921 : {
    output = (local.code_1922[0] == "."
      ? "${local.iter_1921.output}${join("", [for _ in range(local.code_1922[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1921.tape[local.iter_1921.tape_ptr]))])}"
      : local.iter_1921.output)
    
    tape = (
      local.code_1922[0] == "+"
        ? [for i, b in local.iter_1921.tape : (i == local.iter_1921.tape_ptr ? (b + local.code_1922[1]) % 256 : b)] :
      local.code_1922[0] == "-"
        ? [for i, b in local.iter_1921.tape : (i == local.iter_1921.tape_ptr ? (b - local.code_1922[1] + 256) % 256 : b)] :
      local.code_1922[0] == ","
        ? [for i, b in local.iter_1921.tape : (i == local.iter_1921.tape_ptr ? local.ascii_lookup[substr(local.input_1922, 0, 1)] : b)]
        : local.iter_1921.tape)

    tape_ptr = (
      local.code_1922[0] == "<"
        ? local.iter_1921.tape_ptr - local.code_1922[1] :
      local.code_1922[0] == ">"
        ? local.iter_1921.tape_ptr + local.code_1922[1]
        : local.iter_1921.tape_ptr)

    code_ptr = 2 + (
      local.code_1922[0] == "["
        ? local.iter_1921.tape[local.iter_1921.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1921.code_ptr)] : local.iter_1921.code_ptr :
      local.code_1922[0] == "]"
        ? local.iter_1921.tape[local.iter_1921.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1921.code_ptr)] : local.iter_1921.code_ptr
        : local.iter_1921.code_ptr)

    steps_taken = 1 + local.iter_1921.steps_taken
  }
}

locals {
  code_1923 = (try(local.iter_1922.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1922.code_ptr, local.iter_1922.code_ptr + 2)
    : [null])

  input_1923 = (local.code_1923[0] == ","
    ? substr(local.input_1922, local.code_1923[1], -1)
    : local.input_1922)

  iter_1923 = try(local.iter_1922.code_ptr >= length(var.code), true) ? local.iter_1922 : {
    output = (local.code_1923[0] == "."
      ? "${local.iter_1922.output}${join("", [for _ in range(local.code_1923[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1922.tape[local.iter_1922.tape_ptr]))])}"
      : local.iter_1922.output)
    
    tape = (
      local.code_1923[0] == "+"
        ? [for i, b in local.iter_1922.tape : (i == local.iter_1922.tape_ptr ? (b + local.code_1923[1]) % 256 : b)] :
      local.code_1923[0] == "-"
        ? [for i, b in local.iter_1922.tape : (i == local.iter_1922.tape_ptr ? (b - local.code_1923[1] + 256) % 256 : b)] :
      local.code_1923[0] == ","
        ? [for i, b in local.iter_1922.tape : (i == local.iter_1922.tape_ptr ? local.ascii_lookup[substr(local.input_1923, 0, 1)] : b)]
        : local.iter_1922.tape)

    tape_ptr = (
      local.code_1923[0] == "<"
        ? local.iter_1922.tape_ptr - local.code_1923[1] :
      local.code_1923[0] == ">"
        ? local.iter_1922.tape_ptr + local.code_1923[1]
        : local.iter_1922.tape_ptr)

    code_ptr = 2 + (
      local.code_1923[0] == "["
        ? local.iter_1922.tape[local.iter_1922.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1922.code_ptr)] : local.iter_1922.code_ptr :
      local.code_1923[0] == "]"
        ? local.iter_1922.tape[local.iter_1922.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1922.code_ptr)] : local.iter_1922.code_ptr
        : local.iter_1922.code_ptr)

    steps_taken = 1 + local.iter_1922.steps_taken
  }
}

locals {
  code_1924 = (try(local.iter_1923.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1923.code_ptr, local.iter_1923.code_ptr + 2)
    : [null])

  input_1924 = (local.code_1924[0] == ","
    ? substr(local.input_1923, local.code_1924[1], -1)
    : local.input_1923)

  iter_1924 = try(local.iter_1923.code_ptr >= length(var.code), true) ? local.iter_1923 : {
    output = (local.code_1924[0] == "."
      ? "${local.iter_1923.output}${join("", [for _ in range(local.code_1924[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1923.tape[local.iter_1923.tape_ptr]))])}"
      : local.iter_1923.output)
    
    tape = (
      local.code_1924[0] == "+"
        ? [for i, b in local.iter_1923.tape : (i == local.iter_1923.tape_ptr ? (b + local.code_1924[1]) % 256 : b)] :
      local.code_1924[0] == "-"
        ? [for i, b in local.iter_1923.tape : (i == local.iter_1923.tape_ptr ? (b - local.code_1924[1] + 256) % 256 : b)] :
      local.code_1924[0] == ","
        ? [for i, b in local.iter_1923.tape : (i == local.iter_1923.tape_ptr ? local.ascii_lookup[substr(local.input_1924, 0, 1)] : b)]
        : local.iter_1923.tape)

    tape_ptr = (
      local.code_1924[0] == "<"
        ? local.iter_1923.tape_ptr - local.code_1924[1] :
      local.code_1924[0] == ">"
        ? local.iter_1923.tape_ptr + local.code_1924[1]
        : local.iter_1923.tape_ptr)

    code_ptr = 2 + (
      local.code_1924[0] == "["
        ? local.iter_1923.tape[local.iter_1923.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1923.code_ptr)] : local.iter_1923.code_ptr :
      local.code_1924[0] == "]"
        ? local.iter_1923.tape[local.iter_1923.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1923.code_ptr)] : local.iter_1923.code_ptr
        : local.iter_1923.code_ptr)

    steps_taken = 1 + local.iter_1923.steps_taken
  }
}

locals {
  code_1925 = (try(local.iter_1924.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1924.code_ptr, local.iter_1924.code_ptr + 2)
    : [null])

  input_1925 = (local.code_1925[0] == ","
    ? substr(local.input_1924, local.code_1925[1], -1)
    : local.input_1924)

  iter_1925 = try(local.iter_1924.code_ptr >= length(var.code), true) ? local.iter_1924 : {
    output = (local.code_1925[0] == "."
      ? "${local.iter_1924.output}${join("", [for _ in range(local.code_1925[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1924.tape[local.iter_1924.tape_ptr]))])}"
      : local.iter_1924.output)
    
    tape = (
      local.code_1925[0] == "+"
        ? [for i, b in local.iter_1924.tape : (i == local.iter_1924.tape_ptr ? (b + local.code_1925[1]) % 256 : b)] :
      local.code_1925[0] == "-"
        ? [for i, b in local.iter_1924.tape : (i == local.iter_1924.tape_ptr ? (b - local.code_1925[1] + 256) % 256 : b)] :
      local.code_1925[0] == ","
        ? [for i, b in local.iter_1924.tape : (i == local.iter_1924.tape_ptr ? local.ascii_lookup[substr(local.input_1925, 0, 1)] : b)]
        : local.iter_1924.tape)

    tape_ptr = (
      local.code_1925[0] == "<"
        ? local.iter_1924.tape_ptr - local.code_1925[1] :
      local.code_1925[0] == ">"
        ? local.iter_1924.tape_ptr + local.code_1925[1]
        : local.iter_1924.tape_ptr)

    code_ptr = 2 + (
      local.code_1925[0] == "["
        ? local.iter_1924.tape[local.iter_1924.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1924.code_ptr)] : local.iter_1924.code_ptr :
      local.code_1925[0] == "]"
        ? local.iter_1924.tape[local.iter_1924.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1924.code_ptr)] : local.iter_1924.code_ptr
        : local.iter_1924.code_ptr)

    steps_taken = 1 + local.iter_1924.steps_taken
  }
}

locals {
  code_1926 = (try(local.iter_1925.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1925.code_ptr, local.iter_1925.code_ptr + 2)
    : [null])

  input_1926 = (local.code_1926[0] == ","
    ? substr(local.input_1925, local.code_1926[1], -1)
    : local.input_1925)

  iter_1926 = try(local.iter_1925.code_ptr >= length(var.code), true) ? local.iter_1925 : {
    output = (local.code_1926[0] == "."
      ? "${local.iter_1925.output}${join("", [for _ in range(local.code_1926[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1925.tape[local.iter_1925.tape_ptr]))])}"
      : local.iter_1925.output)
    
    tape = (
      local.code_1926[0] == "+"
        ? [for i, b in local.iter_1925.tape : (i == local.iter_1925.tape_ptr ? (b + local.code_1926[1]) % 256 : b)] :
      local.code_1926[0] == "-"
        ? [for i, b in local.iter_1925.tape : (i == local.iter_1925.tape_ptr ? (b - local.code_1926[1] + 256) % 256 : b)] :
      local.code_1926[0] == ","
        ? [for i, b in local.iter_1925.tape : (i == local.iter_1925.tape_ptr ? local.ascii_lookup[substr(local.input_1926, 0, 1)] : b)]
        : local.iter_1925.tape)

    tape_ptr = (
      local.code_1926[0] == "<"
        ? local.iter_1925.tape_ptr - local.code_1926[1] :
      local.code_1926[0] == ">"
        ? local.iter_1925.tape_ptr + local.code_1926[1]
        : local.iter_1925.tape_ptr)

    code_ptr = 2 + (
      local.code_1926[0] == "["
        ? local.iter_1925.tape[local.iter_1925.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1925.code_ptr)] : local.iter_1925.code_ptr :
      local.code_1926[0] == "]"
        ? local.iter_1925.tape[local.iter_1925.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1925.code_ptr)] : local.iter_1925.code_ptr
        : local.iter_1925.code_ptr)

    steps_taken = 1 + local.iter_1925.steps_taken
  }
}

locals {
  code_1927 = (try(local.iter_1926.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1926.code_ptr, local.iter_1926.code_ptr + 2)
    : [null])

  input_1927 = (local.code_1927[0] == ","
    ? substr(local.input_1926, local.code_1927[1], -1)
    : local.input_1926)

  iter_1927 = try(local.iter_1926.code_ptr >= length(var.code), true) ? local.iter_1926 : {
    output = (local.code_1927[0] == "."
      ? "${local.iter_1926.output}${join("", [for _ in range(local.code_1927[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1926.tape[local.iter_1926.tape_ptr]))])}"
      : local.iter_1926.output)
    
    tape = (
      local.code_1927[0] == "+"
        ? [for i, b in local.iter_1926.tape : (i == local.iter_1926.tape_ptr ? (b + local.code_1927[1]) % 256 : b)] :
      local.code_1927[0] == "-"
        ? [for i, b in local.iter_1926.tape : (i == local.iter_1926.tape_ptr ? (b - local.code_1927[1] + 256) % 256 : b)] :
      local.code_1927[0] == ","
        ? [for i, b in local.iter_1926.tape : (i == local.iter_1926.tape_ptr ? local.ascii_lookup[substr(local.input_1927, 0, 1)] : b)]
        : local.iter_1926.tape)

    tape_ptr = (
      local.code_1927[0] == "<"
        ? local.iter_1926.tape_ptr - local.code_1927[1] :
      local.code_1927[0] == ">"
        ? local.iter_1926.tape_ptr + local.code_1927[1]
        : local.iter_1926.tape_ptr)

    code_ptr = 2 + (
      local.code_1927[0] == "["
        ? local.iter_1926.tape[local.iter_1926.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1926.code_ptr)] : local.iter_1926.code_ptr :
      local.code_1927[0] == "]"
        ? local.iter_1926.tape[local.iter_1926.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1926.code_ptr)] : local.iter_1926.code_ptr
        : local.iter_1926.code_ptr)

    steps_taken = 1 + local.iter_1926.steps_taken
  }
}

locals {
  code_1928 = (try(local.iter_1927.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1927.code_ptr, local.iter_1927.code_ptr + 2)
    : [null])

  input_1928 = (local.code_1928[0] == ","
    ? substr(local.input_1927, local.code_1928[1], -1)
    : local.input_1927)

  iter_1928 = try(local.iter_1927.code_ptr >= length(var.code), true) ? local.iter_1927 : {
    output = (local.code_1928[0] == "."
      ? "${local.iter_1927.output}${join("", [for _ in range(local.code_1928[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1927.tape[local.iter_1927.tape_ptr]))])}"
      : local.iter_1927.output)
    
    tape = (
      local.code_1928[0] == "+"
        ? [for i, b in local.iter_1927.tape : (i == local.iter_1927.tape_ptr ? (b + local.code_1928[1]) % 256 : b)] :
      local.code_1928[0] == "-"
        ? [for i, b in local.iter_1927.tape : (i == local.iter_1927.tape_ptr ? (b - local.code_1928[1] + 256) % 256 : b)] :
      local.code_1928[0] == ","
        ? [for i, b in local.iter_1927.tape : (i == local.iter_1927.tape_ptr ? local.ascii_lookup[substr(local.input_1928, 0, 1)] : b)]
        : local.iter_1927.tape)

    tape_ptr = (
      local.code_1928[0] == "<"
        ? local.iter_1927.tape_ptr - local.code_1928[1] :
      local.code_1928[0] == ">"
        ? local.iter_1927.tape_ptr + local.code_1928[1]
        : local.iter_1927.tape_ptr)

    code_ptr = 2 + (
      local.code_1928[0] == "["
        ? local.iter_1927.tape[local.iter_1927.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1927.code_ptr)] : local.iter_1927.code_ptr :
      local.code_1928[0] == "]"
        ? local.iter_1927.tape[local.iter_1927.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1927.code_ptr)] : local.iter_1927.code_ptr
        : local.iter_1927.code_ptr)

    steps_taken = 1 + local.iter_1927.steps_taken
  }
}

locals {
  code_1929 = (try(local.iter_1928.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1928.code_ptr, local.iter_1928.code_ptr + 2)
    : [null])

  input_1929 = (local.code_1929[0] == ","
    ? substr(local.input_1928, local.code_1929[1], -1)
    : local.input_1928)

  iter_1929 = try(local.iter_1928.code_ptr >= length(var.code), true) ? local.iter_1928 : {
    output = (local.code_1929[0] == "."
      ? "${local.iter_1928.output}${join("", [for _ in range(local.code_1929[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1928.tape[local.iter_1928.tape_ptr]))])}"
      : local.iter_1928.output)
    
    tape = (
      local.code_1929[0] == "+"
        ? [for i, b in local.iter_1928.tape : (i == local.iter_1928.tape_ptr ? (b + local.code_1929[1]) % 256 : b)] :
      local.code_1929[0] == "-"
        ? [for i, b in local.iter_1928.tape : (i == local.iter_1928.tape_ptr ? (b - local.code_1929[1] + 256) % 256 : b)] :
      local.code_1929[0] == ","
        ? [for i, b in local.iter_1928.tape : (i == local.iter_1928.tape_ptr ? local.ascii_lookup[substr(local.input_1929, 0, 1)] : b)]
        : local.iter_1928.tape)

    tape_ptr = (
      local.code_1929[0] == "<"
        ? local.iter_1928.tape_ptr - local.code_1929[1] :
      local.code_1929[0] == ">"
        ? local.iter_1928.tape_ptr + local.code_1929[1]
        : local.iter_1928.tape_ptr)

    code_ptr = 2 + (
      local.code_1929[0] == "["
        ? local.iter_1928.tape[local.iter_1928.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1928.code_ptr)] : local.iter_1928.code_ptr :
      local.code_1929[0] == "]"
        ? local.iter_1928.tape[local.iter_1928.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1928.code_ptr)] : local.iter_1928.code_ptr
        : local.iter_1928.code_ptr)

    steps_taken = 1 + local.iter_1928.steps_taken
  }
}

locals {
  code_1930 = (try(local.iter_1929.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1929.code_ptr, local.iter_1929.code_ptr + 2)
    : [null])

  input_1930 = (local.code_1930[0] == ","
    ? substr(local.input_1929, local.code_1930[1], -1)
    : local.input_1929)

  iter_1930 = try(local.iter_1929.code_ptr >= length(var.code), true) ? local.iter_1929 : {
    output = (local.code_1930[0] == "."
      ? "${local.iter_1929.output}${join("", [for _ in range(local.code_1930[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1929.tape[local.iter_1929.tape_ptr]))])}"
      : local.iter_1929.output)
    
    tape = (
      local.code_1930[0] == "+"
        ? [for i, b in local.iter_1929.tape : (i == local.iter_1929.tape_ptr ? (b + local.code_1930[1]) % 256 : b)] :
      local.code_1930[0] == "-"
        ? [for i, b in local.iter_1929.tape : (i == local.iter_1929.tape_ptr ? (b - local.code_1930[1] + 256) % 256 : b)] :
      local.code_1930[0] == ","
        ? [for i, b in local.iter_1929.tape : (i == local.iter_1929.tape_ptr ? local.ascii_lookup[substr(local.input_1930, 0, 1)] : b)]
        : local.iter_1929.tape)

    tape_ptr = (
      local.code_1930[0] == "<"
        ? local.iter_1929.tape_ptr - local.code_1930[1] :
      local.code_1930[0] == ">"
        ? local.iter_1929.tape_ptr + local.code_1930[1]
        : local.iter_1929.tape_ptr)

    code_ptr = 2 + (
      local.code_1930[0] == "["
        ? local.iter_1929.tape[local.iter_1929.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1929.code_ptr)] : local.iter_1929.code_ptr :
      local.code_1930[0] == "]"
        ? local.iter_1929.tape[local.iter_1929.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1929.code_ptr)] : local.iter_1929.code_ptr
        : local.iter_1929.code_ptr)

    steps_taken = 1 + local.iter_1929.steps_taken
  }
}

locals {
  code_1931 = (try(local.iter_1930.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1930.code_ptr, local.iter_1930.code_ptr + 2)
    : [null])

  input_1931 = (local.code_1931[0] == ","
    ? substr(local.input_1930, local.code_1931[1], -1)
    : local.input_1930)

  iter_1931 = try(local.iter_1930.code_ptr >= length(var.code), true) ? local.iter_1930 : {
    output = (local.code_1931[0] == "."
      ? "${local.iter_1930.output}${join("", [for _ in range(local.code_1931[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1930.tape[local.iter_1930.tape_ptr]))])}"
      : local.iter_1930.output)
    
    tape = (
      local.code_1931[0] == "+"
        ? [for i, b in local.iter_1930.tape : (i == local.iter_1930.tape_ptr ? (b + local.code_1931[1]) % 256 : b)] :
      local.code_1931[0] == "-"
        ? [for i, b in local.iter_1930.tape : (i == local.iter_1930.tape_ptr ? (b - local.code_1931[1] + 256) % 256 : b)] :
      local.code_1931[0] == ","
        ? [for i, b in local.iter_1930.tape : (i == local.iter_1930.tape_ptr ? local.ascii_lookup[substr(local.input_1931, 0, 1)] : b)]
        : local.iter_1930.tape)

    tape_ptr = (
      local.code_1931[0] == "<"
        ? local.iter_1930.tape_ptr - local.code_1931[1] :
      local.code_1931[0] == ">"
        ? local.iter_1930.tape_ptr + local.code_1931[1]
        : local.iter_1930.tape_ptr)

    code_ptr = 2 + (
      local.code_1931[0] == "["
        ? local.iter_1930.tape[local.iter_1930.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1930.code_ptr)] : local.iter_1930.code_ptr :
      local.code_1931[0] == "]"
        ? local.iter_1930.tape[local.iter_1930.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1930.code_ptr)] : local.iter_1930.code_ptr
        : local.iter_1930.code_ptr)

    steps_taken = 1 + local.iter_1930.steps_taken
  }
}

locals {
  code_1932 = (try(local.iter_1931.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1931.code_ptr, local.iter_1931.code_ptr + 2)
    : [null])

  input_1932 = (local.code_1932[0] == ","
    ? substr(local.input_1931, local.code_1932[1], -1)
    : local.input_1931)

  iter_1932 = try(local.iter_1931.code_ptr >= length(var.code), true) ? local.iter_1931 : {
    output = (local.code_1932[0] == "."
      ? "${local.iter_1931.output}${join("", [for _ in range(local.code_1932[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1931.tape[local.iter_1931.tape_ptr]))])}"
      : local.iter_1931.output)
    
    tape = (
      local.code_1932[0] == "+"
        ? [for i, b in local.iter_1931.tape : (i == local.iter_1931.tape_ptr ? (b + local.code_1932[1]) % 256 : b)] :
      local.code_1932[0] == "-"
        ? [for i, b in local.iter_1931.tape : (i == local.iter_1931.tape_ptr ? (b - local.code_1932[1] + 256) % 256 : b)] :
      local.code_1932[0] == ","
        ? [for i, b in local.iter_1931.tape : (i == local.iter_1931.tape_ptr ? local.ascii_lookup[substr(local.input_1932, 0, 1)] : b)]
        : local.iter_1931.tape)

    tape_ptr = (
      local.code_1932[0] == "<"
        ? local.iter_1931.tape_ptr - local.code_1932[1] :
      local.code_1932[0] == ">"
        ? local.iter_1931.tape_ptr + local.code_1932[1]
        : local.iter_1931.tape_ptr)

    code_ptr = 2 + (
      local.code_1932[0] == "["
        ? local.iter_1931.tape[local.iter_1931.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1931.code_ptr)] : local.iter_1931.code_ptr :
      local.code_1932[0] == "]"
        ? local.iter_1931.tape[local.iter_1931.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1931.code_ptr)] : local.iter_1931.code_ptr
        : local.iter_1931.code_ptr)

    steps_taken = 1 + local.iter_1931.steps_taken
  }
}

locals {
  code_1933 = (try(local.iter_1932.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1932.code_ptr, local.iter_1932.code_ptr + 2)
    : [null])

  input_1933 = (local.code_1933[0] == ","
    ? substr(local.input_1932, local.code_1933[1], -1)
    : local.input_1932)

  iter_1933 = try(local.iter_1932.code_ptr >= length(var.code), true) ? local.iter_1932 : {
    output = (local.code_1933[0] == "."
      ? "${local.iter_1932.output}${join("", [for _ in range(local.code_1933[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1932.tape[local.iter_1932.tape_ptr]))])}"
      : local.iter_1932.output)
    
    tape = (
      local.code_1933[0] == "+"
        ? [for i, b in local.iter_1932.tape : (i == local.iter_1932.tape_ptr ? (b + local.code_1933[1]) % 256 : b)] :
      local.code_1933[0] == "-"
        ? [for i, b in local.iter_1932.tape : (i == local.iter_1932.tape_ptr ? (b - local.code_1933[1] + 256) % 256 : b)] :
      local.code_1933[0] == ","
        ? [for i, b in local.iter_1932.tape : (i == local.iter_1932.tape_ptr ? local.ascii_lookup[substr(local.input_1933, 0, 1)] : b)]
        : local.iter_1932.tape)

    tape_ptr = (
      local.code_1933[0] == "<"
        ? local.iter_1932.tape_ptr - local.code_1933[1] :
      local.code_1933[0] == ">"
        ? local.iter_1932.tape_ptr + local.code_1933[1]
        : local.iter_1932.tape_ptr)

    code_ptr = 2 + (
      local.code_1933[0] == "["
        ? local.iter_1932.tape[local.iter_1932.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1932.code_ptr)] : local.iter_1932.code_ptr :
      local.code_1933[0] == "]"
        ? local.iter_1932.tape[local.iter_1932.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1932.code_ptr)] : local.iter_1932.code_ptr
        : local.iter_1932.code_ptr)

    steps_taken = 1 + local.iter_1932.steps_taken
  }
}

locals {
  code_1934 = (try(local.iter_1933.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1933.code_ptr, local.iter_1933.code_ptr + 2)
    : [null])

  input_1934 = (local.code_1934[0] == ","
    ? substr(local.input_1933, local.code_1934[1], -1)
    : local.input_1933)

  iter_1934 = try(local.iter_1933.code_ptr >= length(var.code), true) ? local.iter_1933 : {
    output = (local.code_1934[0] == "."
      ? "${local.iter_1933.output}${join("", [for _ in range(local.code_1934[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1933.tape[local.iter_1933.tape_ptr]))])}"
      : local.iter_1933.output)
    
    tape = (
      local.code_1934[0] == "+"
        ? [for i, b in local.iter_1933.tape : (i == local.iter_1933.tape_ptr ? (b + local.code_1934[1]) % 256 : b)] :
      local.code_1934[0] == "-"
        ? [for i, b in local.iter_1933.tape : (i == local.iter_1933.tape_ptr ? (b - local.code_1934[1] + 256) % 256 : b)] :
      local.code_1934[0] == ","
        ? [for i, b in local.iter_1933.tape : (i == local.iter_1933.tape_ptr ? local.ascii_lookup[substr(local.input_1934, 0, 1)] : b)]
        : local.iter_1933.tape)

    tape_ptr = (
      local.code_1934[0] == "<"
        ? local.iter_1933.tape_ptr - local.code_1934[1] :
      local.code_1934[0] == ">"
        ? local.iter_1933.tape_ptr + local.code_1934[1]
        : local.iter_1933.tape_ptr)

    code_ptr = 2 + (
      local.code_1934[0] == "["
        ? local.iter_1933.tape[local.iter_1933.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1933.code_ptr)] : local.iter_1933.code_ptr :
      local.code_1934[0] == "]"
        ? local.iter_1933.tape[local.iter_1933.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1933.code_ptr)] : local.iter_1933.code_ptr
        : local.iter_1933.code_ptr)

    steps_taken = 1 + local.iter_1933.steps_taken
  }
}

locals {
  code_1935 = (try(local.iter_1934.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1934.code_ptr, local.iter_1934.code_ptr + 2)
    : [null])

  input_1935 = (local.code_1935[0] == ","
    ? substr(local.input_1934, local.code_1935[1], -1)
    : local.input_1934)

  iter_1935 = try(local.iter_1934.code_ptr >= length(var.code), true) ? local.iter_1934 : {
    output = (local.code_1935[0] == "."
      ? "${local.iter_1934.output}${join("", [for _ in range(local.code_1935[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1934.tape[local.iter_1934.tape_ptr]))])}"
      : local.iter_1934.output)
    
    tape = (
      local.code_1935[0] == "+"
        ? [for i, b in local.iter_1934.tape : (i == local.iter_1934.tape_ptr ? (b + local.code_1935[1]) % 256 : b)] :
      local.code_1935[0] == "-"
        ? [for i, b in local.iter_1934.tape : (i == local.iter_1934.tape_ptr ? (b - local.code_1935[1] + 256) % 256 : b)] :
      local.code_1935[0] == ","
        ? [for i, b in local.iter_1934.tape : (i == local.iter_1934.tape_ptr ? local.ascii_lookup[substr(local.input_1935, 0, 1)] : b)]
        : local.iter_1934.tape)

    tape_ptr = (
      local.code_1935[0] == "<"
        ? local.iter_1934.tape_ptr - local.code_1935[1] :
      local.code_1935[0] == ">"
        ? local.iter_1934.tape_ptr + local.code_1935[1]
        : local.iter_1934.tape_ptr)

    code_ptr = 2 + (
      local.code_1935[0] == "["
        ? local.iter_1934.tape[local.iter_1934.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1934.code_ptr)] : local.iter_1934.code_ptr :
      local.code_1935[0] == "]"
        ? local.iter_1934.tape[local.iter_1934.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1934.code_ptr)] : local.iter_1934.code_ptr
        : local.iter_1934.code_ptr)

    steps_taken = 1 + local.iter_1934.steps_taken
  }
}

locals {
  code_1936 = (try(local.iter_1935.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1935.code_ptr, local.iter_1935.code_ptr + 2)
    : [null])

  input_1936 = (local.code_1936[0] == ","
    ? substr(local.input_1935, local.code_1936[1], -1)
    : local.input_1935)

  iter_1936 = try(local.iter_1935.code_ptr >= length(var.code), true) ? local.iter_1935 : {
    output = (local.code_1936[0] == "."
      ? "${local.iter_1935.output}${join("", [for _ in range(local.code_1936[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1935.tape[local.iter_1935.tape_ptr]))])}"
      : local.iter_1935.output)
    
    tape = (
      local.code_1936[0] == "+"
        ? [for i, b in local.iter_1935.tape : (i == local.iter_1935.tape_ptr ? (b + local.code_1936[1]) % 256 : b)] :
      local.code_1936[0] == "-"
        ? [for i, b in local.iter_1935.tape : (i == local.iter_1935.tape_ptr ? (b - local.code_1936[1] + 256) % 256 : b)] :
      local.code_1936[0] == ","
        ? [for i, b in local.iter_1935.tape : (i == local.iter_1935.tape_ptr ? local.ascii_lookup[substr(local.input_1936, 0, 1)] : b)]
        : local.iter_1935.tape)

    tape_ptr = (
      local.code_1936[0] == "<"
        ? local.iter_1935.tape_ptr - local.code_1936[1] :
      local.code_1936[0] == ">"
        ? local.iter_1935.tape_ptr + local.code_1936[1]
        : local.iter_1935.tape_ptr)

    code_ptr = 2 + (
      local.code_1936[0] == "["
        ? local.iter_1935.tape[local.iter_1935.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1935.code_ptr)] : local.iter_1935.code_ptr :
      local.code_1936[0] == "]"
        ? local.iter_1935.tape[local.iter_1935.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1935.code_ptr)] : local.iter_1935.code_ptr
        : local.iter_1935.code_ptr)

    steps_taken = 1 + local.iter_1935.steps_taken
  }
}

locals {
  code_1937 = (try(local.iter_1936.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1936.code_ptr, local.iter_1936.code_ptr + 2)
    : [null])

  input_1937 = (local.code_1937[0] == ","
    ? substr(local.input_1936, local.code_1937[1], -1)
    : local.input_1936)

  iter_1937 = try(local.iter_1936.code_ptr >= length(var.code), true) ? local.iter_1936 : {
    output = (local.code_1937[0] == "."
      ? "${local.iter_1936.output}${join("", [for _ in range(local.code_1937[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1936.tape[local.iter_1936.tape_ptr]))])}"
      : local.iter_1936.output)
    
    tape = (
      local.code_1937[0] == "+"
        ? [for i, b in local.iter_1936.tape : (i == local.iter_1936.tape_ptr ? (b + local.code_1937[1]) % 256 : b)] :
      local.code_1937[0] == "-"
        ? [for i, b in local.iter_1936.tape : (i == local.iter_1936.tape_ptr ? (b - local.code_1937[1] + 256) % 256 : b)] :
      local.code_1937[0] == ","
        ? [for i, b in local.iter_1936.tape : (i == local.iter_1936.tape_ptr ? local.ascii_lookup[substr(local.input_1937, 0, 1)] : b)]
        : local.iter_1936.tape)

    tape_ptr = (
      local.code_1937[0] == "<"
        ? local.iter_1936.tape_ptr - local.code_1937[1] :
      local.code_1937[0] == ">"
        ? local.iter_1936.tape_ptr + local.code_1937[1]
        : local.iter_1936.tape_ptr)

    code_ptr = 2 + (
      local.code_1937[0] == "["
        ? local.iter_1936.tape[local.iter_1936.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1936.code_ptr)] : local.iter_1936.code_ptr :
      local.code_1937[0] == "]"
        ? local.iter_1936.tape[local.iter_1936.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1936.code_ptr)] : local.iter_1936.code_ptr
        : local.iter_1936.code_ptr)

    steps_taken = 1 + local.iter_1936.steps_taken
  }
}

locals {
  code_1938 = (try(local.iter_1937.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1937.code_ptr, local.iter_1937.code_ptr + 2)
    : [null])

  input_1938 = (local.code_1938[0] == ","
    ? substr(local.input_1937, local.code_1938[1], -1)
    : local.input_1937)

  iter_1938 = try(local.iter_1937.code_ptr >= length(var.code), true) ? local.iter_1937 : {
    output = (local.code_1938[0] == "."
      ? "${local.iter_1937.output}${join("", [for _ in range(local.code_1938[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1937.tape[local.iter_1937.tape_ptr]))])}"
      : local.iter_1937.output)
    
    tape = (
      local.code_1938[0] == "+"
        ? [for i, b in local.iter_1937.tape : (i == local.iter_1937.tape_ptr ? (b + local.code_1938[1]) % 256 : b)] :
      local.code_1938[0] == "-"
        ? [for i, b in local.iter_1937.tape : (i == local.iter_1937.tape_ptr ? (b - local.code_1938[1] + 256) % 256 : b)] :
      local.code_1938[0] == ","
        ? [for i, b in local.iter_1937.tape : (i == local.iter_1937.tape_ptr ? local.ascii_lookup[substr(local.input_1938, 0, 1)] : b)]
        : local.iter_1937.tape)

    tape_ptr = (
      local.code_1938[0] == "<"
        ? local.iter_1937.tape_ptr - local.code_1938[1] :
      local.code_1938[0] == ">"
        ? local.iter_1937.tape_ptr + local.code_1938[1]
        : local.iter_1937.tape_ptr)

    code_ptr = 2 + (
      local.code_1938[0] == "["
        ? local.iter_1937.tape[local.iter_1937.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1937.code_ptr)] : local.iter_1937.code_ptr :
      local.code_1938[0] == "]"
        ? local.iter_1937.tape[local.iter_1937.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1937.code_ptr)] : local.iter_1937.code_ptr
        : local.iter_1937.code_ptr)

    steps_taken = 1 + local.iter_1937.steps_taken
  }
}

locals {
  code_1939 = (try(local.iter_1938.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1938.code_ptr, local.iter_1938.code_ptr + 2)
    : [null])

  input_1939 = (local.code_1939[0] == ","
    ? substr(local.input_1938, local.code_1939[1], -1)
    : local.input_1938)

  iter_1939 = try(local.iter_1938.code_ptr >= length(var.code), true) ? local.iter_1938 : {
    output = (local.code_1939[0] == "."
      ? "${local.iter_1938.output}${join("", [for _ in range(local.code_1939[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1938.tape[local.iter_1938.tape_ptr]))])}"
      : local.iter_1938.output)
    
    tape = (
      local.code_1939[0] == "+"
        ? [for i, b in local.iter_1938.tape : (i == local.iter_1938.tape_ptr ? (b + local.code_1939[1]) % 256 : b)] :
      local.code_1939[0] == "-"
        ? [for i, b in local.iter_1938.tape : (i == local.iter_1938.tape_ptr ? (b - local.code_1939[1] + 256) % 256 : b)] :
      local.code_1939[0] == ","
        ? [for i, b in local.iter_1938.tape : (i == local.iter_1938.tape_ptr ? local.ascii_lookup[substr(local.input_1939, 0, 1)] : b)]
        : local.iter_1938.tape)

    tape_ptr = (
      local.code_1939[0] == "<"
        ? local.iter_1938.tape_ptr - local.code_1939[1] :
      local.code_1939[0] == ">"
        ? local.iter_1938.tape_ptr + local.code_1939[1]
        : local.iter_1938.tape_ptr)

    code_ptr = 2 + (
      local.code_1939[0] == "["
        ? local.iter_1938.tape[local.iter_1938.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1938.code_ptr)] : local.iter_1938.code_ptr :
      local.code_1939[0] == "]"
        ? local.iter_1938.tape[local.iter_1938.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1938.code_ptr)] : local.iter_1938.code_ptr
        : local.iter_1938.code_ptr)

    steps_taken = 1 + local.iter_1938.steps_taken
  }
}

locals {
  code_1940 = (try(local.iter_1939.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1939.code_ptr, local.iter_1939.code_ptr + 2)
    : [null])

  input_1940 = (local.code_1940[0] == ","
    ? substr(local.input_1939, local.code_1940[1], -1)
    : local.input_1939)

  iter_1940 = try(local.iter_1939.code_ptr >= length(var.code), true) ? local.iter_1939 : {
    output = (local.code_1940[0] == "."
      ? "${local.iter_1939.output}${join("", [for _ in range(local.code_1940[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1939.tape[local.iter_1939.tape_ptr]))])}"
      : local.iter_1939.output)
    
    tape = (
      local.code_1940[0] == "+"
        ? [for i, b in local.iter_1939.tape : (i == local.iter_1939.tape_ptr ? (b + local.code_1940[1]) % 256 : b)] :
      local.code_1940[0] == "-"
        ? [for i, b in local.iter_1939.tape : (i == local.iter_1939.tape_ptr ? (b - local.code_1940[1] + 256) % 256 : b)] :
      local.code_1940[0] == ","
        ? [for i, b in local.iter_1939.tape : (i == local.iter_1939.tape_ptr ? local.ascii_lookup[substr(local.input_1940, 0, 1)] : b)]
        : local.iter_1939.tape)

    tape_ptr = (
      local.code_1940[0] == "<"
        ? local.iter_1939.tape_ptr - local.code_1940[1] :
      local.code_1940[0] == ">"
        ? local.iter_1939.tape_ptr + local.code_1940[1]
        : local.iter_1939.tape_ptr)

    code_ptr = 2 + (
      local.code_1940[0] == "["
        ? local.iter_1939.tape[local.iter_1939.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1939.code_ptr)] : local.iter_1939.code_ptr :
      local.code_1940[0] == "]"
        ? local.iter_1939.tape[local.iter_1939.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1939.code_ptr)] : local.iter_1939.code_ptr
        : local.iter_1939.code_ptr)

    steps_taken = 1 + local.iter_1939.steps_taken
  }
}

locals {
  code_1941 = (try(local.iter_1940.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1940.code_ptr, local.iter_1940.code_ptr + 2)
    : [null])

  input_1941 = (local.code_1941[0] == ","
    ? substr(local.input_1940, local.code_1941[1], -1)
    : local.input_1940)

  iter_1941 = try(local.iter_1940.code_ptr >= length(var.code), true) ? local.iter_1940 : {
    output = (local.code_1941[0] == "."
      ? "${local.iter_1940.output}${join("", [for _ in range(local.code_1941[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1940.tape[local.iter_1940.tape_ptr]))])}"
      : local.iter_1940.output)
    
    tape = (
      local.code_1941[0] == "+"
        ? [for i, b in local.iter_1940.tape : (i == local.iter_1940.tape_ptr ? (b + local.code_1941[1]) % 256 : b)] :
      local.code_1941[0] == "-"
        ? [for i, b in local.iter_1940.tape : (i == local.iter_1940.tape_ptr ? (b - local.code_1941[1] + 256) % 256 : b)] :
      local.code_1941[0] == ","
        ? [for i, b in local.iter_1940.tape : (i == local.iter_1940.tape_ptr ? local.ascii_lookup[substr(local.input_1941, 0, 1)] : b)]
        : local.iter_1940.tape)

    tape_ptr = (
      local.code_1941[0] == "<"
        ? local.iter_1940.tape_ptr - local.code_1941[1] :
      local.code_1941[0] == ">"
        ? local.iter_1940.tape_ptr + local.code_1941[1]
        : local.iter_1940.tape_ptr)

    code_ptr = 2 + (
      local.code_1941[0] == "["
        ? local.iter_1940.tape[local.iter_1940.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1940.code_ptr)] : local.iter_1940.code_ptr :
      local.code_1941[0] == "]"
        ? local.iter_1940.tape[local.iter_1940.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1940.code_ptr)] : local.iter_1940.code_ptr
        : local.iter_1940.code_ptr)

    steps_taken = 1 + local.iter_1940.steps_taken
  }
}

locals {
  code_1942 = (try(local.iter_1941.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1941.code_ptr, local.iter_1941.code_ptr + 2)
    : [null])

  input_1942 = (local.code_1942[0] == ","
    ? substr(local.input_1941, local.code_1942[1], -1)
    : local.input_1941)

  iter_1942 = try(local.iter_1941.code_ptr >= length(var.code), true) ? local.iter_1941 : {
    output = (local.code_1942[0] == "."
      ? "${local.iter_1941.output}${join("", [for _ in range(local.code_1942[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1941.tape[local.iter_1941.tape_ptr]))])}"
      : local.iter_1941.output)
    
    tape = (
      local.code_1942[0] == "+"
        ? [for i, b in local.iter_1941.tape : (i == local.iter_1941.tape_ptr ? (b + local.code_1942[1]) % 256 : b)] :
      local.code_1942[0] == "-"
        ? [for i, b in local.iter_1941.tape : (i == local.iter_1941.tape_ptr ? (b - local.code_1942[1] + 256) % 256 : b)] :
      local.code_1942[0] == ","
        ? [for i, b in local.iter_1941.tape : (i == local.iter_1941.tape_ptr ? local.ascii_lookup[substr(local.input_1942, 0, 1)] : b)]
        : local.iter_1941.tape)

    tape_ptr = (
      local.code_1942[0] == "<"
        ? local.iter_1941.tape_ptr - local.code_1942[1] :
      local.code_1942[0] == ">"
        ? local.iter_1941.tape_ptr + local.code_1942[1]
        : local.iter_1941.tape_ptr)

    code_ptr = 2 + (
      local.code_1942[0] == "["
        ? local.iter_1941.tape[local.iter_1941.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1941.code_ptr)] : local.iter_1941.code_ptr :
      local.code_1942[0] == "]"
        ? local.iter_1941.tape[local.iter_1941.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1941.code_ptr)] : local.iter_1941.code_ptr
        : local.iter_1941.code_ptr)

    steps_taken = 1 + local.iter_1941.steps_taken
  }
}

locals {
  code_1943 = (try(local.iter_1942.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1942.code_ptr, local.iter_1942.code_ptr + 2)
    : [null])

  input_1943 = (local.code_1943[0] == ","
    ? substr(local.input_1942, local.code_1943[1], -1)
    : local.input_1942)

  iter_1943 = try(local.iter_1942.code_ptr >= length(var.code), true) ? local.iter_1942 : {
    output = (local.code_1943[0] == "."
      ? "${local.iter_1942.output}${join("", [for _ in range(local.code_1943[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1942.tape[local.iter_1942.tape_ptr]))])}"
      : local.iter_1942.output)
    
    tape = (
      local.code_1943[0] == "+"
        ? [for i, b in local.iter_1942.tape : (i == local.iter_1942.tape_ptr ? (b + local.code_1943[1]) % 256 : b)] :
      local.code_1943[0] == "-"
        ? [for i, b in local.iter_1942.tape : (i == local.iter_1942.tape_ptr ? (b - local.code_1943[1] + 256) % 256 : b)] :
      local.code_1943[0] == ","
        ? [for i, b in local.iter_1942.tape : (i == local.iter_1942.tape_ptr ? local.ascii_lookup[substr(local.input_1943, 0, 1)] : b)]
        : local.iter_1942.tape)

    tape_ptr = (
      local.code_1943[0] == "<"
        ? local.iter_1942.tape_ptr - local.code_1943[1] :
      local.code_1943[0] == ">"
        ? local.iter_1942.tape_ptr + local.code_1943[1]
        : local.iter_1942.tape_ptr)

    code_ptr = 2 + (
      local.code_1943[0] == "["
        ? local.iter_1942.tape[local.iter_1942.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1942.code_ptr)] : local.iter_1942.code_ptr :
      local.code_1943[0] == "]"
        ? local.iter_1942.tape[local.iter_1942.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1942.code_ptr)] : local.iter_1942.code_ptr
        : local.iter_1942.code_ptr)

    steps_taken = 1 + local.iter_1942.steps_taken
  }
}

locals {
  code_1944 = (try(local.iter_1943.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1943.code_ptr, local.iter_1943.code_ptr + 2)
    : [null])

  input_1944 = (local.code_1944[0] == ","
    ? substr(local.input_1943, local.code_1944[1], -1)
    : local.input_1943)

  iter_1944 = try(local.iter_1943.code_ptr >= length(var.code), true) ? local.iter_1943 : {
    output = (local.code_1944[0] == "."
      ? "${local.iter_1943.output}${join("", [for _ in range(local.code_1944[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1943.tape[local.iter_1943.tape_ptr]))])}"
      : local.iter_1943.output)
    
    tape = (
      local.code_1944[0] == "+"
        ? [for i, b in local.iter_1943.tape : (i == local.iter_1943.tape_ptr ? (b + local.code_1944[1]) % 256 : b)] :
      local.code_1944[0] == "-"
        ? [for i, b in local.iter_1943.tape : (i == local.iter_1943.tape_ptr ? (b - local.code_1944[1] + 256) % 256 : b)] :
      local.code_1944[0] == ","
        ? [for i, b in local.iter_1943.tape : (i == local.iter_1943.tape_ptr ? local.ascii_lookup[substr(local.input_1944, 0, 1)] : b)]
        : local.iter_1943.tape)

    tape_ptr = (
      local.code_1944[0] == "<"
        ? local.iter_1943.tape_ptr - local.code_1944[1] :
      local.code_1944[0] == ">"
        ? local.iter_1943.tape_ptr + local.code_1944[1]
        : local.iter_1943.tape_ptr)

    code_ptr = 2 + (
      local.code_1944[0] == "["
        ? local.iter_1943.tape[local.iter_1943.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1943.code_ptr)] : local.iter_1943.code_ptr :
      local.code_1944[0] == "]"
        ? local.iter_1943.tape[local.iter_1943.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1943.code_ptr)] : local.iter_1943.code_ptr
        : local.iter_1943.code_ptr)

    steps_taken = 1 + local.iter_1943.steps_taken
  }
}

locals {
  code_1945 = (try(local.iter_1944.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1944.code_ptr, local.iter_1944.code_ptr + 2)
    : [null])

  input_1945 = (local.code_1945[0] == ","
    ? substr(local.input_1944, local.code_1945[1], -1)
    : local.input_1944)

  iter_1945 = try(local.iter_1944.code_ptr >= length(var.code), true) ? local.iter_1944 : {
    output = (local.code_1945[0] == "."
      ? "${local.iter_1944.output}${join("", [for _ in range(local.code_1945[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1944.tape[local.iter_1944.tape_ptr]))])}"
      : local.iter_1944.output)
    
    tape = (
      local.code_1945[0] == "+"
        ? [for i, b in local.iter_1944.tape : (i == local.iter_1944.tape_ptr ? (b + local.code_1945[1]) % 256 : b)] :
      local.code_1945[0] == "-"
        ? [for i, b in local.iter_1944.tape : (i == local.iter_1944.tape_ptr ? (b - local.code_1945[1] + 256) % 256 : b)] :
      local.code_1945[0] == ","
        ? [for i, b in local.iter_1944.tape : (i == local.iter_1944.tape_ptr ? local.ascii_lookup[substr(local.input_1945, 0, 1)] : b)]
        : local.iter_1944.tape)

    tape_ptr = (
      local.code_1945[0] == "<"
        ? local.iter_1944.tape_ptr - local.code_1945[1] :
      local.code_1945[0] == ">"
        ? local.iter_1944.tape_ptr + local.code_1945[1]
        : local.iter_1944.tape_ptr)

    code_ptr = 2 + (
      local.code_1945[0] == "["
        ? local.iter_1944.tape[local.iter_1944.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1944.code_ptr)] : local.iter_1944.code_ptr :
      local.code_1945[0] == "]"
        ? local.iter_1944.tape[local.iter_1944.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1944.code_ptr)] : local.iter_1944.code_ptr
        : local.iter_1944.code_ptr)

    steps_taken = 1 + local.iter_1944.steps_taken
  }
}

locals {
  code_1946 = (try(local.iter_1945.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1945.code_ptr, local.iter_1945.code_ptr + 2)
    : [null])

  input_1946 = (local.code_1946[0] == ","
    ? substr(local.input_1945, local.code_1946[1], -1)
    : local.input_1945)

  iter_1946 = try(local.iter_1945.code_ptr >= length(var.code), true) ? local.iter_1945 : {
    output = (local.code_1946[0] == "."
      ? "${local.iter_1945.output}${join("", [for _ in range(local.code_1946[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1945.tape[local.iter_1945.tape_ptr]))])}"
      : local.iter_1945.output)
    
    tape = (
      local.code_1946[0] == "+"
        ? [for i, b in local.iter_1945.tape : (i == local.iter_1945.tape_ptr ? (b + local.code_1946[1]) % 256 : b)] :
      local.code_1946[0] == "-"
        ? [for i, b in local.iter_1945.tape : (i == local.iter_1945.tape_ptr ? (b - local.code_1946[1] + 256) % 256 : b)] :
      local.code_1946[0] == ","
        ? [for i, b in local.iter_1945.tape : (i == local.iter_1945.tape_ptr ? local.ascii_lookup[substr(local.input_1946, 0, 1)] : b)]
        : local.iter_1945.tape)

    tape_ptr = (
      local.code_1946[0] == "<"
        ? local.iter_1945.tape_ptr - local.code_1946[1] :
      local.code_1946[0] == ">"
        ? local.iter_1945.tape_ptr + local.code_1946[1]
        : local.iter_1945.tape_ptr)

    code_ptr = 2 + (
      local.code_1946[0] == "["
        ? local.iter_1945.tape[local.iter_1945.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1945.code_ptr)] : local.iter_1945.code_ptr :
      local.code_1946[0] == "]"
        ? local.iter_1945.tape[local.iter_1945.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1945.code_ptr)] : local.iter_1945.code_ptr
        : local.iter_1945.code_ptr)

    steps_taken = 1 + local.iter_1945.steps_taken
  }
}

locals {
  code_1947 = (try(local.iter_1946.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1946.code_ptr, local.iter_1946.code_ptr + 2)
    : [null])

  input_1947 = (local.code_1947[0] == ","
    ? substr(local.input_1946, local.code_1947[1], -1)
    : local.input_1946)

  iter_1947 = try(local.iter_1946.code_ptr >= length(var.code), true) ? local.iter_1946 : {
    output = (local.code_1947[0] == "."
      ? "${local.iter_1946.output}${join("", [for _ in range(local.code_1947[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1946.tape[local.iter_1946.tape_ptr]))])}"
      : local.iter_1946.output)
    
    tape = (
      local.code_1947[0] == "+"
        ? [for i, b in local.iter_1946.tape : (i == local.iter_1946.tape_ptr ? (b + local.code_1947[1]) % 256 : b)] :
      local.code_1947[0] == "-"
        ? [for i, b in local.iter_1946.tape : (i == local.iter_1946.tape_ptr ? (b - local.code_1947[1] + 256) % 256 : b)] :
      local.code_1947[0] == ","
        ? [for i, b in local.iter_1946.tape : (i == local.iter_1946.tape_ptr ? local.ascii_lookup[substr(local.input_1947, 0, 1)] : b)]
        : local.iter_1946.tape)

    tape_ptr = (
      local.code_1947[0] == "<"
        ? local.iter_1946.tape_ptr - local.code_1947[1] :
      local.code_1947[0] == ">"
        ? local.iter_1946.tape_ptr + local.code_1947[1]
        : local.iter_1946.tape_ptr)

    code_ptr = 2 + (
      local.code_1947[0] == "["
        ? local.iter_1946.tape[local.iter_1946.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1946.code_ptr)] : local.iter_1946.code_ptr :
      local.code_1947[0] == "]"
        ? local.iter_1946.tape[local.iter_1946.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1946.code_ptr)] : local.iter_1946.code_ptr
        : local.iter_1946.code_ptr)

    steps_taken = 1 + local.iter_1946.steps_taken
  }
}

locals {
  code_1948 = (try(local.iter_1947.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1947.code_ptr, local.iter_1947.code_ptr + 2)
    : [null])

  input_1948 = (local.code_1948[0] == ","
    ? substr(local.input_1947, local.code_1948[1], -1)
    : local.input_1947)

  iter_1948 = try(local.iter_1947.code_ptr >= length(var.code), true) ? local.iter_1947 : {
    output = (local.code_1948[0] == "."
      ? "${local.iter_1947.output}${join("", [for _ in range(local.code_1948[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1947.tape[local.iter_1947.tape_ptr]))])}"
      : local.iter_1947.output)
    
    tape = (
      local.code_1948[0] == "+"
        ? [for i, b in local.iter_1947.tape : (i == local.iter_1947.tape_ptr ? (b + local.code_1948[1]) % 256 : b)] :
      local.code_1948[0] == "-"
        ? [for i, b in local.iter_1947.tape : (i == local.iter_1947.tape_ptr ? (b - local.code_1948[1] + 256) % 256 : b)] :
      local.code_1948[0] == ","
        ? [for i, b in local.iter_1947.tape : (i == local.iter_1947.tape_ptr ? local.ascii_lookup[substr(local.input_1948, 0, 1)] : b)]
        : local.iter_1947.tape)

    tape_ptr = (
      local.code_1948[0] == "<"
        ? local.iter_1947.tape_ptr - local.code_1948[1] :
      local.code_1948[0] == ">"
        ? local.iter_1947.tape_ptr + local.code_1948[1]
        : local.iter_1947.tape_ptr)

    code_ptr = 2 + (
      local.code_1948[0] == "["
        ? local.iter_1947.tape[local.iter_1947.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1947.code_ptr)] : local.iter_1947.code_ptr :
      local.code_1948[0] == "]"
        ? local.iter_1947.tape[local.iter_1947.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1947.code_ptr)] : local.iter_1947.code_ptr
        : local.iter_1947.code_ptr)

    steps_taken = 1 + local.iter_1947.steps_taken
  }
}

locals {
  code_1949 = (try(local.iter_1948.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1948.code_ptr, local.iter_1948.code_ptr + 2)
    : [null])

  input_1949 = (local.code_1949[0] == ","
    ? substr(local.input_1948, local.code_1949[1], -1)
    : local.input_1948)

  iter_1949 = try(local.iter_1948.code_ptr >= length(var.code), true) ? local.iter_1948 : {
    output = (local.code_1949[0] == "."
      ? "${local.iter_1948.output}${join("", [for _ in range(local.code_1949[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1948.tape[local.iter_1948.tape_ptr]))])}"
      : local.iter_1948.output)
    
    tape = (
      local.code_1949[0] == "+"
        ? [for i, b in local.iter_1948.tape : (i == local.iter_1948.tape_ptr ? (b + local.code_1949[1]) % 256 : b)] :
      local.code_1949[0] == "-"
        ? [for i, b in local.iter_1948.tape : (i == local.iter_1948.tape_ptr ? (b - local.code_1949[1] + 256) % 256 : b)] :
      local.code_1949[0] == ","
        ? [for i, b in local.iter_1948.tape : (i == local.iter_1948.tape_ptr ? local.ascii_lookup[substr(local.input_1949, 0, 1)] : b)]
        : local.iter_1948.tape)

    tape_ptr = (
      local.code_1949[0] == "<"
        ? local.iter_1948.tape_ptr - local.code_1949[1] :
      local.code_1949[0] == ">"
        ? local.iter_1948.tape_ptr + local.code_1949[1]
        : local.iter_1948.tape_ptr)

    code_ptr = 2 + (
      local.code_1949[0] == "["
        ? local.iter_1948.tape[local.iter_1948.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1948.code_ptr)] : local.iter_1948.code_ptr :
      local.code_1949[0] == "]"
        ? local.iter_1948.tape[local.iter_1948.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1948.code_ptr)] : local.iter_1948.code_ptr
        : local.iter_1948.code_ptr)

    steps_taken = 1 + local.iter_1948.steps_taken
  }
}

locals {
  code_1950 = (try(local.iter_1949.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1949.code_ptr, local.iter_1949.code_ptr + 2)
    : [null])

  input_1950 = (local.code_1950[0] == ","
    ? substr(local.input_1949, local.code_1950[1], -1)
    : local.input_1949)

  iter_1950 = try(local.iter_1949.code_ptr >= length(var.code), true) ? local.iter_1949 : {
    output = (local.code_1950[0] == "."
      ? "${local.iter_1949.output}${join("", [for _ in range(local.code_1950[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1949.tape[local.iter_1949.tape_ptr]))])}"
      : local.iter_1949.output)
    
    tape = (
      local.code_1950[0] == "+"
        ? [for i, b in local.iter_1949.tape : (i == local.iter_1949.tape_ptr ? (b + local.code_1950[1]) % 256 : b)] :
      local.code_1950[0] == "-"
        ? [for i, b in local.iter_1949.tape : (i == local.iter_1949.tape_ptr ? (b - local.code_1950[1] + 256) % 256 : b)] :
      local.code_1950[0] == ","
        ? [for i, b in local.iter_1949.tape : (i == local.iter_1949.tape_ptr ? local.ascii_lookup[substr(local.input_1950, 0, 1)] : b)]
        : local.iter_1949.tape)

    tape_ptr = (
      local.code_1950[0] == "<"
        ? local.iter_1949.tape_ptr - local.code_1950[1] :
      local.code_1950[0] == ">"
        ? local.iter_1949.tape_ptr + local.code_1950[1]
        : local.iter_1949.tape_ptr)

    code_ptr = 2 + (
      local.code_1950[0] == "["
        ? local.iter_1949.tape[local.iter_1949.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1949.code_ptr)] : local.iter_1949.code_ptr :
      local.code_1950[0] == "]"
        ? local.iter_1949.tape[local.iter_1949.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1949.code_ptr)] : local.iter_1949.code_ptr
        : local.iter_1949.code_ptr)

    steps_taken = 1 + local.iter_1949.steps_taken
  }
}

locals {
  code_1951 = (try(local.iter_1950.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1950.code_ptr, local.iter_1950.code_ptr + 2)
    : [null])

  input_1951 = (local.code_1951[0] == ","
    ? substr(local.input_1950, local.code_1951[1], -1)
    : local.input_1950)

  iter_1951 = try(local.iter_1950.code_ptr >= length(var.code), true) ? local.iter_1950 : {
    output = (local.code_1951[0] == "."
      ? "${local.iter_1950.output}${join("", [for _ in range(local.code_1951[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1950.tape[local.iter_1950.tape_ptr]))])}"
      : local.iter_1950.output)
    
    tape = (
      local.code_1951[0] == "+"
        ? [for i, b in local.iter_1950.tape : (i == local.iter_1950.tape_ptr ? (b + local.code_1951[1]) % 256 : b)] :
      local.code_1951[0] == "-"
        ? [for i, b in local.iter_1950.tape : (i == local.iter_1950.tape_ptr ? (b - local.code_1951[1] + 256) % 256 : b)] :
      local.code_1951[0] == ","
        ? [for i, b in local.iter_1950.tape : (i == local.iter_1950.tape_ptr ? local.ascii_lookup[substr(local.input_1951, 0, 1)] : b)]
        : local.iter_1950.tape)

    tape_ptr = (
      local.code_1951[0] == "<"
        ? local.iter_1950.tape_ptr - local.code_1951[1] :
      local.code_1951[0] == ">"
        ? local.iter_1950.tape_ptr + local.code_1951[1]
        : local.iter_1950.tape_ptr)

    code_ptr = 2 + (
      local.code_1951[0] == "["
        ? local.iter_1950.tape[local.iter_1950.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1950.code_ptr)] : local.iter_1950.code_ptr :
      local.code_1951[0] == "]"
        ? local.iter_1950.tape[local.iter_1950.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1950.code_ptr)] : local.iter_1950.code_ptr
        : local.iter_1950.code_ptr)

    steps_taken = 1 + local.iter_1950.steps_taken
  }
}

locals {
  code_1952 = (try(local.iter_1951.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1951.code_ptr, local.iter_1951.code_ptr + 2)
    : [null])

  input_1952 = (local.code_1952[0] == ","
    ? substr(local.input_1951, local.code_1952[1], -1)
    : local.input_1951)

  iter_1952 = try(local.iter_1951.code_ptr >= length(var.code), true) ? local.iter_1951 : {
    output = (local.code_1952[0] == "."
      ? "${local.iter_1951.output}${join("", [for _ in range(local.code_1952[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1951.tape[local.iter_1951.tape_ptr]))])}"
      : local.iter_1951.output)
    
    tape = (
      local.code_1952[0] == "+"
        ? [for i, b in local.iter_1951.tape : (i == local.iter_1951.tape_ptr ? (b + local.code_1952[1]) % 256 : b)] :
      local.code_1952[0] == "-"
        ? [for i, b in local.iter_1951.tape : (i == local.iter_1951.tape_ptr ? (b - local.code_1952[1] + 256) % 256 : b)] :
      local.code_1952[0] == ","
        ? [for i, b in local.iter_1951.tape : (i == local.iter_1951.tape_ptr ? local.ascii_lookup[substr(local.input_1952, 0, 1)] : b)]
        : local.iter_1951.tape)

    tape_ptr = (
      local.code_1952[0] == "<"
        ? local.iter_1951.tape_ptr - local.code_1952[1] :
      local.code_1952[0] == ">"
        ? local.iter_1951.tape_ptr + local.code_1952[1]
        : local.iter_1951.tape_ptr)

    code_ptr = 2 + (
      local.code_1952[0] == "["
        ? local.iter_1951.tape[local.iter_1951.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1951.code_ptr)] : local.iter_1951.code_ptr :
      local.code_1952[0] == "]"
        ? local.iter_1951.tape[local.iter_1951.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1951.code_ptr)] : local.iter_1951.code_ptr
        : local.iter_1951.code_ptr)

    steps_taken = 1 + local.iter_1951.steps_taken
  }
}

locals {
  code_1953 = (try(local.iter_1952.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1952.code_ptr, local.iter_1952.code_ptr + 2)
    : [null])

  input_1953 = (local.code_1953[0] == ","
    ? substr(local.input_1952, local.code_1953[1], -1)
    : local.input_1952)

  iter_1953 = try(local.iter_1952.code_ptr >= length(var.code), true) ? local.iter_1952 : {
    output = (local.code_1953[0] == "."
      ? "${local.iter_1952.output}${join("", [for _ in range(local.code_1953[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1952.tape[local.iter_1952.tape_ptr]))])}"
      : local.iter_1952.output)
    
    tape = (
      local.code_1953[0] == "+"
        ? [for i, b in local.iter_1952.tape : (i == local.iter_1952.tape_ptr ? (b + local.code_1953[1]) % 256 : b)] :
      local.code_1953[0] == "-"
        ? [for i, b in local.iter_1952.tape : (i == local.iter_1952.tape_ptr ? (b - local.code_1953[1] + 256) % 256 : b)] :
      local.code_1953[0] == ","
        ? [for i, b in local.iter_1952.tape : (i == local.iter_1952.tape_ptr ? local.ascii_lookup[substr(local.input_1953, 0, 1)] : b)]
        : local.iter_1952.tape)

    tape_ptr = (
      local.code_1953[0] == "<"
        ? local.iter_1952.tape_ptr - local.code_1953[1] :
      local.code_1953[0] == ">"
        ? local.iter_1952.tape_ptr + local.code_1953[1]
        : local.iter_1952.tape_ptr)

    code_ptr = 2 + (
      local.code_1953[0] == "["
        ? local.iter_1952.tape[local.iter_1952.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1952.code_ptr)] : local.iter_1952.code_ptr :
      local.code_1953[0] == "]"
        ? local.iter_1952.tape[local.iter_1952.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1952.code_ptr)] : local.iter_1952.code_ptr
        : local.iter_1952.code_ptr)

    steps_taken = 1 + local.iter_1952.steps_taken
  }
}

locals {
  code_1954 = (try(local.iter_1953.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1953.code_ptr, local.iter_1953.code_ptr + 2)
    : [null])

  input_1954 = (local.code_1954[0] == ","
    ? substr(local.input_1953, local.code_1954[1], -1)
    : local.input_1953)

  iter_1954 = try(local.iter_1953.code_ptr >= length(var.code), true) ? local.iter_1953 : {
    output = (local.code_1954[0] == "."
      ? "${local.iter_1953.output}${join("", [for _ in range(local.code_1954[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1953.tape[local.iter_1953.tape_ptr]))])}"
      : local.iter_1953.output)
    
    tape = (
      local.code_1954[0] == "+"
        ? [for i, b in local.iter_1953.tape : (i == local.iter_1953.tape_ptr ? (b + local.code_1954[1]) % 256 : b)] :
      local.code_1954[0] == "-"
        ? [for i, b in local.iter_1953.tape : (i == local.iter_1953.tape_ptr ? (b - local.code_1954[1] + 256) % 256 : b)] :
      local.code_1954[0] == ","
        ? [for i, b in local.iter_1953.tape : (i == local.iter_1953.tape_ptr ? local.ascii_lookup[substr(local.input_1954, 0, 1)] : b)]
        : local.iter_1953.tape)

    tape_ptr = (
      local.code_1954[0] == "<"
        ? local.iter_1953.tape_ptr - local.code_1954[1] :
      local.code_1954[0] == ">"
        ? local.iter_1953.tape_ptr + local.code_1954[1]
        : local.iter_1953.tape_ptr)

    code_ptr = 2 + (
      local.code_1954[0] == "["
        ? local.iter_1953.tape[local.iter_1953.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1953.code_ptr)] : local.iter_1953.code_ptr :
      local.code_1954[0] == "]"
        ? local.iter_1953.tape[local.iter_1953.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1953.code_ptr)] : local.iter_1953.code_ptr
        : local.iter_1953.code_ptr)

    steps_taken = 1 + local.iter_1953.steps_taken
  }
}

locals {
  code_1955 = (try(local.iter_1954.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1954.code_ptr, local.iter_1954.code_ptr + 2)
    : [null])

  input_1955 = (local.code_1955[0] == ","
    ? substr(local.input_1954, local.code_1955[1], -1)
    : local.input_1954)

  iter_1955 = try(local.iter_1954.code_ptr >= length(var.code), true) ? local.iter_1954 : {
    output = (local.code_1955[0] == "."
      ? "${local.iter_1954.output}${join("", [for _ in range(local.code_1955[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1954.tape[local.iter_1954.tape_ptr]))])}"
      : local.iter_1954.output)
    
    tape = (
      local.code_1955[0] == "+"
        ? [for i, b in local.iter_1954.tape : (i == local.iter_1954.tape_ptr ? (b + local.code_1955[1]) % 256 : b)] :
      local.code_1955[0] == "-"
        ? [for i, b in local.iter_1954.tape : (i == local.iter_1954.tape_ptr ? (b - local.code_1955[1] + 256) % 256 : b)] :
      local.code_1955[0] == ","
        ? [for i, b in local.iter_1954.tape : (i == local.iter_1954.tape_ptr ? local.ascii_lookup[substr(local.input_1955, 0, 1)] : b)]
        : local.iter_1954.tape)

    tape_ptr = (
      local.code_1955[0] == "<"
        ? local.iter_1954.tape_ptr - local.code_1955[1] :
      local.code_1955[0] == ">"
        ? local.iter_1954.tape_ptr + local.code_1955[1]
        : local.iter_1954.tape_ptr)

    code_ptr = 2 + (
      local.code_1955[0] == "["
        ? local.iter_1954.tape[local.iter_1954.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1954.code_ptr)] : local.iter_1954.code_ptr :
      local.code_1955[0] == "]"
        ? local.iter_1954.tape[local.iter_1954.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1954.code_ptr)] : local.iter_1954.code_ptr
        : local.iter_1954.code_ptr)

    steps_taken = 1 + local.iter_1954.steps_taken
  }
}

locals {
  code_1956 = (try(local.iter_1955.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1955.code_ptr, local.iter_1955.code_ptr + 2)
    : [null])

  input_1956 = (local.code_1956[0] == ","
    ? substr(local.input_1955, local.code_1956[1], -1)
    : local.input_1955)

  iter_1956 = try(local.iter_1955.code_ptr >= length(var.code), true) ? local.iter_1955 : {
    output = (local.code_1956[0] == "."
      ? "${local.iter_1955.output}${join("", [for _ in range(local.code_1956[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1955.tape[local.iter_1955.tape_ptr]))])}"
      : local.iter_1955.output)
    
    tape = (
      local.code_1956[0] == "+"
        ? [for i, b in local.iter_1955.tape : (i == local.iter_1955.tape_ptr ? (b + local.code_1956[1]) % 256 : b)] :
      local.code_1956[0] == "-"
        ? [for i, b in local.iter_1955.tape : (i == local.iter_1955.tape_ptr ? (b - local.code_1956[1] + 256) % 256 : b)] :
      local.code_1956[0] == ","
        ? [for i, b in local.iter_1955.tape : (i == local.iter_1955.tape_ptr ? local.ascii_lookup[substr(local.input_1956, 0, 1)] : b)]
        : local.iter_1955.tape)

    tape_ptr = (
      local.code_1956[0] == "<"
        ? local.iter_1955.tape_ptr - local.code_1956[1] :
      local.code_1956[0] == ">"
        ? local.iter_1955.tape_ptr + local.code_1956[1]
        : local.iter_1955.tape_ptr)

    code_ptr = 2 + (
      local.code_1956[0] == "["
        ? local.iter_1955.tape[local.iter_1955.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1955.code_ptr)] : local.iter_1955.code_ptr :
      local.code_1956[0] == "]"
        ? local.iter_1955.tape[local.iter_1955.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1955.code_ptr)] : local.iter_1955.code_ptr
        : local.iter_1955.code_ptr)

    steps_taken = 1 + local.iter_1955.steps_taken
  }
}

locals {
  code_1957 = (try(local.iter_1956.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1956.code_ptr, local.iter_1956.code_ptr + 2)
    : [null])

  input_1957 = (local.code_1957[0] == ","
    ? substr(local.input_1956, local.code_1957[1], -1)
    : local.input_1956)

  iter_1957 = try(local.iter_1956.code_ptr >= length(var.code), true) ? local.iter_1956 : {
    output = (local.code_1957[0] == "."
      ? "${local.iter_1956.output}${join("", [for _ in range(local.code_1957[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1956.tape[local.iter_1956.tape_ptr]))])}"
      : local.iter_1956.output)
    
    tape = (
      local.code_1957[0] == "+"
        ? [for i, b in local.iter_1956.tape : (i == local.iter_1956.tape_ptr ? (b + local.code_1957[1]) % 256 : b)] :
      local.code_1957[0] == "-"
        ? [for i, b in local.iter_1956.tape : (i == local.iter_1956.tape_ptr ? (b - local.code_1957[1] + 256) % 256 : b)] :
      local.code_1957[0] == ","
        ? [for i, b in local.iter_1956.tape : (i == local.iter_1956.tape_ptr ? local.ascii_lookup[substr(local.input_1957, 0, 1)] : b)]
        : local.iter_1956.tape)

    tape_ptr = (
      local.code_1957[0] == "<"
        ? local.iter_1956.tape_ptr - local.code_1957[1] :
      local.code_1957[0] == ">"
        ? local.iter_1956.tape_ptr + local.code_1957[1]
        : local.iter_1956.tape_ptr)

    code_ptr = 2 + (
      local.code_1957[0] == "["
        ? local.iter_1956.tape[local.iter_1956.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1956.code_ptr)] : local.iter_1956.code_ptr :
      local.code_1957[0] == "]"
        ? local.iter_1956.tape[local.iter_1956.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1956.code_ptr)] : local.iter_1956.code_ptr
        : local.iter_1956.code_ptr)

    steps_taken = 1 + local.iter_1956.steps_taken
  }
}

locals {
  code_1958 = (try(local.iter_1957.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1957.code_ptr, local.iter_1957.code_ptr + 2)
    : [null])

  input_1958 = (local.code_1958[0] == ","
    ? substr(local.input_1957, local.code_1958[1], -1)
    : local.input_1957)

  iter_1958 = try(local.iter_1957.code_ptr >= length(var.code), true) ? local.iter_1957 : {
    output = (local.code_1958[0] == "."
      ? "${local.iter_1957.output}${join("", [for _ in range(local.code_1958[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1957.tape[local.iter_1957.tape_ptr]))])}"
      : local.iter_1957.output)
    
    tape = (
      local.code_1958[0] == "+"
        ? [for i, b in local.iter_1957.tape : (i == local.iter_1957.tape_ptr ? (b + local.code_1958[1]) % 256 : b)] :
      local.code_1958[0] == "-"
        ? [for i, b in local.iter_1957.tape : (i == local.iter_1957.tape_ptr ? (b - local.code_1958[1] + 256) % 256 : b)] :
      local.code_1958[0] == ","
        ? [for i, b in local.iter_1957.tape : (i == local.iter_1957.tape_ptr ? local.ascii_lookup[substr(local.input_1958, 0, 1)] : b)]
        : local.iter_1957.tape)

    tape_ptr = (
      local.code_1958[0] == "<"
        ? local.iter_1957.tape_ptr - local.code_1958[1] :
      local.code_1958[0] == ">"
        ? local.iter_1957.tape_ptr + local.code_1958[1]
        : local.iter_1957.tape_ptr)

    code_ptr = 2 + (
      local.code_1958[0] == "["
        ? local.iter_1957.tape[local.iter_1957.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1957.code_ptr)] : local.iter_1957.code_ptr :
      local.code_1958[0] == "]"
        ? local.iter_1957.tape[local.iter_1957.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1957.code_ptr)] : local.iter_1957.code_ptr
        : local.iter_1957.code_ptr)

    steps_taken = 1 + local.iter_1957.steps_taken
  }
}

locals {
  code_1959 = (try(local.iter_1958.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1958.code_ptr, local.iter_1958.code_ptr + 2)
    : [null])

  input_1959 = (local.code_1959[0] == ","
    ? substr(local.input_1958, local.code_1959[1], -1)
    : local.input_1958)

  iter_1959 = try(local.iter_1958.code_ptr >= length(var.code), true) ? local.iter_1958 : {
    output = (local.code_1959[0] == "."
      ? "${local.iter_1958.output}${join("", [for _ in range(local.code_1959[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1958.tape[local.iter_1958.tape_ptr]))])}"
      : local.iter_1958.output)
    
    tape = (
      local.code_1959[0] == "+"
        ? [for i, b in local.iter_1958.tape : (i == local.iter_1958.tape_ptr ? (b + local.code_1959[1]) % 256 : b)] :
      local.code_1959[0] == "-"
        ? [for i, b in local.iter_1958.tape : (i == local.iter_1958.tape_ptr ? (b - local.code_1959[1] + 256) % 256 : b)] :
      local.code_1959[0] == ","
        ? [for i, b in local.iter_1958.tape : (i == local.iter_1958.tape_ptr ? local.ascii_lookup[substr(local.input_1959, 0, 1)] : b)]
        : local.iter_1958.tape)

    tape_ptr = (
      local.code_1959[0] == "<"
        ? local.iter_1958.tape_ptr - local.code_1959[1] :
      local.code_1959[0] == ">"
        ? local.iter_1958.tape_ptr + local.code_1959[1]
        : local.iter_1958.tape_ptr)

    code_ptr = 2 + (
      local.code_1959[0] == "["
        ? local.iter_1958.tape[local.iter_1958.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1958.code_ptr)] : local.iter_1958.code_ptr :
      local.code_1959[0] == "]"
        ? local.iter_1958.tape[local.iter_1958.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1958.code_ptr)] : local.iter_1958.code_ptr
        : local.iter_1958.code_ptr)

    steps_taken = 1 + local.iter_1958.steps_taken
  }
}

locals {
  code_1960 = (try(local.iter_1959.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1959.code_ptr, local.iter_1959.code_ptr + 2)
    : [null])

  input_1960 = (local.code_1960[0] == ","
    ? substr(local.input_1959, local.code_1960[1], -1)
    : local.input_1959)

  iter_1960 = try(local.iter_1959.code_ptr >= length(var.code), true) ? local.iter_1959 : {
    output = (local.code_1960[0] == "."
      ? "${local.iter_1959.output}${join("", [for _ in range(local.code_1960[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1959.tape[local.iter_1959.tape_ptr]))])}"
      : local.iter_1959.output)
    
    tape = (
      local.code_1960[0] == "+"
        ? [for i, b in local.iter_1959.tape : (i == local.iter_1959.tape_ptr ? (b + local.code_1960[1]) % 256 : b)] :
      local.code_1960[0] == "-"
        ? [for i, b in local.iter_1959.tape : (i == local.iter_1959.tape_ptr ? (b - local.code_1960[1] + 256) % 256 : b)] :
      local.code_1960[0] == ","
        ? [for i, b in local.iter_1959.tape : (i == local.iter_1959.tape_ptr ? local.ascii_lookup[substr(local.input_1960, 0, 1)] : b)]
        : local.iter_1959.tape)

    tape_ptr = (
      local.code_1960[0] == "<"
        ? local.iter_1959.tape_ptr - local.code_1960[1] :
      local.code_1960[0] == ">"
        ? local.iter_1959.tape_ptr + local.code_1960[1]
        : local.iter_1959.tape_ptr)

    code_ptr = 2 + (
      local.code_1960[0] == "["
        ? local.iter_1959.tape[local.iter_1959.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1959.code_ptr)] : local.iter_1959.code_ptr :
      local.code_1960[0] == "]"
        ? local.iter_1959.tape[local.iter_1959.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1959.code_ptr)] : local.iter_1959.code_ptr
        : local.iter_1959.code_ptr)

    steps_taken = 1 + local.iter_1959.steps_taken
  }
}

locals {
  code_1961 = (try(local.iter_1960.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1960.code_ptr, local.iter_1960.code_ptr + 2)
    : [null])

  input_1961 = (local.code_1961[0] == ","
    ? substr(local.input_1960, local.code_1961[1], -1)
    : local.input_1960)

  iter_1961 = try(local.iter_1960.code_ptr >= length(var.code), true) ? local.iter_1960 : {
    output = (local.code_1961[0] == "."
      ? "${local.iter_1960.output}${join("", [for _ in range(local.code_1961[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1960.tape[local.iter_1960.tape_ptr]))])}"
      : local.iter_1960.output)
    
    tape = (
      local.code_1961[0] == "+"
        ? [for i, b in local.iter_1960.tape : (i == local.iter_1960.tape_ptr ? (b + local.code_1961[1]) % 256 : b)] :
      local.code_1961[0] == "-"
        ? [for i, b in local.iter_1960.tape : (i == local.iter_1960.tape_ptr ? (b - local.code_1961[1] + 256) % 256 : b)] :
      local.code_1961[0] == ","
        ? [for i, b in local.iter_1960.tape : (i == local.iter_1960.tape_ptr ? local.ascii_lookup[substr(local.input_1961, 0, 1)] : b)]
        : local.iter_1960.tape)

    tape_ptr = (
      local.code_1961[0] == "<"
        ? local.iter_1960.tape_ptr - local.code_1961[1] :
      local.code_1961[0] == ">"
        ? local.iter_1960.tape_ptr + local.code_1961[1]
        : local.iter_1960.tape_ptr)

    code_ptr = 2 + (
      local.code_1961[0] == "["
        ? local.iter_1960.tape[local.iter_1960.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1960.code_ptr)] : local.iter_1960.code_ptr :
      local.code_1961[0] == "]"
        ? local.iter_1960.tape[local.iter_1960.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1960.code_ptr)] : local.iter_1960.code_ptr
        : local.iter_1960.code_ptr)

    steps_taken = 1 + local.iter_1960.steps_taken
  }
}

locals {
  code_1962 = (try(local.iter_1961.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1961.code_ptr, local.iter_1961.code_ptr + 2)
    : [null])

  input_1962 = (local.code_1962[0] == ","
    ? substr(local.input_1961, local.code_1962[1], -1)
    : local.input_1961)

  iter_1962 = try(local.iter_1961.code_ptr >= length(var.code), true) ? local.iter_1961 : {
    output = (local.code_1962[0] == "."
      ? "${local.iter_1961.output}${join("", [for _ in range(local.code_1962[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1961.tape[local.iter_1961.tape_ptr]))])}"
      : local.iter_1961.output)
    
    tape = (
      local.code_1962[0] == "+"
        ? [for i, b in local.iter_1961.tape : (i == local.iter_1961.tape_ptr ? (b + local.code_1962[1]) % 256 : b)] :
      local.code_1962[0] == "-"
        ? [for i, b in local.iter_1961.tape : (i == local.iter_1961.tape_ptr ? (b - local.code_1962[1] + 256) % 256 : b)] :
      local.code_1962[0] == ","
        ? [for i, b in local.iter_1961.tape : (i == local.iter_1961.tape_ptr ? local.ascii_lookup[substr(local.input_1962, 0, 1)] : b)]
        : local.iter_1961.tape)

    tape_ptr = (
      local.code_1962[0] == "<"
        ? local.iter_1961.tape_ptr - local.code_1962[1] :
      local.code_1962[0] == ">"
        ? local.iter_1961.tape_ptr + local.code_1962[1]
        : local.iter_1961.tape_ptr)

    code_ptr = 2 + (
      local.code_1962[0] == "["
        ? local.iter_1961.tape[local.iter_1961.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1961.code_ptr)] : local.iter_1961.code_ptr :
      local.code_1962[0] == "]"
        ? local.iter_1961.tape[local.iter_1961.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1961.code_ptr)] : local.iter_1961.code_ptr
        : local.iter_1961.code_ptr)

    steps_taken = 1 + local.iter_1961.steps_taken
  }
}

locals {
  code_1963 = (try(local.iter_1962.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1962.code_ptr, local.iter_1962.code_ptr + 2)
    : [null])

  input_1963 = (local.code_1963[0] == ","
    ? substr(local.input_1962, local.code_1963[1], -1)
    : local.input_1962)

  iter_1963 = try(local.iter_1962.code_ptr >= length(var.code), true) ? local.iter_1962 : {
    output = (local.code_1963[0] == "."
      ? "${local.iter_1962.output}${join("", [for _ in range(local.code_1963[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1962.tape[local.iter_1962.tape_ptr]))])}"
      : local.iter_1962.output)
    
    tape = (
      local.code_1963[0] == "+"
        ? [for i, b in local.iter_1962.tape : (i == local.iter_1962.tape_ptr ? (b + local.code_1963[1]) % 256 : b)] :
      local.code_1963[0] == "-"
        ? [for i, b in local.iter_1962.tape : (i == local.iter_1962.tape_ptr ? (b - local.code_1963[1] + 256) % 256 : b)] :
      local.code_1963[0] == ","
        ? [for i, b in local.iter_1962.tape : (i == local.iter_1962.tape_ptr ? local.ascii_lookup[substr(local.input_1963, 0, 1)] : b)]
        : local.iter_1962.tape)

    tape_ptr = (
      local.code_1963[0] == "<"
        ? local.iter_1962.tape_ptr - local.code_1963[1] :
      local.code_1963[0] == ">"
        ? local.iter_1962.tape_ptr + local.code_1963[1]
        : local.iter_1962.tape_ptr)

    code_ptr = 2 + (
      local.code_1963[0] == "["
        ? local.iter_1962.tape[local.iter_1962.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1962.code_ptr)] : local.iter_1962.code_ptr :
      local.code_1963[0] == "]"
        ? local.iter_1962.tape[local.iter_1962.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1962.code_ptr)] : local.iter_1962.code_ptr
        : local.iter_1962.code_ptr)

    steps_taken = 1 + local.iter_1962.steps_taken
  }
}

locals {
  code_1964 = (try(local.iter_1963.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1963.code_ptr, local.iter_1963.code_ptr + 2)
    : [null])

  input_1964 = (local.code_1964[0] == ","
    ? substr(local.input_1963, local.code_1964[1], -1)
    : local.input_1963)

  iter_1964 = try(local.iter_1963.code_ptr >= length(var.code), true) ? local.iter_1963 : {
    output = (local.code_1964[0] == "."
      ? "${local.iter_1963.output}${join("", [for _ in range(local.code_1964[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1963.tape[local.iter_1963.tape_ptr]))])}"
      : local.iter_1963.output)
    
    tape = (
      local.code_1964[0] == "+"
        ? [for i, b in local.iter_1963.tape : (i == local.iter_1963.tape_ptr ? (b + local.code_1964[1]) % 256 : b)] :
      local.code_1964[0] == "-"
        ? [for i, b in local.iter_1963.tape : (i == local.iter_1963.tape_ptr ? (b - local.code_1964[1] + 256) % 256 : b)] :
      local.code_1964[0] == ","
        ? [for i, b in local.iter_1963.tape : (i == local.iter_1963.tape_ptr ? local.ascii_lookup[substr(local.input_1964, 0, 1)] : b)]
        : local.iter_1963.tape)

    tape_ptr = (
      local.code_1964[0] == "<"
        ? local.iter_1963.tape_ptr - local.code_1964[1] :
      local.code_1964[0] == ">"
        ? local.iter_1963.tape_ptr + local.code_1964[1]
        : local.iter_1963.tape_ptr)

    code_ptr = 2 + (
      local.code_1964[0] == "["
        ? local.iter_1963.tape[local.iter_1963.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1963.code_ptr)] : local.iter_1963.code_ptr :
      local.code_1964[0] == "]"
        ? local.iter_1963.tape[local.iter_1963.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1963.code_ptr)] : local.iter_1963.code_ptr
        : local.iter_1963.code_ptr)

    steps_taken = 1 + local.iter_1963.steps_taken
  }
}

locals {
  code_1965 = (try(local.iter_1964.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1964.code_ptr, local.iter_1964.code_ptr + 2)
    : [null])

  input_1965 = (local.code_1965[0] == ","
    ? substr(local.input_1964, local.code_1965[1], -1)
    : local.input_1964)

  iter_1965 = try(local.iter_1964.code_ptr >= length(var.code), true) ? local.iter_1964 : {
    output = (local.code_1965[0] == "."
      ? "${local.iter_1964.output}${join("", [for _ in range(local.code_1965[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1964.tape[local.iter_1964.tape_ptr]))])}"
      : local.iter_1964.output)
    
    tape = (
      local.code_1965[0] == "+"
        ? [for i, b in local.iter_1964.tape : (i == local.iter_1964.tape_ptr ? (b + local.code_1965[1]) % 256 : b)] :
      local.code_1965[0] == "-"
        ? [for i, b in local.iter_1964.tape : (i == local.iter_1964.tape_ptr ? (b - local.code_1965[1] + 256) % 256 : b)] :
      local.code_1965[0] == ","
        ? [for i, b in local.iter_1964.tape : (i == local.iter_1964.tape_ptr ? local.ascii_lookup[substr(local.input_1965, 0, 1)] : b)]
        : local.iter_1964.tape)

    tape_ptr = (
      local.code_1965[0] == "<"
        ? local.iter_1964.tape_ptr - local.code_1965[1] :
      local.code_1965[0] == ">"
        ? local.iter_1964.tape_ptr + local.code_1965[1]
        : local.iter_1964.tape_ptr)

    code_ptr = 2 + (
      local.code_1965[0] == "["
        ? local.iter_1964.tape[local.iter_1964.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1964.code_ptr)] : local.iter_1964.code_ptr :
      local.code_1965[0] == "]"
        ? local.iter_1964.tape[local.iter_1964.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1964.code_ptr)] : local.iter_1964.code_ptr
        : local.iter_1964.code_ptr)

    steps_taken = 1 + local.iter_1964.steps_taken
  }
}

locals {
  code_1966 = (try(local.iter_1965.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1965.code_ptr, local.iter_1965.code_ptr + 2)
    : [null])

  input_1966 = (local.code_1966[0] == ","
    ? substr(local.input_1965, local.code_1966[1], -1)
    : local.input_1965)

  iter_1966 = try(local.iter_1965.code_ptr >= length(var.code), true) ? local.iter_1965 : {
    output = (local.code_1966[0] == "."
      ? "${local.iter_1965.output}${join("", [for _ in range(local.code_1966[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1965.tape[local.iter_1965.tape_ptr]))])}"
      : local.iter_1965.output)
    
    tape = (
      local.code_1966[0] == "+"
        ? [for i, b in local.iter_1965.tape : (i == local.iter_1965.tape_ptr ? (b + local.code_1966[1]) % 256 : b)] :
      local.code_1966[0] == "-"
        ? [for i, b in local.iter_1965.tape : (i == local.iter_1965.tape_ptr ? (b - local.code_1966[1] + 256) % 256 : b)] :
      local.code_1966[0] == ","
        ? [for i, b in local.iter_1965.tape : (i == local.iter_1965.tape_ptr ? local.ascii_lookup[substr(local.input_1966, 0, 1)] : b)]
        : local.iter_1965.tape)

    tape_ptr = (
      local.code_1966[0] == "<"
        ? local.iter_1965.tape_ptr - local.code_1966[1] :
      local.code_1966[0] == ">"
        ? local.iter_1965.tape_ptr + local.code_1966[1]
        : local.iter_1965.tape_ptr)

    code_ptr = 2 + (
      local.code_1966[0] == "["
        ? local.iter_1965.tape[local.iter_1965.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1965.code_ptr)] : local.iter_1965.code_ptr :
      local.code_1966[0] == "]"
        ? local.iter_1965.tape[local.iter_1965.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1965.code_ptr)] : local.iter_1965.code_ptr
        : local.iter_1965.code_ptr)

    steps_taken = 1 + local.iter_1965.steps_taken
  }
}

locals {
  code_1967 = (try(local.iter_1966.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1966.code_ptr, local.iter_1966.code_ptr + 2)
    : [null])

  input_1967 = (local.code_1967[0] == ","
    ? substr(local.input_1966, local.code_1967[1], -1)
    : local.input_1966)

  iter_1967 = try(local.iter_1966.code_ptr >= length(var.code), true) ? local.iter_1966 : {
    output = (local.code_1967[0] == "."
      ? "${local.iter_1966.output}${join("", [for _ in range(local.code_1967[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1966.tape[local.iter_1966.tape_ptr]))])}"
      : local.iter_1966.output)
    
    tape = (
      local.code_1967[0] == "+"
        ? [for i, b in local.iter_1966.tape : (i == local.iter_1966.tape_ptr ? (b + local.code_1967[1]) % 256 : b)] :
      local.code_1967[0] == "-"
        ? [for i, b in local.iter_1966.tape : (i == local.iter_1966.tape_ptr ? (b - local.code_1967[1] + 256) % 256 : b)] :
      local.code_1967[0] == ","
        ? [for i, b in local.iter_1966.tape : (i == local.iter_1966.tape_ptr ? local.ascii_lookup[substr(local.input_1967, 0, 1)] : b)]
        : local.iter_1966.tape)

    tape_ptr = (
      local.code_1967[0] == "<"
        ? local.iter_1966.tape_ptr - local.code_1967[1] :
      local.code_1967[0] == ">"
        ? local.iter_1966.tape_ptr + local.code_1967[1]
        : local.iter_1966.tape_ptr)

    code_ptr = 2 + (
      local.code_1967[0] == "["
        ? local.iter_1966.tape[local.iter_1966.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1966.code_ptr)] : local.iter_1966.code_ptr :
      local.code_1967[0] == "]"
        ? local.iter_1966.tape[local.iter_1966.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1966.code_ptr)] : local.iter_1966.code_ptr
        : local.iter_1966.code_ptr)

    steps_taken = 1 + local.iter_1966.steps_taken
  }
}

locals {
  code_1968 = (try(local.iter_1967.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1967.code_ptr, local.iter_1967.code_ptr + 2)
    : [null])

  input_1968 = (local.code_1968[0] == ","
    ? substr(local.input_1967, local.code_1968[1], -1)
    : local.input_1967)

  iter_1968 = try(local.iter_1967.code_ptr >= length(var.code), true) ? local.iter_1967 : {
    output = (local.code_1968[0] == "."
      ? "${local.iter_1967.output}${join("", [for _ in range(local.code_1968[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1967.tape[local.iter_1967.tape_ptr]))])}"
      : local.iter_1967.output)
    
    tape = (
      local.code_1968[0] == "+"
        ? [for i, b in local.iter_1967.tape : (i == local.iter_1967.tape_ptr ? (b + local.code_1968[1]) % 256 : b)] :
      local.code_1968[0] == "-"
        ? [for i, b in local.iter_1967.tape : (i == local.iter_1967.tape_ptr ? (b - local.code_1968[1] + 256) % 256 : b)] :
      local.code_1968[0] == ","
        ? [for i, b in local.iter_1967.tape : (i == local.iter_1967.tape_ptr ? local.ascii_lookup[substr(local.input_1968, 0, 1)] : b)]
        : local.iter_1967.tape)

    tape_ptr = (
      local.code_1968[0] == "<"
        ? local.iter_1967.tape_ptr - local.code_1968[1] :
      local.code_1968[0] == ">"
        ? local.iter_1967.tape_ptr + local.code_1968[1]
        : local.iter_1967.tape_ptr)

    code_ptr = 2 + (
      local.code_1968[0] == "["
        ? local.iter_1967.tape[local.iter_1967.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1967.code_ptr)] : local.iter_1967.code_ptr :
      local.code_1968[0] == "]"
        ? local.iter_1967.tape[local.iter_1967.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1967.code_ptr)] : local.iter_1967.code_ptr
        : local.iter_1967.code_ptr)

    steps_taken = 1 + local.iter_1967.steps_taken
  }
}

locals {
  code_1969 = (try(local.iter_1968.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1968.code_ptr, local.iter_1968.code_ptr + 2)
    : [null])

  input_1969 = (local.code_1969[0] == ","
    ? substr(local.input_1968, local.code_1969[1], -1)
    : local.input_1968)

  iter_1969 = try(local.iter_1968.code_ptr >= length(var.code), true) ? local.iter_1968 : {
    output = (local.code_1969[0] == "."
      ? "${local.iter_1968.output}${join("", [for _ in range(local.code_1969[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1968.tape[local.iter_1968.tape_ptr]))])}"
      : local.iter_1968.output)
    
    tape = (
      local.code_1969[0] == "+"
        ? [for i, b in local.iter_1968.tape : (i == local.iter_1968.tape_ptr ? (b + local.code_1969[1]) % 256 : b)] :
      local.code_1969[0] == "-"
        ? [for i, b in local.iter_1968.tape : (i == local.iter_1968.tape_ptr ? (b - local.code_1969[1] + 256) % 256 : b)] :
      local.code_1969[0] == ","
        ? [for i, b in local.iter_1968.tape : (i == local.iter_1968.tape_ptr ? local.ascii_lookup[substr(local.input_1969, 0, 1)] : b)]
        : local.iter_1968.tape)

    tape_ptr = (
      local.code_1969[0] == "<"
        ? local.iter_1968.tape_ptr - local.code_1969[1] :
      local.code_1969[0] == ">"
        ? local.iter_1968.tape_ptr + local.code_1969[1]
        : local.iter_1968.tape_ptr)

    code_ptr = 2 + (
      local.code_1969[0] == "["
        ? local.iter_1968.tape[local.iter_1968.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1968.code_ptr)] : local.iter_1968.code_ptr :
      local.code_1969[0] == "]"
        ? local.iter_1968.tape[local.iter_1968.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1968.code_ptr)] : local.iter_1968.code_ptr
        : local.iter_1968.code_ptr)

    steps_taken = 1 + local.iter_1968.steps_taken
  }
}

locals {
  code_1970 = (try(local.iter_1969.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1969.code_ptr, local.iter_1969.code_ptr + 2)
    : [null])

  input_1970 = (local.code_1970[0] == ","
    ? substr(local.input_1969, local.code_1970[1], -1)
    : local.input_1969)

  iter_1970 = try(local.iter_1969.code_ptr >= length(var.code), true) ? local.iter_1969 : {
    output = (local.code_1970[0] == "."
      ? "${local.iter_1969.output}${join("", [for _ in range(local.code_1970[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1969.tape[local.iter_1969.tape_ptr]))])}"
      : local.iter_1969.output)
    
    tape = (
      local.code_1970[0] == "+"
        ? [for i, b in local.iter_1969.tape : (i == local.iter_1969.tape_ptr ? (b + local.code_1970[1]) % 256 : b)] :
      local.code_1970[0] == "-"
        ? [for i, b in local.iter_1969.tape : (i == local.iter_1969.tape_ptr ? (b - local.code_1970[1] + 256) % 256 : b)] :
      local.code_1970[0] == ","
        ? [for i, b in local.iter_1969.tape : (i == local.iter_1969.tape_ptr ? local.ascii_lookup[substr(local.input_1970, 0, 1)] : b)]
        : local.iter_1969.tape)

    tape_ptr = (
      local.code_1970[0] == "<"
        ? local.iter_1969.tape_ptr - local.code_1970[1] :
      local.code_1970[0] == ">"
        ? local.iter_1969.tape_ptr + local.code_1970[1]
        : local.iter_1969.tape_ptr)

    code_ptr = 2 + (
      local.code_1970[0] == "["
        ? local.iter_1969.tape[local.iter_1969.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1969.code_ptr)] : local.iter_1969.code_ptr :
      local.code_1970[0] == "]"
        ? local.iter_1969.tape[local.iter_1969.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1969.code_ptr)] : local.iter_1969.code_ptr
        : local.iter_1969.code_ptr)

    steps_taken = 1 + local.iter_1969.steps_taken
  }
}

locals {
  code_1971 = (try(local.iter_1970.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1970.code_ptr, local.iter_1970.code_ptr + 2)
    : [null])

  input_1971 = (local.code_1971[0] == ","
    ? substr(local.input_1970, local.code_1971[1], -1)
    : local.input_1970)

  iter_1971 = try(local.iter_1970.code_ptr >= length(var.code), true) ? local.iter_1970 : {
    output = (local.code_1971[0] == "."
      ? "${local.iter_1970.output}${join("", [for _ in range(local.code_1971[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1970.tape[local.iter_1970.tape_ptr]))])}"
      : local.iter_1970.output)
    
    tape = (
      local.code_1971[0] == "+"
        ? [for i, b in local.iter_1970.tape : (i == local.iter_1970.tape_ptr ? (b + local.code_1971[1]) % 256 : b)] :
      local.code_1971[0] == "-"
        ? [for i, b in local.iter_1970.tape : (i == local.iter_1970.tape_ptr ? (b - local.code_1971[1] + 256) % 256 : b)] :
      local.code_1971[0] == ","
        ? [for i, b in local.iter_1970.tape : (i == local.iter_1970.tape_ptr ? local.ascii_lookup[substr(local.input_1971, 0, 1)] : b)]
        : local.iter_1970.tape)

    tape_ptr = (
      local.code_1971[0] == "<"
        ? local.iter_1970.tape_ptr - local.code_1971[1] :
      local.code_1971[0] == ">"
        ? local.iter_1970.tape_ptr + local.code_1971[1]
        : local.iter_1970.tape_ptr)

    code_ptr = 2 + (
      local.code_1971[0] == "["
        ? local.iter_1970.tape[local.iter_1970.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1970.code_ptr)] : local.iter_1970.code_ptr :
      local.code_1971[0] == "]"
        ? local.iter_1970.tape[local.iter_1970.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1970.code_ptr)] : local.iter_1970.code_ptr
        : local.iter_1970.code_ptr)

    steps_taken = 1 + local.iter_1970.steps_taken
  }
}

locals {
  code_1972 = (try(local.iter_1971.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1971.code_ptr, local.iter_1971.code_ptr + 2)
    : [null])

  input_1972 = (local.code_1972[0] == ","
    ? substr(local.input_1971, local.code_1972[1], -1)
    : local.input_1971)

  iter_1972 = try(local.iter_1971.code_ptr >= length(var.code), true) ? local.iter_1971 : {
    output = (local.code_1972[0] == "."
      ? "${local.iter_1971.output}${join("", [for _ in range(local.code_1972[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1971.tape[local.iter_1971.tape_ptr]))])}"
      : local.iter_1971.output)
    
    tape = (
      local.code_1972[0] == "+"
        ? [for i, b in local.iter_1971.tape : (i == local.iter_1971.tape_ptr ? (b + local.code_1972[1]) % 256 : b)] :
      local.code_1972[0] == "-"
        ? [for i, b in local.iter_1971.tape : (i == local.iter_1971.tape_ptr ? (b - local.code_1972[1] + 256) % 256 : b)] :
      local.code_1972[0] == ","
        ? [for i, b in local.iter_1971.tape : (i == local.iter_1971.tape_ptr ? local.ascii_lookup[substr(local.input_1972, 0, 1)] : b)]
        : local.iter_1971.tape)

    tape_ptr = (
      local.code_1972[0] == "<"
        ? local.iter_1971.tape_ptr - local.code_1972[1] :
      local.code_1972[0] == ">"
        ? local.iter_1971.tape_ptr + local.code_1972[1]
        : local.iter_1971.tape_ptr)

    code_ptr = 2 + (
      local.code_1972[0] == "["
        ? local.iter_1971.tape[local.iter_1971.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1971.code_ptr)] : local.iter_1971.code_ptr :
      local.code_1972[0] == "]"
        ? local.iter_1971.tape[local.iter_1971.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1971.code_ptr)] : local.iter_1971.code_ptr
        : local.iter_1971.code_ptr)

    steps_taken = 1 + local.iter_1971.steps_taken
  }
}

locals {
  code_1973 = (try(local.iter_1972.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1972.code_ptr, local.iter_1972.code_ptr + 2)
    : [null])

  input_1973 = (local.code_1973[0] == ","
    ? substr(local.input_1972, local.code_1973[1], -1)
    : local.input_1972)

  iter_1973 = try(local.iter_1972.code_ptr >= length(var.code), true) ? local.iter_1972 : {
    output = (local.code_1973[0] == "."
      ? "${local.iter_1972.output}${join("", [for _ in range(local.code_1973[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1972.tape[local.iter_1972.tape_ptr]))])}"
      : local.iter_1972.output)
    
    tape = (
      local.code_1973[0] == "+"
        ? [for i, b in local.iter_1972.tape : (i == local.iter_1972.tape_ptr ? (b + local.code_1973[1]) % 256 : b)] :
      local.code_1973[0] == "-"
        ? [for i, b in local.iter_1972.tape : (i == local.iter_1972.tape_ptr ? (b - local.code_1973[1] + 256) % 256 : b)] :
      local.code_1973[0] == ","
        ? [for i, b in local.iter_1972.tape : (i == local.iter_1972.tape_ptr ? local.ascii_lookup[substr(local.input_1973, 0, 1)] : b)]
        : local.iter_1972.tape)

    tape_ptr = (
      local.code_1973[0] == "<"
        ? local.iter_1972.tape_ptr - local.code_1973[1] :
      local.code_1973[0] == ">"
        ? local.iter_1972.tape_ptr + local.code_1973[1]
        : local.iter_1972.tape_ptr)

    code_ptr = 2 + (
      local.code_1973[0] == "["
        ? local.iter_1972.tape[local.iter_1972.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1972.code_ptr)] : local.iter_1972.code_ptr :
      local.code_1973[0] == "]"
        ? local.iter_1972.tape[local.iter_1972.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1972.code_ptr)] : local.iter_1972.code_ptr
        : local.iter_1972.code_ptr)

    steps_taken = 1 + local.iter_1972.steps_taken
  }
}

locals {
  code_1974 = (try(local.iter_1973.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1973.code_ptr, local.iter_1973.code_ptr + 2)
    : [null])

  input_1974 = (local.code_1974[0] == ","
    ? substr(local.input_1973, local.code_1974[1], -1)
    : local.input_1973)

  iter_1974 = try(local.iter_1973.code_ptr >= length(var.code), true) ? local.iter_1973 : {
    output = (local.code_1974[0] == "."
      ? "${local.iter_1973.output}${join("", [for _ in range(local.code_1974[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1973.tape[local.iter_1973.tape_ptr]))])}"
      : local.iter_1973.output)
    
    tape = (
      local.code_1974[0] == "+"
        ? [for i, b in local.iter_1973.tape : (i == local.iter_1973.tape_ptr ? (b + local.code_1974[1]) % 256 : b)] :
      local.code_1974[0] == "-"
        ? [for i, b in local.iter_1973.tape : (i == local.iter_1973.tape_ptr ? (b - local.code_1974[1] + 256) % 256 : b)] :
      local.code_1974[0] == ","
        ? [for i, b in local.iter_1973.tape : (i == local.iter_1973.tape_ptr ? local.ascii_lookup[substr(local.input_1974, 0, 1)] : b)]
        : local.iter_1973.tape)

    tape_ptr = (
      local.code_1974[0] == "<"
        ? local.iter_1973.tape_ptr - local.code_1974[1] :
      local.code_1974[0] == ">"
        ? local.iter_1973.tape_ptr + local.code_1974[1]
        : local.iter_1973.tape_ptr)

    code_ptr = 2 + (
      local.code_1974[0] == "["
        ? local.iter_1973.tape[local.iter_1973.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1973.code_ptr)] : local.iter_1973.code_ptr :
      local.code_1974[0] == "]"
        ? local.iter_1973.tape[local.iter_1973.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1973.code_ptr)] : local.iter_1973.code_ptr
        : local.iter_1973.code_ptr)

    steps_taken = 1 + local.iter_1973.steps_taken
  }
}

locals {
  code_1975 = (try(local.iter_1974.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1974.code_ptr, local.iter_1974.code_ptr + 2)
    : [null])

  input_1975 = (local.code_1975[0] == ","
    ? substr(local.input_1974, local.code_1975[1], -1)
    : local.input_1974)

  iter_1975 = try(local.iter_1974.code_ptr >= length(var.code), true) ? local.iter_1974 : {
    output = (local.code_1975[0] == "."
      ? "${local.iter_1974.output}${join("", [for _ in range(local.code_1975[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1974.tape[local.iter_1974.tape_ptr]))])}"
      : local.iter_1974.output)
    
    tape = (
      local.code_1975[0] == "+"
        ? [for i, b in local.iter_1974.tape : (i == local.iter_1974.tape_ptr ? (b + local.code_1975[1]) % 256 : b)] :
      local.code_1975[0] == "-"
        ? [for i, b in local.iter_1974.tape : (i == local.iter_1974.tape_ptr ? (b - local.code_1975[1] + 256) % 256 : b)] :
      local.code_1975[0] == ","
        ? [for i, b in local.iter_1974.tape : (i == local.iter_1974.tape_ptr ? local.ascii_lookup[substr(local.input_1975, 0, 1)] : b)]
        : local.iter_1974.tape)

    tape_ptr = (
      local.code_1975[0] == "<"
        ? local.iter_1974.tape_ptr - local.code_1975[1] :
      local.code_1975[0] == ">"
        ? local.iter_1974.tape_ptr + local.code_1975[1]
        : local.iter_1974.tape_ptr)

    code_ptr = 2 + (
      local.code_1975[0] == "["
        ? local.iter_1974.tape[local.iter_1974.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1974.code_ptr)] : local.iter_1974.code_ptr :
      local.code_1975[0] == "]"
        ? local.iter_1974.tape[local.iter_1974.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1974.code_ptr)] : local.iter_1974.code_ptr
        : local.iter_1974.code_ptr)

    steps_taken = 1 + local.iter_1974.steps_taken
  }
}

locals {
  code_1976 = (try(local.iter_1975.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1975.code_ptr, local.iter_1975.code_ptr + 2)
    : [null])

  input_1976 = (local.code_1976[0] == ","
    ? substr(local.input_1975, local.code_1976[1], -1)
    : local.input_1975)

  iter_1976 = try(local.iter_1975.code_ptr >= length(var.code), true) ? local.iter_1975 : {
    output = (local.code_1976[0] == "."
      ? "${local.iter_1975.output}${join("", [for _ in range(local.code_1976[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1975.tape[local.iter_1975.tape_ptr]))])}"
      : local.iter_1975.output)
    
    tape = (
      local.code_1976[0] == "+"
        ? [for i, b in local.iter_1975.tape : (i == local.iter_1975.tape_ptr ? (b + local.code_1976[1]) % 256 : b)] :
      local.code_1976[0] == "-"
        ? [for i, b in local.iter_1975.tape : (i == local.iter_1975.tape_ptr ? (b - local.code_1976[1] + 256) % 256 : b)] :
      local.code_1976[0] == ","
        ? [for i, b in local.iter_1975.tape : (i == local.iter_1975.tape_ptr ? local.ascii_lookup[substr(local.input_1976, 0, 1)] : b)]
        : local.iter_1975.tape)

    tape_ptr = (
      local.code_1976[0] == "<"
        ? local.iter_1975.tape_ptr - local.code_1976[1] :
      local.code_1976[0] == ">"
        ? local.iter_1975.tape_ptr + local.code_1976[1]
        : local.iter_1975.tape_ptr)

    code_ptr = 2 + (
      local.code_1976[0] == "["
        ? local.iter_1975.tape[local.iter_1975.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1975.code_ptr)] : local.iter_1975.code_ptr :
      local.code_1976[0] == "]"
        ? local.iter_1975.tape[local.iter_1975.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1975.code_ptr)] : local.iter_1975.code_ptr
        : local.iter_1975.code_ptr)

    steps_taken = 1 + local.iter_1975.steps_taken
  }
}

locals {
  code_1977 = (try(local.iter_1976.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1976.code_ptr, local.iter_1976.code_ptr + 2)
    : [null])

  input_1977 = (local.code_1977[0] == ","
    ? substr(local.input_1976, local.code_1977[1], -1)
    : local.input_1976)

  iter_1977 = try(local.iter_1976.code_ptr >= length(var.code), true) ? local.iter_1976 : {
    output = (local.code_1977[0] == "."
      ? "${local.iter_1976.output}${join("", [for _ in range(local.code_1977[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1976.tape[local.iter_1976.tape_ptr]))])}"
      : local.iter_1976.output)
    
    tape = (
      local.code_1977[0] == "+"
        ? [for i, b in local.iter_1976.tape : (i == local.iter_1976.tape_ptr ? (b + local.code_1977[1]) % 256 : b)] :
      local.code_1977[0] == "-"
        ? [for i, b in local.iter_1976.tape : (i == local.iter_1976.tape_ptr ? (b - local.code_1977[1] + 256) % 256 : b)] :
      local.code_1977[0] == ","
        ? [for i, b in local.iter_1976.tape : (i == local.iter_1976.tape_ptr ? local.ascii_lookup[substr(local.input_1977, 0, 1)] : b)]
        : local.iter_1976.tape)

    tape_ptr = (
      local.code_1977[0] == "<"
        ? local.iter_1976.tape_ptr - local.code_1977[1] :
      local.code_1977[0] == ">"
        ? local.iter_1976.tape_ptr + local.code_1977[1]
        : local.iter_1976.tape_ptr)

    code_ptr = 2 + (
      local.code_1977[0] == "["
        ? local.iter_1976.tape[local.iter_1976.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1976.code_ptr)] : local.iter_1976.code_ptr :
      local.code_1977[0] == "]"
        ? local.iter_1976.tape[local.iter_1976.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1976.code_ptr)] : local.iter_1976.code_ptr
        : local.iter_1976.code_ptr)

    steps_taken = 1 + local.iter_1976.steps_taken
  }
}

locals {
  code_1978 = (try(local.iter_1977.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1977.code_ptr, local.iter_1977.code_ptr + 2)
    : [null])

  input_1978 = (local.code_1978[0] == ","
    ? substr(local.input_1977, local.code_1978[1], -1)
    : local.input_1977)

  iter_1978 = try(local.iter_1977.code_ptr >= length(var.code), true) ? local.iter_1977 : {
    output = (local.code_1978[0] == "."
      ? "${local.iter_1977.output}${join("", [for _ in range(local.code_1978[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1977.tape[local.iter_1977.tape_ptr]))])}"
      : local.iter_1977.output)
    
    tape = (
      local.code_1978[0] == "+"
        ? [for i, b in local.iter_1977.tape : (i == local.iter_1977.tape_ptr ? (b + local.code_1978[1]) % 256 : b)] :
      local.code_1978[0] == "-"
        ? [for i, b in local.iter_1977.tape : (i == local.iter_1977.tape_ptr ? (b - local.code_1978[1] + 256) % 256 : b)] :
      local.code_1978[0] == ","
        ? [for i, b in local.iter_1977.tape : (i == local.iter_1977.tape_ptr ? local.ascii_lookup[substr(local.input_1978, 0, 1)] : b)]
        : local.iter_1977.tape)

    tape_ptr = (
      local.code_1978[0] == "<"
        ? local.iter_1977.tape_ptr - local.code_1978[1] :
      local.code_1978[0] == ">"
        ? local.iter_1977.tape_ptr + local.code_1978[1]
        : local.iter_1977.tape_ptr)

    code_ptr = 2 + (
      local.code_1978[0] == "["
        ? local.iter_1977.tape[local.iter_1977.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1977.code_ptr)] : local.iter_1977.code_ptr :
      local.code_1978[0] == "]"
        ? local.iter_1977.tape[local.iter_1977.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1977.code_ptr)] : local.iter_1977.code_ptr
        : local.iter_1977.code_ptr)

    steps_taken = 1 + local.iter_1977.steps_taken
  }
}

locals {
  code_1979 = (try(local.iter_1978.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1978.code_ptr, local.iter_1978.code_ptr + 2)
    : [null])

  input_1979 = (local.code_1979[0] == ","
    ? substr(local.input_1978, local.code_1979[1], -1)
    : local.input_1978)

  iter_1979 = try(local.iter_1978.code_ptr >= length(var.code), true) ? local.iter_1978 : {
    output = (local.code_1979[0] == "."
      ? "${local.iter_1978.output}${join("", [for _ in range(local.code_1979[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1978.tape[local.iter_1978.tape_ptr]))])}"
      : local.iter_1978.output)
    
    tape = (
      local.code_1979[0] == "+"
        ? [for i, b in local.iter_1978.tape : (i == local.iter_1978.tape_ptr ? (b + local.code_1979[1]) % 256 : b)] :
      local.code_1979[0] == "-"
        ? [for i, b in local.iter_1978.tape : (i == local.iter_1978.tape_ptr ? (b - local.code_1979[1] + 256) % 256 : b)] :
      local.code_1979[0] == ","
        ? [for i, b in local.iter_1978.tape : (i == local.iter_1978.tape_ptr ? local.ascii_lookup[substr(local.input_1979, 0, 1)] : b)]
        : local.iter_1978.tape)

    tape_ptr = (
      local.code_1979[0] == "<"
        ? local.iter_1978.tape_ptr - local.code_1979[1] :
      local.code_1979[0] == ">"
        ? local.iter_1978.tape_ptr + local.code_1979[1]
        : local.iter_1978.tape_ptr)

    code_ptr = 2 + (
      local.code_1979[0] == "["
        ? local.iter_1978.tape[local.iter_1978.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1978.code_ptr)] : local.iter_1978.code_ptr :
      local.code_1979[0] == "]"
        ? local.iter_1978.tape[local.iter_1978.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1978.code_ptr)] : local.iter_1978.code_ptr
        : local.iter_1978.code_ptr)

    steps_taken = 1 + local.iter_1978.steps_taken
  }
}

locals {
  code_1980 = (try(local.iter_1979.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1979.code_ptr, local.iter_1979.code_ptr + 2)
    : [null])

  input_1980 = (local.code_1980[0] == ","
    ? substr(local.input_1979, local.code_1980[1], -1)
    : local.input_1979)

  iter_1980 = try(local.iter_1979.code_ptr >= length(var.code), true) ? local.iter_1979 : {
    output = (local.code_1980[0] == "."
      ? "${local.iter_1979.output}${join("", [for _ in range(local.code_1980[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1979.tape[local.iter_1979.tape_ptr]))])}"
      : local.iter_1979.output)
    
    tape = (
      local.code_1980[0] == "+"
        ? [for i, b in local.iter_1979.tape : (i == local.iter_1979.tape_ptr ? (b + local.code_1980[1]) % 256 : b)] :
      local.code_1980[0] == "-"
        ? [for i, b in local.iter_1979.tape : (i == local.iter_1979.tape_ptr ? (b - local.code_1980[1] + 256) % 256 : b)] :
      local.code_1980[0] == ","
        ? [for i, b in local.iter_1979.tape : (i == local.iter_1979.tape_ptr ? local.ascii_lookup[substr(local.input_1980, 0, 1)] : b)]
        : local.iter_1979.tape)

    tape_ptr = (
      local.code_1980[0] == "<"
        ? local.iter_1979.tape_ptr - local.code_1980[1] :
      local.code_1980[0] == ">"
        ? local.iter_1979.tape_ptr + local.code_1980[1]
        : local.iter_1979.tape_ptr)

    code_ptr = 2 + (
      local.code_1980[0] == "["
        ? local.iter_1979.tape[local.iter_1979.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1979.code_ptr)] : local.iter_1979.code_ptr :
      local.code_1980[0] == "]"
        ? local.iter_1979.tape[local.iter_1979.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1979.code_ptr)] : local.iter_1979.code_ptr
        : local.iter_1979.code_ptr)

    steps_taken = 1 + local.iter_1979.steps_taken
  }
}

locals {
  code_1981 = (try(local.iter_1980.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1980.code_ptr, local.iter_1980.code_ptr + 2)
    : [null])

  input_1981 = (local.code_1981[0] == ","
    ? substr(local.input_1980, local.code_1981[1], -1)
    : local.input_1980)

  iter_1981 = try(local.iter_1980.code_ptr >= length(var.code), true) ? local.iter_1980 : {
    output = (local.code_1981[0] == "."
      ? "${local.iter_1980.output}${join("", [for _ in range(local.code_1981[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1980.tape[local.iter_1980.tape_ptr]))])}"
      : local.iter_1980.output)
    
    tape = (
      local.code_1981[0] == "+"
        ? [for i, b in local.iter_1980.tape : (i == local.iter_1980.tape_ptr ? (b + local.code_1981[1]) % 256 : b)] :
      local.code_1981[0] == "-"
        ? [for i, b in local.iter_1980.tape : (i == local.iter_1980.tape_ptr ? (b - local.code_1981[1] + 256) % 256 : b)] :
      local.code_1981[0] == ","
        ? [for i, b in local.iter_1980.tape : (i == local.iter_1980.tape_ptr ? local.ascii_lookup[substr(local.input_1981, 0, 1)] : b)]
        : local.iter_1980.tape)

    tape_ptr = (
      local.code_1981[0] == "<"
        ? local.iter_1980.tape_ptr - local.code_1981[1] :
      local.code_1981[0] == ">"
        ? local.iter_1980.tape_ptr + local.code_1981[1]
        : local.iter_1980.tape_ptr)

    code_ptr = 2 + (
      local.code_1981[0] == "["
        ? local.iter_1980.tape[local.iter_1980.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1980.code_ptr)] : local.iter_1980.code_ptr :
      local.code_1981[0] == "]"
        ? local.iter_1980.tape[local.iter_1980.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1980.code_ptr)] : local.iter_1980.code_ptr
        : local.iter_1980.code_ptr)

    steps_taken = 1 + local.iter_1980.steps_taken
  }
}

locals {
  code_1982 = (try(local.iter_1981.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1981.code_ptr, local.iter_1981.code_ptr + 2)
    : [null])

  input_1982 = (local.code_1982[0] == ","
    ? substr(local.input_1981, local.code_1982[1], -1)
    : local.input_1981)

  iter_1982 = try(local.iter_1981.code_ptr >= length(var.code), true) ? local.iter_1981 : {
    output = (local.code_1982[0] == "."
      ? "${local.iter_1981.output}${join("", [for _ in range(local.code_1982[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1981.tape[local.iter_1981.tape_ptr]))])}"
      : local.iter_1981.output)
    
    tape = (
      local.code_1982[0] == "+"
        ? [for i, b in local.iter_1981.tape : (i == local.iter_1981.tape_ptr ? (b + local.code_1982[1]) % 256 : b)] :
      local.code_1982[0] == "-"
        ? [for i, b in local.iter_1981.tape : (i == local.iter_1981.tape_ptr ? (b - local.code_1982[1] + 256) % 256 : b)] :
      local.code_1982[0] == ","
        ? [for i, b in local.iter_1981.tape : (i == local.iter_1981.tape_ptr ? local.ascii_lookup[substr(local.input_1982, 0, 1)] : b)]
        : local.iter_1981.tape)

    tape_ptr = (
      local.code_1982[0] == "<"
        ? local.iter_1981.tape_ptr - local.code_1982[1] :
      local.code_1982[0] == ">"
        ? local.iter_1981.tape_ptr + local.code_1982[1]
        : local.iter_1981.tape_ptr)

    code_ptr = 2 + (
      local.code_1982[0] == "["
        ? local.iter_1981.tape[local.iter_1981.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1981.code_ptr)] : local.iter_1981.code_ptr :
      local.code_1982[0] == "]"
        ? local.iter_1981.tape[local.iter_1981.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1981.code_ptr)] : local.iter_1981.code_ptr
        : local.iter_1981.code_ptr)

    steps_taken = 1 + local.iter_1981.steps_taken
  }
}

locals {
  code_1983 = (try(local.iter_1982.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1982.code_ptr, local.iter_1982.code_ptr + 2)
    : [null])

  input_1983 = (local.code_1983[0] == ","
    ? substr(local.input_1982, local.code_1983[1], -1)
    : local.input_1982)

  iter_1983 = try(local.iter_1982.code_ptr >= length(var.code), true) ? local.iter_1982 : {
    output = (local.code_1983[0] == "."
      ? "${local.iter_1982.output}${join("", [for _ in range(local.code_1983[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1982.tape[local.iter_1982.tape_ptr]))])}"
      : local.iter_1982.output)
    
    tape = (
      local.code_1983[0] == "+"
        ? [for i, b in local.iter_1982.tape : (i == local.iter_1982.tape_ptr ? (b + local.code_1983[1]) % 256 : b)] :
      local.code_1983[0] == "-"
        ? [for i, b in local.iter_1982.tape : (i == local.iter_1982.tape_ptr ? (b - local.code_1983[1] + 256) % 256 : b)] :
      local.code_1983[0] == ","
        ? [for i, b in local.iter_1982.tape : (i == local.iter_1982.tape_ptr ? local.ascii_lookup[substr(local.input_1983, 0, 1)] : b)]
        : local.iter_1982.tape)

    tape_ptr = (
      local.code_1983[0] == "<"
        ? local.iter_1982.tape_ptr - local.code_1983[1] :
      local.code_1983[0] == ">"
        ? local.iter_1982.tape_ptr + local.code_1983[1]
        : local.iter_1982.tape_ptr)

    code_ptr = 2 + (
      local.code_1983[0] == "["
        ? local.iter_1982.tape[local.iter_1982.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1982.code_ptr)] : local.iter_1982.code_ptr :
      local.code_1983[0] == "]"
        ? local.iter_1982.tape[local.iter_1982.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1982.code_ptr)] : local.iter_1982.code_ptr
        : local.iter_1982.code_ptr)

    steps_taken = 1 + local.iter_1982.steps_taken
  }
}

locals {
  code_1984 = (try(local.iter_1983.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1983.code_ptr, local.iter_1983.code_ptr + 2)
    : [null])

  input_1984 = (local.code_1984[0] == ","
    ? substr(local.input_1983, local.code_1984[1], -1)
    : local.input_1983)

  iter_1984 = try(local.iter_1983.code_ptr >= length(var.code), true) ? local.iter_1983 : {
    output = (local.code_1984[0] == "."
      ? "${local.iter_1983.output}${join("", [for _ in range(local.code_1984[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1983.tape[local.iter_1983.tape_ptr]))])}"
      : local.iter_1983.output)
    
    tape = (
      local.code_1984[0] == "+"
        ? [for i, b in local.iter_1983.tape : (i == local.iter_1983.tape_ptr ? (b + local.code_1984[1]) % 256 : b)] :
      local.code_1984[0] == "-"
        ? [for i, b in local.iter_1983.tape : (i == local.iter_1983.tape_ptr ? (b - local.code_1984[1] + 256) % 256 : b)] :
      local.code_1984[0] == ","
        ? [for i, b in local.iter_1983.tape : (i == local.iter_1983.tape_ptr ? local.ascii_lookup[substr(local.input_1984, 0, 1)] : b)]
        : local.iter_1983.tape)

    tape_ptr = (
      local.code_1984[0] == "<"
        ? local.iter_1983.tape_ptr - local.code_1984[1] :
      local.code_1984[0] == ">"
        ? local.iter_1983.tape_ptr + local.code_1984[1]
        : local.iter_1983.tape_ptr)

    code_ptr = 2 + (
      local.code_1984[0] == "["
        ? local.iter_1983.tape[local.iter_1983.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1983.code_ptr)] : local.iter_1983.code_ptr :
      local.code_1984[0] == "]"
        ? local.iter_1983.tape[local.iter_1983.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1983.code_ptr)] : local.iter_1983.code_ptr
        : local.iter_1983.code_ptr)

    steps_taken = 1 + local.iter_1983.steps_taken
  }
}

locals {
  code_1985 = (try(local.iter_1984.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1984.code_ptr, local.iter_1984.code_ptr + 2)
    : [null])

  input_1985 = (local.code_1985[0] == ","
    ? substr(local.input_1984, local.code_1985[1], -1)
    : local.input_1984)

  iter_1985 = try(local.iter_1984.code_ptr >= length(var.code), true) ? local.iter_1984 : {
    output = (local.code_1985[0] == "."
      ? "${local.iter_1984.output}${join("", [for _ in range(local.code_1985[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1984.tape[local.iter_1984.tape_ptr]))])}"
      : local.iter_1984.output)
    
    tape = (
      local.code_1985[0] == "+"
        ? [for i, b in local.iter_1984.tape : (i == local.iter_1984.tape_ptr ? (b + local.code_1985[1]) % 256 : b)] :
      local.code_1985[0] == "-"
        ? [for i, b in local.iter_1984.tape : (i == local.iter_1984.tape_ptr ? (b - local.code_1985[1] + 256) % 256 : b)] :
      local.code_1985[0] == ","
        ? [for i, b in local.iter_1984.tape : (i == local.iter_1984.tape_ptr ? local.ascii_lookup[substr(local.input_1985, 0, 1)] : b)]
        : local.iter_1984.tape)

    tape_ptr = (
      local.code_1985[0] == "<"
        ? local.iter_1984.tape_ptr - local.code_1985[1] :
      local.code_1985[0] == ">"
        ? local.iter_1984.tape_ptr + local.code_1985[1]
        : local.iter_1984.tape_ptr)

    code_ptr = 2 + (
      local.code_1985[0] == "["
        ? local.iter_1984.tape[local.iter_1984.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1984.code_ptr)] : local.iter_1984.code_ptr :
      local.code_1985[0] == "]"
        ? local.iter_1984.tape[local.iter_1984.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1984.code_ptr)] : local.iter_1984.code_ptr
        : local.iter_1984.code_ptr)

    steps_taken = 1 + local.iter_1984.steps_taken
  }
}

locals {
  code_1986 = (try(local.iter_1985.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1985.code_ptr, local.iter_1985.code_ptr + 2)
    : [null])

  input_1986 = (local.code_1986[0] == ","
    ? substr(local.input_1985, local.code_1986[1], -1)
    : local.input_1985)

  iter_1986 = try(local.iter_1985.code_ptr >= length(var.code), true) ? local.iter_1985 : {
    output = (local.code_1986[0] == "."
      ? "${local.iter_1985.output}${join("", [for _ in range(local.code_1986[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1985.tape[local.iter_1985.tape_ptr]))])}"
      : local.iter_1985.output)
    
    tape = (
      local.code_1986[0] == "+"
        ? [for i, b in local.iter_1985.tape : (i == local.iter_1985.tape_ptr ? (b + local.code_1986[1]) % 256 : b)] :
      local.code_1986[0] == "-"
        ? [for i, b in local.iter_1985.tape : (i == local.iter_1985.tape_ptr ? (b - local.code_1986[1] + 256) % 256 : b)] :
      local.code_1986[0] == ","
        ? [for i, b in local.iter_1985.tape : (i == local.iter_1985.tape_ptr ? local.ascii_lookup[substr(local.input_1986, 0, 1)] : b)]
        : local.iter_1985.tape)

    tape_ptr = (
      local.code_1986[0] == "<"
        ? local.iter_1985.tape_ptr - local.code_1986[1] :
      local.code_1986[0] == ">"
        ? local.iter_1985.tape_ptr + local.code_1986[1]
        : local.iter_1985.tape_ptr)

    code_ptr = 2 + (
      local.code_1986[0] == "["
        ? local.iter_1985.tape[local.iter_1985.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1985.code_ptr)] : local.iter_1985.code_ptr :
      local.code_1986[0] == "]"
        ? local.iter_1985.tape[local.iter_1985.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1985.code_ptr)] : local.iter_1985.code_ptr
        : local.iter_1985.code_ptr)

    steps_taken = 1 + local.iter_1985.steps_taken
  }
}

locals {
  code_1987 = (try(local.iter_1986.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1986.code_ptr, local.iter_1986.code_ptr + 2)
    : [null])

  input_1987 = (local.code_1987[0] == ","
    ? substr(local.input_1986, local.code_1987[1], -1)
    : local.input_1986)

  iter_1987 = try(local.iter_1986.code_ptr >= length(var.code), true) ? local.iter_1986 : {
    output = (local.code_1987[0] == "."
      ? "${local.iter_1986.output}${join("", [for _ in range(local.code_1987[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1986.tape[local.iter_1986.tape_ptr]))])}"
      : local.iter_1986.output)
    
    tape = (
      local.code_1987[0] == "+"
        ? [for i, b in local.iter_1986.tape : (i == local.iter_1986.tape_ptr ? (b + local.code_1987[1]) % 256 : b)] :
      local.code_1987[0] == "-"
        ? [for i, b in local.iter_1986.tape : (i == local.iter_1986.tape_ptr ? (b - local.code_1987[1] + 256) % 256 : b)] :
      local.code_1987[0] == ","
        ? [for i, b in local.iter_1986.tape : (i == local.iter_1986.tape_ptr ? local.ascii_lookup[substr(local.input_1987, 0, 1)] : b)]
        : local.iter_1986.tape)

    tape_ptr = (
      local.code_1987[0] == "<"
        ? local.iter_1986.tape_ptr - local.code_1987[1] :
      local.code_1987[0] == ">"
        ? local.iter_1986.tape_ptr + local.code_1987[1]
        : local.iter_1986.tape_ptr)

    code_ptr = 2 + (
      local.code_1987[0] == "["
        ? local.iter_1986.tape[local.iter_1986.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1986.code_ptr)] : local.iter_1986.code_ptr :
      local.code_1987[0] == "]"
        ? local.iter_1986.tape[local.iter_1986.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1986.code_ptr)] : local.iter_1986.code_ptr
        : local.iter_1986.code_ptr)

    steps_taken = 1 + local.iter_1986.steps_taken
  }
}

locals {
  code_1988 = (try(local.iter_1987.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1987.code_ptr, local.iter_1987.code_ptr + 2)
    : [null])

  input_1988 = (local.code_1988[0] == ","
    ? substr(local.input_1987, local.code_1988[1], -1)
    : local.input_1987)

  iter_1988 = try(local.iter_1987.code_ptr >= length(var.code), true) ? local.iter_1987 : {
    output = (local.code_1988[0] == "."
      ? "${local.iter_1987.output}${join("", [for _ in range(local.code_1988[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1987.tape[local.iter_1987.tape_ptr]))])}"
      : local.iter_1987.output)
    
    tape = (
      local.code_1988[0] == "+"
        ? [for i, b in local.iter_1987.tape : (i == local.iter_1987.tape_ptr ? (b + local.code_1988[1]) % 256 : b)] :
      local.code_1988[0] == "-"
        ? [for i, b in local.iter_1987.tape : (i == local.iter_1987.tape_ptr ? (b - local.code_1988[1] + 256) % 256 : b)] :
      local.code_1988[0] == ","
        ? [for i, b in local.iter_1987.tape : (i == local.iter_1987.tape_ptr ? local.ascii_lookup[substr(local.input_1988, 0, 1)] : b)]
        : local.iter_1987.tape)

    tape_ptr = (
      local.code_1988[0] == "<"
        ? local.iter_1987.tape_ptr - local.code_1988[1] :
      local.code_1988[0] == ">"
        ? local.iter_1987.tape_ptr + local.code_1988[1]
        : local.iter_1987.tape_ptr)

    code_ptr = 2 + (
      local.code_1988[0] == "["
        ? local.iter_1987.tape[local.iter_1987.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1987.code_ptr)] : local.iter_1987.code_ptr :
      local.code_1988[0] == "]"
        ? local.iter_1987.tape[local.iter_1987.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1987.code_ptr)] : local.iter_1987.code_ptr
        : local.iter_1987.code_ptr)

    steps_taken = 1 + local.iter_1987.steps_taken
  }
}

locals {
  code_1989 = (try(local.iter_1988.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1988.code_ptr, local.iter_1988.code_ptr + 2)
    : [null])

  input_1989 = (local.code_1989[0] == ","
    ? substr(local.input_1988, local.code_1989[1], -1)
    : local.input_1988)

  iter_1989 = try(local.iter_1988.code_ptr >= length(var.code), true) ? local.iter_1988 : {
    output = (local.code_1989[0] == "."
      ? "${local.iter_1988.output}${join("", [for _ in range(local.code_1989[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1988.tape[local.iter_1988.tape_ptr]))])}"
      : local.iter_1988.output)
    
    tape = (
      local.code_1989[0] == "+"
        ? [for i, b in local.iter_1988.tape : (i == local.iter_1988.tape_ptr ? (b + local.code_1989[1]) % 256 : b)] :
      local.code_1989[0] == "-"
        ? [for i, b in local.iter_1988.tape : (i == local.iter_1988.tape_ptr ? (b - local.code_1989[1] + 256) % 256 : b)] :
      local.code_1989[0] == ","
        ? [for i, b in local.iter_1988.tape : (i == local.iter_1988.tape_ptr ? local.ascii_lookup[substr(local.input_1989, 0, 1)] : b)]
        : local.iter_1988.tape)

    tape_ptr = (
      local.code_1989[0] == "<"
        ? local.iter_1988.tape_ptr - local.code_1989[1] :
      local.code_1989[0] == ">"
        ? local.iter_1988.tape_ptr + local.code_1989[1]
        : local.iter_1988.tape_ptr)

    code_ptr = 2 + (
      local.code_1989[0] == "["
        ? local.iter_1988.tape[local.iter_1988.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1988.code_ptr)] : local.iter_1988.code_ptr :
      local.code_1989[0] == "]"
        ? local.iter_1988.tape[local.iter_1988.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1988.code_ptr)] : local.iter_1988.code_ptr
        : local.iter_1988.code_ptr)

    steps_taken = 1 + local.iter_1988.steps_taken
  }
}

locals {
  code_1990 = (try(local.iter_1989.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1989.code_ptr, local.iter_1989.code_ptr + 2)
    : [null])

  input_1990 = (local.code_1990[0] == ","
    ? substr(local.input_1989, local.code_1990[1], -1)
    : local.input_1989)

  iter_1990 = try(local.iter_1989.code_ptr >= length(var.code), true) ? local.iter_1989 : {
    output = (local.code_1990[0] == "."
      ? "${local.iter_1989.output}${join("", [for _ in range(local.code_1990[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1989.tape[local.iter_1989.tape_ptr]))])}"
      : local.iter_1989.output)
    
    tape = (
      local.code_1990[0] == "+"
        ? [for i, b in local.iter_1989.tape : (i == local.iter_1989.tape_ptr ? (b + local.code_1990[1]) % 256 : b)] :
      local.code_1990[0] == "-"
        ? [for i, b in local.iter_1989.tape : (i == local.iter_1989.tape_ptr ? (b - local.code_1990[1] + 256) % 256 : b)] :
      local.code_1990[0] == ","
        ? [for i, b in local.iter_1989.tape : (i == local.iter_1989.tape_ptr ? local.ascii_lookup[substr(local.input_1990, 0, 1)] : b)]
        : local.iter_1989.tape)

    tape_ptr = (
      local.code_1990[0] == "<"
        ? local.iter_1989.tape_ptr - local.code_1990[1] :
      local.code_1990[0] == ">"
        ? local.iter_1989.tape_ptr + local.code_1990[1]
        : local.iter_1989.tape_ptr)

    code_ptr = 2 + (
      local.code_1990[0] == "["
        ? local.iter_1989.tape[local.iter_1989.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1989.code_ptr)] : local.iter_1989.code_ptr :
      local.code_1990[0] == "]"
        ? local.iter_1989.tape[local.iter_1989.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1989.code_ptr)] : local.iter_1989.code_ptr
        : local.iter_1989.code_ptr)

    steps_taken = 1 + local.iter_1989.steps_taken
  }
}

locals {
  code_1991 = (try(local.iter_1990.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1990.code_ptr, local.iter_1990.code_ptr + 2)
    : [null])

  input_1991 = (local.code_1991[0] == ","
    ? substr(local.input_1990, local.code_1991[1], -1)
    : local.input_1990)

  iter_1991 = try(local.iter_1990.code_ptr >= length(var.code), true) ? local.iter_1990 : {
    output = (local.code_1991[0] == "."
      ? "${local.iter_1990.output}${join("", [for _ in range(local.code_1991[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1990.tape[local.iter_1990.tape_ptr]))])}"
      : local.iter_1990.output)
    
    tape = (
      local.code_1991[0] == "+"
        ? [for i, b in local.iter_1990.tape : (i == local.iter_1990.tape_ptr ? (b + local.code_1991[1]) % 256 : b)] :
      local.code_1991[0] == "-"
        ? [for i, b in local.iter_1990.tape : (i == local.iter_1990.tape_ptr ? (b - local.code_1991[1] + 256) % 256 : b)] :
      local.code_1991[0] == ","
        ? [for i, b in local.iter_1990.tape : (i == local.iter_1990.tape_ptr ? local.ascii_lookup[substr(local.input_1991, 0, 1)] : b)]
        : local.iter_1990.tape)

    tape_ptr = (
      local.code_1991[0] == "<"
        ? local.iter_1990.tape_ptr - local.code_1991[1] :
      local.code_1991[0] == ">"
        ? local.iter_1990.tape_ptr + local.code_1991[1]
        : local.iter_1990.tape_ptr)

    code_ptr = 2 + (
      local.code_1991[0] == "["
        ? local.iter_1990.tape[local.iter_1990.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1990.code_ptr)] : local.iter_1990.code_ptr :
      local.code_1991[0] == "]"
        ? local.iter_1990.tape[local.iter_1990.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1990.code_ptr)] : local.iter_1990.code_ptr
        : local.iter_1990.code_ptr)

    steps_taken = 1 + local.iter_1990.steps_taken
  }
}

locals {
  code_1992 = (try(local.iter_1991.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1991.code_ptr, local.iter_1991.code_ptr + 2)
    : [null])

  input_1992 = (local.code_1992[0] == ","
    ? substr(local.input_1991, local.code_1992[1], -1)
    : local.input_1991)

  iter_1992 = try(local.iter_1991.code_ptr >= length(var.code), true) ? local.iter_1991 : {
    output = (local.code_1992[0] == "."
      ? "${local.iter_1991.output}${join("", [for _ in range(local.code_1992[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1991.tape[local.iter_1991.tape_ptr]))])}"
      : local.iter_1991.output)
    
    tape = (
      local.code_1992[0] == "+"
        ? [for i, b in local.iter_1991.tape : (i == local.iter_1991.tape_ptr ? (b + local.code_1992[1]) % 256 : b)] :
      local.code_1992[0] == "-"
        ? [for i, b in local.iter_1991.tape : (i == local.iter_1991.tape_ptr ? (b - local.code_1992[1] + 256) % 256 : b)] :
      local.code_1992[0] == ","
        ? [for i, b in local.iter_1991.tape : (i == local.iter_1991.tape_ptr ? local.ascii_lookup[substr(local.input_1992, 0, 1)] : b)]
        : local.iter_1991.tape)

    tape_ptr = (
      local.code_1992[0] == "<"
        ? local.iter_1991.tape_ptr - local.code_1992[1] :
      local.code_1992[0] == ">"
        ? local.iter_1991.tape_ptr + local.code_1992[1]
        : local.iter_1991.tape_ptr)

    code_ptr = 2 + (
      local.code_1992[0] == "["
        ? local.iter_1991.tape[local.iter_1991.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1991.code_ptr)] : local.iter_1991.code_ptr :
      local.code_1992[0] == "]"
        ? local.iter_1991.tape[local.iter_1991.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1991.code_ptr)] : local.iter_1991.code_ptr
        : local.iter_1991.code_ptr)

    steps_taken = 1 + local.iter_1991.steps_taken
  }
}

locals {
  code_1993 = (try(local.iter_1992.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1992.code_ptr, local.iter_1992.code_ptr + 2)
    : [null])

  input_1993 = (local.code_1993[0] == ","
    ? substr(local.input_1992, local.code_1993[1], -1)
    : local.input_1992)

  iter_1993 = try(local.iter_1992.code_ptr >= length(var.code), true) ? local.iter_1992 : {
    output = (local.code_1993[0] == "."
      ? "${local.iter_1992.output}${join("", [for _ in range(local.code_1993[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1992.tape[local.iter_1992.tape_ptr]))])}"
      : local.iter_1992.output)
    
    tape = (
      local.code_1993[0] == "+"
        ? [for i, b in local.iter_1992.tape : (i == local.iter_1992.tape_ptr ? (b + local.code_1993[1]) % 256 : b)] :
      local.code_1993[0] == "-"
        ? [for i, b in local.iter_1992.tape : (i == local.iter_1992.tape_ptr ? (b - local.code_1993[1] + 256) % 256 : b)] :
      local.code_1993[0] == ","
        ? [for i, b in local.iter_1992.tape : (i == local.iter_1992.tape_ptr ? local.ascii_lookup[substr(local.input_1993, 0, 1)] : b)]
        : local.iter_1992.tape)

    tape_ptr = (
      local.code_1993[0] == "<"
        ? local.iter_1992.tape_ptr - local.code_1993[1] :
      local.code_1993[0] == ">"
        ? local.iter_1992.tape_ptr + local.code_1993[1]
        : local.iter_1992.tape_ptr)

    code_ptr = 2 + (
      local.code_1993[0] == "["
        ? local.iter_1992.tape[local.iter_1992.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1992.code_ptr)] : local.iter_1992.code_ptr :
      local.code_1993[0] == "]"
        ? local.iter_1992.tape[local.iter_1992.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1992.code_ptr)] : local.iter_1992.code_ptr
        : local.iter_1992.code_ptr)

    steps_taken = 1 + local.iter_1992.steps_taken
  }
}

locals {
  code_1994 = (try(local.iter_1993.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1993.code_ptr, local.iter_1993.code_ptr + 2)
    : [null])

  input_1994 = (local.code_1994[0] == ","
    ? substr(local.input_1993, local.code_1994[1], -1)
    : local.input_1993)

  iter_1994 = try(local.iter_1993.code_ptr >= length(var.code), true) ? local.iter_1993 : {
    output = (local.code_1994[0] == "."
      ? "${local.iter_1993.output}${join("", [for _ in range(local.code_1994[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1993.tape[local.iter_1993.tape_ptr]))])}"
      : local.iter_1993.output)
    
    tape = (
      local.code_1994[0] == "+"
        ? [for i, b in local.iter_1993.tape : (i == local.iter_1993.tape_ptr ? (b + local.code_1994[1]) % 256 : b)] :
      local.code_1994[0] == "-"
        ? [for i, b in local.iter_1993.tape : (i == local.iter_1993.tape_ptr ? (b - local.code_1994[1] + 256) % 256 : b)] :
      local.code_1994[0] == ","
        ? [for i, b in local.iter_1993.tape : (i == local.iter_1993.tape_ptr ? local.ascii_lookup[substr(local.input_1994, 0, 1)] : b)]
        : local.iter_1993.tape)

    tape_ptr = (
      local.code_1994[0] == "<"
        ? local.iter_1993.tape_ptr - local.code_1994[1] :
      local.code_1994[0] == ">"
        ? local.iter_1993.tape_ptr + local.code_1994[1]
        : local.iter_1993.tape_ptr)

    code_ptr = 2 + (
      local.code_1994[0] == "["
        ? local.iter_1993.tape[local.iter_1993.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1993.code_ptr)] : local.iter_1993.code_ptr :
      local.code_1994[0] == "]"
        ? local.iter_1993.tape[local.iter_1993.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1993.code_ptr)] : local.iter_1993.code_ptr
        : local.iter_1993.code_ptr)

    steps_taken = 1 + local.iter_1993.steps_taken
  }
}

locals {
  code_1995 = (try(local.iter_1994.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1994.code_ptr, local.iter_1994.code_ptr + 2)
    : [null])

  input_1995 = (local.code_1995[0] == ","
    ? substr(local.input_1994, local.code_1995[1], -1)
    : local.input_1994)

  iter_1995 = try(local.iter_1994.code_ptr >= length(var.code), true) ? local.iter_1994 : {
    output = (local.code_1995[0] == "."
      ? "${local.iter_1994.output}${join("", [for _ in range(local.code_1995[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1994.tape[local.iter_1994.tape_ptr]))])}"
      : local.iter_1994.output)
    
    tape = (
      local.code_1995[0] == "+"
        ? [for i, b in local.iter_1994.tape : (i == local.iter_1994.tape_ptr ? (b + local.code_1995[1]) % 256 : b)] :
      local.code_1995[0] == "-"
        ? [for i, b in local.iter_1994.tape : (i == local.iter_1994.tape_ptr ? (b - local.code_1995[1] + 256) % 256 : b)] :
      local.code_1995[0] == ","
        ? [for i, b in local.iter_1994.tape : (i == local.iter_1994.tape_ptr ? local.ascii_lookup[substr(local.input_1995, 0, 1)] : b)]
        : local.iter_1994.tape)

    tape_ptr = (
      local.code_1995[0] == "<"
        ? local.iter_1994.tape_ptr - local.code_1995[1] :
      local.code_1995[0] == ">"
        ? local.iter_1994.tape_ptr + local.code_1995[1]
        : local.iter_1994.tape_ptr)

    code_ptr = 2 + (
      local.code_1995[0] == "["
        ? local.iter_1994.tape[local.iter_1994.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1994.code_ptr)] : local.iter_1994.code_ptr :
      local.code_1995[0] == "]"
        ? local.iter_1994.tape[local.iter_1994.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1994.code_ptr)] : local.iter_1994.code_ptr
        : local.iter_1994.code_ptr)

    steps_taken = 1 + local.iter_1994.steps_taken
  }
}

locals {
  code_1996 = (try(local.iter_1995.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1995.code_ptr, local.iter_1995.code_ptr + 2)
    : [null])

  input_1996 = (local.code_1996[0] == ","
    ? substr(local.input_1995, local.code_1996[1], -1)
    : local.input_1995)

  iter_1996 = try(local.iter_1995.code_ptr >= length(var.code), true) ? local.iter_1995 : {
    output = (local.code_1996[0] == "."
      ? "${local.iter_1995.output}${join("", [for _ in range(local.code_1996[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1995.tape[local.iter_1995.tape_ptr]))])}"
      : local.iter_1995.output)
    
    tape = (
      local.code_1996[0] == "+"
        ? [for i, b in local.iter_1995.tape : (i == local.iter_1995.tape_ptr ? (b + local.code_1996[1]) % 256 : b)] :
      local.code_1996[0] == "-"
        ? [for i, b in local.iter_1995.tape : (i == local.iter_1995.tape_ptr ? (b - local.code_1996[1] + 256) % 256 : b)] :
      local.code_1996[0] == ","
        ? [for i, b in local.iter_1995.tape : (i == local.iter_1995.tape_ptr ? local.ascii_lookup[substr(local.input_1996, 0, 1)] : b)]
        : local.iter_1995.tape)

    tape_ptr = (
      local.code_1996[0] == "<"
        ? local.iter_1995.tape_ptr - local.code_1996[1] :
      local.code_1996[0] == ">"
        ? local.iter_1995.tape_ptr + local.code_1996[1]
        : local.iter_1995.tape_ptr)

    code_ptr = 2 + (
      local.code_1996[0] == "["
        ? local.iter_1995.tape[local.iter_1995.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1995.code_ptr)] : local.iter_1995.code_ptr :
      local.code_1996[0] == "]"
        ? local.iter_1995.tape[local.iter_1995.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1995.code_ptr)] : local.iter_1995.code_ptr
        : local.iter_1995.code_ptr)

    steps_taken = 1 + local.iter_1995.steps_taken
  }
}

locals {
  code_1997 = (try(local.iter_1996.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1996.code_ptr, local.iter_1996.code_ptr + 2)
    : [null])

  input_1997 = (local.code_1997[0] == ","
    ? substr(local.input_1996, local.code_1997[1], -1)
    : local.input_1996)

  iter_1997 = try(local.iter_1996.code_ptr >= length(var.code), true) ? local.iter_1996 : {
    output = (local.code_1997[0] == "."
      ? "${local.iter_1996.output}${join("", [for _ in range(local.code_1997[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1996.tape[local.iter_1996.tape_ptr]))])}"
      : local.iter_1996.output)
    
    tape = (
      local.code_1997[0] == "+"
        ? [for i, b in local.iter_1996.tape : (i == local.iter_1996.tape_ptr ? (b + local.code_1997[1]) % 256 : b)] :
      local.code_1997[0] == "-"
        ? [for i, b in local.iter_1996.tape : (i == local.iter_1996.tape_ptr ? (b - local.code_1997[1] + 256) % 256 : b)] :
      local.code_1997[0] == ","
        ? [for i, b in local.iter_1996.tape : (i == local.iter_1996.tape_ptr ? local.ascii_lookup[substr(local.input_1997, 0, 1)] : b)]
        : local.iter_1996.tape)

    tape_ptr = (
      local.code_1997[0] == "<"
        ? local.iter_1996.tape_ptr - local.code_1997[1] :
      local.code_1997[0] == ">"
        ? local.iter_1996.tape_ptr + local.code_1997[1]
        : local.iter_1996.tape_ptr)

    code_ptr = 2 + (
      local.code_1997[0] == "["
        ? local.iter_1996.tape[local.iter_1996.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1996.code_ptr)] : local.iter_1996.code_ptr :
      local.code_1997[0] == "]"
        ? local.iter_1996.tape[local.iter_1996.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1996.code_ptr)] : local.iter_1996.code_ptr
        : local.iter_1996.code_ptr)

    steps_taken = 1 + local.iter_1996.steps_taken
  }
}

locals {
  code_1998 = (try(local.iter_1997.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1997.code_ptr, local.iter_1997.code_ptr + 2)
    : [null])

  input_1998 = (local.code_1998[0] == ","
    ? substr(local.input_1997, local.code_1998[1], -1)
    : local.input_1997)

  iter_1998 = try(local.iter_1997.code_ptr >= length(var.code), true) ? local.iter_1997 : {
    output = (local.code_1998[0] == "."
      ? "${local.iter_1997.output}${join("", [for _ in range(local.code_1998[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1997.tape[local.iter_1997.tape_ptr]))])}"
      : local.iter_1997.output)
    
    tape = (
      local.code_1998[0] == "+"
        ? [for i, b in local.iter_1997.tape : (i == local.iter_1997.tape_ptr ? (b + local.code_1998[1]) % 256 : b)] :
      local.code_1998[0] == "-"
        ? [for i, b in local.iter_1997.tape : (i == local.iter_1997.tape_ptr ? (b - local.code_1998[1] + 256) % 256 : b)] :
      local.code_1998[0] == ","
        ? [for i, b in local.iter_1997.tape : (i == local.iter_1997.tape_ptr ? local.ascii_lookup[substr(local.input_1998, 0, 1)] : b)]
        : local.iter_1997.tape)

    tape_ptr = (
      local.code_1998[0] == "<"
        ? local.iter_1997.tape_ptr - local.code_1998[1] :
      local.code_1998[0] == ">"
        ? local.iter_1997.tape_ptr + local.code_1998[1]
        : local.iter_1997.tape_ptr)

    code_ptr = 2 + (
      local.code_1998[0] == "["
        ? local.iter_1997.tape[local.iter_1997.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1997.code_ptr)] : local.iter_1997.code_ptr :
      local.code_1998[0] == "]"
        ? local.iter_1997.tape[local.iter_1997.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1997.code_ptr)] : local.iter_1997.code_ptr
        : local.iter_1997.code_ptr)

    steps_taken = 1 + local.iter_1997.steps_taken
  }
}

locals {
  code_1999 = (try(local.iter_1998.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1998.code_ptr, local.iter_1998.code_ptr + 2)
    : [null])

  input_1999 = (local.code_1999[0] == ","
    ? substr(local.input_1998, local.code_1999[1], -1)
    : local.input_1998)

  iter_1999 = try(local.iter_1998.code_ptr >= length(var.code), true) ? local.iter_1998 : {
    output = (local.code_1999[0] == "."
      ? "${local.iter_1998.output}${join("", [for _ in range(local.code_1999[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1998.tape[local.iter_1998.tape_ptr]))])}"
      : local.iter_1998.output)
    
    tape = (
      local.code_1999[0] == "+"
        ? [for i, b in local.iter_1998.tape : (i == local.iter_1998.tape_ptr ? (b + local.code_1999[1]) % 256 : b)] :
      local.code_1999[0] == "-"
        ? [for i, b in local.iter_1998.tape : (i == local.iter_1998.tape_ptr ? (b - local.code_1999[1] + 256) % 256 : b)] :
      local.code_1999[0] == ","
        ? [for i, b in local.iter_1998.tape : (i == local.iter_1998.tape_ptr ? local.ascii_lookup[substr(local.input_1999, 0, 1)] : b)]
        : local.iter_1998.tape)

    tape_ptr = (
      local.code_1999[0] == "<"
        ? local.iter_1998.tape_ptr - local.code_1999[1] :
      local.code_1999[0] == ">"
        ? local.iter_1998.tape_ptr + local.code_1999[1]
        : local.iter_1998.tape_ptr)

    code_ptr = 2 + (
      local.code_1999[0] == "["
        ? local.iter_1998.tape[local.iter_1998.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1998.code_ptr)] : local.iter_1998.code_ptr :
      local.code_1999[0] == "]"
        ? local.iter_1998.tape[local.iter_1998.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1998.code_ptr)] : local.iter_1998.code_ptr
        : local.iter_1998.code_ptr)

    steps_taken = 1 + local.iter_1998.steps_taken
  }
}

locals {
  code_2000 = (try(local.iter_1999.code_ptr < length(var.code), false)
    ? slice(var.code, local.iter_1999.code_ptr, local.iter_1999.code_ptr + 2)
    : [null])

  input_2000 = (local.code_2000[0] == ","
    ? substr(local.input_1999, local.code_2000[1], -1)
    : local.input_1999)

  iter_2000 = try(local.iter_1999.code_ptr >= length(var.code), true) ? local.iter_1999 : {
    output = (local.code_2000[0] == "."
      ? "${local.iter_1999.output}${join("", [for _ in range(local.code_2000[1]) : jsondecode(format("\"\\u%04x\"", local.iter_1999.tape[local.iter_1999.tape_ptr]))])}"
      : local.iter_1999.output)
    
    tape = (
      local.code_2000[0] == "+"
        ? [for i, b in local.iter_1999.tape : (i == local.iter_1999.tape_ptr ? (b + local.code_2000[1]) % 256 : b)] :
      local.code_2000[0] == "-"
        ? [for i, b in local.iter_1999.tape : (i == local.iter_1999.tape_ptr ? (b - local.code_2000[1] + 256) % 256 : b)] :
      local.code_2000[0] == ","
        ? [for i, b in local.iter_1999.tape : (i == local.iter_1999.tape_ptr ? local.ascii_lookup[substr(local.input_2000, 0, 1)] : b)]
        : local.iter_1999.tape)

    tape_ptr = (
      local.code_2000[0] == "<"
        ? local.iter_1999.tape_ptr - local.code_2000[1] :
      local.code_2000[0] == ">"
        ? local.iter_1999.tape_ptr + local.code_2000[1]
        : local.iter_1999.tape_ptr)

    code_ptr = 2 + (
      local.code_2000[0] == "["
        ? local.iter_1999.tape[local.iter_1999.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1999.code_ptr)] : local.iter_1999.code_ptr :
      local.code_2000[0] == "]"
        ? local.iter_1999.tape[local.iter_1999.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1999.code_ptr)] : local.iter_1999.code_ptr
        : local.iter_1999.code_ptr)

    steps_taken = 1 + local.iter_1999.steps_taken
  }
}

output "tape" {
  value = local.iter_2000.tape
}

output "output" {
  value = local.iter_2000.output
}

output "final_iteration" {
  value = local.iter_2000
}

output "final_input" {
  value = local.input_2000
}
