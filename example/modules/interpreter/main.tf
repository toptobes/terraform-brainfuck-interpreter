##################################################################
# This file was autogenerated by the Terrafuck CLI               #
# https://github.com/toptobes/terrform-brainfuck-interpreter     #
##################################################################

variable "code" {}

variable "tape" {}

variable "tape_ptr" {}

variable "code_ptr" {}

variable "input" {}

variable "output" {}

variable "bracket_lut" {}

locals {
  ascii_lookup = { for i in range(0, 255) : jsondecode(format("\"\\u%04x\"", i)) => i }

  iter_0 = {
    input       = var.input
    output      = var.output
    tape        = var.tape
    tape_ptr    = var.tape_ptr
    code_ptr    = var.code_ptr
    steps_taken = 0
  }
}

locals {
  end_of_code_1 = try(local.iter_0.code_ptr >= length(var.code), true)

  curr_1 = local.end_of_code_1 ? null : {
    code = substr(var.code, local.iter_0.code_ptr, 1)
    input = substr(var.code, local.iter_0.code_ptr, 1) == "," ? substr(local.iter_0.input, 0, 1) : null
  }

  iter_1 = local.end_of_code_1 ? local.iter_0 : {
    input = (local.curr_1.code == ","
      ? substr(local.iter_0.input, 1, -1)
      : local.iter_0.input)

    output = (local.curr_1.code == "."
      ? "${local.iter_0.output}${jsondecode(format("\"\\u%04x\"", local.iter_0.tape[local.iter_0.tape_ptr]))}"
      : local.iter_0.output)
    
    tape = (
      local.curr_1.code == "+"
        ? [for i, b in local.iter_0.tape : (i == local.iter_0.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1.code == "-"
        ? [for i, b in local.iter_0.tape : (i == local.iter_0.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1.code == ","
        ? [for i, b in local.iter_0.tape : (i == local.iter_0.tape_ptr ? local.ascii_lookup[local.curr_1.input] : b)]
        : local.iter_0.tape)

    tape_ptr = (
      local.curr_1.code == "<"
        ? local.iter_0.tape_ptr == 0 ? length(local.iter_0.tape) - 1 : local.iter_0.tape_ptr - 1 :
      local.curr_1.code == ">"
        ? local.iter_0.tape_ptr == length(local.iter_0.tape) - 1 ? 0 : local.iter_0.tape_ptr + 1
        : local.iter_0.tape_ptr)

    code_ptr = 1 + (
      local.curr_1.code == "["
        ? local.iter_0.tape[local.iter_0.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_0.code_ptr)] : local.iter_0.code_ptr :
      local.curr_1.code == "]"
        ? local.iter_0.tape[local.iter_0.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_0.code_ptr)] : local.iter_0.code_ptr
        : local.iter_0.code_ptr)

    steps_taken = 1 + local.iter_0.steps_taken
  }
}

locals {
  end_of_code_2 = try(local.iter_1.code_ptr >= length(var.code), true)

  curr_2 = local.end_of_code_2 ? null : {
    code = substr(var.code, local.iter_1.code_ptr, 1)
    input = substr(var.code, local.iter_1.code_ptr, 1) == "," ? substr(local.iter_1.input, 0, 1) : null
  }

  iter_2 = local.end_of_code_2 ? local.iter_1 : {
    input = (local.curr_2.code == ","
      ? substr(local.iter_1.input, 1, -1)
      : local.iter_1.input)

    output = (local.curr_2.code == "."
      ? "${local.iter_1.output}${jsondecode(format("\"\\u%04x\"", local.iter_1.tape[local.iter_1.tape_ptr]))}"
      : local.iter_1.output)
    
    tape = (
      local.curr_2.code == "+"
        ? [for i, b in local.iter_1.tape : (i == local.iter_1.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_2.code == "-"
        ? [for i, b in local.iter_1.tape : (i == local.iter_1.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_2.code == ","
        ? [for i, b in local.iter_1.tape : (i == local.iter_1.tape_ptr ? local.ascii_lookup[local.curr_2.input] : b)]
        : local.iter_1.tape)

    tape_ptr = (
      local.curr_2.code == "<"
        ? local.iter_1.tape_ptr == 0 ? length(local.iter_1.tape) - 1 : local.iter_1.tape_ptr - 1 :
      local.curr_2.code == ">"
        ? local.iter_1.tape_ptr == length(local.iter_1.tape) - 1 ? 0 : local.iter_1.tape_ptr + 1
        : local.iter_1.tape_ptr)

    code_ptr = 1 + (
      local.curr_2.code == "["
        ? local.iter_1.tape[local.iter_1.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1.code_ptr)] : local.iter_1.code_ptr :
      local.curr_2.code == "]"
        ? local.iter_1.tape[local.iter_1.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1.code_ptr)] : local.iter_1.code_ptr
        : local.iter_1.code_ptr)

    steps_taken = 1 + local.iter_1.steps_taken
  }
}

locals {
  end_of_code_3 = try(local.iter_2.code_ptr >= length(var.code), true)

  curr_3 = local.end_of_code_3 ? null : {
    code = substr(var.code, local.iter_2.code_ptr, 1)
    input = substr(var.code, local.iter_2.code_ptr, 1) == "," ? substr(local.iter_2.input, 0, 1) : null
  }

  iter_3 = local.end_of_code_3 ? local.iter_2 : {
    input = (local.curr_3.code == ","
      ? substr(local.iter_2.input, 1, -1)
      : local.iter_2.input)

    output = (local.curr_3.code == "."
      ? "${local.iter_2.output}${jsondecode(format("\"\\u%04x\"", local.iter_2.tape[local.iter_2.tape_ptr]))}"
      : local.iter_2.output)
    
    tape = (
      local.curr_3.code == "+"
        ? [for i, b in local.iter_2.tape : (i == local.iter_2.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_3.code == "-"
        ? [for i, b in local.iter_2.tape : (i == local.iter_2.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_3.code == ","
        ? [for i, b in local.iter_2.tape : (i == local.iter_2.tape_ptr ? local.ascii_lookup[local.curr_3.input] : b)]
        : local.iter_2.tape)

    tape_ptr = (
      local.curr_3.code == "<"
        ? local.iter_2.tape_ptr == 0 ? length(local.iter_2.tape) - 1 : local.iter_2.tape_ptr - 1 :
      local.curr_3.code == ">"
        ? local.iter_2.tape_ptr == length(local.iter_2.tape) - 1 ? 0 : local.iter_2.tape_ptr + 1
        : local.iter_2.tape_ptr)

    code_ptr = 1 + (
      local.curr_3.code == "["
        ? local.iter_2.tape[local.iter_2.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_2.code_ptr)] : local.iter_2.code_ptr :
      local.curr_3.code == "]"
        ? local.iter_2.tape[local.iter_2.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_2.code_ptr)] : local.iter_2.code_ptr
        : local.iter_2.code_ptr)

    steps_taken = 1 + local.iter_2.steps_taken
  }
}

locals {
  end_of_code_4 = try(local.iter_3.code_ptr >= length(var.code), true)

  curr_4 = local.end_of_code_4 ? null : {
    code = substr(var.code, local.iter_3.code_ptr, 1)
    input = substr(var.code, local.iter_3.code_ptr, 1) == "," ? substr(local.iter_3.input, 0, 1) : null
  }

  iter_4 = local.end_of_code_4 ? local.iter_3 : {
    input = (local.curr_4.code == ","
      ? substr(local.iter_3.input, 1, -1)
      : local.iter_3.input)

    output = (local.curr_4.code == "."
      ? "${local.iter_3.output}${jsondecode(format("\"\\u%04x\"", local.iter_3.tape[local.iter_3.tape_ptr]))}"
      : local.iter_3.output)
    
    tape = (
      local.curr_4.code == "+"
        ? [for i, b in local.iter_3.tape : (i == local.iter_3.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_4.code == "-"
        ? [for i, b in local.iter_3.tape : (i == local.iter_3.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_4.code == ","
        ? [for i, b in local.iter_3.tape : (i == local.iter_3.tape_ptr ? local.ascii_lookup[local.curr_4.input] : b)]
        : local.iter_3.tape)

    tape_ptr = (
      local.curr_4.code == "<"
        ? local.iter_3.tape_ptr == 0 ? length(local.iter_3.tape) - 1 : local.iter_3.tape_ptr - 1 :
      local.curr_4.code == ">"
        ? local.iter_3.tape_ptr == length(local.iter_3.tape) - 1 ? 0 : local.iter_3.tape_ptr + 1
        : local.iter_3.tape_ptr)

    code_ptr = 1 + (
      local.curr_4.code == "["
        ? local.iter_3.tape[local.iter_3.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_3.code_ptr)] : local.iter_3.code_ptr :
      local.curr_4.code == "]"
        ? local.iter_3.tape[local.iter_3.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_3.code_ptr)] : local.iter_3.code_ptr
        : local.iter_3.code_ptr)

    steps_taken = 1 + local.iter_3.steps_taken
  }
}

locals {
  end_of_code_5 = try(local.iter_4.code_ptr >= length(var.code), true)

  curr_5 = local.end_of_code_5 ? null : {
    code = substr(var.code, local.iter_4.code_ptr, 1)
    input = substr(var.code, local.iter_4.code_ptr, 1) == "," ? substr(local.iter_4.input, 0, 1) : null
  }

  iter_5 = local.end_of_code_5 ? local.iter_4 : {
    input = (local.curr_5.code == ","
      ? substr(local.iter_4.input, 1, -1)
      : local.iter_4.input)

    output = (local.curr_5.code == "."
      ? "${local.iter_4.output}${jsondecode(format("\"\\u%04x\"", local.iter_4.tape[local.iter_4.tape_ptr]))}"
      : local.iter_4.output)
    
    tape = (
      local.curr_5.code == "+"
        ? [for i, b in local.iter_4.tape : (i == local.iter_4.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_5.code == "-"
        ? [for i, b in local.iter_4.tape : (i == local.iter_4.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_5.code == ","
        ? [for i, b in local.iter_4.tape : (i == local.iter_4.tape_ptr ? local.ascii_lookup[local.curr_5.input] : b)]
        : local.iter_4.tape)

    tape_ptr = (
      local.curr_5.code == "<"
        ? local.iter_4.tape_ptr == 0 ? length(local.iter_4.tape) - 1 : local.iter_4.tape_ptr - 1 :
      local.curr_5.code == ">"
        ? local.iter_4.tape_ptr == length(local.iter_4.tape) - 1 ? 0 : local.iter_4.tape_ptr + 1
        : local.iter_4.tape_ptr)

    code_ptr = 1 + (
      local.curr_5.code == "["
        ? local.iter_4.tape[local.iter_4.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_4.code_ptr)] : local.iter_4.code_ptr :
      local.curr_5.code == "]"
        ? local.iter_4.tape[local.iter_4.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_4.code_ptr)] : local.iter_4.code_ptr
        : local.iter_4.code_ptr)

    steps_taken = 1 + local.iter_4.steps_taken
  }
}

locals {
  end_of_code_6 = try(local.iter_5.code_ptr >= length(var.code), true)

  curr_6 = local.end_of_code_6 ? null : {
    code = substr(var.code, local.iter_5.code_ptr, 1)
    input = substr(var.code, local.iter_5.code_ptr, 1) == "," ? substr(local.iter_5.input, 0, 1) : null
  }

  iter_6 = local.end_of_code_6 ? local.iter_5 : {
    input = (local.curr_6.code == ","
      ? substr(local.iter_5.input, 1, -1)
      : local.iter_5.input)

    output = (local.curr_6.code == "."
      ? "${local.iter_5.output}${jsondecode(format("\"\\u%04x\"", local.iter_5.tape[local.iter_5.tape_ptr]))}"
      : local.iter_5.output)
    
    tape = (
      local.curr_6.code == "+"
        ? [for i, b in local.iter_5.tape : (i == local.iter_5.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_6.code == "-"
        ? [for i, b in local.iter_5.tape : (i == local.iter_5.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_6.code == ","
        ? [for i, b in local.iter_5.tape : (i == local.iter_5.tape_ptr ? local.ascii_lookup[local.curr_6.input] : b)]
        : local.iter_5.tape)

    tape_ptr = (
      local.curr_6.code == "<"
        ? local.iter_5.tape_ptr == 0 ? length(local.iter_5.tape) - 1 : local.iter_5.tape_ptr - 1 :
      local.curr_6.code == ">"
        ? local.iter_5.tape_ptr == length(local.iter_5.tape) - 1 ? 0 : local.iter_5.tape_ptr + 1
        : local.iter_5.tape_ptr)

    code_ptr = 1 + (
      local.curr_6.code == "["
        ? local.iter_5.tape[local.iter_5.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_5.code_ptr)] : local.iter_5.code_ptr :
      local.curr_6.code == "]"
        ? local.iter_5.tape[local.iter_5.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_5.code_ptr)] : local.iter_5.code_ptr
        : local.iter_5.code_ptr)

    steps_taken = 1 + local.iter_5.steps_taken
  }
}

locals {
  end_of_code_7 = try(local.iter_6.code_ptr >= length(var.code), true)

  curr_7 = local.end_of_code_7 ? null : {
    code = substr(var.code, local.iter_6.code_ptr, 1)
    input = substr(var.code, local.iter_6.code_ptr, 1) == "," ? substr(local.iter_6.input, 0, 1) : null
  }

  iter_7 = local.end_of_code_7 ? local.iter_6 : {
    input = (local.curr_7.code == ","
      ? substr(local.iter_6.input, 1, -1)
      : local.iter_6.input)

    output = (local.curr_7.code == "."
      ? "${local.iter_6.output}${jsondecode(format("\"\\u%04x\"", local.iter_6.tape[local.iter_6.tape_ptr]))}"
      : local.iter_6.output)
    
    tape = (
      local.curr_7.code == "+"
        ? [for i, b in local.iter_6.tape : (i == local.iter_6.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_7.code == "-"
        ? [for i, b in local.iter_6.tape : (i == local.iter_6.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_7.code == ","
        ? [for i, b in local.iter_6.tape : (i == local.iter_6.tape_ptr ? local.ascii_lookup[local.curr_7.input] : b)]
        : local.iter_6.tape)

    tape_ptr = (
      local.curr_7.code == "<"
        ? local.iter_6.tape_ptr == 0 ? length(local.iter_6.tape) - 1 : local.iter_6.tape_ptr - 1 :
      local.curr_7.code == ">"
        ? local.iter_6.tape_ptr == length(local.iter_6.tape) - 1 ? 0 : local.iter_6.tape_ptr + 1
        : local.iter_6.tape_ptr)

    code_ptr = 1 + (
      local.curr_7.code == "["
        ? local.iter_6.tape[local.iter_6.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_6.code_ptr)] : local.iter_6.code_ptr :
      local.curr_7.code == "]"
        ? local.iter_6.tape[local.iter_6.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_6.code_ptr)] : local.iter_6.code_ptr
        : local.iter_6.code_ptr)

    steps_taken = 1 + local.iter_6.steps_taken
  }
}

locals {
  end_of_code_8 = try(local.iter_7.code_ptr >= length(var.code), true)

  curr_8 = local.end_of_code_8 ? null : {
    code = substr(var.code, local.iter_7.code_ptr, 1)
    input = substr(var.code, local.iter_7.code_ptr, 1) == "," ? substr(local.iter_7.input, 0, 1) : null
  }

  iter_8 = local.end_of_code_8 ? local.iter_7 : {
    input = (local.curr_8.code == ","
      ? substr(local.iter_7.input, 1, -1)
      : local.iter_7.input)

    output = (local.curr_8.code == "."
      ? "${local.iter_7.output}${jsondecode(format("\"\\u%04x\"", local.iter_7.tape[local.iter_7.tape_ptr]))}"
      : local.iter_7.output)
    
    tape = (
      local.curr_8.code == "+"
        ? [for i, b in local.iter_7.tape : (i == local.iter_7.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_8.code == "-"
        ? [for i, b in local.iter_7.tape : (i == local.iter_7.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_8.code == ","
        ? [for i, b in local.iter_7.tape : (i == local.iter_7.tape_ptr ? local.ascii_lookup[local.curr_8.input] : b)]
        : local.iter_7.tape)

    tape_ptr = (
      local.curr_8.code == "<"
        ? local.iter_7.tape_ptr == 0 ? length(local.iter_7.tape) - 1 : local.iter_7.tape_ptr - 1 :
      local.curr_8.code == ">"
        ? local.iter_7.tape_ptr == length(local.iter_7.tape) - 1 ? 0 : local.iter_7.tape_ptr + 1
        : local.iter_7.tape_ptr)

    code_ptr = 1 + (
      local.curr_8.code == "["
        ? local.iter_7.tape[local.iter_7.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_7.code_ptr)] : local.iter_7.code_ptr :
      local.curr_8.code == "]"
        ? local.iter_7.tape[local.iter_7.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_7.code_ptr)] : local.iter_7.code_ptr
        : local.iter_7.code_ptr)

    steps_taken = 1 + local.iter_7.steps_taken
  }
}

locals {
  end_of_code_9 = try(local.iter_8.code_ptr >= length(var.code), true)

  curr_9 = local.end_of_code_9 ? null : {
    code = substr(var.code, local.iter_8.code_ptr, 1)
    input = substr(var.code, local.iter_8.code_ptr, 1) == "," ? substr(local.iter_8.input, 0, 1) : null
  }

  iter_9 = local.end_of_code_9 ? local.iter_8 : {
    input = (local.curr_9.code == ","
      ? substr(local.iter_8.input, 1, -1)
      : local.iter_8.input)

    output = (local.curr_9.code == "."
      ? "${local.iter_8.output}${jsondecode(format("\"\\u%04x\"", local.iter_8.tape[local.iter_8.tape_ptr]))}"
      : local.iter_8.output)
    
    tape = (
      local.curr_9.code == "+"
        ? [for i, b in local.iter_8.tape : (i == local.iter_8.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_9.code == "-"
        ? [for i, b in local.iter_8.tape : (i == local.iter_8.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_9.code == ","
        ? [for i, b in local.iter_8.tape : (i == local.iter_8.tape_ptr ? local.ascii_lookup[local.curr_9.input] : b)]
        : local.iter_8.tape)

    tape_ptr = (
      local.curr_9.code == "<"
        ? local.iter_8.tape_ptr == 0 ? length(local.iter_8.tape) - 1 : local.iter_8.tape_ptr - 1 :
      local.curr_9.code == ">"
        ? local.iter_8.tape_ptr == length(local.iter_8.tape) - 1 ? 0 : local.iter_8.tape_ptr + 1
        : local.iter_8.tape_ptr)

    code_ptr = 1 + (
      local.curr_9.code == "["
        ? local.iter_8.tape[local.iter_8.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_8.code_ptr)] : local.iter_8.code_ptr :
      local.curr_9.code == "]"
        ? local.iter_8.tape[local.iter_8.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_8.code_ptr)] : local.iter_8.code_ptr
        : local.iter_8.code_ptr)

    steps_taken = 1 + local.iter_8.steps_taken
  }
}

locals {
  end_of_code_10 = try(local.iter_9.code_ptr >= length(var.code), true)

  curr_10 = local.end_of_code_10 ? null : {
    code = substr(var.code, local.iter_9.code_ptr, 1)
    input = substr(var.code, local.iter_9.code_ptr, 1) == "," ? substr(local.iter_9.input, 0, 1) : null
  }

  iter_10 = local.end_of_code_10 ? local.iter_9 : {
    input = (local.curr_10.code == ","
      ? substr(local.iter_9.input, 1, -1)
      : local.iter_9.input)

    output = (local.curr_10.code == "."
      ? "${local.iter_9.output}${jsondecode(format("\"\\u%04x\"", local.iter_9.tape[local.iter_9.tape_ptr]))}"
      : local.iter_9.output)
    
    tape = (
      local.curr_10.code == "+"
        ? [for i, b in local.iter_9.tape : (i == local.iter_9.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_10.code == "-"
        ? [for i, b in local.iter_9.tape : (i == local.iter_9.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_10.code == ","
        ? [for i, b in local.iter_9.tape : (i == local.iter_9.tape_ptr ? local.ascii_lookup[local.curr_10.input] : b)]
        : local.iter_9.tape)

    tape_ptr = (
      local.curr_10.code == "<"
        ? local.iter_9.tape_ptr == 0 ? length(local.iter_9.tape) - 1 : local.iter_9.tape_ptr - 1 :
      local.curr_10.code == ">"
        ? local.iter_9.tape_ptr == length(local.iter_9.tape) - 1 ? 0 : local.iter_9.tape_ptr + 1
        : local.iter_9.tape_ptr)

    code_ptr = 1 + (
      local.curr_10.code == "["
        ? local.iter_9.tape[local.iter_9.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_9.code_ptr)] : local.iter_9.code_ptr :
      local.curr_10.code == "]"
        ? local.iter_9.tape[local.iter_9.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_9.code_ptr)] : local.iter_9.code_ptr
        : local.iter_9.code_ptr)

    steps_taken = 1 + local.iter_9.steps_taken
  }
}

locals {
  end_of_code_11 = try(local.iter_10.code_ptr >= length(var.code), true)

  curr_11 = local.end_of_code_11 ? null : {
    code = substr(var.code, local.iter_10.code_ptr, 1)
    input = substr(var.code, local.iter_10.code_ptr, 1) == "," ? substr(local.iter_10.input, 0, 1) : null
  }

  iter_11 = local.end_of_code_11 ? local.iter_10 : {
    input = (local.curr_11.code == ","
      ? substr(local.iter_10.input, 1, -1)
      : local.iter_10.input)

    output = (local.curr_11.code == "."
      ? "${local.iter_10.output}${jsondecode(format("\"\\u%04x\"", local.iter_10.tape[local.iter_10.tape_ptr]))}"
      : local.iter_10.output)
    
    tape = (
      local.curr_11.code == "+"
        ? [for i, b in local.iter_10.tape : (i == local.iter_10.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_11.code == "-"
        ? [for i, b in local.iter_10.tape : (i == local.iter_10.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_11.code == ","
        ? [for i, b in local.iter_10.tape : (i == local.iter_10.tape_ptr ? local.ascii_lookup[local.curr_11.input] : b)]
        : local.iter_10.tape)

    tape_ptr = (
      local.curr_11.code == "<"
        ? local.iter_10.tape_ptr == 0 ? length(local.iter_10.tape) - 1 : local.iter_10.tape_ptr - 1 :
      local.curr_11.code == ">"
        ? local.iter_10.tape_ptr == length(local.iter_10.tape) - 1 ? 0 : local.iter_10.tape_ptr + 1
        : local.iter_10.tape_ptr)

    code_ptr = 1 + (
      local.curr_11.code == "["
        ? local.iter_10.tape[local.iter_10.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_10.code_ptr)] : local.iter_10.code_ptr :
      local.curr_11.code == "]"
        ? local.iter_10.tape[local.iter_10.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_10.code_ptr)] : local.iter_10.code_ptr
        : local.iter_10.code_ptr)

    steps_taken = 1 + local.iter_10.steps_taken
  }
}

locals {
  end_of_code_12 = try(local.iter_11.code_ptr >= length(var.code), true)

  curr_12 = local.end_of_code_12 ? null : {
    code = substr(var.code, local.iter_11.code_ptr, 1)
    input = substr(var.code, local.iter_11.code_ptr, 1) == "," ? substr(local.iter_11.input, 0, 1) : null
  }

  iter_12 = local.end_of_code_12 ? local.iter_11 : {
    input = (local.curr_12.code == ","
      ? substr(local.iter_11.input, 1, -1)
      : local.iter_11.input)

    output = (local.curr_12.code == "."
      ? "${local.iter_11.output}${jsondecode(format("\"\\u%04x\"", local.iter_11.tape[local.iter_11.tape_ptr]))}"
      : local.iter_11.output)
    
    tape = (
      local.curr_12.code == "+"
        ? [for i, b in local.iter_11.tape : (i == local.iter_11.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_12.code == "-"
        ? [for i, b in local.iter_11.tape : (i == local.iter_11.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_12.code == ","
        ? [for i, b in local.iter_11.tape : (i == local.iter_11.tape_ptr ? local.ascii_lookup[local.curr_12.input] : b)]
        : local.iter_11.tape)

    tape_ptr = (
      local.curr_12.code == "<"
        ? local.iter_11.tape_ptr == 0 ? length(local.iter_11.tape) - 1 : local.iter_11.tape_ptr - 1 :
      local.curr_12.code == ">"
        ? local.iter_11.tape_ptr == length(local.iter_11.tape) - 1 ? 0 : local.iter_11.tape_ptr + 1
        : local.iter_11.tape_ptr)

    code_ptr = 1 + (
      local.curr_12.code == "["
        ? local.iter_11.tape[local.iter_11.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_11.code_ptr)] : local.iter_11.code_ptr :
      local.curr_12.code == "]"
        ? local.iter_11.tape[local.iter_11.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_11.code_ptr)] : local.iter_11.code_ptr
        : local.iter_11.code_ptr)

    steps_taken = 1 + local.iter_11.steps_taken
  }
}

locals {
  end_of_code_13 = try(local.iter_12.code_ptr >= length(var.code), true)

  curr_13 = local.end_of_code_13 ? null : {
    code = substr(var.code, local.iter_12.code_ptr, 1)
    input = substr(var.code, local.iter_12.code_ptr, 1) == "," ? substr(local.iter_12.input, 0, 1) : null
  }

  iter_13 = local.end_of_code_13 ? local.iter_12 : {
    input = (local.curr_13.code == ","
      ? substr(local.iter_12.input, 1, -1)
      : local.iter_12.input)

    output = (local.curr_13.code == "."
      ? "${local.iter_12.output}${jsondecode(format("\"\\u%04x\"", local.iter_12.tape[local.iter_12.tape_ptr]))}"
      : local.iter_12.output)
    
    tape = (
      local.curr_13.code == "+"
        ? [for i, b in local.iter_12.tape : (i == local.iter_12.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_13.code == "-"
        ? [for i, b in local.iter_12.tape : (i == local.iter_12.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_13.code == ","
        ? [for i, b in local.iter_12.tape : (i == local.iter_12.tape_ptr ? local.ascii_lookup[local.curr_13.input] : b)]
        : local.iter_12.tape)

    tape_ptr = (
      local.curr_13.code == "<"
        ? local.iter_12.tape_ptr == 0 ? length(local.iter_12.tape) - 1 : local.iter_12.tape_ptr - 1 :
      local.curr_13.code == ">"
        ? local.iter_12.tape_ptr == length(local.iter_12.tape) - 1 ? 0 : local.iter_12.tape_ptr + 1
        : local.iter_12.tape_ptr)

    code_ptr = 1 + (
      local.curr_13.code == "["
        ? local.iter_12.tape[local.iter_12.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_12.code_ptr)] : local.iter_12.code_ptr :
      local.curr_13.code == "]"
        ? local.iter_12.tape[local.iter_12.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_12.code_ptr)] : local.iter_12.code_ptr
        : local.iter_12.code_ptr)

    steps_taken = 1 + local.iter_12.steps_taken
  }
}

locals {
  end_of_code_14 = try(local.iter_13.code_ptr >= length(var.code), true)

  curr_14 = local.end_of_code_14 ? null : {
    code = substr(var.code, local.iter_13.code_ptr, 1)
    input = substr(var.code, local.iter_13.code_ptr, 1) == "," ? substr(local.iter_13.input, 0, 1) : null
  }

  iter_14 = local.end_of_code_14 ? local.iter_13 : {
    input = (local.curr_14.code == ","
      ? substr(local.iter_13.input, 1, -1)
      : local.iter_13.input)

    output = (local.curr_14.code == "."
      ? "${local.iter_13.output}${jsondecode(format("\"\\u%04x\"", local.iter_13.tape[local.iter_13.tape_ptr]))}"
      : local.iter_13.output)
    
    tape = (
      local.curr_14.code == "+"
        ? [for i, b in local.iter_13.tape : (i == local.iter_13.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_14.code == "-"
        ? [for i, b in local.iter_13.tape : (i == local.iter_13.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_14.code == ","
        ? [for i, b in local.iter_13.tape : (i == local.iter_13.tape_ptr ? local.ascii_lookup[local.curr_14.input] : b)]
        : local.iter_13.tape)

    tape_ptr = (
      local.curr_14.code == "<"
        ? local.iter_13.tape_ptr == 0 ? length(local.iter_13.tape) - 1 : local.iter_13.tape_ptr - 1 :
      local.curr_14.code == ">"
        ? local.iter_13.tape_ptr == length(local.iter_13.tape) - 1 ? 0 : local.iter_13.tape_ptr + 1
        : local.iter_13.tape_ptr)

    code_ptr = 1 + (
      local.curr_14.code == "["
        ? local.iter_13.tape[local.iter_13.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_13.code_ptr)] : local.iter_13.code_ptr :
      local.curr_14.code == "]"
        ? local.iter_13.tape[local.iter_13.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_13.code_ptr)] : local.iter_13.code_ptr
        : local.iter_13.code_ptr)

    steps_taken = 1 + local.iter_13.steps_taken
  }
}

locals {
  end_of_code_15 = try(local.iter_14.code_ptr >= length(var.code), true)

  curr_15 = local.end_of_code_15 ? null : {
    code = substr(var.code, local.iter_14.code_ptr, 1)
    input = substr(var.code, local.iter_14.code_ptr, 1) == "," ? substr(local.iter_14.input, 0, 1) : null
  }

  iter_15 = local.end_of_code_15 ? local.iter_14 : {
    input = (local.curr_15.code == ","
      ? substr(local.iter_14.input, 1, -1)
      : local.iter_14.input)

    output = (local.curr_15.code == "."
      ? "${local.iter_14.output}${jsondecode(format("\"\\u%04x\"", local.iter_14.tape[local.iter_14.tape_ptr]))}"
      : local.iter_14.output)
    
    tape = (
      local.curr_15.code == "+"
        ? [for i, b in local.iter_14.tape : (i == local.iter_14.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_15.code == "-"
        ? [for i, b in local.iter_14.tape : (i == local.iter_14.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_15.code == ","
        ? [for i, b in local.iter_14.tape : (i == local.iter_14.tape_ptr ? local.ascii_lookup[local.curr_15.input] : b)]
        : local.iter_14.tape)

    tape_ptr = (
      local.curr_15.code == "<"
        ? local.iter_14.tape_ptr == 0 ? length(local.iter_14.tape) - 1 : local.iter_14.tape_ptr - 1 :
      local.curr_15.code == ">"
        ? local.iter_14.tape_ptr == length(local.iter_14.tape) - 1 ? 0 : local.iter_14.tape_ptr + 1
        : local.iter_14.tape_ptr)

    code_ptr = 1 + (
      local.curr_15.code == "["
        ? local.iter_14.tape[local.iter_14.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_14.code_ptr)] : local.iter_14.code_ptr :
      local.curr_15.code == "]"
        ? local.iter_14.tape[local.iter_14.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_14.code_ptr)] : local.iter_14.code_ptr
        : local.iter_14.code_ptr)

    steps_taken = 1 + local.iter_14.steps_taken
  }
}

locals {
  end_of_code_16 = try(local.iter_15.code_ptr >= length(var.code), true)

  curr_16 = local.end_of_code_16 ? null : {
    code = substr(var.code, local.iter_15.code_ptr, 1)
    input = substr(var.code, local.iter_15.code_ptr, 1) == "," ? substr(local.iter_15.input, 0, 1) : null
  }

  iter_16 = local.end_of_code_16 ? local.iter_15 : {
    input = (local.curr_16.code == ","
      ? substr(local.iter_15.input, 1, -1)
      : local.iter_15.input)

    output = (local.curr_16.code == "."
      ? "${local.iter_15.output}${jsondecode(format("\"\\u%04x\"", local.iter_15.tape[local.iter_15.tape_ptr]))}"
      : local.iter_15.output)
    
    tape = (
      local.curr_16.code == "+"
        ? [for i, b in local.iter_15.tape : (i == local.iter_15.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_16.code == "-"
        ? [for i, b in local.iter_15.tape : (i == local.iter_15.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_16.code == ","
        ? [for i, b in local.iter_15.tape : (i == local.iter_15.tape_ptr ? local.ascii_lookup[local.curr_16.input] : b)]
        : local.iter_15.tape)

    tape_ptr = (
      local.curr_16.code == "<"
        ? local.iter_15.tape_ptr == 0 ? length(local.iter_15.tape) - 1 : local.iter_15.tape_ptr - 1 :
      local.curr_16.code == ">"
        ? local.iter_15.tape_ptr == length(local.iter_15.tape) - 1 ? 0 : local.iter_15.tape_ptr + 1
        : local.iter_15.tape_ptr)

    code_ptr = 1 + (
      local.curr_16.code == "["
        ? local.iter_15.tape[local.iter_15.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_15.code_ptr)] : local.iter_15.code_ptr :
      local.curr_16.code == "]"
        ? local.iter_15.tape[local.iter_15.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_15.code_ptr)] : local.iter_15.code_ptr
        : local.iter_15.code_ptr)

    steps_taken = 1 + local.iter_15.steps_taken
  }
}

locals {
  end_of_code_17 = try(local.iter_16.code_ptr >= length(var.code), true)

  curr_17 = local.end_of_code_17 ? null : {
    code = substr(var.code, local.iter_16.code_ptr, 1)
    input = substr(var.code, local.iter_16.code_ptr, 1) == "," ? substr(local.iter_16.input, 0, 1) : null
  }

  iter_17 = local.end_of_code_17 ? local.iter_16 : {
    input = (local.curr_17.code == ","
      ? substr(local.iter_16.input, 1, -1)
      : local.iter_16.input)

    output = (local.curr_17.code == "."
      ? "${local.iter_16.output}${jsondecode(format("\"\\u%04x\"", local.iter_16.tape[local.iter_16.tape_ptr]))}"
      : local.iter_16.output)
    
    tape = (
      local.curr_17.code == "+"
        ? [for i, b in local.iter_16.tape : (i == local.iter_16.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_17.code == "-"
        ? [for i, b in local.iter_16.tape : (i == local.iter_16.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_17.code == ","
        ? [for i, b in local.iter_16.tape : (i == local.iter_16.tape_ptr ? local.ascii_lookup[local.curr_17.input] : b)]
        : local.iter_16.tape)

    tape_ptr = (
      local.curr_17.code == "<"
        ? local.iter_16.tape_ptr == 0 ? length(local.iter_16.tape) - 1 : local.iter_16.tape_ptr - 1 :
      local.curr_17.code == ">"
        ? local.iter_16.tape_ptr == length(local.iter_16.tape) - 1 ? 0 : local.iter_16.tape_ptr + 1
        : local.iter_16.tape_ptr)

    code_ptr = 1 + (
      local.curr_17.code == "["
        ? local.iter_16.tape[local.iter_16.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_16.code_ptr)] : local.iter_16.code_ptr :
      local.curr_17.code == "]"
        ? local.iter_16.tape[local.iter_16.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_16.code_ptr)] : local.iter_16.code_ptr
        : local.iter_16.code_ptr)

    steps_taken = 1 + local.iter_16.steps_taken
  }
}

locals {
  end_of_code_18 = try(local.iter_17.code_ptr >= length(var.code), true)

  curr_18 = local.end_of_code_18 ? null : {
    code = substr(var.code, local.iter_17.code_ptr, 1)
    input = substr(var.code, local.iter_17.code_ptr, 1) == "," ? substr(local.iter_17.input, 0, 1) : null
  }

  iter_18 = local.end_of_code_18 ? local.iter_17 : {
    input = (local.curr_18.code == ","
      ? substr(local.iter_17.input, 1, -1)
      : local.iter_17.input)

    output = (local.curr_18.code == "."
      ? "${local.iter_17.output}${jsondecode(format("\"\\u%04x\"", local.iter_17.tape[local.iter_17.tape_ptr]))}"
      : local.iter_17.output)
    
    tape = (
      local.curr_18.code == "+"
        ? [for i, b in local.iter_17.tape : (i == local.iter_17.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_18.code == "-"
        ? [for i, b in local.iter_17.tape : (i == local.iter_17.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_18.code == ","
        ? [for i, b in local.iter_17.tape : (i == local.iter_17.tape_ptr ? local.ascii_lookup[local.curr_18.input] : b)]
        : local.iter_17.tape)

    tape_ptr = (
      local.curr_18.code == "<"
        ? local.iter_17.tape_ptr == 0 ? length(local.iter_17.tape) - 1 : local.iter_17.tape_ptr - 1 :
      local.curr_18.code == ">"
        ? local.iter_17.tape_ptr == length(local.iter_17.tape) - 1 ? 0 : local.iter_17.tape_ptr + 1
        : local.iter_17.tape_ptr)

    code_ptr = 1 + (
      local.curr_18.code == "["
        ? local.iter_17.tape[local.iter_17.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_17.code_ptr)] : local.iter_17.code_ptr :
      local.curr_18.code == "]"
        ? local.iter_17.tape[local.iter_17.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_17.code_ptr)] : local.iter_17.code_ptr
        : local.iter_17.code_ptr)

    steps_taken = 1 + local.iter_17.steps_taken
  }
}

locals {
  end_of_code_19 = try(local.iter_18.code_ptr >= length(var.code), true)

  curr_19 = local.end_of_code_19 ? null : {
    code = substr(var.code, local.iter_18.code_ptr, 1)
    input = substr(var.code, local.iter_18.code_ptr, 1) == "," ? substr(local.iter_18.input, 0, 1) : null
  }

  iter_19 = local.end_of_code_19 ? local.iter_18 : {
    input = (local.curr_19.code == ","
      ? substr(local.iter_18.input, 1, -1)
      : local.iter_18.input)

    output = (local.curr_19.code == "."
      ? "${local.iter_18.output}${jsondecode(format("\"\\u%04x\"", local.iter_18.tape[local.iter_18.tape_ptr]))}"
      : local.iter_18.output)
    
    tape = (
      local.curr_19.code == "+"
        ? [for i, b in local.iter_18.tape : (i == local.iter_18.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_19.code == "-"
        ? [for i, b in local.iter_18.tape : (i == local.iter_18.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_19.code == ","
        ? [for i, b in local.iter_18.tape : (i == local.iter_18.tape_ptr ? local.ascii_lookup[local.curr_19.input] : b)]
        : local.iter_18.tape)

    tape_ptr = (
      local.curr_19.code == "<"
        ? local.iter_18.tape_ptr == 0 ? length(local.iter_18.tape) - 1 : local.iter_18.tape_ptr - 1 :
      local.curr_19.code == ">"
        ? local.iter_18.tape_ptr == length(local.iter_18.tape) - 1 ? 0 : local.iter_18.tape_ptr + 1
        : local.iter_18.tape_ptr)

    code_ptr = 1 + (
      local.curr_19.code == "["
        ? local.iter_18.tape[local.iter_18.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_18.code_ptr)] : local.iter_18.code_ptr :
      local.curr_19.code == "]"
        ? local.iter_18.tape[local.iter_18.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_18.code_ptr)] : local.iter_18.code_ptr
        : local.iter_18.code_ptr)

    steps_taken = 1 + local.iter_18.steps_taken
  }
}

locals {
  end_of_code_20 = try(local.iter_19.code_ptr >= length(var.code), true)

  curr_20 = local.end_of_code_20 ? null : {
    code = substr(var.code, local.iter_19.code_ptr, 1)
    input = substr(var.code, local.iter_19.code_ptr, 1) == "," ? substr(local.iter_19.input, 0, 1) : null
  }

  iter_20 = local.end_of_code_20 ? local.iter_19 : {
    input = (local.curr_20.code == ","
      ? substr(local.iter_19.input, 1, -1)
      : local.iter_19.input)

    output = (local.curr_20.code == "."
      ? "${local.iter_19.output}${jsondecode(format("\"\\u%04x\"", local.iter_19.tape[local.iter_19.tape_ptr]))}"
      : local.iter_19.output)
    
    tape = (
      local.curr_20.code == "+"
        ? [for i, b in local.iter_19.tape : (i == local.iter_19.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_20.code == "-"
        ? [for i, b in local.iter_19.tape : (i == local.iter_19.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_20.code == ","
        ? [for i, b in local.iter_19.tape : (i == local.iter_19.tape_ptr ? local.ascii_lookup[local.curr_20.input] : b)]
        : local.iter_19.tape)

    tape_ptr = (
      local.curr_20.code == "<"
        ? local.iter_19.tape_ptr == 0 ? length(local.iter_19.tape) - 1 : local.iter_19.tape_ptr - 1 :
      local.curr_20.code == ">"
        ? local.iter_19.tape_ptr == length(local.iter_19.tape) - 1 ? 0 : local.iter_19.tape_ptr + 1
        : local.iter_19.tape_ptr)

    code_ptr = 1 + (
      local.curr_20.code == "["
        ? local.iter_19.tape[local.iter_19.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_19.code_ptr)] : local.iter_19.code_ptr :
      local.curr_20.code == "]"
        ? local.iter_19.tape[local.iter_19.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_19.code_ptr)] : local.iter_19.code_ptr
        : local.iter_19.code_ptr)

    steps_taken = 1 + local.iter_19.steps_taken
  }
}

locals {
  end_of_code_21 = try(local.iter_20.code_ptr >= length(var.code), true)

  curr_21 = local.end_of_code_21 ? null : {
    code = substr(var.code, local.iter_20.code_ptr, 1)
    input = substr(var.code, local.iter_20.code_ptr, 1) == "," ? substr(local.iter_20.input, 0, 1) : null
  }

  iter_21 = local.end_of_code_21 ? local.iter_20 : {
    input = (local.curr_21.code == ","
      ? substr(local.iter_20.input, 1, -1)
      : local.iter_20.input)

    output = (local.curr_21.code == "."
      ? "${local.iter_20.output}${jsondecode(format("\"\\u%04x\"", local.iter_20.tape[local.iter_20.tape_ptr]))}"
      : local.iter_20.output)
    
    tape = (
      local.curr_21.code == "+"
        ? [for i, b in local.iter_20.tape : (i == local.iter_20.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_21.code == "-"
        ? [for i, b in local.iter_20.tape : (i == local.iter_20.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_21.code == ","
        ? [for i, b in local.iter_20.tape : (i == local.iter_20.tape_ptr ? local.ascii_lookup[local.curr_21.input] : b)]
        : local.iter_20.tape)

    tape_ptr = (
      local.curr_21.code == "<"
        ? local.iter_20.tape_ptr == 0 ? length(local.iter_20.tape) - 1 : local.iter_20.tape_ptr - 1 :
      local.curr_21.code == ">"
        ? local.iter_20.tape_ptr == length(local.iter_20.tape) - 1 ? 0 : local.iter_20.tape_ptr + 1
        : local.iter_20.tape_ptr)

    code_ptr = 1 + (
      local.curr_21.code == "["
        ? local.iter_20.tape[local.iter_20.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_20.code_ptr)] : local.iter_20.code_ptr :
      local.curr_21.code == "]"
        ? local.iter_20.tape[local.iter_20.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_20.code_ptr)] : local.iter_20.code_ptr
        : local.iter_20.code_ptr)

    steps_taken = 1 + local.iter_20.steps_taken
  }
}

locals {
  end_of_code_22 = try(local.iter_21.code_ptr >= length(var.code), true)

  curr_22 = local.end_of_code_22 ? null : {
    code = substr(var.code, local.iter_21.code_ptr, 1)
    input = substr(var.code, local.iter_21.code_ptr, 1) == "," ? substr(local.iter_21.input, 0, 1) : null
  }

  iter_22 = local.end_of_code_22 ? local.iter_21 : {
    input = (local.curr_22.code == ","
      ? substr(local.iter_21.input, 1, -1)
      : local.iter_21.input)

    output = (local.curr_22.code == "."
      ? "${local.iter_21.output}${jsondecode(format("\"\\u%04x\"", local.iter_21.tape[local.iter_21.tape_ptr]))}"
      : local.iter_21.output)
    
    tape = (
      local.curr_22.code == "+"
        ? [for i, b in local.iter_21.tape : (i == local.iter_21.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_22.code == "-"
        ? [for i, b in local.iter_21.tape : (i == local.iter_21.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_22.code == ","
        ? [for i, b in local.iter_21.tape : (i == local.iter_21.tape_ptr ? local.ascii_lookup[local.curr_22.input] : b)]
        : local.iter_21.tape)

    tape_ptr = (
      local.curr_22.code == "<"
        ? local.iter_21.tape_ptr == 0 ? length(local.iter_21.tape) - 1 : local.iter_21.tape_ptr - 1 :
      local.curr_22.code == ">"
        ? local.iter_21.tape_ptr == length(local.iter_21.tape) - 1 ? 0 : local.iter_21.tape_ptr + 1
        : local.iter_21.tape_ptr)

    code_ptr = 1 + (
      local.curr_22.code == "["
        ? local.iter_21.tape[local.iter_21.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_21.code_ptr)] : local.iter_21.code_ptr :
      local.curr_22.code == "]"
        ? local.iter_21.tape[local.iter_21.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_21.code_ptr)] : local.iter_21.code_ptr
        : local.iter_21.code_ptr)

    steps_taken = 1 + local.iter_21.steps_taken
  }
}

locals {
  end_of_code_23 = try(local.iter_22.code_ptr >= length(var.code), true)

  curr_23 = local.end_of_code_23 ? null : {
    code = substr(var.code, local.iter_22.code_ptr, 1)
    input = substr(var.code, local.iter_22.code_ptr, 1) == "," ? substr(local.iter_22.input, 0, 1) : null
  }

  iter_23 = local.end_of_code_23 ? local.iter_22 : {
    input = (local.curr_23.code == ","
      ? substr(local.iter_22.input, 1, -1)
      : local.iter_22.input)

    output = (local.curr_23.code == "."
      ? "${local.iter_22.output}${jsondecode(format("\"\\u%04x\"", local.iter_22.tape[local.iter_22.tape_ptr]))}"
      : local.iter_22.output)
    
    tape = (
      local.curr_23.code == "+"
        ? [for i, b in local.iter_22.tape : (i == local.iter_22.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_23.code == "-"
        ? [for i, b in local.iter_22.tape : (i == local.iter_22.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_23.code == ","
        ? [for i, b in local.iter_22.tape : (i == local.iter_22.tape_ptr ? local.ascii_lookup[local.curr_23.input] : b)]
        : local.iter_22.tape)

    tape_ptr = (
      local.curr_23.code == "<"
        ? local.iter_22.tape_ptr == 0 ? length(local.iter_22.tape) - 1 : local.iter_22.tape_ptr - 1 :
      local.curr_23.code == ">"
        ? local.iter_22.tape_ptr == length(local.iter_22.tape) - 1 ? 0 : local.iter_22.tape_ptr + 1
        : local.iter_22.tape_ptr)

    code_ptr = 1 + (
      local.curr_23.code == "["
        ? local.iter_22.tape[local.iter_22.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_22.code_ptr)] : local.iter_22.code_ptr :
      local.curr_23.code == "]"
        ? local.iter_22.tape[local.iter_22.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_22.code_ptr)] : local.iter_22.code_ptr
        : local.iter_22.code_ptr)

    steps_taken = 1 + local.iter_22.steps_taken
  }
}

locals {
  end_of_code_24 = try(local.iter_23.code_ptr >= length(var.code), true)

  curr_24 = local.end_of_code_24 ? null : {
    code = substr(var.code, local.iter_23.code_ptr, 1)
    input = substr(var.code, local.iter_23.code_ptr, 1) == "," ? substr(local.iter_23.input, 0, 1) : null
  }

  iter_24 = local.end_of_code_24 ? local.iter_23 : {
    input = (local.curr_24.code == ","
      ? substr(local.iter_23.input, 1, -1)
      : local.iter_23.input)

    output = (local.curr_24.code == "."
      ? "${local.iter_23.output}${jsondecode(format("\"\\u%04x\"", local.iter_23.tape[local.iter_23.tape_ptr]))}"
      : local.iter_23.output)
    
    tape = (
      local.curr_24.code == "+"
        ? [for i, b in local.iter_23.tape : (i == local.iter_23.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_24.code == "-"
        ? [for i, b in local.iter_23.tape : (i == local.iter_23.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_24.code == ","
        ? [for i, b in local.iter_23.tape : (i == local.iter_23.tape_ptr ? local.ascii_lookup[local.curr_24.input] : b)]
        : local.iter_23.tape)

    tape_ptr = (
      local.curr_24.code == "<"
        ? local.iter_23.tape_ptr == 0 ? length(local.iter_23.tape) - 1 : local.iter_23.tape_ptr - 1 :
      local.curr_24.code == ">"
        ? local.iter_23.tape_ptr == length(local.iter_23.tape) - 1 ? 0 : local.iter_23.tape_ptr + 1
        : local.iter_23.tape_ptr)

    code_ptr = 1 + (
      local.curr_24.code == "["
        ? local.iter_23.tape[local.iter_23.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_23.code_ptr)] : local.iter_23.code_ptr :
      local.curr_24.code == "]"
        ? local.iter_23.tape[local.iter_23.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_23.code_ptr)] : local.iter_23.code_ptr
        : local.iter_23.code_ptr)

    steps_taken = 1 + local.iter_23.steps_taken
  }
}

locals {
  end_of_code_25 = try(local.iter_24.code_ptr >= length(var.code), true)

  curr_25 = local.end_of_code_25 ? null : {
    code = substr(var.code, local.iter_24.code_ptr, 1)
    input = substr(var.code, local.iter_24.code_ptr, 1) == "," ? substr(local.iter_24.input, 0, 1) : null
  }

  iter_25 = local.end_of_code_25 ? local.iter_24 : {
    input = (local.curr_25.code == ","
      ? substr(local.iter_24.input, 1, -1)
      : local.iter_24.input)

    output = (local.curr_25.code == "."
      ? "${local.iter_24.output}${jsondecode(format("\"\\u%04x\"", local.iter_24.tape[local.iter_24.tape_ptr]))}"
      : local.iter_24.output)
    
    tape = (
      local.curr_25.code == "+"
        ? [for i, b in local.iter_24.tape : (i == local.iter_24.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_25.code == "-"
        ? [for i, b in local.iter_24.tape : (i == local.iter_24.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_25.code == ","
        ? [for i, b in local.iter_24.tape : (i == local.iter_24.tape_ptr ? local.ascii_lookup[local.curr_25.input] : b)]
        : local.iter_24.tape)

    tape_ptr = (
      local.curr_25.code == "<"
        ? local.iter_24.tape_ptr == 0 ? length(local.iter_24.tape) - 1 : local.iter_24.tape_ptr - 1 :
      local.curr_25.code == ">"
        ? local.iter_24.tape_ptr == length(local.iter_24.tape) - 1 ? 0 : local.iter_24.tape_ptr + 1
        : local.iter_24.tape_ptr)

    code_ptr = 1 + (
      local.curr_25.code == "["
        ? local.iter_24.tape[local.iter_24.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_24.code_ptr)] : local.iter_24.code_ptr :
      local.curr_25.code == "]"
        ? local.iter_24.tape[local.iter_24.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_24.code_ptr)] : local.iter_24.code_ptr
        : local.iter_24.code_ptr)

    steps_taken = 1 + local.iter_24.steps_taken
  }
}

locals {
  end_of_code_26 = try(local.iter_25.code_ptr >= length(var.code), true)

  curr_26 = local.end_of_code_26 ? null : {
    code = substr(var.code, local.iter_25.code_ptr, 1)
    input = substr(var.code, local.iter_25.code_ptr, 1) == "," ? substr(local.iter_25.input, 0, 1) : null
  }

  iter_26 = local.end_of_code_26 ? local.iter_25 : {
    input = (local.curr_26.code == ","
      ? substr(local.iter_25.input, 1, -1)
      : local.iter_25.input)

    output = (local.curr_26.code == "."
      ? "${local.iter_25.output}${jsondecode(format("\"\\u%04x\"", local.iter_25.tape[local.iter_25.tape_ptr]))}"
      : local.iter_25.output)
    
    tape = (
      local.curr_26.code == "+"
        ? [for i, b in local.iter_25.tape : (i == local.iter_25.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_26.code == "-"
        ? [for i, b in local.iter_25.tape : (i == local.iter_25.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_26.code == ","
        ? [for i, b in local.iter_25.tape : (i == local.iter_25.tape_ptr ? local.ascii_lookup[local.curr_26.input] : b)]
        : local.iter_25.tape)

    tape_ptr = (
      local.curr_26.code == "<"
        ? local.iter_25.tape_ptr == 0 ? length(local.iter_25.tape) - 1 : local.iter_25.tape_ptr - 1 :
      local.curr_26.code == ">"
        ? local.iter_25.tape_ptr == length(local.iter_25.tape) - 1 ? 0 : local.iter_25.tape_ptr + 1
        : local.iter_25.tape_ptr)

    code_ptr = 1 + (
      local.curr_26.code == "["
        ? local.iter_25.tape[local.iter_25.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_25.code_ptr)] : local.iter_25.code_ptr :
      local.curr_26.code == "]"
        ? local.iter_25.tape[local.iter_25.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_25.code_ptr)] : local.iter_25.code_ptr
        : local.iter_25.code_ptr)

    steps_taken = 1 + local.iter_25.steps_taken
  }
}

locals {
  end_of_code_27 = try(local.iter_26.code_ptr >= length(var.code), true)

  curr_27 = local.end_of_code_27 ? null : {
    code = substr(var.code, local.iter_26.code_ptr, 1)
    input = substr(var.code, local.iter_26.code_ptr, 1) == "," ? substr(local.iter_26.input, 0, 1) : null
  }

  iter_27 = local.end_of_code_27 ? local.iter_26 : {
    input = (local.curr_27.code == ","
      ? substr(local.iter_26.input, 1, -1)
      : local.iter_26.input)

    output = (local.curr_27.code == "."
      ? "${local.iter_26.output}${jsondecode(format("\"\\u%04x\"", local.iter_26.tape[local.iter_26.tape_ptr]))}"
      : local.iter_26.output)
    
    tape = (
      local.curr_27.code == "+"
        ? [for i, b in local.iter_26.tape : (i == local.iter_26.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_27.code == "-"
        ? [for i, b in local.iter_26.tape : (i == local.iter_26.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_27.code == ","
        ? [for i, b in local.iter_26.tape : (i == local.iter_26.tape_ptr ? local.ascii_lookup[local.curr_27.input] : b)]
        : local.iter_26.tape)

    tape_ptr = (
      local.curr_27.code == "<"
        ? local.iter_26.tape_ptr == 0 ? length(local.iter_26.tape) - 1 : local.iter_26.tape_ptr - 1 :
      local.curr_27.code == ">"
        ? local.iter_26.tape_ptr == length(local.iter_26.tape) - 1 ? 0 : local.iter_26.tape_ptr + 1
        : local.iter_26.tape_ptr)

    code_ptr = 1 + (
      local.curr_27.code == "["
        ? local.iter_26.tape[local.iter_26.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_26.code_ptr)] : local.iter_26.code_ptr :
      local.curr_27.code == "]"
        ? local.iter_26.tape[local.iter_26.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_26.code_ptr)] : local.iter_26.code_ptr
        : local.iter_26.code_ptr)

    steps_taken = 1 + local.iter_26.steps_taken
  }
}

locals {
  end_of_code_28 = try(local.iter_27.code_ptr >= length(var.code), true)

  curr_28 = local.end_of_code_28 ? null : {
    code = substr(var.code, local.iter_27.code_ptr, 1)
    input = substr(var.code, local.iter_27.code_ptr, 1) == "," ? substr(local.iter_27.input, 0, 1) : null
  }

  iter_28 = local.end_of_code_28 ? local.iter_27 : {
    input = (local.curr_28.code == ","
      ? substr(local.iter_27.input, 1, -1)
      : local.iter_27.input)

    output = (local.curr_28.code == "."
      ? "${local.iter_27.output}${jsondecode(format("\"\\u%04x\"", local.iter_27.tape[local.iter_27.tape_ptr]))}"
      : local.iter_27.output)
    
    tape = (
      local.curr_28.code == "+"
        ? [for i, b in local.iter_27.tape : (i == local.iter_27.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_28.code == "-"
        ? [for i, b in local.iter_27.tape : (i == local.iter_27.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_28.code == ","
        ? [for i, b in local.iter_27.tape : (i == local.iter_27.tape_ptr ? local.ascii_lookup[local.curr_28.input] : b)]
        : local.iter_27.tape)

    tape_ptr = (
      local.curr_28.code == "<"
        ? local.iter_27.tape_ptr == 0 ? length(local.iter_27.tape) - 1 : local.iter_27.tape_ptr - 1 :
      local.curr_28.code == ">"
        ? local.iter_27.tape_ptr == length(local.iter_27.tape) - 1 ? 0 : local.iter_27.tape_ptr + 1
        : local.iter_27.tape_ptr)

    code_ptr = 1 + (
      local.curr_28.code == "["
        ? local.iter_27.tape[local.iter_27.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_27.code_ptr)] : local.iter_27.code_ptr :
      local.curr_28.code == "]"
        ? local.iter_27.tape[local.iter_27.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_27.code_ptr)] : local.iter_27.code_ptr
        : local.iter_27.code_ptr)

    steps_taken = 1 + local.iter_27.steps_taken
  }
}

locals {
  end_of_code_29 = try(local.iter_28.code_ptr >= length(var.code), true)

  curr_29 = local.end_of_code_29 ? null : {
    code = substr(var.code, local.iter_28.code_ptr, 1)
    input = substr(var.code, local.iter_28.code_ptr, 1) == "," ? substr(local.iter_28.input, 0, 1) : null
  }

  iter_29 = local.end_of_code_29 ? local.iter_28 : {
    input = (local.curr_29.code == ","
      ? substr(local.iter_28.input, 1, -1)
      : local.iter_28.input)

    output = (local.curr_29.code == "."
      ? "${local.iter_28.output}${jsondecode(format("\"\\u%04x\"", local.iter_28.tape[local.iter_28.tape_ptr]))}"
      : local.iter_28.output)
    
    tape = (
      local.curr_29.code == "+"
        ? [for i, b in local.iter_28.tape : (i == local.iter_28.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_29.code == "-"
        ? [for i, b in local.iter_28.tape : (i == local.iter_28.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_29.code == ","
        ? [for i, b in local.iter_28.tape : (i == local.iter_28.tape_ptr ? local.ascii_lookup[local.curr_29.input] : b)]
        : local.iter_28.tape)

    tape_ptr = (
      local.curr_29.code == "<"
        ? local.iter_28.tape_ptr == 0 ? length(local.iter_28.tape) - 1 : local.iter_28.tape_ptr - 1 :
      local.curr_29.code == ">"
        ? local.iter_28.tape_ptr == length(local.iter_28.tape) - 1 ? 0 : local.iter_28.tape_ptr + 1
        : local.iter_28.tape_ptr)

    code_ptr = 1 + (
      local.curr_29.code == "["
        ? local.iter_28.tape[local.iter_28.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_28.code_ptr)] : local.iter_28.code_ptr :
      local.curr_29.code == "]"
        ? local.iter_28.tape[local.iter_28.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_28.code_ptr)] : local.iter_28.code_ptr
        : local.iter_28.code_ptr)

    steps_taken = 1 + local.iter_28.steps_taken
  }
}

locals {
  end_of_code_30 = try(local.iter_29.code_ptr >= length(var.code), true)

  curr_30 = local.end_of_code_30 ? null : {
    code = substr(var.code, local.iter_29.code_ptr, 1)
    input = substr(var.code, local.iter_29.code_ptr, 1) == "," ? substr(local.iter_29.input, 0, 1) : null
  }

  iter_30 = local.end_of_code_30 ? local.iter_29 : {
    input = (local.curr_30.code == ","
      ? substr(local.iter_29.input, 1, -1)
      : local.iter_29.input)

    output = (local.curr_30.code == "."
      ? "${local.iter_29.output}${jsondecode(format("\"\\u%04x\"", local.iter_29.tape[local.iter_29.tape_ptr]))}"
      : local.iter_29.output)
    
    tape = (
      local.curr_30.code == "+"
        ? [for i, b in local.iter_29.tape : (i == local.iter_29.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_30.code == "-"
        ? [for i, b in local.iter_29.tape : (i == local.iter_29.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_30.code == ","
        ? [for i, b in local.iter_29.tape : (i == local.iter_29.tape_ptr ? local.ascii_lookup[local.curr_30.input] : b)]
        : local.iter_29.tape)

    tape_ptr = (
      local.curr_30.code == "<"
        ? local.iter_29.tape_ptr == 0 ? length(local.iter_29.tape) - 1 : local.iter_29.tape_ptr - 1 :
      local.curr_30.code == ">"
        ? local.iter_29.tape_ptr == length(local.iter_29.tape) - 1 ? 0 : local.iter_29.tape_ptr + 1
        : local.iter_29.tape_ptr)

    code_ptr = 1 + (
      local.curr_30.code == "["
        ? local.iter_29.tape[local.iter_29.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_29.code_ptr)] : local.iter_29.code_ptr :
      local.curr_30.code == "]"
        ? local.iter_29.tape[local.iter_29.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_29.code_ptr)] : local.iter_29.code_ptr
        : local.iter_29.code_ptr)

    steps_taken = 1 + local.iter_29.steps_taken
  }
}

locals {
  end_of_code_31 = try(local.iter_30.code_ptr >= length(var.code), true)

  curr_31 = local.end_of_code_31 ? null : {
    code = substr(var.code, local.iter_30.code_ptr, 1)
    input = substr(var.code, local.iter_30.code_ptr, 1) == "," ? substr(local.iter_30.input, 0, 1) : null
  }

  iter_31 = local.end_of_code_31 ? local.iter_30 : {
    input = (local.curr_31.code == ","
      ? substr(local.iter_30.input, 1, -1)
      : local.iter_30.input)

    output = (local.curr_31.code == "."
      ? "${local.iter_30.output}${jsondecode(format("\"\\u%04x\"", local.iter_30.tape[local.iter_30.tape_ptr]))}"
      : local.iter_30.output)
    
    tape = (
      local.curr_31.code == "+"
        ? [for i, b in local.iter_30.tape : (i == local.iter_30.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_31.code == "-"
        ? [for i, b in local.iter_30.tape : (i == local.iter_30.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_31.code == ","
        ? [for i, b in local.iter_30.tape : (i == local.iter_30.tape_ptr ? local.ascii_lookup[local.curr_31.input] : b)]
        : local.iter_30.tape)

    tape_ptr = (
      local.curr_31.code == "<"
        ? local.iter_30.tape_ptr == 0 ? length(local.iter_30.tape) - 1 : local.iter_30.tape_ptr - 1 :
      local.curr_31.code == ">"
        ? local.iter_30.tape_ptr == length(local.iter_30.tape) - 1 ? 0 : local.iter_30.tape_ptr + 1
        : local.iter_30.tape_ptr)

    code_ptr = 1 + (
      local.curr_31.code == "["
        ? local.iter_30.tape[local.iter_30.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_30.code_ptr)] : local.iter_30.code_ptr :
      local.curr_31.code == "]"
        ? local.iter_30.tape[local.iter_30.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_30.code_ptr)] : local.iter_30.code_ptr
        : local.iter_30.code_ptr)

    steps_taken = 1 + local.iter_30.steps_taken
  }
}

locals {
  end_of_code_32 = try(local.iter_31.code_ptr >= length(var.code), true)

  curr_32 = local.end_of_code_32 ? null : {
    code = substr(var.code, local.iter_31.code_ptr, 1)
    input = substr(var.code, local.iter_31.code_ptr, 1) == "," ? substr(local.iter_31.input, 0, 1) : null
  }

  iter_32 = local.end_of_code_32 ? local.iter_31 : {
    input = (local.curr_32.code == ","
      ? substr(local.iter_31.input, 1, -1)
      : local.iter_31.input)

    output = (local.curr_32.code == "."
      ? "${local.iter_31.output}${jsondecode(format("\"\\u%04x\"", local.iter_31.tape[local.iter_31.tape_ptr]))}"
      : local.iter_31.output)
    
    tape = (
      local.curr_32.code == "+"
        ? [for i, b in local.iter_31.tape : (i == local.iter_31.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_32.code == "-"
        ? [for i, b in local.iter_31.tape : (i == local.iter_31.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_32.code == ","
        ? [for i, b in local.iter_31.tape : (i == local.iter_31.tape_ptr ? local.ascii_lookup[local.curr_32.input] : b)]
        : local.iter_31.tape)

    tape_ptr = (
      local.curr_32.code == "<"
        ? local.iter_31.tape_ptr == 0 ? length(local.iter_31.tape) - 1 : local.iter_31.tape_ptr - 1 :
      local.curr_32.code == ">"
        ? local.iter_31.tape_ptr == length(local.iter_31.tape) - 1 ? 0 : local.iter_31.tape_ptr + 1
        : local.iter_31.tape_ptr)

    code_ptr = 1 + (
      local.curr_32.code == "["
        ? local.iter_31.tape[local.iter_31.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_31.code_ptr)] : local.iter_31.code_ptr :
      local.curr_32.code == "]"
        ? local.iter_31.tape[local.iter_31.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_31.code_ptr)] : local.iter_31.code_ptr
        : local.iter_31.code_ptr)

    steps_taken = 1 + local.iter_31.steps_taken
  }
}

locals {
  end_of_code_33 = try(local.iter_32.code_ptr >= length(var.code), true)

  curr_33 = local.end_of_code_33 ? null : {
    code = substr(var.code, local.iter_32.code_ptr, 1)
    input = substr(var.code, local.iter_32.code_ptr, 1) == "," ? substr(local.iter_32.input, 0, 1) : null
  }

  iter_33 = local.end_of_code_33 ? local.iter_32 : {
    input = (local.curr_33.code == ","
      ? substr(local.iter_32.input, 1, -1)
      : local.iter_32.input)

    output = (local.curr_33.code == "."
      ? "${local.iter_32.output}${jsondecode(format("\"\\u%04x\"", local.iter_32.tape[local.iter_32.tape_ptr]))}"
      : local.iter_32.output)
    
    tape = (
      local.curr_33.code == "+"
        ? [for i, b in local.iter_32.tape : (i == local.iter_32.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_33.code == "-"
        ? [for i, b in local.iter_32.tape : (i == local.iter_32.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_33.code == ","
        ? [for i, b in local.iter_32.tape : (i == local.iter_32.tape_ptr ? local.ascii_lookup[local.curr_33.input] : b)]
        : local.iter_32.tape)

    tape_ptr = (
      local.curr_33.code == "<"
        ? local.iter_32.tape_ptr == 0 ? length(local.iter_32.tape) - 1 : local.iter_32.tape_ptr - 1 :
      local.curr_33.code == ">"
        ? local.iter_32.tape_ptr == length(local.iter_32.tape) - 1 ? 0 : local.iter_32.tape_ptr + 1
        : local.iter_32.tape_ptr)

    code_ptr = 1 + (
      local.curr_33.code == "["
        ? local.iter_32.tape[local.iter_32.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_32.code_ptr)] : local.iter_32.code_ptr :
      local.curr_33.code == "]"
        ? local.iter_32.tape[local.iter_32.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_32.code_ptr)] : local.iter_32.code_ptr
        : local.iter_32.code_ptr)

    steps_taken = 1 + local.iter_32.steps_taken
  }
}

locals {
  end_of_code_34 = try(local.iter_33.code_ptr >= length(var.code), true)

  curr_34 = local.end_of_code_34 ? null : {
    code = substr(var.code, local.iter_33.code_ptr, 1)
    input = substr(var.code, local.iter_33.code_ptr, 1) == "," ? substr(local.iter_33.input, 0, 1) : null
  }

  iter_34 = local.end_of_code_34 ? local.iter_33 : {
    input = (local.curr_34.code == ","
      ? substr(local.iter_33.input, 1, -1)
      : local.iter_33.input)

    output = (local.curr_34.code == "."
      ? "${local.iter_33.output}${jsondecode(format("\"\\u%04x\"", local.iter_33.tape[local.iter_33.tape_ptr]))}"
      : local.iter_33.output)
    
    tape = (
      local.curr_34.code == "+"
        ? [for i, b in local.iter_33.tape : (i == local.iter_33.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_34.code == "-"
        ? [for i, b in local.iter_33.tape : (i == local.iter_33.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_34.code == ","
        ? [for i, b in local.iter_33.tape : (i == local.iter_33.tape_ptr ? local.ascii_lookup[local.curr_34.input] : b)]
        : local.iter_33.tape)

    tape_ptr = (
      local.curr_34.code == "<"
        ? local.iter_33.tape_ptr == 0 ? length(local.iter_33.tape) - 1 : local.iter_33.tape_ptr - 1 :
      local.curr_34.code == ">"
        ? local.iter_33.tape_ptr == length(local.iter_33.tape) - 1 ? 0 : local.iter_33.tape_ptr + 1
        : local.iter_33.tape_ptr)

    code_ptr = 1 + (
      local.curr_34.code == "["
        ? local.iter_33.tape[local.iter_33.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_33.code_ptr)] : local.iter_33.code_ptr :
      local.curr_34.code == "]"
        ? local.iter_33.tape[local.iter_33.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_33.code_ptr)] : local.iter_33.code_ptr
        : local.iter_33.code_ptr)

    steps_taken = 1 + local.iter_33.steps_taken
  }
}

locals {
  end_of_code_35 = try(local.iter_34.code_ptr >= length(var.code), true)

  curr_35 = local.end_of_code_35 ? null : {
    code = substr(var.code, local.iter_34.code_ptr, 1)
    input = substr(var.code, local.iter_34.code_ptr, 1) == "," ? substr(local.iter_34.input, 0, 1) : null
  }

  iter_35 = local.end_of_code_35 ? local.iter_34 : {
    input = (local.curr_35.code == ","
      ? substr(local.iter_34.input, 1, -1)
      : local.iter_34.input)

    output = (local.curr_35.code == "."
      ? "${local.iter_34.output}${jsondecode(format("\"\\u%04x\"", local.iter_34.tape[local.iter_34.tape_ptr]))}"
      : local.iter_34.output)
    
    tape = (
      local.curr_35.code == "+"
        ? [for i, b in local.iter_34.tape : (i == local.iter_34.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_35.code == "-"
        ? [for i, b in local.iter_34.tape : (i == local.iter_34.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_35.code == ","
        ? [for i, b in local.iter_34.tape : (i == local.iter_34.tape_ptr ? local.ascii_lookup[local.curr_35.input] : b)]
        : local.iter_34.tape)

    tape_ptr = (
      local.curr_35.code == "<"
        ? local.iter_34.tape_ptr == 0 ? length(local.iter_34.tape) - 1 : local.iter_34.tape_ptr - 1 :
      local.curr_35.code == ">"
        ? local.iter_34.tape_ptr == length(local.iter_34.tape) - 1 ? 0 : local.iter_34.tape_ptr + 1
        : local.iter_34.tape_ptr)

    code_ptr = 1 + (
      local.curr_35.code == "["
        ? local.iter_34.tape[local.iter_34.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_34.code_ptr)] : local.iter_34.code_ptr :
      local.curr_35.code == "]"
        ? local.iter_34.tape[local.iter_34.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_34.code_ptr)] : local.iter_34.code_ptr
        : local.iter_34.code_ptr)

    steps_taken = 1 + local.iter_34.steps_taken
  }
}

locals {
  end_of_code_36 = try(local.iter_35.code_ptr >= length(var.code), true)

  curr_36 = local.end_of_code_36 ? null : {
    code = substr(var.code, local.iter_35.code_ptr, 1)
    input = substr(var.code, local.iter_35.code_ptr, 1) == "," ? substr(local.iter_35.input, 0, 1) : null
  }

  iter_36 = local.end_of_code_36 ? local.iter_35 : {
    input = (local.curr_36.code == ","
      ? substr(local.iter_35.input, 1, -1)
      : local.iter_35.input)

    output = (local.curr_36.code == "."
      ? "${local.iter_35.output}${jsondecode(format("\"\\u%04x\"", local.iter_35.tape[local.iter_35.tape_ptr]))}"
      : local.iter_35.output)
    
    tape = (
      local.curr_36.code == "+"
        ? [for i, b in local.iter_35.tape : (i == local.iter_35.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_36.code == "-"
        ? [for i, b in local.iter_35.tape : (i == local.iter_35.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_36.code == ","
        ? [for i, b in local.iter_35.tape : (i == local.iter_35.tape_ptr ? local.ascii_lookup[local.curr_36.input] : b)]
        : local.iter_35.tape)

    tape_ptr = (
      local.curr_36.code == "<"
        ? local.iter_35.tape_ptr == 0 ? length(local.iter_35.tape) - 1 : local.iter_35.tape_ptr - 1 :
      local.curr_36.code == ">"
        ? local.iter_35.tape_ptr == length(local.iter_35.tape) - 1 ? 0 : local.iter_35.tape_ptr + 1
        : local.iter_35.tape_ptr)

    code_ptr = 1 + (
      local.curr_36.code == "["
        ? local.iter_35.tape[local.iter_35.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_35.code_ptr)] : local.iter_35.code_ptr :
      local.curr_36.code == "]"
        ? local.iter_35.tape[local.iter_35.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_35.code_ptr)] : local.iter_35.code_ptr
        : local.iter_35.code_ptr)

    steps_taken = 1 + local.iter_35.steps_taken
  }
}

locals {
  end_of_code_37 = try(local.iter_36.code_ptr >= length(var.code), true)

  curr_37 = local.end_of_code_37 ? null : {
    code = substr(var.code, local.iter_36.code_ptr, 1)
    input = substr(var.code, local.iter_36.code_ptr, 1) == "," ? substr(local.iter_36.input, 0, 1) : null
  }

  iter_37 = local.end_of_code_37 ? local.iter_36 : {
    input = (local.curr_37.code == ","
      ? substr(local.iter_36.input, 1, -1)
      : local.iter_36.input)

    output = (local.curr_37.code == "."
      ? "${local.iter_36.output}${jsondecode(format("\"\\u%04x\"", local.iter_36.tape[local.iter_36.tape_ptr]))}"
      : local.iter_36.output)
    
    tape = (
      local.curr_37.code == "+"
        ? [for i, b in local.iter_36.tape : (i == local.iter_36.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_37.code == "-"
        ? [for i, b in local.iter_36.tape : (i == local.iter_36.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_37.code == ","
        ? [for i, b in local.iter_36.tape : (i == local.iter_36.tape_ptr ? local.ascii_lookup[local.curr_37.input] : b)]
        : local.iter_36.tape)

    tape_ptr = (
      local.curr_37.code == "<"
        ? local.iter_36.tape_ptr == 0 ? length(local.iter_36.tape) - 1 : local.iter_36.tape_ptr - 1 :
      local.curr_37.code == ">"
        ? local.iter_36.tape_ptr == length(local.iter_36.tape) - 1 ? 0 : local.iter_36.tape_ptr + 1
        : local.iter_36.tape_ptr)

    code_ptr = 1 + (
      local.curr_37.code == "["
        ? local.iter_36.tape[local.iter_36.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_36.code_ptr)] : local.iter_36.code_ptr :
      local.curr_37.code == "]"
        ? local.iter_36.tape[local.iter_36.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_36.code_ptr)] : local.iter_36.code_ptr
        : local.iter_36.code_ptr)

    steps_taken = 1 + local.iter_36.steps_taken
  }
}

locals {
  end_of_code_38 = try(local.iter_37.code_ptr >= length(var.code), true)

  curr_38 = local.end_of_code_38 ? null : {
    code = substr(var.code, local.iter_37.code_ptr, 1)
    input = substr(var.code, local.iter_37.code_ptr, 1) == "," ? substr(local.iter_37.input, 0, 1) : null
  }

  iter_38 = local.end_of_code_38 ? local.iter_37 : {
    input = (local.curr_38.code == ","
      ? substr(local.iter_37.input, 1, -1)
      : local.iter_37.input)

    output = (local.curr_38.code == "."
      ? "${local.iter_37.output}${jsondecode(format("\"\\u%04x\"", local.iter_37.tape[local.iter_37.tape_ptr]))}"
      : local.iter_37.output)
    
    tape = (
      local.curr_38.code == "+"
        ? [for i, b in local.iter_37.tape : (i == local.iter_37.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_38.code == "-"
        ? [for i, b in local.iter_37.tape : (i == local.iter_37.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_38.code == ","
        ? [for i, b in local.iter_37.tape : (i == local.iter_37.tape_ptr ? local.ascii_lookup[local.curr_38.input] : b)]
        : local.iter_37.tape)

    tape_ptr = (
      local.curr_38.code == "<"
        ? local.iter_37.tape_ptr == 0 ? length(local.iter_37.tape) - 1 : local.iter_37.tape_ptr - 1 :
      local.curr_38.code == ">"
        ? local.iter_37.tape_ptr == length(local.iter_37.tape) - 1 ? 0 : local.iter_37.tape_ptr + 1
        : local.iter_37.tape_ptr)

    code_ptr = 1 + (
      local.curr_38.code == "["
        ? local.iter_37.tape[local.iter_37.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_37.code_ptr)] : local.iter_37.code_ptr :
      local.curr_38.code == "]"
        ? local.iter_37.tape[local.iter_37.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_37.code_ptr)] : local.iter_37.code_ptr
        : local.iter_37.code_ptr)

    steps_taken = 1 + local.iter_37.steps_taken
  }
}

locals {
  end_of_code_39 = try(local.iter_38.code_ptr >= length(var.code), true)

  curr_39 = local.end_of_code_39 ? null : {
    code = substr(var.code, local.iter_38.code_ptr, 1)
    input = substr(var.code, local.iter_38.code_ptr, 1) == "," ? substr(local.iter_38.input, 0, 1) : null
  }

  iter_39 = local.end_of_code_39 ? local.iter_38 : {
    input = (local.curr_39.code == ","
      ? substr(local.iter_38.input, 1, -1)
      : local.iter_38.input)

    output = (local.curr_39.code == "."
      ? "${local.iter_38.output}${jsondecode(format("\"\\u%04x\"", local.iter_38.tape[local.iter_38.tape_ptr]))}"
      : local.iter_38.output)
    
    tape = (
      local.curr_39.code == "+"
        ? [for i, b in local.iter_38.tape : (i == local.iter_38.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_39.code == "-"
        ? [for i, b in local.iter_38.tape : (i == local.iter_38.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_39.code == ","
        ? [for i, b in local.iter_38.tape : (i == local.iter_38.tape_ptr ? local.ascii_lookup[local.curr_39.input] : b)]
        : local.iter_38.tape)

    tape_ptr = (
      local.curr_39.code == "<"
        ? local.iter_38.tape_ptr == 0 ? length(local.iter_38.tape) - 1 : local.iter_38.tape_ptr - 1 :
      local.curr_39.code == ">"
        ? local.iter_38.tape_ptr == length(local.iter_38.tape) - 1 ? 0 : local.iter_38.tape_ptr + 1
        : local.iter_38.tape_ptr)

    code_ptr = 1 + (
      local.curr_39.code == "["
        ? local.iter_38.tape[local.iter_38.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_38.code_ptr)] : local.iter_38.code_ptr :
      local.curr_39.code == "]"
        ? local.iter_38.tape[local.iter_38.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_38.code_ptr)] : local.iter_38.code_ptr
        : local.iter_38.code_ptr)

    steps_taken = 1 + local.iter_38.steps_taken
  }
}

locals {
  end_of_code_40 = try(local.iter_39.code_ptr >= length(var.code), true)

  curr_40 = local.end_of_code_40 ? null : {
    code = substr(var.code, local.iter_39.code_ptr, 1)
    input = substr(var.code, local.iter_39.code_ptr, 1) == "," ? substr(local.iter_39.input, 0, 1) : null
  }

  iter_40 = local.end_of_code_40 ? local.iter_39 : {
    input = (local.curr_40.code == ","
      ? substr(local.iter_39.input, 1, -1)
      : local.iter_39.input)

    output = (local.curr_40.code == "."
      ? "${local.iter_39.output}${jsondecode(format("\"\\u%04x\"", local.iter_39.tape[local.iter_39.tape_ptr]))}"
      : local.iter_39.output)
    
    tape = (
      local.curr_40.code == "+"
        ? [for i, b in local.iter_39.tape : (i == local.iter_39.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_40.code == "-"
        ? [for i, b in local.iter_39.tape : (i == local.iter_39.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_40.code == ","
        ? [for i, b in local.iter_39.tape : (i == local.iter_39.tape_ptr ? local.ascii_lookup[local.curr_40.input] : b)]
        : local.iter_39.tape)

    tape_ptr = (
      local.curr_40.code == "<"
        ? local.iter_39.tape_ptr == 0 ? length(local.iter_39.tape) - 1 : local.iter_39.tape_ptr - 1 :
      local.curr_40.code == ">"
        ? local.iter_39.tape_ptr == length(local.iter_39.tape) - 1 ? 0 : local.iter_39.tape_ptr + 1
        : local.iter_39.tape_ptr)

    code_ptr = 1 + (
      local.curr_40.code == "["
        ? local.iter_39.tape[local.iter_39.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_39.code_ptr)] : local.iter_39.code_ptr :
      local.curr_40.code == "]"
        ? local.iter_39.tape[local.iter_39.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_39.code_ptr)] : local.iter_39.code_ptr
        : local.iter_39.code_ptr)

    steps_taken = 1 + local.iter_39.steps_taken
  }
}

locals {
  end_of_code_41 = try(local.iter_40.code_ptr >= length(var.code), true)

  curr_41 = local.end_of_code_41 ? null : {
    code = substr(var.code, local.iter_40.code_ptr, 1)
    input = substr(var.code, local.iter_40.code_ptr, 1) == "," ? substr(local.iter_40.input, 0, 1) : null
  }

  iter_41 = local.end_of_code_41 ? local.iter_40 : {
    input = (local.curr_41.code == ","
      ? substr(local.iter_40.input, 1, -1)
      : local.iter_40.input)

    output = (local.curr_41.code == "."
      ? "${local.iter_40.output}${jsondecode(format("\"\\u%04x\"", local.iter_40.tape[local.iter_40.tape_ptr]))}"
      : local.iter_40.output)
    
    tape = (
      local.curr_41.code == "+"
        ? [for i, b in local.iter_40.tape : (i == local.iter_40.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_41.code == "-"
        ? [for i, b in local.iter_40.tape : (i == local.iter_40.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_41.code == ","
        ? [for i, b in local.iter_40.tape : (i == local.iter_40.tape_ptr ? local.ascii_lookup[local.curr_41.input] : b)]
        : local.iter_40.tape)

    tape_ptr = (
      local.curr_41.code == "<"
        ? local.iter_40.tape_ptr == 0 ? length(local.iter_40.tape) - 1 : local.iter_40.tape_ptr - 1 :
      local.curr_41.code == ">"
        ? local.iter_40.tape_ptr == length(local.iter_40.tape) - 1 ? 0 : local.iter_40.tape_ptr + 1
        : local.iter_40.tape_ptr)

    code_ptr = 1 + (
      local.curr_41.code == "["
        ? local.iter_40.tape[local.iter_40.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_40.code_ptr)] : local.iter_40.code_ptr :
      local.curr_41.code == "]"
        ? local.iter_40.tape[local.iter_40.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_40.code_ptr)] : local.iter_40.code_ptr
        : local.iter_40.code_ptr)

    steps_taken = 1 + local.iter_40.steps_taken
  }
}

locals {
  end_of_code_42 = try(local.iter_41.code_ptr >= length(var.code), true)

  curr_42 = local.end_of_code_42 ? null : {
    code = substr(var.code, local.iter_41.code_ptr, 1)
    input = substr(var.code, local.iter_41.code_ptr, 1) == "," ? substr(local.iter_41.input, 0, 1) : null
  }

  iter_42 = local.end_of_code_42 ? local.iter_41 : {
    input = (local.curr_42.code == ","
      ? substr(local.iter_41.input, 1, -1)
      : local.iter_41.input)

    output = (local.curr_42.code == "."
      ? "${local.iter_41.output}${jsondecode(format("\"\\u%04x\"", local.iter_41.tape[local.iter_41.tape_ptr]))}"
      : local.iter_41.output)
    
    tape = (
      local.curr_42.code == "+"
        ? [for i, b in local.iter_41.tape : (i == local.iter_41.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_42.code == "-"
        ? [for i, b in local.iter_41.tape : (i == local.iter_41.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_42.code == ","
        ? [for i, b in local.iter_41.tape : (i == local.iter_41.tape_ptr ? local.ascii_lookup[local.curr_42.input] : b)]
        : local.iter_41.tape)

    tape_ptr = (
      local.curr_42.code == "<"
        ? local.iter_41.tape_ptr == 0 ? length(local.iter_41.tape) - 1 : local.iter_41.tape_ptr - 1 :
      local.curr_42.code == ">"
        ? local.iter_41.tape_ptr == length(local.iter_41.tape) - 1 ? 0 : local.iter_41.tape_ptr + 1
        : local.iter_41.tape_ptr)

    code_ptr = 1 + (
      local.curr_42.code == "["
        ? local.iter_41.tape[local.iter_41.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_41.code_ptr)] : local.iter_41.code_ptr :
      local.curr_42.code == "]"
        ? local.iter_41.tape[local.iter_41.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_41.code_ptr)] : local.iter_41.code_ptr
        : local.iter_41.code_ptr)

    steps_taken = 1 + local.iter_41.steps_taken
  }
}

locals {
  end_of_code_43 = try(local.iter_42.code_ptr >= length(var.code), true)

  curr_43 = local.end_of_code_43 ? null : {
    code = substr(var.code, local.iter_42.code_ptr, 1)
    input = substr(var.code, local.iter_42.code_ptr, 1) == "," ? substr(local.iter_42.input, 0, 1) : null
  }

  iter_43 = local.end_of_code_43 ? local.iter_42 : {
    input = (local.curr_43.code == ","
      ? substr(local.iter_42.input, 1, -1)
      : local.iter_42.input)

    output = (local.curr_43.code == "."
      ? "${local.iter_42.output}${jsondecode(format("\"\\u%04x\"", local.iter_42.tape[local.iter_42.tape_ptr]))}"
      : local.iter_42.output)
    
    tape = (
      local.curr_43.code == "+"
        ? [for i, b in local.iter_42.tape : (i == local.iter_42.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_43.code == "-"
        ? [for i, b in local.iter_42.tape : (i == local.iter_42.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_43.code == ","
        ? [for i, b in local.iter_42.tape : (i == local.iter_42.tape_ptr ? local.ascii_lookup[local.curr_43.input] : b)]
        : local.iter_42.tape)

    tape_ptr = (
      local.curr_43.code == "<"
        ? local.iter_42.tape_ptr == 0 ? length(local.iter_42.tape) - 1 : local.iter_42.tape_ptr - 1 :
      local.curr_43.code == ">"
        ? local.iter_42.tape_ptr == length(local.iter_42.tape) - 1 ? 0 : local.iter_42.tape_ptr + 1
        : local.iter_42.tape_ptr)

    code_ptr = 1 + (
      local.curr_43.code == "["
        ? local.iter_42.tape[local.iter_42.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_42.code_ptr)] : local.iter_42.code_ptr :
      local.curr_43.code == "]"
        ? local.iter_42.tape[local.iter_42.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_42.code_ptr)] : local.iter_42.code_ptr
        : local.iter_42.code_ptr)

    steps_taken = 1 + local.iter_42.steps_taken
  }
}

locals {
  end_of_code_44 = try(local.iter_43.code_ptr >= length(var.code), true)

  curr_44 = local.end_of_code_44 ? null : {
    code = substr(var.code, local.iter_43.code_ptr, 1)
    input = substr(var.code, local.iter_43.code_ptr, 1) == "," ? substr(local.iter_43.input, 0, 1) : null
  }

  iter_44 = local.end_of_code_44 ? local.iter_43 : {
    input = (local.curr_44.code == ","
      ? substr(local.iter_43.input, 1, -1)
      : local.iter_43.input)

    output = (local.curr_44.code == "."
      ? "${local.iter_43.output}${jsondecode(format("\"\\u%04x\"", local.iter_43.tape[local.iter_43.tape_ptr]))}"
      : local.iter_43.output)
    
    tape = (
      local.curr_44.code == "+"
        ? [for i, b in local.iter_43.tape : (i == local.iter_43.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_44.code == "-"
        ? [for i, b in local.iter_43.tape : (i == local.iter_43.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_44.code == ","
        ? [for i, b in local.iter_43.tape : (i == local.iter_43.tape_ptr ? local.ascii_lookup[local.curr_44.input] : b)]
        : local.iter_43.tape)

    tape_ptr = (
      local.curr_44.code == "<"
        ? local.iter_43.tape_ptr == 0 ? length(local.iter_43.tape) - 1 : local.iter_43.tape_ptr - 1 :
      local.curr_44.code == ">"
        ? local.iter_43.tape_ptr == length(local.iter_43.tape) - 1 ? 0 : local.iter_43.tape_ptr + 1
        : local.iter_43.tape_ptr)

    code_ptr = 1 + (
      local.curr_44.code == "["
        ? local.iter_43.tape[local.iter_43.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_43.code_ptr)] : local.iter_43.code_ptr :
      local.curr_44.code == "]"
        ? local.iter_43.tape[local.iter_43.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_43.code_ptr)] : local.iter_43.code_ptr
        : local.iter_43.code_ptr)

    steps_taken = 1 + local.iter_43.steps_taken
  }
}

locals {
  end_of_code_45 = try(local.iter_44.code_ptr >= length(var.code), true)

  curr_45 = local.end_of_code_45 ? null : {
    code = substr(var.code, local.iter_44.code_ptr, 1)
    input = substr(var.code, local.iter_44.code_ptr, 1) == "," ? substr(local.iter_44.input, 0, 1) : null
  }

  iter_45 = local.end_of_code_45 ? local.iter_44 : {
    input = (local.curr_45.code == ","
      ? substr(local.iter_44.input, 1, -1)
      : local.iter_44.input)

    output = (local.curr_45.code == "."
      ? "${local.iter_44.output}${jsondecode(format("\"\\u%04x\"", local.iter_44.tape[local.iter_44.tape_ptr]))}"
      : local.iter_44.output)
    
    tape = (
      local.curr_45.code == "+"
        ? [for i, b in local.iter_44.tape : (i == local.iter_44.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_45.code == "-"
        ? [for i, b in local.iter_44.tape : (i == local.iter_44.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_45.code == ","
        ? [for i, b in local.iter_44.tape : (i == local.iter_44.tape_ptr ? local.ascii_lookup[local.curr_45.input] : b)]
        : local.iter_44.tape)

    tape_ptr = (
      local.curr_45.code == "<"
        ? local.iter_44.tape_ptr == 0 ? length(local.iter_44.tape) - 1 : local.iter_44.tape_ptr - 1 :
      local.curr_45.code == ">"
        ? local.iter_44.tape_ptr == length(local.iter_44.tape) - 1 ? 0 : local.iter_44.tape_ptr + 1
        : local.iter_44.tape_ptr)

    code_ptr = 1 + (
      local.curr_45.code == "["
        ? local.iter_44.tape[local.iter_44.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_44.code_ptr)] : local.iter_44.code_ptr :
      local.curr_45.code == "]"
        ? local.iter_44.tape[local.iter_44.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_44.code_ptr)] : local.iter_44.code_ptr
        : local.iter_44.code_ptr)

    steps_taken = 1 + local.iter_44.steps_taken
  }
}

locals {
  end_of_code_46 = try(local.iter_45.code_ptr >= length(var.code), true)

  curr_46 = local.end_of_code_46 ? null : {
    code = substr(var.code, local.iter_45.code_ptr, 1)
    input = substr(var.code, local.iter_45.code_ptr, 1) == "," ? substr(local.iter_45.input, 0, 1) : null
  }

  iter_46 = local.end_of_code_46 ? local.iter_45 : {
    input = (local.curr_46.code == ","
      ? substr(local.iter_45.input, 1, -1)
      : local.iter_45.input)

    output = (local.curr_46.code == "."
      ? "${local.iter_45.output}${jsondecode(format("\"\\u%04x\"", local.iter_45.tape[local.iter_45.tape_ptr]))}"
      : local.iter_45.output)
    
    tape = (
      local.curr_46.code == "+"
        ? [for i, b in local.iter_45.tape : (i == local.iter_45.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_46.code == "-"
        ? [for i, b in local.iter_45.tape : (i == local.iter_45.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_46.code == ","
        ? [for i, b in local.iter_45.tape : (i == local.iter_45.tape_ptr ? local.ascii_lookup[local.curr_46.input] : b)]
        : local.iter_45.tape)

    tape_ptr = (
      local.curr_46.code == "<"
        ? local.iter_45.tape_ptr == 0 ? length(local.iter_45.tape) - 1 : local.iter_45.tape_ptr - 1 :
      local.curr_46.code == ">"
        ? local.iter_45.tape_ptr == length(local.iter_45.tape) - 1 ? 0 : local.iter_45.tape_ptr + 1
        : local.iter_45.tape_ptr)

    code_ptr = 1 + (
      local.curr_46.code == "["
        ? local.iter_45.tape[local.iter_45.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_45.code_ptr)] : local.iter_45.code_ptr :
      local.curr_46.code == "]"
        ? local.iter_45.tape[local.iter_45.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_45.code_ptr)] : local.iter_45.code_ptr
        : local.iter_45.code_ptr)

    steps_taken = 1 + local.iter_45.steps_taken
  }
}

locals {
  end_of_code_47 = try(local.iter_46.code_ptr >= length(var.code), true)

  curr_47 = local.end_of_code_47 ? null : {
    code = substr(var.code, local.iter_46.code_ptr, 1)
    input = substr(var.code, local.iter_46.code_ptr, 1) == "," ? substr(local.iter_46.input, 0, 1) : null
  }

  iter_47 = local.end_of_code_47 ? local.iter_46 : {
    input = (local.curr_47.code == ","
      ? substr(local.iter_46.input, 1, -1)
      : local.iter_46.input)

    output = (local.curr_47.code == "."
      ? "${local.iter_46.output}${jsondecode(format("\"\\u%04x\"", local.iter_46.tape[local.iter_46.tape_ptr]))}"
      : local.iter_46.output)
    
    tape = (
      local.curr_47.code == "+"
        ? [for i, b in local.iter_46.tape : (i == local.iter_46.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_47.code == "-"
        ? [for i, b in local.iter_46.tape : (i == local.iter_46.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_47.code == ","
        ? [for i, b in local.iter_46.tape : (i == local.iter_46.tape_ptr ? local.ascii_lookup[local.curr_47.input] : b)]
        : local.iter_46.tape)

    tape_ptr = (
      local.curr_47.code == "<"
        ? local.iter_46.tape_ptr == 0 ? length(local.iter_46.tape) - 1 : local.iter_46.tape_ptr - 1 :
      local.curr_47.code == ">"
        ? local.iter_46.tape_ptr == length(local.iter_46.tape) - 1 ? 0 : local.iter_46.tape_ptr + 1
        : local.iter_46.tape_ptr)

    code_ptr = 1 + (
      local.curr_47.code == "["
        ? local.iter_46.tape[local.iter_46.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_46.code_ptr)] : local.iter_46.code_ptr :
      local.curr_47.code == "]"
        ? local.iter_46.tape[local.iter_46.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_46.code_ptr)] : local.iter_46.code_ptr
        : local.iter_46.code_ptr)

    steps_taken = 1 + local.iter_46.steps_taken
  }
}

locals {
  end_of_code_48 = try(local.iter_47.code_ptr >= length(var.code), true)

  curr_48 = local.end_of_code_48 ? null : {
    code = substr(var.code, local.iter_47.code_ptr, 1)
    input = substr(var.code, local.iter_47.code_ptr, 1) == "," ? substr(local.iter_47.input, 0, 1) : null
  }

  iter_48 = local.end_of_code_48 ? local.iter_47 : {
    input = (local.curr_48.code == ","
      ? substr(local.iter_47.input, 1, -1)
      : local.iter_47.input)

    output = (local.curr_48.code == "."
      ? "${local.iter_47.output}${jsondecode(format("\"\\u%04x\"", local.iter_47.tape[local.iter_47.tape_ptr]))}"
      : local.iter_47.output)
    
    tape = (
      local.curr_48.code == "+"
        ? [for i, b in local.iter_47.tape : (i == local.iter_47.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_48.code == "-"
        ? [for i, b in local.iter_47.tape : (i == local.iter_47.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_48.code == ","
        ? [for i, b in local.iter_47.tape : (i == local.iter_47.tape_ptr ? local.ascii_lookup[local.curr_48.input] : b)]
        : local.iter_47.tape)

    tape_ptr = (
      local.curr_48.code == "<"
        ? local.iter_47.tape_ptr == 0 ? length(local.iter_47.tape) - 1 : local.iter_47.tape_ptr - 1 :
      local.curr_48.code == ">"
        ? local.iter_47.tape_ptr == length(local.iter_47.tape) - 1 ? 0 : local.iter_47.tape_ptr + 1
        : local.iter_47.tape_ptr)

    code_ptr = 1 + (
      local.curr_48.code == "["
        ? local.iter_47.tape[local.iter_47.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_47.code_ptr)] : local.iter_47.code_ptr :
      local.curr_48.code == "]"
        ? local.iter_47.tape[local.iter_47.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_47.code_ptr)] : local.iter_47.code_ptr
        : local.iter_47.code_ptr)

    steps_taken = 1 + local.iter_47.steps_taken
  }
}

locals {
  end_of_code_49 = try(local.iter_48.code_ptr >= length(var.code), true)

  curr_49 = local.end_of_code_49 ? null : {
    code = substr(var.code, local.iter_48.code_ptr, 1)
    input = substr(var.code, local.iter_48.code_ptr, 1) == "," ? substr(local.iter_48.input, 0, 1) : null
  }

  iter_49 = local.end_of_code_49 ? local.iter_48 : {
    input = (local.curr_49.code == ","
      ? substr(local.iter_48.input, 1, -1)
      : local.iter_48.input)

    output = (local.curr_49.code == "."
      ? "${local.iter_48.output}${jsondecode(format("\"\\u%04x\"", local.iter_48.tape[local.iter_48.tape_ptr]))}"
      : local.iter_48.output)
    
    tape = (
      local.curr_49.code == "+"
        ? [for i, b in local.iter_48.tape : (i == local.iter_48.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_49.code == "-"
        ? [for i, b in local.iter_48.tape : (i == local.iter_48.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_49.code == ","
        ? [for i, b in local.iter_48.tape : (i == local.iter_48.tape_ptr ? local.ascii_lookup[local.curr_49.input] : b)]
        : local.iter_48.tape)

    tape_ptr = (
      local.curr_49.code == "<"
        ? local.iter_48.tape_ptr == 0 ? length(local.iter_48.tape) - 1 : local.iter_48.tape_ptr - 1 :
      local.curr_49.code == ">"
        ? local.iter_48.tape_ptr == length(local.iter_48.tape) - 1 ? 0 : local.iter_48.tape_ptr + 1
        : local.iter_48.tape_ptr)

    code_ptr = 1 + (
      local.curr_49.code == "["
        ? local.iter_48.tape[local.iter_48.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_48.code_ptr)] : local.iter_48.code_ptr :
      local.curr_49.code == "]"
        ? local.iter_48.tape[local.iter_48.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_48.code_ptr)] : local.iter_48.code_ptr
        : local.iter_48.code_ptr)

    steps_taken = 1 + local.iter_48.steps_taken
  }
}

locals {
  end_of_code_50 = try(local.iter_49.code_ptr >= length(var.code), true)

  curr_50 = local.end_of_code_50 ? null : {
    code = substr(var.code, local.iter_49.code_ptr, 1)
    input = substr(var.code, local.iter_49.code_ptr, 1) == "," ? substr(local.iter_49.input, 0, 1) : null
  }

  iter_50 = local.end_of_code_50 ? local.iter_49 : {
    input = (local.curr_50.code == ","
      ? substr(local.iter_49.input, 1, -1)
      : local.iter_49.input)

    output = (local.curr_50.code == "."
      ? "${local.iter_49.output}${jsondecode(format("\"\\u%04x\"", local.iter_49.tape[local.iter_49.tape_ptr]))}"
      : local.iter_49.output)
    
    tape = (
      local.curr_50.code == "+"
        ? [for i, b in local.iter_49.tape : (i == local.iter_49.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_50.code == "-"
        ? [for i, b in local.iter_49.tape : (i == local.iter_49.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_50.code == ","
        ? [for i, b in local.iter_49.tape : (i == local.iter_49.tape_ptr ? local.ascii_lookup[local.curr_50.input] : b)]
        : local.iter_49.tape)

    tape_ptr = (
      local.curr_50.code == "<"
        ? local.iter_49.tape_ptr == 0 ? length(local.iter_49.tape) - 1 : local.iter_49.tape_ptr - 1 :
      local.curr_50.code == ">"
        ? local.iter_49.tape_ptr == length(local.iter_49.tape) - 1 ? 0 : local.iter_49.tape_ptr + 1
        : local.iter_49.tape_ptr)

    code_ptr = 1 + (
      local.curr_50.code == "["
        ? local.iter_49.tape[local.iter_49.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_49.code_ptr)] : local.iter_49.code_ptr :
      local.curr_50.code == "]"
        ? local.iter_49.tape[local.iter_49.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_49.code_ptr)] : local.iter_49.code_ptr
        : local.iter_49.code_ptr)

    steps_taken = 1 + local.iter_49.steps_taken
  }
}

locals {
  end_of_code_51 = try(local.iter_50.code_ptr >= length(var.code), true)

  curr_51 = local.end_of_code_51 ? null : {
    code = substr(var.code, local.iter_50.code_ptr, 1)
    input = substr(var.code, local.iter_50.code_ptr, 1) == "," ? substr(local.iter_50.input, 0, 1) : null
  }

  iter_51 = local.end_of_code_51 ? local.iter_50 : {
    input = (local.curr_51.code == ","
      ? substr(local.iter_50.input, 1, -1)
      : local.iter_50.input)

    output = (local.curr_51.code == "."
      ? "${local.iter_50.output}${jsondecode(format("\"\\u%04x\"", local.iter_50.tape[local.iter_50.tape_ptr]))}"
      : local.iter_50.output)
    
    tape = (
      local.curr_51.code == "+"
        ? [for i, b in local.iter_50.tape : (i == local.iter_50.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_51.code == "-"
        ? [for i, b in local.iter_50.tape : (i == local.iter_50.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_51.code == ","
        ? [for i, b in local.iter_50.tape : (i == local.iter_50.tape_ptr ? local.ascii_lookup[local.curr_51.input] : b)]
        : local.iter_50.tape)

    tape_ptr = (
      local.curr_51.code == "<"
        ? local.iter_50.tape_ptr == 0 ? length(local.iter_50.tape) - 1 : local.iter_50.tape_ptr - 1 :
      local.curr_51.code == ">"
        ? local.iter_50.tape_ptr == length(local.iter_50.tape) - 1 ? 0 : local.iter_50.tape_ptr + 1
        : local.iter_50.tape_ptr)

    code_ptr = 1 + (
      local.curr_51.code == "["
        ? local.iter_50.tape[local.iter_50.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_50.code_ptr)] : local.iter_50.code_ptr :
      local.curr_51.code == "]"
        ? local.iter_50.tape[local.iter_50.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_50.code_ptr)] : local.iter_50.code_ptr
        : local.iter_50.code_ptr)

    steps_taken = 1 + local.iter_50.steps_taken
  }
}

locals {
  end_of_code_52 = try(local.iter_51.code_ptr >= length(var.code), true)

  curr_52 = local.end_of_code_52 ? null : {
    code = substr(var.code, local.iter_51.code_ptr, 1)
    input = substr(var.code, local.iter_51.code_ptr, 1) == "," ? substr(local.iter_51.input, 0, 1) : null
  }

  iter_52 = local.end_of_code_52 ? local.iter_51 : {
    input = (local.curr_52.code == ","
      ? substr(local.iter_51.input, 1, -1)
      : local.iter_51.input)

    output = (local.curr_52.code == "."
      ? "${local.iter_51.output}${jsondecode(format("\"\\u%04x\"", local.iter_51.tape[local.iter_51.tape_ptr]))}"
      : local.iter_51.output)
    
    tape = (
      local.curr_52.code == "+"
        ? [for i, b in local.iter_51.tape : (i == local.iter_51.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_52.code == "-"
        ? [for i, b in local.iter_51.tape : (i == local.iter_51.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_52.code == ","
        ? [for i, b in local.iter_51.tape : (i == local.iter_51.tape_ptr ? local.ascii_lookup[local.curr_52.input] : b)]
        : local.iter_51.tape)

    tape_ptr = (
      local.curr_52.code == "<"
        ? local.iter_51.tape_ptr == 0 ? length(local.iter_51.tape) - 1 : local.iter_51.tape_ptr - 1 :
      local.curr_52.code == ">"
        ? local.iter_51.tape_ptr == length(local.iter_51.tape) - 1 ? 0 : local.iter_51.tape_ptr + 1
        : local.iter_51.tape_ptr)

    code_ptr = 1 + (
      local.curr_52.code == "["
        ? local.iter_51.tape[local.iter_51.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_51.code_ptr)] : local.iter_51.code_ptr :
      local.curr_52.code == "]"
        ? local.iter_51.tape[local.iter_51.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_51.code_ptr)] : local.iter_51.code_ptr
        : local.iter_51.code_ptr)

    steps_taken = 1 + local.iter_51.steps_taken
  }
}

locals {
  end_of_code_53 = try(local.iter_52.code_ptr >= length(var.code), true)

  curr_53 = local.end_of_code_53 ? null : {
    code = substr(var.code, local.iter_52.code_ptr, 1)
    input = substr(var.code, local.iter_52.code_ptr, 1) == "," ? substr(local.iter_52.input, 0, 1) : null
  }

  iter_53 = local.end_of_code_53 ? local.iter_52 : {
    input = (local.curr_53.code == ","
      ? substr(local.iter_52.input, 1, -1)
      : local.iter_52.input)

    output = (local.curr_53.code == "."
      ? "${local.iter_52.output}${jsondecode(format("\"\\u%04x\"", local.iter_52.tape[local.iter_52.tape_ptr]))}"
      : local.iter_52.output)
    
    tape = (
      local.curr_53.code == "+"
        ? [for i, b in local.iter_52.tape : (i == local.iter_52.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_53.code == "-"
        ? [for i, b in local.iter_52.tape : (i == local.iter_52.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_53.code == ","
        ? [for i, b in local.iter_52.tape : (i == local.iter_52.tape_ptr ? local.ascii_lookup[local.curr_53.input] : b)]
        : local.iter_52.tape)

    tape_ptr = (
      local.curr_53.code == "<"
        ? local.iter_52.tape_ptr == 0 ? length(local.iter_52.tape) - 1 : local.iter_52.tape_ptr - 1 :
      local.curr_53.code == ">"
        ? local.iter_52.tape_ptr == length(local.iter_52.tape) - 1 ? 0 : local.iter_52.tape_ptr + 1
        : local.iter_52.tape_ptr)

    code_ptr = 1 + (
      local.curr_53.code == "["
        ? local.iter_52.tape[local.iter_52.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_52.code_ptr)] : local.iter_52.code_ptr :
      local.curr_53.code == "]"
        ? local.iter_52.tape[local.iter_52.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_52.code_ptr)] : local.iter_52.code_ptr
        : local.iter_52.code_ptr)

    steps_taken = 1 + local.iter_52.steps_taken
  }
}

locals {
  end_of_code_54 = try(local.iter_53.code_ptr >= length(var.code), true)

  curr_54 = local.end_of_code_54 ? null : {
    code = substr(var.code, local.iter_53.code_ptr, 1)
    input = substr(var.code, local.iter_53.code_ptr, 1) == "," ? substr(local.iter_53.input, 0, 1) : null
  }

  iter_54 = local.end_of_code_54 ? local.iter_53 : {
    input = (local.curr_54.code == ","
      ? substr(local.iter_53.input, 1, -1)
      : local.iter_53.input)

    output = (local.curr_54.code == "."
      ? "${local.iter_53.output}${jsondecode(format("\"\\u%04x\"", local.iter_53.tape[local.iter_53.tape_ptr]))}"
      : local.iter_53.output)
    
    tape = (
      local.curr_54.code == "+"
        ? [for i, b in local.iter_53.tape : (i == local.iter_53.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_54.code == "-"
        ? [for i, b in local.iter_53.tape : (i == local.iter_53.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_54.code == ","
        ? [for i, b in local.iter_53.tape : (i == local.iter_53.tape_ptr ? local.ascii_lookup[local.curr_54.input] : b)]
        : local.iter_53.tape)

    tape_ptr = (
      local.curr_54.code == "<"
        ? local.iter_53.tape_ptr == 0 ? length(local.iter_53.tape) - 1 : local.iter_53.tape_ptr - 1 :
      local.curr_54.code == ">"
        ? local.iter_53.tape_ptr == length(local.iter_53.tape) - 1 ? 0 : local.iter_53.tape_ptr + 1
        : local.iter_53.tape_ptr)

    code_ptr = 1 + (
      local.curr_54.code == "["
        ? local.iter_53.tape[local.iter_53.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_53.code_ptr)] : local.iter_53.code_ptr :
      local.curr_54.code == "]"
        ? local.iter_53.tape[local.iter_53.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_53.code_ptr)] : local.iter_53.code_ptr
        : local.iter_53.code_ptr)

    steps_taken = 1 + local.iter_53.steps_taken
  }
}

locals {
  end_of_code_55 = try(local.iter_54.code_ptr >= length(var.code), true)

  curr_55 = local.end_of_code_55 ? null : {
    code = substr(var.code, local.iter_54.code_ptr, 1)
    input = substr(var.code, local.iter_54.code_ptr, 1) == "," ? substr(local.iter_54.input, 0, 1) : null
  }

  iter_55 = local.end_of_code_55 ? local.iter_54 : {
    input = (local.curr_55.code == ","
      ? substr(local.iter_54.input, 1, -1)
      : local.iter_54.input)

    output = (local.curr_55.code == "."
      ? "${local.iter_54.output}${jsondecode(format("\"\\u%04x\"", local.iter_54.tape[local.iter_54.tape_ptr]))}"
      : local.iter_54.output)
    
    tape = (
      local.curr_55.code == "+"
        ? [for i, b in local.iter_54.tape : (i == local.iter_54.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_55.code == "-"
        ? [for i, b in local.iter_54.tape : (i == local.iter_54.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_55.code == ","
        ? [for i, b in local.iter_54.tape : (i == local.iter_54.tape_ptr ? local.ascii_lookup[local.curr_55.input] : b)]
        : local.iter_54.tape)

    tape_ptr = (
      local.curr_55.code == "<"
        ? local.iter_54.tape_ptr == 0 ? length(local.iter_54.tape) - 1 : local.iter_54.tape_ptr - 1 :
      local.curr_55.code == ">"
        ? local.iter_54.tape_ptr == length(local.iter_54.tape) - 1 ? 0 : local.iter_54.tape_ptr + 1
        : local.iter_54.tape_ptr)

    code_ptr = 1 + (
      local.curr_55.code == "["
        ? local.iter_54.tape[local.iter_54.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_54.code_ptr)] : local.iter_54.code_ptr :
      local.curr_55.code == "]"
        ? local.iter_54.tape[local.iter_54.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_54.code_ptr)] : local.iter_54.code_ptr
        : local.iter_54.code_ptr)

    steps_taken = 1 + local.iter_54.steps_taken
  }
}

locals {
  end_of_code_56 = try(local.iter_55.code_ptr >= length(var.code), true)

  curr_56 = local.end_of_code_56 ? null : {
    code = substr(var.code, local.iter_55.code_ptr, 1)
    input = substr(var.code, local.iter_55.code_ptr, 1) == "," ? substr(local.iter_55.input, 0, 1) : null
  }

  iter_56 = local.end_of_code_56 ? local.iter_55 : {
    input = (local.curr_56.code == ","
      ? substr(local.iter_55.input, 1, -1)
      : local.iter_55.input)

    output = (local.curr_56.code == "."
      ? "${local.iter_55.output}${jsondecode(format("\"\\u%04x\"", local.iter_55.tape[local.iter_55.tape_ptr]))}"
      : local.iter_55.output)
    
    tape = (
      local.curr_56.code == "+"
        ? [for i, b in local.iter_55.tape : (i == local.iter_55.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_56.code == "-"
        ? [for i, b in local.iter_55.tape : (i == local.iter_55.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_56.code == ","
        ? [for i, b in local.iter_55.tape : (i == local.iter_55.tape_ptr ? local.ascii_lookup[local.curr_56.input] : b)]
        : local.iter_55.tape)

    tape_ptr = (
      local.curr_56.code == "<"
        ? local.iter_55.tape_ptr == 0 ? length(local.iter_55.tape) - 1 : local.iter_55.tape_ptr - 1 :
      local.curr_56.code == ">"
        ? local.iter_55.tape_ptr == length(local.iter_55.tape) - 1 ? 0 : local.iter_55.tape_ptr + 1
        : local.iter_55.tape_ptr)

    code_ptr = 1 + (
      local.curr_56.code == "["
        ? local.iter_55.tape[local.iter_55.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_55.code_ptr)] : local.iter_55.code_ptr :
      local.curr_56.code == "]"
        ? local.iter_55.tape[local.iter_55.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_55.code_ptr)] : local.iter_55.code_ptr
        : local.iter_55.code_ptr)

    steps_taken = 1 + local.iter_55.steps_taken
  }
}

locals {
  end_of_code_57 = try(local.iter_56.code_ptr >= length(var.code), true)

  curr_57 = local.end_of_code_57 ? null : {
    code = substr(var.code, local.iter_56.code_ptr, 1)
    input = substr(var.code, local.iter_56.code_ptr, 1) == "," ? substr(local.iter_56.input, 0, 1) : null
  }

  iter_57 = local.end_of_code_57 ? local.iter_56 : {
    input = (local.curr_57.code == ","
      ? substr(local.iter_56.input, 1, -1)
      : local.iter_56.input)

    output = (local.curr_57.code == "."
      ? "${local.iter_56.output}${jsondecode(format("\"\\u%04x\"", local.iter_56.tape[local.iter_56.tape_ptr]))}"
      : local.iter_56.output)
    
    tape = (
      local.curr_57.code == "+"
        ? [for i, b in local.iter_56.tape : (i == local.iter_56.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_57.code == "-"
        ? [for i, b in local.iter_56.tape : (i == local.iter_56.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_57.code == ","
        ? [for i, b in local.iter_56.tape : (i == local.iter_56.tape_ptr ? local.ascii_lookup[local.curr_57.input] : b)]
        : local.iter_56.tape)

    tape_ptr = (
      local.curr_57.code == "<"
        ? local.iter_56.tape_ptr == 0 ? length(local.iter_56.tape) - 1 : local.iter_56.tape_ptr - 1 :
      local.curr_57.code == ">"
        ? local.iter_56.tape_ptr == length(local.iter_56.tape) - 1 ? 0 : local.iter_56.tape_ptr + 1
        : local.iter_56.tape_ptr)

    code_ptr = 1 + (
      local.curr_57.code == "["
        ? local.iter_56.tape[local.iter_56.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_56.code_ptr)] : local.iter_56.code_ptr :
      local.curr_57.code == "]"
        ? local.iter_56.tape[local.iter_56.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_56.code_ptr)] : local.iter_56.code_ptr
        : local.iter_56.code_ptr)

    steps_taken = 1 + local.iter_56.steps_taken
  }
}

locals {
  end_of_code_58 = try(local.iter_57.code_ptr >= length(var.code), true)

  curr_58 = local.end_of_code_58 ? null : {
    code = substr(var.code, local.iter_57.code_ptr, 1)
    input = substr(var.code, local.iter_57.code_ptr, 1) == "," ? substr(local.iter_57.input, 0, 1) : null
  }

  iter_58 = local.end_of_code_58 ? local.iter_57 : {
    input = (local.curr_58.code == ","
      ? substr(local.iter_57.input, 1, -1)
      : local.iter_57.input)

    output = (local.curr_58.code == "."
      ? "${local.iter_57.output}${jsondecode(format("\"\\u%04x\"", local.iter_57.tape[local.iter_57.tape_ptr]))}"
      : local.iter_57.output)
    
    tape = (
      local.curr_58.code == "+"
        ? [for i, b in local.iter_57.tape : (i == local.iter_57.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_58.code == "-"
        ? [for i, b in local.iter_57.tape : (i == local.iter_57.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_58.code == ","
        ? [for i, b in local.iter_57.tape : (i == local.iter_57.tape_ptr ? local.ascii_lookup[local.curr_58.input] : b)]
        : local.iter_57.tape)

    tape_ptr = (
      local.curr_58.code == "<"
        ? local.iter_57.tape_ptr == 0 ? length(local.iter_57.tape) - 1 : local.iter_57.tape_ptr - 1 :
      local.curr_58.code == ">"
        ? local.iter_57.tape_ptr == length(local.iter_57.tape) - 1 ? 0 : local.iter_57.tape_ptr + 1
        : local.iter_57.tape_ptr)

    code_ptr = 1 + (
      local.curr_58.code == "["
        ? local.iter_57.tape[local.iter_57.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_57.code_ptr)] : local.iter_57.code_ptr :
      local.curr_58.code == "]"
        ? local.iter_57.tape[local.iter_57.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_57.code_ptr)] : local.iter_57.code_ptr
        : local.iter_57.code_ptr)

    steps_taken = 1 + local.iter_57.steps_taken
  }
}

locals {
  end_of_code_59 = try(local.iter_58.code_ptr >= length(var.code), true)

  curr_59 = local.end_of_code_59 ? null : {
    code = substr(var.code, local.iter_58.code_ptr, 1)
    input = substr(var.code, local.iter_58.code_ptr, 1) == "," ? substr(local.iter_58.input, 0, 1) : null
  }

  iter_59 = local.end_of_code_59 ? local.iter_58 : {
    input = (local.curr_59.code == ","
      ? substr(local.iter_58.input, 1, -1)
      : local.iter_58.input)

    output = (local.curr_59.code == "."
      ? "${local.iter_58.output}${jsondecode(format("\"\\u%04x\"", local.iter_58.tape[local.iter_58.tape_ptr]))}"
      : local.iter_58.output)
    
    tape = (
      local.curr_59.code == "+"
        ? [for i, b in local.iter_58.tape : (i == local.iter_58.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_59.code == "-"
        ? [for i, b in local.iter_58.tape : (i == local.iter_58.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_59.code == ","
        ? [for i, b in local.iter_58.tape : (i == local.iter_58.tape_ptr ? local.ascii_lookup[local.curr_59.input] : b)]
        : local.iter_58.tape)

    tape_ptr = (
      local.curr_59.code == "<"
        ? local.iter_58.tape_ptr == 0 ? length(local.iter_58.tape) - 1 : local.iter_58.tape_ptr - 1 :
      local.curr_59.code == ">"
        ? local.iter_58.tape_ptr == length(local.iter_58.tape) - 1 ? 0 : local.iter_58.tape_ptr + 1
        : local.iter_58.tape_ptr)

    code_ptr = 1 + (
      local.curr_59.code == "["
        ? local.iter_58.tape[local.iter_58.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_58.code_ptr)] : local.iter_58.code_ptr :
      local.curr_59.code == "]"
        ? local.iter_58.tape[local.iter_58.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_58.code_ptr)] : local.iter_58.code_ptr
        : local.iter_58.code_ptr)

    steps_taken = 1 + local.iter_58.steps_taken
  }
}

locals {
  end_of_code_60 = try(local.iter_59.code_ptr >= length(var.code), true)

  curr_60 = local.end_of_code_60 ? null : {
    code = substr(var.code, local.iter_59.code_ptr, 1)
    input = substr(var.code, local.iter_59.code_ptr, 1) == "," ? substr(local.iter_59.input, 0, 1) : null
  }

  iter_60 = local.end_of_code_60 ? local.iter_59 : {
    input = (local.curr_60.code == ","
      ? substr(local.iter_59.input, 1, -1)
      : local.iter_59.input)

    output = (local.curr_60.code == "."
      ? "${local.iter_59.output}${jsondecode(format("\"\\u%04x\"", local.iter_59.tape[local.iter_59.tape_ptr]))}"
      : local.iter_59.output)
    
    tape = (
      local.curr_60.code == "+"
        ? [for i, b in local.iter_59.tape : (i == local.iter_59.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_60.code == "-"
        ? [for i, b in local.iter_59.tape : (i == local.iter_59.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_60.code == ","
        ? [for i, b in local.iter_59.tape : (i == local.iter_59.tape_ptr ? local.ascii_lookup[local.curr_60.input] : b)]
        : local.iter_59.tape)

    tape_ptr = (
      local.curr_60.code == "<"
        ? local.iter_59.tape_ptr == 0 ? length(local.iter_59.tape) - 1 : local.iter_59.tape_ptr - 1 :
      local.curr_60.code == ">"
        ? local.iter_59.tape_ptr == length(local.iter_59.tape) - 1 ? 0 : local.iter_59.tape_ptr + 1
        : local.iter_59.tape_ptr)

    code_ptr = 1 + (
      local.curr_60.code == "["
        ? local.iter_59.tape[local.iter_59.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_59.code_ptr)] : local.iter_59.code_ptr :
      local.curr_60.code == "]"
        ? local.iter_59.tape[local.iter_59.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_59.code_ptr)] : local.iter_59.code_ptr
        : local.iter_59.code_ptr)

    steps_taken = 1 + local.iter_59.steps_taken
  }
}

locals {
  end_of_code_61 = try(local.iter_60.code_ptr >= length(var.code), true)

  curr_61 = local.end_of_code_61 ? null : {
    code = substr(var.code, local.iter_60.code_ptr, 1)
    input = substr(var.code, local.iter_60.code_ptr, 1) == "," ? substr(local.iter_60.input, 0, 1) : null
  }

  iter_61 = local.end_of_code_61 ? local.iter_60 : {
    input = (local.curr_61.code == ","
      ? substr(local.iter_60.input, 1, -1)
      : local.iter_60.input)

    output = (local.curr_61.code == "."
      ? "${local.iter_60.output}${jsondecode(format("\"\\u%04x\"", local.iter_60.tape[local.iter_60.tape_ptr]))}"
      : local.iter_60.output)
    
    tape = (
      local.curr_61.code == "+"
        ? [for i, b in local.iter_60.tape : (i == local.iter_60.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_61.code == "-"
        ? [for i, b in local.iter_60.tape : (i == local.iter_60.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_61.code == ","
        ? [for i, b in local.iter_60.tape : (i == local.iter_60.tape_ptr ? local.ascii_lookup[local.curr_61.input] : b)]
        : local.iter_60.tape)

    tape_ptr = (
      local.curr_61.code == "<"
        ? local.iter_60.tape_ptr == 0 ? length(local.iter_60.tape) - 1 : local.iter_60.tape_ptr - 1 :
      local.curr_61.code == ">"
        ? local.iter_60.tape_ptr == length(local.iter_60.tape) - 1 ? 0 : local.iter_60.tape_ptr + 1
        : local.iter_60.tape_ptr)

    code_ptr = 1 + (
      local.curr_61.code == "["
        ? local.iter_60.tape[local.iter_60.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_60.code_ptr)] : local.iter_60.code_ptr :
      local.curr_61.code == "]"
        ? local.iter_60.tape[local.iter_60.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_60.code_ptr)] : local.iter_60.code_ptr
        : local.iter_60.code_ptr)

    steps_taken = 1 + local.iter_60.steps_taken
  }
}

locals {
  end_of_code_62 = try(local.iter_61.code_ptr >= length(var.code), true)

  curr_62 = local.end_of_code_62 ? null : {
    code = substr(var.code, local.iter_61.code_ptr, 1)
    input = substr(var.code, local.iter_61.code_ptr, 1) == "," ? substr(local.iter_61.input, 0, 1) : null
  }

  iter_62 = local.end_of_code_62 ? local.iter_61 : {
    input = (local.curr_62.code == ","
      ? substr(local.iter_61.input, 1, -1)
      : local.iter_61.input)

    output = (local.curr_62.code == "."
      ? "${local.iter_61.output}${jsondecode(format("\"\\u%04x\"", local.iter_61.tape[local.iter_61.tape_ptr]))}"
      : local.iter_61.output)
    
    tape = (
      local.curr_62.code == "+"
        ? [for i, b in local.iter_61.tape : (i == local.iter_61.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_62.code == "-"
        ? [for i, b in local.iter_61.tape : (i == local.iter_61.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_62.code == ","
        ? [for i, b in local.iter_61.tape : (i == local.iter_61.tape_ptr ? local.ascii_lookup[local.curr_62.input] : b)]
        : local.iter_61.tape)

    tape_ptr = (
      local.curr_62.code == "<"
        ? local.iter_61.tape_ptr == 0 ? length(local.iter_61.tape) - 1 : local.iter_61.tape_ptr - 1 :
      local.curr_62.code == ">"
        ? local.iter_61.tape_ptr == length(local.iter_61.tape) - 1 ? 0 : local.iter_61.tape_ptr + 1
        : local.iter_61.tape_ptr)

    code_ptr = 1 + (
      local.curr_62.code == "["
        ? local.iter_61.tape[local.iter_61.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_61.code_ptr)] : local.iter_61.code_ptr :
      local.curr_62.code == "]"
        ? local.iter_61.tape[local.iter_61.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_61.code_ptr)] : local.iter_61.code_ptr
        : local.iter_61.code_ptr)

    steps_taken = 1 + local.iter_61.steps_taken
  }
}

locals {
  end_of_code_63 = try(local.iter_62.code_ptr >= length(var.code), true)

  curr_63 = local.end_of_code_63 ? null : {
    code = substr(var.code, local.iter_62.code_ptr, 1)
    input = substr(var.code, local.iter_62.code_ptr, 1) == "," ? substr(local.iter_62.input, 0, 1) : null
  }

  iter_63 = local.end_of_code_63 ? local.iter_62 : {
    input = (local.curr_63.code == ","
      ? substr(local.iter_62.input, 1, -1)
      : local.iter_62.input)

    output = (local.curr_63.code == "."
      ? "${local.iter_62.output}${jsondecode(format("\"\\u%04x\"", local.iter_62.tape[local.iter_62.tape_ptr]))}"
      : local.iter_62.output)
    
    tape = (
      local.curr_63.code == "+"
        ? [for i, b in local.iter_62.tape : (i == local.iter_62.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_63.code == "-"
        ? [for i, b in local.iter_62.tape : (i == local.iter_62.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_63.code == ","
        ? [for i, b in local.iter_62.tape : (i == local.iter_62.tape_ptr ? local.ascii_lookup[local.curr_63.input] : b)]
        : local.iter_62.tape)

    tape_ptr = (
      local.curr_63.code == "<"
        ? local.iter_62.tape_ptr == 0 ? length(local.iter_62.tape) - 1 : local.iter_62.tape_ptr - 1 :
      local.curr_63.code == ">"
        ? local.iter_62.tape_ptr == length(local.iter_62.tape) - 1 ? 0 : local.iter_62.tape_ptr + 1
        : local.iter_62.tape_ptr)

    code_ptr = 1 + (
      local.curr_63.code == "["
        ? local.iter_62.tape[local.iter_62.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_62.code_ptr)] : local.iter_62.code_ptr :
      local.curr_63.code == "]"
        ? local.iter_62.tape[local.iter_62.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_62.code_ptr)] : local.iter_62.code_ptr
        : local.iter_62.code_ptr)

    steps_taken = 1 + local.iter_62.steps_taken
  }
}

locals {
  end_of_code_64 = try(local.iter_63.code_ptr >= length(var.code), true)

  curr_64 = local.end_of_code_64 ? null : {
    code = substr(var.code, local.iter_63.code_ptr, 1)
    input = substr(var.code, local.iter_63.code_ptr, 1) == "," ? substr(local.iter_63.input, 0, 1) : null
  }

  iter_64 = local.end_of_code_64 ? local.iter_63 : {
    input = (local.curr_64.code == ","
      ? substr(local.iter_63.input, 1, -1)
      : local.iter_63.input)

    output = (local.curr_64.code == "."
      ? "${local.iter_63.output}${jsondecode(format("\"\\u%04x\"", local.iter_63.tape[local.iter_63.tape_ptr]))}"
      : local.iter_63.output)
    
    tape = (
      local.curr_64.code == "+"
        ? [for i, b in local.iter_63.tape : (i == local.iter_63.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_64.code == "-"
        ? [for i, b in local.iter_63.tape : (i == local.iter_63.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_64.code == ","
        ? [for i, b in local.iter_63.tape : (i == local.iter_63.tape_ptr ? local.ascii_lookup[local.curr_64.input] : b)]
        : local.iter_63.tape)

    tape_ptr = (
      local.curr_64.code == "<"
        ? local.iter_63.tape_ptr == 0 ? length(local.iter_63.tape) - 1 : local.iter_63.tape_ptr - 1 :
      local.curr_64.code == ">"
        ? local.iter_63.tape_ptr == length(local.iter_63.tape) - 1 ? 0 : local.iter_63.tape_ptr + 1
        : local.iter_63.tape_ptr)

    code_ptr = 1 + (
      local.curr_64.code == "["
        ? local.iter_63.tape[local.iter_63.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_63.code_ptr)] : local.iter_63.code_ptr :
      local.curr_64.code == "]"
        ? local.iter_63.tape[local.iter_63.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_63.code_ptr)] : local.iter_63.code_ptr
        : local.iter_63.code_ptr)

    steps_taken = 1 + local.iter_63.steps_taken
  }
}

locals {
  end_of_code_65 = try(local.iter_64.code_ptr >= length(var.code), true)

  curr_65 = local.end_of_code_65 ? null : {
    code = substr(var.code, local.iter_64.code_ptr, 1)
    input = substr(var.code, local.iter_64.code_ptr, 1) == "," ? substr(local.iter_64.input, 0, 1) : null
  }

  iter_65 = local.end_of_code_65 ? local.iter_64 : {
    input = (local.curr_65.code == ","
      ? substr(local.iter_64.input, 1, -1)
      : local.iter_64.input)

    output = (local.curr_65.code == "."
      ? "${local.iter_64.output}${jsondecode(format("\"\\u%04x\"", local.iter_64.tape[local.iter_64.tape_ptr]))}"
      : local.iter_64.output)
    
    tape = (
      local.curr_65.code == "+"
        ? [for i, b in local.iter_64.tape : (i == local.iter_64.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_65.code == "-"
        ? [for i, b in local.iter_64.tape : (i == local.iter_64.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_65.code == ","
        ? [for i, b in local.iter_64.tape : (i == local.iter_64.tape_ptr ? local.ascii_lookup[local.curr_65.input] : b)]
        : local.iter_64.tape)

    tape_ptr = (
      local.curr_65.code == "<"
        ? local.iter_64.tape_ptr == 0 ? length(local.iter_64.tape) - 1 : local.iter_64.tape_ptr - 1 :
      local.curr_65.code == ">"
        ? local.iter_64.tape_ptr == length(local.iter_64.tape) - 1 ? 0 : local.iter_64.tape_ptr + 1
        : local.iter_64.tape_ptr)

    code_ptr = 1 + (
      local.curr_65.code == "["
        ? local.iter_64.tape[local.iter_64.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_64.code_ptr)] : local.iter_64.code_ptr :
      local.curr_65.code == "]"
        ? local.iter_64.tape[local.iter_64.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_64.code_ptr)] : local.iter_64.code_ptr
        : local.iter_64.code_ptr)

    steps_taken = 1 + local.iter_64.steps_taken
  }
}

locals {
  end_of_code_66 = try(local.iter_65.code_ptr >= length(var.code), true)

  curr_66 = local.end_of_code_66 ? null : {
    code = substr(var.code, local.iter_65.code_ptr, 1)
    input = substr(var.code, local.iter_65.code_ptr, 1) == "," ? substr(local.iter_65.input, 0, 1) : null
  }

  iter_66 = local.end_of_code_66 ? local.iter_65 : {
    input = (local.curr_66.code == ","
      ? substr(local.iter_65.input, 1, -1)
      : local.iter_65.input)

    output = (local.curr_66.code == "."
      ? "${local.iter_65.output}${jsondecode(format("\"\\u%04x\"", local.iter_65.tape[local.iter_65.tape_ptr]))}"
      : local.iter_65.output)
    
    tape = (
      local.curr_66.code == "+"
        ? [for i, b in local.iter_65.tape : (i == local.iter_65.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_66.code == "-"
        ? [for i, b in local.iter_65.tape : (i == local.iter_65.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_66.code == ","
        ? [for i, b in local.iter_65.tape : (i == local.iter_65.tape_ptr ? local.ascii_lookup[local.curr_66.input] : b)]
        : local.iter_65.tape)

    tape_ptr = (
      local.curr_66.code == "<"
        ? local.iter_65.tape_ptr == 0 ? length(local.iter_65.tape) - 1 : local.iter_65.tape_ptr - 1 :
      local.curr_66.code == ">"
        ? local.iter_65.tape_ptr == length(local.iter_65.tape) - 1 ? 0 : local.iter_65.tape_ptr + 1
        : local.iter_65.tape_ptr)

    code_ptr = 1 + (
      local.curr_66.code == "["
        ? local.iter_65.tape[local.iter_65.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_65.code_ptr)] : local.iter_65.code_ptr :
      local.curr_66.code == "]"
        ? local.iter_65.tape[local.iter_65.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_65.code_ptr)] : local.iter_65.code_ptr
        : local.iter_65.code_ptr)

    steps_taken = 1 + local.iter_65.steps_taken
  }
}

locals {
  end_of_code_67 = try(local.iter_66.code_ptr >= length(var.code), true)

  curr_67 = local.end_of_code_67 ? null : {
    code = substr(var.code, local.iter_66.code_ptr, 1)
    input = substr(var.code, local.iter_66.code_ptr, 1) == "," ? substr(local.iter_66.input, 0, 1) : null
  }

  iter_67 = local.end_of_code_67 ? local.iter_66 : {
    input = (local.curr_67.code == ","
      ? substr(local.iter_66.input, 1, -1)
      : local.iter_66.input)

    output = (local.curr_67.code == "."
      ? "${local.iter_66.output}${jsondecode(format("\"\\u%04x\"", local.iter_66.tape[local.iter_66.tape_ptr]))}"
      : local.iter_66.output)
    
    tape = (
      local.curr_67.code == "+"
        ? [for i, b in local.iter_66.tape : (i == local.iter_66.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_67.code == "-"
        ? [for i, b in local.iter_66.tape : (i == local.iter_66.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_67.code == ","
        ? [for i, b in local.iter_66.tape : (i == local.iter_66.tape_ptr ? local.ascii_lookup[local.curr_67.input] : b)]
        : local.iter_66.tape)

    tape_ptr = (
      local.curr_67.code == "<"
        ? local.iter_66.tape_ptr == 0 ? length(local.iter_66.tape) - 1 : local.iter_66.tape_ptr - 1 :
      local.curr_67.code == ">"
        ? local.iter_66.tape_ptr == length(local.iter_66.tape) - 1 ? 0 : local.iter_66.tape_ptr + 1
        : local.iter_66.tape_ptr)

    code_ptr = 1 + (
      local.curr_67.code == "["
        ? local.iter_66.tape[local.iter_66.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_66.code_ptr)] : local.iter_66.code_ptr :
      local.curr_67.code == "]"
        ? local.iter_66.tape[local.iter_66.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_66.code_ptr)] : local.iter_66.code_ptr
        : local.iter_66.code_ptr)

    steps_taken = 1 + local.iter_66.steps_taken
  }
}

locals {
  end_of_code_68 = try(local.iter_67.code_ptr >= length(var.code), true)

  curr_68 = local.end_of_code_68 ? null : {
    code = substr(var.code, local.iter_67.code_ptr, 1)
    input = substr(var.code, local.iter_67.code_ptr, 1) == "," ? substr(local.iter_67.input, 0, 1) : null
  }

  iter_68 = local.end_of_code_68 ? local.iter_67 : {
    input = (local.curr_68.code == ","
      ? substr(local.iter_67.input, 1, -1)
      : local.iter_67.input)

    output = (local.curr_68.code == "."
      ? "${local.iter_67.output}${jsondecode(format("\"\\u%04x\"", local.iter_67.tape[local.iter_67.tape_ptr]))}"
      : local.iter_67.output)
    
    tape = (
      local.curr_68.code == "+"
        ? [for i, b in local.iter_67.tape : (i == local.iter_67.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_68.code == "-"
        ? [for i, b in local.iter_67.tape : (i == local.iter_67.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_68.code == ","
        ? [for i, b in local.iter_67.tape : (i == local.iter_67.tape_ptr ? local.ascii_lookup[local.curr_68.input] : b)]
        : local.iter_67.tape)

    tape_ptr = (
      local.curr_68.code == "<"
        ? local.iter_67.tape_ptr == 0 ? length(local.iter_67.tape) - 1 : local.iter_67.tape_ptr - 1 :
      local.curr_68.code == ">"
        ? local.iter_67.tape_ptr == length(local.iter_67.tape) - 1 ? 0 : local.iter_67.tape_ptr + 1
        : local.iter_67.tape_ptr)

    code_ptr = 1 + (
      local.curr_68.code == "["
        ? local.iter_67.tape[local.iter_67.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_67.code_ptr)] : local.iter_67.code_ptr :
      local.curr_68.code == "]"
        ? local.iter_67.tape[local.iter_67.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_67.code_ptr)] : local.iter_67.code_ptr
        : local.iter_67.code_ptr)

    steps_taken = 1 + local.iter_67.steps_taken
  }
}

locals {
  end_of_code_69 = try(local.iter_68.code_ptr >= length(var.code), true)

  curr_69 = local.end_of_code_69 ? null : {
    code = substr(var.code, local.iter_68.code_ptr, 1)
    input = substr(var.code, local.iter_68.code_ptr, 1) == "," ? substr(local.iter_68.input, 0, 1) : null
  }

  iter_69 = local.end_of_code_69 ? local.iter_68 : {
    input = (local.curr_69.code == ","
      ? substr(local.iter_68.input, 1, -1)
      : local.iter_68.input)

    output = (local.curr_69.code == "."
      ? "${local.iter_68.output}${jsondecode(format("\"\\u%04x\"", local.iter_68.tape[local.iter_68.tape_ptr]))}"
      : local.iter_68.output)
    
    tape = (
      local.curr_69.code == "+"
        ? [for i, b in local.iter_68.tape : (i == local.iter_68.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_69.code == "-"
        ? [for i, b in local.iter_68.tape : (i == local.iter_68.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_69.code == ","
        ? [for i, b in local.iter_68.tape : (i == local.iter_68.tape_ptr ? local.ascii_lookup[local.curr_69.input] : b)]
        : local.iter_68.tape)

    tape_ptr = (
      local.curr_69.code == "<"
        ? local.iter_68.tape_ptr == 0 ? length(local.iter_68.tape) - 1 : local.iter_68.tape_ptr - 1 :
      local.curr_69.code == ">"
        ? local.iter_68.tape_ptr == length(local.iter_68.tape) - 1 ? 0 : local.iter_68.tape_ptr + 1
        : local.iter_68.tape_ptr)

    code_ptr = 1 + (
      local.curr_69.code == "["
        ? local.iter_68.tape[local.iter_68.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_68.code_ptr)] : local.iter_68.code_ptr :
      local.curr_69.code == "]"
        ? local.iter_68.tape[local.iter_68.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_68.code_ptr)] : local.iter_68.code_ptr
        : local.iter_68.code_ptr)

    steps_taken = 1 + local.iter_68.steps_taken
  }
}

locals {
  end_of_code_70 = try(local.iter_69.code_ptr >= length(var.code), true)

  curr_70 = local.end_of_code_70 ? null : {
    code = substr(var.code, local.iter_69.code_ptr, 1)
    input = substr(var.code, local.iter_69.code_ptr, 1) == "," ? substr(local.iter_69.input, 0, 1) : null
  }

  iter_70 = local.end_of_code_70 ? local.iter_69 : {
    input = (local.curr_70.code == ","
      ? substr(local.iter_69.input, 1, -1)
      : local.iter_69.input)

    output = (local.curr_70.code == "."
      ? "${local.iter_69.output}${jsondecode(format("\"\\u%04x\"", local.iter_69.tape[local.iter_69.tape_ptr]))}"
      : local.iter_69.output)
    
    tape = (
      local.curr_70.code == "+"
        ? [for i, b in local.iter_69.tape : (i == local.iter_69.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_70.code == "-"
        ? [for i, b in local.iter_69.tape : (i == local.iter_69.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_70.code == ","
        ? [for i, b in local.iter_69.tape : (i == local.iter_69.tape_ptr ? local.ascii_lookup[local.curr_70.input] : b)]
        : local.iter_69.tape)

    tape_ptr = (
      local.curr_70.code == "<"
        ? local.iter_69.tape_ptr == 0 ? length(local.iter_69.tape) - 1 : local.iter_69.tape_ptr - 1 :
      local.curr_70.code == ">"
        ? local.iter_69.tape_ptr == length(local.iter_69.tape) - 1 ? 0 : local.iter_69.tape_ptr + 1
        : local.iter_69.tape_ptr)

    code_ptr = 1 + (
      local.curr_70.code == "["
        ? local.iter_69.tape[local.iter_69.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_69.code_ptr)] : local.iter_69.code_ptr :
      local.curr_70.code == "]"
        ? local.iter_69.tape[local.iter_69.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_69.code_ptr)] : local.iter_69.code_ptr
        : local.iter_69.code_ptr)

    steps_taken = 1 + local.iter_69.steps_taken
  }
}

locals {
  end_of_code_71 = try(local.iter_70.code_ptr >= length(var.code), true)

  curr_71 = local.end_of_code_71 ? null : {
    code = substr(var.code, local.iter_70.code_ptr, 1)
    input = substr(var.code, local.iter_70.code_ptr, 1) == "," ? substr(local.iter_70.input, 0, 1) : null
  }

  iter_71 = local.end_of_code_71 ? local.iter_70 : {
    input = (local.curr_71.code == ","
      ? substr(local.iter_70.input, 1, -1)
      : local.iter_70.input)

    output = (local.curr_71.code == "."
      ? "${local.iter_70.output}${jsondecode(format("\"\\u%04x\"", local.iter_70.tape[local.iter_70.tape_ptr]))}"
      : local.iter_70.output)
    
    tape = (
      local.curr_71.code == "+"
        ? [for i, b in local.iter_70.tape : (i == local.iter_70.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_71.code == "-"
        ? [for i, b in local.iter_70.tape : (i == local.iter_70.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_71.code == ","
        ? [for i, b in local.iter_70.tape : (i == local.iter_70.tape_ptr ? local.ascii_lookup[local.curr_71.input] : b)]
        : local.iter_70.tape)

    tape_ptr = (
      local.curr_71.code == "<"
        ? local.iter_70.tape_ptr == 0 ? length(local.iter_70.tape) - 1 : local.iter_70.tape_ptr - 1 :
      local.curr_71.code == ">"
        ? local.iter_70.tape_ptr == length(local.iter_70.tape) - 1 ? 0 : local.iter_70.tape_ptr + 1
        : local.iter_70.tape_ptr)

    code_ptr = 1 + (
      local.curr_71.code == "["
        ? local.iter_70.tape[local.iter_70.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_70.code_ptr)] : local.iter_70.code_ptr :
      local.curr_71.code == "]"
        ? local.iter_70.tape[local.iter_70.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_70.code_ptr)] : local.iter_70.code_ptr
        : local.iter_70.code_ptr)

    steps_taken = 1 + local.iter_70.steps_taken
  }
}

locals {
  end_of_code_72 = try(local.iter_71.code_ptr >= length(var.code), true)

  curr_72 = local.end_of_code_72 ? null : {
    code = substr(var.code, local.iter_71.code_ptr, 1)
    input = substr(var.code, local.iter_71.code_ptr, 1) == "," ? substr(local.iter_71.input, 0, 1) : null
  }

  iter_72 = local.end_of_code_72 ? local.iter_71 : {
    input = (local.curr_72.code == ","
      ? substr(local.iter_71.input, 1, -1)
      : local.iter_71.input)

    output = (local.curr_72.code == "."
      ? "${local.iter_71.output}${jsondecode(format("\"\\u%04x\"", local.iter_71.tape[local.iter_71.tape_ptr]))}"
      : local.iter_71.output)
    
    tape = (
      local.curr_72.code == "+"
        ? [for i, b in local.iter_71.tape : (i == local.iter_71.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_72.code == "-"
        ? [for i, b in local.iter_71.tape : (i == local.iter_71.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_72.code == ","
        ? [for i, b in local.iter_71.tape : (i == local.iter_71.tape_ptr ? local.ascii_lookup[local.curr_72.input] : b)]
        : local.iter_71.tape)

    tape_ptr = (
      local.curr_72.code == "<"
        ? local.iter_71.tape_ptr == 0 ? length(local.iter_71.tape) - 1 : local.iter_71.tape_ptr - 1 :
      local.curr_72.code == ">"
        ? local.iter_71.tape_ptr == length(local.iter_71.tape) - 1 ? 0 : local.iter_71.tape_ptr + 1
        : local.iter_71.tape_ptr)

    code_ptr = 1 + (
      local.curr_72.code == "["
        ? local.iter_71.tape[local.iter_71.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_71.code_ptr)] : local.iter_71.code_ptr :
      local.curr_72.code == "]"
        ? local.iter_71.tape[local.iter_71.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_71.code_ptr)] : local.iter_71.code_ptr
        : local.iter_71.code_ptr)

    steps_taken = 1 + local.iter_71.steps_taken
  }
}

locals {
  end_of_code_73 = try(local.iter_72.code_ptr >= length(var.code), true)

  curr_73 = local.end_of_code_73 ? null : {
    code = substr(var.code, local.iter_72.code_ptr, 1)
    input = substr(var.code, local.iter_72.code_ptr, 1) == "," ? substr(local.iter_72.input, 0, 1) : null
  }

  iter_73 = local.end_of_code_73 ? local.iter_72 : {
    input = (local.curr_73.code == ","
      ? substr(local.iter_72.input, 1, -1)
      : local.iter_72.input)

    output = (local.curr_73.code == "."
      ? "${local.iter_72.output}${jsondecode(format("\"\\u%04x\"", local.iter_72.tape[local.iter_72.tape_ptr]))}"
      : local.iter_72.output)
    
    tape = (
      local.curr_73.code == "+"
        ? [for i, b in local.iter_72.tape : (i == local.iter_72.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_73.code == "-"
        ? [for i, b in local.iter_72.tape : (i == local.iter_72.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_73.code == ","
        ? [for i, b in local.iter_72.tape : (i == local.iter_72.tape_ptr ? local.ascii_lookup[local.curr_73.input] : b)]
        : local.iter_72.tape)

    tape_ptr = (
      local.curr_73.code == "<"
        ? local.iter_72.tape_ptr == 0 ? length(local.iter_72.tape) - 1 : local.iter_72.tape_ptr - 1 :
      local.curr_73.code == ">"
        ? local.iter_72.tape_ptr == length(local.iter_72.tape) - 1 ? 0 : local.iter_72.tape_ptr + 1
        : local.iter_72.tape_ptr)

    code_ptr = 1 + (
      local.curr_73.code == "["
        ? local.iter_72.tape[local.iter_72.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_72.code_ptr)] : local.iter_72.code_ptr :
      local.curr_73.code == "]"
        ? local.iter_72.tape[local.iter_72.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_72.code_ptr)] : local.iter_72.code_ptr
        : local.iter_72.code_ptr)

    steps_taken = 1 + local.iter_72.steps_taken
  }
}

locals {
  end_of_code_74 = try(local.iter_73.code_ptr >= length(var.code), true)

  curr_74 = local.end_of_code_74 ? null : {
    code = substr(var.code, local.iter_73.code_ptr, 1)
    input = substr(var.code, local.iter_73.code_ptr, 1) == "," ? substr(local.iter_73.input, 0, 1) : null
  }

  iter_74 = local.end_of_code_74 ? local.iter_73 : {
    input = (local.curr_74.code == ","
      ? substr(local.iter_73.input, 1, -1)
      : local.iter_73.input)

    output = (local.curr_74.code == "."
      ? "${local.iter_73.output}${jsondecode(format("\"\\u%04x\"", local.iter_73.tape[local.iter_73.tape_ptr]))}"
      : local.iter_73.output)
    
    tape = (
      local.curr_74.code == "+"
        ? [for i, b in local.iter_73.tape : (i == local.iter_73.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_74.code == "-"
        ? [for i, b in local.iter_73.tape : (i == local.iter_73.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_74.code == ","
        ? [for i, b in local.iter_73.tape : (i == local.iter_73.tape_ptr ? local.ascii_lookup[local.curr_74.input] : b)]
        : local.iter_73.tape)

    tape_ptr = (
      local.curr_74.code == "<"
        ? local.iter_73.tape_ptr == 0 ? length(local.iter_73.tape) - 1 : local.iter_73.tape_ptr - 1 :
      local.curr_74.code == ">"
        ? local.iter_73.tape_ptr == length(local.iter_73.tape) - 1 ? 0 : local.iter_73.tape_ptr + 1
        : local.iter_73.tape_ptr)

    code_ptr = 1 + (
      local.curr_74.code == "["
        ? local.iter_73.tape[local.iter_73.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_73.code_ptr)] : local.iter_73.code_ptr :
      local.curr_74.code == "]"
        ? local.iter_73.tape[local.iter_73.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_73.code_ptr)] : local.iter_73.code_ptr
        : local.iter_73.code_ptr)

    steps_taken = 1 + local.iter_73.steps_taken
  }
}

locals {
  end_of_code_75 = try(local.iter_74.code_ptr >= length(var.code), true)

  curr_75 = local.end_of_code_75 ? null : {
    code = substr(var.code, local.iter_74.code_ptr, 1)
    input = substr(var.code, local.iter_74.code_ptr, 1) == "," ? substr(local.iter_74.input, 0, 1) : null
  }

  iter_75 = local.end_of_code_75 ? local.iter_74 : {
    input = (local.curr_75.code == ","
      ? substr(local.iter_74.input, 1, -1)
      : local.iter_74.input)

    output = (local.curr_75.code == "."
      ? "${local.iter_74.output}${jsondecode(format("\"\\u%04x\"", local.iter_74.tape[local.iter_74.tape_ptr]))}"
      : local.iter_74.output)
    
    tape = (
      local.curr_75.code == "+"
        ? [for i, b in local.iter_74.tape : (i == local.iter_74.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_75.code == "-"
        ? [for i, b in local.iter_74.tape : (i == local.iter_74.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_75.code == ","
        ? [for i, b in local.iter_74.tape : (i == local.iter_74.tape_ptr ? local.ascii_lookup[local.curr_75.input] : b)]
        : local.iter_74.tape)

    tape_ptr = (
      local.curr_75.code == "<"
        ? local.iter_74.tape_ptr == 0 ? length(local.iter_74.tape) - 1 : local.iter_74.tape_ptr - 1 :
      local.curr_75.code == ">"
        ? local.iter_74.tape_ptr == length(local.iter_74.tape) - 1 ? 0 : local.iter_74.tape_ptr + 1
        : local.iter_74.tape_ptr)

    code_ptr = 1 + (
      local.curr_75.code == "["
        ? local.iter_74.tape[local.iter_74.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_74.code_ptr)] : local.iter_74.code_ptr :
      local.curr_75.code == "]"
        ? local.iter_74.tape[local.iter_74.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_74.code_ptr)] : local.iter_74.code_ptr
        : local.iter_74.code_ptr)

    steps_taken = 1 + local.iter_74.steps_taken
  }
}

locals {
  end_of_code_76 = try(local.iter_75.code_ptr >= length(var.code), true)

  curr_76 = local.end_of_code_76 ? null : {
    code = substr(var.code, local.iter_75.code_ptr, 1)
    input = substr(var.code, local.iter_75.code_ptr, 1) == "," ? substr(local.iter_75.input, 0, 1) : null
  }

  iter_76 = local.end_of_code_76 ? local.iter_75 : {
    input = (local.curr_76.code == ","
      ? substr(local.iter_75.input, 1, -1)
      : local.iter_75.input)

    output = (local.curr_76.code == "."
      ? "${local.iter_75.output}${jsondecode(format("\"\\u%04x\"", local.iter_75.tape[local.iter_75.tape_ptr]))}"
      : local.iter_75.output)
    
    tape = (
      local.curr_76.code == "+"
        ? [for i, b in local.iter_75.tape : (i == local.iter_75.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_76.code == "-"
        ? [for i, b in local.iter_75.tape : (i == local.iter_75.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_76.code == ","
        ? [for i, b in local.iter_75.tape : (i == local.iter_75.tape_ptr ? local.ascii_lookup[local.curr_76.input] : b)]
        : local.iter_75.tape)

    tape_ptr = (
      local.curr_76.code == "<"
        ? local.iter_75.tape_ptr == 0 ? length(local.iter_75.tape) - 1 : local.iter_75.tape_ptr - 1 :
      local.curr_76.code == ">"
        ? local.iter_75.tape_ptr == length(local.iter_75.tape) - 1 ? 0 : local.iter_75.tape_ptr + 1
        : local.iter_75.tape_ptr)

    code_ptr = 1 + (
      local.curr_76.code == "["
        ? local.iter_75.tape[local.iter_75.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_75.code_ptr)] : local.iter_75.code_ptr :
      local.curr_76.code == "]"
        ? local.iter_75.tape[local.iter_75.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_75.code_ptr)] : local.iter_75.code_ptr
        : local.iter_75.code_ptr)

    steps_taken = 1 + local.iter_75.steps_taken
  }
}

locals {
  end_of_code_77 = try(local.iter_76.code_ptr >= length(var.code), true)

  curr_77 = local.end_of_code_77 ? null : {
    code = substr(var.code, local.iter_76.code_ptr, 1)
    input = substr(var.code, local.iter_76.code_ptr, 1) == "," ? substr(local.iter_76.input, 0, 1) : null
  }

  iter_77 = local.end_of_code_77 ? local.iter_76 : {
    input = (local.curr_77.code == ","
      ? substr(local.iter_76.input, 1, -1)
      : local.iter_76.input)

    output = (local.curr_77.code == "."
      ? "${local.iter_76.output}${jsondecode(format("\"\\u%04x\"", local.iter_76.tape[local.iter_76.tape_ptr]))}"
      : local.iter_76.output)
    
    tape = (
      local.curr_77.code == "+"
        ? [for i, b in local.iter_76.tape : (i == local.iter_76.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_77.code == "-"
        ? [for i, b in local.iter_76.tape : (i == local.iter_76.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_77.code == ","
        ? [for i, b in local.iter_76.tape : (i == local.iter_76.tape_ptr ? local.ascii_lookup[local.curr_77.input] : b)]
        : local.iter_76.tape)

    tape_ptr = (
      local.curr_77.code == "<"
        ? local.iter_76.tape_ptr == 0 ? length(local.iter_76.tape) - 1 : local.iter_76.tape_ptr - 1 :
      local.curr_77.code == ">"
        ? local.iter_76.tape_ptr == length(local.iter_76.tape) - 1 ? 0 : local.iter_76.tape_ptr + 1
        : local.iter_76.tape_ptr)

    code_ptr = 1 + (
      local.curr_77.code == "["
        ? local.iter_76.tape[local.iter_76.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_76.code_ptr)] : local.iter_76.code_ptr :
      local.curr_77.code == "]"
        ? local.iter_76.tape[local.iter_76.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_76.code_ptr)] : local.iter_76.code_ptr
        : local.iter_76.code_ptr)

    steps_taken = 1 + local.iter_76.steps_taken
  }
}

locals {
  end_of_code_78 = try(local.iter_77.code_ptr >= length(var.code), true)

  curr_78 = local.end_of_code_78 ? null : {
    code = substr(var.code, local.iter_77.code_ptr, 1)
    input = substr(var.code, local.iter_77.code_ptr, 1) == "," ? substr(local.iter_77.input, 0, 1) : null
  }

  iter_78 = local.end_of_code_78 ? local.iter_77 : {
    input = (local.curr_78.code == ","
      ? substr(local.iter_77.input, 1, -1)
      : local.iter_77.input)

    output = (local.curr_78.code == "."
      ? "${local.iter_77.output}${jsondecode(format("\"\\u%04x\"", local.iter_77.tape[local.iter_77.tape_ptr]))}"
      : local.iter_77.output)
    
    tape = (
      local.curr_78.code == "+"
        ? [for i, b in local.iter_77.tape : (i == local.iter_77.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_78.code == "-"
        ? [for i, b in local.iter_77.tape : (i == local.iter_77.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_78.code == ","
        ? [for i, b in local.iter_77.tape : (i == local.iter_77.tape_ptr ? local.ascii_lookup[local.curr_78.input] : b)]
        : local.iter_77.tape)

    tape_ptr = (
      local.curr_78.code == "<"
        ? local.iter_77.tape_ptr == 0 ? length(local.iter_77.tape) - 1 : local.iter_77.tape_ptr - 1 :
      local.curr_78.code == ">"
        ? local.iter_77.tape_ptr == length(local.iter_77.tape) - 1 ? 0 : local.iter_77.tape_ptr + 1
        : local.iter_77.tape_ptr)

    code_ptr = 1 + (
      local.curr_78.code == "["
        ? local.iter_77.tape[local.iter_77.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_77.code_ptr)] : local.iter_77.code_ptr :
      local.curr_78.code == "]"
        ? local.iter_77.tape[local.iter_77.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_77.code_ptr)] : local.iter_77.code_ptr
        : local.iter_77.code_ptr)

    steps_taken = 1 + local.iter_77.steps_taken
  }
}

locals {
  end_of_code_79 = try(local.iter_78.code_ptr >= length(var.code), true)

  curr_79 = local.end_of_code_79 ? null : {
    code = substr(var.code, local.iter_78.code_ptr, 1)
    input = substr(var.code, local.iter_78.code_ptr, 1) == "," ? substr(local.iter_78.input, 0, 1) : null
  }

  iter_79 = local.end_of_code_79 ? local.iter_78 : {
    input = (local.curr_79.code == ","
      ? substr(local.iter_78.input, 1, -1)
      : local.iter_78.input)

    output = (local.curr_79.code == "."
      ? "${local.iter_78.output}${jsondecode(format("\"\\u%04x\"", local.iter_78.tape[local.iter_78.tape_ptr]))}"
      : local.iter_78.output)
    
    tape = (
      local.curr_79.code == "+"
        ? [for i, b in local.iter_78.tape : (i == local.iter_78.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_79.code == "-"
        ? [for i, b in local.iter_78.tape : (i == local.iter_78.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_79.code == ","
        ? [for i, b in local.iter_78.tape : (i == local.iter_78.tape_ptr ? local.ascii_lookup[local.curr_79.input] : b)]
        : local.iter_78.tape)

    tape_ptr = (
      local.curr_79.code == "<"
        ? local.iter_78.tape_ptr == 0 ? length(local.iter_78.tape) - 1 : local.iter_78.tape_ptr - 1 :
      local.curr_79.code == ">"
        ? local.iter_78.tape_ptr == length(local.iter_78.tape) - 1 ? 0 : local.iter_78.tape_ptr + 1
        : local.iter_78.tape_ptr)

    code_ptr = 1 + (
      local.curr_79.code == "["
        ? local.iter_78.tape[local.iter_78.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_78.code_ptr)] : local.iter_78.code_ptr :
      local.curr_79.code == "]"
        ? local.iter_78.tape[local.iter_78.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_78.code_ptr)] : local.iter_78.code_ptr
        : local.iter_78.code_ptr)

    steps_taken = 1 + local.iter_78.steps_taken
  }
}

locals {
  end_of_code_80 = try(local.iter_79.code_ptr >= length(var.code), true)

  curr_80 = local.end_of_code_80 ? null : {
    code = substr(var.code, local.iter_79.code_ptr, 1)
    input = substr(var.code, local.iter_79.code_ptr, 1) == "," ? substr(local.iter_79.input, 0, 1) : null
  }

  iter_80 = local.end_of_code_80 ? local.iter_79 : {
    input = (local.curr_80.code == ","
      ? substr(local.iter_79.input, 1, -1)
      : local.iter_79.input)

    output = (local.curr_80.code == "."
      ? "${local.iter_79.output}${jsondecode(format("\"\\u%04x\"", local.iter_79.tape[local.iter_79.tape_ptr]))}"
      : local.iter_79.output)
    
    tape = (
      local.curr_80.code == "+"
        ? [for i, b in local.iter_79.tape : (i == local.iter_79.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_80.code == "-"
        ? [for i, b in local.iter_79.tape : (i == local.iter_79.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_80.code == ","
        ? [for i, b in local.iter_79.tape : (i == local.iter_79.tape_ptr ? local.ascii_lookup[local.curr_80.input] : b)]
        : local.iter_79.tape)

    tape_ptr = (
      local.curr_80.code == "<"
        ? local.iter_79.tape_ptr == 0 ? length(local.iter_79.tape) - 1 : local.iter_79.tape_ptr - 1 :
      local.curr_80.code == ">"
        ? local.iter_79.tape_ptr == length(local.iter_79.tape) - 1 ? 0 : local.iter_79.tape_ptr + 1
        : local.iter_79.tape_ptr)

    code_ptr = 1 + (
      local.curr_80.code == "["
        ? local.iter_79.tape[local.iter_79.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_79.code_ptr)] : local.iter_79.code_ptr :
      local.curr_80.code == "]"
        ? local.iter_79.tape[local.iter_79.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_79.code_ptr)] : local.iter_79.code_ptr
        : local.iter_79.code_ptr)

    steps_taken = 1 + local.iter_79.steps_taken
  }
}

locals {
  end_of_code_81 = try(local.iter_80.code_ptr >= length(var.code), true)

  curr_81 = local.end_of_code_81 ? null : {
    code = substr(var.code, local.iter_80.code_ptr, 1)
    input = substr(var.code, local.iter_80.code_ptr, 1) == "," ? substr(local.iter_80.input, 0, 1) : null
  }

  iter_81 = local.end_of_code_81 ? local.iter_80 : {
    input = (local.curr_81.code == ","
      ? substr(local.iter_80.input, 1, -1)
      : local.iter_80.input)

    output = (local.curr_81.code == "."
      ? "${local.iter_80.output}${jsondecode(format("\"\\u%04x\"", local.iter_80.tape[local.iter_80.tape_ptr]))}"
      : local.iter_80.output)
    
    tape = (
      local.curr_81.code == "+"
        ? [for i, b in local.iter_80.tape : (i == local.iter_80.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_81.code == "-"
        ? [for i, b in local.iter_80.tape : (i == local.iter_80.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_81.code == ","
        ? [for i, b in local.iter_80.tape : (i == local.iter_80.tape_ptr ? local.ascii_lookup[local.curr_81.input] : b)]
        : local.iter_80.tape)

    tape_ptr = (
      local.curr_81.code == "<"
        ? local.iter_80.tape_ptr == 0 ? length(local.iter_80.tape) - 1 : local.iter_80.tape_ptr - 1 :
      local.curr_81.code == ">"
        ? local.iter_80.tape_ptr == length(local.iter_80.tape) - 1 ? 0 : local.iter_80.tape_ptr + 1
        : local.iter_80.tape_ptr)

    code_ptr = 1 + (
      local.curr_81.code == "["
        ? local.iter_80.tape[local.iter_80.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_80.code_ptr)] : local.iter_80.code_ptr :
      local.curr_81.code == "]"
        ? local.iter_80.tape[local.iter_80.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_80.code_ptr)] : local.iter_80.code_ptr
        : local.iter_80.code_ptr)

    steps_taken = 1 + local.iter_80.steps_taken
  }
}

locals {
  end_of_code_82 = try(local.iter_81.code_ptr >= length(var.code), true)

  curr_82 = local.end_of_code_82 ? null : {
    code = substr(var.code, local.iter_81.code_ptr, 1)
    input = substr(var.code, local.iter_81.code_ptr, 1) == "," ? substr(local.iter_81.input, 0, 1) : null
  }

  iter_82 = local.end_of_code_82 ? local.iter_81 : {
    input = (local.curr_82.code == ","
      ? substr(local.iter_81.input, 1, -1)
      : local.iter_81.input)

    output = (local.curr_82.code == "."
      ? "${local.iter_81.output}${jsondecode(format("\"\\u%04x\"", local.iter_81.tape[local.iter_81.tape_ptr]))}"
      : local.iter_81.output)
    
    tape = (
      local.curr_82.code == "+"
        ? [for i, b in local.iter_81.tape : (i == local.iter_81.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_82.code == "-"
        ? [for i, b in local.iter_81.tape : (i == local.iter_81.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_82.code == ","
        ? [for i, b in local.iter_81.tape : (i == local.iter_81.tape_ptr ? local.ascii_lookup[local.curr_82.input] : b)]
        : local.iter_81.tape)

    tape_ptr = (
      local.curr_82.code == "<"
        ? local.iter_81.tape_ptr == 0 ? length(local.iter_81.tape) - 1 : local.iter_81.tape_ptr - 1 :
      local.curr_82.code == ">"
        ? local.iter_81.tape_ptr == length(local.iter_81.tape) - 1 ? 0 : local.iter_81.tape_ptr + 1
        : local.iter_81.tape_ptr)

    code_ptr = 1 + (
      local.curr_82.code == "["
        ? local.iter_81.tape[local.iter_81.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_81.code_ptr)] : local.iter_81.code_ptr :
      local.curr_82.code == "]"
        ? local.iter_81.tape[local.iter_81.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_81.code_ptr)] : local.iter_81.code_ptr
        : local.iter_81.code_ptr)

    steps_taken = 1 + local.iter_81.steps_taken
  }
}

locals {
  end_of_code_83 = try(local.iter_82.code_ptr >= length(var.code), true)

  curr_83 = local.end_of_code_83 ? null : {
    code = substr(var.code, local.iter_82.code_ptr, 1)
    input = substr(var.code, local.iter_82.code_ptr, 1) == "," ? substr(local.iter_82.input, 0, 1) : null
  }

  iter_83 = local.end_of_code_83 ? local.iter_82 : {
    input = (local.curr_83.code == ","
      ? substr(local.iter_82.input, 1, -1)
      : local.iter_82.input)

    output = (local.curr_83.code == "."
      ? "${local.iter_82.output}${jsondecode(format("\"\\u%04x\"", local.iter_82.tape[local.iter_82.tape_ptr]))}"
      : local.iter_82.output)
    
    tape = (
      local.curr_83.code == "+"
        ? [for i, b in local.iter_82.tape : (i == local.iter_82.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_83.code == "-"
        ? [for i, b in local.iter_82.tape : (i == local.iter_82.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_83.code == ","
        ? [for i, b in local.iter_82.tape : (i == local.iter_82.tape_ptr ? local.ascii_lookup[local.curr_83.input] : b)]
        : local.iter_82.tape)

    tape_ptr = (
      local.curr_83.code == "<"
        ? local.iter_82.tape_ptr == 0 ? length(local.iter_82.tape) - 1 : local.iter_82.tape_ptr - 1 :
      local.curr_83.code == ">"
        ? local.iter_82.tape_ptr == length(local.iter_82.tape) - 1 ? 0 : local.iter_82.tape_ptr + 1
        : local.iter_82.tape_ptr)

    code_ptr = 1 + (
      local.curr_83.code == "["
        ? local.iter_82.tape[local.iter_82.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_82.code_ptr)] : local.iter_82.code_ptr :
      local.curr_83.code == "]"
        ? local.iter_82.tape[local.iter_82.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_82.code_ptr)] : local.iter_82.code_ptr
        : local.iter_82.code_ptr)

    steps_taken = 1 + local.iter_82.steps_taken
  }
}

locals {
  end_of_code_84 = try(local.iter_83.code_ptr >= length(var.code), true)

  curr_84 = local.end_of_code_84 ? null : {
    code = substr(var.code, local.iter_83.code_ptr, 1)
    input = substr(var.code, local.iter_83.code_ptr, 1) == "," ? substr(local.iter_83.input, 0, 1) : null
  }

  iter_84 = local.end_of_code_84 ? local.iter_83 : {
    input = (local.curr_84.code == ","
      ? substr(local.iter_83.input, 1, -1)
      : local.iter_83.input)

    output = (local.curr_84.code == "."
      ? "${local.iter_83.output}${jsondecode(format("\"\\u%04x\"", local.iter_83.tape[local.iter_83.tape_ptr]))}"
      : local.iter_83.output)
    
    tape = (
      local.curr_84.code == "+"
        ? [for i, b in local.iter_83.tape : (i == local.iter_83.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_84.code == "-"
        ? [for i, b in local.iter_83.tape : (i == local.iter_83.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_84.code == ","
        ? [for i, b in local.iter_83.tape : (i == local.iter_83.tape_ptr ? local.ascii_lookup[local.curr_84.input] : b)]
        : local.iter_83.tape)

    tape_ptr = (
      local.curr_84.code == "<"
        ? local.iter_83.tape_ptr == 0 ? length(local.iter_83.tape) - 1 : local.iter_83.tape_ptr - 1 :
      local.curr_84.code == ">"
        ? local.iter_83.tape_ptr == length(local.iter_83.tape) - 1 ? 0 : local.iter_83.tape_ptr + 1
        : local.iter_83.tape_ptr)

    code_ptr = 1 + (
      local.curr_84.code == "["
        ? local.iter_83.tape[local.iter_83.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_83.code_ptr)] : local.iter_83.code_ptr :
      local.curr_84.code == "]"
        ? local.iter_83.tape[local.iter_83.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_83.code_ptr)] : local.iter_83.code_ptr
        : local.iter_83.code_ptr)

    steps_taken = 1 + local.iter_83.steps_taken
  }
}

locals {
  end_of_code_85 = try(local.iter_84.code_ptr >= length(var.code), true)

  curr_85 = local.end_of_code_85 ? null : {
    code = substr(var.code, local.iter_84.code_ptr, 1)
    input = substr(var.code, local.iter_84.code_ptr, 1) == "," ? substr(local.iter_84.input, 0, 1) : null
  }

  iter_85 = local.end_of_code_85 ? local.iter_84 : {
    input = (local.curr_85.code == ","
      ? substr(local.iter_84.input, 1, -1)
      : local.iter_84.input)

    output = (local.curr_85.code == "."
      ? "${local.iter_84.output}${jsondecode(format("\"\\u%04x\"", local.iter_84.tape[local.iter_84.tape_ptr]))}"
      : local.iter_84.output)
    
    tape = (
      local.curr_85.code == "+"
        ? [for i, b in local.iter_84.tape : (i == local.iter_84.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_85.code == "-"
        ? [for i, b in local.iter_84.tape : (i == local.iter_84.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_85.code == ","
        ? [for i, b in local.iter_84.tape : (i == local.iter_84.tape_ptr ? local.ascii_lookup[local.curr_85.input] : b)]
        : local.iter_84.tape)

    tape_ptr = (
      local.curr_85.code == "<"
        ? local.iter_84.tape_ptr == 0 ? length(local.iter_84.tape) - 1 : local.iter_84.tape_ptr - 1 :
      local.curr_85.code == ">"
        ? local.iter_84.tape_ptr == length(local.iter_84.tape) - 1 ? 0 : local.iter_84.tape_ptr + 1
        : local.iter_84.tape_ptr)

    code_ptr = 1 + (
      local.curr_85.code == "["
        ? local.iter_84.tape[local.iter_84.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_84.code_ptr)] : local.iter_84.code_ptr :
      local.curr_85.code == "]"
        ? local.iter_84.tape[local.iter_84.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_84.code_ptr)] : local.iter_84.code_ptr
        : local.iter_84.code_ptr)

    steps_taken = 1 + local.iter_84.steps_taken
  }
}

locals {
  end_of_code_86 = try(local.iter_85.code_ptr >= length(var.code), true)

  curr_86 = local.end_of_code_86 ? null : {
    code = substr(var.code, local.iter_85.code_ptr, 1)
    input = substr(var.code, local.iter_85.code_ptr, 1) == "," ? substr(local.iter_85.input, 0, 1) : null
  }

  iter_86 = local.end_of_code_86 ? local.iter_85 : {
    input = (local.curr_86.code == ","
      ? substr(local.iter_85.input, 1, -1)
      : local.iter_85.input)

    output = (local.curr_86.code == "."
      ? "${local.iter_85.output}${jsondecode(format("\"\\u%04x\"", local.iter_85.tape[local.iter_85.tape_ptr]))}"
      : local.iter_85.output)
    
    tape = (
      local.curr_86.code == "+"
        ? [for i, b in local.iter_85.tape : (i == local.iter_85.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_86.code == "-"
        ? [for i, b in local.iter_85.tape : (i == local.iter_85.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_86.code == ","
        ? [for i, b in local.iter_85.tape : (i == local.iter_85.tape_ptr ? local.ascii_lookup[local.curr_86.input] : b)]
        : local.iter_85.tape)

    tape_ptr = (
      local.curr_86.code == "<"
        ? local.iter_85.tape_ptr == 0 ? length(local.iter_85.tape) - 1 : local.iter_85.tape_ptr - 1 :
      local.curr_86.code == ">"
        ? local.iter_85.tape_ptr == length(local.iter_85.tape) - 1 ? 0 : local.iter_85.tape_ptr + 1
        : local.iter_85.tape_ptr)

    code_ptr = 1 + (
      local.curr_86.code == "["
        ? local.iter_85.tape[local.iter_85.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_85.code_ptr)] : local.iter_85.code_ptr :
      local.curr_86.code == "]"
        ? local.iter_85.tape[local.iter_85.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_85.code_ptr)] : local.iter_85.code_ptr
        : local.iter_85.code_ptr)

    steps_taken = 1 + local.iter_85.steps_taken
  }
}

locals {
  end_of_code_87 = try(local.iter_86.code_ptr >= length(var.code), true)

  curr_87 = local.end_of_code_87 ? null : {
    code = substr(var.code, local.iter_86.code_ptr, 1)
    input = substr(var.code, local.iter_86.code_ptr, 1) == "," ? substr(local.iter_86.input, 0, 1) : null
  }

  iter_87 = local.end_of_code_87 ? local.iter_86 : {
    input = (local.curr_87.code == ","
      ? substr(local.iter_86.input, 1, -1)
      : local.iter_86.input)

    output = (local.curr_87.code == "."
      ? "${local.iter_86.output}${jsondecode(format("\"\\u%04x\"", local.iter_86.tape[local.iter_86.tape_ptr]))}"
      : local.iter_86.output)
    
    tape = (
      local.curr_87.code == "+"
        ? [for i, b in local.iter_86.tape : (i == local.iter_86.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_87.code == "-"
        ? [for i, b in local.iter_86.tape : (i == local.iter_86.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_87.code == ","
        ? [for i, b in local.iter_86.tape : (i == local.iter_86.tape_ptr ? local.ascii_lookup[local.curr_87.input] : b)]
        : local.iter_86.tape)

    tape_ptr = (
      local.curr_87.code == "<"
        ? local.iter_86.tape_ptr == 0 ? length(local.iter_86.tape) - 1 : local.iter_86.tape_ptr - 1 :
      local.curr_87.code == ">"
        ? local.iter_86.tape_ptr == length(local.iter_86.tape) - 1 ? 0 : local.iter_86.tape_ptr + 1
        : local.iter_86.tape_ptr)

    code_ptr = 1 + (
      local.curr_87.code == "["
        ? local.iter_86.tape[local.iter_86.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_86.code_ptr)] : local.iter_86.code_ptr :
      local.curr_87.code == "]"
        ? local.iter_86.tape[local.iter_86.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_86.code_ptr)] : local.iter_86.code_ptr
        : local.iter_86.code_ptr)

    steps_taken = 1 + local.iter_86.steps_taken
  }
}

locals {
  end_of_code_88 = try(local.iter_87.code_ptr >= length(var.code), true)

  curr_88 = local.end_of_code_88 ? null : {
    code = substr(var.code, local.iter_87.code_ptr, 1)
    input = substr(var.code, local.iter_87.code_ptr, 1) == "," ? substr(local.iter_87.input, 0, 1) : null
  }

  iter_88 = local.end_of_code_88 ? local.iter_87 : {
    input = (local.curr_88.code == ","
      ? substr(local.iter_87.input, 1, -1)
      : local.iter_87.input)

    output = (local.curr_88.code == "."
      ? "${local.iter_87.output}${jsondecode(format("\"\\u%04x\"", local.iter_87.tape[local.iter_87.tape_ptr]))}"
      : local.iter_87.output)
    
    tape = (
      local.curr_88.code == "+"
        ? [for i, b in local.iter_87.tape : (i == local.iter_87.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_88.code == "-"
        ? [for i, b in local.iter_87.tape : (i == local.iter_87.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_88.code == ","
        ? [for i, b in local.iter_87.tape : (i == local.iter_87.tape_ptr ? local.ascii_lookup[local.curr_88.input] : b)]
        : local.iter_87.tape)

    tape_ptr = (
      local.curr_88.code == "<"
        ? local.iter_87.tape_ptr == 0 ? length(local.iter_87.tape) - 1 : local.iter_87.tape_ptr - 1 :
      local.curr_88.code == ">"
        ? local.iter_87.tape_ptr == length(local.iter_87.tape) - 1 ? 0 : local.iter_87.tape_ptr + 1
        : local.iter_87.tape_ptr)

    code_ptr = 1 + (
      local.curr_88.code == "["
        ? local.iter_87.tape[local.iter_87.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_87.code_ptr)] : local.iter_87.code_ptr :
      local.curr_88.code == "]"
        ? local.iter_87.tape[local.iter_87.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_87.code_ptr)] : local.iter_87.code_ptr
        : local.iter_87.code_ptr)

    steps_taken = 1 + local.iter_87.steps_taken
  }
}

locals {
  end_of_code_89 = try(local.iter_88.code_ptr >= length(var.code), true)

  curr_89 = local.end_of_code_89 ? null : {
    code = substr(var.code, local.iter_88.code_ptr, 1)
    input = substr(var.code, local.iter_88.code_ptr, 1) == "," ? substr(local.iter_88.input, 0, 1) : null
  }

  iter_89 = local.end_of_code_89 ? local.iter_88 : {
    input = (local.curr_89.code == ","
      ? substr(local.iter_88.input, 1, -1)
      : local.iter_88.input)

    output = (local.curr_89.code == "."
      ? "${local.iter_88.output}${jsondecode(format("\"\\u%04x\"", local.iter_88.tape[local.iter_88.tape_ptr]))}"
      : local.iter_88.output)
    
    tape = (
      local.curr_89.code == "+"
        ? [for i, b in local.iter_88.tape : (i == local.iter_88.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_89.code == "-"
        ? [for i, b in local.iter_88.tape : (i == local.iter_88.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_89.code == ","
        ? [for i, b in local.iter_88.tape : (i == local.iter_88.tape_ptr ? local.ascii_lookup[local.curr_89.input] : b)]
        : local.iter_88.tape)

    tape_ptr = (
      local.curr_89.code == "<"
        ? local.iter_88.tape_ptr == 0 ? length(local.iter_88.tape) - 1 : local.iter_88.tape_ptr - 1 :
      local.curr_89.code == ">"
        ? local.iter_88.tape_ptr == length(local.iter_88.tape) - 1 ? 0 : local.iter_88.tape_ptr + 1
        : local.iter_88.tape_ptr)

    code_ptr = 1 + (
      local.curr_89.code == "["
        ? local.iter_88.tape[local.iter_88.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_88.code_ptr)] : local.iter_88.code_ptr :
      local.curr_89.code == "]"
        ? local.iter_88.tape[local.iter_88.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_88.code_ptr)] : local.iter_88.code_ptr
        : local.iter_88.code_ptr)

    steps_taken = 1 + local.iter_88.steps_taken
  }
}

locals {
  end_of_code_90 = try(local.iter_89.code_ptr >= length(var.code), true)

  curr_90 = local.end_of_code_90 ? null : {
    code = substr(var.code, local.iter_89.code_ptr, 1)
    input = substr(var.code, local.iter_89.code_ptr, 1) == "," ? substr(local.iter_89.input, 0, 1) : null
  }

  iter_90 = local.end_of_code_90 ? local.iter_89 : {
    input = (local.curr_90.code == ","
      ? substr(local.iter_89.input, 1, -1)
      : local.iter_89.input)

    output = (local.curr_90.code == "."
      ? "${local.iter_89.output}${jsondecode(format("\"\\u%04x\"", local.iter_89.tape[local.iter_89.tape_ptr]))}"
      : local.iter_89.output)
    
    tape = (
      local.curr_90.code == "+"
        ? [for i, b in local.iter_89.tape : (i == local.iter_89.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_90.code == "-"
        ? [for i, b in local.iter_89.tape : (i == local.iter_89.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_90.code == ","
        ? [for i, b in local.iter_89.tape : (i == local.iter_89.tape_ptr ? local.ascii_lookup[local.curr_90.input] : b)]
        : local.iter_89.tape)

    tape_ptr = (
      local.curr_90.code == "<"
        ? local.iter_89.tape_ptr == 0 ? length(local.iter_89.tape) - 1 : local.iter_89.tape_ptr - 1 :
      local.curr_90.code == ">"
        ? local.iter_89.tape_ptr == length(local.iter_89.tape) - 1 ? 0 : local.iter_89.tape_ptr + 1
        : local.iter_89.tape_ptr)

    code_ptr = 1 + (
      local.curr_90.code == "["
        ? local.iter_89.tape[local.iter_89.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_89.code_ptr)] : local.iter_89.code_ptr :
      local.curr_90.code == "]"
        ? local.iter_89.tape[local.iter_89.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_89.code_ptr)] : local.iter_89.code_ptr
        : local.iter_89.code_ptr)

    steps_taken = 1 + local.iter_89.steps_taken
  }
}

locals {
  end_of_code_91 = try(local.iter_90.code_ptr >= length(var.code), true)

  curr_91 = local.end_of_code_91 ? null : {
    code = substr(var.code, local.iter_90.code_ptr, 1)
    input = substr(var.code, local.iter_90.code_ptr, 1) == "," ? substr(local.iter_90.input, 0, 1) : null
  }

  iter_91 = local.end_of_code_91 ? local.iter_90 : {
    input = (local.curr_91.code == ","
      ? substr(local.iter_90.input, 1, -1)
      : local.iter_90.input)

    output = (local.curr_91.code == "."
      ? "${local.iter_90.output}${jsondecode(format("\"\\u%04x\"", local.iter_90.tape[local.iter_90.tape_ptr]))}"
      : local.iter_90.output)
    
    tape = (
      local.curr_91.code == "+"
        ? [for i, b in local.iter_90.tape : (i == local.iter_90.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_91.code == "-"
        ? [for i, b in local.iter_90.tape : (i == local.iter_90.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_91.code == ","
        ? [for i, b in local.iter_90.tape : (i == local.iter_90.tape_ptr ? local.ascii_lookup[local.curr_91.input] : b)]
        : local.iter_90.tape)

    tape_ptr = (
      local.curr_91.code == "<"
        ? local.iter_90.tape_ptr == 0 ? length(local.iter_90.tape) - 1 : local.iter_90.tape_ptr - 1 :
      local.curr_91.code == ">"
        ? local.iter_90.tape_ptr == length(local.iter_90.tape) - 1 ? 0 : local.iter_90.tape_ptr + 1
        : local.iter_90.tape_ptr)

    code_ptr = 1 + (
      local.curr_91.code == "["
        ? local.iter_90.tape[local.iter_90.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_90.code_ptr)] : local.iter_90.code_ptr :
      local.curr_91.code == "]"
        ? local.iter_90.tape[local.iter_90.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_90.code_ptr)] : local.iter_90.code_ptr
        : local.iter_90.code_ptr)

    steps_taken = 1 + local.iter_90.steps_taken
  }
}

locals {
  end_of_code_92 = try(local.iter_91.code_ptr >= length(var.code), true)

  curr_92 = local.end_of_code_92 ? null : {
    code = substr(var.code, local.iter_91.code_ptr, 1)
    input = substr(var.code, local.iter_91.code_ptr, 1) == "," ? substr(local.iter_91.input, 0, 1) : null
  }

  iter_92 = local.end_of_code_92 ? local.iter_91 : {
    input = (local.curr_92.code == ","
      ? substr(local.iter_91.input, 1, -1)
      : local.iter_91.input)

    output = (local.curr_92.code == "."
      ? "${local.iter_91.output}${jsondecode(format("\"\\u%04x\"", local.iter_91.tape[local.iter_91.tape_ptr]))}"
      : local.iter_91.output)
    
    tape = (
      local.curr_92.code == "+"
        ? [for i, b in local.iter_91.tape : (i == local.iter_91.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_92.code == "-"
        ? [for i, b in local.iter_91.tape : (i == local.iter_91.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_92.code == ","
        ? [for i, b in local.iter_91.tape : (i == local.iter_91.tape_ptr ? local.ascii_lookup[local.curr_92.input] : b)]
        : local.iter_91.tape)

    tape_ptr = (
      local.curr_92.code == "<"
        ? local.iter_91.tape_ptr == 0 ? length(local.iter_91.tape) - 1 : local.iter_91.tape_ptr - 1 :
      local.curr_92.code == ">"
        ? local.iter_91.tape_ptr == length(local.iter_91.tape) - 1 ? 0 : local.iter_91.tape_ptr + 1
        : local.iter_91.tape_ptr)

    code_ptr = 1 + (
      local.curr_92.code == "["
        ? local.iter_91.tape[local.iter_91.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_91.code_ptr)] : local.iter_91.code_ptr :
      local.curr_92.code == "]"
        ? local.iter_91.tape[local.iter_91.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_91.code_ptr)] : local.iter_91.code_ptr
        : local.iter_91.code_ptr)

    steps_taken = 1 + local.iter_91.steps_taken
  }
}

locals {
  end_of_code_93 = try(local.iter_92.code_ptr >= length(var.code), true)

  curr_93 = local.end_of_code_93 ? null : {
    code = substr(var.code, local.iter_92.code_ptr, 1)
    input = substr(var.code, local.iter_92.code_ptr, 1) == "," ? substr(local.iter_92.input, 0, 1) : null
  }

  iter_93 = local.end_of_code_93 ? local.iter_92 : {
    input = (local.curr_93.code == ","
      ? substr(local.iter_92.input, 1, -1)
      : local.iter_92.input)

    output = (local.curr_93.code == "."
      ? "${local.iter_92.output}${jsondecode(format("\"\\u%04x\"", local.iter_92.tape[local.iter_92.tape_ptr]))}"
      : local.iter_92.output)
    
    tape = (
      local.curr_93.code == "+"
        ? [for i, b in local.iter_92.tape : (i == local.iter_92.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_93.code == "-"
        ? [for i, b in local.iter_92.tape : (i == local.iter_92.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_93.code == ","
        ? [for i, b in local.iter_92.tape : (i == local.iter_92.tape_ptr ? local.ascii_lookup[local.curr_93.input] : b)]
        : local.iter_92.tape)

    tape_ptr = (
      local.curr_93.code == "<"
        ? local.iter_92.tape_ptr == 0 ? length(local.iter_92.tape) - 1 : local.iter_92.tape_ptr - 1 :
      local.curr_93.code == ">"
        ? local.iter_92.tape_ptr == length(local.iter_92.tape) - 1 ? 0 : local.iter_92.tape_ptr + 1
        : local.iter_92.tape_ptr)

    code_ptr = 1 + (
      local.curr_93.code == "["
        ? local.iter_92.tape[local.iter_92.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_92.code_ptr)] : local.iter_92.code_ptr :
      local.curr_93.code == "]"
        ? local.iter_92.tape[local.iter_92.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_92.code_ptr)] : local.iter_92.code_ptr
        : local.iter_92.code_ptr)

    steps_taken = 1 + local.iter_92.steps_taken
  }
}

locals {
  end_of_code_94 = try(local.iter_93.code_ptr >= length(var.code), true)

  curr_94 = local.end_of_code_94 ? null : {
    code = substr(var.code, local.iter_93.code_ptr, 1)
    input = substr(var.code, local.iter_93.code_ptr, 1) == "," ? substr(local.iter_93.input, 0, 1) : null
  }

  iter_94 = local.end_of_code_94 ? local.iter_93 : {
    input = (local.curr_94.code == ","
      ? substr(local.iter_93.input, 1, -1)
      : local.iter_93.input)

    output = (local.curr_94.code == "."
      ? "${local.iter_93.output}${jsondecode(format("\"\\u%04x\"", local.iter_93.tape[local.iter_93.tape_ptr]))}"
      : local.iter_93.output)
    
    tape = (
      local.curr_94.code == "+"
        ? [for i, b in local.iter_93.tape : (i == local.iter_93.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_94.code == "-"
        ? [for i, b in local.iter_93.tape : (i == local.iter_93.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_94.code == ","
        ? [for i, b in local.iter_93.tape : (i == local.iter_93.tape_ptr ? local.ascii_lookup[local.curr_94.input] : b)]
        : local.iter_93.tape)

    tape_ptr = (
      local.curr_94.code == "<"
        ? local.iter_93.tape_ptr == 0 ? length(local.iter_93.tape) - 1 : local.iter_93.tape_ptr - 1 :
      local.curr_94.code == ">"
        ? local.iter_93.tape_ptr == length(local.iter_93.tape) - 1 ? 0 : local.iter_93.tape_ptr + 1
        : local.iter_93.tape_ptr)

    code_ptr = 1 + (
      local.curr_94.code == "["
        ? local.iter_93.tape[local.iter_93.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_93.code_ptr)] : local.iter_93.code_ptr :
      local.curr_94.code == "]"
        ? local.iter_93.tape[local.iter_93.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_93.code_ptr)] : local.iter_93.code_ptr
        : local.iter_93.code_ptr)

    steps_taken = 1 + local.iter_93.steps_taken
  }
}

locals {
  end_of_code_95 = try(local.iter_94.code_ptr >= length(var.code), true)

  curr_95 = local.end_of_code_95 ? null : {
    code = substr(var.code, local.iter_94.code_ptr, 1)
    input = substr(var.code, local.iter_94.code_ptr, 1) == "," ? substr(local.iter_94.input, 0, 1) : null
  }

  iter_95 = local.end_of_code_95 ? local.iter_94 : {
    input = (local.curr_95.code == ","
      ? substr(local.iter_94.input, 1, -1)
      : local.iter_94.input)

    output = (local.curr_95.code == "."
      ? "${local.iter_94.output}${jsondecode(format("\"\\u%04x\"", local.iter_94.tape[local.iter_94.tape_ptr]))}"
      : local.iter_94.output)
    
    tape = (
      local.curr_95.code == "+"
        ? [for i, b in local.iter_94.tape : (i == local.iter_94.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_95.code == "-"
        ? [for i, b in local.iter_94.tape : (i == local.iter_94.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_95.code == ","
        ? [for i, b in local.iter_94.tape : (i == local.iter_94.tape_ptr ? local.ascii_lookup[local.curr_95.input] : b)]
        : local.iter_94.tape)

    tape_ptr = (
      local.curr_95.code == "<"
        ? local.iter_94.tape_ptr == 0 ? length(local.iter_94.tape) - 1 : local.iter_94.tape_ptr - 1 :
      local.curr_95.code == ">"
        ? local.iter_94.tape_ptr == length(local.iter_94.tape) - 1 ? 0 : local.iter_94.tape_ptr + 1
        : local.iter_94.tape_ptr)

    code_ptr = 1 + (
      local.curr_95.code == "["
        ? local.iter_94.tape[local.iter_94.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_94.code_ptr)] : local.iter_94.code_ptr :
      local.curr_95.code == "]"
        ? local.iter_94.tape[local.iter_94.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_94.code_ptr)] : local.iter_94.code_ptr
        : local.iter_94.code_ptr)

    steps_taken = 1 + local.iter_94.steps_taken
  }
}

locals {
  end_of_code_96 = try(local.iter_95.code_ptr >= length(var.code), true)

  curr_96 = local.end_of_code_96 ? null : {
    code = substr(var.code, local.iter_95.code_ptr, 1)
    input = substr(var.code, local.iter_95.code_ptr, 1) == "," ? substr(local.iter_95.input, 0, 1) : null
  }

  iter_96 = local.end_of_code_96 ? local.iter_95 : {
    input = (local.curr_96.code == ","
      ? substr(local.iter_95.input, 1, -1)
      : local.iter_95.input)

    output = (local.curr_96.code == "."
      ? "${local.iter_95.output}${jsondecode(format("\"\\u%04x\"", local.iter_95.tape[local.iter_95.tape_ptr]))}"
      : local.iter_95.output)
    
    tape = (
      local.curr_96.code == "+"
        ? [for i, b in local.iter_95.tape : (i == local.iter_95.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_96.code == "-"
        ? [for i, b in local.iter_95.tape : (i == local.iter_95.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_96.code == ","
        ? [for i, b in local.iter_95.tape : (i == local.iter_95.tape_ptr ? local.ascii_lookup[local.curr_96.input] : b)]
        : local.iter_95.tape)

    tape_ptr = (
      local.curr_96.code == "<"
        ? local.iter_95.tape_ptr == 0 ? length(local.iter_95.tape) - 1 : local.iter_95.tape_ptr - 1 :
      local.curr_96.code == ">"
        ? local.iter_95.tape_ptr == length(local.iter_95.tape) - 1 ? 0 : local.iter_95.tape_ptr + 1
        : local.iter_95.tape_ptr)

    code_ptr = 1 + (
      local.curr_96.code == "["
        ? local.iter_95.tape[local.iter_95.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_95.code_ptr)] : local.iter_95.code_ptr :
      local.curr_96.code == "]"
        ? local.iter_95.tape[local.iter_95.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_95.code_ptr)] : local.iter_95.code_ptr
        : local.iter_95.code_ptr)

    steps_taken = 1 + local.iter_95.steps_taken
  }
}

locals {
  end_of_code_97 = try(local.iter_96.code_ptr >= length(var.code), true)

  curr_97 = local.end_of_code_97 ? null : {
    code = substr(var.code, local.iter_96.code_ptr, 1)
    input = substr(var.code, local.iter_96.code_ptr, 1) == "," ? substr(local.iter_96.input, 0, 1) : null
  }

  iter_97 = local.end_of_code_97 ? local.iter_96 : {
    input = (local.curr_97.code == ","
      ? substr(local.iter_96.input, 1, -1)
      : local.iter_96.input)

    output = (local.curr_97.code == "."
      ? "${local.iter_96.output}${jsondecode(format("\"\\u%04x\"", local.iter_96.tape[local.iter_96.tape_ptr]))}"
      : local.iter_96.output)
    
    tape = (
      local.curr_97.code == "+"
        ? [for i, b in local.iter_96.tape : (i == local.iter_96.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_97.code == "-"
        ? [for i, b in local.iter_96.tape : (i == local.iter_96.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_97.code == ","
        ? [for i, b in local.iter_96.tape : (i == local.iter_96.tape_ptr ? local.ascii_lookup[local.curr_97.input] : b)]
        : local.iter_96.tape)

    tape_ptr = (
      local.curr_97.code == "<"
        ? local.iter_96.tape_ptr == 0 ? length(local.iter_96.tape) - 1 : local.iter_96.tape_ptr - 1 :
      local.curr_97.code == ">"
        ? local.iter_96.tape_ptr == length(local.iter_96.tape) - 1 ? 0 : local.iter_96.tape_ptr + 1
        : local.iter_96.tape_ptr)

    code_ptr = 1 + (
      local.curr_97.code == "["
        ? local.iter_96.tape[local.iter_96.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_96.code_ptr)] : local.iter_96.code_ptr :
      local.curr_97.code == "]"
        ? local.iter_96.tape[local.iter_96.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_96.code_ptr)] : local.iter_96.code_ptr
        : local.iter_96.code_ptr)

    steps_taken = 1 + local.iter_96.steps_taken
  }
}

locals {
  end_of_code_98 = try(local.iter_97.code_ptr >= length(var.code), true)

  curr_98 = local.end_of_code_98 ? null : {
    code = substr(var.code, local.iter_97.code_ptr, 1)
    input = substr(var.code, local.iter_97.code_ptr, 1) == "," ? substr(local.iter_97.input, 0, 1) : null
  }

  iter_98 = local.end_of_code_98 ? local.iter_97 : {
    input = (local.curr_98.code == ","
      ? substr(local.iter_97.input, 1, -1)
      : local.iter_97.input)

    output = (local.curr_98.code == "."
      ? "${local.iter_97.output}${jsondecode(format("\"\\u%04x\"", local.iter_97.tape[local.iter_97.tape_ptr]))}"
      : local.iter_97.output)
    
    tape = (
      local.curr_98.code == "+"
        ? [for i, b in local.iter_97.tape : (i == local.iter_97.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_98.code == "-"
        ? [for i, b in local.iter_97.tape : (i == local.iter_97.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_98.code == ","
        ? [for i, b in local.iter_97.tape : (i == local.iter_97.tape_ptr ? local.ascii_lookup[local.curr_98.input] : b)]
        : local.iter_97.tape)

    tape_ptr = (
      local.curr_98.code == "<"
        ? local.iter_97.tape_ptr == 0 ? length(local.iter_97.tape) - 1 : local.iter_97.tape_ptr - 1 :
      local.curr_98.code == ">"
        ? local.iter_97.tape_ptr == length(local.iter_97.tape) - 1 ? 0 : local.iter_97.tape_ptr + 1
        : local.iter_97.tape_ptr)

    code_ptr = 1 + (
      local.curr_98.code == "["
        ? local.iter_97.tape[local.iter_97.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_97.code_ptr)] : local.iter_97.code_ptr :
      local.curr_98.code == "]"
        ? local.iter_97.tape[local.iter_97.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_97.code_ptr)] : local.iter_97.code_ptr
        : local.iter_97.code_ptr)

    steps_taken = 1 + local.iter_97.steps_taken
  }
}

locals {
  end_of_code_99 = try(local.iter_98.code_ptr >= length(var.code), true)

  curr_99 = local.end_of_code_99 ? null : {
    code = substr(var.code, local.iter_98.code_ptr, 1)
    input = substr(var.code, local.iter_98.code_ptr, 1) == "," ? substr(local.iter_98.input, 0, 1) : null
  }

  iter_99 = local.end_of_code_99 ? local.iter_98 : {
    input = (local.curr_99.code == ","
      ? substr(local.iter_98.input, 1, -1)
      : local.iter_98.input)

    output = (local.curr_99.code == "."
      ? "${local.iter_98.output}${jsondecode(format("\"\\u%04x\"", local.iter_98.tape[local.iter_98.tape_ptr]))}"
      : local.iter_98.output)
    
    tape = (
      local.curr_99.code == "+"
        ? [for i, b in local.iter_98.tape : (i == local.iter_98.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_99.code == "-"
        ? [for i, b in local.iter_98.tape : (i == local.iter_98.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_99.code == ","
        ? [for i, b in local.iter_98.tape : (i == local.iter_98.tape_ptr ? local.ascii_lookup[local.curr_99.input] : b)]
        : local.iter_98.tape)

    tape_ptr = (
      local.curr_99.code == "<"
        ? local.iter_98.tape_ptr == 0 ? length(local.iter_98.tape) - 1 : local.iter_98.tape_ptr - 1 :
      local.curr_99.code == ">"
        ? local.iter_98.tape_ptr == length(local.iter_98.tape) - 1 ? 0 : local.iter_98.tape_ptr + 1
        : local.iter_98.tape_ptr)

    code_ptr = 1 + (
      local.curr_99.code == "["
        ? local.iter_98.tape[local.iter_98.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_98.code_ptr)] : local.iter_98.code_ptr :
      local.curr_99.code == "]"
        ? local.iter_98.tape[local.iter_98.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_98.code_ptr)] : local.iter_98.code_ptr
        : local.iter_98.code_ptr)

    steps_taken = 1 + local.iter_98.steps_taken
  }
}

locals {
  end_of_code_100 = try(local.iter_99.code_ptr >= length(var.code), true)

  curr_100 = local.end_of_code_100 ? null : {
    code = substr(var.code, local.iter_99.code_ptr, 1)
    input = substr(var.code, local.iter_99.code_ptr, 1) == "," ? substr(local.iter_99.input, 0, 1) : null
  }

  iter_100 = local.end_of_code_100 ? local.iter_99 : {
    input = (local.curr_100.code == ","
      ? substr(local.iter_99.input, 1, -1)
      : local.iter_99.input)

    output = (local.curr_100.code == "."
      ? "${local.iter_99.output}${jsondecode(format("\"\\u%04x\"", local.iter_99.tape[local.iter_99.tape_ptr]))}"
      : local.iter_99.output)
    
    tape = (
      local.curr_100.code == "+"
        ? [for i, b in local.iter_99.tape : (i == local.iter_99.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_100.code == "-"
        ? [for i, b in local.iter_99.tape : (i == local.iter_99.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_100.code == ","
        ? [for i, b in local.iter_99.tape : (i == local.iter_99.tape_ptr ? local.ascii_lookup[local.curr_100.input] : b)]
        : local.iter_99.tape)

    tape_ptr = (
      local.curr_100.code == "<"
        ? local.iter_99.tape_ptr == 0 ? length(local.iter_99.tape) - 1 : local.iter_99.tape_ptr - 1 :
      local.curr_100.code == ">"
        ? local.iter_99.tape_ptr == length(local.iter_99.tape) - 1 ? 0 : local.iter_99.tape_ptr + 1
        : local.iter_99.tape_ptr)

    code_ptr = 1 + (
      local.curr_100.code == "["
        ? local.iter_99.tape[local.iter_99.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_99.code_ptr)] : local.iter_99.code_ptr :
      local.curr_100.code == "]"
        ? local.iter_99.tape[local.iter_99.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_99.code_ptr)] : local.iter_99.code_ptr
        : local.iter_99.code_ptr)

    steps_taken = 1 + local.iter_99.steps_taken
  }
}

locals {
  end_of_code_101 = try(local.iter_100.code_ptr >= length(var.code), true)

  curr_101 = local.end_of_code_101 ? null : {
    code = substr(var.code, local.iter_100.code_ptr, 1)
    input = substr(var.code, local.iter_100.code_ptr, 1) == "," ? substr(local.iter_100.input, 0, 1) : null
  }

  iter_101 = local.end_of_code_101 ? local.iter_100 : {
    input = (local.curr_101.code == ","
      ? substr(local.iter_100.input, 1, -1)
      : local.iter_100.input)

    output = (local.curr_101.code == "."
      ? "${local.iter_100.output}${jsondecode(format("\"\\u%04x\"", local.iter_100.tape[local.iter_100.tape_ptr]))}"
      : local.iter_100.output)
    
    tape = (
      local.curr_101.code == "+"
        ? [for i, b in local.iter_100.tape : (i == local.iter_100.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_101.code == "-"
        ? [for i, b in local.iter_100.tape : (i == local.iter_100.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_101.code == ","
        ? [for i, b in local.iter_100.tape : (i == local.iter_100.tape_ptr ? local.ascii_lookup[local.curr_101.input] : b)]
        : local.iter_100.tape)

    tape_ptr = (
      local.curr_101.code == "<"
        ? local.iter_100.tape_ptr == 0 ? length(local.iter_100.tape) - 1 : local.iter_100.tape_ptr - 1 :
      local.curr_101.code == ">"
        ? local.iter_100.tape_ptr == length(local.iter_100.tape) - 1 ? 0 : local.iter_100.tape_ptr + 1
        : local.iter_100.tape_ptr)

    code_ptr = 1 + (
      local.curr_101.code == "["
        ? local.iter_100.tape[local.iter_100.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_100.code_ptr)] : local.iter_100.code_ptr :
      local.curr_101.code == "]"
        ? local.iter_100.tape[local.iter_100.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_100.code_ptr)] : local.iter_100.code_ptr
        : local.iter_100.code_ptr)

    steps_taken = 1 + local.iter_100.steps_taken
  }
}

locals {
  end_of_code_102 = try(local.iter_101.code_ptr >= length(var.code), true)

  curr_102 = local.end_of_code_102 ? null : {
    code = substr(var.code, local.iter_101.code_ptr, 1)
    input = substr(var.code, local.iter_101.code_ptr, 1) == "," ? substr(local.iter_101.input, 0, 1) : null
  }

  iter_102 = local.end_of_code_102 ? local.iter_101 : {
    input = (local.curr_102.code == ","
      ? substr(local.iter_101.input, 1, -1)
      : local.iter_101.input)

    output = (local.curr_102.code == "."
      ? "${local.iter_101.output}${jsondecode(format("\"\\u%04x\"", local.iter_101.tape[local.iter_101.tape_ptr]))}"
      : local.iter_101.output)
    
    tape = (
      local.curr_102.code == "+"
        ? [for i, b in local.iter_101.tape : (i == local.iter_101.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_102.code == "-"
        ? [for i, b in local.iter_101.tape : (i == local.iter_101.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_102.code == ","
        ? [for i, b in local.iter_101.tape : (i == local.iter_101.tape_ptr ? local.ascii_lookup[local.curr_102.input] : b)]
        : local.iter_101.tape)

    tape_ptr = (
      local.curr_102.code == "<"
        ? local.iter_101.tape_ptr == 0 ? length(local.iter_101.tape) - 1 : local.iter_101.tape_ptr - 1 :
      local.curr_102.code == ">"
        ? local.iter_101.tape_ptr == length(local.iter_101.tape) - 1 ? 0 : local.iter_101.tape_ptr + 1
        : local.iter_101.tape_ptr)

    code_ptr = 1 + (
      local.curr_102.code == "["
        ? local.iter_101.tape[local.iter_101.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_101.code_ptr)] : local.iter_101.code_ptr :
      local.curr_102.code == "]"
        ? local.iter_101.tape[local.iter_101.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_101.code_ptr)] : local.iter_101.code_ptr
        : local.iter_101.code_ptr)

    steps_taken = 1 + local.iter_101.steps_taken
  }
}

locals {
  end_of_code_103 = try(local.iter_102.code_ptr >= length(var.code), true)

  curr_103 = local.end_of_code_103 ? null : {
    code = substr(var.code, local.iter_102.code_ptr, 1)
    input = substr(var.code, local.iter_102.code_ptr, 1) == "," ? substr(local.iter_102.input, 0, 1) : null
  }

  iter_103 = local.end_of_code_103 ? local.iter_102 : {
    input = (local.curr_103.code == ","
      ? substr(local.iter_102.input, 1, -1)
      : local.iter_102.input)

    output = (local.curr_103.code == "."
      ? "${local.iter_102.output}${jsondecode(format("\"\\u%04x\"", local.iter_102.tape[local.iter_102.tape_ptr]))}"
      : local.iter_102.output)
    
    tape = (
      local.curr_103.code == "+"
        ? [for i, b in local.iter_102.tape : (i == local.iter_102.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_103.code == "-"
        ? [for i, b in local.iter_102.tape : (i == local.iter_102.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_103.code == ","
        ? [for i, b in local.iter_102.tape : (i == local.iter_102.tape_ptr ? local.ascii_lookup[local.curr_103.input] : b)]
        : local.iter_102.tape)

    tape_ptr = (
      local.curr_103.code == "<"
        ? local.iter_102.tape_ptr == 0 ? length(local.iter_102.tape) - 1 : local.iter_102.tape_ptr - 1 :
      local.curr_103.code == ">"
        ? local.iter_102.tape_ptr == length(local.iter_102.tape) - 1 ? 0 : local.iter_102.tape_ptr + 1
        : local.iter_102.tape_ptr)

    code_ptr = 1 + (
      local.curr_103.code == "["
        ? local.iter_102.tape[local.iter_102.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_102.code_ptr)] : local.iter_102.code_ptr :
      local.curr_103.code == "]"
        ? local.iter_102.tape[local.iter_102.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_102.code_ptr)] : local.iter_102.code_ptr
        : local.iter_102.code_ptr)

    steps_taken = 1 + local.iter_102.steps_taken
  }
}

locals {
  end_of_code_104 = try(local.iter_103.code_ptr >= length(var.code), true)

  curr_104 = local.end_of_code_104 ? null : {
    code = substr(var.code, local.iter_103.code_ptr, 1)
    input = substr(var.code, local.iter_103.code_ptr, 1) == "," ? substr(local.iter_103.input, 0, 1) : null
  }

  iter_104 = local.end_of_code_104 ? local.iter_103 : {
    input = (local.curr_104.code == ","
      ? substr(local.iter_103.input, 1, -1)
      : local.iter_103.input)

    output = (local.curr_104.code == "."
      ? "${local.iter_103.output}${jsondecode(format("\"\\u%04x\"", local.iter_103.tape[local.iter_103.tape_ptr]))}"
      : local.iter_103.output)
    
    tape = (
      local.curr_104.code == "+"
        ? [for i, b in local.iter_103.tape : (i == local.iter_103.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_104.code == "-"
        ? [for i, b in local.iter_103.tape : (i == local.iter_103.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_104.code == ","
        ? [for i, b in local.iter_103.tape : (i == local.iter_103.tape_ptr ? local.ascii_lookup[local.curr_104.input] : b)]
        : local.iter_103.tape)

    tape_ptr = (
      local.curr_104.code == "<"
        ? local.iter_103.tape_ptr == 0 ? length(local.iter_103.tape) - 1 : local.iter_103.tape_ptr - 1 :
      local.curr_104.code == ">"
        ? local.iter_103.tape_ptr == length(local.iter_103.tape) - 1 ? 0 : local.iter_103.tape_ptr + 1
        : local.iter_103.tape_ptr)

    code_ptr = 1 + (
      local.curr_104.code == "["
        ? local.iter_103.tape[local.iter_103.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_103.code_ptr)] : local.iter_103.code_ptr :
      local.curr_104.code == "]"
        ? local.iter_103.tape[local.iter_103.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_103.code_ptr)] : local.iter_103.code_ptr
        : local.iter_103.code_ptr)

    steps_taken = 1 + local.iter_103.steps_taken
  }
}

locals {
  end_of_code_105 = try(local.iter_104.code_ptr >= length(var.code), true)

  curr_105 = local.end_of_code_105 ? null : {
    code = substr(var.code, local.iter_104.code_ptr, 1)
    input = substr(var.code, local.iter_104.code_ptr, 1) == "," ? substr(local.iter_104.input, 0, 1) : null
  }

  iter_105 = local.end_of_code_105 ? local.iter_104 : {
    input = (local.curr_105.code == ","
      ? substr(local.iter_104.input, 1, -1)
      : local.iter_104.input)

    output = (local.curr_105.code == "."
      ? "${local.iter_104.output}${jsondecode(format("\"\\u%04x\"", local.iter_104.tape[local.iter_104.tape_ptr]))}"
      : local.iter_104.output)
    
    tape = (
      local.curr_105.code == "+"
        ? [for i, b in local.iter_104.tape : (i == local.iter_104.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_105.code == "-"
        ? [for i, b in local.iter_104.tape : (i == local.iter_104.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_105.code == ","
        ? [for i, b in local.iter_104.tape : (i == local.iter_104.tape_ptr ? local.ascii_lookup[local.curr_105.input] : b)]
        : local.iter_104.tape)

    tape_ptr = (
      local.curr_105.code == "<"
        ? local.iter_104.tape_ptr == 0 ? length(local.iter_104.tape) - 1 : local.iter_104.tape_ptr - 1 :
      local.curr_105.code == ">"
        ? local.iter_104.tape_ptr == length(local.iter_104.tape) - 1 ? 0 : local.iter_104.tape_ptr + 1
        : local.iter_104.tape_ptr)

    code_ptr = 1 + (
      local.curr_105.code == "["
        ? local.iter_104.tape[local.iter_104.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_104.code_ptr)] : local.iter_104.code_ptr :
      local.curr_105.code == "]"
        ? local.iter_104.tape[local.iter_104.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_104.code_ptr)] : local.iter_104.code_ptr
        : local.iter_104.code_ptr)

    steps_taken = 1 + local.iter_104.steps_taken
  }
}

locals {
  end_of_code_106 = try(local.iter_105.code_ptr >= length(var.code), true)

  curr_106 = local.end_of_code_106 ? null : {
    code = substr(var.code, local.iter_105.code_ptr, 1)
    input = substr(var.code, local.iter_105.code_ptr, 1) == "," ? substr(local.iter_105.input, 0, 1) : null
  }

  iter_106 = local.end_of_code_106 ? local.iter_105 : {
    input = (local.curr_106.code == ","
      ? substr(local.iter_105.input, 1, -1)
      : local.iter_105.input)

    output = (local.curr_106.code == "."
      ? "${local.iter_105.output}${jsondecode(format("\"\\u%04x\"", local.iter_105.tape[local.iter_105.tape_ptr]))}"
      : local.iter_105.output)
    
    tape = (
      local.curr_106.code == "+"
        ? [for i, b in local.iter_105.tape : (i == local.iter_105.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_106.code == "-"
        ? [for i, b in local.iter_105.tape : (i == local.iter_105.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_106.code == ","
        ? [for i, b in local.iter_105.tape : (i == local.iter_105.tape_ptr ? local.ascii_lookup[local.curr_106.input] : b)]
        : local.iter_105.tape)

    tape_ptr = (
      local.curr_106.code == "<"
        ? local.iter_105.tape_ptr == 0 ? length(local.iter_105.tape) - 1 : local.iter_105.tape_ptr - 1 :
      local.curr_106.code == ">"
        ? local.iter_105.tape_ptr == length(local.iter_105.tape) - 1 ? 0 : local.iter_105.tape_ptr + 1
        : local.iter_105.tape_ptr)

    code_ptr = 1 + (
      local.curr_106.code == "["
        ? local.iter_105.tape[local.iter_105.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_105.code_ptr)] : local.iter_105.code_ptr :
      local.curr_106.code == "]"
        ? local.iter_105.tape[local.iter_105.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_105.code_ptr)] : local.iter_105.code_ptr
        : local.iter_105.code_ptr)

    steps_taken = 1 + local.iter_105.steps_taken
  }
}

locals {
  end_of_code_107 = try(local.iter_106.code_ptr >= length(var.code), true)

  curr_107 = local.end_of_code_107 ? null : {
    code = substr(var.code, local.iter_106.code_ptr, 1)
    input = substr(var.code, local.iter_106.code_ptr, 1) == "," ? substr(local.iter_106.input, 0, 1) : null
  }

  iter_107 = local.end_of_code_107 ? local.iter_106 : {
    input = (local.curr_107.code == ","
      ? substr(local.iter_106.input, 1, -1)
      : local.iter_106.input)

    output = (local.curr_107.code == "."
      ? "${local.iter_106.output}${jsondecode(format("\"\\u%04x\"", local.iter_106.tape[local.iter_106.tape_ptr]))}"
      : local.iter_106.output)
    
    tape = (
      local.curr_107.code == "+"
        ? [for i, b in local.iter_106.tape : (i == local.iter_106.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_107.code == "-"
        ? [for i, b in local.iter_106.tape : (i == local.iter_106.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_107.code == ","
        ? [for i, b in local.iter_106.tape : (i == local.iter_106.tape_ptr ? local.ascii_lookup[local.curr_107.input] : b)]
        : local.iter_106.tape)

    tape_ptr = (
      local.curr_107.code == "<"
        ? local.iter_106.tape_ptr == 0 ? length(local.iter_106.tape) - 1 : local.iter_106.tape_ptr - 1 :
      local.curr_107.code == ">"
        ? local.iter_106.tape_ptr == length(local.iter_106.tape) - 1 ? 0 : local.iter_106.tape_ptr + 1
        : local.iter_106.tape_ptr)

    code_ptr = 1 + (
      local.curr_107.code == "["
        ? local.iter_106.tape[local.iter_106.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_106.code_ptr)] : local.iter_106.code_ptr :
      local.curr_107.code == "]"
        ? local.iter_106.tape[local.iter_106.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_106.code_ptr)] : local.iter_106.code_ptr
        : local.iter_106.code_ptr)

    steps_taken = 1 + local.iter_106.steps_taken
  }
}

locals {
  end_of_code_108 = try(local.iter_107.code_ptr >= length(var.code), true)

  curr_108 = local.end_of_code_108 ? null : {
    code = substr(var.code, local.iter_107.code_ptr, 1)
    input = substr(var.code, local.iter_107.code_ptr, 1) == "," ? substr(local.iter_107.input, 0, 1) : null
  }

  iter_108 = local.end_of_code_108 ? local.iter_107 : {
    input = (local.curr_108.code == ","
      ? substr(local.iter_107.input, 1, -1)
      : local.iter_107.input)

    output = (local.curr_108.code == "."
      ? "${local.iter_107.output}${jsondecode(format("\"\\u%04x\"", local.iter_107.tape[local.iter_107.tape_ptr]))}"
      : local.iter_107.output)
    
    tape = (
      local.curr_108.code == "+"
        ? [for i, b in local.iter_107.tape : (i == local.iter_107.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_108.code == "-"
        ? [for i, b in local.iter_107.tape : (i == local.iter_107.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_108.code == ","
        ? [for i, b in local.iter_107.tape : (i == local.iter_107.tape_ptr ? local.ascii_lookup[local.curr_108.input] : b)]
        : local.iter_107.tape)

    tape_ptr = (
      local.curr_108.code == "<"
        ? local.iter_107.tape_ptr == 0 ? length(local.iter_107.tape) - 1 : local.iter_107.tape_ptr - 1 :
      local.curr_108.code == ">"
        ? local.iter_107.tape_ptr == length(local.iter_107.tape) - 1 ? 0 : local.iter_107.tape_ptr + 1
        : local.iter_107.tape_ptr)

    code_ptr = 1 + (
      local.curr_108.code == "["
        ? local.iter_107.tape[local.iter_107.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_107.code_ptr)] : local.iter_107.code_ptr :
      local.curr_108.code == "]"
        ? local.iter_107.tape[local.iter_107.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_107.code_ptr)] : local.iter_107.code_ptr
        : local.iter_107.code_ptr)

    steps_taken = 1 + local.iter_107.steps_taken
  }
}

locals {
  end_of_code_109 = try(local.iter_108.code_ptr >= length(var.code), true)

  curr_109 = local.end_of_code_109 ? null : {
    code = substr(var.code, local.iter_108.code_ptr, 1)
    input = substr(var.code, local.iter_108.code_ptr, 1) == "," ? substr(local.iter_108.input, 0, 1) : null
  }

  iter_109 = local.end_of_code_109 ? local.iter_108 : {
    input = (local.curr_109.code == ","
      ? substr(local.iter_108.input, 1, -1)
      : local.iter_108.input)

    output = (local.curr_109.code == "."
      ? "${local.iter_108.output}${jsondecode(format("\"\\u%04x\"", local.iter_108.tape[local.iter_108.tape_ptr]))}"
      : local.iter_108.output)
    
    tape = (
      local.curr_109.code == "+"
        ? [for i, b in local.iter_108.tape : (i == local.iter_108.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_109.code == "-"
        ? [for i, b in local.iter_108.tape : (i == local.iter_108.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_109.code == ","
        ? [for i, b in local.iter_108.tape : (i == local.iter_108.tape_ptr ? local.ascii_lookup[local.curr_109.input] : b)]
        : local.iter_108.tape)

    tape_ptr = (
      local.curr_109.code == "<"
        ? local.iter_108.tape_ptr == 0 ? length(local.iter_108.tape) - 1 : local.iter_108.tape_ptr - 1 :
      local.curr_109.code == ">"
        ? local.iter_108.tape_ptr == length(local.iter_108.tape) - 1 ? 0 : local.iter_108.tape_ptr + 1
        : local.iter_108.tape_ptr)

    code_ptr = 1 + (
      local.curr_109.code == "["
        ? local.iter_108.tape[local.iter_108.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_108.code_ptr)] : local.iter_108.code_ptr :
      local.curr_109.code == "]"
        ? local.iter_108.tape[local.iter_108.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_108.code_ptr)] : local.iter_108.code_ptr
        : local.iter_108.code_ptr)

    steps_taken = 1 + local.iter_108.steps_taken
  }
}

locals {
  end_of_code_110 = try(local.iter_109.code_ptr >= length(var.code), true)

  curr_110 = local.end_of_code_110 ? null : {
    code = substr(var.code, local.iter_109.code_ptr, 1)
    input = substr(var.code, local.iter_109.code_ptr, 1) == "," ? substr(local.iter_109.input, 0, 1) : null
  }

  iter_110 = local.end_of_code_110 ? local.iter_109 : {
    input = (local.curr_110.code == ","
      ? substr(local.iter_109.input, 1, -1)
      : local.iter_109.input)

    output = (local.curr_110.code == "."
      ? "${local.iter_109.output}${jsondecode(format("\"\\u%04x\"", local.iter_109.tape[local.iter_109.tape_ptr]))}"
      : local.iter_109.output)
    
    tape = (
      local.curr_110.code == "+"
        ? [for i, b in local.iter_109.tape : (i == local.iter_109.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_110.code == "-"
        ? [for i, b in local.iter_109.tape : (i == local.iter_109.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_110.code == ","
        ? [for i, b in local.iter_109.tape : (i == local.iter_109.tape_ptr ? local.ascii_lookup[local.curr_110.input] : b)]
        : local.iter_109.tape)

    tape_ptr = (
      local.curr_110.code == "<"
        ? local.iter_109.tape_ptr == 0 ? length(local.iter_109.tape) - 1 : local.iter_109.tape_ptr - 1 :
      local.curr_110.code == ">"
        ? local.iter_109.tape_ptr == length(local.iter_109.tape) - 1 ? 0 : local.iter_109.tape_ptr + 1
        : local.iter_109.tape_ptr)

    code_ptr = 1 + (
      local.curr_110.code == "["
        ? local.iter_109.tape[local.iter_109.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_109.code_ptr)] : local.iter_109.code_ptr :
      local.curr_110.code == "]"
        ? local.iter_109.tape[local.iter_109.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_109.code_ptr)] : local.iter_109.code_ptr
        : local.iter_109.code_ptr)

    steps_taken = 1 + local.iter_109.steps_taken
  }
}

locals {
  end_of_code_111 = try(local.iter_110.code_ptr >= length(var.code), true)

  curr_111 = local.end_of_code_111 ? null : {
    code = substr(var.code, local.iter_110.code_ptr, 1)
    input = substr(var.code, local.iter_110.code_ptr, 1) == "," ? substr(local.iter_110.input, 0, 1) : null
  }

  iter_111 = local.end_of_code_111 ? local.iter_110 : {
    input = (local.curr_111.code == ","
      ? substr(local.iter_110.input, 1, -1)
      : local.iter_110.input)

    output = (local.curr_111.code == "."
      ? "${local.iter_110.output}${jsondecode(format("\"\\u%04x\"", local.iter_110.tape[local.iter_110.tape_ptr]))}"
      : local.iter_110.output)
    
    tape = (
      local.curr_111.code == "+"
        ? [for i, b in local.iter_110.tape : (i == local.iter_110.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_111.code == "-"
        ? [for i, b in local.iter_110.tape : (i == local.iter_110.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_111.code == ","
        ? [for i, b in local.iter_110.tape : (i == local.iter_110.tape_ptr ? local.ascii_lookup[local.curr_111.input] : b)]
        : local.iter_110.tape)

    tape_ptr = (
      local.curr_111.code == "<"
        ? local.iter_110.tape_ptr == 0 ? length(local.iter_110.tape) - 1 : local.iter_110.tape_ptr - 1 :
      local.curr_111.code == ">"
        ? local.iter_110.tape_ptr == length(local.iter_110.tape) - 1 ? 0 : local.iter_110.tape_ptr + 1
        : local.iter_110.tape_ptr)

    code_ptr = 1 + (
      local.curr_111.code == "["
        ? local.iter_110.tape[local.iter_110.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_110.code_ptr)] : local.iter_110.code_ptr :
      local.curr_111.code == "]"
        ? local.iter_110.tape[local.iter_110.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_110.code_ptr)] : local.iter_110.code_ptr
        : local.iter_110.code_ptr)

    steps_taken = 1 + local.iter_110.steps_taken
  }
}

locals {
  end_of_code_112 = try(local.iter_111.code_ptr >= length(var.code), true)

  curr_112 = local.end_of_code_112 ? null : {
    code = substr(var.code, local.iter_111.code_ptr, 1)
    input = substr(var.code, local.iter_111.code_ptr, 1) == "," ? substr(local.iter_111.input, 0, 1) : null
  }

  iter_112 = local.end_of_code_112 ? local.iter_111 : {
    input = (local.curr_112.code == ","
      ? substr(local.iter_111.input, 1, -1)
      : local.iter_111.input)

    output = (local.curr_112.code == "."
      ? "${local.iter_111.output}${jsondecode(format("\"\\u%04x\"", local.iter_111.tape[local.iter_111.tape_ptr]))}"
      : local.iter_111.output)
    
    tape = (
      local.curr_112.code == "+"
        ? [for i, b in local.iter_111.tape : (i == local.iter_111.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_112.code == "-"
        ? [for i, b in local.iter_111.tape : (i == local.iter_111.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_112.code == ","
        ? [for i, b in local.iter_111.tape : (i == local.iter_111.tape_ptr ? local.ascii_lookup[local.curr_112.input] : b)]
        : local.iter_111.tape)

    tape_ptr = (
      local.curr_112.code == "<"
        ? local.iter_111.tape_ptr == 0 ? length(local.iter_111.tape) - 1 : local.iter_111.tape_ptr - 1 :
      local.curr_112.code == ">"
        ? local.iter_111.tape_ptr == length(local.iter_111.tape) - 1 ? 0 : local.iter_111.tape_ptr + 1
        : local.iter_111.tape_ptr)

    code_ptr = 1 + (
      local.curr_112.code == "["
        ? local.iter_111.tape[local.iter_111.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_111.code_ptr)] : local.iter_111.code_ptr :
      local.curr_112.code == "]"
        ? local.iter_111.tape[local.iter_111.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_111.code_ptr)] : local.iter_111.code_ptr
        : local.iter_111.code_ptr)

    steps_taken = 1 + local.iter_111.steps_taken
  }
}

locals {
  end_of_code_113 = try(local.iter_112.code_ptr >= length(var.code), true)

  curr_113 = local.end_of_code_113 ? null : {
    code = substr(var.code, local.iter_112.code_ptr, 1)
    input = substr(var.code, local.iter_112.code_ptr, 1) == "," ? substr(local.iter_112.input, 0, 1) : null
  }

  iter_113 = local.end_of_code_113 ? local.iter_112 : {
    input = (local.curr_113.code == ","
      ? substr(local.iter_112.input, 1, -1)
      : local.iter_112.input)

    output = (local.curr_113.code == "."
      ? "${local.iter_112.output}${jsondecode(format("\"\\u%04x\"", local.iter_112.tape[local.iter_112.tape_ptr]))}"
      : local.iter_112.output)
    
    tape = (
      local.curr_113.code == "+"
        ? [for i, b in local.iter_112.tape : (i == local.iter_112.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_113.code == "-"
        ? [for i, b in local.iter_112.tape : (i == local.iter_112.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_113.code == ","
        ? [for i, b in local.iter_112.tape : (i == local.iter_112.tape_ptr ? local.ascii_lookup[local.curr_113.input] : b)]
        : local.iter_112.tape)

    tape_ptr = (
      local.curr_113.code == "<"
        ? local.iter_112.tape_ptr == 0 ? length(local.iter_112.tape) - 1 : local.iter_112.tape_ptr - 1 :
      local.curr_113.code == ">"
        ? local.iter_112.tape_ptr == length(local.iter_112.tape) - 1 ? 0 : local.iter_112.tape_ptr + 1
        : local.iter_112.tape_ptr)

    code_ptr = 1 + (
      local.curr_113.code == "["
        ? local.iter_112.tape[local.iter_112.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_112.code_ptr)] : local.iter_112.code_ptr :
      local.curr_113.code == "]"
        ? local.iter_112.tape[local.iter_112.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_112.code_ptr)] : local.iter_112.code_ptr
        : local.iter_112.code_ptr)

    steps_taken = 1 + local.iter_112.steps_taken
  }
}

locals {
  end_of_code_114 = try(local.iter_113.code_ptr >= length(var.code), true)

  curr_114 = local.end_of_code_114 ? null : {
    code = substr(var.code, local.iter_113.code_ptr, 1)
    input = substr(var.code, local.iter_113.code_ptr, 1) == "," ? substr(local.iter_113.input, 0, 1) : null
  }

  iter_114 = local.end_of_code_114 ? local.iter_113 : {
    input = (local.curr_114.code == ","
      ? substr(local.iter_113.input, 1, -1)
      : local.iter_113.input)

    output = (local.curr_114.code == "."
      ? "${local.iter_113.output}${jsondecode(format("\"\\u%04x\"", local.iter_113.tape[local.iter_113.tape_ptr]))}"
      : local.iter_113.output)
    
    tape = (
      local.curr_114.code == "+"
        ? [for i, b in local.iter_113.tape : (i == local.iter_113.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_114.code == "-"
        ? [for i, b in local.iter_113.tape : (i == local.iter_113.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_114.code == ","
        ? [for i, b in local.iter_113.tape : (i == local.iter_113.tape_ptr ? local.ascii_lookup[local.curr_114.input] : b)]
        : local.iter_113.tape)

    tape_ptr = (
      local.curr_114.code == "<"
        ? local.iter_113.tape_ptr == 0 ? length(local.iter_113.tape) - 1 : local.iter_113.tape_ptr - 1 :
      local.curr_114.code == ">"
        ? local.iter_113.tape_ptr == length(local.iter_113.tape) - 1 ? 0 : local.iter_113.tape_ptr + 1
        : local.iter_113.tape_ptr)

    code_ptr = 1 + (
      local.curr_114.code == "["
        ? local.iter_113.tape[local.iter_113.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_113.code_ptr)] : local.iter_113.code_ptr :
      local.curr_114.code == "]"
        ? local.iter_113.tape[local.iter_113.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_113.code_ptr)] : local.iter_113.code_ptr
        : local.iter_113.code_ptr)

    steps_taken = 1 + local.iter_113.steps_taken
  }
}

locals {
  end_of_code_115 = try(local.iter_114.code_ptr >= length(var.code), true)

  curr_115 = local.end_of_code_115 ? null : {
    code = substr(var.code, local.iter_114.code_ptr, 1)
    input = substr(var.code, local.iter_114.code_ptr, 1) == "," ? substr(local.iter_114.input, 0, 1) : null
  }

  iter_115 = local.end_of_code_115 ? local.iter_114 : {
    input = (local.curr_115.code == ","
      ? substr(local.iter_114.input, 1, -1)
      : local.iter_114.input)

    output = (local.curr_115.code == "."
      ? "${local.iter_114.output}${jsondecode(format("\"\\u%04x\"", local.iter_114.tape[local.iter_114.tape_ptr]))}"
      : local.iter_114.output)
    
    tape = (
      local.curr_115.code == "+"
        ? [for i, b in local.iter_114.tape : (i == local.iter_114.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_115.code == "-"
        ? [for i, b in local.iter_114.tape : (i == local.iter_114.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_115.code == ","
        ? [for i, b in local.iter_114.tape : (i == local.iter_114.tape_ptr ? local.ascii_lookup[local.curr_115.input] : b)]
        : local.iter_114.tape)

    tape_ptr = (
      local.curr_115.code == "<"
        ? local.iter_114.tape_ptr == 0 ? length(local.iter_114.tape) - 1 : local.iter_114.tape_ptr - 1 :
      local.curr_115.code == ">"
        ? local.iter_114.tape_ptr == length(local.iter_114.tape) - 1 ? 0 : local.iter_114.tape_ptr + 1
        : local.iter_114.tape_ptr)

    code_ptr = 1 + (
      local.curr_115.code == "["
        ? local.iter_114.tape[local.iter_114.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_114.code_ptr)] : local.iter_114.code_ptr :
      local.curr_115.code == "]"
        ? local.iter_114.tape[local.iter_114.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_114.code_ptr)] : local.iter_114.code_ptr
        : local.iter_114.code_ptr)

    steps_taken = 1 + local.iter_114.steps_taken
  }
}

locals {
  end_of_code_116 = try(local.iter_115.code_ptr >= length(var.code), true)

  curr_116 = local.end_of_code_116 ? null : {
    code = substr(var.code, local.iter_115.code_ptr, 1)
    input = substr(var.code, local.iter_115.code_ptr, 1) == "," ? substr(local.iter_115.input, 0, 1) : null
  }

  iter_116 = local.end_of_code_116 ? local.iter_115 : {
    input = (local.curr_116.code == ","
      ? substr(local.iter_115.input, 1, -1)
      : local.iter_115.input)

    output = (local.curr_116.code == "."
      ? "${local.iter_115.output}${jsondecode(format("\"\\u%04x\"", local.iter_115.tape[local.iter_115.tape_ptr]))}"
      : local.iter_115.output)
    
    tape = (
      local.curr_116.code == "+"
        ? [for i, b in local.iter_115.tape : (i == local.iter_115.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_116.code == "-"
        ? [for i, b in local.iter_115.tape : (i == local.iter_115.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_116.code == ","
        ? [for i, b in local.iter_115.tape : (i == local.iter_115.tape_ptr ? local.ascii_lookup[local.curr_116.input] : b)]
        : local.iter_115.tape)

    tape_ptr = (
      local.curr_116.code == "<"
        ? local.iter_115.tape_ptr == 0 ? length(local.iter_115.tape) - 1 : local.iter_115.tape_ptr - 1 :
      local.curr_116.code == ">"
        ? local.iter_115.tape_ptr == length(local.iter_115.tape) - 1 ? 0 : local.iter_115.tape_ptr + 1
        : local.iter_115.tape_ptr)

    code_ptr = 1 + (
      local.curr_116.code == "["
        ? local.iter_115.tape[local.iter_115.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_115.code_ptr)] : local.iter_115.code_ptr :
      local.curr_116.code == "]"
        ? local.iter_115.tape[local.iter_115.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_115.code_ptr)] : local.iter_115.code_ptr
        : local.iter_115.code_ptr)

    steps_taken = 1 + local.iter_115.steps_taken
  }
}

locals {
  end_of_code_117 = try(local.iter_116.code_ptr >= length(var.code), true)

  curr_117 = local.end_of_code_117 ? null : {
    code = substr(var.code, local.iter_116.code_ptr, 1)
    input = substr(var.code, local.iter_116.code_ptr, 1) == "," ? substr(local.iter_116.input, 0, 1) : null
  }

  iter_117 = local.end_of_code_117 ? local.iter_116 : {
    input = (local.curr_117.code == ","
      ? substr(local.iter_116.input, 1, -1)
      : local.iter_116.input)

    output = (local.curr_117.code == "."
      ? "${local.iter_116.output}${jsondecode(format("\"\\u%04x\"", local.iter_116.tape[local.iter_116.tape_ptr]))}"
      : local.iter_116.output)
    
    tape = (
      local.curr_117.code == "+"
        ? [for i, b in local.iter_116.tape : (i == local.iter_116.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_117.code == "-"
        ? [for i, b in local.iter_116.tape : (i == local.iter_116.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_117.code == ","
        ? [for i, b in local.iter_116.tape : (i == local.iter_116.tape_ptr ? local.ascii_lookup[local.curr_117.input] : b)]
        : local.iter_116.tape)

    tape_ptr = (
      local.curr_117.code == "<"
        ? local.iter_116.tape_ptr == 0 ? length(local.iter_116.tape) - 1 : local.iter_116.tape_ptr - 1 :
      local.curr_117.code == ">"
        ? local.iter_116.tape_ptr == length(local.iter_116.tape) - 1 ? 0 : local.iter_116.tape_ptr + 1
        : local.iter_116.tape_ptr)

    code_ptr = 1 + (
      local.curr_117.code == "["
        ? local.iter_116.tape[local.iter_116.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_116.code_ptr)] : local.iter_116.code_ptr :
      local.curr_117.code == "]"
        ? local.iter_116.tape[local.iter_116.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_116.code_ptr)] : local.iter_116.code_ptr
        : local.iter_116.code_ptr)

    steps_taken = 1 + local.iter_116.steps_taken
  }
}

locals {
  end_of_code_118 = try(local.iter_117.code_ptr >= length(var.code), true)

  curr_118 = local.end_of_code_118 ? null : {
    code = substr(var.code, local.iter_117.code_ptr, 1)
    input = substr(var.code, local.iter_117.code_ptr, 1) == "," ? substr(local.iter_117.input, 0, 1) : null
  }

  iter_118 = local.end_of_code_118 ? local.iter_117 : {
    input = (local.curr_118.code == ","
      ? substr(local.iter_117.input, 1, -1)
      : local.iter_117.input)

    output = (local.curr_118.code == "."
      ? "${local.iter_117.output}${jsondecode(format("\"\\u%04x\"", local.iter_117.tape[local.iter_117.tape_ptr]))}"
      : local.iter_117.output)
    
    tape = (
      local.curr_118.code == "+"
        ? [for i, b in local.iter_117.tape : (i == local.iter_117.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_118.code == "-"
        ? [for i, b in local.iter_117.tape : (i == local.iter_117.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_118.code == ","
        ? [for i, b in local.iter_117.tape : (i == local.iter_117.tape_ptr ? local.ascii_lookup[local.curr_118.input] : b)]
        : local.iter_117.tape)

    tape_ptr = (
      local.curr_118.code == "<"
        ? local.iter_117.tape_ptr == 0 ? length(local.iter_117.tape) - 1 : local.iter_117.tape_ptr - 1 :
      local.curr_118.code == ">"
        ? local.iter_117.tape_ptr == length(local.iter_117.tape) - 1 ? 0 : local.iter_117.tape_ptr + 1
        : local.iter_117.tape_ptr)

    code_ptr = 1 + (
      local.curr_118.code == "["
        ? local.iter_117.tape[local.iter_117.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_117.code_ptr)] : local.iter_117.code_ptr :
      local.curr_118.code == "]"
        ? local.iter_117.tape[local.iter_117.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_117.code_ptr)] : local.iter_117.code_ptr
        : local.iter_117.code_ptr)

    steps_taken = 1 + local.iter_117.steps_taken
  }
}

locals {
  end_of_code_119 = try(local.iter_118.code_ptr >= length(var.code), true)

  curr_119 = local.end_of_code_119 ? null : {
    code = substr(var.code, local.iter_118.code_ptr, 1)
    input = substr(var.code, local.iter_118.code_ptr, 1) == "," ? substr(local.iter_118.input, 0, 1) : null
  }

  iter_119 = local.end_of_code_119 ? local.iter_118 : {
    input = (local.curr_119.code == ","
      ? substr(local.iter_118.input, 1, -1)
      : local.iter_118.input)

    output = (local.curr_119.code == "."
      ? "${local.iter_118.output}${jsondecode(format("\"\\u%04x\"", local.iter_118.tape[local.iter_118.tape_ptr]))}"
      : local.iter_118.output)
    
    tape = (
      local.curr_119.code == "+"
        ? [for i, b in local.iter_118.tape : (i == local.iter_118.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_119.code == "-"
        ? [for i, b in local.iter_118.tape : (i == local.iter_118.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_119.code == ","
        ? [for i, b in local.iter_118.tape : (i == local.iter_118.tape_ptr ? local.ascii_lookup[local.curr_119.input] : b)]
        : local.iter_118.tape)

    tape_ptr = (
      local.curr_119.code == "<"
        ? local.iter_118.tape_ptr == 0 ? length(local.iter_118.tape) - 1 : local.iter_118.tape_ptr - 1 :
      local.curr_119.code == ">"
        ? local.iter_118.tape_ptr == length(local.iter_118.tape) - 1 ? 0 : local.iter_118.tape_ptr + 1
        : local.iter_118.tape_ptr)

    code_ptr = 1 + (
      local.curr_119.code == "["
        ? local.iter_118.tape[local.iter_118.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_118.code_ptr)] : local.iter_118.code_ptr :
      local.curr_119.code == "]"
        ? local.iter_118.tape[local.iter_118.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_118.code_ptr)] : local.iter_118.code_ptr
        : local.iter_118.code_ptr)

    steps_taken = 1 + local.iter_118.steps_taken
  }
}

locals {
  end_of_code_120 = try(local.iter_119.code_ptr >= length(var.code), true)

  curr_120 = local.end_of_code_120 ? null : {
    code = substr(var.code, local.iter_119.code_ptr, 1)
    input = substr(var.code, local.iter_119.code_ptr, 1) == "," ? substr(local.iter_119.input, 0, 1) : null
  }

  iter_120 = local.end_of_code_120 ? local.iter_119 : {
    input = (local.curr_120.code == ","
      ? substr(local.iter_119.input, 1, -1)
      : local.iter_119.input)

    output = (local.curr_120.code == "."
      ? "${local.iter_119.output}${jsondecode(format("\"\\u%04x\"", local.iter_119.tape[local.iter_119.tape_ptr]))}"
      : local.iter_119.output)
    
    tape = (
      local.curr_120.code == "+"
        ? [for i, b in local.iter_119.tape : (i == local.iter_119.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_120.code == "-"
        ? [for i, b in local.iter_119.tape : (i == local.iter_119.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_120.code == ","
        ? [for i, b in local.iter_119.tape : (i == local.iter_119.tape_ptr ? local.ascii_lookup[local.curr_120.input] : b)]
        : local.iter_119.tape)

    tape_ptr = (
      local.curr_120.code == "<"
        ? local.iter_119.tape_ptr == 0 ? length(local.iter_119.tape) - 1 : local.iter_119.tape_ptr - 1 :
      local.curr_120.code == ">"
        ? local.iter_119.tape_ptr == length(local.iter_119.tape) - 1 ? 0 : local.iter_119.tape_ptr + 1
        : local.iter_119.tape_ptr)

    code_ptr = 1 + (
      local.curr_120.code == "["
        ? local.iter_119.tape[local.iter_119.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_119.code_ptr)] : local.iter_119.code_ptr :
      local.curr_120.code == "]"
        ? local.iter_119.tape[local.iter_119.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_119.code_ptr)] : local.iter_119.code_ptr
        : local.iter_119.code_ptr)

    steps_taken = 1 + local.iter_119.steps_taken
  }
}

locals {
  end_of_code_121 = try(local.iter_120.code_ptr >= length(var.code), true)

  curr_121 = local.end_of_code_121 ? null : {
    code = substr(var.code, local.iter_120.code_ptr, 1)
    input = substr(var.code, local.iter_120.code_ptr, 1) == "," ? substr(local.iter_120.input, 0, 1) : null
  }

  iter_121 = local.end_of_code_121 ? local.iter_120 : {
    input = (local.curr_121.code == ","
      ? substr(local.iter_120.input, 1, -1)
      : local.iter_120.input)

    output = (local.curr_121.code == "."
      ? "${local.iter_120.output}${jsondecode(format("\"\\u%04x\"", local.iter_120.tape[local.iter_120.tape_ptr]))}"
      : local.iter_120.output)
    
    tape = (
      local.curr_121.code == "+"
        ? [for i, b in local.iter_120.tape : (i == local.iter_120.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_121.code == "-"
        ? [for i, b in local.iter_120.tape : (i == local.iter_120.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_121.code == ","
        ? [for i, b in local.iter_120.tape : (i == local.iter_120.tape_ptr ? local.ascii_lookup[local.curr_121.input] : b)]
        : local.iter_120.tape)

    tape_ptr = (
      local.curr_121.code == "<"
        ? local.iter_120.tape_ptr == 0 ? length(local.iter_120.tape) - 1 : local.iter_120.tape_ptr - 1 :
      local.curr_121.code == ">"
        ? local.iter_120.tape_ptr == length(local.iter_120.tape) - 1 ? 0 : local.iter_120.tape_ptr + 1
        : local.iter_120.tape_ptr)

    code_ptr = 1 + (
      local.curr_121.code == "["
        ? local.iter_120.tape[local.iter_120.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_120.code_ptr)] : local.iter_120.code_ptr :
      local.curr_121.code == "]"
        ? local.iter_120.tape[local.iter_120.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_120.code_ptr)] : local.iter_120.code_ptr
        : local.iter_120.code_ptr)

    steps_taken = 1 + local.iter_120.steps_taken
  }
}

locals {
  end_of_code_122 = try(local.iter_121.code_ptr >= length(var.code), true)

  curr_122 = local.end_of_code_122 ? null : {
    code = substr(var.code, local.iter_121.code_ptr, 1)
    input = substr(var.code, local.iter_121.code_ptr, 1) == "," ? substr(local.iter_121.input, 0, 1) : null
  }

  iter_122 = local.end_of_code_122 ? local.iter_121 : {
    input = (local.curr_122.code == ","
      ? substr(local.iter_121.input, 1, -1)
      : local.iter_121.input)

    output = (local.curr_122.code == "."
      ? "${local.iter_121.output}${jsondecode(format("\"\\u%04x\"", local.iter_121.tape[local.iter_121.tape_ptr]))}"
      : local.iter_121.output)
    
    tape = (
      local.curr_122.code == "+"
        ? [for i, b in local.iter_121.tape : (i == local.iter_121.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_122.code == "-"
        ? [for i, b in local.iter_121.tape : (i == local.iter_121.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_122.code == ","
        ? [for i, b in local.iter_121.tape : (i == local.iter_121.tape_ptr ? local.ascii_lookup[local.curr_122.input] : b)]
        : local.iter_121.tape)

    tape_ptr = (
      local.curr_122.code == "<"
        ? local.iter_121.tape_ptr == 0 ? length(local.iter_121.tape) - 1 : local.iter_121.tape_ptr - 1 :
      local.curr_122.code == ">"
        ? local.iter_121.tape_ptr == length(local.iter_121.tape) - 1 ? 0 : local.iter_121.tape_ptr + 1
        : local.iter_121.tape_ptr)

    code_ptr = 1 + (
      local.curr_122.code == "["
        ? local.iter_121.tape[local.iter_121.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_121.code_ptr)] : local.iter_121.code_ptr :
      local.curr_122.code == "]"
        ? local.iter_121.tape[local.iter_121.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_121.code_ptr)] : local.iter_121.code_ptr
        : local.iter_121.code_ptr)

    steps_taken = 1 + local.iter_121.steps_taken
  }
}

locals {
  end_of_code_123 = try(local.iter_122.code_ptr >= length(var.code), true)

  curr_123 = local.end_of_code_123 ? null : {
    code = substr(var.code, local.iter_122.code_ptr, 1)
    input = substr(var.code, local.iter_122.code_ptr, 1) == "," ? substr(local.iter_122.input, 0, 1) : null
  }

  iter_123 = local.end_of_code_123 ? local.iter_122 : {
    input = (local.curr_123.code == ","
      ? substr(local.iter_122.input, 1, -1)
      : local.iter_122.input)

    output = (local.curr_123.code == "."
      ? "${local.iter_122.output}${jsondecode(format("\"\\u%04x\"", local.iter_122.tape[local.iter_122.tape_ptr]))}"
      : local.iter_122.output)
    
    tape = (
      local.curr_123.code == "+"
        ? [for i, b in local.iter_122.tape : (i == local.iter_122.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_123.code == "-"
        ? [for i, b in local.iter_122.tape : (i == local.iter_122.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_123.code == ","
        ? [for i, b in local.iter_122.tape : (i == local.iter_122.tape_ptr ? local.ascii_lookup[local.curr_123.input] : b)]
        : local.iter_122.tape)

    tape_ptr = (
      local.curr_123.code == "<"
        ? local.iter_122.tape_ptr == 0 ? length(local.iter_122.tape) - 1 : local.iter_122.tape_ptr - 1 :
      local.curr_123.code == ">"
        ? local.iter_122.tape_ptr == length(local.iter_122.tape) - 1 ? 0 : local.iter_122.tape_ptr + 1
        : local.iter_122.tape_ptr)

    code_ptr = 1 + (
      local.curr_123.code == "["
        ? local.iter_122.tape[local.iter_122.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_122.code_ptr)] : local.iter_122.code_ptr :
      local.curr_123.code == "]"
        ? local.iter_122.tape[local.iter_122.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_122.code_ptr)] : local.iter_122.code_ptr
        : local.iter_122.code_ptr)

    steps_taken = 1 + local.iter_122.steps_taken
  }
}

locals {
  end_of_code_124 = try(local.iter_123.code_ptr >= length(var.code), true)

  curr_124 = local.end_of_code_124 ? null : {
    code = substr(var.code, local.iter_123.code_ptr, 1)
    input = substr(var.code, local.iter_123.code_ptr, 1) == "," ? substr(local.iter_123.input, 0, 1) : null
  }

  iter_124 = local.end_of_code_124 ? local.iter_123 : {
    input = (local.curr_124.code == ","
      ? substr(local.iter_123.input, 1, -1)
      : local.iter_123.input)

    output = (local.curr_124.code == "."
      ? "${local.iter_123.output}${jsondecode(format("\"\\u%04x\"", local.iter_123.tape[local.iter_123.tape_ptr]))}"
      : local.iter_123.output)
    
    tape = (
      local.curr_124.code == "+"
        ? [for i, b in local.iter_123.tape : (i == local.iter_123.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_124.code == "-"
        ? [for i, b in local.iter_123.tape : (i == local.iter_123.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_124.code == ","
        ? [for i, b in local.iter_123.tape : (i == local.iter_123.tape_ptr ? local.ascii_lookup[local.curr_124.input] : b)]
        : local.iter_123.tape)

    tape_ptr = (
      local.curr_124.code == "<"
        ? local.iter_123.tape_ptr == 0 ? length(local.iter_123.tape) - 1 : local.iter_123.tape_ptr - 1 :
      local.curr_124.code == ">"
        ? local.iter_123.tape_ptr == length(local.iter_123.tape) - 1 ? 0 : local.iter_123.tape_ptr + 1
        : local.iter_123.tape_ptr)

    code_ptr = 1 + (
      local.curr_124.code == "["
        ? local.iter_123.tape[local.iter_123.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_123.code_ptr)] : local.iter_123.code_ptr :
      local.curr_124.code == "]"
        ? local.iter_123.tape[local.iter_123.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_123.code_ptr)] : local.iter_123.code_ptr
        : local.iter_123.code_ptr)

    steps_taken = 1 + local.iter_123.steps_taken
  }
}

locals {
  end_of_code_125 = try(local.iter_124.code_ptr >= length(var.code), true)

  curr_125 = local.end_of_code_125 ? null : {
    code = substr(var.code, local.iter_124.code_ptr, 1)
    input = substr(var.code, local.iter_124.code_ptr, 1) == "," ? substr(local.iter_124.input, 0, 1) : null
  }

  iter_125 = local.end_of_code_125 ? local.iter_124 : {
    input = (local.curr_125.code == ","
      ? substr(local.iter_124.input, 1, -1)
      : local.iter_124.input)

    output = (local.curr_125.code == "."
      ? "${local.iter_124.output}${jsondecode(format("\"\\u%04x\"", local.iter_124.tape[local.iter_124.tape_ptr]))}"
      : local.iter_124.output)
    
    tape = (
      local.curr_125.code == "+"
        ? [for i, b in local.iter_124.tape : (i == local.iter_124.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_125.code == "-"
        ? [for i, b in local.iter_124.tape : (i == local.iter_124.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_125.code == ","
        ? [for i, b in local.iter_124.tape : (i == local.iter_124.tape_ptr ? local.ascii_lookup[local.curr_125.input] : b)]
        : local.iter_124.tape)

    tape_ptr = (
      local.curr_125.code == "<"
        ? local.iter_124.tape_ptr == 0 ? length(local.iter_124.tape) - 1 : local.iter_124.tape_ptr - 1 :
      local.curr_125.code == ">"
        ? local.iter_124.tape_ptr == length(local.iter_124.tape) - 1 ? 0 : local.iter_124.tape_ptr + 1
        : local.iter_124.tape_ptr)

    code_ptr = 1 + (
      local.curr_125.code == "["
        ? local.iter_124.tape[local.iter_124.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_124.code_ptr)] : local.iter_124.code_ptr :
      local.curr_125.code == "]"
        ? local.iter_124.tape[local.iter_124.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_124.code_ptr)] : local.iter_124.code_ptr
        : local.iter_124.code_ptr)

    steps_taken = 1 + local.iter_124.steps_taken
  }
}

locals {
  end_of_code_126 = try(local.iter_125.code_ptr >= length(var.code), true)

  curr_126 = local.end_of_code_126 ? null : {
    code = substr(var.code, local.iter_125.code_ptr, 1)
    input = substr(var.code, local.iter_125.code_ptr, 1) == "," ? substr(local.iter_125.input, 0, 1) : null
  }

  iter_126 = local.end_of_code_126 ? local.iter_125 : {
    input = (local.curr_126.code == ","
      ? substr(local.iter_125.input, 1, -1)
      : local.iter_125.input)

    output = (local.curr_126.code == "."
      ? "${local.iter_125.output}${jsondecode(format("\"\\u%04x\"", local.iter_125.tape[local.iter_125.tape_ptr]))}"
      : local.iter_125.output)
    
    tape = (
      local.curr_126.code == "+"
        ? [for i, b in local.iter_125.tape : (i == local.iter_125.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_126.code == "-"
        ? [for i, b in local.iter_125.tape : (i == local.iter_125.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_126.code == ","
        ? [for i, b in local.iter_125.tape : (i == local.iter_125.tape_ptr ? local.ascii_lookup[local.curr_126.input] : b)]
        : local.iter_125.tape)

    tape_ptr = (
      local.curr_126.code == "<"
        ? local.iter_125.tape_ptr == 0 ? length(local.iter_125.tape) - 1 : local.iter_125.tape_ptr - 1 :
      local.curr_126.code == ">"
        ? local.iter_125.tape_ptr == length(local.iter_125.tape) - 1 ? 0 : local.iter_125.tape_ptr + 1
        : local.iter_125.tape_ptr)

    code_ptr = 1 + (
      local.curr_126.code == "["
        ? local.iter_125.tape[local.iter_125.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_125.code_ptr)] : local.iter_125.code_ptr :
      local.curr_126.code == "]"
        ? local.iter_125.tape[local.iter_125.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_125.code_ptr)] : local.iter_125.code_ptr
        : local.iter_125.code_ptr)

    steps_taken = 1 + local.iter_125.steps_taken
  }
}

locals {
  end_of_code_127 = try(local.iter_126.code_ptr >= length(var.code), true)

  curr_127 = local.end_of_code_127 ? null : {
    code = substr(var.code, local.iter_126.code_ptr, 1)
    input = substr(var.code, local.iter_126.code_ptr, 1) == "," ? substr(local.iter_126.input, 0, 1) : null
  }

  iter_127 = local.end_of_code_127 ? local.iter_126 : {
    input = (local.curr_127.code == ","
      ? substr(local.iter_126.input, 1, -1)
      : local.iter_126.input)

    output = (local.curr_127.code == "."
      ? "${local.iter_126.output}${jsondecode(format("\"\\u%04x\"", local.iter_126.tape[local.iter_126.tape_ptr]))}"
      : local.iter_126.output)
    
    tape = (
      local.curr_127.code == "+"
        ? [for i, b in local.iter_126.tape : (i == local.iter_126.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_127.code == "-"
        ? [for i, b in local.iter_126.tape : (i == local.iter_126.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_127.code == ","
        ? [for i, b in local.iter_126.tape : (i == local.iter_126.tape_ptr ? local.ascii_lookup[local.curr_127.input] : b)]
        : local.iter_126.tape)

    tape_ptr = (
      local.curr_127.code == "<"
        ? local.iter_126.tape_ptr == 0 ? length(local.iter_126.tape) - 1 : local.iter_126.tape_ptr - 1 :
      local.curr_127.code == ">"
        ? local.iter_126.tape_ptr == length(local.iter_126.tape) - 1 ? 0 : local.iter_126.tape_ptr + 1
        : local.iter_126.tape_ptr)

    code_ptr = 1 + (
      local.curr_127.code == "["
        ? local.iter_126.tape[local.iter_126.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_126.code_ptr)] : local.iter_126.code_ptr :
      local.curr_127.code == "]"
        ? local.iter_126.tape[local.iter_126.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_126.code_ptr)] : local.iter_126.code_ptr
        : local.iter_126.code_ptr)

    steps_taken = 1 + local.iter_126.steps_taken
  }
}

locals {
  end_of_code_128 = try(local.iter_127.code_ptr >= length(var.code), true)

  curr_128 = local.end_of_code_128 ? null : {
    code = substr(var.code, local.iter_127.code_ptr, 1)
    input = substr(var.code, local.iter_127.code_ptr, 1) == "," ? substr(local.iter_127.input, 0, 1) : null
  }

  iter_128 = local.end_of_code_128 ? local.iter_127 : {
    input = (local.curr_128.code == ","
      ? substr(local.iter_127.input, 1, -1)
      : local.iter_127.input)

    output = (local.curr_128.code == "."
      ? "${local.iter_127.output}${jsondecode(format("\"\\u%04x\"", local.iter_127.tape[local.iter_127.tape_ptr]))}"
      : local.iter_127.output)
    
    tape = (
      local.curr_128.code == "+"
        ? [for i, b in local.iter_127.tape : (i == local.iter_127.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_128.code == "-"
        ? [for i, b in local.iter_127.tape : (i == local.iter_127.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_128.code == ","
        ? [for i, b in local.iter_127.tape : (i == local.iter_127.tape_ptr ? local.ascii_lookup[local.curr_128.input] : b)]
        : local.iter_127.tape)

    tape_ptr = (
      local.curr_128.code == "<"
        ? local.iter_127.tape_ptr == 0 ? length(local.iter_127.tape) - 1 : local.iter_127.tape_ptr - 1 :
      local.curr_128.code == ">"
        ? local.iter_127.tape_ptr == length(local.iter_127.tape) - 1 ? 0 : local.iter_127.tape_ptr + 1
        : local.iter_127.tape_ptr)

    code_ptr = 1 + (
      local.curr_128.code == "["
        ? local.iter_127.tape[local.iter_127.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_127.code_ptr)] : local.iter_127.code_ptr :
      local.curr_128.code == "]"
        ? local.iter_127.tape[local.iter_127.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_127.code_ptr)] : local.iter_127.code_ptr
        : local.iter_127.code_ptr)

    steps_taken = 1 + local.iter_127.steps_taken
  }
}

locals {
  end_of_code_129 = try(local.iter_128.code_ptr >= length(var.code), true)

  curr_129 = local.end_of_code_129 ? null : {
    code = substr(var.code, local.iter_128.code_ptr, 1)
    input = substr(var.code, local.iter_128.code_ptr, 1) == "," ? substr(local.iter_128.input, 0, 1) : null
  }

  iter_129 = local.end_of_code_129 ? local.iter_128 : {
    input = (local.curr_129.code == ","
      ? substr(local.iter_128.input, 1, -1)
      : local.iter_128.input)

    output = (local.curr_129.code == "."
      ? "${local.iter_128.output}${jsondecode(format("\"\\u%04x\"", local.iter_128.tape[local.iter_128.tape_ptr]))}"
      : local.iter_128.output)
    
    tape = (
      local.curr_129.code == "+"
        ? [for i, b in local.iter_128.tape : (i == local.iter_128.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_129.code == "-"
        ? [for i, b in local.iter_128.tape : (i == local.iter_128.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_129.code == ","
        ? [for i, b in local.iter_128.tape : (i == local.iter_128.tape_ptr ? local.ascii_lookup[local.curr_129.input] : b)]
        : local.iter_128.tape)

    tape_ptr = (
      local.curr_129.code == "<"
        ? local.iter_128.tape_ptr == 0 ? length(local.iter_128.tape) - 1 : local.iter_128.tape_ptr - 1 :
      local.curr_129.code == ">"
        ? local.iter_128.tape_ptr == length(local.iter_128.tape) - 1 ? 0 : local.iter_128.tape_ptr + 1
        : local.iter_128.tape_ptr)

    code_ptr = 1 + (
      local.curr_129.code == "["
        ? local.iter_128.tape[local.iter_128.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_128.code_ptr)] : local.iter_128.code_ptr :
      local.curr_129.code == "]"
        ? local.iter_128.tape[local.iter_128.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_128.code_ptr)] : local.iter_128.code_ptr
        : local.iter_128.code_ptr)

    steps_taken = 1 + local.iter_128.steps_taken
  }
}

locals {
  end_of_code_130 = try(local.iter_129.code_ptr >= length(var.code), true)

  curr_130 = local.end_of_code_130 ? null : {
    code = substr(var.code, local.iter_129.code_ptr, 1)
    input = substr(var.code, local.iter_129.code_ptr, 1) == "," ? substr(local.iter_129.input, 0, 1) : null
  }

  iter_130 = local.end_of_code_130 ? local.iter_129 : {
    input = (local.curr_130.code == ","
      ? substr(local.iter_129.input, 1, -1)
      : local.iter_129.input)

    output = (local.curr_130.code == "."
      ? "${local.iter_129.output}${jsondecode(format("\"\\u%04x\"", local.iter_129.tape[local.iter_129.tape_ptr]))}"
      : local.iter_129.output)
    
    tape = (
      local.curr_130.code == "+"
        ? [for i, b in local.iter_129.tape : (i == local.iter_129.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_130.code == "-"
        ? [for i, b in local.iter_129.tape : (i == local.iter_129.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_130.code == ","
        ? [for i, b in local.iter_129.tape : (i == local.iter_129.tape_ptr ? local.ascii_lookup[local.curr_130.input] : b)]
        : local.iter_129.tape)

    tape_ptr = (
      local.curr_130.code == "<"
        ? local.iter_129.tape_ptr == 0 ? length(local.iter_129.tape) - 1 : local.iter_129.tape_ptr - 1 :
      local.curr_130.code == ">"
        ? local.iter_129.tape_ptr == length(local.iter_129.tape) - 1 ? 0 : local.iter_129.tape_ptr + 1
        : local.iter_129.tape_ptr)

    code_ptr = 1 + (
      local.curr_130.code == "["
        ? local.iter_129.tape[local.iter_129.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_129.code_ptr)] : local.iter_129.code_ptr :
      local.curr_130.code == "]"
        ? local.iter_129.tape[local.iter_129.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_129.code_ptr)] : local.iter_129.code_ptr
        : local.iter_129.code_ptr)

    steps_taken = 1 + local.iter_129.steps_taken
  }
}

locals {
  end_of_code_131 = try(local.iter_130.code_ptr >= length(var.code), true)

  curr_131 = local.end_of_code_131 ? null : {
    code = substr(var.code, local.iter_130.code_ptr, 1)
    input = substr(var.code, local.iter_130.code_ptr, 1) == "," ? substr(local.iter_130.input, 0, 1) : null
  }

  iter_131 = local.end_of_code_131 ? local.iter_130 : {
    input = (local.curr_131.code == ","
      ? substr(local.iter_130.input, 1, -1)
      : local.iter_130.input)

    output = (local.curr_131.code == "."
      ? "${local.iter_130.output}${jsondecode(format("\"\\u%04x\"", local.iter_130.tape[local.iter_130.tape_ptr]))}"
      : local.iter_130.output)
    
    tape = (
      local.curr_131.code == "+"
        ? [for i, b in local.iter_130.tape : (i == local.iter_130.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_131.code == "-"
        ? [for i, b in local.iter_130.tape : (i == local.iter_130.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_131.code == ","
        ? [for i, b in local.iter_130.tape : (i == local.iter_130.tape_ptr ? local.ascii_lookup[local.curr_131.input] : b)]
        : local.iter_130.tape)

    tape_ptr = (
      local.curr_131.code == "<"
        ? local.iter_130.tape_ptr == 0 ? length(local.iter_130.tape) - 1 : local.iter_130.tape_ptr - 1 :
      local.curr_131.code == ">"
        ? local.iter_130.tape_ptr == length(local.iter_130.tape) - 1 ? 0 : local.iter_130.tape_ptr + 1
        : local.iter_130.tape_ptr)

    code_ptr = 1 + (
      local.curr_131.code == "["
        ? local.iter_130.tape[local.iter_130.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_130.code_ptr)] : local.iter_130.code_ptr :
      local.curr_131.code == "]"
        ? local.iter_130.tape[local.iter_130.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_130.code_ptr)] : local.iter_130.code_ptr
        : local.iter_130.code_ptr)

    steps_taken = 1 + local.iter_130.steps_taken
  }
}

locals {
  end_of_code_132 = try(local.iter_131.code_ptr >= length(var.code), true)

  curr_132 = local.end_of_code_132 ? null : {
    code = substr(var.code, local.iter_131.code_ptr, 1)
    input = substr(var.code, local.iter_131.code_ptr, 1) == "," ? substr(local.iter_131.input, 0, 1) : null
  }

  iter_132 = local.end_of_code_132 ? local.iter_131 : {
    input = (local.curr_132.code == ","
      ? substr(local.iter_131.input, 1, -1)
      : local.iter_131.input)

    output = (local.curr_132.code == "."
      ? "${local.iter_131.output}${jsondecode(format("\"\\u%04x\"", local.iter_131.tape[local.iter_131.tape_ptr]))}"
      : local.iter_131.output)
    
    tape = (
      local.curr_132.code == "+"
        ? [for i, b in local.iter_131.tape : (i == local.iter_131.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_132.code == "-"
        ? [for i, b in local.iter_131.tape : (i == local.iter_131.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_132.code == ","
        ? [for i, b in local.iter_131.tape : (i == local.iter_131.tape_ptr ? local.ascii_lookup[local.curr_132.input] : b)]
        : local.iter_131.tape)

    tape_ptr = (
      local.curr_132.code == "<"
        ? local.iter_131.tape_ptr == 0 ? length(local.iter_131.tape) - 1 : local.iter_131.tape_ptr - 1 :
      local.curr_132.code == ">"
        ? local.iter_131.tape_ptr == length(local.iter_131.tape) - 1 ? 0 : local.iter_131.tape_ptr + 1
        : local.iter_131.tape_ptr)

    code_ptr = 1 + (
      local.curr_132.code == "["
        ? local.iter_131.tape[local.iter_131.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_131.code_ptr)] : local.iter_131.code_ptr :
      local.curr_132.code == "]"
        ? local.iter_131.tape[local.iter_131.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_131.code_ptr)] : local.iter_131.code_ptr
        : local.iter_131.code_ptr)

    steps_taken = 1 + local.iter_131.steps_taken
  }
}

locals {
  end_of_code_133 = try(local.iter_132.code_ptr >= length(var.code), true)

  curr_133 = local.end_of_code_133 ? null : {
    code = substr(var.code, local.iter_132.code_ptr, 1)
    input = substr(var.code, local.iter_132.code_ptr, 1) == "," ? substr(local.iter_132.input, 0, 1) : null
  }

  iter_133 = local.end_of_code_133 ? local.iter_132 : {
    input = (local.curr_133.code == ","
      ? substr(local.iter_132.input, 1, -1)
      : local.iter_132.input)

    output = (local.curr_133.code == "."
      ? "${local.iter_132.output}${jsondecode(format("\"\\u%04x\"", local.iter_132.tape[local.iter_132.tape_ptr]))}"
      : local.iter_132.output)
    
    tape = (
      local.curr_133.code == "+"
        ? [for i, b in local.iter_132.tape : (i == local.iter_132.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_133.code == "-"
        ? [for i, b in local.iter_132.tape : (i == local.iter_132.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_133.code == ","
        ? [for i, b in local.iter_132.tape : (i == local.iter_132.tape_ptr ? local.ascii_lookup[local.curr_133.input] : b)]
        : local.iter_132.tape)

    tape_ptr = (
      local.curr_133.code == "<"
        ? local.iter_132.tape_ptr == 0 ? length(local.iter_132.tape) - 1 : local.iter_132.tape_ptr - 1 :
      local.curr_133.code == ">"
        ? local.iter_132.tape_ptr == length(local.iter_132.tape) - 1 ? 0 : local.iter_132.tape_ptr + 1
        : local.iter_132.tape_ptr)

    code_ptr = 1 + (
      local.curr_133.code == "["
        ? local.iter_132.tape[local.iter_132.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_132.code_ptr)] : local.iter_132.code_ptr :
      local.curr_133.code == "]"
        ? local.iter_132.tape[local.iter_132.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_132.code_ptr)] : local.iter_132.code_ptr
        : local.iter_132.code_ptr)

    steps_taken = 1 + local.iter_132.steps_taken
  }
}

locals {
  end_of_code_134 = try(local.iter_133.code_ptr >= length(var.code), true)

  curr_134 = local.end_of_code_134 ? null : {
    code = substr(var.code, local.iter_133.code_ptr, 1)
    input = substr(var.code, local.iter_133.code_ptr, 1) == "," ? substr(local.iter_133.input, 0, 1) : null
  }

  iter_134 = local.end_of_code_134 ? local.iter_133 : {
    input = (local.curr_134.code == ","
      ? substr(local.iter_133.input, 1, -1)
      : local.iter_133.input)

    output = (local.curr_134.code == "."
      ? "${local.iter_133.output}${jsondecode(format("\"\\u%04x\"", local.iter_133.tape[local.iter_133.tape_ptr]))}"
      : local.iter_133.output)
    
    tape = (
      local.curr_134.code == "+"
        ? [for i, b in local.iter_133.tape : (i == local.iter_133.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_134.code == "-"
        ? [for i, b in local.iter_133.tape : (i == local.iter_133.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_134.code == ","
        ? [for i, b in local.iter_133.tape : (i == local.iter_133.tape_ptr ? local.ascii_lookup[local.curr_134.input] : b)]
        : local.iter_133.tape)

    tape_ptr = (
      local.curr_134.code == "<"
        ? local.iter_133.tape_ptr == 0 ? length(local.iter_133.tape) - 1 : local.iter_133.tape_ptr - 1 :
      local.curr_134.code == ">"
        ? local.iter_133.tape_ptr == length(local.iter_133.tape) - 1 ? 0 : local.iter_133.tape_ptr + 1
        : local.iter_133.tape_ptr)

    code_ptr = 1 + (
      local.curr_134.code == "["
        ? local.iter_133.tape[local.iter_133.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_133.code_ptr)] : local.iter_133.code_ptr :
      local.curr_134.code == "]"
        ? local.iter_133.tape[local.iter_133.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_133.code_ptr)] : local.iter_133.code_ptr
        : local.iter_133.code_ptr)

    steps_taken = 1 + local.iter_133.steps_taken
  }
}

locals {
  end_of_code_135 = try(local.iter_134.code_ptr >= length(var.code), true)

  curr_135 = local.end_of_code_135 ? null : {
    code = substr(var.code, local.iter_134.code_ptr, 1)
    input = substr(var.code, local.iter_134.code_ptr, 1) == "," ? substr(local.iter_134.input, 0, 1) : null
  }

  iter_135 = local.end_of_code_135 ? local.iter_134 : {
    input = (local.curr_135.code == ","
      ? substr(local.iter_134.input, 1, -1)
      : local.iter_134.input)

    output = (local.curr_135.code == "."
      ? "${local.iter_134.output}${jsondecode(format("\"\\u%04x\"", local.iter_134.tape[local.iter_134.tape_ptr]))}"
      : local.iter_134.output)
    
    tape = (
      local.curr_135.code == "+"
        ? [for i, b in local.iter_134.tape : (i == local.iter_134.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_135.code == "-"
        ? [for i, b in local.iter_134.tape : (i == local.iter_134.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_135.code == ","
        ? [for i, b in local.iter_134.tape : (i == local.iter_134.tape_ptr ? local.ascii_lookup[local.curr_135.input] : b)]
        : local.iter_134.tape)

    tape_ptr = (
      local.curr_135.code == "<"
        ? local.iter_134.tape_ptr == 0 ? length(local.iter_134.tape) - 1 : local.iter_134.tape_ptr - 1 :
      local.curr_135.code == ">"
        ? local.iter_134.tape_ptr == length(local.iter_134.tape) - 1 ? 0 : local.iter_134.tape_ptr + 1
        : local.iter_134.tape_ptr)

    code_ptr = 1 + (
      local.curr_135.code == "["
        ? local.iter_134.tape[local.iter_134.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_134.code_ptr)] : local.iter_134.code_ptr :
      local.curr_135.code == "]"
        ? local.iter_134.tape[local.iter_134.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_134.code_ptr)] : local.iter_134.code_ptr
        : local.iter_134.code_ptr)

    steps_taken = 1 + local.iter_134.steps_taken
  }
}

locals {
  end_of_code_136 = try(local.iter_135.code_ptr >= length(var.code), true)

  curr_136 = local.end_of_code_136 ? null : {
    code = substr(var.code, local.iter_135.code_ptr, 1)
    input = substr(var.code, local.iter_135.code_ptr, 1) == "," ? substr(local.iter_135.input, 0, 1) : null
  }

  iter_136 = local.end_of_code_136 ? local.iter_135 : {
    input = (local.curr_136.code == ","
      ? substr(local.iter_135.input, 1, -1)
      : local.iter_135.input)

    output = (local.curr_136.code == "."
      ? "${local.iter_135.output}${jsondecode(format("\"\\u%04x\"", local.iter_135.tape[local.iter_135.tape_ptr]))}"
      : local.iter_135.output)
    
    tape = (
      local.curr_136.code == "+"
        ? [for i, b in local.iter_135.tape : (i == local.iter_135.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_136.code == "-"
        ? [for i, b in local.iter_135.tape : (i == local.iter_135.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_136.code == ","
        ? [for i, b in local.iter_135.tape : (i == local.iter_135.tape_ptr ? local.ascii_lookup[local.curr_136.input] : b)]
        : local.iter_135.tape)

    tape_ptr = (
      local.curr_136.code == "<"
        ? local.iter_135.tape_ptr == 0 ? length(local.iter_135.tape) - 1 : local.iter_135.tape_ptr - 1 :
      local.curr_136.code == ">"
        ? local.iter_135.tape_ptr == length(local.iter_135.tape) - 1 ? 0 : local.iter_135.tape_ptr + 1
        : local.iter_135.tape_ptr)

    code_ptr = 1 + (
      local.curr_136.code == "["
        ? local.iter_135.tape[local.iter_135.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_135.code_ptr)] : local.iter_135.code_ptr :
      local.curr_136.code == "]"
        ? local.iter_135.tape[local.iter_135.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_135.code_ptr)] : local.iter_135.code_ptr
        : local.iter_135.code_ptr)

    steps_taken = 1 + local.iter_135.steps_taken
  }
}

locals {
  end_of_code_137 = try(local.iter_136.code_ptr >= length(var.code), true)

  curr_137 = local.end_of_code_137 ? null : {
    code = substr(var.code, local.iter_136.code_ptr, 1)
    input = substr(var.code, local.iter_136.code_ptr, 1) == "," ? substr(local.iter_136.input, 0, 1) : null
  }

  iter_137 = local.end_of_code_137 ? local.iter_136 : {
    input = (local.curr_137.code == ","
      ? substr(local.iter_136.input, 1, -1)
      : local.iter_136.input)

    output = (local.curr_137.code == "."
      ? "${local.iter_136.output}${jsondecode(format("\"\\u%04x\"", local.iter_136.tape[local.iter_136.tape_ptr]))}"
      : local.iter_136.output)
    
    tape = (
      local.curr_137.code == "+"
        ? [for i, b in local.iter_136.tape : (i == local.iter_136.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_137.code == "-"
        ? [for i, b in local.iter_136.tape : (i == local.iter_136.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_137.code == ","
        ? [for i, b in local.iter_136.tape : (i == local.iter_136.tape_ptr ? local.ascii_lookup[local.curr_137.input] : b)]
        : local.iter_136.tape)

    tape_ptr = (
      local.curr_137.code == "<"
        ? local.iter_136.tape_ptr == 0 ? length(local.iter_136.tape) - 1 : local.iter_136.tape_ptr - 1 :
      local.curr_137.code == ">"
        ? local.iter_136.tape_ptr == length(local.iter_136.tape) - 1 ? 0 : local.iter_136.tape_ptr + 1
        : local.iter_136.tape_ptr)

    code_ptr = 1 + (
      local.curr_137.code == "["
        ? local.iter_136.tape[local.iter_136.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_136.code_ptr)] : local.iter_136.code_ptr :
      local.curr_137.code == "]"
        ? local.iter_136.tape[local.iter_136.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_136.code_ptr)] : local.iter_136.code_ptr
        : local.iter_136.code_ptr)

    steps_taken = 1 + local.iter_136.steps_taken
  }
}

locals {
  end_of_code_138 = try(local.iter_137.code_ptr >= length(var.code), true)

  curr_138 = local.end_of_code_138 ? null : {
    code = substr(var.code, local.iter_137.code_ptr, 1)
    input = substr(var.code, local.iter_137.code_ptr, 1) == "," ? substr(local.iter_137.input, 0, 1) : null
  }

  iter_138 = local.end_of_code_138 ? local.iter_137 : {
    input = (local.curr_138.code == ","
      ? substr(local.iter_137.input, 1, -1)
      : local.iter_137.input)

    output = (local.curr_138.code == "."
      ? "${local.iter_137.output}${jsondecode(format("\"\\u%04x\"", local.iter_137.tape[local.iter_137.tape_ptr]))}"
      : local.iter_137.output)
    
    tape = (
      local.curr_138.code == "+"
        ? [for i, b in local.iter_137.tape : (i == local.iter_137.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_138.code == "-"
        ? [for i, b in local.iter_137.tape : (i == local.iter_137.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_138.code == ","
        ? [for i, b in local.iter_137.tape : (i == local.iter_137.tape_ptr ? local.ascii_lookup[local.curr_138.input] : b)]
        : local.iter_137.tape)

    tape_ptr = (
      local.curr_138.code == "<"
        ? local.iter_137.tape_ptr == 0 ? length(local.iter_137.tape) - 1 : local.iter_137.tape_ptr - 1 :
      local.curr_138.code == ">"
        ? local.iter_137.tape_ptr == length(local.iter_137.tape) - 1 ? 0 : local.iter_137.tape_ptr + 1
        : local.iter_137.tape_ptr)

    code_ptr = 1 + (
      local.curr_138.code == "["
        ? local.iter_137.tape[local.iter_137.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_137.code_ptr)] : local.iter_137.code_ptr :
      local.curr_138.code == "]"
        ? local.iter_137.tape[local.iter_137.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_137.code_ptr)] : local.iter_137.code_ptr
        : local.iter_137.code_ptr)

    steps_taken = 1 + local.iter_137.steps_taken
  }
}

locals {
  end_of_code_139 = try(local.iter_138.code_ptr >= length(var.code), true)

  curr_139 = local.end_of_code_139 ? null : {
    code = substr(var.code, local.iter_138.code_ptr, 1)
    input = substr(var.code, local.iter_138.code_ptr, 1) == "," ? substr(local.iter_138.input, 0, 1) : null
  }

  iter_139 = local.end_of_code_139 ? local.iter_138 : {
    input = (local.curr_139.code == ","
      ? substr(local.iter_138.input, 1, -1)
      : local.iter_138.input)

    output = (local.curr_139.code == "."
      ? "${local.iter_138.output}${jsondecode(format("\"\\u%04x\"", local.iter_138.tape[local.iter_138.tape_ptr]))}"
      : local.iter_138.output)
    
    tape = (
      local.curr_139.code == "+"
        ? [for i, b in local.iter_138.tape : (i == local.iter_138.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_139.code == "-"
        ? [for i, b in local.iter_138.tape : (i == local.iter_138.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_139.code == ","
        ? [for i, b in local.iter_138.tape : (i == local.iter_138.tape_ptr ? local.ascii_lookup[local.curr_139.input] : b)]
        : local.iter_138.tape)

    tape_ptr = (
      local.curr_139.code == "<"
        ? local.iter_138.tape_ptr == 0 ? length(local.iter_138.tape) - 1 : local.iter_138.tape_ptr - 1 :
      local.curr_139.code == ">"
        ? local.iter_138.tape_ptr == length(local.iter_138.tape) - 1 ? 0 : local.iter_138.tape_ptr + 1
        : local.iter_138.tape_ptr)

    code_ptr = 1 + (
      local.curr_139.code == "["
        ? local.iter_138.tape[local.iter_138.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_138.code_ptr)] : local.iter_138.code_ptr :
      local.curr_139.code == "]"
        ? local.iter_138.tape[local.iter_138.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_138.code_ptr)] : local.iter_138.code_ptr
        : local.iter_138.code_ptr)

    steps_taken = 1 + local.iter_138.steps_taken
  }
}

locals {
  end_of_code_140 = try(local.iter_139.code_ptr >= length(var.code), true)

  curr_140 = local.end_of_code_140 ? null : {
    code = substr(var.code, local.iter_139.code_ptr, 1)
    input = substr(var.code, local.iter_139.code_ptr, 1) == "," ? substr(local.iter_139.input, 0, 1) : null
  }

  iter_140 = local.end_of_code_140 ? local.iter_139 : {
    input = (local.curr_140.code == ","
      ? substr(local.iter_139.input, 1, -1)
      : local.iter_139.input)

    output = (local.curr_140.code == "."
      ? "${local.iter_139.output}${jsondecode(format("\"\\u%04x\"", local.iter_139.tape[local.iter_139.tape_ptr]))}"
      : local.iter_139.output)
    
    tape = (
      local.curr_140.code == "+"
        ? [for i, b in local.iter_139.tape : (i == local.iter_139.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_140.code == "-"
        ? [for i, b in local.iter_139.tape : (i == local.iter_139.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_140.code == ","
        ? [for i, b in local.iter_139.tape : (i == local.iter_139.tape_ptr ? local.ascii_lookup[local.curr_140.input] : b)]
        : local.iter_139.tape)

    tape_ptr = (
      local.curr_140.code == "<"
        ? local.iter_139.tape_ptr == 0 ? length(local.iter_139.tape) - 1 : local.iter_139.tape_ptr - 1 :
      local.curr_140.code == ">"
        ? local.iter_139.tape_ptr == length(local.iter_139.tape) - 1 ? 0 : local.iter_139.tape_ptr + 1
        : local.iter_139.tape_ptr)

    code_ptr = 1 + (
      local.curr_140.code == "["
        ? local.iter_139.tape[local.iter_139.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_139.code_ptr)] : local.iter_139.code_ptr :
      local.curr_140.code == "]"
        ? local.iter_139.tape[local.iter_139.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_139.code_ptr)] : local.iter_139.code_ptr
        : local.iter_139.code_ptr)

    steps_taken = 1 + local.iter_139.steps_taken
  }
}

locals {
  end_of_code_141 = try(local.iter_140.code_ptr >= length(var.code), true)

  curr_141 = local.end_of_code_141 ? null : {
    code = substr(var.code, local.iter_140.code_ptr, 1)
    input = substr(var.code, local.iter_140.code_ptr, 1) == "," ? substr(local.iter_140.input, 0, 1) : null
  }

  iter_141 = local.end_of_code_141 ? local.iter_140 : {
    input = (local.curr_141.code == ","
      ? substr(local.iter_140.input, 1, -1)
      : local.iter_140.input)

    output = (local.curr_141.code == "."
      ? "${local.iter_140.output}${jsondecode(format("\"\\u%04x\"", local.iter_140.tape[local.iter_140.tape_ptr]))}"
      : local.iter_140.output)
    
    tape = (
      local.curr_141.code == "+"
        ? [for i, b in local.iter_140.tape : (i == local.iter_140.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_141.code == "-"
        ? [for i, b in local.iter_140.tape : (i == local.iter_140.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_141.code == ","
        ? [for i, b in local.iter_140.tape : (i == local.iter_140.tape_ptr ? local.ascii_lookup[local.curr_141.input] : b)]
        : local.iter_140.tape)

    tape_ptr = (
      local.curr_141.code == "<"
        ? local.iter_140.tape_ptr == 0 ? length(local.iter_140.tape) - 1 : local.iter_140.tape_ptr - 1 :
      local.curr_141.code == ">"
        ? local.iter_140.tape_ptr == length(local.iter_140.tape) - 1 ? 0 : local.iter_140.tape_ptr + 1
        : local.iter_140.tape_ptr)

    code_ptr = 1 + (
      local.curr_141.code == "["
        ? local.iter_140.tape[local.iter_140.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_140.code_ptr)] : local.iter_140.code_ptr :
      local.curr_141.code == "]"
        ? local.iter_140.tape[local.iter_140.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_140.code_ptr)] : local.iter_140.code_ptr
        : local.iter_140.code_ptr)

    steps_taken = 1 + local.iter_140.steps_taken
  }
}

locals {
  end_of_code_142 = try(local.iter_141.code_ptr >= length(var.code), true)

  curr_142 = local.end_of_code_142 ? null : {
    code = substr(var.code, local.iter_141.code_ptr, 1)
    input = substr(var.code, local.iter_141.code_ptr, 1) == "," ? substr(local.iter_141.input, 0, 1) : null
  }

  iter_142 = local.end_of_code_142 ? local.iter_141 : {
    input = (local.curr_142.code == ","
      ? substr(local.iter_141.input, 1, -1)
      : local.iter_141.input)

    output = (local.curr_142.code == "."
      ? "${local.iter_141.output}${jsondecode(format("\"\\u%04x\"", local.iter_141.tape[local.iter_141.tape_ptr]))}"
      : local.iter_141.output)
    
    tape = (
      local.curr_142.code == "+"
        ? [for i, b in local.iter_141.tape : (i == local.iter_141.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_142.code == "-"
        ? [for i, b in local.iter_141.tape : (i == local.iter_141.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_142.code == ","
        ? [for i, b in local.iter_141.tape : (i == local.iter_141.tape_ptr ? local.ascii_lookup[local.curr_142.input] : b)]
        : local.iter_141.tape)

    tape_ptr = (
      local.curr_142.code == "<"
        ? local.iter_141.tape_ptr == 0 ? length(local.iter_141.tape) - 1 : local.iter_141.tape_ptr - 1 :
      local.curr_142.code == ">"
        ? local.iter_141.tape_ptr == length(local.iter_141.tape) - 1 ? 0 : local.iter_141.tape_ptr + 1
        : local.iter_141.tape_ptr)

    code_ptr = 1 + (
      local.curr_142.code == "["
        ? local.iter_141.tape[local.iter_141.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_141.code_ptr)] : local.iter_141.code_ptr :
      local.curr_142.code == "]"
        ? local.iter_141.tape[local.iter_141.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_141.code_ptr)] : local.iter_141.code_ptr
        : local.iter_141.code_ptr)

    steps_taken = 1 + local.iter_141.steps_taken
  }
}

locals {
  end_of_code_143 = try(local.iter_142.code_ptr >= length(var.code), true)

  curr_143 = local.end_of_code_143 ? null : {
    code = substr(var.code, local.iter_142.code_ptr, 1)
    input = substr(var.code, local.iter_142.code_ptr, 1) == "," ? substr(local.iter_142.input, 0, 1) : null
  }

  iter_143 = local.end_of_code_143 ? local.iter_142 : {
    input = (local.curr_143.code == ","
      ? substr(local.iter_142.input, 1, -1)
      : local.iter_142.input)

    output = (local.curr_143.code == "."
      ? "${local.iter_142.output}${jsondecode(format("\"\\u%04x\"", local.iter_142.tape[local.iter_142.tape_ptr]))}"
      : local.iter_142.output)
    
    tape = (
      local.curr_143.code == "+"
        ? [for i, b in local.iter_142.tape : (i == local.iter_142.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_143.code == "-"
        ? [for i, b in local.iter_142.tape : (i == local.iter_142.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_143.code == ","
        ? [for i, b in local.iter_142.tape : (i == local.iter_142.tape_ptr ? local.ascii_lookup[local.curr_143.input] : b)]
        : local.iter_142.tape)

    tape_ptr = (
      local.curr_143.code == "<"
        ? local.iter_142.tape_ptr == 0 ? length(local.iter_142.tape) - 1 : local.iter_142.tape_ptr - 1 :
      local.curr_143.code == ">"
        ? local.iter_142.tape_ptr == length(local.iter_142.tape) - 1 ? 0 : local.iter_142.tape_ptr + 1
        : local.iter_142.tape_ptr)

    code_ptr = 1 + (
      local.curr_143.code == "["
        ? local.iter_142.tape[local.iter_142.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_142.code_ptr)] : local.iter_142.code_ptr :
      local.curr_143.code == "]"
        ? local.iter_142.tape[local.iter_142.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_142.code_ptr)] : local.iter_142.code_ptr
        : local.iter_142.code_ptr)

    steps_taken = 1 + local.iter_142.steps_taken
  }
}

locals {
  end_of_code_144 = try(local.iter_143.code_ptr >= length(var.code), true)

  curr_144 = local.end_of_code_144 ? null : {
    code = substr(var.code, local.iter_143.code_ptr, 1)
    input = substr(var.code, local.iter_143.code_ptr, 1) == "," ? substr(local.iter_143.input, 0, 1) : null
  }

  iter_144 = local.end_of_code_144 ? local.iter_143 : {
    input = (local.curr_144.code == ","
      ? substr(local.iter_143.input, 1, -1)
      : local.iter_143.input)

    output = (local.curr_144.code == "."
      ? "${local.iter_143.output}${jsondecode(format("\"\\u%04x\"", local.iter_143.tape[local.iter_143.tape_ptr]))}"
      : local.iter_143.output)
    
    tape = (
      local.curr_144.code == "+"
        ? [for i, b in local.iter_143.tape : (i == local.iter_143.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_144.code == "-"
        ? [for i, b in local.iter_143.tape : (i == local.iter_143.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_144.code == ","
        ? [for i, b in local.iter_143.tape : (i == local.iter_143.tape_ptr ? local.ascii_lookup[local.curr_144.input] : b)]
        : local.iter_143.tape)

    tape_ptr = (
      local.curr_144.code == "<"
        ? local.iter_143.tape_ptr == 0 ? length(local.iter_143.tape) - 1 : local.iter_143.tape_ptr - 1 :
      local.curr_144.code == ">"
        ? local.iter_143.tape_ptr == length(local.iter_143.tape) - 1 ? 0 : local.iter_143.tape_ptr + 1
        : local.iter_143.tape_ptr)

    code_ptr = 1 + (
      local.curr_144.code == "["
        ? local.iter_143.tape[local.iter_143.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_143.code_ptr)] : local.iter_143.code_ptr :
      local.curr_144.code == "]"
        ? local.iter_143.tape[local.iter_143.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_143.code_ptr)] : local.iter_143.code_ptr
        : local.iter_143.code_ptr)

    steps_taken = 1 + local.iter_143.steps_taken
  }
}

locals {
  end_of_code_145 = try(local.iter_144.code_ptr >= length(var.code), true)

  curr_145 = local.end_of_code_145 ? null : {
    code = substr(var.code, local.iter_144.code_ptr, 1)
    input = substr(var.code, local.iter_144.code_ptr, 1) == "," ? substr(local.iter_144.input, 0, 1) : null
  }

  iter_145 = local.end_of_code_145 ? local.iter_144 : {
    input = (local.curr_145.code == ","
      ? substr(local.iter_144.input, 1, -1)
      : local.iter_144.input)

    output = (local.curr_145.code == "."
      ? "${local.iter_144.output}${jsondecode(format("\"\\u%04x\"", local.iter_144.tape[local.iter_144.tape_ptr]))}"
      : local.iter_144.output)
    
    tape = (
      local.curr_145.code == "+"
        ? [for i, b in local.iter_144.tape : (i == local.iter_144.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_145.code == "-"
        ? [for i, b in local.iter_144.tape : (i == local.iter_144.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_145.code == ","
        ? [for i, b in local.iter_144.tape : (i == local.iter_144.tape_ptr ? local.ascii_lookup[local.curr_145.input] : b)]
        : local.iter_144.tape)

    tape_ptr = (
      local.curr_145.code == "<"
        ? local.iter_144.tape_ptr == 0 ? length(local.iter_144.tape) - 1 : local.iter_144.tape_ptr - 1 :
      local.curr_145.code == ">"
        ? local.iter_144.tape_ptr == length(local.iter_144.tape) - 1 ? 0 : local.iter_144.tape_ptr + 1
        : local.iter_144.tape_ptr)

    code_ptr = 1 + (
      local.curr_145.code == "["
        ? local.iter_144.tape[local.iter_144.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_144.code_ptr)] : local.iter_144.code_ptr :
      local.curr_145.code == "]"
        ? local.iter_144.tape[local.iter_144.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_144.code_ptr)] : local.iter_144.code_ptr
        : local.iter_144.code_ptr)

    steps_taken = 1 + local.iter_144.steps_taken
  }
}

locals {
  end_of_code_146 = try(local.iter_145.code_ptr >= length(var.code), true)

  curr_146 = local.end_of_code_146 ? null : {
    code = substr(var.code, local.iter_145.code_ptr, 1)
    input = substr(var.code, local.iter_145.code_ptr, 1) == "," ? substr(local.iter_145.input, 0, 1) : null
  }

  iter_146 = local.end_of_code_146 ? local.iter_145 : {
    input = (local.curr_146.code == ","
      ? substr(local.iter_145.input, 1, -1)
      : local.iter_145.input)

    output = (local.curr_146.code == "."
      ? "${local.iter_145.output}${jsondecode(format("\"\\u%04x\"", local.iter_145.tape[local.iter_145.tape_ptr]))}"
      : local.iter_145.output)
    
    tape = (
      local.curr_146.code == "+"
        ? [for i, b in local.iter_145.tape : (i == local.iter_145.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_146.code == "-"
        ? [for i, b in local.iter_145.tape : (i == local.iter_145.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_146.code == ","
        ? [for i, b in local.iter_145.tape : (i == local.iter_145.tape_ptr ? local.ascii_lookup[local.curr_146.input] : b)]
        : local.iter_145.tape)

    tape_ptr = (
      local.curr_146.code == "<"
        ? local.iter_145.tape_ptr == 0 ? length(local.iter_145.tape) - 1 : local.iter_145.tape_ptr - 1 :
      local.curr_146.code == ">"
        ? local.iter_145.tape_ptr == length(local.iter_145.tape) - 1 ? 0 : local.iter_145.tape_ptr + 1
        : local.iter_145.tape_ptr)

    code_ptr = 1 + (
      local.curr_146.code == "["
        ? local.iter_145.tape[local.iter_145.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_145.code_ptr)] : local.iter_145.code_ptr :
      local.curr_146.code == "]"
        ? local.iter_145.tape[local.iter_145.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_145.code_ptr)] : local.iter_145.code_ptr
        : local.iter_145.code_ptr)

    steps_taken = 1 + local.iter_145.steps_taken
  }
}

locals {
  end_of_code_147 = try(local.iter_146.code_ptr >= length(var.code), true)

  curr_147 = local.end_of_code_147 ? null : {
    code = substr(var.code, local.iter_146.code_ptr, 1)
    input = substr(var.code, local.iter_146.code_ptr, 1) == "," ? substr(local.iter_146.input, 0, 1) : null
  }

  iter_147 = local.end_of_code_147 ? local.iter_146 : {
    input = (local.curr_147.code == ","
      ? substr(local.iter_146.input, 1, -1)
      : local.iter_146.input)

    output = (local.curr_147.code == "."
      ? "${local.iter_146.output}${jsondecode(format("\"\\u%04x\"", local.iter_146.tape[local.iter_146.tape_ptr]))}"
      : local.iter_146.output)
    
    tape = (
      local.curr_147.code == "+"
        ? [for i, b in local.iter_146.tape : (i == local.iter_146.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_147.code == "-"
        ? [for i, b in local.iter_146.tape : (i == local.iter_146.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_147.code == ","
        ? [for i, b in local.iter_146.tape : (i == local.iter_146.tape_ptr ? local.ascii_lookup[local.curr_147.input] : b)]
        : local.iter_146.tape)

    tape_ptr = (
      local.curr_147.code == "<"
        ? local.iter_146.tape_ptr == 0 ? length(local.iter_146.tape) - 1 : local.iter_146.tape_ptr - 1 :
      local.curr_147.code == ">"
        ? local.iter_146.tape_ptr == length(local.iter_146.tape) - 1 ? 0 : local.iter_146.tape_ptr + 1
        : local.iter_146.tape_ptr)

    code_ptr = 1 + (
      local.curr_147.code == "["
        ? local.iter_146.tape[local.iter_146.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_146.code_ptr)] : local.iter_146.code_ptr :
      local.curr_147.code == "]"
        ? local.iter_146.tape[local.iter_146.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_146.code_ptr)] : local.iter_146.code_ptr
        : local.iter_146.code_ptr)

    steps_taken = 1 + local.iter_146.steps_taken
  }
}

locals {
  end_of_code_148 = try(local.iter_147.code_ptr >= length(var.code), true)

  curr_148 = local.end_of_code_148 ? null : {
    code = substr(var.code, local.iter_147.code_ptr, 1)
    input = substr(var.code, local.iter_147.code_ptr, 1) == "," ? substr(local.iter_147.input, 0, 1) : null
  }

  iter_148 = local.end_of_code_148 ? local.iter_147 : {
    input = (local.curr_148.code == ","
      ? substr(local.iter_147.input, 1, -1)
      : local.iter_147.input)

    output = (local.curr_148.code == "."
      ? "${local.iter_147.output}${jsondecode(format("\"\\u%04x\"", local.iter_147.tape[local.iter_147.tape_ptr]))}"
      : local.iter_147.output)
    
    tape = (
      local.curr_148.code == "+"
        ? [for i, b in local.iter_147.tape : (i == local.iter_147.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_148.code == "-"
        ? [for i, b in local.iter_147.tape : (i == local.iter_147.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_148.code == ","
        ? [for i, b in local.iter_147.tape : (i == local.iter_147.tape_ptr ? local.ascii_lookup[local.curr_148.input] : b)]
        : local.iter_147.tape)

    tape_ptr = (
      local.curr_148.code == "<"
        ? local.iter_147.tape_ptr == 0 ? length(local.iter_147.tape) - 1 : local.iter_147.tape_ptr - 1 :
      local.curr_148.code == ">"
        ? local.iter_147.tape_ptr == length(local.iter_147.tape) - 1 ? 0 : local.iter_147.tape_ptr + 1
        : local.iter_147.tape_ptr)

    code_ptr = 1 + (
      local.curr_148.code == "["
        ? local.iter_147.tape[local.iter_147.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_147.code_ptr)] : local.iter_147.code_ptr :
      local.curr_148.code == "]"
        ? local.iter_147.tape[local.iter_147.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_147.code_ptr)] : local.iter_147.code_ptr
        : local.iter_147.code_ptr)

    steps_taken = 1 + local.iter_147.steps_taken
  }
}

locals {
  end_of_code_149 = try(local.iter_148.code_ptr >= length(var.code), true)

  curr_149 = local.end_of_code_149 ? null : {
    code = substr(var.code, local.iter_148.code_ptr, 1)
    input = substr(var.code, local.iter_148.code_ptr, 1) == "," ? substr(local.iter_148.input, 0, 1) : null
  }

  iter_149 = local.end_of_code_149 ? local.iter_148 : {
    input = (local.curr_149.code == ","
      ? substr(local.iter_148.input, 1, -1)
      : local.iter_148.input)

    output = (local.curr_149.code == "."
      ? "${local.iter_148.output}${jsondecode(format("\"\\u%04x\"", local.iter_148.tape[local.iter_148.tape_ptr]))}"
      : local.iter_148.output)
    
    tape = (
      local.curr_149.code == "+"
        ? [for i, b in local.iter_148.tape : (i == local.iter_148.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_149.code == "-"
        ? [for i, b in local.iter_148.tape : (i == local.iter_148.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_149.code == ","
        ? [for i, b in local.iter_148.tape : (i == local.iter_148.tape_ptr ? local.ascii_lookup[local.curr_149.input] : b)]
        : local.iter_148.tape)

    tape_ptr = (
      local.curr_149.code == "<"
        ? local.iter_148.tape_ptr == 0 ? length(local.iter_148.tape) - 1 : local.iter_148.tape_ptr - 1 :
      local.curr_149.code == ">"
        ? local.iter_148.tape_ptr == length(local.iter_148.tape) - 1 ? 0 : local.iter_148.tape_ptr + 1
        : local.iter_148.tape_ptr)

    code_ptr = 1 + (
      local.curr_149.code == "["
        ? local.iter_148.tape[local.iter_148.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_148.code_ptr)] : local.iter_148.code_ptr :
      local.curr_149.code == "]"
        ? local.iter_148.tape[local.iter_148.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_148.code_ptr)] : local.iter_148.code_ptr
        : local.iter_148.code_ptr)

    steps_taken = 1 + local.iter_148.steps_taken
  }
}

locals {
  end_of_code_150 = try(local.iter_149.code_ptr >= length(var.code), true)

  curr_150 = local.end_of_code_150 ? null : {
    code = substr(var.code, local.iter_149.code_ptr, 1)
    input = substr(var.code, local.iter_149.code_ptr, 1) == "," ? substr(local.iter_149.input, 0, 1) : null
  }

  iter_150 = local.end_of_code_150 ? local.iter_149 : {
    input = (local.curr_150.code == ","
      ? substr(local.iter_149.input, 1, -1)
      : local.iter_149.input)

    output = (local.curr_150.code == "."
      ? "${local.iter_149.output}${jsondecode(format("\"\\u%04x\"", local.iter_149.tape[local.iter_149.tape_ptr]))}"
      : local.iter_149.output)
    
    tape = (
      local.curr_150.code == "+"
        ? [for i, b in local.iter_149.tape : (i == local.iter_149.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_150.code == "-"
        ? [for i, b in local.iter_149.tape : (i == local.iter_149.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_150.code == ","
        ? [for i, b in local.iter_149.tape : (i == local.iter_149.tape_ptr ? local.ascii_lookup[local.curr_150.input] : b)]
        : local.iter_149.tape)

    tape_ptr = (
      local.curr_150.code == "<"
        ? local.iter_149.tape_ptr == 0 ? length(local.iter_149.tape) - 1 : local.iter_149.tape_ptr - 1 :
      local.curr_150.code == ">"
        ? local.iter_149.tape_ptr == length(local.iter_149.tape) - 1 ? 0 : local.iter_149.tape_ptr + 1
        : local.iter_149.tape_ptr)

    code_ptr = 1 + (
      local.curr_150.code == "["
        ? local.iter_149.tape[local.iter_149.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_149.code_ptr)] : local.iter_149.code_ptr :
      local.curr_150.code == "]"
        ? local.iter_149.tape[local.iter_149.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_149.code_ptr)] : local.iter_149.code_ptr
        : local.iter_149.code_ptr)

    steps_taken = 1 + local.iter_149.steps_taken
  }
}

locals {
  end_of_code_151 = try(local.iter_150.code_ptr >= length(var.code), true)

  curr_151 = local.end_of_code_151 ? null : {
    code = substr(var.code, local.iter_150.code_ptr, 1)
    input = substr(var.code, local.iter_150.code_ptr, 1) == "," ? substr(local.iter_150.input, 0, 1) : null
  }

  iter_151 = local.end_of_code_151 ? local.iter_150 : {
    input = (local.curr_151.code == ","
      ? substr(local.iter_150.input, 1, -1)
      : local.iter_150.input)

    output = (local.curr_151.code == "."
      ? "${local.iter_150.output}${jsondecode(format("\"\\u%04x\"", local.iter_150.tape[local.iter_150.tape_ptr]))}"
      : local.iter_150.output)
    
    tape = (
      local.curr_151.code == "+"
        ? [for i, b in local.iter_150.tape : (i == local.iter_150.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_151.code == "-"
        ? [for i, b in local.iter_150.tape : (i == local.iter_150.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_151.code == ","
        ? [for i, b in local.iter_150.tape : (i == local.iter_150.tape_ptr ? local.ascii_lookup[local.curr_151.input] : b)]
        : local.iter_150.tape)

    tape_ptr = (
      local.curr_151.code == "<"
        ? local.iter_150.tape_ptr == 0 ? length(local.iter_150.tape) - 1 : local.iter_150.tape_ptr - 1 :
      local.curr_151.code == ">"
        ? local.iter_150.tape_ptr == length(local.iter_150.tape) - 1 ? 0 : local.iter_150.tape_ptr + 1
        : local.iter_150.tape_ptr)

    code_ptr = 1 + (
      local.curr_151.code == "["
        ? local.iter_150.tape[local.iter_150.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_150.code_ptr)] : local.iter_150.code_ptr :
      local.curr_151.code == "]"
        ? local.iter_150.tape[local.iter_150.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_150.code_ptr)] : local.iter_150.code_ptr
        : local.iter_150.code_ptr)

    steps_taken = 1 + local.iter_150.steps_taken
  }
}

locals {
  end_of_code_152 = try(local.iter_151.code_ptr >= length(var.code), true)

  curr_152 = local.end_of_code_152 ? null : {
    code = substr(var.code, local.iter_151.code_ptr, 1)
    input = substr(var.code, local.iter_151.code_ptr, 1) == "," ? substr(local.iter_151.input, 0, 1) : null
  }

  iter_152 = local.end_of_code_152 ? local.iter_151 : {
    input = (local.curr_152.code == ","
      ? substr(local.iter_151.input, 1, -1)
      : local.iter_151.input)

    output = (local.curr_152.code == "."
      ? "${local.iter_151.output}${jsondecode(format("\"\\u%04x\"", local.iter_151.tape[local.iter_151.tape_ptr]))}"
      : local.iter_151.output)
    
    tape = (
      local.curr_152.code == "+"
        ? [for i, b in local.iter_151.tape : (i == local.iter_151.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_152.code == "-"
        ? [for i, b in local.iter_151.tape : (i == local.iter_151.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_152.code == ","
        ? [for i, b in local.iter_151.tape : (i == local.iter_151.tape_ptr ? local.ascii_lookup[local.curr_152.input] : b)]
        : local.iter_151.tape)

    tape_ptr = (
      local.curr_152.code == "<"
        ? local.iter_151.tape_ptr == 0 ? length(local.iter_151.tape) - 1 : local.iter_151.tape_ptr - 1 :
      local.curr_152.code == ">"
        ? local.iter_151.tape_ptr == length(local.iter_151.tape) - 1 ? 0 : local.iter_151.tape_ptr + 1
        : local.iter_151.tape_ptr)

    code_ptr = 1 + (
      local.curr_152.code == "["
        ? local.iter_151.tape[local.iter_151.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_151.code_ptr)] : local.iter_151.code_ptr :
      local.curr_152.code == "]"
        ? local.iter_151.tape[local.iter_151.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_151.code_ptr)] : local.iter_151.code_ptr
        : local.iter_151.code_ptr)

    steps_taken = 1 + local.iter_151.steps_taken
  }
}

locals {
  end_of_code_153 = try(local.iter_152.code_ptr >= length(var.code), true)

  curr_153 = local.end_of_code_153 ? null : {
    code = substr(var.code, local.iter_152.code_ptr, 1)
    input = substr(var.code, local.iter_152.code_ptr, 1) == "," ? substr(local.iter_152.input, 0, 1) : null
  }

  iter_153 = local.end_of_code_153 ? local.iter_152 : {
    input = (local.curr_153.code == ","
      ? substr(local.iter_152.input, 1, -1)
      : local.iter_152.input)

    output = (local.curr_153.code == "."
      ? "${local.iter_152.output}${jsondecode(format("\"\\u%04x\"", local.iter_152.tape[local.iter_152.tape_ptr]))}"
      : local.iter_152.output)
    
    tape = (
      local.curr_153.code == "+"
        ? [for i, b in local.iter_152.tape : (i == local.iter_152.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_153.code == "-"
        ? [for i, b in local.iter_152.tape : (i == local.iter_152.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_153.code == ","
        ? [for i, b in local.iter_152.tape : (i == local.iter_152.tape_ptr ? local.ascii_lookup[local.curr_153.input] : b)]
        : local.iter_152.tape)

    tape_ptr = (
      local.curr_153.code == "<"
        ? local.iter_152.tape_ptr == 0 ? length(local.iter_152.tape) - 1 : local.iter_152.tape_ptr - 1 :
      local.curr_153.code == ">"
        ? local.iter_152.tape_ptr == length(local.iter_152.tape) - 1 ? 0 : local.iter_152.tape_ptr + 1
        : local.iter_152.tape_ptr)

    code_ptr = 1 + (
      local.curr_153.code == "["
        ? local.iter_152.tape[local.iter_152.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_152.code_ptr)] : local.iter_152.code_ptr :
      local.curr_153.code == "]"
        ? local.iter_152.tape[local.iter_152.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_152.code_ptr)] : local.iter_152.code_ptr
        : local.iter_152.code_ptr)

    steps_taken = 1 + local.iter_152.steps_taken
  }
}

locals {
  end_of_code_154 = try(local.iter_153.code_ptr >= length(var.code), true)

  curr_154 = local.end_of_code_154 ? null : {
    code = substr(var.code, local.iter_153.code_ptr, 1)
    input = substr(var.code, local.iter_153.code_ptr, 1) == "," ? substr(local.iter_153.input, 0, 1) : null
  }

  iter_154 = local.end_of_code_154 ? local.iter_153 : {
    input = (local.curr_154.code == ","
      ? substr(local.iter_153.input, 1, -1)
      : local.iter_153.input)

    output = (local.curr_154.code == "."
      ? "${local.iter_153.output}${jsondecode(format("\"\\u%04x\"", local.iter_153.tape[local.iter_153.tape_ptr]))}"
      : local.iter_153.output)
    
    tape = (
      local.curr_154.code == "+"
        ? [for i, b in local.iter_153.tape : (i == local.iter_153.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_154.code == "-"
        ? [for i, b in local.iter_153.tape : (i == local.iter_153.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_154.code == ","
        ? [for i, b in local.iter_153.tape : (i == local.iter_153.tape_ptr ? local.ascii_lookup[local.curr_154.input] : b)]
        : local.iter_153.tape)

    tape_ptr = (
      local.curr_154.code == "<"
        ? local.iter_153.tape_ptr == 0 ? length(local.iter_153.tape) - 1 : local.iter_153.tape_ptr - 1 :
      local.curr_154.code == ">"
        ? local.iter_153.tape_ptr == length(local.iter_153.tape) - 1 ? 0 : local.iter_153.tape_ptr + 1
        : local.iter_153.tape_ptr)

    code_ptr = 1 + (
      local.curr_154.code == "["
        ? local.iter_153.tape[local.iter_153.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_153.code_ptr)] : local.iter_153.code_ptr :
      local.curr_154.code == "]"
        ? local.iter_153.tape[local.iter_153.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_153.code_ptr)] : local.iter_153.code_ptr
        : local.iter_153.code_ptr)

    steps_taken = 1 + local.iter_153.steps_taken
  }
}

locals {
  end_of_code_155 = try(local.iter_154.code_ptr >= length(var.code), true)

  curr_155 = local.end_of_code_155 ? null : {
    code = substr(var.code, local.iter_154.code_ptr, 1)
    input = substr(var.code, local.iter_154.code_ptr, 1) == "," ? substr(local.iter_154.input, 0, 1) : null
  }

  iter_155 = local.end_of_code_155 ? local.iter_154 : {
    input = (local.curr_155.code == ","
      ? substr(local.iter_154.input, 1, -1)
      : local.iter_154.input)

    output = (local.curr_155.code == "."
      ? "${local.iter_154.output}${jsondecode(format("\"\\u%04x\"", local.iter_154.tape[local.iter_154.tape_ptr]))}"
      : local.iter_154.output)
    
    tape = (
      local.curr_155.code == "+"
        ? [for i, b in local.iter_154.tape : (i == local.iter_154.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_155.code == "-"
        ? [for i, b in local.iter_154.tape : (i == local.iter_154.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_155.code == ","
        ? [for i, b in local.iter_154.tape : (i == local.iter_154.tape_ptr ? local.ascii_lookup[local.curr_155.input] : b)]
        : local.iter_154.tape)

    tape_ptr = (
      local.curr_155.code == "<"
        ? local.iter_154.tape_ptr == 0 ? length(local.iter_154.tape) - 1 : local.iter_154.tape_ptr - 1 :
      local.curr_155.code == ">"
        ? local.iter_154.tape_ptr == length(local.iter_154.tape) - 1 ? 0 : local.iter_154.tape_ptr + 1
        : local.iter_154.tape_ptr)

    code_ptr = 1 + (
      local.curr_155.code == "["
        ? local.iter_154.tape[local.iter_154.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_154.code_ptr)] : local.iter_154.code_ptr :
      local.curr_155.code == "]"
        ? local.iter_154.tape[local.iter_154.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_154.code_ptr)] : local.iter_154.code_ptr
        : local.iter_154.code_ptr)

    steps_taken = 1 + local.iter_154.steps_taken
  }
}

locals {
  end_of_code_156 = try(local.iter_155.code_ptr >= length(var.code), true)

  curr_156 = local.end_of_code_156 ? null : {
    code = substr(var.code, local.iter_155.code_ptr, 1)
    input = substr(var.code, local.iter_155.code_ptr, 1) == "," ? substr(local.iter_155.input, 0, 1) : null
  }

  iter_156 = local.end_of_code_156 ? local.iter_155 : {
    input = (local.curr_156.code == ","
      ? substr(local.iter_155.input, 1, -1)
      : local.iter_155.input)

    output = (local.curr_156.code == "."
      ? "${local.iter_155.output}${jsondecode(format("\"\\u%04x\"", local.iter_155.tape[local.iter_155.tape_ptr]))}"
      : local.iter_155.output)
    
    tape = (
      local.curr_156.code == "+"
        ? [for i, b in local.iter_155.tape : (i == local.iter_155.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_156.code == "-"
        ? [for i, b in local.iter_155.tape : (i == local.iter_155.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_156.code == ","
        ? [for i, b in local.iter_155.tape : (i == local.iter_155.tape_ptr ? local.ascii_lookup[local.curr_156.input] : b)]
        : local.iter_155.tape)

    tape_ptr = (
      local.curr_156.code == "<"
        ? local.iter_155.tape_ptr == 0 ? length(local.iter_155.tape) - 1 : local.iter_155.tape_ptr - 1 :
      local.curr_156.code == ">"
        ? local.iter_155.tape_ptr == length(local.iter_155.tape) - 1 ? 0 : local.iter_155.tape_ptr + 1
        : local.iter_155.tape_ptr)

    code_ptr = 1 + (
      local.curr_156.code == "["
        ? local.iter_155.tape[local.iter_155.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_155.code_ptr)] : local.iter_155.code_ptr :
      local.curr_156.code == "]"
        ? local.iter_155.tape[local.iter_155.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_155.code_ptr)] : local.iter_155.code_ptr
        : local.iter_155.code_ptr)

    steps_taken = 1 + local.iter_155.steps_taken
  }
}

locals {
  end_of_code_157 = try(local.iter_156.code_ptr >= length(var.code), true)

  curr_157 = local.end_of_code_157 ? null : {
    code = substr(var.code, local.iter_156.code_ptr, 1)
    input = substr(var.code, local.iter_156.code_ptr, 1) == "," ? substr(local.iter_156.input, 0, 1) : null
  }

  iter_157 = local.end_of_code_157 ? local.iter_156 : {
    input = (local.curr_157.code == ","
      ? substr(local.iter_156.input, 1, -1)
      : local.iter_156.input)

    output = (local.curr_157.code == "."
      ? "${local.iter_156.output}${jsondecode(format("\"\\u%04x\"", local.iter_156.tape[local.iter_156.tape_ptr]))}"
      : local.iter_156.output)
    
    tape = (
      local.curr_157.code == "+"
        ? [for i, b in local.iter_156.tape : (i == local.iter_156.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_157.code == "-"
        ? [for i, b in local.iter_156.tape : (i == local.iter_156.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_157.code == ","
        ? [for i, b in local.iter_156.tape : (i == local.iter_156.tape_ptr ? local.ascii_lookup[local.curr_157.input] : b)]
        : local.iter_156.tape)

    tape_ptr = (
      local.curr_157.code == "<"
        ? local.iter_156.tape_ptr == 0 ? length(local.iter_156.tape) - 1 : local.iter_156.tape_ptr - 1 :
      local.curr_157.code == ">"
        ? local.iter_156.tape_ptr == length(local.iter_156.tape) - 1 ? 0 : local.iter_156.tape_ptr + 1
        : local.iter_156.tape_ptr)

    code_ptr = 1 + (
      local.curr_157.code == "["
        ? local.iter_156.tape[local.iter_156.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_156.code_ptr)] : local.iter_156.code_ptr :
      local.curr_157.code == "]"
        ? local.iter_156.tape[local.iter_156.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_156.code_ptr)] : local.iter_156.code_ptr
        : local.iter_156.code_ptr)

    steps_taken = 1 + local.iter_156.steps_taken
  }
}

locals {
  end_of_code_158 = try(local.iter_157.code_ptr >= length(var.code), true)

  curr_158 = local.end_of_code_158 ? null : {
    code = substr(var.code, local.iter_157.code_ptr, 1)
    input = substr(var.code, local.iter_157.code_ptr, 1) == "," ? substr(local.iter_157.input, 0, 1) : null
  }

  iter_158 = local.end_of_code_158 ? local.iter_157 : {
    input = (local.curr_158.code == ","
      ? substr(local.iter_157.input, 1, -1)
      : local.iter_157.input)

    output = (local.curr_158.code == "."
      ? "${local.iter_157.output}${jsondecode(format("\"\\u%04x\"", local.iter_157.tape[local.iter_157.tape_ptr]))}"
      : local.iter_157.output)
    
    tape = (
      local.curr_158.code == "+"
        ? [for i, b in local.iter_157.tape : (i == local.iter_157.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_158.code == "-"
        ? [for i, b in local.iter_157.tape : (i == local.iter_157.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_158.code == ","
        ? [for i, b in local.iter_157.tape : (i == local.iter_157.tape_ptr ? local.ascii_lookup[local.curr_158.input] : b)]
        : local.iter_157.tape)

    tape_ptr = (
      local.curr_158.code == "<"
        ? local.iter_157.tape_ptr == 0 ? length(local.iter_157.tape) - 1 : local.iter_157.tape_ptr - 1 :
      local.curr_158.code == ">"
        ? local.iter_157.tape_ptr == length(local.iter_157.tape) - 1 ? 0 : local.iter_157.tape_ptr + 1
        : local.iter_157.tape_ptr)

    code_ptr = 1 + (
      local.curr_158.code == "["
        ? local.iter_157.tape[local.iter_157.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_157.code_ptr)] : local.iter_157.code_ptr :
      local.curr_158.code == "]"
        ? local.iter_157.tape[local.iter_157.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_157.code_ptr)] : local.iter_157.code_ptr
        : local.iter_157.code_ptr)

    steps_taken = 1 + local.iter_157.steps_taken
  }
}

locals {
  end_of_code_159 = try(local.iter_158.code_ptr >= length(var.code), true)

  curr_159 = local.end_of_code_159 ? null : {
    code = substr(var.code, local.iter_158.code_ptr, 1)
    input = substr(var.code, local.iter_158.code_ptr, 1) == "," ? substr(local.iter_158.input, 0, 1) : null
  }

  iter_159 = local.end_of_code_159 ? local.iter_158 : {
    input = (local.curr_159.code == ","
      ? substr(local.iter_158.input, 1, -1)
      : local.iter_158.input)

    output = (local.curr_159.code == "."
      ? "${local.iter_158.output}${jsondecode(format("\"\\u%04x\"", local.iter_158.tape[local.iter_158.tape_ptr]))}"
      : local.iter_158.output)
    
    tape = (
      local.curr_159.code == "+"
        ? [for i, b in local.iter_158.tape : (i == local.iter_158.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_159.code == "-"
        ? [for i, b in local.iter_158.tape : (i == local.iter_158.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_159.code == ","
        ? [for i, b in local.iter_158.tape : (i == local.iter_158.tape_ptr ? local.ascii_lookup[local.curr_159.input] : b)]
        : local.iter_158.tape)

    tape_ptr = (
      local.curr_159.code == "<"
        ? local.iter_158.tape_ptr == 0 ? length(local.iter_158.tape) - 1 : local.iter_158.tape_ptr - 1 :
      local.curr_159.code == ">"
        ? local.iter_158.tape_ptr == length(local.iter_158.tape) - 1 ? 0 : local.iter_158.tape_ptr + 1
        : local.iter_158.tape_ptr)

    code_ptr = 1 + (
      local.curr_159.code == "["
        ? local.iter_158.tape[local.iter_158.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_158.code_ptr)] : local.iter_158.code_ptr :
      local.curr_159.code == "]"
        ? local.iter_158.tape[local.iter_158.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_158.code_ptr)] : local.iter_158.code_ptr
        : local.iter_158.code_ptr)

    steps_taken = 1 + local.iter_158.steps_taken
  }
}

locals {
  end_of_code_160 = try(local.iter_159.code_ptr >= length(var.code), true)

  curr_160 = local.end_of_code_160 ? null : {
    code = substr(var.code, local.iter_159.code_ptr, 1)
    input = substr(var.code, local.iter_159.code_ptr, 1) == "," ? substr(local.iter_159.input, 0, 1) : null
  }

  iter_160 = local.end_of_code_160 ? local.iter_159 : {
    input = (local.curr_160.code == ","
      ? substr(local.iter_159.input, 1, -1)
      : local.iter_159.input)

    output = (local.curr_160.code == "."
      ? "${local.iter_159.output}${jsondecode(format("\"\\u%04x\"", local.iter_159.tape[local.iter_159.tape_ptr]))}"
      : local.iter_159.output)
    
    tape = (
      local.curr_160.code == "+"
        ? [for i, b in local.iter_159.tape : (i == local.iter_159.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_160.code == "-"
        ? [for i, b in local.iter_159.tape : (i == local.iter_159.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_160.code == ","
        ? [for i, b in local.iter_159.tape : (i == local.iter_159.tape_ptr ? local.ascii_lookup[local.curr_160.input] : b)]
        : local.iter_159.tape)

    tape_ptr = (
      local.curr_160.code == "<"
        ? local.iter_159.tape_ptr == 0 ? length(local.iter_159.tape) - 1 : local.iter_159.tape_ptr - 1 :
      local.curr_160.code == ">"
        ? local.iter_159.tape_ptr == length(local.iter_159.tape) - 1 ? 0 : local.iter_159.tape_ptr + 1
        : local.iter_159.tape_ptr)

    code_ptr = 1 + (
      local.curr_160.code == "["
        ? local.iter_159.tape[local.iter_159.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_159.code_ptr)] : local.iter_159.code_ptr :
      local.curr_160.code == "]"
        ? local.iter_159.tape[local.iter_159.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_159.code_ptr)] : local.iter_159.code_ptr
        : local.iter_159.code_ptr)

    steps_taken = 1 + local.iter_159.steps_taken
  }
}

locals {
  end_of_code_161 = try(local.iter_160.code_ptr >= length(var.code), true)

  curr_161 = local.end_of_code_161 ? null : {
    code = substr(var.code, local.iter_160.code_ptr, 1)
    input = substr(var.code, local.iter_160.code_ptr, 1) == "," ? substr(local.iter_160.input, 0, 1) : null
  }

  iter_161 = local.end_of_code_161 ? local.iter_160 : {
    input = (local.curr_161.code == ","
      ? substr(local.iter_160.input, 1, -1)
      : local.iter_160.input)

    output = (local.curr_161.code == "."
      ? "${local.iter_160.output}${jsondecode(format("\"\\u%04x\"", local.iter_160.tape[local.iter_160.tape_ptr]))}"
      : local.iter_160.output)
    
    tape = (
      local.curr_161.code == "+"
        ? [for i, b in local.iter_160.tape : (i == local.iter_160.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_161.code == "-"
        ? [for i, b in local.iter_160.tape : (i == local.iter_160.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_161.code == ","
        ? [for i, b in local.iter_160.tape : (i == local.iter_160.tape_ptr ? local.ascii_lookup[local.curr_161.input] : b)]
        : local.iter_160.tape)

    tape_ptr = (
      local.curr_161.code == "<"
        ? local.iter_160.tape_ptr == 0 ? length(local.iter_160.tape) - 1 : local.iter_160.tape_ptr - 1 :
      local.curr_161.code == ">"
        ? local.iter_160.tape_ptr == length(local.iter_160.tape) - 1 ? 0 : local.iter_160.tape_ptr + 1
        : local.iter_160.tape_ptr)

    code_ptr = 1 + (
      local.curr_161.code == "["
        ? local.iter_160.tape[local.iter_160.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_160.code_ptr)] : local.iter_160.code_ptr :
      local.curr_161.code == "]"
        ? local.iter_160.tape[local.iter_160.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_160.code_ptr)] : local.iter_160.code_ptr
        : local.iter_160.code_ptr)

    steps_taken = 1 + local.iter_160.steps_taken
  }
}

locals {
  end_of_code_162 = try(local.iter_161.code_ptr >= length(var.code), true)

  curr_162 = local.end_of_code_162 ? null : {
    code = substr(var.code, local.iter_161.code_ptr, 1)
    input = substr(var.code, local.iter_161.code_ptr, 1) == "," ? substr(local.iter_161.input, 0, 1) : null
  }

  iter_162 = local.end_of_code_162 ? local.iter_161 : {
    input = (local.curr_162.code == ","
      ? substr(local.iter_161.input, 1, -1)
      : local.iter_161.input)

    output = (local.curr_162.code == "."
      ? "${local.iter_161.output}${jsondecode(format("\"\\u%04x\"", local.iter_161.tape[local.iter_161.tape_ptr]))}"
      : local.iter_161.output)
    
    tape = (
      local.curr_162.code == "+"
        ? [for i, b in local.iter_161.tape : (i == local.iter_161.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_162.code == "-"
        ? [for i, b in local.iter_161.tape : (i == local.iter_161.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_162.code == ","
        ? [for i, b in local.iter_161.tape : (i == local.iter_161.tape_ptr ? local.ascii_lookup[local.curr_162.input] : b)]
        : local.iter_161.tape)

    tape_ptr = (
      local.curr_162.code == "<"
        ? local.iter_161.tape_ptr == 0 ? length(local.iter_161.tape) - 1 : local.iter_161.tape_ptr - 1 :
      local.curr_162.code == ">"
        ? local.iter_161.tape_ptr == length(local.iter_161.tape) - 1 ? 0 : local.iter_161.tape_ptr + 1
        : local.iter_161.tape_ptr)

    code_ptr = 1 + (
      local.curr_162.code == "["
        ? local.iter_161.tape[local.iter_161.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_161.code_ptr)] : local.iter_161.code_ptr :
      local.curr_162.code == "]"
        ? local.iter_161.tape[local.iter_161.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_161.code_ptr)] : local.iter_161.code_ptr
        : local.iter_161.code_ptr)

    steps_taken = 1 + local.iter_161.steps_taken
  }
}

locals {
  end_of_code_163 = try(local.iter_162.code_ptr >= length(var.code), true)

  curr_163 = local.end_of_code_163 ? null : {
    code = substr(var.code, local.iter_162.code_ptr, 1)
    input = substr(var.code, local.iter_162.code_ptr, 1) == "," ? substr(local.iter_162.input, 0, 1) : null
  }

  iter_163 = local.end_of_code_163 ? local.iter_162 : {
    input = (local.curr_163.code == ","
      ? substr(local.iter_162.input, 1, -1)
      : local.iter_162.input)

    output = (local.curr_163.code == "."
      ? "${local.iter_162.output}${jsondecode(format("\"\\u%04x\"", local.iter_162.tape[local.iter_162.tape_ptr]))}"
      : local.iter_162.output)
    
    tape = (
      local.curr_163.code == "+"
        ? [for i, b in local.iter_162.tape : (i == local.iter_162.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_163.code == "-"
        ? [for i, b in local.iter_162.tape : (i == local.iter_162.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_163.code == ","
        ? [for i, b in local.iter_162.tape : (i == local.iter_162.tape_ptr ? local.ascii_lookup[local.curr_163.input] : b)]
        : local.iter_162.tape)

    tape_ptr = (
      local.curr_163.code == "<"
        ? local.iter_162.tape_ptr == 0 ? length(local.iter_162.tape) - 1 : local.iter_162.tape_ptr - 1 :
      local.curr_163.code == ">"
        ? local.iter_162.tape_ptr == length(local.iter_162.tape) - 1 ? 0 : local.iter_162.tape_ptr + 1
        : local.iter_162.tape_ptr)

    code_ptr = 1 + (
      local.curr_163.code == "["
        ? local.iter_162.tape[local.iter_162.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_162.code_ptr)] : local.iter_162.code_ptr :
      local.curr_163.code == "]"
        ? local.iter_162.tape[local.iter_162.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_162.code_ptr)] : local.iter_162.code_ptr
        : local.iter_162.code_ptr)

    steps_taken = 1 + local.iter_162.steps_taken
  }
}

locals {
  end_of_code_164 = try(local.iter_163.code_ptr >= length(var.code), true)

  curr_164 = local.end_of_code_164 ? null : {
    code = substr(var.code, local.iter_163.code_ptr, 1)
    input = substr(var.code, local.iter_163.code_ptr, 1) == "," ? substr(local.iter_163.input, 0, 1) : null
  }

  iter_164 = local.end_of_code_164 ? local.iter_163 : {
    input = (local.curr_164.code == ","
      ? substr(local.iter_163.input, 1, -1)
      : local.iter_163.input)

    output = (local.curr_164.code == "."
      ? "${local.iter_163.output}${jsondecode(format("\"\\u%04x\"", local.iter_163.tape[local.iter_163.tape_ptr]))}"
      : local.iter_163.output)
    
    tape = (
      local.curr_164.code == "+"
        ? [for i, b in local.iter_163.tape : (i == local.iter_163.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_164.code == "-"
        ? [for i, b in local.iter_163.tape : (i == local.iter_163.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_164.code == ","
        ? [for i, b in local.iter_163.tape : (i == local.iter_163.tape_ptr ? local.ascii_lookup[local.curr_164.input] : b)]
        : local.iter_163.tape)

    tape_ptr = (
      local.curr_164.code == "<"
        ? local.iter_163.tape_ptr == 0 ? length(local.iter_163.tape) - 1 : local.iter_163.tape_ptr - 1 :
      local.curr_164.code == ">"
        ? local.iter_163.tape_ptr == length(local.iter_163.tape) - 1 ? 0 : local.iter_163.tape_ptr + 1
        : local.iter_163.tape_ptr)

    code_ptr = 1 + (
      local.curr_164.code == "["
        ? local.iter_163.tape[local.iter_163.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_163.code_ptr)] : local.iter_163.code_ptr :
      local.curr_164.code == "]"
        ? local.iter_163.tape[local.iter_163.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_163.code_ptr)] : local.iter_163.code_ptr
        : local.iter_163.code_ptr)

    steps_taken = 1 + local.iter_163.steps_taken
  }
}

locals {
  end_of_code_165 = try(local.iter_164.code_ptr >= length(var.code), true)

  curr_165 = local.end_of_code_165 ? null : {
    code = substr(var.code, local.iter_164.code_ptr, 1)
    input = substr(var.code, local.iter_164.code_ptr, 1) == "," ? substr(local.iter_164.input, 0, 1) : null
  }

  iter_165 = local.end_of_code_165 ? local.iter_164 : {
    input = (local.curr_165.code == ","
      ? substr(local.iter_164.input, 1, -1)
      : local.iter_164.input)

    output = (local.curr_165.code == "."
      ? "${local.iter_164.output}${jsondecode(format("\"\\u%04x\"", local.iter_164.tape[local.iter_164.tape_ptr]))}"
      : local.iter_164.output)
    
    tape = (
      local.curr_165.code == "+"
        ? [for i, b in local.iter_164.tape : (i == local.iter_164.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_165.code == "-"
        ? [for i, b in local.iter_164.tape : (i == local.iter_164.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_165.code == ","
        ? [for i, b in local.iter_164.tape : (i == local.iter_164.tape_ptr ? local.ascii_lookup[local.curr_165.input] : b)]
        : local.iter_164.tape)

    tape_ptr = (
      local.curr_165.code == "<"
        ? local.iter_164.tape_ptr == 0 ? length(local.iter_164.tape) - 1 : local.iter_164.tape_ptr - 1 :
      local.curr_165.code == ">"
        ? local.iter_164.tape_ptr == length(local.iter_164.tape) - 1 ? 0 : local.iter_164.tape_ptr + 1
        : local.iter_164.tape_ptr)

    code_ptr = 1 + (
      local.curr_165.code == "["
        ? local.iter_164.tape[local.iter_164.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_164.code_ptr)] : local.iter_164.code_ptr :
      local.curr_165.code == "]"
        ? local.iter_164.tape[local.iter_164.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_164.code_ptr)] : local.iter_164.code_ptr
        : local.iter_164.code_ptr)

    steps_taken = 1 + local.iter_164.steps_taken
  }
}

locals {
  end_of_code_166 = try(local.iter_165.code_ptr >= length(var.code), true)

  curr_166 = local.end_of_code_166 ? null : {
    code = substr(var.code, local.iter_165.code_ptr, 1)
    input = substr(var.code, local.iter_165.code_ptr, 1) == "," ? substr(local.iter_165.input, 0, 1) : null
  }

  iter_166 = local.end_of_code_166 ? local.iter_165 : {
    input = (local.curr_166.code == ","
      ? substr(local.iter_165.input, 1, -1)
      : local.iter_165.input)

    output = (local.curr_166.code == "."
      ? "${local.iter_165.output}${jsondecode(format("\"\\u%04x\"", local.iter_165.tape[local.iter_165.tape_ptr]))}"
      : local.iter_165.output)
    
    tape = (
      local.curr_166.code == "+"
        ? [for i, b in local.iter_165.tape : (i == local.iter_165.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_166.code == "-"
        ? [for i, b in local.iter_165.tape : (i == local.iter_165.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_166.code == ","
        ? [for i, b in local.iter_165.tape : (i == local.iter_165.tape_ptr ? local.ascii_lookup[local.curr_166.input] : b)]
        : local.iter_165.tape)

    tape_ptr = (
      local.curr_166.code == "<"
        ? local.iter_165.tape_ptr == 0 ? length(local.iter_165.tape) - 1 : local.iter_165.tape_ptr - 1 :
      local.curr_166.code == ">"
        ? local.iter_165.tape_ptr == length(local.iter_165.tape) - 1 ? 0 : local.iter_165.tape_ptr + 1
        : local.iter_165.tape_ptr)

    code_ptr = 1 + (
      local.curr_166.code == "["
        ? local.iter_165.tape[local.iter_165.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_165.code_ptr)] : local.iter_165.code_ptr :
      local.curr_166.code == "]"
        ? local.iter_165.tape[local.iter_165.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_165.code_ptr)] : local.iter_165.code_ptr
        : local.iter_165.code_ptr)

    steps_taken = 1 + local.iter_165.steps_taken
  }
}

locals {
  end_of_code_167 = try(local.iter_166.code_ptr >= length(var.code), true)

  curr_167 = local.end_of_code_167 ? null : {
    code = substr(var.code, local.iter_166.code_ptr, 1)
    input = substr(var.code, local.iter_166.code_ptr, 1) == "," ? substr(local.iter_166.input, 0, 1) : null
  }

  iter_167 = local.end_of_code_167 ? local.iter_166 : {
    input = (local.curr_167.code == ","
      ? substr(local.iter_166.input, 1, -1)
      : local.iter_166.input)

    output = (local.curr_167.code == "."
      ? "${local.iter_166.output}${jsondecode(format("\"\\u%04x\"", local.iter_166.tape[local.iter_166.tape_ptr]))}"
      : local.iter_166.output)
    
    tape = (
      local.curr_167.code == "+"
        ? [for i, b in local.iter_166.tape : (i == local.iter_166.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_167.code == "-"
        ? [for i, b in local.iter_166.tape : (i == local.iter_166.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_167.code == ","
        ? [for i, b in local.iter_166.tape : (i == local.iter_166.tape_ptr ? local.ascii_lookup[local.curr_167.input] : b)]
        : local.iter_166.tape)

    tape_ptr = (
      local.curr_167.code == "<"
        ? local.iter_166.tape_ptr == 0 ? length(local.iter_166.tape) - 1 : local.iter_166.tape_ptr - 1 :
      local.curr_167.code == ">"
        ? local.iter_166.tape_ptr == length(local.iter_166.tape) - 1 ? 0 : local.iter_166.tape_ptr + 1
        : local.iter_166.tape_ptr)

    code_ptr = 1 + (
      local.curr_167.code == "["
        ? local.iter_166.tape[local.iter_166.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_166.code_ptr)] : local.iter_166.code_ptr :
      local.curr_167.code == "]"
        ? local.iter_166.tape[local.iter_166.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_166.code_ptr)] : local.iter_166.code_ptr
        : local.iter_166.code_ptr)

    steps_taken = 1 + local.iter_166.steps_taken
  }
}

locals {
  end_of_code_168 = try(local.iter_167.code_ptr >= length(var.code), true)

  curr_168 = local.end_of_code_168 ? null : {
    code = substr(var.code, local.iter_167.code_ptr, 1)
    input = substr(var.code, local.iter_167.code_ptr, 1) == "," ? substr(local.iter_167.input, 0, 1) : null
  }

  iter_168 = local.end_of_code_168 ? local.iter_167 : {
    input = (local.curr_168.code == ","
      ? substr(local.iter_167.input, 1, -1)
      : local.iter_167.input)

    output = (local.curr_168.code == "."
      ? "${local.iter_167.output}${jsondecode(format("\"\\u%04x\"", local.iter_167.tape[local.iter_167.tape_ptr]))}"
      : local.iter_167.output)
    
    tape = (
      local.curr_168.code == "+"
        ? [for i, b in local.iter_167.tape : (i == local.iter_167.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_168.code == "-"
        ? [for i, b in local.iter_167.tape : (i == local.iter_167.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_168.code == ","
        ? [for i, b in local.iter_167.tape : (i == local.iter_167.tape_ptr ? local.ascii_lookup[local.curr_168.input] : b)]
        : local.iter_167.tape)

    tape_ptr = (
      local.curr_168.code == "<"
        ? local.iter_167.tape_ptr == 0 ? length(local.iter_167.tape) - 1 : local.iter_167.tape_ptr - 1 :
      local.curr_168.code == ">"
        ? local.iter_167.tape_ptr == length(local.iter_167.tape) - 1 ? 0 : local.iter_167.tape_ptr + 1
        : local.iter_167.tape_ptr)

    code_ptr = 1 + (
      local.curr_168.code == "["
        ? local.iter_167.tape[local.iter_167.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_167.code_ptr)] : local.iter_167.code_ptr :
      local.curr_168.code == "]"
        ? local.iter_167.tape[local.iter_167.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_167.code_ptr)] : local.iter_167.code_ptr
        : local.iter_167.code_ptr)

    steps_taken = 1 + local.iter_167.steps_taken
  }
}

locals {
  end_of_code_169 = try(local.iter_168.code_ptr >= length(var.code), true)

  curr_169 = local.end_of_code_169 ? null : {
    code = substr(var.code, local.iter_168.code_ptr, 1)
    input = substr(var.code, local.iter_168.code_ptr, 1) == "," ? substr(local.iter_168.input, 0, 1) : null
  }

  iter_169 = local.end_of_code_169 ? local.iter_168 : {
    input = (local.curr_169.code == ","
      ? substr(local.iter_168.input, 1, -1)
      : local.iter_168.input)

    output = (local.curr_169.code == "."
      ? "${local.iter_168.output}${jsondecode(format("\"\\u%04x\"", local.iter_168.tape[local.iter_168.tape_ptr]))}"
      : local.iter_168.output)
    
    tape = (
      local.curr_169.code == "+"
        ? [for i, b in local.iter_168.tape : (i == local.iter_168.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_169.code == "-"
        ? [for i, b in local.iter_168.tape : (i == local.iter_168.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_169.code == ","
        ? [for i, b in local.iter_168.tape : (i == local.iter_168.tape_ptr ? local.ascii_lookup[local.curr_169.input] : b)]
        : local.iter_168.tape)

    tape_ptr = (
      local.curr_169.code == "<"
        ? local.iter_168.tape_ptr == 0 ? length(local.iter_168.tape) - 1 : local.iter_168.tape_ptr - 1 :
      local.curr_169.code == ">"
        ? local.iter_168.tape_ptr == length(local.iter_168.tape) - 1 ? 0 : local.iter_168.tape_ptr + 1
        : local.iter_168.tape_ptr)

    code_ptr = 1 + (
      local.curr_169.code == "["
        ? local.iter_168.tape[local.iter_168.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_168.code_ptr)] : local.iter_168.code_ptr :
      local.curr_169.code == "]"
        ? local.iter_168.tape[local.iter_168.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_168.code_ptr)] : local.iter_168.code_ptr
        : local.iter_168.code_ptr)

    steps_taken = 1 + local.iter_168.steps_taken
  }
}

locals {
  end_of_code_170 = try(local.iter_169.code_ptr >= length(var.code), true)

  curr_170 = local.end_of_code_170 ? null : {
    code = substr(var.code, local.iter_169.code_ptr, 1)
    input = substr(var.code, local.iter_169.code_ptr, 1) == "," ? substr(local.iter_169.input, 0, 1) : null
  }

  iter_170 = local.end_of_code_170 ? local.iter_169 : {
    input = (local.curr_170.code == ","
      ? substr(local.iter_169.input, 1, -1)
      : local.iter_169.input)

    output = (local.curr_170.code == "."
      ? "${local.iter_169.output}${jsondecode(format("\"\\u%04x\"", local.iter_169.tape[local.iter_169.tape_ptr]))}"
      : local.iter_169.output)
    
    tape = (
      local.curr_170.code == "+"
        ? [for i, b in local.iter_169.tape : (i == local.iter_169.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_170.code == "-"
        ? [for i, b in local.iter_169.tape : (i == local.iter_169.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_170.code == ","
        ? [for i, b in local.iter_169.tape : (i == local.iter_169.tape_ptr ? local.ascii_lookup[local.curr_170.input] : b)]
        : local.iter_169.tape)

    tape_ptr = (
      local.curr_170.code == "<"
        ? local.iter_169.tape_ptr == 0 ? length(local.iter_169.tape) - 1 : local.iter_169.tape_ptr - 1 :
      local.curr_170.code == ">"
        ? local.iter_169.tape_ptr == length(local.iter_169.tape) - 1 ? 0 : local.iter_169.tape_ptr + 1
        : local.iter_169.tape_ptr)

    code_ptr = 1 + (
      local.curr_170.code == "["
        ? local.iter_169.tape[local.iter_169.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_169.code_ptr)] : local.iter_169.code_ptr :
      local.curr_170.code == "]"
        ? local.iter_169.tape[local.iter_169.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_169.code_ptr)] : local.iter_169.code_ptr
        : local.iter_169.code_ptr)

    steps_taken = 1 + local.iter_169.steps_taken
  }
}

locals {
  end_of_code_171 = try(local.iter_170.code_ptr >= length(var.code), true)

  curr_171 = local.end_of_code_171 ? null : {
    code = substr(var.code, local.iter_170.code_ptr, 1)
    input = substr(var.code, local.iter_170.code_ptr, 1) == "," ? substr(local.iter_170.input, 0, 1) : null
  }

  iter_171 = local.end_of_code_171 ? local.iter_170 : {
    input = (local.curr_171.code == ","
      ? substr(local.iter_170.input, 1, -1)
      : local.iter_170.input)

    output = (local.curr_171.code == "."
      ? "${local.iter_170.output}${jsondecode(format("\"\\u%04x\"", local.iter_170.tape[local.iter_170.tape_ptr]))}"
      : local.iter_170.output)
    
    tape = (
      local.curr_171.code == "+"
        ? [for i, b in local.iter_170.tape : (i == local.iter_170.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_171.code == "-"
        ? [for i, b in local.iter_170.tape : (i == local.iter_170.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_171.code == ","
        ? [for i, b in local.iter_170.tape : (i == local.iter_170.tape_ptr ? local.ascii_lookup[local.curr_171.input] : b)]
        : local.iter_170.tape)

    tape_ptr = (
      local.curr_171.code == "<"
        ? local.iter_170.tape_ptr == 0 ? length(local.iter_170.tape) - 1 : local.iter_170.tape_ptr - 1 :
      local.curr_171.code == ">"
        ? local.iter_170.tape_ptr == length(local.iter_170.tape) - 1 ? 0 : local.iter_170.tape_ptr + 1
        : local.iter_170.tape_ptr)

    code_ptr = 1 + (
      local.curr_171.code == "["
        ? local.iter_170.tape[local.iter_170.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_170.code_ptr)] : local.iter_170.code_ptr :
      local.curr_171.code == "]"
        ? local.iter_170.tape[local.iter_170.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_170.code_ptr)] : local.iter_170.code_ptr
        : local.iter_170.code_ptr)

    steps_taken = 1 + local.iter_170.steps_taken
  }
}

locals {
  end_of_code_172 = try(local.iter_171.code_ptr >= length(var.code), true)

  curr_172 = local.end_of_code_172 ? null : {
    code = substr(var.code, local.iter_171.code_ptr, 1)
    input = substr(var.code, local.iter_171.code_ptr, 1) == "," ? substr(local.iter_171.input, 0, 1) : null
  }

  iter_172 = local.end_of_code_172 ? local.iter_171 : {
    input = (local.curr_172.code == ","
      ? substr(local.iter_171.input, 1, -1)
      : local.iter_171.input)

    output = (local.curr_172.code == "."
      ? "${local.iter_171.output}${jsondecode(format("\"\\u%04x\"", local.iter_171.tape[local.iter_171.tape_ptr]))}"
      : local.iter_171.output)
    
    tape = (
      local.curr_172.code == "+"
        ? [for i, b in local.iter_171.tape : (i == local.iter_171.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_172.code == "-"
        ? [for i, b in local.iter_171.tape : (i == local.iter_171.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_172.code == ","
        ? [for i, b in local.iter_171.tape : (i == local.iter_171.tape_ptr ? local.ascii_lookup[local.curr_172.input] : b)]
        : local.iter_171.tape)

    tape_ptr = (
      local.curr_172.code == "<"
        ? local.iter_171.tape_ptr == 0 ? length(local.iter_171.tape) - 1 : local.iter_171.tape_ptr - 1 :
      local.curr_172.code == ">"
        ? local.iter_171.tape_ptr == length(local.iter_171.tape) - 1 ? 0 : local.iter_171.tape_ptr + 1
        : local.iter_171.tape_ptr)

    code_ptr = 1 + (
      local.curr_172.code == "["
        ? local.iter_171.tape[local.iter_171.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_171.code_ptr)] : local.iter_171.code_ptr :
      local.curr_172.code == "]"
        ? local.iter_171.tape[local.iter_171.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_171.code_ptr)] : local.iter_171.code_ptr
        : local.iter_171.code_ptr)

    steps_taken = 1 + local.iter_171.steps_taken
  }
}

locals {
  end_of_code_173 = try(local.iter_172.code_ptr >= length(var.code), true)

  curr_173 = local.end_of_code_173 ? null : {
    code = substr(var.code, local.iter_172.code_ptr, 1)
    input = substr(var.code, local.iter_172.code_ptr, 1) == "," ? substr(local.iter_172.input, 0, 1) : null
  }

  iter_173 = local.end_of_code_173 ? local.iter_172 : {
    input = (local.curr_173.code == ","
      ? substr(local.iter_172.input, 1, -1)
      : local.iter_172.input)

    output = (local.curr_173.code == "."
      ? "${local.iter_172.output}${jsondecode(format("\"\\u%04x\"", local.iter_172.tape[local.iter_172.tape_ptr]))}"
      : local.iter_172.output)
    
    tape = (
      local.curr_173.code == "+"
        ? [for i, b in local.iter_172.tape : (i == local.iter_172.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_173.code == "-"
        ? [for i, b in local.iter_172.tape : (i == local.iter_172.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_173.code == ","
        ? [for i, b in local.iter_172.tape : (i == local.iter_172.tape_ptr ? local.ascii_lookup[local.curr_173.input] : b)]
        : local.iter_172.tape)

    tape_ptr = (
      local.curr_173.code == "<"
        ? local.iter_172.tape_ptr == 0 ? length(local.iter_172.tape) - 1 : local.iter_172.tape_ptr - 1 :
      local.curr_173.code == ">"
        ? local.iter_172.tape_ptr == length(local.iter_172.tape) - 1 ? 0 : local.iter_172.tape_ptr + 1
        : local.iter_172.tape_ptr)

    code_ptr = 1 + (
      local.curr_173.code == "["
        ? local.iter_172.tape[local.iter_172.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_172.code_ptr)] : local.iter_172.code_ptr :
      local.curr_173.code == "]"
        ? local.iter_172.tape[local.iter_172.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_172.code_ptr)] : local.iter_172.code_ptr
        : local.iter_172.code_ptr)

    steps_taken = 1 + local.iter_172.steps_taken
  }
}

locals {
  end_of_code_174 = try(local.iter_173.code_ptr >= length(var.code), true)

  curr_174 = local.end_of_code_174 ? null : {
    code = substr(var.code, local.iter_173.code_ptr, 1)
    input = substr(var.code, local.iter_173.code_ptr, 1) == "," ? substr(local.iter_173.input, 0, 1) : null
  }

  iter_174 = local.end_of_code_174 ? local.iter_173 : {
    input = (local.curr_174.code == ","
      ? substr(local.iter_173.input, 1, -1)
      : local.iter_173.input)

    output = (local.curr_174.code == "."
      ? "${local.iter_173.output}${jsondecode(format("\"\\u%04x\"", local.iter_173.tape[local.iter_173.tape_ptr]))}"
      : local.iter_173.output)
    
    tape = (
      local.curr_174.code == "+"
        ? [for i, b in local.iter_173.tape : (i == local.iter_173.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_174.code == "-"
        ? [for i, b in local.iter_173.tape : (i == local.iter_173.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_174.code == ","
        ? [for i, b in local.iter_173.tape : (i == local.iter_173.tape_ptr ? local.ascii_lookup[local.curr_174.input] : b)]
        : local.iter_173.tape)

    tape_ptr = (
      local.curr_174.code == "<"
        ? local.iter_173.tape_ptr == 0 ? length(local.iter_173.tape) - 1 : local.iter_173.tape_ptr - 1 :
      local.curr_174.code == ">"
        ? local.iter_173.tape_ptr == length(local.iter_173.tape) - 1 ? 0 : local.iter_173.tape_ptr + 1
        : local.iter_173.tape_ptr)

    code_ptr = 1 + (
      local.curr_174.code == "["
        ? local.iter_173.tape[local.iter_173.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_173.code_ptr)] : local.iter_173.code_ptr :
      local.curr_174.code == "]"
        ? local.iter_173.tape[local.iter_173.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_173.code_ptr)] : local.iter_173.code_ptr
        : local.iter_173.code_ptr)

    steps_taken = 1 + local.iter_173.steps_taken
  }
}

locals {
  end_of_code_175 = try(local.iter_174.code_ptr >= length(var.code), true)

  curr_175 = local.end_of_code_175 ? null : {
    code = substr(var.code, local.iter_174.code_ptr, 1)
    input = substr(var.code, local.iter_174.code_ptr, 1) == "," ? substr(local.iter_174.input, 0, 1) : null
  }

  iter_175 = local.end_of_code_175 ? local.iter_174 : {
    input = (local.curr_175.code == ","
      ? substr(local.iter_174.input, 1, -1)
      : local.iter_174.input)

    output = (local.curr_175.code == "."
      ? "${local.iter_174.output}${jsondecode(format("\"\\u%04x\"", local.iter_174.tape[local.iter_174.tape_ptr]))}"
      : local.iter_174.output)
    
    tape = (
      local.curr_175.code == "+"
        ? [for i, b in local.iter_174.tape : (i == local.iter_174.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_175.code == "-"
        ? [for i, b in local.iter_174.tape : (i == local.iter_174.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_175.code == ","
        ? [for i, b in local.iter_174.tape : (i == local.iter_174.tape_ptr ? local.ascii_lookup[local.curr_175.input] : b)]
        : local.iter_174.tape)

    tape_ptr = (
      local.curr_175.code == "<"
        ? local.iter_174.tape_ptr == 0 ? length(local.iter_174.tape) - 1 : local.iter_174.tape_ptr - 1 :
      local.curr_175.code == ">"
        ? local.iter_174.tape_ptr == length(local.iter_174.tape) - 1 ? 0 : local.iter_174.tape_ptr + 1
        : local.iter_174.tape_ptr)

    code_ptr = 1 + (
      local.curr_175.code == "["
        ? local.iter_174.tape[local.iter_174.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_174.code_ptr)] : local.iter_174.code_ptr :
      local.curr_175.code == "]"
        ? local.iter_174.tape[local.iter_174.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_174.code_ptr)] : local.iter_174.code_ptr
        : local.iter_174.code_ptr)

    steps_taken = 1 + local.iter_174.steps_taken
  }
}

locals {
  end_of_code_176 = try(local.iter_175.code_ptr >= length(var.code), true)

  curr_176 = local.end_of_code_176 ? null : {
    code = substr(var.code, local.iter_175.code_ptr, 1)
    input = substr(var.code, local.iter_175.code_ptr, 1) == "," ? substr(local.iter_175.input, 0, 1) : null
  }

  iter_176 = local.end_of_code_176 ? local.iter_175 : {
    input = (local.curr_176.code == ","
      ? substr(local.iter_175.input, 1, -1)
      : local.iter_175.input)

    output = (local.curr_176.code == "."
      ? "${local.iter_175.output}${jsondecode(format("\"\\u%04x\"", local.iter_175.tape[local.iter_175.tape_ptr]))}"
      : local.iter_175.output)
    
    tape = (
      local.curr_176.code == "+"
        ? [for i, b in local.iter_175.tape : (i == local.iter_175.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_176.code == "-"
        ? [for i, b in local.iter_175.tape : (i == local.iter_175.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_176.code == ","
        ? [for i, b in local.iter_175.tape : (i == local.iter_175.tape_ptr ? local.ascii_lookup[local.curr_176.input] : b)]
        : local.iter_175.tape)

    tape_ptr = (
      local.curr_176.code == "<"
        ? local.iter_175.tape_ptr == 0 ? length(local.iter_175.tape) - 1 : local.iter_175.tape_ptr - 1 :
      local.curr_176.code == ">"
        ? local.iter_175.tape_ptr == length(local.iter_175.tape) - 1 ? 0 : local.iter_175.tape_ptr + 1
        : local.iter_175.tape_ptr)

    code_ptr = 1 + (
      local.curr_176.code == "["
        ? local.iter_175.tape[local.iter_175.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_175.code_ptr)] : local.iter_175.code_ptr :
      local.curr_176.code == "]"
        ? local.iter_175.tape[local.iter_175.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_175.code_ptr)] : local.iter_175.code_ptr
        : local.iter_175.code_ptr)

    steps_taken = 1 + local.iter_175.steps_taken
  }
}

locals {
  end_of_code_177 = try(local.iter_176.code_ptr >= length(var.code), true)

  curr_177 = local.end_of_code_177 ? null : {
    code = substr(var.code, local.iter_176.code_ptr, 1)
    input = substr(var.code, local.iter_176.code_ptr, 1) == "," ? substr(local.iter_176.input, 0, 1) : null
  }

  iter_177 = local.end_of_code_177 ? local.iter_176 : {
    input = (local.curr_177.code == ","
      ? substr(local.iter_176.input, 1, -1)
      : local.iter_176.input)

    output = (local.curr_177.code == "."
      ? "${local.iter_176.output}${jsondecode(format("\"\\u%04x\"", local.iter_176.tape[local.iter_176.tape_ptr]))}"
      : local.iter_176.output)
    
    tape = (
      local.curr_177.code == "+"
        ? [for i, b in local.iter_176.tape : (i == local.iter_176.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_177.code == "-"
        ? [for i, b in local.iter_176.tape : (i == local.iter_176.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_177.code == ","
        ? [for i, b in local.iter_176.tape : (i == local.iter_176.tape_ptr ? local.ascii_lookup[local.curr_177.input] : b)]
        : local.iter_176.tape)

    tape_ptr = (
      local.curr_177.code == "<"
        ? local.iter_176.tape_ptr == 0 ? length(local.iter_176.tape) - 1 : local.iter_176.tape_ptr - 1 :
      local.curr_177.code == ">"
        ? local.iter_176.tape_ptr == length(local.iter_176.tape) - 1 ? 0 : local.iter_176.tape_ptr + 1
        : local.iter_176.tape_ptr)

    code_ptr = 1 + (
      local.curr_177.code == "["
        ? local.iter_176.tape[local.iter_176.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_176.code_ptr)] : local.iter_176.code_ptr :
      local.curr_177.code == "]"
        ? local.iter_176.tape[local.iter_176.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_176.code_ptr)] : local.iter_176.code_ptr
        : local.iter_176.code_ptr)

    steps_taken = 1 + local.iter_176.steps_taken
  }
}

locals {
  end_of_code_178 = try(local.iter_177.code_ptr >= length(var.code), true)

  curr_178 = local.end_of_code_178 ? null : {
    code = substr(var.code, local.iter_177.code_ptr, 1)
    input = substr(var.code, local.iter_177.code_ptr, 1) == "," ? substr(local.iter_177.input, 0, 1) : null
  }

  iter_178 = local.end_of_code_178 ? local.iter_177 : {
    input = (local.curr_178.code == ","
      ? substr(local.iter_177.input, 1, -1)
      : local.iter_177.input)

    output = (local.curr_178.code == "."
      ? "${local.iter_177.output}${jsondecode(format("\"\\u%04x\"", local.iter_177.tape[local.iter_177.tape_ptr]))}"
      : local.iter_177.output)
    
    tape = (
      local.curr_178.code == "+"
        ? [for i, b in local.iter_177.tape : (i == local.iter_177.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_178.code == "-"
        ? [for i, b in local.iter_177.tape : (i == local.iter_177.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_178.code == ","
        ? [for i, b in local.iter_177.tape : (i == local.iter_177.tape_ptr ? local.ascii_lookup[local.curr_178.input] : b)]
        : local.iter_177.tape)

    tape_ptr = (
      local.curr_178.code == "<"
        ? local.iter_177.tape_ptr == 0 ? length(local.iter_177.tape) - 1 : local.iter_177.tape_ptr - 1 :
      local.curr_178.code == ">"
        ? local.iter_177.tape_ptr == length(local.iter_177.tape) - 1 ? 0 : local.iter_177.tape_ptr + 1
        : local.iter_177.tape_ptr)

    code_ptr = 1 + (
      local.curr_178.code == "["
        ? local.iter_177.tape[local.iter_177.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_177.code_ptr)] : local.iter_177.code_ptr :
      local.curr_178.code == "]"
        ? local.iter_177.tape[local.iter_177.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_177.code_ptr)] : local.iter_177.code_ptr
        : local.iter_177.code_ptr)

    steps_taken = 1 + local.iter_177.steps_taken
  }
}

locals {
  end_of_code_179 = try(local.iter_178.code_ptr >= length(var.code), true)

  curr_179 = local.end_of_code_179 ? null : {
    code = substr(var.code, local.iter_178.code_ptr, 1)
    input = substr(var.code, local.iter_178.code_ptr, 1) == "," ? substr(local.iter_178.input, 0, 1) : null
  }

  iter_179 = local.end_of_code_179 ? local.iter_178 : {
    input = (local.curr_179.code == ","
      ? substr(local.iter_178.input, 1, -1)
      : local.iter_178.input)

    output = (local.curr_179.code == "."
      ? "${local.iter_178.output}${jsondecode(format("\"\\u%04x\"", local.iter_178.tape[local.iter_178.tape_ptr]))}"
      : local.iter_178.output)
    
    tape = (
      local.curr_179.code == "+"
        ? [for i, b in local.iter_178.tape : (i == local.iter_178.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_179.code == "-"
        ? [for i, b in local.iter_178.tape : (i == local.iter_178.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_179.code == ","
        ? [for i, b in local.iter_178.tape : (i == local.iter_178.tape_ptr ? local.ascii_lookup[local.curr_179.input] : b)]
        : local.iter_178.tape)

    tape_ptr = (
      local.curr_179.code == "<"
        ? local.iter_178.tape_ptr == 0 ? length(local.iter_178.tape) - 1 : local.iter_178.tape_ptr - 1 :
      local.curr_179.code == ">"
        ? local.iter_178.tape_ptr == length(local.iter_178.tape) - 1 ? 0 : local.iter_178.tape_ptr + 1
        : local.iter_178.tape_ptr)

    code_ptr = 1 + (
      local.curr_179.code == "["
        ? local.iter_178.tape[local.iter_178.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_178.code_ptr)] : local.iter_178.code_ptr :
      local.curr_179.code == "]"
        ? local.iter_178.tape[local.iter_178.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_178.code_ptr)] : local.iter_178.code_ptr
        : local.iter_178.code_ptr)

    steps_taken = 1 + local.iter_178.steps_taken
  }
}

locals {
  end_of_code_180 = try(local.iter_179.code_ptr >= length(var.code), true)

  curr_180 = local.end_of_code_180 ? null : {
    code = substr(var.code, local.iter_179.code_ptr, 1)
    input = substr(var.code, local.iter_179.code_ptr, 1) == "," ? substr(local.iter_179.input, 0, 1) : null
  }

  iter_180 = local.end_of_code_180 ? local.iter_179 : {
    input = (local.curr_180.code == ","
      ? substr(local.iter_179.input, 1, -1)
      : local.iter_179.input)

    output = (local.curr_180.code == "."
      ? "${local.iter_179.output}${jsondecode(format("\"\\u%04x\"", local.iter_179.tape[local.iter_179.tape_ptr]))}"
      : local.iter_179.output)
    
    tape = (
      local.curr_180.code == "+"
        ? [for i, b in local.iter_179.tape : (i == local.iter_179.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_180.code == "-"
        ? [for i, b in local.iter_179.tape : (i == local.iter_179.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_180.code == ","
        ? [for i, b in local.iter_179.tape : (i == local.iter_179.tape_ptr ? local.ascii_lookup[local.curr_180.input] : b)]
        : local.iter_179.tape)

    tape_ptr = (
      local.curr_180.code == "<"
        ? local.iter_179.tape_ptr == 0 ? length(local.iter_179.tape) - 1 : local.iter_179.tape_ptr - 1 :
      local.curr_180.code == ">"
        ? local.iter_179.tape_ptr == length(local.iter_179.tape) - 1 ? 0 : local.iter_179.tape_ptr + 1
        : local.iter_179.tape_ptr)

    code_ptr = 1 + (
      local.curr_180.code == "["
        ? local.iter_179.tape[local.iter_179.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_179.code_ptr)] : local.iter_179.code_ptr :
      local.curr_180.code == "]"
        ? local.iter_179.tape[local.iter_179.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_179.code_ptr)] : local.iter_179.code_ptr
        : local.iter_179.code_ptr)

    steps_taken = 1 + local.iter_179.steps_taken
  }
}

locals {
  end_of_code_181 = try(local.iter_180.code_ptr >= length(var.code), true)

  curr_181 = local.end_of_code_181 ? null : {
    code = substr(var.code, local.iter_180.code_ptr, 1)
    input = substr(var.code, local.iter_180.code_ptr, 1) == "," ? substr(local.iter_180.input, 0, 1) : null
  }

  iter_181 = local.end_of_code_181 ? local.iter_180 : {
    input = (local.curr_181.code == ","
      ? substr(local.iter_180.input, 1, -1)
      : local.iter_180.input)

    output = (local.curr_181.code == "."
      ? "${local.iter_180.output}${jsondecode(format("\"\\u%04x\"", local.iter_180.tape[local.iter_180.tape_ptr]))}"
      : local.iter_180.output)
    
    tape = (
      local.curr_181.code == "+"
        ? [for i, b in local.iter_180.tape : (i == local.iter_180.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_181.code == "-"
        ? [for i, b in local.iter_180.tape : (i == local.iter_180.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_181.code == ","
        ? [for i, b in local.iter_180.tape : (i == local.iter_180.tape_ptr ? local.ascii_lookup[local.curr_181.input] : b)]
        : local.iter_180.tape)

    tape_ptr = (
      local.curr_181.code == "<"
        ? local.iter_180.tape_ptr == 0 ? length(local.iter_180.tape) - 1 : local.iter_180.tape_ptr - 1 :
      local.curr_181.code == ">"
        ? local.iter_180.tape_ptr == length(local.iter_180.tape) - 1 ? 0 : local.iter_180.tape_ptr + 1
        : local.iter_180.tape_ptr)

    code_ptr = 1 + (
      local.curr_181.code == "["
        ? local.iter_180.tape[local.iter_180.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_180.code_ptr)] : local.iter_180.code_ptr :
      local.curr_181.code == "]"
        ? local.iter_180.tape[local.iter_180.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_180.code_ptr)] : local.iter_180.code_ptr
        : local.iter_180.code_ptr)

    steps_taken = 1 + local.iter_180.steps_taken
  }
}

locals {
  end_of_code_182 = try(local.iter_181.code_ptr >= length(var.code), true)

  curr_182 = local.end_of_code_182 ? null : {
    code = substr(var.code, local.iter_181.code_ptr, 1)
    input = substr(var.code, local.iter_181.code_ptr, 1) == "," ? substr(local.iter_181.input, 0, 1) : null
  }

  iter_182 = local.end_of_code_182 ? local.iter_181 : {
    input = (local.curr_182.code == ","
      ? substr(local.iter_181.input, 1, -1)
      : local.iter_181.input)

    output = (local.curr_182.code == "."
      ? "${local.iter_181.output}${jsondecode(format("\"\\u%04x\"", local.iter_181.tape[local.iter_181.tape_ptr]))}"
      : local.iter_181.output)
    
    tape = (
      local.curr_182.code == "+"
        ? [for i, b in local.iter_181.tape : (i == local.iter_181.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_182.code == "-"
        ? [for i, b in local.iter_181.tape : (i == local.iter_181.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_182.code == ","
        ? [for i, b in local.iter_181.tape : (i == local.iter_181.tape_ptr ? local.ascii_lookup[local.curr_182.input] : b)]
        : local.iter_181.tape)

    tape_ptr = (
      local.curr_182.code == "<"
        ? local.iter_181.tape_ptr == 0 ? length(local.iter_181.tape) - 1 : local.iter_181.tape_ptr - 1 :
      local.curr_182.code == ">"
        ? local.iter_181.tape_ptr == length(local.iter_181.tape) - 1 ? 0 : local.iter_181.tape_ptr + 1
        : local.iter_181.tape_ptr)

    code_ptr = 1 + (
      local.curr_182.code == "["
        ? local.iter_181.tape[local.iter_181.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_181.code_ptr)] : local.iter_181.code_ptr :
      local.curr_182.code == "]"
        ? local.iter_181.tape[local.iter_181.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_181.code_ptr)] : local.iter_181.code_ptr
        : local.iter_181.code_ptr)

    steps_taken = 1 + local.iter_181.steps_taken
  }
}

locals {
  end_of_code_183 = try(local.iter_182.code_ptr >= length(var.code), true)

  curr_183 = local.end_of_code_183 ? null : {
    code = substr(var.code, local.iter_182.code_ptr, 1)
    input = substr(var.code, local.iter_182.code_ptr, 1) == "," ? substr(local.iter_182.input, 0, 1) : null
  }

  iter_183 = local.end_of_code_183 ? local.iter_182 : {
    input = (local.curr_183.code == ","
      ? substr(local.iter_182.input, 1, -1)
      : local.iter_182.input)

    output = (local.curr_183.code == "."
      ? "${local.iter_182.output}${jsondecode(format("\"\\u%04x\"", local.iter_182.tape[local.iter_182.tape_ptr]))}"
      : local.iter_182.output)
    
    tape = (
      local.curr_183.code == "+"
        ? [for i, b in local.iter_182.tape : (i == local.iter_182.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_183.code == "-"
        ? [for i, b in local.iter_182.tape : (i == local.iter_182.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_183.code == ","
        ? [for i, b in local.iter_182.tape : (i == local.iter_182.tape_ptr ? local.ascii_lookup[local.curr_183.input] : b)]
        : local.iter_182.tape)

    tape_ptr = (
      local.curr_183.code == "<"
        ? local.iter_182.tape_ptr == 0 ? length(local.iter_182.tape) - 1 : local.iter_182.tape_ptr - 1 :
      local.curr_183.code == ">"
        ? local.iter_182.tape_ptr == length(local.iter_182.tape) - 1 ? 0 : local.iter_182.tape_ptr + 1
        : local.iter_182.tape_ptr)

    code_ptr = 1 + (
      local.curr_183.code == "["
        ? local.iter_182.tape[local.iter_182.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_182.code_ptr)] : local.iter_182.code_ptr :
      local.curr_183.code == "]"
        ? local.iter_182.tape[local.iter_182.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_182.code_ptr)] : local.iter_182.code_ptr
        : local.iter_182.code_ptr)

    steps_taken = 1 + local.iter_182.steps_taken
  }
}

locals {
  end_of_code_184 = try(local.iter_183.code_ptr >= length(var.code), true)

  curr_184 = local.end_of_code_184 ? null : {
    code = substr(var.code, local.iter_183.code_ptr, 1)
    input = substr(var.code, local.iter_183.code_ptr, 1) == "," ? substr(local.iter_183.input, 0, 1) : null
  }

  iter_184 = local.end_of_code_184 ? local.iter_183 : {
    input = (local.curr_184.code == ","
      ? substr(local.iter_183.input, 1, -1)
      : local.iter_183.input)

    output = (local.curr_184.code == "."
      ? "${local.iter_183.output}${jsondecode(format("\"\\u%04x\"", local.iter_183.tape[local.iter_183.tape_ptr]))}"
      : local.iter_183.output)
    
    tape = (
      local.curr_184.code == "+"
        ? [for i, b in local.iter_183.tape : (i == local.iter_183.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_184.code == "-"
        ? [for i, b in local.iter_183.tape : (i == local.iter_183.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_184.code == ","
        ? [for i, b in local.iter_183.tape : (i == local.iter_183.tape_ptr ? local.ascii_lookup[local.curr_184.input] : b)]
        : local.iter_183.tape)

    tape_ptr = (
      local.curr_184.code == "<"
        ? local.iter_183.tape_ptr == 0 ? length(local.iter_183.tape) - 1 : local.iter_183.tape_ptr - 1 :
      local.curr_184.code == ">"
        ? local.iter_183.tape_ptr == length(local.iter_183.tape) - 1 ? 0 : local.iter_183.tape_ptr + 1
        : local.iter_183.tape_ptr)

    code_ptr = 1 + (
      local.curr_184.code == "["
        ? local.iter_183.tape[local.iter_183.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_183.code_ptr)] : local.iter_183.code_ptr :
      local.curr_184.code == "]"
        ? local.iter_183.tape[local.iter_183.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_183.code_ptr)] : local.iter_183.code_ptr
        : local.iter_183.code_ptr)

    steps_taken = 1 + local.iter_183.steps_taken
  }
}

locals {
  end_of_code_185 = try(local.iter_184.code_ptr >= length(var.code), true)

  curr_185 = local.end_of_code_185 ? null : {
    code = substr(var.code, local.iter_184.code_ptr, 1)
    input = substr(var.code, local.iter_184.code_ptr, 1) == "," ? substr(local.iter_184.input, 0, 1) : null
  }

  iter_185 = local.end_of_code_185 ? local.iter_184 : {
    input = (local.curr_185.code == ","
      ? substr(local.iter_184.input, 1, -1)
      : local.iter_184.input)

    output = (local.curr_185.code == "."
      ? "${local.iter_184.output}${jsondecode(format("\"\\u%04x\"", local.iter_184.tape[local.iter_184.tape_ptr]))}"
      : local.iter_184.output)
    
    tape = (
      local.curr_185.code == "+"
        ? [for i, b in local.iter_184.tape : (i == local.iter_184.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_185.code == "-"
        ? [for i, b in local.iter_184.tape : (i == local.iter_184.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_185.code == ","
        ? [for i, b in local.iter_184.tape : (i == local.iter_184.tape_ptr ? local.ascii_lookup[local.curr_185.input] : b)]
        : local.iter_184.tape)

    tape_ptr = (
      local.curr_185.code == "<"
        ? local.iter_184.tape_ptr == 0 ? length(local.iter_184.tape) - 1 : local.iter_184.tape_ptr - 1 :
      local.curr_185.code == ">"
        ? local.iter_184.tape_ptr == length(local.iter_184.tape) - 1 ? 0 : local.iter_184.tape_ptr + 1
        : local.iter_184.tape_ptr)

    code_ptr = 1 + (
      local.curr_185.code == "["
        ? local.iter_184.tape[local.iter_184.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_184.code_ptr)] : local.iter_184.code_ptr :
      local.curr_185.code == "]"
        ? local.iter_184.tape[local.iter_184.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_184.code_ptr)] : local.iter_184.code_ptr
        : local.iter_184.code_ptr)

    steps_taken = 1 + local.iter_184.steps_taken
  }
}

locals {
  end_of_code_186 = try(local.iter_185.code_ptr >= length(var.code), true)

  curr_186 = local.end_of_code_186 ? null : {
    code = substr(var.code, local.iter_185.code_ptr, 1)
    input = substr(var.code, local.iter_185.code_ptr, 1) == "," ? substr(local.iter_185.input, 0, 1) : null
  }

  iter_186 = local.end_of_code_186 ? local.iter_185 : {
    input = (local.curr_186.code == ","
      ? substr(local.iter_185.input, 1, -1)
      : local.iter_185.input)

    output = (local.curr_186.code == "."
      ? "${local.iter_185.output}${jsondecode(format("\"\\u%04x\"", local.iter_185.tape[local.iter_185.tape_ptr]))}"
      : local.iter_185.output)
    
    tape = (
      local.curr_186.code == "+"
        ? [for i, b in local.iter_185.tape : (i == local.iter_185.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_186.code == "-"
        ? [for i, b in local.iter_185.tape : (i == local.iter_185.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_186.code == ","
        ? [for i, b in local.iter_185.tape : (i == local.iter_185.tape_ptr ? local.ascii_lookup[local.curr_186.input] : b)]
        : local.iter_185.tape)

    tape_ptr = (
      local.curr_186.code == "<"
        ? local.iter_185.tape_ptr == 0 ? length(local.iter_185.tape) - 1 : local.iter_185.tape_ptr - 1 :
      local.curr_186.code == ">"
        ? local.iter_185.tape_ptr == length(local.iter_185.tape) - 1 ? 0 : local.iter_185.tape_ptr + 1
        : local.iter_185.tape_ptr)

    code_ptr = 1 + (
      local.curr_186.code == "["
        ? local.iter_185.tape[local.iter_185.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_185.code_ptr)] : local.iter_185.code_ptr :
      local.curr_186.code == "]"
        ? local.iter_185.tape[local.iter_185.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_185.code_ptr)] : local.iter_185.code_ptr
        : local.iter_185.code_ptr)

    steps_taken = 1 + local.iter_185.steps_taken
  }
}

locals {
  end_of_code_187 = try(local.iter_186.code_ptr >= length(var.code), true)

  curr_187 = local.end_of_code_187 ? null : {
    code = substr(var.code, local.iter_186.code_ptr, 1)
    input = substr(var.code, local.iter_186.code_ptr, 1) == "," ? substr(local.iter_186.input, 0, 1) : null
  }

  iter_187 = local.end_of_code_187 ? local.iter_186 : {
    input = (local.curr_187.code == ","
      ? substr(local.iter_186.input, 1, -1)
      : local.iter_186.input)

    output = (local.curr_187.code == "."
      ? "${local.iter_186.output}${jsondecode(format("\"\\u%04x\"", local.iter_186.tape[local.iter_186.tape_ptr]))}"
      : local.iter_186.output)
    
    tape = (
      local.curr_187.code == "+"
        ? [for i, b in local.iter_186.tape : (i == local.iter_186.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_187.code == "-"
        ? [for i, b in local.iter_186.tape : (i == local.iter_186.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_187.code == ","
        ? [for i, b in local.iter_186.tape : (i == local.iter_186.tape_ptr ? local.ascii_lookup[local.curr_187.input] : b)]
        : local.iter_186.tape)

    tape_ptr = (
      local.curr_187.code == "<"
        ? local.iter_186.tape_ptr == 0 ? length(local.iter_186.tape) - 1 : local.iter_186.tape_ptr - 1 :
      local.curr_187.code == ">"
        ? local.iter_186.tape_ptr == length(local.iter_186.tape) - 1 ? 0 : local.iter_186.tape_ptr + 1
        : local.iter_186.tape_ptr)

    code_ptr = 1 + (
      local.curr_187.code == "["
        ? local.iter_186.tape[local.iter_186.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_186.code_ptr)] : local.iter_186.code_ptr :
      local.curr_187.code == "]"
        ? local.iter_186.tape[local.iter_186.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_186.code_ptr)] : local.iter_186.code_ptr
        : local.iter_186.code_ptr)

    steps_taken = 1 + local.iter_186.steps_taken
  }
}

locals {
  end_of_code_188 = try(local.iter_187.code_ptr >= length(var.code), true)

  curr_188 = local.end_of_code_188 ? null : {
    code = substr(var.code, local.iter_187.code_ptr, 1)
    input = substr(var.code, local.iter_187.code_ptr, 1) == "," ? substr(local.iter_187.input, 0, 1) : null
  }

  iter_188 = local.end_of_code_188 ? local.iter_187 : {
    input = (local.curr_188.code == ","
      ? substr(local.iter_187.input, 1, -1)
      : local.iter_187.input)

    output = (local.curr_188.code == "."
      ? "${local.iter_187.output}${jsondecode(format("\"\\u%04x\"", local.iter_187.tape[local.iter_187.tape_ptr]))}"
      : local.iter_187.output)
    
    tape = (
      local.curr_188.code == "+"
        ? [for i, b in local.iter_187.tape : (i == local.iter_187.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_188.code == "-"
        ? [for i, b in local.iter_187.tape : (i == local.iter_187.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_188.code == ","
        ? [for i, b in local.iter_187.tape : (i == local.iter_187.tape_ptr ? local.ascii_lookup[local.curr_188.input] : b)]
        : local.iter_187.tape)

    tape_ptr = (
      local.curr_188.code == "<"
        ? local.iter_187.tape_ptr == 0 ? length(local.iter_187.tape) - 1 : local.iter_187.tape_ptr - 1 :
      local.curr_188.code == ">"
        ? local.iter_187.tape_ptr == length(local.iter_187.tape) - 1 ? 0 : local.iter_187.tape_ptr + 1
        : local.iter_187.tape_ptr)

    code_ptr = 1 + (
      local.curr_188.code == "["
        ? local.iter_187.tape[local.iter_187.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_187.code_ptr)] : local.iter_187.code_ptr :
      local.curr_188.code == "]"
        ? local.iter_187.tape[local.iter_187.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_187.code_ptr)] : local.iter_187.code_ptr
        : local.iter_187.code_ptr)

    steps_taken = 1 + local.iter_187.steps_taken
  }
}

locals {
  end_of_code_189 = try(local.iter_188.code_ptr >= length(var.code), true)

  curr_189 = local.end_of_code_189 ? null : {
    code = substr(var.code, local.iter_188.code_ptr, 1)
    input = substr(var.code, local.iter_188.code_ptr, 1) == "," ? substr(local.iter_188.input, 0, 1) : null
  }

  iter_189 = local.end_of_code_189 ? local.iter_188 : {
    input = (local.curr_189.code == ","
      ? substr(local.iter_188.input, 1, -1)
      : local.iter_188.input)

    output = (local.curr_189.code == "."
      ? "${local.iter_188.output}${jsondecode(format("\"\\u%04x\"", local.iter_188.tape[local.iter_188.tape_ptr]))}"
      : local.iter_188.output)
    
    tape = (
      local.curr_189.code == "+"
        ? [for i, b in local.iter_188.tape : (i == local.iter_188.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_189.code == "-"
        ? [for i, b in local.iter_188.tape : (i == local.iter_188.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_189.code == ","
        ? [for i, b in local.iter_188.tape : (i == local.iter_188.tape_ptr ? local.ascii_lookup[local.curr_189.input] : b)]
        : local.iter_188.tape)

    tape_ptr = (
      local.curr_189.code == "<"
        ? local.iter_188.tape_ptr == 0 ? length(local.iter_188.tape) - 1 : local.iter_188.tape_ptr - 1 :
      local.curr_189.code == ">"
        ? local.iter_188.tape_ptr == length(local.iter_188.tape) - 1 ? 0 : local.iter_188.tape_ptr + 1
        : local.iter_188.tape_ptr)

    code_ptr = 1 + (
      local.curr_189.code == "["
        ? local.iter_188.tape[local.iter_188.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_188.code_ptr)] : local.iter_188.code_ptr :
      local.curr_189.code == "]"
        ? local.iter_188.tape[local.iter_188.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_188.code_ptr)] : local.iter_188.code_ptr
        : local.iter_188.code_ptr)

    steps_taken = 1 + local.iter_188.steps_taken
  }
}

locals {
  end_of_code_190 = try(local.iter_189.code_ptr >= length(var.code), true)

  curr_190 = local.end_of_code_190 ? null : {
    code = substr(var.code, local.iter_189.code_ptr, 1)
    input = substr(var.code, local.iter_189.code_ptr, 1) == "," ? substr(local.iter_189.input, 0, 1) : null
  }

  iter_190 = local.end_of_code_190 ? local.iter_189 : {
    input = (local.curr_190.code == ","
      ? substr(local.iter_189.input, 1, -1)
      : local.iter_189.input)

    output = (local.curr_190.code == "."
      ? "${local.iter_189.output}${jsondecode(format("\"\\u%04x\"", local.iter_189.tape[local.iter_189.tape_ptr]))}"
      : local.iter_189.output)
    
    tape = (
      local.curr_190.code == "+"
        ? [for i, b in local.iter_189.tape : (i == local.iter_189.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_190.code == "-"
        ? [for i, b in local.iter_189.tape : (i == local.iter_189.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_190.code == ","
        ? [for i, b in local.iter_189.tape : (i == local.iter_189.tape_ptr ? local.ascii_lookup[local.curr_190.input] : b)]
        : local.iter_189.tape)

    tape_ptr = (
      local.curr_190.code == "<"
        ? local.iter_189.tape_ptr == 0 ? length(local.iter_189.tape) - 1 : local.iter_189.tape_ptr - 1 :
      local.curr_190.code == ">"
        ? local.iter_189.tape_ptr == length(local.iter_189.tape) - 1 ? 0 : local.iter_189.tape_ptr + 1
        : local.iter_189.tape_ptr)

    code_ptr = 1 + (
      local.curr_190.code == "["
        ? local.iter_189.tape[local.iter_189.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_189.code_ptr)] : local.iter_189.code_ptr :
      local.curr_190.code == "]"
        ? local.iter_189.tape[local.iter_189.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_189.code_ptr)] : local.iter_189.code_ptr
        : local.iter_189.code_ptr)

    steps_taken = 1 + local.iter_189.steps_taken
  }
}

locals {
  end_of_code_191 = try(local.iter_190.code_ptr >= length(var.code), true)

  curr_191 = local.end_of_code_191 ? null : {
    code = substr(var.code, local.iter_190.code_ptr, 1)
    input = substr(var.code, local.iter_190.code_ptr, 1) == "," ? substr(local.iter_190.input, 0, 1) : null
  }

  iter_191 = local.end_of_code_191 ? local.iter_190 : {
    input = (local.curr_191.code == ","
      ? substr(local.iter_190.input, 1, -1)
      : local.iter_190.input)

    output = (local.curr_191.code == "."
      ? "${local.iter_190.output}${jsondecode(format("\"\\u%04x\"", local.iter_190.tape[local.iter_190.tape_ptr]))}"
      : local.iter_190.output)
    
    tape = (
      local.curr_191.code == "+"
        ? [for i, b in local.iter_190.tape : (i == local.iter_190.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_191.code == "-"
        ? [for i, b in local.iter_190.tape : (i == local.iter_190.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_191.code == ","
        ? [for i, b in local.iter_190.tape : (i == local.iter_190.tape_ptr ? local.ascii_lookup[local.curr_191.input] : b)]
        : local.iter_190.tape)

    tape_ptr = (
      local.curr_191.code == "<"
        ? local.iter_190.tape_ptr == 0 ? length(local.iter_190.tape) - 1 : local.iter_190.tape_ptr - 1 :
      local.curr_191.code == ">"
        ? local.iter_190.tape_ptr == length(local.iter_190.tape) - 1 ? 0 : local.iter_190.tape_ptr + 1
        : local.iter_190.tape_ptr)

    code_ptr = 1 + (
      local.curr_191.code == "["
        ? local.iter_190.tape[local.iter_190.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_190.code_ptr)] : local.iter_190.code_ptr :
      local.curr_191.code == "]"
        ? local.iter_190.tape[local.iter_190.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_190.code_ptr)] : local.iter_190.code_ptr
        : local.iter_190.code_ptr)

    steps_taken = 1 + local.iter_190.steps_taken
  }
}

locals {
  end_of_code_192 = try(local.iter_191.code_ptr >= length(var.code), true)

  curr_192 = local.end_of_code_192 ? null : {
    code = substr(var.code, local.iter_191.code_ptr, 1)
    input = substr(var.code, local.iter_191.code_ptr, 1) == "," ? substr(local.iter_191.input, 0, 1) : null
  }

  iter_192 = local.end_of_code_192 ? local.iter_191 : {
    input = (local.curr_192.code == ","
      ? substr(local.iter_191.input, 1, -1)
      : local.iter_191.input)

    output = (local.curr_192.code == "."
      ? "${local.iter_191.output}${jsondecode(format("\"\\u%04x\"", local.iter_191.tape[local.iter_191.tape_ptr]))}"
      : local.iter_191.output)
    
    tape = (
      local.curr_192.code == "+"
        ? [for i, b in local.iter_191.tape : (i == local.iter_191.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_192.code == "-"
        ? [for i, b in local.iter_191.tape : (i == local.iter_191.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_192.code == ","
        ? [for i, b in local.iter_191.tape : (i == local.iter_191.tape_ptr ? local.ascii_lookup[local.curr_192.input] : b)]
        : local.iter_191.tape)

    tape_ptr = (
      local.curr_192.code == "<"
        ? local.iter_191.tape_ptr == 0 ? length(local.iter_191.tape) - 1 : local.iter_191.tape_ptr - 1 :
      local.curr_192.code == ">"
        ? local.iter_191.tape_ptr == length(local.iter_191.tape) - 1 ? 0 : local.iter_191.tape_ptr + 1
        : local.iter_191.tape_ptr)

    code_ptr = 1 + (
      local.curr_192.code == "["
        ? local.iter_191.tape[local.iter_191.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_191.code_ptr)] : local.iter_191.code_ptr :
      local.curr_192.code == "]"
        ? local.iter_191.tape[local.iter_191.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_191.code_ptr)] : local.iter_191.code_ptr
        : local.iter_191.code_ptr)

    steps_taken = 1 + local.iter_191.steps_taken
  }
}

locals {
  end_of_code_193 = try(local.iter_192.code_ptr >= length(var.code), true)

  curr_193 = local.end_of_code_193 ? null : {
    code = substr(var.code, local.iter_192.code_ptr, 1)
    input = substr(var.code, local.iter_192.code_ptr, 1) == "," ? substr(local.iter_192.input, 0, 1) : null
  }

  iter_193 = local.end_of_code_193 ? local.iter_192 : {
    input = (local.curr_193.code == ","
      ? substr(local.iter_192.input, 1, -1)
      : local.iter_192.input)

    output = (local.curr_193.code == "."
      ? "${local.iter_192.output}${jsondecode(format("\"\\u%04x\"", local.iter_192.tape[local.iter_192.tape_ptr]))}"
      : local.iter_192.output)
    
    tape = (
      local.curr_193.code == "+"
        ? [for i, b in local.iter_192.tape : (i == local.iter_192.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_193.code == "-"
        ? [for i, b in local.iter_192.tape : (i == local.iter_192.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_193.code == ","
        ? [for i, b in local.iter_192.tape : (i == local.iter_192.tape_ptr ? local.ascii_lookup[local.curr_193.input] : b)]
        : local.iter_192.tape)

    tape_ptr = (
      local.curr_193.code == "<"
        ? local.iter_192.tape_ptr == 0 ? length(local.iter_192.tape) - 1 : local.iter_192.tape_ptr - 1 :
      local.curr_193.code == ">"
        ? local.iter_192.tape_ptr == length(local.iter_192.tape) - 1 ? 0 : local.iter_192.tape_ptr + 1
        : local.iter_192.tape_ptr)

    code_ptr = 1 + (
      local.curr_193.code == "["
        ? local.iter_192.tape[local.iter_192.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_192.code_ptr)] : local.iter_192.code_ptr :
      local.curr_193.code == "]"
        ? local.iter_192.tape[local.iter_192.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_192.code_ptr)] : local.iter_192.code_ptr
        : local.iter_192.code_ptr)

    steps_taken = 1 + local.iter_192.steps_taken
  }
}

locals {
  end_of_code_194 = try(local.iter_193.code_ptr >= length(var.code), true)

  curr_194 = local.end_of_code_194 ? null : {
    code = substr(var.code, local.iter_193.code_ptr, 1)
    input = substr(var.code, local.iter_193.code_ptr, 1) == "," ? substr(local.iter_193.input, 0, 1) : null
  }

  iter_194 = local.end_of_code_194 ? local.iter_193 : {
    input = (local.curr_194.code == ","
      ? substr(local.iter_193.input, 1, -1)
      : local.iter_193.input)

    output = (local.curr_194.code == "."
      ? "${local.iter_193.output}${jsondecode(format("\"\\u%04x\"", local.iter_193.tape[local.iter_193.tape_ptr]))}"
      : local.iter_193.output)
    
    tape = (
      local.curr_194.code == "+"
        ? [for i, b in local.iter_193.tape : (i == local.iter_193.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_194.code == "-"
        ? [for i, b in local.iter_193.tape : (i == local.iter_193.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_194.code == ","
        ? [for i, b in local.iter_193.tape : (i == local.iter_193.tape_ptr ? local.ascii_lookup[local.curr_194.input] : b)]
        : local.iter_193.tape)

    tape_ptr = (
      local.curr_194.code == "<"
        ? local.iter_193.tape_ptr == 0 ? length(local.iter_193.tape) - 1 : local.iter_193.tape_ptr - 1 :
      local.curr_194.code == ">"
        ? local.iter_193.tape_ptr == length(local.iter_193.tape) - 1 ? 0 : local.iter_193.tape_ptr + 1
        : local.iter_193.tape_ptr)

    code_ptr = 1 + (
      local.curr_194.code == "["
        ? local.iter_193.tape[local.iter_193.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_193.code_ptr)] : local.iter_193.code_ptr :
      local.curr_194.code == "]"
        ? local.iter_193.tape[local.iter_193.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_193.code_ptr)] : local.iter_193.code_ptr
        : local.iter_193.code_ptr)

    steps_taken = 1 + local.iter_193.steps_taken
  }
}

locals {
  end_of_code_195 = try(local.iter_194.code_ptr >= length(var.code), true)

  curr_195 = local.end_of_code_195 ? null : {
    code = substr(var.code, local.iter_194.code_ptr, 1)
    input = substr(var.code, local.iter_194.code_ptr, 1) == "," ? substr(local.iter_194.input, 0, 1) : null
  }

  iter_195 = local.end_of_code_195 ? local.iter_194 : {
    input = (local.curr_195.code == ","
      ? substr(local.iter_194.input, 1, -1)
      : local.iter_194.input)

    output = (local.curr_195.code == "."
      ? "${local.iter_194.output}${jsondecode(format("\"\\u%04x\"", local.iter_194.tape[local.iter_194.tape_ptr]))}"
      : local.iter_194.output)
    
    tape = (
      local.curr_195.code == "+"
        ? [for i, b in local.iter_194.tape : (i == local.iter_194.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_195.code == "-"
        ? [for i, b in local.iter_194.tape : (i == local.iter_194.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_195.code == ","
        ? [for i, b in local.iter_194.tape : (i == local.iter_194.tape_ptr ? local.ascii_lookup[local.curr_195.input] : b)]
        : local.iter_194.tape)

    tape_ptr = (
      local.curr_195.code == "<"
        ? local.iter_194.tape_ptr == 0 ? length(local.iter_194.tape) - 1 : local.iter_194.tape_ptr - 1 :
      local.curr_195.code == ">"
        ? local.iter_194.tape_ptr == length(local.iter_194.tape) - 1 ? 0 : local.iter_194.tape_ptr + 1
        : local.iter_194.tape_ptr)

    code_ptr = 1 + (
      local.curr_195.code == "["
        ? local.iter_194.tape[local.iter_194.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_194.code_ptr)] : local.iter_194.code_ptr :
      local.curr_195.code == "]"
        ? local.iter_194.tape[local.iter_194.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_194.code_ptr)] : local.iter_194.code_ptr
        : local.iter_194.code_ptr)

    steps_taken = 1 + local.iter_194.steps_taken
  }
}

locals {
  end_of_code_196 = try(local.iter_195.code_ptr >= length(var.code), true)

  curr_196 = local.end_of_code_196 ? null : {
    code = substr(var.code, local.iter_195.code_ptr, 1)
    input = substr(var.code, local.iter_195.code_ptr, 1) == "," ? substr(local.iter_195.input, 0, 1) : null
  }

  iter_196 = local.end_of_code_196 ? local.iter_195 : {
    input = (local.curr_196.code == ","
      ? substr(local.iter_195.input, 1, -1)
      : local.iter_195.input)

    output = (local.curr_196.code == "."
      ? "${local.iter_195.output}${jsondecode(format("\"\\u%04x\"", local.iter_195.tape[local.iter_195.tape_ptr]))}"
      : local.iter_195.output)
    
    tape = (
      local.curr_196.code == "+"
        ? [for i, b in local.iter_195.tape : (i == local.iter_195.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_196.code == "-"
        ? [for i, b in local.iter_195.tape : (i == local.iter_195.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_196.code == ","
        ? [for i, b in local.iter_195.tape : (i == local.iter_195.tape_ptr ? local.ascii_lookup[local.curr_196.input] : b)]
        : local.iter_195.tape)

    tape_ptr = (
      local.curr_196.code == "<"
        ? local.iter_195.tape_ptr == 0 ? length(local.iter_195.tape) - 1 : local.iter_195.tape_ptr - 1 :
      local.curr_196.code == ">"
        ? local.iter_195.tape_ptr == length(local.iter_195.tape) - 1 ? 0 : local.iter_195.tape_ptr + 1
        : local.iter_195.tape_ptr)

    code_ptr = 1 + (
      local.curr_196.code == "["
        ? local.iter_195.tape[local.iter_195.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_195.code_ptr)] : local.iter_195.code_ptr :
      local.curr_196.code == "]"
        ? local.iter_195.tape[local.iter_195.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_195.code_ptr)] : local.iter_195.code_ptr
        : local.iter_195.code_ptr)

    steps_taken = 1 + local.iter_195.steps_taken
  }
}

locals {
  end_of_code_197 = try(local.iter_196.code_ptr >= length(var.code), true)

  curr_197 = local.end_of_code_197 ? null : {
    code = substr(var.code, local.iter_196.code_ptr, 1)
    input = substr(var.code, local.iter_196.code_ptr, 1) == "," ? substr(local.iter_196.input, 0, 1) : null
  }

  iter_197 = local.end_of_code_197 ? local.iter_196 : {
    input = (local.curr_197.code == ","
      ? substr(local.iter_196.input, 1, -1)
      : local.iter_196.input)

    output = (local.curr_197.code == "."
      ? "${local.iter_196.output}${jsondecode(format("\"\\u%04x\"", local.iter_196.tape[local.iter_196.tape_ptr]))}"
      : local.iter_196.output)
    
    tape = (
      local.curr_197.code == "+"
        ? [for i, b in local.iter_196.tape : (i == local.iter_196.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_197.code == "-"
        ? [for i, b in local.iter_196.tape : (i == local.iter_196.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_197.code == ","
        ? [for i, b in local.iter_196.tape : (i == local.iter_196.tape_ptr ? local.ascii_lookup[local.curr_197.input] : b)]
        : local.iter_196.tape)

    tape_ptr = (
      local.curr_197.code == "<"
        ? local.iter_196.tape_ptr == 0 ? length(local.iter_196.tape) - 1 : local.iter_196.tape_ptr - 1 :
      local.curr_197.code == ">"
        ? local.iter_196.tape_ptr == length(local.iter_196.tape) - 1 ? 0 : local.iter_196.tape_ptr + 1
        : local.iter_196.tape_ptr)

    code_ptr = 1 + (
      local.curr_197.code == "["
        ? local.iter_196.tape[local.iter_196.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_196.code_ptr)] : local.iter_196.code_ptr :
      local.curr_197.code == "]"
        ? local.iter_196.tape[local.iter_196.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_196.code_ptr)] : local.iter_196.code_ptr
        : local.iter_196.code_ptr)

    steps_taken = 1 + local.iter_196.steps_taken
  }
}

locals {
  end_of_code_198 = try(local.iter_197.code_ptr >= length(var.code), true)

  curr_198 = local.end_of_code_198 ? null : {
    code = substr(var.code, local.iter_197.code_ptr, 1)
    input = substr(var.code, local.iter_197.code_ptr, 1) == "," ? substr(local.iter_197.input, 0, 1) : null
  }

  iter_198 = local.end_of_code_198 ? local.iter_197 : {
    input = (local.curr_198.code == ","
      ? substr(local.iter_197.input, 1, -1)
      : local.iter_197.input)

    output = (local.curr_198.code == "."
      ? "${local.iter_197.output}${jsondecode(format("\"\\u%04x\"", local.iter_197.tape[local.iter_197.tape_ptr]))}"
      : local.iter_197.output)
    
    tape = (
      local.curr_198.code == "+"
        ? [for i, b in local.iter_197.tape : (i == local.iter_197.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_198.code == "-"
        ? [for i, b in local.iter_197.tape : (i == local.iter_197.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_198.code == ","
        ? [for i, b in local.iter_197.tape : (i == local.iter_197.tape_ptr ? local.ascii_lookup[local.curr_198.input] : b)]
        : local.iter_197.tape)

    tape_ptr = (
      local.curr_198.code == "<"
        ? local.iter_197.tape_ptr == 0 ? length(local.iter_197.tape) - 1 : local.iter_197.tape_ptr - 1 :
      local.curr_198.code == ">"
        ? local.iter_197.tape_ptr == length(local.iter_197.tape) - 1 ? 0 : local.iter_197.tape_ptr + 1
        : local.iter_197.tape_ptr)

    code_ptr = 1 + (
      local.curr_198.code == "["
        ? local.iter_197.tape[local.iter_197.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_197.code_ptr)] : local.iter_197.code_ptr :
      local.curr_198.code == "]"
        ? local.iter_197.tape[local.iter_197.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_197.code_ptr)] : local.iter_197.code_ptr
        : local.iter_197.code_ptr)

    steps_taken = 1 + local.iter_197.steps_taken
  }
}

locals {
  end_of_code_199 = try(local.iter_198.code_ptr >= length(var.code), true)

  curr_199 = local.end_of_code_199 ? null : {
    code = substr(var.code, local.iter_198.code_ptr, 1)
    input = substr(var.code, local.iter_198.code_ptr, 1) == "," ? substr(local.iter_198.input, 0, 1) : null
  }

  iter_199 = local.end_of_code_199 ? local.iter_198 : {
    input = (local.curr_199.code == ","
      ? substr(local.iter_198.input, 1, -1)
      : local.iter_198.input)

    output = (local.curr_199.code == "."
      ? "${local.iter_198.output}${jsondecode(format("\"\\u%04x\"", local.iter_198.tape[local.iter_198.tape_ptr]))}"
      : local.iter_198.output)
    
    tape = (
      local.curr_199.code == "+"
        ? [for i, b in local.iter_198.tape : (i == local.iter_198.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_199.code == "-"
        ? [for i, b in local.iter_198.tape : (i == local.iter_198.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_199.code == ","
        ? [for i, b in local.iter_198.tape : (i == local.iter_198.tape_ptr ? local.ascii_lookup[local.curr_199.input] : b)]
        : local.iter_198.tape)

    tape_ptr = (
      local.curr_199.code == "<"
        ? local.iter_198.tape_ptr == 0 ? length(local.iter_198.tape) - 1 : local.iter_198.tape_ptr - 1 :
      local.curr_199.code == ">"
        ? local.iter_198.tape_ptr == length(local.iter_198.tape) - 1 ? 0 : local.iter_198.tape_ptr + 1
        : local.iter_198.tape_ptr)

    code_ptr = 1 + (
      local.curr_199.code == "["
        ? local.iter_198.tape[local.iter_198.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_198.code_ptr)] : local.iter_198.code_ptr :
      local.curr_199.code == "]"
        ? local.iter_198.tape[local.iter_198.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_198.code_ptr)] : local.iter_198.code_ptr
        : local.iter_198.code_ptr)

    steps_taken = 1 + local.iter_198.steps_taken
  }
}

locals {
  end_of_code_200 = try(local.iter_199.code_ptr >= length(var.code), true)

  curr_200 = local.end_of_code_200 ? null : {
    code = substr(var.code, local.iter_199.code_ptr, 1)
    input = substr(var.code, local.iter_199.code_ptr, 1) == "," ? substr(local.iter_199.input, 0, 1) : null
  }

  iter_200 = local.end_of_code_200 ? local.iter_199 : {
    input = (local.curr_200.code == ","
      ? substr(local.iter_199.input, 1, -1)
      : local.iter_199.input)

    output = (local.curr_200.code == "."
      ? "${local.iter_199.output}${jsondecode(format("\"\\u%04x\"", local.iter_199.tape[local.iter_199.tape_ptr]))}"
      : local.iter_199.output)
    
    tape = (
      local.curr_200.code == "+"
        ? [for i, b in local.iter_199.tape : (i == local.iter_199.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_200.code == "-"
        ? [for i, b in local.iter_199.tape : (i == local.iter_199.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_200.code == ","
        ? [for i, b in local.iter_199.tape : (i == local.iter_199.tape_ptr ? local.ascii_lookup[local.curr_200.input] : b)]
        : local.iter_199.tape)

    tape_ptr = (
      local.curr_200.code == "<"
        ? local.iter_199.tape_ptr == 0 ? length(local.iter_199.tape) - 1 : local.iter_199.tape_ptr - 1 :
      local.curr_200.code == ">"
        ? local.iter_199.tape_ptr == length(local.iter_199.tape) - 1 ? 0 : local.iter_199.tape_ptr + 1
        : local.iter_199.tape_ptr)

    code_ptr = 1 + (
      local.curr_200.code == "["
        ? local.iter_199.tape[local.iter_199.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_199.code_ptr)] : local.iter_199.code_ptr :
      local.curr_200.code == "]"
        ? local.iter_199.tape[local.iter_199.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_199.code_ptr)] : local.iter_199.code_ptr
        : local.iter_199.code_ptr)

    steps_taken = 1 + local.iter_199.steps_taken
  }
}

locals {
  end_of_code_201 = try(local.iter_200.code_ptr >= length(var.code), true)

  curr_201 = local.end_of_code_201 ? null : {
    code = substr(var.code, local.iter_200.code_ptr, 1)
    input = substr(var.code, local.iter_200.code_ptr, 1) == "," ? substr(local.iter_200.input, 0, 1) : null
  }

  iter_201 = local.end_of_code_201 ? local.iter_200 : {
    input = (local.curr_201.code == ","
      ? substr(local.iter_200.input, 1, -1)
      : local.iter_200.input)

    output = (local.curr_201.code == "."
      ? "${local.iter_200.output}${jsondecode(format("\"\\u%04x\"", local.iter_200.tape[local.iter_200.tape_ptr]))}"
      : local.iter_200.output)
    
    tape = (
      local.curr_201.code == "+"
        ? [for i, b in local.iter_200.tape : (i == local.iter_200.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_201.code == "-"
        ? [for i, b in local.iter_200.tape : (i == local.iter_200.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_201.code == ","
        ? [for i, b in local.iter_200.tape : (i == local.iter_200.tape_ptr ? local.ascii_lookup[local.curr_201.input] : b)]
        : local.iter_200.tape)

    tape_ptr = (
      local.curr_201.code == "<"
        ? local.iter_200.tape_ptr == 0 ? length(local.iter_200.tape) - 1 : local.iter_200.tape_ptr - 1 :
      local.curr_201.code == ">"
        ? local.iter_200.tape_ptr == length(local.iter_200.tape) - 1 ? 0 : local.iter_200.tape_ptr + 1
        : local.iter_200.tape_ptr)

    code_ptr = 1 + (
      local.curr_201.code == "["
        ? local.iter_200.tape[local.iter_200.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_200.code_ptr)] : local.iter_200.code_ptr :
      local.curr_201.code == "]"
        ? local.iter_200.tape[local.iter_200.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_200.code_ptr)] : local.iter_200.code_ptr
        : local.iter_200.code_ptr)

    steps_taken = 1 + local.iter_200.steps_taken
  }
}

locals {
  end_of_code_202 = try(local.iter_201.code_ptr >= length(var.code), true)

  curr_202 = local.end_of_code_202 ? null : {
    code = substr(var.code, local.iter_201.code_ptr, 1)
    input = substr(var.code, local.iter_201.code_ptr, 1) == "," ? substr(local.iter_201.input, 0, 1) : null
  }

  iter_202 = local.end_of_code_202 ? local.iter_201 : {
    input = (local.curr_202.code == ","
      ? substr(local.iter_201.input, 1, -1)
      : local.iter_201.input)

    output = (local.curr_202.code == "."
      ? "${local.iter_201.output}${jsondecode(format("\"\\u%04x\"", local.iter_201.tape[local.iter_201.tape_ptr]))}"
      : local.iter_201.output)
    
    tape = (
      local.curr_202.code == "+"
        ? [for i, b in local.iter_201.tape : (i == local.iter_201.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_202.code == "-"
        ? [for i, b in local.iter_201.tape : (i == local.iter_201.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_202.code == ","
        ? [for i, b in local.iter_201.tape : (i == local.iter_201.tape_ptr ? local.ascii_lookup[local.curr_202.input] : b)]
        : local.iter_201.tape)

    tape_ptr = (
      local.curr_202.code == "<"
        ? local.iter_201.tape_ptr == 0 ? length(local.iter_201.tape) - 1 : local.iter_201.tape_ptr - 1 :
      local.curr_202.code == ">"
        ? local.iter_201.tape_ptr == length(local.iter_201.tape) - 1 ? 0 : local.iter_201.tape_ptr + 1
        : local.iter_201.tape_ptr)

    code_ptr = 1 + (
      local.curr_202.code == "["
        ? local.iter_201.tape[local.iter_201.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_201.code_ptr)] : local.iter_201.code_ptr :
      local.curr_202.code == "]"
        ? local.iter_201.tape[local.iter_201.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_201.code_ptr)] : local.iter_201.code_ptr
        : local.iter_201.code_ptr)

    steps_taken = 1 + local.iter_201.steps_taken
  }
}

locals {
  end_of_code_203 = try(local.iter_202.code_ptr >= length(var.code), true)

  curr_203 = local.end_of_code_203 ? null : {
    code = substr(var.code, local.iter_202.code_ptr, 1)
    input = substr(var.code, local.iter_202.code_ptr, 1) == "," ? substr(local.iter_202.input, 0, 1) : null
  }

  iter_203 = local.end_of_code_203 ? local.iter_202 : {
    input = (local.curr_203.code == ","
      ? substr(local.iter_202.input, 1, -1)
      : local.iter_202.input)

    output = (local.curr_203.code == "."
      ? "${local.iter_202.output}${jsondecode(format("\"\\u%04x\"", local.iter_202.tape[local.iter_202.tape_ptr]))}"
      : local.iter_202.output)
    
    tape = (
      local.curr_203.code == "+"
        ? [for i, b in local.iter_202.tape : (i == local.iter_202.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_203.code == "-"
        ? [for i, b in local.iter_202.tape : (i == local.iter_202.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_203.code == ","
        ? [for i, b in local.iter_202.tape : (i == local.iter_202.tape_ptr ? local.ascii_lookup[local.curr_203.input] : b)]
        : local.iter_202.tape)

    tape_ptr = (
      local.curr_203.code == "<"
        ? local.iter_202.tape_ptr == 0 ? length(local.iter_202.tape) - 1 : local.iter_202.tape_ptr - 1 :
      local.curr_203.code == ">"
        ? local.iter_202.tape_ptr == length(local.iter_202.tape) - 1 ? 0 : local.iter_202.tape_ptr + 1
        : local.iter_202.tape_ptr)

    code_ptr = 1 + (
      local.curr_203.code == "["
        ? local.iter_202.tape[local.iter_202.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_202.code_ptr)] : local.iter_202.code_ptr :
      local.curr_203.code == "]"
        ? local.iter_202.tape[local.iter_202.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_202.code_ptr)] : local.iter_202.code_ptr
        : local.iter_202.code_ptr)

    steps_taken = 1 + local.iter_202.steps_taken
  }
}

locals {
  end_of_code_204 = try(local.iter_203.code_ptr >= length(var.code), true)

  curr_204 = local.end_of_code_204 ? null : {
    code = substr(var.code, local.iter_203.code_ptr, 1)
    input = substr(var.code, local.iter_203.code_ptr, 1) == "," ? substr(local.iter_203.input, 0, 1) : null
  }

  iter_204 = local.end_of_code_204 ? local.iter_203 : {
    input = (local.curr_204.code == ","
      ? substr(local.iter_203.input, 1, -1)
      : local.iter_203.input)

    output = (local.curr_204.code == "."
      ? "${local.iter_203.output}${jsondecode(format("\"\\u%04x\"", local.iter_203.tape[local.iter_203.tape_ptr]))}"
      : local.iter_203.output)
    
    tape = (
      local.curr_204.code == "+"
        ? [for i, b in local.iter_203.tape : (i == local.iter_203.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_204.code == "-"
        ? [for i, b in local.iter_203.tape : (i == local.iter_203.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_204.code == ","
        ? [for i, b in local.iter_203.tape : (i == local.iter_203.tape_ptr ? local.ascii_lookup[local.curr_204.input] : b)]
        : local.iter_203.tape)

    tape_ptr = (
      local.curr_204.code == "<"
        ? local.iter_203.tape_ptr == 0 ? length(local.iter_203.tape) - 1 : local.iter_203.tape_ptr - 1 :
      local.curr_204.code == ">"
        ? local.iter_203.tape_ptr == length(local.iter_203.tape) - 1 ? 0 : local.iter_203.tape_ptr + 1
        : local.iter_203.tape_ptr)

    code_ptr = 1 + (
      local.curr_204.code == "["
        ? local.iter_203.tape[local.iter_203.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_203.code_ptr)] : local.iter_203.code_ptr :
      local.curr_204.code == "]"
        ? local.iter_203.tape[local.iter_203.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_203.code_ptr)] : local.iter_203.code_ptr
        : local.iter_203.code_ptr)

    steps_taken = 1 + local.iter_203.steps_taken
  }
}

locals {
  end_of_code_205 = try(local.iter_204.code_ptr >= length(var.code), true)

  curr_205 = local.end_of_code_205 ? null : {
    code = substr(var.code, local.iter_204.code_ptr, 1)
    input = substr(var.code, local.iter_204.code_ptr, 1) == "," ? substr(local.iter_204.input, 0, 1) : null
  }

  iter_205 = local.end_of_code_205 ? local.iter_204 : {
    input = (local.curr_205.code == ","
      ? substr(local.iter_204.input, 1, -1)
      : local.iter_204.input)

    output = (local.curr_205.code == "."
      ? "${local.iter_204.output}${jsondecode(format("\"\\u%04x\"", local.iter_204.tape[local.iter_204.tape_ptr]))}"
      : local.iter_204.output)
    
    tape = (
      local.curr_205.code == "+"
        ? [for i, b in local.iter_204.tape : (i == local.iter_204.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_205.code == "-"
        ? [for i, b in local.iter_204.tape : (i == local.iter_204.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_205.code == ","
        ? [for i, b in local.iter_204.tape : (i == local.iter_204.tape_ptr ? local.ascii_lookup[local.curr_205.input] : b)]
        : local.iter_204.tape)

    tape_ptr = (
      local.curr_205.code == "<"
        ? local.iter_204.tape_ptr == 0 ? length(local.iter_204.tape) - 1 : local.iter_204.tape_ptr - 1 :
      local.curr_205.code == ">"
        ? local.iter_204.tape_ptr == length(local.iter_204.tape) - 1 ? 0 : local.iter_204.tape_ptr + 1
        : local.iter_204.tape_ptr)

    code_ptr = 1 + (
      local.curr_205.code == "["
        ? local.iter_204.tape[local.iter_204.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_204.code_ptr)] : local.iter_204.code_ptr :
      local.curr_205.code == "]"
        ? local.iter_204.tape[local.iter_204.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_204.code_ptr)] : local.iter_204.code_ptr
        : local.iter_204.code_ptr)

    steps_taken = 1 + local.iter_204.steps_taken
  }
}

locals {
  end_of_code_206 = try(local.iter_205.code_ptr >= length(var.code), true)

  curr_206 = local.end_of_code_206 ? null : {
    code = substr(var.code, local.iter_205.code_ptr, 1)
    input = substr(var.code, local.iter_205.code_ptr, 1) == "," ? substr(local.iter_205.input, 0, 1) : null
  }

  iter_206 = local.end_of_code_206 ? local.iter_205 : {
    input = (local.curr_206.code == ","
      ? substr(local.iter_205.input, 1, -1)
      : local.iter_205.input)

    output = (local.curr_206.code == "."
      ? "${local.iter_205.output}${jsondecode(format("\"\\u%04x\"", local.iter_205.tape[local.iter_205.tape_ptr]))}"
      : local.iter_205.output)
    
    tape = (
      local.curr_206.code == "+"
        ? [for i, b in local.iter_205.tape : (i == local.iter_205.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_206.code == "-"
        ? [for i, b in local.iter_205.tape : (i == local.iter_205.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_206.code == ","
        ? [for i, b in local.iter_205.tape : (i == local.iter_205.tape_ptr ? local.ascii_lookup[local.curr_206.input] : b)]
        : local.iter_205.tape)

    tape_ptr = (
      local.curr_206.code == "<"
        ? local.iter_205.tape_ptr == 0 ? length(local.iter_205.tape) - 1 : local.iter_205.tape_ptr - 1 :
      local.curr_206.code == ">"
        ? local.iter_205.tape_ptr == length(local.iter_205.tape) - 1 ? 0 : local.iter_205.tape_ptr + 1
        : local.iter_205.tape_ptr)

    code_ptr = 1 + (
      local.curr_206.code == "["
        ? local.iter_205.tape[local.iter_205.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_205.code_ptr)] : local.iter_205.code_ptr :
      local.curr_206.code == "]"
        ? local.iter_205.tape[local.iter_205.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_205.code_ptr)] : local.iter_205.code_ptr
        : local.iter_205.code_ptr)

    steps_taken = 1 + local.iter_205.steps_taken
  }
}

locals {
  end_of_code_207 = try(local.iter_206.code_ptr >= length(var.code), true)

  curr_207 = local.end_of_code_207 ? null : {
    code = substr(var.code, local.iter_206.code_ptr, 1)
    input = substr(var.code, local.iter_206.code_ptr, 1) == "," ? substr(local.iter_206.input, 0, 1) : null
  }

  iter_207 = local.end_of_code_207 ? local.iter_206 : {
    input = (local.curr_207.code == ","
      ? substr(local.iter_206.input, 1, -1)
      : local.iter_206.input)

    output = (local.curr_207.code == "."
      ? "${local.iter_206.output}${jsondecode(format("\"\\u%04x\"", local.iter_206.tape[local.iter_206.tape_ptr]))}"
      : local.iter_206.output)
    
    tape = (
      local.curr_207.code == "+"
        ? [for i, b in local.iter_206.tape : (i == local.iter_206.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_207.code == "-"
        ? [for i, b in local.iter_206.tape : (i == local.iter_206.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_207.code == ","
        ? [for i, b in local.iter_206.tape : (i == local.iter_206.tape_ptr ? local.ascii_lookup[local.curr_207.input] : b)]
        : local.iter_206.tape)

    tape_ptr = (
      local.curr_207.code == "<"
        ? local.iter_206.tape_ptr == 0 ? length(local.iter_206.tape) - 1 : local.iter_206.tape_ptr - 1 :
      local.curr_207.code == ">"
        ? local.iter_206.tape_ptr == length(local.iter_206.tape) - 1 ? 0 : local.iter_206.tape_ptr + 1
        : local.iter_206.tape_ptr)

    code_ptr = 1 + (
      local.curr_207.code == "["
        ? local.iter_206.tape[local.iter_206.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_206.code_ptr)] : local.iter_206.code_ptr :
      local.curr_207.code == "]"
        ? local.iter_206.tape[local.iter_206.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_206.code_ptr)] : local.iter_206.code_ptr
        : local.iter_206.code_ptr)

    steps_taken = 1 + local.iter_206.steps_taken
  }
}

locals {
  end_of_code_208 = try(local.iter_207.code_ptr >= length(var.code), true)

  curr_208 = local.end_of_code_208 ? null : {
    code = substr(var.code, local.iter_207.code_ptr, 1)
    input = substr(var.code, local.iter_207.code_ptr, 1) == "," ? substr(local.iter_207.input, 0, 1) : null
  }

  iter_208 = local.end_of_code_208 ? local.iter_207 : {
    input = (local.curr_208.code == ","
      ? substr(local.iter_207.input, 1, -1)
      : local.iter_207.input)

    output = (local.curr_208.code == "."
      ? "${local.iter_207.output}${jsondecode(format("\"\\u%04x\"", local.iter_207.tape[local.iter_207.tape_ptr]))}"
      : local.iter_207.output)
    
    tape = (
      local.curr_208.code == "+"
        ? [for i, b in local.iter_207.tape : (i == local.iter_207.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_208.code == "-"
        ? [for i, b in local.iter_207.tape : (i == local.iter_207.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_208.code == ","
        ? [for i, b in local.iter_207.tape : (i == local.iter_207.tape_ptr ? local.ascii_lookup[local.curr_208.input] : b)]
        : local.iter_207.tape)

    tape_ptr = (
      local.curr_208.code == "<"
        ? local.iter_207.tape_ptr == 0 ? length(local.iter_207.tape) - 1 : local.iter_207.tape_ptr - 1 :
      local.curr_208.code == ">"
        ? local.iter_207.tape_ptr == length(local.iter_207.tape) - 1 ? 0 : local.iter_207.tape_ptr + 1
        : local.iter_207.tape_ptr)

    code_ptr = 1 + (
      local.curr_208.code == "["
        ? local.iter_207.tape[local.iter_207.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_207.code_ptr)] : local.iter_207.code_ptr :
      local.curr_208.code == "]"
        ? local.iter_207.tape[local.iter_207.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_207.code_ptr)] : local.iter_207.code_ptr
        : local.iter_207.code_ptr)

    steps_taken = 1 + local.iter_207.steps_taken
  }
}

locals {
  end_of_code_209 = try(local.iter_208.code_ptr >= length(var.code), true)

  curr_209 = local.end_of_code_209 ? null : {
    code = substr(var.code, local.iter_208.code_ptr, 1)
    input = substr(var.code, local.iter_208.code_ptr, 1) == "," ? substr(local.iter_208.input, 0, 1) : null
  }

  iter_209 = local.end_of_code_209 ? local.iter_208 : {
    input = (local.curr_209.code == ","
      ? substr(local.iter_208.input, 1, -1)
      : local.iter_208.input)

    output = (local.curr_209.code == "."
      ? "${local.iter_208.output}${jsondecode(format("\"\\u%04x\"", local.iter_208.tape[local.iter_208.tape_ptr]))}"
      : local.iter_208.output)
    
    tape = (
      local.curr_209.code == "+"
        ? [for i, b in local.iter_208.tape : (i == local.iter_208.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_209.code == "-"
        ? [for i, b in local.iter_208.tape : (i == local.iter_208.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_209.code == ","
        ? [for i, b in local.iter_208.tape : (i == local.iter_208.tape_ptr ? local.ascii_lookup[local.curr_209.input] : b)]
        : local.iter_208.tape)

    tape_ptr = (
      local.curr_209.code == "<"
        ? local.iter_208.tape_ptr == 0 ? length(local.iter_208.tape) - 1 : local.iter_208.tape_ptr - 1 :
      local.curr_209.code == ">"
        ? local.iter_208.tape_ptr == length(local.iter_208.tape) - 1 ? 0 : local.iter_208.tape_ptr + 1
        : local.iter_208.tape_ptr)

    code_ptr = 1 + (
      local.curr_209.code == "["
        ? local.iter_208.tape[local.iter_208.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_208.code_ptr)] : local.iter_208.code_ptr :
      local.curr_209.code == "]"
        ? local.iter_208.tape[local.iter_208.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_208.code_ptr)] : local.iter_208.code_ptr
        : local.iter_208.code_ptr)

    steps_taken = 1 + local.iter_208.steps_taken
  }
}

locals {
  end_of_code_210 = try(local.iter_209.code_ptr >= length(var.code), true)

  curr_210 = local.end_of_code_210 ? null : {
    code = substr(var.code, local.iter_209.code_ptr, 1)
    input = substr(var.code, local.iter_209.code_ptr, 1) == "," ? substr(local.iter_209.input, 0, 1) : null
  }

  iter_210 = local.end_of_code_210 ? local.iter_209 : {
    input = (local.curr_210.code == ","
      ? substr(local.iter_209.input, 1, -1)
      : local.iter_209.input)

    output = (local.curr_210.code == "."
      ? "${local.iter_209.output}${jsondecode(format("\"\\u%04x\"", local.iter_209.tape[local.iter_209.tape_ptr]))}"
      : local.iter_209.output)
    
    tape = (
      local.curr_210.code == "+"
        ? [for i, b in local.iter_209.tape : (i == local.iter_209.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_210.code == "-"
        ? [for i, b in local.iter_209.tape : (i == local.iter_209.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_210.code == ","
        ? [for i, b in local.iter_209.tape : (i == local.iter_209.tape_ptr ? local.ascii_lookup[local.curr_210.input] : b)]
        : local.iter_209.tape)

    tape_ptr = (
      local.curr_210.code == "<"
        ? local.iter_209.tape_ptr == 0 ? length(local.iter_209.tape) - 1 : local.iter_209.tape_ptr - 1 :
      local.curr_210.code == ">"
        ? local.iter_209.tape_ptr == length(local.iter_209.tape) - 1 ? 0 : local.iter_209.tape_ptr + 1
        : local.iter_209.tape_ptr)

    code_ptr = 1 + (
      local.curr_210.code == "["
        ? local.iter_209.tape[local.iter_209.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_209.code_ptr)] : local.iter_209.code_ptr :
      local.curr_210.code == "]"
        ? local.iter_209.tape[local.iter_209.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_209.code_ptr)] : local.iter_209.code_ptr
        : local.iter_209.code_ptr)

    steps_taken = 1 + local.iter_209.steps_taken
  }
}

locals {
  end_of_code_211 = try(local.iter_210.code_ptr >= length(var.code), true)

  curr_211 = local.end_of_code_211 ? null : {
    code = substr(var.code, local.iter_210.code_ptr, 1)
    input = substr(var.code, local.iter_210.code_ptr, 1) == "," ? substr(local.iter_210.input, 0, 1) : null
  }

  iter_211 = local.end_of_code_211 ? local.iter_210 : {
    input = (local.curr_211.code == ","
      ? substr(local.iter_210.input, 1, -1)
      : local.iter_210.input)

    output = (local.curr_211.code == "."
      ? "${local.iter_210.output}${jsondecode(format("\"\\u%04x\"", local.iter_210.tape[local.iter_210.tape_ptr]))}"
      : local.iter_210.output)
    
    tape = (
      local.curr_211.code == "+"
        ? [for i, b in local.iter_210.tape : (i == local.iter_210.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_211.code == "-"
        ? [for i, b in local.iter_210.tape : (i == local.iter_210.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_211.code == ","
        ? [for i, b in local.iter_210.tape : (i == local.iter_210.tape_ptr ? local.ascii_lookup[local.curr_211.input] : b)]
        : local.iter_210.tape)

    tape_ptr = (
      local.curr_211.code == "<"
        ? local.iter_210.tape_ptr == 0 ? length(local.iter_210.tape) - 1 : local.iter_210.tape_ptr - 1 :
      local.curr_211.code == ">"
        ? local.iter_210.tape_ptr == length(local.iter_210.tape) - 1 ? 0 : local.iter_210.tape_ptr + 1
        : local.iter_210.tape_ptr)

    code_ptr = 1 + (
      local.curr_211.code == "["
        ? local.iter_210.tape[local.iter_210.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_210.code_ptr)] : local.iter_210.code_ptr :
      local.curr_211.code == "]"
        ? local.iter_210.tape[local.iter_210.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_210.code_ptr)] : local.iter_210.code_ptr
        : local.iter_210.code_ptr)

    steps_taken = 1 + local.iter_210.steps_taken
  }
}

locals {
  end_of_code_212 = try(local.iter_211.code_ptr >= length(var.code), true)

  curr_212 = local.end_of_code_212 ? null : {
    code = substr(var.code, local.iter_211.code_ptr, 1)
    input = substr(var.code, local.iter_211.code_ptr, 1) == "," ? substr(local.iter_211.input, 0, 1) : null
  }

  iter_212 = local.end_of_code_212 ? local.iter_211 : {
    input = (local.curr_212.code == ","
      ? substr(local.iter_211.input, 1, -1)
      : local.iter_211.input)

    output = (local.curr_212.code == "."
      ? "${local.iter_211.output}${jsondecode(format("\"\\u%04x\"", local.iter_211.tape[local.iter_211.tape_ptr]))}"
      : local.iter_211.output)
    
    tape = (
      local.curr_212.code == "+"
        ? [for i, b in local.iter_211.tape : (i == local.iter_211.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_212.code == "-"
        ? [for i, b in local.iter_211.tape : (i == local.iter_211.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_212.code == ","
        ? [for i, b in local.iter_211.tape : (i == local.iter_211.tape_ptr ? local.ascii_lookup[local.curr_212.input] : b)]
        : local.iter_211.tape)

    tape_ptr = (
      local.curr_212.code == "<"
        ? local.iter_211.tape_ptr == 0 ? length(local.iter_211.tape) - 1 : local.iter_211.tape_ptr - 1 :
      local.curr_212.code == ">"
        ? local.iter_211.tape_ptr == length(local.iter_211.tape) - 1 ? 0 : local.iter_211.tape_ptr + 1
        : local.iter_211.tape_ptr)

    code_ptr = 1 + (
      local.curr_212.code == "["
        ? local.iter_211.tape[local.iter_211.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_211.code_ptr)] : local.iter_211.code_ptr :
      local.curr_212.code == "]"
        ? local.iter_211.tape[local.iter_211.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_211.code_ptr)] : local.iter_211.code_ptr
        : local.iter_211.code_ptr)

    steps_taken = 1 + local.iter_211.steps_taken
  }
}

locals {
  end_of_code_213 = try(local.iter_212.code_ptr >= length(var.code), true)

  curr_213 = local.end_of_code_213 ? null : {
    code = substr(var.code, local.iter_212.code_ptr, 1)
    input = substr(var.code, local.iter_212.code_ptr, 1) == "," ? substr(local.iter_212.input, 0, 1) : null
  }

  iter_213 = local.end_of_code_213 ? local.iter_212 : {
    input = (local.curr_213.code == ","
      ? substr(local.iter_212.input, 1, -1)
      : local.iter_212.input)

    output = (local.curr_213.code == "."
      ? "${local.iter_212.output}${jsondecode(format("\"\\u%04x\"", local.iter_212.tape[local.iter_212.tape_ptr]))}"
      : local.iter_212.output)
    
    tape = (
      local.curr_213.code == "+"
        ? [for i, b in local.iter_212.tape : (i == local.iter_212.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_213.code == "-"
        ? [for i, b in local.iter_212.tape : (i == local.iter_212.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_213.code == ","
        ? [for i, b in local.iter_212.tape : (i == local.iter_212.tape_ptr ? local.ascii_lookup[local.curr_213.input] : b)]
        : local.iter_212.tape)

    tape_ptr = (
      local.curr_213.code == "<"
        ? local.iter_212.tape_ptr == 0 ? length(local.iter_212.tape) - 1 : local.iter_212.tape_ptr - 1 :
      local.curr_213.code == ">"
        ? local.iter_212.tape_ptr == length(local.iter_212.tape) - 1 ? 0 : local.iter_212.tape_ptr + 1
        : local.iter_212.tape_ptr)

    code_ptr = 1 + (
      local.curr_213.code == "["
        ? local.iter_212.tape[local.iter_212.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_212.code_ptr)] : local.iter_212.code_ptr :
      local.curr_213.code == "]"
        ? local.iter_212.tape[local.iter_212.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_212.code_ptr)] : local.iter_212.code_ptr
        : local.iter_212.code_ptr)

    steps_taken = 1 + local.iter_212.steps_taken
  }
}

locals {
  end_of_code_214 = try(local.iter_213.code_ptr >= length(var.code), true)

  curr_214 = local.end_of_code_214 ? null : {
    code = substr(var.code, local.iter_213.code_ptr, 1)
    input = substr(var.code, local.iter_213.code_ptr, 1) == "," ? substr(local.iter_213.input, 0, 1) : null
  }

  iter_214 = local.end_of_code_214 ? local.iter_213 : {
    input = (local.curr_214.code == ","
      ? substr(local.iter_213.input, 1, -1)
      : local.iter_213.input)

    output = (local.curr_214.code == "."
      ? "${local.iter_213.output}${jsondecode(format("\"\\u%04x\"", local.iter_213.tape[local.iter_213.tape_ptr]))}"
      : local.iter_213.output)
    
    tape = (
      local.curr_214.code == "+"
        ? [for i, b in local.iter_213.tape : (i == local.iter_213.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_214.code == "-"
        ? [for i, b in local.iter_213.tape : (i == local.iter_213.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_214.code == ","
        ? [for i, b in local.iter_213.tape : (i == local.iter_213.tape_ptr ? local.ascii_lookup[local.curr_214.input] : b)]
        : local.iter_213.tape)

    tape_ptr = (
      local.curr_214.code == "<"
        ? local.iter_213.tape_ptr == 0 ? length(local.iter_213.tape) - 1 : local.iter_213.tape_ptr - 1 :
      local.curr_214.code == ">"
        ? local.iter_213.tape_ptr == length(local.iter_213.tape) - 1 ? 0 : local.iter_213.tape_ptr + 1
        : local.iter_213.tape_ptr)

    code_ptr = 1 + (
      local.curr_214.code == "["
        ? local.iter_213.tape[local.iter_213.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_213.code_ptr)] : local.iter_213.code_ptr :
      local.curr_214.code == "]"
        ? local.iter_213.tape[local.iter_213.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_213.code_ptr)] : local.iter_213.code_ptr
        : local.iter_213.code_ptr)

    steps_taken = 1 + local.iter_213.steps_taken
  }
}

locals {
  end_of_code_215 = try(local.iter_214.code_ptr >= length(var.code), true)

  curr_215 = local.end_of_code_215 ? null : {
    code = substr(var.code, local.iter_214.code_ptr, 1)
    input = substr(var.code, local.iter_214.code_ptr, 1) == "," ? substr(local.iter_214.input, 0, 1) : null
  }

  iter_215 = local.end_of_code_215 ? local.iter_214 : {
    input = (local.curr_215.code == ","
      ? substr(local.iter_214.input, 1, -1)
      : local.iter_214.input)

    output = (local.curr_215.code == "."
      ? "${local.iter_214.output}${jsondecode(format("\"\\u%04x\"", local.iter_214.tape[local.iter_214.tape_ptr]))}"
      : local.iter_214.output)
    
    tape = (
      local.curr_215.code == "+"
        ? [for i, b in local.iter_214.tape : (i == local.iter_214.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_215.code == "-"
        ? [for i, b in local.iter_214.tape : (i == local.iter_214.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_215.code == ","
        ? [for i, b in local.iter_214.tape : (i == local.iter_214.tape_ptr ? local.ascii_lookup[local.curr_215.input] : b)]
        : local.iter_214.tape)

    tape_ptr = (
      local.curr_215.code == "<"
        ? local.iter_214.tape_ptr == 0 ? length(local.iter_214.tape) - 1 : local.iter_214.tape_ptr - 1 :
      local.curr_215.code == ">"
        ? local.iter_214.tape_ptr == length(local.iter_214.tape) - 1 ? 0 : local.iter_214.tape_ptr + 1
        : local.iter_214.tape_ptr)

    code_ptr = 1 + (
      local.curr_215.code == "["
        ? local.iter_214.tape[local.iter_214.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_214.code_ptr)] : local.iter_214.code_ptr :
      local.curr_215.code == "]"
        ? local.iter_214.tape[local.iter_214.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_214.code_ptr)] : local.iter_214.code_ptr
        : local.iter_214.code_ptr)

    steps_taken = 1 + local.iter_214.steps_taken
  }
}

locals {
  end_of_code_216 = try(local.iter_215.code_ptr >= length(var.code), true)

  curr_216 = local.end_of_code_216 ? null : {
    code = substr(var.code, local.iter_215.code_ptr, 1)
    input = substr(var.code, local.iter_215.code_ptr, 1) == "," ? substr(local.iter_215.input, 0, 1) : null
  }

  iter_216 = local.end_of_code_216 ? local.iter_215 : {
    input = (local.curr_216.code == ","
      ? substr(local.iter_215.input, 1, -1)
      : local.iter_215.input)

    output = (local.curr_216.code == "."
      ? "${local.iter_215.output}${jsondecode(format("\"\\u%04x\"", local.iter_215.tape[local.iter_215.tape_ptr]))}"
      : local.iter_215.output)
    
    tape = (
      local.curr_216.code == "+"
        ? [for i, b in local.iter_215.tape : (i == local.iter_215.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_216.code == "-"
        ? [for i, b in local.iter_215.tape : (i == local.iter_215.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_216.code == ","
        ? [for i, b in local.iter_215.tape : (i == local.iter_215.tape_ptr ? local.ascii_lookup[local.curr_216.input] : b)]
        : local.iter_215.tape)

    tape_ptr = (
      local.curr_216.code == "<"
        ? local.iter_215.tape_ptr == 0 ? length(local.iter_215.tape) - 1 : local.iter_215.tape_ptr - 1 :
      local.curr_216.code == ">"
        ? local.iter_215.tape_ptr == length(local.iter_215.tape) - 1 ? 0 : local.iter_215.tape_ptr + 1
        : local.iter_215.tape_ptr)

    code_ptr = 1 + (
      local.curr_216.code == "["
        ? local.iter_215.tape[local.iter_215.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_215.code_ptr)] : local.iter_215.code_ptr :
      local.curr_216.code == "]"
        ? local.iter_215.tape[local.iter_215.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_215.code_ptr)] : local.iter_215.code_ptr
        : local.iter_215.code_ptr)

    steps_taken = 1 + local.iter_215.steps_taken
  }
}

locals {
  end_of_code_217 = try(local.iter_216.code_ptr >= length(var.code), true)

  curr_217 = local.end_of_code_217 ? null : {
    code = substr(var.code, local.iter_216.code_ptr, 1)
    input = substr(var.code, local.iter_216.code_ptr, 1) == "," ? substr(local.iter_216.input, 0, 1) : null
  }

  iter_217 = local.end_of_code_217 ? local.iter_216 : {
    input = (local.curr_217.code == ","
      ? substr(local.iter_216.input, 1, -1)
      : local.iter_216.input)

    output = (local.curr_217.code == "."
      ? "${local.iter_216.output}${jsondecode(format("\"\\u%04x\"", local.iter_216.tape[local.iter_216.tape_ptr]))}"
      : local.iter_216.output)
    
    tape = (
      local.curr_217.code == "+"
        ? [for i, b in local.iter_216.tape : (i == local.iter_216.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_217.code == "-"
        ? [for i, b in local.iter_216.tape : (i == local.iter_216.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_217.code == ","
        ? [for i, b in local.iter_216.tape : (i == local.iter_216.tape_ptr ? local.ascii_lookup[local.curr_217.input] : b)]
        : local.iter_216.tape)

    tape_ptr = (
      local.curr_217.code == "<"
        ? local.iter_216.tape_ptr == 0 ? length(local.iter_216.tape) - 1 : local.iter_216.tape_ptr - 1 :
      local.curr_217.code == ">"
        ? local.iter_216.tape_ptr == length(local.iter_216.tape) - 1 ? 0 : local.iter_216.tape_ptr + 1
        : local.iter_216.tape_ptr)

    code_ptr = 1 + (
      local.curr_217.code == "["
        ? local.iter_216.tape[local.iter_216.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_216.code_ptr)] : local.iter_216.code_ptr :
      local.curr_217.code == "]"
        ? local.iter_216.tape[local.iter_216.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_216.code_ptr)] : local.iter_216.code_ptr
        : local.iter_216.code_ptr)

    steps_taken = 1 + local.iter_216.steps_taken
  }
}

locals {
  end_of_code_218 = try(local.iter_217.code_ptr >= length(var.code), true)

  curr_218 = local.end_of_code_218 ? null : {
    code = substr(var.code, local.iter_217.code_ptr, 1)
    input = substr(var.code, local.iter_217.code_ptr, 1) == "," ? substr(local.iter_217.input, 0, 1) : null
  }

  iter_218 = local.end_of_code_218 ? local.iter_217 : {
    input = (local.curr_218.code == ","
      ? substr(local.iter_217.input, 1, -1)
      : local.iter_217.input)

    output = (local.curr_218.code == "."
      ? "${local.iter_217.output}${jsondecode(format("\"\\u%04x\"", local.iter_217.tape[local.iter_217.tape_ptr]))}"
      : local.iter_217.output)
    
    tape = (
      local.curr_218.code == "+"
        ? [for i, b in local.iter_217.tape : (i == local.iter_217.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_218.code == "-"
        ? [for i, b in local.iter_217.tape : (i == local.iter_217.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_218.code == ","
        ? [for i, b in local.iter_217.tape : (i == local.iter_217.tape_ptr ? local.ascii_lookup[local.curr_218.input] : b)]
        : local.iter_217.tape)

    tape_ptr = (
      local.curr_218.code == "<"
        ? local.iter_217.tape_ptr == 0 ? length(local.iter_217.tape) - 1 : local.iter_217.tape_ptr - 1 :
      local.curr_218.code == ">"
        ? local.iter_217.tape_ptr == length(local.iter_217.tape) - 1 ? 0 : local.iter_217.tape_ptr + 1
        : local.iter_217.tape_ptr)

    code_ptr = 1 + (
      local.curr_218.code == "["
        ? local.iter_217.tape[local.iter_217.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_217.code_ptr)] : local.iter_217.code_ptr :
      local.curr_218.code == "]"
        ? local.iter_217.tape[local.iter_217.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_217.code_ptr)] : local.iter_217.code_ptr
        : local.iter_217.code_ptr)

    steps_taken = 1 + local.iter_217.steps_taken
  }
}

locals {
  end_of_code_219 = try(local.iter_218.code_ptr >= length(var.code), true)

  curr_219 = local.end_of_code_219 ? null : {
    code = substr(var.code, local.iter_218.code_ptr, 1)
    input = substr(var.code, local.iter_218.code_ptr, 1) == "," ? substr(local.iter_218.input, 0, 1) : null
  }

  iter_219 = local.end_of_code_219 ? local.iter_218 : {
    input = (local.curr_219.code == ","
      ? substr(local.iter_218.input, 1, -1)
      : local.iter_218.input)

    output = (local.curr_219.code == "."
      ? "${local.iter_218.output}${jsondecode(format("\"\\u%04x\"", local.iter_218.tape[local.iter_218.tape_ptr]))}"
      : local.iter_218.output)
    
    tape = (
      local.curr_219.code == "+"
        ? [for i, b in local.iter_218.tape : (i == local.iter_218.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_219.code == "-"
        ? [for i, b in local.iter_218.tape : (i == local.iter_218.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_219.code == ","
        ? [for i, b in local.iter_218.tape : (i == local.iter_218.tape_ptr ? local.ascii_lookup[local.curr_219.input] : b)]
        : local.iter_218.tape)

    tape_ptr = (
      local.curr_219.code == "<"
        ? local.iter_218.tape_ptr == 0 ? length(local.iter_218.tape) - 1 : local.iter_218.tape_ptr - 1 :
      local.curr_219.code == ">"
        ? local.iter_218.tape_ptr == length(local.iter_218.tape) - 1 ? 0 : local.iter_218.tape_ptr + 1
        : local.iter_218.tape_ptr)

    code_ptr = 1 + (
      local.curr_219.code == "["
        ? local.iter_218.tape[local.iter_218.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_218.code_ptr)] : local.iter_218.code_ptr :
      local.curr_219.code == "]"
        ? local.iter_218.tape[local.iter_218.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_218.code_ptr)] : local.iter_218.code_ptr
        : local.iter_218.code_ptr)

    steps_taken = 1 + local.iter_218.steps_taken
  }
}

locals {
  end_of_code_220 = try(local.iter_219.code_ptr >= length(var.code), true)

  curr_220 = local.end_of_code_220 ? null : {
    code = substr(var.code, local.iter_219.code_ptr, 1)
    input = substr(var.code, local.iter_219.code_ptr, 1) == "," ? substr(local.iter_219.input, 0, 1) : null
  }

  iter_220 = local.end_of_code_220 ? local.iter_219 : {
    input = (local.curr_220.code == ","
      ? substr(local.iter_219.input, 1, -1)
      : local.iter_219.input)

    output = (local.curr_220.code == "."
      ? "${local.iter_219.output}${jsondecode(format("\"\\u%04x\"", local.iter_219.tape[local.iter_219.tape_ptr]))}"
      : local.iter_219.output)
    
    tape = (
      local.curr_220.code == "+"
        ? [for i, b in local.iter_219.tape : (i == local.iter_219.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_220.code == "-"
        ? [for i, b in local.iter_219.tape : (i == local.iter_219.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_220.code == ","
        ? [for i, b in local.iter_219.tape : (i == local.iter_219.tape_ptr ? local.ascii_lookup[local.curr_220.input] : b)]
        : local.iter_219.tape)

    tape_ptr = (
      local.curr_220.code == "<"
        ? local.iter_219.tape_ptr == 0 ? length(local.iter_219.tape) - 1 : local.iter_219.tape_ptr - 1 :
      local.curr_220.code == ">"
        ? local.iter_219.tape_ptr == length(local.iter_219.tape) - 1 ? 0 : local.iter_219.tape_ptr + 1
        : local.iter_219.tape_ptr)

    code_ptr = 1 + (
      local.curr_220.code == "["
        ? local.iter_219.tape[local.iter_219.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_219.code_ptr)] : local.iter_219.code_ptr :
      local.curr_220.code == "]"
        ? local.iter_219.tape[local.iter_219.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_219.code_ptr)] : local.iter_219.code_ptr
        : local.iter_219.code_ptr)

    steps_taken = 1 + local.iter_219.steps_taken
  }
}

locals {
  end_of_code_221 = try(local.iter_220.code_ptr >= length(var.code), true)

  curr_221 = local.end_of_code_221 ? null : {
    code = substr(var.code, local.iter_220.code_ptr, 1)
    input = substr(var.code, local.iter_220.code_ptr, 1) == "," ? substr(local.iter_220.input, 0, 1) : null
  }

  iter_221 = local.end_of_code_221 ? local.iter_220 : {
    input = (local.curr_221.code == ","
      ? substr(local.iter_220.input, 1, -1)
      : local.iter_220.input)

    output = (local.curr_221.code == "."
      ? "${local.iter_220.output}${jsondecode(format("\"\\u%04x\"", local.iter_220.tape[local.iter_220.tape_ptr]))}"
      : local.iter_220.output)
    
    tape = (
      local.curr_221.code == "+"
        ? [for i, b in local.iter_220.tape : (i == local.iter_220.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_221.code == "-"
        ? [for i, b in local.iter_220.tape : (i == local.iter_220.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_221.code == ","
        ? [for i, b in local.iter_220.tape : (i == local.iter_220.tape_ptr ? local.ascii_lookup[local.curr_221.input] : b)]
        : local.iter_220.tape)

    tape_ptr = (
      local.curr_221.code == "<"
        ? local.iter_220.tape_ptr == 0 ? length(local.iter_220.tape) - 1 : local.iter_220.tape_ptr - 1 :
      local.curr_221.code == ">"
        ? local.iter_220.tape_ptr == length(local.iter_220.tape) - 1 ? 0 : local.iter_220.tape_ptr + 1
        : local.iter_220.tape_ptr)

    code_ptr = 1 + (
      local.curr_221.code == "["
        ? local.iter_220.tape[local.iter_220.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_220.code_ptr)] : local.iter_220.code_ptr :
      local.curr_221.code == "]"
        ? local.iter_220.tape[local.iter_220.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_220.code_ptr)] : local.iter_220.code_ptr
        : local.iter_220.code_ptr)

    steps_taken = 1 + local.iter_220.steps_taken
  }
}

locals {
  end_of_code_222 = try(local.iter_221.code_ptr >= length(var.code), true)

  curr_222 = local.end_of_code_222 ? null : {
    code = substr(var.code, local.iter_221.code_ptr, 1)
    input = substr(var.code, local.iter_221.code_ptr, 1) == "," ? substr(local.iter_221.input, 0, 1) : null
  }

  iter_222 = local.end_of_code_222 ? local.iter_221 : {
    input = (local.curr_222.code == ","
      ? substr(local.iter_221.input, 1, -1)
      : local.iter_221.input)

    output = (local.curr_222.code == "."
      ? "${local.iter_221.output}${jsondecode(format("\"\\u%04x\"", local.iter_221.tape[local.iter_221.tape_ptr]))}"
      : local.iter_221.output)
    
    tape = (
      local.curr_222.code == "+"
        ? [for i, b in local.iter_221.tape : (i == local.iter_221.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_222.code == "-"
        ? [for i, b in local.iter_221.tape : (i == local.iter_221.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_222.code == ","
        ? [for i, b in local.iter_221.tape : (i == local.iter_221.tape_ptr ? local.ascii_lookup[local.curr_222.input] : b)]
        : local.iter_221.tape)

    tape_ptr = (
      local.curr_222.code == "<"
        ? local.iter_221.tape_ptr == 0 ? length(local.iter_221.tape) - 1 : local.iter_221.tape_ptr - 1 :
      local.curr_222.code == ">"
        ? local.iter_221.tape_ptr == length(local.iter_221.tape) - 1 ? 0 : local.iter_221.tape_ptr + 1
        : local.iter_221.tape_ptr)

    code_ptr = 1 + (
      local.curr_222.code == "["
        ? local.iter_221.tape[local.iter_221.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_221.code_ptr)] : local.iter_221.code_ptr :
      local.curr_222.code == "]"
        ? local.iter_221.tape[local.iter_221.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_221.code_ptr)] : local.iter_221.code_ptr
        : local.iter_221.code_ptr)

    steps_taken = 1 + local.iter_221.steps_taken
  }
}

locals {
  end_of_code_223 = try(local.iter_222.code_ptr >= length(var.code), true)

  curr_223 = local.end_of_code_223 ? null : {
    code = substr(var.code, local.iter_222.code_ptr, 1)
    input = substr(var.code, local.iter_222.code_ptr, 1) == "," ? substr(local.iter_222.input, 0, 1) : null
  }

  iter_223 = local.end_of_code_223 ? local.iter_222 : {
    input = (local.curr_223.code == ","
      ? substr(local.iter_222.input, 1, -1)
      : local.iter_222.input)

    output = (local.curr_223.code == "."
      ? "${local.iter_222.output}${jsondecode(format("\"\\u%04x\"", local.iter_222.tape[local.iter_222.tape_ptr]))}"
      : local.iter_222.output)
    
    tape = (
      local.curr_223.code == "+"
        ? [for i, b in local.iter_222.tape : (i == local.iter_222.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_223.code == "-"
        ? [for i, b in local.iter_222.tape : (i == local.iter_222.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_223.code == ","
        ? [for i, b in local.iter_222.tape : (i == local.iter_222.tape_ptr ? local.ascii_lookup[local.curr_223.input] : b)]
        : local.iter_222.tape)

    tape_ptr = (
      local.curr_223.code == "<"
        ? local.iter_222.tape_ptr == 0 ? length(local.iter_222.tape) - 1 : local.iter_222.tape_ptr - 1 :
      local.curr_223.code == ">"
        ? local.iter_222.tape_ptr == length(local.iter_222.tape) - 1 ? 0 : local.iter_222.tape_ptr + 1
        : local.iter_222.tape_ptr)

    code_ptr = 1 + (
      local.curr_223.code == "["
        ? local.iter_222.tape[local.iter_222.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_222.code_ptr)] : local.iter_222.code_ptr :
      local.curr_223.code == "]"
        ? local.iter_222.tape[local.iter_222.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_222.code_ptr)] : local.iter_222.code_ptr
        : local.iter_222.code_ptr)

    steps_taken = 1 + local.iter_222.steps_taken
  }
}

locals {
  end_of_code_224 = try(local.iter_223.code_ptr >= length(var.code), true)

  curr_224 = local.end_of_code_224 ? null : {
    code = substr(var.code, local.iter_223.code_ptr, 1)
    input = substr(var.code, local.iter_223.code_ptr, 1) == "," ? substr(local.iter_223.input, 0, 1) : null
  }

  iter_224 = local.end_of_code_224 ? local.iter_223 : {
    input = (local.curr_224.code == ","
      ? substr(local.iter_223.input, 1, -1)
      : local.iter_223.input)

    output = (local.curr_224.code == "."
      ? "${local.iter_223.output}${jsondecode(format("\"\\u%04x\"", local.iter_223.tape[local.iter_223.tape_ptr]))}"
      : local.iter_223.output)
    
    tape = (
      local.curr_224.code == "+"
        ? [for i, b in local.iter_223.tape : (i == local.iter_223.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_224.code == "-"
        ? [for i, b in local.iter_223.tape : (i == local.iter_223.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_224.code == ","
        ? [for i, b in local.iter_223.tape : (i == local.iter_223.tape_ptr ? local.ascii_lookup[local.curr_224.input] : b)]
        : local.iter_223.tape)

    tape_ptr = (
      local.curr_224.code == "<"
        ? local.iter_223.tape_ptr == 0 ? length(local.iter_223.tape) - 1 : local.iter_223.tape_ptr - 1 :
      local.curr_224.code == ">"
        ? local.iter_223.tape_ptr == length(local.iter_223.tape) - 1 ? 0 : local.iter_223.tape_ptr + 1
        : local.iter_223.tape_ptr)

    code_ptr = 1 + (
      local.curr_224.code == "["
        ? local.iter_223.tape[local.iter_223.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_223.code_ptr)] : local.iter_223.code_ptr :
      local.curr_224.code == "]"
        ? local.iter_223.tape[local.iter_223.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_223.code_ptr)] : local.iter_223.code_ptr
        : local.iter_223.code_ptr)

    steps_taken = 1 + local.iter_223.steps_taken
  }
}

locals {
  end_of_code_225 = try(local.iter_224.code_ptr >= length(var.code), true)

  curr_225 = local.end_of_code_225 ? null : {
    code = substr(var.code, local.iter_224.code_ptr, 1)
    input = substr(var.code, local.iter_224.code_ptr, 1) == "," ? substr(local.iter_224.input, 0, 1) : null
  }

  iter_225 = local.end_of_code_225 ? local.iter_224 : {
    input = (local.curr_225.code == ","
      ? substr(local.iter_224.input, 1, -1)
      : local.iter_224.input)

    output = (local.curr_225.code == "."
      ? "${local.iter_224.output}${jsondecode(format("\"\\u%04x\"", local.iter_224.tape[local.iter_224.tape_ptr]))}"
      : local.iter_224.output)
    
    tape = (
      local.curr_225.code == "+"
        ? [for i, b in local.iter_224.tape : (i == local.iter_224.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_225.code == "-"
        ? [for i, b in local.iter_224.tape : (i == local.iter_224.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_225.code == ","
        ? [for i, b in local.iter_224.tape : (i == local.iter_224.tape_ptr ? local.ascii_lookup[local.curr_225.input] : b)]
        : local.iter_224.tape)

    tape_ptr = (
      local.curr_225.code == "<"
        ? local.iter_224.tape_ptr == 0 ? length(local.iter_224.tape) - 1 : local.iter_224.tape_ptr - 1 :
      local.curr_225.code == ">"
        ? local.iter_224.tape_ptr == length(local.iter_224.tape) - 1 ? 0 : local.iter_224.tape_ptr + 1
        : local.iter_224.tape_ptr)

    code_ptr = 1 + (
      local.curr_225.code == "["
        ? local.iter_224.tape[local.iter_224.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_224.code_ptr)] : local.iter_224.code_ptr :
      local.curr_225.code == "]"
        ? local.iter_224.tape[local.iter_224.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_224.code_ptr)] : local.iter_224.code_ptr
        : local.iter_224.code_ptr)

    steps_taken = 1 + local.iter_224.steps_taken
  }
}

locals {
  end_of_code_226 = try(local.iter_225.code_ptr >= length(var.code), true)

  curr_226 = local.end_of_code_226 ? null : {
    code = substr(var.code, local.iter_225.code_ptr, 1)
    input = substr(var.code, local.iter_225.code_ptr, 1) == "," ? substr(local.iter_225.input, 0, 1) : null
  }

  iter_226 = local.end_of_code_226 ? local.iter_225 : {
    input = (local.curr_226.code == ","
      ? substr(local.iter_225.input, 1, -1)
      : local.iter_225.input)

    output = (local.curr_226.code == "."
      ? "${local.iter_225.output}${jsondecode(format("\"\\u%04x\"", local.iter_225.tape[local.iter_225.tape_ptr]))}"
      : local.iter_225.output)
    
    tape = (
      local.curr_226.code == "+"
        ? [for i, b in local.iter_225.tape : (i == local.iter_225.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_226.code == "-"
        ? [for i, b in local.iter_225.tape : (i == local.iter_225.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_226.code == ","
        ? [for i, b in local.iter_225.tape : (i == local.iter_225.tape_ptr ? local.ascii_lookup[local.curr_226.input] : b)]
        : local.iter_225.tape)

    tape_ptr = (
      local.curr_226.code == "<"
        ? local.iter_225.tape_ptr == 0 ? length(local.iter_225.tape) - 1 : local.iter_225.tape_ptr - 1 :
      local.curr_226.code == ">"
        ? local.iter_225.tape_ptr == length(local.iter_225.tape) - 1 ? 0 : local.iter_225.tape_ptr + 1
        : local.iter_225.tape_ptr)

    code_ptr = 1 + (
      local.curr_226.code == "["
        ? local.iter_225.tape[local.iter_225.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_225.code_ptr)] : local.iter_225.code_ptr :
      local.curr_226.code == "]"
        ? local.iter_225.tape[local.iter_225.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_225.code_ptr)] : local.iter_225.code_ptr
        : local.iter_225.code_ptr)

    steps_taken = 1 + local.iter_225.steps_taken
  }
}

locals {
  end_of_code_227 = try(local.iter_226.code_ptr >= length(var.code), true)

  curr_227 = local.end_of_code_227 ? null : {
    code = substr(var.code, local.iter_226.code_ptr, 1)
    input = substr(var.code, local.iter_226.code_ptr, 1) == "," ? substr(local.iter_226.input, 0, 1) : null
  }

  iter_227 = local.end_of_code_227 ? local.iter_226 : {
    input = (local.curr_227.code == ","
      ? substr(local.iter_226.input, 1, -1)
      : local.iter_226.input)

    output = (local.curr_227.code == "."
      ? "${local.iter_226.output}${jsondecode(format("\"\\u%04x\"", local.iter_226.tape[local.iter_226.tape_ptr]))}"
      : local.iter_226.output)
    
    tape = (
      local.curr_227.code == "+"
        ? [for i, b in local.iter_226.tape : (i == local.iter_226.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_227.code == "-"
        ? [for i, b in local.iter_226.tape : (i == local.iter_226.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_227.code == ","
        ? [for i, b in local.iter_226.tape : (i == local.iter_226.tape_ptr ? local.ascii_lookup[local.curr_227.input] : b)]
        : local.iter_226.tape)

    tape_ptr = (
      local.curr_227.code == "<"
        ? local.iter_226.tape_ptr == 0 ? length(local.iter_226.tape) - 1 : local.iter_226.tape_ptr - 1 :
      local.curr_227.code == ">"
        ? local.iter_226.tape_ptr == length(local.iter_226.tape) - 1 ? 0 : local.iter_226.tape_ptr + 1
        : local.iter_226.tape_ptr)

    code_ptr = 1 + (
      local.curr_227.code == "["
        ? local.iter_226.tape[local.iter_226.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_226.code_ptr)] : local.iter_226.code_ptr :
      local.curr_227.code == "]"
        ? local.iter_226.tape[local.iter_226.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_226.code_ptr)] : local.iter_226.code_ptr
        : local.iter_226.code_ptr)

    steps_taken = 1 + local.iter_226.steps_taken
  }
}

locals {
  end_of_code_228 = try(local.iter_227.code_ptr >= length(var.code), true)

  curr_228 = local.end_of_code_228 ? null : {
    code = substr(var.code, local.iter_227.code_ptr, 1)
    input = substr(var.code, local.iter_227.code_ptr, 1) == "," ? substr(local.iter_227.input, 0, 1) : null
  }

  iter_228 = local.end_of_code_228 ? local.iter_227 : {
    input = (local.curr_228.code == ","
      ? substr(local.iter_227.input, 1, -1)
      : local.iter_227.input)

    output = (local.curr_228.code == "."
      ? "${local.iter_227.output}${jsondecode(format("\"\\u%04x\"", local.iter_227.tape[local.iter_227.tape_ptr]))}"
      : local.iter_227.output)
    
    tape = (
      local.curr_228.code == "+"
        ? [for i, b in local.iter_227.tape : (i == local.iter_227.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_228.code == "-"
        ? [for i, b in local.iter_227.tape : (i == local.iter_227.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_228.code == ","
        ? [for i, b in local.iter_227.tape : (i == local.iter_227.tape_ptr ? local.ascii_lookup[local.curr_228.input] : b)]
        : local.iter_227.tape)

    tape_ptr = (
      local.curr_228.code == "<"
        ? local.iter_227.tape_ptr == 0 ? length(local.iter_227.tape) - 1 : local.iter_227.tape_ptr - 1 :
      local.curr_228.code == ">"
        ? local.iter_227.tape_ptr == length(local.iter_227.tape) - 1 ? 0 : local.iter_227.tape_ptr + 1
        : local.iter_227.tape_ptr)

    code_ptr = 1 + (
      local.curr_228.code == "["
        ? local.iter_227.tape[local.iter_227.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_227.code_ptr)] : local.iter_227.code_ptr :
      local.curr_228.code == "]"
        ? local.iter_227.tape[local.iter_227.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_227.code_ptr)] : local.iter_227.code_ptr
        : local.iter_227.code_ptr)

    steps_taken = 1 + local.iter_227.steps_taken
  }
}

locals {
  end_of_code_229 = try(local.iter_228.code_ptr >= length(var.code), true)

  curr_229 = local.end_of_code_229 ? null : {
    code = substr(var.code, local.iter_228.code_ptr, 1)
    input = substr(var.code, local.iter_228.code_ptr, 1) == "," ? substr(local.iter_228.input, 0, 1) : null
  }

  iter_229 = local.end_of_code_229 ? local.iter_228 : {
    input = (local.curr_229.code == ","
      ? substr(local.iter_228.input, 1, -1)
      : local.iter_228.input)

    output = (local.curr_229.code == "."
      ? "${local.iter_228.output}${jsondecode(format("\"\\u%04x\"", local.iter_228.tape[local.iter_228.tape_ptr]))}"
      : local.iter_228.output)
    
    tape = (
      local.curr_229.code == "+"
        ? [for i, b in local.iter_228.tape : (i == local.iter_228.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_229.code == "-"
        ? [for i, b in local.iter_228.tape : (i == local.iter_228.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_229.code == ","
        ? [for i, b in local.iter_228.tape : (i == local.iter_228.tape_ptr ? local.ascii_lookup[local.curr_229.input] : b)]
        : local.iter_228.tape)

    tape_ptr = (
      local.curr_229.code == "<"
        ? local.iter_228.tape_ptr == 0 ? length(local.iter_228.tape) - 1 : local.iter_228.tape_ptr - 1 :
      local.curr_229.code == ">"
        ? local.iter_228.tape_ptr == length(local.iter_228.tape) - 1 ? 0 : local.iter_228.tape_ptr + 1
        : local.iter_228.tape_ptr)

    code_ptr = 1 + (
      local.curr_229.code == "["
        ? local.iter_228.tape[local.iter_228.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_228.code_ptr)] : local.iter_228.code_ptr :
      local.curr_229.code == "]"
        ? local.iter_228.tape[local.iter_228.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_228.code_ptr)] : local.iter_228.code_ptr
        : local.iter_228.code_ptr)

    steps_taken = 1 + local.iter_228.steps_taken
  }
}

locals {
  end_of_code_230 = try(local.iter_229.code_ptr >= length(var.code), true)

  curr_230 = local.end_of_code_230 ? null : {
    code = substr(var.code, local.iter_229.code_ptr, 1)
    input = substr(var.code, local.iter_229.code_ptr, 1) == "," ? substr(local.iter_229.input, 0, 1) : null
  }

  iter_230 = local.end_of_code_230 ? local.iter_229 : {
    input = (local.curr_230.code == ","
      ? substr(local.iter_229.input, 1, -1)
      : local.iter_229.input)

    output = (local.curr_230.code == "."
      ? "${local.iter_229.output}${jsondecode(format("\"\\u%04x\"", local.iter_229.tape[local.iter_229.tape_ptr]))}"
      : local.iter_229.output)
    
    tape = (
      local.curr_230.code == "+"
        ? [for i, b in local.iter_229.tape : (i == local.iter_229.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_230.code == "-"
        ? [for i, b in local.iter_229.tape : (i == local.iter_229.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_230.code == ","
        ? [for i, b in local.iter_229.tape : (i == local.iter_229.tape_ptr ? local.ascii_lookup[local.curr_230.input] : b)]
        : local.iter_229.tape)

    tape_ptr = (
      local.curr_230.code == "<"
        ? local.iter_229.tape_ptr == 0 ? length(local.iter_229.tape) - 1 : local.iter_229.tape_ptr - 1 :
      local.curr_230.code == ">"
        ? local.iter_229.tape_ptr == length(local.iter_229.tape) - 1 ? 0 : local.iter_229.tape_ptr + 1
        : local.iter_229.tape_ptr)

    code_ptr = 1 + (
      local.curr_230.code == "["
        ? local.iter_229.tape[local.iter_229.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_229.code_ptr)] : local.iter_229.code_ptr :
      local.curr_230.code == "]"
        ? local.iter_229.tape[local.iter_229.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_229.code_ptr)] : local.iter_229.code_ptr
        : local.iter_229.code_ptr)

    steps_taken = 1 + local.iter_229.steps_taken
  }
}

locals {
  end_of_code_231 = try(local.iter_230.code_ptr >= length(var.code), true)

  curr_231 = local.end_of_code_231 ? null : {
    code = substr(var.code, local.iter_230.code_ptr, 1)
    input = substr(var.code, local.iter_230.code_ptr, 1) == "," ? substr(local.iter_230.input, 0, 1) : null
  }

  iter_231 = local.end_of_code_231 ? local.iter_230 : {
    input = (local.curr_231.code == ","
      ? substr(local.iter_230.input, 1, -1)
      : local.iter_230.input)

    output = (local.curr_231.code == "."
      ? "${local.iter_230.output}${jsondecode(format("\"\\u%04x\"", local.iter_230.tape[local.iter_230.tape_ptr]))}"
      : local.iter_230.output)
    
    tape = (
      local.curr_231.code == "+"
        ? [for i, b in local.iter_230.tape : (i == local.iter_230.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_231.code == "-"
        ? [for i, b in local.iter_230.tape : (i == local.iter_230.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_231.code == ","
        ? [for i, b in local.iter_230.tape : (i == local.iter_230.tape_ptr ? local.ascii_lookup[local.curr_231.input] : b)]
        : local.iter_230.tape)

    tape_ptr = (
      local.curr_231.code == "<"
        ? local.iter_230.tape_ptr == 0 ? length(local.iter_230.tape) - 1 : local.iter_230.tape_ptr - 1 :
      local.curr_231.code == ">"
        ? local.iter_230.tape_ptr == length(local.iter_230.tape) - 1 ? 0 : local.iter_230.tape_ptr + 1
        : local.iter_230.tape_ptr)

    code_ptr = 1 + (
      local.curr_231.code == "["
        ? local.iter_230.tape[local.iter_230.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_230.code_ptr)] : local.iter_230.code_ptr :
      local.curr_231.code == "]"
        ? local.iter_230.tape[local.iter_230.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_230.code_ptr)] : local.iter_230.code_ptr
        : local.iter_230.code_ptr)

    steps_taken = 1 + local.iter_230.steps_taken
  }
}

locals {
  end_of_code_232 = try(local.iter_231.code_ptr >= length(var.code), true)

  curr_232 = local.end_of_code_232 ? null : {
    code = substr(var.code, local.iter_231.code_ptr, 1)
    input = substr(var.code, local.iter_231.code_ptr, 1) == "," ? substr(local.iter_231.input, 0, 1) : null
  }

  iter_232 = local.end_of_code_232 ? local.iter_231 : {
    input = (local.curr_232.code == ","
      ? substr(local.iter_231.input, 1, -1)
      : local.iter_231.input)

    output = (local.curr_232.code == "."
      ? "${local.iter_231.output}${jsondecode(format("\"\\u%04x\"", local.iter_231.tape[local.iter_231.tape_ptr]))}"
      : local.iter_231.output)
    
    tape = (
      local.curr_232.code == "+"
        ? [for i, b in local.iter_231.tape : (i == local.iter_231.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_232.code == "-"
        ? [for i, b in local.iter_231.tape : (i == local.iter_231.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_232.code == ","
        ? [for i, b in local.iter_231.tape : (i == local.iter_231.tape_ptr ? local.ascii_lookup[local.curr_232.input] : b)]
        : local.iter_231.tape)

    tape_ptr = (
      local.curr_232.code == "<"
        ? local.iter_231.tape_ptr == 0 ? length(local.iter_231.tape) - 1 : local.iter_231.tape_ptr - 1 :
      local.curr_232.code == ">"
        ? local.iter_231.tape_ptr == length(local.iter_231.tape) - 1 ? 0 : local.iter_231.tape_ptr + 1
        : local.iter_231.tape_ptr)

    code_ptr = 1 + (
      local.curr_232.code == "["
        ? local.iter_231.tape[local.iter_231.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_231.code_ptr)] : local.iter_231.code_ptr :
      local.curr_232.code == "]"
        ? local.iter_231.tape[local.iter_231.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_231.code_ptr)] : local.iter_231.code_ptr
        : local.iter_231.code_ptr)

    steps_taken = 1 + local.iter_231.steps_taken
  }
}

locals {
  end_of_code_233 = try(local.iter_232.code_ptr >= length(var.code), true)

  curr_233 = local.end_of_code_233 ? null : {
    code = substr(var.code, local.iter_232.code_ptr, 1)
    input = substr(var.code, local.iter_232.code_ptr, 1) == "," ? substr(local.iter_232.input, 0, 1) : null
  }

  iter_233 = local.end_of_code_233 ? local.iter_232 : {
    input = (local.curr_233.code == ","
      ? substr(local.iter_232.input, 1, -1)
      : local.iter_232.input)

    output = (local.curr_233.code == "."
      ? "${local.iter_232.output}${jsondecode(format("\"\\u%04x\"", local.iter_232.tape[local.iter_232.tape_ptr]))}"
      : local.iter_232.output)
    
    tape = (
      local.curr_233.code == "+"
        ? [for i, b in local.iter_232.tape : (i == local.iter_232.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_233.code == "-"
        ? [for i, b in local.iter_232.tape : (i == local.iter_232.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_233.code == ","
        ? [for i, b in local.iter_232.tape : (i == local.iter_232.tape_ptr ? local.ascii_lookup[local.curr_233.input] : b)]
        : local.iter_232.tape)

    tape_ptr = (
      local.curr_233.code == "<"
        ? local.iter_232.tape_ptr == 0 ? length(local.iter_232.tape) - 1 : local.iter_232.tape_ptr - 1 :
      local.curr_233.code == ">"
        ? local.iter_232.tape_ptr == length(local.iter_232.tape) - 1 ? 0 : local.iter_232.tape_ptr + 1
        : local.iter_232.tape_ptr)

    code_ptr = 1 + (
      local.curr_233.code == "["
        ? local.iter_232.tape[local.iter_232.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_232.code_ptr)] : local.iter_232.code_ptr :
      local.curr_233.code == "]"
        ? local.iter_232.tape[local.iter_232.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_232.code_ptr)] : local.iter_232.code_ptr
        : local.iter_232.code_ptr)

    steps_taken = 1 + local.iter_232.steps_taken
  }
}

locals {
  end_of_code_234 = try(local.iter_233.code_ptr >= length(var.code), true)

  curr_234 = local.end_of_code_234 ? null : {
    code = substr(var.code, local.iter_233.code_ptr, 1)
    input = substr(var.code, local.iter_233.code_ptr, 1) == "," ? substr(local.iter_233.input, 0, 1) : null
  }

  iter_234 = local.end_of_code_234 ? local.iter_233 : {
    input = (local.curr_234.code == ","
      ? substr(local.iter_233.input, 1, -1)
      : local.iter_233.input)

    output = (local.curr_234.code == "."
      ? "${local.iter_233.output}${jsondecode(format("\"\\u%04x\"", local.iter_233.tape[local.iter_233.tape_ptr]))}"
      : local.iter_233.output)
    
    tape = (
      local.curr_234.code == "+"
        ? [for i, b in local.iter_233.tape : (i == local.iter_233.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_234.code == "-"
        ? [for i, b in local.iter_233.tape : (i == local.iter_233.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_234.code == ","
        ? [for i, b in local.iter_233.tape : (i == local.iter_233.tape_ptr ? local.ascii_lookup[local.curr_234.input] : b)]
        : local.iter_233.tape)

    tape_ptr = (
      local.curr_234.code == "<"
        ? local.iter_233.tape_ptr == 0 ? length(local.iter_233.tape) - 1 : local.iter_233.tape_ptr - 1 :
      local.curr_234.code == ">"
        ? local.iter_233.tape_ptr == length(local.iter_233.tape) - 1 ? 0 : local.iter_233.tape_ptr + 1
        : local.iter_233.tape_ptr)

    code_ptr = 1 + (
      local.curr_234.code == "["
        ? local.iter_233.tape[local.iter_233.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_233.code_ptr)] : local.iter_233.code_ptr :
      local.curr_234.code == "]"
        ? local.iter_233.tape[local.iter_233.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_233.code_ptr)] : local.iter_233.code_ptr
        : local.iter_233.code_ptr)

    steps_taken = 1 + local.iter_233.steps_taken
  }
}

locals {
  end_of_code_235 = try(local.iter_234.code_ptr >= length(var.code), true)

  curr_235 = local.end_of_code_235 ? null : {
    code = substr(var.code, local.iter_234.code_ptr, 1)
    input = substr(var.code, local.iter_234.code_ptr, 1) == "," ? substr(local.iter_234.input, 0, 1) : null
  }

  iter_235 = local.end_of_code_235 ? local.iter_234 : {
    input = (local.curr_235.code == ","
      ? substr(local.iter_234.input, 1, -1)
      : local.iter_234.input)

    output = (local.curr_235.code == "."
      ? "${local.iter_234.output}${jsondecode(format("\"\\u%04x\"", local.iter_234.tape[local.iter_234.tape_ptr]))}"
      : local.iter_234.output)
    
    tape = (
      local.curr_235.code == "+"
        ? [for i, b in local.iter_234.tape : (i == local.iter_234.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_235.code == "-"
        ? [for i, b in local.iter_234.tape : (i == local.iter_234.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_235.code == ","
        ? [for i, b in local.iter_234.tape : (i == local.iter_234.tape_ptr ? local.ascii_lookup[local.curr_235.input] : b)]
        : local.iter_234.tape)

    tape_ptr = (
      local.curr_235.code == "<"
        ? local.iter_234.tape_ptr == 0 ? length(local.iter_234.tape) - 1 : local.iter_234.tape_ptr - 1 :
      local.curr_235.code == ">"
        ? local.iter_234.tape_ptr == length(local.iter_234.tape) - 1 ? 0 : local.iter_234.tape_ptr + 1
        : local.iter_234.tape_ptr)

    code_ptr = 1 + (
      local.curr_235.code == "["
        ? local.iter_234.tape[local.iter_234.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_234.code_ptr)] : local.iter_234.code_ptr :
      local.curr_235.code == "]"
        ? local.iter_234.tape[local.iter_234.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_234.code_ptr)] : local.iter_234.code_ptr
        : local.iter_234.code_ptr)

    steps_taken = 1 + local.iter_234.steps_taken
  }
}

locals {
  end_of_code_236 = try(local.iter_235.code_ptr >= length(var.code), true)

  curr_236 = local.end_of_code_236 ? null : {
    code = substr(var.code, local.iter_235.code_ptr, 1)
    input = substr(var.code, local.iter_235.code_ptr, 1) == "," ? substr(local.iter_235.input, 0, 1) : null
  }

  iter_236 = local.end_of_code_236 ? local.iter_235 : {
    input = (local.curr_236.code == ","
      ? substr(local.iter_235.input, 1, -1)
      : local.iter_235.input)

    output = (local.curr_236.code == "."
      ? "${local.iter_235.output}${jsondecode(format("\"\\u%04x\"", local.iter_235.tape[local.iter_235.tape_ptr]))}"
      : local.iter_235.output)
    
    tape = (
      local.curr_236.code == "+"
        ? [for i, b in local.iter_235.tape : (i == local.iter_235.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_236.code == "-"
        ? [for i, b in local.iter_235.tape : (i == local.iter_235.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_236.code == ","
        ? [for i, b in local.iter_235.tape : (i == local.iter_235.tape_ptr ? local.ascii_lookup[local.curr_236.input] : b)]
        : local.iter_235.tape)

    tape_ptr = (
      local.curr_236.code == "<"
        ? local.iter_235.tape_ptr == 0 ? length(local.iter_235.tape) - 1 : local.iter_235.tape_ptr - 1 :
      local.curr_236.code == ">"
        ? local.iter_235.tape_ptr == length(local.iter_235.tape) - 1 ? 0 : local.iter_235.tape_ptr + 1
        : local.iter_235.tape_ptr)

    code_ptr = 1 + (
      local.curr_236.code == "["
        ? local.iter_235.tape[local.iter_235.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_235.code_ptr)] : local.iter_235.code_ptr :
      local.curr_236.code == "]"
        ? local.iter_235.tape[local.iter_235.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_235.code_ptr)] : local.iter_235.code_ptr
        : local.iter_235.code_ptr)

    steps_taken = 1 + local.iter_235.steps_taken
  }
}

locals {
  end_of_code_237 = try(local.iter_236.code_ptr >= length(var.code), true)

  curr_237 = local.end_of_code_237 ? null : {
    code = substr(var.code, local.iter_236.code_ptr, 1)
    input = substr(var.code, local.iter_236.code_ptr, 1) == "," ? substr(local.iter_236.input, 0, 1) : null
  }

  iter_237 = local.end_of_code_237 ? local.iter_236 : {
    input = (local.curr_237.code == ","
      ? substr(local.iter_236.input, 1, -1)
      : local.iter_236.input)

    output = (local.curr_237.code == "."
      ? "${local.iter_236.output}${jsondecode(format("\"\\u%04x\"", local.iter_236.tape[local.iter_236.tape_ptr]))}"
      : local.iter_236.output)
    
    tape = (
      local.curr_237.code == "+"
        ? [for i, b in local.iter_236.tape : (i == local.iter_236.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_237.code == "-"
        ? [for i, b in local.iter_236.tape : (i == local.iter_236.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_237.code == ","
        ? [for i, b in local.iter_236.tape : (i == local.iter_236.tape_ptr ? local.ascii_lookup[local.curr_237.input] : b)]
        : local.iter_236.tape)

    tape_ptr = (
      local.curr_237.code == "<"
        ? local.iter_236.tape_ptr == 0 ? length(local.iter_236.tape) - 1 : local.iter_236.tape_ptr - 1 :
      local.curr_237.code == ">"
        ? local.iter_236.tape_ptr == length(local.iter_236.tape) - 1 ? 0 : local.iter_236.tape_ptr + 1
        : local.iter_236.tape_ptr)

    code_ptr = 1 + (
      local.curr_237.code == "["
        ? local.iter_236.tape[local.iter_236.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_236.code_ptr)] : local.iter_236.code_ptr :
      local.curr_237.code == "]"
        ? local.iter_236.tape[local.iter_236.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_236.code_ptr)] : local.iter_236.code_ptr
        : local.iter_236.code_ptr)

    steps_taken = 1 + local.iter_236.steps_taken
  }
}

locals {
  end_of_code_238 = try(local.iter_237.code_ptr >= length(var.code), true)

  curr_238 = local.end_of_code_238 ? null : {
    code = substr(var.code, local.iter_237.code_ptr, 1)
    input = substr(var.code, local.iter_237.code_ptr, 1) == "," ? substr(local.iter_237.input, 0, 1) : null
  }

  iter_238 = local.end_of_code_238 ? local.iter_237 : {
    input = (local.curr_238.code == ","
      ? substr(local.iter_237.input, 1, -1)
      : local.iter_237.input)

    output = (local.curr_238.code == "."
      ? "${local.iter_237.output}${jsondecode(format("\"\\u%04x\"", local.iter_237.tape[local.iter_237.tape_ptr]))}"
      : local.iter_237.output)
    
    tape = (
      local.curr_238.code == "+"
        ? [for i, b in local.iter_237.tape : (i == local.iter_237.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_238.code == "-"
        ? [for i, b in local.iter_237.tape : (i == local.iter_237.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_238.code == ","
        ? [for i, b in local.iter_237.tape : (i == local.iter_237.tape_ptr ? local.ascii_lookup[local.curr_238.input] : b)]
        : local.iter_237.tape)

    tape_ptr = (
      local.curr_238.code == "<"
        ? local.iter_237.tape_ptr == 0 ? length(local.iter_237.tape) - 1 : local.iter_237.tape_ptr - 1 :
      local.curr_238.code == ">"
        ? local.iter_237.tape_ptr == length(local.iter_237.tape) - 1 ? 0 : local.iter_237.tape_ptr + 1
        : local.iter_237.tape_ptr)

    code_ptr = 1 + (
      local.curr_238.code == "["
        ? local.iter_237.tape[local.iter_237.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_237.code_ptr)] : local.iter_237.code_ptr :
      local.curr_238.code == "]"
        ? local.iter_237.tape[local.iter_237.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_237.code_ptr)] : local.iter_237.code_ptr
        : local.iter_237.code_ptr)

    steps_taken = 1 + local.iter_237.steps_taken
  }
}

locals {
  end_of_code_239 = try(local.iter_238.code_ptr >= length(var.code), true)

  curr_239 = local.end_of_code_239 ? null : {
    code = substr(var.code, local.iter_238.code_ptr, 1)
    input = substr(var.code, local.iter_238.code_ptr, 1) == "," ? substr(local.iter_238.input, 0, 1) : null
  }

  iter_239 = local.end_of_code_239 ? local.iter_238 : {
    input = (local.curr_239.code == ","
      ? substr(local.iter_238.input, 1, -1)
      : local.iter_238.input)

    output = (local.curr_239.code == "."
      ? "${local.iter_238.output}${jsondecode(format("\"\\u%04x\"", local.iter_238.tape[local.iter_238.tape_ptr]))}"
      : local.iter_238.output)
    
    tape = (
      local.curr_239.code == "+"
        ? [for i, b in local.iter_238.tape : (i == local.iter_238.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_239.code == "-"
        ? [for i, b in local.iter_238.tape : (i == local.iter_238.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_239.code == ","
        ? [for i, b in local.iter_238.tape : (i == local.iter_238.tape_ptr ? local.ascii_lookup[local.curr_239.input] : b)]
        : local.iter_238.tape)

    tape_ptr = (
      local.curr_239.code == "<"
        ? local.iter_238.tape_ptr == 0 ? length(local.iter_238.tape) - 1 : local.iter_238.tape_ptr - 1 :
      local.curr_239.code == ">"
        ? local.iter_238.tape_ptr == length(local.iter_238.tape) - 1 ? 0 : local.iter_238.tape_ptr + 1
        : local.iter_238.tape_ptr)

    code_ptr = 1 + (
      local.curr_239.code == "["
        ? local.iter_238.tape[local.iter_238.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_238.code_ptr)] : local.iter_238.code_ptr :
      local.curr_239.code == "]"
        ? local.iter_238.tape[local.iter_238.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_238.code_ptr)] : local.iter_238.code_ptr
        : local.iter_238.code_ptr)

    steps_taken = 1 + local.iter_238.steps_taken
  }
}

locals {
  end_of_code_240 = try(local.iter_239.code_ptr >= length(var.code), true)

  curr_240 = local.end_of_code_240 ? null : {
    code = substr(var.code, local.iter_239.code_ptr, 1)
    input = substr(var.code, local.iter_239.code_ptr, 1) == "," ? substr(local.iter_239.input, 0, 1) : null
  }

  iter_240 = local.end_of_code_240 ? local.iter_239 : {
    input = (local.curr_240.code == ","
      ? substr(local.iter_239.input, 1, -1)
      : local.iter_239.input)

    output = (local.curr_240.code == "."
      ? "${local.iter_239.output}${jsondecode(format("\"\\u%04x\"", local.iter_239.tape[local.iter_239.tape_ptr]))}"
      : local.iter_239.output)
    
    tape = (
      local.curr_240.code == "+"
        ? [for i, b in local.iter_239.tape : (i == local.iter_239.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_240.code == "-"
        ? [for i, b in local.iter_239.tape : (i == local.iter_239.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_240.code == ","
        ? [for i, b in local.iter_239.tape : (i == local.iter_239.tape_ptr ? local.ascii_lookup[local.curr_240.input] : b)]
        : local.iter_239.tape)

    tape_ptr = (
      local.curr_240.code == "<"
        ? local.iter_239.tape_ptr == 0 ? length(local.iter_239.tape) - 1 : local.iter_239.tape_ptr - 1 :
      local.curr_240.code == ">"
        ? local.iter_239.tape_ptr == length(local.iter_239.tape) - 1 ? 0 : local.iter_239.tape_ptr + 1
        : local.iter_239.tape_ptr)

    code_ptr = 1 + (
      local.curr_240.code == "["
        ? local.iter_239.tape[local.iter_239.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_239.code_ptr)] : local.iter_239.code_ptr :
      local.curr_240.code == "]"
        ? local.iter_239.tape[local.iter_239.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_239.code_ptr)] : local.iter_239.code_ptr
        : local.iter_239.code_ptr)

    steps_taken = 1 + local.iter_239.steps_taken
  }
}

locals {
  end_of_code_241 = try(local.iter_240.code_ptr >= length(var.code), true)

  curr_241 = local.end_of_code_241 ? null : {
    code = substr(var.code, local.iter_240.code_ptr, 1)
    input = substr(var.code, local.iter_240.code_ptr, 1) == "," ? substr(local.iter_240.input, 0, 1) : null
  }

  iter_241 = local.end_of_code_241 ? local.iter_240 : {
    input = (local.curr_241.code == ","
      ? substr(local.iter_240.input, 1, -1)
      : local.iter_240.input)

    output = (local.curr_241.code == "."
      ? "${local.iter_240.output}${jsondecode(format("\"\\u%04x\"", local.iter_240.tape[local.iter_240.tape_ptr]))}"
      : local.iter_240.output)
    
    tape = (
      local.curr_241.code == "+"
        ? [for i, b in local.iter_240.tape : (i == local.iter_240.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_241.code == "-"
        ? [for i, b in local.iter_240.tape : (i == local.iter_240.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_241.code == ","
        ? [for i, b in local.iter_240.tape : (i == local.iter_240.tape_ptr ? local.ascii_lookup[local.curr_241.input] : b)]
        : local.iter_240.tape)

    tape_ptr = (
      local.curr_241.code == "<"
        ? local.iter_240.tape_ptr == 0 ? length(local.iter_240.tape) - 1 : local.iter_240.tape_ptr - 1 :
      local.curr_241.code == ">"
        ? local.iter_240.tape_ptr == length(local.iter_240.tape) - 1 ? 0 : local.iter_240.tape_ptr + 1
        : local.iter_240.tape_ptr)

    code_ptr = 1 + (
      local.curr_241.code == "["
        ? local.iter_240.tape[local.iter_240.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_240.code_ptr)] : local.iter_240.code_ptr :
      local.curr_241.code == "]"
        ? local.iter_240.tape[local.iter_240.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_240.code_ptr)] : local.iter_240.code_ptr
        : local.iter_240.code_ptr)

    steps_taken = 1 + local.iter_240.steps_taken
  }
}

locals {
  end_of_code_242 = try(local.iter_241.code_ptr >= length(var.code), true)

  curr_242 = local.end_of_code_242 ? null : {
    code = substr(var.code, local.iter_241.code_ptr, 1)
    input = substr(var.code, local.iter_241.code_ptr, 1) == "," ? substr(local.iter_241.input, 0, 1) : null
  }

  iter_242 = local.end_of_code_242 ? local.iter_241 : {
    input = (local.curr_242.code == ","
      ? substr(local.iter_241.input, 1, -1)
      : local.iter_241.input)

    output = (local.curr_242.code == "."
      ? "${local.iter_241.output}${jsondecode(format("\"\\u%04x\"", local.iter_241.tape[local.iter_241.tape_ptr]))}"
      : local.iter_241.output)
    
    tape = (
      local.curr_242.code == "+"
        ? [for i, b in local.iter_241.tape : (i == local.iter_241.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_242.code == "-"
        ? [for i, b in local.iter_241.tape : (i == local.iter_241.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_242.code == ","
        ? [for i, b in local.iter_241.tape : (i == local.iter_241.tape_ptr ? local.ascii_lookup[local.curr_242.input] : b)]
        : local.iter_241.tape)

    tape_ptr = (
      local.curr_242.code == "<"
        ? local.iter_241.tape_ptr == 0 ? length(local.iter_241.tape) - 1 : local.iter_241.tape_ptr - 1 :
      local.curr_242.code == ">"
        ? local.iter_241.tape_ptr == length(local.iter_241.tape) - 1 ? 0 : local.iter_241.tape_ptr + 1
        : local.iter_241.tape_ptr)

    code_ptr = 1 + (
      local.curr_242.code == "["
        ? local.iter_241.tape[local.iter_241.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_241.code_ptr)] : local.iter_241.code_ptr :
      local.curr_242.code == "]"
        ? local.iter_241.tape[local.iter_241.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_241.code_ptr)] : local.iter_241.code_ptr
        : local.iter_241.code_ptr)

    steps_taken = 1 + local.iter_241.steps_taken
  }
}

locals {
  end_of_code_243 = try(local.iter_242.code_ptr >= length(var.code), true)

  curr_243 = local.end_of_code_243 ? null : {
    code = substr(var.code, local.iter_242.code_ptr, 1)
    input = substr(var.code, local.iter_242.code_ptr, 1) == "," ? substr(local.iter_242.input, 0, 1) : null
  }

  iter_243 = local.end_of_code_243 ? local.iter_242 : {
    input = (local.curr_243.code == ","
      ? substr(local.iter_242.input, 1, -1)
      : local.iter_242.input)

    output = (local.curr_243.code == "."
      ? "${local.iter_242.output}${jsondecode(format("\"\\u%04x\"", local.iter_242.tape[local.iter_242.tape_ptr]))}"
      : local.iter_242.output)
    
    tape = (
      local.curr_243.code == "+"
        ? [for i, b in local.iter_242.tape : (i == local.iter_242.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_243.code == "-"
        ? [for i, b in local.iter_242.tape : (i == local.iter_242.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_243.code == ","
        ? [for i, b in local.iter_242.tape : (i == local.iter_242.tape_ptr ? local.ascii_lookup[local.curr_243.input] : b)]
        : local.iter_242.tape)

    tape_ptr = (
      local.curr_243.code == "<"
        ? local.iter_242.tape_ptr == 0 ? length(local.iter_242.tape) - 1 : local.iter_242.tape_ptr - 1 :
      local.curr_243.code == ">"
        ? local.iter_242.tape_ptr == length(local.iter_242.tape) - 1 ? 0 : local.iter_242.tape_ptr + 1
        : local.iter_242.tape_ptr)

    code_ptr = 1 + (
      local.curr_243.code == "["
        ? local.iter_242.tape[local.iter_242.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_242.code_ptr)] : local.iter_242.code_ptr :
      local.curr_243.code == "]"
        ? local.iter_242.tape[local.iter_242.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_242.code_ptr)] : local.iter_242.code_ptr
        : local.iter_242.code_ptr)

    steps_taken = 1 + local.iter_242.steps_taken
  }
}

locals {
  end_of_code_244 = try(local.iter_243.code_ptr >= length(var.code), true)

  curr_244 = local.end_of_code_244 ? null : {
    code = substr(var.code, local.iter_243.code_ptr, 1)
    input = substr(var.code, local.iter_243.code_ptr, 1) == "," ? substr(local.iter_243.input, 0, 1) : null
  }

  iter_244 = local.end_of_code_244 ? local.iter_243 : {
    input = (local.curr_244.code == ","
      ? substr(local.iter_243.input, 1, -1)
      : local.iter_243.input)

    output = (local.curr_244.code == "."
      ? "${local.iter_243.output}${jsondecode(format("\"\\u%04x\"", local.iter_243.tape[local.iter_243.tape_ptr]))}"
      : local.iter_243.output)
    
    tape = (
      local.curr_244.code == "+"
        ? [for i, b in local.iter_243.tape : (i == local.iter_243.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_244.code == "-"
        ? [for i, b in local.iter_243.tape : (i == local.iter_243.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_244.code == ","
        ? [for i, b in local.iter_243.tape : (i == local.iter_243.tape_ptr ? local.ascii_lookup[local.curr_244.input] : b)]
        : local.iter_243.tape)

    tape_ptr = (
      local.curr_244.code == "<"
        ? local.iter_243.tape_ptr == 0 ? length(local.iter_243.tape) - 1 : local.iter_243.tape_ptr - 1 :
      local.curr_244.code == ">"
        ? local.iter_243.tape_ptr == length(local.iter_243.tape) - 1 ? 0 : local.iter_243.tape_ptr + 1
        : local.iter_243.tape_ptr)

    code_ptr = 1 + (
      local.curr_244.code == "["
        ? local.iter_243.tape[local.iter_243.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_243.code_ptr)] : local.iter_243.code_ptr :
      local.curr_244.code == "]"
        ? local.iter_243.tape[local.iter_243.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_243.code_ptr)] : local.iter_243.code_ptr
        : local.iter_243.code_ptr)

    steps_taken = 1 + local.iter_243.steps_taken
  }
}

locals {
  end_of_code_245 = try(local.iter_244.code_ptr >= length(var.code), true)

  curr_245 = local.end_of_code_245 ? null : {
    code = substr(var.code, local.iter_244.code_ptr, 1)
    input = substr(var.code, local.iter_244.code_ptr, 1) == "," ? substr(local.iter_244.input, 0, 1) : null
  }

  iter_245 = local.end_of_code_245 ? local.iter_244 : {
    input = (local.curr_245.code == ","
      ? substr(local.iter_244.input, 1, -1)
      : local.iter_244.input)

    output = (local.curr_245.code == "."
      ? "${local.iter_244.output}${jsondecode(format("\"\\u%04x\"", local.iter_244.tape[local.iter_244.tape_ptr]))}"
      : local.iter_244.output)
    
    tape = (
      local.curr_245.code == "+"
        ? [for i, b in local.iter_244.tape : (i == local.iter_244.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_245.code == "-"
        ? [for i, b in local.iter_244.tape : (i == local.iter_244.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_245.code == ","
        ? [for i, b in local.iter_244.tape : (i == local.iter_244.tape_ptr ? local.ascii_lookup[local.curr_245.input] : b)]
        : local.iter_244.tape)

    tape_ptr = (
      local.curr_245.code == "<"
        ? local.iter_244.tape_ptr == 0 ? length(local.iter_244.tape) - 1 : local.iter_244.tape_ptr - 1 :
      local.curr_245.code == ">"
        ? local.iter_244.tape_ptr == length(local.iter_244.tape) - 1 ? 0 : local.iter_244.tape_ptr + 1
        : local.iter_244.tape_ptr)

    code_ptr = 1 + (
      local.curr_245.code == "["
        ? local.iter_244.tape[local.iter_244.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_244.code_ptr)] : local.iter_244.code_ptr :
      local.curr_245.code == "]"
        ? local.iter_244.tape[local.iter_244.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_244.code_ptr)] : local.iter_244.code_ptr
        : local.iter_244.code_ptr)

    steps_taken = 1 + local.iter_244.steps_taken
  }
}

locals {
  end_of_code_246 = try(local.iter_245.code_ptr >= length(var.code), true)

  curr_246 = local.end_of_code_246 ? null : {
    code = substr(var.code, local.iter_245.code_ptr, 1)
    input = substr(var.code, local.iter_245.code_ptr, 1) == "," ? substr(local.iter_245.input, 0, 1) : null
  }

  iter_246 = local.end_of_code_246 ? local.iter_245 : {
    input = (local.curr_246.code == ","
      ? substr(local.iter_245.input, 1, -1)
      : local.iter_245.input)

    output = (local.curr_246.code == "."
      ? "${local.iter_245.output}${jsondecode(format("\"\\u%04x\"", local.iter_245.tape[local.iter_245.tape_ptr]))}"
      : local.iter_245.output)
    
    tape = (
      local.curr_246.code == "+"
        ? [for i, b in local.iter_245.tape : (i == local.iter_245.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_246.code == "-"
        ? [for i, b in local.iter_245.tape : (i == local.iter_245.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_246.code == ","
        ? [for i, b in local.iter_245.tape : (i == local.iter_245.tape_ptr ? local.ascii_lookup[local.curr_246.input] : b)]
        : local.iter_245.tape)

    tape_ptr = (
      local.curr_246.code == "<"
        ? local.iter_245.tape_ptr == 0 ? length(local.iter_245.tape) - 1 : local.iter_245.tape_ptr - 1 :
      local.curr_246.code == ">"
        ? local.iter_245.tape_ptr == length(local.iter_245.tape) - 1 ? 0 : local.iter_245.tape_ptr + 1
        : local.iter_245.tape_ptr)

    code_ptr = 1 + (
      local.curr_246.code == "["
        ? local.iter_245.tape[local.iter_245.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_245.code_ptr)] : local.iter_245.code_ptr :
      local.curr_246.code == "]"
        ? local.iter_245.tape[local.iter_245.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_245.code_ptr)] : local.iter_245.code_ptr
        : local.iter_245.code_ptr)

    steps_taken = 1 + local.iter_245.steps_taken
  }
}

locals {
  end_of_code_247 = try(local.iter_246.code_ptr >= length(var.code), true)

  curr_247 = local.end_of_code_247 ? null : {
    code = substr(var.code, local.iter_246.code_ptr, 1)
    input = substr(var.code, local.iter_246.code_ptr, 1) == "," ? substr(local.iter_246.input, 0, 1) : null
  }

  iter_247 = local.end_of_code_247 ? local.iter_246 : {
    input = (local.curr_247.code == ","
      ? substr(local.iter_246.input, 1, -1)
      : local.iter_246.input)

    output = (local.curr_247.code == "."
      ? "${local.iter_246.output}${jsondecode(format("\"\\u%04x\"", local.iter_246.tape[local.iter_246.tape_ptr]))}"
      : local.iter_246.output)
    
    tape = (
      local.curr_247.code == "+"
        ? [for i, b in local.iter_246.tape : (i == local.iter_246.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_247.code == "-"
        ? [for i, b in local.iter_246.tape : (i == local.iter_246.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_247.code == ","
        ? [for i, b in local.iter_246.tape : (i == local.iter_246.tape_ptr ? local.ascii_lookup[local.curr_247.input] : b)]
        : local.iter_246.tape)

    tape_ptr = (
      local.curr_247.code == "<"
        ? local.iter_246.tape_ptr == 0 ? length(local.iter_246.tape) - 1 : local.iter_246.tape_ptr - 1 :
      local.curr_247.code == ">"
        ? local.iter_246.tape_ptr == length(local.iter_246.tape) - 1 ? 0 : local.iter_246.tape_ptr + 1
        : local.iter_246.tape_ptr)

    code_ptr = 1 + (
      local.curr_247.code == "["
        ? local.iter_246.tape[local.iter_246.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_246.code_ptr)] : local.iter_246.code_ptr :
      local.curr_247.code == "]"
        ? local.iter_246.tape[local.iter_246.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_246.code_ptr)] : local.iter_246.code_ptr
        : local.iter_246.code_ptr)

    steps_taken = 1 + local.iter_246.steps_taken
  }
}

locals {
  end_of_code_248 = try(local.iter_247.code_ptr >= length(var.code), true)

  curr_248 = local.end_of_code_248 ? null : {
    code = substr(var.code, local.iter_247.code_ptr, 1)
    input = substr(var.code, local.iter_247.code_ptr, 1) == "," ? substr(local.iter_247.input, 0, 1) : null
  }

  iter_248 = local.end_of_code_248 ? local.iter_247 : {
    input = (local.curr_248.code == ","
      ? substr(local.iter_247.input, 1, -1)
      : local.iter_247.input)

    output = (local.curr_248.code == "."
      ? "${local.iter_247.output}${jsondecode(format("\"\\u%04x\"", local.iter_247.tape[local.iter_247.tape_ptr]))}"
      : local.iter_247.output)
    
    tape = (
      local.curr_248.code == "+"
        ? [for i, b in local.iter_247.tape : (i == local.iter_247.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_248.code == "-"
        ? [for i, b in local.iter_247.tape : (i == local.iter_247.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_248.code == ","
        ? [for i, b in local.iter_247.tape : (i == local.iter_247.tape_ptr ? local.ascii_lookup[local.curr_248.input] : b)]
        : local.iter_247.tape)

    tape_ptr = (
      local.curr_248.code == "<"
        ? local.iter_247.tape_ptr == 0 ? length(local.iter_247.tape) - 1 : local.iter_247.tape_ptr - 1 :
      local.curr_248.code == ">"
        ? local.iter_247.tape_ptr == length(local.iter_247.tape) - 1 ? 0 : local.iter_247.tape_ptr + 1
        : local.iter_247.tape_ptr)

    code_ptr = 1 + (
      local.curr_248.code == "["
        ? local.iter_247.tape[local.iter_247.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_247.code_ptr)] : local.iter_247.code_ptr :
      local.curr_248.code == "]"
        ? local.iter_247.tape[local.iter_247.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_247.code_ptr)] : local.iter_247.code_ptr
        : local.iter_247.code_ptr)

    steps_taken = 1 + local.iter_247.steps_taken
  }
}

locals {
  end_of_code_249 = try(local.iter_248.code_ptr >= length(var.code), true)

  curr_249 = local.end_of_code_249 ? null : {
    code = substr(var.code, local.iter_248.code_ptr, 1)
    input = substr(var.code, local.iter_248.code_ptr, 1) == "," ? substr(local.iter_248.input, 0, 1) : null
  }

  iter_249 = local.end_of_code_249 ? local.iter_248 : {
    input = (local.curr_249.code == ","
      ? substr(local.iter_248.input, 1, -1)
      : local.iter_248.input)

    output = (local.curr_249.code == "."
      ? "${local.iter_248.output}${jsondecode(format("\"\\u%04x\"", local.iter_248.tape[local.iter_248.tape_ptr]))}"
      : local.iter_248.output)
    
    tape = (
      local.curr_249.code == "+"
        ? [for i, b in local.iter_248.tape : (i == local.iter_248.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_249.code == "-"
        ? [for i, b in local.iter_248.tape : (i == local.iter_248.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_249.code == ","
        ? [for i, b in local.iter_248.tape : (i == local.iter_248.tape_ptr ? local.ascii_lookup[local.curr_249.input] : b)]
        : local.iter_248.tape)

    tape_ptr = (
      local.curr_249.code == "<"
        ? local.iter_248.tape_ptr == 0 ? length(local.iter_248.tape) - 1 : local.iter_248.tape_ptr - 1 :
      local.curr_249.code == ">"
        ? local.iter_248.tape_ptr == length(local.iter_248.tape) - 1 ? 0 : local.iter_248.tape_ptr + 1
        : local.iter_248.tape_ptr)

    code_ptr = 1 + (
      local.curr_249.code == "["
        ? local.iter_248.tape[local.iter_248.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_248.code_ptr)] : local.iter_248.code_ptr :
      local.curr_249.code == "]"
        ? local.iter_248.tape[local.iter_248.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_248.code_ptr)] : local.iter_248.code_ptr
        : local.iter_248.code_ptr)

    steps_taken = 1 + local.iter_248.steps_taken
  }
}

locals {
  end_of_code_250 = try(local.iter_249.code_ptr >= length(var.code), true)

  curr_250 = local.end_of_code_250 ? null : {
    code = substr(var.code, local.iter_249.code_ptr, 1)
    input = substr(var.code, local.iter_249.code_ptr, 1) == "," ? substr(local.iter_249.input, 0, 1) : null
  }

  iter_250 = local.end_of_code_250 ? local.iter_249 : {
    input = (local.curr_250.code == ","
      ? substr(local.iter_249.input, 1, -1)
      : local.iter_249.input)

    output = (local.curr_250.code == "."
      ? "${local.iter_249.output}${jsondecode(format("\"\\u%04x\"", local.iter_249.tape[local.iter_249.tape_ptr]))}"
      : local.iter_249.output)
    
    tape = (
      local.curr_250.code == "+"
        ? [for i, b in local.iter_249.tape : (i == local.iter_249.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_250.code == "-"
        ? [for i, b in local.iter_249.tape : (i == local.iter_249.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_250.code == ","
        ? [for i, b in local.iter_249.tape : (i == local.iter_249.tape_ptr ? local.ascii_lookup[local.curr_250.input] : b)]
        : local.iter_249.tape)

    tape_ptr = (
      local.curr_250.code == "<"
        ? local.iter_249.tape_ptr == 0 ? length(local.iter_249.tape) - 1 : local.iter_249.tape_ptr - 1 :
      local.curr_250.code == ">"
        ? local.iter_249.tape_ptr == length(local.iter_249.tape) - 1 ? 0 : local.iter_249.tape_ptr + 1
        : local.iter_249.tape_ptr)

    code_ptr = 1 + (
      local.curr_250.code == "["
        ? local.iter_249.tape[local.iter_249.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_249.code_ptr)] : local.iter_249.code_ptr :
      local.curr_250.code == "]"
        ? local.iter_249.tape[local.iter_249.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_249.code_ptr)] : local.iter_249.code_ptr
        : local.iter_249.code_ptr)

    steps_taken = 1 + local.iter_249.steps_taken
  }
}

locals {
  end_of_code_251 = try(local.iter_250.code_ptr >= length(var.code), true)

  curr_251 = local.end_of_code_251 ? null : {
    code = substr(var.code, local.iter_250.code_ptr, 1)
    input = substr(var.code, local.iter_250.code_ptr, 1) == "," ? substr(local.iter_250.input, 0, 1) : null
  }

  iter_251 = local.end_of_code_251 ? local.iter_250 : {
    input = (local.curr_251.code == ","
      ? substr(local.iter_250.input, 1, -1)
      : local.iter_250.input)

    output = (local.curr_251.code == "."
      ? "${local.iter_250.output}${jsondecode(format("\"\\u%04x\"", local.iter_250.tape[local.iter_250.tape_ptr]))}"
      : local.iter_250.output)
    
    tape = (
      local.curr_251.code == "+"
        ? [for i, b in local.iter_250.tape : (i == local.iter_250.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_251.code == "-"
        ? [for i, b in local.iter_250.tape : (i == local.iter_250.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_251.code == ","
        ? [for i, b in local.iter_250.tape : (i == local.iter_250.tape_ptr ? local.ascii_lookup[local.curr_251.input] : b)]
        : local.iter_250.tape)

    tape_ptr = (
      local.curr_251.code == "<"
        ? local.iter_250.tape_ptr == 0 ? length(local.iter_250.tape) - 1 : local.iter_250.tape_ptr - 1 :
      local.curr_251.code == ">"
        ? local.iter_250.tape_ptr == length(local.iter_250.tape) - 1 ? 0 : local.iter_250.tape_ptr + 1
        : local.iter_250.tape_ptr)

    code_ptr = 1 + (
      local.curr_251.code == "["
        ? local.iter_250.tape[local.iter_250.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_250.code_ptr)] : local.iter_250.code_ptr :
      local.curr_251.code == "]"
        ? local.iter_250.tape[local.iter_250.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_250.code_ptr)] : local.iter_250.code_ptr
        : local.iter_250.code_ptr)

    steps_taken = 1 + local.iter_250.steps_taken
  }
}

locals {
  end_of_code_252 = try(local.iter_251.code_ptr >= length(var.code), true)

  curr_252 = local.end_of_code_252 ? null : {
    code = substr(var.code, local.iter_251.code_ptr, 1)
    input = substr(var.code, local.iter_251.code_ptr, 1) == "," ? substr(local.iter_251.input, 0, 1) : null
  }

  iter_252 = local.end_of_code_252 ? local.iter_251 : {
    input = (local.curr_252.code == ","
      ? substr(local.iter_251.input, 1, -1)
      : local.iter_251.input)

    output = (local.curr_252.code == "."
      ? "${local.iter_251.output}${jsondecode(format("\"\\u%04x\"", local.iter_251.tape[local.iter_251.tape_ptr]))}"
      : local.iter_251.output)
    
    tape = (
      local.curr_252.code == "+"
        ? [for i, b in local.iter_251.tape : (i == local.iter_251.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_252.code == "-"
        ? [for i, b in local.iter_251.tape : (i == local.iter_251.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_252.code == ","
        ? [for i, b in local.iter_251.tape : (i == local.iter_251.tape_ptr ? local.ascii_lookup[local.curr_252.input] : b)]
        : local.iter_251.tape)

    tape_ptr = (
      local.curr_252.code == "<"
        ? local.iter_251.tape_ptr == 0 ? length(local.iter_251.tape) - 1 : local.iter_251.tape_ptr - 1 :
      local.curr_252.code == ">"
        ? local.iter_251.tape_ptr == length(local.iter_251.tape) - 1 ? 0 : local.iter_251.tape_ptr + 1
        : local.iter_251.tape_ptr)

    code_ptr = 1 + (
      local.curr_252.code == "["
        ? local.iter_251.tape[local.iter_251.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_251.code_ptr)] : local.iter_251.code_ptr :
      local.curr_252.code == "]"
        ? local.iter_251.tape[local.iter_251.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_251.code_ptr)] : local.iter_251.code_ptr
        : local.iter_251.code_ptr)

    steps_taken = 1 + local.iter_251.steps_taken
  }
}

locals {
  end_of_code_253 = try(local.iter_252.code_ptr >= length(var.code), true)

  curr_253 = local.end_of_code_253 ? null : {
    code = substr(var.code, local.iter_252.code_ptr, 1)
    input = substr(var.code, local.iter_252.code_ptr, 1) == "," ? substr(local.iter_252.input, 0, 1) : null
  }

  iter_253 = local.end_of_code_253 ? local.iter_252 : {
    input = (local.curr_253.code == ","
      ? substr(local.iter_252.input, 1, -1)
      : local.iter_252.input)

    output = (local.curr_253.code == "."
      ? "${local.iter_252.output}${jsondecode(format("\"\\u%04x\"", local.iter_252.tape[local.iter_252.tape_ptr]))}"
      : local.iter_252.output)
    
    tape = (
      local.curr_253.code == "+"
        ? [for i, b in local.iter_252.tape : (i == local.iter_252.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_253.code == "-"
        ? [for i, b in local.iter_252.tape : (i == local.iter_252.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_253.code == ","
        ? [for i, b in local.iter_252.tape : (i == local.iter_252.tape_ptr ? local.ascii_lookup[local.curr_253.input] : b)]
        : local.iter_252.tape)

    tape_ptr = (
      local.curr_253.code == "<"
        ? local.iter_252.tape_ptr == 0 ? length(local.iter_252.tape) - 1 : local.iter_252.tape_ptr - 1 :
      local.curr_253.code == ">"
        ? local.iter_252.tape_ptr == length(local.iter_252.tape) - 1 ? 0 : local.iter_252.tape_ptr + 1
        : local.iter_252.tape_ptr)

    code_ptr = 1 + (
      local.curr_253.code == "["
        ? local.iter_252.tape[local.iter_252.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_252.code_ptr)] : local.iter_252.code_ptr :
      local.curr_253.code == "]"
        ? local.iter_252.tape[local.iter_252.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_252.code_ptr)] : local.iter_252.code_ptr
        : local.iter_252.code_ptr)

    steps_taken = 1 + local.iter_252.steps_taken
  }
}

locals {
  end_of_code_254 = try(local.iter_253.code_ptr >= length(var.code), true)

  curr_254 = local.end_of_code_254 ? null : {
    code = substr(var.code, local.iter_253.code_ptr, 1)
    input = substr(var.code, local.iter_253.code_ptr, 1) == "," ? substr(local.iter_253.input, 0, 1) : null
  }

  iter_254 = local.end_of_code_254 ? local.iter_253 : {
    input = (local.curr_254.code == ","
      ? substr(local.iter_253.input, 1, -1)
      : local.iter_253.input)

    output = (local.curr_254.code == "."
      ? "${local.iter_253.output}${jsondecode(format("\"\\u%04x\"", local.iter_253.tape[local.iter_253.tape_ptr]))}"
      : local.iter_253.output)
    
    tape = (
      local.curr_254.code == "+"
        ? [for i, b in local.iter_253.tape : (i == local.iter_253.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_254.code == "-"
        ? [for i, b in local.iter_253.tape : (i == local.iter_253.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_254.code == ","
        ? [for i, b in local.iter_253.tape : (i == local.iter_253.tape_ptr ? local.ascii_lookup[local.curr_254.input] : b)]
        : local.iter_253.tape)

    tape_ptr = (
      local.curr_254.code == "<"
        ? local.iter_253.tape_ptr == 0 ? length(local.iter_253.tape) - 1 : local.iter_253.tape_ptr - 1 :
      local.curr_254.code == ">"
        ? local.iter_253.tape_ptr == length(local.iter_253.tape) - 1 ? 0 : local.iter_253.tape_ptr + 1
        : local.iter_253.tape_ptr)

    code_ptr = 1 + (
      local.curr_254.code == "["
        ? local.iter_253.tape[local.iter_253.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_253.code_ptr)] : local.iter_253.code_ptr :
      local.curr_254.code == "]"
        ? local.iter_253.tape[local.iter_253.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_253.code_ptr)] : local.iter_253.code_ptr
        : local.iter_253.code_ptr)

    steps_taken = 1 + local.iter_253.steps_taken
  }
}

locals {
  end_of_code_255 = try(local.iter_254.code_ptr >= length(var.code), true)

  curr_255 = local.end_of_code_255 ? null : {
    code = substr(var.code, local.iter_254.code_ptr, 1)
    input = substr(var.code, local.iter_254.code_ptr, 1) == "," ? substr(local.iter_254.input, 0, 1) : null
  }

  iter_255 = local.end_of_code_255 ? local.iter_254 : {
    input = (local.curr_255.code == ","
      ? substr(local.iter_254.input, 1, -1)
      : local.iter_254.input)

    output = (local.curr_255.code == "."
      ? "${local.iter_254.output}${jsondecode(format("\"\\u%04x\"", local.iter_254.tape[local.iter_254.tape_ptr]))}"
      : local.iter_254.output)
    
    tape = (
      local.curr_255.code == "+"
        ? [for i, b in local.iter_254.tape : (i == local.iter_254.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_255.code == "-"
        ? [for i, b in local.iter_254.tape : (i == local.iter_254.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_255.code == ","
        ? [for i, b in local.iter_254.tape : (i == local.iter_254.tape_ptr ? local.ascii_lookup[local.curr_255.input] : b)]
        : local.iter_254.tape)

    tape_ptr = (
      local.curr_255.code == "<"
        ? local.iter_254.tape_ptr == 0 ? length(local.iter_254.tape) - 1 : local.iter_254.tape_ptr - 1 :
      local.curr_255.code == ">"
        ? local.iter_254.tape_ptr == length(local.iter_254.tape) - 1 ? 0 : local.iter_254.tape_ptr + 1
        : local.iter_254.tape_ptr)

    code_ptr = 1 + (
      local.curr_255.code == "["
        ? local.iter_254.tape[local.iter_254.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_254.code_ptr)] : local.iter_254.code_ptr :
      local.curr_255.code == "]"
        ? local.iter_254.tape[local.iter_254.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_254.code_ptr)] : local.iter_254.code_ptr
        : local.iter_254.code_ptr)

    steps_taken = 1 + local.iter_254.steps_taken
  }
}

locals {
  end_of_code_256 = try(local.iter_255.code_ptr >= length(var.code), true)

  curr_256 = local.end_of_code_256 ? null : {
    code = substr(var.code, local.iter_255.code_ptr, 1)
    input = substr(var.code, local.iter_255.code_ptr, 1) == "," ? substr(local.iter_255.input, 0, 1) : null
  }

  iter_256 = local.end_of_code_256 ? local.iter_255 : {
    input = (local.curr_256.code == ","
      ? substr(local.iter_255.input, 1, -1)
      : local.iter_255.input)

    output = (local.curr_256.code == "."
      ? "${local.iter_255.output}${jsondecode(format("\"\\u%04x\"", local.iter_255.tape[local.iter_255.tape_ptr]))}"
      : local.iter_255.output)
    
    tape = (
      local.curr_256.code == "+"
        ? [for i, b in local.iter_255.tape : (i == local.iter_255.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_256.code == "-"
        ? [for i, b in local.iter_255.tape : (i == local.iter_255.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_256.code == ","
        ? [for i, b in local.iter_255.tape : (i == local.iter_255.tape_ptr ? local.ascii_lookup[local.curr_256.input] : b)]
        : local.iter_255.tape)

    tape_ptr = (
      local.curr_256.code == "<"
        ? local.iter_255.tape_ptr == 0 ? length(local.iter_255.tape) - 1 : local.iter_255.tape_ptr - 1 :
      local.curr_256.code == ">"
        ? local.iter_255.tape_ptr == length(local.iter_255.tape) - 1 ? 0 : local.iter_255.tape_ptr + 1
        : local.iter_255.tape_ptr)

    code_ptr = 1 + (
      local.curr_256.code == "["
        ? local.iter_255.tape[local.iter_255.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_255.code_ptr)] : local.iter_255.code_ptr :
      local.curr_256.code == "]"
        ? local.iter_255.tape[local.iter_255.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_255.code_ptr)] : local.iter_255.code_ptr
        : local.iter_255.code_ptr)

    steps_taken = 1 + local.iter_255.steps_taken
  }
}

locals {
  end_of_code_257 = try(local.iter_256.code_ptr >= length(var.code), true)

  curr_257 = local.end_of_code_257 ? null : {
    code = substr(var.code, local.iter_256.code_ptr, 1)
    input = substr(var.code, local.iter_256.code_ptr, 1) == "," ? substr(local.iter_256.input, 0, 1) : null
  }

  iter_257 = local.end_of_code_257 ? local.iter_256 : {
    input = (local.curr_257.code == ","
      ? substr(local.iter_256.input, 1, -1)
      : local.iter_256.input)

    output = (local.curr_257.code == "."
      ? "${local.iter_256.output}${jsondecode(format("\"\\u%04x\"", local.iter_256.tape[local.iter_256.tape_ptr]))}"
      : local.iter_256.output)
    
    tape = (
      local.curr_257.code == "+"
        ? [for i, b in local.iter_256.tape : (i == local.iter_256.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_257.code == "-"
        ? [for i, b in local.iter_256.tape : (i == local.iter_256.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_257.code == ","
        ? [for i, b in local.iter_256.tape : (i == local.iter_256.tape_ptr ? local.ascii_lookup[local.curr_257.input] : b)]
        : local.iter_256.tape)

    tape_ptr = (
      local.curr_257.code == "<"
        ? local.iter_256.tape_ptr == 0 ? length(local.iter_256.tape) - 1 : local.iter_256.tape_ptr - 1 :
      local.curr_257.code == ">"
        ? local.iter_256.tape_ptr == length(local.iter_256.tape) - 1 ? 0 : local.iter_256.tape_ptr + 1
        : local.iter_256.tape_ptr)

    code_ptr = 1 + (
      local.curr_257.code == "["
        ? local.iter_256.tape[local.iter_256.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_256.code_ptr)] : local.iter_256.code_ptr :
      local.curr_257.code == "]"
        ? local.iter_256.tape[local.iter_256.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_256.code_ptr)] : local.iter_256.code_ptr
        : local.iter_256.code_ptr)

    steps_taken = 1 + local.iter_256.steps_taken
  }
}

locals {
  end_of_code_258 = try(local.iter_257.code_ptr >= length(var.code), true)

  curr_258 = local.end_of_code_258 ? null : {
    code = substr(var.code, local.iter_257.code_ptr, 1)
    input = substr(var.code, local.iter_257.code_ptr, 1) == "," ? substr(local.iter_257.input, 0, 1) : null
  }

  iter_258 = local.end_of_code_258 ? local.iter_257 : {
    input = (local.curr_258.code == ","
      ? substr(local.iter_257.input, 1, -1)
      : local.iter_257.input)

    output = (local.curr_258.code == "."
      ? "${local.iter_257.output}${jsondecode(format("\"\\u%04x\"", local.iter_257.tape[local.iter_257.tape_ptr]))}"
      : local.iter_257.output)
    
    tape = (
      local.curr_258.code == "+"
        ? [for i, b in local.iter_257.tape : (i == local.iter_257.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_258.code == "-"
        ? [for i, b in local.iter_257.tape : (i == local.iter_257.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_258.code == ","
        ? [for i, b in local.iter_257.tape : (i == local.iter_257.tape_ptr ? local.ascii_lookup[local.curr_258.input] : b)]
        : local.iter_257.tape)

    tape_ptr = (
      local.curr_258.code == "<"
        ? local.iter_257.tape_ptr == 0 ? length(local.iter_257.tape) - 1 : local.iter_257.tape_ptr - 1 :
      local.curr_258.code == ">"
        ? local.iter_257.tape_ptr == length(local.iter_257.tape) - 1 ? 0 : local.iter_257.tape_ptr + 1
        : local.iter_257.tape_ptr)

    code_ptr = 1 + (
      local.curr_258.code == "["
        ? local.iter_257.tape[local.iter_257.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_257.code_ptr)] : local.iter_257.code_ptr :
      local.curr_258.code == "]"
        ? local.iter_257.tape[local.iter_257.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_257.code_ptr)] : local.iter_257.code_ptr
        : local.iter_257.code_ptr)

    steps_taken = 1 + local.iter_257.steps_taken
  }
}

locals {
  end_of_code_259 = try(local.iter_258.code_ptr >= length(var.code), true)

  curr_259 = local.end_of_code_259 ? null : {
    code = substr(var.code, local.iter_258.code_ptr, 1)
    input = substr(var.code, local.iter_258.code_ptr, 1) == "," ? substr(local.iter_258.input, 0, 1) : null
  }

  iter_259 = local.end_of_code_259 ? local.iter_258 : {
    input = (local.curr_259.code == ","
      ? substr(local.iter_258.input, 1, -1)
      : local.iter_258.input)

    output = (local.curr_259.code == "."
      ? "${local.iter_258.output}${jsondecode(format("\"\\u%04x\"", local.iter_258.tape[local.iter_258.tape_ptr]))}"
      : local.iter_258.output)
    
    tape = (
      local.curr_259.code == "+"
        ? [for i, b in local.iter_258.tape : (i == local.iter_258.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_259.code == "-"
        ? [for i, b in local.iter_258.tape : (i == local.iter_258.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_259.code == ","
        ? [for i, b in local.iter_258.tape : (i == local.iter_258.tape_ptr ? local.ascii_lookup[local.curr_259.input] : b)]
        : local.iter_258.tape)

    tape_ptr = (
      local.curr_259.code == "<"
        ? local.iter_258.tape_ptr == 0 ? length(local.iter_258.tape) - 1 : local.iter_258.tape_ptr - 1 :
      local.curr_259.code == ">"
        ? local.iter_258.tape_ptr == length(local.iter_258.tape) - 1 ? 0 : local.iter_258.tape_ptr + 1
        : local.iter_258.tape_ptr)

    code_ptr = 1 + (
      local.curr_259.code == "["
        ? local.iter_258.tape[local.iter_258.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_258.code_ptr)] : local.iter_258.code_ptr :
      local.curr_259.code == "]"
        ? local.iter_258.tape[local.iter_258.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_258.code_ptr)] : local.iter_258.code_ptr
        : local.iter_258.code_ptr)

    steps_taken = 1 + local.iter_258.steps_taken
  }
}

locals {
  end_of_code_260 = try(local.iter_259.code_ptr >= length(var.code), true)

  curr_260 = local.end_of_code_260 ? null : {
    code = substr(var.code, local.iter_259.code_ptr, 1)
    input = substr(var.code, local.iter_259.code_ptr, 1) == "," ? substr(local.iter_259.input, 0, 1) : null
  }

  iter_260 = local.end_of_code_260 ? local.iter_259 : {
    input = (local.curr_260.code == ","
      ? substr(local.iter_259.input, 1, -1)
      : local.iter_259.input)

    output = (local.curr_260.code == "."
      ? "${local.iter_259.output}${jsondecode(format("\"\\u%04x\"", local.iter_259.tape[local.iter_259.tape_ptr]))}"
      : local.iter_259.output)
    
    tape = (
      local.curr_260.code == "+"
        ? [for i, b in local.iter_259.tape : (i == local.iter_259.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_260.code == "-"
        ? [for i, b in local.iter_259.tape : (i == local.iter_259.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_260.code == ","
        ? [for i, b in local.iter_259.tape : (i == local.iter_259.tape_ptr ? local.ascii_lookup[local.curr_260.input] : b)]
        : local.iter_259.tape)

    tape_ptr = (
      local.curr_260.code == "<"
        ? local.iter_259.tape_ptr == 0 ? length(local.iter_259.tape) - 1 : local.iter_259.tape_ptr - 1 :
      local.curr_260.code == ">"
        ? local.iter_259.tape_ptr == length(local.iter_259.tape) - 1 ? 0 : local.iter_259.tape_ptr + 1
        : local.iter_259.tape_ptr)

    code_ptr = 1 + (
      local.curr_260.code == "["
        ? local.iter_259.tape[local.iter_259.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_259.code_ptr)] : local.iter_259.code_ptr :
      local.curr_260.code == "]"
        ? local.iter_259.tape[local.iter_259.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_259.code_ptr)] : local.iter_259.code_ptr
        : local.iter_259.code_ptr)

    steps_taken = 1 + local.iter_259.steps_taken
  }
}

locals {
  end_of_code_261 = try(local.iter_260.code_ptr >= length(var.code), true)

  curr_261 = local.end_of_code_261 ? null : {
    code = substr(var.code, local.iter_260.code_ptr, 1)
    input = substr(var.code, local.iter_260.code_ptr, 1) == "," ? substr(local.iter_260.input, 0, 1) : null
  }

  iter_261 = local.end_of_code_261 ? local.iter_260 : {
    input = (local.curr_261.code == ","
      ? substr(local.iter_260.input, 1, -1)
      : local.iter_260.input)

    output = (local.curr_261.code == "."
      ? "${local.iter_260.output}${jsondecode(format("\"\\u%04x\"", local.iter_260.tape[local.iter_260.tape_ptr]))}"
      : local.iter_260.output)
    
    tape = (
      local.curr_261.code == "+"
        ? [for i, b in local.iter_260.tape : (i == local.iter_260.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_261.code == "-"
        ? [for i, b in local.iter_260.tape : (i == local.iter_260.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_261.code == ","
        ? [for i, b in local.iter_260.tape : (i == local.iter_260.tape_ptr ? local.ascii_lookup[local.curr_261.input] : b)]
        : local.iter_260.tape)

    tape_ptr = (
      local.curr_261.code == "<"
        ? local.iter_260.tape_ptr == 0 ? length(local.iter_260.tape) - 1 : local.iter_260.tape_ptr - 1 :
      local.curr_261.code == ">"
        ? local.iter_260.tape_ptr == length(local.iter_260.tape) - 1 ? 0 : local.iter_260.tape_ptr + 1
        : local.iter_260.tape_ptr)

    code_ptr = 1 + (
      local.curr_261.code == "["
        ? local.iter_260.tape[local.iter_260.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_260.code_ptr)] : local.iter_260.code_ptr :
      local.curr_261.code == "]"
        ? local.iter_260.tape[local.iter_260.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_260.code_ptr)] : local.iter_260.code_ptr
        : local.iter_260.code_ptr)

    steps_taken = 1 + local.iter_260.steps_taken
  }
}

locals {
  end_of_code_262 = try(local.iter_261.code_ptr >= length(var.code), true)

  curr_262 = local.end_of_code_262 ? null : {
    code = substr(var.code, local.iter_261.code_ptr, 1)
    input = substr(var.code, local.iter_261.code_ptr, 1) == "," ? substr(local.iter_261.input, 0, 1) : null
  }

  iter_262 = local.end_of_code_262 ? local.iter_261 : {
    input = (local.curr_262.code == ","
      ? substr(local.iter_261.input, 1, -1)
      : local.iter_261.input)

    output = (local.curr_262.code == "."
      ? "${local.iter_261.output}${jsondecode(format("\"\\u%04x\"", local.iter_261.tape[local.iter_261.tape_ptr]))}"
      : local.iter_261.output)
    
    tape = (
      local.curr_262.code == "+"
        ? [for i, b in local.iter_261.tape : (i == local.iter_261.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_262.code == "-"
        ? [for i, b in local.iter_261.tape : (i == local.iter_261.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_262.code == ","
        ? [for i, b in local.iter_261.tape : (i == local.iter_261.tape_ptr ? local.ascii_lookup[local.curr_262.input] : b)]
        : local.iter_261.tape)

    tape_ptr = (
      local.curr_262.code == "<"
        ? local.iter_261.tape_ptr == 0 ? length(local.iter_261.tape) - 1 : local.iter_261.tape_ptr - 1 :
      local.curr_262.code == ">"
        ? local.iter_261.tape_ptr == length(local.iter_261.tape) - 1 ? 0 : local.iter_261.tape_ptr + 1
        : local.iter_261.tape_ptr)

    code_ptr = 1 + (
      local.curr_262.code == "["
        ? local.iter_261.tape[local.iter_261.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_261.code_ptr)] : local.iter_261.code_ptr :
      local.curr_262.code == "]"
        ? local.iter_261.tape[local.iter_261.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_261.code_ptr)] : local.iter_261.code_ptr
        : local.iter_261.code_ptr)

    steps_taken = 1 + local.iter_261.steps_taken
  }
}

locals {
  end_of_code_263 = try(local.iter_262.code_ptr >= length(var.code), true)

  curr_263 = local.end_of_code_263 ? null : {
    code = substr(var.code, local.iter_262.code_ptr, 1)
    input = substr(var.code, local.iter_262.code_ptr, 1) == "," ? substr(local.iter_262.input, 0, 1) : null
  }

  iter_263 = local.end_of_code_263 ? local.iter_262 : {
    input = (local.curr_263.code == ","
      ? substr(local.iter_262.input, 1, -1)
      : local.iter_262.input)

    output = (local.curr_263.code == "."
      ? "${local.iter_262.output}${jsondecode(format("\"\\u%04x\"", local.iter_262.tape[local.iter_262.tape_ptr]))}"
      : local.iter_262.output)
    
    tape = (
      local.curr_263.code == "+"
        ? [for i, b in local.iter_262.tape : (i == local.iter_262.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_263.code == "-"
        ? [for i, b in local.iter_262.tape : (i == local.iter_262.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_263.code == ","
        ? [for i, b in local.iter_262.tape : (i == local.iter_262.tape_ptr ? local.ascii_lookup[local.curr_263.input] : b)]
        : local.iter_262.tape)

    tape_ptr = (
      local.curr_263.code == "<"
        ? local.iter_262.tape_ptr == 0 ? length(local.iter_262.tape) - 1 : local.iter_262.tape_ptr - 1 :
      local.curr_263.code == ">"
        ? local.iter_262.tape_ptr == length(local.iter_262.tape) - 1 ? 0 : local.iter_262.tape_ptr + 1
        : local.iter_262.tape_ptr)

    code_ptr = 1 + (
      local.curr_263.code == "["
        ? local.iter_262.tape[local.iter_262.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_262.code_ptr)] : local.iter_262.code_ptr :
      local.curr_263.code == "]"
        ? local.iter_262.tape[local.iter_262.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_262.code_ptr)] : local.iter_262.code_ptr
        : local.iter_262.code_ptr)

    steps_taken = 1 + local.iter_262.steps_taken
  }
}

locals {
  end_of_code_264 = try(local.iter_263.code_ptr >= length(var.code), true)

  curr_264 = local.end_of_code_264 ? null : {
    code = substr(var.code, local.iter_263.code_ptr, 1)
    input = substr(var.code, local.iter_263.code_ptr, 1) == "," ? substr(local.iter_263.input, 0, 1) : null
  }

  iter_264 = local.end_of_code_264 ? local.iter_263 : {
    input = (local.curr_264.code == ","
      ? substr(local.iter_263.input, 1, -1)
      : local.iter_263.input)

    output = (local.curr_264.code == "."
      ? "${local.iter_263.output}${jsondecode(format("\"\\u%04x\"", local.iter_263.tape[local.iter_263.tape_ptr]))}"
      : local.iter_263.output)
    
    tape = (
      local.curr_264.code == "+"
        ? [for i, b in local.iter_263.tape : (i == local.iter_263.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_264.code == "-"
        ? [for i, b in local.iter_263.tape : (i == local.iter_263.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_264.code == ","
        ? [for i, b in local.iter_263.tape : (i == local.iter_263.tape_ptr ? local.ascii_lookup[local.curr_264.input] : b)]
        : local.iter_263.tape)

    tape_ptr = (
      local.curr_264.code == "<"
        ? local.iter_263.tape_ptr == 0 ? length(local.iter_263.tape) - 1 : local.iter_263.tape_ptr - 1 :
      local.curr_264.code == ">"
        ? local.iter_263.tape_ptr == length(local.iter_263.tape) - 1 ? 0 : local.iter_263.tape_ptr + 1
        : local.iter_263.tape_ptr)

    code_ptr = 1 + (
      local.curr_264.code == "["
        ? local.iter_263.tape[local.iter_263.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_263.code_ptr)] : local.iter_263.code_ptr :
      local.curr_264.code == "]"
        ? local.iter_263.tape[local.iter_263.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_263.code_ptr)] : local.iter_263.code_ptr
        : local.iter_263.code_ptr)

    steps_taken = 1 + local.iter_263.steps_taken
  }
}

locals {
  end_of_code_265 = try(local.iter_264.code_ptr >= length(var.code), true)

  curr_265 = local.end_of_code_265 ? null : {
    code = substr(var.code, local.iter_264.code_ptr, 1)
    input = substr(var.code, local.iter_264.code_ptr, 1) == "," ? substr(local.iter_264.input, 0, 1) : null
  }

  iter_265 = local.end_of_code_265 ? local.iter_264 : {
    input = (local.curr_265.code == ","
      ? substr(local.iter_264.input, 1, -1)
      : local.iter_264.input)

    output = (local.curr_265.code == "."
      ? "${local.iter_264.output}${jsondecode(format("\"\\u%04x\"", local.iter_264.tape[local.iter_264.tape_ptr]))}"
      : local.iter_264.output)
    
    tape = (
      local.curr_265.code == "+"
        ? [for i, b in local.iter_264.tape : (i == local.iter_264.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_265.code == "-"
        ? [for i, b in local.iter_264.tape : (i == local.iter_264.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_265.code == ","
        ? [for i, b in local.iter_264.tape : (i == local.iter_264.tape_ptr ? local.ascii_lookup[local.curr_265.input] : b)]
        : local.iter_264.tape)

    tape_ptr = (
      local.curr_265.code == "<"
        ? local.iter_264.tape_ptr == 0 ? length(local.iter_264.tape) - 1 : local.iter_264.tape_ptr - 1 :
      local.curr_265.code == ">"
        ? local.iter_264.tape_ptr == length(local.iter_264.tape) - 1 ? 0 : local.iter_264.tape_ptr + 1
        : local.iter_264.tape_ptr)

    code_ptr = 1 + (
      local.curr_265.code == "["
        ? local.iter_264.tape[local.iter_264.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_264.code_ptr)] : local.iter_264.code_ptr :
      local.curr_265.code == "]"
        ? local.iter_264.tape[local.iter_264.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_264.code_ptr)] : local.iter_264.code_ptr
        : local.iter_264.code_ptr)

    steps_taken = 1 + local.iter_264.steps_taken
  }
}

locals {
  end_of_code_266 = try(local.iter_265.code_ptr >= length(var.code), true)

  curr_266 = local.end_of_code_266 ? null : {
    code = substr(var.code, local.iter_265.code_ptr, 1)
    input = substr(var.code, local.iter_265.code_ptr, 1) == "," ? substr(local.iter_265.input, 0, 1) : null
  }

  iter_266 = local.end_of_code_266 ? local.iter_265 : {
    input = (local.curr_266.code == ","
      ? substr(local.iter_265.input, 1, -1)
      : local.iter_265.input)

    output = (local.curr_266.code == "."
      ? "${local.iter_265.output}${jsondecode(format("\"\\u%04x\"", local.iter_265.tape[local.iter_265.tape_ptr]))}"
      : local.iter_265.output)
    
    tape = (
      local.curr_266.code == "+"
        ? [for i, b in local.iter_265.tape : (i == local.iter_265.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_266.code == "-"
        ? [for i, b in local.iter_265.tape : (i == local.iter_265.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_266.code == ","
        ? [for i, b in local.iter_265.tape : (i == local.iter_265.tape_ptr ? local.ascii_lookup[local.curr_266.input] : b)]
        : local.iter_265.tape)

    tape_ptr = (
      local.curr_266.code == "<"
        ? local.iter_265.tape_ptr == 0 ? length(local.iter_265.tape) - 1 : local.iter_265.tape_ptr - 1 :
      local.curr_266.code == ">"
        ? local.iter_265.tape_ptr == length(local.iter_265.tape) - 1 ? 0 : local.iter_265.tape_ptr + 1
        : local.iter_265.tape_ptr)

    code_ptr = 1 + (
      local.curr_266.code == "["
        ? local.iter_265.tape[local.iter_265.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_265.code_ptr)] : local.iter_265.code_ptr :
      local.curr_266.code == "]"
        ? local.iter_265.tape[local.iter_265.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_265.code_ptr)] : local.iter_265.code_ptr
        : local.iter_265.code_ptr)

    steps_taken = 1 + local.iter_265.steps_taken
  }
}

locals {
  end_of_code_267 = try(local.iter_266.code_ptr >= length(var.code), true)

  curr_267 = local.end_of_code_267 ? null : {
    code = substr(var.code, local.iter_266.code_ptr, 1)
    input = substr(var.code, local.iter_266.code_ptr, 1) == "," ? substr(local.iter_266.input, 0, 1) : null
  }

  iter_267 = local.end_of_code_267 ? local.iter_266 : {
    input = (local.curr_267.code == ","
      ? substr(local.iter_266.input, 1, -1)
      : local.iter_266.input)

    output = (local.curr_267.code == "."
      ? "${local.iter_266.output}${jsondecode(format("\"\\u%04x\"", local.iter_266.tape[local.iter_266.tape_ptr]))}"
      : local.iter_266.output)
    
    tape = (
      local.curr_267.code == "+"
        ? [for i, b in local.iter_266.tape : (i == local.iter_266.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_267.code == "-"
        ? [for i, b in local.iter_266.tape : (i == local.iter_266.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_267.code == ","
        ? [for i, b in local.iter_266.tape : (i == local.iter_266.tape_ptr ? local.ascii_lookup[local.curr_267.input] : b)]
        : local.iter_266.tape)

    tape_ptr = (
      local.curr_267.code == "<"
        ? local.iter_266.tape_ptr == 0 ? length(local.iter_266.tape) - 1 : local.iter_266.tape_ptr - 1 :
      local.curr_267.code == ">"
        ? local.iter_266.tape_ptr == length(local.iter_266.tape) - 1 ? 0 : local.iter_266.tape_ptr + 1
        : local.iter_266.tape_ptr)

    code_ptr = 1 + (
      local.curr_267.code == "["
        ? local.iter_266.tape[local.iter_266.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_266.code_ptr)] : local.iter_266.code_ptr :
      local.curr_267.code == "]"
        ? local.iter_266.tape[local.iter_266.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_266.code_ptr)] : local.iter_266.code_ptr
        : local.iter_266.code_ptr)

    steps_taken = 1 + local.iter_266.steps_taken
  }
}

locals {
  end_of_code_268 = try(local.iter_267.code_ptr >= length(var.code), true)

  curr_268 = local.end_of_code_268 ? null : {
    code = substr(var.code, local.iter_267.code_ptr, 1)
    input = substr(var.code, local.iter_267.code_ptr, 1) == "," ? substr(local.iter_267.input, 0, 1) : null
  }

  iter_268 = local.end_of_code_268 ? local.iter_267 : {
    input = (local.curr_268.code == ","
      ? substr(local.iter_267.input, 1, -1)
      : local.iter_267.input)

    output = (local.curr_268.code == "."
      ? "${local.iter_267.output}${jsondecode(format("\"\\u%04x\"", local.iter_267.tape[local.iter_267.tape_ptr]))}"
      : local.iter_267.output)
    
    tape = (
      local.curr_268.code == "+"
        ? [for i, b in local.iter_267.tape : (i == local.iter_267.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_268.code == "-"
        ? [for i, b in local.iter_267.tape : (i == local.iter_267.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_268.code == ","
        ? [for i, b in local.iter_267.tape : (i == local.iter_267.tape_ptr ? local.ascii_lookup[local.curr_268.input] : b)]
        : local.iter_267.tape)

    tape_ptr = (
      local.curr_268.code == "<"
        ? local.iter_267.tape_ptr == 0 ? length(local.iter_267.tape) - 1 : local.iter_267.tape_ptr - 1 :
      local.curr_268.code == ">"
        ? local.iter_267.tape_ptr == length(local.iter_267.tape) - 1 ? 0 : local.iter_267.tape_ptr + 1
        : local.iter_267.tape_ptr)

    code_ptr = 1 + (
      local.curr_268.code == "["
        ? local.iter_267.tape[local.iter_267.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_267.code_ptr)] : local.iter_267.code_ptr :
      local.curr_268.code == "]"
        ? local.iter_267.tape[local.iter_267.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_267.code_ptr)] : local.iter_267.code_ptr
        : local.iter_267.code_ptr)

    steps_taken = 1 + local.iter_267.steps_taken
  }
}

locals {
  end_of_code_269 = try(local.iter_268.code_ptr >= length(var.code), true)

  curr_269 = local.end_of_code_269 ? null : {
    code = substr(var.code, local.iter_268.code_ptr, 1)
    input = substr(var.code, local.iter_268.code_ptr, 1) == "," ? substr(local.iter_268.input, 0, 1) : null
  }

  iter_269 = local.end_of_code_269 ? local.iter_268 : {
    input = (local.curr_269.code == ","
      ? substr(local.iter_268.input, 1, -1)
      : local.iter_268.input)

    output = (local.curr_269.code == "."
      ? "${local.iter_268.output}${jsondecode(format("\"\\u%04x\"", local.iter_268.tape[local.iter_268.tape_ptr]))}"
      : local.iter_268.output)
    
    tape = (
      local.curr_269.code == "+"
        ? [for i, b in local.iter_268.tape : (i == local.iter_268.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_269.code == "-"
        ? [for i, b in local.iter_268.tape : (i == local.iter_268.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_269.code == ","
        ? [for i, b in local.iter_268.tape : (i == local.iter_268.tape_ptr ? local.ascii_lookup[local.curr_269.input] : b)]
        : local.iter_268.tape)

    tape_ptr = (
      local.curr_269.code == "<"
        ? local.iter_268.tape_ptr == 0 ? length(local.iter_268.tape) - 1 : local.iter_268.tape_ptr - 1 :
      local.curr_269.code == ">"
        ? local.iter_268.tape_ptr == length(local.iter_268.tape) - 1 ? 0 : local.iter_268.tape_ptr + 1
        : local.iter_268.tape_ptr)

    code_ptr = 1 + (
      local.curr_269.code == "["
        ? local.iter_268.tape[local.iter_268.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_268.code_ptr)] : local.iter_268.code_ptr :
      local.curr_269.code == "]"
        ? local.iter_268.tape[local.iter_268.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_268.code_ptr)] : local.iter_268.code_ptr
        : local.iter_268.code_ptr)

    steps_taken = 1 + local.iter_268.steps_taken
  }
}

locals {
  end_of_code_270 = try(local.iter_269.code_ptr >= length(var.code), true)

  curr_270 = local.end_of_code_270 ? null : {
    code = substr(var.code, local.iter_269.code_ptr, 1)
    input = substr(var.code, local.iter_269.code_ptr, 1) == "," ? substr(local.iter_269.input, 0, 1) : null
  }

  iter_270 = local.end_of_code_270 ? local.iter_269 : {
    input = (local.curr_270.code == ","
      ? substr(local.iter_269.input, 1, -1)
      : local.iter_269.input)

    output = (local.curr_270.code == "."
      ? "${local.iter_269.output}${jsondecode(format("\"\\u%04x\"", local.iter_269.tape[local.iter_269.tape_ptr]))}"
      : local.iter_269.output)
    
    tape = (
      local.curr_270.code == "+"
        ? [for i, b in local.iter_269.tape : (i == local.iter_269.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_270.code == "-"
        ? [for i, b in local.iter_269.tape : (i == local.iter_269.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_270.code == ","
        ? [for i, b in local.iter_269.tape : (i == local.iter_269.tape_ptr ? local.ascii_lookup[local.curr_270.input] : b)]
        : local.iter_269.tape)

    tape_ptr = (
      local.curr_270.code == "<"
        ? local.iter_269.tape_ptr == 0 ? length(local.iter_269.tape) - 1 : local.iter_269.tape_ptr - 1 :
      local.curr_270.code == ">"
        ? local.iter_269.tape_ptr == length(local.iter_269.tape) - 1 ? 0 : local.iter_269.tape_ptr + 1
        : local.iter_269.tape_ptr)

    code_ptr = 1 + (
      local.curr_270.code == "["
        ? local.iter_269.tape[local.iter_269.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_269.code_ptr)] : local.iter_269.code_ptr :
      local.curr_270.code == "]"
        ? local.iter_269.tape[local.iter_269.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_269.code_ptr)] : local.iter_269.code_ptr
        : local.iter_269.code_ptr)

    steps_taken = 1 + local.iter_269.steps_taken
  }
}

locals {
  end_of_code_271 = try(local.iter_270.code_ptr >= length(var.code), true)

  curr_271 = local.end_of_code_271 ? null : {
    code = substr(var.code, local.iter_270.code_ptr, 1)
    input = substr(var.code, local.iter_270.code_ptr, 1) == "," ? substr(local.iter_270.input, 0, 1) : null
  }

  iter_271 = local.end_of_code_271 ? local.iter_270 : {
    input = (local.curr_271.code == ","
      ? substr(local.iter_270.input, 1, -1)
      : local.iter_270.input)

    output = (local.curr_271.code == "."
      ? "${local.iter_270.output}${jsondecode(format("\"\\u%04x\"", local.iter_270.tape[local.iter_270.tape_ptr]))}"
      : local.iter_270.output)
    
    tape = (
      local.curr_271.code == "+"
        ? [for i, b in local.iter_270.tape : (i == local.iter_270.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_271.code == "-"
        ? [for i, b in local.iter_270.tape : (i == local.iter_270.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_271.code == ","
        ? [for i, b in local.iter_270.tape : (i == local.iter_270.tape_ptr ? local.ascii_lookup[local.curr_271.input] : b)]
        : local.iter_270.tape)

    tape_ptr = (
      local.curr_271.code == "<"
        ? local.iter_270.tape_ptr == 0 ? length(local.iter_270.tape) - 1 : local.iter_270.tape_ptr - 1 :
      local.curr_271.code == ">"
        ? local.iter_270.tape_ptr == length(local.iter_270.tape) - 1 ? 0 : local.iter_270.tape_ptr + 1
        : local.iter_270.tape_ptr)

    code_ptr = 1 + (
      local.curr_271.code == "["
        ? local.iter_270.tape[local.iter_270.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_270.code_ptr)] : local.iter_270.code_ptr :
      local.curr_271.code == "]"
        ? local.iter_270.tape[local.iter_270.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_270.code_ptr)] : local.iter_270.code_ptr
        : local.iter_270.code_ptr)

    steps_taken = 1 + local.iter_270.steps_taken
  }
}

locals {
  end_of_code_272 = try(local.iter_271.code_ptr >= length(var.code), true)

  curr_272 = local.end_of_code_272 ? null : {
    code = substr(var.code, local.iter_271.code_ptr, 1)
    input = substr(var.code, local.iter_271.code_ptr, 1) == "," ? substr(local.iter_271.input, 0, 1) : null
  }

  iter_272 = local.end_of_code_272 ? local.iter_271 : {
    input = (local.curr_272.code == ","
      ? substr(local.iter_271.input, 1, -1)
      : local.iter_271.input)

    output = (local.curr_272.code == "."
      ? "${local.iter_271.output}${jsondecode(format("\"\\u%04x\"", local.iter_271.tape[local.iter_271.tape_ptr]))}"
      : local.iter_271.output)
    
    tape = (
      local.curr_272.code == "+"
        ? [for i, b in local.iter_271.tape : (i == local.iter_271.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_272.code == "-"
        ? [for i, b in local.iter_271.tape : (i == local.iter_271.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_272.code == ","
        ? [for i, b in local.iter_271.tape : (i == local.iter_271.tape_ptr ? local.ascii_lookup[local.curr_272.input] : b)]
        : local.iter_271.tape)

    tape_ptr = (
      local.curr_272.code == "<"
        ? local.iter_271.tape_ptr == 0 ? length(local.iter_271.tape) - 1 : local.iter_271.tape_ptr - 1 :
      local.curr_272.code == ">"
        ? local.iter_271.tape_ptr == length(local.iter_271.tape) - 1 ? 0 : local.iter_271.tape_ptr + 1
        : local.iter_271.tape_ptr)

    code_ptr = 1 + (
      local.curr_272.code == "["
        ? local.iter_271.tape[local.iter_271.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_271.code_ptr)] : local.iter_271.code_ptr :
      local.curr_272.code == "]"
        ? local.iter_271.tape[local.iter_271.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_271.code_ptr)] : local.iter_271.code_ptr
        : local.iter_271.code_ptr)

    steps_taken = 1 + local.iter_271.steps_taken
  }
}

locals {
  end_of_code_273 = try(local.iter_272.code_ptr >= length(var.code), true)

  curr_273 = local.end_of_code_273 ? null : {
    code = substr(var.code, local.iter_272.code_ptr, 1)
    input = substr(var.code, local.iter_272.code_ptr, 1) == "," ? substr(local.iter_272.input, 0, 1) : null
  }

  iter_273 = local.end_of_code_273 ? local.iter_272 : {
    input = (local.curr_273.code == ","
      ? substr(local.iter_272.input, 1, -1)
      : local.iter_272.input)

    output = (local.curr_273.code == "."
      ? "${local.iter_272.output}${jsondecode(format("\"\\u%04x\"", local.iter_272.tape[local.iter_272.tape_ptr]))}"
      : local.iter_272.output)
    
    tape = (
      local.curr_273.code == "+"
        ? [for i, b in local.iter_272.tape : (i == local.iter_272.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_273.code == "-"
        ? [for i, b in local.iter_272.tape : (i == local.iter_272.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_273.code == ","
        ? [for i, b in local.iter_272.tape : (i == local.iter_272.tape_ptr ? local.ascii_lookup[local.curr_273.input] : b)]
        : local.iter_272.tape)

    tape_ptr = (
      local.curr_273.code == "<"
        ? local.iter_272.tape_ptr == 0 ? length(local.iter_272.tape) - 1 : local.iter_272.tape_ptr - 1 :
      local.curr_273.code == ">"
        ? local.iter_272.tape_ptr == length(local.iter_272.tape) - 1 ? 0 : local.iter_272.tape_ptr + 1
        : local.iter_272.tape_ptr)

    code_ptr = 1 + (
      local.curr_273.code == "["
        ? local.iter_272.tape[local.iter_272.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_272.code_ptr)] : local.iter_272.code_ptr :
      local.curr_273.code == "]"
        ? local.iter_272.tape[local.iter_272.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_272.code_ptr)] : local.iter_272.code_ptr
        : local.iter_272.code_ptr)

    steps_taken = 1 + local.iter_272.steps_taken
  }
}

locals {
  end_of_code_274 = try(local.iter_273.code_ptr >= length(var.code), true)

  curr_274 = local.end_of_code_274 ? null : {
    code = substr(var.code, local.iter_273.code_ptr, 1)
    input = substr(var.code, local.iter_273.code_ptr, 1) == "," ? substr(local.iter_273.input, 0, 1) : null
  }

  iter_274 = local.end_of_code_274 ? local.iter_273 : {
    input = (local.curr_274.code == ","
      ? substr(local.iter_273.input, 1, -1)
      : local.iter_273.input)

    output = (local.curr_274.code == "."
      ? "${local.iter_273.output}${jsondecode(format("\"\\u%04x\"", local.iter_273.tape[local.iter_273.tape_ptr]))}"
      : local.iter_273.output)
    
    tape = (
      local.curr_274.code == "+"
        ? [for i, b in local.iter_273.tape : (i == local.iter_273.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_274.code == "-"
        ? [for i, b in local.iter_273.tape : (i == local.iter_273.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_274.code == ","
        ? [for i, b in local.iter_273.tape : (i == local.iter_273.tape_ptr ? local.ascii_lookup[local.curr_274.input] : b)]
        : local.iter_273.tape)

    tape_ptr = (
      local.curr_274.code == "<"
        ? local.iter_273.tape_ptr == 0 ? length(local.iter_273.tape) - 1 : local.iter_273.tape_ptr - 1 :
      local.curr_274.code == ">"
        ? local.iter_273.tape_ptr == length(local.iter_273.tape) - 1 ? 0 : local.iter_273.tape_ptr + 1
        : local.iter_273.tape_ptr)

    code_ptr = 1 + (
      local.curr_274.code == "["
        ? local.iter_273.tape[local.iter_273.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_273.code_ptr)] : local.iter_273.code_ptr :
      local.curr_274.code == "]"
        ? local.iter_273.tape[local.iter_273.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_273.code_ptr)] : local.iter_273.code_ptr
        : local.iter_273.code_ptr)

    steps_taken = 1 + local.iter_273.steps_taken
  }
}

locals {
  end_of_code_275 = try(local.iter_274.code_ptr >= length(var.code), true)

  curr_275 = local.end_of_code_275 ? null : {
    code = substr(var.code, local.iter_274.code_ptr, 1)
    input = substr(var.code, local.iter_274.code_ptr, 1) == "," ? substr(local.iter_274.input, 0, 1) : null
  }

  iter_275 = local.end_of_code_275 ? local.iter_274 : {
    input = (local.curr_275.code == ","
      ? substr(local.iter_274.input, 1, -1)
      : local.iter_274.input)

    output = (local.curr_275.code == "."
      ? "${local.iter_274.output}${jsondecode(format("\"\\u%04x\"", local.iter_274.tape[local.iter_274.tape_ptr]))}"
      : local.iter_274.output)
    
    tape = (
      local.curr_275.code == "+"
        ? [for i, b in local.iter_274.tape : (i == local.iter_274.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_275.code == "-"
        ? [for i, b in local.iter_274.tape : (i == local.iter_274.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_275.code == ","
        ? [for i, b in local.iter_274.tape : (i == local.iter_274.tape_ptr ? local.ascii_lookup[local.curr_275.input] : b)]
        : local.iter_274.tape)

    tape_ptr = (
      local.curr_275.code == "<"
        ? local.iter_274.tape_ptr == 0 ? length(local.iter_274.tape) - 1 : local.iter_274.tape_ptr - 1 :
      local.curr_275.code == ">"
        ? local.iter_274.tape_ptr == length(local.iter_274.tape) - 1 ? 0 : local.iter_274.tape_ptr + 1
        : local.iter_274.tape_ptr)

    code_ptr = 1 + (
      local.curr_275.code == "["
        ? local.iter_274.tape[local.iter_274.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_274.code_ptr)] : local.iter_274.code_ptr :
      local.curr_275.code == "]"
        ? local.iter_274.tape[local.iter_274.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_274.code_ptr)] : local.iter_274.code_ptr
        : local.iter_274.code_ptr)

    steps_taken = 1 + local.iter_274.steps_taken
  }
}

locals {
  end_of_code_276 = try(local.iter_275.code_ptr >= length(var.code), true)

  curr_276 = local.end_of_code_276 ? null : {
    code = substr(var.code, local.iter_275.code_ptr, 1)
    input = substr(var.code, local.iter_275.code_ptr, 1) == "," ? substr(local.iter_275.input, 0, 1) : null
  }

  iter_276 = local.end_of_code_276 ? local.iter_275 : {
    input = (local.curr_276.code == ","
      ? substr(local.iter_275.input, 1, -1)
      : local.iter_275.input)

    output = (local.curr_276.code == "."
      ? "${local.iter_275.output}${jsondecode(format("\"\\u%04x\"", local.iter_275.tape[local.iter_275.tape_ptr]))}"
      : local.iter_275.output)
    
    tape = (
      local.curr_276.code == "+"
        ? [for i, b in local.iter_275.tape : (i == local.iter_275.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_276.code == "-"
        ? [for i, b in local.iter_275.tape : (i == local.iter_275.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_276.code == ","
        ? [for i, b in local.iter_275.tape : (i == local.iter_275.tape_ptr ? local.ascii_lookup[local.curr_276.input] : b)]
        : local.iter_275.tape)

    tape_ptr = (
      local.curr_276.code == "<"
        ? local.iter_275.tape_ptr == 0 ? length(local.iter_275.tape) - 1 : local.iter_275.tape_ptr - 1 :
      local.curr_276.code == ">"
        ? local.iter_275.tape_ptr == length(local.iter_275.tape) - 1 ? 0 : local.iter_275.tape_ptr + 1
        : local.iter_275.tape_ptr)

    code_ptr = 1 + (
      local.curr_276.code == "["
        ? local.iter_275.tape[local.iter_275.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_275.code_ptr)] : local.iter_275.code_ptr :
      local.curr_276.code == "]"
        ? local.iter_275.tape[local.iter_275.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_275.code_ptr)] : local.iter_275.code_ptr
        : local.iter_275.code_ptr)

    steps_taken = 1 + local.iter_275.steps_taken
  }
}

locals {
  end_of_code_277 = try(local.iter_276.code_ptr >= length(var.code), true)

  curr_277 = local.end_of_code_277 ? null : {
    code = substr(var.code, local.iter_276.code_ptr, 1)
    input = substr(var.code, local.iter_276.code_ptr, 1) == "," ? substr(local.iter_276.input, 0, 1) : null
  }

  iter_277 = local.end_of_code_277 ? local.iter_276 : {
    input = (local.curr_277.code == ","
      ? substr(local.iter_276.input, 1, -1)
      : local.iter_276.input)

    output = (local.curr_277.code == "."
      ? "${local.iter_276.output}${jsondecode(format("\"\\u%04x\"", local.iter_276.tape[local.iter_276.tape_ptr]))}"
      : local.iter_276.output)
    
    tape = (
      local.curr_277.code == "+"
        ? [for i, b in local.iter_276.tape : (i == local.iter_276.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_277.code == "-"
        ? [for i, b in local.iter_276.tape : (i == local.iter_276.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_277.code == ","
        ? [for i, b in local.iter_276.tape : (i == local.iter_276.tape_ptr ? local.ascii_lookup[local.curr_277.input] : b)]
        : local.iter_276.tape)

    tape_ptr = (
      local.curr_277.code == "<"
        ? local.iter_276.tape_ptr == 0 ? length(local.iter_276.tape) - 1 : local.iter_276.tape_ptr - 1 :
      local.curr_277.code == ">"
        ? local.iter_276.tape_ptr == length(local.iter_276.tape) - 1 ? 0 : local.iter_276.tape_ptr + 1
        : local.iter_276.tape_ptr)

    code_ptr = 1 + (
      local.curr_277.code == "["
        ? local.iter_276.tape[local.iter_276.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_276.code_ptr)] : local.iter_276.code_ptr :
      local.curr_277.code == "]"
        ? local.iter_276.tape[local.iter_276.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_276.code_ptr)] : local.iter_276.code_ptr
        : local.iter_276.code_ptr)

    steps_taken = 1 + local.iter_276.steps_taken
  }
}

locals {
  end_of_code_278 = try(local.iter_277.code_ptr >= length(var.code), true)

  curr_278 = local.end_of_code_278 ? null : {
    code = substr(var.code, local.iter_277.code_ptr, 1)
    input = substr(var.code, local.iter_277.code_ptr, 1) == "," ? substr(local.iter_277.input, 0, 1) : null
  }

  iter_278 = local.end_of_code_278 ? local.iter_277 : {
    input = (local.curr_278.code == ","
      ? substr(local.iter_277.input, 1, -1)
      : local.iter_277.input)

    output = (local.curr_278.code == "."
      ? "${local.iter_277.output}${jsondecode(format("\"\\u%04x\"", local.iter_277.tape[local.iter_277.tape_ptr]))}"
      : local.iter_277.output)
    
    tape = (
      local.curr_278.code == "+"
        ? [for i, b in local.iter_277.tape : (i == local.iter_277.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_278.code == "-"
        ? [for i, b in local.iter_277.tape : (i == local.iter_277.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_278.code == ","
        ? [for i, b in local.iter_277.tape : (i == local.iter_277.tape_ptr ? local.ascii_lookup[local.curr_278.input] : b)]
        : local.iter_277.tape)

    tape_ptr = (
      local.curr_278.code == "<"
        ? local.iter_277.tape_ptr == 0 ? length(local.iter_277.tape) - 1 : local.iter_277.tape_ptr - 1 :
      local.curr_278.code == ">"
        ? local.iter_277.tape_ptr == length(local.iter_277.tape) - 1 ? 0 : local.iter_277.tape_ptr + 1
        : local.iter_277.tape_ptr)

    code_ptr = 1 + (
      local.curr_278.code == "["
        ? local.iter_277.tape[local.iter_277.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_277.code_ptr)] : local.iter_277.code_ptr :
      local.curr_278.code == "]"
        ? local.iter_277.tape[local.iter_277.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_277.code_ptr)] : local.iter_277.code_ptr
        : local.iter_277.code_ptr)

    steps_taken = 1 + local.iter_277.steps_taken
  }
}

locals {
  end_of_code_279 = try(local.iter_278.code_ptr >= length(var.code), true)

  curr_279 = local.end_of_code_279 ? null : {
    code = substr(var.code, local.iter_278.code_ptr, 1)
    input = substr(var.code, local.iter_278.code_ptr, 1) == "," ? substr(local.iter_278.input, 0, 1) : null
  }

  iter_279 = local.end_of_code_279 ? local.iter_278 : {
    input = (local.curr_279.code == ","
      ? substr(local.iter_278.input, 1, -1)
      : local.iter_278.input)

    output = (local.curr_279.code == "."
      ? "${local.iter_278.output}${jsondecode(format("\"\\u%04x\"", local.iter_278.tape[local.iter_278.tape_ptr]))}"
      : local.iter_278.output)
    
    tape = (
      local.curr_279.code == "+"
        ? [for i, b in local.iter_278.tape : (i == local.iter_278.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_279.code == "-"
        ? [for i, b in local.iter_278.tape : (i == local.iter_278.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_279.code == ","
        ? [for i, b in local.iter_278.tape : (i == local.iter_278.tape_ptr ? local.ascii_lookup[local.curr_279.input] : b)]
        : local.iter_278.tape)

    tape_ptr = (
      local.curr_279.code == "<"
        ? local.iter_278.tape_ptr == 0 ? length(local.iter_278.tape) - 1 : local.iter_278.tape_ptr - 1 :
      local.curr_279.code == ">"
        ? local.iter_278.tape_ptr == length(local.iter_278.tape) - 1 ? 0 : local.iter_278.tape_ptr + 1
        : local.iter_278.tape_ptr)

    code_ptr = 1 + (
      local.curr_279.code == "["
        ? local.iter_278.tape[local.iter_278.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_278.code_ptr)] : local.iter_278.code_ptr :
      local.curr_279.code == "]"
        ? local.iter_278.tape[local.iter_278.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_278.code_ptr)] : local.iter_278.code_ptr
        : local.iter_278.code_ptr)

    steps_taken = 1 + local.iter_278.steps_taken
  }
}

locals {
  end_of_code_280 = try(local.iter_279.code_ptr >= length(var.code), true)

  curr_280 = local.end_of_code_280 ? null : {
    code = substr(var.code, local.iter_279.code_ptr, 1)
    input = substr(var.code, local.iter_279.code_ptr, 1) == "," ? substr(local.iter_279.input, 0, 1) : null
  }

  iter_280 = local.end_of_code_280 ? local.iter_279 : {
    input = (local.curr_280.code == ","
      ? substr(local.iter_279.input, 1, -1)
      : local.iter_279.input)

    output = (local.curr_280.code == "."
      ? "${local.iter_279.output}${jsondecode(format("\"\\u%04x\"", local.iter_279.tape[local.iter_279.tape_ptr]))}"
      : local.iter_279.output)
    
    tape = (
      local.curr_280.code == "+"
        ? [for i, b in local.iter_279.tape : (i == local.iter_279.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_280.code == "-"
        ? [for i, b in local.iter_279.tape : (i == local.iter_279.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_280.code == ","
        ? [for i, b in local.iter_279.tape : (i == local.iter_279.tape_ptr ? local.ascii_lookup[local.curr_280.input] : b)]
        : local.iter_279.tape)

    tape_ptr = (
      local.curr_280.code == "<"
        ? local.iter_279.tape_ptr == 0 ? length(local.iter_279.tape) - 1 : local.iter_279.tape_ptr - 1 :
      local.curr_280.code == ">"
        ? local.iter_279.tape_ptr == length(local.iter_279.tape) - 1 ? 0 : local.iter_279.tape_ptr + 1
        : local.iter_279.tape_ptr)

    code_ptr = 1 + (
      local.curr_280.code == "["
        ? local.iter_279.tape[local.iter_279.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_279.code_ptr)] : local.iter_279.code_ptr :
      local.curr_280.code == "]"
        ? local.iter_279.tape[local.iter_279.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_279.code_ptr)] : local.iter_279.code_ptr
        : local.iter_279.code_ptr)

    steps_taken = 1 + local.iter_279.steps_taken
  }
}

locals {
  end_of_code_281 = try(local.iter_280.code_ptr >= length(var.code), true)

  curr_281 = local.end_of_code_281 ? null : {
    code = substr(var.code, local.iter_280.code_ptr, 1)
    input = substr(var.code, local.iter_280.code_ptr, 1) == "," ? substr(local.iter_280.input, 0, 1) : null
  }

  iter_281 = local.end_of_code_281 ? local.iter_280 : {
    input = (local.curr_281.code == ","
      ? substr(local.iter_280.input, 1, -1)
      : local.iter_280.input)

    output = (local.curr_281.code == "."
      ? "${local.iter_280.output}${jsondecode(format("\"\\u%04x\"", local.iter_280.tape[local.iter_280.tape_ptr]))}"
      : local.iter_280.output)
    
    tape = (
      local.curr_281.code == "+"
        ? [for i, b in local.iter_280.tape : (i == local.iter_280.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_281.code == "-"
        ? [for i, b in local.iter_280.tape : (i == local.iter_280.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_281.code == ","
        ? [for i, b in local.iter_280.tape : (i == local.iter_280.tape_ptr ? local.ascii_lookup[local.curr_281.input] : b)]
        : local.iter_280.tape)

    tape_ptr = (
      local.curr_281.code == "<"
        ? local.iter_280.tape_ptr == 0 ? length(local.iter_280.tape) - 1 : local.iter_280.tape_ptr - 1 :
      local.curr_281.code == ">"
        ? local.iter_280.tape_ptr == length(local.iter_280.tape) - 1 ? 0 : local.iter_280.tape_ptr + 1
        : local.iter_280.tape_ptr)

    code_ptr = 1 + (
      local.curr_281.code == "["
        ? local.iter_280.tape[local.iter_280.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_280.code_ptr)] : local.iter_280.code_ptr :
      local.curr_281.code == "]"
        ? local.iter_280.tape[local.iter_280.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_280.code_ptr)] : local.iter_280.code_ptr
        : local.iter_280.code_ptr)

    steps_taken = 1 + local.iter_280.steps_taken
  }
}

locals {
  end_of_code_282 = try(local.iter_281.code_ptr >= length(var.code), true)

  curr_282 = local.end_of_code_282 ? null : {
    code = substr(var.code, local.iter_281.code_ptr, 1)
    input = substr(var.code, local.iter_281.code_ptr, 1) == "," ? substr(local.iter_281.input, 0, 1) : null
  }

  iter_282 = local.end_of_code_282 ? local.iter_281 : {
    input = (local.curr_282.code == ","
      ? substr(local.iter_281.input, 1, -1)
      : local.iter_281.input)

    output = (local.curr_282.code == "."
      ? "${local.iter_281.output}${jsondecode(format("\"\\u%04x\"", local.iter_281.tape[local.iter_281.tape_ptr]))}"
      : local.iter_281.output)
    
    tape = (
      local.curr_282.code == "+"
        ? [for i, b in local.iter_281.tape : (i == local.iter_281.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_282.code == "-"
        ? [for i, b in local.iter_281.tape : (i == local.iter_281.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_282.code == ","
        ? [for i, b in local.iter_281.tape : (i == local.iter_281.tape_ptr ? local.ascii_lookup[local.curr_282.input] : b)]
        : local.iter_281.tape)

    tape_ptr = (
      local.curr_282.code == "<"
        ? local.iter_281.tape_ptr == 0 ? length(local.iter_281.tape) - 1 : local.iter_281.tape_ptr - 1 :
      local.curr_282.code == ">"
        ? local.iter_281.tape_ptr == length(local.iter_281.tape) - 1 ? 0 : local.iter_281.tape_ptr + 1
        : local.iter_281.tape_ptr)

    code_ptr = 1 + (
      local.curr_282.code == "["
        ? local.iter_281.tape[local.iter_281.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_281.code_ptr)] : local.iter_281.code_ptr :
      local.curr_282.code == "]"
        ? local.iter_281.tape[local.iter_281.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_281.code_ptr)] : local.iter_281.code_ptr
        : local.iter_281.code_ptr)

    steps_taken = 1 + local.iter_281.steps_taken
  }
}

locals {
  end_of_code_283 = try(local.iter_282.code_ptr >= length(var.code), true)

  curr_283 = local.end_of_code_283 ? null : {
    code = substr(var.code, local.iter_282.code_ptr, 1)
    input = substr(var.code, local.iter_282.code_ptr, 1) == "," ? substr(local.iter_282.input, 0, 1) : null
  }

  iter_283 = local.end_of_code_283 ? local.iter_282 : {
    input = (local.curr_283.code == ","
      ? substr(local.iter_282.input, 1, -1)
      : local.iter_282.input)

    output = (local.curr_283.code == "."
      ? "${local.iter_282.output}${jsondecode(format("\"\\u%04x\"", local.iter_282.tape[local.iter_282.tape_ptr]))}"
      : local.iter_282.output)
    
    tape = (
      local.curr_283.code == "+"
        ? [for i, b in local.iter_282.tape : (i == local.iter_282.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_283.code == "-"
        ? [for i, b in local.iter_282.tape : (i == local.iter_282.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_283.code == ","
        ? [for i, b in local.iter_282.tape : (i == local.iter_282.tape_ptr ? local.ascii_lookup[local.curr_283.input] : b)]
        : local.iter_282.tape)

    tape_ptr = (
      local.curr_283.code == "<"
        ? local.iter_282.tape_ptr == 0 ? length(local.iter_282.tape) - 1 : local.iter_282.tape_ptr - 1 :
      local.curr_283.code == ">"
        ? local.iter_282.tape_ptr == length(local.iter_282.tape) - 1 ? 0 : local.iter_282.tape_ptr + 1
        : local.iter_282.tape_ptr)

    code_ptr = 1 + (
      local.curr_283.code == "["
        ? local.iter_282.tape[local.iter_282.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_282.code_ptr)] : local.iter_282.code_ptr :
      local.curr_283.code == "]"
        ? local.iter_282.tape[local.iter_282.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_282.code_ptr)] : local.iter_282.code_ptr
        : local.iter_282.code_ptr)

    steps_taken = 1 + local.iter_282.steps_taken
  }
}

locals {
  end_of_code_284 = try(local.iter_283.code_ptr >= length(var.code), true)

  curr_284 = local.end_of_code_284 ? null : {
    code = substr(var.code, local.iter_283.code_ptr, 1)
    input = substr(var.code, local.iter_283.code_ptr, 1) == "," ? substr(local.iter_283.input, 0, 1) : null
  }

  iter_284 = local.end_of_code_284 ? local.iter_283 : {
    input = (local.curr_284.code == ","
      ? substr(local.iter_283.input, 1, -1)
      : local.iter_283.input)

    output = (local.curr_284.code == "."
      ? "${local.iter_283.output}${jsondecode(format("\"\\u%04x\"", local.iter_283.tape[local.iter_283.tape_ptr]))}"
      : local.iter_283.output)
    
    tape = (
      local.curr_284.code == "+"
        ? [for i, b in local.iter_283.tape : (i == local.iter_283.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_284.code == "-"
        ? [for i, b in local.iter_283.tape : (i == local.iter_283.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_284.code == ","
        ? [for i, b in local.iter_283.tape : (i == local.iter_283.tape_ptr ? local.ascii_lookup[local.curr_284.input] : b)]
        : local.iter_283.tape)

    tape_ptr = (
      local.curr_284.code == "<"
        ? local.iter_283.tape_ptr == 0 ? length(local.iter_283.tape) - 1 : local.iter_283.tape_ptr - 1 :
      local.curr_284.code == ">"
        ? local.iter_283.tape_ptr == length(local.iter_283.tape) - 1 ? 0 : local.iter_283.tape_ptr + 1
        : local.iter_283.tape_ptr)

    code_ptr = 1 + (
      local.curr_284.code == "["
        ? local.iter_283.tape[local.iter_283.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_283.code_ptr)] : local.iter_283.code_ptr :
      local.curr_284.code == "]"
        ? local.iter_283.tape[local.iter_283.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_283.code_ptr)] : local.iter_283.code_ptr
        : local.iter_283.code_ptr)

    steps_taken = 1 + local.iter_283.steps_taken
  }
}

locals {
  end_of_code_285 = try(local.iter_284.code_ptr >= length(var.code), true)

  curr_285 = local.end_of_code_285 ? null : {
    code = substr(var.code, local.iter_284.code_ptr, 1)
    input = substr(var.code, local.iter_284.code_ptr, 1) == "," ? substr(local.iter_284.input, 0, 1) : null
  }

  iter_285 = local.end_of_code_285 ? local.iter_284 : {
    input = (local.curr_285.code == ","
      ? substr(local.iter_284.input, 1, -1)
      : local.iter_284.input)

    output = (local.curr_285.code == "."
      ? "${local.iter_284.output}${jsondecode(format("\"\\u%04x\"", local.iter_284.tape[local.iter_284.tape_ptr]))}"
      : local.iter_284.output)
    
    tape = (
      local.curr_285.code == "+"
        ? [for i, b in local.iter_284.tape : (i == local.iter_284.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_285.code == "-"
        ? [for i, b in local.iter_284.tape : (i == local.iter_284.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_285.code == ","
        ? [for i, b in local.iter_284.tape : (i == local.iter_284.tape_ptr ? local.ascii_lookup[local.curr_285.input] : b)]
        : local.iter_284.tape)

    tape_ptr = (
      local.curr_285.code == "<"
        ? local.iter_284.tape_ptr == 0 ? length(local.iter_284.tape) - 1 : local.iter_284.tape_ptr - 1 :
      local.curr_285.code == ">"
        ? local.iter_284.tape_ptr == length(local.iter_284.tape) - 1 ? 0 : local.iter_284.tape_ptr + 1
        : local.iter_284.tape_ptr)

    code_ptr = 1 + (
      local.curr_285.code == "["
        ? local.iter_284.tape[local.iter_284.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_284.code_ptr)] : local.iter_284.code_ptr :
      local.curr_285.code == "]"
        ? local.iter_284.tape[local.iter_284.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_284.code_ptr)] : local.iter_284.code_ptr
        : local.iter_284.code_ptr)

    steps_taken = 1 + local.iter_284.steps_taken
  }
}

locals {
  end_of_code_286 = try(local.iter_285.code_ptr >= length(var.code), true)

  curr_286 = local.end_of_code_286 ? null : {
    code = substr(var.code, local.iter_285.code_ptr, 1)
    input = substr(var.code, local.iter_285.code_ptr, 1) == "," ? substr(local.iter_285.input, 0, 1) : null
  }

  iter_286 = local.end_of_code_286 ? local.iter_285 : {
    input = (local.curr_286.code == ","
      ? substr(local.iter_285.input, 1, -1)
      : local.iter_285.input)

    output = (local.curr_286.code == "."
      ? "${local.iter_285.output}${jsondecode(format("\"\\u%04x\"", local.iter_285.tape[local.iter_285.tape_ptr]))}"
      : local.iter_285.output)
    
    tape = (
      local.curr_286.code == "+"
        ? [for i, b in local.iter_285.tape : (i == local.iter_285.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_286.code == "-"
        ? [for i, b in local.iter_285.tape : (i == local.iter_285.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_286.code == ","
        ? [for i, b in local.iter_285.tape : (i == local.iter_285.tape_ptr ? local.ascii_lookup[local.curr_286.input] : b)]
        : local.iter_285.tape)

    tape_ptr = (
      local.curr_286.code == "<"
        ? local.iter_285.tape_ptr == 0 ? length(local.iter_285.tape) - 1 : local.iter_285.tape_ptr - 1 :
      local.curr_286.code == ">"
        ? local.iter_285.tape_ptr == length(local.iter_285.tape) - 1 ? 0 : local.iter_285.tape_ptr + 1
        : local.iter_285.tape_ptr)

    code_ptr = 1 + (
      local.curr_286.code == "["
        ? local.iter_285.tape[local.iter_285.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_285.code_ptr)] : local.iter_285.code_ptr :
      local.curr_286.code == "]"
        ? local.iter_285.tape[local.iter_285.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_285.code_ptr)] : local.iter_285.code_ptr
        : local.iter_285.code_ptr)

    steps_taken = 1 + local.iter_285.steps_taken
  }
}

locals {
  end_of_code_287 = try(local.iter_286.code_ptr >= length(var.code), true)

  curr_287 = local.end_of_code_287 ? null : {
    code = substr(var.code, local.iter_286.code_ptr, 1)
    input = substr(var.code, local.iter_286.code_ptr, 1) == "," ? substr(local.iter_286.input, 0, 1) : null
  }

  iter_287 = local.end_of_code_287 ? local.iter_286 : {
    input = (local.curr_287.code == ","
      ? substr(local.iter_286.input, 1, -1)
      : local.iter_286.input)

    output = (local.curr_287.code == "."
      ? "${local.iter_286.output}${jsondecode(format("\"\\u%04x\"", local.iter_286.tape[local.iter_286.tape_ptr]))}"
      : local.iter_286.output)
    
    tape = (
      local.curr_287.code == "+"
        ? [for i, b in local.iter_286.tape : (i == local.iter_286.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_287.code == "-"
        ? [for i, b in local.iter_286.tape : (i == local.iter_286.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_287.code == ","
        ? [for i, b in local.iter_286.tape : (i == local.iter_286.tape_ptr ? local.ascii_lookup[local.curr_287.input] : b)]
        : local.iter_286.tape)

    tape_ptr = (
      local.curr_287.code == "<"
        ? local.iter_286.tape_ptr == 0 ? length(local.iter_286.tape) - 1 : local.iter_286.tape_ptr - 1 :
      local.curr_287.code == ">"
        ? local.iter_286.tape_ptr == length(local.iter_286.tape) - 1 ? 0 : local.iter_286.tape_ptr + 1
        : local.iter_286.tape_ptr)

    code_ptr = 1 + (
      local.curr_287.code == "["
        ? local.iter_286.tape[local.iter_286.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_286.code_ptr)] : local.iter_286.code_ptr :
      local.curr_287.code == "]"
        ? local.iter_286.tape[local.iter_286.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_286.code_ptr)] : local.iter_286.code_ptr
        : local.iter_286.code_ptr)

    steps_taken = 1 + local.iter_286.steps_taken
  }
}

locals {
  end_of_code_288 = try(local.iter_287.code_ptr >= length(var.code), true)

  curr_288 = local.end_of_code_288 ? null : {
    code = substr(var.code, local.iter_287.code_ptr, 1)
    input = substr(var.code, local.iter_287.code_ptr, 1) == "," ? substr(local.iter_287.input, 0, 1) : null
  }

  iter_288 = local.end_of_code_288 ? local.iter_287 : {
    input = (local.curr_288.code == ","
      ? substr(local.iter_287.input, 1, -1)
      : local.iter_287.input)

    output = (local.curr_288.code == "."
      ? "${local.iter_287.output}${jsondecode(format("\"\\u%04x\"", local.iter_287.tape[local.iter_287.tape_ptr]))}"
      : local.iter_287.output)
    
    tape = (
      local.curr_288.code == "+"
        ? [for i, b in local.iter_287.tape : (i == local.iter_287.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_288.code == "-"
        ? [for i, b in local.iter_287.tape : (i == local.iter_287.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_288.code == ","
        ? [for i, b in local.iter_287.tape : (i == local.iter_287.tape_ptr ? local.ascii_lookup[local.curr_288.input] : b)]
        : local.iter_287.tape)

    tape_ptr = (
      local.curr_288.code == "<"
        ? local.iter_287.tape_ptr == 0 ? length(local.iter_287.tape) - 1 : local.iter_287.tape_ptr - 1 :
      local.curr_288.code == ">"
        ? local.iter_287.tape_ptr == length(local.iter_287.tape) - 1 ? 0 : local.iter_287.tape_ptr + 1
        : local.iter_287.tape_ptr)

    code_ptr = 1 + (
      local.curr_288.code == "["
        ? local.iter_287.tape[local.iter_287.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_287.code_ptr)] : local.iter_287.code_ptr :
      local.curr_288.code == "]"
        ? local.iter_287.tape[local.iter_287.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_287.code_ptr)] : local.iter_287.code_ptr
        : local.iter_287.code_ptr)

    steps_taken = 1 + local.iter_287.steps_taken
  }
}

locals {
  end_of_code_289 = try(local.iter_288.code_ptr >= length(var.code), true)

  curr_289 = local.end_of_code_289 ? null : {
    code = substr(var.code, local.iter_288.code_ptr, 1)
    input = substr(var.code, local.iter_288.code_ptr, 1) == "," ? substr(local.iter_288.input, 0, 1) : null
  }

  iter_289 = local.end_of_code_289 ? local.iter_288 : {
    input = (local.curr_289.code == ","
      ? substr(local.iter_288.input, 1, -1)
      : local.iter_288.input)

    output = (local.curr_289.code == "."
      ? "${local.iter_288.output}${jsondecode(format("\"\\u%04x\"", local.iter_288.tape[local.iter_288.tape_ptr]))}"
      : local.iter_288.output)
    
    tape = (
      local.curr_289.code == "+"
        ? [for i, b in local.iter_288.tape : (i == local.iter_288.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_289.code == "-"
        ? [for i, b in local.iter_288.tape : (i == local.iter_288.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_289.code == ","
        ? [for i, b in local.iter_288.tape : (i == local.iter_288.tape_ptr ? local.ascii_lookup[local.curr_289.input] : b)]
        : local.iter_288.tape)

    tape_ptr = (
      local.curr_289.code == "<"
        ? local.iter_288.tape_ptr == 0 ? length(local.iter_288.tape) - 1 : local.iter_288.tape_ptr - 1 :
      local.curr_289.code == ">"
        ? local.iter_288.tape_ptr == length(local.iter_288.tape) - 1 ? 0 : local.iter_288.tape_ptr + 1
        : local.iter_288.tape_ptr)

    code_ptr = 1 + (
      local.curr_289.code == "["
        ? local.iter_288.tape[local.iter_288.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_288.code_ptr)] : local.iter_288.code_ptr :
      local.curr_289.code == "]"
        ? local.iter_288.tape[local.iter_288.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_288.code_ptr)] : local.iter_288.code_ptr
        : local.iter_288.code_ptr)

    steps_taken = 1 + local.iter_288.steps_taken
  }
}

locals {
  end_of_code_290 = try(local.iter_289.code_ptr >= length(var.code), true)

  curr_290 = local.end_of_code_290 ? null : {
    code = substr(var.code, local.iter_289.code_ptr, 1)
    input = substr(var.code, local.iter_289.code_ptr, 1) == "," ? substr(local.iter_289.input, 0, 1) : null
  }

  iter_290 = local.end_of_code_290 ? local.iter_289 : {
    input = (local.curr_290.code == ","
      ? substr(local.iter_289.input, 1, -1)
      : local.iter_289.input)

    output = (local.curr_290.code == "."
      ? "${local.iter_289.output}${jsondecode(format("\"\\u%04x\"", local.iter_289.tape[local.iter_289.tape_ptr]))}"
      : local.iter_289.output)
    
    tape = (
      local.curr_290.code == "+"
        ? [for i, b in local.iter_289.tape : (i == local.iter_289.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_290.code == "-"
        ? [for i, b in local.iter_289.tape : (i == local.iter_289.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_290.code == ","
        ? [for i, b in local.iter_289.tape : (i == local.iter_289.tape_ptr ? local.ascii_lookup[local.curr_290.input] : b)]
        : local.iter_289.tape)

    tape_ptr = (
      local.curr_290.code == "<"
        ? local.iter_289.tape_ptr == 0 ? length(local.iter_289.tape) - 1 : local.iter_289.tape_ptr - 1 :
      local.curr_290.code == ">"
        ? local.iter_289.tape_ptr == length(local.iter_289.tape) - 1 ? 0 : local.iter_289.tape_ptr + 1
        : local.iter_289.tape_ptr)

    code_ptr = 1 + (
      local.curr_290.code == "["
        ? local.iter_289.tape[local.iter_289.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_289.code_ptr)] : local.iter_289.code_ptr :
      local.curr_290.code == "]"
        ? local.iter_289.tape[local.iter_289.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_289.code_ptr)] : local.iter_289.code_ptr
        : local.iter_289.code_ptr)

    steps_taken = 1 + local.iter_289.steps_taken
  }
}

locals {
  end_of_code_291 = try(local.iter_290.code_ptr >= length(var.code), true)

  curr_291 = local.end_of_code_291 ? null : {
    code = substr(var.code, local.iter_290.code_ptr, 1)
    input = substr(var.code, local.iter_290.code_ptr, 1) == "," ? substr(local.iter_290.input, 0, 1) : null
  }

  iter_291 = local.end_of_code_291 ? local.iter_290 : {
    input = (local.curr_291.code == ","
      ? substr(local.iter_290.input, 1, -1)
      : local.iter_290.input)

    output = (local.curr_291.code == "."
      ? "${local.iter_290.output}${jsondecode(format("\"\\u%04x\"", local.iter_290.tape[local.iter_290.tape_ptr]))}"
      : local.iter_290.output)
    
    tape = (
      local.curr_291.code == "+"
        ? [for i, b in local.iter_290.tape : (i == local.iter_290.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_291.code == "-"
        ? [for i, b in local.iter_290.tape : (i == local.iter_290.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_291.code == ","
        ? [for i, b in local.iter_290.tape : (i == local.iter_290.tape_ptr ? local.ascii_lookup[local.curr_291.input] : b)]
        : local.iter_290.tape)

    tape_ptr = (
      local.curr_291.code == "<"
        ? local.iter_290.tape_ptr == 0 ? length(local.iter_290.tape) - 1 : local.iter_290.tape_ptr - 1 :
      local.curr_291.code == ">"
        ? local.iter_290.tape_ptr == length(local.iter_290.tape) - 1 ? 0 : local.iter_290.tape_ptr + 1
        : local.iter_290.tape_ptr)

    code_ptr = 1 + (
      local.curr_291.code == "["
        ? local.iter_290.tape[local.iter_290.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_290.code_ptr)] : local.iter_290.code_ptr :
      local.curr_291.code == "]"
        ? local.iter_290.tape[local.iter_290.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_290.code_ptr)] : local.iter_290.code_ptr
        : local.iter_290.code_ptr)

    steps_taken = 1 + local.iter_290.steps_taken
  }
}

locals {
  end_of_code_292 = try(local.iter_291.code_ptr >= length(var.code), true)

  curr_292 = local.end_of_code_292 ? null : {
    code = substr(var.code, local.iter_291.code_ptr, 1)
    input = substr(var.code, local.iter_291.code_ptr, 1) == "," ? substr(local.iter_291.input, 0, 1) : null
  }

  iter_292 = local.end_of_code_292 ? local.iter_291 : {
    input = (local.curr_292.code == ","
      ? substr(local.iter_291.input, 1, -1)
      : local.iter_291.input)

    output = (local.curr_292.code == "."
      ? "${local.iter_291.output}${jsondecode(format("\"\\u%04x\"", local.iter_291.tape[local.iter_291.tape_ptr]))}"
      : local.iter_291.output)
    
    tape = (
      local.curr_292.code == "+"
        ? [for i, b in local.iter_291.tape : (i == local.iter_291.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_292.code == "-"
        ? [for i, b in local.iter_291.tape : (i == local.iter_291.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_292.code == ","
        ? [for i, b in local.iter_291.tape : (i == local.iter_291.tape_ptr ? local.ascii_lookup[local.curr_292.input] : b)]
        : local.iter_291.tape)

    tape_ptr = (
      local.curr_292.code == "<"
        ? local.iter_291.tape_ptr == 0 ? length(local.iter_291.tape) - 1 : local.iter_291.tape_ptr - 1 :
      local.curr_292.code == ">"
        ? local.iter_291.tape_ptr == length(local.iter_291.tape) - 1 ? 0 : local.iter_291.tape_ptr + 1
        : local.iter_291.tape_ptr)

    code_ptr = 1 + (
      local.curr_292.code == "["
        ? local.iter_291.tape[local.iter_291.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_291.code_ptr)] : local.iter_291.code_ptr :
      local.curr_292.code == "]"
        ? local.iter_291.tape[local.iter_291.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_291.code_ptr)] : local.iter_291.code_ptr
        : local.iter_291.code_ptr)

    steps_taken = 1 + local.iter_291.steps_taken
  }
}

locals {
  end_of_code_293 = try(local.iter_292.code_ptr >= length(var.code), true)

  curr_293 = local.end_of_code_293 ? null : {
    code = substr(var.code, local.iter_292.code_ptr, 1)
    input = substr(var.code, local.iter_292.code_ptr, 1) == "," ? substr(local.iter_292.input, 0, 1) : null
  }

  iter_293 = local.end_of_code_293 ? local.iter_292 : {
    input = (local.curr_293.code == ","
      ? substr(local.iter_292.input, 1, -1)
      : local.iter_292.input)

    output = (local.curr_293.code == "."
      ? "${local.iter_292.output}${jsondecode(format("\"\\u%04x\"", local.iter_292.tape[local.iter_292.tape_ptr]))}"
      : local.iter_292.output)
    
    tape = (
      local.curr_293.code == "+"
        ? [for i, b in local.iter_292.tape : (i == local.iter_292.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_293.code == "-"
        ? [for i, b in local.iter_292.tape : (i == local.iter_292.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_293.code == ","
        ? [for i, b in local.iter_292.tape : (i == local.iter_292.tape_ptr ? local.ascii_lookup[local.curr_293.input] : b)]
        : local.iter_292.tape)

    tape_ptr = (
      local.curr_293.code == "<"
        ? local.iter_292.tape_ptr == 0 ? length(local.iter_292.tape) - 1 : local.iter_292.tape_ptr - 1 :
      local.curr_293.code == ">"
        ? local.iter_292.tape_ptr == length(local.iter_292.tape) - 1 ? 0 : local.iter_292.tape_ptr + 1
        : local.iter_292.tape_ptr)

    code_ptr = 1 + (
      local.curr_293.code == "["
        ? local.iter_292.tape[local.iter_292.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_292.code_ptr)] : local.iter_292.code_ptr :
      local.curr_293.code == "]"
        ? local.iter_292.tape[local.iter_292.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_292.code_ptr)] : local.iter_292.code_ptr
        : local.iter_292.code_ptr)

    steps_taken = 1 + local.iter_292.steps_taken
  }
}

locals {
  end_of_code_294 = try(local.iter_293.code_ptr >= length(var.code), true)

  curr_294 = local.end_of_code_294 ? null : {
    code = substr(var.code, local.iter_293.code_ptr, 1)
    input = substr(var.code, local.iter_293.code_ptr, 1) == "," ? substr(local.iter_293.input, 0, 1) : null
  }

  iter_294 = local.end_of_code_294 ? local.iter_293 : {
    input = (local.curr_294.code == ","
      ? substr(local.iter_293.input, 1, -1)
      : local.iter_293.input)

    output = (local.curr_294.code == "."
      ? "${local.iter_293.output}${jsondecode(format("\"\\u%04x\"", local.iter_293.tape[local.iter_293.tape_ptr]))}"
      : local.iter_293.output)
    
    tape = (
      local.curr_294.code == "+"
        ? [for i, b in local.iter_293.tape : (i == local.iter_293.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_294.code == "-"
        ? [for i, b in local.iter_293.tape : (i == local.iter_293.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_294.code == ","
        ? [for i, b in local.iter_293.tape : (i == local.iter_293.tape_ptr ? local.ascii_lookup[local.curr_294.input] : b)]
        : local.iter_293.tape)

    tape_ptr = (
      local.curr_294.code == "<"
        ? local.iter_293.tape_ptr == 0 ? length(local.iter_293.tape) - 1 : local.iter_293.tape_ptr - 1 :
      local.curr_294.code == ">"
        ? local.iter_293.tape_ptr == length(local.iter_293.tape) - 1 ? 0 : local.iter_293.tape_ptr + 1
        : local.iter_293.tape_ptr)

    code_ptr = 1 + (
      local.curr_294.code == "["
        ? local.iter_293.tape[local.iter_293.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_293.code_ptr)] : local.iter_293.code_ptr :
      local.curr_294.code == "]"
        ? local.iter_293.tape[local.iter_293.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_293.code_ptr)] : local.iter_293.code_ptr
        : local.iter_293.code_ptr)

    steps_taken = 1 + local.iter_293.steps_taken
  }
}

locals {
  end_of_code_295 = try(local.iter_294.code_ptr >= length(var.code), true)

  curr_295 = local.end_of_code_295 ? null : {
    code = substr(var.code, local.iter_294.code_ptr, 1)
    input = substr(var.code, local.iter_294.code_ptr, 1) == "," ? substr(local.iter_294.input, 0, 1) : null
  }

  iter_295 = local.end_of_code_295 ? local.iter_294 : {
    input = (local.curr_295.code == ","
      ? substr(local.iter_294.input, 1, -1)
      : local.iter_294.input)

    output = (local.curr_295.code == "."
      ? "${local.iter_294.output}${jsondecode(format("\"\\u%04x\"", local.iter_294.tape[local.iter_294.tape_ptr]))}"
      : local.iter_294.output)
    
    tape = (
      local.curr_295.code == "+"
        ? [for i, b in local.iter_294.tape : (i == local.iter_294.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_295.code == "-"
        ? [for i, b in local.iter_294.tape : (i == local.iter_294.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_295.code == ","
        ? [for i, b in local.iter_294.tape : (i == local.iter_294.tape_ptr ? local.ascii_lookup[local.curr_295.input] : b)]
        : local.iter_294.tape)

    tape_ptr = (
      local.curr_295.code == "<"
        ? local.iter_294.tape_ptr == 0 ? length(local.iter_294.tape) - 1 : local.iter_294.tape_ptr - 1 :
      local.curr_295.code == ">"
        ? local.iter_294.tape_ptr == length(local.iter_294.tape) - 1 ? 0 : local.iter_294.tape_ptr + 1
        : local.iter_294.tape_ptr)

    code_ptr = 1 + (
      local.curr_295.code == "["
        ? local.iter_294.tape[local.iter_294.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_294.code_ptr)] : local.iter_294.code_ptr :
      local.curr_295.code == "]"
        ? local.iter_294.tape[local.iter_294.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_294.code_ptr)] : local.iter_294.code_ptr
        : local.iter_294.code_ptr)

    steps_taken = 1 + local.iter_294.steps_taken
  }
}

locals {
  end_of_code_296 = try(local.iter_295.code_ptr >= length(var.code), true)

  curr_296 = local.end_of_code_296 ? null : {
    code = substr(var.code, local.iter_295.code_ptr, 1)
    input = substr(var.code, local.iter_295.code_ptr, 1) == "," ? substr(local.iter_295.input, 0, 1) : null
  }

  iter_296 = local.end_of_code_296 ? local.iter_295 : {
    input = (local.curr_296.code == ","
      ? substr(local.iter_295.input, 1, -1)
      : local.iter_295.input)

    output = (local.curr_296.code == "."
      ? "${local.iter_295.output}${jsondecode(format("\"\\u%04x\"", local.iter_295.tape[local.iter_295.tape_ptr]))}"
      : local.iter_295.output)
    
    tape = (
      local.curr_296.code == "+"
        ? [for i, b in local.iter_295.tape : (i == local.iter_295.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_296.code == "-"
        ? [for i, b in local.iter_295.tape : (i == local.iter_295.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_296.code == ","
        ? [for i, b in local.iter_295.tape : (i == local.iter_295.tape_ptr ? local.ascii_lookup[local.curr_296.input] : b)]
        : local.iter_295.tape)

    tape_ptr = (
      local.curr_296.code == "<"
        ? local.iter_295.tape_ptr == 0 ? length(local.iter_295.tape) - 1 : local.iter_295.tape_ptr - 1 :
      local.curr_296.code == ">"
        ? local.iter_295.tape_ptr == length(local.iter_295.tape) - 1 ? 0 : local.iter_295.tape_ptr + 1
        : local.iter_295.tape_ptr)

    code_ptr = 1 + (
      local.curr_296.code == "["
        ? local.iter_295.tape[local.iter_295.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_295.code_ptr)] : local.iter_295.code_ptr :
      local.curr_296.code == "]"
        ? local.iter_295.tape[local.iter_295.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_295.code_ptr)] : local.iter_295.code_ptr
        : local.iter_295.code_ptr)

    steps_taken = 1 + local.iter_295.steps_taken
  }
}

locals {
  end_of_code_297 = try(local.iter_296.code_ptr >= length(var.code), true)

  curr_297 = local.end_of_code_297 ? null : {
    code = substr(var.code, local.iter_296.code_ptr, 1)
    input = substr(var.code, local.iter_296.code_ptr, 1) == "," ? substr(local.iter_296.input, 0, 1) : null
  }

  iter_297 = local.end_of_code_297 ? local.iter_296 : {
    input = (local.curr_297.code == ","
      ? substr(local.iter_296.input, 1, -1)
      : local.iter_296.input)

    output = (local.curr_297.code == "."
      ? "${local.iter_296.output}${jsondecode(format("\"\\u%04x\"", local.iter_296.tape[local.iter_296.tape_ptr]))}"
      : local.iter_296.output)
    
    tape = (
      local.curr_297.code == "+"
        ? [for i, b in local.iter_296.tape : (i == local.iter_296.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_297.code == "-"
        ? [for i, b in local.iter_296.tape : (i == local.iter_296.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_297.code == ","
        ? [for i, b in local.iter_296.tape : (i == local.iter_296.tape_ptr ? local.ascii_lookup[local.curr_297.input] : b)]
        : local.iter_296.tape)

    tape_ptr = (
      local.curr_297.code == "<"
        ? local.iter_296.tape_ptr == 0 ? length(local.iter_296.tape) - 1 : local.iter_296.tape_ptr - 1 :
      local.curr_297.code == ">"
        ? local.iter_296.tape_ptr == length(local.iter_296.tape) - 1 ? 0 : local.iter_296.tape_ptr + 1
        : local.iter_296.tape_ptr)

    code_ptr = 1 + (
      local.curr_297.code == "["
        ? local.iter_296.tape[local.iter_296.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_296.code_ptr)] : local.iter_296.code_ptr :
      local.curr_297.code == "]"
        ? local.iter_296.tape[local.iter_296.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_296.code_ptr)] : local.iter_296.code_ptr
        : local.iter_296.code_ptr)

    steps_taken = 1 + local.iter_296.steps_taken
  }
}

locals {
  end_of_code_298 = try(local.iter_297.code_ptr >= length(var.code), true)

  curr_298 = local.end_of_code_298 ? null : {
    code = substr(var.code, local.iter_297.code_ptr, 1)
    input = substr(var.code, local.iter_297.code_ptr, 1) == "," ? substr(local.iter_297.input, 0, 1) : null
  }

  iter_298 = local.end_of_code_298 ? local.iter_297 : {
    input = (local.curr_298.code == ","
      ? substr(local.iter_297.input, 1, -1)
      : local.iter_297.input)

    output = (local.curr_298.code == "."
      ? "${local.iter_297.output}${jsondecode(format("\"\\u%04x\"", local.iter_297.tape[local.iter_297.tape_ptr]))}"
      : local.iter_297.output)
    
    tape = (
      local.curr_298.code == "+"
        ? [for i, b in local.iter_297.tape : (i == local.iter_297.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_298.code == "-"
        ? [for i, b in local.iter_297.tape : (i == local.iter_297.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_298.code == ","
        ? [for i, b in local.iter_297.tape : (i == local.iter_297.tape_ptr ? local.ascii_lookup[local.curr_298.input] : b)]
        : local.iter_297.tape)

    tape_ptr = (
      local.curr_298.code == "<"
        ? local.iter_297.tape_ptr == 0 ? length(local.iter_297.tape) - 1 : local.iter_297.tape_ptr - 1 :
      local.curr_298.code == ">"
        ? local.iter_297.tape_ptr == length(local.iter_297.tape) - 1 ? 0 : local.iter_297.tape_ptr + 1
        : local.iter_297.tape_ptr)

    code_ptr = 1 + (
      local.curr_298.code == "["
        ? local.iter_297.tape[local.iter_297.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_297.code_ptr)] : local.iter_297.code_ptr :
      local.curr_298.code == "]"
        ? local.iter_297.tape[local.iter_297.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_297.code_ptr)] : local.iter_297.code_ptr
        : local.iter_297.code_ptr)

    steps_taken = 1 + local.iter_297.steps_taken
  }
}

locals {
  end_of_code_299 = try(local.iter_298.code_ptr >= length(var.code), true)

  curr_299 = local.end_of_code_299 ? null : {
    code = substr(var.code, local.iter_298.code_ptr, 1)
    input = substr(var.code, local.iter_298.code_ptr, 1) == "," ? substr(local.iter_298.input, 0, 1) : null
  }

  iter_299 = local.end_of_code_299 ? local.iter_298 : {
    input = (local.curr_299.code == ","
      ? substr(local.iter_298.input, 1, -1)
      : local.iter_298.input)

    output = (local.curr_299.code == "."
      ? "${local.iter_298.output}${jsondecode(format("\"\\u%04x\"", local.iter_298.tape[local.iter_298.tape_ptr]))}"
      : local.iter_298.output)
    
    tape = (
      local.curr_299.code == "+"
        ? [for i, b in local.iter_298.tape : (i == local.iter_298.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_299.code == "-"
        ? [for i, b in local.iter_298.tape : (i == local.iter_298.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_299.code == ","
        ? [for i, b in local.iter_298.tape : (i == local.iter_298.tape_ptr ? local.ascii_lookup[local.curr_299.input] : b)]
        : local.iter_298.tape)

    tape_ptr = (
      local.curr_299.code == "<"
        ? local.iter_298.tape_ptr == 0 ? length(local.iter_298.tape) - 1 : local.iter_298.tape_ptr - 1 :
      local.curr_299.code == ">"
        ? local.iter_298.tape_ptr == length(local.iter_298.tape) - 1 ? 0 : local.iter_298.tape_ptr + 1
        : local.iter_298.tape_ptr)

    code_ptr = 1 + (
      local.curr_299.code == "["
        ? local.iter_298.tape[local.iter_298.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_298.code_ptr)] : local.iter_298.code_ptr :
      local.curr_299.code == "]"
        ? local.iter_298.tape[local.iter_298.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_298.code_ptr)] : local.iter_298.code_ptr
        : local.iter_298.code_ptr)

    steps_taken = 1 + local.iter_298.steps_taken
  }
}

locals {
  end_of_code_300 = try(local.iter_299.code_ptr >= length(var.code), true)

  curr_300 = local.end_of_code_300 ? null : {
    code = substr(var.code, local.iter_299.code_ptr, 1)
    input = substr(var.code, local.iter_299.code_ptr, 1) == "," ? substr(local.iter_299.input, 0, 1) : null
  }

  iter_300 = local.end_of_code_300 ? local.iter_299 : {
    input = (local.curr_300.code == ","
      ? substr(local.iter_299.input, 1, -1)
      : local.iter_299.input)

    output = (local.curr_300.code == "."
      ? "${local.iter_299.output}${jsondecode(format("\"\\u%04x\"", local.iter_299.tape[local.iter_299.tape_ptr]))}"
      : local.iter_299.output)
    
    tape = (
      local.curr_300.code == "+"
        ? [for i, b in local.iter_299.tape : (i == local.iter_299.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_300.code == "-"
        ? [for i, b in local.iter_299.tape : (i == local.iter_299.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_300.code == ","
        ? [for i, b in local.iter_299.tape : (i == local.iter_299.tape_ptr ? local.ascii_lookup[local.curr_300.input] : b)]
        : local.iter_299.tape)

    tape_ptr = (
      local.curr_300.code == "<"
        ? local.iter_299.tape_ptr == 0 ? length(local.iter_299.tape) - 1 : local.iter_299.tape_ptr - 1 :
      local.curr_300.code == ">"
        ? local.iter_299.tape_ptr == length(local.iter_299.tape) - 1 ? 0 : local.iter_299.tape_ptr + 1
        : local.iter_299.tape_ptr)

    code_ptr = 1 + (
      local.curr_300.code == "["
        ? local.iter_299.tape[local.iter_299.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_299.code_ptr)] : local.iter_299.code_ptr :
      local.curr_300.code == "]"
        ? local.iter_299.tape[local.iter_299.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_299.code_ptr)] : local.iter_299.code_ptr
        : local.iter_299.code_ptr)

    steps_taken = 1 + local.iter_299.steps_taken
  }
}

locals {
  end_of_code_301 = try(local.iter_300.code_ptr >= length(var.code), true)

  curr_301 = local.end_of_code_301 ? null : {
    code = substr(var.code, local.iter_300.code_ptr, 1)
    input = substr(var.code, local.iter_300.code_ptr, 1) == "," ? substr(local.iter_300.input, 0, 1) : null
  }

  iter_301 = local.end_of_code_301 ? local.iter_300 : {
    input = (local.curr_301.code == ","
      ? substr(local.iter_300.input, 1, -1)
      : local.iter_300.input)

    output = (local.curr_301.code == "."
      ? "${local.iter_300.output}${jsondecode(format("\"\\u%04x\"", local.iter_300.tape[local.iter_300.tape_ptr]))}"
      : local.iter_300.output)
    
    tape = (
      local.curr_301.code == "+"
        ? [for i, b in local.iter_300.tape : (i == local.iter_300.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_301.code == "-"
        ? [for i, b in local.iter_300.tape : (i == local.iter_300.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_301.code == ","
        ? [for i, b in local.iter_300.tape : (i == local.iter_300.tape_ptr ? local.ascii_lookup[local.curr_301.input] : b)]
        : local.iter_300.tape)

    tape_ptr = (
      local.curr_301.code == "<"
        ? local.iter_300.tape_ptr == 0 ? length(local.iter_300.tape) - 1 : local.iter_300.tape_ptr - 1 :
      local.curr_301.code == ">"
        ? local.iter_300.tape_ptr == length(local.iter_300.tape) - 1 ? 0 : local.iter_300.tape_ptr + 1
        : local.iter_300.tape_ptr)

    code_ptr = 1 + (
      local.curr_301.code == "["
        ? local.iter_300.tape[local.iter_300.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_300.code_ptr)] : local.iter_300.code_ptr :
      local.curr_301.code == "]"
        ? local.iter_300.tape[local.iter_300.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_300.code_ptr)] : local.iter_300.code_ptr
        : local.iter_300.code_ptr)

    steps_taken = 1 + local.iter_300.steps_taken
  }
}

locals {
  end_of_code_302 = try(local.iter_301.code_ptr >= length(var.code), true)

  curr_302 = local.end_of_code_302 ? null : {
    code = substr(var.code, local.iter_301.code_ptr, 1)
    input = substr(var.code, local.iter_301.code_ptr, 1) == "," ? substr(local.iter_301.input, 0, 1) : null
  }

  iter_302 = local.end_of_code_302 ? local.iter_301 : {
    input = (local.curr_302.code == ","
      ? substr(local.iter_301.input, 1, -1)
      : local.iter_301.input)

    output = (local.curr_302.code == "."
      ? "${local.iter_301.output}${jsondecode(format("\"\\u%04x\"", local.iter_301.tape[local.iter_301.tape_ptr]))}"
      : local.iter_301.output)
    
    tape = (
      local.curr_302.code == "+"
        ? [for i, b in local.iter_301.tape : (i == local.iter_301.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_302.code == "-"
        ? [for i, b in local.iter_301.tape : (i == local.iter_301.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_302.code == ","
        ? [for i, b in local.iter_301.tape : (i == local.iter_301.tape_ptr ? local.ascii_lookup[local.curr_302.input] : b)]
        : local.iter_301.tape)

    tape_ptr = (
      local.curr_302.code == "<"
        ? local.iter_301.tape_ptr == 0 ? length(local.iter_301.tape) - 1 : local.iter_301.tape_ptr - 1 :
      local.curr_302.code == ">"
        ? local.iter_301.tape_ptr == length(local.iter_301.tape) - 1 ? 0 : local.iter_301.tape_ptr + 1
        : local.iter_301.tape_ptr)

    code_ptr = 1 + (
      local.curr_302.code == "["
        ? local.iter_301.tape[local.iter_301.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_301.code_ptr)] : local.iter_301.code_ptr :
      local.curr_302.code == "]"
        ? local.iter_301.tape[local.iter_301.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_301.code_ptr)] : local.iter_301.code_ptr
        : local.iter_301.code_ptr)

    steps_taken = 1 + local.iter_301.steps_taken
  }
}

locals {
  end_of_code_303 = try(local.iter_302.code_ptr >= length(var.code), true)

  curr_303 = local.end_of_code_303 ? null : {
    code = substr(var.code, local.iter_302.code_ptr, 1)
    input = substr(var.code, local.iter_302.code_ptr, 1) == "," ? substr(local.iter_302.input, 0, 1) : null
  }

  iter_303 = local.end_of_code_303 ? local.iter_302 : {
    input = (local.curr_303.code == ","
      ? substr(local.iter_302.input, 1, -1)
      : local.iter_302.input)

    output = (local.curr_303.code == "."
      ? "${local.iter_302.output}${jsondecode(format("\"\\u%04x\"", local.iter_302.tape[local.iter_302.tape_ptr]))}"
      : local.iter_302.output)
    
    tape = (
      local.curr_303.code == "+"
        ? [for i, b in local.iter_302.tape : (i == local.iter_302.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_303.code == "-"
        ? [for i, b in local.iter_302.tape : (i == local.iter_302.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_303.code == ","
        ? [for i, b in local.iter_302.tape : (i == local.iter_302.tape_ptr ? local.ascii_lookup[local.curr_303.input] : b)]
        : local.iter_302.tape)

    tape_ptr = (
      local.curr_303.code == "<"
        ? local.iter_302.tape_ptr == 0 ? length(local.iter_302.tape) - 1 : local.iter_302.tape_ptr - 1 :
      local.curr_303.code == ">"
        ? local.iter_302.tape_ptr == length(local.iter_302.tape) - 1 ? 0 : local.iter_302.tape_ptr + 1
        : local.iter_302.tape_ptr)

    code_ptr = 1 + (
      local.curr_303.code == "["
        ? local.iter_302.tape[local.iter_302.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_302.code_ptr)] : local.iter_302.code_ptr :
      local.curr_303.code == "]"
        ? local.iter_302.tape[local.iter_302.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_302.code_ptr)] : local.iter_302.code_ptr
        : local.iter_302.code_ptr)

    steps_taken = 1 + local.iter_302.steps_taken
  }
}

locals {
  end_of_code_304 = try(local.iter_303.code_ptr >= length(var.code), true)

  curr_304 = local.end_of_code_304 ? null : {
    code = substr(var.code, local.iter_303.code_ptr, 1)
    input = substr(var.code, local.iter_303.code_ptr, 1) == "," ? substr(local.iter_303.input, 0, 1) : null
  }

  iter_304 = local.end_of_code_304 ? local.iter_303 : {
    input = (local.curr_304.code == ","
      ? substr(local.iter_303.input, 1, -1)
      : local.iter_303.input)

    output = (local.curr_304.code == "."
      ? "${local.iter_303.output}${jsondecode(format("\"\\u%04x\"", local.iter_303.tape[local.iter_303.tape_ptr]))}"
      : local.iter_303.output)
    
    tape = (
      local.curr_304.code == "+"
        ? [for i, b in local.iter_303.tape : (i == local.iter_303.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_304.code == "-"
        ? [for i, b in local.iter_303.tape : (i == local.iter_303.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_304.code == ","
        ? [for i, b in local.iter_303.tape : (i == local.iter_303.tape_ptr ? local.ascii_lookup[local.curr_304.input] : b)]
        : local.iter_303.tape)

    tape_ptr = (
      local.curr_304.code == "<"
        ? local.iter_303.tape_ptr == 0 ? length(local.iter_303.tape) - 1 : local.iter_303.tape_ptr - 1 :
      local.curr_304.code == ">"
        ? local.iter_303.tape_ptr == length(local.iter_303.tape) - 1 ? 0 : local.iter_303.tape_ptr + 1
        : local.iter_303.tape_ptr)

    code_ptr = 1 + (
      local.curr_304.code == "["
        ? local.iter_303.tape[local.iter_303.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_303.code_ptr)] : local.iter_303.code_ptr :
      local.curr_304.code == "]"
        ? local.iter_303.tape[local.iter_303.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_303.code_ptr)] : local.iter_303.code_ptr
        : local.iter_303.code_ptr)

    steps_taken = 1 + local.iter_303.steps_taken
  }
}

locals {
  end_of_code_305 = try(local.iter_304.code_ptr >= length(var.code), true)

  curr_305 = local.end_of_code_305 ? null : {
    code = substr(var.code, local.iter_304.code_ptr, 1)
    input = substr(var.code, local.iter_304.code_ptr, 1) == "," ? substr(local.iter_304.input, 0, 1) : null
  }

  iter_305 = local.end_of_code_305 ? local.iter_304 : {
    input = (local.curr_305.code == ","
      ? substr(local.iter_304.input, 1, -1)
      : local.iter_304.input)

    output = (local.curr_305.code == "."
      ? "${local.iter_304.output}${jsondecode(format("\"\\u%04x\"", local.iter_304.tape[local.iter_304.tape_ptr]))}"
      : local.iter_304.output)
    
    tape = (
      local.curr_305.code == "+"
        ? [for i, b in local.iter_304.tape : (i == local.iter_304.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_305.code == "-"
        ? [for i, b in local.iter_304.tape : (i == local.iter_304.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_305.code == ","
        ? [for i, b in local.iter_304.tape : (i == local.iter_304.tape_ptr ? local.ascii_lookup[local.curr_305.input] : b)]
        : local.iter_304.tape)

    tape_ptr = (
      local.curr_305.code == "<"
        ? local.iter_304.tape_ptr == 0 ? length(local.iter_304.tape) - 1 : local.iter_304.tape_ptr - 1 :
      local.curr_305.code == ">"
        ? local.iter_304.tape_ptr == length(local.iter_304.tape) - 1 ? 0 : local.iter_304.tape_ptr + 1
        : local.iter_304.tape_ptr)

    code_ptr = 1 + (
      local.curr_305.code == "["
        ? local.iter_304.tape[local.iter_304.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_304.code_ptr)] : local.iter_304.code_ptr :
      local.curr_305.code == "]"
        ? local.iter_304.tape[local.iter_304.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_304.code_ptr)] : local.iter_304.code_ptr
        : local.iter_304.code_ptr)

    steps_taken = 1 + local.iter_304.steps_taken
  }
}

locals {
  end_of_code_306 = try(local.iter_305.code_ptr >= length(var.code), true)

  curr_306 = local.end_of_code_306 ? null : {
    code = substr(var.code, local.iter_305.code_ptr, 1)
    input = substr(var.code, local.iter_305.code_ptr, 1) == "," ? substr(local.iter_305.input, 0, 1) : null
  }

  iter_306 = local.end_of_code_306 ? local.iter_305 : {
    input = (local.curr_306.code == ","
      ? substr(local.iter_305.input, 1, -1)
      : local.iter_305.input)

    output = (local.curr_306.code == "."
      ? "${local.iter_305.output}${jsondecode(format("\"\\u%04x\"", local.iter_305.tape[local.iter_305.tape_ptr]))}"
      : local.iter_305.output)
    
    tape = (
      local.curr_306.code == "+"
        ? [for i, b in local.iter_305.tape : (i == local.iter_305.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_306.code == "-"
        ? [for i, b in local.iter_305.tape : (i == local.iter_305.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_306.code == ","
        ? [for i, b in local.iter_305.tape : (i == local.iter_305.tape_ptr ? local.ascii_lookup[local.curr_306.input] : b)]
        : local.iter_305.tape)

    tape_ptr = (
      local.curr_306.code == "<"
        ? local.iter_305.tape_ptr == 0 ? length(local.iter_305.tape) - 1 : local.iter_305.tape_ptr - 1 :
      local.curr_306.code == ">"
        ? local.iter_305.tape_ptr == length(local.iter_305.tape) - 1 ? 0 : local.iter_305.tape_ptr + 1
        : local.iter_305.tape_ptr)

    code_ptr = 1 + (
      local.curr_306.code == "["
        ? local.iter_305.tape[local.iter_305.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_305.code_ptr)] : local.iter_305.code_ptr :
      local.curr_306.code == "]"
        ? local.iter_305.tape[local.iter_305.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_305.code_ptr)] : local.iter_305.code_ptr
        : local.iter_305.code_ptr)

    steps_taken = 1 + local.iter_305.steps_taken
  }
}

locals {
  end_of_code_307 = try(local.iter_306.code_ptr >= length(var.code), true)

  curr_307 = local.end_of_code_307 ? null : {
    code = substr(var.code, local.iter_306.code_ptr, 1)
    input = substr(var.code, local.iter_306.code_ptr, 1) == "," ? substr(local.iter_306.input, 0, 1) : null
  }

  iter_307 = local.end_of_code_307 ? local.iter_306 : {
    input = (local.curr_307.code == ","
      ? substr(local.iter_306.input, 1, -1)
      : local.iter_306.input)

    output = (local.curr_307.code == "."
      ? "${local.iter_306.output}${jsondecode(format("\"\\u%04x\"", local.iter_306.tape[local.iter_306.tape_ptr]))}"
      : local.iter_306.output)
    
    tape = (
      local.curr_307.code == "+"
        ? [for i, b in local.iter_306.tape : (i == local.iter_306.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_307.code == "-"
        ? [for i, b in local.iter_306.tape : (i == local.iter_306.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_307.code == ","
        ? [for i, b in local.iter_306.tape : (i == local.iter_306.tape_ptr ? local.ascii_lookup[local.curr_307.input] : b)]
        : local.iter_306.tape)

    tape_ptr = (
      local.curr_307.code == "<"
        ? local.iter_306.tape_ptr == 0 ? length(local.iter_306.tape) - 1 : local.iter_306.tape_ptr - 1 :
      local.curr_307.code == ">"
        ? local.iter_306.tape_ptr == length(local.iter_306.tape) - 1 ? 0 : local.iter_306.tape_ptr + 1
        : local.iter_306.tape_ptr)

    code_ptr = 1 + (
      local.curr_307.code == "["
        ? local.iter_306.tape[local.iter_306.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_306.code_ptr)] : local.iter_306.code_ptr :
      local.curr_307.code == "]"
        ? local.iter_306.tape[local.iter_306.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_306.code_ptr)] : local.iter_306.code_ptr
        : local.iter_306.code_ptr)

    steps_taken = 1 + local.iter_306.steps_taken
  }
}

locals {
  end_of_code_308 = try(local.iter_307.code_ptr >= length(var.code), true)

  curr_308 = local.end_of_code_308 ? null : {
    code = substr(var.code, local.iter_307.code_ptr, 1)
    input = substr(var.code, local.iter_307.code_ptr, 1) == "," ? substr(local.iter_307.input, 0, 1) : null
  }

  iter_308 = local.end_of_code_308 ? local.iter_307 : {
    input = (local.curr_308.code == ","
      ? substr(local.iter_307.input, 1, -1)
      : local.iter_307.input)

    output = (local.curr_308.code == "."
      ? "${local.iter_307.output}${jsondecode(format("\"\\u%04x\"", local.iter_307.tape[local.iter_307.tape_ptr]))}"
      : local.iter_307.output)
    
    tape = (
      local.curr_308.code == "+"
        ? [for i, b in local.iter_307.tape : (i == local.iter_307.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_308.code == "-"
        ? [for i, b in local.iter_307.tape : (i == local.iter_307.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_308.code == ","
        ? [for i, b in local.iter_307.tape : (i == local.iter_307.tape_ptr ? local.ascii_lookup[local.curr_308.input] : b)]
        : local.iter_307.tape)

    tape_ptr = (
      local.curr_308.code == "<"
        ? local.iter_307.tape_ptr == 0 ? length(local.iter_307.tape) - 1 : local.iter_307.tape_ptr - 1 :
      local.curr_308.code == ">"
        ? local.iter_307.tape_ptr == length(local.iter_307.tape) - 1 ? 0 : local.iter_307.tape_ptr + 1
        : local.iter_307.tape_ptr)

    code_ptr = 1 + (
      local.curr_308.code == "["
        ? local.iter_307.tape[local.iter_307.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_307.code_ptr)] : local.iter_307.code_ptr :
      local.curr_308.code == "]"
        ? local.iter_307.tape[local.iter_307.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_307.code_ptr)] : local.iter_307.code_ptr
        : local.iter_307.code_ptr)

    steps_taken = 1 + local.iter_307.steps_taken
  }
}

locals {
  end_of_code_309 = try(local.iter_308.code_ptr >= length(var.code), true)

  curr_309 = local.end_of_code_309 ? null : {
    code = substr(var.code, local.iter_308.code_ptr, 1)
    input = substr(var.code, local.iter_308.code_ptr, 1) == "," ? substr(local.iter_308.input, 0, 1) : null
  }

  iter_309 = local.end_of_code_309 ? local.iter_308 : {
    input = (local.curr_309.code == ","
      ? substr(local.iter_308.input, 1, -1)
      : local.iter_308.input)

    output = (local.curr_309.code == "."
      ? "${local.iter_308.output}${jsondecode(format("\"\\u%04x\"", local.iter_308.tape[local.iter_308.tape_ptr]))}"
      : local.iter_308.output)
    
    tape = (
      local.curr_309.code == "+"
        ? [for i, b in local.iter_308.tape : (i == local.iter_308.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_309.code == "-"
        ? [for i, b in local.iter_308.tape : (i == local.iter_308.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_309.code == ","
        ? [for i, b in local.iter_308.tape : (i == local.iter_308.tape_ptr ? local.ascii_lookup[local.curr_309.input] : b)]
        : local.iter_308.tape)

    tape_ptr = (
      local.curr_309.code == "<"
        ? local.iter_308.tape_ptr == 0 ? length(local.iter_308.tape) - 1 : local.iter_308.tape_ptr - 1 :
      local.curr_309.code == ">"
        ? local.iter_308.tape_ptr == length(local.iter_308.tape) - 1 ? 0 : local.iter_308.tape_ptr + 1
        : local.iter_308.tape_ptr)

    code_ptr = 1 + (
      local.curr_309.code == "["
        ? local.iter_308.tape[local.iter_308.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_308.code_ptr)] : local.iter_308.code_ptr :
      local.curr_309.code == "]"
        ? local.iter_308.tape[local.iter_308.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_308.code_ptr)] : local.iter_308.code_ptr
        : local.iter_308.code_ptr)

    steps_taken = 1 + local.iter_308.steps_taken
  }
}

locals {
  end_of_code_310 = try(local.iter_309.code_ptr >= length(var.code), true)

  curr_310 = local.end_of_code_310 ? null : {
    code = substr(var.code, local.iter_309.code_ptr, 1)
    input = substr(var.code, local.iter_309.code_ptr, 1) == "," ? substr(local.iter_309.input, 0, 1) : null
  }

  iter_310 = local.end_of_code_310 ? local.iter_309 : {
    input = (local.curr_310.code == ","
      ? substr(local.iter_309.input, 1, -1)
      : local.iter_309.input)

    output = (local.curr_310.code == "."
      ? "${local.iter_309.output}${jsondecode(format("\"\\u%04x\"", local.iter_309.tape[local.iter_309.tape_ptr]))}"
      : local.iter_309.output)
    
    tape = (
      local.curr_310.code == "+"
        ? [for i, b in local.iter_309.tape : (i == local.iter_309.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_310.code == "-"
        ? [for i, b in local.iter_309.tape : (i == local.iter_309.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_310.code == ","
        ? [for i, b in local.iter_309.tape : (i == local.iter_309.tape_ptr ? local.ascii_lookup[local.curr_310.input] : b)]
        : local.iter_309.tape)

    tape_ptr = (
      local.curr_310.code == "<"
        ? local.iter_309.tape_ptr == 0 ? length(local.iter_309.tape) - 1 : local.iter_309.tape_ptr - 1 :
      local.curr_310.code == ">"
        ? local.iter_309.tape_ptr == length(local.iter_309.tape) - 1 ? 0 : local.iter_309.tape_ptr + 1
        : local.iter_309.tape_ptr)

    code_ptr = 1 + (
      local.curr_310.code == "["
        ? local.iter_309.tape[local.iter_309.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_309.code_ptr)] : local.iter_309.code_ptr :
      local.curr_310.code == "]"
        ? local.iter_309.tape[local.iter_309.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_309.code_ptr)] : local.iter_309.code_ptr
        : local.iter_309.code_ptr)

    steps_taken = 1 + local.iter_309.steps_taken
  }
}

locals {
  end_of_code_311 = try(local.iter_310.code_ptr >= length(var.code), true)

  curr_311 = local.end_of_code_311 ? null : {
    code = substr(var.code, local.iter_310.code_ptr, 1)
    input = substr(var.code, local.iter_310.code_ptr, 1) == "," ? substr(local.iter_310.input, 0, 1) : null
  }

  iter_311 = local.end_of_code_311 ? local.iter_310 : {
    input = (local.curr_311.code == ","
      ? substr(local.iter_310.input, 1, -1)
      : local.iter_310.input)

    output = (local.curr_311.code == "."
      ? "${local.iter_310.output}${jsondecode(format("\"\\u%04x\"", local.iter_310.tape[local.iter_310.tape_ptr]))}"
      : local.iter_310.output)
    
    tape = (
      local.curr_311.code == "+"
        ? [for i, b in local.iter_310.tape : (i == local.iter_310.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_311.code == "-"
        ? [for i, b in local.iter_310.tape : (i == local.iter_310.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_311.code == ","
        ? [for i, b in local.iter_310.tape : (i == local.iter_310.tape_ptr ? local.ascii_lookup[local.curr_311.input] : b)]
        : local.iter_310.tape)

    tape_ptr = (
      local.curr_311.code == "<"
        ? local.iter_310.tape_ptr == 0 ? length(local.iter_310.tape) - 1 : local.iter_310.tape_ptr - 1 :
      local.curr_311.code == ">"
        ? local.iter_310.tape_ptr == length(local.iter_310.tape) - 1 ? 0 : local.iter_310.tape_ptr + 1
        : local.iter_310.tape_ptr)

    code_ptr = 1 + (
      local.curr_311.code == "["
        ? local.iter_310.tape[local.iter_310.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_310.code_ptr)] : local.iter_310.code_ptr :
      local.curr_311.code == "]"
        ? local.iter_310.tape[local.iter_310.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_310.code_ptr)] : local.iter_310.code_ptr
        : local.iter_310.code_ptr)

    steps_taken = 1 + local.iter_310.steps_taken
  }
}

locals {
  end_of_code_312 = try(local.iter_311.code_ptr >= length(var.code), true)

  curr_312 = local.end_of_code_312 ? null : {
    code = substr(var.code, local.iter_311.code_ptr, 1)
    input = substr(var.code, local.iter_311.code_ptr, 1) == "," ? substr(local.iter_311.input, 0, 1) : null
  }

  iter_312 = local.end_of_code_312 ? local.iter_311 : {
    input = (local.curr_312.code == ","
      ? substr(local.iter_311.input, 1, -1)
      : local.iter_311.input)

    output = (local.curr_312.code == "."
      ? "${local.iter_311.output}${jsondecode(format("\"\\u%04x\"", local.iter_311.tape[local.iter_311.tape_ptr]))}"
      : local.iter_311.output)
    
    tape = (
      local.curr_312.code == "+"
        ? [for i, b in local.iter_311.tape : (i == local.iter_311.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_312.code == "-"
        ? [for i, b in local.iter_311.tape : (i == local.iter_311.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_312.code == ","
        ? [for i, b in local.iter_311.tape : (i == local.iter_311.tape_ptr ? local.ascii_lookup[local.curr_312.input] : b)]
        : local.iter_311.tape)

    tape_ptr = (
      local.curr_312.code == "<"
        ? local.iter_311.tape_ptr == 0 ? length(local.iter_311.tape) - 1 : local.iter_311.tape_ptr - 1 :
      local.curr_312.code == ">"
        ? local.iter_311.tape_ptr == length(local.iter_311.tape) - 1 ? 0 : local.iter_311.tape_ptr + 1
        : local.iter_311.tape_ptr)

    code_ptr = 1 + (
      local.curr_312.code == "["
        ? local.iter_311.tape[local.iter_311.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_311.code_ptr)] : local.iter_311.code_ptr :
      local.curr_312.code == "]"
        ? local.iter_311.tape[local.iter_311.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_311.code_ptr)] : local.iter_311.code_ptr
        : local.iter_311.code_ptr)

    steps_taken = 1 + local.iter_311.steps_taken
  }
}

locals {
  end_of_code_313 = try(local.iter_312.code_ptr >= length(var.code), true)

  curr_313 = local.end_of_code_313 ? null : {
    code = substr(var.code, local.iter_312.code_ptr, 1)
    input = substr(var.code, local.iter_312.code_ptr, 1) == "," ? substr(local.iter_312.input, 0, 1) : null
  }

  iter_313 = local.end_of_code_313 ? local.iter_312 : {
    input = (local.curr_313.code == ","
      ? substr(local.iter_312.input, 1, -1)
      : local.iter_312.input)

    output = (local.curr_313.code == "."
      ? "${local.iter_312.output}${jsondecode(format("\"\\u%04x\"", local.iter_312.tape[local.iter_312.tape_ptr]))}"
      : local.iter_312.output)
    
    tape = (
      local.curr_313.code == "+"
        ? [for i, b in local.iter_312.tape : (i == local.iter_312.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_313.code == "-"
        ? [for i, b in local.iter_312.tape : (i == local.iter_312.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_313.code == ","
        ? [for i, b in local.iter_312.tape : (i == local.iter_312.tape_ptr ? local.ascii_lookup[local.curr_313.input] : b)]
        : local.iter_312.tape)

    tape_ptr = (
      local.curr_313.code == "<"
        ? local.iter_312.tape_ptr == 0 ? length(local.iter_312.tape) - 1 : local.iter_312.tape_ptr - 1 :
      local.curr_313.code == ">"
        ? local.iter_312.tape_ptr == length(local.iter_312.tape) - 1 ? 0 : local.iter_312.tape_ptr + 1
        : local.iter_312.tape_ptr)

    code_ptr = 1 + (
      local.curr_313.code == "["
        ? local.iter_312.tape[local.iter_312.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_312.code_ptr)] : local.iter_312.code_ptr :
      local.curr_313.code == "]"
        ? local.iter_312.tape[local.iter_312.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_312.code_ptr)] : local.iter_312.code_ptr
        : local.iter_312.code_ptr)

    steps_taken = 1 + local.iter_312.steps_taken
  }
}

locals {
  end_of_code_314 = try(local.iter_313.code_ptr >= length(var.code), true)

  curr_314 = local.end_of_code_314 ? null : {
    code = substr(var.code, local.iter_313.code_ptr, 1)
    input = substr(var.code, local.iter_313.code_ptr, 1) == "," ? substr(local.iter_313.input, 0, 1) : null
  }

  iter_314 = local.end_of_code_314 ? local.iter_313 : {
    input = (local.curr_314.code == ","
      ? substr(local.iter_313.input, 1, -1)
      : local.iter_313.input)

    output = (local.curr_314.code == "."
      ? "${local.iter_313.output}${jsondecode(format("\"\\u%04x\"", local.iter_313.tape[local.iter_313.tape_ptr]))}"
      : local.iter_313.output)
    
    tape = (
      local.curr_314.code == "+"
        ? [for i, b in local.iter_313.tape : (i == local.iter_313.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_314.code == "-"
        ? [for i, b in local.iter_313.tape : (i == local.iter_313.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_314.code == ","
        ? [for i, b in local.iter_313.tape : (i == local.iter_313.tape_ptr ? local.ascii_lookup[local.curr_314.input] : b)]
        : local.iter_313.tape)

    tape_ptr = (
      local.curr_314.code == "<"
        ? local.iter_313.tape_ptr == 0 ? length(local.iter_313.tape) - 1 : local.iter_313.tape_ptr - 1 :
      local.curr_314.code == ">"
        ? local.iter_313.tape_ptr == length(local.iter_313.tape) - 1 ? 0 : local.iter_313.tape_ptr + 1
        : local.iter_313.tape_ptr)

    code_ptr = 1 + (
      local.curr_314.code == "["
        ? local.iter_313.tape[local.iter_313.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_313.code_ptr)] : local.iter_313.code_ptr :
      local.curr_314.code == "]"
        ? local.iter_313.tape[local.iter_313.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_313.code_ptr)] : local.iter_313.code_ptr
        : local.iter_313.code_ptr)

    steps_taken = 1 + local.iter_313.steps_taken
  }
}

locals {
  end_of_code_315 = try(local.iter_314.code_ptr >= length(var.code), true)

  curr_315 = local.end_of_code_315 ? null : {
    code = substr(var.code, local.iter_314.code_ptr, 1)
    input = substr(var.code, local.iter_314.code_ptr, 1) == "," ? substr(local.iter_314.input, 0, 1) : null
  }

  iter_315 = local.end_of_code_315 ? local.iter_314 : {
    input = (local.curr_315.code == ","
      ? substr(local.iter_314.input, 1, -1)
      : local.iter_314.input)

    output = (local.curr_315.code == "."
      ? "${local.iter_314.output}${jsondecode(format("\"\\u%04x\"", local.iter_314.tape[local.iter_314.tape_ptr]))}"
      : local.iter_314.output)
    
    tape = (
      local.curr_315.code == "+"
        ? [for i, b in local.iter_314.tape : (i == local.iter_314.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_315.code == "-"
        ? [for i, b in local.iter_314.tape : (i == local.iter_314.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_315.code == ","
        ? [for i, b in local.iter_314.tape : (i == local.iter_314.tape_ptr ? local.ascii_lookup[local.curr_315.input] : b)]
        : local.iter_314.tape)

    tape_ptr = (
      local.curr_315.code == "<"
        ? local.iter_314.tape_ptr == 0 ? length(local.iter_314.tape) - 1 : local.iter_314.tape_ptr - 1 :
      local.curr_315.code == ">"
        ? local.iter_314.tape_ptr == length(local.iter_314.tape) - 1 ? 0 : local.iter_314.tape_ptr + 1
        : local.iter_314.tape_ptr)

    code_ptr = 1 + (
      local.curr_315.code == "["
        ? local.iter_314.tape[local.iter_314.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_314.code_ptr)] : local.iter_314.code_ptr :
      local.curr_315.code == "]"
        ? local.iter_314.tape[local.iter_314.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_314.code_ptr)] : local.iter_314.code_ptr
        : local.iter_314.code_ptr)

    steps_taken = 1 + local.iter_314.steps_taken
  }
}

locals {
  end_of_code_316 = try(local.iter_315.code_ptr >= length(var.code), true)

  curr_316 = local.end_of_code_316 ? null : {
    code = substr(var.code, local.iter_315.code_ptr, 1)
    input = substr(var.code, local.iter_315.code_ptr, 1) == "," ? substr(local.iter_315.input, 0, 1) : null
  }

  iter_316 = local.end_of_code_316 ? local.iter_315 : {
    input = (local.curr_316.code == ","
      ? substr(local.iter_315.input, 1, -1)
      : local.iter_315.input)

    output = (local.curr_316.code == "."
      ? "${local.iter_315.output}${jsondecode(format("\"\\u%04x\"", local.iter_315.tape[local.iter_315.tape_ptr]))}"
      : local.iter_315.output)
    
    tape = (
      local.curr_316.code == "+"
        ? [for i, b in local.iter_315.tape : (i == local.iter_315.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_316.code == "-"
        ? [for i, b in local.iter_315.tape : (i == local.iter_315.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_316.code == ","
        ? [for i, b in local.iter_315.tape : (i == local.iter_315.tape_ptr ? local.ascii_lookup[local.curr_316.input] : b)]
        : local.iter_315.tape)

    tape_ptr = (
      local.curr_316.code == "<"
        ? local.iter_315.tape_ptr == 0 ? length(local.iter_315.tape) - 1 : local.iter_315.tape_ptr - 1 :
      local.curr_316.code == ">"
        ? local.iter_315.tape_ptr == length(local.iter_315.tape) - 1 ? 0 : local.iter_315.tape_ptr + 1
        : local.iter_315.tape_ptr)

    code_ptr = 1 + (
      local.curr_316.code == "["
        ? local.iter_315.tape[local.iter_315.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_315.code_ptr)] : local.iter_315.code_ptr :
      local.curr_316.code == "]"
        ? local.iter_315.tape[local.iter_315.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_315.code_ptr)] : local.iter_315.code_ptr
        : local.iter_315.code_ptr)

    steps_taken = 1 + local.iter_315.steps_taken
  }
}

locals {
  end_of_code_317 = try(local.iter_316.code_ptr >= length(var.code), true)

  curr_317 = local.end_of_code_317 ? null : {
    code = substr(var.code, local.iter_316.code_ptr, 1)
    input = substr(var.code, local.iter_316.code_ptr, 1) == "," ? substr(local.iter_316.input, 0, 1) : null
  }

  iter_317 = local.end_of_code_317 ? local.iter_316 : {
    input = (local.curr_317.code == ","
      ? substr(local.iter_316.input, 1, -1)
      : local.iter_316.input)

    output = (local.curr_317.code == "."
      ? "${local.iter_316.output}${jsondecode(format("\"\\u%04x\"", local.iter_316.tape[local.iter_316.tape_ptr]))}"
      : local.iter_316.output)
    
    tape = (
      local.curr_317.code == "+"
        ? [for i, b in local.iter_316.tape : (i == local.iter_316.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_317.code == "-"
        ? [for i, b in local.iter_316.tape : (i == local.iter_316.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_317.code == ","
        ? [for i, b in local.iter_316.tape : (i == local.iter_316.tape_ptr ? local.ascii_lookup[local.curr_317.input] : b)]
        : local.iter_316.tape)

    tape_ptr = (
      local.curr_317.code == "<"
        ? local.iter_316.tape_ptr == 0 ? length(local.iter_316.tape) - 1 : local.iter_316.tape_ptr - 1 :
      local.curr_317.code == ">"
        ? local.iter_316.tape_ptr == length(local.iter_316.tape) - 1 ? 0 : local.iter_316.tape_ptr + 1
        : local.iter_316.tape_ptr)

    code_ptr = 1 + (
      local.curr_317.code == "["
        ? local.iter_316.tape[local.iter_316.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_316.code_ptr)] : local.iter_316.code_ptr :
      local.curr_317.code == "]"
        ? local.iter_316.tape[local.iter_316.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_316.code_ptr)] : local.iter_316.code_ptr
        : local.iter_316.code_ptr)

    steps_taken = 1 + local.iter_316.steps_taken
  }
}

locals {
  end_of_code_318 = try(local.iter_317.code_ptr >= length(var.code), true)

  curr_318 = local.end_of_code_318 ? null : {
    code = substr(var.code, local.iter_317.code_ptr, 1)
    input = substr(var.code, local.iter_317.code_ptr, 1) == "," ? substr(local.iter_317.input, 0, 1) : null
  }

  iter_318 = local.end_of_code_318 ? local.iter_317 : {
    input = (local.curr_318.code == ","
      ? substr(local.iter_317.input, 1, -1)
      : local.iter_317.input)

    output = (local.curr_318.code == "."
      ? "${local.iter_317.output}${jsondecode(format("\"\\u%04x\"", local.iter_317.tape[local.iter_317.tape_ptr]))}"
      : local.iter_317.output)
    
    tape = (
      local.curr_318.code == "+"
        ? [for i, b in local.iter_317.tape : (i == local.iter_317.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_318.code == "-"
        ? [for i, b in local.iter_317.tape : (i == local.iter_317.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_318.code == ","
        ? [for i, b in local.iter_317.tape : (i == local.iter_317.tape_ptr ? local.ascii_lookup[local.curr_318.input] : b)]
        : local.iter_317.tape)

    tape_ptr = (
      local.curr_318.code == "<"
        ? local.iter_317.tape_ptr == 0 ? length(local.iter_317.tape) - 1 : local.iter_317.tape_ptr - 1 :
      local.curr_318.code == ">"
        ? local.iter_317.tape_ptr == length(local.iter_317.tape) - 1 ? 0 : local.iter_317.tape_ptr + 1
        : local.iter_317.tape_ptr)

    code_ptr = 1 + (
      local.curr_318.code == "["
        ? local.iter_317.tape[local.iter_317.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_317.code_ptr)] : local.iter_317.code_ptr :
      local.curr_318.code == "]"
        ? local.iter_317.tape[local.iter_317.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_317.code_ptr)] : local.iter_317.code_ptr
        : local.iter_317.code_ptr)

    steps_taken = 1 + local.iter_317.steps_taken
  }
}

locals {
  end_of_code_319 = try(local.iter_318.code_ptr >= length(var.code), true)

  curr_319 = local.end_of_code_319 ? null : {
    code = substr(var.code, local.iter_318.code_ptr, 1)
    input = substr(var.code, local.iter_318.code_ptr, 1) == "," ? substr(local.iter_318.input, 0, 1) : null
  }

  iter_319 = local.end_of_code_319 ? local.iter_318 : {
    input = (local.curr_319.code == ","
      ? substr(local.iter_318.input, 1, -1)
      : local.iter_318.input)

    output = (local.curr_319.code == "."
      ? "${local.iter_318.output}${jsondecode(format("\"\\u%04x\"", local.iter_318.tape[local.iter_318.tape_ptr]))}"
      : local.iter_318.output)
    
    tape = (
      local.curr_319.code == "+"
        ? [for i, b in local.iter_318.tape : (i == local.iter_318.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_319.code == "-"
        ? [for i, b in local.iter_318.tape : (i == local.iter_318.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_319.code == ","
        ? [for i, b in local.iter_318.tape : (i == local.iter_318.tape_ptr ? local.ascii_lookup[local.curr_319.input] : b)]
        : local.iter_318.tape)

    tape_ptr = (
      local.curr_319.code == "<"
        ? local.iter_318.tape_ptr == 0 ? length(local.iter_318.tape) - 1 : local.iter_318.tape_ptr - 1 :
      local.curr_319.code == ">"
        ? local.iter_318.tape_ptr == length(local.iter_318.tape) - 1 ? 0 : local.iter_318.tape_ptr + 1
        : local.iter_318.tape_ptr)

    code_ptr = 1 + (
      local.curr_319.code == "["
        ? local.iter_318.tape[local.iter_318.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_318.code_ptr)] : local.iter_318.code_ptr :
      local.curr_319.code == "]"
        ? local.iter_318.tape[local.iter_318.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_318.code_ptr)] : local.iter_318.code_ptr
        : local.iter_318.code_ptr)

    steps_taken = 1 + local.iter_318.steps_taken
  }
}

locals {
  end_of_code_320 = try(local.iter_319.code_ptr >= length(var.code), true)

  curr_320 = local.end_of_code_320 ? null : {
    code = substr(var.code, local.iter_319.code_ptr, 1)
    input = substr(var.code, local.iter_319.code_ptr, 1) == "," ? substr(local.iter_319.input, 0, 1) : null
  }

  iter_320 = local.end_of_code_320 ? local.iter_319 : {
    input = (local.curr_320.code == ","
      ? substr(local.iter_319.input, 1, -1)
      : local.iter_319.input)

    output = (local.curr_320.code == "."
      ? "${local.iter_319.output}${jsondecode(format("\"\\u%04x\"", local.iter_319.tape[local.iter_319.tape_ptr]))}"
      : local.iter_319.output)
    
    tape = (
      local.curr_320.code == "+"
        ? [for i, b in local.iter_319.tape : (i == local.iter_319.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_320.code == "-"
        ? [for i, b in local.iter_319.tape : (i == local.iter_319.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_320.code == ","
        ? [for i, b in local.iter_319.tape : (i == local.iter_319.tape_ptr ? local.ascii_lookup[local.curr_320.input] : b)]
        : local.iter_319.tape)

    tape_ptr = (
      local.curr_320.code == "<"
        ? local.iter_319.tape_ptr == 0 ? length(local.iter_319.tape) - 1 : local.iter_319.tape_ptr - 1 :
      local.curr_320.code == ">"
        ? local.iter_319.tape_ptr == length(local.iter_319.tape) - 1 ? 0 : local.iter_319.tape_ptr + 1
        : local.iter_319.tape_ptr)

    code_ptr = 1 + (
      local.curr_320.code == "["
        ? local.iter_319.tape[local.iter_319.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_319.code_ptr)] : local.iter_319.code_ptr :
      local.curr_320.code == "]"
        ? local.iter_319.tape[local.iter_319.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_319.code_ptr)] : local.iter_319.code_ptr
        : local.iter_319.code_ptr)

    steps_taken = 1 + local.iter_319.steps_taken
  }
}

locals {
  end_of_code_321 = try(local.iter_320.code_ptr >= length(var.code), true)

  curr_321 = local.end_of_code_321 ? null : {
    code = substr(var.code, local.iter_320.code_ptr, 1)
    input = substr(var.code, local.iter_320.code_ptr, 1) == "," ? substr(local.iter_320.input, 0, 1) : null
  }

  iter_321 = local.end_of_code_321 ? local.iter_320 : {
    input = (local.curr_321.code == ","
      ? substr(local.iter_320.input, 1, -1)
      : local.iter_320.input)

    output = (local.curr_321.code == "."
      ? "${local.iter_320.output}${jsondecode(format("\"\\u%04x\"", local.iter_320.tape[local.iter_320.tape_ptr]))}"
      : local.iter_320.output)
    
    tape = (
      local.curr_321.code == "+"
        ? [for i, b in local.iter_320.tape : (i == local.iter_320.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_321.code == "-"
        ? [for i, b in local.iter_320.tape : (i == local.iter_320.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_321.code == ","
        ? [for i, b in local.iter_320.tape : (i == local.iter_320.tape_ptr ? local.ascii_lookup[local.curr_321.input] : b)]
        : local.iter_320.tape)

    tape_ptr = (
      local.curr_321.code == "<"
        ? local.iter_320.tape_ptr == 0 ? length(local.iter_320.tape) - 1 : local.iter_320.tape_ptr - 1 :
      local.curr_321.code == ">"
        ? local.iter_320.tape_ptr == length(local.iter_320.tape) - 1 ? 0 : local.iter_320.tape_ptr + 1
        : local.iter_320.tape_ptr)

    code_ptr = 1 + (
      local.curr_321.code == "["
        ? local.iter_320.tape[local.iter_320.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_320.code_ptr)] : local.iter_320.code_ptr :
      local.curr_321.code == "]"
        ? local.iter_320.tape[local.iter_320.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_320.code_ptr)] : local.iter_320.code_ptr
        : local.iter_320.code_ptr)

    steps_taken = 1 + local.iter_320.steps_taken
  }
}

locals {
  end_of_code_322 = try(local.iter_321.code_ptr >= length(var.code), true)

  curr_322 = local.end_of_code_322 ? null : {
    code = substr(var.code, local.iter_321.code_ptr, 1)
    input = substr(var.code, local.iter_321.code_ptr, 1) == "," ? substr(local.iter_321.input, 0, 1) : null
  }

  iter_322 = local.end_of_code_322 ? local.iter_321 : {
    input = (local.curr_322.code == ","
      ? substr(local.iter_321.input, 1, -1)
      : local.iter_321.input)

    output = (local.curr_322.code == "."
      ? "${local.iter_321.output}${jsondecode(format("\"\\u%04x\"", local.iter_321.tape[local.iter_321.tape_ptr]))}"
      : local.iter_321.output)
    
    tape = (
      local.curr_322.code == "+"
        ? [for i, b in local.iter_321.tape : (i == local.iter_321.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_322.code == "-"
        ? [for i, b in local.iter_321.tape : (i == local.iter_321.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_322.code == ","
        ? [for i, b in local.iter_321.tape : (i == local.iter_321.tape_ptr ? local.ascii_lookup[local.curr_322.input] : b)]
        : local.iter_321.tape)

    tape_ptr = (
      local.curr_322.code == "<"
        ? local.iter_321.tape_ptr == 0 ? length(local.iter_321.tape) - 1 : local.iter_321.tape_ptr - 1 :
      local.curr_322.code == ">"
        ? local.iter_321.tape_ptr == length(local.iter_321.tape) - 1 ? 0 : local.iter_321.tape_ptr + 1
        : local.iter_321.tape_ptr)

    code_ptr = 1 + (
      local.curr_322.code == "["
        ? local.iter_321.tape[local.iter_321.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_321.code_ptr)] : local.iter_321.code_ptr :
      local.curr_322.code == "]"
        ? local.iter_321.tape[local.iter_321.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_321.code_ptr)] : local.iter_321.code_ptr
        : local.iter_321.code_ptr)

    steps_taken = 1 + local.iter_321.steps_taken
  }
}

locals {
  end_of_code_323 = try(local.iter_322.code_ptr >= length(var.code), true)

  curr_323 = local.end_of_code_323 ? null : {
    code = substr(var.code, local.iter_322.code_ptr, 1)
    input = substr(var.code, local.iter_322.code_ptr, 1) == "," ? substr(local.iter_322.input, 0, 1) : null
  }

  iter_323 = local.end_of_code_323 ? local.iter_322 : {
    input = (local.curr_323.code == ","
      ? substr(local.iter_322.input, 1, -1)
      : local.iter_322.input)

    output = (local.curr_323.code == "."
      ? "${local.iter_322.output}${jsondecode(format("\"\\u%04x\"", local.iter_322.tape[local.iter_322.tape_ptr]))}"
      : local.iter_322.output)
    
    tape = (
      local.curr_323.code == "+"
        ? [for i, b in local.iter_322.tape : (i == local.iter_322.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_323.code == "-"
        ? [for i, b in local.iter_322.tape : (i == local.iter_322.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_323.code == ","
        ? [for i, b in local.iter_322.tape : (i == local.iter_322.tape_ptr ? local.ascii_lookup[local.curr_323.input] : b)]
        : local.iter_322.tape)

    tape_ptr = (
      local.curr_323.code == "<"
        ? local.iter_322.tape_ptr == 0 ? length(local.iter_322.tape) - 1 : local.iter_322.tape_ptr - 1 :
      local.curr_323.code == ">"
        ? local.iter_322.tape_ptr == length(local.iter_322.tape) - 1 ? 0 : local.iter_322.tape_ptr + 1
        : local.iter_322.tape_ptr)

    code_ptr = 1 + (
      local.curr_323.code == "["
        ? local.iter_322.tape[local.iter_322.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_322.code_ptr)] : local.iter_322.code_ptr :
      local.curr_323.code == "]"
        ? local.iter_322.tape[local.iter_322.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_322.code_ptr)] : local.iter_322.code_ptr
        : local.iter_322.code_ptr)

    steps_taken = 1 + local.iter_322.steps_taken
  }
}

locals {
  end_of_code_324 = try(local.iter_323.code_ptr >= length(var.code), true)

  curr_324 = local.end_of_code_324 ? null : {
    code = substr(var.code, local.iter_323.code_ptr, 1)
    input = substr(var.code, local.iter_323.code_ptr, 1) == "," ? substr(local.iter_323.input, 0, 1) : null
  }

  iter_324 = local.end_of_code_324 ? local.iter_323 : {
    input = (local.curr_324.code == ","
      ? substr(local.iter_323.input, 1, -1)
      : local.iter_323.input)

    output = (local.curr_324.code == "."
      ? "${local.iter_323.output}${jsondecode(format("\"\\u%04x\"", local.iter_323.tape[local.iter_323.tape_ptr]))}"
      : local.iter_323.output)
    
    tape = (
      local.curr_324.code == "+"
        ? [for i, b in local.iter_323.tape : (i == local.iter_323.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_324.code == "-"
        ? [for i, b in local.iter_323.tape : (i == local.iter_323.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_324.code == ","
        ? [for i, b in local.iter_323.tape : (i == local.iter_323.tape_ptr ? local.ascii_lookup[local.curr_324.input] : b)]
        : local.iter_323.tape)

    tape_ptr = (
      local.curr_324.code == "<"
        ? local.iter_323.tape_ptr == 0 ? length(local.iter_323.tape) - 1 : local.iter_323.tape_ptr - 1 :
      local.curr_324.code == ">"
        ? local.iter_323.tape_ptr == length(local.iter_323.tape) - 1 ? 0 : local.iter_323.tape_ptr + 1
        : local.iter_323.tape_ptr)

    code_ptr = 1 + (
      local.curr_324.code == "["
        ? local.iter_323.tape[local.iter_323.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_323.code_ptr)] : local.iter_323.code_ptr :
      local.curr_324.code == "]"
        ? local.iter_323.tape[local.iter_323.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_323.code_ptr)] : local.iter_323.code_ptr
        : local.iter_323.code_ptr)

    steps_taken = 1 + local.iter_323.steps_taken
  }
}

locals {
  end_of_code_325 = try(local.iter_324.code_ptr >= length(var.code), true)

  curr_325 = local.end_of_code_325 ? null : {
    code = substr(var.code, local.iter_324.code_ptr, 1)
    input = substr(var.code, local.iter_324.code_ptr, 1) == "," ? substr(local.iter_324.input, 0, 1) : null
  }

  iter_325 = local.end_of_code_325 ? local.iter_324 : {
    input = (local.curr_325.code == ","
      ? substr(local.iter_324.input, 1, -1)
      : local.iter_324.input)

    output = (local.curr_325.code == "."
      ? "${local.iter_324.output}${jsondecode(format("\"\\u%04x\"", local.iter_324.tape[local.iter_324.tape_ptr]))}"
      : local.iter_324.output)
    
    tape = (
      local.curr_325.code == "+"
        ? [for i, b in local.iter_324.tape : (i == local.iter_324.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_325.code == "-"
        ? [for i, b in local.iter_324.tape : (i == local.iter_324.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_325.code == ","
        ? [for i, b in local.iter_324.tape : (i == local.iter_324.tape_ptr ? local.ascii_lookup[local.curr_325.input] : b)]
        : local.iter_324.tape)

    tape_ptr = (
      local.curr_325.code == "<"
        ? local.iter_324.tape_ptr == 0 ? length(local.iter_324.tape) - 1 : local.iter_324.tape_ptr - 1 :
      local.curr_325.code == ">"
        ? local.iter_324.tape_ptr == length(local.iter_324.tape) - 1 ? 0 : local.iter_324.tape_ptr + 1
        : local.iter_324.tape_ptr)

    code_ptr = 1 + (
      local.curr_325.code == "["
        ? local.iter_324.tape[local.iter_324.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_324.code_ptr)] : local.iter_324.code_ptr :
      local.curr_325.code == "]"
        ? local.iter_324.tape[local.iter_324.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_324.code_ptr)] : local.iter_324.code_ptr
        : local.iter_324.code_ptr)

    steps_taken = 1 + local.iter_324.steps_taken
  }
}

locals {
  end_of_code_326 = try(local.iter_325.code_ptr >= length(var.code), true)

  curr_326 = local.end_of_code_326 ? null : {
    code = substr(var.code, local.iter_325.code_ptr, 1)
    input = substr(var.code, local.iter_325.code_ptr, 1) == "," ? substr(local.iter_325.input, 0, 1) : null
  }

  iter_326 = local.end_of_code_326 ? local.iter_325 : {
    input = (local.curr_326.code == ","
      ? substr(local.iter_325.input, 1, -1)
      : local.iter_325.input)

    output = (local.curr_326.code == "."
      ? "${local.iter_325.output}${jsondecode(format("\"\\u%04x\"", local.iter_325.tape[local.iter_325.tape_ptr]))}"
      : local.iter_325.output)
    
    tape = (
      local.curr_326.code == "+"
        ? [for i, b in local.iter_325.tape : (i == local.iter_325.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_326.code == "-"
        ? [for i, b in local.iter_325.tape : (i == local.iter_325.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_326.code == ","
        ? [for i, b in local.iter_325.tape : (i == local.iter_325.tape_ptr ? local.ascii_lookup[local.curr_326.input] : b)]
        : local.iter_325.tape)

    tape_ptr = (
      local.curr_326.code == "<"
        ? local.iter_325.tape_ptr == 0 ? length(local.iter_325.tape) - 1 : local.iter_325.tape_ptr - 1 :
      local.curr_326.code == ">"
        ? local.iter_325.tape_ptr == length(local.iter_325.tape) - 1 ? 0 : local.iter_325.tape_ptr + 1
        : local.iter_325.tape_ptr)

    code_ptr = 1 + (
      local.curr_326.code == "["
        ? local.iter_325.tape[local.iter_325.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_325.code_ptr)] : local.iter_325.code_ptr :
      local.curr_326.code == "]"
        ? local.iter_325.tape[local.iter_325.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_325.code_ptr)] : local.iter_325.code_ptr
        : local.iter_325.code_ptr)

    steps_taken = 1 + local.iter_325.steps_taken
  }
}

locals {
  end_of_code_327 = try(local.iter_326.code_ptr >= length(var.code), true)

  curr_327 = local.end_of_code_327 ? null : {
    code = substr(var.code, local.iter_326.code_ptr, 1)
    input = substr(var.code, local.iter_326.code_ptr, 1) == "," ? substr(local.iter_326.input, 0, 1) : null
  }

  iter_327 = local.end_of_code_327 ? local.iter_326 : {
    input = (local.curr_327.code == ","
      ? substr(local.iter_326.input, 1, -1)
      : local.iter_326.input)

    output = (local.curr_327.code == "."
      ? "${local.iter_326.output}${jsondecode(format("\"\\u%04x\"", local.iter_326.tape[local.iter_326.tape_ptr]))}"
      : local.iter_326.output)
    
    tape = (
      local.curr_327.code == "+"
        ? [for i, b in local.iter_326.tape : (i == local.iter_326.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_327.code == "-"
        ? [for i, b in local.iter_326.tape : (i == local.iter_326.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_327.code == ","
        ? [for i, b in local.iter_326.tape : (i == local.iter_326.tape_ptr ? local.ascii_lookup[local.curr_327.input] : b)]
        : local.iter_326.tape)

    tape_ptr = (
      local.curr_327.code == "<"
        ? local.iter_326.tape_ptr == 0 ? length(local.iter_326.tape) - 1 : local.iter_326.tape_ptr - 1 :
      local.curr_327.code == ">"
        ? local.iter_326.tape_ptr == length(local.iter_326.tape) - 1 ? 0 : local.iter_326.tape_ptr + 1
        : local.iter_326.tape_ptr)

    code_ptr = 1 + (
      local.curr_327.code == "["
        ? local.iter_326.tape[local.iter_326.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_326.code_ptr)] : local.iter_326.code_ptr :
      local.curr_327.code == "]"
        ? local.iter_326.tape[local.iter_326.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_326.code_ptr)] : local.iter_326.code_ptr
        : local.iter_326.code_ptr)

    steps_taken = 1 + local.iter_326.steps_taken
  }
}

locals {
  end_of_code_328 = try(local.iter_327.code_ptr >= length(var.code), true)

  curr_328 = local.end_of_code_328 ? null : {
    code = substr(var.code, local.iter_327.code_ptr, 1)
    input = substr(var.code, local.iter_327.code_ptr, 1) == "," ? substr(local.iter_327.input, 0, 1) : null
  }

  iter_328 = local.end_of_code_328 ? local.iter_327 : {
    input = (local.curr_328.code == ","
      ? substr(local.iter_327.input, 1, -1)
      : local.iter_327.input)

    output = (local.curr_328.code == "."
      ? "${local.iter_327.output}${jsondecode(format("\"\\u%04x\"", local.iter_327.tape[local.iter_327.tape_ptr]))}"
      : local.iter_327.output)
    
    tape = (
      local.curr_328.code == "+"
        ? [for i, b in local.iter_327.tape : (i == local.iter_327.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_328.code == "-"
        ? [for i, b in local.iter_327.tape : (i == local.iter_327.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_328.code == ","
        ? [for i, b in local.iter_327.tape : (i == local.iter_327.tape_ptr ? local.ascii_lookup[local.curr_328.input] : b)]
        : local.iter_327.tape)

    tape_ptr = (
      local.curr_328.code == "<"
        ? local.iter_327.tape_ptr == 0 ? length(local.iter_327.tape) - 1 : local.iter_327.tape_ptr - 1 :
      local.curr_328.code == ">"
        ? local.iter_327.tape_ptr == length(local.iter_327.tape) - 1 ? 0 : local.iter_327.tape_ptr + 1
        : local.iter_327.tape_ptr)

    code_ptr = 1 + (
      local.curr_328.code == "["
        ? local.iter_327.tape[local.iter_327.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_327.code_ptr)] : local.iter_327.code_ptr :
      local.curr_328.code == "]"
        ? local.iter_327.tape[local.iter_327.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_327.code_ptr)] : local.iter_327.code_ptr
        : local.iter_327.code_ptr)

    steps_taken = 1 + local.iter_327.steps_taken
  }
}

locals {
  end_of_code_329 = try(local.iter_328.code_ptr >= length(var.code), true)

  curr_329 = local.end_of_code_329 ? null : {
    code = substr(var.code, local.iter_328.code_ptr, 1)
    input = substr(var.code, local.iter_328.code_ptr, 1) == "," ? substr(local.iter_328.input, 0, 1) : null
  }

  iter_329 = local.end_of_code_329 ? local.iter_328 : {
    input = (local.curr_329.code == ","
      ? substr(local.iter_328.input, 1, -1)
      : local.iter_328.input)

    output = (local.curr_329.code == "."
      ? "${local.iter_328.output}${jsondecode(format("\"\\u%04x\"", local.iter_328.tape[local.iter_328.tape_ptr]))}"
      : local.iter_328.output)
    
    tape = (
      local.curr_329.code == "+"
        ? [for i, b in local.iter_328.tape : (i == local.iter_328.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_329.code == "-"
        ? [for i, b in local.iter_328.tape : (i == local.iter_328.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_329.code == ","
        ? [for i, b in local.iter_328.tape : (i == local.iter_328.tape_ptr ? local.ascii_lookup[local.curr_329.input] : b)]
        : local.iter_328.tape)

    tape_ptr = (
      local.curr_329.code == "<"
        ? local.iter_328.tape_ptr == 0 ? length(local.iter_328.tape) - 1 : local.iter_328.tape_ptr - 1 :
      local.curr_329.code == ">"
        ? local.iter_328.tape_ptr == length(local.iter_328.tape) - 1 ? 0 : local.iter_328.tape_ptr + 1
        : local.iter_328.tape_ptr)

    code_ptr = 1 + (
      local.curr_329.code == "["
        ? local.iter_328.tape[local.iter_328.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_328.code_ptr)] : local.iter_328.code_ptr :
      local.curr_329.code == "]"
        ? local.iter_328.tape[local.iter_328.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_328.code_ptr)] : local.iter_328.code_ptr
        : local.iter_328.code_ptr)

    steps_taken = 1 + local.iter_328.steps_taken
  }
}

locals {
  end_of_code_330 = try(local.iter_329.code_ptr >= length(var.code), true)

  curr_330 = local.end_of_code_330 ? null : {
    code = substr(var.code, local.iter_329.code_ptr, 1)
    input = substr(var.code, local.iter_329.code_ptr, 1) == "," ? substr(local.iter_329.input, 0, 1) : null
  }

  iter_330 = local.end_of_code_330 ? local.iter_329 : {
    input = (local.curr_330.code == ","
      ? substr(local.iter_329.input, 1, -1)
      : local.iter_329.input)

    output = (local.curr_330.code == "."
      ? "${local.iter_329.output}${jsondecode(format("\"\\u%04x\"", local.iter_329.tape[local.iter_329.tape_ptr]))}"
      : local.iter_329.output)
    
    tape = (
      local.curr_330.code == "+"
        ? [for i, b in local.iter_329.tape : (i == local.iter_329.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_330.code == "-"
        ? [for i, b in local.iter_329.tape : (i == local.iter_329.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_330.code == ","
        ? [for i, b in local.iter_329.tape : (i == local.iter_329.tape_ptr ? local.ascii_lookup[local.curr_330.input] : b)]
        : local.iter_329.tape)

    tape_ptr = (
      local.curr_330.code == "<"
        ? local.iter_329.tape_ptr == 0 ? length(local.iter_329.tape) - 1 : local.iter_329.tape_ptr - 1 :
      local.curr_330.code == ">"
        ? local.iter_329.tape_ptr == length(local.iter_329.tape) - 1 ? 0 : local.iter_329.tape_ptr + 1
        : local.iter_329.tape_ptr)

    code_ptr = 1 + (
      local.curr_330.code == "["
        ? local.iter_329.tape[local.iter_329.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_329.code_ptr)] : local.iter_329.code_ptr :
      local.curr_330.code == "]"
        ? local.iter_329.tape[local.iter_329.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_329.code_ptr)] : local.iter_329.code_ptr
        : local.iter_329.code_ptr)

    steps_taken = 1 + local.iter_329.steps_taken
  }
}

locals {
  end_of_code_331 = try(local.iter_330.code_ptr >= length(var.code), true)

  curr_331 = local.end_of_code_331 ? null : {
    code = substr(var.code, local.iter_330.code_ptr, 1)
    input = substr(var.code, local.iter_330.code_ptr, 1) == "," ? substr(local.iter_330.input, 0, 1) : null
  }

  iter_331 = local.end_of_code_331 ? local.iter_330 : {
    input = (local.curr_331.code == ","
      ? substr(local.iter_330.input, 1, -1)
      : local.iter_330.input)

    output = (local.curr_331.code == "."
      ? "${local.iter_330.output}${jsondecode(format("\"\\u%04x\"", local.iter_330.tape[local.iter_330.tape_ptr]))}"
      : local.iter_330.output)
    
    tape = (
      local.curr_331.code == "+"
        ? [for i, b in local.iter_330.tape : (i == local.iter_330.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_331.code == "-"
        ? [for i, b in local.iter_330.tape : (i == local.iter_330.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_331.code == ","
        ? [for i, b in local.iter_330.tape : (i == local.iter_330.tape_ptr ? local.ascii_lookup[local.curr_331.input] : b)]
        : local.iter_330.tape)

    tape_ptr = (
      local.curr_331.code == "<"
        ? local.iter_330.tape_ptr == 0 ? length(local.iter_330.tape) - 1 : local.iter_330.tape_ptr - 1 :
      local.curr_331.code == ">"
        ? local.iter_330.tape_ptr == length(local.iter_330.tape) - 1 ? 0 : local.iter_330.tape_ptr + 1
        : local.iter_330.tape_ptr)

    code_ptr = 1 + (
      local.curr_331.code == "["
        ? local.iter_330.tape[local.iter_330.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_330.code_ptr)] : local.iter_330.code_ptr :
      local.curr_331.code == "]"
        ? local.iter_330.tape[local.iter_330.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_330.code_ptr)] : local.iter_330.code_ptr
        : local.iter_330.code_ptr)

    steps_taken = 1 + local.iter_330.steps_taken
  }
}

locals {
  end_of_code_332 = try(local.iter_331.code_ptr >= length(var.code), true)

  curr_332 = local.end_of_code_332 ? null : {
    code = substr(var.code, local.iter_331.code_ptr, 1)
    input = substr(var.code, local.iter_331.code_ptr, 1) == "," ? substr(local.iter_331.input, 0, 1) : null
  }

  iter_332 = local.end_of_code_332 ? local.iter_331 : {
    input = (local.curr_332.code == ","
      ? substr(local.iter_331.input, 1, -1)
      : local.iter_331.input)

    output = (local.curr_332.code == "."
      ? "${local.iter_331.output}${jsondecode(format("\"\\u%04x\"", local.iter_331.tape[local.iter_331.tape_ptr]))}"
      : local.iter_331.output)
    
    tape = (
      local.curr_332.code == "+"
        ? [for i, b in local.iter_331.tape : (i == local.iter_331.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_332.code == "-"
        ? [for i, b in local.iter_331.tape : (i == local.iter_331.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_332.code == ","
        ? [for i, b in local.iter_331.tape : (i == local.iter_331.tape_ptr ? local.ascii_lookup[local.curr_332.input] : b)]
        : local.iter_331.tape)

    tape_ptr = (
      local.curr_332.code == "<"
        ? local.iter_331.tape_ptr == 0 ? length(local.iter_331.tape) - 1 : local.iter_331.tape_ptr - 1 :
      local.curr_332.code == ">"
        ? local.iter_331.tape_ptr == length(local.iter_331.tape) - 1 ? 0 : local.iter_331.tape_ptr + 1
        : local.iter_331.tape_ptr)

    code_ptr = 1 + (
      local.curr_332.code == "["
        ? local.iter_331.tape[local.iter_331.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_331.code_ptr)] : local.iter_331.code_ptr :
      local.curr_332.code == "]"
        ? local.iter_331.tape[local.iter_331.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_331.code_ptr)] : local.iter_331.code_ptr
        : local.iter_331.code_ptr)

    steps_taken = 1 + local.iter_331.steps_taken
  }
}

locals {
  end_of_code_333 = try(local.iter_332.code_ptr >= length(var.code), true)

  curr_333 = local.end_of_code_333 ? null : {
    code = substr(var.code, local.iter_332.code_ptr, 1)
    input = substr(var.code, local.iter_332.code_ptr, 1) == "," ? substr(local.iter_332.input, 0, 1) : null
  }

  iter_333 = local.end_of_code_333 ? local.iter_332 : {
    input = (local.curr_333.code == ","
      ? substr(local.iter_332.input, 1, -1)
      : local.iter_332.input)

    output = (local.curr_333.code == "."
      ? "${local.iter_332.output}${jsondecode(format("\"\\u%04x\"", local.iter_332.tape[local.iter_332.tape_ptr]))}"
      : local.iter_332.output)
    
    tape = (
      local.curr_333.code == "+"
        ? [for i, b in local.iter_332.tape : (i == local.iter_332.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_333.code == "-"
        ? [for i, b in local.iter_332.tape : (i == local.iter_332.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_333.code == ","
        ? [for i, b in local.iter_332.tape : (i == local.iter_332.tape_ptr ? local.ascii_lookup[local.curr_333.input] : b)]
        : local.iter_332.tape)

    tape_ptr = (
      local.curr_333.code == "<"
        ? local.iter_332.tape_ptr == 0 ? length(local.iter_332.tape) - 1 : local.iter_332.tape_ptr - 1 :
      local.curr_333.code == ">"
        ? local.iter_332.tape_ptr == length(local.iter_332.tape) - 1 ? 0 : local.iter_332.tape_ptr + 1
        : local.iter_332.tape_ptr)

    code_ptr = 1 + (
      local.curr_333.code == "["
        ? local.iter_332.tape[local.iter_332.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_332.code_ptr)] : local.iter_332.code_ptr :
      local.curr_333.code == "]"
        ? local.iter_332.tape[local.iter_332.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_332.code_ptr)] : local.iter_332.code_ptr
        : local.iter_332.code_ptr)

    steps_taken = 1 + local.iter_332.steps_taken
  }
}

locals {
  end_of_code_334 = try(local.iter_333.code_ptr >= length(var.code), true)

  curr_334 = local.end_of_code_334 ? null : {
    code = substr(var.code, local.iter_333.code_ptr, 1)
    input = substr(var.code, local.iter_333.code_ptr, 1) == "," ? substr(local.iter_333.input, 0, 1) : null
  }

  iter_334 = local.end_of_code_334 ? local.iter_333 : {
    input = (local.curr_334.code == ","
      ? substr(local.iter_333.input, 1, -1)
      : local.iter_333.input)

    output = (local.curr_334.code == "."
      ? "${local.iter_333.output}${jsondecode(format("\"\\u%04x\"", local.iter_333.tape[local.iter_333.tape_ptr]))}"
      : local.iter_333.output)
    
    tape = (
      local.curr_334.code == "+"
        ? [for i, b in local.iter_333.tape : (i == local.iter_333.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_334.code == "-"
        ? [for i, b in local.iter_333.tape : (i == local.iter_333.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_334.code == ","
        ? [for i, b in local.iter_333.tape : (i == local.iter_333.tape_ptr ? local.ascii_lookup[local.curr_334.input] : b)]
        : local.iter_333.tape)

    tape_ptr = (
      local.curr_334.code == "<"
        ? local.iter_333.tape_ptr == 0 ? length(local.iter_333.tape) - 1 : local.iter_333.tape_ptr - 1 :
      local.curr_334.code == ">"
        ? local.iter_333.tape_ptr == length(local.iter_333.tape) - 1 ? 0 : local.iter_333.tape_ptr + 1
        : local.iter_333.tape_ptr)

    code_ptr = 1 + (
      local.curr_334.code == "["
        ? local.iter_333.tape[local.iter_333.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_333.code_ptr)] : local.iter_333.code_ptr :
      local.curr_334.code == "]"
        ? local.iter_333.tape[local.iter_333.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_333.code_ptr)] : local.iter_333.code_ptr
        : local.iter_333.code_ptr)

    steps_taken = 1 + local.iter_333.steps_taken
  }
}

locals {
  end_of_code_335 = try(local.iter_334.code_ptr >= length(var.code), true)

  curr_335 = local.end_of_code_335 ? null : {
    code = substr(var.code, local.iter_334.code_ptr, 1)
    input = substr(var.code, local.iter_334.code_ptr, 1) == "," ? substr(local.iter_334.input, 0, 1) : null
  }

  iter_335 = local.end_of_code_335 ? local.iter_334 : {
    input = (local.curr_335.code == ","
      ? substr(local.iter_334.input, 1, -1)
      : local.iter_334.input)

    output = (local.curr_335.code == "."
      ? "${local.iter_334.output}${jsondecode(format("\"\\u%04x\"", local.iter_334.tape[local.iter_334.tape_ptr]))}"
      : local.iter_334.output)
    
    tape = (
      local.curr_335.code == "+"
        ? [for i, b in local.iter_334.tape : (i == local.iter_334.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_335.code == "-"
        ? [for i, b in local.iter_334.tape : (i == local.iter_334.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_335.code == ","
        ? [for i, b in local.iter_334.tape : (i == local.iter_334.tape_ptr ? local.ascii_lookup[local.curr_335.input] : b)]
        : local.iter_334.tape)

    tape_ptr = (
      local.curr_335.code == "<"
        ? local.iter_334.tape_ptr == 0 ? length(local.iter_334.tape) - 1 : local.iter_334.tape_ptr - 1 :
      local.curr_335.code == ">"
        ? local.iter_334.tape_ptr == length(local.iter_334.tape) - 1 ? 0 : local.iter_334.tape_ptr + 1
        : local.iter_334.tape_ptr)

    code_ptr = 1 + (
      local.curr_335.code == "["
        ? local.iter_334.tape[local.iter_334.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_334.code_ptr)] : local.iter_334.code_ptr :
      local.curr_335.code == "]"
        ? local.iter_334.tape[local.iter_334.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_334.code_ptr)] : local.iter_334.code_ptr
        : local.iter_334.code_ptr)

    steps_taken = 1 + local.iter_334.steps_taken
  }
}

locals {
  end_of_code_336 = try(local.iter_335.code_ptr >= length(var.code), true)

  curr_336 = local.end_of_code_336 ? null : {
    code = substr(var.code, local.iter_335.code_ptr, 1)
    input = substr(var.code, local.iter_335.code_ptr, 1) == "," ? substr(local.iter_335.input, 0, 1) : null
  }

  iter_336 = local.end_of_code_336 ? local.iter_335 : {
    input = (local.curr_336.code == ","
      ? substr(local.iter_335.input, 1, -1)
      : local.iter_335.input)

    output = (local.curr_336.code == "."
      ? "${local.iter_335.output}${jsondecode(format("\"\\u%04x\"", local.iter_335.tape[local.iter_335.tape_ptr]))}"
      : local.iter_335.output)
    
    tape = (
      local.curr_336.code == "+"
        ? [for i, b in local.iter_335.tape : (i == local.iter_335.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_336.code == "-"
        ? [for i, b in local.iter_335.tape : (i == local.iter_335.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_336.code == ","
        ? [for i, b in local.iter_335.tape : (i == local.iter_335.tape_ptr ? local.ascii_lookup[local.curr_336.input] : b)]
        : local.iter_335.tape)

    tape_ptr = (
      local.curr_336.code == "<"
        ? local.iter_335.tape_ptr == 0 ? length(local.iter_335.tape) - 1 : local.iter_335.tape_ptr - 1 :
      local.curr_336.code == ">"
        ? local.iter_335.tape_ptr == length(local.iter_335.tape) - 1 ? 0 : local.iter_335.tape_ptr + 1
        : local.iter_335.tape_ptr)

    code_ptr = 1 + (
      local.curr_336.code == "["
        ? local.iter_335.tape[local.iter_335.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_335.code_ptr)] : local.iter_335.code_ptr :
      local.curr_336.code == "]"
        ? local.iter_335.tape[local.iter_335.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_335.code_ptr)] : local.iter_335.code_ptr
        : local.iter_335.code_ptr)

    steps_taken = 1 + local.iter_335.steps_taken
  }
}

locals {
  end_of_code_337 = try(local.iter_336.code_ptr >= length(var.code), true)

  curr_337 = local.end_of_code_337 ? null : {
    code = substr(var.code, local.iter_336.code_ptr, 1)
    input = substr(var.code, local.iter_336.code_ptr, 1) == "," ? substr(local.iter_336.input, 0, 1) : null
  }

  iter_337 = local.end_of_code_337 ? local.iter_336 : {
    input = (local.curr_337.code == ","
      ? substr(local.iter_336.input, 1, -1)
      : local.iter_336.input)

    output = (local.curr_337.code == "."
      ? "${local.iter_336.output}${jsondecode(format("\"\\u%04x\"", local.iter_336.tape[local.iter_336.tape_ptr]))}"
      : local.iter_336.output)
    
    tape = (
      local.curr_337.code == "+"
        ? [for i, b in local.iter_336.tape : (i == local.iter_336.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_337.code == "-"
        ? [for i, b in local.iter_336.tape : (i == local.iter_336.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_337.code == ","
        ? [for i, b in local.iter_336.tape : (i == local.iter_336.tape_ptr ? local.ascii_lookup[local.curr_337.input] : b)]
        : local.iter_336.tape)

    tape_ptr = (
      local.curr_337.code == "<"
        ? local.iter_336.tape_ptr == 0 ? length(local.iter_336.tape) - 1 : local.iter_336.tape_ptr - 1 :
      local.curr_337.code == ">"
        ? local.iter_336.tape_ptr == length(local.iter_336.tape) - 1 ? 0 : local.iter_336.tape_ptr + 1
        : local.iter_336.tape_ptr)

    code_ptr = 1 + (
      local.curr_337.code == "["
        ? local.iter_336.tape[local.iter_336.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_336.code_ptr)] : local.iter_336.code_ptr :
      local.curr_337.code == "]"
        ? local.iter_336.tape[local.iter_336.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_336.code_ptr)] : local.iter_336.code_ptr
        : local.iter_336.code_ptr)

    steps_taken = 1 + local.iter_336.steps_taken
  }
}

locals {
  end_of_code_338 = try(local.iter_337.code_ptr >= length(var.code), true)

  curr_338 = local.end_of_code_338 ? null : {
    code = substr(var.code, local.iter_337.code_ptr, 1)
    input = substr(var.code, local.iter_337.code_ptr, 1) == "," ? substr(local.iter_337.input, 0, 1) : null
  }

  iter_338 = local.end_of_code_338 ? local.iter_337 : {
    input = (local.curr_338.code == ","
      ? substr(local.iter_337.input, 1, -1)
      : local.iter_337.input)

    output = (local.curr_338.code == "."
      ? "${local.iter_337.output}${jsondecode(format("\"\\u%04x\"", local.iter_337.tape[local.iter_337.tape_ptr]))}"
      : local.iter_337.output)
    
    tape = (
      local.curr_338.code == "+"
        ? [for i, b in local.iter_337.tape : (i == local.iter_337.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_338.code == "-"
        ? [for i, b in local.iter_337.tape : (i == local.iter_337.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_338.code == ","
        ? [for i, b in local.iter_337.tape : (i == local.iter_337.tape_ptr ? local.ascii_lookup[local.curr_338.input] : b)]
        : local.iter_337.tape)

    tape_ptr = (
      local.curr_338.code == "<"
        ? local.iter_337.tape_ptr == 0 ? length(local.iter_337.tape) - 1 : local.iter_337.tape_ptr - 1 :
      local.curr_338.code == ">"
        ? local.iter_337.tape_ptr == length(local.iter_337.tape) - 1 ? 0 : local.iter_337.tape_ptr + 1
        : local.iter_337.tape_ptr)

    code_ptr = 1 + (
      local.curr_338.code == "["
        ? local.iter_337.tape[local.iter_337.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_337.code_ptr)] : local.iter_337.code_ptr :
      local.curr_338.code == "]"
        ? local.iter_337.tape[local.iter_337.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_337.code_ptr)] : local.iter_337.code_ptr
        : local.iter_337.code_ptr)

    steps_taken = 1 + local.iter_337.steps_taken
  }
}

locals {
  end_of_code_339 = try(local.iter_338.code_ptr >= length(var.code), true)

  curr_339 = local.end_of_code_339 ? null : {
    code = substr(var.code, local.iter_338.code_ptr, 1)
    input = substr(var.code, local.iter_338.code_ptr, 1) == "," ? substr(local.iter_338.input, 0, 1) : null
  }

  iter_339 = local.end_of_code_339 ? local.iter_338 : {
    input = (local.curr_339.code == ","
      ? substr(local.iter_338.input, 1, -1)
      : local.iter_338.input)

    output = (local.curr_339.code == "."
      ? "${local.iter_338.output}${jsondecode(format("\"\\u%04x\"", local.iter_338.tape[local.iter_338.tape_ptr]))}"
      : local.iter_338.output)
    
    tape = (
      local.curr_339.code == "+"
        ? [for i, b in local.iter_338.tape : (i == local.iter_338.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_339.code == "-"
        ? [for i, b in local.iter_338.tape : (i == local.iter_338.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_339.code == ","
        ? [for i, b in local.iter_338.tape : (i == local.iter_338.tape_ptr ? local.ascii_lookup[local.curr_339.input] : b)]
        : local.iter_338.tape)

    tape_ptr = (
      local.curr_339.code == "<"
        ? local.iter_338.tape_ptr == 0 ? length(local.iter_338.tape) - 1 : local.iter_338.tape_ptr - 1 :
      local.curr_339.code == ">"
        ? local.iter_338.tape_ptr == length(local.iter_338.tape) - 1 ? 0 : local.iter_338.tape_ptr + 1
        : local.iter_338.tape_ptr)

    code_ptr = 1 + (
      local.curr_339.code == "["
        ? local.iter_338.tape[local.iter_338.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_338.code_ptr)] : local.iter_338.code_ptr :
      local.curr_339.code == "]"
        ? local.iter_338.tape[local.iter_338.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_338.code_ptr)] : local.iter_338.code_ptr
        : local.iter_338.code_ptr)

    steps_taken = 1 + local.iter_338.steps_taken
  }
}

locals {
  end_of_code_340 = try(local.iter_339.code_ptr >= length(var.code), true)

  curr_340 = local.end_of_code_340 ? null : {
    code = substr(var.code, local.iter_339.code_ptr, 1)
    input = substr(var.code, local.iter_339.code_ptr, 1) == "," ? substr(local.iter_339.input, 0, 1) : null
  }

  iter_340 = local.end_of_code_340 ? local.iter_339 : {
    input = (local.curr_340.code == ","
      ? substr(local.iter_339.input, 1, -1)
      : local.iter_339.input)

    output = (local.curr_340.code == "."
      ? "${local.iter_339.output}${jsondecode(format("\"\\u%04x\"", local.iter_339.tape[local.iter_339.tape_ptr]))}"
      : local.iter_339.output)
    
    tape = (
      local.curr_340.code == "+"
        ? [for i, b in local.iter_339.tape : (i == local.iter_339.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_340.code == "-"
        ? [for i, b in local.iter_339.tape : (i == local.iter_339.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_340.code == ","
        ? [for i, b in local.iter_339.tape : (i == local.iter_339.tape_ptr ? local.ascii_lookup[local.curr_340.input] : b)]
        : local.iter_339.tape)

    tape_ptr = (
      local.curr_340.code == "<"
        ? local.iter_339.tape_ptr == 0 ? length(local.iter_339.tape) - 1 : local.iter_339.tape_ptr - 1 :
      local.curr_340.code == ">"
        ? local.iter_339.tape_ptr == length(local.iter_339.tape) - 1 ? 0 : local.iter_339.tape_ptr + 1
        : local.iter_339.tape_ptr)

    code_ptr = 1 + (
      local.curr_340.code == "["
        ? local.iter_339.tape[local.iter_339.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_339.code_ptr)] : local.iter_339.code_ptr :
      local.curr_340.code == "]"
        ? local.iter_339.tape[local.iter_339.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_339.code_ptr)] : local.iter_339.code_ptr
        : local.iter_339.code_ptr)

    steps_taken = 1 + local.iter_339.steps_taken
  }
}

locals {
  end_of_code_341 = try(local.iter_340.code_ptr >= length(var.code), true)

  curr_341 = local.end_of_code_341 ? null : {
    code = substr(var.code, local.iter_340.code_ptr, 1)
    input = substr(var.code, local.iter_340.code_ptr, 1) == "," ? substr(local.iter_340.input, 0, 1) : null
  }

  iter_341 = local.end_of_code_341 ? local.iter_340 : {
    input = (local.curr_341.code == ","
      ? substr(local.iter_340.input, 1, -1)
      : local.iter_340.input)

    output = (local.curr_341.code == "."
      ? "${local.iter_340.output}${jsondecode(format("\"\\u%04x\"", local.iter_340.tape[local.iter_340.tape_ptr]))}"
      : local.iter_340.output)
    
    tape = (
      local.curr_341.code == "+"
        ? [for i, b in local.iter_340.tape : (i == local.iter_340.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_341.code == "-"
        ? [for i, b in local.iter_340.tape : (i == local.iter_340.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_341.code == ","
        ? [for i, b in local.iter_340.tape : (i == local.iter_340.tape_ptr ? local.ascii_lookup[local.curr_341.input] : b)]
        : local.iter_340.tape)

    tape_ptr = (
      local.curr_341.code == "<"
        ? local.iter_340.tape_ptr == 0 ? length(local.iter_340.tape) - 1 : local.iter_340.tape_ptr - 1 :
      local.curr_341.code == ">"
        ? local.iter_340.tape_ptr == length(local.iter_340.tape) - 1 ? 0 : local.iter_340.tape_ptr + 1
        : local.iter_340.tape_ptr)

    code_ptr = 1 + (
      local.curr_341.code == "["
        ? local.iter_340.tape[local.iter_340.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_340.code_ptr)] : local.iter_340.code_ptr :
      local.curr_341.code == "]"
        ? local.iter_340.tape[local.iter_340.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_340.code_ptr)] : local.iter_340.code_ptr
        : local.iter_340.code_ptr)

    steps_taken = 1 + local.iter_340.steps_taken
  }
}

locals {
  end_of_code_342 = try(local.iter_341.code_ptr >= length(var.code), true)

  curr_342 = local.end_of_code_342 ? null : {
    code = substr(var.code, local.iter_341.code_ptr, 1)
    input = substr(var.code, local.iter_341.code_ptr, 1) == "," ? substr(local.iter_341.input, 0, 1) : null
  }

  iter_342 = local.end_of_code_342 ? local.iter_341 : {
    input = (local.curr_342.code == ","
      ? substr(local.iter_341.input, 1, -1)
      : local.iter_341.input)

    output = (local.curr_342.code == "."
      ? "${local.iter_341.output}${jsondecode(format("\"\\u%04x\"", local.iter_341.tape[local.iter_341.tape_ptr]))}"
      : local.iter_341.output)
    
    tape = (
      local.curr_342.code == "+"
        ? [for i, b in local.iter_341.tape : (i == local.iter_341.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_342.code == "-"
        ? [for i, b in local.iter_341.tape : (i == local.iter_341.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_342.code == ","
        ? [for i, b in local.iter_341.tape : (i == local.iter_341.tape_ptr ? local.ascii_lookup[local.curr_342.input] : b)]
        : local.iter_341.tape)

    tape_ptr = (
      local.curr_342.code == "<"
        ? local.iter_341.tape_ptr == 0 ? length(local.iter_341.tape) - 1 : local.iter_341.tape_ptr - 1 :
      local.curr_342.code == ">"
        ? local.iter_341.tape_ptr == length(local.iter_341.tape) - 1 ? 0 : local.iter_341.tape_ptr + 1
        : local.iter_341.tape_ptr)

    code_ptr = 1 + (
      local.curr_342.code == "["
        ? local.iter_341.tape[local.iter_341.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_341.code_ptr)] : local.iter_341.code_ptr :
      local.curr_342.code == "]"
        ? local.iter_341.tape[local.iter_341.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_341.code_ptr)] : local.iter_341.code_ptr
        : local.iter_341.code_ptr)

    steps_taken = 1 + local.iter_341.steps_taken
  }
}

locals {
  end_of_code_343 = try(local.iter_342.code_ptr >= length(var.code), true)

  curr_343 = local.end_of_code_343 ? null : {
    code = substr(var.code, local.iter_342.code_ptr, 1)
    input = substr(var.code, local.iter_342.code_ptr, 1) == "," ? substr(local.iter_342.input, 0, 1) : null
  }

  iter_343 = local.end_of_code_343 ? local.iter_342 : {
    input = (local.curr_343.code == ","
      ? substr(local.iter_342.input, 1, -1)
      : local.iter_342.input)

    output = (local.curr_343.code == "."
      ? "${local.iter_342.output}${jsondecode(format("\"\\u%04x\"", local.iter_342.tape[local.iter_342.tape_ptr]))}"
      : local.iter_342.output)
    
    tape = (
      local.curr_343.code == "+"
        ? [for i, b in local.iter_342.tape : (i == local.iter_342.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_343.code == "-"
        ? [for i, b in local.iter_342.tape : (i == local.iter_342.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_343.code == ","
        ? [for i, b in local.iter_342.tape : (i == local.iter_342.tape_ptr ? local.ascii_lookup[local.curr_343.input] : b)]
        : local.iter_342.tape)

    tape_ptr = (
      local.curr_343.code == "<"
        ? local.iter_342.tape_ptr == 0 ? length(local.iter_342.tape) - 1 : local.iter_342.tape_ptr - 1 :
      local.curr_343.code == ">"
        ? local.iter_342.tape_ptr == length(local.iter_342.tape) - 1 ? 0 : local.iter_342.tape_ptr + 1
        : local.iter_342.tape_ptr)

    code_ptr = 1 + (
      local.curr_343.code == "["
        ? local.iter_342.tape[local.iter_342.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_342.code_ptr)] : local.iter_342.code_ptr :
      local.curr_343.code == "]"
        ? local.iter_342.tape[local.iter_342.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_342.code_ptr)] : local.iter_342.code_ptr
        : local.iter_342.code_ptr)

    steps_taken = 1 + local.iter_342.steps_taken
  }
}

locals {
  end_of_code_344 = try(local.iter_343.code_ptr >= length(var.code), true)

  curr_344 = local.end_of_code_344 ? null : {
    code = substr(var.code, local.iter_343.code_ptr, 1)
    input = substr(var.code, local.iter_343.code_ptr, 1) == "," ? substr(local.iter_343.input, 0, 1) : null
  }

  iter_344 = local.end_of_code_344 ? local.iter_343 : {
    input = (local.curr_344.code == ","
      ? substr(local.iter_343.input, 1, -1)
      : local.iter_343.input)

    output = (local.curr_344.code == "."
      ? "${local.iter_343.output}${jsondecode(format("\"\\u%04x\"", local.iter_343.tape[local.iter_343.tape_ptr]))}"
      : local.iter_343.output)
    
    tape = (
      local.curr_344.code == "+"
        ? [for i, b in local.iter_343.tape : (i == local.iter_343.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_344.code == "-"
        ? [for i, b in local.iter_343.tape : (i == local.iter_343.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_344.code == ","
        ? [for i, b in local.iter_343.tape : (i == local.iter_343.tape_ptr ? local.ascii_lookup[local.curr_344.input] : b)]
        : local.iter_343.tape)

    tape_ptr = (
      local.curr_344.code == "<"
        ? local.iter_343.tape_ptr == 0 ? length(local.iter_343.tape) - 1 : local.iter_343.tape_ptr - 1 :
      local.curr_344.code == ">"
        ? local.iter_343.tape_ptr == length(local.iter_343.tape) - 1 ? 0 : local.iter_343.tape_ptr + 1
        : local.iter_343.tape_ptr)

    code_ptr = 1 + (
      local.curr_344.code == "["
        ? local.iter_343.tape[local.iter_343.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_343.code_ptr)] : local.iter_343.code_ptr :
      local.curr_344.code == "]"
        ? local.iter_343.tape[local.iter_343.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_343.code_ptr)] : local.iter_343.code_ptr
        : local.iter_343.code_ptr)

    steps_taken = 1 + local.iter_343.steps_taken
  }
}

locals {
  end_of_code_345 = try(local.iter_344.code_ptr >= length(var.code), true)

  curr_345 = local.end_of_code_345 ? null : {
    code = substr(var.code, local.iter_344.code_ptr, 1)
    input = substr(var.code, local.iter_344.code_ptr, 1) == "," ? substr(local.iter_344.input, 0, 1) : null
  }

  iter_345 = local.end_of_code_345 ? local.iter_344 : {
    input = (local.curr_345.code == ","
      ? substr(local.iter_344.input, 1, -1)
      : local.iter_344.input)

    output = (local.curr_345.code == "."
      ? "${local.iter_344.output}${jsondecode(format("\"\\u%04x\"", local.iter_344.tape[local.iter_344.tape_ptr]))}"
      : local.iter_344.output)
    
    tape = (
      local.curr_345.code == "+"
        ? [for i, b in local.iter_344.tape : (i == local.iter_344.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_345.code == "-"
        ? [for i, b in local.iter_344.tape : (i == local.iter_344.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_345.code == ","
        ? [for i, b in local.iter_344.tape : (i == local.iter_344.tape_ptr ? local.ascii_lookup[local.curr_345.input] : b)]
        : local.iter_344.tape)

    tape_ptr = (
      local.curr_345.code == "<"
        ? local.iter_344.tape_ptr == 0 ? length(local.iter_344.tape) - 1 : local.iter_344.tape_ptr - 1 :
      local.curr_345.code == ">"
        ? local.iter_344.tape_ptr == length(local.iter_344.tape) - 1 ? 0 : local.iter_344.tape_ptr + 1
        : local.iter_344.tape_ptr)

    code_ptr = 1 + (
      local.curr_345.code == "["
        ? local.iter_344.tape[local.iter_344.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_344.code_ptr)] : local.iter_344.code_ptr :
      local.curr_345.code == "]"
        ? local.iter_344.tape[local.iter_344.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_344.code_ptr)] : local.iter_344.code_ptr
        : local.iter_344.code_ptr)

    steps_taken = 1 + local.iter_344.steps_taken
  }
}

locals {
  end_of_code_346 = try(local.iter_345.code_ptr >= length(var.code), true)

  curr_346 = local.end_of_code_346 ? null : {
    code = substr(var.code, local.iter_345.code_ptr, 1)
    input = substr(var.code, local.iter_345.code_ptr, 1) == "," ? substr(local.iter_345.input, 0, 1) : null
  }

  iter_346 = local.end_of_code_346 ? local.iter_345 : {
    input = (local.curr_346.code == ","
      ? substr(local.iter_345.input, 1, -1)
      : local.iter_345.input)

    output = (local.curr_346.code == "."
      ? "${local.iter_345.output}${jsondecode(format("\"\\u%04x\"", local.iter_345.tape[local.iter_345.tape_ptr]))}"
      : local.iter_345.output)
    
    tape = (
      local.curr_346.code == "+"
        ? [for i, b in local.iter_345.tape : (i == local.iter_345.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_346.code == "-"
        ? [for i, b in local.iter_345.tape : (i == local.iter_345.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_346.code == ","
        ? [for i, b in local.iter_345.tape : (i == local.iter_345.tape_ptr ? local.ascii_lookup[local.curr_346.input] : b)]
        : local.iter_345.tape)

    tape_ptr = (
      local.curr_346.code == "<"
        ? local.iter_345.tape_ptr == 0 ? length(local.iter_345.tape) - 1 : local.iter_345.tape_ptr - 1 :
      local.curr_346.code == ">"
        ? local.iter_345.tape_ptr == length(local.iter_345.tape) - 1 ? 0 : local.iter_345.tape_ptr + 1
        : local.iter_345.tape_ptr)

    code_ptr = 1 + (
      local.curr_346.code == "["
        ? local.iter_345.tape[local.iter_345.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_345.code_ptr)] : local.iter_345.code_ptr :
      local.curr_346.code == "]"
        ? local.iter_345.tape[local.iter_345.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_345.code_ptr)] : local.iter_345.code_ptr
        : local.iter_345.code_ptr)

    steps_taken = 1 + local.iter_345.steps_taken
  }
}

locals {
  end_of_code_347 = try(local.iter_346.code_ptr >= length(var.code), true)

  curr_347 = local.end_of_code_347 ? null : {
    code = substr(var.code, local.iter_346.code_ptr, 1)
    input = substr(var.code, local.iter_346.code_ptr, 1) == "," ? substr(local.iter_346.input, 0, 1) : null
  }

  iter_347 = local.end_of_code_347 ? local.iter_346 : {
    input = (local.curr_347.code == ","
      ? substr(local.iter_346.input, 1, -1)
      : local.iter_346.input)

    output = (local.curr_347.code == "."
      ? "${local.iter_346.output}${jsondecode(format("\"\\u%04x\"", local.iter_346.tape[local.iter_346.tape_ptr]))}"
      : local.iter_346.output)
    
    tape = (
      local.curr_347.code == "+"
        ? [for i, b in local.iter_346.tape : (i == local.iter_346.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_347.code == "-"
        ? [for i, b in local.iter_346.tape : (i == local.iter_346.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_347.code == ","
        ? [for i, b in local.iter_346.tape : (i == local.iter_346.tape_ptr ? local.ascii_lookup[local.curr_347.input] : b)]
        : local.iter_346.tape)

    tape_ptr = (
      local.curr_347.code == "<"
        ? local.iter_346.tape_ptr == 0 ? length(local.iter_346.tape) - 1 : local.iter_346.tape_ptr - 1 :
      local.curr_347.code == ">"
        ? local.iter_346.tape_ptr == length(local.iter_346.tape) - 1 ? 0 : local.iter_346.tape_ptr + 1
        : local.iter_346.tape_ptr)

    code_ptr = 1 + (
      local.curr_347.code == "["
        ? local.iter_346.tape[local.iter_346.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_346.code_ptr)] : local.iter_346.code_ptr :
      local.curr_347.code == "]"
        ? local.iter_346.tape[local.iter_346.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_346.code_ptr)] : local.iter_346.code_ptr
        : local.iter_346.code_ptr)

    steps_taken = 1 + local.iter_346.steps_taken
  }
}

locals {
  end_of_code_348 = try(local.iter_347.code_ptr >= length(var.code), true)

  curr_348 = local.end_of_code_348 ? null : {
    code = substr(var.code, local.iter_347.code_ptr, 1)
    input = substr(var.code, local.iter_347.code_ptr, 1) == "," ? substr(local.iter_347.input, 0, 1) : null
  }

  iter_348 = local.end_of_code_348 ? local.iter_347 : {
    input = (local.curr_348.code == ","
      ? substr(local.iter_347.input, 1, -1)
      : local.iter_347.input)

    output = (local.curr_348.code == "."
      ? "${local.iter_347.output}${jsondecode(format("\"\\u%04x\"", local.iter_347.tape[local.iter_347.tape_ptr]))}"
      : local.iter_347.output)
    
    tape = (
      local.curr_348.code == "+"
        ? [for i, b in local.iter_347.tape : (i == local.iter_347.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_348.code == "-"
        ? [for i, b in local.iter_347.tape : (i == local.iter_347.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_348.code == ","
        ? [for i, b in local.iter_347.tape : (i == local.iter_347.tape_ptr ? local.ascii_lookup[local.curr_348.input] : b)]
        : local.iter_347.tape)

    tape_ptr = (
      local.curr_348.code == "<"
        ? local.iter_347.tape_ptr == 0 ? length(local.iter_347.tape) - 1 : local.iter_347.tape_ptr - 1 :
      local.curr_348.code == ">"
        ? local.iter_347.tape_ptr == length(local.iter_347.tape) - 1 ? 0 : local.iter_347.tape_ptr + 1
        : local.iter_347.tape_ptr)

    code_ptr = 1 + (
      local.curr_348.code == "["
        ? local.iter_347.tape[local.iter_347.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_347.code_ptr)] : local.iter_347.code_ptr :
      local.curr_348.code == "]"
        ? local.iter_347.tape[local.iter_347.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_347.code_ptr)] : local.iter_347.code_ptr
        : local.iter_347.code_ptr)

    steps_taken = 1 + local.iter_347.steps_taken
  }
}

locals {
  end_of_code_349 = try(local.iter_348.code_ptr >= length(var.code), true)

  curr_349 = local.end_of_code_349 ? null : {
    code = substr(var.code, local.iter_348.code_ptr, 1)
    input = substr(var.code, local.iter_348.code_ptr, 1) == "," ? substr(local.iter_348.input, 0, 1) : null
  }

  iter_349 = local.end_of_code_349 ? local.iter_348 : {
    input = (local.curr_349.code == ","
      ? substr(local.iter_348.input, 1, -1)
      : local.iter_348.input)

    output = (local.curr_349.code == "."
      ? "${local.iter_348.output}${jsondecode(format("\"\\u%04x\"", local.iter_348.tape[local.iter_348.tape_ptr]))}"
      : local.iter_348.output)
    
    tape = (
      local.curr_349.code == "+"
        ? [for i, b in local.iter_348.tape : (i == local.iter_348.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_349.code == "-"
        ? [for i, b in local.iter_348.tape : (i == local.iter_348.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_349.code == ","
        ? [for i, b in local.iter_348.tape : (i == local.iter_348.tape_ptr ? local.ascii_lookup[local.curr_349.input] : b)]
        : local.iter_348.tape)

    tape_ptr = (
      local.curr_349.code == "<"
        ? local.iter_348.tape_ptr == 0 ? length(local.iter_348.tape) - 1 : local.iter_348.tape_ptr - 1 :
      local.curr_349.code == ">"
        ? local.iter_348.tape_ptr == length(local.iter_348.tape) - 1 ? 0 : local.iter_348.tape_ptr + 1
        : local.iter_348.tape_ptr)

    code_ptr = 1 + (
      local.curr_349.code == "["
        ? local.iter_348.tape[local.iter_348.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_348.code_ptr)] : local.iter_348.code_ptr :
      local.curr_349.code == "]"
        ? local.iter_348.tape[local.iter_348.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_348.code_ptr)] : local.iter_348.code_ptr
        : local.iter_348.code_ptr)

    steps_taken = 1 + local.iter_348.steps_taken
  }
}

locals {
  end_of_code_350 = try(local.iter_349.code_ptr >= length(var.code), true)

  curr_350 = local.end_of_code_350 ? null : {
    code = substr(var.code, local.iter_349.code_ptr, 1)
    input = substr(var.code, local.iter_349.code_ptr, 1) == "," ? substr(local.iter_349.input, 0, 1) : null
  }

  iter_350 = local.end_of_code_350 ? local.iter_349 : {
    input = (local.curr_350.code == ","
      ? substr(local.iter_349.input, 1, -1)
      : local.iter_349.input)

    output = (local.curr_350.code == "."
      ? "${local.iter_349.output}${jsondecode(format("\"\\u%04x\"", local.iter_349.tape[local.iter_349.tape_ptr]))}"
      : local.iter_349.output)
    
    tape = (
      local.curr_350.code == "+"
        ? [for i, b in local.iter_349.tape : (i == local.iter_349.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_350.code == "-"
        ? [for i, b in local.iter_349.tape : (i == local.iter_349.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_350.code == ","
        ? [for i, b in local.iter_349.tape : (i == local.iter_349.tape_ptr ? local.ascii_lookup[local.curr_350.input] : b)]
        : local.iter_349.tape)

    tape_ptr = (
      local.curr_350.code == "<"
        ? local.iter_349.tape_ptr == 0 ? length(local.iter_349.tape) - 1 : local.iter_349.tape_ptr - 1 :
      local.curr_350.code == ">"
        ? local.iter_349.tape_ptr == length(local.iter_349.tape) - 1 ? 0 : local.iter_349.tape_ptr + 1
        : local.iter_349.tape_ptr)

    code_ptr = 1 + (
      local.curr_350.code == "["
        ? local.iter_349.tape[local.iter_349.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_349.code_ptr)] : local.iter_349.code_ptr :
      local.curr_350.code == "]"
        ? local.iter_349.tape[local.iter_349.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_349.code_ptr)] : local.iter_349.code_ptr
        : local.iter_349.code_ptr)

    steps_taken = 1 + local.iter_349.steps_taken
  }
}

locals {
  end_of_code_351 = try(local.iter_350.code_ptr >= length(var.code), true)

  curr_351 = local.end_of_code_351 ? null : {
    code = substr(var.code, local.iter_350.code_ptr, 1)
    input = substr(var.code, local.iter_350.code_ptr, 1) == "," ? substr(local.iter_350.input, 0, 1) : null
  }

  iter_351 = local.end_of_code_351 ? local.iter_350 : {
    input = (local.curr_351.code == ","
      ? substr(local.iter_350.input, 1, -1)
      : local.iter_350.input)

    output = (local.curr_351.code == "."
      ? "${local.iter_350.output}${jsondecode(format("\"\\u%04x\"", local.iter_350.tape[local.iter_350.tape_ptr]))}"
      : local.iter_350.output)
    
    tape = (
      local.curr_351.code == "+"
        ? [for i, b in local.iter_350.tape : (i == local.iter_350.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_351.code == "-"
        ? [for i, b in local.iter_350.tape : (i == local.iter_350.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_351.code == ","
        ? [for i, b in local.iter_350.tape : (i == local.iter_350.tape_ptr ? local.ascii_lookup[local.curr_351.input] : b)]
        : local.iter_350.tape)

    tape_ptr = (
      local.curr_351.code == "<"
        ? local.iter_350.tape_ptr == 0 ? length(local.iter_350.tape) - 1 : local.iter_350.tape_ptr - 1 :
      local.curr_351.code == ">"
        ? local.iter_350.tape_ptr == length(local.iter_350.tape) - 1 ? 0 : local.iter_350.tape_ptr + 1
        : local.iter_350.tape_ptr)

    code_ptr = 1 + (
      local.curr_351.code == "["
        ? local.iter_350.tape[local.iter_350.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_350.code_ptr)] : local.iter_350.code_ptr :
      local.curr_351.code == "]"
        ? local.iter_350.tape[local.iter_350.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_350.code_ptr)] : local.iter_350.code_ptr
        : local.iter_350.code_ptr)

    steps_taken = 1 + local.iter_350.steps_taken
  }
}

locals {
  end_of_code_352 = try(local.iter_351.code_ptr >= length(var.code), true)

  curr_352 = local.end_of_code_352 ? null : {
    code = substr(var.code, local.iter_351.code_ptr, 1)
    input = substr(var.code, local.iter_351.code_ptr, 1) == "," ? substr(local.iter_351.input, 0, 1) : null
  }

  iter_352 = local.end_of_code_352 ? local.iter_351 : {
    input = (local.curr_352.code == ","
      ? substr(local.iter_351.input, 1, -1)
      : local.iter_351.input)

    output = (local.curr_352.code == "."
      ? "${local.iter_351.output}${jsondecode(format("\"\\u%04x\"", local.iter_351.tape[local.iter_351.tape_ptr]))}"
      : local.iter_351.output)
    
    tape = (
      local.curr_352.code == "+"
        ? [for i, b in local.iter_351.tape : (i == local.iter_351.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_352.code == "-"
        ? [for i, b in local.iter_351.tape : (i == local.iter_351.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_352.code == ","
        ? [for i, b in local.iter_351.tape : (i == local.iter_351.tape_ptr ? local.ascii_lookup[local.curr_352.input] : b)]
        : local.iter_351.tape)

    tape_ptr = (
      local.curr_352.code == "<"
        ? local.iter_351.tape_ptr == 0 ? length(local.iter_351.tape) - 1 : local.iter_351.tape_ptr - 1 :
      local.curr_352.code == ">"
        ? local.iter_351.tape_ptr == length(local.iter_351.tape) - 1 ? 0 : local.iter_351.tape_ptr + 1
        : local.iter_351.tape_ptr)

    code_ptr = 1 + (
      local.curr_352.code == "["
        ? local.iter_351.tape[local.iter_351.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_351.code_ptr)] : local.iter_351.code_ptr :
      local.curr_352.code == "]"
        ? local.iter_351.tape[local.iter_351.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_351.code_ptr)] : local.iter_351.code_ptr
        : local.iter_351.code_ptr)

    steps_taken = 1 + local.iter_351.steps_taken
  }
}

locals {
  end_of_code_353 = try(local.iter_352.code_ptr >= length(var.code), true)

  curr_353 = local.end_of_code_353 ? null : {
    code = substr(var.code, local.iter_352.code_ptr, 1)
    input = substr(var.code, local.iter_352.code_ptr, 1) == "," ? substr(local.iter_352.input, 0, 1) : null
  }

  iter_353 = local.end_of_code_353 ? local.iter_352 : {
    input = (local.curr_353.code == ","
      ? substr(local.iter_352.input, 1, -1)
      : local.iter_352.input)

    output = (local.curr_353.code == "."
      ? "${local.iter_352.output}${jsondecode(format("\"\\u%04x\"", local.iter_352.tape[local.iter_352.tape_ptr]))}"
      : local.iter_352.output)
    
    tape = (
      local.curr_353.code == "+"
        ? [for i, b in local.iter_352.tape : (i == local.iter_352.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_353.code == "-"
        ? [for i, b in local.iter_352.tape : (i == local.iter_352.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_353.code == ","
        ? [for i, b in local.iter_352.tape : (i == local.iter_352.tape_ptr ? local.ascii_lookup[local.curr_353.input] : b)]
        : local.iter_352.tape)

    tape_ptr = (
      local.curr_353.code == "<"
        ? local.iter_352.tape_ptr == 0 ? length(local.iter_352.tape) - 1 : local.iter_352.tape_ptr - 1 :
      local.curr_353.code == ">"
        ? local.iter_352.tape_ptr == length(local.iter_352.tape) - 1 ? 0 : local.iter_352.tape_ptr + 1
        : local.iter_352.tape_ptr)

    code_ptr = 1 + (
      local.curr_353.code == "["
        ? local.iter_352.tape[local.iter_352.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_352.code_ptr)] : local.iter_352.code_ptr :
      local.curr_353.code == "]"
        ? local.iter_352.tape[local.iter_352.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_352.code_ptr)] : local.iter_352.code_ptr
        : local.iter_352.code_ptr)

    steps_taken = 1 + local.iter_352.steps_taken
  }
}

locals {
  end_of_code_354 = try(local.iter_353.code_ptr >= length(var.code), true)

  curr_354 = local.end_of_code_354 ? null : {
    code = substr(var.code, local.iter_353.code_ptr, 1)
    input = substr(var.code, local.iter_353.code_ptr, 1) == "," ? substr(local.iter_353.input, 0, 1) : null
  }

  iter_354 = local.end_of_code_354 ? local.iter_353 : {
    input = (local.curr_354.code == ","
      ? substr(local.iter_353.input, 1, -1)
      : local.iter_353.input)

    output = (local.curr_354.code == "."
      ? "${local.iter_353.output}${jsondecode(format("\"\\u%04x\"", local.iter_353.tape[local.iter_353.tape_ptr]))}"
      : local.iter_353.output)
    
    tape = (
      local.curr_354.code == "+"
        ? [for i, b in local.iter_353.tape : (i == local.iter_353.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_354.code == "-"
        ? [for i, b in local.iter_353.tape : (i == local.iter_353.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_354.code == ","
        ? [for i, b in local.iter_353.tape : (i == local.iter_353.tape_ptr ? local.ascii_lookup[local.curr_354.input] : b)]
        : local.iter_353.tape)

    tape_ptr = (
      local.curr_354.code == "<"
        ? local.iter_353.tape_ptr == 0 ? length(local.iter_353.tape) - 1 : local.iter_353.tape_ptr - 1 :
      local.curr_354.code == ">"
        ? local.iter_353.tape_ptr == length(local.iter_353.tape) - 1 ? 0 : local.iter_353.tape_ptr + 1
        : local.iter_353.tape_ptr)

    code_ptr = 1 + (
      local.curr_354.code == "["
        ? local.iter_353.tape[local.iter_353.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_353.code_ptr)] : local.iter_353.code_ptr :
      local.curr_354.code == "]"
        ? local.iter_353.tape[local.iter_353.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_353.code_ptr)] : local.iter_353.code_ptr
        : local.iter_353.code_ptr)

    steps_taken = 1 + local.iter_353.steps_taken
  }
}

locals {
  end_of_code_355 = try(local.iter_354.code_ptr >= length(var.code), true)

  curr_355 = local.end_of_code_355 ? null : {
    code = substr(var.code, local.iter_354.code_ptr, 1)
    input = substr(var.code, local.iter_354.code_ptr, 1) == "," ? substr(local.iter_354.input, 0, 1) : null
  }

  iter_355 = local.end_of_code_355 ? local.iter_354 : {
    input = (local.curr_355.code == ","
      ? substr(local.iter_354.input, 1, -1)
      : local.iter_354.input)

    output = (local.curr_355.code == "."
      ? "${local.iter_354.output}${jsondecode(format("\"\\u%04x\"", local.iter_354.tape[local.iter_354.tape_ptr]))}"
      : local.iter_354.output)
    
    tape = (
      local.curr_355.code == "+"
        ? [for i, b in local.iter_354.tape : (i == local.iter_354.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_355.code == "-"
        ? [for i, b in local.iter_354.tape : (i == local.iter_354.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_355.code == ","
        ? [for i, b in local.iter_354.tape : (i == local.iter_354.tape_ptr ? local.ascii_lookup[local.curr_355.input] : b)]
        : local.iter_354.tape)

    tape_ptr = (
      local.curr_355.code == "<"
        ? local.iter_354.tape_ptr == 0 ? length(local.iter_354.tape) - 1 : local.iter_354.tape_ptr - 1 :
      local.curr_355.code == ">"
        ? local.iter_354.tape_ptr == length(local.iter_354.tape) - 1 ? 0 : local.iter_354.tape_ptr + 1
        : local.iter_354.tape_ptr)

    code_ptr = 1 + (
      local.curr_355.code == "["
        ? local.iter_354.tape[local.iter_354.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_354.code_ptr)] : local.iter_354.code_ptr :
      local.curr_355.code == "]"
        ? local.iter_354.tape[local.iter_354.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_354.code_ptr)] : local.iter_354.code_ptr
        : local.iter_354.code_ptr)

    steps_taken = 1 + local.iter_354.steps_taken
  }
}

locals {
  end_of_code_356 = try(local.iter_355.code_ptr >= length(var.code), true)

  curr_356 = local.end_of_code_356 ? null : {
    code = substr(var.code, local.iter_355.code_ptr, 1)
    input = substr(var.code, local.iter_355.code_ptr, 1) == "," ? substr(local.iter_355.input, 0, 1) : null
  }

  iter_356 = local.end_of_code_356 ? local.iter_355 : {
    input = (local.curr_356.code == ","
      ? substr(local.iter_355.input, 1, -1)
      : local.iter_355.input)

    output = (local.curr_356.code == "."
      ? "${local.iter_355.output}${jsondecode(format("\"\\u%04x\"", local.iter_355.tape[local.iter_355.tape_ptr]))}"
      : local.iter_355.output)
    
    tape = (
      local.curr_356.code == "+"
        ? [for i, b in local.iter_355.tape : (i == local.iter_355.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_356.code == "-"
        ? [for i, b in local.iter_355.tape : (i == local.iter_355.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_356.code == ","
        ? [for i, b in local.iter_355.tape : (i == local.iter_355.tape_ptr ? local.ascii_lookup[local.curr_356.input] : b)]
        : local.iter_355.tape)

    tape_ptr = (
      local.curr_356.code == "<"
        ? local.iter_355.tape_ptr == 0 ? length(local.iter_355.tape) - 1 : local.iter_355.tape_ptr - 1 :
      local.curr_356.code == ">"
        ? local.iter_355.tape_ptr == length(local.iter_355.tape) - 1 ? 0 : local.iter_355.tape_ptr + 1
        : local.iter_355.tape_ptr)

    code_ptr = 1 + (
      local.curr_356.code == "["
        ? local.iter_355.tape[local.iter_355.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_355.code_ptr)] : local.iter_355.code_ptr :
      local.curr_356.code == "]"
        ? local.iter_355.tape[local.iter_355.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_355.code_ptr)] : local.iter_355.code_ptr
        : local.iter_355.code_ptr)

    steps_taken = 1 + local.iter_355.steps_taken
  }
}

locals {
  end_of_code_357 = try(local.iter_356.code_ptr >= length(var.code), true)

  curr_357 = local.end_of_code_357 ? null : {
    code = substr(var.code, local.iter_356.code_ptr, 1)
    input = substr(var.code, local.iter_356.code_ptr, 1) == "," ? substr(local.iter_356.input, 0, 1) : null
  }

  iter_357 = local.end_of_code_357 ? local.iter_356 : {
    input = (local.curr_357.code == ","
      ? substr(local.iter_356.input, 1, -1)
      : local.iter_356.input)

    output = (local.curr_357.code == "."
      ? "${local.iter_356.output}${jsondecode(format("\"\\u%04x\"", local.iter_356.tape[local.iter_356.tape_ptr]))}"
      : local.iter_356.output)
    
    tape = (
      local.curr_357.code == "+"
        ? [for i, b in local.iter_356.tape : (i == local.iter_356.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_357.code == "-"
        ? [for i, b in local.iter_356.tape : (i == local.iter_356.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_357.code == ","
        ? [for i, b in local.iter_356.tape : (i == local.iter_356.tape_ptr ? local.ascii_lookup[local.curr_357.input] : b)]
        : local.iter_356.tape)

    tape_ptr = (
      local.curr_357.code == "<"
        ? local.iter_356.tape_ptr == 0 ? length(local.iter_356.tape) - 1 : local.iter_356.tape_ptr - 1 :
      local.curr_357.code == ">"
        ? local.iter_356.tape_ptr == length(local.iter_356.tape) - 1 ? 0 : local.iter_356.tape_ptr + 1
        : local.iter_356.tape_ptr)

    code_ptr = 1 + (
      local.curr_357.code == "["
        ? local.iter_356.tape[local.iter_356.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_356.code_ptr)] : local.iter_356.code_ptr :
      local.curr_357.code == "]"
        ? local.iter_356.tape[local.iter_356.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_356.code_ptr)] : local.iter_356.code_ptr
        : local.iter_356.code_ptr)

    steps_taken = 1 + local.iter_356.steps_taken
  }
}

locals {
  end_of_code_358 = try(local.iter_357.code_ptr >= length(var.code), true)

  curr_358 = local.end_of_code_358 ? null : {
    code = substr(var.code, local.iter_357.code_ptr, 1)
    input = substr(var.code, local.iter_357.code_ptr, 1) == "," ? substr(local.iter_357.input, 0, 1) : null
  }

  iter_358 = local.end_of_code_358 ? local.iter_357 : {
    input = (local.curr_358.code == ","
      ? substr(local.iter_357.input, 1, -1)
      : local.iter_357.input)

    output = (local.curr_358.code == "."
      ? "${local.iter_357.output}${jsondecode(format("\"\\u%04x\"", local.iter_357.tape[local.iter_357.tape_ptr]))}"
      : local.iter_357.output)
    
    tape = (
      local.curr_358.code == "+"
        ? [for i, b in local.iter_357.tape : (i == local.iter_357.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_358.code == "-"
        ? [for i, b in local.iter_357.tape : (i == local.iter_357.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_358.code == ","
        ? [for i, b in local.iter_357.tape : (i == local.iter_357.tape_ptr ? local.ascii_lookup[local.curr_358.input] : b)]
        : local.iter_357.tape)

    tape_ptr = (
      local.curr_358.code == "<"
        ? local.iter_357.tape_ptr == 0 ? length(local.iter_357.tape) - 1 : local.iter_357.tape_ptr - 1 :
      local.curr_358.code == ">"
        ? local.iter_357.tape_ptr == length(local.iter_357.tape) - 1 ? 0 : local.iter_357.tape_ptr + 1
        : local.iter_357.tape_ptr)

    code_ptr = 1 + (
      local.curr_358.code == "["
        ? local.iter_357.tape[local.iter_357.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_357.code_ptr)] : local.iter_357.code_ptr :
      local.curr_358.code == "]"
        ? local.iter_357.tape[local.iter_357.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_357.code_ptr)] : local.iter_357.code_ptr
        : local.iter_357.code_ptr)

    steps_taken = 1 + local.iter_357.steps_taken
  }
}

locals {
  end_of_code_359 = try(local.iter_358.code_ptr >= length(var.code), true)

  curr_359 = local.end_of_code_359 ? null : {
    code = substr(var.code, local.iter_358.code_ptr, 1)
    input = substr(var.code, local.iter_358.code_ptr, 1) == "," ? substr(local.iter_358.input, 0, 1) : null
  }

  iter_359 = local.end_of_code_359 ? local.iter_358 : {
    input = (local.curr_359.code == ","
      ? substr(local.iter_358.input, 1, -1)
      : local.iter_358.input)

    output = (local.curr_359.code == "."
      ? "${local.iter_358.output}${jsondecode(format("\"\\u%04x\"", local.iter_358.tape[local.iter_358.tape_ptr]))}"
      : local.iter_358.output)
    
    tape = (
      local.curr_359.code == "+"
        ? [for i, b in local.iter_358.tape : (i == local.iter_358.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_359.code == "-"
        ? [for i, b in local.iter_358.tape : (i == local.iter_358.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_359.code == ","
        ? [for i, b in local.iter_358.tape : (i == local.iter_358.tape_ptr ? local.ascii_lookup[local.curr_359.input] : b)]
        : local.iter_358.tape)

    tape_ptr = (
      local.curr_359.code == "<"
        ? local.iter_358.tape_ptr == 0 ? length(local.iter_358.tape) - 1 : local.iter_358.tape_ptr - 1 :
      local.curr_359.code == ">"
        ? local.iter_358.tape_ptr == length(local.iter_358.tape) - 1 ? 0 : local.iter_358.tape_ptr + 1
        : local.iter_358.tape_ptr)

    code_ptr = 1 + (
      local.curr_359.code == "["
        ? local.iter_358.tape[local.iter_358.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_358.code_ptr)] : local.iter_358.code_ptr :
      local.curr_359.code == "]"
        ? local.iter_358.tape[local.iter_358.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_358.code_ptr)] : local.iter_358.code_ptr
        : local.iter_358.code_ptr)

    steps_taken = 1 + local.iter_358.steps_taken
  }
}

locals {
  end_of_code_360 = try(local.iter_359.code_ptr >= length(var.code), true)

  curr_360 = local.end_of_code_360 ? null : {
    code = substr(var.code, local.iter_359.code_ptr, 1)
    input = substr(var.code, local.iter_359.code_ptr, 1) == "," ? substr(local.iter_359.input, 0, 1) : null
  }

  iter_360 = local.end_of_code_360 ? local.iter_359 : {
    input = (local.curr_360.code == ","
      ? substr(local.iter_359.input, 1, -1)
      : local.iter_359.input)

    output = (local.curr_360.code == "."
      ? "${local.iter_359.output}${jsondecode(format("\"\\u%04x\"", local.iter_359.tape[local.iter_359.tape_ptr]))}"
      : local.iter_359.output)
    
    tape = (
      local.curr_360.code == "+"
        ? [for i, b in local.iter_359.tape : (i == local.iter_359.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_360.code == "-"
        ? [for i, b in local.iter_359.tape : (i == local.iter_359.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_360.code == ","
        ? [for i, b in local.iter_359.tape : (i == local.iter_359.tape_ptr ? local.ascii_lookup[local.curr_360.input] : b)]
        : local.iter_359.tape)

    tape_ptr = (
      local.curr_360.code == "<"
        ? local.iter_359.tape_ptr == 0 ? length(local.iter_359.tape) - 1 : local.iter_359.tape_ptr - 1 :
      local.curr_360.code == ">"
        ? local.iter_359.tape_ptr == length(local.iter_359.tape) - 1 ? 0 : local.iter_359.tape_ptr + 1
        : local.iter_359.tape_ptr)

    code_ptr = 1 + (
      local.curr_360.code == "["
        ? local.iter_359.tape[local.iter_359.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_359.code_ptr)] : local.iter_359.code_ptr :
      local.curr_360.code == "]"
        ? local.iter_359.tape[local.iter_359.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_359.code_ptr)] : local.iter_359.code_ptr
        : local.iter_359.code_ptr)

    steps_taken = 1 + local.iter_359.steps_taken
  }
}

locals {
  end_of_code_361 = try(local.iter_360.code_ptr >= length(var.code), true)

  curr_361 = local.end_of_code_361 ? null : {
    code = substr(var.code, local.iter_360.code_ptr, 1)
    input = substr(var.code, local.iter_360.code_ptr, 1) == "," ? substr(local.iter_360.input, 0, 1) : null
  }

  iter_361 = local.end_of_code_361 ? local.iter_360 : {
    input = (local.curr_361.code == ","
      ? substr(local.iter_360.input, 1, -1)
      : local.iter_360.input)

    output = (local.curr_361.code == "."
      ? "${local.iter_360.output}${jsondecode(format("\"\\u%04x\"", local.iter_360.tape[local.iter_360.tape_ptr]))}"
      : local.iter_360.output)
    
    tape = (
      local.curr_361.code == "+"
        ? [for i, b in local.iter_360.tape : (i == local.iter_360.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_361.code == "-"
        ? [for i, b in local.iter_360.tape : (i == local.iter_360.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_361.code == ","
        ? [for i, b in local.iter_360.tape : (i == local.iter_360.tape_ptr ? local.ascii_lookup[local.curr_361.input] : b)]
        : local.iter_360.tape)

    tape_ptr = (
      local.curr_361.code == "<"
        ? local.iter_360.tape_ptr == 0 ? length(local.iter_360.tape) - 1 : local.iter_360.tape_ptr - 1 :
      local.curr_361.code == ">"
        ? local.iter_360.tape_ptr == length(local.iter_360.tape) - 1 ? 0 : local.iter_360.tape_ptr + 1
        : local.iter_360.tape_ptr)

    code_ptr = 1 + (
      local.curr_361.code == "["
        ? local.iter_360.tape[local.iter_360.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_360.code_ptr)] : local.iter_360.code_ptr :
      local.curr_361.code == "]"
        ? local.iter_360.tape[local.iter_360.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_360.code_ptr)] : local.iter_360.code_ptr
        : local.iter_360.code_ptr)

    steps_taken = 1 + local.iter_360.steps_taken
  }
}

locals {
  end_of_code_362 = try(local.iter_361.code_ptr >= length(var.code), true)

  curr_362 = local.end_of_code_362 ? null : {
    code = substr(var.code, local.iter_361.code_ptr, 1)
    input = substr(var.code, local.iter_361.code_ptr, 1) == "," ? substr(local.iter_361.input, 0, 1) : null
  }

  iter_362 = local.end_of_code_362 ? local.iter_361 : {
    input = (local.curr_362.code == ","
      ? substr(local.iter_361.input, 1, -1)
      : local.iter_361.input)

    output = (local.curr_362.code == "."
      ? "${local.iter_361.output}${jsondecode(format("\"\\u%04x\"", local.iter_361.tape[local.iter_361.tape_ptr]))}"
      : local.iter_361.output)
    
    tape = (
      local.curr_362.code == "+"
        ? [for i, b in local.iter_361.tape : (i == local.iter_361.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_362.code == "-"
        ? [for i, b in local.iter_361.tape : (i == local.iter_361.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_362.code == ","
        ? [for i, b in local.iter_361.tape : (i == local.iter_361.tape_ptr ? local.ascii_lookup[local.curr_362.input] : b)]
        : local.iter_361.tape)

    tape_ptr = (
      local.curr_362.code == "<"
        ? local.iter_361.tape_ptr == 0 ? length(local.iter_361.tape) - 1 : local.iter_361.tape_ptr - 1 :
      local.curr_362.code == ">"
        ? local.iter_361.tape_ptr == length(local.iter_361.tape) - 1 ? 0 : local.iter_361.tape_ptr + 1
        : local.iter_361.tape_ptr)

    code_ptr = 1 + (
      local.curr_362.code == "["
        ? local.iter_361.tape[local.iter_361.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_361.code_ptr)] : local.iter_361.code_ptr :
      local.curr_362.code == "]"
        ? local.iter_361.tape[local.iter_361.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_361.code_ptr)] : local.iter_361.code_ptr
        : local.iter_361.code_ptr)

    steps_taken = 1 + local.iter_361.steps_taken
  }
}

locals {
  end_of_code_363 = try(local.iter_362.code_ptr >= length(var.code), true)

  curr_363 = local.end_of_code_363 ? null : {
    code = substr(var.code, local.iter_362.code_ptr, 1)
    input = substr(var.code, local.iter_362.code_ptr, 1) == "," ? substr(local.iter_362.input, 0, 1) : null
  }

  iter_363 = local.end_of_code_363 ? local.iter_362 : {
    input = (local.curr_363.code == ","
      ? substr(local.iter_362.input, 1, -1)
      : local.iter_362.input)

    output = (local.curr_363.code == "."
      ? "${local.iter_362.output}${jsondecode(format("\"\\u%04x\"", local.iter_362.tape[local.iter_362.tape_ptr]))}"
      : local.iter_362.output)
    
    tape = (
      local.curr_363.code == "+"
        ? [for i, b in local.iter_362.tape : (i == local.iter_362.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_363.code == "-"
        ? [for i, b in local.iter_362.tape : (i == local.iter_362.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_363.code == ","
        ? [for i, b in local.iter_362.tape : (i == local.iter_362.tape_ptr ? local.ascii_lookup[local.curr_363.input] : b)]
        : local.iter_362.tape)

    tape_ptr = (
      local.curr_363.code == "<"
        ? local.iter_362.tape_ptr == 0 ? length(local.iter_362.tape) - 1 : local.iter_362.tape_ptr - 1 :
      local.curr_363.code == ">"
        ? local.iter_362.tape_ptr == length(local.iter_362.tape) - 1 ? 0 : local.iter_362.tape_ptr + 1
        : local.iter_362.tape_ptr)

    code_ptr = 1 + (
      local.curr_363.code == "["
        ? local.iter_362.tape[local.iter_362.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_362.code_ptr)] : local.iter_362.code_ptr :
      local.curr_363.code == "]"
        ? local.iter_362.tape[local.iter_362.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_362.code_ptr)] : local.iter_362.code_ptr
        : local.iter_362.code_ptr)

    steps_taken = 1 + local.iter_362.steps_taken
  }
}

locals {
  end_of_code_364 = try(local.iter_363.code_ptr >= length(var.code), true)

  curr_364 = local.end_of_code_364 ? null : {
    code = substr(var.code, local.iter_363.code_ptr, 1)
    input = substr(var.code, local.iter_363.code_ptr, 1) == "," ? substr(local.iter_363.input, 0, 1) : null
  }

  iter_364 = local.end_of_code_364 ? local.iter_363 : {
    input = (local.curr_364.code == ","
      ? substr(local.iter_363.input, 1, -1)
      : local.iter_363.input)

    output = (local.curr_364.code == "."
      ? "${local.iter_363.output}${jsondecode(format("\"\\u%04x\"", local.iter_363.tape[local.iter_363.tape_ptr]))}"
      : local.iter_363.output)
    
    tape = (
      local.curr_364.code == "+"
        ? [for i, b in local.iter_363.tape : (i == local.iter_363.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_364.code == "-"
        ? [for i, b in local.iter_363.tape : (i == local.iter_363.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_364.code == ","
        ? [for i, b in local.iter_363.tape : (i == local.iter_363.tape_ptr ? local.ascii_lookup[local.curr_364.input] : b)]
        : local.iter_363.tape)

    tape_ptr = (
      local.curr_364.code == "<"
        ? local.iter_363.tape_ptr == 0 ? length(local.iter_363.tape) - 1 : local.iter_363.tape_ptr - 1 :
      local.curr_364.code == ">"
        ? local.iter_363.tape_ptr == length(local.iter_363.tape) - 1 ? 0 : local.iter_363.tape_ptr + 1
        : local.iter_363.tape_ptr)

    code_ptr = 1 + (
      local.curr_364.code == "["
        ? local.iter_363.tape[local.iter_363.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_363.code_ptr)] : local.iter_363.code_ptr :
      local.curr_364.code == "]"
        ? local.iter_363.tape[local.iter_363.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_363.code_ptr)] : local.iter_363.code_ptr
        : local.iter_363.code_ptr)

    steps_taken = 1 + local.iter_363.steps_taken
  }
}

locals {
  end_of_code_365 = try(local.iter_364.code_ptr >= length(var.code), true)

  curr_365 = local.end_of_code_365 ? null : {
    code = substr(var.code, local.iter_364.code_ptr, 1)
    input = substr(var.code, local.iter_364.code_ptr, 1) == "," ? substr(local.iter_364.input, 0, 1) : null
  }

  iter_365 = local.end_of_code_365 ? local.iter_364 : {
    input = (local.curr_365.code == ","
      ? substr(local.iter_364.input, 1, -1)
      : local.iter_364.input)

    output = (local.curr_365.code == "."
      ? "${local.iter_364.output}${jsondecode(format("\"\\u%04x\"", local.iter_364.tape[local.iter_364.tape_ptr]))}"
      : local.iter_364.output)
    
    tape = (
      local.curr_365.code == "+"
        ? [for i, b in local.iter_364.tape : (i == local.iter_364.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_365.code == "-"
        ? [for i, b in local.iter_364.tape : (i == local.iter_364.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_365.code == ","
        ? [for i, b in local.iter_364.tape : (i == local.iter_364.tape_ptr ? local.ascii_lookup[local.curr_365.input] : b)]
        : local.iter_364.tape)

    tape_ptr = (
      local.curr_365.code == "<"
        ? local.iter_364.tape_ptr == 0 ? length(local.iter_364.tape) - 1 : local.iter_364.tape_ptr - 1 :
      local.curr_365.code == ">"
        ? local.iter_364.tape_ptr == length(local.iter_364.tape) - 1 ? 0 : local.iter_364.tape_ptr + 1
        : local.iter_364.tape_ptr)

    code_ptr = 1 + (
      local.curr_365.code == "["
        ? local.iter_364.tape[local.iter_364.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_364.code_ptr)] : local.iter_364.code_ptr :
      local.curr_365.code == "]"
        ? local.iter_364.tape[local.iter_364.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_364.code_ptr)] : local.iter_364.code_ptr
        : local.iter_364.code_ptr)

    steps_taken = 1 + local.iter_364.steps_taken
  }
}

locals {
  end_of_code_366 = try(local.iter_365.code_ptr >= length(var.code), true)

  curr_366 = local.end_of_code_366 ? null : {
    code = substr(var.code, local.iter_365.code_ptr, 1)
    input = substr(var.code, local.iter_365.code_ptr, 1) == "," ? substr(local.iter_365.input, 0, 1) : null
  }

  iter_366 = local.end_of_code_366 ? local.iter_365 : {
    input = (local.curr_366.code == ","
      ? substr(local.iter_365.input, 1, -1)
      : local.iter_365.input)

    output = (local.curr_366.code == "."
      ? "${local.iter_365.output}${jsondecode(format("\"\\u%04x\"", local.iter_365.tape[local.iter_365.tape_ptr]))}"
      : local.iter_365.output)
    
    tape = (
      local.curr_366.code == "+"
        ? [for i, b in local.iter_365.tape : (i == local.iter_365.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_366.code == "-"
        ? [for i, b in local.iter_365.tape : (i == local.iter_365.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_366.code == ","
        ? [for i, b in local.iter_365.tape : (i == local.iter_365.tape_ptr ? local.ascii_lookup[local.curr_366.input] : b)]
        : local.iter_365.tape)

    tape_ptr = (
      local.curr_366.code == "<"
        ? local.iter_365.tape_ptr == 0 ? length(local.iter_365.tape) - 1 : local.iter_365.tape_ptr - 1 :
      local.curr_366.code == ">"
        ? local.iter_365.tape_ptr == length(local.iter_365.tape) - 1 ? 0 : local.iter_365.tape_ptr + 1
        : local.iter_365.tape_ptr)

    code_ptr = 1 + (
      local.curr_366.code == "["
        ? local.iter_365.tape[local.iter_365.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_365.code_ptr)] : local.iter_365.code_ptr :
      local.curr_366.code == "]"
        ? local.iter_365.tape[local.iter_365.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_365.code_ptr)] : local.iter_365.code_ptr
        : local.iter_365.code_ptr)

    steps_taken = 1 + local.iter_365.steps_taken
  }
}

locals {
  end_of_code_367 = try(local.iter_366.code_ptr >= length(var.code), true)

  curr_367 = local.end_of_code_367 ? null : {
    code = substr(var.code, local.iter_366.code_ptr, 1)
    input = substr(var.code, local.iter_366.code_ptr, 1) == "," ? substr(local.iter_366.input, 0, 1) : null
  }

  iter_367 = local.end_of_code_367 ? local.iter_366 : {
    input = (local.curr_367.code == ","
      ? substr(local.iter_366.input, 1, -1)
      : local.iter_366.input)

    output = (local.curr_367.code == "."
      ? "${local.iter_366.output}${jsondecode(format("\"\\u%04x\"", local.iter_366.tape[local.iter_366.tape_ptr]))}"
      : local.iter_366.output)
    
    tape = (
      local.curr_367.code == "+"
        ? [for i, b in local.iter_366.tape : (i == local.iter_366.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_367.code == "-"
        ? [for i, b in local.iter_366.tape : (i == local.iter_366.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_367.code == ","
        ? [for i, b in local.iter_366.tape : (i == local.iter_366.tape_ptr ? local.ascii_lookup[local.curr_367.input] : b)]
        : local.iter_366.tape)

    tape_ptr = (
      local.curr_367.code == "<"
        ? local.iter_366.tape_ptr == 0 ? length(local.iter_366.tape) - 1 : local.iter_366.tape_ptr - 1 :
      local.curr_367.code == ">"
        ? local.iter_366.tape_ptr == length(local.iter_366.tape) - 1 ? 0 : local.iter_366.tape_ptr + 1
        : local.iter_366.tape_ptr)

    code_ptr = 1 + (
      local.curr_367.code == "["
        ? local.iter_366.tape[local.iter_366.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_366.code_ptr)] : local.iter_366.code_ptr :
      local.curr_367.code == "]"
        ? local.iter_366.tape[local.iter_366.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_366.code_ptr)] : local.iter_366.code_ptr
        : local.iter_366.code_ptr)

    steps_taken = 1 + local.iter_366.steps_taken
  }
}

locals {
  end_of_code_368 = try(local.iter_367.code_ptr >= length(var.code), true)

  curr_368 = local.end_of_code_368 ? null : {
    code = substr(var.code, local.iter_367.code_ptr, 1)
    input = substr(var.code, local.iter_367.code_ptr, 1) == "," ? substr(local.iter_367.input, 0, 1) : null
  }

  iter_368 = local.end_of_code_368 ? local.iter_367 : {
    input = (local.curr_368.code == ","
      ? substr(local.iter_367.input, 1, -1)
      : local.iter_367.input)

    output = (local.curr_368.code == "."
      ? "${local.iter_367.output}${jsondecode(format("\"\\u%04x\"", local.iter_367.tape[local.iter_367.tape_ptr]))}"
      : local.iter_367.output)
    
    tape = (
      local.curr_368.code == "+"
        ? [for i, b in local.iter_367.tape : (i == local.iter_367.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_368.code == "-"
        ? [for i, b in local.iter_367.tape : (i == local.iter_367.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_368.code == ","
        ? [for i, b in local.iter_367.tape : (i == local.iter_367.tape_ptr ? local.ascii_lookup[local.curr_368.input] : b)]
        : local.iter_367.tape)

    tape_ptr = (
      local.curr_368.code == "<"
        ? local.iter_367.tape_ptr == 0 ? length(local.iter_367.tape) - 1 : local.iter_367.tape_ptr - 1 :
      local.curr_368.code == ">"
        ? local.iter_367.tape_ptr == length(local.iter_367.tape) - 1 ? 0 : local.iter_367.tape_ptr + 1
        : local.iter_367.tape_ptr)

    code_ptr = 1 + (
      local.curr_368.code == "["
        ? local.iter_367.tape[local.iter_367.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_367.code_ptr)] : local.iter_367.code_ptr :
      local.curr_368.code == "]"
        ? local.iter_367.tape[local.iter_367.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_367.code_ptr)] : local.iter_367.code_ptr
        : local.iter_367.code_ptr)

    steps_taken = 1 + local.iter_367.steps_taken
  }
}

locals {
  end_of_code_369 = try(local.iter_368.code_ptr >= length(var.code), true)

  curr_369 = local.end_of_code_369 ? null : {
    code = substr(var.code, local.iter_368.code_ptr, 1)
    input = substr(var.code, local.iter_368.code_ptr, 1) == "," ? substr(local.iter_368.input, 0, 1) : null
  }

  iter_369 = local.end_of_code_369 ? local.iter_368 : {
    input = (local.curr_369.code == ","
      ? substr(local.iter_368.input, 1, -1)
      : local.iter_368.input)

    output = (local.curr_369.code == "."
      ? "${local.iter_368.output}${jsondecode(format("\"\\u%04x\"", local.iter_368.tape[local.iter_368.tape_ptr]))}"
      : local.iter_368.output)
    
    tape = (
      local.curr_369.code == "+"
        ? [for i, b in local.iter_368.tape : (i == local.iter_368.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_369.code == "-"
        ? [for i, b in local.iter_368.tape : (i == local.iter_368.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_369.code == ","
        ? [for i, b in local.iter_368.tape : (i == local.iter_368.tape_ptr ? local.ascii_lookup[local.curr_369.input] : b)]
        : local.iter_368.tape)

    tape_ptr = (
      local.curr_369.code == "<"
        ? local.iter_368.tape_ptr == 0 ? length(local.iter_368.tape) - 1 : local.iter_368.tape_ptr - 1 :
      local.curr_369.code == ">"
        ? local.iter_368.tape_ptr == length(local.iter_368.tape) - 1 ? 0 : local.iter_368.tape_ptr + 1
        : local.iter_368.tape_ptr)

    code_ptr = 1 + (
      local.curr_369.code == "["
        ? local.iter_368.tape[local.iter_368.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_368.code_ptr)] : local.iter_368.code_ptr :
      local.curr_369.code == "]"
        ? local.iter_368.tape[local.iter_368.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_368.code_ptr)] : local.iter_368.code_ptr
        : local.iter_368.code_ptr)

    steps_taken = 1 + local.iter_368.steps_taken
  }
}

locals {
  end_of_code_370 = try(local.iter_369.code_ptr >= length(var.code), true)

  curr_370 = local.end_of_code_370 ? null : {
    code = substr(var.code, local.iter_369.code_ptr, 1)
    input = substr(var.code, local.iter_369.code_ptr, 1) == "," ? substr(local.iter_369.input, 0, 1) : null
  }

  iter_370 = local.end_of_code_370 ? local.iter_369 : {
    input = (local.curr_370.code == ","
      ? substr(local.iter_369.input, 1, -1)
      : local.iter_369.input)

    output = (local.curr_370.code == "."
      ? "${local.iter_369.output}${jsondecode(format("\"\\u%04x\"", local.iter_369.tape[local.iter_369.tape_ptr]))}"
      : local.iter_369.output)
    
    tape = (
      local.curr_370.code == "+"
        ? [for i, b in local.iter_369.tape : (i == local.iter_369.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_370.code == "-"
        ? [for i, b in local.iter_369.tape : (i == local.iter_369.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_370.code == ","
        ? [for i, b in local.iter_369.tape : (i == local.iter_369.tape_ptr ? local.ascii_lookup[local.curr_370.input] : b)]
        : local.iter_369.tape)

    tape_ptr = (
      local.curr_370.code == "<"
        ? local.iter_369.tape_ptr == 0 ? length(local.iter_369.tape) - 1 : local.iter_369.tape_ptr - 1 :
      local.curr_370.code == ">"
        ? local.iter_369.tape_ptr == length(local.iter_369.tape) - 1 ? 0 : local.iter_369.tape_ptr + 1
        : local.iter_369.tape_ptr)

    code_ptr = 1 + (
      local.curr_370.code == "["
        ? local.iter_369.tape[local.iter_369.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_369.code_ptr)] : local.iter_369.code_ptr :
      local.curr_370.code == "]"
        ? local.iter_369.tape[local.iter_369.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_369.code_ptr)] : local.iter_369.code_ptr
        : local.iter_369.code_ptr)

    steps_taken = 1 + local.iter_369.steps_taken
  }
}

locals {
  end_of_code_371 = try(local.iter_370.code_ptr >= length(var.code), true)

  curr_371 = local.end_of_code_371 ? null : {
    code = substr(var.code, local.iter_370.code_ptr, 1)
    input = substr(var.code, local.iter_370.code_ptr, 1) == "," ? substr(local.iter_370.input, 0, 1) : null
  }

  iter_371 = local.end_of_code_371 ? local.iter_370 : {
    input = (local.curr_371.code == ","
      ? substr(local.iter_370.input, 1, -1)
      : local.iter_370.input)

    output = (local.curr_371.code == "."
      ? "${local.iter_370.output}${jsondecode(format("\"\\u%04x\"", local.iter_370.tape[local.iter_370.tape_ptr]))}"
      : local.iter_370.output)
    
    tape = (
      local.curr_371.code == "+"
        ? [for i, b in local.iter_370.tape : (i == local.iter_370.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_371.code == "-"
        ? [for i, b in local.iter_370.tape : (i == local.iter_370.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_371.code == ","
        ? [for i, b in local.iter_370.tape : (i == local.iter_370.tape_ptr ? local.ascii_lookup[local.curr_371.input] : b)]
        : local.iter_370.tape)

    tape_ptr = (
      local.curr_371.code == "<"
        ? local.iter_370.tape_ptr == 0 ? length(local.iter_370.tape) - 1 : local.iter_370.tape_ptr - 1 :
      local.curr_371.code == ">"
        ? local.iter_370.tape_ptr == length(local.iter_370.tape) - 1 ? 0 : local.iter_370.tape_ptr + 1
        : local.iter_370.tape_ptr)

    code_ptr = 1 + (
      local.curr_371.code == "["
        ? local.iter_370.tape[local.iter_370.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_370.code_ptr)] : local.iter_370.code_ptr :
      local.curr_371.code == "]"
        ? local.iter_370.tape[local.iter_370.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_370.code_ptr)] : local.iter_370.code_ptr
        : local.iter_370.code_ptr)

    steps_taken = 1 + local.iter_370.steps_taken
  }
}

locals {
  end_of_code_372 = try(local.iter_371.code_ptr >= length(var.code), true)

  curr_372 = local.end_of_code_372 ? null : {
    code = substr(var.code, local.iter_371.code_ptr, 1)
    input = substr(var.code, local.iter_371.code_ptr, 1) == "," ? substr(local.iter_371.input, 0, 1) : null
  }

  iter_372 = local.end_of_code_372 ? local.iter_371 : {
    input = (local.curr_372.code == ","
      ? substr(local.iter_371.input, 1, -1)
      : local.iter_371.input)

    output = (local.curr_372.code == "."
      ? "${local.iter_371.output}${jsondecode(format("\"\\u%04x\"", local.iter_371.tape[local.iter_371.tape_ptr]))}"
      : local.iter_371.output)
    
    tape = (
      local.curr_372.code == "+"
        ? [for i, b in local.iter_371.tape : (i == local.iter_371.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_372.code == "-"
        ? [for i, b in local.iter_371.tape : (i == local.iter_371.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_372.code == ","
        ? [for i, b in local.iter_371.tape : (i == local.iter_371.tape_ptr ? local.ascii_lookup[local.curr_372.input] : b)]
        : local.iter_371.tape)

    tape_ptr = (
      local.curr_372.code == "<"
        ? local.iter_371.tape_ptr == 0 ? length(local.iter_371.tape) - 1 : local.iter_371.tape_ptr - 1 :
      local.curr_372.code == ">"
        ? local.iter_371.tape_ptr == length(local.iter_371.tape) - 1 ? 0 : local.iter_371.tape_ptr + 1
        : local.iter_371.tape_ptr)

    code_ptr = 1 + (
      local.curr_372.code == "["
        ? local.iter_371.tape[local.iter_371.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_371.code_ptr)] : local.iter_371.code_ptr :
      local.curr_372.code == "]"
        ? local.iter_371.tape[local.iter_371.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_371.code_ptr)] : local.iter_371.code_ptr
        : local.iter_371.code_ptr)

    steps_taken = 1 + local.iter_371.steps_taken
  }
}

locals {
  end_of_code_373 = try(local.iter_372.code_ptr >= length(var.code), true)

  curr_373 = local.end_of_code_373 ? null : {
    code = substr(var.code, local.iter_372.code_ptr, 1)
    input = substr(var.code, local.iter_372.code_ptr, 1) == "," ? substr(local.iter_372.input, 0, 1) : null
  }

  iter_373 = local.end_of_code_373 ? local.iter_372 : {
    input = (local.curr_373.code == ","
      ? substr(local.iter_372.input, 1, -1)
      : local.iter_372.input)

    output = (local.curr_373.code == "."
      ? "${local.iter_372.output}${jsondecode(format("\"\\u%04x\"", local.iter_372.tape[local.iter_372.tape_ptr]))}"
      : local.iter_372.output)
    
    tape = (
      local.curr_373.code == "+"
        ? [for i, b in local.iter_372.tape : (i == local.iter_372.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_373.code == "-"
        ? [for i, b in local.iter_372.tape : (i == local.iter_372.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_373.code == ","
        ? [for i, b in local.iter_372.tape : (i == local.iter_372.tape_ptr ? local.ascii_lookup[local.curr_373.input] : b)]
        : local.iter_372.tape)

    tape_ptr = (
      local.curr_373.code == "<"
        ? local.iter_372.tape_ptr == 0 ? length(local.iter_372.tape) - 1 : local.iter_372.tape_ptr - 1 :
      local.curr_373.code == ">"
        ? local.iter_372.tape_ptr == length(local.iter_372.tape) - 1 ? 0 : local.iter_372.tape_ptr + 1
        : local.iter_372.tape_ptr)

    code_ptr = 1 + (
      local.curr_373.code == "["
        ? local.iter_372.tape[local.iter_372.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_372.code_ptr)] : local.iter_372.code_ptr :
      local.curr_373.code == "]"
        ? local.iter_372.tape[local.iter_372.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_372.code_ptr)] : local.iter_372.code_ptr
        : local.iter_372.code_ptr)

    steps_taken = 1 + local.iter_372.steps_taken
  }
}

locals {
  end_of_code_374 = try(local.iter_373.code_ptr >= length(var.code), true)

  curr_374 = local.end_of_code_374 ? null : {
    code = substr(var.code, local.iter_373.code_ptr, 1)
    input = substr(var.code, local.iter_373.code_ptr, 1) == "," ? substr(local.iter_373.input, 0, 1) : null
  }

  iter_374 = local.end_of_code_374 ? local.iter_373 : {
    input = (local.curr_374.code == ","
      ? substr(local.iter_373.input, 1, -1)
      : local.iter_373.input)

    output = (local.curr_374.code == "."
      ? "${local.iter_373.output}${jsondecode(format("\"\\u%04x\"", local.iter_373.tape[local.iter_373.tape_ptr]))}"
      : local.iter_373.output)
    
    tape = (
      local.curr_374.code == "+"
        ? [for i, b in local.iter_373.tape : (i == local.iter_373.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_374.code == "-"
        ? [for i, b in local.iter_373.tape : (i == local.iter_373.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_374.code == ","
        ? [for i, b in local.iter_373.tape : (i == local.iter_373.tape_ptr ? local.ascii_lookup[local.curr_374.input] : b)]
        : local.iter_373.tape)

    tape_ptr = (
      local.curr_374.code == "<"
        ? local.iter_373.tape_ptr == 0 ? length(local.iter_373.tape) - 1 : local.iter_373.tape_ptr - 1 :
      local.curr_374.code == ">"
        ? local.iter_373.tape_ptr == length(local.iter_373.tape) - 1 ? 0 : local.iter_373.tape_ptr + 1
        : local.iter_373.tape_ptr)

    code_ptr = 1 + (
      local.curr_374.code == "["
        ? local.iter_373.tape[local.iter_373.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_373.code_ptr)] : local.iter_373.code_ptr :
      local.curr_374.code == "]"
        ? local.iter_373.tape[local.iter_373.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_373.code_ptr)] : local.iter_373.code_ptr
        : local.iter_373.code_ptr)

    steps_taken = 1 + local.iter_373.steps_taken
  }
}

locals {
  end_of_code_375 = try(local.iter_374.code_ptr >= length(var.code), true)

  curr_375 = local.end_of_code_375 ? null : {
    code = substr(var.code, local.iter_374.code_ptr, 1)
    input = substr(var.code, local.iter_374.code_ptr, 1) == "," ? substr(local.iter_374.input, 0, 1) : null
  }

  iter_375 = local.end_of_code_375 ? local.iter_374 : {
    input = (local.curr_375.code == ","
      ? substr(local.iter_374.input, 1, -1)
      : local.iter_374.input)

    output = (local.curr_375.code == "."
      ? "${local.iter_374.output}${jsondecode(format("\"\\u%04x\"", local.iter_374.tape[local.iter_374.tape_ptr]))}"
      : local.iter_374.output)
    
    tape = (
      local.curr_375.code == "+"
        ? [for i, b in local.iter_374.tape : (i == local.iter_374.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_375.code == "-"
        ? [for i, b in local.iter_374.tape : (i == local.iter_374.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_375.code == ","
        ? [for i, b in local.iter_374.tape : (i == local.iter_374.tape_ptr ? local.ascii_lookup[local.curr_375.input] : b)]
        : local.iter_374.tape)

    tape_ptr = (
      local.curr_375.code == "<"
        ? local.iter_374.tape_ptr == 0 ? length(local.iter_374.tape) - 1 : local.iter_374.tape_ptr - 1 :
      local.curr_375.code == ">"
        ? local.iter_374.tape_ptr == length(local.iter_374.tape) - 1 ? 0 : local.iter_374.tape_ptr + 1
        : local.iter_374.tape_ptr)

    code_ptr = 1 + (
      local.curr_375.code == "["
        ? local.iter_374.tape[local.iter_374.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_374.code_ptr)] : local.iter_374.code_ptr :
      local.curr_375.code == "]"
        ? local.iter_374.tape[local.iter_374.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_374.code_ptr)] : local.iter_374.code_ptr
        : local.iter_374.code_ptr)

    steps_taken = 1 + local.iter_374.steps_taken
  }
}

locals {
  end_of_code_376 = try(local.iter_375.code_ptr >= length(var.code), true)

  curr_376 = local.end_of_code_376 ? null : {
    code = substr(var.code, local.iter_375.code_ptr, 1)
    input = substr(var.code, local.iter_375.code_ptr, 1) == "," ? substr(local.iter_375.input, 0, 1) : null
  }

  iter_376 = local.end_of_code_376 ? local.iter_375 : {
    input = (local.curr_376.code == ","
      ? substr(local.iter_375.input, 1, -1)
      : local.iter_375.input)

    output = (local.curr_376.code == "."
      ? "${local.iter_375.output}${jsondecode(format("\"\\u%04x\"", local.iter_375.tape[local.iter_375.tape_ptr]))}"
      : local.iter_375.output)
    
    tape = (
      local.curr_376.code == "+"
        ? [for i, b in local.iter_375.tape : (i == local.iter_375.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_376.code == "-"
        ? [for i, b in local.iter_375.tape : (i == local.iter_375.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_376.code == ","
        ? [for i, b in local.iter_375.tape : (i == local.iter_375.tape_ptr ? local.ascii_lookup[local.curr_376.input] : b)]
        : local.iter_375.tape)

    tape_ptr = (
      local.curr_376.code == "<"
        ? local.iter_375.tape_ptr == 0 ? length(local.iter_375.tape) - 1 : local.iter_375.tape_ptr - 1 :
      local.curr_376.code == ">"
        ? local.iter_375.tape_ptr == length(local.iter_375.tape) - 1 ? 0 : local.iter_375.tape_ptr + 1
        : local.iter_375.tape_ptr)

    code_ptr = 1 + (
      local.curr_376.code == "["
        ? local.iter_375.tape[local.iter_375.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_375.code_ptr)] : local.iter_375.code_ptr :
      local.curr_376.code == "]"
        ? local.iter_375.tape[local.iter_375.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_375.code_ptr)] : local.iter_375.code_ptr
        : local.iter_375.code_ptr)

    steps_taken = 1 + local.iter_375.steps_taken
  }
}

locals {
  end_of_code_377 = try(local.iter_376.code_ptr >= length(var.code), true)

  curr_377 = local.end_of_code_377 ? null : {
    code = substr(var.code, local.iter_376.code_ptr, 1)
    input = substr(var.code, local.iter_376.code_ptr, 1) == "," ? substr(local.iter_376.input, 0, 1) : null
  }

  iter_377 = local.end_of_code_377 ? local.iter_376 : {
    input = (local.curr_377.code == ","
      ? substr(local.iter_376.input, 1, -1)
      : local.iter_376.input)

    output = (local.curr_377.code == "."
      ? "${local.iter_376.output}${jsondecode(format("\"\\u%04x\"", local.iter_376.tape[local.iter_376.tape_ptr]))}"
      : local.iter_376.output)
    
    tape = (
      local.curr_377.code == "+"
        ? [for i, b in local.iter_376.tape : (i == local.iter_376.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_377.code == "-"
        ? [for i, b in local.iter_376.tape : (i == local.iter_376.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_377.code == ","
        ? [for i, b in local.iter_376.tape : (i == local.iter_376.tape_ptr ? local.ascii_lookup[local.curr_377.input] : b)]
        : local.iter_376.tape)

    tape_ptr = (
      local.curr_377.code == "<"
        ? local.iter_376.tape_ptr == 0 ? length(local.iter_376.tape) - 1 : local.iter_376.tape_ptr - 1 :
      local.curr_377.code == ">"
        ? local.iter_376.tape_ptr == length(local.iter_376.tape) - 1 ? 0 : local.iter_376.tape_ptr + 1
        : local.iter_376.tape_ptr)

    code_ptr = 1 + (
      local.curr_377.code == "["
        ? local.iter_376.tape[local.iter_376.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_376.code_ptr)] : local.iter_376.code_ptr :
      local.curr_377.code == "]"
        ? local.iter_376.tape[local.iter_376.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_376.code_ptr)] : local.iter_376.code_ptr
        : local.iter_376.code_ptr)

    steps_taken = 1 + local.iter_376.steps_taken
  }
}

locals {
  end_of_code_378 = try(local.iter_377.code_ptr >= length(var.code), true)

  curr_378 = local.end_of_code_378 ? null : {
    code = substr(var.code, local.iter_377.code_ptr, 1)
    input = substr(var.code, local.iter_377.code_ptr, 1) == "," ? substr(local.iter_377.input, 0, 1) : null
  }

  iter_378 = local.end_of_code_378 ? local.iter_377 : {
    input = (local.curr_378.code == ","
      ? substr(local.iter_377.input, 1, -1)
      : local.iter_377.input)

    output = (local.curr_378.code == "."
      ? "${local.iter_377.output}${jsondecode(format("\"\\u%04x\"", local.iter_377.tape[local.iter_377.tape_ptr]))}"
      : local.iter_377.output)
    
    tape = (
      local.curr_378.code == "+"
        ? [for i, b in local.iter_377.tape : (i == local.iter_377.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_378.code == "-"
        ? [for i, b in local.iter_377.tape : (i == local.iter_377.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_378.code == ","
        ? [for i, b in local.iter_377.tape : (i == local.iter_377.tape_ptr ? local.ascii_lookup[local.curr_378.input] : b)]
        : local.iter_377.tape)

    tape_ptr = (
      local.curr_378.code == "<"
        ? local.iter_377.tape_ptr == 0 ? length(local.iter_377.tape) - 1 : local.iter_377.tape_ptr - 1 :
      local.curr_378.code == ">"
        ? local.iter_377.tape_ptr == length(local.iter_377.tape) - 1 ? 0 : local.iter_377.tape_ptr + 1
        : local.iter_377.tape_ptr)

    code_ptr = 1 + (
      local.curr_378.code == "["
        ? local.iter_377.tape[local.iter_377.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_377.code_ptr)] : local.iter_377.code_ptr :
      local.curr_378.code == "]"
        ? local.iter_377.tape[local.iter_377.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_377.code_ptr)] : local.iter_377.code_ptr
        : local.iter_377.code_ptr)

    steps_taken = 1 + local.iter_377.steps_taken
  }
}

locals {
  end_of_code_379 = try(local.iter_378.code_ptr >= length(var.code), true)

  curr_379 = local.end_of_code_379 ? null : {
    code = substr(var.code, local.iter_378.code_ptr, 1)
    input = substr(var.code, local.iter_378.code_ptr, 1) == "," ? substr(local.iter_378.input, 0, 1) : null
  }

  iter_379 = local.end_of_code_379 ? local.iter_378 : {
    input = (local.curr_379.code == ","
      ? substr(local.iter_378.input, 1, -1)
      : local.iter_378.input)

    output = (local.curr_379.code == "."
      ? "${local.iter_378.output}${jsondecode(format("\"\\u%04x\"", local.iter_378.tape[local.iter_378.tape_ptr]))}"
      : local.iter_378.output)
    
    tape = (
      local.curr_379.code == "+"
        ? [for i, b in local.iter_378.tape : (i == local.iter_378.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_379.code == "-"
        ? [for i, b in local.iter_378.tape : (i == local.iter_378.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_379.code == ","
        ? [for i, b in local.iter_378.tape : (i == local.iter_378.tape_ptr ? local.ascii_lookup[local.curr_379.input] : b)]
        : local.iter_378.tape)

    tape_ptr = (
      local.curr_379.code == "<"
        ? local.iter_378.tape_ptr == 0 ? length(local.iter_378.tape) - 1 : local.iter_378.tape_ptr - 1 :
      local.curr_379.code == ">"
        ? local.iter_378.tape_ptr == length(local.iter_378.tape) - 1 ? 0 : local.iter_378.tape_ptr + 1
        : local.iter_378.tape_ptr)

    code_ptr = 1 + (
      local.curr_379.code == "["
        ? local.iter_378.tape[local.iter_378.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_378.code_ptr)] : local.iter_378.code_ptr :
      local.curr_379.code == "]"
        ? local.iter_378.tape[local.iter_378.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_378.code_ptr)] : local.iter_378.code_ptr
        : local.iter_378.code_ptr)

    steps_taken = 1 + local.iter_378.steps_taken
  }
}

locals {
  end_of_code_380 = try(local.iter_379.code_ptr >= length(var.code), true)

  curr_380 = local.end_of_code_380 ? null : {
    code = substr(var.code, local.iter_379.code_ptr, 1)
    input = substr(var.code, local.iter_379.code_ptr, 1) == "," ? substr(local.iter_379.input, 0, 1) : null
  }

  iter_380 = local.end_of_code_380 ? local.iter_379 : {
    input = (local.curr_380.code == ","
      ? substr(local.iter_379.input, 1, -1)
      : local.iter_379.input)

    output = (local.curr_380.code == "."
      ? "${local.iter_379.output}${jsondecode(format("\"\\u%04x\"", local.iter_379.tape[local.iter_379.tape_ptr]))}"
      : local.iter_379.output)
    
    tape = (
      local.curr_380.code == "+"
        ? [for i, b in local.iter_379.tape : (i == local.iter_379.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_380.code == "-"
        ? [for i, b in local.iter_379.tape : (i == local.iter_379.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_380.code == ","
        ? [for i, b in local.iter_379.tape : (i == local.iter_379.tape_ptr ? local.ascii_lookup[local.curr_380.input] : b)]
        : local.iter_379.tape)

    tape_ptr = (
      local.curr_380.code == "<"
        ? local.iter_379.tape_ptr == 0 ? length(local.iter_379.tape) - 1 : local.iter_379.tape_ptr - 1 :
      local.curr_380.code == ">"
        ? local.iter_379.tape_ptr == length(local.iter_379.tape) - 1 ? 0 : local.iter_379.tape_ptr + 1
        : local.iter_379.tape_ptr)

    code_ptr = 1 + (
      local.curr_380.code == "["
        ? local.iter_379.tape[local.iter_379.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_379.code_ptr)] : local.iter_379.code_ptr :
      local.curr_380.code == "]"
        ? local.iter_379.tape[local.iter_379.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_379.code_ptr)] : local.iter_379.code_ptr
        : local.iter_379.code_ptr)

    steps_taken = 1 + local.iter_379.steps_taken
  }
}

locals {
  end_of_code_381 = try(local.iter_380.code_ptr >= length(var.code), true)

  curr_381 = local.end_of_code_381 ? null : {
    code = substr(var.code, local.iter_380.code_ptr, 1)
    input = substr(var.code, local.iter_380.code_ptr, 1) == "," ? substr(local.iter_380.input, 0, 1) : null
  }

  iter_381 = local.end_of_code_381 ? local.iter_380 : {
    input = (local.curr_381.code == ","
      ? substr(local.iter_380.input, 1, -1)
      : local.iter_380.input)

    output = (local.curr_381.code == "."
      ? "${local.iter_380.output}${jsondecode(format("\"\\u%04x\"", local.iter_380.tape[local.iter_380.tape_ptr]))}"
      : local.iter_380.output)
    
    tape = (
      local.curr_381.code == "+"
        ? [for i, b in local.iter_380.tape : (i == local.iter_380.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_381.code == "-"
        ? [for i, b in local.iter_380.tape : (i == local.iter_380.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_381.code == ","
        ? [for i, b in local.iter_380.tape : (i == local.iter_380.tape_ptr ? local.ascii_lookup[local.curr_381.input] : b)]
        : local.iter_380.tape)

    tape_ptr = (
      local.curr_381.code == "<"
        ? local.iter_380.tape_ptr == 0 ? length(local.iter_380.tape) - 1 : local.iter_380.tape_ptr - 1 :
      local.curr_381.code == ">"
        ? local.iter_380.tape_ptr == length(local.iter_380.tape) - 1 ? 0 : local.iter_380.tape_ptr + 1
        : local.iter_380.tape_ptr)

    code_ptr = 1 + (
      local.curr_381.code == "["
        ? local.iter_380.tape[local.iter_380.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_380.code_ptr)] : local.iter_380.code_ptr :
      local.curr_381.code == "]"
        ? local.iter_380.tape[local.iter_380.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_380.code_ptr)] : local.iter_380.code_ptr
        : local.iter_380.code_ptr)

    steps_taken = 1 + local.iter_380.steps_taken
  }
}

locals {
  end_of_code_382 = try(local.iter_381.code_ptr >= length(var.code), true)

  curr_382 = local.end_of_code_382 ? null : {
    code = substr(var.code, local.iter_381.code_ptr, 1)
    input = substr(var.code, local.iter_381.code_ptr, 1) == "," ? substr(local.iter_381.input, 0, 1) : null
  }

  iter_382 = local.end_of_code_382 ? local.iter_381 : {
    input = (local.curr_382.code == ","
      ? substr(local.iter_381.input, 1, -1)
      : local.iter_381.input)

    output = (local.curr_382.code == "."
      ? "${local.iter_381.output}${jsondecode(format("\"\\u%04x\"", local.iter_381.tape[local.iter_381.tape_ptr]))}"
      : local.iter_381.output)
    
    tape = (
      local.curr_382.code == "+"
        ? [for i, b in local.iter_381.tape : (i == local.iter_381.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_382.code == "-"
        ? [for i, b in local.iter_381.tape : (i == local.iter_381.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_382.code == ","
        ? [for i, b in local.iter_381.tape : (i == local.iter_381.tape_ptr ? local.ascii_lookup[local.curr_382.input] : b)]
        : local.iter_381.tape)

    tape_ptr = (
      local.curr_382.code == "<"
        ? local.iter_381.tape_ptr == 0 ? length(local.iter_381.tape) - 1 : local.iter_381.tape_ptr - 1 :
      local.curr_382.code == ">"
        ? local.iter_381.tape_ptr == length(local.iter_381.tape) - 1 ? 0 : local.iter_381.tape_ptr + 1
        : local.iter_381.tape_ptr)

    code_ptr = 1 + (
      local.curr_382.code == "["
        ? local.iter_381.tape[local.iter_381.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_381.code_ptr)] : local.iter_381.code_ptr :
      local.curr_382.code == "]"
        ? local.iter_381.tape[local.iter_381.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_381.code_ptr)] : local.iter_381.code_ptr
        : local.iter_381.code_ptr)

    steps_taken = 1 + local.iter_381.steps_taken
  }
}

locals {
  end_of_code_383 = try(local.iter_382.code_ptr >= length(var.code), true)

  curr_383 = local.end_of_code_383 ? null : {
    code = substr(var.code, local.iter_382.code_ptr, 1)
    input = substr(var.code, local.iter_382.code_ptr, 1) == "," ? substr(local.iter_382.input, 0, 1) : null
  }

  iter_383 = local.end_of_code_383 ? local.iter_382 : {
    input = (local.curr_383.code == ","
      ? substr(local.iter_382.input, 1, -1)
      : local.iter_382.input)

    output = (local.curr_383.code == "."
      ? "${local.iter_382.output}${jsondecode(format("\"\\u%04x\"", local.iter_382.tape[local.iter_382.tape_ptr]))}"
      : local.iter_382.output)
    
    tape = (
      local.curr_383.code == "+"
        ? [for i, b in local.iter_382.tape : (i == local.iter_382.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_383.code == "-"
        ? [for i, b in local.iter_382.tape : (i == local.iter_382.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_383.code == ","
        ? [for i, b in local.iter_382.tape : (i == local.iter_382.tape_ptr ? local.ascii_lookup[local.curr_383.input] : b)]
        : local.iter_382.tape)

    tape_ptr = (
      local.curr_383.code == "<"
        ? local.iter_382.tape_ptr == 0 ? length(local.iter_382.tape) - 1 : local.iter_382.tape_ptr - 1 :
      local.curr_383.code == ">"
        ? local.iter_382.tape_ptr == length(local.iter_382.tape) - 1 ? 0 : local.iter_382.tape_ptr + 1
        : local.iter_382.tape_ptr)

    code_ptr = 1 + (
      local.curr_383.code == "["
        ? local.iter_382.tape[local.iter_382.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_382.code_ptr)] : local.iter_382.code_ptr :
      local.curr_383.code == "]"
        ? local.iter_382.tape[local.iter_382.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_382.code_ptr)] : local.iter_382.code_ptr
        : local.iter_382.code_ptr)

    steps_taken = 1 + local.iter_382.steps_taken
  }
}

locals {
  end_of_code_384 = try(local.iter_383.code_ptr >= length(var.code), true)

  curr_384 = local.end_of_code_384 ? null : {
    code = substr(var.code, local.iter_383.code_ptr, 1)
    input = substr(var.code, local.iter_383.code_ptr, 1) == "," ? substr(local.iter_383.input, 0, 1) : null
  }

  iter_384 = local.end_of_code_384 ? local.iter_383 : {
    input = (local.curr_384.code == ","
      ? substr(local.iter_383.input, 1, -1)
      : local.iter_383.input)

    output = (local.curr_384.code == "."
      ? "${local.iter_383.output}${jsondecode(format("\"\\u%04x\"", local.iter_383.tape[local.iter_383.tape_ptr]))}"
      : local.iter_383.output)
    
    tape = (
      local.curr_384.code == "+"
        ? [for i, b in local.iter_383.tape : (i == local.iter_383.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_384.code == "-"
        ? [for i, b in local.iter_383.tape : (i == local.iter_383.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_384.code == ","
        ? [for i, b in local.iter_383.tape : (i == local.iter_383.tape_ptr ? local.ascii_lookup[local.curr_384.input] : b)]
        : local.iter_383.tape)

    tape_ptr = (
      local.curr_384.code == "<"
        ? local.iter_383.tape_ptr == 0 ? length(local.iter_383.tape) - 1 : local.iter_383.tape_ptr - 1 :
      local.curr_384.code == ">"
        ? local.iter_383.tape_ptr == length(local.iter_383.tape) - 1 ? 0 : local.iter_383.tape_ptr + 1
        : local.iter_383.tape_ptr)

    code_ptr = 1 + (
      local.curr_384.code == "["
        ? local.iter_383.tape[local.iter_383.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_383.code_ptr)] : local.iter_383.code_ptr :
      local.curr_384.code == "]"
        ? local.iter_383.tape[local.iter_383.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_383.code_ptr)] : local.iter_383.code_ptr
        : local.iter_383.code_ptr)

    steps_taken = 1 + local.iter_383.steps_taken
  }
}

locals {
  end_of_code_385 = try(local.iter_384.code_ptr >= length(var.code), true)

  curr_385 = local.end_of_code_385 ? null : {
    code = substr(var.code, local.iter_384.code_ptr, 1)
    input = substr(var.code, local.iter_384.code_ptr, 1) == "," ? substr(local.iter_384.input, 0, 1) : null
  }

  iter_385 = local.end_of_code_385 ? local.iter_384 : {
    input = (local.curr_385.code == ","
      ? substr(local.iter_384.input, 1, -1)
      : local.iter_384.input)

    output = (local.curr_385.code == "."
      ? "${local.iter_384.output}${jsondecode(format("\"\\u%04x\"", local.iter_384.tape[local.iter_384.tape_ptr]))}"
      : local.iter_384.output)
    
    tape = (
      local.curr_385.code == "+"
        ? [for i, b in local.iter_384.tape : (i == local.iter_384.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_385.code == "-"
        ? [for i, b in local.iter_384.tape : (i == local.iter_384.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_385.code == ","
        ? [for i, b in local.iter_384.tape : (i == local.iter_384.tape_ptr ? local.ascii_lookup[local.curr_385.input] : b)]
        : local.iter_384.tape)

    tape_ptr = (
      local.curr_385.code == "<"
        ? local.iter_384.tape_ptr == 0 ? length(local.iter_384.tape) - 1 : local.iter_384.tape_ptr - 1 :
      local.curr_385.code == ">"
        ? local.iter_384.tape_ptr == length(local.iter_384.tape) - 1 ? 0 : local.iter_384.tape_ptr + 1
        : local.iter_384.tape_ptr)

    code_ptr = 1 + (
      local.curr_385.code == "["
        ? local.iter_384.tape[local.iter_384.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_384.code_ptr)] : local.iter_384.code_ptr :
      local.curr_385.code == "]"
        ? local.iter_384.tape[local.iter_384.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_384.code_ptr)] : local.iter_384.code_ptr
        : local.iter_384.code_ptr)

    steps_taken = 1 + local.iter_384.steps_taken
  }
}

locals {
  end_of_code_386 = try(local.iter_385.code_ptr >= length(var.code), true)

  curr_386 = local.end_of_code_386 ? null : {
    code = substr(var.code, local.iter_385.code_ptr, 1)
    input = substr(var.code, local.iter_385.code_ptr, 1) == "," ? substr(local.iter_385.input, 0, 1) : null
  }

  iter_386 = local.end_of_code_386 ? local.iter_385 : {
    input = (local.curr_386.code == ","
      ? substr(local.iter_385.input, 1, -1)
      : local.iter_385.input)

    output = (local.curr_386.code == "."
      ? "${local.iter_385.output}${jsondecode(format("\"\\u%04x\"", local.iter_385.tape[local.iter_385.tape_ptr]))}"
      : local.iter_385.output)
    
    tape = (
      local.curr_386.code == "+"
        ? [for i, b in local.iter_385.tape : (i == local.iter_385.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_386.code == "-"
        ? [for i, b in local.iter_385.tape : (i == local.iter_385.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_386.code == ","
        ? [for i, b in local.iter_385.tape : (i == local.iter_385.tape_ptr ? local.ascii_lookup[local.curr_386.input] : b)]
        : local.iter_385.tape)

    tape_ptr = (
      local.curr_386.code == "<"
        ? local.iter_385.tape_ptr == 0 ? length(local.iter_385.tape) - 1 : local.iter_385.tape_ptr - 1 :
      local.curr_386.code == ">"
        ? local.iter_385.tape_ptr == length(local.iter_385.tape) - 1 ? 0 : local.iter_385.tape_ptr + 1
        : local.iter_385.tape_ptr)

    code_ptr = 1 + (
      local.curr_386.code == "["
        ? local.iter_385.tape[local.iter_385.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_385.code_ptr)] : local.iter_385.code_ptr :
      local.curr_386.code == "]"
        ? local.iter_385.tape[local.iter_385.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_385.code_ptr)] : local.iter_385.code_ptr
        : local.iter_385.code_ptr)

    steps_taken = 1 + local.iter_385.steps_taken
  }
}

locals {
  end_of_code_387 = try(local.iter_386.code_ptr >= length(var.code), true)

  curr_387 = local.end_of_code_387 ? null : {
    code = substr(var.code, local.iter_386.code_ptr, 1)
    input = substr(var.code, local.iter_386.code_ptr, 1) == "," ? substr(local.iter_386.input, 0, 1) : null
  }

  iter_387 = local.end_of_code_387 ? local.iter_386 : {
    input = (local.curr_387.code == ","
      ? substr(local.iter_386.input, 1, -1)
      : local.iter_386.input)

    output = (local.curr_387.code == "."
      ? "${local.iter_386.output}${jsondecode(format("\"\\u%04x\"", local.iter_386.tape[local.iter_386.tape_ptr]))}"
      : local.iter_386.output)
    
    tape = (
      local.curr_387.code == "+"
        ? [for i, b in local.iter_386.tape : (i == local.iter_386.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_387.code == "-"
        ? [for i, b in local.iter_386.tape : (i == local.iter_386.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_387.code == ","
        ? [for i, b in local.iter_386.tape : (i == local.iter_386.tape_ptr ? local.ascii_lookup[local.curr_387.input] : b)]
        : local.iter_386.tape)

    tape_ptr = (
      local.curr_387.code == "<"
        ? local.iter_386.tape_ptr == 0 ? length(local.iter_386.tape) - 1 : local.iter_386.tape_ptr - 1 :
      local.curr_387.code == ">"
        ? local.iter_386.tape_ptr == length(local.iter_386.tape) - 1 ? 0 : local.iter_386.tape_ptr + 1
        : local.iter_386.tape_ptr)

    code_ptr = 1 + (
      local.curr_387.code == "["
        ? local.iter_386.tape[local.iter_386.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_386.code_ptr)] : local.iter_386.code_ptr :
      local.curr_387.code == "]"
        ? local.iter_386.tape[local.iter_386.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_386.code_ptr)] : local.iter_386.code_ptr
        : local.iter_386.code_ptr)

    steps_taken = 1 + local.iter_386.steps_taken
  }
}

locals {
  end_of_code_388 = try(local.iter_387.code_ptr >= length(var.code), true)

  curr_388 = local.end_of_code_388 ? null : {
    code = substr(var.code, local.iter_387.code_ptr, 1)
    input = substr(var.code, local.iter_387.code_ptr, 1) == "," ? substr(local.iter_387.input, 0, 1) : null
  }

  iter_388 = local.end_of_code_388 ? local.iter_387 : {
    input = (local.curr_388.code == ","
      ? substr(local.iter_387.input, 1, -1)
      : local.iter_387.input)

    output = (local.curr_388.code == "."
      ? "${local.iter_387.output}${jsondecode(format("\"\\u%04x\"", local.iter_387.tape[local.iter_387.tape_ptr]))}"
      : local.iter_387.output)
    
    tape = (
      local.curr_388.code == "+"
        ? [for i, b in local.iter_387.tape : (i == local.iter_387.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_388.code == "-"
        ? [for i, b in local.iter_387.tape : (i == local.iter_387.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_388.code == ","
        ? [for i, b in local.iter_387.tape : (i == local.iter_387.tape_ptr ? local.ascii_lookup[local.curr_388.input] : b)]
        : local.iter_387.tape)

    tape_ptr = (
      local.curr_388.code == "<"
        ? local.iter_387.tape_ptr == 0 ? length(local.iter_387.tape) - 1 : local.iter_387.tape_ptr - 1 :
      local.curr_388.code == ">"
        ? local.iter_387.tape_ptr == length(local.iter_387.tape) - 1 ? 0 : local.iter_387.tape_ptr + 1
        : local.iter_387.tape_ptr)

    code_ptr = 1 + (
      local.curr_388.code == "["
        ? local.iter_387.tape[local.iter_387.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_387.code_ptr)] : local.iter_387.code_ptr :
      local.curr_388.code == "]"
        ? local.iter_387.tape[local.iter_387.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_387.code_ptr)] : local.iter_387.code_ptr
        : local.iter_387.code_ptr)

    steps_taken = 1 + local.iter_387.steps_taken
  }
}

locals {
  end_of_code_389 = try(local.iter_388.code_ptr >= length(var.code), true)

  curr_389 = local.end_of_code_389 ? null : {
    code = substr(var.code, local.iter_388.code_ptr, 1)
    input = substr(var.code, local.iter_388.code_ptr, 1) == "," ? substr(local.iter_388.input, 0, 1) : null
  }

  iter_389 = local.end_of_code_389 ? local.iter_388 : {
    input = (local.curr_389.code == ","
      ? substr(local.iter_388.input, 1, -1)
      : local.iter_388.input)

    output = (local.curr_389.code == "."
      ? "${local.iter_388.output}${jsondecode(format("\"\\u%04x\"", local.iter_388.tape[local.iter_388.tape_ptr]))}"
      : local.iter_388.output)
    
    tape = (
      local.curr_389.code == "+"
        ? [for i, b in local.iter_388.tape : (i == local.iter_388.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_389.code == "-"
        ? [for i, b in local.iter_388.tape : (i == local.iter_388.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_389.code == ","
        ? [for i, b in local.iter_388.tape : (i == local.iter_388.tape_ptr ? local.ascii_lookup[local.curr_389.input] : b)]
        : local.iter_388.tape)

    tape_ptr = (
      local.curr_389.code == "<"
        ? local.iter_388.tape_ptr == 0 ? length(local.iter_388.tape) - 1 : local.iter_388.tape_ptr - 1 :
      local.curr_389.code == ">"
        ? local.iter_388.tape_ptr == length(local.iter_388.tape) - 1 ? 0 : local.iter_388.tape_ptr + 1
        : local.iter_388.tape_ptr)

    code_ptr = 1 + (
      local.curr_389.code == "["
        ? local.iter_388.tape[local.iter_388.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_388.code_ptr)] : local.iter_388.code_ptr :
      local.curr_389.code == "]"
        ? local.iter_388.tape[local.iter_388.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_388.code_ptr)] : local.iter_388.code_ptr
        : local.iter_388.code_ptr)

    steps_taken = 1 + local.iter_388.steps_taken
  }
}

locals {
  end_of_code_390 = try(local.iter_389.code_ptr >= length(var.code), true)

  curr_390 = local.end_of_code_390 ? null : {
    code = substr(var.code, local.iter_389.code_ptr, 1)
    input = substr(var.code, local.iter_389.code_ptr, 1) == "," ? substr(local.iter_389.input, 0, 1) : null
  }

  iter_390 = local.end_of_code_390 ? local.iter_389 : {
    input = (local.curr_390.code == ","
      ? substr(local.iter_389.input, 1, -1)
      : local.iter_389.input)

    output = (local.curr_390.code == "."
      ? "${local.iter_389.output}${jsondecode(format("\"\\u%04x\"", local.iter_389.tape[local.iter_389.tape_ptr]))}"
      : local.iter_389.output)
    
    tape = (
      local.curr_390.code == "+"
        ? [for i, b in local.iter_389.tape : (i == local.iter_389.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_390.code == "-"
        ? [for i, b in local.iter_389.tape : (i == local.iter_389.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_390.code == ","
        ? [for i, b in local.iter_389.tape : (i == local.iter_389.tape_ptr ? local.ascii_lookup[local.curr_390.input] : b)]
        : local.iter_389.tape)

    tape_ptr = (
      local.curr_390.code == "<"
        ? local.iter_389.tape_ptr == 0 ? length(local.iter_389.tape) - 1 : local.iter_389.tape_ptr - 1 :
      local.curr_390.code == ">"
        ? local.iter_389.tape_ptr == length(local.iter_389.tape) - 1 ? 0 : local.iter_389.tape_ptr + 1
        : local.iter_389.tape_ptr)

    code_ptr = 1 + (
      local.curr_390.code == "["
        ? local.iter_389.tape[local.iter_389.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_389.code_ptr)] : local.iter_389.code_ptr :
      local.curr_390.code == "]"
        ? local.iter_389.tape[local.iter_389.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_389.code_ptr)] : local.iter_389.code_ptr
        : local.iter_389.code_ptr)

    steps_taken = 1 + local.iter_389.steps_taken
  }
}

locals {
  end_of_code_391 = try(local.iter_390.code_ptr >= length(var.code), true)

  curr_391 = local.end_of_code_391 ? null : {
    code = substr(var.code, local.iter_390.code_ptr, 1)
    input = substr(var.code, local.iter_390.code_ptr, 1) == "," ? substr(local.iter_390.input, 0, 1) : null
  }

  iter_391 = local.end_of_code_391 ? local.iter_390 : {
    input = (local.curr_391.code == ","
      ? substr(local.iter_390.input, 1, -1)
      : local.iter_390.input)

    output = (local.curr_391.code == "."
      ? "${local.iter_390.output}${jsondecode(format("\"\\u%04x\"", local.iter_390.tape[local.iter_390.tape_ptr]))}"
      : local.iter_390.output)
    
    tape = (
      local.curr_391.code == "+"
        ? [for i, b in local.iter_390.tape : (i == local.iter_390.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_391.code == "-"
        ? [for i, b in local.iter_390.tape : (i == local.iter_390.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_391.code == ","
        ? [for i, b in local.iter_390.tape : (i == local.iter_390.tape_ptr ? local.ascii_lookup[local.curr_391.input] : b)]
        : local.iter_390.tape)

    tape_ptr = (
      local.curr_391.code == "<"
        ? local.iter_390.tape_ptr == 0 ? length(local.iter_390.tape) - 1 : local.iter_390.tape_ptr - 1 :
      local.curr_391.code == ">"
        ? local.iter_390.tape_ptr == length(local.iter_390.tape) - 1 ? 0 : local.iter_390.tape_ptr + 1
        : local.iter_390.tape_ptr)

    code_ptr = 1 + (
      local.curr_391.code == "["
        ? local.iter_390.tape[local.iter_390.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_390.code_ptr)] : local.iter_390.code_ptr :
      local.curr_391.code == "]"
        ? local.iter_390.tape[local.iter_390.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_390.code_ptr)] : local.iter_390.code_ptr
        : local.iter_390.code_ptr)

    steps_taken = 1 + local.iter_390.steps_taken
  }
}

locals {
  end_of_code_392 = try(local.iter_391.code_ptr >= length(var.code), true)

  curr_392 = local.end_of_code_392 ? null : {
    code = substr(var.code, local.iter_391.code_ptr, 1)
    input = substr(var.code, local.iter_391.code_ptr, 1) == "," ? substr(local.iter_391.input, 0, 1) : null
  }

  iter_392 = local.end_of_code_392 ? local.iter_391 : {
    input = (local.curr_392.code == ","
      ? substr(local.iter_391.input, 1, -1)
      : local.iter_391.input)

    output = (local.curr_392.code == "."
      ? "${local.iter_391.output}${jsondecode(format("\"\\u%04x\"", local.iter_391.tape[local.iter_391.tape_ptr]))}"
      : local.iter_391.output)
    
    tape = (
      local.curr_392.code == "+"
        ? [for i, b in local.iter_391.tape : (i == local.iter_391.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_392.code == "-"
        ? [for i, b in local.iter_391.tape : (i == local.iter_391.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_392.code == ","
        ? [for i, b in local.iter_391.tape : (i == local.iter_391.tape_ptr ? local.ascii_lookup[local.curr_392.input] : b)]
        : local.iter_391.tape)

    tape_ptr = (
      local.curr_392.code == "<"
        ? local.iter_391.tape_ptr == 0 ? length(local.iter_391.tape) - 1 : local.iter_391.tape_ptr - 1 :
      local.curr_392.code == ">"
        ? local.iter_391.tape_ptr == length(local.iter_391.tape) - 1 ? 0 : local.iter_391.tape_ptr + 1
        : local.iter_391.tape_ptr)

    code_ptr = 1 + (
      local.curr_392.code == "["
        ? local.iter_391.tape[local.iter_391.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_391.code_ptr)] : local.iter_391.code_ptr :
      local.curr_392.code == "]"
        ? local.iter_391.tape[local.iter_391.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_391.code_ptr)] : local.iter_391.code_ptr
        : local.iter_391.code_ptr)

    steps_taken = 1 + local.iter_391.steps_taken
  }
}

locals {
  end_of_code_393 = try(local.iter_392.code_ptr >= length(var.code), true)

  curr_393 = local.end_of_code_393 ? null : {
    code = substr(var.code, local.iter_392.code_ptr, 1)
    input = substr(var.code, local.iter_392.code_ptr, 1) == "," ? substr(local.iter_392.input, 0, 1) : null
  }

  iter_393 = local.end_of_code_393 ? local.iter_392 : {
    input = (local.curr_393.code == ","
      ? substr(local.iter_392.input, 1, -1)
      : local.iter_392.input)

    output = (local.curr_393.code == "."
      ? "${local.iter_392.output}${jsondecode(format("\"\\u%04x\"", local.iter_392.tape[local.iter_392.tape_ptr]))}"
      : local.iter_392.output)
    
    tape = (
      local.curr_393.code == "+"
        ? [for i, b in local.iter_392.tape : (i == local.iter_392.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_393.code == "-"
        ? [for i, b in local.iter_392.tape : (i == local.iter_392.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_393.code == ","
        ? [for i, b in local.iter_392.tape : (i == local.iter_392.tape_ptr ? local.ascii_lookup[local.curr_393.input] : b)]
        : local.iter_392.tape)

    tape_ptr = (
      local.curr_393.code == "<"
        ? local.iter_392.tape_ptr == 0 ? length(local.iter_392.tape) - 1 : local.iter_392.tape_ptr - 1 :
      local.curr_393.code == ">"
        ? local.iter_392.tape_ptr == length(local.iter_392.tape) - 1 ? 0 : local.iter_392.tape_ptr + 1
        : local.iter_392.tape_ptr)

    code_ptr = 1 + (
      local.curr_393.code == "["
        ? local.iter_392.tape[local.iter_392.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_392.code_ptr)] : local.iter_392.code_ptr :
      local.curr_393.code == "]"
        ? local.iter_392.tape[local.iter_392.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_392.code_ptr)] : local.iter_392.code_ptr
        : local.iter_392.code_ptr)

    steps_taken = 1 + local.iter_392.steps_taken
  }
}

locals {
  end_of_code_394 = try(local.iter_393.code_ptr >= length(var.code), true)

  curr_394 = local.end_of_code_394 ? null : {
    code = substr(var.code, local.iter_393.code_ptr, 1)
    input = substr(var.code, local.iter_393.code_ptr, 1) == "," ? substr(local.iter_393.input, 0, 1) : null
  }

  iter_394 = local.end_of_code_394 ? local.iter_393 : {
    input = (local.curr_394.code == ","
      ? substr(local.iter_393.input, 1, -1)
      : local.iter_393.input)

    output = (local.curr_394.code == "."
      ? "${local.iter_393.output}${jsondecode(format("\"\\u%04x\"", local.iter_393.tape[local.iter_393.tape_ptr]))}"
      : local.iter_393.output)
    
    tape = (
      local.curr_394.code == "+"
        ? [for i, b in local.iter_393.tape : (i == local.iter_393.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_394.code == "-"
        ? [for i, b in local.iter_393.tape : (i == local.iter_393.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_394.code == ","
        ? [for i, b in local.iter_393.tape : (i == local.iter_393.tape_ptr ? local.ascii_lookup[local.curr_394.input] : b)]
        : local.iter_393.tape)

    tape_ptr = (
      local.curr_394.code == "<"
        ? local.iter_393.tape_ptr == 0 ? length(local.iter_393.tape) - 1 : local.iter_393.tape_ptr - 1 :
      local.curr_394.code == ">"
        ? local.iter_393.tape_ptr == length(local.iter_393.tape) - 1 ? 0 : local.iter_393.tape_ptr + 1
        : local.iter_393.tape_ptr)

    code_ptr = 1 + (
      local.curr_394.code == "["
        ? local.iter_393.tape[local.iter_393.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_393.code_ptr)] : local.iter_393.code_ptr :
      local.curr_394.code == "]"
        ? local.iter_393.tape[local.iter_393.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_393.code_ptr)] : local.iter_393.code_ptr
        : local.iter_393.code_ptr)

    steps_taken = 1 + local.iter_393.steps_taken
  }
}

locals {
  end_of_code_395 = try(local.iter_394.code_ptr >= length(var.code), true)

  curr_395 = local.end_of_code_395 ? null : {
    code = substr(var.code, local.iter_394.code_ptr, 1)
    input = substr(var.code, local.iter_394.code_ptr, 1) == "," ? substr(local.iter_394.input, 0, 1) : null
  }

  iter_395 = local.end_of_code_395 ? local.iter_394 : {
    input = (local.curr_395.code == ","
      ? substr(local.iter_394.input, 1, -1)
      : local.iter_394.input)

    output = (local.curr_395.code == "."
      ? "${local.iter_394.output}${jsondecode(format("\"\\u%04x\"", local.iter_394.tape[local.iter_394.tape_ptr]))}"
      : local.iter_394.output)
    
    tape = (
      local.curr_395.code == "+"
        ? [for i, b in local.iter_394.tape : (i == local.iter_394.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_395.code == "-"
        ? [for i, b in local.iter_394.tape : (i == local.iter_394.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_395.code == ","
        ? [for i, b in local.iter_394.tape : (i == local.iter_394.tape_ptr ? local.ascii_lookup[local.curr_395.input] : b)]
        : local.iter_394.tape)

    tape_ptr = (
      local.curr_395.code == "<"
        ? local.iter_394.tape_ptr == 0 ? length(local.iter_394.tape) - 1 : local.iter_394.tape_ptr - 1 :
      local.curr_395.code == ">"
        ? local.iter_394.tape_ptr == length(local.iter_394.tape) - 1 ? 0 : local.iter_394.tape_ptr + 1
        : local.iter_394.tape_ptr)

    code_ptr = 1 + (
      local.curr_395.code == "["
        ? local.iter_394.tape[local.iter_394.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_394.code_ptr)] : local.iter_394.code_ptr :
      local.curr_395.code == "]"
        ? local.iter_394.tape[local.iter_394.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_394.code_ptr)] : local.iter_394.code_ptr
        : local.iter_394.code_ptr)

    steps_taken = 1 + local.iter_394.steps_taken
  }
}

locals {
  end_of_code_396 = try(local.iter_395.code_ptr >= length(var.code), true)

  curr_396 = local.end_of_code_396 ? null : {
    code = substr(var.code, local.iter_395.code_ptr, 1)
    input = substr(var.code, local.iter_395.code_ptr, 1) == "," ? substr(local.iter_395.input, 0, 1) : null
  }

  iter_396 = local.end_of_code_396 ? local.iter_395 : {
    input = (local.curr_396.code == ","
      ? substr(local.iter_395.input, 1, -1)
      : local.iter_395.input)

    output = (local.curr_396.code == "."
      ? "${local.iter_395.output}${jsondecode(format("\"\\u%04x\"", local.iter_395.tape[local.iter_395.tape_ptr]))}"
      : local.iter_395.output)
    
    tape = (
      local.curr_396.code == "+"
        ? [for i, b in local.iter_395.tape : (i == local.iter_395.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_396.code == "-"
        ? [for i, b in local.iter_395.tape : (i == local.iter_395.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_396.code == ","
        ? [for i, b in local.iter_395.tape : (i == local.iter_395.tape_ptr ? local.ascii_lookup[local.curr_396.input] : b)]
        : local.iter_395.tape)

    tape_ptr = (
      local.curr_396.code == "<"
        ? local.iter_395.tape_ptr == 0 ? length(local.iter_395.tape) - 1 : local.iter_395.tape_ptr - 1 :
      local.curr_396.code == ">"
        ? local.iter_395.tape_ptr == length(local.iter_395.tape) - 1 ? 0 : local.iter_395.tape_ptr + 1
        : local.iter_395.tape_ptr)

    code_ptr = 1 + (
      local.curr_396.code == "["
        ? local.iter_395.tape[local.iter_395.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_395.code_ptr)] : local.iter_395.code_ptr :
      local.curr_396.code == "]"
        ? local.iter_395.tape[local.iter_395.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_395.code_ptr)] : local.iter_395.code_ptr
        : local.iter_395.code_ptr)

    steps_taken = 1 + local.iter_395.steps_taken
  }
}

locals {
  end_of_code_397 = try(local.iter_396.code_ptr >= length(var.code), true)

  curr_397 = local.end_of_code_397 ? null : {
    code = substr(var.code, local.iter_396.code_ptr, 1)
    input = substr(var.code, local.iter_396.code_ptr, 1) == "," ? substr(local.iter_396.input, 0, 1) : null
  }

  iter_397 = local.end_of_code_397 ? local.iter_396 : {
    input = (local.curr_397.code == ","
      ? substr(local.iter_396.input, 1, -1)
      : local.iter_396.input)

    output = (local.curr_397.code == "."
      ? "${local.iter_396.output}${jsondecode(format("\"\\u%04x\"", local.iter_396.tape[local.iter_396.tape_ptr]))}"
      : local.iter_396.output)
    
    tape = (
      local.curr_397.code == "+"
        ? [for i, b in local.iter_396.tape : (i == local.iter_396.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_397.code == "-"
        ? [for i, b in local.iter_396.tape : (i == local.iter_396.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_397.code == ","
        ? [for i, b in local.iter_396.tape : (i == local.iter_396.tape_ptr ? local.ascii_lookup[local.curr_397.input] : b)]
        : local.iter_396.tape)

    tape_ptr = (
      local.curr_397.code == "<"
        ? local.iter_396.tape_ptr == 0 ? length(local.iter_396.tape) - 1 : local.iter_396.tape_ptr - 1 :
      local.curr_397.code == ">"
        ? local.iter_396.tape_ptr == length(local.iter_396.tape) - 1 ? 0 : local.iter_396.tape_ptr + 1
        : local.iter_396.tape_ptr)

    code_ptr = 1 + (
      local.curr_397.code == "["
        ? local.iter_396.tape[local.iter_396.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_396.code_ptr)] : local.iter_396.code_ptr :
      local.curr_397.code == "]"
        ? local.iter_396.tape[local.iter_396.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_396.code_ptr)] : local.iter_396.code_ptr
        : local.iter_396.code_ptr)

    steps_taken = 1 + local.iter_396.steps_taken
  }
}

locals {
  end_of_code_398 = try(local.iter_397.code_ptr >= length(var.code), true)

  curr_398 = local.end_of_code_398 ? null : {
    code = substr(var.code, local.iter_397.code_ptr, 1)
    input = substr(var.code, local.iter_397.code_ptr, 1) == "," ? substr(local.iter_397.input, 0, 1) : null
  }

  iter_398 = local.end_of_code_398 ? local.iter_397 : {
    input = (local.curr_398.code == ","
      ? substr(local.iter_397.input, 1, -1)
      : local.iter_397.input)

    output = (local.curr_398.code == "."
      ? "${local.iter_397.output}${jsondecode(format("\"\\u%04x\"", local.iter_397.tape[local.iter_397.tape_ptr]))}"
      : local.iter_397.output)
    
    tape = (
      local.curr_398.code == "+"
        ? [for i, b in local.iter_397.tape : (i == local.iter_397.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_398.code == "-"
        ? [for i, b in local.iter_397.tape : (i == local.iter_397.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_398.code == ","
        ? [for i, b in local.iter_397.tape : (i == local.iter_397.tape_ptr ? local.ascii_lookup[local.curr_398.input] : b)]
        : local.iter_397.tape)

    tape_ptr = (
      local.curr_398.code == "<"
        ? local.iter_397.tape_ptr == 0 ? length(local.iter_397.tape) - 1 : local.iter_397.tape_ptr - 1 :
      local.curr_398.code == ">"
        ? local.iter_397.tape_ptr == length(local.iter_397.tape) - 1 ? 0 : local.iter_397.tape_ptr + 1
        : local.iter_397.tape_ptr)

    code_ptr = 1 + (
      local.curr_398.code == "["
        ? local.iter_397.tape[local.iter_397.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_397.code_ptr)] : local.iter_397.code_ptr :
      local.curr_398.code == "]"
        ? local.iter_397.tape[local.iter_397.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_397.code_ptr)] : local.iter_397.code_ptr
        : local.iter_397.code_ptr)

    steps_taken = 1 + local.iter_397.steps_taken
  }
}

locals {
  end_of_code_399 = try(local.iter_398.code_ptr >= length(var.code), true)

  curr_399 = local.end_of_code_399 ? null : {
    code = substr(var.code, local.iter_398.code_ptr, 1)
    input = substr(var.code, local.iter_398.code_ptr, 1) == "," ? substr(local.iter_398.input, 0, 1) : null
  }

  iter_399 = local.end_of_code_399 ? local.iter_398 : {
    input = (local.curr_399.code == ","
      ? substr(local.iter_398.input, 1, -1)
      : local.iter_398.input)

    output = (local.curr_399.code == "."
      ? "${local.iter_398.output}${jsondecode(format("\"\\u%04x\"", local.iter_398.tape[local.iter_398.tape_ptr]))}"
      : local.iter_398.output)
    
    tape = (
      local.curr_399.code == "+"
        ? [for i, b in local.iter_398.tape : (i == local.iter_398.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_399.code == "-"
        ? [for i, b in local.iter_398.tape : (i == local.iter_398.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_399.code == ","
        ? [for i, b in local.iter_398.tape : (i == local.iter_398.tape_ptr ? local.ascii_lookup[local.curr_399.input] : b)]
        : local.iter_398.tape)

    tape_ptr = (
      local.curr_399.code == "<"
        ? local.iter_398.tape_ptr == 0 ? length(local.iter_398.tape) - 1 : local.iter_398.tape_ptr - 1 :
      local.curr_399.code == ">"
        ? local.iter_398.tape_ptr == length(local.iter_398.tape) - 1 ? 0 : local.iter_398.tape_ptr + 1
        : local.iter_398.tape_ptr)

    code_ptr = 1 + (
      local.curr_399.code == "["
        ? local.iter_398.tape[local.iter_398.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_398.code_ptr)] : local.iter_398.code_ptr :
      local.curr_399.code == "]"
        ? local.iter_398.tape[local.iter_398.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_398.code_ptr)] : local.iter_398.code_ptr
        : local.iter_398.code_ptr)

    steps_taken = 1 + local.iter_398.steps_taken
  }
}

locals {
  end_of_code_400 = try(local.iter_399.code_ptr >= length(var.code), true)

  curr_400 = local.end_of_code_400 ? null : {
    code = substr(var.code, local.iter_399.code_ptr, 1)
    input = substr(var.code, local.iter_399.code_ptr, 1) == "," ? substr(local.iter_399.input, 0, 1) : null
  }

  iter_400 = local.end_of_code_400 ? local.iter_399 : {
    input = (local.curr_400.code == ","
      ? substr(local.iter_399.input, 1, -1)
      : local.iter_399.input)

    output = (local.curr_400.code == "."
      ? "${local.iter_399.output}${jsondecode(format("\"\\u%04x\"", local.iter_399.tape[local.iter_399.tape_ptr]))}"
      : local.iter_399.output)
    
    tape = (
      local.curr_400.code == "+"
        ? [for i, b in local.iter_399.tape : (i == local.iter_399.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_400.code == "-"
        ? [for i, b in local.iter_399.tape : (i == local.iter_399.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_400.code == ","
        ? [for i, b in local.iter_399.tape : (i == local.iter_399.tape_ptr ? local.ascii_lookup[local.curr_400.input] : b)]
        : local.iter_399.tape)

    tape_ptr = (
      local.curr_400.code == "<"
        ? local.iter_399.tape_ptr == 0 ? length(local.iter_399.tape) - 1 : local.iter_399.tape_ptr - 1 :
      local.curr_400.code == ">"
        ? local.iter_399.tape_ptr == length(local.iter_399.tape) - 1 ? 0 : local.iter_399.tape_ptr + 1
        : local.iter_399.tape_ptr)

    code_ptr = 1 + (
      local.curr_400.code == "["
        ? local.iter_399.tape[local.iter_399.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_399.code_ptr)] : local.iter_399.code_ptr :
      local.curr_400.code == "]"
        ? local.iter_399.tape[local.iter_399.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_399.code_ptr)] : local.iter_399.code_ptr
        : local.iter_399.code_ptr)

    steps_taken = 1 + local.iter_399.steps_taken
  }
}

locals {
  end_of_code_401 = try(local.iter_400.code_ptr >= length(var.code), true)

  curr_401 = local.end_of_code_401 ? null : {
    code = substr(var.code, local.iter_400.code_ptr, 1)
    input = substr(var.code, local.iter_400.code_ptr, 1) == "," ? substr(local.iter_400.input, 0, 1) : null
  }

  iter_401 = local.end_of_code_401 ? local.iter_400 : {
    input = (local.curr_401.code == ","
      ? substr(local.iter_400.input, 1, -1)
      : local.iter_400.input)

    output = (local.curr_401.code == "."
      ? "${local.iter_400.output}${jsondecode(format("\"\\u%04x\"", local.iter_400.tape[local.iter_400.tape_ptr]))}"
      : local.iter_400.output)
    
    tape = (
      local.curr_401.code == "+"
        ? [for i, b in local.iter_400.tape : (i == local.iter_400.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_401.code == "-"
        ? [for i, b in local.iter_400.tape : (i == local.iter_400.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_401.code == ","
        ? [for i, b in local.iter_400.tape : (i == local.iter_400.tape_ptr ? local.ascii_lookup[local.curr_401.input] : b)]
        : local.iter_400.tape)

    tape_ptr = (
      local.curr_401.code == "<"
        ? local.iter_400.tape_ptr == 0 ? length(local.iter_400.tape) - 1 : local.iter_400.tape_ptr - 1 :
      local.curr_401.code == ">"
        ? local.iter_400.tape_ptr == length(local.iter_400.tape) - 1 ? 0 : local.iter_400.tape_ptr + 1
        : local.iter_400.tape_ptr)

    code_ptr = 1 + (
      local.curr_401.code == "["
        ? local.iter_400.tape[local.iter_400.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_400.code_ptr)] : local.iter_400.code_ptr :
      local.curr_401.code == "]"
        ? local.iter_400.tape[local.iter_400.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_400.code_ptr)] : local.iter_400.code_ptr
        : local.iter_400.code_ptr)

    steps_taken = 1 + local.iter_400.steps_taken
  }
}

locals {
  end_of_code_402 = try(local.iter_401.code_ptr >= length(var.code), true)

  curr_402 = local.end_of_code_402 ? null : {
    code = substr(var.code, local.iter_401.code_ptr, 1)
    input = substr(var.code, local.iter_401.code_ptr, 1) == "," ? substr(local.iter_401.input, 0, 1) : null
  }

  iter_402 = local.end_of_code_402 ? local.iter_401 : {
    input = (local.curr_402.code == ","
      ? substr(local.iter_401.input, 1, -1)
      : local.iter_401.input)

    output = (local.curr_402.code == "."
      ? "${local.iter_401.output}${jsondecode(format("\"\\u%04x\"", local.iter_401.tape[local.iter_401.tape_ptr]))}"
      : local.iter_401.output)
    
    tape = (
      local.curr_402.code == "+"
        ? [for i, b in local.iter_401.tape : (i == local.iter_401.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_402.code == "-"
        ? [for i, b in local.iter_401.tape : (i == local.iter_401.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_402.code == ","
        ? [for i, b in local.iter_401.tape : (i == local.iter_401.tape_ptr ? local.ascii_lookup[local.curr_402.input] : b)]
        : local.iter_401.tape)

    tape_ptr = (
      local.curr_402.code == "<"
        ? local.iter_401.tape_ptr == 0 ? length(local.iter_401.tape) - 1 : local.iter_401.tape_ptr - 1 :
      local.curr_402.code == ">"
        ? local.iter_401.tape_ptr == length(local.iter_401.tape) - 1 ? 0 : local.iter_401.tape_ptr + 1
        : local.iter_401.tape_ptr)

    code_ptr = 1 + (
      local.curr_402.code == "["
        ? local.iter_401.tape[local.iter_401.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_401.code_ptr)] : local.iter_401.code_ptr :
      local.curr_402.code == "]"
        ? local.iter_401.tape[local.iter_401.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_401.code_ptr)] : local.iter_401.code_ptr
        : local.iter_401.code_ptr)

    steps_taken = 1 + local.iter_401.steps_taken
  }
}

locals {
  end_of_code_403 = try(local.iter_402.code_ptr >= length(var.code), true)

  curr_403 = local.end_of_code_403 ? null : {
    code = substr(var.code, local.iter_402.code_ptr, 1)
    input = substr(var.code, local.iter_402.code_ptr, 1) == "," ? substr(local.iter_402.input, 0, 1) : null
  }

  iter_403 = local.end_of_code_403 ? local.iter_402 : {
    input = (local.curr_403.code == ","
      ? substr(local.iter_402.input, 1, -1)
      : local.iter_402.input)

    output = (local.curr_403.code == "."
      ? "${local.iter_402.output}${jsondecode(format("\"\\u%04x\"", local.iter_402.tape[local.iter_402.tape_ptr]))}"
      : local.iter_402.output)
    
    tape = (
      local.curr_403.code == "+"
        ? [for i, b in local.iter_402.tape : (i == local.iter_402.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_403.code == "-"
        ? [for i, b in local.iter_402.tape : (i == local.iter_402.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_403.code == ","
        ? [for i, b in local.iter_402.tape : (i == local.iter_402.tape_ptr ? local.ascii_lookup[local.curr_403.input] : b)]
        : local.iter_402.tape)

    tape_ptr = (
      local.curr_403.code == "<"
        ? local.iter_402.tape_ptr == 0 ? length(local.iter_402.tape) - 1 : local.iter_402.tape_ptr - 1 :
      local.curr_403.code == ">"
        ? local.iter_402.tape_ptr == length(local.iter_402.tape) - 1 ? 0 : local.iter_402.tape_ptr + 1
        : local.iter_402.tape_ptr)

    code_ptr = 1 + (
      local.curr_403.code == "["
        ? local.iter_402.tape[local.iter_402.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_402.code_ptr)] : local.iter_402.code_ptr :
      local.curr_403.code == "]"
        ? local.iter_402.tape[local.iter_402.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_402.code_ptr)] : local.iter_402.code_ptr
        : local.iter_402.code_ptr)

    steps_taken = 1 + local.iter_402.steps_taken
  }
}

locals {
  end_of_code_404 = try(local.iter_403.code_ptr >= length(var.code), true)

  curr_404 = local.end_of_code_404 ? null : {
    code = substr(var.code, local.iter_403.code_ptr, 1)
    input = substr(var.code, local.iter_403.code_ptr, 1) == "," ? substr(local.iter_403.input, 0, 1) : null
  }

  iter_404 = local.end_of_code_404 ? local.iter_403 : {
    input = (local.curr_404.code == ","
      ? substr(local.iter_403.input, 1, -1)
      : local.iter_403.input)

    output = (local.curr_404.code == "."
      ? "${local.iter_403.output}${jsondecode(format("\"\\u%04x\"", local.iter_403.tape[local.iter_403.tape_ptr]))}"
      : local.iter_403.output)
    
    tape = (
      local.curr_404.code == "+"
        ? [for i, b in local.iter_403.tape : (i == local.iter_403.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_404.code == "-"
        ? [for i, b in local.iter_403.tape : (i == local.iter_403.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_404.code == ","
        ? [for i, b in local.iter_403.tape : (i == local.iter_403.tape_ptr ? local.ascii_lookup[local.curr_404.input] : b)]
        : local.iter_403.tape)

    tape_ptr = (
      local.curr_404.code == "<"
        ? local.iter_403.tape_ptr == 0 ? length(local.iter_403.tape) - 1 : local.iter_403.tape_ptr - 1 :
      local.curr_404.code == ">"
        ? local.iter_403.tape_ptr == length(local.iter_403.tape) - 1 ? 0 : local.iter_403.tape_ptr + 1
        : local.iter_403.tape_ptr)

    code_ptr = 1 + (
      local.curr_404.code == "["
        ? local.iter_403.tape[local.iter_403.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_403.code_ptr)] : local.iter_403.code_ptr :
      local.curr_404.code == "]"
        ? local.iter_403.tape[local.iter_403.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_403.code_ptr)] : local.iter_403.code_ptr
        : local.iter_403.code_ptr)

    steps_taken = 1 + local.iter_403.steps_taken
  }
}

locals {
  end_of_code_405 = try(local.iter_404.code_ptr >= length(var.code), true)

  curr_405 = local.end_of_code_405 ? null : {
    code = substr(var.code, local.iter_404.code_ptr, 1)
    input = substr(var.code, local.iter_404.code_ptr, 1) == "," ? substr(local.iter_404.input, 0, 1) : null
  }

  iter_405 = local.end_of_code_405 ? local.iter_404 : {
    input = (local.curr_405.code == ","
      ? substr(local.iter_404.input, 1, -1)
      : local.iter_404.input)

    output = (local.curr_405.code == "."
      ? "${local.iter_404.output}${jsondecode(format("\"\\u%04x\"", local.iter_404.tape[local.iter_404.tape_ptr]))}"
      : local.iter_404.output)
    
    tape = (
      local.curr_405.code == "+"
        ? [for i, b in local.iter_404.tape : (i == local.iter_404.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_405.code == "-"
        ? [for i, b in local.iter_404.tape : (i == local.iter_404.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_405.code == ","
        ? [for i, b in local.iter_404.tape : (i == local.iter_404.tape_ptr ? local.ascii_lookup[local.curr_405.input] : b)]
        : local.iter_404.tape)

    tape_ptr = (
      local.curr_405.code == "<"
        ? local.iter_404.tape_ptr == 0 ? length(local.iter_404.tape) - 1 : local.iter_404.tape_ptr - 1 :
      local.curr_405.code == ">"
        ? local.iter_404.tape_ptr == length(local.iter_404.tape) - 1 ? 0 : local.iter_404.tape_ptr + 1
        : local.iter_404.tape_ptr)

    code_ptr = 1 + (
      local.curr_405.code == "["
        ? local.iter_404.tape[local.iter_404.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_404.code_ptr)] : local.iter_404.code_ptr :
      local.curr_405.code == "]"
        ? local.iter_404.tape[local.iter_404.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_404.code_ptr)] : local.iter_404.code_ptr
        : local.iter_404.code_ptr)

    steps_taken = 1 + local.iter_404.steps_taken
  }
}

locals {
  end_of_code_406 = try(local.iter_405.code_ptr >= length(var.code), true)

  curr_406 = local.end_of_code_406 ? null : {
    code = substr(var.code, local.iter_405.code_ptr, 1)
    input = substr(var.code, local.iter_405.code_ptr, 1) == "," ? substr(local.iter_405.input, 0, 1) : null
  }

  iter_406 = local.end_of_code_406 ? local.iter_405 : {
    input = (local.curr_406.code == ","
      ? substr(local.iter_405.input, 1, -1)
      : local.iter_405.input)

    output = (local.curr_406.code == "."
      ? "${local.iter_405.output}${jsondecode(format("\"\\u%04x\"", local.iter_405.tape[local.iter_405.tape_ptr]))}"
      : local.iter_405.output)
    
    tape = (
      local.curr_406.code == "+"
        ? [for i, b in local.iter_405.tape : (i == local.iter_405.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_406.code == "-"
        ? [for i, b in local.iter_405.tape : (i == local.iter_405.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_406.code == ","
        ? [for i, b in local.iter_405.tape : (i == local.iter_405.tape_ptr ? local.ascii_lookup[local.curr_406.input] : b)]
        : local.iter_405.tape)

    tape_ptr = (
      local.curr_406.code == "<"
        ? local.iter_405.tape_ptr == 0 ? length(local.iter_405.tape) - 1 : local.iter_405.tape_ptr - 1 :
      local.curr_406.code == ">"
        ? local.iter_405.tape_ptr == length(local.iter_405.tape) - 1 ? 0 : local.iter_405.tape_ptr + 1
        : local.iter_405.tape_ptr)

    code_ptr = 1 + (
      local.curr_406.code == "["
        ? local.iter_405.tape[local.iter_405.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_405.code_ptr)] : local.iter_405.code_ptr :
      local.curr_406.code == "]"
        ? local.iter_405.tape[local.iter_405.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_405.code_ptr)] : local.iter_405.code_ptr
        : local.iter_405.code_ptr)

    steps_taken = 1 + local.iter_405.steps_taken
  }
}

locals {
  end_of_code_407 = try(local.iter_406.code_ptr >= length(var.code), true)

  curr_407 = local.end_of_code_407 ? null : {
    code = substr(var.code, local.iter_406.code_ptr, 1)
    input = substr(var.code, local.iter_406.code_ptr, 1) == "," ? substr(local.iter_406.input, 0, 1) : null
  }

  iter_407 = local.end_of_code_407 ? local.iter_406 : {
    input = (local.curr_407.code == ","
      ? substr(local.iter_406.input, 1, -1)
      : local.iter_406.input)

    output = (local.curr_407.code == "."
      ? "${local.iter_406.output}${jsondecode(format("\"\\u%04x\"", local.iter_406.tape[local.iter_406.tape_ptr]))}"
      : local.iter_406.output)
    
    tape = (
      local.curr_407.code == "+"
        ? [for i, b in local.iter_406.tape : (i == local.iter_406.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_407.code == "-"
        ? [for i, b in local.iter_406.tape : (i == local.iter_406.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_407.code == ","
        ? [for i, b in local.iter_406.tape : (i == local.iter_406.tape_ptr ? local.ascii_lookup[local.curr_407.input] : b)]
        : local.iter_406.tape)

    tape_ptr = (
      local.curr_407.code == "<"
        ? local.iter_406.tape_ptr == 0 ? length(local.iter_406.tape) - 1 : local.iter_406.tape_ptr - 1 :
      local.curr_407.code == ">"
        ? local.iter_406.tape_ptr == length(local.iter_406.tape) - 1 ? 0 : local.iter_406.tape_ptr + 1
        : local.iter_406.tape_ptr)

    code_ptr = 1 + (
      local.curr_407.code == "["
        ? local.iter_406.tape[local.iter_406.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_406.code_ptr)] : local.iter_406.code_ptr :
      local.curr_407.code == "]"
        ? local.iter_406.tape[local.iter_406.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_406.code_ptr)] : local.iter_406.code_ptr
        : local.iter_406.code_ptr)

    steps_taken = 1 + local.iter_406.steps_taken
  }
}

locals {
  end_of_code_408 = try(local.iter_407.code_ptr >= length(var.code), true)

  curr_408 = local.end_of_code_408 ? null : {
    code = substr(var.code, local.iter_407.code_ptr, 1)
    input = substr(var.code, local.iter_407.code_ptr, 1) == "," ? substr(local.iter_407.input, 0, 1) : null
  }

  iter_408 = local.end_of_code_408 ? local.iter_407 : {
    input = (local.curr_408.code == ","
      ? substr(local.iter_407.input, 1, -1)
      : local.iter_407.input)

    output = (local.curr_408.code == "."
      ? "${local.iter_407.output}${jsondecode(format("\"\\u%04x\"", local.iter_407.tape[local.iter_407.tape_ptr]))}"
      : local.iter_407.output)
    
    tape = (
      local.curr_408.code == "+"
        ? [for i, b in local.iter_407.tape : (i == local.iter_407.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_408.code == "-"
        ? [for i, b in local.iter_407.tape : (i == local.iter_407.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_408.code == ","
        ? [for i, b in local.iter_407.tape : (i == local.iter_407.tape_ptr ? local.ascii_lookup[local.curr_408.input] : b)]
        : local.iter_407.tape)

    tape_ptr = (
      local.curr_408.code == "<"
        ? local.iter_407.tape_ptr == 0 ? length(local.iter_407.tape) - 1 : local.iter_407.tape_ptr - 1 :
      local.curr_408.code == ">"
        ? local.iter_407.tape_ptr == length(local.iter_407.tape) - 1 ? 0 : local.iter_407.tape_ptr + 1
        : local.iter_407.tape_ptr)

    code_ptr = 1 + (
      local.curr_408.code == "["
        ? local.iter_407.tape[local.iter_407.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_407.code_ptr)] : local.iter_407.code_ptr :
      local.curr_408.code == "]"
        ? local.iter_407.tape[local.iter_407.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_407.code_ptr)] : local.iter_407.code_ptr
        : local.iter_407.code_ptr)

    steps_taken = 1 + local.iter_407.steps_taken
  }
}

locals {
  end_of_code_409 = try(local.iter_408.code_ptr >= length(var.code), true)

  curr_409 = local.end_of_code_409 ? null : {
    code = substr(var.code, local.iter_408.code_ptr, 1)
    input = substr(var.code, local.iter_408.code_ptr, 1) == "," ? substr(local.iter_408.input, 0, 1) : null
  }

  iter_409 = local.end_of_code_409 ? local.iter_408 : {
    input = (local.curr_409.code == ","
      ? substr(local.iter_408.input, 1, -1)
      : local.iter_408.input)

    output = (local.curr_409.code == "."
      ? "${local.iter_408.output}${jsondecode(format("\"\\u%04x\"", local.iter_408.tape[local.iter_408.tape_ptr]))}"
      : local.iter_408.output)
    
    tape = (
      local.curr_409.code == "+"
        ? [for i, b in local.iter_408.tape : (i == local.iter_408.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_409.code == "-"
        ? [for i, b in local.iter_408.tape : (i == local.iter_408.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_409.code == ","
        ? [for i, b in local.iter_408.tape : (i == local.iter_408.tape_ptr ? local.ascii_lookup[local.curr_409.input] : b)]
        : local.iter_408.tape)

    tape_ptr = (
      local.curr_409.code == "<"
        ? local.iter_408.tape_ptr == 0 ? length(local.iter_408.tape) - 1 : local.iter_408.tape_ptr - 1 :
      local.curr_409.code == ">"
        ? local.iter_408.tape_ptr == length(local.iter_408.tape) - 1 ? 0 : local.iter_408.tape_ptr + 1
        : local.iter_408.tape_ptr)

    code_ptr = 1 + (
      local.curr_409.code == "["
        ? local.iter_408.tape[local.iter_408.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_408.code_ptr)] : local.iter_408.code_ptr :
      local.curr_409.code == "]"
        ? local.iter_408.tape[local.iter_408.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_408.code_ptr)] : local.iter_408.code_ptr
        : local.iter_408.code_ptr)

    steps_taken = 1 + local.iter_408.steps_taken
  }
}

locals {
  end_of_code_410 = try(local.iter_409.code_ptr >= length(var.code), true)

  curr_410 = local.end_of_code_410 ? null : {
    code = substr(var.code, local.iter_409.code_ptr, 1)
    input = substr(var.code, local.iter_409.code_ptr, 1) == "," ? substr(local.iter_409.input, 0, 1) : null
  }

  iter_410 = local.end_of_code_410 ? local.iter_409 : {
    input = (local.curr_410.code == ","
      ? substr(local.iter_409.input, 1, -1)
      : local.iter_409.input)

    output = (local.curr_410.code == "."
      ? "${local.iter_409.output}${jsondecode(format("\"\\u%04x\"", local.iter_409.tape[local.iter_409.tape_ptr]))}"
      : local.iter_409.output)
    
    tape = (
      local.curr_410.code == "+"
        ? [for i, b in local.iter_409.tape : (i == local.iter_409.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_410.code == "-"
        ? [for i, b in local.iter_409.tape : (i == local.iter_409.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_410.code == ","
        ? [for i, b in local.iter_409.tape : (i == local.iter_409.tape_ptr ? local.ascii_lookup[local.curr_410.input] : b)]
        : local.iter_409.tape)

    tape_ptr = (
      local.curr_410.code == "<"
        ? local.iter_409.tape_ptr == 0 ? length(local.iter_409.tape) - 1 : local.iter_409.tape_ptr - 1 :
      local.curr_410.code == ">"
        ? local.iter_409.tape_ptr == length(local.iter_409.tape) - 1 ? 0 : local.iter_409.tape_ptr + 1
        : local.iter_409.tape_ptr)

    code_ptr = 1 + (
      local.curr_410.code == "["
        ? local.iter_409.tape[local.iter_409.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_409.code_ptr)] : local.iter_409.code_ptr :
      local.curr_410.code == "]"
        ? local.iter_409.tape[local.iter_409.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_409.code_ptr)] : local.iter_409.code_ptr
        : local.iter_409.code_ptr)

    steps_taken = 1 + local.iter_409.steps_taken
  }
}

locals {
  end_of_code_411 = try(local.iter_410.code_ptr >= length(var.code), true)

  curr_411 = local.end_of_code_411 ? null : {
    code = substr(var.code, local.iter_410.code_ptr, 1)
    input = substr(var.code, local.iter_410.code_ptr, 1) == "," ? substr(local.iter_410.input, 0, 1) : null
  }

  iter_411 = local.end_of_code_411 ? local.iter_410 : {
    input = (local.curr_411.code == ","
      ? substr(local.iter_410.input, 1, -1)
      : local.iter_410.input)

    output = (local.curr_411.code == "."
      ? "${local.iter_410.output}${jsondecode(format("\"\\u%04x\"", local.iter_410.tape[local.iter_410.tape_ptr]))}"
      : local.iter_410.output)
    
    tape = (
      local.curr_411.code == "+"
        ? [for i, b in local.iter_410.tape : (i == local.iter_410.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_411.code == "-"
        ? [for i, b in local.iter_410.tape : (i == local.iter_410.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_411.code == ","
        ? [for i, b in local.iter_410.tape : (i == local.iter_410.tape_ptr ? local.ascii_lookup[local.curr_411.input] : b)]
        : local.iter_410.tape)

    tape_ptr = (
      local.curr_411.code == "<"
        ? local.iter_410.tape_ptr == 0 ? length(local.iter_410.tape) - 1 : local.iter_410.tape_ptr - 1 :
      local.curr_411.code == ">"
        ? local.iter_410.tape_ptr == length(local.iter_410.tape) - 1 ? 0 : local.iter_410.tape_ptr + 1
        : local.iter_410.tape_ptr)

    code_ptr = 1 + (
      local.curr_411.code == "["
        ? local.iter_410.tape[local.iter_410.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_410.code_ptr)] : local.iter_410.code_ptr :
      local.curr_411.code == "]"
        ? local.iter_410.tape[local.iter_410.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_410.code_ptr)] : local.iter_410.code_ptr
        : local.iter_410.code_ptr)

    steps_taken = 1 + local.iter_410.steps_taken
  }
}

locals {
  end_of_code_412 = try(local.iter_411.code_ptr >= length(var.code), true)

  curr_412 = local.end_of_code_412 ? null : {
    code = substr(var.code, local.iter_411.code_ptr, 1)
    input = substr(var.code, local.iter_411.code_ptr, 1) == "," ? substr(local.iter_411.input, 0, 1) : null
  }

  iter_412 = local.end_of_code_412 ? local.iter_411 : {
    input = (local.curr_412.code == ","
      ? substr(local.iter_411.input, 1, -1)
      : local.iter_411.input)

    output = (local.curr_412.code == "."
      ? "${local.iter_411.output}${jsondecode(format("\"\\u%04x\"", local.iter_411.tape[local.iter_411.tape_ptr]))}"
      : local.iter_411.output)
    
    tape = (
      local.curr_412.code == "+"
        ? [for i, b in local.iter_411.tape : (i == local.iter_411.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_412.code == "-"
        ? [for i, b in local.iter_411.tape : (i == local.iter_411.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_412.code == ","
        ? [for i, b in local.iter_411.tape : (i == local.iter_411.tape_ptr ? local.ascii_lookup[local.curr_412.input] : b)]
        : local.iter_411.tape)

    tape_ptr = (
      local.curr_412.code == "<"
        ? local.iter_411.tape_ptr == 0 ? length(local.iter_411.tape) - 1 : local.iter_411.tape_ptr - 1 :
      local.curr_412.code == ">"
        ? local.iter_411.tape_ptr == length(local.iter_411.tape) - 1 ? 0 : local.iter_411.tape_ptr + 1
        : local.iter_411.tape_ptr)

    code_ptr = 1 + (
      local.curr_412.code == "["
        ? local.iter_411.tape[local.iter_411.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_411.code_ptr)] : local.iter_411.code_ptr :
      local.curr_412.code == "]"
        ? local.iter_411.tape[local.iter_411.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_411.code_ptr)] : local.iter_411.code_ptr
        : local.iter_411.code_ptr)

    steps_taken = 1 + local.iter_411.steps_taken
  }
}

locals {
  end_of_code_413 = try(local.iter_412.code_ptr >= length(var.code), true)

  curr_413 = local.end_of_code_413 ? null : {
    code = substr(var.code, local.iter_412.code_ptr, 1)
    input = substr(var.code, local.iter_412.code_ptr, 1) == "," ? substr(local.iter_412.input, 0, 1) : null
  }

  iter_413 = local.end_of_code_413 ? local.iter_412 : {
    input = (local.curr_413.code == ","
      ? substr(local.iter_412.input, 1, -1)
      : local.iter_412.input)

    output = (local.curr_413.code == "."
      ? "${local.iter_412.output}${jsondecode(format("\"\\u%04x\"", local.iter_412.tape[local.iter_412.tape_ptr]))}"
      : local.iter_412.output)
    
    tape = (
      local.curr_413.code == "+"
        ? [for i, b in local.iter_412.tape : (i == local.iter_412.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_413.code == "-"
        ? [for i, b in local.iter_412.tape : (i == local.iter_412.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_413.code == ","
        ? [for i, b in local.iter_412.tape : (i == local.iter_412.tape_ptr ? local.ascii_lookup[local.curr_413.input] : b)]
        : local.iter_412.tape)

    tape_ptr = (
      local.curr_413.code == "<"
        ? local.iter_412.tape_ptr == 0 ? length(local.iter_412.tape) - 1 : local.iter_412.tape_ptr - 1 :
      local.curr_413.code == ">"
        ? local.iter_412.tape_ptr == length(local.iter_412.tape) - 1 ? 0 : local.iter_412.tape_ptr + 1
        : local.iter_412.tape_ptr)

    code_ptr = 1 + (
      local.curr_413.code == "["
        ? local.iter_412.tape[local.iter_412.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_412.code_ptr)] : local.iter_412.code_ptr :
      local.curr_413.code == "]"
        ? local.iter_412.tape[local.iter_412.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_412.code_ptr)] : local.iter_412.code_ptr
        : local.iter_412.code_ptr)

    steps_taken = 1 + local.iter_412.steps_taken
  }
}

locals {
  end_of_code_414 = try(local.iter_413.code_ptr >= length(var.code), true)

  curr_414 = local.end_of_code_414 ? null : {
    code = substr(var.code, local.iter_413.code_ptr, 1)
    input = substr(var.code, local.iter_413.code_ptr, 1) == "," ? substr(local.iter_413.input, 0, 1) : null
  }

  iter_414 = local.end_of_code_414 ? local.iter_413 : {
    input = (local.curr_414.code == ","
      ? substr(local.iter_413.input, 1, -1)
      : local.iter_413.input)

    output = (local.curr_414.code == "."
      ? "${local.iter_413.output}${jsondecode(format("\"\\u%04x\"", local.iter_413.tape[local.iter_413.tape_ptr]))}"
      : local.iter_413.output)
    
    tape = (
      local.curr_414.code == "+"
        ? [for i, b in local.iter_413.tape : (i == local.iter_413.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_414.code == "-"
        ? [for i, b in local.iter_413.tape : (i == local.iter_413.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_414.code == ","
        ? [for i, b in local.iter_413.tape : (i == local.iter_413.tape_ptr ? local.ascii_lookup[local.curr_414.input] : b)]
        : local.iter_413.tape)

    tape_ptr = (
      local.curr_414.code == "<"
        ? local.iter_413.tape_ptr == 0 ? length(local.iter_413.tape) - 1 : local.iter_413.tape_ptr - 1 :
      local.curr_414.code == ">"
        ? local.iter_413.tape_ptr == length(local.iter_413.tape) - 1 ? 0 : local.iter_413.tape_ptr + 1
        : local.iter_413.tape_ptr)

    code_ptr = 1 + (
      local.curr_414.code == "["
        ? local.iter_413.tape[local.iter_413.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_413.code_ptr)] : local.iter_413.code_ptr :
      local.curr_414.code == "]"
        ? local.iter_413.tape[local.iter_413.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_413.code_ptr)] : local.iter_413.code_ptr
        : local.iter_413.code_ptr)

    steps_taken = 1 + local.iter_413.steps_taken
  }
}

locals {
  end_of_code_415 = try(local.iter_414.code_ptr >= length(var.code), true)

  curr_415 = local.end_of_code_415 ? null : {
    code = substr(var.code, local.iter_414.code_ptr, 1)
    input = substr(var.code, local.iter_414.code_ptr, 1) == "," ? substr(local.iter_414.input, 0, 1) : null
  }

  iter_415 = local.end_of_code_415 ? local.iter_414 : {
    input = (local.curr_415.code == ","
      ? substr(local.iter_414.input, 1, -1)
      : local.iter_414.input)

    output = (local.curr_415.code == "."
      ? "${local.iter_414.output}${jsondecode(format("\"\\u%04x\"", local.iter_414.tape[local.iter_414.tape_ptr]))}"
      : local.iter_414.output)
    
    tape = (
      local.curr_415.code == "+"
        ? [for i, b in local.iter_414.tape : (i == local.iter_414.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_415.code == "-"
        ? [for i, b in local.iter_414.tape : (i == local.iter_414.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_415.code == ","
        ? [for i, b in local.iter_414.tape : (i == local.iter_414.tape_ptr ? local.ascii_lookup[local.curr_415.input] : b)]
        : local.iter_414.tape)

    tape_ptr = (
      local.curr_415.code == "<"
        ? local.iter_414.tape_ptr == 0 ? length(local.iter_414.tape) - 1 : local.iter_414.tape_ptr - 1 :
      local.curr_415.code == ">"
        ? local.iter_414.tape_ptr == length(local.iter_414.tape) - 1 ? 0 : local.iter_414.tape_ptr + 1
        : local.iter_414.tape_ptr)

    code_ptr = 1 + (
      local.curr_415.code == "["
        ? local.iter_414.tape[local.iter_414.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_414.code_ptr)] : local.iter_414.code_ptr :
      local.curr_415.code == "]"
        ? local.iter_414.tape[local.iter_414.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_414.code_ptr)] : local.iter_414.code_ptr
        : local.iter_414.code_ptr)

    steps_taken = 1 + local.iter_414.steps_taken
  }
}

locals {
  end_of_code_416 = try(local.iter_415.code_ptr >= length(var.code), true)

  curr_416 = local.end_of_code_416 ? null : {
    code = substr(var.code, local.iter_415.code_ptr, 1)
    input = substr(var.code, local.iter_415.code_ptr, 1) == "," ? substr(local.iter_415.input, 0, 1) : null
  }

  iter_416 = local.end_of_code_416 ? local.iter_415 : {
    input = (local.curr_416.code == ","
      ? substr(local.iter_415.input, 1, -1)
      : local.iter_415.input)

    output = (local.curr_416.code == "."
      ? "${local.iter_415.output}${jsondecode(format("\"\\u%04x\"", local.iter_415.tape[local.iter_415.tape_ptr]))}"
      : local.iter_415.output)
    
    tape = (
      local.curr_416.code == "+"
        ? [for i, b in local.iter_415.tape : (i == local.iter_415.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_416.code == "-"
        ? [for i, b in local.iter_415.tape : (i == local.iter_415.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_416.code == ","
        ? [for i, b in local.iter_415.tape : (i == local.iter_415.tape_ptr ? local.ascii_lookup[local.curr_416.input] : b)]
        : local.iter_415.tape)

    tape_ptr = (
      local.curr_416.code == "<"
        ? local.iter_415.tape_ptr == 0 ? length(local.iter_415.tape) - 1 : local.iter_415.tape_ptr - 1 :
      local.curr_416.code == ">"
        ? local.iter_415.tape_ptr == length(local.iter_415.tape) - 1 ? 0 : local.iter_415.tape_ptr + 1
        : local.iter_415.tape_ptr)

    code_ptr = 1 + (
      local.curr_416.code == "["
        ? local.iter_415.tape[local.iter_415.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_415.code_ptr)] : local.iter_415.code_ptr :
      local.curr_416.code == "]"
        ? local.iter_415.tape[local.iter_415.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_415.code_ptr)] : local.iter_415.code_ptr
        : local.iter_415.code_ptr)

    steps_taken = 1 + local.iter_415.steps_taken
  }
}

locals {
  end_of_code_417 = try(local.iter_416.code_ptr >= length(var.code), true)

  curr_417 = local.end_of_code_417 ? null : {
    code = substr(var.code, local.iter_416.code_ptr, 1)
    input = substr(var.code, local.iter_416.code_ptr, 1) == "," ? substr(local.iter_416.input, 0, 1) : null
  }

  iter_417 = local.end_of_code_417 ? local.iter_416 : {
    input = (local.curr_417.code == ","
      ? substr(local.iter_416.input, 1, -1)
      : local.iter_416.input)

    output = (local.curr_417.code == "."
      ? "${local.iter_416.output}${jsondecode(format("\"\\u%04x\"", local.iter_416.tape[local.iter_416.tape_ptr]))}"
      : local.iter_416.output)
    
    tape = (
      local.curr_417.code == "+"
        ? [for i, b in local.iter_416.tape : (i == local.iter_416.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_417.code == "-"
        ? [for i, b in local.iter_416.tape : (i == local.iter_416.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_417.code == ","
        ? [for i, b in local.iter_416.tape : (i == local.iter_416.tape_ptr ? local.ascii_lookup[local.curr_417.input] : b)]
        : local.iter_416.tape)

    tape_ptr = (
      local.curr_417.code == "<"
        ? local.iter_416.tape_ptr == 0 ? length(local.iter_416.tape) - 1 : local.iter_416.tape_ptr - 1 :
      local.curr_417.code == ">"
        ? local.iter_416.tape_ptr == length(local.iter_416.tape) - 1 ? 0 : local.iter_416.tape_ptr + 1
        : local.iter_416.tape_ptr)

    code_ptr = 1 + (
      local.curr_417.code == "["
        ? local.iter_416.tape[local.iter_416.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_416.code_ptr)] : local.iter_416.code_ptr :
      local.curr_417.code == "]"
        ? local.iter_416.tape[local.iter_416.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_416.code_ptr)] : local.iter_416.code_ptr
        : local.iter_416.code_ptr)

    steps_taken = 1 + local.iter_416.steps_taken
  }
}

locals {
  end_of_code_418 = try(local.iter_417.code_ptr >= length(var.code), true)

  curr_418 = local.end_of_code_418 ? null : {
    code = substr(var.code, local.iter_417.code_ptr, 1)
    input = substr(var.code, local.iter_417.code_ptr, 1) == "," ? substr(local.iter_417.input, 0, 1) : null
  }

  iter_418 = local.end_of_code_418 ? local.iter_417 : {
    input = (local.curr_418.code == ","
      ? substr(local.iter_417.input, 1, -1)
      : local.iter_417.input)

    output = (local.curr_418.code == "."
      ? "${local.iter_417.output}${jsondecode(format("\"\\u%04x\"", local.iter_417.tape[local.iter_417.tape_ptr]))}"
      : local.iter_417.output)
    
    tape = (
      local.curr_418.code == "+"
        ? [for i, b in local.iter_417.tape : (i == local.iter_417.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_418.code == "-"
        ? [for i, b in local.iter_417.tape : (i == local.iter_417.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_418.code == ","
        ? [for i, b in local.iter_417.tape : (i == local.iter_417.tape_ptr ? local.ascii_lookup[local.curr_418.input] : b)]
        : local.iter_417.tape)

    tape_ptr = (
      local.curr_418.code == "<"
        ? local.iter_417.tape_ptr == 0 ? length(local.iter_417.tape) - 1 : local.iter_417.tape_ptr - 1 :
      local.curr_418.code == ">"
        ? local.iter_417.tape_ptr == length(local.iter_417.tape) - 1 ? 0 : local.iter_417.tape_ptr + 1
        : local.iter_417.tape_ptr)

    code_ptr = 1 + (
      local.curr_418.code == "["
        ? local.iter_417.tape[local.iter_417.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_417.code_ptr)] : local.iter_417.code_ptr :
      local.curr_418.code == "]"
        ? local.iter_417.tape[local.iter_417.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_417.code_ptr)] : local.iter_417.code_ptr
        : local.iter_417.code_ptr)

    steps_taken = 1 + local.iter_417.steps_taken
  }
}

locals {
  end_of_code_419 = try(local.iter_418.code_ptr >= length(var.code), true)

  curr_419 = local.end_of_code_419 ? null : {
    code = substr(var.code, local.iter_418.code_ptr, 1)
    input = substr(var.code, local.iter_418.code_ptr, 1) == "," ? substr(local.iter_418.input, 0, 1) : null
  }

  iter_419 = local.end_of_code_419 ? local.iter_418 : {
    input = (local.curr_419.code == ","
      ? substr(local.iter_418.input, 1, -1)
      : local.iter_418.input)

    output = (local.curr_419.code == "."
      ? "${local.iter_418.output}${jsondecode(format("\"\\u%04x\"", local.iter_418.tape[local.iter_418.tape_ptr]))}"
      : local.iter_418.output)
    
    tape = (
      local.curr_419.code == "+"
        ? [for i, b in local.iter_418.tape : (i == local.iter_418.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_419.code == "-"
        ? [for i, b in local.iter_418.tape : (i == local.iter_418.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_419.code == ","
        ? [for i, b in local.iter_418.tape : (i == local.iter_418.tape_ptr ? local.ascii_lookup[local.curr_419.input] : b)]
        : local.iter_418.tape)

    tape_ptr = (
      local.curr_419.code == "<"
        ? local.iter_418.tape_ptr == 0 ? length(local.iter_418.tape) - 1 : local.iter_418.tape_ptr - 1 :
      local.curr_419.code == ">"
        ? local.iter_418.tape_ptr == length(local.iter_418.tape) - 1 ? 0 : local.iter_418.tape_ptr + 1
        : local.iter_418.tape_ptr)

    code_ptr = 1 + (
      local.curr_419.code == "["
        ? local.iter_418.tape[local.iter_418.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_418.code_ptr)] : local.iter_418.code_ptr :
      local.curr_419.code == "]"
        ? local.iter_418.tape[local.iter_418.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_418.code_ptr)] : local.iter_418.code_ptr
        : local.iter_418.code_ptr)

    steps_taken = 1 + local.iter_418.steps_taken
  }
}

locals {
  end_of_code_420 = try(local.iter_419.code_ptr >= length(var.code), true)

  curr_420 = local.end_of_code_420 ? null : {
    code = substr(var.code, local.iter_419.code_ptr, 1)
    input = substr(var.code, local.iter_419.code_ptr, 1) == "," ? substr(local.iter_419.input, 0, 1) : null
  }

  iter_420 = local.end_of_code_420 ? local.iter_419 : {
    input = (local.curr_420.code == ","
      ? substr(local.iter_419.input, 1, -1)
      : local.iter_419.input)

    output = (local.curr_420.code == "."
      ? "${local.iter_419.output}${jsondecode(format("\"\\u%04x\"", local.iter_419.tape[local.iter_419.tape_ptr]))}"
      : local.iter_419.output)
    
    tape = (
      local.curr_420.code == "+"
        ? [for i, b in local.iter_419.tape : (i == local.iter_419.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_420.code == "-"
        ? [for i, b in local.iter_419.tape : (i == local.iter_419.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_420.code == ","
        ? [for i, b in local.iter_419.tape : (i == local.iter_419.tape_ptr ? local.ascii_lookup[local.curr_420.input] : b)]
        : local.iter_419.tape)

    tape_ptr = (
      local.curr_420.code == "<"
        ? local.iter_419.tape_ptr == 0 ? length(local.iter_419.tape) - 1 : local.iter_419.tape_ptr - 1 :
      local.curr_420.code == ">"
        ? local.iter_419.tape_ptr == length(local.iter_419.tape) - 1 ? 0 : local.iter_419.tape_ptr + 1
        : local.iter_419.tape_ptr)

    code_ptr = 1 + (
      local.curr_420.code == "["
        ? local.iter_419.tape[local.iter_419.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_419.code_ptr)] : local.iter_419.code_ptr :
      local.curr_420.code == "]"
        ? local.iter_419.tape[local.iter_419.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_419.code_ptr)] : local.iter_419.code_ptr
        : local.iter_419.code_ptr)

    steps_taken = 1 + local.iter_419.steps_taken
  }
}

locals {
  end_of_code_421 = try(local.iter_420.code_ptr >= length(var.code), true)

  curr_421 = local.end_of_code_421 ? null : {
    code = substr(var.code, local.iter_420.code_ptr, 1)
    input = substr(var.code, local.iter_420.code_ptr, 1) == "," ? substr(local.iter_420.input, 0, 1) : null
  }

  iter_421 = local.end_of_code_421 ? local.iter_420 : {
    input = (local.curr_421.code == ","
      ? substr(local.iter_420.input, 1, -1)
      : local.iter_420.input)

    output = (local.curr_421.code == "."
      ? "${local.iter_420.output}${jsondecode(format("\"\\u%04x\"", local.iter_420.tape[local.iter_420.tape_ptr]))}"
      : local.iter_420.output)
    
    tape = (
      local.curr_421.code == "+"
        ? [for i, b in local.iter_420.tape : (i == local.iter_420.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_421.code == "-"
        ? [for i, b in local.iter_420.tape : (i == local.iter_420.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_421.code == ","
        ? [for i, b in local.iter_420.tape : (i == local.iter_420.tape_ptr ? local.ascii_lookup[local.curr_421.input] : b)]
        : local.iter_420.tape)

    tape_ptr = (
      local.curr_421.code == "<"
        ? local.iter_420.tape_ptr == 0 ? length(local.iter_420.tape) - 1 : local.iter_420.tape_ptr - 1 :
      local.curr_421.code == ">"
        ? local.iter_420.tape_ptr == length(local.iter_420.tape) - 1 ? 0 : local.iter_420.tape_ptr + 1
        : local.iter_420.tape_ptr)

    code_ptr = 1 + (
      local.curr_421.code == "["
        ? local.iter_420.tape[local.iter_420.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_420.code_ptr)] : local.iter_420.code_ptr :
      local.curr_421.code == "]"
        ? local.iter_420.tape[local.iter_420.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_420.code_ptr)] : local.iter_420.code_ptr
        : local.iter_420.code_ptr)

    steps_taken = 1 + local.iter_420.steps_taken
  }
}

locals {
  end_of_code_422 = try(local.iter_421.code_ptr >= length(var.code), true)

  curr_422 = local.end_of_code_422 ? null : {
    code = substr(var.code, local.iter_421.code_ptr, 1)
    input = substr(var.code, local.iter_421.code_ptr, 1) == "," ? substr(local.iter_421.input, 0, 1) : null
  }

  iter_422 = local.end_of_code_422 ? local.iter_421 : {
    input = (local.curr_422.code == ","
      ? substr(local.iter_421.input, 1, -1)
      : local.iter_421.input)

    output = (local.curr_422.code == "."
      ? "${local.iter_421.output}${jsondecode(format("\"\\u%04x\"", local.iter_421.tape[local.iter_421.tape_ptr]))}"
      : local.iter_421.output)
    
    tape = (
      local.curr_422.code == "+"
        ? [for i, b in local.iter_421.tape : (i == local.iter_421.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_422.code == "-"
        ? [for i, b in local.iter_421.tape : (i == local.iter_421.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_422.code == ","
        ? [for i, b in local.iter_421.tape : (i == local.iter_421.tape_ptr ? local.ascii_lookup[local.curr_422.input] : b)]
        : local.iter_421.tape)

    tape_ptr = (
      local.curr_422.code == "<"
        ? local.iter_421.tape_ptr == 0 ? length(local.iter_421.tape) - 1 : local.iter_421.tape_ptr - 1 :
      local.curr_422.code == ">"
        ? local.iter_421.tape_ptr == length(local.iter_421.tape) - 1 ? 0 : local.iter_421.tape_ptr + 1
        : local.iter_421.tape_ptr)

    code_ptr = 1 + (
      local.curr_422.code == "["
        ? local.iter_421.tape[local.iter_421.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_421.code_ptr)] : local.iter_421.code_ptr :
      local.curr_422.code == "]"
        ? local.iter_421.tape[local.iter_421.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_421.code_ptr)] : local.iter_421.code_ptr
        : local.iter_421.code_ptr)

    steps_taken = 1 + local.iter_421.steps_taken
  }
}

locals {
  end_of_code_423 = try(local.iter_422.code_ptr >= length(var.code), true)

  curr_423 = local.end_of_code_423 ? null : {
    code = substr(var.code, local.iter_422.code_ptr, 1)
    input = substr(var.code, local.iter_422.code_ptr, 1) == "," ? substr(local.iter_422.input, 0, 1) : null
  }

  iter_423 = local.end_of_code_423 ? local.iter_422 : {
    input = (local.curr_423.code == ","
      ? substr(local.iter_422.input, 1, -1)
      : local.iter_422.input)

    output = (local.curr_423.code == "."
      ? "${local.iter_422.output}${jsondecode(format("\"\\u%04x\"", local.iter_422.tape[local.iter_422.tape_ptr]))}"
      : local.iter_422.output)
    
    tape = (
      local.curr_423.code == "+"
        ? [for i, b in local.iter_422.tape : (i == local.iter_422.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_423.code == "-"
        ? [for i, b in local.iter_422.tape : (i == local.iter_422.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_423.code == ","
        ? [for i, b in local.iter_422.tape : (i == local.iter_422.tape_ptr ? local.ascii_lookup[local.curr_423.input] : b)]
        : local.iter_422.tape)

    tape_ptr = (
      local.curr_423.code == "<"
        ? local.iter_422.tape_ptr == 0 ? length(local.iter_422.tape) - 1 : local.iter_422.tape_ptr - 1 :
      local.curr_423.code == ">"
        ? local.iter_422.tape_ptr == length(local.iter_422.tape) - 1 ? 0 : local.iter_422.tape_ptr + 1
        : local.iter_422.tape_ptr)

    code_ptr = 1 + (
      local.curr_423.code == "["
        ? local.iter_422.tape[local.iter_422.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_422.code_ptr)] : local.iter_422.code_ptr :
      local.curr_423.code == "]"
        ? local.iter_422.tape[local.iter_422.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_422.code_ptr)] : local.iter_422.code_ptr
        : local.iter_422.code_ptr)

    steps_taken = 1 + local.iter_422.steps_taken
  }
}

locals {
  end_of_code_424 = try(local.iter_423.code_ptr >= length(var.code), true)

  curr_424 = local.end_of_code_424 ? null : {
    code = substr(var.code, local.iter_423.code_ptr, 1)
    input = substr(var.code, local.iter_423.code_ptr, 1) == "," ? substr(local.iter_423.input, 0, 1) : null
  }

  iter_424 = local.end_of_code_424 ? local.iter_423 : {
    input = (local.curr_424.code == ","
      ? substr(local.iter_423.input, 1, -1)
      : local.iter_423.input)

    output = (local.curr_424.code == "."
      ? "${local.iter_423.output}${jsondecode(format("\"\\u%04x\"", local.iter_423.tape[local.iter_423.tape_ptr]))}"
      : local.iter_423.output)
    
    tape = (
      local.curr_424.code == "+"
        ? [for i, b in local.iter_423.tape : (i == local.iter_423.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_424.code == "-"
        ? [for i, b in local.iter_423.tape : (i == local.iter_423.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_424.code == ","
        ? [for i, b in local.iter_423.tape : (i == local.iter_423.tape_ptr ? local.ascii_lookup[local.curr_424.input] : b)]
        : local.iter_423.tape)

    tape_ptr = (
      local.curr_424.code == "<"
        ? local.iter_423.tape_ptr == 0 ? length(local.iter_423.tape) - 1 : local.iter_423.tape_ptr - 1 :
      local.curr_424.code == ">"
        ? local.iter_423.tape_ptr == length(local.iter_423.tape) - 1 ? 0 : local.iter_423.tape_ptr + 1
        : local.iter_423.tape_ptr)

    code_ptr = 1 + (
      local.curr_424.code == "["
        ? local.iter_423.tape[local.iter_423.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_423.code_ptr)] : local.iter_423.code_ptr :
      local.curr_424.code == "]"
        ? local.iter_423.tape[local.iter_423.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_423.code_ptr)] : local.iter_423.code_ptr
        : local.iter_423.code_ptr)

    steps_taken = 1 + local.iter_423.steps_taken
  }
}

locals {
  end_of_code_425 = try(local.iter_424.code_ptr >= length(var.code), true)

  curr_425 = local.end_of_code_425 ? null : {
    code = substr(var.code, local.iter_424.code_ptr, 1)
    input = substr(var.code, local.iter_424.code_ptr, 1) == "," ? substr(local.iter_424.input, 0, 1) : null
  }

  iter_425 = local.end_of_code_425 ? local.iter_424 : {
    input = (local.curr_425.code == ","
      ? substr(local.iter_424.input, 1, -1)
      : local.iter_424.input)

    output = (local.curr_425.code == "."
      ? "${local.iter_424.output}${jsondecode(format("\"\\u%04x\"", local.iter_424.tape[local.iter_424.tape_ptr]))}"
      : local.iter_424.output)
    
    tape = (
      local.curr_425.code == "+"
        ? [for i, b in local.iter_424.tape : (i == local.iter_424.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_425.code == "-"
        ? [for i, b in local.iter_424.tape : (i == local.iter_424.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_425.code == ","
        ? [for i, b in local.iter_424.tape : (i == local.iter_424.tape_ptr ? local.ascii_lookup[local.curr_425.input] : b)]
        : local.iter_424.tape)

    tape_ptr = (
      local.curr_425.code == "<"
        ? local.iter_424.tape_ptr == 0 ? length(local.iter_424.tape) - 1 : local.iter_424.tape_ptr - 1 :
      local.curr_425.code == ">"
        ? local.iter_424.tape_ptr == length(local.iter_424.tape) - 1 ? 0 : local.iter_424.tape_ptr + 1
        : local.iter_424.tape_ptr)

    code_ptr = 1 + (
      local.curr_425.code == "["
        ? local.iter_424.tape[local.iter_424.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_424.code_ptr)] : local.iter_424.code_ptr :
      local.curr_425.code == "]"
        ? local.iter_424.tape[local.iter_424.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_424.code_ptr)] : local.iter_424.code_ptr
        : local.iter_424.code_ptr)

    steps_taken = 1 + local.iter_424.steps_taken
  }
}

locals {
  end_of_code_426 = try(local.iter_425.code_ptr >= length(var.code), true)

  curr_426 = local.end_of_code_426 ? null : {
    code = substr(var.code, local.iter_425.code_ptr, 1)
    input = substr(var.code, local.iter_425.code_ptr, 1) == "," ? substr(local.iter_425.input, 0, 1) : null
  }

  iter_426 = local.end_of_code_426 ? local.iter_425 : {
    input = (local.curr_426.code == ","
      ? substr(local.iter_425.input, 1, -1)
      : local.iter_425.input)

    output = (local.curr_426.code == "."
      ? "${local.iter_425.output}${jsondecode(format("\"\\u%04x\"", local.iter_425.tape[local.iter_425.tape_ptr]))}"
      : local.iter_425.output)
    
    tape = (
      local.curr_426.code == "+"
        ? [for i, b in local.iter_425.tape : (i == local.iter_425.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_426.code == "-"
        ? [for i, b in local.iter_425.tape : (i == local.iter_425.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_426.code == ","
        ? [for i, b in local.iter_425.tape : (i == local.iter_425.tape_ptr ? local.ascii_lookup[local.curr_426.input] : b)]
        : local.iter_425.tape)

    tape_ptr = (
      local.curr_426.code == "<"
        ? local.iter_425.tape_ptr == 0 ? length(local.iter_425.tape) - 1 : local.iter_425.tape_ptr - 1 :
      local.curr_426.code == ">"
        ? local.iter_425.tape_ptr == length(local.iter_425.tape) - 1 ? 0 : local.iter_425.tape_ptr + 1
        : local.iter_425.tape_ptr)

    code_ptr = 1 + (
      local.curr_426.code == "["
        ? local.iter_425.tape[local.iter_425.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_425.code_ptr)] : local.iter_425.code_ptr :
      local.curr_426.code == "]"
        ? local.iter_425.tape[local.iter_425.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_425.code_ptr)] : local.iter_425.code_ptr
        : local.iter_425.code_ptr)

    steps_taken = 1 + local.iter_425.steps_taken
  }
}

locals {
  end_of_code_427 = try(local.iter_426.code_ptr >= length(var.code), true)

  curr_427 = local.end_of_code_427 ? null : {
    code = substr(var.code, local.iter_426.code_ptr, 1)
    input = substr(var.code, local.iter_426.code_ptr, 1) == "," ? substr(local.iter_426.input, 0, 1) : null
  }

  iter_427 = local.end_of_code_427 ? local.iter_426 : {
    input = (local.curr_427.code == ","
      ? substr(local.iter_426.input, 1, -1)
      : local.iter_426.input)

    output = (local.curr_427.code == "."
      ? "${local.iter_426.output}${jsondecode(format("\"\\u%04x\"", local.iter_426.tape[local.iter_426.tape_ptr]))}"
      : local.iter_426.output)
    
    tape = (
      local.curr_427.code == "+"
        ? [for i, b in local.iter_426.tape : (i == local.iter_426.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_427.code == "-"
        ? [for i, b in local.iter_426.tape : (i == local.iter_426.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_427.code == ","
        ? [for i, b in local.iter_426.tape : (i == local.iter_426.tape_ptr ? local.ascii_lookup[local.curr_427.input] : b)]
        : local.iter_426.tape)

    tape_ptr = (
      local.curr_427.code == "<"
        ? local.iter_426.tape_ptr == 0 ? length(local.iter_426.tape) - 1 : local.iter_426.tape_ptr - 1 :
      local.curr_427.code == ">"
        ? local.iter_426.tape_ptr == length(local.iter_426.tape) - 1 ? 0 : local.iter_426.tape_ptr + 1
        : local.iter_426.tape_ptr)

    code_ptr = 1 + (
      local.curr_427.code == "["
        ? local.iter_426.tape[local.iter_426.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_426.code_ptr)] : local.iter_426.code_ptr :
      local.curr_427.code == "]"
        ? local.iter_426.tape[local.iter_426.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_426.code_ptr)] : local.iter_426.code_ptr
        : local.iter_426.code_ptr)

    steps_taken = 1 + local.iter_426.steps_taken
  }
}

locals {
  end_of_code_428 = try(local.iter_427.code_ptr >= length(var.code), true)

  curr_428 = local.end_of_code_428 ? null : {
    code = substr(var.code, local.iter_427.code_ptr, 1)
    input = substr(var.code, local.iter_427.code_ptr, 1) == "," ? substr(local.iter_427.input, 0, 1) : null
  }

  iter_428 = local.end_of_code_428 ? local.iter_427 : {
    input = (local.curr_428.code == ","
      ? substr(local.iter_427.input, 1, -1)
      : local.iter_427.input)

    output = (local.curr_428.code == "."
      ? "${local.iter_427.output}${jsondecode(format("\"\\u%04x\"", local.iter_427.tape[local.iter_427.tape_ptr]))}"
      : local.iter_427.output)
    
    tape = (
      local.curr_428.code == "+"
        ? [for i, b in local.iter_427.tape : (i == local.iter_427.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_428.code == "-"
        ? [for i, b in local.iter_427.tape : (i == local.iter_427.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_428.code == ","
        ? [for i, b in local.iter_427.tape : (i == local.iter_427.tape_ptr ? local.ascii_lookup[local.curr_428.input] : b)]
        : local.iter_427.tape)

    tape_ptr = (
      local.curr_428.code == "<"
        ? local.iter_427.tape_ptr == 0 ? length(local.iter_427.tape) - 1 : local.iter_427.tape_ptr - 1 :
      local.curr_428.code == ">"
        ? local.iter_427.tape_ptr == length(local.iter_427.tape) - 1 ? 0 : local.iter_427.tape_ptr + 1
        : local.iter_427.tape_ptr)

    code_ptr = 1 + (
      local.curr_428.code == "["
        ? local.iter_427.tape[local.iter_427.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_427.code_ptr)] : local.iter_427.code_ptr :
      local.curr_428.code == "]"
        ? local.iter_427.tape[local.iter_427.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_427.code_ptr)] : local.iter_427.code_ptr
        : local.iter_427.code_ptr)

    steps_taken = 1 + local.iter_427.steps_taken
  }
}

locals {
  end_of_code_429 = try(local.iter_428.code_ptr >= length(var.code), true)

  curr_429 = local.end_of_code_429 ? null : {
    code = substr(var.code, local.iter_428.code_ptr, 1)
    input = substr(var.code, local.iter_428.code_ptr, 1) == "," ? substr(local.iter_428.input, 0, 1) : null
  }

  iter_429 = local.end_of_code_429 ? local.iter_428 : {
    input = (local.curr_429.code == ","
      ? substr(local.iter_428.input, 1, -1)
      : local.iter_428.input)

    output = (local.curr_429.code == "."
      ? "${local.iter_428.output}${jsondecode(format("\"\\u%04x\"", local.iter_428.tape[local.iter_428.tape_ptr]))}"
      : local.iter_428.output)
    
    tape = (
      local.curr_429.code == "+"
        ? [for i, b in local.iter_428.tape : (i == local.iter_428.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_429.code == "-"
        ? [for i, b in local.iter_428.tape : (i == local.iter_428.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_429.code == ","
        ? [for i, b in local.iter_428.tape : (i == local.iter_428.tape_ptr ? local.ascii_lookup[local.curr_429.input] : b)]
        : local.iter_428.tape)

    tape_ptr = (
      local.curr_429.code == "<"
        ? local.iter_428.tape_ptr == 0 ? length(local.iter_428.tape) - 1 : local.iter_428.tape_ptr - 1 :
      local.curr_429.code == ">"
        ? local.iter_428.tape_ptr == length(local.iter_428.tape) - 1 ? 0 : local.iter_428.tape_ptr + 1
        : local.iter_428.tape_ptr)

    code_ptr = 1 + (
      local.curr_429.code == "["
        ? local.iter_428.tape[local.iter_428.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_428.code_ptr)] : local.iter_428.code_ptr :
      local.curr_429.code == "]"
        ? local.iter_428.tape[local.iter_428.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_428.code_ptr)] : local.iter_428.code_ptr
        : local.iter_428.code_ptr)

    steps_taken = 1 + local.iter_428.steps_taken
  }
}

locals {
  end_of_code_430 = try(local.iter_429.code_ptr >= length(var.code), true)

  curr_430 = local.end_of_code_430 ? null : {
    code = substr(var.code, local.iter_429.code_ptr, 1)
    input = substr(var.code, local.iter_429.code_ptr, 1) == "," ? substr(local.iter_429.input, 0, 1) : null
  }

  iter_430 = local.end_of_code_430 ? local.iter_429 : {
    input = (local.curr_430.code == ","
      ? substr(local.iter_429.input, 1, -1)
      : local.iter_429.input)

    output = (local.curr_430.code == "."
      ? "${local.iter_429.output}${jsondecode(format("\"\\u%04x\"", local.iter_429.tape[local.iter_429.tape_ptr]))}"
      : local.iter_429.output)
    
    tape = (
      local.curr_430.code == "+"
        ? [for i, b in local.iter_429.tape : (i == local.iter_429.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_430.code == "-"
        ? [for i, b in local.iter_429.tape : (i == local.iter_429.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_430.code == ","
        ? [for i, b in local.iter_429.tape : (i == local.iter_429.tape_ptr ? local.ascii_lookup[local.curr_430.input] : b)]
        : local.iter_429.tape)

    tape_ptr = (
      local.curr_430.code == "<"
        ? local.iter_429.tape_ptr == 0 ? length(local.iter_429.tape) - 1 : local.iter_429.tape_ptr - 1 :
      local.curr_430.code == ">"
        ? local.iter_429.tape_ptr == length(local.iter_429.tape) - 1 ? 0 : local.iter_429.tape_ptr + 1
        : local.iter_429.tape_ptr)

    code_ptr = 1 + (
      local.curr_430.code == "["
        ? local.iter_429.tape[local.iter_429.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_429.code_ptr)] : local.iter_429.code_ptr :
      local.curr_430.code == "]"
        ? local.iter_429.tape[local.iter_429.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_429.code_ptr)] : local.iter_429.code_ptr
        : local.iter_429.code_ptr)

    steps_taken = 1 + local.iter_429.steps_taken
  }
}

locals {
  end_of_code_431 = try(local.iter_430.code_ptr >= length(var.code), true)

  curr_431 = local.end_of_code_431 ? null : {
    code = substr(var.code, local.iter_430.code_ptr, 1)
    input = substr(var.code, local.iter_430.code_ptr, 1) == "," ? substr(local.iter_430.input, 0, 1) : null
  }

  iter_431 = local.end_of_code_431 ? local.iter_430 : {
    input = (local.curr_431.code == ","
      ? substr(local.iter_430.input, 1, -1)
      : local.iter_430.input)

    output = (local.curr_431.code == "."
      ? "${local.iter_430.output}${jsondecode(format("\"\\u%04x\"", local.iter_430.tape[local.iter_430.tape_ptr]))}"
      : local.iter_430.output)
    
    tape = (
      local.curr_431.code == "+"
        ? [for i, b in local.iter_430.tape : (i == local.iter_430.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_431.code == "-"
        ? [for i, b in local.iter_430.tape : (i == local.iter_430.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_431.code == ","
        ? [for i, b in local.iter_430.tape : (i == local.iter_430.tape_ptr ? local.ascii_lookup[local.curr_431.input] : b)]
        : local.iter_430.tape)

    tape_ptr = (
      local.curr_431.code == "<"
        ? local.iter_430.tape_ptr == 0 ? length(local.iter_430.tape) - 1 : local.iter_430.tape_ptr - 1 :
      local.curr_431.code == ">"
        ? local.iter_430.tape_ptr == length(local.iter_430.tape) - 1 ? 0 : local.iter_430.tape_ptr + 1
        : local.iter_430.tape_ptr)

    code_ptr = 1 + (
      local.curr_431.code == "["
        ? local.iter_430.tape[local.iter_430.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_430.code_ptr)] : local.iter_430.code_ptr :
      local.curr_431.code == "]"
        ? local.iter_430.tape[local.iter_430.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_430.code_ptr)] : local.iter_430.code_ptr
        : local.iter_430.code_ptr)

    steps_taken = 1 + local.iter_430.steps_taken
  }
}

locals {
  end_of_code_432 = try(local.iter_431.code_ptr >= length(var.code), true)

  curr_432 = local.end_of_code_432 ? null : {
    code = substr(var.code, local.iter_431.code_ptr, 1)
    input = substr(var.code, local.iter_431.code_ptr, 1) == "," ? substr(local.iter_431.input, 0, 1) : null
  }

  iter_432 = local.end_of_code_432 ? local.iter_431 : {
    input = (local.curr_432.code == ","
      ? substr(local.iter_431.input, 1, -1)
      : local.iter_431.input)

    output = (local.curr_432.code == "."
      ? "${local.iter_431.output}${jsondecode(format("\"\\u%04x\"", local.iter_431.tape[local.iter_431.tape_ptr]))}"
      : local.iter_431.output)
    
    tape = (
      local.curr_432.code == "+"
        ? [for i, b in local.iter_431.tape : (i == local.iter_431.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_432.code == "-"
        ? [for i, b in local.iter_431.tape : (i == local.iter_431.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_432.code == ","
        ? [for i, b in local.iter_431.tape : (i == local.iter_431.tape_ptr ? local.ascii_lookup[local.curr_432.input] : b)]
        : local.iter_431.tape)

    tape_ptr = (
      local.curr_432.code == "<"
        ? local.iter_431.tape_ptr == 0 ? length(local.iter_431.tape) - 1 : local.iter_431.tape_ptr - 1 :
      local.curr_432.code == ">"
        ? local.iter_431.tape_ptr == length(local.iter_431.tape) - 1 ? 0 : local.iter_431.tape_ptr + 1
        : local.iter_431.tape_ptr)

    code_ptr = 1 + (
      local.curr_432.code == "["
        ? local.iter_431.tape[local.iter_431.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_431.code_ptr)] : local.iter_431.code_ptr :
      local.curr_432.code == "]"
        ? local.iter_431.tape[local.iter_431.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_431.code_ptr)] : local.iter_431.code_ptr
        : local.iter_431.code_ptr)

    steps_taken = 1 + local.iter_431.steps_taken
  }
}

locals {
  end_of_code_433 = try(local.iter_432.code_ptr >= length(var.code), true)

  curr_433 = local.end_of_code_433 ? null : {
    code = substr(var.code, local.iter_432.code_ptr, 1)
    input = substr(var.code, local.iter_432.code_ptr, 1) == "," ? substr(local.iter_432.input, 0, 1) : null
  }

  iter_433 = local.end_of_code_433 ? local.iter_432 : {
    input = (local.curr_433.code == ","
      ? substr(local.iter_432.input, 1, -1)
      : local.iter_432.input)

    output = (local.curr_433.code == "."
      ? "${local.iter_432.output}${jsondecode(format("\"\\u%04x\"", local.iter_432.tape[local.iter_432.tape_ptr]))}"
      : local.iter_432.output)
    
    tape = (
      local.curr_433.code == "+"
        ? [for i, b in local.iter_432.tape : (i == local.iter_432.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_433.code == "-"
        ? [for i, b in local.iter_432.tape : (i == local.iter_432.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_433.code == ","
        ? [for i, b in local.iter_432.tape : (i == local.iter_432.tape_ptr ? local.ascii_lookup[local.curr_433.input] : b)]
        : local.iter_432.tape)

    tape_ptr = (
      local.curr_433.code == "<"
        ? local.iter_432.tape_ptr == 0 ? length(local.iter_432.tape) - 1 : local.iter_432.tape_ptr - 1 :
      local.curr_433.code == ">"
        ? local.iter_432.tape_ptr == length(local.iter_432.tape) - 1 ? 0 : local.iter_432.tape_ptr + 1
        : local.iter_432.tape_ptr)

    code_ptr = 1 + (
      local.curr_433.code == "["
        ? local.iter_432.tape[local.iter_432.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_432.code_ptr)] : local.iter_432.code_ptr :
      local.curr_433.code == "]"
        ? local.iter_432.tape[local.iter_432.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_432.code_ptr)] : local.iter_432.code_ptr
        : local.iter_432.code_ptr)

    steps_taken = 1 + local.iter_432.steps_taken
  }
}

locals {
  end_of_code_434 = try(local.iter_433.code_ptr >= length(var.code), true)

  curr_434 = local.end_of_code_434 ? null : {
    code = substr(var.code, local.iter_433.code_ptr, 1)
    input = substr(var.code, local.iter_433.code_ptr, 1) == "," ? substr(local.iter_433.input, 0, 1) : null
  }

  iter_434 = local.end_of_code_434 ? local.iter_433 : {
    input = (local.curr_434.code == ","
      ? substr(local.iter_433.input, 1, -1)
      : local.iter_433.input)

    output = (local.curr_434.code == "."
      ? "${local.iter_433.output}${jsondecode(format("\"\\u%04x\"", local.iter_433.tape[local.iter_433.tape_ptr]))}"
      : local.iter_433.output)
    
    tape = (
      local.curr_434.code == "+"
        ? [for i, b in local.iter_433.tape : (i == local.iter_433.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_434.code == "-"
        ? [for i, b in local.iter_433.tape : (i == local.iter_433.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_434.code == ","
        ? [for i, b in local.iter_433.tape : (i == local.iter_433.tape_ptr ? local.ascii_lookup[local.curr_434.input] : b)]
        : local.iter_433.tape)

    tape_ptr = (
      local.curr_434.code == "<"
        ? local.iter_433.tape_ptr == 0 ? length(local.iter_433.tape) - 1 : local.iter_433.tape_ptr - 1 :
      local.curr_434.code == ">"
        ? local.iter_433.tape_ptr == length(local.iter_433.tape) - 1 ? 0 : local.iter_433.tape_ptr + 1
        : local.iter_433.tape_ptr)

    code_ptr = 1 + (
      local.curr_434.code == "["
        ? local.iter_433.tape[local.iter_433.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_433.code_ptr)] : local.iter_433.code_ptr :
      local.curr_434.code == "]"
        ? local.iter_433.tape[local.iter_433.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_433.code_ptr)] : local.iter_433.code_ptr
        : local.iter_433.code_ptr)

    steps_taken = 1 + local.iter_433.steps_taken
  }
}

locals {
  end_of_code_435 = try(local.iter_434.code_ptr >= length(var.code), true)

  curr_435 = local.end_of_code_435 ? null : {
    code = substr(var.code, local.iter_434.code_ptr, 1)
    input = substr(var.code, local.iter_434.code_ptr, 1) == "," ? substr(local.iter_434.input, 0, 1) : null
  }

  iter_435 = local.end_of_code_435 ? local.iter_434 : {
    input = (local.curr_435.code == ","
      ? substr(local.iter_434.input, 1, -1)
      : local.iter_434.input)

    output = (local.curr_435.code == "."
      ? "${local.iter_434.output}${jsondecode(format("\"\\u%04x\"", local.iter_434.tape[local.iter_434.tape_ptr]))}"
      : local.iter_434.output)
    
    tape = (
      local.curr_435.code == "+"
        ? [for i, b in local.iter_434.tape : (i == local.iter_434.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_435.code == "-"
        ? [for i, b in local.iter_434.tape : (i == local.iter_434.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_435.code == ","
        ? [for i, b in local.iter_434.tape : (i == local.iter_434.tape_ptr ? local.ascii_lookup[local.curr_435.input] : b)]
        : local.iter_434.tape)

    tape_ptr = (
      local.curr_435.code == "<"
        ? local.iter_434.tape_ptr == 0 ? length(local.iter_434.tape) - 1 : local.iter_434.tape_ptr - 1 :
      local.curr_435.code == ">"
        ? local.iter_434.tape_ptr == length(local.iter_434.tape) - 1 ? 0 : local.iter_434.tape_ptr + 1
        : local.iter_434.tape_ptr)

    code_ptr = 1 + (
      local.curr_435.code == "["
        ? local.iter_434.tape[local.iter_434.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_434.code_ptr)] : local.iter_434.code_ptr :
      local.curr_435.code == "]"
        ? local.iter_434.tape[local.iter_434.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_434.code_ptr)] : local.iter_434.code_ptr
        : local.iter_434.code_ptr)

    steps_taken = 1 + local.iter_434.steps_taken
  }
}

locals {
  end_of_code_436 = try(local.iter_435.code_ptr >= length(var.code), true)

  curr_436 = local.end_of_code_436 ? null : {
    code = substr(var.code, local.iter_435.code_ptr, 1)
    input = substr(var.code, local.iter_435.code_ptr, 1) == "," ? substr(local.iter_435.input, 0, 1) : null
  }

  iter_436 = local.end_of_code_436 ? local.iter_435 : {
    input = (local.curr_436.code == ","
      ? substr(local.iter_435.input, 1, -1)
      : local.iter_435.input)

    output = (local.curr_436.code == "."
      ? "${local.iter_435.output}${jsondecode(format("\"\\u%04x\"", local.iter_435.tape[local.iter_435.tape_ptr]))}"
      : local.iter_435.output)
    
    tape = (
      local.curr_436.code == "+"
        ? [for i, b in local.iter_435.tape : (i == local.iter_435.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_436.code == "-"
        ? [for i, b in local.iter_435.tape : (i == local.iter_435.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_436.code == ","
        ? [for i, b in local.iter_435.tape : (i == local.iter_435.tape_ptr ? local.ascii_lookup[local.curr_436.input] : b)]
        : local.iter_435.tape)

    tape_ptr = (
      local.curr_436.code == "<"
        ? local.iter_435.tape_ptr == 0 ? length(local.iter_435.tape) - 1 : local.iter_435.tape_ptr - 1 :
      local.curr_436.code == ">"
        ? local.iter_435.tape_ptr == length(local.iter_435.tape) - 1 ? 0 : local.iter_435.tape_ptr + 1
        : local.iter_435.tape_ptr)

    code_ptr = 1 + (
      local.curr_436.code == "["
        ? local.iter_435.tape[local.iter_435.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_435.code_ptr)] : local.iter_435.code_ptr :
      local.curr_436.code == "]"
        ? local.iter_435.tape[local.iter_435.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_435.code_ptr)] : local.iter_435.code_ptr
        : local.iter_435.code_ptr)

    steps_taken = 1 + local.iter_435.steps_taken
  }
}

locals {
  end_of_code_437 = try(local.iter_436.code_ptr >= length(var.code), true)

  curr_437 = local.end_of_code_437 ? null : {
    code = substr(var.code, local.iter_436.code_ptr, 1)
    input = substr(var.code, local.iter_436.code_ptr, 1) == "," ? substr(local.iter_436.input, 0, 1) : null
  }

  iter_437 = local.end_of_code_437 ? local.iter_436 : {
    input = (local.curr_437.code == ","
      ? substr(local.iter_436.input, 1, -1)
      : local.iter_436.input)

    output = (local.curr_437.code == "."
      ? "${local.iter_436.output}${jsondecode(format("\"\\u%04x\"", local.iter_436.tape[local.iter_436.tape_ptr]))}"
      : local.iter_436.output)
    
    tape = (
      local.curr_437.code == "+"
        ? [for i, b in local.iter_436.tape : (i == local.iter_436.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_437.code == "-"
        ? [for i, b in local.iter_436.tape : (i == local.iter_436.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_437.code == ","
        ? [for i, b in local.iter_436.tape : (i == local.iter_436.tape_ptr ? local.ascii_lookup[local.curr_437.input] : b)]
        : local.iter_436.tape)

    tape_ptr = (
      local.curr_437.code == "<"
        ? local.iter_436.tape_ptr == 0 ? length(local.iter_436.tape) - 1 : local.iter_436.tape_ptr - 1 :
      local.curr_437.code == ">"
        ? local.iter_436.tape_ptr == length(local.iter_436.tape) - 1 ? 0 : local.iter_436.tape_ptr + 1
        : local.iter_436.tape_ptr)

    code_ptr = 1 + (
      local.curr_437.code == "["
        ? local.iter_436.tape[local.iter_436.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_436.code_ptr)] : local.iter_436.code_ptr :
      local.curr_437.code == "]"
        ? local.iter_436.tape[local.iter_436.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_436.code_ptr)] : local.iter_436.code_ptr
        : local.iter_436.code_ptr)

    steps_taken = 1 + local.iter_436.steps_taken
  }
}

locals {
  end_of_code_438 = try(local.iter_437.code_ptr >= length(var.code), true)

  curr_438 = local.end_of_code_438 ? null : {
    code = substr(var.code, local.iter_437.code_ptr, 1)
    input = substr(var.code, local.iter_437.code_ptr, 1) == "," ? substr(local.iter_437.input, 0, 1) : null
  }

  iter_438 = local.end_of_code_438 ? local.iter_437 : {
    input = (local.curr_438.code == ","
      ? substr(local.iter_437.input, 1, -1)
      : local.iter_437.input)

    output = (local.curr_438.code == "."
      ? "${local.iter_437.output}${jsondecode(format("\"\\u%04x\"", local.iter_437.tape[local.iter_437.tape_ptr]))}"
      : local.iter_437.output)
    
    tape = (
      local.curr_438.code == "+"
        ? [for i, b in local.iter_437.tape : (i == local.iter_437.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_438.code == "-"
        ? [for i, b in local.iter_437.tape : (i == local.iter_437.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_438.code == ","
        ? [for i, b in local.iter_437.tape : (i == local.iter_437.tape_ptr ? local.ascii_lookup[local.curr_438.input] : b)]
        : local.iter_437.tape)

    tape_ptr = (
      local.curr_438.code == "<"
        ? local.iter_437.tape_ptr == 0 ? length(local.iter_437.tape) - 1 : local.iter_437.tape_ptr - 1 :
      local.curr_438.code == ">"
        ? local.iter_437.tape_ptr == length(local.iter_437.tape) - 1 ? 0 : local.iter_437.tape_ptr + 1
        : local.iter_437.tape_ptr)

    code_ptr = 1 + (
      local.curr_438.code == "["
        ? local.iter_437.tape[local.iter_437.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_437.code_ptr)] : local.iter_437.code_ptr :
      local.curr_438.code == "]"
        ? local.iter_437.tape[local.iter_437.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_437.code_ptr)] : local.iter_437.code_ptr
        : local.iter_437.code_ptr)

    steps_taken = 1 + local.iter_437.steps_taken
  }
}

locals {
  end_of_code_439 = try(local.iter_438.code_ptr >= length(var.code), true)

  curr_439 = local.end_of_code_439 ? null : {
    code = substr(var.code, local.iter_438.code_ptr, 1)
    input = substr(var.code, local.iter_438.code_ptr, 1) == "," ? substr(local.iter_438.input, 0, 1) : null
  }

  iter_439 = local.end_of_code_439 ? local.iter_438 : {
    input = (local.curr_439.code == ","
      ? substr(local.iter_438.input, 1, -1)
      : local.iter_438.input)

    output = (local.curr_439.code == "."
      ? "${local.iter_438.output}${jsondecode(format("\"\\u%04x\"", local.iter_438.tape[local.iter_438.tape_ptr]))}"
      : local.iter_438.output)
    
    tape = (
      local.curr_439.code == "+"
        ? [for i, b in local.iter_438.tape : (i == local.iter_438.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_439.code == "-"
        ? [for i, b in local.iter_438.tape : (i == local.iter_438.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_439.code == ","
        ? [for i, b in local.iter_438.tape : (i == local.iter_438.tape_ptr ? local.ascii_lookup[local.curr_439.input] : b)]
        : local.iter_438.tape)

    tape_ptr = (
      local.curr_439.code == "<"
        ? local.iter_438.tape_ptr == 0 ? length(local.iter_438.tape) - 1 : local.iter_438.tape_ptr - 1 :
      local.curr_439.code == ">"
        ? local.iter_438.tape_ptr == length(local.iter_438.tape) - 1 ? 0 : local.iter_438.tape_ptr + 1
        : local.iter_438.tape_ptr)

    code_ptr = 1 + (
      local.curr_439.code == "["
        ? local.iter_438.tape[local.iter_438.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_438.code_ptr)] : local.iter_438.code_ptr :
      local.curr_439.code == "]"
        ? local.iter_438.tape[local.iter_438.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_438.code_ptr)] : local.iter_438.code_ptr
        : local.iter_438.code_ptr)

    steps_taken = 1 + local.iter_438.steps_taken
  }
}

locals {
  end_of_code_440 = try(local.iter_439.code_ptr >= length(var.code), true)

  curr_440 = local.end_of_code_440 ? null : {
    code = substr(var.code, local.iter_439.code_ptr, 1)
    input = substr(var.code, local.iter_439.code_ptr, 1) == "," ? substr(local.iter_439.input, 0, 1) : null
  }

  iter_440 = local.end_of_code_440 ? local.iter_439 : {
    input = (local.curr_440.code == ","
      ? substr(local.iter_439.input, 1, -1)
      : local.iter_439.input)

    output = (local.curr_440.code == "."
      ? "${local.iter_439.output}${jsondecode(format("\"\\u%04x\"", local.iter_439.tape[local.iter_439.tape_ptr]))}"
      : local.iter_439.output)
    
    tape = (
      local.curr_440.code == "+"
        ? [for i, b in local.iter_439.tape : (i == local.iter_439.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_440.code == "-"
        ? [for i, b in local.iter_439.tape : (i == local.iter_439.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_440.code == ","
        ? [for i, b in local.iter_439.tape : (i == local.iter_439.tape_ptr ? local.ascii_lookup[local.curr_440.input] : b)]
        : local.iter_439.tape)

    tape_ptr = (
      local.curr_440.code == "<"
        ? local.iter_439.tape_ptr == 0 ? length(local.iter_439.tape) - 1 : local.iter_439.tape_ptr - 1 :
      local.curr_440.code == ">"
        ? local.iter_439.tape_ptr == length(local.iter_439.tape) - 1 ? 0 : local.iter_439.tape_ptr + 1
        : local.iter_439.tape_ptr)

    code_ptr = 1 + (
      local.curr_440.code == "["
        ? local.iter_439.tape[local.iter_439.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_439.code_ptr)] : local.iter_439.code_ptr :
      local.curr_440.code == "]"
        ? local.iter_439.tape[local.iter_439.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_439.code_ptr)] : local.iter_439.code_ptr
        : local.iter_439.code_ptr)

    steps_taken = 1 + local.iter_439.steps_taken
  }
}

locals {
  end_of_code_441 = try(local.iter_440.code_ptr >= length(var.code), true)

  curr_441 = local.end_of_code_441 ? null : {
    code = substr(var.code, local.iter_440.code_ptr, 1)
    input = substr(var.code, local.iter_440.code_ptr, 1) == "," ? substr(local.iter_440.input, 0, 1) : null
  }

  iter_441 = local.end_of_code_441 ? local.iter_440 : {
    input = (local.curr_441.code == ","
      ? substr(local.iter_440.input, 1, -1)
      : local.iter_440.input)

    output = (local.curr_441.code == "."
      ? "${local.iter_440.output}${jsondecode(format("\"\\u%04x\"", local.iter_440.tape[local.iter_440.tape_ptr]))}"
      : local.iter_440.output)
    
    tape = (
      local.curr_441.code == "+"
        ? [for i, b in local.iter_440.tape : (i == local.iter_440.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_441.code == "-"
        ? [for i, b in local.iter_440.tape : (i == local.iter_440.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_441.code == ","
        ? [for i, b in local.iter_440.tape : (i == local.iter_440.tape_ptr ? local.ascii_lookup[local.curr_441.input] : b)]
        : local.iter_440.tape)

    tape_ptr = (
      local.curr_441.code == "<"
        ? local.iter_440.tape_ptr == 0 ? length(local.iter_440.tape) - 1 : local.iter_440.tape_ptr - 1 :
      local.curr_441.code == ">"
        ? local.iter_440.tape_ptr == length(local.iter_440.tape) - 1 ? 0 : local.iter_440.tape_ptr + 1
        : local.iter_440.tape_ptr)

    code_ptr = 1 + (
      local.curr_441.code == "["
        ? local.iter_440.tape[local.iter_440.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_440.code_ptr)] : local.iter_440.code_ptr :
      local.curr_441.code == "]"
        ? local.iter_440.tape[local.iter_440.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_440.code_ptr)] : local.iter_440.code_ptr
        : local.iter_440.code_ptr)

    steps_taken = 1 + local.iter_440.steps_taken
  }
}

locals {
  end_of_code_442 = try(local.iter_441.code_ptr >= length(var.code), true)

  curr_442 = local.end_of_code_442 ? null : {
    code = substr(var.code, local.iter_441.code_ptr, 1)
    input = substr(var.code, local.iter_441.code_ptr, 1) == "," ? substr(local.iter_441.input, 0, 1) : null
  }

  iter_442 = local.end_of_code_442 ? local.iter_441 : {
    input = (local.curr_442.code == ","
      ? substr(local.iter_441.input, 1, -1)
      : local.iter_441.input)

    output = (local.curr_442.code == "."
      ? "${local.iter_441.output}${jsondecode(format("\"\\u%04x\"", local.iter_441.tape[local.iter_441.tape_ptr]))}"
      : local.iter_441.output)
    
    tape = (
      local.curr_442.code == "+"
        ? [for i, b in local.iter_441.tape : (i == local.iter_441.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_442.code == "-"
        ? [for i, b in local.iter_441.tape : (i == local.iter_441.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_442.code == ","
        ? [for i, b in local.iter_441.tape : (i == local.iter_441.tape_ptr ? local.ascii_lookup[local.curr_442.input] : b)]
        : local.iter_441.tape)

    tape_ptr = (
      local.curr_442.code == "<"
        ? local.iter_441.tape_ptr == 0 ? length(local.iter_441.tape) - 1 : local.iter_441.tape_ptr - 1 :
      local.curr_442.code == ">"
        ? local.iter_441.tape_ptr == length(local.iter_441.tape) - 1 ? 0 : local.iter_441.tape_ptr + 1
        : local.iter_441.tape_ptr)

    code_ptr = 1 + (
      local.curr_442.code == "["
        ? local.iter_441.tape[local.iter_441.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_441.code_ptr)] : local.iter_441.code_ptr :
      local.curr_442.code == "]"
        ? local.iter_441.tape[local.iter_441.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_441.code_ptr)] : local.iter_441.code_ptr
        : local.iter_441.code_ptr)

    steps_taken = 1 + local.iter_441.steps_taken
  }
}

locals {
  end_of_code_443 = try(local.iter_442.code_ptr >= length(var.code), true)

  curr_443 = local.end_of_code_443 ? null : {
    code = substr(var.code, local.iter_442.code_ptr, 1)
    input = substr(var.code, local.iter_442.code_ptr, 1) == "," ? substr(local.iter_442.input, 0, 1) : null
  }

  iter_443 = local.end_of_code_443 ? local.iter_442 : {
    input = (local.curr_443.code == ","
      ? substr(local.iter_442.input, 1, -1)
      : local.iter_442.input)

    output = (local.curr_443.code == "."
      ? "${local.iter_442.output}${jsondecode(format("\"\\u%04x\"", local.iter_442.tape[local.iter_442.tape_ptr]))}"
      : local.iter_442.output)
    
    tape = (
      local.curr_443.code == "+"
        ? [for i, b in local.iter_442.tape : (i == local.iter_442.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_443.code == "-"
        ? [for i, b in local.iter_442.tape : (i == local.iter_442.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_443.code == ","
        ? [for i, b in local.iter_442.tape : (i == local.iter_442.tape_ptr ? local.ascii_lookup[local.curr_443.input] : b)]
        : local.iter_442.tape)

    tape_ptr = (
      local.curr_443.code == "<"
        ? local.iter_442.tape_ptr == 0 ? length(local.iter_442.tape) - 1 : local.iter_442.tape_ptr - 1 :
      local.curr_443.code == ">"
        ? local.iter_442.tape_ptr == length(local.iter_442.tape) - 1 ? 0 : local.iter_442.tape_ptr + 1
        : local.iter_442.tape_ptr)

    code_ptr = 1 + (
      local.curr_443.code == "["
        ? local.iter_442.tape[local.iter_442.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_442.code_ptr)] : local.iter_442.code_ptr :
      local.curr_443.code == "]"
        ? local.iter_442.tape[local.iter_442.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_442.code_ptr)] : local.iter_442.code_ptr
        : local.iter_442.code_ptr)

    steps_taken = 1 + local.iter_442.steps_taken
  }
}

locals {
  end_of_code_444 = try(local.iter_443.code_ptr >= length(var.code), true)

  curr_444 = local.end_of_code_444 ? null : {
    code = substr(var.code, local.iter_443.code_ptr, 1)
    input = substr(var.code, local.iter_443.code_ptr, 1) == "," ? substr(local.iter_443.input, 0, 1) : null
  }

  iter_444 = local.end_of_code_444 ? local.iter_443 : {
    input = (local.curr_444.code == ","
      ? substr(local.iter_443.input, 1, -1)
      : local.iter_443.input)

    output = (local.curr_444.code == "."
      ? "${local.iter_443.output}${jsondecode(format("\"\\u%04x\"", local.iter_443.tape[local.iter_443.tape_ptr]))}"
      : local.iter_443.output)
    
    tape = (
      local.curr_444.code == "+"
        ? [for i, b in local.iter_443.tape : (i == local.iter_443.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_444.code == "-"
        ? [for i, b in local.iter_443.tape : (i == local.iter_443.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_444.code == ","
        ? [for i, b in local.iter_443.tape : (i == local.iter_443.tape_ptr ? local.ascii_lookup[local.curr_444.input] : b)]
        : local.iter_443.tape)

    tape_ptr = (
      local.curr_444.code == "<"
        ? local.iter_443.tape_ptr == 0 ? length(local.iter_443.tape) - 1 : local.iter_443.tape_ptr - 1 :
      local.curr_444.code == ">"
        ? local.iter_443.tape_ptr == length(local.iter_443.tape) - 1 ? 0 : local.iter_443.tape_ptr + 1
        : local.iter_443.tape_ptr)

    code_ptr = 1 + (
      local.curr_444.code == "["
        ? local.iter_443.tape[local.iter_443.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_443.code_ptr)] : local.iter_443.code_ptr :
      local.curr_444.code == "]"
        ? local.iter_443.tape[local.iter_443.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_443.code_ptr)] : local.iter_443.code_ptr
        : local.iter_443.code_ptr)

    steps_taken = 1 + local.iter_443.steps_taken
  }
}

locals {
  end_of_code_445 = try(local.iter_444.code_ptr >= length(var.code), true)

  curr_445 = local.end_of_code_445 ? null : {
    code = substr(var.code, local.iter_444.code_ptr, 1)
    input = substr(var.code, local.iter_444.code_ptr, 1) == "," ? substr(local.iter_444.input, 0, 1) : null
  }

  iter_445 = local.end_of_code_445 ? local.iter_444 : {
    input = (local.curr_445.code == ","
      ? substr(local.iter_444.input, 1, -1)
      : local.iter_444.input)

    output = (local.curr_445.code == "."
      ? "${local.iter_444.output}${jsondecode(format("\"\\u%04x\"", local.iter_444.tape[local.iter_444.tape_ptr]))}"
      : local.iter_444.output)
    
    tape = (
      local.curr_445.code == "+"
        ? [for i, b in local.iter_444.tape : (i == local.iter_444.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_445.code == "-"
        ? [for i, b in local.iter_444.tape : (i == local.iter_444.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_445.code == ","
        ? [for i, b in local.iter_444.tape : (i == local.iter_444.tape_ptr ? local.ascii_lookup[local.curr_445.input] : b)]
        : local.iter_444.tape)

    tape_ptr = (
      local.curr_445.code == "<"
        ? local.iter_444.tape_ptr == 0 ? length(local.iter_444.tape) - 1 : local.iter_444.tape_ptr - 1 :
      local.curr_445.code == ">"
        ? local.iter_444.tape_ptr == length(local.iter_444.tape) - 1 ? 0 : local.iter_444.tape_ptr + 1
        : local.iter_444.tape_ptr)

    code_ptr = 1 + (
      local.curr_445.code == "["
        ? local.iter_444.tape[local.iter_444.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_444.code_ptr)] : local.iter_444.code_ptr :
      local.curr_445.code == "]"
        ? local.iter_444.tape[local.iter_444.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_444.code_ptr)] : local.iter_444.code_ptr
        : local.iter_444.code_ptr)

    steps_taken = 1 + local.iter_444.steps_taken
  }
}

locals {
  end_of_code_446 = try(local.iter_445.code_ptr >= length(var.code), true)

  curr_446 = local.end_of_code_446 ? null : {
    code = substr(var.code, local.iter_445.code_ptr, 1)
    input = substr(var.code, local.iter_445.code_ptr, 1) == "," ? substr(local.iter_445.input, 0, 1) : null
  }

  iter_446 = local.end_of_code_446 ? local.iter_445 : {
    input = (local.curr_446.code == ","
      ? substr(local.iter_445.input, 1, -1)
      : local.iter_445.input)

    output = (local.curr_446.code == "."
      ? "${local.iter_445.output}${jsondecode(format("\"\\u%04x\"", local.iter_445.tape[local.iter_445.tape_ptr]))}"
      : local.iter_445.output)
    
    tape = (
      local.curr_446.code == "+"
        ? [for i, b in local.iter_445.tape : (i == local.iter_445.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_446.code == "-"
        ? [for i, b in local.iter_445.tape : (i == local.iter_445.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_446.code == ","
        ? [for i, b in local.iter_445.tape : (i == local.iter_445.tape_ptr ? local.ascii_lookup[local.curr_446.input] : b)]
        : local.iter_445.tape)

    tape_ptr = (
      local.curr_446.code == "<"
        ? local.iter_445.tape_ptr == 0 ? length(local.iter_445.tape) - 1 : local.iter_445.tape_ptr - 1 :
      local.curr_446.code == ">"
        ? local.iter_445.tape_ptr == length(local.iter_445.tape) - 1 ? 0 : local.iter_445.tape_ptr + 1
        : local.iter_445.tape_ptr)

    code_ptr = 1 + (
      local.curr_446.code == "["
        ? local.iter_445.tape[local.iter_445.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_445.code_ptr)] : local.iter_445.code_ptr :
      local.curr_446.code == "]"
        ? local.iter_445.tape[local.iter_445.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_445.code_ptr)] : local.iter_445.code_ptr
        : local.iter_445.code_ptr)

    steps_taken = 1 + local.iter_445.steps_taken
  }
}

locals {
  end_of_code_447 = try(local.iter_446.code_ptr >= length(var.code), true)

  curr_447 = local.end_of_code_447 ? null : {
    code = substr(var.code, local.iter_446.code_ptr, 1)
    input = substr(var.code, local.iter_446.code_ptr, 1) == "," ? substr(local.iter_446.input, 0, 1) : null
  }

  iter_447 = local.end_of_code_447 ? local.iter_446 : {
    input = (local.curr_447.code == ","
      ? substr(local.iter_446.input, 1, -1)
      : local.iter_446.input)

    output = (local.curr_447.code == "."
      ? "${local.iter_446.output}${jsondecode(format("\"\\u%04x\"", local.iter_446.tape[local.iter_446.tape_ptr]))}"
      : local.iter_446.output)
    
    tape = (
      local.curr_447.code == "+"
        ? [for i, b in local.iter_446.tape : (i == local.iter_446.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_447.code == "-"
        ? [for i, b in local.iter_446.tape : (i == local.iter_446.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_447.code == ","
        ? [for i, b in local.iter_446.tape : (i == local.iter_446.tape_ptr ? local.ascii_lookup[local.curr_447.input] : b)]
        : local.iter_446.tape)

    tape_ptr = (
      local.curr_447.code == "<"
        ? local.iter_446.tape_ptr == 0 ? length(local.iter_446.tape) - 1 : local.iter_446.tape_ptr - 1 :
      local.curr_447.code == ">"
        ? local.iter_446.tape_ptr == length(local.iter_446.tape) - 1 ? 0 : local.iter_446.tape_ptr + 1
        : local.iter_446.tape_ptr)

    code_ptr = 1 + (
      local.curr_447.code == "["
        ? local.iter_446.tape[local.iter_446.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_446.code_ptr)] : local.iter_446.code_ptr :
      local.curr_447.code == "]"
        ? local.iter_446.tape[local.iter_446.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_446.code_ptr)] : local.iter_446.code_ptr
        : local.iter_446.code_ptr)

    steps_taken = 1 + local.iter_446.steps_taken
  }
}

locals {
  end_of_code_448 = try(local.iter_447.code_ptr >= length(var.code), true)

  curr_448 = local.end_of_code_448 ? null : {
    code = substr(var.code, local.iter_447.code_ptr, 1)
    input = substr(var.code, local.iter_447.code_ptr, 1) == "," ? substr(local.iter_447.input, 0, 1) : null
  }

  iter_448 = local.end_of_code_448 ? local.iter_447 : {
    input = (local.curr_448.code == ","
      ? substr(local.iter_447.input, 1, -1)
      : local.iter_447.input)

    output = (local.curr_448.code == "."
      ? "${local.iter_447.output}${jsondecode(format("\"\\u%04x\"", local.iter_447.tape[local.iter_447.tape_ptr]))}"
      : local.iter_447.output)
    
    tape = (
      local.curr_448.code == "+"
        ? [for i, b in local.iter_447.tape : (i == local.iter_447.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_448.code == "-"
        ? [for i, b in local.iter_447.tape : (i == local.iter_447.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_448.code == ","
        ? [for i, b in local.iter_447.tape : (i == local.iter_447.tape_ptr ? local.ascii_lookup[local.curr_448.input] : b)]
        : local.iter_447.tape)

    tape_ptr = (
      local.curr_448.code == "<"
        ? local.iter_447.tape_ptr == 0 ? length(local.iter_447.tape) - 1 : local.iter_447.tape_ptr - 1 :
      local.curr_448.code == ">"
        ? local.iter_447.tape_ptr == length(local.iter_447.tape) - 1 ? 0 : local.iter_447.tape_ptr + 1
        : local.iter_447.tape_ptr)

    code_ptr = 1 + (
      local.curr_448.code == "["
        ? local.iter_447.tape[local.iter_447.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_447.code_ptr)] : local.iter_447.code_ptr :
      local.curr_448.code == "]"
        ? local.iter_447.tape[local.iter_447.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_447.code_ptr)] : local.iter_447.code_ptr
        : local.iter_447.code_ptr)

    steps_taken = 1 + local.iter_447.steps_taken
  }
}

locals {
  end_of_code_449 = try(local.iter_448.code_ptr >= length(var.code), true)

  curr_449 = local.end_of_code_449 ? null : {
    code = substr(var.code, local.iter_448.code_ptr, 1)
    input = substr(var.code, local.iter_448.code_ptr, 1) == "," ? substr(local.iter_448.input, 0, 1) : null
  }

  iter_449 = local.end_of_code_449 ? local.iter_448 : {
    input = (local.curr_449.code == ","
      ? substr(local.iter_448.input, 1, -1)
      : local.iter_448.input)

    output = (local.curr_449.code == "."
      ? "${local.iter_448.output}${jsondecode(format("\"\\u%04x\"", local.iter_448.tape[local.iter_448.tape_ptr]))}"
      : local.iter_448.output)
    
    tape = (
      local.curr_449.code == "+"
        ? [for i, b in local.iter_448.tape : (i == local.iter_448.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_449.code == "-"
        ? [for i, b in local.iter_448.tape : (i == local.iter_448.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_449.code == ","
        ? [for i, b in local.iter_448.tape : (i == local.iter_448.tape_ptr ? local.ascii_lookup[local.curr_449.input] : b)]
        : local.iter_448.tape)

    tape_ptr = (
      local.curr_449.code == "<"
        ? local.iter_448.tape_ptr == 0 ? length(local.iter_448.tape) - 1 : local.iter_448.tape_ptr - 1 :
      local.curr_449.code == ">"
        ? local.iter_448.tape_ptr == length(local.iter_448.tape) - 1 ? 0 : local.iter_448.tape_ptr + 1
        : local.iter_448.tape_ptr)

    code_ptr = 1 + (
      local.curr_449.code == "["
        ? local.iter_448.tape[local.iter_448.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_448.code_ptr)] : local.iter_448.code_ptr :
      local.curr_449.code == "]"
        ? local.iter_448.tape[local.iter_448.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_448.code_ptr)] : local.iter_448.code_ptr
        : local.iter_448.code_ptr)

    steps_taken = 1 + local.iter_448.steps_taken
  }
}

locals {
  end_of_code_450 = try(local.iter_449.code_ptr >= length(var.code), true)

  curr_450 = local.end_of_code_450 ? null : {
    code = substr(var.code, local.iter_449.code_ptr, 1)
    input = substr(var.code, local.iter_449.code_ptr, 1) == "," ? substr(local.iter_449.input, 0, 1) : null
  }

  iter_450 = local.end_of_code_450 ? local.iter_449 : {
    input = (local.curr_450.code == ","
      ? substr(local.iter_449.input, 1, -1)
      : local.iter_449.input)

    output = (local.curr_450.code == "."
      ? "${local.iter_449.output}${jsondecode(format("\"\\u%04x\"", local.iter_449.tape[local.iter_449.tape_ptr]))}"
      : local.iter_449.output)
    
    tape = (
      local.curr_450.code == "+"
        ? [for i, b in local.iter_449.tape : (i == local.iter_449.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_450.code == "-"
        ? [for i, b in local.iter_449.tape : (i == local.iter_449.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_450.code == ","
        ? [for i, b in local.iter_449.tape : (i == local.iter_449.tape_ptr ? local.ascii_lookup[local.curr_450.input] : b)]
        : local.iter_449.tape)

    tape_ptr = (
      local.curr_450.code == "<"
        ? local.iter_449.tape_ptr == 0 ? length(local.iter_449.tape) - 1 : local.iter_449.tape_ptr - 1 :
      local.curr_450.code == ">"
        ? local.iter_449.tape_ptr == length(local.iter_449.tape) - 1 ? 0 : local.iter_449.tape_ptr + 1
        : local.iter_449.tape_ptr)

    code_ptr = 1 + (
      local.curr_450.code == "["
        ? local.iter_449.tape[local.iter_449.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_449.code_ptr)] : local.iter_449.code_ptr :
      local.curr_450.code == "]"
        ? local.iter_449.tape[local.iter_449.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_449.code_ptr)] : local.iter_449.code_ptr
        : local.iter_449.code_ptr)

    steps_taken = 1 + local.iter_449.steps_taken
  }
}

locals {
  end_of_code_451 = try(local.iter_450.code_ptr >= length(var.code), true)

  curr_451 = local.end_of_code_451 ? null : {
    code = substr(var.code, local.iter_450.code_ptr, 1)
    input = substr(var.code, local.iter_450.code_ptr, 1) == "," ? substr(local.iter_450.input, 0, 1) : null
  }

  iter_451 = local.end_of_code_451 ? local.iter_450 : {
    input = (local.curr_451.code == ","
      ? substr(local.iter_450.input, 1, -1)
      : local.iter_450.input)

    output = (local.curr_451.code == "."
      ? "${local.iter_450.output}${jsondecode(format("\"\\u%04x\"", local.iter_450.tape[local.iter_450.tape_ptr]))}"
      : local.iter_450.output)
    
    tape = (
      local.curr_451.code == "+"
        ? [for i, b in local.iter_450.tape : (i == local.iter_450.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_451.code == "-"
        ? [for i, b in local.iter_450.tape : (i == local.iter_450.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_451.code == ","
        ? [for i, b in local.iter_450.tape : (i == local.iter_450.tape_ptr ? local.ascii_lookup[local.curr_451.input] : b)]
        : local.iter_450.tape)

    tape_ptr = (
      local.curr_451.code == "<"
        ? local.iter_450.tape_ptr == 0 ? length(local.iter_450.tape) - 1 : local.iter_450.tape_ptr - 1 :
      local.curr_451.code == ">"
        ? local.iter_450.tape_ptr == length(local.iter_450.tape) - 1 ? 0 : local.iter_450.tape_ptr + 1
        : local.iter_450.tape_ptr)

    code_ptr = 1 + (
      local.curr_451.code == "["
        ? local.iter_450.tape[local.iter_450.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_450.code_ptr)] : local.iter_450.code_ptr :
      local.curr_451.code == "]"
        ? local.iter_450.tape[local.iter_450.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_450.code_ptr)] : local.iter_450.code_ptr
        : local.iter_450.code_ptr)

    steps_taken = 1 + local.iter_450.steps_taken
  }
}

locals {
  end_of_code_452 = try(local.iter_451.code_ptr >= length(var.code), true)

  curr_452 = local.end_of_code_452 ? null : {
    code = substr(var.code, local.iter_451.code_ptr, 1)
    input = substr(var.code, local.iter_451.code_ptr, 1) == "," ? substr(local.iter_451.input, 0, 1) : null
  }

  iter_452 = local.end_of_code_452 ? local.iter_451 : {
    input = (local.curr_452.code == ","
      ? substr(local.iter_451.input, 1, -1)
      : local.iter_451.input)

    output = (local.curr_452.code == "."
      ? "${local.iter_451.output}${jsondecode(format("\"\\u%04x\"", local.iter_451.tape[local.iter_451.tape_ptr]))}"
      : local.iter_451.output)
    
    tape = (
      local.curr_452.code == "+"
        ? [for i, b in local.iter_451.tape : (i == local.iter_451.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_452.code == "-"
        ? [for i, b in local.iter_451.tape : (i == local.iter_451.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_452.code == ","
        ? [for i, b in local.iter_451.tape : (i == local.iter_451.tape_ptr ? local.ascii_lookup[local.curr_452.input] : b)]
        : local.iter_451.tape)

    tape_ptr = (
      local.curr_452.code == "<"
        ? local.iter_451.tape_ptr == 0 ? length(local.iter_451.tape) - 1 : local.iter_451.tape_ptr - 1 :
      local.curr_452.code == ">"
        ? local.iter_451.tape_ptr == length(local.iter_451.tape) - 1 ? 0 : local.iter_451.tape_ptr + 1
        : local.iter_451.tape_ptr)

    code_ptr = 1 + (
      local.curr_452.code == "["
        ? local.iter_451.tape[local.iter_451.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_451.code_ptr)] : local.iter_451.code_ptr :
      local.curr_452.code == "]"
        ? local.iter_451.tape[local.iter_451.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_451.code_ptr)] : local.iter_451.code_ptr
        : local.iter_451.code_ptr)

    steps_taken = 1 + local.iter_451.steps_taken
  }
}

locals {
  end_of_code_453 = try(local.iter_452.code_ptr >= length(var.code), true)

  curr_453 = local.end_of_code_453 ? null : {
    code = substr(var.code, local.iter_452.code_ptr, 1)
    input = substr(var.code, local.iter_452.code_ptr, 1) == "," ? substr(local.iter_452.input, 0, 1) : null
  }

  iter_453 = local.end_of_code_453 ? local.iter_452 : {
    input = (local.curr_453.code == ","
      ? substr(local.iter_452.input, 1, -1)
      : local.iter_452.input)

    output = (local.curr_453.code == "."
      ? "${local.iter_452.output}${jsondecode(format("\"\\u%04x\"", local.iter_452.tape[local.iter_452.tape_ptr]))}"
      : local.iter_452.output)
    
    tape = (
      local.curr_453.code == "+"
        ? [for i, b in local.iter_452.tape : (i == local.iter_452.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_453.code == "-"
        ? [for i, b in local.iter_452.tape : (i == local.iter_452.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_453.code == ","
        ? [for i, b in local.iter_452.tape : (i == local.iter_452.tape_ptr ? local.ascii_lookup[local.curr_453.input] : b)]
        : local.iter_452.tape)

    tape_ptr = (
      local.curr_453.code == "<"
        ? local.iter_452.tape_ptr == 0 ? length(local.iter_452.tape) - 1 : local.iter_452.tape_ptr - 1 :
      local.curr_453.code == ">"
        ? local.iter_452.tape_ptr == length(local.iter_452.tape) - 1 ? 0 : local.iter_452.tape_ptr + 1
        : local.iter_452.tape_ptr)

    code_ptr = 1 + (
      local.curr_453.code == "["
        ? local.iter_452.tape[local.iter_452.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_452.code_ptr)] : local.iter_452.code_ptr :
      local.curr_453.code == "]"
        ? local.iter_452.tape[local.iter_452.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_452.code_ptr)] : local.iter_452.code_ptr
        : local.iter_452.code_ptr)

    steps_taken = 1 + local.iter_452.steps_taken
  }
}

locals {
  end_of_code_454 = try(local.iter_453.code_ptr >= length(var.code), true)

  curr_454 = local.end_of_code_454 ? null : {
    code = substr(var.code, local.iter_453.code_ptr, 1)
    input = substr(var.code, local.iter_453.code_ptr, 1) == "," ? substr(local.iter_453.input, 0, 1) : null
  }

  iter_454 = local.end_of_code_454 ? local.iter_453 : {
    input = (local.curr_454.code == ","
      ? substr(local.iter_453.input, 1, -1)
      : local.iter_453.input)

    output = (local.curr_454.code == "."
      ? "${local.iter_453.output}${jsondecode(format("\"\\u%04x\"", local.iter_453.tape[local.iter_453.tape_ptr]))}"
      : local.iter_453.output)
    
    tape = (
      local.curr_454.code == "+"
        ? [for i, b in local.iter_453.tape : (i == local.iter_453.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_454.code == "-"
        ? [for i, b in local.iter_453.tape : (i == local.iter_453.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_454.code == ","
        ? [for i, b in local.iter_453.tape : (i == local.iter_453.tape_ptr ? local.ascii_lookup[local.curr_454.input] : b)]
        : local.iter_453.tape)

    tape_ptr = (
      local.curr_454.code == "<"
        ? local.iter_453.tape_ptr == 0 ? length(local.iter_453.tape) - 1 : local.iter_453.tape_ptr - 1 :
      local.curr_454.code == ">"
        ? local.iter_453.tape_ptr == length(local.iter_453.tape) - 1 ? 0 : local.iter_453.tape_ptr + 1
        : local.iter_453.tape_ptr)

    code_ptr = 1 + (
      local.curr_454.code == "["
        ? local.iter_453.tape[local.iter_453.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_453.code_ptr)] : local.iter_453.code_ptr :
      local.curr_454.code == "]"
        ? local.iter_453.tape[local.iter_453.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_453.code_ptr)] : local.iter_453.code_ptr
        : local.iter_453.code_ptr)

    steps_taken = 1 + local.iter_453.steps_taken
  }
}

locals {
  end_of_code_455 = try(local.iter_454.code_ptr >= length(var.code), true)

  curr_455 = local.end_of_code_455 ? null : {
    code = substr(var.code, local.iter_454.code_ptr, 1)
    input = substr(var.code, local.iter_454.code_ptr, 1) == "," ? substr(local.iter_454.input, 0, 1) : null
  }

  iter_455 = local.end_of_code_455 ? local.iter_454 : {
    input = (local.curr_455.code == ","
      ? substr(local.iter_454.input, 1, -1)
      : local.iter_454.input)

    output = (local.curr_455.code == "."
      ? "${local.iter_454.output}${jsondecode(format("\"\\u%04x\"", local.iter_454.tape[local.iter_454.tape_ptr]))}"
      : local.iter_454.output)
    
    tape = (
      local.curr_455.code == "+"
        ? [for i, b in local.iter_454.tape : (i == local.iter_454.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_455.code == "-"
        ? [for i, b in local.iter_454.tape : (i == local.iter_454.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_455.code == ","
        ? [for i, b in local.iter_454.tape : (i == local.iter_454.tape_ptr ? local.ascii_lookup[local.curr_455.input] : b)]
        : local.iter_454.tape)

    tape_ptr = (
      local.curr_455.code == "<"
        ? local.iter_454.tape_ptr == 0 ? length(local.iter_454.tape) - 1 : local.iter_454.tape_ptr - 1 :
      local.curr_455.code == ">"
        ? local.iter_454.tape_ptr == length(local.iter_454.tape) - 1 ? 0 : local.iter_454.tape_ptr + 1
        : local.iter_454.tape_ptr)

    code_ptr = 1 + (
      local.curr_455.code == "["
        ? local.iter_454.tape[local.iter_454.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_454.code_ptr)] : local.iter_454.code_ptr :
      local.curr_455.code == "]"
        ? local.iter_454.tape[local.iter_454.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_454.code_ptr)] : local.iter_454.code_ptr
        : local.iter_454.code_ptr)

    steps_taken = 1 + local.iter_454.steps_taken
  }
}

locals {
  end_of_code_456 = try(local.iter_455.code_ptr >= length(var.code), true)

  curr_456 = local.end_of_code_456 ? null : {
    code = substr(var.code, local.iter_455.code_ptr, 1)
    input = substr(var.code, local.iter_455.code_ptr, 1) == "," ? substr(local.iter_455.input, 0, 1) : null
  }

  iter_456 = local.end_of_code_456 ? local.iter_455 : {
    input = (local.curr_456.code == ","
      ? substr(local.iter_455.input, 1, -1)
      : local.iter_455.input)

    output = (local.curr_456.code == "."
      ? "${local.iter_455.output}${jsondecode(format("\"\\u%04x\"", local.iter_455.tape[local.iter_455.tape_ptr]))}"
      : local.iter_455.output)
    
    tape = (
      local.curr_456.code == "+"
        ? [for i, b in local.iter_455.tape : (i == local.iter_455.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_456.code == "-"
        ? [for i, b in local.iter_455.tape : (i == local.iter_455.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_456.code == ","
        ? [for i, b in local.iter_455.tape : (i == local.iter_455.tape_ptr ? local.ascii_lookup[local.curr_456.input] : b)]
        : local.iter_455.tape)

    tape_ptr = (
      local.curr_456.code == "<"
        ? local.iter_455.tape_ptr == 0 ? length(local.iter_455.tape) - 1 : local.iter_455.tape_ptr - 1 :
      local.curr_456.code == ">"
        ? local.iter_455.tape_ptr == length(local.iter_455.tape) - 1 ? 0 : local.iter_455.tape_ptr + 1
        : local.iter_455.tape_ptr)

    code_ptr = 1 + (
      local.curr_456.code == "["
        ? local.iter_455.tape[local.iter_455.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_455.code_ptr)] : local.iter_455.code_ptr :
      local.curr_456.code == "]"
        ? local.iter_455.tape[local.iter_455.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_455.code_ptr)] : local.iter_455.code_ptr
        : local.iter_455.code_ptr)

    steps_taken = 1 + local.iter_455.steps_taken
  }
}

locals {
  end_of_code_457 = try(local.iter_456.code_ptr >= length(var.code), true)

  curr_457 = local.end_of_code_457 ? null : {
    code = substr(var.code, local.iter_456.code_ptr, 1)
    input = substr(var.code, local.iter_456.code_ptr, 1) == "," ? substr(local.iter_456.input, 0, 1) : null
  }

  iter_457 = local.end_of_code_457 ? local.iter_456 : {
    input = (local.curr_457.code == ","
      ? substr(local.iter_456.input, 1, -1)
      : local.iter_456.input)

    output = (local.curr_457.code == "."
      ? "${local.iter_456.output}${jsondecode(format("\"\\u%04x\"", local.iter_456.tape[local.iter_456.tape_ptr]))}"
      : local.iter_456.output)
    
    tape = (
      local.curr_457.code == "+"
        ? [for i, b in local.iter_456.tape : (i == local.iter_456.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_457.code == "-"
        ? [for i, b in local.iter_456.tape : (i == local.iter_456.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_457.code == ","
        ? [for i, b in local.iter_456.tape : (i == local.iter_456.tape_ptr ? local.ascii_lookup[local.curr_457.input] : b)]
        : local.iter_456.tape)

    tape_ptr = (
      local.curr_457.code == "<"
        ? local.iter_456.tape_ptr == 0 ? length(local.iter_456.tape) - 1 : local.iter_456.tape_ptr - 1 :
      local.curr_457.code == ">"
        ? local.iter_456.tape_ptr == length(local.iter_456.tape) - 1 ? 0 : local.iter_456.tape_ptr + 1
        : local.iter_456.tape_ptr)

    code_ptr = 1 + (
      local.curr_457.code == "["
        ? local.iter_456.tape[local.iter_456.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_456.code_ptr)] : local.iter_456.code_ptr :
      local.curr_457.code == "]"
        ? local.iter_456.tape[local.iter_456.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_456.code_ptr)] : local.iter_456.code_ptr
        : local.iter_456.code_ptr)

    steps_taken = 1 + local.iter_456.steps_taken
  }
}

locals {
  end_of_code_458 = try(local.iter_457.code_ptr >= length(var.code), true)

  curr_458 = local.end_of_code_458 ? null : {
    code = substr(var.code, local.iter_457.code_ptr, 1)
    input = substr(var.code, local.iter_457.code_ptr, 1) == "," ? substr(local.iter_457.input, 0, 1) : null
  }

  iter_458 = local.end_of_code_458 ? local.iter_457 : {
    input = (local.curr_458.code == ","
      ? substr(local.iter_457.input, 1, -1)
      : local.iter_457.input)

    output = (local.curr_458.code == "."
      ? "${local.iter_457.output}${jsondecode(format("\"\\u%04x\"", local.iter_457.tape[local.iter_457.tape_ptr]))}"
      : local.iter_457.output)
    
    tape = (
      local.curr_458.code == "+"
        ? [for i, b in local.iter_457.tape : (i == local.iter_457.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_458.code == "-"
        ? [for i, b in local.iter_457.tape : (i == local.iter_457.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_458.code == ","
        ? [for i, b in local.iter_457.tape : (i == local.iter_457.tape_ptr ? local.ascii_lookup[local.curr_458.input] : b)]
        : local.iter_457.tape)

    tape_ptr = (
      local.curr_458.code == "<"
        ? local.iter_457.tape_ptr == 0 ? length(local.iter_457.tape) - 1 : local.iter_457.tape_ptr - 1 :
      local.curr_458.code == ">"
        ? local.iter_457.tape_ptr == length(local.iter_457.tape) - 1 ? 0 : local.iter_457.tape_ptr + 1
        : local.iter_457.tape_ptr)

    code_ptr = 1 + (
      local.curr_458.code == "["
        ? local.iter_457.tape[local.iter_457.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_457.code_ptr)] : local.iter_457.code_ptr :
      local.curr_458.code == "]"
        ? local.iter_457.tape[local.iter_457.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_457.code_ptr)] : local.iter_457.code_ptr
        : local.iter_457.code_ptr)

    steps_taken = 1 + local.iter_457.steps_taken
  }
}

locals {
  end_of_code_459 = try(local.iter_458.code_ptr >= length(var.code), true)

  curr_459 = local.end_of_code_459 ? null : {
    code = substr(var.code, local.iter_458.code_ptr, 1)
    input = substr(var.code, local.iter_458.code_ptr, 1) == "," ? substr(local.iter_458.input, 0, 1) : null
  }

  iter_459 = local.end_of_code_459 ? local.iter_458 : {
    input = (local.curr_459.code == ","
      ? substr(local.iter_458.input, 1, -1)
      : local.iter_458.input)

    output = (local.curr_459.code == "."
      ? "${local.iter_458.output}${jsondecode(format("\"\\u%04x\"", local.iter_458.tape[local.iter_458.tape_ptr]))}"
      : local.iter_458.output)
    
    tape = (
      local.curr_459.code == "+"
        ? [for i, b in local.iter_458.tape : (i == local.iter_458.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_459.code == "-"
        ? [for i, b in local.iter_458.tape : (i == local.iter_458.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_459.code == ","
        ? [for i, b in local.iter_458.tape : (i == local.iter_458.tape_ptr ? local.ascii_lookup[local.curr_459.input] : b)]
        : local.iter_458.tape)

    tape_ptr = (
      local.curr_459.code == "<"
        ? local.iter_458.tape_ptr == 0 ? length(local.iter_458.tape) - 1 : local.iter_458.tape_ptr - 1 :
      local.curr_459.code == ">"
        ? local.iter_458.tape_ptr == length(local.iter_458.tape) - 1 ? 0 : local.iter_458.tape_ptr + 1
        : local.iter_458.tape_ptr)

    code_ptr = 1 + (
      local.curr_459.code == "["
        ? local.iter_458.tape[local.iter_458.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_458.code_ptr)] : local.iter_458.code_ptr :
      local.curr_459.code == "]"
        ? local.iter_458.tape[local.iter_458.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_458.code_ptr)] : local.iter_458.code_ptr
        : local.iter_458.code_ptr)

    steps_taken = 1 + local.iter_458.steps_taken
  }
}

locals {
  end_of_code_460 = try(local.iter_459.code_ptr >= length(var.code), true)

  curr_460 = local.end_of_code_460 ? null : {
    code = substr(var.code, local.iter_459.code_ptr, 1)
    input = substr(var.code, local.iter_459.code_ptr, 1) == "," ? substr(local.iter_459.input, 0, 1) : null
  }

  iter_460 = local.end_of_code_460 ? local.iter_459 : {
    input = (local.curr_460.code == ","
      ? substr(local.iter_459.input, 1, -1)
      : local.iter_459.input)

    output = (local.curr_460.code == "."
      ? "${local.iter_459.output}${jsondecode(format("\"\\u%04x\"", local.iter_459.tape[local.iter_459.tape_ptr]))}"
      : local.iter_459.output)
    
    tape = (
      local.curr_460.code == "+"
        ? [for i, b in local.iter_459.tape : (i == local.iter_459.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_460.code == "-"
        ? [for i, b in local.iter_459.tape : (i == local.iter_459.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_460.code == ","
        ? [for i, b in local.iter_459.tape : (i == local.iter_459.tape_ptr ? local.ascii_lookup[local.curr_460.input] : b)]
        : local.iter_459.tape)

    tape_ptr = (
      local.curr_460.code == "<"
        ? local.iter_459.tape_ptr == 0 ? length(local.iter_459.tape) - 1 : local.iter_459.tape_ptr - 1 :
      local.curr_460.code == ">"
        ? local.iter_459.tape_ptr == length(local.iter_459.tape) - 1 ? 0 : local.iter_459.tape_ptr + 1
        : local.iter_459.tape_ptr)

    code_ptr = 1 + (
      local.curr_460.code == "["
        ? local.iter_459.tape[local.iter_459.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_459.code_ptr)] : local.iter_459.code_ptr :
      local.curr_460.code == "]"
        ? local.iter_459.tape[local.iter_459.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_459.code_ptr)] : local.iter_459.code_ptr
        : local.iter_459.code_ptr)

    steps_taken = 1 + local.iter_459.steps_taken
  }
}

locals {
  end_of_code_461 = try(local.iter_460.code_ptr >= length(var.code), true)

  curr_461 = local.end_of_code_461 ? null : {
    code = substr(var.code, local.iter_460.code_ptr, 1)
    input = substr(var.code, local.iter_460.code_ptr, 1) == "," ? substr(local.iter_460.input, 0, 1) : null
  }

  iter_461 = local.end_of_code_461 ? local.iter_460 : {
    input = (local.curr_461.code == ","
      ? substr(local.iter_460.input, 1, -1)
      : local.iter_460.input)

    output = (local.curr_461.code == "."
      ? "${local.iter_460.output}${jsondecode(format("\"\\u%04x\"", local.iter_460.tape[local.iter_460.tape_ptr]))}"
      : local.iter_460.output)
    
    tape = (
      local.curr_461.code == "+"
        ? [for i, b in local.iter_460.tape : (i == local.iter_460.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_461.code == "-"
        ? [for i, b in local.iter_460.tape : (i == local.iter_460.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_461.code == ","
        ? [for i, b in local.iter_460.tape : (i == local.iter_460.tape_ptr ? local.ascii_lookup[local.curr_461.input] : b)]
        : local.iter_460.tape)

    tape_ptr = (
      local.curr_461.code == "<"
        ? local.iter_460.tape_ptr == 0 ? length(local.iter_460.tape) - 1 : local.iter_460.tape_ptr - 1 :
      local.curr_461.code == ">"
        ? local.iter_460.tape_ptr == length(local.iter_460.tape) - 1 ? 0 : local.iter_460.tape_ptr + 1
        : local.iter_460.tape_ptr)

    code_ptr = 1 + (
      local.curr_461.code == "["
        ? local.iter_460.tape[local.iter_460.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_460.code_ptr)] : local.iter_460.code_ptr :
      local.curr_461.code == "]"
        ? local.iter_460.tape[local.iter_460.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_460.code_ptr)] : local.iter_460.code_ptr
        : local.iter_460.code_ptr)

    steps_taken = 1 + local.iter_460.steps_taken
  }
}

locals {
  end_of_code_462 = try(local.iter_461.code_ptr >= length(var.code), true)

  curr_462 = local.end_of_code_462 ? null : {
    code = substr(var.code, local.iter_461.code_ptr, 1)
    input = substr(var.code, local.iter_461.code_ptr, 1) == "," ? substr(local.iter_461.input, 0, 1) : null
  }

  iter_462 = local.end_of_code_462 ? local.iter_461 : {
    input = (local.curr_462.code == ","
      ? substr(local.iter_461.input, 1, -1)
      : local.iter_461.input)

    output = (local.curr_462.code == "."
      ? "${local.iter_461.output}${jsondecode(format("\"\\u%04x\"", local.iter_461.tape[local.iter_461.tape_ptr]))}"
      : local.iter_461.output)
    
    tape = (
      local.curr_462.code == "+"
        ? [for i, b in local.iter_461.tape : (i == local.iter_461.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_462.code == "-"
        ? [for i, b in local.iter_461.tape : (i == local.iter_461.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_462.code == ","
        ? [for i, b in local.iter_461.tape : (i == local.iter_461.tape_ptr ? local.ascii_lookup[local.curr_462.input] : b)]
        : local.iter_461.tape)

    tape_ptr = (
      local.curr_462.code == "<"
        ? local.iter_461.tape_ptr == 0 ? length(local.iter_461.tape) - 1 : local.iter_461.tape_ptr - 1 :
      local.curr_462.code == ">"
        ? local.iter_461.tape_ptr == length(local.iter_461.tape) - 1 ? 0 : local.iter_461.tape_ptr + 1
        : local.iter_461.tape_ptr)

    code_ptr = 1 + (
      local.curr_462.code == "["
        ? local.iter_461.tape[local.iter_461.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_461.code_ptr)] : local.iter_461.code_ptr :
      local.curr_462.code == "]"
        ? local.iter_461.tape[local.iter_461.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_461.code_ptr)] : local.iter_461.code_ptr
        : local.iter_461.code_ptr)

    steps_taken = 1 + local.iter_461.steps_taken
  }
}

locals {
  end_of_code_463 = try(local.iter_462.code_ptr >= length(var.code), true)

  curr_463 = local.end_of_code_463 ? null : {
    code = substr(var.code, local.iter_462.code_ptr, 1)
    input = substr(var.code, local.iter_462.code_ptr, 1) == "," ? substr(local.iter_462.input, 0, 1) : null
  }

  iter_463 = local.end_of_code_463 ? local.iter_462 : {
    input = (local.curr_463.code == ","
      ? substr(local.iter_462.input, 1, -1)
      : local.iter_462.input)

    output = (local.curr_463.code == "."
      ? "${local.iter_462.output}${jsondecode(format("\"\\u%04x\"", local.iter_462.tape[local.iter_462.tape_ptr]))}"
      : local.iter_462.output)
    
    tape = (
      local.curr_463.code == "+"
        ? [for i, b in local.iter_462.tape : (i == local.iter_462.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_463.code == "-"
        ? [for i, b in local.iter_462.tape : (i == local.iter_462.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_463.code == ","
        ? [for i, b in local.iter_462.tape : (i == local.iter_462.tape_ptr ? local.ascii_lookup[local.curr_463.input] : b)]
        : local.iter_462.tape)

    tape_ptr = (
      local.curr_463.code == "<"
        ? local.iter_462.tape_ptr == 0 ? length(local.iter_462.tape) - 1 : local.iter_462.tape_ptr - 1 :
      local.curr_463.code == ">"
        ? local.iter_462.tape_ptr == length(local.iter_462.tape) - 1 ? 0 : local.iter_462.tape_ptr + 1
        : local.iter_462.tape_ptr)

    code_ptr = 1 + (
      local.curr_463.code == "["
        ? local.iter_462.tape[local.iter_462.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_462.code_ptr)] : local.iter_462.code_ptr :
      local.curr_463.code == "]"
        ? local.iter_462.tape[local.iter_462.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_462.code_ptr)] : local.iter_462.code_ptr
        : local.iter_462.code_ptr)

    steps_taken = 1 + local.iter_462.steps_taken
  }
}

locals {
  end_of_code_464 = try(local.iter_463.code_ptr >= length(var.code), true)

  curr_464 = local.end_of_code_464 ? null : {
    code = substr(var.code, local.iter_463.code_ptr, 1)
    input = substr(var.code, local.iter_463.code_ptr, 1) == "," ? substr(local.iter_463.input, 0, 1) : null
  }

  iter_464 = local.end_of_code_464 ? local.iter_463 : {
    input = (local.curr_464.code == ","
      ? substr(local.iter_463.input, 1, -1)
      : local.iter_463.input)

    output = (local.curr_464.code == "."
      ? "${local.iter_463.output}${jsondecode(format("\"\\u%04x\"", local.iter_463.tape[local.iter_463.tape_ptr]))}"
      : local.iter_463.output)
    
    tape = (
      local.curr_464.code == "+"
        ? [for i, b in local.iter_463.tape : (i == local.iter_463.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_464.code == "-"
        ? [for i, b in local.iter_463.tape : (i == local.iter_463.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_464.code == ","
        ? [for i, b in local.iter_463.tape : (i == local.iter_463.tape_ptr ? local.ascii_lookup[local.curr_464.input] : b)]
        : local.iter_463.tape)

    tape_ptr = (
      local.curr_464.code == "<"
        ? local.iter_463.tape_ptr == 0 ? length(local.iter_463.tape) - 1 : local.iter_463.tape_ptr - 1 :
      local.curr_464.code == ">"
        ? local.iter_463.tape_ptr == length(local.iter_463.tape) - 1 ? 0 : local.iter_463.tape_ptr + 1
        : local.iter_463.tape_ptr)

    code_ptr = 1 + (
      local.curr_464.code == "["
        ? local.iter_463.tape[local.iter_463.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_463.code_ptr)] : local.iter_463.code_ptr :
      local.curr_464.code == "]"
        ? local.iter_463.tape[local.iter_463.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_463.code_ptr)] : local.iter_463.code_ptr
        : local.iter_463.code_ptr)

    steps_taken = 1 + local.iter_463.steps_taken
  }
}

locals {
  end_of_code_465 = try(local.iter_464.code_ptr >= length(var.code), true)

  curr_465 = local.end_of_code_465 ? null : {
    code = substr(var.code, local.iter_464.code_ptr, 1)
    input = substr(var.code, local.iter_464.code_ptr, 1) == "," ? substr(local.iter_464.input, 0, 1) : null
  }

  iter_465 = local.end_of_code_465 ? local.iter_464 : {
    input = (local.curr_465.code == ","
      ? substr(local.iter_464.input, 1, -1)
      : local.iter_464.input)

    output = (local.curr_465.code == "."
      ? "${local.iter_464.output}${jsondecode(format("\"\\u%04x\"", local.iter_464.tape[local.iter_464.tape_ptr]))}"
      : local.iter_464.output)
    
    tape = (
      local.curr_465.code == "+"
        ? [for i, b in local.iter_464.tape : (i == local.iter_464.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_465.code == "-"
        ? [for i, b in local.iter_464.tape : (i == local.iter_464.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_465.code == ","
        ? [for i, b in local.iter_464.tape : (i == local.iter_464.tape_ptr ? local.ascii_lookup[local.curr_465.input] : b)]
        : local.iter_464.tape)

    tape_ptr = (
      local.curr_465.code == "<"
        ? local.iter_464.tape_ptr == 0 ? length(local.iter_464.tape) - 1 : local.iter_464.tape_ptr - 1 :
      local.curr_465.code == ">"
        ? local.iter_464.tape_ptr == length(local.iter_464.tape) - 1 ? 0 : local.iter_464.tape_ptr + 1
        : local.iter_464.tape_ptr)

    code_ptr = 1 + (
      local.curr_465.code == "["
        ? local.iter_464.tape[local.iter_464.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_464.code_ptr)] : local.iter_464.code_ptr :
      local.curr_465.code == "]"
        ? local.iter_464.tape[local.iter_464.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_464.code_ptr)] : local.iter_464.code_ptr
        : local.iter_464.code_ptr)

    steps_taken = 1 + local.iter_464.steps_taken
  }
}

locals {
  end_of_code_466 = try(local.iter_465.code_ptr >= length(var.code), true)

  curr_466 = local.end_of_code_466 ? null : {
    code = substr(var.code, local.iter_465.code_ptr, 1)
    input = substr(var.code, local.iter_465.code_ptr, 1) == "," ? substr(local.iter_465.input, 0, 1) : null
  }

  iter_466 = local.end_of_code_466 ? local.iter_465 : {
    input = (local.curr_466.code == ","
      ? substr(local.iter_465.input, 1, -1)
      : local.iter_465.input)

    output = (local.curr_466.code == "."
      ? "${local.iter_465.output}${jsondecode(format("\"\\u%04x\"", local.iter_465.tape[local.iter_465.tape_ptr]))}"
      : local.iter_465.output)
    
    tape = (
      local.curr_466.code == "+"
        ? [for i, b in local.iter_465.tape : (i == local.iter_465.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_466.code == "-"
        ? [for i, b in local.iter_465.tape : (i == local.iter_465.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_466.code == ","
        ? [for i, b in local.iter_465.tape : (i == local.iter_465.tape_ptr ? local.ascii_lookup[local.curr_466.input] : b)]
        : local.iter_465.tape)

    tape_ptr = (
      local.curr_466.code == "<"
        ? local.iter_465.tape_ptr == 0 ? length(local.iter_465.tape) - 1 : local.iter_465.tape_ptr - 1 :
      local.curr_466.code == ">"
        ? local.iter_465.tape_ptr == length(local.iter_465.tape) - 1 ? 0 : local.iter_465.tape_ptr + 1
        : local.iter_465.tape_ptr)

    code_ptr = 1 + (
      local.curr_466.code == "["
        ? local.iter_465.tape[local.iter_465.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_465.code_ptr)] : local.iter_465.code_ptr :
      local.curr_466.code == "]"
        ? local.iter_465.tape[local.iter_465.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_465.code_ptr)] : local.iter_465.code_ptr
        : local.iter_465.code_ptr)

    steps_taken = 1 + local.iter_465.steps_taken
  }
}

locals {
  end_of_code_467 = try(local.iter_466.code_ptr >= length(var.code), true)

  curr_467 = local.end_of_code_467 ? null : {
    code = substr(var.code, local.iter_466.code_ptr, 1)
    input = substr(var.code, local.iter_466.code_ptr, 1) == "," ? substr(local.iter_466.input, 0, 1) : null
  }

  iter_467 = local.end_of_code_467 ? local.iter_466 : {
    input = (local.curr_467.code == ","
      ? substr(local.iter_466.input, 1, -1)
      : local.iter_466.input)

    output = (local.curr_467.code == "."
      ? "${local.iter_466.output}${jsondecode(format("\"\\u%04x\"", local.iter_466.tape[local.iter_466.tape_ptr]))}"
      : local.iter_466.output)
    
    tape = (
      local.curr_467.code == "+"
        ? [for i, b in local.iter_466.tape : (i == local.iter_466.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_467.code == "-"
        ? [for i, b in local.iter_466.tape : (i == local.iter_466.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_467.code == ","
        ? [for i, b in local.iter_466.tape : (i == local.iter_466.tape_ptr ? local.ascii_lookup[local.curr_467.input] : b)]
        : local.iter_466.tape)

    tape_ptr = (
      local.curr_467.code == "<"
        ? local.iter_466.tape_ptr == 0 ? length(local.iter_466.tape) - 1 : local.iter_466.tape_ptr - 1 :
      local.curr_467.code == ">"
        ? local.iter_466.tape_ptr == length(local.iter_466.tape) - 1 ? 0 : local.iter_466.tape_ptr + 1
        : local.iter_466.tape_ptr)

    code_ptr = 1 + (
      local.curr_467.code == "["
        ? local.iter_466.tape[local.iter_466.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_466.code_ptr)] : local.iter_466.code_ptr :
      local.curr_467.code == "]"
        ? local.iter_466.tape[local.iter_466.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_466.code_ptr)] : local.iter_466.code_ptr
        : local.iter_466.code_ptr)

    steps_taken = 1 + local.iter_466.steps_taken
  }
}

locals {
  end_of_code_468 = try(local.iter_467.code_ptr >= length(var.code), true)

  curr_468 = local.end_of_code_468 ? null : {
    code = substr(var.code, local.iter_467.code_ptr, 1)
    input = substr(var.code, local.iter_467.code_ptr, 1) == "," ? substr(local.iter_467.input, 0, 1) : null
  }

  iter_468 = local.end_of_code_468 ? local.iter_467 : {
    input = (local.curr_468.code == ","
      ? substr(local.iter_467.input, 1, -1)
      : local.iter_467.input)

    output = (local.curr_468.code == "."
      ? "${local.iter_467.output}${jsondecode(format("\"\\u%04x\"", local.iter_467.tape[local.iter_467.tape_ptr]))}"
      : local.iter_467.output)
    
    tape = (
      local.curr_468.code == "+"
        ? [for i, b in local.iter_467.tape : (i == local.iter_467.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_468.code == "-"
        ? [for i, b in local.iter_467.tape : (i == local.iter_467.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_468.code == ","
        ? [for i, b in local.iter_467.tape : (i == local.iter_467.tape_ptr ? local.ascii_lookup[local.curr_468.input] : b)]
        : local.iter_467.tape)

    tape_ptr = (
      local.curr_468.code == "<"
        ? local.iter_467.tape_ptr == 0 ? length(local.iter_467.tape) - 1 : local.iter_467.tape_ptr - 1 :
      local.curr_468.code == ">"
        ? local.iter_467.tape_ptr == length(local.iter_467.tape) - 1 ? 0 : local.iter_467.tape_ptr + 1
        : local.iter_467.tape_ptr)

    code_ptr = 1 + (
      local.curr_468.code == "["
        ? local.iter_467.tape[local.iter_467.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_467.code_ptr)] : local.iter_467.code_ptr :
      local.curr_468.code == "]"
        ? local.iter_467.tape[local.iter_467.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_467.code_ptr)] : local.iter_467.code_ptr
        : local.iter_467.code_ptr)

    steps_taken = 1 + local.iter_467.steps_taken
  }
}

locals {
  end_of_code_469 = try(local.iter_468.code_ptr >= length(var.code), true)

  curr_469 = local.end_of_code_469 ? null : {
    code = substr(var.code, local.iter_468.code_ptr, 1)
    input = substr(var.code, local.iter_468.code_ptr, 1) == "," ? substr(local.iter_468.input, 0, 1) : null
  }

  iter_469 = local.end_of_code_469 ? local.iter_468 : {
    input = (local.curr_469.code == ","
      ? substr(local.iter_468.input, 1, -1)
      : local.iter_468.input)

    output = (local.curr_469.code == "."
      ? "${local.iter_468.output}${jsondecode(format("\"\\u%04x\"", local.iter_468.tape[local.iter_468.tape_ptr]))}"
      : local.iter_468.output)
    
    tape = (
      local.curr_469.code == "+"
        ? [for i, b in local.iter_468.tape : (i == local.iter_468.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_469.code == "-"
        ? [for i, b in local.iter_468.tape : (i == local.iter_468.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_469.code == ","
        ? [for i, b in local.iter_468.tape : (i == local.iter_468.tape_ptr ? local.ascii_lookup[local.curr_469.input] : b)]
        : local.iter_468.tape)

    tape_ptr = (
      local.curr_469.code == "<"
        ? local.iter_468.tape_ptr == 0 ? length(local.iter_468.tape) - 1 : local.iter_468.tape_ptr - 1 :
      local.curr_469.code == ">"
        ? local.iter_468.tape_ptr == length(local.iter_468.tape) - 1 ? 0 : local.iter_468.tape_ptr + 1
        : local.iter_468.tape_ptr)

    code_ptr = 1 + (
      local.curr_469.code == "["
        ? local.iter_468.tape[local.iter_468.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_468.code_ptr)] : local.iter_468.code_ptr :
      local.curr_469.code == "]"
        ? local.iter_468.tape[local.iter_468.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_468.code_ptr)] : local.iter_468.code_ptr
        : local.iter_468.code_ptr)

    steps_taken = 1 + local.iter_468.steps_taken
  }
}

locals {
  end_of_code_470 = try(local.iter_469.code_ptr >= length(var.code), true)

  curr_470 = local.end_of_code_470 ? null : {
    code = substr(var.code, local.iter_469.code_ptr, 1)
    input = substr(var.code, local.iter_469.code_ptr, 1) == "," ? substr(local.iter_469.input, 0, 1) : null
  }

  iter_470 = local.end_of_code_470 ? local.iter_469 : {
    input = (local.curr_470.code == ","
      ? substr(local.iter_469.input, 1, -1)
      : local.iter_469.input)

    output = (local.curr_470.code == "."
      ? "${local.iter_469.output}${jsondecode(format("\"\\u%04x\"", local.iter_469.tape[local.iter_469.tape_ptr]))}"
      : local.iter_469.output)
    
    tape = (
      local.curr_470.code == "+"
        ? [for i, b in local.iter_469.tape : (i == local.iter_469.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_470.code == "-"
        ? [for i, b in local.iter_469.tape : (i == local.iter_469.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_470.code == ","
        ? [for i, b in local.iter_469.tape : (i == local.iter_469.tape_ptr ? local.ascii_lookup[local.curr_470.input] : b)]
        : local.iter_469.tape)

    tape_ptr = (
      local.curr_470.code == "<"
        ? local.iter_469.tape_ptr == 0 ? length(local.iter_469.tape) - 1 : local.iter_469.tape_ptr - 1 :
      local.curr_470.code == ">"
        ? local.iter_469.tape_ptr == length(local.iter_469.tape) - 1 ? 0 : local.iter_469.tape_ptr + 1
        : local.iter_469.tape_ptr)

    code_ptr = 1 + (
      local.curr_470.code == "["
        ? local.iter_469.tape[local.iter_469.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_469.code_ptr)] : local.iter_469.code_ptr :
      local.curr_470.code == "]"
        ? local.iter_469.tape[local.iter_469.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_469.code_ptr)] : local.iter_469.code_ptr
        : local.iter_469.code_ptr)

    steps_taken = 1 + local.iter_469.steps_taken
  }
}

locals {
  end_of_code_471 = try(local.iter_470.code_ptr >= length(var.code), true)

  curr_471 = local.end_of_code_471 ? null : {
    code = substr(var.code, local.iter_470.code_ptr, 1)
    input = substr(var.code, local.iter_470.code_ptr, 1) == "," ? substr(local.iter_470.input, 0, 1) : null
  }

  iter_471 = local.end_of_code_471 ? local.iter_470 : {
    input = (local.curr_471.code == ","
      ? substr(local.iter_470.input, 1, -1)
      : local.iter_470.input)

    output = (local.curr_471.code == "."
      ? "${local.iter_470.output}${jsondecode(format("\"\\u%04x\"", local.iter_470.tape[local.iter_470.tape_ptr]))}"
      : local.iter_470.output)
    
    tape = (
      local.curr_471.code == "+"
        ? [for i, b in local.iter_470.tape : (i == local.iter_470.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_471.code == "-"
        ? [for i, b in local.iter_470.tape : (i == local.iter_470.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_471.code == ","
        ? [for i, b in local.iter_470.tape : (i == local.iter_470.tape_ptr ? local.ascii_lookup[local.curr_471.input] : b)]
        : local.iter_470.tape)

    tape_ptr = (
      local.curr_471.code == "<"
        ? local.iter_470.tape_ptr == 0 ? length(local.iter_470.tape) - 1 : local.iter_470.tape_ptr - 1 :
      local.curr_471.code == ">"
        ? local.iter_470.tape_ptr == length(local.iter_470.tape) - 1 ? 0 : local.iter_470.tape_ptr + 1
        : local.iter_470.tape_ptr)

    code_ptr = 1 + (
      local.curr_471.code == "["
        ? local.iter_470.tape[local.iter_470.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_470.code_ptr)] : local.iter_470.code_ptr :
      local.curr_471.code == "]"
        ? local.iter_470.tape[local.iter_470.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_470.code_ptr)] : local.iter_470.code_ptr
        : local.iter_470.code_ptr)

    steps_taken = 1 + local.iter_470.steps_taken
  }
}

locals {
  end_of_code_472 = try(local.iter_471.code_ptr >= length(var.code), true)

  curr_472 = local.end_of_code_472 ? null : {
    code = substr(var.code, local.iter_471.code_ptr, 1)
    input = substr(var.code, local.iter_471.code_ptr, 1) == "," ? substr(local.iter_471.input, 0, 1) : null
  }

  iter_472 = local.end_of_code_472 ? local.iter_471 : {
    input = (local.curr_472.code == ","
      ? substr(local.iter_471.input, 1, -1)
      : local.iter_471.input)

    output = (local.curr_472.code == "."
      ? "${local.iter_471.output}${jsondecode(format("\"\\u%04x\"", local.iter_471.tape[local.iter_471.tape_ptr]))}"
      : local.iter_471.output)
    
    tape = (
      local.curr_472.code == "+"
        ? [for i, b in local.iter_471.tape : (i == local.iter_471.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_472.code == "-"
        ? [for i, b in local.iter_471.tape : (i == local.iter_471.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_472.code == ","
        ? [for i, b in local.iter_471.tape : (i == local.iter_471.tape_ptr ? local.ascii_lookup[local.curr_472.input] : b)]
        : local.iter_471.tape)

    tape_ptr = (
      local.curr_472.code == "<"
        ? local.iter_471.tape_ptr == 0 ? length(local.iter_471.tape) - 1 : local.iter_471.tape_ptr - 1 :
      local.curr_472.code == ">"
        ? local.iter_471.tape_ptr == length(local.iter_471.tape) - 1 ? 0 : local.iter_471.tape_ptr + 1
        : local.iter_471.tape_ptr)

    code_ptr = 1 + (
      local.curr_472.code == "["
        ? local.iter_471.tape[local.iter_471.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_471.code_ptr)] : local.iter_471.code_ptr :
      local.curr_472.code == "]"
        ? local.iter_471.tape[local.iter_471.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_471.code_ptr)] : local.iter_471.code_ptr
        : local.iter_471.code_ptr)

    steps_taken = 1 + local.iter_471.steps_taken
  }
}

locals {
  end_of_code_473 = try(local.iter_472.code_ptr >= length(var.code), true)

  curr_473 = local.end_of_code_473 ? null : {
    code = substr(var.code, local.iter_472.code_ptr, 1)
    input = substr(var.code, local.iter_472.code_ptr, 1) == "," ? substr(local.iter_472.input, 0, 1) : null
  }

  iter_473 = local.end_of_code_473 ? local.iter_472 : {
    input = (local.curr_473.code == ","
      ? substr(local.iter_472.input, 1, -1)
      : local.iter_472.input)

    output = (local.curr_473.code == "."
      ? "${local.iter_472.output}${jsondecode(format("\"\\u%04x\"", local.iter_472.tape[local.iter_472.tape_ptr]))}"
      : local.iter_472.output)
    
    tape = (
      local.curr_473.code == "+"
        ? [for i, b in local.iter_472.tape : (i == local.iter_472.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_473.code == "-"
        ? [for i, b in local.iter_472.tape : (i == local.iter_472.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_473.code == ","
        ? [for i, b in local.iter_472.tape : (i == local.iter_472.tape_ptr ? local.ascii_lookup[local.curr_473.input] : b)]
        : local.iter_472.tape)

    tape_ptr = (
      local.curr_473.code == "<"
        ? local.iter_472.tape_ptr == 0 ? length(local.iter_472.tape) - 1 : local.iter_472.tape_ptr - 1 :
      local.curr_473.code == ">"
        ? local.iter_472.tape_ptr == length(local.iter_472.tape) - 1 ? 0 : local.iter_472.tape_ptr + 1
        : local.iter_472.tape_ptr)

    code_ptr = 1 + (
      local.curr_473.code == "["
        ? local.iter_472.tape[local.iter_472.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_472.code_ptr)] : local.iter_472.code_ptr :
      local.curr_473.code == "]"
        ? local.iter_472.tape[local.iter_472.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_472.code_ptr)] : local.iter_472.code_ptr
        : local.iter_472.code_ptr)

    steps_taken = 1 + local.iter_472.steps_taken
  }
}

locals {
  end_of_code_474 = try(local.iter_473.code_ptr >= length(var.code), true)

  curr_474 = local.end_of_code_474 ? null : {
    code = substr(var.code, local.iter_473.code_ptr, 1)
    input = substr(var.code, local.iter_473.code_ptr, 1) == "," ? substr(local.iter_473.input, 0, 1) : null
  }

  iter_474 = local.end_of_code_474 ? local.iter_473 : {
    input = (local.curr_474.code == ","
      ? substr(local.iter_473.input, 1, -1)
      : local.iter_473.input)

    output = (local.curr_474.code == "."
      ? "${local.iter_473.output}${jsondecode(format("\"\\u%04x\"", local.iter_473.tape[local.iter_473.tape_ptr]))}"
      : local.iter_473.output)
    
    tape = (
      local.curr_474.code == "+"
        ? [for i, b in local.iter_473.tape : (i == local.iter_473.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_474.code == "-"
        ? [for i, b in local.iter_473.tape : (i == local.iter_473.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_474.code == ","
        ? [for i, b in local.iter_473.tape : (i == local.iter_473.tape_ptr ? local.ascii_lookup[local.curr_474.input] : b)]
        : local.iter_473.tape)

    tape_ptr = (
      local.curr_474.code == "<"
        ? local.iter_473.tape_ptr == 0 ? length(local.iter_473.tape) - 1 : local.iter_473.tape_ptr - 1 :
      local.curr_474.code == ">"
        ? local.iter_473.tape_ptr == length(local.iter_473.tape) - 1 ? 0 : local.iter_473.tape_ptr + 1
        : local.iter_473.tape_ptr)

    code_ptr = 1 + (
      local.curr_474.code == "["
        ? local.iter_473.tape[local.iter_473.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_473.code_ptr)] : local.iter_473.code_ptr :
      local.curr_474.code == "]"
        ? local.iter_473.tape[local.iter_473.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_473.code_ptr)] : local.iter_473.code_ptr
        : local.iter_473.code_ptr)

    steps_taken = 1 + local.iter_473.steps_taken
  }
}

locals {
  end_of_code_475 = try(local.iter_474.code_ptr >= length(var.code), true)

  curr_475 = local.end_of_code_475 ? null : {
    code = substr(var.code, local.iter_474.code_ptr, 1)
    input = substr(var.code, local.iter_474.code_ptr, 1) == "," ? substr(local.iter_474.input, 0, 1) : null
  }

  iter_475 = local.end_of_code_475 ? local.iter_474 : {
    input = (local.curr_475.code == ","
      ? substr(local.iter_474.input, 1, -1)
      : local.iter_474.input)

    output = (local.curr_475.code == "."
      ? "${local.iter_474.output}${jsondecode(format("\"\\u%04x\"", local.iter_474.tape[local.iter_474.tape_ptr]))}"
      : local.iter_474.output)
    
    tape = (
      local.curr_475.code == "+"
        ? [for i, b in local.iter_474.tape : (i == local.iter_474.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_475.code == "-"
        ? [for i, b in local.iter_474.tape : (i == local.iter_474.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_475.code == ","
        ? [for i, b in local.iter_474.tape : (i == local.iter_474.tape_ptr ? local.ascii_lookup[local.curr_475.input] : b)]
        : local.iter_474.tape)

    tape_ptr = (
      local.curr_475.code == "<"
        ? local.iter_474.tape_ptr == 0 ? length(local.iter_474.tape) - 1 : local.iter_474.tape_ptr - 1 :
      local.curr_475.code == ">"
        ? local.iter_474.tape_ptr == length(local.iter_474.tape) - 1 ? 0 : local.iter_474.tape_ptr + 1
        : local.iter_474.tape_ptr)

    code_ptr = 1 + (
      local.curr_475.code == "["
        ? local.iter_474.tape[local.iter_474.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_474.code_ptr)] : local.iter_474.code_ptr :
      local.curr_475.code == "]"
        ? local.iter_474.tape[local.iter_474.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_474.code_ptr)] : local.iter_474.code_ptr
        : local.iter_474.code_ptr)

    steps_taken = 1 + local.iter_474.steps_taken
  }
}

locals {
  end_of_code_476 = try(local.iter_475.code_ptr >= length(var.code), true)

  curr_476 = local.end_of_code_476 ? null : {
    code = substr(var.code, local.iter_475.code_ptr, 1)
    input = substr(var.code, local.iter_475.code_ptr, 1) == "," ? substr(local.iter_475.input, 0, 1) : null
  }

  iter_476 = local.end_of_code_476 ? local.iter_475 : {
    input = (local.curr_476.code == ","
      ? substr(local.iter_475.input, 1, -1)
      : local.iter_475.input)

    output = (local.curr_476.code == "."
      ? "${local.iter_475.output}${jsondecode(format("\"\\u%04x\"", local.iter_475.tape[local.iter_475.tape_ptr]))}"
      : local.iter_475.output)
    
    tape = (
      local.curr_476.code == "+"
        ? [for i, b in local.iter_475.tape : (i == local.iter_475.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_476.code == "-"
        ? [for i, b in local.iter_475.tape : (i == local.iter_475.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_476.code == ","
        ? [for i, b in local.iter_475.tape : (i == local.iter_475.tape_ptr ? local.ascii_lookup[local.curr_476.input] : b)]
        : local.iter_475.tape)

    tape_ptr = (
      local.curr_476.code == "<"
        ? local.iter_475.tape_ptr == 0 ? length(local.iter_475.tape) - 1 : local.iter_475.tape_ptr - 1 :
      local.curr_476.code == ">"
        ? local.iter_475.tape_ptr == length(local.iter_475.tape) - 1 ? 0 : local.iter_475.tape_ptr + 1
        : local.iter_475.tape_ptr)

    code_ptr = 1 + (
      local.curr_476.code == "["
        ? local.iter_475.tape[local.iter_475.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_475.code_ptr)] : local.iter_475.code_ptr :
      local.curr_476.code == "]"
        ? local.iter_475.tape[local.iter_475.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_475.code_ptr)] : local.iter_475.code_ptr
        : local.iter_475.code_ptr)

    steps_taken = 1 + local.iter_475.steps_taken
  }
}

locals {
  end_of_code_477 = try(local.iter_476.code_ptr >= length(var.code), true)

  curr_477 = local.end_of_code_477 ? null : {
    code = substr(var.code, local.iter_476.code_ptr, 1)
    input = substr(var.code, local.iter_476.code_ptr, 1) == "," ? substr(local.iter_476.input, 0, 1) : null
  }

  iter_477 = local.end_of_code_477 ? local.iter_476 : {
    input = (local.curr_477.code == ","
      ? substr(local.iter_476.input, 1, -1)
      : local.iter_476.input)

    output = (local.curr_477.code == "."
      ? "${local.iter_476.output}${jsondecode(format("\"\\u%04x\"", local.iter_476.tape[local.iter_476.tape_ptr]))}"
      : local.iter_476.output)
    
    tape = (
      local.curr_477.code == "+"
        ? [for i, b in local.iter_476.tape : (i == local.iter_476.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_477.code == "-"
        ? [for i, b in local.iter_476.tape : (i == local.iter_476.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_477.code == ","
        ? [for i, b in local.iter_476.tape : (i == local.iter_476.tape_ptr ? local.ascii_lookup[local.curr_477.input] : b)]
        : local.iter_476.tape)

    tape_ptr = (
      local.curr_477.code == "<"
        ? local.iter_476.tape_ptr == 0 ? length(local.iter_476.tape) - 1 : local.iter_476.tape_ptr - 1 :
      local.curr_477.code == ">"
        ? local.iter_476.tape_ptr == length(local.iter_476.tape) - 1 ? 0 : local.iter_476.tape_ptr + 1
        : local.iter_476.tape_ptr)

    code_ptr = 1 + (
      local.curr_477.code == "["
        ? local.iter_476.tape[local.iter_476.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_476.code_ptr)] : local.iter_476.code_ptr :
      local.curr_477.code == "]"
        ? local.iter_476.tape[local.iter_476.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_476.code_ptr)] : local.iter_476.code_ptr
        : local.iter_476.code_ptr)

    steps_taken = 1 + local.iter_476.steps_taken
  }
}

locals {
  end_of_code_478 = try(local.iter_477.code_ptr >= length(var.code), true)

  curr_478 = local.end_of_code_478 ? null : {
    code = substr(var.code, local.iter_477.code_ptr, 1)
    input = substr(var.code, local.iter_477.code_ptr, 1) == "," ? substr(local.iter_477.input, 0, 1) : null
  }

  iter_478 = local.end_of_code_478 ? local.iter_477 : {
    input = (local.curr_478.code == ","
      ? substr(local.iter_477.input, 1, -1)
      : local.iter_477.input)

    output = (local.curr_478.code == "."
      ? "${local.iter_477.output}${jsondecode(format("\"\\u%04x\"", local.iter_477.tape[local.iter_477.tape_ptr]))}"
      : local.iter_477.output)
    
    tape = (
      local.curr_478.code == "+"
        ? [for i, b in local.iter_477.tape : (i == local.iter_477.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_478.code == "-"
        ? [for i, b in local.iter_477.tape : (i == local.iter_477.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_478.code == ","
        ? [for i, b in local.iter_477.tape : (i == local.iter_477.tape_ptr ? local.ascii_lookup[local.curr_478.input] : b)]
        : local.iter_477.tape)

    tape_ptr = (
      local.curr_478.code == "<"
        ? local.iter_477.tape_ptr == 0 ? length(local.iter_477.tape) - 1 : local.iter_477.tape_ptr - 1 :
      local.curr_478.code == ">"
        ? local.iter_477.tape_ptr == length(local.iter_477.tape) - 1 ? 0 : local.iter_477.tape_ptr + 1
        : local.iter_477.tape_ptr)

    code_ptr = 1 + (
      local.curr_478.code == "["
        ? local.iter_477.tape[local.iter_477.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_477.code_ptr)] : local.iter_477.code_ptr :
      local.curr_478.code == "]"
        ? local.iter_477.tape[local.iter_477.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_477.code_ptr)] : local.iter_477.code_ptr
        : local.iter_477.code_ptr)

    steps_taken = 1 + local.iter_477.steps_taken
  }
}

locals {
  end_of_code_479 = try(local.iter_478.code_ptr >= length(var.code), true)

  curr_479 = local.end_of_code_479 ? null : {
    code = substr(var.code, local.iter_478.code_ptr, 1)
    input = substr(var.code, local.iter_478.code_ptr, 1) == "," ? substr(local.iter_478.input, 0, 1) : null
  }

  iter_479 = local.end_of_code_479 ? local.iter_478 : {
    input = (local.curr_479.code == ","
      ? substr(local.iter_478.input, 1, -1)
      : local.iter_478.input)

    output = (local.curr_479.code == "."
      ? "${local.iter_478.output}${jsondecode(format("\"\\u%04x\"", local.iter_478.tape[local.iter_478.tape_ptr]))}"
      : local.iter_478.output)
    
    tape = (
      local.curr_479.code == "+"
        ? [for i, b in local.iter_478.tape : (i == local.iter_478.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_479.code == "-"
        ? [for i, b in local.iter_478.tape : (i == local.iter_478.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_479.code == ","
        ? [for i, b in local.iter_478.tape : (i == local.iter_478.tape_ptr ? local.ascii_lookup[local.curr_479.input] : b)]
        : local.iter_478.tape)

    tape_ptr = (
      local.curr_479.code == "<"
        ? local.iter_478.tape_ptr == 0 ? length(local.iter_478.tape) - 1 : local.iter_478.tape_ptr - 1 :
      local.curr_479.code == ">"
        ? local.iter_478.tape_ptr == length(local.iter_478.tape) - 1 ? 0 : local.iter_478.tape_ptr + 1
        : local.iter_478.tape_ptr)

    code_ptr = 1 + (
      local.curr_479.code == "["
        ? local.iter_478.tape[local.iter_478.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_478.code_ptr)] : local.iter_478.code_ptr :
      local.curr_479.code == "]"
        ? local.iter_478.tape[local.iter_478.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_478.code_ptr)] : local.iter_478.code_ptr
        : local.iter_478.code_ptr)

    steps_taken = 1 + local.iter_478.steps_taken
  }
}

locals {
  end_of_code_480 = try(local.iter_479.code_ptr >= length(var.code), true)

  curr_480 = local.end_of_code_480 ? null : {
    code = substr(var.code, local.iter_479.code_ptr, 1)
    input = substr(var.code, local.iter_479.code_ptr, 1) == "," ? substr(local.iter_479.input, 0, 1) : null
  }

  iter_480 = local.end_of_code_480 ? local.iter_479 : {
    input = (local.curr_480.code == ","
      ? substr(local.iter_479.input, 1, -1)
      : local.iter_479.input)

    output = (local.curr_480.code == "."
      ? "${local.iter_479.output}${jsondecode(format("\"\\u%04x\"", local.iter_479.tape[local.iter_479.tape_ptr]))}"
      : local.iter_479.output)
    
    tape = (
      local.curr_480.code == "+"
        ? [for i, b in local.iter_479.tape : (i == local.iter_479.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_480.code == "-"
        ? [for i, b in local.iter_479.tape : (i == local.iter_479.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_480.code == ","
        ? [for i, b in local.iter_479.tape : (i == local.iter_479.tape_ptr ? local.ascii_lookup[local.curr_480.input] : b)]
        : local.iter_479.tape)

    tape_ptr = (
      local.curr_480.code == "<"
        ? local.iter_479.tape_ptr == 0 ? length(local.iter_479.tape) - 1 : local.iter_479.tape_ptr - 1 :
      local.curr_480.code == ">"
        ? local.iter_479.tape_ptr == length(local.iter_479.tape) - 1 ? 0 : local.iter_479.tape_ptr + 1
        : local.iter_479.tape_ptr)

    code_ptr = 1 + (
      local.curr_480.code == "["
        ? local.iter_479.tape[local.iter_479.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_479.code_ptr)] : local.iter_479.code_ptr :
      local.curr_480.code == "]"
        ? local.iter_479.tape[local.iter_479.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_479.code_ptr)] : local.iter_479.code_ptr
        : local.iter_479.code_ptr)

    steps_taken = 1 + local.iter_479.steps_taken
  }
}

locals {
  end_of_code_481 = try(local.iter_480.code_ptr >= length(var.code), true)

  curr_481 = local.end_of_code_481 ? null : {
    code = substr(var.code, local.iter_480.code_ptr, 1)
    input = substr(var.code, local.iter_480.code_ptr, 1) == "," ? substr(local.iter_480.input, 0, 1) : null
  }

  iter_481 = local.end_of_code_481 ? local.iter_480 : {
    input = (local.curr_481.code == ","
      ? substr(local.iter_480.input, 1, -1)
      : local.iter_480.input)

    output = (local.curr_481.code == "."
      ? "${local.iter_480.output}${jsondecode(format("\"\\u%04x\"", local.iter_480.tape[local.iter_480.tape_ptr]))}"
      : local.iter_480.output)
    
    tape = (
      local.curr_481.code == "+"
        ? [for i, b in local.iter_480.tape : (i == local.iter_480.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_481.code == "-"
        ? [for i, b in local.iter_480.tape : (i == local.iter_480.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_481.code == ","
        ? [for i, b in local.iter_480.tape : (i == local.iter_480.tape_ptr ? local.ascii_lookup[local.curr_481.input] : b)]
        : local.iter_480.tape)

    tape_ptr = (
      local.curr_481.code == "<"
        ? local.iter_480.tape_ptr == 0 ? length(local.iter_480.tape) - 1 : local.iter_480.tape_ptr - 1 :
      local.curr_481.code == ">"
        ? local.iter_480.tape_ptr == length(local.iter_480.tape) - 1 ? 0 : local.iter_480.tape_ptr + 1
        : local.iter_480.tape_ptr)

    code_ptr = 1 + (
      local.curr_481.code == "["
        ? local.iter_480.tape[local.iter_480.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_480.code_ptr)] : local.iter_480.code_ptr :
      local.curr_481.code == "]"
        ? local.iter_480.tape[local.iter_480.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_480.code_ptr)] : local.iter_480.code_ptr
        : local.iter_480.code_ptr)

    steps_taken = 1 + local.iter_480.steps_taken
  }
}

locals {
  end_of_code_482 = try(local.iter_481.code_ptr >= length(var.code), true)

  curr_482 = local.end_of_code_482 ? null : {
    code = substr(var.code, local.iter_481.code_ptr, 1)
    input = substr(var.code, local.iter_481.code_ptr, 1) == "," ? substr(local.iter_481.input, 0, 1) : null
  }

  iter_482 = local.end_of_code_482 ? local.iter_481 : {
    input = (local.curr_482.code == ","
      ? substr(local.iter_481.input, 1, -1)
      : local.iter_481.input)

    output = (local.curr_482.code == "."
      ? "${local.iter_481.output}${jsondecode(format("\"\\u%04x\"", local.iter_481.tape[local.iter_481.tape_ptr]))}"
      : local.iter_481.output)
    
    tape = (
      local.curr_482.code == "+"
        ? [for i, b in local.iter_481.tape : (i == local.iter_481.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_482.code == "-"
        ? [for i, b in local.iter_481.tape : (i == local.iter_481.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_482.code == ","
        ? [for i, b in local.iter_481.tape : (i == local.iter_481.tape_ptr ? local.ascii_lookup[local.curr_482.input] : b)]
        : local.iter_481.tape)

    tape_ptr = (
      local.curr_482.code == "<"
        ? local.iter_481.tape_ptr == 0 ? length(local.iter_481.tape) - 1 : local.iter_481.tape_ptr - 1 :
      local.curr_482.code == ">"
        ? local.iter_481.tape_ptr == length(local.iter_481.tape) - 1 ? 0 : local.iter_481.tape_ptr + 1
        : local.iter_481.tape_ptr)

    code_ptr = 1 + (
      local.curr_482.code == "["
        ? local.iter_481.tape[local.iter_481.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_481.code_ptr)] : local.iter_481.code_ptr :
      local.curr_482.code == "]"
        ? local.iter_481.tape[local.iter_481.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_481.code_ptr)] : local.iter_481.code_ptr
        : local.iter_481.code_ptr)

    steps_taken = 1 + local.iter_481.steps_taken
  }
}

locals {
  end_of_code_483 = try(local.iter_482.code_ptr >= length(var.code), true)

  curr_483 = local.end_of_code_483 ? null : {
    code = substr(var.code, local.iter_482.code_ptr, 1)
    input = substr(var.code, local.iter_482.code_ptr, 1) == "," ? substr(local.iter_482.input, 0, 1) : null
  }

  iter_483 = local.end_of_code_483 ? local.iter_482 : {
    input = (local.curr_483.code == ","
      ? substr(local.iter_482.input, 1, -1)
      : local.iter_482.input)

    output = (local.curr_483.code == "."
      ? "${local.iter_482.output}${jsondecode(format("\"\\u%04x\"", local.iter_482.tape[local.iter_482.tape_ptr]))}"
      : local.iter_482.output)
    
    tape = (
      local.curr_483.code == "+"
        ? [for i, b in local.iter_482.tape : (i == local.iter_482.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_483.code == "-"
        ? [for i, b in local.iter_482.tape : (i == local.iter_482.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_483.code == ","
        ? [for i, b in local.iter_482.tape : (i == local.iter_482.tape_ptr ? local.ascii_lookup[local.curr_483.input] : b)]
        : local.iter_482.tape)

    tape_ptr = (
      local.curr_483.code == "<"
        ? local.iter_482.tape_ptr == 0 ? length(local.iter_482.tape) - 1 : local.iter_482.tape_ptr - 1 :
      local.curr_483.code == ">"
        ? local.iter_482.tape_ptr == length(local.iter_482.tape) - 1 ? 0 : local.iter_482.tape_ptr + 1
        : local.iter_482.tape_ptr)

    code_ptr = 1 + (
      local.curr_483.code == "["
        ? local.iter_482.tape[local.iter_482.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_482.code_ptr)] : local.iter_482.code_ptr :
      local.curr_483.code == "]"
        ? local.iter_482.tape[local.iter_482.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_482.code_ptr)] : local.iter_482.code_ptr
        : local.iter_482.code_ptr)

    steps_taken = 1 + local.iter_482.steps_taken
  }
}

locals {
  end_of_code_484 = try(local.iter_483.code_ptr >= length(var.code), true)

  curr_484 = local.end_of_code_484 ? null : {
    code = substr(var.code, local.iter_483.code_ptr, 1)
    input = substr(var.code, local.iter_483.code_ptr, 1) == "," ? substr(local.iter_483.input, 0, 1) : null
  }

  iter_484 = local.end_of_code_484 ? local.iter_483 : {
    input = (local.curr_484.code == ","
      ? substr(local.iter_483.input, 1, -1)
      : local.iter_483.input)

    output = (local.curr_484.code == "."
      ? "${local.iter_483.output}${jsondecode(format("\"\\u%04x\"", local.iter_483.tape[local.iter_483.tape_ptr]))}"
      : local.iter_483.output)
    
    tape = (
      local.curr_484.code == "+"
        ? [for i, b in local.iter_483.tape : (i == local.iter_483.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_484.code == "-"
        ? [for i, b in local.iter_483.tape : (i == local.iter_483.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_484.code == ","
        ? [for i, b in local.iter_483.tape : (i == local.iter_483.tape_ptr ? local.ascii_lookup[local.curr_484.input] : b)]
        : local.iter_483.tape)

    tape_ptr = (
      local.curr_484.code == "<"
        ? local.iter_483.tape_ptr == 0 ? length(local.iter_483.tape) - 1 : local.iter_483.tape_ptr - 1 :
      local.curr_484.code == ">"
        ? local.iter_483.tape_ptr == length(local.iter_483.tape) - 1 ? 0 : local.iter_483.tape_ptr + 1
        : local.iter_483.tape_ptr)

    code_ptr = 1 + (
      local.curr_484.code == "["
        ? local.iter_483.tape[local.iter_483.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_483.code_ptr)] : local.iter_483.code_ptr :
      local.curr_484.code == "]"
        ? local.iter_483.tape[local.iter_483.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_483.code_ptr)] : local.iter_483.code_ptr
        : local.iter_483.code_ptr)

    steps_taken = 1 + local.iter_483.steps_taken
  }
}

locals {
  end_of_code_485 = try(local.iter_484.code_ptr >= length(var.code), true)

  curr_485 = local.end_of_code_485 ? null : {
    code = substr(var.code, local.iter_484.code_ptr, 1)
    input = substr(var.code, local.iter_484.code_ptr, 1) == "," ? substr(local.iter_484.input, 0, 1) : null
  }

  iter_485 = local.end_of_code_485 ? local.iter_484 : {
    input = (local.curr_485.code == ","
      ? substr(local.iter_484.input, 1, -1)
      : local.iter_484.input)

    output = (local.curr_485.code == "."
      ? "${local.iter_484.output}${jsondecode(format("\"\\u%04x\"", local.iter_484.tape[local.iter_484.tape_ptr]))}"
      : local.iter_484.output)
    
    tape = (
      local.curr_485.code == "+"
        ? [for i, b in local.iter_484.tape : (i == local.iter_484.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_485.code == "-"
        ? [for i, b in local.iter_484.tape : (i == local.iter_484.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_485.code == ","
        ? [for i, b in local.iter_484.tape : (i == local.iter_484.tape_ptr ? local.ascii_lookup[local.curr_485.input] : b)]
        : local.iter_484.tape)

    tape_ptr = (
      local.curr_485.code == "<"
        ? local.iter_484.tape_ptr == 0 ? length(local.iter_484.tape) - 1 : local.iter_484.tape_ptr - 1 :
      local.curr_485.code == ">"
        ? local.iter_484.tape_ptr == length(local.iter_484.tape) - 1 ? 0 : local.iter_484.tape_ptr + 1
        : local.iter_484.tape_ptr)

    code_ptr = 1 + (
      local.curr_485.code == "["
        ? local.iter_484.tape[local.iter_484.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_484.code_ptr)] : local.iter_484.code_ptr :
      local.curr_485.code == "]"
        ? local.iter_484.tape[local.iter_484.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_484.code_ptr)] : local.iter_484.code_ptr
        : local.iter_484.code_ptr)

    steps_taken = 1 + local.iter_484.steps_taken
  }
}

locals {
  end_of_code_486 = try(local.iter_485.code_ptr >= length(var.code), true)

  curr_486 = local.end_of_code_486 ? null : {
    code = substr(var.code, local.iter_485.code_ptr, 1)
    input = substr(var.code, local.iter_485.code_ptr, 1) == "," ? substr(local.iter_485.input, 0, 1) : null
  }

  iter_486 = local.end_of_code_486 ? local.iter_485 : {
    input = (local.curr_486.code == ","
      ? substr(local.iter_485.input, 1, -1)
      : local.iter_485.input)

    output = (local.curr_486.code == "."
      ? "${local.iter_485.output}${jsondecode(format("\"\\u%04x\"", local.iter_485.tape[local.iter_485.tape_ptr]))}"
      : local.iter_485.output)
    
    tape = (
      local.curr_486.code == "+"
        ? [for i, b in local.iter_485.tape : (i == local.iter_485.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_486.code == "-"
        ? [for i, b in local.iter_485.tape : (i == local.iter_485.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_486.code == ","
        ? [for i, b in local.iter_485.tape : (i == local.iter_485.tape_ptr ? local.ascii_lookup[local.curr_486.input] : b)]
        : local.iter_485.tape)

    tape_ptr = (
      local.curr_486.code == "<"
        ? local.iter_485.tape_ptr == 0 ? length(local.iter_485.tape) - 1 : local.iter_485.tape_ptr - 1 :
      local.curr_486.code == ">"
        ? local.iter_485.tape_ptr == length(local.iter_485.tape) - 1 ? 0 : local.iter_485.tape_ptr + 1
        : local.iter_485.tape_ptr)

    code_ptr = 1 + (
      local.curr_486.code == "["
        ? local.iter_485.tape[local.iter_485.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_485.code_ptr)] : local.iter_485.code_ptr :
      local.curr_486.code == "]"
        ? local.iter_485.tape[local.iter_485.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_485.code_ptr)] : local.iter_485.code_ptr
        : local.iter_485.code_ptr)

    steps_taken = 1 + local.iter_485.steps_taken
  }
}

locals {
  end_of_code_487 = try(local.iter_486.code_ptr >= length(var.code), true)

  curr_487 = local.end_of_code_487 ? null : {
    code = substr(var.code, local.iter_486.code_ptr, 1)
    input = substr(var.code, local.iter_486.code_ptr, 1) == "," ? substr(local.iter_486.input, 0, 1) : null
  }

  iter_487 = local.end_of_code_487 ? local.iter_486 : {
    input = (local.curr_487.code == ","
      ? substr(local.iter_486.input, 1, -1)
      : local.iter_486.input)

    output = (local.curr_487.code == "."
      ? "${local.iter_486.output}${jsondecode(format("\"\\u%04x\"", local.iter_486.tape[local.iter_486.tape_ptr]))}"
      : local.iter_486.output)
    
    tape = (
      local.curr_487.code == "+"
        ? [for i, b in local.iter_486.tape : (i == local.iter_486.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_487.code == "-"
        ? [for i, b in local.iter_486.tape : (i == local.iter_486.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_487.code == ","
        ? [for i, b in local.iter_486.tape : (i == local.iter_486.tape_ptr ? local.ascii_lookup[local.curr_487.input] : b)]
        : local.iter_486.tape)

    tape_ptr = (
      local.curr_487.code == "<"
        ? local.iter_486.tape_ptr == 0 ? length(local.iter_486.tape) - 1 : local.iter_486.tape_ptr - 1 :
      local.curr_487.code == ">"
        ? local.iter_486.tape_ptr == length(local.iter_486.tape) - 1 ? 0 : local.iter_486.tape_ptr + 1
        : local.iter_486.tape_ptr)

    code_ptr = 1 + (
      local.curr_487.code == "["
        ? local.iter_486.tape[local.iter_486.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_486.code_ptr)] : local.iter_486.code_ptr :
      local.curr_487.code == "]"
        ? local.iter_486.tape[local.iter_486.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_486.code_ptr)] : local.iter_486.code_ptr
        : local.iter_486.code_ptr)

    steps_taken = 1 + local.iter_486.steps_taken
  }
}

locals {
  end_of_code_488 = try(local.iter_487.code_ptr >= length(var.code), true)

  curr_488 = local.end_of_code_488 ? null : {
    code = substr(var.code, local.iter_487.code_ptr, 1)
    input = substr(var.code, local.iter_487.code_ptr, 1) == "," ? substr(local.iter_487.input, 0, 1) : null
  }

  iter_488 = local.end_of_code_488 ? local.iter_487 : {
    input = (local.curr_488.code == ","
      ? substr(local.iter_487.input, 1, -1)
      : local.iter_487.input)

    output = (local.curr_488.code == "."
      ? "${local.iter_487.output}${jsondecode(format("\"\\u%04x\"", local.iter_487.tape[local.iter_487.tape_ptr]))}"
      : local.iter_487.output)
    
    tape = (
      local.curr_488.code == "+"
        ? [for i, b in local.iter_487.tape : (i == local.iter_487.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_488.code == "-"
        ? [for i, b in local.iter_487.tape : (i == local.iter_487.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_488.code == ","
        ? [for i, b in local.iter_487.tape : (i == local.iter_487.tape_ptr ? local.ascii_lookup[local.curr_488.input] : b)]
        : local.iter_487.tape)

    tape_ptr = (
      local.curr_488.code == "<"
        ? local.iter_487.tape_ptr == 0 ? length(local.iter_487.tape) - 1 : local.iter_487.tape_ptr - 1 :
      local.curr_488.code == ">"
        ? local.iter_487.tape_ptr == length(local.iter_487.tape) - 1 ? 0 : local.iter_487.tape_ptr + 1
        : local.iter_487.tape_ptr)

    code_ptr = 1 + (
      local.curr_488.code == "["
        ? local.iter_487.tape[local.iter_487.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_487.code_ptr)] : local.iter_487.code_ptr :
      local.curr_488.code == "]"
        ? local.iter_487.tape[local.iter_487.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_487.code_ptr)] : local.iter_487.code_ptr
        : local.iter_487.code_ptr)

    steps_taken = 1 + local.iter_487.steps_taken
  }
}

locals {
  end_of_code_489 = try(local.iter_488.code_ptr >= length(var.code), true)

  curr_489 = local.end_of_code_489 ? null : {
    code = substr(var.code, local.iter_488.code_ptr, 1)
    input = substr(var.code, local.iter_488.code_ptr, 1) == "," ? substr(local.iter_488.input, 0, 1) : null
  }

  iter_489 = local.end_of_code_489 ? local.iter_488 : {
    input = (local.curr_489.code == ","
      ? substr(local.iter_488.input, 1, -1)
      : local.iter_488.input)

    output = (local.curr_489.code == "."
      ? "${local.iter_488.output}${jsondecode(format("\"\\u%04x\"", local.iter_488.tape[local.iter_488.tape_ptr]))}"
      : local.iter_488.output)
    
    tape = (
      local.curr_489.code == "+"
        ? [for i, b in local.iter_488.tape : (i == local.iter_488.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_489.code == "-"
        ? [for i, b in local.iter_488.tape : (i == local.iter_488.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_489.code == ","
        ? [for i, b in local.iter_488.tape : (i == local.iter_488.tape_ptr ? local.ascii_lookup[local.curr_489.input] : b)]
        : local.iter_488.tape)

    tape_ptr = (
      local.curr_489.code == "<"
        ? local.iter_488.tape_ptr == 0 ? length(local.iter_488.tape) - 1 : local.iter_488.tape_ptr - 1 :
      local.curr_489.code == ">"
        ? local.iter_488.tape_ptr == length(local.iter_488.tape) - 1 ? 0 : local.iter_488.tape_ptr + 1
        : local.iter_488.tape_ptr)

    code_ptr = 1 + (
      local.curr_489.code == "["
        ? local.iter_488.tape[local.iter_488.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_488.code_ptr)] : local.iter_488.code_ptr :
      local.curr_489.code == "]"
        ? local.iter_488.tape[local.iter_488.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_488.code_ptr)] : local.iter_488.code_ptr
        : local.iter_488.code_ptr)

    steps_taken = 1 + local.iter_488.steps_taken
  }
}

locals {
  end_of_code_490 = try(local.iter_489.code_ptr >= length(var.code), true)

  curr_490 = local.end_of_code_490 ? null : {
    code = substr(var.code, local.iter_489.code_ptr, 1)
    input = substr(var.code, local.iter_489.code_ptr, 1) == "," ? substr(local.iter_489.input, 0, 1) : null
  }

  iter_490 = local.end_of_code_490 ? local.iter_489 : {
    input = (local.curr_490.code == ","
      ? substr(local.iter_489.input, 1, -1)
      : local.iter_489.input)

    output = (local.curr_490.code == "."
      ? "${local.iter_489.output}${jsondecode(format("\"\\u%04x\"", local.iter_489.tape[local.iter_489.tape_ptr]))}"
      : local.iter_489.output)
    
    tape = (
      local.curr_490.code == "+"
        ? [for i, b in local.iter_489.tape : (i == local.iter_489.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_490.code == "-"
        ? [for i, b in local.iter_489.tape : (i == local.iter_489.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_490.code == ","
        ? [for i, b in local.iter_489.tape : (i == local.iter_489.tape_ptr ? local.ascii_lookup[local.curr_490.input] : b)]
        : local.iter_489.tape)

    tape_ptr = (
      local.curr_490.code == "<"
        ? local.iter_489.tape_ptr == 0 ? length(local.iter_489.tape) - 1 : local.iter_489.tape_ptr - 1 :
      local.curr_490.code == ">"
        ? local.iter_489.tape_ptr == length(local.iter_489.tape) - 1 ? 0 : local.iter_489.tape_ptr + 1
        : local.iter_489.tape_ptr)

    code_ptr = 1 + (
      local.curr_490.code == "["
        ? local.iter_489.tape[local.iter_489.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_489.code_ptr)] : local.iter_489.code_ptr :
      local.curr_490.code == "]"
        ? local.iter_489.tape[local.iter_489.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_489.code_ptr)] : local.iter_489.code_ptr
        : local.iter_489.code_ptr)

    steps_taken = 1 + local.iter_489.steps_taken
  }
}

locals {
  end_of_code_491 = try(local.iter_490.code_ptr >= length(var.code), true)

  curr_491 = local.end_of_code_491 ? null : {
    code = substr(var.code, local.iter_490.code_ptr, 1)
    input = substr(var.code, local.iter_490.code_ptr, 1) == "," ? substr(local.iter_490.input, 0, 1) : null
  }

  iter_491 = local.end_of_code_491 ? local.iter_490 : {
    input = (local.curr_491.code == ","
      ? substr(local.iter_490.input, 1, -1)
      : local.iter_490.input)

    output = (local.curr_491.code == "."
      ? "${local.iter_490.output}${jsondecode(format("\"\\u%04x\"", local.iter_490.tape[local.iter_490.tape_ptr]))}"
      : local.iter_490.output)
    
    tape = (
      local.curr_491.code == "+"
        ? [for i, b in local.iter_490.tape : (i == local.iter_490.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_491.code == "-"
        ? [for i, b in local.iter_490.tape : (i == local.iter_490.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_491.code == ","
        ? [for i, b in local.iter_490.tape : (i == local.iter_490.tape_ptr ? local.ascii_lookup[local.curr_491.input] : b)]
        : local.iter_490.tape)

    tape_ptr = (
      local.curr_491.code == "<"
        ? local.iter_490.tape_ptr == 0 ? length(local.iter_490.tape) - 1 : local.iter_490.tape_ptr - 1 :
      local.curr_491.code == ">"
        ? local.iter_490.tape_ptr == length(local.iter_490.tape) - 1 ? 0 : local.iter_490.tape_ptr + 1
        : local.iter_490.tape_ptr)

    code_ptr = 1 + (
      local.curr_491.code == "["
        ? local.iter_490.tape[local.iter_490.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_490.code_ptr)] : local.iter_490.code_ptr :
      local.curr_491.code == "]"
        ? local.iter_490.tape[local.iter_490.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_490.code_ptr)] : local.iter_490.code_ptr
        : local.iter_490.code_ptr)

    steps_taken = 1 + local.iter_490.steps_taken
  }
}

locals {
  end_of_code_492 = try(local.iter_491.code_ptr >= length(var.code), true)

  curr_492 = local.end_of_code_492 ? null : {
    code = substr(var.code, local.iter_491.code_ptr, 1)
    input = substr(var.code, local.iter_491.code_ptr, 1) == "," ? substr(local.iter_491.input, 0, 1) : null
  }

  iter_492 = local.end_of_code_492 ? local.iter_491 : {
    input = (local.curr_492.code == ","
      ? substr(local.iter_491.input, 1, -1)
      : local.iter_491.input)

    output = (local.curr_492.code == "."
      ? "${local.iter_491.output}${jsondecode(format("\"\\u%04x\"", local.iter_491.tape[local.iter_491.tape_ptr]))}"
      : local.iter_491.output)
    
    tape = (
      local.curr_492.code == "+"
        ? [for i, b in local.iter_491.tape : (i == local.iter_491.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_492.code == "-"
        ? [for i, b in local.iter_491.tape : (i == local.iter_491.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_492.code == ","
        ? [for i, b in local.iter_491.tape : (i == local.iter_491.tape_ptr ? local.ascii_lookup[local.curr_492.input] : b)]
        : local.iter_491.tape)

    tape_ptr = (
      local.curr_492.code == "<"
        ? local.iter_491.tape_ptr == 0 ? length(local.iter_491.tape) - 1 : local.iter_491.tape_ptr - 1 :
      local.curr_492.code == ">"
        ? local.iter_491.tape_ptr == length(local.iter_491.tape) - 1 ? 0 : local.iter_491.tape_ptr + 1
        : local.iter_491.tape_ptr)

    code_ptr = 1 + (
      local.curr_492.code == "["
        ? local.iter_491.tape[local.iter_491.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_491.code_ptr)] : local.iter_491.code_ptr :
      local.curr_492.code == "]"
        ? local.iter_491.tape[local.iter_491.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_491.code_ptr)] : local.iter_491.code_ptr
        : local.iter_491.code_ptr)

    steps_taken = 1 + local.iter_491.steps_taken
  }
}

locals {
  end_of_code_493 = try(local.iter_492.code_ptr >= length(var.code), true)

  curr_493 = local.end_of_code_493 ? null : {
    code = substr(var.code, local.iter_492.code_ptr, 1)
    input = substr(var.code, local.iter_492.code_ptr, 1) == "," ? substr(local.iter_492.input, 0, 1) : null
  }

  iter_493 = local.end_of_code_493 ? local.iter_492 : {
    input = (local.curr_493.code == ","
      ? substr(local.iter_492.input, 1, -1)
      : local.iter_492.input)

    output = (local.curr_493.code == "."
      ? "${local.iter_492.output}${jsondecode(format("\"\\u%04x\"", local.iter_492.tape[local.iter_492.tape_ptr]))}"
      : local.iter_492.output)
    
    tape = (
      local.curr_493.code == "+"
        ? [for i, b in local.iter_492.tape : (i == local.iter_492.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_493.code == "-"
        ? [for i, b in local.iter_492.tape : (i == local.iter_492.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_493.code == ","
        ? [for i, b in local.iter_492.tape : (i == local.iter_492.tape_ptr ? local.ascii_lookup[local.curr_493.input] : b)]
        : local.iter_492.tape)

    tape_ptr = (
      local.curr_493.code == "<"
        ? local.iter_492.tape_ptr == 0 ? length(local.iter_492.tape) - 1 : local.iter_492.tape_ptr - 1 :
      local.curr_493.code == ">"
        ? local.iter_492.tape_ptr == length(local.iter_492.tape) - 1 ? 0 : local.iter_492.tape_ptr + 1
        : local.iter_492.tape_ptr)

    code_ptr = 1 + (
      local.curr_493.code == "["
        ? local.iter_492.tape[local.iter_492.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_492.code_ptr)] : local.iter_492.code_ptr :
      local.curr_493.code == "]"
        ? local.iter_492.tape[local.iter_492.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_492.code_ptr)] : local.iter_492.code_ptr
        : local.iter_492.code_ptr)

    steps_taken = 1 + local.iter_492.steps_taken
  }
}

locals {
  end_of_code_494 = try(local.iter_493.code_ptr >= length(var.code), true)

  curr_494 = local.end_of_code_494 ? null : {
    code = substr(var.code, local.iter_493.code_ptr, 1)
    input = substr(var.code, local.iter_493.code_ptr, 1) == "," ? substr(local.iter_493.input, 0, 1) : null
  }

  iter_494 = local.end_of_code_494 ? local.iter_493 : {
    input = (local.curr_494.code == ","
      ? substr(local.iter_493.input, 1, -1)
      : local.iter_493.input)

    output = (local.curr_494.code == "."
      ? "${local.iter_493.output}${jsondecode(format("\"\\u%04x\"", local.iter_493.tape[local.iter_493.tape_ptr]))}"
      : local.iter_493.output)
    
    tape = (
      local.curr_494.code == "+"
        ? [for i, b in local.iter_493.tape : (i == local.iter_493.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_494.code == "-"
        ? [for i, b in local.iter_493.tape : (i == local.iter_493.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_494.code == ","
        ? [for i, b in local.iter_493.tape : (i == local.iter_493.tape_ptr ? local.ascii_lookup[local.curr_494.input] : b)]
        : local.iter_493.tape)

    tape_ptr = (
      local.curr_494.code == "<"
        ? local.iter_493.tape_ptr == 0 ? length(local.iter_493.tape) - 1 : local.iter_493.tape_ptr - 1 :
      local.curr_494.code == ">"
        ? local.iter_493.tape_ptr == length(local.iter_493.tape) - 1 ? 0 : local.iter_493.tape_ptr + 1
        : local.iter_493.tape_ptr)

    code_ptr = 1 + (
      local.curr_494.code == "["
        ? local.iter_493.tape[local.iter_493.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_493.code_ptr)] : local.iter_493.code_ptr :
      local.curr_494.code == "]"
        ? local.iter_493.tape[local.iter_493.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_493.code_ptr)] : local.iter_493.code_ptr
        : local.iter_493.code_ptr)

    steps_taken = 1 + local.iter_493.steps_taken
  }
}

locals {
  end_of_code_495 = try(local.iter_494.code_ptr >= length(var.code), true)

  curr_495 = local.end_of_code_495 ? null : {
    code = substr(var.code, local.iter_494.code_ptr, 1)
    input = substr(var.code, local.iter_494.code_ptr, 1) == "," ? substr(local.iter_494.input, 0, 1) : null
  }

  iter_495 = local.end_of_code_495 ? local.iter_494 : {
    input = (local.curr_495.code == ","
      ? substr(local.iter_494.input, 1, -1)
      : local.iter_494.input)

    output = (local.curr_495.code == "."
      ? "${local.iter_494.output}${jsondecode(format("\"\\u%04x\"", local.iter_494.tape[local.iter_494.tape_ptr]))}"
      : local.iter_494.output)
    
    tape = (
      local.curr_495.code == "+"
        ? [for i, b in local.iter_494.tape : (i == local.iter_494.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_495.code == "-"
        ? [for i, b in local.iter_494.tape : (i == local.iter_494.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_495.code == ","
        ? [for i, b in local.iter_494.tape : (i == local.iter_494.tape_ptr ? local.ascii_lookup[local.curr_495.input] : b)]
        : local.iter_494.tape)

    tape_ptr = (
      local.curr_495.code == "<"
        ? local.iter_494.tape_ptr == 0 ? length(local.iter_494.tape) - 1 : local.iter_494.tape_ptr - 1 :
      local.curr_495.code == ">"
        ? local.iter_494.tape_ptr == length(local.iter_494.tape) - 1 ? 0 : local.iter_494.tape_ptr + 1
        : local.iter_494.tape_ptr)

    code_ptr = 1 + (
      local.curr_495.code == "["
        ? local.iter_494.tape[local.iter_494.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_494.code_ptr)] : local.iter_494.code_ptr :
      local.curr_495.code == "]"
        ? local.iter_494.tape[local.iter_494.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_494.code_ptr)] : local.iter_494.code_ptr
        : local.iter_494.code_ptr)

    steps_taken = 1 + local.iter_494.steps_taken
  }
}

locals {
  end_of_code_496 = try(local.iter_495.code_ptr >= length(var.code), true)

  curr_496 = local.end_of_code_496 ? null : {
    code = substr(var.code, local.iter_495.code_ptr, 1)
    input = substr(var.code, local.iter_495.code_ptr, 1) == "," ? substr(local.iter_495.input, 0, 1) : null
  }

  iter_496 = local.end_of_code_496 ? local.iter_495 : {
    input = (local.curr_496.code == ","
      ? substr(local.iter_495.input, 1, -1)
      : local.iter_495.input)

    output = (local.curr_496.code == "."
      ? "${local.iter_495.output}${jsondecode(format("\"\\u%04x\"", local.iter_495.tape[local.iter_495.tape_ptr]))}"
      : local.iter_495.output)
    
    tape = (
      local.curr_496.code == "+"
        ? [for i, b in local.iter_495.tape : (i == local.iter_495.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_496.code == "-"
        ? [for i, b in local.iter_495.tape : (i == local.iter_495.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_496.code == ","
        ? [for i, b in local.iter_495.tape : (i == local.iter_495.tape_ptr ? local.ascii_lookup[local.curr_496.input] : b)]
        : local.iter_495.tape)

    tape_ptr = (
      local.curr_496.code == "<"
        ? local.iter_495.tape_ptr == 0 ? length(local.iter_495.tape) - 1 : local.iter_495.tape_ptr - 1 :
      local.curr_496.code == ">"
        ? local.iter_495.tape_ptr == length(local.iter_495.tape) - 1 ? 0 : local.iter_495.tape_ptr + 1
        : local.iter_495.tape_ptr)

    code_ptr = 1 + (
      local.curr_496.code == "["
        ? local.iter_495.tape[local.iter_495.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_495.code_ptr)] : local.iter_495.code_ptr :
      local.curr_496.code == "]"
        ? local.iter_495.tape[local.iter_495.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_495.code_ptr)] : local.iter_495.code_ptr
        : local.iter_495.code_ptr)

    steps_taken = 1 + local.iter_495.steps_taken
  }
}

locals {
  end_of_code_497 = try(local.iter_496.code_ptr >= length(var.code), true)

  curr_497 = local.end_of_code_497 ? null : {
    code = substr(var.code, local.iter_496.code_ptr, 1)
    input = substr(var.code, local.iter_496.code_ptr, 1) == "," ? substr(local.iter_496.input, 0, 1) : null
  }

  iter_497 = local.end_of_code_497 ? local.iter_496 : {
    input = (local.curr_497.code == ","
      ? substr(local.iter_496.input, 1, -1)
      : local.iter_496.input)

    output = (local.curr_497.code == "."
      ? "${local.iter_496.output}${jsondecode(format("\"\\u%04x\"", local.iter_496.tape[local.iter_496.tape_ptr]))}"
      : local.iter_496.output)
    
    tape = (
      local.curr_497.code == "+"
        ? [for i, b in local.iter_496.tape : (i == local.iter_496.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_497.code == "-"
        ? [for i, b in local.iter_496.tape : (i == local.iter_496.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_497.code == ","
        ? [for i, b in local.iter_496.tape : (i == local.iter_496.tape_ptr ? local.ascii_lookup[local.curr_497.input] : b)]
        : local.iter_496.tape)

    tape_ptr = (
      local.curr_497.code == "<"
        ? local.iter_496.tape_ptr == 0 ? length(local.iter_496.tape) - 1 : local.iter_496.tape_ptr - 1 :
      local.curr_497.code == ">"
        ? local.iter_496.tape_ptr == length(local.iter_496.tape) - 1 ? 0 : local.iter_496.tape_ptr + 1
        : local.iter_496.tape_ptr)

    code_ptr = 1 + (
      local.curr_497.code == "["
        ? local.iter_496.tape[local.iter_496.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_496.code_ptr)] : local.iter_496.code_ptr :
      local.curr_497.code == "]"
        ? local.iter_496.tape[local.iter_496.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_496.code_ptr)] : local.iter_496.code_ptr
        : local.iter_496.code_ptr)

    steps_taken = 1 + local.iter_496.steps_taken
  }
}

locals {
  end_of_code_498 = try(local.iter_497.code_ptr >= length(var.code), true)

  curr_498 = local.end_of_code_498 ? null : {
    code = substr(var.code, local.iter_497.code_ptr, 1)
    input = substr(var.code, local.iter_497.code_ptr, 1) == "," ? substr(local.iter_497.input, 0, 1) : null
  }

  iter_498 = local.end_of_code_498 ? local.iter_497 : {
    input = (local.curr_498.code == ","
      ? substr(local.iter_497.input, 1, -1)
      : local.iter_497.input)

    output = (local.curr_498.code == "."
      ? "${local.iter_497.output}${jsondecode(format("\"\\u%04x\"", local.iter_497.tape[local.iter_497.tape_ptr]))}"
      : local.iter_497.output)
    
    tape = (
      local.curr_498.code == "+"
        ? [for i, b in local.iter_497.tape : (i == local.iter_497.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_498.code == "-"
        ? [for i, b in local.iter_497.tape : (i == local.iter_497.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_498.code == ","
        ? [for i, b in local.iter_497.tape : (i == local.iter_497.tape_ptr ? local.ascii_lookup[local.curr_498.input] : b)]
        : local.iter_497.tape)

    tape_ptr = (
      local.curr_498.code == "<"
        ? local.iter_497.tape_ptr == 0 ? length(local.iter_497.tape) - 1 : local.iter_497.tape_ptr - 1 :
      local.curr_498.code == ">"
        ? local.iter_497.tape_ptr == length(local.iter_497.tape) - 1 ? 0 : local.iter_497.tape_ptr + 1
        : local.iter_497.tape_ptr)

    code_ptr = 1 + (
      local.curr_498.code == "["
        ? local.iter_497.tape[local.iter_497.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_497.code_ptr)] : local.iter_497.code_ptr :
      local.curr_498.code == "]"
        ? local.iter_497.tape[local.iter_497.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_497.code_ptr)] : local.iter_497.code_ptr
        : local.iter_497.code_ptr)

    steps_taken = 1 + local.iter_497.steps_taken
  }
}

locals {
  end_of_code_499 = try(local.iter_498.code_ptr >= length(var.code), true)

  curr_499 = local.end_of_code_499 ? null : {
    code = substr(var.code, local.iter_498.code_ptr, 1)
    input = substr(var.code, local.iter_498.code_ptr, 1) == "," ? substr(local.iter_498.input, 0, 1) : null
  }

  iter_499 = local.end_of_code_499 ? local.iter_498 : {
    input = (local.curr_499.code == ","
      ? substr(local.iter_498.input, 1, -1)
      : local.iter_498.input)

    output = (local.curr_499.code == "."
      ? "${local.iter_498.output}${jsondecode(format("\"\\u%04x\"", local.iter_498.tape[local.iter_498.tape_ptr]))}"
      : local.iter_498.output)
    
    tape = (
      local.curr_499.code == "+"
        ? [for i, b in local.iter_498.tape : (i == local.iter_498.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_499.code == "-"
        ? [for i, b in local.iter_498.tape : (i == local.iter_498.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_499.code == ","
        ? [for i, b in local.iter_498.tape : (i == local.iter_498.tape_ptr ? local.ascii_lookup[local.curr_499.input] : b)]
        : local.iter_498.tape)

    tape_ptr = (
      local.curr_499.code == "<"
        ? local.iter_498.tape_ptr == 0 ? length(local.iter_498.tape) - 1 : local.iter_498.tape_ptr - 1 :
      local.curr_499.code == ">"
        ? local.iter_498.tape_ptr == length(local.iter_498.tape) - 1 ? 0 : local.iter_498.tape_ptr + 1
        : local.iter_498.tape_ptr)

    code_ptr = 1 + (
      local.curr_499.code == "["
        ? local.iter_498.tape[local.iter_498.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_498.code_ptr)] : local.iter_498.code_ptr :
      local.curr_499.code == "]"
        ? local.iter_498.tape[local.iter_498.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_498.code_ptr)] : local.iter_498.code_ptr
        : local.iter_498.code_ptr)

    steps_taken = 1 + local.iter_498.steps_taken
  }
}

locals {
  end_of_code_500 = try(local.iter_499.code_ptr >= length(var.code), true)

  curr_500 = local.end_of_code_500 ? null : {
    code = substr(var.code, local.iter_499.code_ptr, 1)
    input = substr(var.code, local.iter_499.code_ptr, 1) == "," ? substr(local.iter_499.input, 0, 1) : null
  }

  iter_500 = local.end_of_code_500 ? local.iter_499 : {
    input = (local.curr_500.code == ","
      ? substr(local.iter_499.input, 1, -1)
      : local.iter_499.input)

    output = (local.curr_500.code == "."
      ? "${local.iter_499.output}${jsondecode(format("\"\\u%04x\"", local.iter_499.tape[local.iter_499.tape_ptr]))}"
      : local.iter_499.output)
    
    tape = (
      local.curr_500.code == "+"
        ? [for i, b in local.iter_499.tape : (i == local.iter_499.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_500.code == "-"
        ? [for i, b in local.iter_499.tape : (i == local.iter_499.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_500.code == ","
        ? [for i, b in local.iter_499.tape : (i == local.iter_499.tape_ptr ? local.ascii_lookup[local.curr_500.input] : b)]
        : local.iter_499.tape)

    tape_ptr = (
      local.curr_500.code == "<"
        ? local.iter_499.tape_ptr == 0 ? length(local.iter_499.tape) - 1 : local.iter_499.tape_ptr - 1 :
      local.curr_500.code == ">"
        ? local.iter_499.tape_ptr == length(local.iter_499.tape) - 1 ? 0 : local.iter_499.tape_ptr + 1
        : local.iter_499.tape_ptr)

    code_ptr = 1 + (
      local.curr_500.code == "["
        ? local.iter_499.tape[local.iter_499.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_499.code_ptr)] : local.iter_499.code_ptr :
      local.curr_500.code == "]"
        ? local.iter_499.tape[local.iter_499.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_499.code_ptr)] : local.iter_499.code_ptr
        : local.iter_499.code_ptr)

    steps_taken = 1 + local.iter_499.steps_taken
  }
}

locals {
  end_of_code_501 = try(local.iter_500.code_ptr >= length(var.code), true)

  curr_501 = local.end_of_code_501 ? null : {
    code = substr(var.code, local.iter_500.code_ptr, 1)
    input = substr(var.code, local.iter_500.code_ptr, 1) == "," ? substr(local.iter_500.input, 0, 1) : null
  }

  iter_501 = local.end_of_code_501 ? local.iter_500 : {
    input = (local.curr_501.code == ","
      ? substr(local.iter_500.input, 1, -1)
      : local.iter_500.input)

    output = (local.curr_501.code == "."
      ? "${local.iter_500.output}${jsondecode(format("\"\\u%04x\"", local.iter_500.tape[local.iter_500.tape_ptr]))}"
      : local.iter_500.output)
    
    tape = (
      local.curr_501.code == "+"
        ? [for i, b in local.iter_500.tape : (i == local.iter_500.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_501.code == "-"
        ? [for i, b in local.iter_500.tape : (i == local.iter_500.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_501.code == ","
        ? [for i, b in local.iter_500.tape : (i == local.iter_500.tape_ptr ? local.ascii_lookup[local.curr_501.input] : b)]
        : local.iter_500.tape)

    tape_ptr = (
      local.curr_501.code == "<"
        ? local.iter_500.tape_ptr == 0 ? length(local.iter_500.tape) - 1 : local.iter_500.tape_ptr - 1 :
      local.curr_501.code == ">"
        ? local.iter_500.tape_ptr == length(local.iter_500.tape) - 1 ? 0 : local.iter_500.tape_ptr + 1
        : local.iter_500.tape_ptr)

    code_ptr = 1 + (
      local.curr_501.code == "["
        ? local.iter_500.tape[local.iter_500.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_500.code_ptr)] : local.iter_500.code_ptr :
      local.curr_501.code == "]"
        ? local.iter_500.tape[local.iter_500.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_500.code_ptr)] : local.iter_500.code_ptr
        : local.iter_500.code_ptr)

    steps_taken = 1 + local.iter_500.steps_taken
  }
}

locals {
  end_of_code_502 = try(local.iter_501.code_ptr >= length(var.code), true)

  curr_502 = local.end_of_code_502 ? null : {
    code = substr(var.code, local.iter_501.code_ptr, 1)
    input = substr(var.code, local.iter_501.code_ptr, 1) == "," ? substr(local.iter_501.input, 0, 1) : null
  }

  iter_502 = local.end_of_code_502 ? local.iter_501 : {
    input = (local.curr_502.code == ","
      ? substr(local.iter_501.input, 1, -1)
      : local.iter_501.input)

    output = (local.curr_502.code == "."
      ? "${local.iter_501.output}${jsondecode(format("\"\\u%04x\"", local.iter_501.tape[local.iter_501.tape_ptr]))}"
      : local.iter_501.output)
    
    tape = (
      local.curr_502.code == "+"
        ? [for i, b in local.iter_501.tape : (i == local.iter_501.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_502.code == "-"
        ? [for i, b in local.iter_501.tape : (i == local.iter_501.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_502.code == ","
        ? [for i, b in local.iter_501.tape : (i == local.iter_501.tape_ptr ? local.ascii_lookup[local.curr_502.input] : b)]
        : local.iter_501.tape)

    tape_ptr = (
      local.curr_502.code == "<"
        ? local.iter_501.tape_ptr == 0 ? length(local.iter_501.tape) - 1 : local.iter_501.tape_ptr - 1 :
      local.curr_502.code == ">"
        ? local.iter_501.tape_ptr == length(local.iter_501.tape) - 1 ? 0 : local.iter_501.tape_ptr + 1
        : local.iter_501.tape_ptr)

    code_ptr = 1 + (
      local.curr_502.code == "["
        ? local.iter_501.tape[local.iter_501.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_501.code_ptr)] : local.iter_501.code_ptr :
      local.curr_502.code == "]"
        ? local.iter_501.tape[local.iter_501.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_501.code_ptr)] : local.iter_501.code_ptr
        : local.iter_501.code_ptr)

    steps_taken = 1 + local.iter_501.steps_taken
  }
}

locals {
  end_of_code_503 = try(local.iter_502.code_ptr >= length(var.code), true)

  curr_503 = local.end_of_code_503 ? null : {
    code = substr(var.code, local.iter_502.code_ptr, 1)
    input = substr(var.code, local.iter_502.code_ptr, 1) == "," ? substr(local.iter_502.input, 0, 1) : null
  }

  iter_503 = local.end_of_code_503 ? local.iter_502 : {
    input = (local.curr_503.code == ","
      ? substr(local.iter_502.input, 1, -1)
      : local.iter_502.input)

    output = (local.curr_503.code == "."
      ? "${local.iter_502.output}${jsondecode(format("\"\\u%04x\"", local.iter_502.tape[local.iter_502.tape_ptr]))}"
      : local.iter_502.output)
    
    tape = (
      local.curr_503.code == "+"
        ? [for i, b in local.iter_502.tape : (i == local.iter_502.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_503.code == "-"
        ? [for i, b in local.iter_502.tape : (i == local.iter_502.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_503.code == ","
        ? [for i, b in local.iter_502.tape : (i == local.iter_502.tape_ptr ? local.ascii_lookup[local.curr_503.input] : b)]
        : local.iter_502.tape)

    tape_ptr = (
      local.curr_503.code == "<"
        ? local.iter_502.tape_ptr == 0 ? length(local.iter_502.tape) - 1 : local.iter_502.tape_ptr - 1 :
      local.curr_503.code == ">"
        ? local.iter_502.tape_ptr == length(local.iter_502.tape) - 1 ? 0 : local.iter_502.tape_ptr + 1
        : local.iter_502.tape_ptr)

    code_ptr = 1 + (
      local.curr_503.code == "["
        ? local.iter_502.tape[local.iter_502.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_502.code_ptr)] : local.iter_502.code_ptr :
      local.curr_503.code == "]"
        ? local.iter_502.tape[local.iter_502.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_502.code_ptr)] : local.iter_502.code_ptr
        : local.iter_502.code_ptr)

    steps_taken = 1 + local.iter_502.steps_taken
  }
}

locals {
  end_of_code_504 = try(local.iter_503.code_ptr >= length(var.code), true)

  curr_504 = local.end_of_code_504 ? null : {
    code = substr(var.code, local.iter_503.code_ptr, 1)
    input = substr(var.code, local.iter_503.code_ptr, 1) == "," ? substr(local.iter_503.input, 0, 1) : null
  }

  iter_504 = local.end_of_code_504 ? local.iter_503 : {
    input = (local.curr_504.code == ","
      ? substr(local.iter_503.input, 1, -1)
      : local.iter_503.input)

    output = (local.curr_504.code == "."
      ? "${local.iter_503.output}${jsondecode(format("\"\\u%04x\"", local.iter_503.tape[local.iter_503.tape_ptr]))}"
      : local.iter_503.output)
    
    tape = (
      local.curr_504.code == "+"
        ? [for i, b in local.iter_503.tape : (i == local.iter_503.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_504.code == "-"
        ? [for i, b in local.iter_503.tape : (i == local.iter_503.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_504.code == ","
        ? [for i, b in local.iter_503.tape : (i == local.iter_503.tape_ptr ? local.ascii_lookup[local.curr_504.input] : b)]
        : local.iter_503.tape)

    tape_ptr = (
      local.curr_504.code == "<"
        ? local.iter_503.tape_ptr == 0 ? length(local.iter_503.tape) - 1 : local.iter_503.tape_ptr - 1 :
      local.curr_504.code == ">"
        ? local.iter_503.tape_ptr == length(local.iter_503.tape) - 1 ? 0 : local.iter_503.tape_ptr + 1
        : local.iter_503.tape_ptr)

    code_ptr = 1 + (
      local.curr_504.code == "["
        ? local.iter_503.tape[local.iter_503.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_503.code_ptr)] : local.iter_503.code_ptr :
      local.curr_504.code == "]"
        ? local.iter_503.tape[local.iter_503.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_503.code_ptr)] : local.iter_503.code_ptr
        : local.iter_503.code_ptr)

    steps_taken = 1 + local.iter_503.steps_taken
  }
}

locals {
  end_of_code_505 = try(local.iter_504.code_ptr >= length(var.code), true)

  curr_505 = local.end_of_code_505 ? null : {
    code = substr(var.code, local.iter_504.code_ptr, 1)
    input = substr(var.code, local.iter_504.code_ptr, 1) == "," ? substr(local.iter_504.input, 0, 1) : null
  }

  iter_505 = local.end_of_code_505 ? local.iter_504 : {
    input = (local.curr_505.code == ","
      ? substr(local.iter_504.input, 1, -1)
      : local.iter_504.input)

    output = (local.curr_505.code == "."
      ? "${local.iter_504.output}${jsondecode(format("\"\\u%04x\"", local.iter_504.tape[local.iter_504.tape_ptr]))}"
      : local.iter_504.output)
    
    tape = (
      local.curr_505.code == "+"
        ? [for i, b in local.iter_504.tape : (i == local.iter_504.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_505.code == "-"
        ? [for i, b in local.iter_504.tape : (i == local.iter_504.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_505.code == ","
        ? [for i, b in local.iter_504.tape : (i == local.iter_504.tape_ptr ? local.ascii_lookup[local.curr_505.input] : b)]
        : local.iter_504.tape)

    tape_ptr = (
      local.curr_505.code == "<"
        ? local.iter_504.tape_ptr == 0 ? length(local.iter_504.tape) - 1 : local.iter_504.tape_ptr - 1 :
      local.curr_505.code == ">"
        ? local.iter_504.tape_ptr == length(local.iter_504.tape) - 1 ? 0 : local.iter_504.tape_ptr + 1
        : local.iter_504.tape_ptr)

    code_ptr = 1 + (
      local.curr_505.code == "["
        ? local.iter_504.tape[local.iter_504.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_504.code_ptr)] : local.iter_504.code_ptr :
      local.curr_505.code == "]"
        ? local.iter_504.tape[local.iter_504.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_504.code_ptr)] : local.iter_504.code_ptr
        : local.iter_504.code_ptr)

    steps_taken = 1 + local.iter_504.steps_taken
  }
}

locals {
  end_of_code_506 = try(local.iter_505.code_ptr >= length(var.code), true)

  curr_506 = local.end_of_code_506 ? null : {
    code = substr(var.code, local.iter_505.code_ptr, 1)
    input = substr(var.code, local.iter_505.code_ptr, 1) == "," ? substr(local.iter_505.input, 0, 1) : null
  }

  iter_506 = local.end_of_code_506 ? local.iter_505 : {
    input = (local.curr_506.code == ","
      ? substr(local.iter_505.input, 1, -1)
      : local.iter_505.input)

    output = (local.curr_506.code == "."
      ? "${local.iter_505.output}${jsondecode(format("\"\\u%04x\"", local.iter_505.tape[local.iter_505.tape_ptr]))}"
      : local.iter_505.output)
    
    tape = (
      local.curr_506.code == "+"
        ? [for i, b in local.iter_505.tape : (i == local.iter_505.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_506.code == "-"
        ? [for i, b in local.iter_505.tape : (i == local.iter_505.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_506.code == ","
        ? [for i, b in local.iter_505.tape : (i == local.iter_505.tape_ptr ? local.ascii_lookup[local.curr_506.input] : b)]
        : local.iter_505.tape)

    tape_ptr = (
      local.curr_506.code == "<"
        ? local.iter_505.tape_ptr == 0 ? length(local.iter_505.tape) - 1 : local.iter_505.tape_ptr - 1 :
      local.curr_506.code == ">"
        ? local.iter_505.tape_ptr == length(local.iter_505.tape) - 1 ? 0 : local.iter_505.tape_ptr + 1
        : local.iter_505.tape_ptr)

    code_ptr = 1 + (
      local.curr_506.code == "["
        ? local.iter_505.tape[local.iter_505.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_505.code_ptr)] : local.iter_505.code_ptr :
      local.curr_506.code == "]"
        ? local.iter_505.tape[local.iter_505.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_505.code_ptr)] : local.iter_505.code_ptr
        : local.iter_505.code_ptr)

    steps_taken = 1 + local.iter_505.steps_taken
  }
}

locals {
  end_of_code_507 = try(local.iter_506.code_ptr >= length(var.code), true)

  curr_507 = local.end_of_code_507 ? null : {
    code = substr(var.code, local.iter_506.code_ptr, 1)
    input = substr(var.code, local.iter_506.code_ptr, 1) == "," ? substr(local.iter_506.input, 0, 1) : null
  }

  iter_507 = local.end_of_code_507 ? local.iter_506 : {
    input = (local.curr_507.code == ","
      ? substr(local.iter_506.input, 1, -1)
      : local.iter_506.input)

    output = (local.curr_507.code == "."
      ? "${local.iter_506.output}${jsondecode(format("\"\\u%04x\"", local.iter_506.tape[local.iter_506.tape_ptr]))}"
      : local.iter_506.output)
    
    tape = (
      local.curr_507.code == "+"
        ? [for i, b in local.iter_506.tape : (i == local.iter_506.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_507.code == "-"
        ? [for i, b in local.iter_506.tape : (i == local.iter_506.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_507.code == ","
        ? [for i, b in local.iter_506.tape : (i == local.iter_506.tape_ptr ? local.ascii_lookup[local.curr_507.input] : b)]
        : local.iter_506.tape)

    tape_ptr = (
      local.curr_507.code == "<"
        ? local.iter_506.tape_ptr == 0 ? length(local.iter_506.tape) - 1 : local.iter_506.tape_ptr - 1 :
      local.curr_507.code == ">"
        ? local.iter_506.tape_ptr == length(local.iter_506.tape) - 1 ? 0 : local.iter_506.tape_ptr + 1
        : local.iter_506.tape_ptr)

    code_ptr = 1 + (
      local.curr_507.code == "["
        ? local.iter_506.tape[local.iter_506.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_506.code_ptr)] : local.iter_506.code_ptr :
      local.curr_507.code == "]"
        ? local.iter_506.tape[local.iter_506.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_506.code_ptr)] : local.iter_506.code_ptr
        : local.iter_506.code_ptr)

    steps_taken = 1 + local.iter_506.steps_taken
  }
}

locals {
  end_of_code_508 = try(local.iter_507.code_ptr >= length(var.code), true)

  curr_508 = local.end_of_code_508 ? null : {
    code = substr(var.code, local.iter_507.code_ptr, 1)
    input = substr(var.code, local.iter_507.code_ptr, 1) == "," ? substr(local.iter_507.input, 0, 1) : null
  }

  iter_508 = local.end_of_code_508 ? local.iter_507 : {
    input = (local.curr_508.code == ","
      ? substr(local.iter_507.input, 1, -1)
      : local.iter_507.input)

    output = (local.curr_508.code == "."
      ? "${local.iter_507.output}${jsondecode(format("\"\\u%04x\"", local.iter_507.tape[local.iter_507.tape_ptr]))}"
      : local.iter_507.output)
    
    tape = (
      local.curr_508.code == "+"
        ? [for i, b in local.iter_507.tape : (i == local.iter_507.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_508.code == "-"
        ? [for i, b in local.iter_507.tape : (i == local.iter_507.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_508.code == ","
        ? [for i, b in local.iter_507.tape : (i == local.iter_507.tape_ptr ? local.ascii_lookup[local.curr_508.input] : b)]
        : local.iter_507.tape)

    tape_ptr = (
      local.curr_508.code == "<"
        ? local.iter_507.tape_ptr == 0 ? length(local.iter_507.tape) - 1 : local.iter_507.tape_ptr - 1 :
      local.curr_508.code == ">"
        ? local.iter_507.tape_ptr == length(local.iter_507.tape) - 1 ? 0 : local.iter_507.tape_ptr + 1
        : local.iter_507.tape_ptr)

    code_ptr = 1 + (
      local.curr_508.code == "["
        ? local.iter_507.tape[local.iter_507.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_507.code_ptr)] : local.iter_507.code_ptr :
      local.curr_508.code == "]"
        ? local.iter_507.tape[local.iter_507.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_507.code_ptr)] : local.iter_507.code_ptr
        : local.iter_507.code_ptr)

    steps_taken = 1 + local.iter_507.steps_taken
  }
}

locals {
  end_of_code_509 = try(local.iter_508.code_ptr >= length(var.code), true)

  curr_509 = local.end_of_code_509 ? null : {
    code = substr(var.code, local.iter_508.code_ptr, 1)
    input = substr(var.code, local.iter_508.code_ptr, 1) == "," ? substr(local.iter_508.input, 0, 1) : null
  }

  iter_509 = local.end_of_code_509 ? local.iter_508 : {
    input = (local.curr_509.code == ","
      ? substr(local.iter_508.input, 1, -1)
      : local.iter_508.input)

    output = (local.curr_509.code == "."
      ? "${local.iter_508.output}${jsondecode(format("\"\\u%04x\"", local.iter_508.tape[local.iter_508.tape_ptr]))}"
      : local.iter_508.output)
    
    tape = (
      local.curr_509.code == "+"
        ? [for i, b in local.iter_508.tape : (i == local.iter_508.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_509.code == "-"
        ? [for i, b in local.iter_508.tape : (i == local.iter_508.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_509.code == ","
        ? [for i, b in local.iter_508.tape : (i == local.iter_508.tape_ptr ? local.ascii_lookup[local.curr_509.input] : b)]
        : local.iter_508.tape)

    tape_ptr = (
      local.curr_509.code == "<"
        ? local.iter_508.tape_ptr == 0 ? length(local.iter_508.tape) - 1 : local.iter_508.tape_ptr - 1 :
      local.curr_509.code == ">"
        ? local.iter_508.tape_ptr == length(local.iter_508.tape) - 1 ? 0 : local.iter_508.tape_ptr + 1
        : local.iter_508.tape_ptr)

    code_ptr = 1 + (
      local.curr_509.code == "["
        ? local.iter_508.tape[local.iter_508.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_508.code_ptr)] : local.iter_508.code_ptr :
      local.curr_509.code == "]"
        ? local.iter_508.tape[local.iter_508.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_508.code_ptr)] : local.iter_508.code_ptr
        : local.iter_508.code_ptr)

    steps_taken = 1 + local.iter_508.steps_taken
  }
}

locals {
  end_of_code_510 = try(local.iter_509.code_ptr >= length(var.code), true)

  curr_510 = local.end_of_code_510 ? null : {
    code = substr(var.code, local.iter_509.code_ptr, 1)
    input = substr(var.code, local.iter_509.code_ptr, 1) == "," ? substr(local.iter_509.input, 0, 1) : null
  }

  iter_510 = local.end_of_code_510 ? local.iter_509 : {
    input = (local.curr_510.code == ","
      ? substr(local.iter_509.input, 1, -1)
      : local.iter_509.input)

    output = (local.curr_510.code == "."
      ? "${local.iter_509.output}${jsondecode(format("\"\\u%04x\"", local.iter_509.tape[local.iter_509.tape_ptr]))}"
      : local.iter_509.output)
    
    tape = (
      local.curr_510.code == "+"
        ? [for i, b in local.iter_509.tape : (i == local.iter_509.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_510.code == "-"
        ? [for i, b in local.iter_509.tape : (i == local.iter_509.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_510.code == ","
        ? [for i, b in local.iter_509.tape : (i == local.iter_509.tape_ptr ? local.ascii_lookup[local.curr_510.input] : b)]
        : local.iter_509.tape)

    tape_ptr = (
      local.curr_510.code == "<"
        ? local.iter_509.tape_ptr == 0 ? length(local.iter_509.tape) - 1 : local.iter_509.tape_ptr - 1 :
      local.curr_510.code == ">"
        ? local.iter_509.tape_ptr == length(local.iter_509.tape) - 1 ? 0 : local.iter_509.tape_ptr + 1
        : local.iter_509.tape_ptr)

    code_ptr = 1 + (
      local.curr_510.code == "["
        ? local.iter_509.tape[local.iter_509.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_509.code_ptr)] : local.iter_509.code_ptr :
      local.curr_510.code == "]"
        ? local.iter_509.tape[local.iter_509.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_509.code_ptr)] : local.iter_509.code_ptr
        : local.iter_509.code_ptr)

    steps_taken = 1 + local.iter_509.steps_taken
  }
}

locals {
  end_of_code_511 = try(local.iter_510.code_ptr >= length(var.code), true)

  curr_511 = local.end_of_code_511 ? null : {
    code = substr(var.code, local.iter_510.code_ptr, 1)
    input = substr(var.code, local.iter_510.code_ptr, 1) == "," ? substr(local.iter_510.input, 0, 1) : null
  }

  iter_511 = local.end_of_code_511 ? local.iter_510 : {
    input = (local.curr_511.code == ","
      ? substr(local.iter_510.input, 1, -1)
      : local.iter_510.input)

    output = (local.curr_511.code == "."
      ? "${local.iter_510.output}${jsondecode(format("\"\\u%04x\"", local.iter_510.tape[local.iter_510.tape_ptr]))}"
      : local.iter_510.output)
    
    tape = (
      local.curr_511.code == "+"
        ? [for i, b in local.iter_510.tape : (i == local.iter_510.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_511.code == "-"
        ? [for i, b in local.iter_510.tape : (i == local.iter_510.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_511.code == ","
        ? [for i, b in local.iter_510.tape : (i == local.iter_510.tape_ptr ? local.ascii_lookup[local.curr_511.input] : b)]
        : local.iter_510.tape)

    tape_ptr = (
      local.curr_511.code == "<"
        ? local.iter_510.tape_ptr == 0 ? length(local.iter_510.tape) - 1 : local.iter_510.tape_ptr - 1 :
      local.curr_511.code == ">"
        ? local.iter_510.tape_ptr == length(local.iter_510.tape) - 1 ? 0 : local.iter_510.tape_ptr + 1
        : local.iter_510.tape_ptr)

    code_ptr = 1 + (
      local.curr_511.code == "["
        ? local.iter_510.tape[local.iter_510.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_510.code_ptr)] : local.iter_510.code_ptr :
      local.curr_511.code == "]"
        ? local.iter_510.tape[local.iter_510.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_510.code_ptr)] : local.iter_510.code_ptr
        : local.iter_510.code_ptr)

    steps_taken = 1 + local.iter_510.steps_taken
  }
}

locals {
  end_of_code_512 = try(local.iter_511.code_ptr >= length(var.code), true)

  curr_512 = local.end_of_code_512 ? null : {
    code = substr(var.code, local.iter_511.code_ptr, 1)
    input = substr(var.code, local.iter_511.code_ptr, 1) == "," ? substr(local.iter_511.input, 0, 1) : null
  }

  iter_512 = local.end_of_code_512 ? local.iter_511 : {
    input = (local.curr_512.code == ","
      ? substr(local.iter_511.input, 1, -1)
      : local.iter_511.input)

    output = (local.curr_512.code == "."
      ? "${local.iter_511.output}${jsondecode(format("\"\\u%04x\"", local.iter_511.tape[local.iter_511.tape_ptr]))}"
      : local.iter_511.output)
    
    tape = (
      local.curr_512.code == "+"
        ? [for i, b in local.iter_511.tape : (i == local.iter_511.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_512.code == "-"
        ? [for i, b in local.iter_511.tape : (i == local.iter_511.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_512.code == ","
        ? [for i, b in local.iter_511.tape : (i == local.iter_511.tape_ptr ? local.ascii_lookup[local.curr_512.input] : b)]
        : local.iter_511.tape)

    tape_ptr = (
      local.curr_512.code == "<"
        ? local.iter_511.tape_ptr == 0 ? length(local.iter_511.tape) - 1 : local.iter_511.tape_ptr - 1 :
      local.curr_512.code == ">"
        ? local.iter_511.tape_ptr == length(local.iter_511.tape) - 1 ? 0 : local.iter_511.tape_ptr + 1
        : local.iter_511.tape_ptr)

    code_ptr = 1 + (
      local.curr_512.code == "["
        ? local.iter_511.tape[local.iter_511.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_511.code_ptr)] : local.iter_511.code_ptr :
      local.curr_512.code == "]"
        ? local.iter_511.tape[local.iter_511.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_511.code_ptr)] : local.iter_511.code_ptr
        : local.iter_511.code_ptr)

    steps_taken = 1 + local.iter_511.steps_taken
  }
}

locals {
  end_of_code_513 = try(local.iter_512.code_ptr >= length(var.code), true)

  curr_513 = local.end_of_code_513 ? null : {
    code = substr(var.code, local.iter_512.code_ptr, 1)
    input = substr(var.code, local.iter_512.code_ptr, 1) == "," ? substr(local.iter_512.input, 0, 1) : null
  }

  iter_513 = local.end_of_code_513 ? local.iter_512 : {
    input = (local.curr_513.code == ","
      ? substr(local.iter_512.input, 1, -1)
      : local.iter_512.input)

    output = (local.curr_513.code == "."
      ? "${local.iter_512.output}${jsondecode(format("\"\\u%04x\"", local.iter_512.tape[local.iter_512.tape_ptr]))}"
      : local.iter_512.output)
    
    tape = (
      local.curr_513.code == "+"
        ? [for i, b in local.iter_512.tape : (i == local.iter_512.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_513.code == "-"
        ? [for i, b in local.iter_512.tape : (i == local.iter_512.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_513.code == ","
        ? [for i, b in local.iter_512.tape : (i == local.iter_512.tape_ptr ? local.ascii_lookup[local.curr_513.input] : b)]
        : local.iter_512.tape)

    tape_ptr = (
      local.curr_513.code == "<"
        ? local.iter_512.tape_ptr == 0 ? length(local.iter_512.tape) - 1 : local.iter_512.tape_ptr - 1 :
      local.curr_513.code == ">"
        ? local.iter_512.tape_ptr == length(local.iter_512.tape) - 1 ? 0 : local.iter_512.tape_ptr + 1
        : local.iter_512.tape_ptr)

    code_ptr = 1 + (
      local.curr_513.code == "["
        ? local.iter_512.tape[local.iter_512.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_512.code_ptr)] : local.iter_512.code_ptr :
      local.curr_513.code == "]"
        ? local.iter_512.tape[local.iter_512.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_512.code_ptr)] : local.iter_512.code_ptr
        : local.iter_512.code_ptr)

    steps_taken = 1 + local.iter_512.steps_taken
  }
}

locals {
  end_of_code_514 = try(local.iter_513.code_ptr >= length(var.code), true)

  curr_514 = local.end_of_code_514 ? null : {
    code = substr(var.code, local.iter_513.code_ptr, 1)
    input = substr(var.code, local.iter_513.code_ptr, 1) == "," ? substr(local.iter_513.input, 0, 1) : null
  }

  iter_514 = local.end_of_code_514 ? local.iter_513 : {
    input = (local.curr_514.code == ","
      ? substr(local.iter_513.input, 1, -1)
      : local.iter_513.input)

    output = (local.curr_514.code == "."
      ? "${local.iter_513.output}${jsondecode(format("\"\\u%04x\"", local.iter_513.tape[local.iter_513.tape_ptr]))}"
      : local.iter_513.output)
    
    tape = (
      local.curr_514.code == "+"
        ? [for i, b in local.iter_513.tape : (i == local.iter_513.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_514.code == "-"
        ? [for i, b in local.iter_513.tape : (i == local.iter_513.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_514.code == ","
        ? [for i, b in local.iter_513.tape : (i == local.iter_513.tape_ptr ? local.ascii_lookup[local.curr_514.input] : b)]
        : local.iter_513.tape)

    tape_ptr = (
      local.curr_514.code == "<"
        ? local.iter_513.tape_ptr == 0 ? length(local.iter_513.tape) - 1 : local.iter_513.tape_ptr - 1 :
      local.curr_514.code == ">"
        ? local.iter_513.tape_ptr == length(local.iter_513.tape) - 1 ? 0 : local.iter_513.tape_ptr + 1
        : local.iter_513.tape_ptr)

    code_ptr = 1 + (
      local.curr_514.code == "["
        ? local.iter_513.tape[local.iter_513.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_513.code_ptr)] : local.iter_513.code_ptr :
      local.curr_514.code == "]"
        ? local.iter_513.tape[local.iter_513.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_513.code_ptr)] : local.iter_513.code_ptr
        : local.iter_513.code_ptr)

    steps_taken = 1 + local.iter_513.steps_taken
  }
}

locals {
  end_of_code_515 = try(local.iter_514.code_ptr >= length(var.code), true)

  curr_515 = local.end_of_code_515 ? null : {
    code = substr(var.code, local.iter_514.code_ptr, 1)
    input = substr(var.code, local.iter_514.code_ptr, 1) == "," ? substr(local.iter_514.input, 0, 1) : null
  }

  iter_515 = local.end_of_code_515 ? local.iter_514 : {
    input = (local.curr_515.code == ","
      ? substr(local.iter_514.input, 1, -1)
      : local.iter_514.input)

    output = (local.curr_515.code == "."
      ? "${local.iter_514.output}${jsondecode(format("\"\\u%04x\"", local.iter_514.tape[local.iter_514.tape_ptr]))}"
      : local.iter_514.output)
    
    tape = (
      local.curr_515.code == "+"
        ? [for i, b in local.iter_514.tape : (i == local.iter_514.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_515.code == "-"
        ? [for i, b in local.iter_514.tape : (i == local.iter_514.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_515.code == ","
        ? [for i, b in local.iter_514.tape : (i == local.iter_514.tape_ptr ? local.ascii_lookup[local.curr_515.input] : b)]
        : local.iter_514.tape)

    tape_ptr = (
      local.curr_515.code == "<"
        ? local.iter_514.tape_ptr == 0 ? length(local.iter_514.tape) - 1 : local.iter_514.tape_ptr - 1 :
      local.curr_515.code == ">"
        ? local.iter_514.tape_ptr == length(local.iter_514.tape) - 1 ? 0 : local.iter_514.tape_ptr + 1
        : local.iter_514.tape_ptr)

    code_ptr = 1 + (
      local.curr_515.code == "["
        ? local.iter_514.tape[local.iter_514.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_514.code_ptr)] : local.iter_514.code_ptr :
      local.curr_515.code == "]"
        ? local.iter_514.tape[local.iter_514.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_514.code_ptr)] : local.iter_514.code_ptr
        : local.iter_514.code_ptr)

    steps_taken = 1 + local.iter_514.steps_taken
  }
}

locals {
  end_of_code_516 = try(local.iter_515.code_ptr >= length(var.code), true)

  curr_516 = local.end_of_code_516 ? null : {
    code = substr(var.code, local.iter_515.code_ptr, 1)
    input = substr(var.code, local.iter_515.code_ptr, 1) == "," ? substr(local.iter_515.input, 0, 1) : null
  }

  iter_516 = local.end_of_code_516 ? local.iter_515 : {
    input = (local.curr_516.code == ","
      ? substr(local.iter_515.input, 1, -1)
      : local.iter_515.input)

    output = (local.curr_516.code == "."
      ? "${local.iter_515.output}${jsondecode(format("\"\\u%04x\"", local.iter_515.tape[local.iter_515.tape_ptr]))}"
      : local.iter_515.output)
    
    tape = (
      local.curr_516.code == "+"
        ? [for i, b in local.iter_515.tape : (i == local.iter_515.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_516.code == "-"
        ? [for i, b in local.iter_515.tape : (i == local.iter_515.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_516.code == ","
        ? [for i, b in local.iter_515.tape : (i == local.iter_515.tape_ptr ? local.ascii_lookup[local.curr_516.input] : b)]
        : local.iter_515.tape)

    tape_ptr = (
      local.curr_516.code == "<"
        ? local.iter_515.tape_ptr == 0 ? length(local.iter_515.tape) - 1 : local.iter_515.tape_ptr - 1 :
      local.curr_516.code == ">"
        ? local.iter_515.tape_ptr == length(local.iter_515.tape) - 1 ? 0 : local.iter_515.tape_ptr + 1
        : local.iter_515.tape_ptr)

    code_ptr = 1 + (
      local.curr_516.code == "["
        ? local.iter_515.tape[local.iter_515.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_515.code_ptr)] : local.iter_515.code_ptr :
      local.curr_516.code == "]"
        ? local.iter_515.tape[local.iter_515.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_515.code_ptr)] : local.iter_515.code_ptr
        : local.iter_515.code_ptr)

    steps_taken = 1 + local.iter_515.steps_taken
  }
}

locals {
  end_of_code_517 = try(local.iter_516.code_ptr >= length(var.code), true)

  curr_517 = local.end_of_code_517 ? null : {
    code = substr(var.code, local.iter_516.code_ptr, 1)
    input = substr(var.code, local.iter_516.code_ptr, 1) == "," ? substr(local.iter_516.input, 0, 1) : null
  }

  iter_517 = local.end_of_code_517 ? local.iter_516 : {
    input = (local.curr_517.code == ","
      ? substr(local.iter_516.input, 1, -1)
      : local.iter_516.input)

    output = (local.curr_517.code == "."
      ? "${local.iter_516.output}${jsondecode(format("\"\\u%04x\"", local.iter_516.tape[local.iter_516.tape_ptr]))}"
      : local.iter_516.output)
    
    tape = (
      local.curr_517.code == "+"
        ? [for i, b in local.iter_516.tape : (i == local.iter_516.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_517.code == "-"
        ? [for i, b in local.iter_516.tape : (i == local.iter_516.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_517.code == ","
        ? [for i, b in local.iter_516.tape : (i == local.iter_516.tape_ptr ? local.ascii_lookup[local.curr_517.input] : b)]
        : local.iter_516.tape)

    tape_ptr = (
      local.curr_517.code == "<"
        ? local.iter_516.tape_ptr == 0 ? length(local.iter_516.tape) - 1 : local.iter_516.tape_ptr - 1 :
      local.curr_517.code == ">"
        ? local.iter_516.tape_ptr == length(local.iter_516.tape) - 1 ? 0 : local.iter_516.tape_ptr + 1
        : local.iter_516.tape_ptr)

    code_ptr = 1 + (
      local.curr_517.code == "["
        ? local.iter_516.tape[local.iter_516.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_516.code_ptr)] : local.iter_516.code_ptr :
      local.curr_517.code == "]"
        ? local.iter_516.tape[local.iter_516.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_516.code_ptr)] : local.iter_516.code_ptr
        : local.iter_516.code_ptr)

    steps_taken = 1 + local.iter_516.steps_taken
  }
}

locals {
  end_of_code_518 = try(local.iter_517.code_ptr >= length(var.code), true)

  curr_518 = local.end_of_code_518 ? null : {
    code = substr(var.code, local.iter_517.code_ptr, 1)
    input = substr(var.code, local.iter_517.code_ptr, 1) == "," ? substr(local.iter_517.input, 0, 1) : null
  }

  iter_518 = local.end_of_code_518 ? local.iter_517 : {
    input = (local.curr_518.code == ","
      ? substr(local.iter_517.input, 1, -1)
      : local.iter_517.input)

    output = (local.curr_518.code == "."
      ? "${local.iter_517.output}${jsondecode(format("\"\\u%04x\"", local.iter_517.tape[local.iter_517.tape_ptr]))}"
      : local.iter_517.output)
    
    tape = (
      local.curr_518.code == "+"
        ? [for i, b in local.iter_517.tape : (i == local.iter_517.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_518.code == "-"
        ? [for i, b in local.iter_517.tape : (i == local.iter_517.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_518.code == ","
        ? [for i, b in local.iter_517.tape : (i == local.iter_517.tape_ptr ? local.ascii_lookup[local.curr_518.input] : b)]
        : local.iter_517.tape)

    tape_ptr = (
      local.curr_518.code == "<"
        ? local.iter_517.tape_ptr == 0 ? length(local.iter_517.tape) - 1 : local.iter_517.tape_ptr - 1 :
      local.curr_518.code == ">"
        ? local.iter_517.tape_ptr == length(local.iter_517.tape) - 1 ? 0 : local.iter_517.tape_ptr + 1
        : local.iter_517.tape_ptr)

    code_ptr = 1 + (
      local.curr_518.code == "["
        ? local.iter_517.tape[local.iter_517.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_517.code_ptr)] : local.iter_517.code_ptr :
      local.curr_518.code == "]"
        ? local.iter_517.tape[local.iter_517.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_517.code_ptr)] : local.iter_517.code_ptr
        : local.iter_517.code_ptr)

    steps_taken = 1 + local.iter_517.steps_taken
  }
}

locals {
  end_of_code_519 = try(local.iter_518.code_ptr >= length(var.code), true)

  curr_519 = local.end_of_code_519 ? null : {
    code = substr(var.code, local.iter_518.code_ptr, 1)
    input = substr(var.code, local.iter_518.code_ptr, 1) == "," ? substr(local.iter_518.input, 0, 1) : null
  }

  iter_519 = local.end_of_code_519 ? local.iter_518 : {
    input = (local.curr_519.code == ","
      ? substr(local.iter_518.input, 1, -1)
      : local.iter_518.input)

    output = (local.curr_519.code == "."
      ? "${local.iter_518.output}${jsondecode(format("\"\\u%04x\"", local.iter_518.tape[local.iter_518.tape_ptr]))}"
      : local.iter_518.output)
    
    tape = (
      local.curr_519.code == "+"
        ? [for i, b in local.iter_518.tape : (i == local.iter_518.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_519.code == "-"
        ? [for i, b in local.iter_518.tape : (i == local.iter_518.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_519.code == ","
        ? [for i, b in local.iter_518.tape : (i == local.iter_518.tape_ptr ? local.ascii_lookup[local.curr_519.input] : b)]
        : local.iter_518.tape)

    tape_ptr = (
      local.curr_519.code == "<"
        ? local.iter_518.tape_ptr == 0 ? length(local.iter_518.tape) - 1 : local.iter_518.tape_ptr - 1 :
      local.curr_519.code == ">"
        ? local.iter_518.tape_ptr == length(local.iter_518.tape) - 1 ? 0 : local.iter_518.tape_ptr + 1
        : local.iter_518.tape_ptr)

    code_ptr = 1 + (
      local.curr_519.code == "["
        ? local.iter_518.tape[local.iter_518.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_518.code_ptr)] : local.iter_518.code_ptr :
      local.curr_519.code == "]"
        ? local.iter_518.tape[local.iter_518.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_518.code_ptr)] : local.iter_518.code_ptr
        : local.iter_518.code_ptr)

    steps_taken = 1 + local.iter_518.steps_taken
  }
}

locals {
  end_of_code_520 = try(local.iter_519.code_ptr >= length(var.code), true)

  curr_520 = local.end_of_code_520 ? null : {
    code = substr(var.code, local.iter_519.code_ptr, 1)
    input = substr(var.code, local.iter_519.code_ptr, 1) == "," ? substr(local.iter_519.input, 0, 1) : null
  }

  iter_520 = local.end_of_code_520 ? local.iter_519 : {
    input = (local.curr_520.code == ","
      ? substr(local.iter_519.input, 1, -1)
      : local.iter_519.input)

    output = (local.curr_520.code == "."
      ? "${local.iter_519.output}${jsondecode(format("\"\\u%04x\"", local.iter_519.tape[local.iter_519.tape_ptr]))}"
      : local.iter_519.output)
    
    tape = (
      local.curr_520.code == "+"
        ? [for i, b in local.iter_519.tape : (i == local.iter_519.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_520.code == "-"
        ? [for i, b in local.iter_519.tape : (i == local.iter_519.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_520.code == ","
        ? [for i, b in local.iter_519.tape : (i == local.iter_519.tape_ptr ? local.ascii_lookup[local.curr_520.input] : b)]
        : local.iter_519.tape)

    tape_ptr = (
      local.curr_520.code == "<"
        ? local.iter_519.tape_ptr == 0 ? length(local.iter_519.tape) - 1 : local.iter_519.tape_ptr - 1 :
      local.curr_520.code == ">"
        ? local.iter_519.tape_ptr == length(local.iter_519.tape) - 1 ? 0 : local.iter_519.tape_ptr + 1
        : local.iter_519.tape_ptr)

    code_ptr = 1 + (
      local.curr_520.code == "["
        ? local.iter_519.tape[local.iter_519.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_519.code_ptr)] : local.iter_519.code_ptr :
      local.curr_520.code == "]"
        ? local.iter_519.tape[local.iter_519.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_519.code_ptr)] : local.iter_519.code_ptr
        : local.iter_519.code_ptr)

    steps_taken = 1 + local.iter_519.steps_taken
  }
}

locals {
  end_of_code_521 = try(local.iter_520.code_ptr >= length(var.code), true)

  curr_521 = local.end_of_code_521 ? null : {
    code = substr(var.code, local.iter_520.code_ptr, 1)
    input = substr(var.code, local.iter_520.code_ptr, 1) == "," ? substr(local.iter_520.input, 0, 1) : null
  }

  iter_521 = local.end_of_code_521 ? local.iter_520 : {
    input = (local.curr_521.code == ","
      ? substr(local.iter_520.input, 1, -1)
      : local.iter_520.input)

    output = (local.curr_521.code == "."
      ? "${local.iter_520.output}${jsondecode(format("\"\\u%04x\"", local.iter_520.tape[local.iter_520.tape_ptr]))}"
      : local.iter_520.output)
    
    tape = (
      local.curr_521.code == "+"
        ? [for i, b in local.iter_520.tape : (i == local.iter_520.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_521.code == "-"
        ? [for i, b in local.iter_520.tape : (i == local.iter_520.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_521.code == ","
        ? [for i, b in local.iter_520.tape : (i == local.iter_520.tape_ptr ? local.ascii_lookup[local.curr_521.input] : b)]
        : local.iter_520.tape)

    tape_ptr = (
      local.curr_521.code == "<"
        ? local.iter_520.tape_ptr == 0 ? length(local.iter_520.tape) - 1 : local.iter_520.tape_ptr - 1 :
      local.curr_521.code == ">"
        ? local.iter_520.tape_ptr == length(local.iter_520.tape) - 1 ? 0 : local.iter_520.tape_ptr + 1
        : local.iter_520.tape_ptr)

    code_ptr = 1 + (
      local.curr_521.code == "["
        ? local.iter_520.tape[local.iter_520.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_520.code_ptr)] : local.iter_520.code_ptr :
      local.curr_521.code == "]"
        ? local.iter_520.tape[local.iter_520.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_520.code_ptr)] : local.iter_520.code_ptr
        : local.iter_520.code_ptr)

    steps_taken = 1 + local.iter_520.steps_taken
  }
}

locals {
  end_of_code_522 = try(local.iter_521.code_ptr >= length(var.code), true)

  curr_522 = local.end_of_code_522 ? null : {
    code = substr(var.code, local.iter_521.code_ptr, 1)
    input = substr(var.code, local.iter_521.code_ptr, 1) == "," ? substr(local.iter_521.input, 0, 1) : null
  }

  iter_522 = local.end_of_code_522 ? local.iter_521 : {
    input = (local.curr_522.code == ","
      ? substr(local.iter_521.input, 1, -1)
      : local.iter_521.input)

    output = (local.curr_522.code == "."
      ? "${local.iter_521.output}${jsondecode(format("\"\\u%04x\"", local.iter_521.tape[local.iter_521.tape_ptr]))}"
      : local.iter_521.output)
    
    tape = (
      local.curr_522.code == "+"
        ? [for i, b in local.iter_521.tape : (i == local.iter_521.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_522.code == "-"
        ? [for i, b in local.iter_521.tape : (i == local.iter_521.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_522.code == ","
        ? [for i, b in local.iter_521.tape : (i == local.iter_521.tape_ptr ? local.ascii_lookup[local.curr_522.input] : b)]
        : local.iter_521.tape)

    tape_ptr = (
      local.curr_522.code == "<"
        ? local.iter_521.tape_ptr == 0 ? length(local.iter_521.tape) - 1 : local.iter_521.tape_ptr - 1 :
      local.curr_522.code == ">"
        ? local.iter_521.tape_ptr == length(local.iter_521.tape) - 1 ? 0 : local.iter_521.tape_ptr + 1
        : local.iter_521.tape_ptr)

    code_ptr = 1 + (
      local.curr_522.code == "["
        ? local.iter_521.tape[local.iter_521.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_521.code_ptr)] : local.iter_521.code_ptr :
      local.curr_522.code == "]"
        ? local.iter_521.tape[local.iter_521.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_521.code_ptr)] : local.iter_521.code_ptr
        : local.iter_521.code_ptr)

    steps_taken = 1 + local.iter_521.steps_taken
  }
}

locals {
  end_of_code_523 = try(local.iter_522.code_ptr >= length(var.code), true)

  curr_523 = local.end_of_code_523 ? null : {
    code = substr(var.code, local.iter_522.code_ptr, 1)
    input = substr(var.code, local.iter_522.code_ptr, 1) == "," ? substr(local.iter_522.input, 0, 1) : null
  }

  iter_523 = local.end_of_code_523 ? local.iter_522 : {
    input = (local.curr_523.code == ","
      ? substr(local.iter_522.input, 1, -1)
      : local.iter_522.input)

    output = (local.curr_523.code == "."
      ? "${local.iter_522.output}${jsondecode(format("\"\\u%04x\"", local.iter_522.tape[local.iter_522.tape_ptr]))}"
      : local.iter_522.output)
    
    tape = (
      local.curr_523.code == "+"
        ? [for i, b in local.iter_522.tape : (i == local.iter_522.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_523.code == "-"
        ? [for i, b in local.iter_522.tape : (i == local.iter_522.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_523.code == ","
        ? [for i, b in local.iter_522.tape : (i == local.iter_522.tape_ptr ? local.ascii_lookup[local.curr_523.input] : b)]
        : local.iter_522.tape)

    tape_ptr = (
      local.curr_523.code == "<"
        ? local.iter_522.tape_ptr == 0 ? length(local.iter_522.tape) - 1 : local.iter_522.tape_ptr - 1 :
      local.curr_523.code == ">"
        ? local.iter_522.tape_ptr == length(local.iter_522.tape) - 1 ? 0 : local.iter_522.tape_ptr + 1
        : local.iter_522.tape_ptr)

    code_ptr = 1 + (
      local.curr_523.code == "["
        ? local.iter_522.tape[local.iter_522.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_522.code_ptr)] : local.iter_522.code_ptr :
      local.curr_523.code == "]"
        ? local.iter_522.tape[local.iter_522.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_522.code_ptr)] : local.iter_522.code_ptr
        : local.iter_522.code_ptr)

    steps_taken = 1 + local.iter_522.steps_taken
  }
}

locals {
  end_of_code_524 = try(local.iter_523.code_ptr >= length(var.code), true)

  curr_524 = local.end_of_code_524 ? null : {
    code = substr(var.code, local.iter_523.code_ptr, 1)
    input = substr(var.code, local.iter_523.code_ptr, 1) == "," ? substr(local.iter_523.input, 0, 1) : null
  }

  iter_524 = local.end_of_code_524 ? local.iter_523 : {
    input = (local.curr_524.code == ","
      ? substr(local.iter_523.input, 1, -1)
      : local.iter_523.input)

    output = (local.curr_524.code == "."
      ? "${local.iter_523.output}${jsondecode(format("\"\\u%04x\"", local.iter_523.tape[local.iter_523.tape_ptr]))}"
      : local.iter_523.output)
    
    tape = (
      local.curr_524.code == "+"
        ? [for i, b in local.iter_523.tape : (i == local.iter_523.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_524.code == "-"
        ? [for i, b in local.iter_523.tape : (i == local.iter_523.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_524.code == ","
        ? [for i, b in local.iter_523.tape : (i == local.iter_523.tape_ptr ? local.ascii_lookup[local.curr_524.input] : b)]
        : local.iter_523.tape)

    tape_ptr = (
      local.curr_524.code == "<"
        ? local.iter_523.tape_ptr == 0 ? length(local.iter_523.tape) - 1 : local.iter_523.tape_ptr - 1 :
      local.curr_524.code == ">"
        ? local.iter_523.tape_ptr == length(local.iter_523.tape) - 1 ? 0 : local.iter_523.tape_ptr + 1
        : local.iter_523.tape_ptr)

    code_ptr = 1 + (
      local.curr_524.code == "["
        ? local.iter_523.tape[local.iter_523.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_523.code_ptr)] : local.iter_523.code_ptr :
      local.curr_524.code == "]"
        ? local.iter_523.tape[local.iter_523.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_523.code_ptr)] : local.iter_523.code_ptr
        : local.iter_523.code_ptr)

    steps_taken = 1 + local.iter_523.steps_taken
  }
}

locals {
  end_of_code_525 = try(local.iter_524.code_ptr >= length(var.code), true)

  curr_525 = local.end_of_code_525 ? null : {
    code = substr(var.code, local.iter_524.code_ptr, 1)
    input = substr(var.code, local.iter_524.code_ptr, 1) == "," ? substr(local.iter_524.input, 0, 1) : null
  }

  iter_525 = local.end_of_code_525 ? local.iter_524 : {
    input = (local.curr_525.code == ","
      ? substr(local.iter_524.input, 1, -1)
      : local.iter_524.input)

    output = (local.curr_525.code == "."
      ? "${local.iter_524.output}${jsondecode(format("\"\\u%04x\"", local.iter_524.tape[local.iter_524.tape_ptr]))}"
      : local.iter_524.output)
    
    tape = (
      local.curr_525.code == "+"
        ? [for i, b in local.iter_524.tape : (i == local.iter_524.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_525.code == "-"
        ? [for i, b in local.iter_524.tape : (i == local.iter_524.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_525.code == ","
        ? [for i, b in local.iter_524.tape : (i == local.iter_524.tape_ptr ? local.ascii_lookup[local.curr_525.input] : b)]
        : local.iter_524.tape)

    tape_ptr = (
      local.curr_525.code == "<"
        ? local.iter_524.tape_ptr == 0 ? length(local.iter_524.tape) - 1 : local.iter_524.tape_ptr - 1 :
      local.curr_525.code == ">"
        ? local.iter_524.tape_ptr == length(local.iter_524.tape) - 1 ? 0 : local.iter_524.tape_ptr + 1
        : local.iter_524.tape_ptr)

    code_ptr = 1 + (
      local.curr_525.code == "["
        ? local.iter_524.tape[local.iter_524.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_524.code_ptr)] : local.iter_524.code_ptr :
      local.curr_525.code == "]"
        ? local.iter_524.tape[local.iter_524.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_524.code_ptr)] : local.iter_524.code_ptr
        : local.iter_524.code_ptr)

    steps_taken = 1 + local.iter_524.steps_taken
  }
}

locals {
  end_of_code_526 = try(local.iter_525.code_ptr >= length(var.code), true)

  curr_526 = local.end_of_code_526 ? null : {
    code = substr(var.code, local.iter_525.code_ptr, 1)
    input = substr(var.code, local.iter_525.code_ptr, 1) == "," ? substr(local.iter_525.input, 0, 1) : null
  }

  iter_526 = local.end_of_code_526 ? local.iter_525 : {
    input = (local.curr_526.code == ","
      ? substr(local.iter_525.input, 1, -1)
      : local.iter_525.input)

    output = (local.curr_526.code == "."
      ? "${local.iter_525.output}${jsondecode(format("\"\\u%04x\"", local.iter_525.tape[local.iter_525.tape_ptr]))}"
      : local.iter_525.output)
    
    tape = (
      local.curr_526.code == "+"
        ? [for i, b in local.iter_525.tape : (i == local.iter_525.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_526.code == "-"
        ? [for i, b in local.iter_525.tape : (i == local.iter_525.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_526.code == ","
        ? [for i, b in local.iter_525.tape : (i == local.iter_525.tape_ptr ? local.ascii_lookup[local.curr_526.input] : b)]
        : local.iter_525.tape)

    tape_ptr = (
      local.curr_526.code == "<"
        ? local.iter_525.tape_ptr == 0 ? length(local.iter_525.tape) - 1 : local.iter_525.tape_ptr - 1 :
      local.curr_526.code == ">"
        ? local.iter_525.tape_ptr == length(local.iter_525.tape) - 1 ? 0 : local.iter_525.tape_ptr + 1
        : local.iter_525.tape_ptr)

    code_ptr = 1 + (
      local.curr_526.code == "["
        ? local.iter_525.tape[local.iter_525.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_525.code_ptr)] : local.iter_525.code_ptr :
      local.curr_526.code == "]"
        ? local.iter_525.tape[local.iter_525.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_525.code_ptr)] : local.iter_525.code_ptr
        : local.iter_525.code_ptr)

    steps_taken = 1 + local.iter_525.steps_taken
  }
}

locals {
  end_of_code_527 = try(local.iter_526.code_ptr >= length(var.code), true)

  curr_527 = local.end_of_code_527 ? null : {
    code = substr(var.code, local.iter_526.code_ptr, 1)
    input = substr(var.code, local.iter_526.code_ptr, 1) == "," ? substr(local.iter_526.input, 0, 1) : null
  }

  iter_527 = local.end_of_code_527 ? local.iter_526 : {
    input = (local.curr_527.code == ","
      ? substr(local.iter_526.input, 1, -1)
      : local.iter_526.input)

    output = (local.curr_527.code == "."
      ? "${local.iter_526.output}${jsondecode(format("\"\\u%04x\"", local.iter_526.tape[local.iter_526.tape_ptr]))}"
      : local.iter_526.output)
    
    tape = (
      local.curr_527.code == "+"
        ? [for i, b in local.iter_526.tape : (i == local.iter_526.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_527.code == "-"
        ? [for i, b in local.iter_526.tape : (i == local.iter_526.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_527.code == ","
        ? [for i, b in local.iter_526.tape : (i == local.iter_526.tape_ptr ? local.ascii_lookup[local.curr_527.input] : b)]
        : local.iter_526.tape)

    tape_ptr = (
      local.curr_527.code == "<"
        ? local.iter_526.tape_ptr == 0 ? length(local.iter_526.tape) - 1 : local.iter_526.tape_ptr - 1 :
      local.curr_527.code == ">"
        ? local.iter_526.tape_ptr == length(local.iter_526.tape) - 1 ? 0 : local.iter_526.tape_ptr + 1
        : local.iter_526.tape_ptr)

    code_ptr = 1 + (
      local.curr_527.code == "["
        ? local.iter_526.tape[local.iter_526.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_526.code_ptr)] : local.iter_526.code_ptr :
      local.curr_527.code == "]"
        ? local.iter_526.tape[local.iter_526.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_526.code_ptr)] : local.iter_526.code_ptr
        : local.iter_526.code_ptr)

    steps_taken = 1 + local.iter_526.steps_taken
  }
}

locals {
  end_of_code_528 = try(local.iter_527.code_ptr >= length(var.code), true)

  curr_528 = local.end_of_code_528 ? null : {
    code = substr(var.code, local.iter_527.code_ptr, 1)
    input = substr(var.code, local.iter_527.code_ptr, 1) == "," ? substr(local.iter_527.input, 0, 1) : null
  }

  iter_528 = local.end_of_code_528 ? local.iter_527 : {
    input = (local.curr_528.code == ","
      ? substr(local.iter_527.input, 1, -1)
      : local.iter_527.input)

    output = (local.curr_528.code == "."
      ? "${local.iter_527.output}${jsondecode(format("\"\\u%04x\"", local.iter_527.tape[local.iter_527.tape_ptr]))}"
      : local.iter_527.output)
    
    tape = (
      local.curr_528.code == "+"
        ? [for i, b in local.iter_527.tape : (i == local.iter_527.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_528.code == "-"
        ? [for i, b in local.iter_527.tape : (i == local.iter_527.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_528.code == ","
        ? [for i, b in local.iter_527.tape : (i == local.iter_527.tape_ptr ? local.ascii_lookup[local.curr_528.input] : b)]
        : local.iter_527.tape)

    tape_ptr = (
      local.curr_528.code == "<"
        ? local.iter_527.tape_ptr == 0 ? length(local.iter_527.tape) - 1 : local.iter_527.tape_ptr - 1 :
      local.curr_528.code == ">"
        ? local.iter_527.tape_ptr == length(local.iter_527.tape) - 1 ? 0 : local.iter_527.tape_ptr + 1
        : local.iter_527.tape_ptr)

    code_ptr = 1 + (
      local.curr_528.code == "["
        ? local.iter_527.tape[local.iter_527.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_527.code_ptr)] : local.iter_527.code_ptr :
      local.curr_528.code == "]"
        ? local.iter_527.tape[local.iter_527.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_527.code_ptr)] : local.iter_527.code_ptr
        : local.iter_527.code_ptr)

    steps_taken = 1 + local.iter_527.steps_taken
  }
}

locals {
  end_of_code_529 = try(local.iter_528.code_ptr >= length(var.code), true)

  curr_529 = local.end_of_code_529 ? null : {
    code = substr(var.code, local.iter_528.code_ptr, 1)
    input = substr(var.code, local.iter_528.code_ptr, 1) == "," ? substr(local.iter_528.input, 0, 1) : null
  }

  iter_529 = local.end_of_code_529 ? local.iter_528 : {
    input = (local.curr_529.code == ","
      ? substr(local.iter_528.input, 1, -1)
      : local.iter_528.input)

    output = (local.curr_529.code == "."
      ? "${local.iter_528.output}${jsondecode(format("\"\\u%04x\"", local.iter_528.tape[local.iter_528.tape_ptr]))}"
      : local.iter_528.output)
    
    tape = (
      local.curr_529.code == "+"
        ? [for i, b in local.iter_528.tape : (i == local.iter_528.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_529.code == "-"
        ? [for i, b in local.iter_528.tape : (i == local.iter_528.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_529.code == ","
        ? [for i, b in local.iter_528.tape : (i == local.iter_528.tape_ptr ? local.ascii_lookup[local.curr_529.input] : b)]
        : local.iter_528.tape)

    tape_ptr = (
      local.curr_529.code == "<"
        ? local.iter_528.tape_ptr == 0 ? length(local.iter_528.tape) - 1 : local.iter_528.tape_ptr - 1 :
      local.curr_529.code == ">"
        ? local.iter_528.tape_ptr == length(local.iter_528.tape) - 1 ? 0 : local.iter_528.tape_ptr + 1
        : local.iter_528.tape_ptr)

    code_ptr = 1 + (
      local.curr_529.code == "["
        ? local.iter_528.tape[local.iter_528.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_528.code_ptr)] : local.iter_528.code_ptr :
      local.curr_529.code == "]"
        ? local.iter_528.tape[local.iter_528.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_528.code_ptr)] : local.iter_528.code_ptr
        : local.iter_528.code_ptr)

    steps_taken = 1 + local.iter_528.steps_taken
  }
}

locals {
  end_of_code_530 = try(local.iter_529.code_ptr >= length(var.code), true)

  curr_530 = local.end_of_code_530 ? null : {
    code = substr(var.code, local.iter_529.code_ptr, 1)
    input = substr(var.code, local.iter_529.code_ptr, 1) == "," ? substr(local.iter_529.input, 0, 1) : null
  }

  iter_530 = local.end_of_code_530 ? local.iter_529 : {
    input = (local.curr_530.code == ","
      ? substr(local.iter_529.input, 1, -1)
      : local.iter_529.input)

    output = (local.curr_530.code == "."
      ? "${local.iter_529.output}${jsondecode(format("\"\\u%04x\"", local.iter_529.tape[local.iter_529.tape_ptr]))}"
      : local.iter_529.output)
    
    tape = (
      local.curr_530.code == "+"
        ? [for i, b in local.iter_529.tape : (i == local.iter_529.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_530.code == "-"
        ? [for i, b in local.iter_529.tape : (i == local.iter_529.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_530.code == ","
        ? [for i, b in local.iter_529.tape : (i == local.iter_529.tape_ptr ? local.ascii_lookup[local.curr_530.input] : b)]
        : local.iter_529.tape)

    tape_ptr = (
      local.curr_530.code == "<"
        ? local.iter_529.tape_ptr == 0 ? length(local.iter_529.tape) - 1 : local.iter_529.tape_ptr - 1 :
      local.curr_530.code == ">"
        ? local.iter_529.tape_ptr == length(local.iter_529.tape) - 1 ? 0 : local.iter_529.tape_ptr + 1
        : local.iter_529.tape_ptr)

    code_ptr = 1 + (
      local.curr_530.code == "["
        ? local.iter_529.tape[local.iter_529.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_529.code_ptr)] : local.iter_529.code_ptr :
      local.curr_530.code == "]"
        ? local.iter_529.tape[local.iter_529.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_529.code_ptr)] : local.iter_529.code_ptr
        : local.iter_529.code_ptr)

    steps_taken = 1 + local.iter_529.steps_taken
  }
}

locals {
  end_of_code_531 = try(local.iter_530.code_ptr >= length(var.code), true)

  curr_531 = local.end_of_code_531 ? null : {
    code = substr(var.code, local.iter_530.code_ptr, 1)
    input = substr(var.code, local.iter_530.code_ptr, 1) == "," ? substr(local.iter_530.input, 0, 1) : null
  }

  iter_531 = local.end_of_code_531 ? local.iter_530 : {
    input = (local.curr_531.code == ","
      ? substr(local.iter_530.input, 1, -1)
      : local.iter_530.input)

    output = (local.curr_531.code == "."
      ? "${local.iter_530.output}${jsondecode(format("\"\\u%04x\"", local.iter_530.tape[local.iter_530.tape_ptr]))}"
      : local.iter_530.output)
    
    tape = (
      local.curr_531.code == "+"
        ? [for i, b in local.iter_530.tape : (i == local.iter_530.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_531.code == "-"
        ? [for i, b in local.iter_530.tape : (i == local.iter_530.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_531.code == ","
        ? [for i, b in local.iter_530.tape : (i == local.iter_530.tape_ptr ? local.ascii_lookup[local.curr_531.input] : b)]
        : local.iter_530.tape)

    tape_ptr = (
      local.curr_531.code == "<"
        ? local.iter_530.tape_ptr == 0 ? length(local.iter_530.tape) - 1 : local.iter_530.tape_ptr - 1 :
      local.curr_531.code == ">"
        ? local.iter_530.tape_ptr == length(local.iter_530.tape) - 1 ? 0 : local.iter_530.tape_ptr + 1
        : local.iter_530.tape_ptr)

    code_ptr = 1 + (
      local.curr_531.code == "["
        ? local.iter_530.tape[local.iter_530.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_530.code_ptr)] : local.iter_530.code_ptr :
      local.curr_531.code == "]"
        ? local.iter_530.tape[local.iter_530.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_530.code_ptr)] : local.iter_530.code_ptr
        : local.iter_530.code_ptr)

    steps_taken = 1 + local.iter_530.steps_taken
  }
}

locals {
  end_of_code_532 = try(local.iter_531.code_ptr >= length(var.code), true)

  curr_532 = local.end_of_code_532 ? null : {
    code = substr(var.code, local.iter_531.code_ptr, 1)
    input = substr(var.code, local.iter_531.code_ptr, 1) == "," ? substr(local.iter_531.input, 0, 1) : null
  }

  iter_532 = local.end_of_code_532 ? local.iter_531 : {
    input = (local.curr_532.code == ","
      ? substr(local.iter_531.input, 1, -1)
      : local.iter_531.input)

    output = (local.curr_532.code == "."
      ? "${local.iter_531.output}${jsondecode(format("\"\\u%04x\"", local.iter_531.tape[local.iter_531.tape_ptr]))}"
      : local.iter_531.output)
    
    tape = (
      local.curr_532.code == "+"
        ? [for i, b in local.iter_531.tape : (i == local.iter_531.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_532.code == "-"
        ? [for i, b in local.iter_531.tape : (i == local.iter_531.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_532.code == ","
        ? [for i, b in local.iter_531.tape : (i == local.iter_531.tape_ptr ? local.ascii_lookup[local.curr_532.input] : b)]
        : local.iter_531.tape)

    tape_ptr = (
      local.curr_532.code == "<"
        ? local.iter_531.tape_ptr == 0 ? length(local.iter_531.tape) - 1 : local.iter_531.tape_ptr - 1 :
      local.curr_532.code == ">"
        ? local.iter_531.tape_ptr == length(local.iter_531.tape) - 1 ? 0 : local.iter_531.tape_ptr + 1
        : local.iter_531.tape_ptr)

    code_ptr = 1 + (
      local.curr_532.code == "["
        ? local.iter_531.tape[local.iter_531.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_531.code_ptr)] : local.iter_531.code_ptr :
      local.curr_532.code == "]"
        ? local.iter_531.tape[local.iter_531.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_531.code_ptr)] : local.iter_531.code_ptr
        : local.iter_531.code_ptr)

    steps_taken = 1 + local.iter_531.steps_taken
  }
}

locals {
  end_of_code_533 = try(local.iter_532.code_ptr >= length(var.code), true)

  curr_533 = local.end_of_code_533 ? null : {
    code = substr(var.code, local.iter_532.code_ptr, 1)
    input = substr(var.code, local.iter_532.code_ptr, 1) == "," ? substr(local.iter_532.input, 0, 1) : null
  }

  iter_533 = local.end_of_code_533 ? local.iter_532 : {
    input = (local.curr_533.code == ","
      ? substr(local.iter_532.input, 1, -1)
      : local.iter_532.input)

    output = (local.curr_533.code == "."
      ? "${local.iter_532.output}${jsondecode(format("\"\\u%04x\"", local.iter_532.tape[local.iter_532.tape_ptr]))}"
      : local.iter_532.output)
    
    tape = (
      local.curr_533.code == "+"
        ? [for i, b in local.iter_532.tape : (i == local.iter_532.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_533.code == "-"
        ? [for i, b in local.iter_532.tape : (i == local.iter_532.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_533.code == ","
        ? [for i, b in local.iter_532.tape : (i == local.iter_532.tape_ptr ? local.ascii_lookup[local.curr_533.input] : b)]
        : local.iter_532.tape)

    tape_ptr = (
      local.curr_533.code == "<"
        ? local.iter_532.tape_ptr == 0 ? length(local.iter_532.tape) - 1 : local.iter_532.tape_ptr - 1 :
      local.curr_533.code == ">"
        ? local.iter_532.tape_ptr == length(local.iter_532.tape) - 1 ? 0 : local.iter_532.tape_ptr + 1
        : local.iter_532.tape_ptr)

    code_ptr = 1 + (
      local.curr_533.code == "["
        ? local.iter_532.tape[local.iter_532.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_532.code_ptr)] : local.iter_532.code_ptr :
      local.curr_533.code == "]"
        ? local.iter_532.tape[local.iter_532.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_532.code_ptr)] : local.iter_532.code_ptr
        : local.iter_532.code_ptr)

    steps_taken = 1 + local.iter_532.steps_taken
  }
}

locals {
  end_of_code_534 = try(local.iter_533.code_ptr >= length(var.code), true)

  curr_534 = local.end_of_code_534 ? null : {
    code = substr(var.code, local.iter_533.code_ptr, 1)
    input = substr(var.code, local.iter_533.code_ptr, 1) == "," ? substr(local.iter_533.input, 0, 1) : null
  }

  iter_534 = local.end_of_code_534 ? local.iter_533 : {
    input = (local.curr_534.code == ","
      ? substr(local.iter_533.input, 1, -1)
      : local.iter_533.input)

    output = (local.curr_534.code == "."
      ? "${local.iter_533.output}${jsondecode(format("\"\\u%04x\"", local.iter_533.tape[local.iter_533.tape_ptr]))}"
      : local.iter_533.output)
    
    tape = (
      local.curr_534.code == "+"
        ? [for i, b in local.iter_533.tape : (i == local.iter_533.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_534.code == "-"
        ? [for i, b in local.iter_533.tape : (i == local.iter_533.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_534.code == ","
        ? [for i, b in local.iter_533.tape : (i == local.iter_533.tape_ptr ? local.ascii_lookup[local.curr_534.input] : b)]
        : local.iter_533.tape)

    tape_ptr = (
      local.curr_534.code == "<"
        ? local.iter_533.tape_ptr == 0 ? length(local.iter_533.tape) - 1 : local.iter_533.tape_ptr - 1 :
      local.curr_534.code == ">"
        ? local.iter_533.tape_ptr == length(local.iter_533.tape) - 1 ? 0 : local.iter_533.tape_ptr + 1
        : local.iter_533.tape_ptr)

    code_ptr = 1 + (
      local.curr_534.code == "["
        ? local.iter_533.tape[local.iter_533.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_533.code_ptr)] : local.iter_533.code_ptr :
      local.curr_534.code == "]"
        ? local.iter_533.tape[local.iter_533.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_533.code_ptr)] : local.iter_533.code_ptr
        : local.iter_533.code_ptr)

    steps_taken = 1 + local.iter_533.steps_taken
  }
}

locals {
  end_of_code_535 = try(local.iter_534.code_ptr >= length(var.code), true)

  curr_535 = local.end_of_code_535 ? null : {
    code = substr(var.code, local.iter_534.code_ptr, 1)
    input = substr(var.code, local.iter_534.code_ptr, 1) == "," ? substr(local.iter_534.input, 0, 1) : null
  }

  iter_535 = local.end_of_code_535 ? local.iter_534 : {
    input = (local.curr_535.code == ","
      ? substr(local.iter_534.input, 1, -1)
      : local.iter_534.input)

    output = (local.curr_535.code == "."
      ? "${local.iter_534.output}${jsondecode(format("\"\\u%04x\"", local.iter_534.tape[local.iter_534.tape_ptr]))}"
      : local.iter_534.output)
    
    tape = (
      local.curr_535.code == "+"
        ? [for i, b in local.iter_534.tape : (i == local.iter_534.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_535.code == "-"
        ? [for i, b in local.iter_534.tape : (i == local.iter_534.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_535.code == ","
        ? [for i, b in local.iter_534.tape : (i == local.iter_534.tape_ptr ? local.ascii_lookup[local.curr_535.input] : b)]
        : local.iter_534.tape)

    tape_ptr = (
      local.curr_535.code == "<"
        ? local.iter_534.tape_ptr == 0 ? length(local.iter_534.tape) - 1 : local.iter_534.tape_ptr - 1 :
      local.curr_535.code == ">"
        ? local.iter_534.tape_ptr == length(local.iter_534.tape) - 1 ? 0 : local.iter_534.tape_ptr + 1
        : local.iter_534.tape_ptr)

    code_ptr = 1 + (
      local.curr_535.code == "["
        ? local.iter_534.tape[local.iter_534.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_534.code_ptr)] : local.iter_534.code_ptr :
      local.curr_535.code == "]"
        ? local.iter_534.tape[local.iter_534.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_534.code_ptr)] : local.iter_534.code_ptr
        : local.iter_534.code_ptr)

    steps_taken = 1 + local.iter_534.steps_taken
  }
}

locals {
  end_of_code_536 = try(local.iter_535.code_ptr >= length(var.code), true)

  curr_536 = local.end_of_code_536 ? null : {
    code = substr(var.code, local.iter_535.code_ptr, 1)
    input = substr(var.code, local.iter_535.code_ptr, 1) == "," ? substr(local.iter_535.input, 0, 1) : null
  }

  iter_536 = local.end_of_code_536 ? local.iter_535 : {
    input = (local.curr_536.code == ","
      ? substr(local.iter_535.input, 1, -1)
      : local.iter_535.input)

    output = (local.curr_536.code == "."
      ? "${local.iter_535.output}${jsondecode(format("\"\\u%04x\"", local.iter_535.tape[local.iter_535.tape_ptr]))}"
      : local.iter_535.output)
    
    tape = (
      local.curr_536.code == "+"
        ? [for i, b in local.iter_535.tape : (i == local.iter_535.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_536.code == "-"
        ? [for i, b in local.iter_535.tape : (i == local.iter_535.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_536.code == ","
        ? [for i, b in local.iter_535.tape : (i == local.iter_535.tape_ptr ? local.ascii_lookup[local.curr_536.input] : b)]
        : local.iter_535.tape)

    tape_ptr = (
      local.curr_536.code == "<"
        ? local.iter_535.tape_ptr == 0 ? length(local.iter_535.tape) - 1 : local.iter_535.tape_ptr - 1 :
      local.curr_536.code == ">"
        ? local.iter_535.tape_ptr == length(local.iter_535.tape) - 1 ? 0 : local.iter_535.tape_ptr + 1
        : local.iter_535.tape_ptr)

    code_ptr = 1 + (
      local.curr_536.code == "["
        ? local.iter_535.tape[local.iter_535.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_535.code_ptr)] : local.iter_535.code_ptr :
      local.curr_536.code == "]"
        ? local.iter_535.tape[local.iter_535.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_535.code_ptr)] : local.iter_535.code_ptr
        : local.iter_535.code_ptr)

    steps_taken = 1 + local.iter_535.steps_taken
  }
}

locals {
  end_of_code_537 = try(local.iter_536.code_ptr >= length(var.code), true)

  curr_537 = local.end_of_code_537 ? null : {
    code = substr(var.code, local.iter_536.code_ptr, 1)
    input = substr(var.code, local.iter_536.code_ptr, 1) == "," ? substr(local.iter_536.input, 0, 1) : null
  }

  iter_537 = local.end_of_code_537 ? local.iter_536 : {
    input = (local.curr_537.code == ","
      ? substr(local.iter_536.input, 1, -1)
      : local.iter_536.input)

    output = (local.curr_537.code == "."
      ? "${local.iter_536.output}${jsondecode(format("\"\\u%04x\"", local.iter_536.tape[local.iter_536.tape_ptr]))}"
      : local.iter_536.output)
    
    tape = (
      local.curr_537.code == "+"
        ? [for i, b in local.iter_536.tape : (i == local.iter_536.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_537.code == "-"
        ? [for i, b in local.iter_536.tape : (i == local.iter_536.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_537.code == ","
        ? [for i, b in local.iter_536.tape : (i == local.iter_536.tape_ptr ? local.ascii_lookup[local.curr_537.input] : b)]
        : local.iter_536.tape)

    tape_ptr = (
      local.curr_537.code == "<"
        ? local.iter_536.tape_ptr == 0 ? length(local.iter_536.tape) - 1 : local.iter_536.tape_ptr - 1 :
      local.curr_537.code == ">"
        ? local.iter_536.tape_ptr == length(local.iter_536.tape) - 1 ? 0 : local.iter_536.tape_ptr + 1
        : local.iter_536.tape_ptr)

    code_ptr = 1 + (
      local.curr_537.code == "["
        ? local.iter_536.tape[local.iter_536.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_536.code_ptr)] : local.iter_536.code_ptr :
      local.curr_537.code == "]"
        ? local.iter_536.tape[local.iter_536.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_536.code_ptr)] : local.iter_536.code_ptr
        : local.iter_536.code_ptr)

    steps_taken = 1 + local.iter_536.steps_taken
  }
}

locals {
  end_of_code_538 = try(local.iter_537.code_ptr >= length(var.code), true)

  curr_538 = local.end_of_code_538 ? null : {
    code = substr(var.code, local.iter_537.code_ptr, 1)
    input = substr(var.code, local.iter_537.code_ptr, 1) == "," ? substr(local.iter_537.input, 0, 1) : null
  }

  iter_538 = local.end_of_code_538 ? local.iter_537 : {
    input = (local.curr_538.code == ","
      ? substr(local.iter_537.input, 1, -1)
      : local.iter_537.input)

    output = (local.curr_538.code == "."
      ? "${local.iter_537.output}${jsondecode(format("\"\\u%04x\"", local.iter_537.tape[local.iter_537.tape_ptr]))}"
      : local.iter_537.output)
    
    tape = (
      local.curr_538.code == "+"
        ? [for i, b in local.iter_537.tape : (i == local.iter_537.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_538.code == "-"
        ? [for i, b in local.iter_537.tape : (i == local.iter_537.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_538.code == ","
        ? [for i, b in local.iter_537.tape : (i == local.iter_537.tape_ptr ? local.ascii_lookup[local.curr_538.input] : b)]
        : local.iter_537.tape)

    tape_ptr = (
      local.curr_538.code == "<"
        ? local.iter_537.tape_ptr == 0 ? length(local.iter_537.tape) - 1 : local.iter_537.tape_ptr - 1 :
      local.curr_538.code == ">"
        ? local.iter_537.tape_ptr == length(local.iter_537.tape) - 1 ? 0 : local.iter_537.tape_ptr + 1
        : local.iter_537.tape_ptr)

    code_ptr = 1 + (
      local.curr_538.code == "["
        ? local.iter_537.tape[local.iter_537.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_537.code_ptr)] : local.iter_537.code_ptr :
      local.curr_538.code == "]"
        ? local.iter_537.tape[local.iter_537.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_537.code_ptr)] : local.iter_537.code_ptr
        : local.iter_537.code_ptr)

    steps_taken = 1 + local.iter_537.steps_taken
  }
}

locals {
  end_of_code_539 = try(local.iter_538.code_ptr >= length(var.code), true)

  curr_539 = local.end_of_code_539 ? null : {
    code = substr(var.code, local.iter_538.code_ptr, 1)
    input = substr(var.code, local.iter_538.code_ptr, 1) == "," ? substr(local.iter_538.input, 0, 1) : null
  }

  iter_539 = local.end_of_code_539 ? local.iter_538 : {
    input = (local.curr_539.code == ","
      ? substr(local.iter_538.input, 1, -1)
      : local.iter_538.input)

    output = (local.curr_539.code == "."
      ? "${local.iter_538.output}${jsondecode(format("\"\\u%04x\"", local.iter_538.tape[local.iter_538.tape_ptr]))}"
      : local.iter_538.output)
    
    tape = (
      local.curr_539.code == "+"
        ? [for i, b in local.iter_538.tape : (i == local.iter_538.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_539.code == "-"
        ? [for i, b in local.iter_538.tape : (i == local.iter_538.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_539.code == ","
        ? [for i, b in local.iter_538.tape : (i == local.iter_538.tape_ptr ? local.ascii_lookup[local.curr_539.input] : b)]
        : local.iter_538.tape)

    tape_ptr = (
      local.curr_539.code == "<"
        ? local.iter_538.tape_ptr == 0 ? length(local.iter_538.tape) - 1 : local.iter_538.tape_ptr - 1 :
      local.curr_539.code == ">"
        ? local.iter_538.tape_ptr == length(local.iter_538.tape) - 1 ? 0 : local.iter_538.tape_ptr + 1
        : local.iter_538.tape_ptr)

    code_ptr = 1 + (
      local.curr_539.code == "["
        ? local.iter_538.tape[local.iter_538.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_538.code_ptr)] : local.iter_538.code_ptr :
      local.curr_539.code == "]"
        ? local.iter_538.tape[local.iter_538.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_538.code_ptr)] : local.iter_538.code_ptr
        : local.iter_538.code_ptr)

    steps_taken = 1 + local.iter_538.steps_taken
  }
}

locals {
  end_of_code_540 = try(local.iter_539.code_ptr >= length(var.code), true)

  curr_540 = local.end_of_code_540 ? null : {
    code = substr(var.code, local.iter_539.code_ptr, 1)
    input = substr(var.code, local.iter_539.code_ptr, 1) == "," ? substr(local.iter_539.input, 0, 1) : null
  }

  iter_540 = local.end_of_code_540 ? local.iter_539 : {
    input = (local.curr_540.code == ","
      ? substr(local.iter_539.input, 1, -1)
      : local.iter_539.input)

    output = (local.curr_540.code == "."
      ? "${local.iter_539.output}${jsondecode(format("\"\\u%04x\"", local.iter_539.tape[local.iter_539.tape_ptr]))}"
      : local.iter_539.output)
    
    tape = (
      local.curr_540.code == "+"
        ? [for i, b in local.iter_539.tape : (i == local.iter_539.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_540.code == "-"
        ? [for i, b in local.iter_539.tape : (i == local.iter_539.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_540.code == ","
        ? [for i, b in local.iter_539.tape : (i == local.iter_539.tape_ptr ? local.ascii_lookup[local.curr_540.input] : b)]
        : local.iter_539.tape)

    tape_ptr = (
      local.curr_540.code == "<"
        ? local.iter_539.tape_ptr == 0 ? length(local.iter_539.tape) - 1 : local.iter_539.tape_ptr - 1 :
      local.curr_540.code == ">"
        ? local.iter_539.tape_ptr == length(local.iter_539.tape) - 1 ? 0 : local.iter_539.tape_ptr + 1
        : local.iter_539.tape_ptr)

    code_ptr = 1 + (
      local.curr_540.code == "["
        ? local.iter_539.tape[local.iter_539.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_539.code_ptr)] : local.iter_539.code_ptr :
      local.curr_540.code == "]"
        ? local.iter_539.tape[local.iter_539.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_539.code_ptr)] : local.iter_539.code_ptr
        : local.iter_539.code_ptr)

    steps_taken = 1 + local.iter_539.steps_taken
  }
}

locals {
  end_of_code_541 = try(local.iter_540.code_ptr >= length(var.code), true)

  curr_541 = local.end_of_code_541 ? null : {
    code = substr(var.code, local.iter_540.code_ptr, 1)
    input = substr(var.code, local.iter_540.code_ptr, 1) == "," ? substr(local.iter_540.input, 0, 1) : null
  }

  iter_541 = local.end_of_code_541 ? local.iter_540 : {
    input = (local.curr_541.code == ","
      ? substr(local.iter_540.input, 1, -1)
      : local.iter_540.input)

    output = (local.curr_541.code == "."
      ? "${local.iter_540.output}${jsondecode(format("\"\\u%04x\"", local.iter_540.tape[local.iter_540.tape_ptr]))}"
      : local.iter_540.output)
    
    tape = (
      local.curr_541.code == "+"
        ? [for i, b in local.iter_540.tape : (i == local.iter_540.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_541.code == "-"
        ? [for i, b in local.iter_540.tape : (i == local.iter_540.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_541.code == ","
        ? [for i, b in local.iter_540.tape : (i == local.iter_540.tape_ptr ? local.ascii_lookup[local.curr_541.input] : b)]
        : local.iter_540.tape)

    tape_ptr = (
      local.curr_541.code == "<"
        ? local.iter_540.tape_ptr == 0 ? length(local.iter_540.tape) - 1 : local.iter_540.tape_ptr - 1 :
      local.curr_541.code == ">"
        ? local.iter_540.tape_ptr == length(local.iter_540.tape) - 1 ? 0 : local.iter_540.tape_ptr + 1
        : local.iter_540.tape_ptr)

    code_ptr = 1 + (
      local.curr_541.code == "["
        ? local.iter_540.tape[local.iter_540.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_540.code_ptr)] : local.iter_540.code_ptr :
      local.curr_541.code == "]"
        ? local.iter_540.tape[local.iter_540.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_540.code_ptr)] : local.iter_540.code_ptr
        : local.iter_540.code_ptr)

    steps_taken = 1 + local.iter_540.steps_taken
  }
}

locals {
  end_of_code_542 = try(local.iter_541.code_ptr >= length(var.code), true)

  curr_542 = local.end_of_code_542 ? null : {
    code = substr(var.code, local.iter_541.code_ptr, 1)
    input = substr(var.code, local.iter_541.code_ptr, 1) == "," ? substr(local.iter_541.input, 0, 1) : null
  }

  iter_542 = local.end_of_code_542 ? local.iter_541 : {
    input = (local.curr_542.code == ","
      ? substr(local.iter_541.input, 1, -1)
      : local.iter_541.input)

    output = (local.curr_542.code == "."
      ? "${local.iter_541.output}${jsondecode(format("\"\\u%04x\"", local.iter_541.tape[local.iter_541.tape_ptr]))}"
      : local.iter_541.output)
    
    tape = (
      local.curr_542.code == "+"
        ? [for i, b in local.iter_541.tape : (i == local.iter_541.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_542.code == "-"
        ? [for i, b in local.iter_541.tape : (i == local.iter_541.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_542.code == ","
        ? [for i, b in local.iter_541.tape : (i == local.iter_541.tape_ptr ? local.ascii_lookup[local.curr_542.input] : b)]
        : local.iter_541.tape)

    tape_ptr = (
      local.curr_542.code == "<"
        ? local.iter_541.tape_ptr == 0 ? length(local.iter_541.tape) - 1 : local.iter_541.tape_ptr - 1 :
      local.curr_542.code == ">"
        ? local.iter_541.tape_ptr == length(local.iter_541.tape) - 1 ? 0 : local.iter_541.tape_ptr + 1
        : local.iter_541.tape_ptr)

    code_ptr = 1 + (
      local.curr_542.code == "["
        ? local.iter_541.tape[local.iter_541.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_541.code_ptr)] : local.iter_541.code_ptr :
      local.curr_542.code == "]"
        ? local.iter_541.tape[local.iter_541.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_541.code_ptr)] : local.iter_541.code_ptr
        : local.iter_541.code_ptr)

    steps_taken = 1 + local.iter_541.steps_taken
  }
}

locals {
  end_of_code_543 = try(local.iter_542.code_ptr >= length(var.code), true)

  curr_543 = local.end_of_code_543 ? null : {
    code = substr(var.code, local.iter_542.code_ptr, 1)
    input = substr(var.code, local.iter_542.code_ptr, 1) == "," ? substr(local.iter_542.input, 0, 1) : null
  }

  iter_543 = local.end_of_code_543 ? local.iter_542 : {
    input = (local.curr_543.code == ","
      ? substr(local.iter_542.input, 1, -1)
      : local.iter_542.input)

    output = (local.curr_543.code == "."
      ? "${local.iter_542.output}${jsondecode(format("\"\\u%04x\"", local.iter_542.tape[local.iter_542.tape_ptr]))}"
      : local.iter_542.output)
    
    tape = (
      local.curr_543.code == "+"
        ? [for i, b in local.iter_542.tape : (i == local.iter_542.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_543.code == "-"
        ? [for i, b in local.iter_542.tape : (i == local.iter_542.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_543.code == ","
        ? [for i, b in local.iter_542.tape : (i == local.iter_542.tape_ptr ? local.ascii_lookup[local.curr_543.input] : b)]
        : local.iter_542.tape)

    tape_ptr = (
      local.curr_543.code == "<"
        ? local.iter_542.tape_ptr == 0 ? length(local.iter_542.tape) - 1 : local.iter_542.tape_ptr - 1 :
      local.curr_543.code == ">"
        ? local.iter_542.tape_ptr == length(local.iter_542.tape) - 1 ? 0 : local.iter_542.tape_ptr + 1
        : local.iter_542.tape_ptr)

    code_ptr = 1 + (
      local.curr_543.code == "["
        ? local.iter_542.tape[local.iter_542.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_542.code_ptr)] : local.iter_542.code_ptr :
      local.curr_543.code == "]"
        ? local.iter_542.tape[local.iter_542.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_542.code_ptr)] : local.iter_542.code_ptr
        : local.iter_542.code_ptr)

    steps_taken = 1 + local.iter_542.steps_taken
  }
}

locals {
  end_of_code_544 = try(local.iter_543.code_ptr >= length(var.code), true)

  curr_544 = local.end_of_code_544 ? null : {
    code = substr(var.code, local.iter_543.code_ptr, 1)
    input = substr(var.code, local.iter_543.code_ptr, 1) == "," ? substr(local.iter_543.input, 0, 1) : null
  }

  iter_544 = local.end_of_code_544 ? local.iter_543 : {
    input = (local.curr_544.code == ","
      ? substr(local.iter_543.input, 1, -1)
      : local.iter_543.input)

    output = (local.curr_544.code == "."
      ? "${local.iter_543.output}${jsondecode(format("\"\\u%04x\"", local.iter_543.tape[local.iter_543.tape_ptr]))}"
      : local.iter_543.output)
    
    tape = (
      local.curr_544.code == "+"
        ? [for i, b in local.iter_543.tape : (i == local.iter_543.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_544.code == "-"
        ? [for i, b in local.iter_543.tape : (i == local.iter_543.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_544.code == ","
        ? [for i, b in local.iter_543.tape : (i == local.iter_543.tape_ptr ? local.ascii_lookup[local.curr_544.input] : b)]
        : local.iter_543.tape)

    tape_ptr = (
      local.curr_544.code == "<"
        ? local.iter_543.tape_ptr == 0 ? length(local.iter_543.tape) - 1 : local.iter_543.tape_ptr - 1 :
      local.curr_544.code == ">"
        ? local.iter_543.tape_ptr == length(local.iter_543.tape) - 1 ? 0 : local.iter_543.tape_ptr + 1
        : local.iter_543.tape_ptr)

    code_ptr = 1 + (
      local.curr_544.code == "["
        ? local.iter_543.tape[local.iter_543.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_543.code_ptr)] : local.iter_543.code_ptr :
      local.curr_544.code == "]"
        ? local.iter_543.tape[local.iter_543.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_543.code_ptr)] : local.iter_543.code_ptr
        : local.iter_543.code_ptr)

    steps_taken = 1 + local.iter_543.steps_taken
  }
}

locals {
  end_of_code_545 = try(local.iter_544.code_ptr >= length(var.code), true)

  curr_545 = local.end_of_code_545 ? null : {
    code = substr(var.code, local.iter_544.code_ptr, 1)
    input = substr(var.code, local.iter_544.code_ptr, 1) == "," ? substr(local.iter_544.input, 0, 1) : null
  }

  iter_545 = local.end_of_code_545 ? local.iter_544 : {
    input = (local.curr_545.code == ","
      ? substr(local.iter_544.input, 1, -1)
      : local.iter_544.input)

    output = (local.curr_545.code == "."
      ? "${local.iter_544.output}${jsondecode(format("\"\\u%04x\"", local.iter_544.tape[local.iter_544.tape_ptr]))}"
      : local.iter_544.output)
    
    tape = (
      local.curr_545.code == "+"
        ? [for i, b in local.iter_544.tape : (i == local.iter_544.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_545.code == "-"
        ? [for i, b in local.iter_544.tape : (i == local.iter_544.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_545.code == ","
        ? [for i, b in local.iter_544.tape : (i == local.iter_544.tape_ptr ? local.ascii_lookup[local.curr_545.input] : b)]
        : local.iter_544.tape)

    tape_ptr = (
      local.curr_545.code == "<"
        ? local.iter_544.tape_ptr == 0 ? length(local.iter_544.tape) - 1 : local.iter_544.tape_ptr - 1 :
      local.curr_545.code == ">"
        ? local.iter_544.tape_ptr == length(local.iter_544.tape) - 1 ? 0 : local.iter_544.tape_ptr + 1
        : local.iter_544.tape_ptr)

    code_ptr = 1 + (
      local.curr_545.code == "["
        ? local.iter_544.tape[local.iter_544.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_544.code_ptr)] : local.iter_544.code_ptr :
      local.curr_545.code == "]"
        ? local.iter_544.tape[local.iter_544.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_544.code_ptr)] : local.iter_544.code_ptr
        : local.iter_544.code_ptr)

    steps_taken = 1 + local.iter_544.steps_taken
  }
}

locals {
  end_of_code_546 = try(local.iter_545.code_ptr >= length(var.code), true)

  curr_546 = local.end_of_code_546 ? null : {
    code = substr(var.code, local.iter_545.code_ptr, 1)
    input = substr(var.code, local.iter_545.code_ptr, 1) == "," ? substr(local.iter_545.input, 0, 1) : null
  }

  iter_546 = local.end_of_code_546 ? local.iter_545 : {
    input = (local.curr_546.code == ","
      ? substr(local.iter_545.input, 1, -1)
      : local.iter_545.input)

    output = (local.curr_546.code == "."
      ? "${local.iter_545.output}${jsondecode(format("\"\\u%04x\"", local.iter_545.tape[local.iter_545.tape_ptr]))}"
      : local.iter_545.output)
    
    tape = (
      local.curr_546.code == "+"
        ? [for i, b in local.iter_545.tape : (i == local.iter_545.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_546.code == "-"
        ? [for i, b in local.iter_545.tape : (i == local.iter_545.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_546.code == ","
        ? [for i, b in local.iter_545.tape : (i == local.iter_545.tape_ptr ? local.ascii_lookup[local.curr_546.input] : b)]
        : local.iter_545.tape)

    tape_ptr = (
      local.curr_546.code == "<"
        ? local.iter_545.tape_ptr == 0 ? length(local.iter_545.tape) - 1 : local.iter_545.tape_ptr - 1 :
      local.curr_546.code == ">"
        ? local.iter_545.tape_ptr == length(local.iter_545.tape) - 1 ? 0 : local.iter_545.tape_ptr + 1
        : local.iter_545.tape_ptr)

    code_ptr = 1 + (
      local.curr_546.code == "["
        ? local.iter_545.tape[local.iter_545.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_545.code_ptr)] : local.iter_545.code_ptr :
      local.curr_546.code == "]"
        ? local.iter_545.tape[local.iter_545.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_545.code_ptr)] : local.iter_545.code_ptr
        : local.iter_545.code_ptr)

    steps_taken = 1 + local.iter_545.steps_taken
  }
}

locals {
  end_of_code_547 = try(local.iter_546.code_ptr >= length(var.code), true)

  curr_547 = local.end_of_code_547 ? null : {
    code = substr(var.code, local.iter_546.code_ptr, 1)
    input = substr(var.code, local.iter_546.code_ptr, 1) == "," ? substr(local.iter_546.input, 0, 1) : null
  }

  iter_547 = local.end_of_code_547 ? local.iter_546 : {
    input = (local.curr_547.code == ","
      ? substr(local.iter_546.input, 1, -1)
      : local.iter_546.input)

    output = (local.curr_547.code == "."
      ? "${local.iter_546.output}${jsondecode(format("\"\\u%04x\"", local.iter_546.tape[local.iter_546.tape_ptr]))}"
      : local.iter_546.output)
    
    tape = (
      local.curr_547.code == "+"
        ? [for i, b in local.iter_546.tape : (i == local.iter_546.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_547.code == "-"
        ? [for i, b in local.iter_546.tape : (i == local.iter_546.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_547.code == ","
        ? [for i, b in local.iter_546.tape : (i == local.iter_546.tape_ptr ? local.ascii_lookup[local.curr_547.input] : b)]
        : local.iter_546.tape)

    tape_ptr = (
      local.curr_547.code == "<"
        ? local.iter_546.tape_ptr == 0 ? length(local.iter_546.tape) - 1 : local.iter_546.tape_ptr - 1 :
      local.curr_547.code == ">"
        ? local.iter_546.tape_ptr == length(local.iter_546.tape) - 1 ? 0 : local.iter_546.tape_ptr + 1
        : local.iter_546.tape_ptr)

    code_ptr = 1 + (
      local.curr_547.code == "["
        ? local.iter_546.tape[local.iter_546.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_546.code_ptr)] : local.iter_546.code_ptr :
      local.curr_547.code == "]"
        ? local.iter_546.tape[local.iter_546.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_546.code_ptr)] : local.iter_546.code_ptr
        : local.iter_546.code_ptr)

    steps_taken = 1 + local.iter_546.steps_taken
  }
}

locals {
  end_of_code_548 = try(local.iter_547.code_ptr >= length(var.code), true)

  curr_548 = local.end_of_code_548 ? null : {
    code = substr(var.code, local.iter_547.code_ptr, 1)
    input = substr(var.code, local.iter_547.code_ptr, 1) == "," ? substr(local.iter_547.input, 0, 1) : null
  }

  iter_548 = local.end_of_code_548 ? local.iter_547 : {
    input = (local.curr_548.code == ","
      ? substr(local.iter_547.input, 1, -1)
      : local.iter_547.input)

    output = (local.curr_548.code == "."
      ? "${local.iter_547.output}${jsondecode(format("\"\\u%04x\"", local.iter_547.tape[local.iter_547.tape_ptr]))}"
      : local.iter_547.output)
    
    tape = (
      local.curr_548.code == "+"
        ? [for i, b in local.iter_547.tape : (i == local.iter_547.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_548.code == "-"
        ? [for i, b in local.iter_547.tape : (i == local.iter_547.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_548.code == ","
        ? [for i, b in local.iter_547.tape : (i == local.iter_547.tape_ptr ? local.ascii_lookup[local.curr_548.input] : b)]
        : local.iter_547.tape)

    tape_ptr = (
      local.curr_548.code == "<"
        ? local.iter_547.tape_ptr == 0 ? length(local.iter_547.tape) - 1 : local.iter_547.tape_ptr - 1 :
      local.curr_548.code == ">"
        ? local.iter_547.tape_ptr == length(local.iter_547.tape) - 1 ? 0 : local.iter_547.tape_ptr + 1
        : local.iter_547.tape_ptr)

    code_ptr = 1 + (
      local.curr_548.code == "["
        ? local.iter_547.tape[local.iter_547.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_547.code_ptr)] : local.iter_547.code_ptr :
      local.curr_548.code == "]"
        ? local.iter_547.tape[local.iter_547.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_547.code_ptr)] : local.iter_547.code_ptr
        : local.iter_547.code_ptr)

    steps_taken = 1 + local.iter_547.steps_taken
  }
}

locals {
  end_of_code_549 = try(local.iter_548.code_ptr >= length(var.code), true)

  curr_549 = local.end_of_code_549 ? null : {
    code = substr(var.code, local.iter_548.code_ptr, 1)
    input = substr(var.code, local.iter_548.code_ptr, 1) == "," ? substr(local.iter_548.input, 0, 1) : null
  }

  iter_549 = local.end_of_code_549 ? local.iter_548 : {
    input = (local.curr_549.code == ","
      ? substr(local.iter_548.input, 1, -1)
      : local.iter_548.input)

    output = (local.curr_549.code == "."
      ? "${local.iter_548.output}${jsondecode(format("\"\\u%04x\"", local.iter_548.tape[local.iter_548.tape_ptr]))}"
      : local.iter_548.output)
    
    tape = (
      local.curr_549.code == "+"
        ? [for i, b in local.iter_548.tape : (i == local.iter_548.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_549.code == "-"
        ? [for i, b in local.iter_548.tape : (i == local.iter_548.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_549.code == ","
        ? [for i, b in local.iter_548.tape : (i == local.iter_548.tape_ptr ? local.ascii_lookup[local.curr_549.input] : b)]
        : local.iter_548.tape)

    tape_ptr = (
      local.curr_549.code == "<"
        ? local.iter_548.tape_ptr == 0 ? length(local.iter_548.tape) - 1 : local.iter_548.tape_ptr - 1 :
      local.curr_549.code == ">"
        ? local.iter_548.tape_ptr == length(local.iter_548.tape) - 1 ? 0 : local.iter_548.tape_ptr + 1
        : local.iter_548.tape_ptr)

    code_ptr = 1 + (
      local.curr_549.code == "["
        ? local.iter_548.tape[local.iter_548.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_548.code_ptr)] : local.iter_548.code_ptr :
      local.curr_549.code == "]"
        ? local.iter_548.tape[local.iter_548.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_548.code_ptr)] : local.iter_548.code_ptr
        : local.iter_548.code_ptr)

    steps_taken = 1 + local.iter_548.steps_taken
  }
}

locals {
  end_of_code_550 = try(local.iter_549.code_ptr >= length(var.code), true)

  curr_550 = local.end_of_code_550 ? null : {
    code = substr(var.code, local.iter_549.code_ptr, 1)
    input = substr(var.code, local.iter_549.code_ptr, 1) == "," ? substr(local.iter_549.input, 0, 1) : null
  }

  iter_550 = local.end_of_code_550 ? local.iter_549 : {
    input = (local.curr_550.code == ","
      ? substr(local.iter_549.input, 1, -1)
      : local.iter_549.input)

    output = (local.curr_550.code == "."
      ? "${local.iter_549.output}${jsondecode(format("\"\\u%04x\"", local.iter_549.tape[local.iter_549.tape_ptr]))}"
      : local.iter_549.output)
    
    tape = (
      local.curr_550.code == "+"
        ? [for i, b in local.iter_549.tape : (i == local.iter_549.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_550.code == "-"
        ? [for i, b in local.iter_549.tape : (i == local.iter_549.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_550.code == ","
        ? [for i, b in local.iter_549.tape : (i == local.iter_549.tape_ptr ? local.ascii_lookup[local.curr_550.input] : b)]
        : local.iter_549.tape)

    tape_ptr = (
      local.curr_550.code == "<"
        ? local.iter_549.tape_ptr == 0 ? length(local.iter_549.tape) - 1 : local.iter_549.tape_ptr - 1 :
      local.curr_550.code == ">"
        ? local.iter_549.tape_ptr == length(local.iter_549.tape) - 1 ? 0 : local.iter_549.tape_ptr + 1
        : local.iter_549.tape_ptr)

    code_ptr = 1 + (
      local.curr_550.code == "["
        ? local.iter_549.tape[local.iter_549.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_549.code_ptr)] : local.iter_549.code_ptr :
      local.curr_550.code == "]"
        ? local.iter_549.tape[local.iter_549.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_549.code_ptr)] : local.iter_549.code_ptr
        : local.iter_549.code_ptr)

    steps_taken = 1 + local.iter_549.steps_taken
  }
}

locals {
  end_of_code_551 = try(local.iter_550.code_ptr >= length(var.code), true)

  curr_551 = local.end_of_code_551 ? null : {
    code = substr(var.code, local.iter_550.code_ptr, 1)
    input = substr(var.code, local.iter_550.code_ptr, 1) == "," ? substr(local.iter_550.input, 0, 1) : null
  }

  iter_551 = local.end_of_code_551 ? local.iter_550 : {
    input = (local.curr_551.code == ","
      ? substr(local.iter_550.input, 1, -1)
      : local.iter_550.input)

    output = (local.curr_551.code == "."
      ? "${local.iter_550.output}${jsondecode(format("\"\\u%04x\"", local.iter_550.tape[local.iter_550.tape_ptr]))}"
      : local.iter_550.output)
    
    tape = (
      local.curr_551.code == "+"
        ? [for i, b in local.iter_550.tape : (i == local.iter_550.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_551.code == "-"
        ? [for i, b in local.iter_550.tape : (i == local.iter_550.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_551.code == ","
        ? [for i, b in local.iter_550.tape : (i == local.iter_550.tape_ptr ? local.ascii_lookup[local.curr_551.input] : b)]
        : local.iter_550.tape)

    tape_ptr = (
      local.curr_551.code == "<"
        ? local.iter_550.tape_ptr == 0 ? length(local.iter_550.tape) - 1 : local.iter_550.tape_ptr - 1 :
      local.curr_551.code == ">"
        ? local.iter_550.tape_ptr == length(local.iter_550.tape) - 1 ? 0 : local.iter_550.tape_ptr + 1
        : local.iter_550.tape_ptr)

    code_ptr = 1 + (
      local.curr_551.code == "["
        ? local.iter_550.tape[local.iter_550.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_550.code_ptr)] : local.iter_550.code_ptr :
      local.curr_551.code == "]"
        ? local.iter_550.tape[local.iter_550.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_550.code_ptr)] : local.iter_550.code_ptr
        : local.iter_550.code_ptr)

    steps_taken = 1 + local.iter_550.steps_taken
  }
}

locals {
  end_of_code_552 = try(local.iter_551.code_ptr >= length(var.code), true)

  curr_552 = local.end_of_code_552 ? null : {
    code = substr(var.code, local.iter_551.code_ptr, 1)
    input = substr(var.code, local.iter_551.code_ptr, 1) == "," ? substr(local.iter_551.input, 0, 1) : null
  }

  iter_552 = local.end_of_code_552 ? local.iter_551 : {
    input = (local.curr_552.code == ","
      ? substr(local.iter_551.input, 1, -1)
      : local.iter_551.input)

    output = (local.curr_552.code == "."
      ? "${local.iter_551.output}${jsondecode(format("\"\\u%04x\"", local.iter_551.tape[local.iter_551.tape_ptr]))}"
      : local.iter_551.output)
    
    tape = (
      local.curr_552.code == "+"
        ? [for i, b in local.iter_551.tape : (i == local.iter_551.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_552.code == "-"
        ? [for i, b in local.iter_551.tape : (i == local.iter_551.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_552.code == ","
        ? [for i, b in local.iter_551.tape : (i == local.iter_551.tape_ptr ? local.ascii_lookup[local.curr_552.input] : b)]
        : local.iter_551.tape)

    tape_ptr = (
      local.curr_552.code == "<"
        ? local.iter_551.tape_ptr == 0 ? length(local.iter_551.tape) - 1 : local.iter_551.tape_ptr - 1 :
      local.curr_552.code == ">"
        ? local.iter_551.tape_ptr == length(local.iter_551.tape) - 1 ? 0 : local.iter_551.tape_ptr + 1
        : local.iter_551.tape_ptr)

    code_ptr = 1 + (
      local.curr_552.code == "["
        ? local.iter_551.tape[local.iter_551.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_551.code_ptr)] : local.iter_551.code_ptr :
      local.curr_552.code == "]"
        ? local.iter_551.tape[local.iter_551.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_551.code_ptr)] : local.iter_551.code_ptr
        : local.iter_551.code_ptr)

    steps_taken = 1 + local.iter_551.steps_taken
  }
}

locals {
  end_of_code_553 = try(local.iter_552.code_ptr >= length(var.code), true)

  curr_553 = local.end_of_code_553 ? null : {
    code = substr(var.code, local.iter_552.code_ptr, 1)
    input = substr(var.code, local.iter_552.code_ptr, 1) == "," ? substr(local.iter_552.input, 0, 1) : null
  }

  iter_553 = local.end_of_code_553 ? local.iter_552 : {
    input = (local.curr_553.code == ","
      ? substr(local.iter_552.input, 1, -1)
      : local.iter_552.input)

    output = (local.curr_553.code == "."
      ? "${local.iter_552.output}${jsondecode(format("\"\\u%04x\"", local.iter_552.tape[local.iter_552.tape_ptr]))}"
      : local.iter_552.output)
    
    tape = (
      local.curr_553.code == "+"
        ? [for i, b in local.iter_552.tape : (i == local.iter_552.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_553.code == "-"
        ? [for i, b in local.iter_552.tape : (i == local.iter_552.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_553.code == ","
        ? [for i, b in local.iter_552.tape : (i == local.iter_552.tape_ptr ? local.ascii_lookup[local.curr_553.input] : b)]
        : local.iter_552.tape)

    tape_ptr = (
      local.curr_553.code == "<"
        ? local.iter_552.tape_ptr == 0 ? length(local.iter_552.tape) - 1 : local.iter_552.tape_ptr - 1 :
      local.curr_553.code == ">"
        ? local.iter_552.tape_ptr == length(local.iter_552.tape) - 1 ? 0 : local.iter_552.tape_ptr + 1
        : local.iter_552.tape_ptr)

    code_ptr = 1 + (
      local.curr_553.code == "["
        ? local.iter_552.tape[local.iter_552.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_552.code_ptr)] : local.iter_552.code_ptr :
      local.curr_553.code == "]"
        ? local.iter_552.tape[local.iter_552.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_552.code_ptr)] : local.iter_552.code_ptr
        : local.iter_552.code_ptr)

    steps_taken = 1 + local.iter_552.steps_taken
  }
}

locals {
  end_of_code_554 = try(local.iter_553.code_ptr >= length(var.code), true)

  curr_554 = local.end_of_code_554 ? null : {
    code = substr(var.code, local.iter_553.code_ptr, 1)
    input = substr(var.code, local.iter_553.code_ptr, 1) == "," ? substr(local.iter_553.input, 0, 1) : null
  }

  iter_554 = local.end_of_code_554 ? local.iter_553 : {
    input = (local.curr_554.code == ","
      ? substr(local.iter_553.input, 1, -1)
      : local.iter_553.input)

    output = (local.curr_554.code == "."
      ? "${local.iter_553.output}${jsondecode(format("\"\\u%04x\"", local.iter_553.tape[local.iter_553.tape_ptr]))}"
      : local.iter_553.output)
    
    tape = (
      local.curr_554.code == "+"
        ? [for i, b in local.iter_553.tape : (i == local.iter_553.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_554.code == "-"
        ? [for i, b in local.iter_553.tape : (i == local.iter_553.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_554.code == ","
        ? [for i, b in local.iter_553.tape : (i == local.iter_553.tape_ptr ? local.ascii_lookup[local.curr_554.input] : b)]
        : local.iter_553.tape)

    tape_ptr = (
      local.curr_554.code == "<"
        ? local.iter_553.tape_ptr == 0 ? length(local.iter_553.tape) - 1 : local.iter_553.tape_ptr - 1 :
      local.curr_554.code == ">"
        ? local.iter_553.tape_ptr == length(local.iter_553.tape) - 1 ? 0 : local.iter_553.tape_ptr + 1
        : local.iter_553.tape_ptr)

    code_ptr = 1 + (
      local.curr_554.code == "["
        ? local.iter_553.tape[local.iter_553.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_553.code_ptr)] : local.iter_553.code_ptr :
      local.curr_554.code == "]"
        ? local.iter_553.tape[local.iter_553.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_553.code_ptr)] : local.iter_553.code_ptr
        : local.iter_553.code_ptr)

    steps_taken = 1 + local.iter_553.steps_taken
  }
}

locals {
  end_of_code_555 = try(local.iter_554.code_ptr >= length(var.code), true)

  curr_555 = local.end_of_code_555 ? null : {
    code = substr(var.code, local.iter_554.code_ptr, 1)
    input = substr(var.code, local.iter_554.code_ptr, 1) == "," ? substr(local.iter_554.input, 0, 1) : null
  }

  iter_555 = local.end_of_code_555 ? local.iter_554 : {
    input = (local.curr_555.code == ","
      ? substr(local.iter_554.input, 1, -1)
      : local.iter_554.input)

    output = (local.curr_555.code == "."
      ? "${local.iter_554.output}${jsondecode(format("\"\\u%04x\"", local.iter_554.tape[local.iter_554.tape_ptr]))}"
      : local.iter_554.output)
    
    tape = (
      local.curr_555.code == "+"
        ? [for i, b in local.iter_554.tape : (i == local.iter_554.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_555.code == "-"
        ? [for i, b in local.iter_554.tape : (i == local.iter_554.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_555.code == ","
        ? [for i, b in local.iter_554.tape : (i == local.iter_554.tape_ptr ? local.ascii_lookup[local.curr_555.input] : b)]
        : local.iter_554.tape)

    tape_ptr = (
      local.curr_555.code == "<"
        ? local.iter_554.tape_ptr == 0 ? length(local.iter_554.tape) - 1 : local.iter_554.tape_ptr - 1 :
      local.curr_555.code == ">"
        ? local.iter_554.tape_ptr == length(local.iter_554.tape) - 1 ? 0 : local.iter_554.tape_ptr + 1
        : local.iter_554.tape_ptr)

    code_ptr = 1 + (
      local.curr_555.code == "["
        ? local.iter_554.tape[local.iter_554.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_554.code_ptr)] : local.iter_554.code_ptr :
      local.curr_555.code == "]"
        ? local.iter_554.tape[local.iter_554.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_554.code_ptr)] : local.iter_554.code_ptr
        : local.iter_554.code_ptr)

    steps_taken = 1 + local.iter_554.steps_taken
  }
}

locals {
  end_of_code_556 = try(local.iter_555.code_ptr >= length(var.code), true)

  curr_556 = local.end_of_code_556 ? null : {
    code = substr(var.code, local.iter_555.code_ptr, 1)
    input = substr(var.code, local.iter_555.code_ptr, 1) == "," ? substr(local.iter_555.input, 0, 1) : null
  }

  iter_556 = local.end_of_code_556 ? local.iter_555 : {
    input = (local.curr_556.code == ","
      ? substr(local.iter_555.input, 1, -1)
      : local.iter_555.input)

    output = (local.curr_556.code == "."
      ? "${local.iter_555.output}${jsondecode(format("\"\\u%04x\"", local.iter_555.tape[local.iter_555.tape_ptr]))}"
      : local.iter_555.output)
    
    tape = (
      local.curr_556.code == "+"
        ? [for i, b in local.iter_555.tape : (i == local.iter_555.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_556.code == "-"
        ? [for i, b in local.iter_555.tape : (i == local.iter_555.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_556.code == ","
        ? [for i, b in local.iter_555.tape : (i == local.iter_555.tape_ptr ? local.ascii_lookup[local.curr_556.input] : b)]
        : local.iter_555.tape)

    tape_ptr = (
      local.curr_556.code == "<"
        ? local.iter_555.tape_ptr == 0 ? length(local.iter_555.tape) - 1 : local.iter_555.tape_ptr - 1 :
      local.curr_556.code == ">"
        ? local.iter_555.tape_ptr == length(local.iter_555.tape) - 1 ? 0 : local.iter_555.tape_ptr + 1
        : local.iter_555.tape_ptr)

    code_ptr = 1 + (
      local.curr_556.code == "["
        ? local.iter_555.tape[local.iter_555.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_555.code_ptr)] : local.iter_555.code_ptr :
      local.curr_556.code == "]"
        ? local.iter_555.tape[local.iter_555.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_555.code_ptr)] : local.iter_555.code_ptr
        : local.iter_555.code_ptr)

    steps_taken = 1 + local.iter_555.steps_taken
  }
}

locals {
  end_of_code_557 = try(local.iter_556.code_ptr >= length(var.code), true)

  curr_557 = local.end_of_code_557 ? null : {
    code = substr(var.code, local.iter_556.code_ptr, 1)
    input = substr(var.code, local.iter_556.code_ptr, 1) == "," ? substr(local.iter_556.input, 0, 1) : null
  }

  iter_557 = local.end_of_code_557 ? local.iter_556 : {
    input = (local.curr_557.code == ","
      ? substr(local.iter_556.input, 1, -1)
      : local.iter_556.input)

    output = (local.curr_557.code == "."
      ? "${local.iter_556.output}${jsondecode(format("\"\\u%04x\"", local.iter_556.tape[local.iter_556.tape_ptr]))}"
      : local.iter_556.output)
    
    tape = (
      local.curr_557.code == "+"
        ? [for i, b in local.iter_556.tape : (i == local.iter_556.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_557.code == "-"
        ? [for i, b in local.iter_556.tape : (i == local.iter_556.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_557.code == ","
        ? [for i, b in local.iter_556.tape : (i == local.iter_556.tape_ptr ? local.ascii_lookup[local.curr_557.input] : b)]
        : local.iter_556.tape)

    tape_ptr = (
      local.curr_557.code == "<"
        ? local.iter_556.tape_ptr == 0 ? length(local.iter_556.tape) - 1 : local.iter_556.tape_ptr - 1 :
      local.curr_557.code == ">"
        ? local.iter_556.tape_ptr == length(local.iter_556.tape) - 1 ? 0 : local.iter_556.tape_ptr + 1
        : local.iter_556.tape_ptr)

    code_ptr = 1 + (
      local.curr_557.code == "["
        ? local.iter_556.tape[local.iter_556.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_556.code_ptr)] : local.iter_556.code_ptr :
      local.curr_557.code == "]"
        ? local.iter_556.tape[local.iter_556.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_556.code_ptr)] : local.iter_556.code_ptr
        : local.iter_556.code_ptr)

    steps_taken = 1 + local.iter_556.steps_taken
  }
}

locals {
  end_of_code_558 = try(local.iter_557.code_ptr >= length(var.code), true)

  curr_558 = local.end_of_code_558 ? null : {
    code = substr(var.code, local.iter_557.code_ptr, 1)
    input = substr(var.code, local.iter_557.code_ptr, 1) == "," ? substr(local.iter_557.input, 0, 1) : null
  }

  iter_558 = local.end_of_code_558 ? local.iter_557 : {
    input = (local.curr_558.code == ","
      ? substr(local.iter_557.input, 1, -1)
      : local.iter_557.input)

    output = (local.curr_558.code == "."
      ? "${local.iter_557.output}${jsondecode(format("\"\\u%04x\"", local.iter_557.tape[local.iter_557.tape_ptr]))}"
      : local.iter_557.output)
    
    tape = (
      local.curr_558.code == "+"
        ? [for i, b in local.iter_557.tape : (i == local.iter_557.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_558.code == "-"
        ? [for i, b in local.iter_557.tape : (i == local.iter_557.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_558.code == ","
        ? [for i, b in local.iter_557.tape : (i == local.iter_557.tape_ptr ? local.ascii_lookup[local.curr_558.input] : b)]
        : local.iter_557.tape)

    tape_ptr = (
      local.curr_558.code == "<"
        ? local.iter_557.tape_ptr == 0 ? length(local.iter_557.tape) - 1 : local.iter_557.tape_ptr - 1 :
      local.curr_558.code == ">"
        ? local.iter_557.tape_ptr == length(local.iter_557.tape) - 1 ? 0 : local.iter_557.tape_ptr + 1
        : local.iter_557.tape_ptr)

    code_ptr = 1 + (
      local.curr_558.code == "["
        ? local.iter_557.tape[local.iter_557.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_557.code_ptr)] : local.iter_557.code_ptr :
      local.curr_558.code == "]"
        ? local.iter_557.tape[local.iter_557.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_557.code_ptr)] : local.iter_557.code_ptr
        : local.iter_557.code_ptr)

    steps_taken = 1 + local.iter_557.steps_taken
  }
}

locals {
  end_of_code_559 = try(local.iter_558.code_ptr >= length(var.code), true)

  curr_559 = local.end_of_code_559 ? null : {
    code = substr(var.code, local.iter_558.code_ptr, 1)
    input = substr(var.code, local.iter_558.code_ptr, 1) == "," ? substr(local.iter_558.input, 0, 1) : null
  }

  iter_559 = local.end_of_code_559 ? local.iter_558 : {
    input = (local.curr_559.code == ","
      ? substr(local.iter_558.input, 1, -1)
      : local.iter_558.input)

    output = (local.curr_559.code == "."
      ? "${local.iter_558.output}${jsondecode(format("\"\\u%04x\"", local.iter_558.tape[local.iter_558.tape_ptr]))}"
      : local.iter_558.output)
    
    tape = (
      local.curr_559.code == "+"
        ? [for i, b in local.iter_558.tape : (i == local.iter_558.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_559.code == "-"
        ? [for i, b in local.iter_558.tape : (i == local.iter_558.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_559.code == ","
        ? [for i, b in local.iter_558.tape : (i == local.iter_558.tape_ptr ? local.ascii_lookup[local.curr_559.input] : b)]
        : local.iter_558.tape)

    tape_ptr = (
      local.curr_559.code == "<"
        ? local.iter_558.tape_ptr == 0 ? length(local.iter_558.tape) - 1 : local.iter_558.tape_ptr - 1 :
      local.curr_559.code == ">"
        ? local.iter_558.tape_ptr == length(local.iter_558.tape) - 1 ? 0 : local.iter_558.tape_ptr + 1
        : local.iter_558.tape_ptr)

    code_ptr = 1 + (
      local.curr_559.code == "["
        ? local.iter_558.tape[local.iter_558.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_558.code_ptr)] : local.iter_558.code_ptr :
      local.curr_559.code == "]"
        ? local.iter_558.tape[local.iter_558.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_558.code_ptr)] : local.iter_558.code_ptr
        : local.iter_558.code_ptr)

    steps_taken = 1 + local.iter_558.steps_taken
  }
}

locals {
  end_of_code_560 = try(local.iter_559.code_ptr >= length(var.code), true)

  curr_560 = local.end_of_code_560 ? null : {
    code = substr(var.code, local.iter_559.code_ptr, 1)
    input = substr(var.code, local.iter_559.code_ptr, 1) == "," ? substr(local.iter_559.input, 0, 1) : null
  }

  iter_560 = local.end_of_code_560 ? local.iter_559 : {
    input = (local.curr_560.code == ","
      ? substr(local.iter_559.input, 1, -1)
      : local.iter_559.input)

    output = (local.curr_560.code == "."
      ? "${local.iter_559.output}${jsondecode(format("\"\\u%04x\"", local.iter_559.tape[local.iter_559.tape_ptr]))}"
      : local.iter_559.output)
    
    tape = (
      local.curr_560.code == "+"
        ? [for i, b in local.iter_559.tape : (i == local.iter_559.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_560.code == "-"
        ? [for i, b in local.iter_559.tape : (i == local.iter_559.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_560.code == ","
        ? [for i, b in local.iter_559.tape : (i == local.iter_559.tape_ptr ? local.ascii_lookup[local.curr_560.input] : b)]
        : local.iter_559.tape)

    tape_ptr = (
      local.curr_560.code == "<"
        ? local.iter_559.tape_ptr == 0 ? length(local.iter_559.tape) - 1 : local.iter_559.tape_ptr - 1 :
      local.curr_560.code == ">"
        ? local.iter_559.tape_ptr == length(local.iter_559.tape) - 1 ? 0 : local.iter_559.tape_ptr + 1
        : local.iter_559.tape_ptr)

    code_ptr = 1 + (
      local.curr_560.code == "["
        ? local.iter_559.tape[local.iter_559.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_559.code_ptr)] : local.iter_559.code_ptr :
      local.curr_560.code == "]"
        ? local.iter_559.tape[local.iter_559.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_559.code_ptr)] : local.iter_559.code_ptr
        : local.iter_559.code_ptr)

    steps_taken = 1 + local.iter_559.steps_taken
  }
}

locals {
  end_of_code_561 = try(local.iter_560.code_ptr >= length(var.code), true)

  curr_561 = local.end_of_code_561 ? null : {
    code = substr(var.code, local.iter_560.code_ptr, 1)
    input = substr(var.code, local.iter_560.code_ptr, 1) == "," ? substr(local.iter_560.input, 0, 1) : null
  }

  iter_561 = local.end_of_code_561 ? local.iter_560 : {
    input = (local.curr_561.code == ","
      ? substr(local.iter_560.input, 1, -1)
      : local.iter_560.input)

    output = (local.curr_561.code == "."
      ? "${local.iter_560.output}${jsondecode(format("\"\\u%04x\"", local.iter_560.tape[local.iter_560.tape_ptr]))}"
      : local.iter_560.output)
    
    tape = (
      local.curr_561.code == "+"
        ? [for i, b in local.iter_560.tape : (i == local.iter_560.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_561.code == "-"
        ? [for i, b in local.iter_560.tape : (i == local.iter_560.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_561.code == ","
        ? [for i, b in local.iter_560.tape : (i == local.iter_560.tape_ptr ? local.ascii_lookup[local.curr_561.input] : b)]
        : local.iter_560.tape)

    tape_ptr = (
      local.curr_561.code == "<"
        ? local.iter_560.tape_ptr == 0 ? length(local.iter_560.tape) - 1 : local.iter_560.tape_ptr - 1 :
      local.curr_561.code == ">"
        ? local.iter_560.tape_ptr == length(local.iter_560.tape) - 1 ? 0 : local.iter_560.tape_ptr + 1
        : local.iter_560.tape_ptr)

    code_ptr = 1 + (
      local.curr_561.code == "["
        ? local.iter_560.tape[local.iter_560.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_560.code_ptr)] : local.iter_560.code_ptr :
      local.curr_561.code == "]"
        ? local.iter_560.tape[local.iter_560.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_560.code_ptr)] : local.iter_560.code_ptr
        : local.iter_560.code_ptr)

    steps_taken = 1 + local.iter_560.steps_taken
  }
}

locals {
  end_of_code_562 = try(local.iter_561.code_ptr >= length(var.code), true)

  curr_562 = local.end_of_code_562 ? null : {
    code = substr(var.code, local.iter_561.code_ptr, 1)
    input = substr(var.code, local.iter_561.code_ptr, 1) == "," ? substr(local.iter_561.input, 0, 1) : null
  }

  iter_562 = local.end_of_code_562 ? local.iter_561 : {
    input = (local.curr_562.code == ","
      ? substr(local.iter_561.input, 1, -1)
      : local.iter_561.input)

    output = (local.curr_562.code == "."
      ? "${local.iter_561.output}${jsondecode(format("\"\\u%04x\"", local.iter_561.tape[local.iter_561.tape_ptr]))}"
      : local.iter_561.output)
    
    tape = (
      local.curr_562.code == "+"
        ? [for i, b in local.iter_561.tape : (i == local.iter_561.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_562.code == "-"
        ? [for i, b in local.iter_561.tape : (i == local.iter_561.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_562.code == ","
        ? [for i, b in local.iter_561.tape : (i == local.iter_561.tape_ptr ? local.ascii_lookup[local.curr_562.input] : b)]
        : local.iter_561.tape)

    tape_ptr = (
      local.curr_562.code == "<"
        ? local.iter_561.tape_ptr == 0 ? length(local.iter_561.tape) - 1 : local.iter_561.tape_ptr - 1 :
      local.curr_562.code == ">"
        ? local.iter_561.tape_ptr == length(local.iter_561.tape) - 1 ? 0 : local.iter_561.tape_ptr + 1
        : local.iter_561.tape_ptr)

    code_ptr = 1 + (
      local.curr_562.code == "["
        ? local.iter_561.tape[local.iter_561.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_561.code_ptr)] : local.iter_561.code_ptr :
      local.curr_562.code == "]"
        ? local.iter_561.tape[local.iter_561.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_561.code_ptr)] : local.iter_561.code_ptr
        : local.iter_561.code_ptr)

    steps_taken = 1 + local.iter_561.steps_taken
  }
}

locals {
  end_of_code_563 = try(local.iter_562.code_ptr >= length(var.code), true)

  curr_563 = local.end_of_code_563 ? null : {
    code = substr(var.code, local.iter_562.code_ptr, 1)
    input = substr(var.code, local.iter_562.code_ptr, 1) == "," ? substr(local.iter_562.input, 0, 1) : null
  }

  iter_563 = local.end_of_code_563 ? local.iter_562 : {
    input = (local.curr_563.code == ","
      ? substr(local.iter_562.input, 1, -1)
      : local.iter_562.input)

    output = (local.curr_563.code == "."
      ? "${local.iter_562.output}${jsondecode(format("\"\\u%04x\"", local.iter_562.tape[local.iter_562.tape_ptr]))}"
      : local.iter_562.output)
    
    tape = (
      local.curr_563.code == "+"
        ? [for i, b in local.iter_562.tape : (i == local.iter_562.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_563.code == "-"
        ? [for i, b in local.iter_562.tape : (i == local.iter_562.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_563.code == ","
        ? [for i, b in local.iter_562.tape : (i == local.iter_562.tape_ptr ? local.ascii_lookup[local.curr_563.input] : b)]
        : local.iter_562.tape)

    tape_ptr = (
      local.curr_563.code == "<"
        ? local.iter_562.tape_ptr == 0 ? length(local.iter_562.tape) - 1 : local.iter_562.tape_ptr - 1 :
      local.curr_563.code == ">"
        ? local.iter_562.tape_ptr == length(local.iter_562.tape) - 1 ? 0 : local.iter_562.tape_ptr + 1
        : local.iter_562.tape_ptr)

    code_ptr = 1 + (
      local.curr_563.code == "["
        ? local.iter_562.tape[local.iter_562.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_562.code_ptr)] : local.iter_562.code_ptr :
      local.curr_563.code == "]"
        ? local.iter_562.tape[local.iter_562.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_562.code_ptr)] : local.iter_562.code_ptr
        : local.iter_562.code_ptr)

    steps_taken = 1 + local.iter_562.steps_taken
  }
}

locals {
  end_of_code_564 = try(local.iter_563.code_ptr >= length(var.code), true)

  curr_564 = local.end_of_code_564 ? null : {
    code = substr(var.code, local.iter_563.code_ptr, 1)
    input = substr(var.code, local.iter_563.code_ptr, 1) == "," ? substr(local.iter_563.input, 0, 1) : null
  }

  iter_564 = local.end_of_code_564 ? local.iter_563 : {
    input = (local.curr_564.code == ","
      ? substr(local.iter_563.input, 1, -1)
      : local.iter_563.input)

    output = (local.curr_564.code == "."
      ? "${local.iter_563.output}${jsondecode(format("\"\\u%04x\"", local.iter_563.tape[local.iter_563.tape_ptr]))}"
      : local.iter_563.output)
    
    tape = (
      local.curr_564.code == "+"
        ? [for i, b in local.iter_563.tape : (i == local.iter_563.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_564.code == "-"
        ? [for i, b in local.iter_563.tape : (i == local.iter_563.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_564.code == ","
        ? [for i, b in local.iter_563.tape : (i == local.iter_563.tape_ptr ? local.ascii_lookup[local.curr_564.input] : b)]
        : local.iter_563.tape)

    tape_ptr = (
      local.curr_564.code == "<"
        ? local.iter_563.tape_ptr == 0 ? length(local.iter_563.tape) - 1 : local.iter_563.tape_ptr - 1 :
      local.curr_564.code == ">"
        ? local.iter_563.tape_ptr == length(local.iter_563.tape) - 1 ? 0 : local.iter_563.tape_ptr + 1
        : local.iter_563.tape_ptr)

    code_ptr = 1 + (
      local.curr_564.code == "["
        ? local.iter_563.tape[local.iter_563.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_563.code_ptr)] : local.iter_563.code_ptr :
      local.curr_564.code == "]"
        ? local.iter_563.tape[local.iter_563.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_563.code_ptr)] : local.iter_563.code_ptr
        : local.iter_563.code_ptr)

    steps_taken = 1 + local.iter_563.steps_taken
  }
}

locals {
  end_of_code_565 = try(local.iter_564.code_ptr >= length(var.code), true)

  curr_565 = local.end_of_code_565 ? null : {
    code = substr(var.code, local.iter_564.code_ptr, 1)
    input = substr(var.code, local.iter_564.code_ptr, 1) == "," ? substr(local.iter_564.input, 0, 1) : null
  }

  iter_565 = local.end_of_code_565 ? local.iter_564 : {
    input = (local.curr_565.code == ","
      ? substr(local.iter_564.input, 1, -1)
      : local.iter_564.input)

    output = (local.curr_565.code == "."
      ? "${local.iter_564.output}${jsondecode(format("\"\\u%04x\"", local.iter_564.tape[local.iter_564.tape_ptr]))}"
      : local.iter_564.output)
    
    tape = (
      local.curr_565.code == "+"
        ? [for i, b in local.iter_564.tape : (i == local.iter_564.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_565.code == "-"
        ? [for i, b in local.iter_564.tape : (i == local.iter_564.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_565.code == ","
        ? [for i, b in local.iter_564.tape : (i == local.iter_564.tape_ptr ? local.ascii_lookup[local.curr_565.input] : b)]
        : local.iter_564.tape)

    tape_ptr = (
      local.curr_565.code == "<"
        ? local.iter_564.tape_ptr == 0 ? length(local.iter_564.tape) - 1 : local.iter_564.tape_ptr - 1 :
      local.curr_565.code == ">"
        ? local.iter_564.tape_ptr == length(local.iter_564.tape) - 1 ? 0 : local.iter_564.tape_ptr + 1
        : local.iter_564.tape_ptr)

    code_ptr = 1 + (
      local.curr_565.code == "["
        ? local.iter_564.tape[local.iter_564.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_564.code_ptr)] : local.iter_564.code_ptr :
      local.curr_565.code == "]"
        ? local.iter_564.tape[local.iter_564.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_564.code_ptr)] : local.iter_564.code_ptr
        : local.iter_564.code_ptr)

    steps_taken = 1 + local.iter_564.steps_taken
  }
}

locals {
  end_of_code_566 = try(local.iter_565.code_ptr >= length(var.code), true)

  curr_566 = local.end_of_code_566 ? null : {
    code = substr(var.code, local.iter_565.code_ptr, 1)
    input = substr(var.code, local.iter_565.code_ptr, 1) == "," ? substr(local.iter_565.input, 0, 1) : null
  }

  iter_566 = local.end_of_code_566 ? local.iter_565 : {
    input = (local.curr_566.code == ","
      ? substr(local.iter_565.input, 1, -1)
      : local.iter_565.input)

    output = (local.curr_566.code == "."
      ? "${local.iter_565.output}${jsondecode(format("\"\\u%04x\"", local.iter_565.tape[local.iter_565.tape_ptr]))}"
      : local.iter_565.output)
    
    tape = (
      local.curr_566.code == "+"
        ? [for i, b in local.iter_565.tape : (i == local.iter_565.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_566.code == "-"
        ? [for i, b in local.iter_565.tape : (i == local.iter_565.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_566.code == ","
        ? [for i, b in local.iter_565.tape : (i == local.iter_565.tape_ptr ? local.ascii_lookup[local.curr_566.input] : b)]
        : local.iter_565.tape)

    tape_ptr = (
      local.curr_566.code == "<"
        ? local.iter_565.tape_ptr == 0 ? length(local.iter_565.tape) - 1 : local.iter_565.tape_ptr - 1 :
      local.curr_566.code == ">"
        ? local.iter_565.tape_ptr == length(local.iter_565.tape) - 1 ? 0 : local.iter_565.tape_ptr + 1
        : local.iter_565.tape_ptr)

    code_ptr = 1 + (
      local.curr_566.code == "["
        ? local.iter_565.tape[local.iter_565.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_565.code_ptr)] : local.iter_565.code_ptr :
      local.curr_566.code == "]"
        ? local.iter_565.tape[local.iter_565.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_565.code_ptr)] : local.iter_565.code_ptr
        : local.iter_565.code_ptr)

    steps_taken = 1 + local.iter_565.steps_taken
  }
}

locals {
  end_of_code_567 = try(local.iter_566.code_ptr >= length(var.code), true)

  curr_567 = local.end_of_code_567 ? null : {
    code = substr(var.code, local.iter_566.code_ptr, 1)
    input = substr(var.code, local.iter_566.code_ptr, 1) == "," ? substr(local.iter_566.input, 0, 1) : null
  }

  iter_567 = local.end_of_code_567 ? local.iter_566 : {
    input = (local.curr_567.code == ","
      ? substr(local.iter_566.input, 1, -1)
      : local.iter_566.input)

    output = (local.curr_567.code == "."
      ? "${local.iter_566.output}${jsondecode(format("\"\\u%04x\"", local.iter_566.tape[local.iter_566.tape_ptr]))}"
      : local.iter_566.output)
    
    tape = (
      local.curr_567.code == "+"
        ? [for i, b in local.iter_566.tape : (i == local.iter_566.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_567.code == "-"
        ? [for i, b in local.iter_566.tape : (i == local.iter_566.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_567.code == ","
        ? [for i, b in local.iter_566.tape : (i == local.iter_566.tape_ptr ? local.ascii_lookup[local.curr_567.input] : b)]
        : local.iter_566.tape)

    tape_ptr = (
      local.curr_567.code == "<"
        ? local.iter_566.tape_ptr == 0 ? length(local.iter_566.tape) - 1 : local.iter_566.tape_ptr - 1 :
      local.curr_567.code == ">"
        ? local.iter_566.tape_ptr == length(local.iter_566.tape) - 1 ? 0 : local.iter_566.tape_ptr + 1
        : local.iter_566.tape_ptr)

    code_ptr = 1 + (
      local.curr_567.code == "["
        ? local.iter_566.tape[local.iter_566.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_566.code_ptr)] : local.iter_566.code_ptr :
      local.curr_567.code == "]"
        ? local.iter_566.tape[local.iter_566.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_566.code_ptr)] : local.iter_566.code_ptr
        : local.iter_566.code_ptr)

    steps_taken = 1 + local.iter_566.steps_taken
  }
}

locals {
  end_of_code_568 = try(local.iter_567.code_ptr >= length(var.code), true)

  curr_568 = local.end_of_code_568 ? null : {
    code = substr(var.code, local.iter_567.code_ptr, 1)
    input = substr(var.code, local.iter_567.code_ptr, 1) == "," ? substr(local.iter_567.input, 0, 1) : null
  }

  iter_568 = local.end_of_code_568 ? local.iter_567 : {
    input = (local.curr_568.code == ","
      ? substr(local.iter_567.input, 1, -1)
      : local.iter_567.input)

    output = (local.curr_568.code == "."
      ? "${local.iter_567.output}${jsondecode(format("\"\\u%04x\"", local.iter_567.tape[local.iter_567.tape_ptr]))}"
      : local.iter_567.output)
    
    tape = (
      local.curr_568.code == "+"
        ? [for i, b in local.iter_567.tape : (i == local.iter_567.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_568.code == "-"
        ? [for i, b in local.iter_567.tape : (i == local.iter_567.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_568.code == ","
        ? [for i, b in local.iter_567.tape : (i == local.iter_567.tape_ptr ? local.ascii_lookup[local.curr_568.input] : b)]
        : local.iter_567.tape)

    tape_ptr = (
      local.curr_568.code == "<"
        ? local.iter_567.tape_ptr == 0 ? length(local.iter_567.tape) - 1 : local.iter_567.tape_ptr - 1 :
      local.curr_568.code == ">"
        ? local.iter_567.tape_ptr == length(local.iter_567.tape) - 1 ? 0 : local.iter_567.tape_ptr + 1
        : local.iter_567.tape_ptr)

    code_ptr = 1 + (
      local.curr_568.code == "["
        ? local.iter_567.tape[local.iter_567.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_567.code_ptr)] : local.iter_567.code_ptr :
      local.curr_568.code == "]"
        ? local.iter_567.tape[local.iter_567.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_567.code_ptr)] : local.iter_567.code_ptr
        : local.iter_567.code_ptr)

    steps_taken = 1 + local.iter_567.steps_taken
  }
}

locals {
  end_of_code_569 = try(local.iter_568.code_ptr >= length(var.code), true)

  curr_569 = local.end_of_code_569 ? null : {
    code = substr(var.code, local.iter_568.code_ptr, 1)
    input = substr(var.code, local.iter_568.code_ptr, 1) == "," ? substr(local.iter_568.input, 0, 1) : null
  }

  iter_569 = local.end_of_code_569 ? local.iter_568 : {
    input = (local.curr_569.code == ","
      ? substr(local.iter_568.input, 1, -1)
      : local.iter_568.input)

    output = (local.curr_569.code == "."
      ? "${local.iter_568.output}${jsondecode(format("\"\\u%04x\"", local.iter_568.tape[local.iter_568.tape_ptr]))}"
      : local.iter_568.output)
    
    tape = (
      local.curr_569.code == "+"
        ? [for i, b in local.iter_568.tape : (i == local.iter_568.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_569.code == "-"
        ? [for i, b in local.iter_568.tape : (i == local.iter_568.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_569.code == ","
        ? [for i, b in local.iter_568.tape : (i == local.iter_568.tape_ptr ? local.ascii_lookup[local.curr_569.input] : b)]
        : local.iter_568.tape)

    tape_ptr = (
      local.curr_569.code == "<"
        ? local.iter_568.tape_ptr == 0 ? length(local.iter_568.tape) - 1 : local.iter_568.tape_ptr - 1 :
      local.curr_569.code == ">"
        ? local.iter_568.tape_ptr == length(local.iter_568.tape) - 1 ? 0 : local.iter_568.tape_ptr + 1
        : local.iter_568.tape_ptr)

    code_ptr = 1 + (
      local.curr_569.code == "["
        ? local.iter_568.tape[local.iter_568.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_568.code_ptr)] : local.iter_568.code_ptr :
      local.curr_569.code == "]"
        ? local.iter_568.tape[local.iter_568.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_568.code_ptr)] : local.iter_568.code_ptr
        : local.iter_568.code_ptr)

    steps_taken = 1 + local.iter_568.steps_taken
  }
}

locals {
  end_of_code_570 = try(local.iter_569.code_ptr >= length(var.code), true)

  curr_570 = local.end_of_code_570 ? null : {
    code = substr(var.code, local.iter_569.code_ptr, 1)
    input = substr(var.code, local.iter_569.code_ptr, 1) == "," ? substr(local.iter_569.input, 0, 1) : null
  }

  iter_570 = local.end_of_code_570 ? local.iter_569 : {
    input = (local.curr_570.code == ","
      ? substr(local.iter_569.input, 1, -1)
      : local.iter_569.input)

    output = (local.curr_570.code == "."
      ? "${local.iter_569.output}${jsondecode(format("\"\\u%04x\"", local.iter_569.tape[local.iter_569.tape_ptr]))}"
      : local.iter_569.output)
    
    tape = (
      local.curr_570.code == "+"
        ? [for i, b in local.iter_569.tape : (i == local.iter_569.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_570.code == "-"
        ? [for i, b in local.iter_569.tape : (i == local.iter_569.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_570.code == ","
        ? [for i, b in local.iter_569.tape : (i == local.iter_569.tape_ptr ? local.ascii_lookup[local.curr_570.input] : b)]
        : local.iter_569.tape)

    tape_ptr = (
      local.curr_570.code == "<"
        ? local.iter_569.tape_ptr == 0 ? length(local.iter_569.tape) - 1 : local.iter_569.tape_ptr - 1 :
      local.curr_570.code == ">"
        ? local.iter_569.tape_ptr == length(local.iter_569.tape) - 1 ? 0 : local.iter_569.tape_ptr + 1
        : local.iter_569.tape_ptr)

    code_ptr = 1 + (
      local.curr_570.code == "["
        ? local.iter_569.tape[local.iter_569.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_569.code_ptr)] : local.iter_569.code_ptr :
      local.curr_570.code == "]"
        ? local.iter_569.tape[local.iter_569.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_569.code_ptr)] : local.iter_569.code_ptr
        : local.iter_569.code_ptr)

    steps_taken = 1 + local.iter_569.steps_taken
  }
}

locals {
  end_of_code_571 = try(local.iter_570.code_ptr >= length(var.code), true)

  curr_571 = local.end_of_code_571 ? null : {
    code = substr(var.code, local.iter_570.code_ptr, 1)
    input = substr(var.code, local.iter_570.code_ptr, 1) == "," ? substr(local.iter_570.input, 0, 1) : null
  }

  iter_571 = local.end_of_code_571 ? local.iter_570 : {
    input = (local.curr_571.code == ","
      ? substr(local.iter_570.input, 1, -1)
      : local.iter_570.input)

    output = (local.curr_571.code == "."
      ? "${local.iter_570.output}${jsondecode(format("\"\\u%04x\"", local.iter_570.tape[local.iter_570.tape_ptr]))}"
      : local.iter_570.output)
    
    tape = (
      local.curr_571.code == "+"
        ? [for i, b in local.iter_570.tape : (i == local.iter_570.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_571.code == "-"
        ? [for i, b in local.iter_570.tape : (i == local.iter_570.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_571.code == ","
        ? [for i, b in local.iter_570.tape : (i == local.iter_570.tape_ptr ? local.ascii_lookup[local.curr_571.input] : b)]
        : local.iter_570.tape)

    tape_ptr = (
      local.curr_571.code == "<"
        ? local.iter_570.tape_ptr == 0 ? length(local.iter_570.tape) - 1 : local.iter_570.tape_ptr - 1 :
      local.curr_571.code == ">"
        ? local.iter_570.tape_ptr == length(local.iter_570.tape) - 1 ? 0 : local.iter_570.tape_ptr + 1
        : local.iter_570.tape_ptr)

    code_ptr = 1 + (
      local.curr_571.code == "["
        ? local.iter_570.tape[local.iter_570.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_570.code_ptr)] : local.iter_570.code_ptr :
      local.curr_571.code == "]"
        ? local.iter_570.tape[local.iter_570.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_570.code_ptr)] : local.iter_570.code_ptr
        : local.iter_570.code_ptr)

    steps_taken = 1 + local.iter_570.steps_taken
  }
}

locals {
  end_of_code_572 = try(local.iter_571.code_ptr >= length(var.code), true)

  curr_572 = local.end_of_code_572 ? null : {
    code = substr(var.code, local.iter_571.code_ptr, 1)
    input = substr(var.code, local.iter_571.code_ptr, 1) == "," ? substr(local.iter_571.input, 0, 1) : null
  }

  iter_572 = local.end_of_code_572 ? local.iter_571 : {
    input = (local.curr_572.code == ","
      ? substr(local.iter_571.input, 1, -1)
      : local.iter_571.input)

    output = (local.curr_572.code == "."
      ? "${local.iter_571.output}${jsondecode(format("\"\\u%04x\"", local.iter_571.tape[local.iter_571.tape_ptr]))}"
      : local.iter_571.output)
    
    tape = (
      local.curr_572.code == "+"
        ? [for i, b in local.iter_571.tape : (i == local.iter_571.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_572.code == "-"
        ? [for i, b in local.iter_571.tape : (i == local.iter_571.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_572.code == ","
        ? [for i, b in local.iter_571.tape : (i == local.iter_571.tape_ptr ? local.ascii_lookup[local.curr_572.input] : b)]
        : local.iter_571.tape)

    tape_ptr = (
      local.curr_572.code == "<"
        ? local.iter_571.tape_ptr == 0 ? length(local.iter_571.tape) - 1 : local.iter_571.tape_ptr - 1 :
      local.curr_572.code == ">"
        ? local.iter_571.tape_ptr == length(local.iter_571.tape) - 1 ? 0 : local.iter_571.tape_ptr + 1
        : local.iter_571.tape_ptr)

    code_ptr = 1 + (
      local.curr_572.code == "["
        ? local.iter_571.tape[local.iter_571.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_571.code_ptr)] : local.iter_571.code_ptr :
      local.curr_572.code == "]"
        ? local.iter_571.tape[local.iter_571.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_571.code_ptr)] : local.iter_571.code_ptr
        : local.iter_571.code_ptr)

    steps_taken = 1 + local.iter_571.steps_taken
  }
}

locals {
  end_of_code_573 = try(local.iter_572.code_ptr >= length(var.code), true)

  curr_573 = local.end_of_code_573 ? null : {
    code = substr(var.code, local.iter_572.code_ptr, 1)
    input = substr(var.code, local.iter_572.code_ptr, 1) == "," ? substr(local.iter_572.input, 0, 1) : null
  }

  iter_573 = local.end_of_code_573 ? local.iter_572 : {
    input = (local.curr_573.code == ","
      ? substr(local.iter_572.input, 1, -1)
      : local.iter_572.input)

    output = (local.curr_573.code == "."
      ? "${local.iter_572.output}${jsondecode(format("\"\\u%04x\"", local.iter_572.tape[local.iter_572.tape_ptr]))}"
      : local.iter_572.output)
    
    tape = (
      local.curr_573.code == "+"
        ? [for i, b in local.iter_572.tape : (i == local.iter_572.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_573.code == "-"
        ? [for i, b in local.iter_572.tape : (i == local.iter_572.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_573.code == ","
        ? [for i, b in local.iter_572.tape : (i == local.iter_572.tape_ptr ? local.ascii_lookup[local.curr_573.input] : b)]
        : local.iter_572.tape)

    tape_ptr = (
      local.curr_573.code == "<"
        ? local.iter_572.tape_ptr == 0 ? length(local.iter_572.tape) - 1 : local.iter_572.tape_ptr - 1 :
      local.curr_573.code == ">"
        ? local.iter_572.tape_ptr == length(local.iter_572.tape) - 1 ? 0 : local.iter_572.tape_ptr + 1
        : local.iter_572.tape_ptr)

    code_ptr = 1 + (
      local.curr_573.code == "["
        ? local.iter_572.tape[local.iter_572.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_572.code_ptr)] : local.iter_572.code_ptr :
      local.curr_573.code == "]"
        ? local.iter_572.tape[local.iter_572.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_572.code_ptr)] : local.iter_572.code_ptr
        : local.iter_572.code_ptr)

    steps_taken = 1 + local.iter_572.steps_taken
  }
}

locals {
  end_of_code_574 = try(local.iter_573.code_ptr >= length(var.code), true)

  curr_574 = local.end_of_code_574 ? null : {
    code = substr(var.code, local.iter_573.code_ptr, 1)
    input = substr(var.code, local.iter_573.code_ptr, 1) == "," ? substr(local.iter_573.input, 0, 1) : null
  }

  iter_574 = local.end_of_code_574 ? local.iter_573 : {
    input = (local.curr_574.code == ","
      ? substr(local.iter_573.input, 1, -1)
      : local.iter_573.input)

    output = (local.curr_574.code == "."
      ? "${local.iter_573.output}${jsondecode(format("\"\\u%04x\"", local.iter_573.tape[local.iter_573.tape_ptr]))}"
      : local.iter_573.output)
    
    tape = (
      local.curr_574.code == "+"
        ? [for i, b in local.iter_573.tape : (i == local.iter_573.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_574.code == "-"
        ? [for i, b in local.iter_573.tape : (i == local.iter_573.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_574.code == ","
        ? [for i, b in local.iter_573.tape : (i == local.iter_573.tape_ptr ? local.ascii_lookup[local.curr_574.input] : b)]
        : local.iter_573.tape)

    tape_ptr = (
      local.curr_574.code == "<"
        ? local.iter_573.tape_ptr == 0 ? length(local.iter_573.tape) - 1 : local.iter_573.tape_ptr - 1 :
      local.curr_574.code == ">"
        ? local.iter_573.tape_ptr == length(local.iter_573.tape) - 1 ? 0 : local.iter_573.tape_ptr + 1
        : local.iter_573.tape_ptr)

    code_ptr = 1 + (
      local.curr_574.code == "["
        ? local.iter_573.tape[local.iter_573.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_573.code_ptr)] : local.iter_573.code_ptr :
      local.curr_574.code == "]"
        ? local.iter_573.tape[local.iter_573.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_573.code_ptr)] : local.iter_573.code_ptr
        : local.iter_573.code_ptr)

    steps_taken = 1 + local.iter_573.steps_taken
  }
}

locals {
  end_of_code_575 = try(local.iter_574.code_ptr >= length(var.code), true)

  curr_575 = local.end_of_code_575 ? null : {
    code = substr(var.code, local.iter_574.code_ptr, 1)
    input = substr(var.code, local.iter_574.code_ptr, 1) == "," ? substr(local.iter_574.input, 0, 1) : null
  }

  iter_575 = local.end_of_code_575 ? local.iter_574 : {
    input = (local.curr_575.code == ","
      ? substr(local.iter_574.input, 1, -1)
      : local.iter_574.input)

    output = (local.curr_575.code == "."
      ? "${local.iter_574.output}${jsondecode(format("\"\\u%04x\"", local.iter_574.tape[local.iter_574.tape_ptr]))}"
      : local.iter_574.output)
    
    tape = (
      local.curr_575.code == "+"
        ? [for i, b in local.iter_574.tape : (i == local.iter_574.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_575.code == "-"
        ? [for i, b in local.iter_574.tape : (i == local.iter_574.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_575.code == ","
        ? [for i, b in local.iter_574.tape : (i == local.iter_574.tape_ptr ? local.ascii_lookup[local.curr_575.input] : b)]
        : local.iter_574.tape)

    tape_ptr = (
      local.curr_575.code == "<"
        ? local.iter_574.tape_ptr == 0 ? length(local.iter_574.tape) - 1 : local.iter_574.tape_ptr - 1 :
      local.curr_575.code == ">"
        ? local.iter_574.tape_ptr == length(local.iter_574.tape) - 1 ? 0 : local.iter_574.tape_ptr + 1
        : local.iter_574.tape_ptr)

    code_ptr = 1 + (
      local.curr_575.code == "["
        ? local.iter_574.tape[local.iter_574.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_574.code_ptr)] : local.iter_574.code_ptr :
      local.curr_575.code == "]"
        ? local.iter_574.tape[local.iter_574.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_574.code_ptr)] : local.iter_574.code_ptr
        : local.iter_574.code_ptr)

    steps_taken = 1 + local.iter_574.steps_taken
  }
}

locals {
  end_of_code_576 = try(local.iter_575.code_ptr >= length(var.code), true)

  curr_576 = local.end_of_code_576 ? null : {
    code = substr(var.code, local.iter_575.code_ptr, 1)
    input = substr(var.code, local.iter_575.code_ptr, 1) == "," ? substr(local.iter_575.input, 0, 1) : null
  }

  iter_576 = local.end_of_code_576 ? local.iter_575 : {
    input = (local.curr_576.code == ","
      ? substr(local.iter_575.input, 1, -1)
      : local.iter_575.input)

    output = (local.curr_576.code == "."
      ? "${local.iter_575.output}${jsondecode(format("\"\\u%04x\"", local.iter_575.tape[local.iter_575.tape_ptr]))}"
      : local.iter_575.output)
    
    tape = (
      local.curr_576.code == "+"
        ? [for i, b in local.iter_575.tape : (i == local.iter_575.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_576.code == "-"
        ? [for i, b in local.iter_575.tape : (i == local.iter_575.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_576.code == ","
        ? [for i, b in local.iter_575.tape : (i == local.iter_575.tape_ptr ? local.ascii_lookup[local.curr_576.input] : b)]
        : local.iter_575.tape)

    tape_ptr = (
      local.curr_576.code == "<"
        ? local.iter_575.tape_ptr == 0 ? length(local.iter_575.tape) - 1 : local.iter_575.tape_ptr - 1 :
      local.curr_576.code == ">"
        ? local.iter_575.tape_ptr == length(local.iter_575.tape) - 1 ? 0 : local.iter_575.tape_ptr + 1
        : local.iter_575.tape_ptr)

    code_ptr = 1 + (
      local.curr_576.code == "["
        ? local.iter_575.tape[local.iter_575.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_575.code_ptr)] : local.iter_575.code_ptr :
      local.curr_576.code == "]"
        ? local.iter_575.tape[local.iter_575.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_575.code_ptr)] : local.iter_575.code_ptr
        : local.iter_575.code_ptr)

    steps_taken = 1 + local.iter_575.steps_taken
  }
}

locals {
  end_of_code_577 = try(local.iter_576.code_ptr >= length(var.code), true)

  curr_577 = local.end_of_code_577 ? null : {
    code = substr(var.code, local.iter_576.code_ptr, 1)
    input = substr(var.code, local.iter_576.code_ptr, 1) == "," ? substr(local.iter_576.input, 0, 1) : null
  }

  iter_577 = local.end_of_code_577 ? local.iter_576 : {
    input = (local.curr_577.code == ","
      ? substr(local.iter_576.input, 1, -1)
      : local.iter_576.input)

    output = (local.curr_577.code == "."
      ? "${local.iter_576.output}${jsondecode(format("\"\\u%04x\"", local.iter_576.tape[local.iter_576.tape_ptr]))}"
      : local.iter_576.output)
    
    tape = (
      local.curr_577.code == "+"
        ? [for i, b in local.iter_576.tape : (i == local.iter_576.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_577.code == "-"
        ? [for i, b in local.iter_576.tape : (i == local.iter_576.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_577.code == ","
        ? [for i, b in local.iter_576.tape : (i == local.iter_576.tape_ptr ? local.ascii_lookup[local.curr_577.input] : b)]
        : local.iter_576.tape)

    tape_ptr = (
      local.curr_577.code == "<"
        ? local.iter_576.tape_ptr == 0 ? length(local.iter_576.tape) - 1 : local.iter_576.tape_ptr - 1 :
      local.curr_577.code == ">"
        ? local.iter_576.tape_ptr == length(local.iter_576.tape) - 1 ? 0 : local.iter_576.tape_ptr + 1
        : local.iter_576.tape_ptr)

    code_ptr = 1 + (
      local.curr_577.code == "["
        ? local.iter_576.tape[local.iter_576.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_576.code_ptr)] : local.iter_576.code_ptr :
      local.curr_577.code == "]"
        ? local.iter_576.tape[local.iter_576.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_576.code_ptr)] : local.iter_576.code_ptr
        : local.iter_576.code_ptr)

    steps_taken = 1 + local.iter_576.steps_taken
  }
}

locals {
  end_of_code_578 = try(local.iter_577.code_ptr >= length(var.code), true)

  curr_578 = local.end_of_code_578 ? null : {
    code = substr(var.code, local.iter_577.code_ptr, 1)
    input = substr(var.code, local.iter_577.code_ptr, 1) == "," ? substr(local.iter_577.input, 0, 1) : null
  }

  iter_578 = local.end_of_code_578 ? local.iter_577 : {
    input = (local.curr_578.code == ","
      ? substr(local.iter_577.input, 1, -1)
      : local.iter_577.input)

    output = (local.curr_578.code == "."
      ? "${local.iter_577.output}${jsondecode(format("\"\\u%04x\"", local.iter_577.tape[local.iter_577.tape_ptr]))}"
      : local.iter_577.output)
    
    tape = (
      local.curr_578.code == "+"
        ? [for i, b in local.iter_577.tape : (i == local.iter_577.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_578.code == "-"
        ? [for i, b in local.iter_577.tape : (i == local.iter_577.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_578.code == ","
        ? [for i, b in local.iter_577.tape : (i == local.iter_577.tape_ptr ? local.ascii_lookup[local.curr_578.input] : b)]
        : local.iter_577.tape)

    tape_ptr = (
      local.curr_578.code == "<"
        ? local.iter_577.tape_ptr == 0 ? length(local.iter_577.tape) - 1 : local.iter_577.tape_ptr - 1 :
      local.curr_578.code == ">"
        ? local.iter_577.tape_ptr == length(local.iter_577.tape) - 1 ? 0 : local.iter_577.tape_ptr + 1
        : local.iter_577.tape_ptr)

    code_ptr = 1 + (
      local.curr_578.code == "["
        ? local.iter_577.tape[local.iter_577.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_577.code_ptr)] : local.iter_577.code_ptr :
      local.curr_578.code == "]"
        ? local.iter_577.tape[local.iter_577.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_577.code_ptr)] : local.iter_577.code_ptr
        : local.iter_577.code_ptr)

    steps_taken = 1 + local.iter_577.steps_taken
  }
}

locals {
  end_of_code_579 = try(local.iter_578.code_ptr >= length(var.code), true)

  curr_579 = local.end_of_code_579 ? null : {
    code = substr(var.code, local.iter_578.code_ptr, 1)
    input = substr(var.code, local.iter_578.code_ptr, 1) == "," ? substr(local.iter_578.input, 0, 1) : null
  }

  iter_579 = local.end_of_code_579 ? local.iter_578 : {
    input = (local.curr_579.code == ","
      ? substr(local.iter_578.input, 1, -1)
      : local.iter_578.input)

    output = (local.curr_579.code == "."
      ? "${local.iter_578.output}${jsondecode(format("\"\\u%04x\"", local.iter_578.tape[local.iter_578.tape_ptr]))}"
      : local.iter_578.output)
    
    tape = (
      local.curr_579.code == "+"
        ? [for i, b in local.iter_578.tape : (i == local.iter_578.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_579.code == "-"
        ? [for i, b in local.iter_578.tape : (i == local.iter_578.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_579.code == ","
        ? [for i, b in local.iter_578.tape : (i == local.iter_578.tape_ptr ? local.ascii_lookup[local.curr_579.input] : b)]
        : local.iter_578.tape)

    tape_ptr = (
      local.curr_579.code == "<"
        ? local.iter_578.tape_ptr == 0 ? length(local.iter_578.tape) - 1 : local.iter_578.tape_ptr - 1 :
      local.curr_579.code == ">"
        ? local.iter_578.tape_ptr == length(local.iter_578.tape) - 1 ? 0 : local.iter_578.tape_ptr + 1
        : local.iter_578.tape_ptr)

    code_ptr = 1 + (
      local.curr_579.code == "["
        ? local.iter_578.tape[local.iter_578.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_578.code_ptr)] : local.iter_578.code_ptr :
      local.curr_579.code == "]"
        ? local.iter_578.tape[local.iter_578.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_578.code_ptr)] : local.iter_578.code_ptr
        : local.iter_578.code_ptr)

    steps_taken = 1 + local.iter_578.steps_taken
  }
}

locals {
  end_of_code_580 = try(local.iter_579.code_ptr >= length(var.code), true)

  curr_580 = local.end_of_code_580 ? null : {
    code = substr(var.code, local.iter_579.code_ptr, 1)
    input = substr(var.code, local.iter_579.code_ptr, 1) == "," ? substr(local.iter_579.input, 0, 1) : null
  }

  iter_580 = local.end_of_code_580 ? local.iter_579 : {
    input = (local.curr_580.code == ","
      ? substr(local.iter_579.input, 1, -1)
      : local.iter_579.input)

    output = (local.curr_580.code == "."
      ? "${local.iter_579.output}${jsondecode(format("\"\\u%04x\"", local.iter_579.tape[local.iter_579.tape_ptr]))}"
      : local.iter_579.output)
    
    tape = (
      local.curr_580.code == "+"
        ? [for i, b in local.iter_579.tape : (i == local.iter_579.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_580.code == "-"
        ? [for i, b in local.iter_579.tape : (i == local.iter_579.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_580.code == ","
        ? [for i, b in local.iter_579.tape : (i == local.iter_579.tape_ptr ? local.ascii_lookup[local.curr_580.input] : b)]
        : local.iter_579.tape)

    tape_ptr = (
      local.curr_580.code == "<"
        ? local.iter_579.tape_ptr == 0 ? length(local.iter_579.tape) - 1 : local.iter_579.tape_ptr - 1 :
      local.curr_580.code == ">"
        ? local.iter_579.tape_ptr == length(local.iter_579.tape) - 1 ? 0 : local.iter_579.tape_ptr + 1
        : local.iter_579.tape_ptr)

    code_ptr = 1 + (
      local.curr_580.code == "["
        ? local.iter_579.tape[local.iter_579.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_579.code_ptr)] : local.iter_579.code_ptr :
      local.curr_580.code == "]"
        ? local.iter_579.tape[local.iter_579.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_579.code_ptr)] : local.iter_579.code_ptr
        : local.iter_579.code_ptr)

    steps_taken = 1 + local.iter_579.steps_taken
  }
}

locals {
  end_of_code_581 = try(local.iter_580.code_ptr >= length(var.code), true)

  curr_581 = local.end_of_code_581 ? null : {
    code = substr(var.code, local.iter_580.code_ptr, 1)
    input = substr(var.code, local.iter_580.code_ptr, 1) == "," ? substr(local.iter_580.input, 0, 1) : null
  }

  iter_581 = local.end_of_code_581 ? local.iter_580 : {
    input = (local.curr_581.code == ","
      ? substr(local.iter_580.input, 1, -1)
      : local.iter_580.input)

    output = (local.curr_581.code == "."
      ? "${local.iter_580.output}${jsondecode(format("\"\\u%04x\"", local.iter_580.tape[local.iter_580.tape_ptr]))}"
      : local.iter_580.output)
    
    tape = (
      local.curr_581.code == "+"
        ? [for i, b in local.iter_580.tape : (i == local.iter_580.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_581.code == "-"
        ? [for i, b in local.iter_580.tape : (i == local.iter_580.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_581.code == ","
        ? [for i, b in local.iter_580.tape : (i == local.iter_580.tape_ptr ? local.ascii_lookup[local.curr_581.input] : b)]
        : local.iter_580.tape)

    tape_ptr = (
      local.curr_581.code == "<"
        ? local.iter_580.tape_ptr == 0 ? length(local.iter_580.tape) - 1 : local.iter_580.tape_ptr - 1 :
      local.curr_581.code == ">"
        ? local.iter_580.tape_ptr == length(local.iter_580.tape) - 1 ? 0 : local.iter_580.tape_ptr + 1
        : local.iter_580.tape_ptr)

    code_ptr = 1 + (
      local.curr_581.code == "["
        ? local.iter_580.tape[local.iter_580.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_580.code_ptr)] : local.iter_580.code_ptr :
      local.curr_581.code == "]"
        ? local.iter_580.tape[local.iter_580.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_580.code_ptr)] : local.iter_580.code_ptr
        : local.iter_580.code_ptr)

    steps_taken = 1 + local.iter_580.steps_taken
  }
}

locals {
  end_of_code_582 = try(local.iter_581.code_ptr >= length(var.code), true)

  curr_582 = local.end_of_code_582 ? null : {
    code = substr(var.code, local.iter_581.code_ptr, 1)
    input = substr(var.code, local.iter_581.code_ptr, 1) == "," ? substr(local.iter_581.input, 0, 1) : null
  }

  iter_582 = local.end_of_code_582 ? local.iter_581 : {
    input = (local.curr_582.code == ","
      ? substr(local.iter_581.input, 1, -1)
      : local.iter_581.input)

    output = (local.curr_582.code == "."
      ? "${local.iter_581.output}${jsondecode(format("\"\\u%04x\"", local.iter_581.tape[local.iter_581.tape_ptr]))}"
      : local.iter_581.output)
    
    tape = (
      local.curr_582.code == "+"
        ? [for i, b in local.iter_581.tape : (i == local.iter_581.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_582.code == "-"
        ? [for i, b in local.iter_581.tape : (i == local.iter_581.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_582.code == ","
        ? [for i, b in local.iter_581.tape : (i == local.iter_581.tape_ptr ? local.ascii_lookup[local.curr_582.input] : b)]
        : local.iter_581.tape)

    tape_ptr = (
      local.curr_582.code == "<"
        ? local.iter_581.tape_ptr == 0 ? length(local.iter_581.tape) - 1 : local.iter_581.tape_ptr - 1 :
      local.curr_582.code == ">"
        ? local.iter_581.tape_ptr == length(local.iter_581.tape) - 1 ? 0 : local.iter_581.tape_ptr + 1
        : local.iter_581.tape_ptr)

    code_ptr = 1 + (
      local.curr_582.code == "["
        ? local.iter_581.tape[local.iter_581.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_581.code_ptr)] : local.iter_581.code_ptr :
      local.curr_582.code == "]"
        ? local.iter_581.tape[local.iter_581.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_581.code_ptr)] : local.iter_581.code_ptr
        : local.iter_581.code_ptr)

    steps_taken = 1 + local.iter_581.steps_taken
  }
}

locals {
  end_of_code_583 = try(local.iter_582.code_ptr >= length(var.code), true)

  curr_583 = local.end_of_code_583 ? null : {
    code = substr(var.code, local.iter_582.code_ptr, 1)
    input = substr(var.code, local.iter_582.code_ptr, 1) == "," ? substr(local.iter_582.input, 0, 1) : null
  }

  iter_583 = local.end_of_code_583 ? local.iter_582 : {
    input = (local.curr_583.code == ","
      ? substr(local.iter_582.input, 1, -1)
      : local.iter_582.input)

    output = (local.curr_583.code == "."
      ? "${local.iter_582.output}${jsondecode(format("\"\\u%04x\"", local.iter_582.tape[local.iter_582.tape_ptr]))}"
      : local.iter_582.output)
    
    tape = (
      local.curr_583.code == "+"
        ? [for i, b in local.iter_582.tape : (i == local.iter_582.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_583.code == "-"
        ? [for i, b in local.iter_582.tape : (i == local.iter_582.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_583.code == ","
        ? [for i, b in local.iter_582.tape : (i == local.iter_582.tape_ptr ? local.ascii_lookup[local.curr_583.input] : b)]
        : local.iter_582.tape)

    tape_ptr = (
      local.curr_583.code == "<"
        ? local.iter_582.tape_ptr == 0 ? length(local.iter_582.tape) - 1 : local.iter_582.tape_ptr - 1 :
      local.curr_583.code == ">"
        ? local.iter_582.tape_ptr == length(local.iter_582.tape) - 1 ? 0 : local.iter_582.tape_ptr + 1
        : local.iter_582.tape_ptr)

    code_ptr = 1 + (
      local.curr_583.code == "["
        ? local.iter_582.tape[local.iter_582.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_582.code_ptr)] : local.iter_582.code_ptr :
      local.curr_583.code == "]"
        ? local.iter_582.tape[local.iter_582.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_582.code_ptr)] : local.iter_582.code_ptr
        : local.iter_582.code_ptr)

    steps_taken = 1 + local.iter_582.steps_taken
  }
}

locals {
  end_of_code_584 = try(local.iter_583.code_ptr >= length(var.code), true)

  curr_584 = local.end_of_code_584 ? null : {
    code = substr(var.code, local.iter_583.code_ptr, 1)
    input = substr(var.code, local.iter_583.code_ptr, 1) == "," ? substr(local.iter_583.input, 0, 1) : null
  }

  iter_584 = local.end_of_code_584 ? local.iter_583 : {
    input = (local.curr_584.code == ","
      ? substr(local.iter_583.input, 1, -1)
      : local.iter_583.input)

    output = (local.curr_584.code == "."
      ? "${local.iter_583.output}${jsondecode(format("\"\\u%04x\"", local.iter_583.tape[local.iter_583.tape_ptr]))}"
      : local.iter_583.output)
    
    tape = (
      local.curr_584.code == "+"
        ? [for i, b in local.iter_583.tape : (i == local.iter_583.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_584.code == "-"
        ? [for i, b in local.iter_583.tape : (i == local.iter_583.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_584.code == ","
        ? [for i, b in local.iter_583.tape : (i == local.iter_583.tape_ptr ? local.ascii_lookup[local.curr_584.input] : b)]
        : local.iter_583.tape)

    tape_ptr = (
      local.curr_584.code == "<"
        ? local.iter_583.tape_ptr == 0 ? length(local.iter_583.tape) - 1 : local.iter_583.tape_ptr - 1 :
      local.curr_584.code == ">"
        ? local.iter_583.tape_ptr == length(local.iter_583.tape) - 1 ? 0 : local.iter_583.tape_ptr + 1
        : local.iter_583.tape_ptr)

    code_ptr = 1 + (
      local.curr_584.code == "["
        ? local.iter_583.tape[local.iter_583.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_583.code_ptr)] : local.iter_583.code_ptr :
      local.curr_584.code == "]"
        ? local.iter_583.tape[local.iter_583.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_583.code_ptr)] : local.iter_583.code_ptr
        : local.iter_583.code_ptr)

    steps_taken = 1 + local.iter_583.steps_taken
  }
}

locals {
  end_of_code_585 = try(local.iter_584.code_ptr >= length(var.code), true)

  curr_585 = local.end_of_code_585 ? null : {
    code = substr(var.code, local.iter_584.code_ptr, 1)
    input = substr(var.code, local.iter_584.code_ptr, 1) == "," ? substr(local.iter_584.input, 0, 1) : null
  }

  iter_585 = local.end_of_code_585 ? local.iter_584 : {
    input = (local.curr_585.code == ","
      ? substr(local.iter_584.input, 1, -1)
      : local.iter_584.input)

    output = (local.curr_585.code == "."
      ? "${local.iter_584.output}${jsondecode(format("\"\\u%04x\"", local.iter_584.tape[local.iter_584.tape_ptr]))}"
      : local.iter_584.output)
    
    tape = (
      local.curr_585.code == "+"
        ? [for i, b in local.iter_584.tape : (i == local.iter_584.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_585.code == "-"
        ? [for i, b in local.iter_584.tape : (i == local.iter_584.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_585.code == ","
        ? [for i, b in local.iter_584.tape : (i == local.iter_584.tape_ptr ? local.ascii_lookup[local.curr_585.input] : b)]
        : local.iter_584.tape)

    tape_ptr = (
      local.curr_585.code == "<"
        ? local.iter_584.tape_ptr == 0 ? length(local.iter_584.tape) - 1 : local.iter_584.tape_ptr - 1 :
      local.curr_585.code == ">"
        ? local.iter_584.tape_ptr == length(local.iter_584.tape) - 1 ? 0 : local.iter_584.tape_ptr + 1
        : local.iter_584.tape_ptr)

    code_ptr = 1 + (
      local.curr_585.code == "["
        ? local.iter_584.tape[local.iter_584.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_584.code_ptr)] : local.iter_584.code_ptr :
      local.curr_585.code == "]"
        ? local.iter_584.tape[local.iter_584.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_584.code_ptr)] : local.iter_584.code_ptr
        : local.iter_584.code_ptr)

    steps_taken = 1 + local.iter_584.steps_taken
  }
}

locals {
  end_of_code_586 = try(local.iter_585.code_ptr >= length(var.code), true)

  curr_586 = local.end_of_code_586 ? null : {
    code = substr(var.code, local.iter_585.code_ptr, 1)
    input = substr(var.code, local.iter_585.code_ptr, 1) == "," ? substr(local.iter_585.input, 0, 1) : null
  }

  iter_586 = local.end_of_code_586 ? local.iter_585 : {
    input = (local.curr_586.code == ","
      ? substr(local.iter_585.input, 1, -1)
      : local.iter_585.input)

    output = (local.curr_586.code == "."
      ? "${local.iter_585.output}${jsondecode(format("\"\\u%04x\"", local.iter_585.tape[local.iter_585.tape_ptr]))}"
      : local.iter_585.output)
    
    tape = (
      local.curr_586.code == "+"
        ? [for i, b in local.iter_585.tape : (i == local.iter_585.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_586.code == "-"
        ? [for i, b in local.iter_585.tape : (i == local.iter_585.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_586.code == ","
        ? [for i, b in local.iter_585.tape : (i == local.iter_585.tape_ptr ? local.ascii_lookup[local.curr_586.input] : b)]
        : local.iter_585.tape)

    tape_ptr = (
      local.curr_586.code == "<"
        ? local.iter_585.tape_ptr == 0 ? length(local.iter_585.tape) - 1 : local.iter_585.tape_ptr - 1 :
      local.curr_586.code == ">"
        ? local.iter_585.tape_ptr == length(local.iter_585.tape) - 1 ? 0 : local.iter_585.tape_ptr + 1
        : local.iter_585.tape_ptr)

    code_ptr = 1 + (
      local.curr_586.code == "["
        ? local.iter_585.tape[local.iter_585.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_585.code_ptr)] : local.iter_585.code_ptr :
      local.curr_586.code == "]"
        ? local.iter_585.tape[local.iter_585.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_585.code_ptr)] : local.iter_585.code_ptr
        : local.iter_585.code_ptr)

    steps_taken = 1 + local.iter_585.steps_taken
  }
}

locals {
  end_of_code_587 = try(local.iter_586.code_ptr >= length(var.code), true)

  curr_587 = local.end_of_code_587 ? null : {
    code = substr(var.code, local.iter_586.code_ptr, 1)
    input = substr(var.code, local.iter_586.code_ptr, 1) == "," ? substr(local.iter_586.input, 0, 1) : null
  }

  iter_587 = local.end_of_code_587 ? local.iter_586 : {
    input = (local.curr_587.code == ","
      ? substr(local.iter_586.input, 1, -1)
      : local.iter_586.input)

    output = (local.curr_587.code == "."
      ? "${local.iter_586.output}${jsondecode(format("\"\\u%04x\"", local.iter_586.tape[local.iter_586.tape_ptr]))}"
      : local.iter_586.output)
    
    tape = (
      local.curr_587.code == "+"
        ? [for i, b in local.iter_586.tape : (i == local.iter_586.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_587.code == "-"
        ? [for i, b in local.iter_586.tape : (i == local.iter_586.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_587.code == ","
        ? [for i, b in local.iter_586.tape : (i == local.iter_586.tape_ptr ? local.ascii_lookup[local.curr_587.input] : b)]
        : local.iter_586.tape)

    tape_ptr = (
      local.curr_587.code == "<"
        ? local.iter_586.tape_ptr == 0 ? length(local.iter_586.tape) - 1 : local.iter_586.tape_ptr - 1 :
      local.curr_587.code == ">"
        ? local.iter_586.tape_ptr == length(local.iter_586.tape) - 1 ? 0 : local.iter_586.tape_ptr + 1
        : local.iter_586.tape_ptr)

    code_ptr = 1 + (
      local.curr_587.code == "["
        ? local.iter_586.tape[local.iter_586.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_586.code_ptr)] : local.iter_586.code_ptr :
      local.curr_587.code == "]"
        ? local.iter_586.tape[local.iter_586.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_586.code_ptr)] : local.iter_586.code_ptr
        : local.iter_586.code_ptr)

    steps_taken = 1 + local.iter_586.steps_taken
  }
}

locals {
  end_of_code_588 = try(local.iter_587.code_ptr >= length(var.code), true)

  curr_588 = local.end_of_code_588 ? null : {
    code = substr(var.code, local.iter_587.code_ptr, 1)
    input = substr(var.code, local.iter_587.code_ptr, 1) == "," ? substr(local.iter_587.input, 0, 1) : null
  }

  iter_588 = local.end_of_code_588 ? local.iter_587 : {
    input = (local.curr_588.code == ","
      ? substr(local.iter_587.input, 1, -1)
      : local.iter_587.input)

    output = (local.curr_588.code == "."
      ? "${local.iter_587.output}${jsondecode(format("\"\\u%04x\"", local.iter_587.tape[local.iter_587.tape_ptr]))}"
      : local.iter_587.output)
    
    tape = (
      local.curr_588.code == "+"
        ? [for i, b in local.iter_587.tape : (i == local.iter_587.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_588.code == "-"
        ? [for i, b in local.iter_587.tape : (i == local.iter_587.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_588.code == ","
        ? [for i, b in local.iter_587.tape : (i == local.iter_587.tape_ptr ? local.ascii_lookup[local.curr_588.input] : b)]
        : local.iter_587.tape)

    tape_ptr = (
      local.curr_588.code == "<"
        ? local.iter_587.tape_ptr == 0 ? length(local.iter_587.tape) - 1 : local.iter_587.tape_ptr - 1 :
      local.curr_588.code == ">"
        ? local.iter_587.tape_ptr == length(local.iter_587.tape) - 1 ? 0 : local.iter_587.tape_ptr + 1
        : local.iter_587.tape_ptr)

    code_ptr = 1 + (
      local.curr_588.code == "["
        ? local.iter_587.tape[local.iter_587.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_587.code_ptr)] : local.iter_587.code_ptr :
      local.curr_588.code == "]"
        ? local.iter_587.tape[local.iter_587.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_587.code_ptr)] : local.iter_587.code_ptr
        : local.iter_587.code_ptr)

    steps_taken = 1 + local.iter_587.steps_taken
  }
}

locals {
  end_of_code_589 = try(local.iter_588.code_ptr >= length(var.code), true)

  curr_589 = local.end_of_code_589 ? null : {
    code = substr(var.code, local.iter_588.code_ptr, 1)
    input = substr(var.code, local.iter_588.code_ptr, 1) == "," ? substr(local.iter_588.input, 0, 1) : null
  }

  iter_589 = local.end_of_code_589 ? local.iter_588 : {
    input = (local.curr_589.code == ","
      ? substr(local.iter_588.input, 1, -1)
      : local.iter_588.input)

    output = (local.curr_589.code == "."
      ? "${local.iter_588.output}${jsondecode(format("\"\\u%04x\"", local.iter_588.tape[local.iter_588.tape_ptr]))}"
      : local.iter_588.output)
    
    tape = (
      local.curr_589.code == "+"
        ? [for i, b in local.iter_588.tape : (i == local.iter_588.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_589.code == "-"
        ? [for i, b in local.iter_588.tape : (i == local.iter_588.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_589.code == ","
        ? [for i, b in local.iter_588.tape : (i == local.iter_588.tape_ptr ? local.ascii_lookup[local.curr_589.input] : b)]
        : local.iter_588.tape)

    tape_ptr = (
      local.curr_589.code == "<"
        ? local.iter_588.tape_ptr == 0 ? length(local.iter_588.tape) - 1 : local.iter_588.tape_ptr - 1 :
      local.curr_589.code == ">"
        ? local.iter_588.tape_ptr == length(local.iter_588.tape) - 1 ? 0 : local.iter_588.tape_ptr + 1
        : local.iter_588.tape_ptr)

    code_ptr = 1 + (
      local.curr_589.code == "["
        ? local.iter_588.tape[local.iter_588.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_588.code_ptr)] : local.iter_588.code_ptr :
      local.curr_589.code == "]"
        ? local.iter_588.tape[local.iter_588.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_588.code_ptr)] : local.iter_588.code_ptr
        : local.iter_588.code_ptr)

    steps_taken = 1 + local.iter_588.steps_taken
  }
}

locals {
  end_of_code_590 = try(local.iter_589.code_ptr >= length(var.code), true)

  curr_590 = local.end_of_code_590 ? null : {
    code = substr(var.code, local.iter_589.code_ptr, 1)
    input = substr(var.code, local.iter_589.code_ptr, 1) == "," ? substr(local.iter_589.input, 0, 1) : null
  }

  iter_590 = local.end_of_code_590 ? local.iter_589 : {
    input = (local.curr_590.code == ","
      ? substr(local.iter_589.input, 1, -1)
      : local.iter_589.input)

    output = (local.curr_590.code == "."
      ? "${local.iter_589.output}${jsondecode(format("\"\\u%04x\"", local.iter_589.tape[local.iter_589.tape_ptr]))}"
      : local.iter_589.output)
    
    tape = (
      local.curr_590.code == "+"
        ? [for i, b in local.iter_589.tape : (i == local.iter_589.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_590.code == "-"
        ? [for i, b in local.iter_589.tape : (i == local.iter_589.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_590.code == ","
        ? [for i, b in local.iter_589.tape : (i == local.iter_589.tape_ptr ? local.ascii_lookup[local.curr_590.input] : b)]
        : local.iter_589.tape)

    tape_ptr = (
      local.curr_590.code == "<"
        ? local.iter_589.tape_ptr == 0 ? length(local.iter_589.tape) - 1 : local.iter_589.tape_ptr - 1 :
      local.curr_590.code == ">"
        ? local.iter_589.tape_ptr == length(local.iter_589.tape) - 1 ? 0 : local.iter_589.tape_ptr + 1
        : local.iter_589.tape_ptr)

    code_ptr = 1 + (
      local.curr_590.code == "["
        ? local.iter_589.tape[local.iter_589.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_589.code_ptr)] : local.iter_589.code_ptr :
      local.curr_590.code == "]"
        ? local.iter_589.tape[local.iter_589.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_589.code_ptr)] : local.iter_589.code_ptr
        : local.iter_589.code_ptr)

    steps_taken = 1 + local.iter_589.steps_taken
  }
}

locals {
  end_of_code_591 = try(local.iter_590.code_ptr >= length(var.code), true)

  curr_591 = local.end_of_code_591 ? null : {
    code = substr(var.code, local.iter_590.code_ptr, 1)
    input = substr(var.code, local.iter_590.code_ptr, 1) == "," ? substr(local.iter_590.input, 0, 1) : null
  }

  iter_591 = local.end_of_code_591 ? local.iter_590 : {
    input = (local.curr_591.code == ","
      ? substr(local.iter_590.input, 1, -1)
      : local.iter_590.input)

    output = (local.curr_591.code == "."
      ? "${local.iter_590.output}${jsondecode(format("\"\\u%04x\"", local.iter_590.tape[local.iter_590.tape_ptr]))}"
      : local.iter_590.output)
    
    tape = (
      local.curr_591.code == "+"
        ? [for i, b in local.iter_590.tape : (i == local.iter_590.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_591.code == "-"
        ? [for i, b in local.iter_590.tape : (i == local.iter_590.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_591.code == ","
        ? [for i, b in local.iter_590.tape : (i == local.iter_590.tape_ptr ? local.ascii_lookup[local.curr_591.input] : b)]
        : local.iter_590.tape)

    tape_ptr = (
      local.curr_591.code == "<"
        ? local.iter_590.tape_ptr == 0 ? length(local.iter_590.tape) - 1 : local.iter_590.tape_ptr - 1 :
      local.curr_591.code == ">"
        ? local.iter_590.tape_ptr == length(local.iter_590.tape) - 1 ? 0 : local.iter_590.tape_ptr + 1
        : local.iter_590.tape_ptr)

    code_ptr = 1 + (
      local.curr_591.code == "["
        ? local.iter_590.tape[local.iter_590.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_590.code_ptr)] : local.iter_590.code_ptr :
      local.curr_591.code == "]"
        ? local.iter_590.tape[local.iter_590.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_590.code_ptr)] : local.iter_590.code_ptr
        : local.iter_590.code_ptr)

    steps_taken = 1 + local.iter_590.steps_taken
  }
}

locals {
  end_of_code_592 = try(local.iter_591.code_ptr >= length(var.code), true)

  curr_592 = local.end_of_code_592 ? null : {
    code = substr(var.code, local.iter_591.code_ptr, 1)
    input = substr(var.code, local.iter_591.code_ptr, 1) == "," ? substr(local.iter_591.input, 0, 1) : null
  }

  iter_592 = local.end_of_code_592 ? local.iter_591 : {
    input = (local.curr_592.code == ","
      ? substr(local.iter_591.input, 1, -1)
      : local.iter_591.input)

    output = (local.curr_592.code == "."
      ? "${local.iter_591.output}${jsondecode(format("\"\\u%04x\"", local.iter_591.tape[local.iter_591.tape_ptr]))}"
      : local.iter_591.output)
    
    tape = (
      local.curr_592.code == "+"
        ? [for i, b in local.iter_591.tape : (i == local.iter_591.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_592.code == "-"
        ? [for i, b in local.iter_591.tape : (i == local.iter_591.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_592.code == ","
        ? [for i, b in local.iter_591.tape : (i == local.iter_591.tape_ptr ? local.ascii_lookup[local.curr_592.input] : b)]
        : local.iter_591.tape)

    tape_ptr = (
      local.curr_592.code == "<"
        ? local.iter_591.tape_ptr == 0 ? length(local.iter_591.tape) - 1 : local.iter_591.tape_ptr - 1 :
      local.curr_592.code == ">"
        ? local.iter_591.tape_ptr == length(local.iter_591.tape) - 1 ? 0 : local.iter_591.tape_ptr + 1
        : local.iter_591.tape_ptr)

    code_ptr = 1 + (
      local.curr_592.code == "["
        ? local.iter_591.tape[local.iter_591.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_591.code_ptr)] : local.iter_591.code_ptr :
      local.curr_592.code == "]"
        ? local.iter_591.tape[local.iter_591.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_591.code_ptr)] : local.iter_591.code_ptr
        : local.iter_591.code_ptr)

    steps_taken = 1 + local.iter_591.steps_taken
  }
}

locals {
  end_of_code_593 = try(local.iter_592.code_ptr >= length(var.code), true)

  curr_593 = local.end_of_code_593 ? null : {
    code = substr(var.code, local.iter_592.code_ptr, 1)
    input = substr(var.code, local.iter_592.code_ptr, 1) == "," ? substr(local.iter_592.input, 0, 1) : null
  }

  iter_593 = local.end_of_code_593 ? local.iter_592 : {
    input = (local.curr_593.code == ","
      ? substr(local.iter_592.input, 1, -1)
      : local.iter_592.input)

    output = (local.curr_593.code == "."
      ? "${local.iter_592.output}${jsondecode(format("\"\\u%04x\"", local.iter_592.tape[local.iter_592.tape_ptr]))}"
      : local.iter_592.output)
    
    tape = (
      local.curr_593.code == "+"
        ? [for i, b in local.iter_592.tape : (i == local.iter_592.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_593.code == "-"
        ? [for i, b in local.iter_592.tape : (i == local.iter_592.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_593.code == ","
        ? [for i, b in local.iter_592.tape : (i == local.iter_592.tape_ptr ? local.ascii_lookup[local.curr_593.input] : b)]
        : local.iter_592.tape)

    tape_ptr = (
      local.curr_593.code == "<"
        ? local.iter_592.tape_ptr == 0 ? length(local.iter_592.tape) - 1 : local.iter_592.tape_ptr - 1 :
      local.curr_593.code == ">"
        ? local.iter_592.tape_ptr == length(local.iter_592.tape) - 1 ? 0 : local.iter_592.tape_ptr + 1
        : local.iter_592.tape_ptr)

    code_ptr = 1 + (
      local.curr_593.code == "["
        ? local.iter_592.tape[local.iter_592.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_592.code_ptr)] : local.iter_592.code_ptr :
      local.curr_593.code == "]"
        ? local.iter_592.tape[local.iter_592.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_592.code_ptr)] : local.iter_592.code_ptr
        : local.iter_592.code_ptr)

    steps_taken = 1 + local.iter_592.steps_taken
  }
}

locals {
  end_of_code_594 = try(local.iter_593.code_ptr >= length(var.code), true)

  curr_594 = local.end_of_code_594 ? null : {
    code = substr(var.code, local.iter_593.code_ptr, 1)
    input = substr(var.code, local.iter_593.code_ptr, 1) == "," ? substr(local.iter_593.input, 0, 1) : null
  }

  iter_594 = local.end_of_code_594 ? local.iter_593 : {
    input = (local.curr_594.code == ","
      ? substr(local.iter_593.input, 1, -1)
      : local.iter_593.input)

    output = (local.curr_594.code == "."
      ? "${local.iter_593.output}${jsondecode(format("\"\\u%04x\"", local.iter_593.tape[local.iter_593.tape_ptr]))}"
      : local.iter_593.output)
    
    tape = (
      local.curr_594.code == "+"
        ? [for i, b in local.iter_593.tape : (i == local.iter_593.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_594.code == "-"
        ? [for i, b in local.iter_593.tape : (i == local.iter_593.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_594.code == ","
        ? [for i, b in local.iter_593.tape : (i == local.iter_593.tape_ptr ? local.ascii_lookup[local.curr_594.input] : b)]
        : local.iter_593.tape)

    tape_ptr = (
      local.curr_594.code == "<"
        ? local.iter_593.tape_ptr == 0 ? length(local.iter_593.tape) - 1 : local.iter_593.tape_ptr - 1 :
      local.curr_594.code == ">"
        ? local.iter_593.tape_ptr == length(local.iter_593.tape) - 1 ? 0 : local.iter_593.tape_ptr + 1
        : local.iter_593.tape_ptr)

    code_ptr = 1 + (
      local.curr_594.code == "["
        ? local.iter_593.tape[local.iter_593.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_593.code_ptr)] : local.iter_593.code_ptr :
      local.curr_594.code == "]"
        ? local.iter_593.tape[local.iter_593.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_593.code_ptr)] : local.iter_593.code_ptr
        : local.iter_593.code_ptr)

    steps_taken = 1 + local.iter_593.steps_taken
  }
}

locals {
  end_of_code_595 = try(local.iter_594.code_ptr >= length(var.code), true)

  curr_595 = local.end_of_code_595 ? null : {
    code = substr(var.code, local.iter_594.code_ptr, 1)
    input = substr(var.code, local.iter_594.code_ptr, 1) == "," ? substr(local.iter_594.input, 0, 1) : null
  }

  iter_595 = local.end_of_code_595 ? local.iter_594 : {
    input = (local.curr_595.code == ","
      ? substr(local.iter_594.input, 1, -1)
      : local.iter_594.input)

    output = (local.curr_595.code == "."
      ? "${local.iter_594.output}${jsondecode(format("\"\\u%04x\"", local.iter_594.tape[local.iter_594.tape_ptr]))}"
      : local.iter_594.output)
    
    tape = (
      local.curr_595.code == "+"
        ? [for i, b in local.iter_594.tape : (i == local.iter_594.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_595.code == "-"
        ? [for i, b in local.iter_594.tape : (i == local.iter_594.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_595.code == ","
        ? [for i, b in local.iter_594.tape : (i == local.iter_594.tape_ptr ? local.ascii_lookup[local.curr_595.input] : b)]
        : local.iter_594.tape)

    tape_ptr = (
      local.curr_595.code == "<"
        ? local.iter_594.tape_ptr == 0 ? length(local.iter_594.tape) - 1 : local.iter_594.tape_ptr - 1 :
      local.curr_595.code == ">"
        ? local.iter_594.tape_ptr == length(local.iter_594.tape) - 1 ? 0 : local.iter_594.tape_ptr + 1
        : local.iter_594.tape_ptr)

    code_ptr = 1 + (
      local.curr_595.code == "["
        ? local.iter_594.tape[local.iter_594.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_594.code_ptr)] : local.iter_594.code_ptr :
      local.curr_595.code == "]"
        ? local.iter_594.tape[local.iter_594.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_594.code_ptr)] : local.iter_594.code_ptr
        : local.iter_594.code_ptr)

    steps_taken = 1 + local.iter_594.steps_taken
  }
}

locals {
  end_of_code_596 = try(local.iter_595.code_ptr >= length(var.code), true)

  curr_596 = local.end_of_code_596 ? null : {
    code = substr(var.code, local.iter_595.code_ptr, 1)
    input = substr(var.code, local.iter_595.code_ptr, 1) == "," ? substr(local.iter_595.input, 0, 1) : null
  }

  iter_596 = local.end_of_code_596 ? local.iter_595 : {
    input = (local.curr_596.code == ","
      ? substr(local.iter_595.input, 1, -1)
      : local.iter_595.input)

    output = (local.curr_596.code == "."
      ? "${local.iter_595.output}${jsondecode(format("\"\\u%04x\"", local.iter_595.tape[local.iter_595.tape_ptr]))}"
      : local.iter_595.output)
    
    tape = (
      local.curr_596.code == "+"
        ? [for i, b in local.iter_595.tape : (i == local.iter_595.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_596.code == "-"
        ? [for i, b in local.iter_595.tape : (i == local.iter_595.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_596.code == ","
        ? [for i, b in local.iter_595.tape : (i == local.iter_595.tape_ptr ? local.ascii_lookup[local.curr_596.input] : b)]
        : local.iter_595.tape)

    tape_ptr = (
      local.curr_596.code == "<"
        ? local.iter_595.tape_ptr == 0 ? length(local.iter_595.tape) - 1 : local.iter_595.tape_ptr - 1 :
      local.curr_596.code == ">"
        ? local.iter_595.tape_ptr == length(local.iter_595.tape) - 1 ? 0 : local.iter_595.tape_ptr + 1
        : local.iter_595.tape_ptr)

    code_ptr = 1 + (
      local.curr_596.code == "["
        ? local.iter_595.tape[local.iter_595.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_595.code_ptr)] : local.iter_595.code_ptr :
      local.curr_596.code == "]"
        ? local.iter_595.tape[local.iter_595.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_595.code_ptr)] : local.iter_595.code_ptr
        : local.iter_595.code_ptr)

    steps_taken = 1 + local.iter_595.steps_taken
  }
}

locals {
  end_of_code_597 = try(local.iter_596.code_ptr >= length(var.code), true)

  curr_597 = local.end_of_code_597 ? null : {
    code = substr(var.code, local.iter_596.code_ptr, 1)
    input = substr(var.code, local.iter_596.code_ptr, 1) == "," ? substr(local.iter_596.input, 0, 1) : null
  }

  iter_597 = local.end_of_code_597 ? local.iter_596 : {
    input = (local.curr_597.code == ","
      ? substr(local.iter_596.input, 1, -1)
      : local.iter_596.input)

    output = (local.curr_597.code == "."
      ? "${local.iter_596.output}${jsondecode(format("\"\\u%04x\"", local.iter_596.tape[local.iter_596.tape_ptr]))}"
      : local.iter_596.output)
    
    tape = (
      local.curr_597.code == "+"
        ? [for i, b in local.iter_596.tape : (i == local.iter_596.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_597.code == "-"
        ? [for i, b in local.iter_596.tape : (i == local.iter_596.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_597.code == ","
        ? [for i, b in local.iter_596.tape : (i == local.iter_596.tape_ptr ? local.ascii_lookup[local.curr_597.input] : b)]
        : local.iter_596.tape)

    tape_ptr = (
      local.curr_597.code == "<"
        ? local.iter_596.tape_ptr == 0 ? length(local.iter_596.tape) - 1 : local.iter_596.tape_ptr - 1 :
      local.curr_597.code == ">"
        ? local.iter_596.tape_ptr == length(local.iter_596.tape) - 1 ? 0 : local.iter_596.tape_ptr + 1
        : local.iter_596.tape_ptr)

    code_ptr = 1 + (
      local.curr_597.code == "["
        ? local.iter_596.tape[local.iter_596.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_596.code_ptr)] : local.iter_596.code_ptr :
      local.curr_597.code == "]"
        ? local.iter_596.tape[local.iter_596.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_596.code_ptr)] : local.iter_596.code_ptr
        : local.iter_596.code_ptr)

    steps_taken = 1 + local.iter_596.steps_taken
  }
}

locals {
  end_of_code_598 = try(local.iter_597.code_ptr >= length(var.code), true)

  curr_598 = local.end_of_code_598 ? null : {
    code = substr(var.code, local.iter_597.code_ptr, 1)
    input = substr(var.code, local.iter_597.code_ptr, 1) == "," ? substr(local.iter_597.input, 0, 1) : null
  }

  iter_598 = local.end_of_code_598 ? local.iter_597 : {
    input = (local.curr_598.code == ","
      ? substr(local.iter_597.input, 1, -1)
      : local.iter_597.input)

    output = (local.curr_598.code == "."
      ? "${local.iter_597.output}${jsondecode(format("\"\\u%04x\"", local.iter_597.tape[local.iter_597.tape_ptr]))}"
      : local.iter_597.output)
    
    tape = (
      local.curr_598.code == "+"
        ? [for i, b in local.iter_597.tape : (i == local.iter_597.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_598.code == "-"
        ? [for i, b in local.iter_597.tape : (i == local.iter_597.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_598.code == ","
        ? [for i, b in local.iter_597.tape : (i == local.iter_597.tape_ptr ? local.ascii_lookup[local.curr_598.input] : b)]
        : local.iter_597.tape)

    tape_ptr = (
      local.curr_598.code == "<"
        ? local.iter_597.tape_ptr == 0 ? length(local.iter_597.tape) - 1 : local.iter_597.tape_ptr - 1 :
      local.curr_598.code == ">"
        ? local.iter_597.tape_ptr == length(local.iter_597.tape) - 1 ? 0 : local.iter_597.tape_ptr + 1
        : local.iter_597.tape_ptr)

    code_ptr = 1 + (
      local.curr_598.code == "["
        ? local.iter_597.tape[local.iter_597.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_597.code_ptr)] : local.iter_597.code_ptr :
      local.curr_598.code == "]"
        ? local.iter_597.tape[local.iter_597.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_597.code_ptr)] : local.iter_597.code_ptr
        : local.iter_597.code_ptr)

    steps_taken = 1 + local.iter_597.steps_taken
  }
}

locals {
  end_of_code_599 = try(local.iter_598.code_ptr >= length(var.code), true)

  curr_599 = local.end_of_code_599 ? null : {
    code = substr(var.code, local.iter_598.code_ptr, 1)
    input = substr(var.code, local.iter_598.code_ptr, 1) == "," ? substr(local.iter_598.input, 0, 1) : null
  }

  iter_599 = local.end_of_code_599 ? local.iter_598 : {
    input = (local.curr_599.code == ","
      ? substr(local.iter_598.input, 1, -1)
      : local.iter_598.input)

    output = (local.curr_599.code == "."
      ? "${local.iter_598.output}${jsondecode(format("\"\\u%04x\"", local.iter_598.tape[local.iter_598.tape_ptr]))}"
      : local.iter_598.output)
    
    tape = (
      local.curr_599.code == "+"
        ? [for i, b in local.iter_598.tape : (i == local.iter_598.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_599.code == "-"
        ? [for i, b in local.iter_598.tape : (i == local.iter_598.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_599.code == ","
        ? [for i, b in local.iter_598.tape : (i == local.iter_598.tape_ptr ? local.ascii_lookup[local.curr_599.input] : b)]
        : local.iter_598.tape)

    tape_ptr = (
      local.curr_599.code == "<"
        ? local.iter_598.tape_ptr == 0 ? length(local.iter_598.tape) - 1 : local.iter_598.tape_ptr - 1 :
      local.curr_599.code == ">"
        ? local.iter_598.tape_ptr == length(local.iter_598.tape) - 1 ? 0 : local.iter_598.tape_ptr + 1
        : local.iter_598.tape_ptr)

    code_ptr = 1 + (
      local.curr_599.code == "["
        ? local.iter_598.tape[local.iter_598.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_598.code_ptr)] : local.iter_598.code_ptr :
      local.curr_599.code == "]"
        ? local.iter_598.tape[local.iter_598.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_598.code_ptr)] : local.iter_598.code_ptr
        : local.iter_598.code_ptr)

    steps_taken = 1 + local.iter_598.steps_taken
  }
}

locals {
  end_of_code_600 = try(local.iter_599.code_ptr >= length(var.code), true)

  curr_600 = local.end_of_code_600 ? null : {
    code = substr(var.code, local.iter_599.code_ptr, 1)
    input = substr(var.code, local.iter_599.code_ptr, 1) == "," ? substr(local.iter_599.input, 0, 1) : null
  }

  iter_600 = local.end_of_code_600 ? local.iter_599 : {
    input = (local.curr_600.code == ","
      ? substr(local.iter_599.input, 1, -1)
      : local.iter_599.input)

    output = (local.curr_600.code == "."
      ? "${local.iter_599.output}${jsondecode(format("\"\\u%04x\"", local.iter_599.tape[local.iter_599.tape_ptr]))}"
      : local.iter_599.output)
    
    tape = (
      local.curr_600.code == "+"
        ? [for i, b in local.iter_599.tape : (i == local.iter_599.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_600.code == "-"
        ? [for i, b in local.iter_599.tape : (i == local.iter_599.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_600.code == ","
        ? [for i, b in local.iter_599.tape : (i == local.iter_599.tape_ptr ? local.ascii_lookup[local.curr_600.input] : b)]
        : local.iter_599.tape)

    tape_ptr = (
      local.curr_600.code == "<"
        ? local.iter_599.tape_ptr == 0 ? length(local.iter_599.tape) - 1 : local.iter_599.tape_ptr - 1 :
      local.curr_600.code == ">"
        ? local.iter_599.tape_ptr == length(local.iter_599.tape) - 1 ? 0 : local.iter_599.tape_ptr + 1
        : local.iter_599.tape_ptr)

    code_ptr = 1 + (
      local.curr_600.code == "["
        ? local.iter_599.tape[local.iter_599.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_599.code_ptr)] : local.iter_599.code_ptr :
      local.curr_600.code == "]"
        ? local.iter_599.tape[local.iter_599.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_599.code_ptr)] : local.iter_599.code_ptr
        : local.iter_599.code_ptr)

    steps_taken = 1 + local.iter_599.steps_taken
  }
}

locals {
  end_of_code_601 = try(local.iter_600.code_ptr >= length(var.code), true)

  curr_601 = local.end_of_code_601 ? null : {
    code = substr(var.code, local.iter_600.code_ptr, 1)
    input = substr(var.code, local.iter_600.code_ptr, 1) == "," ? substr(local.iter_600.input, 0, 1) : null
  }

  iter_601 = local.end_of_code_601 ? local.iter_600 : {
    input = (local.curr_601.code == ","
      ? substr(local.iter_600.input, 1, -1)
      : local.iter_600.input)

    output = (local.curr_601.code == "."
      ? "${local.iter_600.output}${jsondecode(format("\"\\u%04x\"", local.iter_600.tape[local.iter_600.tape_ptr]))}"
      : local.iter_600.output)
    
    tape = (
      local.curr_601.code == "+"
        ? [for i, b in local.iter_600.tape : (i == local.iter_600.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_601.code == "-"
        ? [for i, b in local.iter_600.tape : (i == local.iter_600.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_601.code == ","
        ? [for i, b in local.iter_600.tape : (i == local.iter_600.tape_ptr ? local.ascii_lookup[local.curr_601.input] : b)]
        : local.iter_600.tape)

    tape_ptr = (
      local.curr_601.code == "<"
        ? local.iter_600.tape_ptr == 0 ? length(local.iter_600.tape) - 1 : local.iter_600.tape_ptr - 1 :
      local.curr_601.code == ">"
        ? local.iter_600.tape_ptr == length(local.iter_600.tape) - 1 ? 0 : local.iter_600.tape_ptr + 1
        : local.iter_600.tape_ptr)

    code_ptr = 1 + (
      local.curr_601.code == "["
        ? local.iter_600.tape[local.iter_600.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_600.code_ptr)] : local.iter_600.code_ptr :
      local.curr_601.code == "]"
        ? local.iter_600.tape[local.iter_600.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_600.code_ptr)] : local.iter_600.code_ptr
        : local.iter_600.code_ptr)

    steps_taken = 1 + local.iter_600.steps_taken
  }
}

locals {
  end_of_code_602 = try(local.iter_601.code_ptr >= length(var.code), true)

  curr_602 = local.end_of_code_602 ? null : {
    code = substr(var.code, local.iter_601.code_ptr, 1)
    input = substr(var.code, local.iter_601.code_ptr, 1) == "," ? substr(local.iter_601.input, 0, 1) : null
  }

  iter_602 = local.end_of_code_602 ? local.iter_601 : {
    input = (local.curr_602.code == ","
      ? substr(local.iter_601.input, 1, -1)
      : local.iter_601.input)

    output = (local.curr_602.code == "."
      ? "${local.iter_601.output}${jsondecode(format("\"\\u%04x\"", local.iter_601.tape[local.iter_601.tape_ptr]))}"
      : local.iter_601.output)
    
    tape = (
      local.curr_602.code == "+"
        ? [for i, b in local.iter_601.tape : (i == local.iter_601.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_602.code == "-"
        ? [for i, b in local.iter_601.tape : (i == local.iter_601.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_602.code == ","
        ? [for i, b in local.iter_601.tape : (i == local.iter_601.tape_ptr ? local.ascii_lookup[local.curr_602.input] : b)]
        : local.iter_601.tape)

    tape_ptr = (
      local.curr_602.code == "<"
        ? local.iter_601.tape_ptr == 0 ? length(local.iter_601.tape) - 1 : local.iter_601.tape_ptr - 1 :
      local.curr_602.code == ">"
        ? local.iter_601.tape_ptr == length(local.iter_601.tape) - 1 ? 0 : local.iter_601.tape_ptr + 1
        : local.iter_601.tape_ptr)

    code_ptr = 1 + (
      local.curr_602.code == "["
        ? local.iter_601.tape[local.iter_601.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_601.code_ptr)] : local.iter_601.code_ptr :
      local.curr_602.code == "]"
        ? local.iter_601.tape[local.iter_601.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_601.code_ptr)] : local.iter_601.code_ptr
        : local.iter_601.code_ptr)

    steps_taken = 1 + local.iter_601.steps_taken
  }
}

locals {
  end_of_code_603 = try(local.iter_602.code_ptr >= length(var.code), true)

  curr_603 = local.end_of_code_603 ? null : {
    code = substr(var.code, local.iter_602.code_ptr, 1)
    input = substr(var.code, local.iter_602.code_ptr, 1) == "," ? substr(local.iter_602.input, 0, 1) : null
  }

  iter_603 = local.end_of_code_603 ? local.iter_602 : {
    input = (local.curr_603.code == ","
      ? substr(local.iter_602.input, 1, -1)
      : local.iter_602.input)

    output = (local.curr_603.code == "."
      ? "${local.iter_602.output}${jsondecode(format("\"\\u%04x\"", local.iter_602.tape[local.iter_602.tape_ptr]))}"
      : local.iter_602.output)
    
    tape = (
      local.curr_603.code == "+"
        ? [for i, b in local.iter_602.tape : (i == local.iter_602.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_603.code == "-"
        ? [for i, b in local.iter_602.tape : (i == local.iter_602.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_603.code == ","
        ? [for i, b in local.iter_602.tape : (i == local.iter_602.tape_ptr ? local.ascii_lookup[local.curr_603.input] : b)]
        : local.iter_602.tape)

    tape_ptr = (
      local.curr_603.code == "<"
        ? local.iter_602.tape_ptr == 0 ? length(local.iter_602.tape) - 1 : local.iter_602.tape_ptr - 1 :
      local.curr_603.code == ">"
        ? local.iter_602.tape_ptr == length(local.iter_602.tape) - 1 ? 0 : local.iter_602.tape_ptr + 1
        : local.iter_602.tape_ptr)

    code_ptr = 1 + (
      local.curr_603.code == "["
        ? local.iter_602.tape[local.iter_602.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_602.code_ptr)] : local.iter_602.code_ptr :
      local.curr_603.code == "]"
        ? local.iter_602.tape[local.iter_602.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_602.code_ptr)] : local.iter_602.code_ptr
        : local.iter_602.code_ptr)

    steps_taken = 1 + local.iter_602.steps_taken
  }
}

locals {
  end_of_code_604 = try(local.iter_603.code_ptr >= length(var.code), true)

  curr_604 = local.end_of_code_604 ? null : {
    code = substr(var.code, local.iter_603.code_ptr, 1)
    input = substr(var.code, local.iter_603.code_ptr, 1) == "," ? substr(local.iter_603.input, 0, 1) : null
  }

  iter_604 = local.end_of_code_604 ? local.iter_603 : {
    input = (local.curr_604.code == ","
      ? substr(local.iter_603.input, 1, -1)
      : local.iter_603.input)

    output = (local.curr_604.code == "."
      ? "${local.iter_603.output}${jsondecode(format("\"\\u%04x\"", local.iter_603.tape[local.iter_603.tape_ptr]))}"
      : local.iter_603.output)
    
    tape = (
      local.curr_604.code == "+"
        ? [for i, b in local.iter_603.tape : (i == local.iter_603.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_604.code == "-"
        ? [for i, b in local.iter_603.tape : (i == local.iter_603.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_604.code == ","
        ? [for i, b in local.iter_603.tape : (i == local.iter_603.tape_ptr ? local.ascii_lookup[local.curr_604.input] : b)]
        : local.iter_603.tape)

    tape_ptr = (
      local.curr_604.code == "<"
        ? local.iter_603.tape_ptr == 0 ? length(local.iter_603.tape) - 1 : local.iter_603.tape_ptr - 1 :
      local.curr_604.code == ">"
        ? local.iter_603.tape_ptr == length(local.iter_603.tape) - 1 ? 0 : local.iter_603.tape_ptr + 1
        : local.iter_603.tape_ptr)

    code_ptr = 1 + (
      local.curr_604.code == "["
        ? local.iter_603.tape[local.iter_603.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_603.code_ptr)] : local.iter_603.code_ptr :
      local.curr_604.code == "]"
        ? local.iter_603.tape[local.iter_603.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_603.code_ptr)] : local.iter_603.code_ptr
        : local.iter_603.code_ptr)

    steps_taken = 1 + local.iter_603.steps_taken
  }
}

locals {
  end_of_code_605 = try(local.iter_604.code_ptr >= length(var.code), true)

  curr_605 = local.end_of_code_605 ? null : {
    code = substr(var.code, local.iter_604.code_ptr, 1)
    input = substr(var.code, local.iter_604.code_ptr, 1) == "," ? substr(local.iter_604.input, 0, 1) : null
  }

  iter_605 = local.end_of_code_605 ? local.iter_604 : {
    input = (local.curr_605.code == ","
      ? substr(local.iter_604.input, 1, -1)
      : local.iter_604.input)

    output = (local.curr_605.code == "."
      ? "${local.iter_604.output}${jsondecode(format("\"\\u%04x\"", local.iter_604.tape[local.iter_604.tape_ptr]))}"
      : local.iter_604.output)
    
    tape = (
      local.curr_605.code == "+"
        ? [for i, b in local.iter_604.tape : (i == local.iter_604.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_605.code == "-"
        ? [for i, b in local.iter_604.tape : (i == local.iter_604.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_605.code == ","
        ? [for i, b in local.iter_604.tape : (i == local.iter_604.tape_ptr ? local.ascii_lookup[local.curr_605.input] : b)]
        : local.iter_604.tape)

    tape_ptr = (
      local.curr_605.code == "<"
        ? local.iter_604.tape_ptr == 0 ? length(local.iter_604.tape) - 1 : local.iter_604.tape_ptr - 1 :
      local.curr_605.code == ">"
        ? local.iter_604.tape_ptr == length(local.iter_604.tape) - 1 ? 0 : local.iter_604.tape_ptr + 1
        : local.iter_604.tape_ptr)

    code_ptr = 1 + (
      local.curr_605.code == "["
        ? local.iter_604.tape[local.iter_604.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_604.code_ptr)] : local.iter_604.code_ptr :
      local.curr_605.code == "]"
        ? local.iter_604.tape[local.iter_604.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_604.code_ptr)] : local.iter_604.code_ptr
        : local.iter_604.code_ptr)

    steps_taken = 1 + local.iter_604.steps_taken
  }
}

locals {
  end_of_code_606 = try(local.iter_605.code_ptr >= length(var.code), true)

  curr_606 = local.end_of_code_606 ? null : {
    code = substr(var.code, local.iter_605.code_ptr, 1)
    input = substr(var.code, local.iter_605.code_ptr, 1) == "," ? substr(local.iter_605.input, 0, 1) : null
  }

  iter_606 = local.end_of_code_606 ? local.iter_605 : {
    input = (local.curr_606.code == ","
      ? substr(local.iter_605.input, 1, -1)
      : local.iter_605.input)

    output = (local.curr_606.code == "."
      ? "${local.iter_605.output}${jsondecode(format("\"\\u%04x\"", local.iter_605.tape[local.iter_605.tape_ptr]))}"
      : local.iter_605.output)
    
    tape = (
      local.curr_606.code == "+"
        ? [for i, b in local.iter_605.tape : (i == local.iter_605.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_606.code == "-"
        ? [for i, b in local.iter_605.tape : (i == local.iter_605.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_606.code == ","
        ? [for i, b in local.iter_605.tape : (i == local.iter_605.tape_ptr ? local.ascii_lookup[local.curr_606.input] : b)]
        : local.iter_605.tape)

    tape_ptr = (
      local.curr_606.code == "<"
        ? local.iter_605.tape_ptr == 0 ? length(local.iter_605.tape) - 1 : local.iter_605.tape_ptr - 1 :
      local.curr_606.code == ">"
        ? local.iter_605.tape_ptr == length(local.iter_605.tape) - 1 ? 0 : local.iter_605.tape_ptr + 1
        : local.iter_605.tape_ptr)

    code_ptr = 1 + (
      local.curr_606.code == "["
        ? local.iter_605.tape[local.iter_605.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_605.code_ptr)] : local.iter_605.code_ptr :
      local.curr_606.code == "]"
        ? local.iter_605.tape[local.iter_605.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_605.code_ptr)] : local.iter_605.code_ptr
        : local.iter_605.code_ptr)

    steps_taken = 1 + local.iter_605.steps_taken
  }
}

locals {
  end_of_code_607 = try(local.iter_606.code_ptr >= length(var.code), true)

  curr_607 = local.end_of_code_607 ? null : {
    code = substr(var.code, local.iter_606.code_ptr, 1)
    input = substr(var.code, local.iter_606.code_ptr, 1) == "," ? substr(local.iter_606.input, 0, 1) : null
  }

  iter_607 = local.end_of_code_607 ? local.iter_606 : {
    input = (local.curr_607.code == ","
      ? substr(local.iter_606.input, 1, -1)
      : local.iter_606.input)

    output = (local.curr_607.code == "."
      ? "${local.iter_606.output}${jsondecode(format("\"\\u%04x\"", local.iter_606.tape[local.iter_606.tape_ptr]))}"
      : local.iter_606.output)
    
    tape = (
      local.curr_607.code == "+"
        ? [for i, b in local.iter_606.tape : (i == local.iter_606.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_607.code == "-"
        ? [for i, b in local.iter_606.tape : (i == local.iter_606.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_607.code == ","
        ? [for i, b in local.iter_606.tape : (i == local.iter_606.tape_ptr ? local.ascii_lookup[local.curr_607.input] : b)]
        : local.iter_606.tape)

    tape_ptr = (
      local.curr_607.code == "<"
        ? local.iter_606.tape_ptr == 0 ? length(local.iter_606.tape) - 1 : local.iter_606.tape_ptr - 1 :
      local.curr_607.code == ">"
        ? local.iter_606.tape_ptr == length(local.iter_606.tape) - 1 ? 0 : local.iter_606.tape_ptr + 1
        : local.iter_606.tape_ptr)

    code_ptr = 1 + (
      local.curr_607.code == "["
        ? local.iter_606.tape[local.iter_606.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_606.code_ptr)] : local.iter_606.code_ptr :
      local.curr_607.code == "]"
        ? local.iter_606.tape[local.iter_606.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_606.code_ptr)] : local.iter_606.code_ptr
        : local.iter_606.code_ptr)

    steps_taken = 1 + local.iter_606.steps_taken
  }
}

locals {
  end_of_code_608 = try(local.iter_607.code_ptr >= length(var.code), true)

  curr_608 = local.end_of_code_608 ? null : {
    code = substr(var.code, local.iter_607.code_ptr, 1)
    input = substr(var.code, local.iter_607.code_ptr, 1) == "," ? substr(local.iter_607.input, 0, 1) : null
  }

  iter_608 = local.end_of_code_608 ? local.iter_607 : {
    input = (local.curr_608.code == ","
      ? substr(local.iter_607.input, 1, -1)
      : local.iter_607.input)

    output = (local.curr_608.code == "."
      ? "${local.iter_607.output}${jsondecode(format("\"\\u%04x\"", local.iter_607.tape[local.iter_607.tape_ptr]))}"
      : local.iter_607.output)
    
    tape = (
      local.curr_608.code == "+"
        ? [for i, b in local.iter_607.tape : (i == local.iter_607.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_608.code == "-"
        ? [for i, b in local.iter_607.tape : (i == local.iter_607.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_608.code == ","
        ? [for i, b in local.iter_607.tape : (i == local.iter_607.tape_ptr ? local.ascii_lookup[local.curr_608.input] : b)]
        : local.iter_607.tape)

    tape_ptr = (
      local.curr_608.code == "<"
        ? local.iter_607.tape_ptr == 0 ? length(local.iter_607.tape) - 1 : local.iter_607.tape_ptr - 1 :
      local.curr_608.code == ">"
        ? local.iter_607.tape_ptr == length(local.iter_607.tape) - 1 ? 0 : local.iter_607.tape_ptr + 1
        : local.iter_607.tape_ptr)

    code_ptr = 1 + (
      local.curr_608.code == "["
        ? local.iter_607.tape[local.iter_607.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_607.code_ptr)] : local.iter_607.code_ptr :
      local.curr_608.code == "]"
        ? local.iter_607.tape[local.iter_607.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_607.code_ptr)] : local.iter_607.code_ptr
        : local.iter_607.code_ptr)

    steps_taken = 1 + local.iter_607.steps_taken
  }
}

locals {
  end_of_code_609 = try(local.iter_608.code_ptr >= length(var.code), true)

  curr_609 = local.end_of_code_609 ? null : {
    code = substr(var.code, local.iter_608.code_ptr, 1)
    input = substr(var.code, local.iter_608.code_ptr, 1) == "," ? substr(local.iter_608.input, 0, 1) : null
  }

  iter_609 = local.end_of_code_609 ? local.iter_608 : {
    input = (local.curr_609.code == ","
      ? substr(local.iter_608.input, 1, -1)
      : local.iter_608.input)

    output = (local.curr_609.code == "."
      ? "${local.iter_608.output}${jsondecode(format("\"\\u%04x\"", local.iter_608.tape[local.iter_608.tape_ptr]))}"
      : local.iter_608.output)
    
    tape = (
      local.curr_609.code == "+"
        ? [for i, b in local.iter_608.tape : (i == local.iter_608.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_609.code == "-"
        ? [for i, b in local.iter_608.tape : (i == local.iter_608.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_609.code == ","
        ? [for i, b in local.iter_608.tape : (i == local.iter_608.tape_ptr ? local.ascii_lookup[local.curr_609.input] : b)]
        : local.iter_608.tape)

    tape_ptr = (
      local.curr_609.code == "<"
        ? local.iter_608.tape_ptr == 0 ? length(local.iter_608.tape) - 1 : local.iter_608.tape_ptr - 1 :
      local.curr_609.code == ">"
        ? local.iter_608.tape_ptr == length(local.iter_608.tape) - 1 ? 0 : local.iter_608.tape_ptr + 1
        : local.iter_608.tape_ptr)

    code_ptr = 1 + (
      local.curr_609.code == "["
        ? local.iter_608.tape[local.iter_608.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_608.code_ptr)] : local.iter_608.code_ptr :
      local.curr_609.code == "]"
        ? local.iter_608.tape[local.iter_608.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_608.code_ptr)] : local.iter_608.code_ptr
        : local.iter_608.code_ptr)

    steps_taken = 1 + local.iter_608.steps_taken
  }
}

locals {
  end_of_code_610 = try(local.iter_609.code_ptr >= length(var.code), true)

  curr_610 = local.end_of_code_610 ? null : {
    code = substr(var.code, local.iter_609.code_ptr, 1)
    input = substr(var.code, local.iter_609.code_ptr, 1) == "," ? substr(local.iter_609.input, 0, 1) : null
  }

  iter_610 = local.end_of_code_610 ? local.iter_609 : {
    input = (local.curr_610.code == ","
      ? substr(local.iter_609.input, 1, -1)
      : local.iter_609.input)

    output = (local.curr_610.code == "."
      ? "${local.iter_609.output}${jsondecode(format("\"\\u%04x\"", local.iter_609.tape[local.iter_609.tape_ptr]))}"
      : local.iter_609.output)
    
    tape = (
      local.curr_610.code == "+"
        ? [for i, b in local.iter_609.tape : (i == local.iter_609.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_610.code == "-"
        ? [for i, b in local.iter_609.tape : (i == local.iter_609.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_610.code == ","
        ? [for i, b in local.iter_609.tape : (i == local.iter_609.tape_ptr ? local.ascii_lookup[local.curr_610.input] : b)]
        : local.iter_609.tape)

    tape_ptr = (
      local.curr_610.code == "<"
        ? local.iter_609.tape_ptr == 0 ? length(local.iter_609.tape) - 1 : local.iter_609.tape_ptr - 1 :
      local.curr_610.code == ">"
        ? local.iter_609.tape_ptr == length(local.iter_609.tape) - 1 ? 0 : local.iter_609.tape_ptr + 1
        : local.iter_609.tape_ptr)

    code_ptr = 1 + (
      local.curr_610.code == "["
        ? local.iter_609.tape[local.iter_609.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_609.code_ptr)] : local.iter_609.code_ptr :
      local.curr_610.code == "]"
        ? local.iter_609.tape[local.iter_609.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_609.code_ptr)] : local.iter_609.code_ptr
        : local.iter_609.code_ptr)

    steps_taken = 1 + local.iter_609.steps_taken
  }
}

locals {
  end_of_code_611 = try(local.iter_610.code_ptr >= length(var.code), true)

  curr_611 = local.end_of_code_611 ? null : {
    code = substr(var.code, local.iter_610.code_ptr, 1)
    input = substr(var.code, local.iter_610.code_ptr, 1) == "," ? substr(local.iter_610.input, 0, 1) : null
  }

  iter_611 = local.end_of_code_611 ? local.iter_610 : {
    input = (local.curr_611.code == ","
      ? substr(local.iter_610.input, 1, -1)
      : local.iter_610.input)

    output = (local.curr_611.code == "."
      ? "${local.iter_610.output}${jsondecode(format("\"\\u%04x\"", local.iter_610.tape[local.iter_610.tape_ptr]))}"
      : local.iter_610.output)
    
    tape = (
      local.curr_611.code == "+"
        ? [for i, b in local.iter_610.tape : (i == local.iter_610.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_611.code == "-"
        ? [for i, b in local.iter_610.tape : (i == local.iter_610.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_611.code == ","
        ? [for i, b in local.iter_610.tape : (i == local.iter_610.tape_ptr ? local.ascii_lookup[local.curr_611.input] : b)]
        : local.iter_610.tape)

    tape_ptr = (
      local.curr_611.code == "<"
        ? local.iter_610.tape_ptr == 0 ? length(local.iter_610.tape) - 1 : local.iter_610.tape_ptr - 1 :
      local.curr_611.code == ">"
        ? local.iter_610.tape_ptr == length(local.iter_610.tape) - 1 ? 0 : local.iter_610.tape_ptr + 1
        : local.iter_610.tape_ptr)

    code_ptr = 1 + (
      local.curr_611.code == "["
        ? local.iter_610.tape[local.iter_610.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_610.code_ptr)] : local.iter_610.code_ptr :
      local.curr_611.code == "]"
        ? local.iter_610.tape[local.iter_610.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_610.code_ptr)] : local.iter_610.code_ptr
        : local.iter_610.code_ptr)

    steps_taken = 1 + local.iter_610.steps_taken
  }
}

locals {
  end_of_code_612 = try(local.iter_611.code_ptr >= length(var.code), true)

  curr_612 = local.end_of_code_612 ? null : {
    code = substr(var.code, local.iter_611.code_ptr, 1)
    input = substr(var.code, local.iter_611.code_ptr, 1) == "," ? substr(local.iter_611.input, 0, 1) : null
  }

  iter_612 = local.end_of_code_612 ? local.iter_611 : {
    input = (local.curr_612.code == ","
      ? substr(local.iter_611.input, 1, -1)
      : local.iter_611.input)

    output = (local.curr_612.code == "."
      ? "${local.iter_611.output}${jsondecode(format("\"\\u%04x\"", local.iter_611.tape[local.iter_611.tape_ptr]))}"
      : local.iter_611.output)
    
    tape = (
      local.curr_612.code == "+"
        ? [for i, b in local.iter_611.tape : (i == local.iter_611.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_612.code == "-"
        ? [for i, b in local.iter_611.tape : (i == local.iter_611.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_612.code == ","
        ? [for i, b in local.iter_611.tape : (i == local.iter_611.tape_ptr ? local.ascii_lookup[local.curr_612.input] : b)]
        : local.iter_611.tape)

    tape_ptr = (
      local.curr_612.code == "<"
        ? local.iter_611.tape_ptr == 0 ? length(local.iter_611.tape) - 1 : local.iter_611.tape_ptr - 1 :
      local.curr_612.code == ">"
        ? local.iter_611.tape_ptr == length(local.iter_611.tape) - 1 ? 0 : local.iter_611.tape_ptr + 1
        : local.iter_611.tape_ptr)

    code_ptr = 1 + (
      local.curr_612.code == "["
        ? local.iter_611.tape[local.iter_611.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_611.code_ptr)] : local.iter_611.code_ptr :
      local.curr_612.code == "]"
        ? local.iter_611.tape[local.iter_611.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_611.code_ptr)] : local.iter_611.code_ptr
        : local.iter_611.code_ptr)

    steps_taken = 1 + local.iter_611.steps_taken
  }
}

locals {
  end_of_code_613 = try(local.iter_612.code_ptr >= length(var.code), true)

  curr_613 = local.end_of_code_613 ? null : {
    code = substr(var.code, local.iter_612.code_ptr, 1)
    input = substr(var.code, local.iter_612.code_ptr, 1) == "," ? substr(local.iter_612.input, 0, 1) : null
  }

  iter_613 = local.end_of_code_613 ? local.iter_612 : {
    input = (local.curr_613.code == ","
      ? substr(local.iter_612.input, 1, -1)
      : local.iter_612.input)

    output = (local.curr_613.code == "."
      ? "${local.iter_612.output}${jsondecode(format("\"\\u%04x\"", local.iter_612.tape[local.iter_612.tape_ptr]))}"
      : local.iter_612.output)
    
    tape = (
      local.curr_613.code == "+"
        ? [for i, b in local.iter_612.tape : (i == local.iter_612.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_613.code == "-"
        ? [for i, b in local.iter_612.tape : (i == local.iter_612.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_613.code == ","
        ? [for i, b in local.iter_612.tape : (i == local.iter_612.tape_ptr ? local.ascii_lookup[local.curr_613.input] : b)]
        : local.iter_612.tape)

    tape_ptr = (
      local.curr_613.code == "<"
        ? local.iter_612.tape_ptr == 0 ? length(local.iter_612.tape) - 1 : local.iter_612.tape_ptr - 1 :
      local.curr_613.code == ">"
        ? local.iter_612.tape_ptr == length(local.iter_612.tape) - 1 ? 0 : local.iter_612.tape_ptr + 1
        : local.iter_612.tape_ptr)

    code_ptr = 1 + (
      local.curr_613.code == "["
        ? local.iter_612.tape[local.iter_612.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_612.code_ptr)] : local.iter_612.code_ptr :
      local.curr_613.code == "]"
        ? local.iter_612.tape[local.iter_612.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_612.code_ptr)] : local.iter_612.code_ptr
        : local.iter_612.code_ptr)

    steps_taken = 1 + local.iter_612.steps_taken
  }
}

locals {
  end_of_code_614 = try(local.iter_613.code_ptr >= length(var.code), true)

  curr_614 = local.end_of_code_614 ? null : {
    code = substr(var.code, local.iter_613.code_ptr, 1)
    input = substr(var.code, local.iter_613.code_ptr, 1) == "," ? substr(local.iter_613.input, 0, 1) : null
  }

  iter_614 = local.end_of_code_614 ? local.iter_613 : {
    input = (local.curr_614.code == ","
      ? substr(local.iter_613.input, 1, -1)
      : local.iter_613.input)

    output = (local.curr_614.code == "."
      ? "${local.iter_613.output}${jsondecode(format("\"\\u%04x\"", local.iter_613.tape[local.iter_613.tape_ptr]))}"
      : local.iter_613.output)
    
    tape = (
      local.curr_614.code == "+"
        ? [for i, b in local.iter_613.tape : (i == local.iter_613.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_614.code == "-"
        ? [for i, b in local.iter_613.tape : (i == local.iter_613.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_614.code == ","
        ? [for i, b in local.iter_613.tape : (i == local.iter_613.tape_ptr ? local.ascii_lookup[local.curr_614.input] : b)]
        : local.iter_613.tape)

    tape_ptr = (
      local.curr_614.code == "<"
        ? local.iter_613.tape_ptr == 0 ? length(local.iter_613.tape) - 1 : local.iter_613.tape_ptr - 1 :
      local.curr_614.code == ">"
        ? local.iter_613.tape_ptr == length(local.iter_613.tape) - 1 ? 0 : local.iter_613.tape_ptr + 1
        : local.iter_613.tape_ptr)

    code_ptr = 1 + (
      local.curr_614.code == "["
        ? local.iter_613.tape[local.iter_613.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_613.code_ptr)] : local.iter_613.code_ptr :
      local.curr_614.code == "]"
        ? local.iter_613.tape[local.iter_613.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_613.code_ptr)] : local.iter_613.code_ptr
        : local.iter_613.code_ptr)

    steps_taken = 1 + local.iter_613.steps_taken
  }
}

locals {
  end_of_code_615 = try(local.iter_614.code_ptr >= length(var.code), true)

  curr_615 = local.end_of_code_615 ? null : {
    code = substr(var.code, local.iter_614.code_ptr, 1)
    input = substr(var.code, local.iter_614.code_ptr, 1) == "," ? substr(local.iter_614.input, 0, 1) : null
  }

  iter_615 = local.end_of_code_615 ? local.iter_614 : {
    input = (local.curr_615.code == ","
      ? substr(local.iter_614.input, 1, -1)
      : local.iter_614.input)

    output = (local.curr_615.code == "."
      ? "${local.iter_614.output}${jsondecode(format("\"\\u%04x\"", local.iter_614.tape[local.iter_614.tape_ptr]))}"
      : local.iter_614.output)
    
    tape = (
      local.curr_615.code == "+"
        ? [for i, b in local.iter_614.tape : (i == local.iter_614.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_615.code == "-"
        ? [for i, b in local.iter_614.tape : (i == local.iter_614.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_615.code == ","
        ? [for i, b in local.iter_614.tape : (i == local.iter_614.tape_ptr ? local.ascii_lookup[local.curr_615.input] : b)]
        : local.iter_614.tape)

    tape_ptr = (
      local.curr_615.code == "<"
        ? local.iter_614.tape_ptr == 0 ? length(local.iter_614.tape) - 1 : local.iter_614.tape_ptr - 1 :
      local.curr_615.code == ">"
        ? local.iter_614.tape_ptr == length(local.iter_614.tape) - 1 ? 0 : local.iter_614.tape_ptr + 1
        : local.iter_614.tape_ptr)

    code_ptr = 1 + (
      local.curr_615.code == "["
        ? local.iter_614.tape[local.iter_614.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_614.code_ptr)] : local.iter_614.code_ptr :
      local.curr_615.code == "]"
        ? local.iter_614.tape[local.iter_614.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_614.code_ptr)] : local.iter_614.code_ptr
        : local.iter_614.code_ptr)

    steps_taken = 1 + local.iter_614.steps_taken
  }
}

locals {
  end_of_code_616 = try(local.iter_615.code_ptr >= length(var.code), true)

  curr_616 = local.end_of_code_616 ? null : {
    code = substr(var.code, local.iter_615.code_ptr, 1)
    input = substr(var.code, local.iter_615.code_ptr, 1) == "," ? substr(local.iter_615.input, 0, 1) : null
  }

  iter_616 = local.end_of_code_616 ? local.iter_615 : {
    input = (local.curr_616.code == ","
      ? substr(local.iter_615.input, 1, -1)
      : local.iter_615.input)

    output = (local.curr_616.code == "."
      ? "${local.iter_615.output}${jsondecode(format("\"\\u%04x\"", local.iter_615.tape[local.iter_615.tape_ptr]))}"
      : local.iter_615.output)
    
    tape = (
      local.curr_616.code == "+"
        ? [for i, b in local.iter_615.tape : (i == local.iter_615.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_616.code == "-"
        ? [for i, b in local.iter_615.tape : (i == local.iter_615.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_616.code == ","
        ? [for i, b in local.iter_615.tape : (i == local.iter_615.tape_ptr ? local.ascii_lookup[local.curr_616.input] : b)]
        : local.iter_615.tape)

    tape_ptr = (
      local.curr_616.code == "<"
        ? local.iter_615.tape_ptr == 0 ? length(local.iter_615.tape) - 1 : local.iter_615.tape_ptr - 1 :
      local.curr_616.code == ">"
        ? local.iter_615.tape_ptr == length(local.iter_615.tape) - 1 ? 0 : local.iter_615.tape_ptr + 1
        : local.iter_615.tape_ptr)

    code_ptr = 1 + (
      local.curr_616.code == "["
        ? local.iter_615.tape[local.iter_615.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_615.code_ptr)] : local.iter_615.code_ptr :
      local.curr_616.code == "]"
        ? local.iter_615.tape[local.iter_615.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_615.code_ptr)] : local.iter_615.code_ptr
        : local.iter_615.code_ptr)

    steps_taken = 1 + local.iter_615.steps_taken
  }
}

locals {
  end_of_code_617 = try(local.iter_616.code_ptr >= length(var.code), true)

  curr_617 = local.end_of_code_617 ? null : {
    code = substr(var.code, local.iter_616.code_ptr, 1)
    input = substr(var.code, local.iter_616.code_ptr, 1) == "," ? substr(local.iter_616.input, 0, 1) : null
  }

  iter_617 = local.end_of_code_617 ? local.iter_616 : {
    input = (local.curr_617.code == ","
      ? substr(local.iter_616.input, 1, -1)
      : local.iter_616.input)

    output = (local.curr_617.code == "."
      ? "${local.iter_616.output}${jsondecode(format("\"\\u%04x\"", local.iter_616.tape[local.iter_616.tape_ptr]))}"
      : local.iter_616.output)
    
    tape = (
      local.curr_617.code == "+"
        ? [for i, b in local.iter_616.tape : (i == local.iter_616.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_617.code == "-"
        ? [for i, b in local.iter_616.tape : (i == local.iter_616.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_617.code == ","
        ? [for i, b in local.iter_616.tape : (i == local.iter_616.tape_ptr ? local.ascii_lookup[local.curr_617.input] : b)]
        : local.iter_616.tape)

    tape_ptr = (
      local.curr_617.code == "<"
        ? local.iter_616.tape_ptr == 0 ? length(local.iter_616.tape) - 1 : local.iter_616.tape_ptr - 1 :
      local.curr_617.code == ">"
        ? local.iter_616.tape_ptr == length(local.iter_616.tape) - 1 ? 0 : local.iter_616.tape_ptr + 1
        : local.iter_616.tape_ptr)

    code_ptr = 1 + (
      local.curr_617.code == "["
        ? local.iter_616.tape[local.iter_616.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_616.code_ptr)] : local.iter_616.code_ptr :
      local.curr_617.code == "]"
        ? local.iter_616.tape[local.iter_616.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_616.code_ptr)] : local.iter_616.code_ptr
        : local.iter_616.code_ptr)

    steps_taken = 1 + local.iter_616.steps_taken
  }
}

locals {
  end_of_code_618 = try(local.iter_617.code_ptr >= length(var.code), true)

  curr_618 = local.end_of_code_618 ? null : {
    code = substr(var.code, local.iter_617.code_ptr, 1)
    input = substr(var.code, local.iter_617.code_ptr, 1) == "," ? substr(local.iter_617.input, 0, 1) : null
  }

  iter_618 = local.end_of_code_618 ? local.iter_617 : {
    input = (local.curr_618.code == ","
      ? substr(local.iter_617.input, 1, -1)
      : local.iter_617.input)

    output = (local.curr_618.code == "."
      ? "${local.iter_617.output}${jsondecode(format("\"\\u%04x\"", local.iter_617.tape[local.iter_617.tape_ptr]))}"
      : local.iter_617.output)
    
    tape = (
      local.curr_618.code == "+"
        ? [for i, b in local.iter_617.tape : (i == local.iter_617.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_618.code == "-"
        ? [for i, b in local.iter_617.tape : (i == local.iter_617.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_618.code == ","
        ? [for i, b in local.iter_617.tape : (i == local.iter_617.tape_ptr ? local.ascii_lookup[local.curr_618.input] : b)]
        : local.iter_617.tape)

    tape_ptr = (
      local.curr_618.code == "<"
        ? local.iter_617.tape_ptr == 0 ? length(local.iter_617.tape) - 1 : local.iter_617.tape_ptr - 1 :
      local.curr_618.code == ">"
        ? local.iter_617.tape_ptr == length(local.iter_617.tape) - 1 ? 0 : local.iter_617.tape_ptr + 1
        : local.iter_617.tape_ptr)

    code_ptr = 1 + (
      local.curr_618.code == "["
        ? local.iter_617.tape[local.iter_617.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_617.code_ptr)] : local.iter_617.code_ptr :
      local.curr_618.code == "]"
        ? local.iter_617.tape[local.iter_617.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_617.code_ptr)] : local.iter_617.code_ptr
        : local.iter_617.code_ptr)

    steps_taken = 1 + local.iter_617.steps_taken
  }
}

locals {
  end_of_code_619 = try(local.iter_618.code_ptr >= length(var.code), true)

  curr_619 = local.end_of_code_619 ? null : {
    code = substr(var.code, local.iter_618.code_ptr, 1)
    input = substr(var.code, local.iter_618.code_ptr, 1) == "," ? substr(local.iter_618.input, 0, 1) : null
  }

  iter_619 = local.end_of_code_619 ? local.iter_618 : {
    input = (local.curr_619.code == ","
      ? substr(local.iter_618.input, 1, -1)
      : local.iter_618.input)

    output = (local.curr_619.code == "."
      ? "${local.iter_618.output}${jsondecode(format("\"\\u%04x\"", local.iter_618.tape[local.iter_618.tape_ptr]))}"
      : local.iter_618.output)
    
    tape = (
      local.curr_619.code == "+"
        ? [for i, b in local.iter_618.tape : (i == local.iter_618.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_619.code == "-"
        ? [for i, b in local.iter_618.tape : (i == local.iter_618.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_619.code == ","
        ? [for i, b in local.iter_618.tape : (i == local.iter_618.tape_ptr ? local.ascii_lookup[local.curr_619.input] : b)]
        : local.iter_618.tape)

    tape_ptr = (
      local.curr_619.code == "<"
        ? local.iter_618.tape_ptr == 0 ? length(local.iter_618.tape) - 1 : local.iter_618.tape_ptr - 1 :
      local.curr_619.code == ">"
        ? local.iter_618.tape_ptr == length(local.iter_618.tape) - 1 ? 0 : local.iter_618.tape_ptr + 1
        : local.iter_618.tape_ptr)

    code_ptr = 1 + (
      local.curr_619.code == "["
        ? local.iter_618.tape[local.iter_618.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_618.code_ptr)] : local.iter_618.code_ptr :
      local.curr_619.code == "]"
        ? local.iter_618.tape[local.iter_618.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_618.code_ptr)] : local.iter_618.code_ptr
        : local.iter_618.code_ptr)

    steps_taken = 1 + local.iter_618.steps_taken
  }
}

locals {
  end_of_code_620 = try(local.iter_619.code_ptr >= length(var.code), true)

  curr_620 = local.end_of_code_620 ? null : {
    code = substr(var.code, local.iter_619.code_ptr, 1)
    input = substr(var.code, local.iter_619.code_ptr, 1) == "," ? substr(local.iter_619.input, 0, 1) : null
  }

  iter_620 = local.end_of_code_620 ? local.iter_619 : {
    input = (local.curr_620.code == ","
      ? substr(local.iter_619.input, 1, -1)
      : local.iter_619.input)

    output = (local.curr_620.code == "."
      ? "${local.iter_619.output}${jsondecode(format("\"\\u%04x\"", local.iter_619.tape[local.iter_619.tape_ptr]))}"
      : local.iter_619.output)
    
    tape = (
      local.curr_620.code == "+"
        ? [for i, b in local.iter_619.tape : (i == local.iter_619.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_620.code == "-"
        ? [for i, b in local.iter_619.tape : (i == local.iter_619.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_620.code == ","
        ? [for i, b in local.iter_619.tape : (i == local.iter_619.tape_ptr ? local.ascii_lookup[local.curr_620.input] : b)]
        : local.iter_619.tape)

    tape_ptr = (
      local.curr_620.code == "<"
        ? local.iter_619.tape_ptr == 0 ? length(local.iter_619.tape) - 1 : local.iter_619.tape_ptr - 1 :
      local.curr_620.code == ">"
        ? local.iter_619.tape_ptr == length(local.iter_619.tape) - 1 ? 0 : local.iter_619.tape_ptr + 1
        : local.iter_619.tape_ptr)

    code_ptr = 1 + (
      local.curr_620.code == "["
        ? local.iter_619.tape[local.iter_619.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_619.code_ptr)] : local.iter_619.code_ptr :
      local.curr_620.code == "]"
        ? local.iter_619.tape[local.iter_619.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_619.code_ptr)] : local.iter_619.code_ptr
        : local.iter_619.code_ptr)

    steps_taken = 1 + local.iter_619.steps_taken
  }
}

locals {
  end_of_code_621 = try(local.iter_620.code_ptr >= length(var.code), true)

  curr_621 = local.end_of_code_621 ? null : {
    code = substr(var.code, local.iter_620.code_ptr, 1)
    input = substr(var.code, local.iter_620.code_ptr, 1) == "," ? substr(local.iter_620.input, 0, 1) : null
  }

  iter_621 = local.end_of_code_621 ? local.iter_620 : {
    input = (local.curr_621.code == ","
      ? substr(local.iter_620.input, 1, -1)
      : local.iter_620.input)

    output = (local.curr_621.code == "."
      ? "${local.iter_620.output}${jsondecode(format("\"\\u%04x\"", local.iter_620.tape[local.iter_620.tape_ptr]))}"
      : local.iter_620.output)
    
    tape = (
      local.curr_621.code == "+"
        ? [for i, b in local.iter_620.tape : (i == local.iter_620.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_621.code == "-"
        ? [for i, b in local.iter_620.tape : (i == local.iter_620.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_621.code == ","
        ? [for i, b in local.iter_620.tape : (i == local.iter_620.tape_ptr ? local.ascii_lookup[local.curr_621.input] : b)]
        : local.iter_620.tape)

    tape_ptr = (
      local.curr_621.code == "<"
        ? local.iter_620.tape_ptr == 0 ? length(local.iter_620.tape) - 1 : local.iter_620.tape_ptr - 1 :
      local.curr_621.code == ">"
        ? local.iter_620.tape_ptr == length(local.iter_620.tape) - 1 ? 0 : local.iter_620.tape_ptr + 1
        : local.iter_620.tape_ptr)

    code_ptr = 1 + (
      local.curr_621.code == "["
        ? local.iter_620.tape[local.iter_620.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_620.code_ptr)] : local.iter_620.code_ptr :
      local.curr_621.code == "]"
        ? local.iter_620.tape[local.iter_620.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_620.code_ptr)] : local.iter_620.code_ptr
        : local.iter_620.code_ptr)

    steps_taken = 1 + local.iter_620.steps_taken
  }
}

locals {
  end_of_code_622 = try(local.iter_621.code_ptr >= length(var.code), true)

  curr_622 = local.end_of_code_622 ? null : {
    code = substr(var.code, local.iter_621.code_ptr, 1)
    input = substr(var.code, local.iter_621.code_ptr, 1) == "," ? substr(local.iter_621.input, 0, 1) : null
  }

  iter_622 = local.end_of_code_622 ? local.iter_621 : {
    input = (local.curr_622.code == ","
      ? substr(local.iter_621.input, 1, -1)
      : local.iter_621.input)

    output = (local.curr_622.code == "."
      ? "${local.iter_621.output}${jsondecode(format("\"\\u%04x\"", local.iter_621.tape[local.iter_621.tape_ptr]))}"
      : local.iter_621.output)
    
    tape = (
      local.curr_622.code == "+"
        ? [for i, b in local.iter_621.tape : (i == local.iter_621.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_622.code == "-"
        ? [for i, b in local.iter_621.tape : (i == local.iter_621.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_622.code == ","
        ? [for i, b in local.iter_621.tape : (i == local.iter_621.tape_ptr ? local.ascii_lookup[local.curr_622.input] : b)]
        : local.iter_621.tape)

    tape_ptr = (
      local.curr_622.code == "<"
        ? local.iter_621.tape_ptr == 0 ? length(local.iter_621.tape) - 1 : local.iter_621.tape_ptr - 1 :
      local.curr_622.code == ">"
        ? local.iter_621.tape_ptr == length(local.iter_621.tape) - 1 ? 0 : local.iter_621.tape_ptr + 1
        : local.iter_621.tape_ptr)

    code_ptr = 1 + (
      local.curr_622.code == "["
        ? local.iter_621.tape[local.iter_621.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_621.code_ptr)] : local.iter_621.code_ptr :
      local.curr_622.code == "]"
        ? local.iter_621.tape[local.iter_621.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_621.code_ptr)] : local.iter_621.code_ptr
        : local.iter_621.code_ptr)

    steps_taken = 1 + local.iter_621.steps_taken
  }
}

locals {
  end_of_code_623 = try(local.iter_622.code_ptr >= length(var.code), true)

  curr_623 = local.end_of_code_623 ? null : {
    code = substr(var.code, local.iter_622.code_ptr, 1)
    input = substr(var.code, local.iter_622.code_ptr, 1) == "," ? substr(local.iter_622.input, 0, 1) : null
  }

  iter_623 = local.end_of_code_623 ? local.iter_622 : {
    input = (local.curr_623.code == ","
      ? substr(local.iter_622.input, 1, -1)
      : local.iter_622.input)

    output = (local.curr_623.code == "."
      ? "${local.iter_622.output}${jsondecode(format("\"\\u%04x\"", local.iter_622.tape[local.iter_622.tape_ptr]))}"
      : local.iter_622.output)
    
    tape = (
      local.curr_623.code == "+"
        ? [for i, b in local.iter_622.tape : (i == local.iter_622.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_623.code == "-"
        ? [for i, b in local.iter_622.tape : (i == local.iter_622.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_623.code == ","
        ? [for i, b in local.iter_622.tape : (i == local.iter_622.tape_ptr ? local.ascii_lookup[local.curr_623.input] : b)]
        : local.iter_622.tape)

    tape_ptr = (
      local.curr_623.code == "<"
        ? local.iter_622.tape_ptr == 0 ? length(local.iter_622.tape) - 1 : local.iter_622.tape_ptr - 1 :
      local.curr_623.code == ">"
        ? local.iter_622.tape_ptr == length(local.iter_622.tape) - 1 ? 0 : local.iter_622.tape_ptr + 1
        : local.iter_622.tape_ptr)

    code_ptr = 1 + (
      local.curr_623.code == "["
        ? local.iter_622.tape[local.iter_622.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_622.code_ptr)] : local.iter_622.code_ptr :
      local.curr_623.code == "]"
        ? local.iter_622.tape[local.iter_622.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_622.code_ptr)] : local.iter_622.code_ptr
        : local.iter_622.code_ptr)

    steps_taken = 1 + local.iter_622.steps_taken
  }
}

locals {
  end_of_code_624 = try(local.iter_623.code_ptr >= length(var.code), true)

  curr_624 = local.end_of_code_624 ? null : {
    code = substr(var.code, local.iter_623.code_ptr, 1)
    input = substr(var.code, local.iter_623.code_ptr, 1) == "," ? substr(local.iter_623.input, 0, 1) : null
  }

  iter_624 = local.end_of_code_624 ? local.iter_623 : {
    input = (local.curr_624.code == ","
      ? substr(local.iter_623.input, 1, -1)
      : local.iter_623.input)

    output = (local.curr_624.code == "."
      ? "${local.iter_623.output}${jsondecode(format("\"\\u%04x\"", local.iter_623.tape[local.iter_623.tape_ptr]))}"
      : local.iter_623.output)
    
    tape = (
      local.curr_624.code == "+"
        ? [for i, b in local.iter_623.tape : (i == local.iter_623.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_624.code == "-"
        ? [for i, b in local.iter_623.tape : (i == local.iter_623.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_624.code == ","
        ? [for i, b in local.iter_623.tape : (i == local.iter_623.tape_ptr ? local.ascii_lookup[local.curr_624.input] : b)]
        : local.iter_623.tape)

    tape_ptr = (
      local.curr_624.code == "<"
        ? local.iter_623.tape_ptr == 0 ? length(local.iter_623.tape) - 1 : local.iter_623.tape_ptr - 1 :
      local.curr_624.code == ">"
        ? local.iter_623.tape_ptr == length(local.iter_623.tape) - 1 ? 0 : local.iter_623.tape_ptr + 1
        : local.iter_623.tape_ptr)

    code_ptr = 1 + (
      local.curr_624.code == "["
        ? local.iter_623.tape[local.iter_623.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_623.code_ptr)] : local.iter_623.code_ptr :
      local.curr_624.code == "]"
        ? local.iter_623.tape[local.iter_623.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_623.code_ptr)] : local.iter_623.code_ptr
        : local.iter_623.code_ptr)

    steps_taken = 1 + local.iter_623.steps_taken
  }
}

locals {
  end_of_code_625 = try(local.iter_624.code_ptr >= length(var.code), true)

  curr_625 = local.end_of_code_625 ? null : {
    code = substr(var.code, local.iter_624.code_ptr, 1)
    input = substr(var.code, local.iter_624.code_ptr, 1) == "," ? substr(local.iter_624.input, 0, 1) : null
  }

  iter_625 = local.end_of_code_625 ? local.iter_624 : {
    input = (local.curr_625.code == ","
      ? substr(local.iter_624.input, 1, -1)
      : local.iter_624.input)

    output = (local.curr_625.code == "."
      ? "${local.iter_624.output}${jsondecode(format("\"\\u%04x\"", local.iter_624.tape[local.iter_624.tape_ptr]))}"
      : local.iter_624.output)
    
    tape = (
      local.curr_625.code == "+"
        ? [for i, b in local.iter_624.tape : (i == local.iter_624.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_625.code == "-"
        ? [for i, b in local.iter_624.tape : (i == local.iter_624.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_625.code == ","
        ? [for i, b in local.iter_624.tape : (i == local.iter_624.tape_ptr ? local.ascii_lookup[local.curr_625.input] : b)]
        : local.iter_624.tape)

    tape_ptr = (
      local.curr_625.code == "<"
        ? local.iter_624.tape_ptr == 0 ? length(local.iter_624.tape) - 1 : local.iter_624.tape_ptr - 1 :
      local.curr_625.code == ">"
        ? local.iter_624.tape_ptr == length(local.iter_624.tape) - 1 ? 0 : local.iter_624.tape_ptr + 1
        : local.iter_624.tape_ptr)

    code_ptr = 1 + (
      local.curr_625.code == "["
        ? local.iter_624.tape[local.iter_624.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_624.code_ptr)] : local.iter_624.code_ptr :
      local.curr_625.code == "]"
        ? local.iter_624.tape[local.iter_624.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_624.code_ptr)] : local.iter_624.code_ptr
        : local.iter_624.code_ptr)

    steps_taken = 1 + local.iter_624.steps_taken
  }
}

locals {
  end_of_code_626 = try(local.iter_625.code_ptr >= length(var.code), true)

  curr_626 = local.end_of_code_626 ? null : {
    code = substr(var.code, local.iter_625.code_ptr, 1)
    input = substr(var.code, local.iter_625.code_ptr, 1) == "," ? substr(local.iter_625.input, 0, 1) : null
  }

  iter_626 = local.end_of_code_626 ? local.iter_625 : {
    input = (local.curr_626.code == ","
      ? substr(local.iter_625.input, 1, -1)
      : local.iter_625.input)

    output = (local.curr_626.code == "."
      ? "${local.iter_625.output}${jsondecode(format("\"\\u%04x\"", local.iter_625.tape[local.iter_625.tape_ptr]))}"
      : local.iter_625.output)
    
    tape = (
      local.curr_626.code == "+"
        ? [for i, b in local.iter_625.tape : (i == local.iter_625.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_626.code == "-"
        ? [for i, b in local.iter_625.tape : (i == local.iter_625.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_626.code == ","
        ? [for i, b in local.iter_625.tape : (i == local.iter_625.tape_ptr ? local.ascii_lookup[local.curr_626.input] : b)]
        : local.iter_625.tape)

    tape_ptr = (
      local.curr_626.code == "<"
        ? local.iter_625.tape_ptr == 0 ? length(local.iter_625.tape) - 1 : local.iter_625.tape_ptr - 1 :
      local.curr_626.code == ">"
        ? local.iter_625.tape_ptr == length(local.iter_625.tape) - 1 ? 0 : local.iter_625.tape_ptr + 1
        : local.iter_625.tape_ptr)

    code_ptr = 1 + (
      local.curr_626.code == "["
        ? local.iter_625.tape[local.iter_625.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_625.code_ptr)] : local.iter_625.code_ptr :
      local.curr_626.code == "]"
        ? local.iter_625.tape[local.iter_625.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_625.code_ptr)] : local.iter_625.code_ptr
        : local.iter_625.code_ptr)

    steps_taken = 1 + local.iter_625.steps_taken
  }
}

locals {
  end_of_code_627 = try(local.iter_626.code_ptr >= length(var.code), true)

  curr_627 = local.end_of_code_627 ? null : {
    code = substr(var.code, local.iter_626.code_ptr, 1)
    input = substr(var.code, local.iter_626.code_ptr, 1) == "," ? substr(local.iter_626.input, 0, 1) : null
  }

  iter_627 = local.end_of_code_627 ? local.iter_626 : {
    input = (local.curr_627.code == ","
      ? substr(local.iter_626.input, 1, -1)
      : local.iter_626.input)

    output = (local.curr_627.code == "."
      ? "${local.iter_626.output}${jsondecode(format("\"\\u%04x\"", local.iter_626.tape[local.iter_626.tape_ptr]))}"
      : local.iter_626.output)
    
    tape = (
      local.curr_627.code == "+"
        ? [for i, b in local.iter_626.tape : (i == local.iter_626.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_627.code == "-"
        ? [for i, b in local.iter_626.tape : (i == local.iter_626.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_627.code == ","
        ? [for i, b in local.iter_626.tape : (i == local.iter_626.tape_ptr ? local.ascii_lookup[local.curr_627.input] : b)]
        : local.iter_626.tape)

    tape_ptr = (
      local.curr_627.code == "<"
        ? local.iter_626.tape_ptr == 0 ? length(local.iter_626.tape) - 1 : local.iter_626.tape_ptr - 1 :
      local.curr_627.code == ">"
        ? local.iter_626.tape_ptr == length(local.iter_626.tape) - 1 ? 0 : local.iter_626.tape_ptr + 1
        : local.iter_626.tape_ptr)

    code_ptr = 1 + (
      local.curr_627.code == "["
        ? local.iter_626.tape[local.iter_626.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_626.code_ptr)] : local.iter_626.code_ptr :
      local.curr_627.code == "]"
        ? local.iter_626.tape[local.iter_626.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_626.code_ptr)] : local.iter_626.code_ptr
        : local.iter_626.code_ptr)

    steps_taken = 1 + local.iter_626.steps_taken
  }
}

locals {
  end_of_code_628 = try(local.iter_627.code_ptr >= length(var.code), true)

  curr_628 = local.end_of_code_628 ? null : {
    code = substr(var.code, local.iter_627.code_ptr, 1)
    input = substr(var.code, local.iter_627.code_ptr, 1) == "," ? substr(local.iter_627.input, 0, 1) : null
  }

  iter_628 = local.end_of_code_628 ? local.iter_627 : {
    input = (local.curr_628.code == ","
      ? substr(local.iter_627.input, 1, -1)
      : local.iter_627.input)

    output = (local.curr_628.code == "."
      ? "${local.iter_627.output}${jsondecode(format("\"\\u%04x\"", local.iter_627.tape[local.iter_627.tape_ptr]))}"
      : local.iter_627.output)
    
    tape = (
      local.curr_628.code == "+"
        ? [for i, b in local.iter_627.tape : (i == local.iter_627.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_628.code == "-"
        ? [for i, b in local.iter_627.tape : (i == local.iter_627.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_628.code == ","
        ? [for i, b in local.iter_627.tape : (i == local.iter_627.tape_ptr ? local.ascii_lookup[local.curr_628.input] : b)]
        : local.iter_627.tape)

    tape_ptr = (
      local.curr_628.code == "<"
        ? local.iter_627.tape_ptr == 0 ? length(local.iter_627.tape) - 1 : local.iter_627.tape_ptr - 1 :
      local.curr_628.code == ">"
        ? local.iter_627.tape_ptr == length(local.iter_627.tape) - 1 ? 0 : local.iter_627.tape_ptr + 1
        : local.iter_627.tape_ptr)

    code_ptr = 1 + (
      local.curr_628.code == "["
        ? local.iter_627.tape[local.iter_627.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_627.code_ptr)] : local.iter_627.code_ptr :
      local.curr_628.code == "]"
        ? local.iter_627.tape[local.iter_627.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_627.code_ptr)] : local.iter_627.code_ptr
        : local.iter_627.code_ptr)

    steps_taken = 1 + local.iter_627.steps_taken
  }
}

locals {
  end_of_code_629 = try(local.iter_628.code_ptr >= length(var.code), true)

  curr_629 = local.end_of_code_629 ? null : {
    code = substr(var.code, local.iter_628.code_ptr, 1)
    input = substr(var.code, local.iter_628.code_ptr, 1) == "," ? substr(local.iter_628.input, 0, 1) : null
  }

  iter_629 = local.end_of_code_629 ? local.iter_628 : {
    input = (local.curr_629.code == ","
      ? substr(local.iter_628.input, 1, -1)
      : local.iter_628.input)

    output = (local.curr_629.code == "."
      ? "${local.iter_628.output}${jsondecode(format("\"\\u%04x\"", local.iter_628.tape[local.iter_628.tape_ptr]))}"
      : local.iter_628.output)
    
    tape = (
      local.curr_629.code == "+"
        ? [for i, b in local.iter_628.tape : (i == local.iter_628.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_629.code == "-"
        ? [for i, b in local.iter_628.tape : (i == local.iter_628.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_629.code == ","
        ? [for i, b in local.iter_628.tape : (i == local.iter_628.tape_ptr ? local.ascii_lookup[local.curr_629.input] : b)]
        : local.iter_628.tape)

    tape_ptr = (
      local.curr_629.code == "<"
        ? local.iter_628.tape_ptr == 0 ? length(local.iter_628.tape) - 1 : local.iter_628.tape_ptr - 1 :
      local.curr_629.code == ">"
        ? local.iter_628.tape_ptr == length(local.iter_628.tape) - 1 ? 0 : local.iter_628.tape_ptr + 1
        : local.iter_628.tape_ptr)

    code_ptr = 1 + (
      local.curr_629.code == "["
        ? local.iter_628.tape[local.iter_628.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_628.code_ptr)] : local.iter_628.code_ptr :
      local.curr_629.code == "]"
        ? local.iter_628.tape[local.iter_628.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_628.code_ptr)] : local.iter_628.code_ptr
        : local.iter_628.code_ptr)

    steps_taken = 1 + local.iter_628.steps_taken
  }
}

locals {
  end_of_code_630 = try(local.iter_629.code_ptr >= length(var.code), true)

  curr_630 = local.end_of_code_630 ? null : {
    code = substr(var.code, local.iter_629.code_ptr, 1)
    input = substr(var.code, local.iter_629.code_ptr, 1) == "," ? substr(local.iter_629.input, 0, 1) : null
  }

  iter_630 = local.end_of_code_630 ? local.iter_629 : {
    input = (local.curr_630.code == ","
      ? substr(local.iter_629.input, 1, -1)
      : local.iter_629.input)

    output = (local.curr_630.code == "."
      ? "${local.iter_629.output}${jsondecode(format("\"\\u%04x\"", local.iter_629.tape[local.iter_629.tape_ptr]))}"
      : local.iter_629.output)
    
    tape = (
      local.curr_630.code == "+"
        ? [for i, b in local.iter_629.tape : (i == local.iter_629.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_630.code == "-"
        ? [for i, b in local.iter_629.tape : (i == local.iter_629.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_630.code == ","
        ? [for i, b in local.iter_629.tape : (i == local.iter_629.tape_ptr ? local.ascii_lookup[local.curr_630.input] : b)]
        : local.iter_629.tape)

    tape_ptr = (
      local.curr_630.code == "<"
        ? local.iter_629.tape_ptr == 0 ? length(local.iter_629.tape) - 1 : local.iter_629.tape_ptr - 1 :
      local.curr_630.code == ">"
        ? local.iter_629.tape_ptr == length(local.iter_629.tape) - 1 ? 0 : local.iter_629.tape_ptr + 1
        : local.iter_629.tape_ptr)

    code_ptr = 1 + (
      local.curr_630.code == "["
        ? local.iter_629.tape[local.iter_629.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_629.code_ptr)] : local.iter_629.code_ptr :
      local.curr_630.code == "]"
        ? local.iter_629.tape[local.iter_629.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_629.code_ptr)] : local.iter_629.code_ptr
        : local.iter_629.code_ptr)

    steps_taken = 1 + local.iter_629.steps_taken
  }
}

locals {
  end_of_code_631 = try(local.iter_630.code_ptr >= length(var.code), true)

  curr_631 = local.end_of_code_631 ? null : {
    code = substr(var.code, local.iter_630.code_ptr, 1)
    input = substr(var.code, local.iter_630.code_ptr, 1) == "," ? substr(local.iter_630.input, 0, 1) : null
  }

  iter_631 = local.end_of_code_631 ? local.iter_630 : {
    input = (local.curr_631.code == ","
      ? substr(local.iter_630.input, 1, -1)
      : local.iter_630.input)

    output = (local.curr_631.code == "."
      ? "${local.iter_630.output}${jsondecode(format("\"\\u%04x\"", local.iter_630.tape[local.iter_630.tape_ptr]))}"
      : local.iter_630.output)
    
    tape = (
      local.curr_631.code == "+"
        ? [for i, b in local.iter_630.tape : (i == local.iter_630.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_631.code == "-"
        ? [for i, b in local.iter_630.tape : (i == local.iter_630.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_631.code == ","
        ? [for i, b in local.iter_630.tape : (i == local.iter_630.tape_ptr ? local.ascii_lookup[local.curr_631.input] : b)]
        : local.iter_630.tape)

    tape_ptr = (
      local.curr_631.code == "<"
        ? local.iter_630.tape_ptr == 0 ? length(local.iter_630.tape) - 1 : local.iter_630.tape_ptr - 1 :
      local.curr_631.code == ">"
        ? local.iter_630.tape_ptr == length(local.iter_630.tape) - 1 ? 0 : local.iter_630.tape_ptr + 1
        : local.iter_630.tape_ptr)

    code_ptr = 1 + (
      local.curr_631.code == "["
        ? local.iter_630.tape[local.iter_630.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_630.code_ptr)] : local.iter_630.code_ptr :
      local.curr_631.code == "]"
        ? local.iter_630.tape[local.iter_630.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_630.code_ptr)] : local.iter_630.code_ptr
        : local.iter_630.code_ptr)

    steps_taken = 1 + local.iter_630.steps_taken
  }
}

locals {
  end_of_code_632 = try(local.iter_631.code_ptr >= length(var.code), true)

  curr_632 = local.end_of_code_632 ? null : {
    code = substr(var.code, local.iter_631.code_ptr, 1)
    input = substr(var.code, local.iter_631.code_ptr, 1) == "," ? substr(local.iter_631.input, 0, 1) : null
  }

  iter_632 = local.end_of_code_632 ? local.iter_631 : {
    input = (local.curr_632.code == ","
      ? substr(local.iter_631.input, 1, -1)
      : local.iter_631.input)

    output = (local.curr_632.code == "."
      ? "${local.iter_631.output}${jsondecode(format("\"\\u%04x\"", local.iter_631.tape[local.iter_631.tape_ptr]))}"
      : local.iter_631.output)
    
    tape = (
      local.curr_632.code == "+"
        ? [for i, b in local.iter_631.tape : (i == local.iter_631.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_632.code == "-"
        ? [for i, b in local.iter_631.tape : (i == local.iter_631.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_632.code == ","
        ? [for i, b in local.iter_631.tape : (i == local.iter_631.tape_ptr ? local.ascii_lookup[local.curr_632.input] : b)]
        : local.iter_631.tape)

    tape_ptr = (
      local.curr_632.code == "<"
        ? local.iter_631.tape_ptr == 0 ? length(local.iter_631.tape) - 1 : local.iter_631.tape_ptr - 1 :
      local.curr_632.code == ">"
        ? local.iter_631.tape_ptr == length(local.iter_631.tape) - 1 ? 0 : local.iter_631.tape_ptr + 1
        : local.iter_631.tape_ptr)

    code_ptr = 1 + (
      local.curr_632.code == "["
        ? local.iter_631.tape[local.iter_631.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_631.code_ptr)] : local.iter_631.code_ptr :
      local.curr_632.code == "]"
        ? local.iter_631.tape[local.iter_631.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_631.code_ptr)] : local.iter_631.code_ptr
        : local.iter_631.code_ptr)

    steps_taken = 1 + local.iter_631.steps_taken
  }
}

locals {
  end_of_code_633 = try(local.iter_632.code_ptr >= length(var.code), true)

  curr_633 = local.end_of_code_633 ? null : {
    code = substr(var.code, local.iter_632.code_ptr, 1)
    input = substr(var.code, local.iter_632.code_ptr, 1) == "," ? substr(local.iter_632.input, 0, 1) : null
  }

  iter_633 = local.end_of_code_633 ? local.iter_632 : {
    input = (local.curr_633.code == ","
      ? substr(local.iter_632.input, 1, -1)
      : local.iter_632.input)

    output = (local.curr_633.code == "."
      ? "${local.iter_632.output}${jsondecode(format("\"\\u%04x\"", local.iter_632.tape[local.iter_632.tape_ptr]))}"
      : local.iter_632.output)
    
    tape = (
      local.curr_633.code == "+"
        ? [for i, b in local.iter_632.tape : (i == local.iter_632.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_633.code == "-"
        ? [for i, b in local.iter_632.tape : (i == local.iter_632.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_633.code == ","
        ? [for i, b in local.iter_632.tape : (i == local.iter_632.tape_ptr ? local.ascii_lookup[local.curr_633.input] : b)]
        : local.iter_632.tape)

    tape_ptr = (
      local.curr_633.code == "<"
        ? local.iter_632.tape_ptr == 0 ? length(local.iter_632.tape) - 1 : local.iter_632.tape_ptr - 1 :
      local.curr_633.code == ">"
        ? local.iter_632.tape_ptr == length(local.iter_632.tape) - 1 ? 0 : local.iter_632.tape_ptr + 1
        : local.iter_632.tape_ptr)

    code_ptr = 1 + (
      local.curr_633.code == "["
        ? local.iter_632.tape[local.iter_632.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_632.code_ptr)] : local.iter_632.code_ptr :
      local.curr_633.code == "]"
        ? local.iter_632.tape[local.iter_632.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_632.code_ptr)] : local.iter_632.code_ptr
        : local.iter_632.code_ptr)

    steps_taken = 1 + local.iter_632.steps_taken
  }
}

locals {
  end_of_code_634 = try(local.iter_633.code_ptr >= length(var.code), true)

  curr_634 = local.end_of_code_634 ? null : {
    code = substr(var.code, local.iter_633.code_ptr, 1)
    input = substr(var.code, local.iter_633.code_ptr, 1) == "," ? substr(local.iter_633.input, 0, 1) : null
  }

  iter_634 = local.end_of_code_634 ? local.iter_633 : {
    input = (local.curr_634.code == ","
      ? substr(local.iter_633.input, 1, -1)
      : local.iter_633.input)

    output = (local.curr_634.code == "."
      ? "${local.iter_633.output}${jsondecode(format("\"\\u%04x\"", local.iter_633.tape[local.iter_633.tape_ptr]))}"
      : local.iter_633.output)
    
    tape = (
      local.curr_634.code == "+"
        ? [for i, b in local.iter_633.tape : (i == local.iter_633.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_634.code == "-"
        ? [for i, b in local.iter_633.tape : (i == local.iter_633.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_634.code == ","
        ? [for i, b in local.iter_633.tape : (i == local.iter_633.tape_ptr ? local.ascii_lookup[local.curr_634.input] : b)]
        : local.iter_633.tape)

    tape_ptr = (
      local.curr_634.code == "<"
        ? local.iter_633.tape_ptr == 0 ? length(local.iter_633.tape) - 1 : local.iter_633.tape_ptr - 1 :
      local.curr_634.code == ">"
        ? local.iter_633.tape_ptr == length(local.iter_633.tape) - 1 ? 0 : local.iter_633.tape_ptr + 1
        : local.iter_633.tape_ptr)

    code_ptr = 1 + (
      local.curr_634.code == "["
        ? local.iter_633.tape[local.iter_633.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_633.code_ptr)] : local.iter_633.code_ptr :
      local.curr_634.code == "]"
        ? local.iter_633.tape[local.iter_633.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_633.code_ptr)] : local.iter_633.code_ptr
        : local.iter_633.code_ptr)

    steps_taken = 1 + local.iter_633.steps_taken
  }
}

locals {
  end_of_code_635 = try(local.iter_634.code_ptr >= length(var.code), true)

  curr_635 = local.end_of_code_635 ? null : {
    code = substr(var.code, local.iter_634.code_ptr, 1)
    input = substr(var.code, local.iter_634.code_ptr, 1) == "," ? substr(local.iter_634.input, 0, 1) : null
  }

  iter_635 = local.end_of_code_635 ? local.iter_634 : {
    input = (local.curr_635.code == ","
      ? substr(local.iter_634.input, 1, -1)
      : local.iter_634.input)

    output = (local.curr_635.code == "."
      ? "${local.iter_634.output}${jsondecode(format("\"\\u%04x\"", local.iter_634.tape[local.iter_634.tape_ptr]))}"
      : local.iter_634.output)
    
    tape = (
      local.curr_635.code == "+"
        ? [for i, b in local.iter_634.tape : (i == local.iter_634.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_635.code == "-"
        ? [for i, b in local.iter_634.tape : (i == local.iter_634.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_635.code == ","
        ? [for i, b in local.iter_634.tape : (i == local.iter_634.tape_ptr ? local.ascii_lookup[local.curr_635.input] : b)]
        : local.iter_634.tape)

    tape_ptr = (
      local.curr_635.code == "<"
        ? local.iter_634.tape_ptr == 0 ? length(local.iter_634.tape) - 1 : local.iter_634.tape_ptr - 1 :
      local.curr_635.code == ">"
        ? local.iter_634.tape_ptr == length(local.iter_634.tape) - 1 ? 0 : local.iter_634.tape_ptr + 1
        : local.iter_634.tape_ptr)

    code_ptr = 1 + (
      local.curr_635.code == "["
        ? local.iter_634.tape[local.iter_634.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_634.code_ptr)] : local.iter_634.code_ptr :
      local.curr_635.code == "]"
        ? local.iter_634.tape[local.iter_634.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_634.code_ptr)] : local.iter_634.code_ptr
        : local.iter_634.code_ptr)

    steps_taken = 1 + local.iter_634.steps_taken
  }
}

locals {
  end_of_code_636 = try(local.iter_635.code_ptr >= length(var.code), true)

  curr_636 = local.end_of_code_636 ? null : {
    code = substr(var.code, local.iter_635.code_ptr, 1)
    input = substr(var.code, local.iter_635.code_ptr, 1) == "," ? substr(local.iter_635.input, 0, 1) : null
  }

  iter_636 = local.end_of_code_636 ? local.iter_635 : {
    input = (local.curr_636.code == ","
      ? substr(local.iter_635.input, 1, -1)
      : local.iter_635.input)

    output = (local.curr_636.code == "."
      ? "${local.iter_635.output}${jsondecode(format("\"\\u%04x\"", local.iter_635.tape[local.iter_635.tape_ptr]))}"
      : local.iter_635.output)
    
    tape = (
      local.curr_636.code == "+"
        ? [for i, b in local.iter_635.tape : (i == local.iter_635.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_636.code == "-"
        ? [for i, b in local.iter_635.tape : (i == local.iter_635.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_636.code == ","
        ? [for i, b in local.iter_635.tape : (i == local.iter_635.tape_ptr ? local.ascii_lookup[local.curr_636.input] : b)]
        : local.iter_635.tape)

    tape_ptr = (
      local.curr_636.code == "<"
        ? local.iter_635.tape_ptr == 0 ? length(local.iter_635.tape) - 1 : local.iter_635.tape_ptr - 1 :
      local.curr_636.code == ">"
        ? local.iter_635.tape_ptr == length(local.iter_635.tape) - 1 ? 0 : local.iter_635.tape_ptr + 1
        : local.iter_635.tape_ptr)

    code_ptr = 1 + (
      local.curr_636.code == "["
        ? local.iter_635.tape[local.iter_635.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_635.code_ptr)] : local.iter_635.code_ptr :
      local.curr_636.code == "]"
        ? local.iter_635.tape[local.iter_635.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_635.code_ptr)] : local.iter_635.code_ptr
        : local.iter_635.code_ptr)

    steps_taken = 1 + local.iter_635.steps_taken
  }
}

locals {
  end_of_code_637 = try(local.iter_636.code_ptr >= length(var.code), true)

  curr_637 = local.end_of_code_637 ? null : {
    code = substr(var.code, local.iter_636.code_ptr, 1)
    input = substr(var.code, local.iter_636.code_ptr, 1) == "," ? substr(local.iter_636.input, 0, 1) : null
  }

  iter_637 = local.end_of_code_637 ? local.iter_636 : {
    input = (local.curr_637.code == ","
      ? substr(local.iter_636.input, 1, -1)
      : local.iter_636.input)

    output = (local.curr_637.code == "."
      ? "${local.iter_636.output}${jsondecode(format("\"\\u%04x\"", local.iter_636.tape[local.iter_636.tape_ptr]))}"
      : local.iter_636.output)
    
    tape = (
      local.curr_637.code == "+"
        ? [for i, b in local.iter_636.tape : (i == local.iter_636.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_637.code == "-"
        ? [for i, b in local.iter_636.tape : (i == local.iter_636.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_637.code == ","
        ? [for i, b in local.iter_636.tape : (i == local.iter_636.tape_ptr ? local.ascii_lookup[local.curr_637.input] : b)]
        : local.iter_636.tape)

    tape_ptr = (
      local.curr_637.code == "<"
        ? local.iter_636.tape_ptr == 0 ? length(local.iter_636.tape) - 1 : local.iter_636.tape_ptr - 1 :
      local.curr_637.code == ">"
        ? local.iter_636.tape_ptr == length(local.iter_636.tape) - 1 ? 0 : local.iter_636.tape_ptr + 1
        : local.iter_636.tape_ptr)

    code_ptr = 1 + (
      local.curr_637.code == "["
        ? local.iter_636.tape[local.iter_636.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_636.code_ptr)] : local.iter_636.code_ptr :
      local.curr_637.code == "]"
        ? local.iter_636.tape[local.iter_636.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_636.code_ptr)] : local.iter_636.code_ptr
        : local.iter_636.code_ptr)

    steps_taken = 1 + local.iter_636.steps_taken
  }
}

locals {
  end_of_code_638 = try(local.iter_637.code_ptr >= length(var.code), true)

  curr_638 = local.end_of_code_638 ? null : {
    code = substr(var.code, local.iter_637.code_ptr, 1)
    input = substr(var.code, local.iter_637.code_ptr, 1) == "," ? substr(local.iter_637.input, 0, 1) : null
  }

  iter_638 = local.end_of_code_638 ? local.iter_637 : {
    input = (local.curr_638.code == ","
      ? substr(local.iter_637.input, 1, -1)
      : local.iter_637.input)

    output = (local.curr_638.code == "."
      ? "${local.iter_637.output}${jsondecode(format("\"\\u%04x\"", local.iter_637.tape[local.iter_637.tape_ptr]))}"
      : local.iter_637.output)
    
    tape = (
      local.curr_638.code == "+"
        ? [for i, b in local.iter_637.tape : (i == local.iter_637.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_638.code == "-"
        ? [for i, b in local.iter_637.tape : (i == local.iter_637.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_638.code == ","
        ? [for i, b in local.iter_637.tape : (i == local.iter_637.tape_ptr ? local.ascii_lookup[local.curr_638.input] : b)]
        : local.iter_637.tape)

    tape_ptr = (
      local.curr_638.code == "<"
        ? local.iter_637.tape_ptr == 0 ? length(local.iter_637.tape) - 1 : local.iter_637.tape_ptr - 1 :
      local.curr_638.code == ">"
        ? local.iter_637.tape_ptr == length(local.iter_637.tape) - 1 ? 0 : local.iter_637.tape_ptr + 1
        : local.iter_637.tape_ptr)

    code_ptr = 1 + (
      local.curr_638.code == "["
        ? local.iter_637.tape[local.iter_637.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_637.code_ptr)] : local.iter_637.code_ptr :
      local.curr_638.code == "]"
        ? local.iter_637.tape[local.iter_637.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_637.code_ptr)] : local.iter_637.code_ptr
        : local.iter_637.code_ptr)

    steps_taken = 1 + local.iter_637.steps_taken
  }
}

locals {
  end_of_code_639 = try(local.iter_638.code_ptr >= length(var.code), true)

  curr_639 = local.end_of_code_639 ? null : {
    code = substr(var.code, local.iter_638.code_ptr, 1)
    input = substr(var.code, local.iter_638.code_ptr, 1) == "," ? substr(local.iter_638.input, 0, 1) : null
  }

  iter_639 = local.end_of_code_639 ? local.iter_638 : {
    input = (local.curr_639.code == ","
      ? substr(local.iter_638.input, 1, -1)
      : local.iter_638.input)

    output = (local.curr_639.code == "."
      ? "${local.iter_638.output}${jsondecode(format("\"\\u%04x\"", local.iter_638.tape[local.iter_638.tape_ptr]))}"
      : local.iter_638.output)
    
    tape = (
      local.curr_639.code == "+"
        ? [for i, b in local.iter_638.tape : (i == local.iter_638.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_639.code == "-"
        ? [for i, b in local.iter_638.tape : (i == local.iter_638.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_639.code == ","
        ? [for i, b in local.iter_638.tape : (i == local.iter_638.tape_ptr ? local.ascii_lookup[local.curr_639.input] : b)]
        : local.iter_638.tape)

    tape_ptr = (
      local.curr_639.code == "<"
        ? local.iter_638.tape_ptr == 0 ? length(local.iter_638.tape) - 1 : local.iter_638.tape_ptr - 1 :
      local.curr_639.code == ">"
        ? local.iter_638.tape_ptr == length(local.iter_638.tape) - 1 ? 0 : local.iter_638.tape_ptr + 1
        : local.iter_638.tape_ptr)

    code_ptr = 1 + (
      local.curr_639.code == "["
        ? local.iter_638.tape[local.iter_638.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_638.code_ptr)] : local.iter_638.code_ptr :
      local.curr_639.code == "]"
        ? local.iter_638.tape[local.iter_638.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_638.code_ptr)] : local.iter_638.code_ptr
        : local.iter_638.code_ptr)

    steps_taken = 1 + local.iter_638.steps_taken
  }
}

locals {
  end_of_code_640 = try(local.iter_639.code_ptr >= length(var.code), true)

  curr_640 = local.end_of_code_640 ? null : {
    code = substr(var.code, local.iter_639.code_ptr, 1)
    input = substr(var.code, local.iter_639.code_ptr, 1) == "," ? substr(local.iter_639.input, 0, 1) : null
  }

  iter_640 = local.end_of_code_640 ? local.iter_639 : {
    input = (local.curr_640.code == ","
      ? substr(local.iter_639.input, 1, -1)
      : local.iter_639.input)

    output = (local.curr_640.code == "."
      ? "${local.iter_639.output}${jsondecode(format("\"\\u%04x\"", local.iter_639.tape[local.iter_639.tape_ptr]))}"
      : local.iter_639.output)
    
    tape = (
      local.curr_640.code == "+"
        ? [for i, b in local.iter_639.tape : (i == local.iter_639.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_640.code == "-"
        ? [for i, b in local.iter_639.tape : (i == local.iter_639.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_640.code == ","
        ? [for i, b in local.iter_639.tape : (i == local.iter_639.tape_ptr ? local.ascii_lookup[local.curr_640.input] : b)]
        : local.iter_639.tape)

    tape_ptr = (
      local.curr_640.code == "<"
        ? local.iter_639.tape_ptr == 0 ? length(local.iter_639.tape) - 1 : local.iter_639.tape_ptr - 1 :
      local.curr_640.code == ">"
        ? local.iter_639.tape_ptr == length(local.iter_639.tape) - 1 ? 0 : local.iter_639.tape_ptr + 1
        : local.iter_639.tape_ptr)

    code_ptr = 1 + (
      local.curr_640.code == "["
        ? local.iter_639.tape[local.iter_639.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_639.code_ptr)] : local.iter_639.code_ptr :
      local.curr_640.code == "]"
        ? local.iter_639.tape[local.iter_639.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_639.code_ptr)] : local.iter_639.code_ptr
        : local.iter_639.code_ptr)

    steps_taken = 1 + local.iter_639.steps_taken
  }
}

locals {
  end_of_code_641 = try(local.iter_640.code_ptr >= length(var.code), true)

  curr_641 = local.end_of_code_641 ? null : {
    code = substr(var.code, local.iter_640.code_ptr, 1)
    input = substr(var.code, local.iter_640.code_ptr, 1) == "," ? substr(local.iter_640.input, 0, 1) : null
  }

  iter_641 = local.end_of_code_641 ? local.iter_640 : {
    input = (local.curr_641.code == ","
      ? substr(local.iter_640.input, 1, -1)
      : local.iter_640.input)

    output = (local.curr_641.code == "."
      ? "${local.iter_640.output}${jsondecode(format("\"\\u%04x\"", local.iter_640.tape[local.iter_640.tape_ptr]))}"
      : local.iter_640.output)
    
    tape = (
      local.curr_641.code == "+"
        ? [for i, b in local.iter_640.tape : (i == local.iter_640.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_641.code == "-"
        ? [for i, b in local.iter_640.tape : (i == local.iter_640.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_641.code == ","
        ? [for i, b in local.iter_640.tape : (i == local.iter_640.tape_ptr ? local.ascii_lookup[local.curr_641.input] : b)]
        : local.iter_640.tape)

    tape_ptr = (
      local.curr_641.code == "<"
        ? local.iter_640.tape_ptr == 0 ? length(local.iter_640.tape) - 1 : local.iter_640.tape_ptr - 1 :
      local.curr_641.code == ">"
        ? local.iter_640.tape_ptr == length(local.iter_640.tape) - 1 ? 0 : local.iter_640.tape_ptr + 1
        : local.iter_640.tape_ptr)

    code_ptr = 1 + (
      local.curr_641.code == "["
        ? local.iter_640.tape[local.iter_640.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_640.code_ptr)] : local.iter_640.code_ptr :
      local.curr_641.code == "]"
        ? local.iter_640.tape[local.iter_640.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_640.code_ptr)] : local.iter_640.code_ptr
        : local.iter_640.code_ptr)

    steps_taken = 1 + local.iter_640.steps_taken
  }
}

locals {
  end_of_code_642 = try(local.iter_641.code_ptr >= length(var.code), true)

  curr_642 = local.end_of_code_642 ? null : {
    code = substr(var.code, local.iter_641.code_ptr, 1)
    input = substr(var.code, local.iter_641.code_ptr, 1) == "," ? substr(local.iter_641.input, 0, 1) : null
  }

  iter_642 = local.end_of_code_642 ? local.iter_641 : {
    input = (local.curr_642.code == ","
      ? substr(local.iter_641.input, 1, -1)
      : local.iter_641.input)

    output = (local.curr_642.code == "."
      ? "${local.iter_641.output}${jsondecode(format("\"\\u%04x\"", local.iter_641.tape[local.iter_641.tape_ptr]))}"
      : local.iter_641.output)
    
    tape = (
      local.curr_642.code == "+"
        ? [for i, b in local.iter_641.tape : (i == local.iter_641.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_642.code == "-"
        ? [for i, b in local.iter_641.tape : (i == local.iter_641.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_642.code == ","
        ? [for i, b in local.iter_641.tape : (i == local.iter_641.tape_ptr ? local.ascii_lookup[local.curr_642.input] : b)]
        : local.iter_641.tape)

    tape_ptr = (
      local.curr_642.code == "<"
        ? local.iter_641.tape_ptr == 0 ? length(local.iter_641.tape) - 1 : local.iter_641.tape_ptr - 1 :
      local.curr_642.code == ">"
        ? local.iter_641.tape_ptr == length(local.iter_641.tape) - 1 ? 0 : local.iter_641.tape_ptr + 1
        : local.iter_641.tape_ptr)

    code_ptr = 1 + (
      local.curr_642.code == "["
        ? local.iter_641.tape[local.iter_641.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_641.code_ptr)] : local.iter_641.code_ptr :
      local.curr_642.code == "]"
        ? local.iter_641.tape[local.iter_641.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_641.code_ptr)] : local.iter_641.code_ptr
        : local.iter_641.code_ptr)

    steps_taken = 1 + local.iter_641.steps_taken
  }
}

locals {
  end_of_code_643 = try(local.iter_642.code_ptr >= length(var.code), true)

  curr_643 = local.end_of_code_643 ? null : {
    code = substr(var.code, local.iter_642.code_ptr, 1)
    input = substr(var.code, local.iter_642.code_ptr, 1) == "," ? substr(local.iter_642.input, 0, 1) : null
  }

  iter_643 = local.end_of_code_643 ? local.iter_642 : {
    input = (local.curr_643.code == ","
      ? substr(local.iter_642.input, 1, -1)
      : local.iter_642.input)

    output = (local.curr_643.code == "."
      ? "${local.iter_642.output}${jsondecode(format("\"\\u%04x\"", local.iter_642.tape[local.iter_642.tape_ptr]))}"
      : local.iter_642.output)
    
    tape = (
      local.curr_643.code == "+"
        ? [for i, b in local.iter_642.tape : (i == local.iter_642.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_643.code == "-"
        ? [for i, b in local.iter_642.tape : (i == local.iter_642.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_643.code == ","
        ? [for i, b in local.iter_642.tape : (i == local.iter_642.tape_ptr ? local.ascii_lookup[local.curr_643.input] : b)]
        : local.iter_642.tape)

    tape_ptr = (
      local.curr_643.code == "<"
        ? local.iter_642.tape_ptr == 0 ? length(local.iter_642.tape) - 1 : local.iter_642.tape_ptr - 1 :
      local.curr_643.code == ">"
        ? local.iter_642.tape_ptr == length(local.iter_642.tape) - 1 ? 0 : local.iter_642.tape_ptr + 1
        : local.iter_642.tape_ptr)

    code_ptr = 1 + (
      local.curr_643.code == "["
        ? local.iter_642.tape[local.iter_642.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_642.code_ptr)] : local.iter_642.code_ptr :
      local.curr_643.code == "]"
        ? local.iter_642.tape[local.iter_642.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_642.code_ptr)] : local.iter_642.code_ptr
        : local.iter_642.code_ptr)

    steps_taken = 1 + local.iter_642.steps_taken
  }
}

locals {
  end_of_code_644 = try(local.iter_643.code_ptr >= length(var.code), true)

  curr_644 = local.end_of_code_644 ? null : {
    code = substr(var.code, local.iter_643.code_ptr, 1)
    input = substr(var.code, local.iter_643.code_ptr, 1) == "," ? substr(local.iter_643.input, 0, 1) : null
  }

  iter_644 = local.end_of_code_644 ? local.iter_643 : {
    input = (local.curr_644.code == ","
      ? substr(local.iter_643.input, 1, -1)
      : local.iter_643.input)

    output = (local.curr_644.code == "."
      ? "${local.iter_643.output}${jsondecode(format("\"\\u%04x\"", local.iter_643.tape[local.iter_643.tape_ptr]))}"
      : local.iter_643.output)
    
    tape = (
      local.curr_644.code == "+"
        ? [for i, b in local.iter_643.tape : (i == local.iter_643.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_644.code == "-"
        ? [for i, b in local.iter_643.tape : (i == local.iter_643.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_644.code == ","
        ? [for i, b in local.iter_643.tape : (i == local.iter_643.tape_ptr ? local.ascii_lookup[local.curr_644.input] : b)]
        : local.iter_643.tape)

    tape_ptr = (
      local.curr_644.code == "<"
        ? local.iter_643.tape_ptr == 0 ? length(local.iter_643.tape) - 1 : local.iter_643.tape_ptr - 1 :
      local.curr_644.code == ">"
        ? local.iter_643.tape_ptr == length(local.iter_643.tape) - 1 ? 0 : local.iter_643.tape_ptr + 1
        : local.iter_643.tape_ptr)

    code_ptr = 1 + (
      local.curr_644.code == "["
        ? local.iter_643.tape[local.iter_643.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_643.code_ptr)] : local.iter_643.code_ptr :
      local.curr_644.code == "]"
        ? local.iter_643.tape[local.iter_643.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_643.code_ptr)] : local.iter_643.code_ptr
        : local.iter_643.code_ptr)

    steps_taken = 1 + local.iter_643.steps_taken
  }
}

locals {
  end_of_code_645 = try(local.iter_644.code_ptr >= length(var.code), true)

  curr_645 = local.end_of_code_645 ? null : {
    code = substr(var.code, local.iter_644.code_ptr, 1)
    input = substr(var.code, local.iter_644.code_ptr, 1) == "," ? substr(local.iter_644.input, 0, 1) : null
  }

  iter_645 = local.end_of_code_645 ? local.iter_644 : {
    input = (local.curr_645.code == ","
      ? substr(local.iter_644.input, 1, -1)
      : local.iter_644.input)

    output = (local.curr_645.code == "."
      ? "${local.iter_644.output}${jsondecode(format("\"\\u%04x\"", local.iter_644.tape[local.iter_644.tape_ptr]))}"
      : local.iter_644.output)
    
    tape = (
      local.curr_645.code == "+"
        ? [for i, b in local.iter_644.tape : (i == local.iter_644.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_645.code == "-"
        ? [for i, b in local.iter_644.tape : (i == local.iter_644.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_645.code == ","
        ? [for i, b in local.iter_644.tape : (i == local.iter_644.tape_ptr ? local.ascii_lookup[local.curr_645.input] : b)]
        : local.iter_644.tape)

    tape_ptr = (
      local.curr_645.code == "<"
        ? local.iter_644.tape_ptr == 0 ? length(local.iter_644.tape) - 1 : local.iter_644.tape_ptr - 1 :
      local.curr_645.code == ">"
        ? local.iter_644.tape_ptr == length(local.iter_644.tape) - 1 ? 0 : local.iter_644.tape_ptr + 1
        : local.iter_644.tape_ptr)

    code_ptr = 1 + (
      local.curr_645.code == "["
        ? local.iter_644.tape[local.iter_644.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_644.code_ptr)] : local.iter_644.code_ptr :
      local.curr_645.code == "]"
        ? local.iter_644.tape[local.iter_644.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_644.code_ptr)] : local.iter_644.code_ptr
        : local.iter_644.code_ptr)

    steps_taken = 1 + local.iter_644.steps_taken
  }
}

locals {
  end_of_code_646 = try(local.iter_645.code_ptr >= length(var.code), true)

  curr_646 = local.end_of_code_646 ? null : {
    code = substr(var.code, local.iter_645.code_ptr, 1)
    input = substr(var.code, local.iter_645.code_ptr, 1) == "," ? substr(local.iter_645.input, 0, 1) : null
  }

  iter_646 = local.end_of_code_646 ? local.iter_645 : {
    input = (local.curr_646.code == ","
      ? substr(local.iter_645.input, 1, -1)
      : local.iter_645.input)

    output = (local.curr_646.code == "."
      ? "${local.iter_645.output}${jsondecode(format("\"\\u%04x\"", local.iter_645.tape[local.iter_645.tape_ptr]))}"
      : local.iter_645.output)
    
    tape = (
      local.curr_646.code == "+"
        ? [for i, b in local.iter_645.tape : (i == local.iter_645.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_646.code == "-"
        ? [for i, b in local.iter_645.tape : (i == local.iter_645.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_646.code == ","
        ? [for i, b in local.iter_645.tape : (i == local.iter_645.tape_ptr ? local.ascii_lookup[local.curr_646.input] : b)]
        : local.iter_645.tape)

    tape_ptr = (
      local.curr_646.code == "<"
        ? local.iter_645.tape_ptr == 0 ? length(local.iter_645.tape) - 1 : local.iter_645.tape_ptr - 1 :
      local.curr_646.code == ">"
        ? local.iter_645.tape_ptr == length(local.iter_645.tape) - 1 ? 0 : local.iter_645.tape_ptr + 1
        : local.iter_645.tape_ptr)

    code_ptr = 1 + (
      local.curr_646.code == "["
        ? local.iter_645.tape[local.iter_645.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_645.code_ptr)] : local.iter_645.code_ptr :
      local.curr_646.code == "]"
        ? local.iter_645.tape[local.iter_645.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_645.code_ptr)] : local.iter_645.code_ptr
        : local.iter_645.code_ptr)

    steps_taken = 1 + local.iter_645.steps_taken
  }
}

locals {
  end_of_code_647 = try(local.iter_646.code_ptr >= length(var.code), true)

  curr_647 = local.end_of_code_647 ? null : {
    code = substr(var.code, local.iter_646.code_ptr, 1)
    input = substr(var.code, local.iter_646.code_ptr, 1) == "," ? substr(local.iter_646.input, 0, 1) : null
  }

  iter_647 = local.end_of_code_647 ? local.iter_646 : {
    input = (local.curr_647.code == ","
      ? substr(local.iter_646.input, 1, -1)
      : local.iter_646.input)

    output = (local.curr_647.code == "."
      ? "${local.iter_646.output}${jsondecode(format("\"\\u%04x\"", local.iter_646.tape[local.iter_646.tape_ptr]))}"
      : local.iter_646.output)
    
    tape = (
      local.curr_647.code == "+"
        ? [for i, b in local.iter_646.tape : (i == local.iter_646.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_647.code == "-"
        ? [for i, b in local.iter_646.tape : (i == local.iter_646.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_647.code == ","
        ? [for i, b in local.iter_646.tape : (i == local.iter_646.tape_ptr ? local.ascii_lookup[local.curr_647.input] : b)]
        : local.iter_646.tape)

    tape_ptr = (
      local.curr_647.code == "<"
        ? local.iter_646.tape_ptr == 0 ? length(local.iter_646.tape) - 1 : local.iter_646.tape_ptr - 1 :
      local.curr_647.code == ">"
        ? local.iter_646.tape_ptr == length(local.iter_646.tape) - 1 ? 0 : local.iter_646.tape_ptr + 1
        : local.iter_646.tape_ptr)

    code_ptr = 1 + (
      local.curr_647.code == "["
        ? local.iter_646.tape[local.iter_646.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_646.code_ptr)] : local.iter_646.code_ptr :
      local.curr_647.code == "]"
        ? local.iter_646.tape[local.iter_646.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_646.code_ptr)] : local.iter_646.code_ptr
        : local.iter_646.code_ptr)

    steps_taken = 1 + local.iter_646.steps_taken
  }
}

locals {
  end_of_code_648 = try(local.iter_647.code_ptr >= length(var.code), true)

  curr_648 = local.end_of_code_648 ? null : {
    code = substr(var.code, local.iter_647.code_ptr, 1)
    input = substr(var.code, local.iter_647.code_ptr, 1) == "," ? substr(local.iter_647.input, 0, 1) : null
  }

  iter_648 = local.end_of_code_648 ? local.iter_647 : {
    input = (local.curr_648.code == ","
      ? substr(local.iter_647.input, 1, -1)
      : local.iter_647.input)

    output = (local.curr_648.code == "."
      ? "${local.iter_647.output}${jsondecode(format("\"\\u%04x\"", local.iter_647.tape[local.iter_647.tape_ptr]))}"
      : local.iter_647.output)
    
    tape = (
      local.curr_648.code == "+"
        ? [for i, b in local.iter_647.tape : (i == local.iter_647.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_648.code == "-"
        ? [for i, b in local.iter_647.tape : (i == local.iter_647.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_648.code == ","
        ? [for i, b in local.iter_647.tape : (i == local.iter_647.tape_ptr ? local.ascii_lookup[local.curr_648.input] : b)]
        : local.iter_647.tape)

    tape_ptr = (
      local.curr_648.code == "<"
        ? local.iter_647.tape_ptr == 0 ? length(local.iter_647.tape) - 1 : local.iter_647.tape_ptr - 1 :
      local.curr_648.code == ">"
        ? local.iter_647.tape_ptr == length(local.iter_647.tape) - 1 ? 0 : local.iter_647.tape_ptr + 1
        : local.iter_647.tape_ptr)

    code_ptr = 1 + (
      local.curr_648.code == "["
        ? local.iter_647.tape[local.iter_647.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_647.code_ptr)] : local.iter_647.code_ptr :
      local.curr_648.code == "]"
        ? local.iter_647.tape[local.iter_647.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_647.code_ptr)] : local.iter_647.code_ptr
        : local.iter_647.code_ptr)

    steps_taken = 1 + local.iter_647.steps_taken
  }
}

locals {
  end_of_code_649 = try(local.iter_648.code_ptr >= length(var.code), true)

  curr_649 = local.end_of_code_649 ? null : {
    code = substr(var.code, local.iter_648.code_ptr, 1)
    input = substr(var.code, local.iter_648.code_ptr, 1) == "," ? substr(local.iter_648.input, 0, 1) : null
  }

  iter_649 = local.end_of_code_649 ? local.iter_648 : {
    input = (local.curr_649.code == ","
      ? substr(local.iter_648.input, 1, -1)
      : local.iter_648.input)

    output = (local.curr_649.code == "."
      ? "${local.iter_648.output}${jsondecode(format("\"\\u%04x\"", local.iter_648.tape[local.iter_648.tape_ptr]))}"
      : local.iter_648.output)
    
    tape = (
      local.curr_649.code == "+"
        ? [for i, b in local.iter_648.tape : (i == local.iter_648.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_649.code == "-"
        ? [for i, b in local.iter_648.tape : (i == local.iter_648.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_649.code == ","
        ? [for i, b in local.iter_648.tape : (i == local.iter_648.tape_ptr ? local.ascii_lookup[local.curr_649.input] : b)]
        : local.iter_648.tape)

    tape_ptr = (
      local.curr_649.code == "<"
        ? local.iter_648.tape_ptr == 0 ? length(local.iter_648.tape) - 1 : local.iter_648.tape_ptr - 1 :
      local.curr_649.code == ">"
        ? local.iter_648.tape_ptr == length(local.iter_648.tape) - 1 ? 0 : local.iter_648.tape_ptr + 1
        : local.iter_648.tape_ptr)

    code_ptr = 1 + (
      local.curr_649.code == "["
        ? local.iter_648.tape[local.iter_648.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_648.code_ptr)] : local.iter_648.code_ptr :
      local.curr_649.code == "]"
        ? local.iter_648.tape[local.iter_648.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_648.code_ptr)] : local.iter_648.code_ptr
        : local.iter_648.code_ptr)

    steps_taken = 1 + local.iter_648.steps_taken
  }
}

locals {
  end_of_code_650 = try(local.iter_649.code_ptr >= length(var.code), true)

  curr_650 = local.end_of_code_650 ? null : {
    code = substr(var.code, local.iter_649.code_ptr, 1)
    input = substr(var.code, local.iter_649.code_ptr, 1) == "," ? substr(local.iter_649.input, 0, 1) : null
  }

  iter_650 = local.end_of_code_650 ? local.iter_649 : {
    input = (local.curr_650.code == ","
      ? substr(local.iter_649.input, 1, -1)
      : local.iter_649.input)

    output = (local.curr_650.code == "."
      ? "${local.iter_649.output}${jsondecode(format("\"\\u%04x\"", local.iter_649.tape[local.iter_649.tape_ptr]))}"
      : local.iter_649.output)
    
    tape = (
      local.curr_650.code == "+"
        ? [for i, b in local.iter_649.tape : (i == local.iter_649.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_650.code == "-"
        ? [for i, b in local.iter_649.tape : (i == local.iter_649.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_650.code == ","
        ? [for i, b in local.iter_649.tape : (i == local.iter_649.tape_ptr ? local.ascii_lookup[local.curr_650.input] : b)]
        : local.iter_649.tape)

    tape_ptr = (
      local.curr_650.code == "<"
        ? local.iter_649.tape_ptr == 0 ? length(local.iter_649.tape) - 1 : local.iter_649.tape_ptr - 1 :
      local.curr_650.code == ">"
        ? local.iter_649.tape_ptr == length(local.iter_649.tape) - 1 ? 0 : local.iter_649.tape_ptr + 1
        : local.iter_649.tape_ptr)

    code_ptr = 1 + (
      local.curr_650.code == "["
        ? local.iter_649.tape[local.iter_649.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_649.code_ptr)] : local.iter_649.code_ptr :
      local.curr_650.code == "]"
        ? local.iter_649.tape[local.iter_649.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_649.code_ptr)] : local.iter_649.code_ptr
        : local.iter_649.code_ptr)

    steps_taken = 1 + local.iter_649.steps_taken
  }
}

locals {
  end_of_code_651 = try(local.iter_650.code_ptr >= length(var.code), true)

  curr_651 = local.end_of_code_651 ? null : {
    code = substr(var.code, local.iter_650.code_ptr, 1)
    input = substr(var.code, local.iter_650.code_ptr, 1) == "," ? substr(local.iter_650.input, 0, 1) : null
  }

  iter_651 = local.end_of_code_651 ? local.iter_650 : {
    input = (local.curr_651.code == ","
      ? substr(local.iter_650.input, 1, -1)
      : local.iter_650.input)

    output = (local.curr_651.code == "."
      ? "${local.iter_650.output}${jsondecode(format("\"\\u%04x\"", local.iter_650.tape[local.iter_650.tape_ptr]))}"
      : local.iter_650.output)
    
    tape = (
      local.curr_651.code == "+"
        ? [for i, b in local.iter_650.tape : (i == local.iter_650.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_651.code == "-"
        ? [for i, b in local.iter_650.tape : (i == local.iter_650.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_651.code == ","
        ? [for i, b in local.iter_650.tape : (i == local.iter_650.tape_ptr ? local.ascii_lookup[local.curr_651.input] : b)]
        : local.iter_650.tape)

    tape_ptr = (
      local.curr_651.code == "<"
        ? local.iter_650.tape_ptr == 0 ? length(local.iter_650.tape) - 1 : local.iter_650.tape_ptr - 1 :
      local.curr_651.code == ">"
        ? local.iter_650.tape_ptr == length(local.iter_650.tape) - 1 ? 0 : local.iter_650.tape_ptr + 1
        : local.iter_650.tape_ptr)

    code_ptr = 1 + (
      local.curr_651.code == "["
        ? local.iter_650.tape[local.iter_650.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_650.code_ptr)] : local.iter_650.code_ptr :
      local.curr_651.code == "]"
        ? local.iter_650.tape[local.iter_650.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_650.code_ptr)] : local.iter_650.code_ptr
        : local.iter_650.code_ptr)

    steps_taken = 1 + local.iter_650.steps_taken
  }
}

locals {
  end_of_code_652 = try(local.iter_651.code_ptr >= length(var.code), true)

  curr_652 = local.end_of_code_652 ? null : {
    code = substr(var.code, local.iter_651.code_ptr, 1)
    input = substr(var.code, local.iter_651.code_ptr, 1) == "," ? substr(local.iter_651.input, 0, 1) : null
  }

  iter_652 = local.end_of_code_652 ? local.iter_651 : {
    input = (local.curr_652.code == ","
      ? substr(local.iter_651.input, 1, -1)
      : local.iter_651.input)

    output = (local.curr_652.code == "."
      ? "${local.iter_651.output}${jsondecode(format("\"\\u%04x\"", local.iter_651.tape[local.iter_651.tape_ptr]))}"
      : local.iter_651.output)
    
    tape = (
      local.curr_652.code == "+"
        ? [for i, b in local.iter_651.tape : (i == local.iter_651.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_652.code == "-"
        ? [for i, b in local.iter_651.tape : (i == local.iter_651.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_652.code == ","
        ? [for i, b in local.iter_651.tape : (i == local.iter_651.tape_ptr ? local.ascii_lookup[local.curr_652.input] : b)]
        : local.iter_651.tape)

    tape_ptr = (
      local.curr_652.code == "<"
        ? local.iter_651.tape_ptr == 0 ? length(local.iter_651.tape) - 1 : local.iter_651.tape_ptr - 1 :
      local.curr_652.code == ">"
        ? local.iter_651.tape_ptr == length(local.iter_651.tape) - 1 ? 0 : local.iter_651.tape_ptr + 1
        : local.iter_651.tape_ptr)

    code_ptr = 1 + (
      local.curr_652.code == "["
        ? local.iter_651.tape[local.iter_651.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_651.code_ptr)] : local.iter_651.code_ptr :
      local.curr_652.code == "]"
        ? local.iter_651.tape[local.iter_651.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_651.code_ptr)] : local.iter_651.code_ptr
        : local.iter_651.code_ptr)

    steps_taken = 1 + local.iter_651.steps_taken
  }
}

locals {
  end_of_code_653 = try(local.iter_652.code_ptr >= length(var.code), true)

  curr_653 = local.end_of_code_653 ? null : {
    code = substr(var.code, local.iter_652.code_ptr, 1)
    input = substr(var.code, local.iter_652.code_ptr, 1) == "," ? substr(local.iter_652.input, 0, 1) : null
  }

  iter_653 = local.end_of_code_653 ? local.iter_652 : {
    input = (local.curr_653.code == ","
      ? substr(local.iter_652.input, 1, -1)
      : local.iter_652.input)

    output = (local.curr_653.code == "."
      ? "${local.iter_652.output}${jsondecode(format("\"\\u%04x\"", local.iter_652.tape[local.iter_652.tape_ptr]))}"
      : local.iter_652.output)
    
    tape = (
      local.curr_653.code == "+"
        ? [for i, b in local.iter_652.tape : (i == local.iter_652.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_653.code == "-"
        ? [for i, b in local.iter_652.tape : (i == local.iter_652.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_653.code == ","
        ? [for i, b in local.iter_652.tape : (i == local.iter_652.tape_ptr ? local.ascii_lookup[local.curr_653.input] : b)]
        : local.iter_652.tape)

    tape_ptr = (
      local.curr_653.code == "<"
        ? local.iter_652.tape_ptr == 0 ? length(local.iter_652.tape) - 1 : local.iter_652.tape_ptr - 1 :
      local.curr_653.code == ">"
        ? local.iter_652.tape_ptr == length(local.iter_652.tape) - 1 ? 0 : local.iter_652.tape_ptr + 1
        : local.iter_652.tape_ptr)

    code_ptr = 1 + (
      local.curr_653.code == "["
        ? local.iter_652.tape[local.iter_652.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_652.code_ptr)] : local.iter_652.code_ptr :
      local.curr_653.code == "]"
        ? local.iter_652.tape[local.iter_652.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_652.code_ptr)] : local.iter_652.code_ptr
        : local.iter_652.code_ptr)

    steps_taken = 1 + local.iter_652.steps_taken
  }
}

locals {
  end_of_code_654 = try(local.iter_653.code_ptr >= length(var.code), true)

  curr_654 = local.end_of_code_654 ? null : {
    code = substr(var.code, local.iter_653.code_ptr, 1)
    input = substr(var.code, local.iter_653.code_ptr, 1) == "," ? substr(local.iter_653.input, 0, 1) : null
  }

  iter_654 = local.end_of_code_654 ? local.iter_653 : {
    input = (local.curr_654.code == ","
      ? substr(local.iter_653.input, 1, -1)
      : local.iter_653.input)

    output = (local.curr_654.code == "."
      ? "${local.iter_653.output}${jsondecode(format("\"\\u%04x\"", local.iter_653.tape[local.iter_653.tape_ptr]))}"
      : local.iter_653.output)
    
    tape = (
      local.curr_654.code == "+"
        ? [for i, b in local.iter_653.tape : (i == local.iter_653.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_654.code == "-"
        ? [for i, b in local.iter_653.tape : (i == local.iter_653.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_654.code == ","
        ? [for i, b in local.iter_653.tape : (i == local.iter_653.tape_ptr ? local.ascii_lookup[local.curr_654.input] : b)]
        : local.iter_653.tape)

    tape_ptr = (
      local.curr_654.code == "<"
        ? local.iter_653.tape_ptr == 0 ? length(local.iter_653.tape) - 1 : local.iter_653.tape_ptr - 1 :
      local.curr_654.code == ">"
        ? local.iter_653.tape_ptr == length(local.iter_653.tape) - 1 ? 0 : local.iter_653.tape_ptr + 1
        : local.iter_653.tape_ptr)

    code_ptr = 1 + (
      local.curr_654.code == "["
        ? local.iter_653.tape[local.iter_653.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_653.code_ptr)] : local.iter_653.code_ptr :
      local.curr_654.code == "]"
        ? local.iter_653.tape[local.iter_653.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_653.code_ptr)] : local.iter_653.code_ptr
        : local.iter_653.code_ptr)

    steps_taken = 1 + local.iter_653.steps_taken
  }
}

locals {
  end_of_code_655 = try(local.iter_654.code_ptr >= length(var.code), true)

  curr_655 = local.end_of_code_655 ? null : {
    code = substr(var.code, local.iter_654.code_ptr, 1)
    input = substr(var.code, local.iter_654.code_ptr, 1) == "," ? substr(local.iter_654.input, 0, 1) : null
  }

  iter_655 = local.end_of_code_655 ? local.iter_654 : {
    input = (local.curr_655.code == ","
      ? substr(local.iter_654.input, 1, -1)
      : local.iter_654.input)

    output = (local.curr_655.code == "."
      ? "${local.iter_654.output}${jsondecode(format("\"\\u%04x\"", local.iter_654.tape[local.iter_654.tape_ptr]))}"
      : local.iter_654.output)
    
    tape = (
      local.curr_655.code == "+"
        ? [for i, b in local.iter_654.tape : (i == local.iter_654.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_655.code == "-"
        ? [for i, b in local.iter_654.tape : (i == local.iter_654.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_655.code == ","
        ? [for i, b in local.iter_654.tape : (i == local.iter_654.tape_ptr ? local.ascii_lookup[local.curr_655.input] : b)]
        : local.iter_654.tape)

    tape_ptr = (
      local.curr_655.code == "<"
        ? local.iter_654.tape_ptr == 0 ? length(local.iter_654.tape) - 1 : local.iter_654.tape_ptr - 1 :
      local.curr_655.code == ">"
        ? local.iter_654.tape_ptr == length(local.iter_654.tape) - 1 ? 0 : local.iter_654.tape_ptr + 1
        : local.iter_654.tape_ptr)

    code_ptr = 1 + (
      local.curr_655.code == "["
        ? local.iter_654.tape[local.iter_654.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_654.code_ptr)] : local.iter_654.code_ptr :
      local.curr_655.code == "]"
        ? local.iter_654.tape[local.iter_654.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_654.code_ptr)] : local.iter_654.code_ptr
        : local.iter_654.code_ptr)

    steps_taken = 1 + local.iter_654.steps_taken
  }
}

locals {
  end_of_code_656 = try(local.iter_655.code_ptr >= length(var.code), true)

  curr_656 = local.end_of_code_656 ? null : {
    code = substr(var.code, local.iter_655.code_ptr, 1)
    input = substr(var.code, local.iter_655.code_ptr, 1) == "," ? substr(local.iter_655.input, 0, 1) : null
  }

  iter_656 = local.end_of_code_656 ? local.iter_655 : {
    input = (local.curr_656.code == ","
      ? substr(local.iter_655.input, 1, -1)
      : local.iter_655.input)

    output = (local.curr_656.code == "."
      ? "${local.iter_655.output}${jsondecode(format("\"\\u%04x\"", local.iter_655.tape[local.iter_655.tape_ptr]))}"
      : local.iter_655.output)
    
    tape = (
      local.curr_656.code == "+"
        ? [for i, b in local.iter_655.tape : (i == local.iter_655.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_656.code == "-"
        ? [for i, b in local.iter_655.tape : (i == local.iter_655.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_656.code == ","
        ? [for i, b in local.iter_655.tape : (i == local.iter_655.tape_ptr ? local.ascii_lookup[local.curr_656.input] : b)]
        : local.iter_655.tape)

    tape_ptr = (
      local.curr_656.code == "<"
        ? local.iter_655.tape_ptr == 0 ? length(local.iter_655.tape) - 1 : local.iter_655.tape_ptr - 1 :
      local.curr_656.code == ">"
        ? local.iter_655.tape_ptr == length(local.iter_655.tape) - 1 ? 0 : local.iter_655.tape_ptr + 1
        : local.iter_655.tape_ptr)

    code_ptr = 1 + (
      local.curr_656.code == "["
        ? local.iter_655.tape[local.iter_655.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_655.code_ptr)] : local.iter_655.code_ptr :
      local.curr_656.code == "]"
        ? local.iter_655.tape[local.iter_655.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_655.code_ptr)] : local.iter_655.code_ptr
        : local.iter_655.code_ptr)

    steps_taken = 1 + local.iter_655.steps_taken
  }
}

locals {
  end_of_code_657 = try(local.iter_656.code_ptr >= length(var.code), true)

  curr_657 = local.end_of_code_657 ? null : {
    code = substr(var.code, local.iter_656.code_ptr, 1)
    input = substr(var.code, local.iter_656.code_ptr, 1) == "," ? substr(local.iter_656.input, 0, 1) : null
  }

  iter_657 = local.end_of_code_657 ? local.iter_656 : {
    input = (local.curr_657.code == ","
      ? substr(local.iter_656.input, 1, -1)
      : local.iter_656.input)

    output = (local.curr_657.code == "."
      ? "${local.iter_656.output}${jsondecode(format("\"\\u%04x\"", local.iter_656.tape[local.iter_656.tape_ptr]))}"
      : local.iter_656.output)
    
    tape = (
      local.curr_657.code == "+"
        ? [for i, b in local.iter_656.tape : (i == local.iter_656.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_657.code == "-"
        ? [for i, b in local.iter_656.tape : (i == local.iter_656.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_657.code == ","
        ? [for i, b in local.iter_656.tape : (i == local.iter_656.tape_ptr ? local.ascii_lookup[local.curr_657.input] : b)]
        : local.iter_656.tape)

    tape_ptr = (
      local.curr_657.code == "<"
        ? local.iter_656.tape_ptr == 0 ? length(local.iter_656.tape) - 1 : local.iter_656.tape_ptr - 1 :
      local.curr_657.code == ">"
        ? local.iter_656.tape_ptr == length(local.iter_656.tape) - 1 ? 0 : local.iter_656.tape_ptr + 1
        : local.iter_656.tape_ptr)

    code_ptr = 1 + (
      local.curr_657.code == "["
        ? local.iter_656.tape[local.iter_656.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_656.code_ptr)] : local.iter_656.code_ptr :
      local.curr_657.code == "]"
        ? local.iter_656.tape[local.iter_656.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_656.code_ptr)] : local.iter_656.code_ptr
        : local.iter_656.code_ptr)

    steps_taken = 1 + local.iter_656.steps_taken
  }
}

locals {
  end_of_code_658 = try(local.iter_657.code_ptr >= length(var.code), true)

  curr_658 = local.end_of_code_658 ? null : {
    code = substr(var.code, local.iter_657.code_ptr, 1)
    input = substr(var.code, local.iter_657.code_ptr, 1) == "," ? substr(local.iter_657.input, 0, 1) : null
  }

  iter_658 = local.end_of_code_658 ? local.iter_657 : {
    input = (local.curr_658.code == ","
      ? substr(local.iter_657.input, 1, -1)
      : local.iter_657.input)

    output = (local.curr_658.code == "."
      ? "${local.iter_657.output}${jsondecode(format("\"\\u%04x\"", local.iter_657.tape[local.iter_657.tape_ptr]))}"
      : local.iter_657.output)
    
    tape = (
      local.curr_658.code == "+"
        ? [for i, b in local.iter_657.tape : (i == local.iter_657.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_658.code == "-"
        ? [for i, b in local.iter_657.tape : (i == local.iter_657.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_658.code == ","
        ? [for i, b in local.iter_657.tape : (i == local.iter_657.tape_ptr ? local.ascii_lookup[local.curr_658.input] : b)]
        : local.iter_657.tape)

    tape_ptr = (
      local.curr_658.code == "<"
        ? local.iter_657.tape_ptr == 0 ? length(local.iter_657.tape) - 1 : local.iter_657.tape_ptr - 1 :
      local.curr_658.code == ">"
        ? local.iter_657.tape_ptr == length(local.iter_657.tape) - 1 ? 0 : local.iter_657.tape_ptr + 1
        : local.iter_657.tape_ptr)

    code_ptr = 1 + (
      local.curr_658.code == "["
        ? local.iter_657.tape[local.iter_657.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_657.code_ptr)] : local.iter_657.code_ptr :
      local.curr_658.code == "]"
        ? local.iter_657.tape[local.iter_657.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_657.code_ptr)] : local.iter_657.code_ptr
        : local.iter_657.code_ptr)

    steps_taken = 1 + local.iter_657.steps_taken
  }
}

locals {
  end_of_code_659 = try(local.iter_658.code_ptr >= length(var.code), true)

  curr_659 = local.end_of_code_659 ? null : {
    code = substr(var.code, local.iter_658.code_ptr, 1)
    input = substr(var.code, local.iter_658.code_ptr, 1) == "," ? substr(local.iter_658.input, 0, 1) : null
  }

  iter_659 = local.end_of_code_659 ? local.iter_658 : {
    input = (local.curr_659.code == ","
      ? substr(local.iter_658.input, 1, -1)
      : local.iter_658.input)

    output = (local.curr_659.code == "."
      ? "${local.iter_658.output}${jsondecode(format("\"\\u%04x\"", local.iter_658.tape[local.iter_658.tape_ptr]))}"
      : local.iter_658.output)
    
    tape = (
      local.curr_659.code == "+"
        ? [for i, b in local.iter_658.tape : (i == local.iter_658.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_659.code == "-"
        ? [for i, b in local.iter_658.tape : (i == local.iter_658.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_659.code == ","
        ? [for i, b in local.iter_658.tape : (i == local.iter_658.tape_ptr ? local.ascii_lookup[local.curr_659.input] : b)]
        : local.iter_658.tape)

    tape_ptr = (
      local.curr_659.code == "<"
        ? local.iter_658.tape_ptr == 0 ? length(local.iter_658.tape) - 1 : local.iter_658.tape_ptr - 1 :
      local.curr_659.code == ">"
        ? local.iter_658.tape_ptr == length(local.iter_658.tape) - 1 ? 0 : local.iter_658.tape_ptr + 1
        : local.iter_658.tape_ptr)

    code_ptr = 1 + (
      local.curr_659.code == "["
        ? local.iter_658.tape[local.iter_658.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_658.code_ptr)] : local.iter_658.code_ptr :
      local.curr_659.code == "]"
        ? local.iter_658.tape[local.iter_658.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_658.code_ptr)] : local.iter_658.code_ptr
        : local.iter_658.code_ptr)

    steps_taken = 1 + local.iter_658.steps_taken
  }
}

locals {
  end_of_code_660 = try(local.iter_659.code_ptr >= length(var.code), true)

  curr_660 = local.end_of_code_660 ? null : {
    code = substr(var.code, local.iter_659.code_ptr, 1)
    input = substr(var.code, local.iter_659.code_ptr, 1) == "," ? substr(local.iter_659.input, 0, 1) : null
  }

  iter_660 = local.end_of_code_660 ? local.iter_659 : {
    input = (local.curr_660.code == ","
      ? substr(local.iter_659.input, 1, -1)
      : local.iter_659.input)

    output = (local.curr_660.code == "."
      ? "${local.iter_659.output}${jsondecode(format("\"\\u%04x\"", local.iter_659.tape[local.iter_659.tape_ptr]))}"
      : local.iter_659.output)
    
    tape = (
      local.curr_660.code == "+"
        ? [for i, b in local.iter_659.tape : (i == local.iter_659.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_660.code == "-"
        ? [for i, b in local.iter_659.tape : (i == local.iter_659.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_660.code == ","
        ? [for i, b in local.iter_659.tape : (i == local.iter_659.tape_ptr ? local.ascii_lookup[local.curr_660.input] : b)]
        : local.iter_659.tape)

    tape_ptr = (
      local.curr_660.code == "<"
        ? local.iter_659.tape_ptr == 0 ? length(local.iter_659.tape) - 1 : local.iter_659.tape_ptr - 1 :
      local.curr_660.code == ">"
        ? local.iter_659.tape_ptr == length(local.iter_659.tape) - 1 ? 0 : local.iter_659.tape_ptr + 1
        : local.iter_659.tape_ptr)

    code_ptr = 1 + (
      local.curr_660.code == "["
        ? local.iter_659.tape[local.iter_659.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_659.code_ptr)] : local.iter_659.code_ptr :
      local.curr_660.code == "]"
        ? local.iter_659.tape[local.iter_659.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_659.code_ptr)] : local.iter_659.code_ptr
        : local.iter_659.code_ptr)

    steps_taken = 1 + local.iter_659.steps_taken
  }
}

locals {
  end_of_code_661 = try(local.iter_660.code_ptr >= length(var.code), true)

  curr_661 = local.end_of_code_661 ? null : {
    code = substr(var.code, local.iter_660.code_ptr, 1)
    input = substr(var.code, local.iter_660.code_ptr, 1) == "," ? substr(local.iter_660.input, 0, 1) : null
  }

  iter_661 = local.end_of_code_661 ? local.iter_660 : {
    input = (local.curr_661.code == ","
      ? substr(local.iter_660.input, 1, -1)
      : local.iter_660.input)

    output = (local.curr_661.code == "."
      ? "${local.iter_660.output}${jsondecode(format("\"\\u%04x\"", local.iter_660.tape[local.iter_660.tape_ptr]))}"
      : local.iter_660.output)
    
    tape = (
      local.curr_661.code == "+"
        ? [for i, b in local.iter_660.tape : (i == local.iter_660.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_661.code == "-"
        ? [for i, b in local.iter_660.tape : (i == local.iter_660.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_661.code == ","
        ? [for i, b in local.iter_660.tape : (i == local.iter_660.tape_ptr ? local.ascii_lookup[local.curr_661.input] : b)]
        : local.iter_660.tape)

    tape_ptr = (
      local.curr_661.code == "<"
        ? local.iter_660.tape_ptr == 0 ? length(local.iter_660.tape) - 1 : local.iter_660.tape_ptr - 1 :
      local.curr_661.code == ">"
        ? local.iter_660.tape_ptr == length(local.iter_660.tape) - 1 ? 0 : local.iter_660.tape_ptr + 1
        : local.iter_660.tape_ptr)

    code_ptr = 1 + (
      local.curr_661.code == "["
        ? local.iter_660.tape[local.iter_660.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_660.code_ptr)] : local.iter_660.code_ptr :
      local.curr_661.code == "]"
        ? local.iter_660.tape[local.iter_660.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_660.code_ptr)] : local.iter_660.code_ptr
        : local.iter_660.code_ptr)

    steps_taken = 1 + local.iter_660.steps_taken
  }
}

locals {
  end_of_code_662 = try(local.iter_661.code_ptr >= length(var.code), true)

  curr_662 = local.end_of_code_662 ? null : {
    code = substr(var.code, local.iter_661.code_ptr, 1)
    input = substr(var.code, local.iter_661.code_ptr, 1) == "," ? substr(local.iter_661.input, 0, 1) : null
  }

  iter_662 = local.end_of_code_662 ? local.iter_661 : {
    input = (local.curr_662.code == ","
      ? substr(local.iter_661.input, 1, -1)
      : local.iter_661.input)

    output = (local.curr_662.code == "."
      ? "${local.iter_661.output}${jsondecode(format("\"\\u%04x\"", local.iter_661.tape[local.iter_661.tape_ptr]))}"
      : local.iter_661.output)
    
    tape = (
      local.curr_662.code == "+"
        ? [for i, b in local.iter_661.tape : (i == local.iter_661.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_662.code == "-"
        ? [for i, b in local.iter_661.tape : (i == local.iter_661.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_662.code == ","
        ? [for i, b in local.iter_661.tape : (i == local.iter_661.tape_ptr ? local.ascii_lookup[local.curr_662.input] : b)]
        : local.iter_661.tape)

    tape_ptr = (
      local.curr_662.code == "<"
        ? local.iter_661.tape_ptr == 0 ? length(local.iter_661.tape) - 1 : local.iter_661.tape_ptr - 1 :
      local.curr_662.code == ">"
        ? local.iter_661.tape_ptr == length(local.iter_661.tape) - 1 ? 0 : local.iter_661.tape_ptr + 1
        : local.iter_661.tape_ptr)

    code_ptr = 1 + (
      local.curr_662.code == "["
        ? local.iter_661.tape[local.iter_661.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_661.code_ptr)] : local.iter_661.code_ptr :
      local.curr_662.code == "]"
        ? local.iter_661.tape[local.iter_661.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_661.code_ptr)] : local.iter_661.code_ptr
        : local.iter_661.code_ptr)

    steps_taken = 1 + local.iter_661.steps_taken
  }
}

locals {
  end_of_code_663 = try(local.iter_662.code_ptr >= length(var.code), true)

  curr_663 = local.end_of_code_663 ? null : {
    code = substr(var.code, local.iter_662.code_ptr, 1)
    input = substr(var.code, local.iter_662.code_ptr, 1) == "," ? substr(local.iter_662.input, 0, 1) : null
  }

  iter_663 = local.end_of_code_663 ? local.iter_662 : {
    input = (local.curr_663.code == ","
      ? substr(local.iter_662.input, 1, -1)
      : local.iter_662.input)

    output = (local.curr_663.code == "."
      ? "${local.iter_662.output}${jsondecode(format("\"\\u%04x\"", local.iter_662.tape[local.iter_662.tape_ptr]))}"
      : local.iter_662.output)
    
    tape = (
      local.curr_663.code == "+"
        ? [for i, b in local.iter_662.tape : (i == local.iter_662.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_663.code == "-"
        ? [for i, b in local.iter_662.tape : (i == local.iter_662.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_663.code == ","
        ? [for i, b in local.iter_662.tape : (i == local.iter_662.tape_ptr ? local.ascii_lookup[local.curr_663.input] : b)]
        : local.iter_662.tape)

    tape_ptr = (
      local.curr_663.code == "<"
        ? local.iter_662.tape_ptr == 0 ? length(local.iter_662.tape) - 1 : local.iter_662.tape_ptr - 1 :
      local.curr_663.code == ">"
        ? local.iter_662.tape_ptr == length(local.iter_662.tape) - 1 ? 0 : local.iter_662.tape_ptr + 1
        : local.iter_662.tape_ptr)

    code_ptr = 1 + (
      local.curr_663.code == "["
        ? local.iter_662.tape[local.iter_662.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_662.code_ptr)] : local.iter_662.code_ptr :
      local.curr_663.code == "]"
        ? local.iter_662.tape[local.iter_662.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_662.code_ptr)] : local.iter_662.code_ptr
        : local.iter_662.code_ptr)

    steps_taken = 1 + local.iter_662.steps_taken
  }
}

locals {
  end_of_code_664 = try(local.iter_663.code_ptr >= length(var.code), true)

  curr_664 = local.end_of_code_664 ? null : {
    code = substr(var.code, local.iter_663.code_ptr, 1)
    input = substr(var.code, local.iter_663.code_ptr, 1) == "," ? substr(local.iter_663.input, 0, 1) : null
  }

  iter_664 = local.end_of_code_664 ? local.iter_663 : {
    input = (local.curr_664.code == ","
      ? substr(local.iter_663.input, 1, -1)
      : local.iter_663.input)

    output = (local.curr_664.code == "."
      ? "${local.iter_663.output}${jsondecode(format("\"\\u%04x\"", local.iter_663.tape[local.iter_663.tape_ptr]))}"
      : local.iter_663.output)
    
    tape = (
      local.curr_664.code == "+"
        ? [for i, b in local.iter_663.tape : (i == local.iter_663.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_664.code == "-"
        ? [for i, b in local.iter_663.tape : (i == local.iter_663.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_664.code == ","
        ? [for i, b in local.iter_663.tape : (i == local.iter_663.tape_ptr ? local.ascii_lookup[local.curr_664.input] : b)]
        : local.iter_663.tape)

    tape_ptr = (
      local.curr_664.code == "<"
        ? local.iter_663.tape_ptr == 0 ? length(local.iter_663.tape) - 1 : local.iter_663.tape_ptr - 1 :
      local.curr_664.code == ">"
        ? local.iter_663.tape_ptr == length(local.iter_663.tape) - 1 ? 0 : local.iter_663.tape_ptr + 1
        : local.iter_663.tape_ptr)

    code_ptr = 1 + (
      local.curr_664.code == "["
        ? local.iter_663.tape[local.iter_663.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_663.code_ptr)] : local.iter_663.code_ptr :
      local.curr_664.code == "]"
        ? local.iter_663.tape[local.iter_663.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_663.code_ptr)] : local.iter_663.code_ptr
        : local.iter_663.code_ptr)

    steps_taken = 1 + local.iter_663.steps_taken
  }
}

locals {
  end_of_code_665 = try(local.iter_664.code_ptr >= length(var.code), true)

  curr_665 = local.end_of_code_665 ? null : {
    code = substr(var.code, local.iter_664.code_ptr, 1)
    input = substr(var.code, local.iter_664.code_ptr, 1) == "," ? substr(local.iter_664.input, 0, 1) : null
  }

  iter_665 = local.end_of_code_665 ? local.iter_664 : {
    input = (local.curr_665.code == ","
      ? substr(local.iter_664.input, 1, -1)
      : local.iter_664.input)

    output = (local.curr_665.code == "."
      ? "${local.iter_664.output}${jsondecode(format("\"\\u%04x\"", local.iter_664.tape[local.iter_664.tape_ptr]))}"
      : local.iter_664.output)
    
    tape = (
      local.curr_665.code == "+"
        ? [for i, b in local.iter_664.tape : (i == local.iter_664.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_665.code == "-"
        ? [for i, b in local.iter_664.tape : (i == local.iter_664.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_665.code == ","
        ? [for i, b in local.iter_664.tape : (i == local.iter_664.tape_ptr ? local.ascii_lookup[local.curr_665.input] : b)]
        : local.iter_664.tape)

    tape_ptr = (
      local.curr_665.code == "<"
        ? local.iter_664.tape_ptr == 0 ? length(local.iter_664.tape) - 1 : local.iter_664.tape_ptr - 1 :
      local.curr_665.code == ">"
        ? local.iter_664.tape_ptr == length(local.iter_664.tape) - 1 ? 0 : local.iter_664.tape_ptr + 1
        : local.iter_664.tape_ptr)

    code_ptr = 1 + (
      local.curr_665.code == "["
        ? local.iter_664.tape[local.iter_664.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_664.code_ptr)] : local.iter_664.code_ptr :
      local.curr_665.code == "]"
        ? local.iter_664.tape[local.iter_664.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_664.code_ptr)] : local.iter_664.code_ptr
        : local.iter_664.code_ptr)

    steps_taken = 1 + local.iter_664.steps_taken
  }
}

locals {
  end_of_code_666 = try(local.iter_665.code_ptr >= length(var.code), true)

  curr_666 = local.end_of_code_666 ? null : {
    code = substr(var.code, local.iter_665.code_ptr, 1)
    input = substr(var.code, local.iter_665.code_ptr, 1) == "," ? substr(local.iter_665.input, 0, 1) : null
  }

  iter_666 = local.end_of_code_666 ? local.iter_665 : {
    input = (local.curr_666.code == ","
      ? substr(local.iter_665.input, 1, -1)
      : local.iter_665.input)

    output = (local.curr_666.code == "."
      ? "${local.iter_665.output}${jsondecode(format("\"\\u%04x\"", local.iter_665.tape[local.iter_665.tape_ptr]))}"
      : local.iter_665.output)
    
    tape = (
      local.curr_666.code == "+"
        ? [for i, b in local.iter_665.tape : (i == local.iter_665.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_666.code == "-"
        ? [for i, b in local.iter_665.tape : (i == local.iter_665.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_666.code == ","
        ? [for i, b in local.iter_665.tape : (i == local.iter_665.tape_ptr ? local.ascii_lookup[local.curr_666.input] : b)]
        : local.iter_665.tape)

    tape_ptr = (
      local.curr_666.code == "<"
        ? local.iter_665.tape_ptr == 0 ? length(local.iter_665.tape) - 1 : local.iter_665.tape_ptr - 1 :
      local.curr_666.code == ">"
        ? local.iter_665.tape_ptr == length(local.iter_665.tape) - 1 ? 0 : local.iter_665.tape_ptr + 1
        : local.iter_665.tape_ptr)

    code_ptr = 1 + (
      local.curr_666.code == "["
        ? local.iter_665.tape[local.iter_665.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_665.code_ptr)] : local.iter_665.code_ptr :
      local.curr_666.code == "]"
        ? local.iter_665.tape[local.iter_665.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_665.code_ptr)] : local.iter_665.code_ptr
        : local.iter_665.code_ptr)

    steps_taken = 1 + local.iter_665.steps_taken
  }
}

locals {
  end_of_code_667 = try(local.iter_666.code_ptr >= length(var.code), true)

  curr_667 = local.end_of_code_667 ? null : {
    code = substr(var.code, local.iter_666.code_ptr, 1)
    input = substr(var.code, local.iter_666.code_ptr, 1) == "," ? substr(local.iter_666.input, 0, 1) : null
  }

  iter_667 = local.end_of_code_667 ? local.iter_666 : {
    input = (local.curr_667.code == ","
      ? substr(local.iter_666.input, 1, -1)
      : local.iter_666.input)

    output = (local.curr_667.code == "."
      ? "${local.iter_666.output}${jsondecode(format("\"\\u%04x\"", local.iter_666.tape[local.iter_666.tape_ptr]))}"
      : local.iter_666.output)
    
    tape = (
      local.curr_667.code == "+"
        ? [for i, b in local.iter_666.tape : (i == local.iter_666.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_667.code == "-"
        ? [for i, b in local.iter_666.tape : (i == local.iter_666.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_667.code == ","
        ? [for i, b in local.iter_666.tape : (i == local.iter_666.tape_ptr ? local.ascii_lookup[local.curr_667.input] : b)]
        : local.iter_666.tape)

    tape_ptr = (
      local.curr_667.code == "<"
        ? local.iter_666.tape_ptr == 0 ? length(local.iter_666.tape) - 1 : local.iter_666.tape_ptr - 1 :
      local.curr_667.code == ">"
        ? local.iter_666.tape_ptr == length(local.iter_666.tape) - 1 ? 0 : local.iter_666.tape_ptr + 1
        : local.iter_666.tape_ptr)

    code_ptr = 1 + (
      local.curr_667.code == "["
        ? local.iter_666.tape[local.iter_666.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_666.code_ptr)] : local.iter_666.code_ptr :
      local.curr_667.code == "]"
        ? local.iter_666.tape[local.iter_666.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_666.code_ptr)] : local.iter_666.code_ptr
        : local.iter_666.code_ptr)

    steps_taken = 1 + local.iter_666.steps_taken
  }
}

locals {
  end_of_code_668 = try(local.iter_667.code_ptr >= length(var.code), true)

  curr_668 = local.end_of_code_668 ? null : {
    code = substr(var.code, local.iter_667.code_ptr, 1)
    input = substr(var.code, local.iter_667.code_ptr, 1) == "," ? substr(local.iter_667.input, 0, 1) : null
  }

  iter_668 = local.end_of_code_668 ? local.iter_667 : {
    input = (local.curr_668.code == ","
      ? substr(local.iter_667.input, 1, -1)
      : local.iter_667.input)

    output = (local.curr_668.code == "."
      ? "${local.iter_667.output}${jsondecode(format("\"\\u%04x\"", local.iter_667.tape[local.iter_667.tape_ptr]))}"
      : local.iter_667.output)
    
    tape = (
      local.curr_668.code == "+"
        ? [for i, b in local.iter_667.tape : (i == local.iter_667.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_668.code == "-"
        ? [for i, b in local.iter_667.tape : (i == local.iter_667.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_668.code == ","
        ? [for i, b in local.iter_667.tape : (i == local.iter_667.tape_ptr ? local.ascii_lookup[local.curr_668.input] : b)]
        : local.iter_667.tape)

    tape_ptr = (
      local.curr_668.code == "<"
        ? local.iter_667.tape_ptr == 0 ? length(local.iter_667.tape) - 1 : local.iter_667.tape_ptr - 1 :
      local.curr_668.code == ">"
        ? local.iter_667.tape_ptr == length(local.iter_667.tape) - 1 ? 0 : local.iter_667.tape_ptr + 1
        : local.iter_667.tape_ptr)

    code_ptr = 1 + (
      local.curr_668.code == "["
        ? local.iter_667.tape[local.iter_667.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_667.code_ptr)] : local.iter_667.code_ptr :
      local.curr_668.code == "]"
        ? local.iter_667.tape[local.iter_667.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_667.code_ptr)] : local.iter_667.code_ptr
        : local.iter_667.code_ptr)

    steps_taken = 1 + local.iter_667.steps_taken
  }
}

locals {
  end_of_code_669 = try(local.iter_668.code_ptr >= length(var.code), true)

  curr_669 = local.end_of_code_669 ? null : {
    code = substr(var.code, local.iter_668.code_ptr, 1)
    input = substr(var.code, local.iter_668.code_ptr, 1) == "," ? substr(local.iter_668.input, 0, 1) : null
  }

  iter_669 = local.end_of_code_669 ? local.iter_668 : {
    input = (local.curr_669.code == ","
      ? substr(local.iter_668.input, 1, -1)
      : local.iter_668.input)

    output = (local.curr_669.code == "."
      ? "${local.iter_668.output}${jsondecode(format("\"\\u%04x\"", local.iter_668.tape[local.iter_668.tape_ptr]))}"
      : local.iter_668.output)
    
    tape = (
      local.curr_669.code == "+"
        ? [for i, b in local.iter_668.tape : (i == local.iter_668.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_669.code == "-"
        ? [for i, b in local.iter_668.tape : (i == local.iter_668.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_669.code == ","
        ? [for i, b in local.iter_668.tape : (i == local.iter_668.tape_ptr ? local.ascii_lookup[local.curr_669.input] : b)]
        : local.iter_668.tape)

    tape_ptr = (
      local.curr_669.code == "<"
        ? local.iter_668.tape_ptr == 0 ? length(local.iter_668.tape) - 1 : local.iter_668.tape_ptr - 1 :
      local.curr_669.code == ">"
        ? local.iter_668.tape_ptr == length(local.iter_668.tape) - 1 ? 0 : local.iter_668.tape_ptr + 1
        : local.iter_668.tape_ptr)

    code_ptr = 1 + (
      local.curr_669.code == "["
        ? local.iter_668.tape[local.iter_668.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_668.code_ptr)] : local.iter_668.code_ptr :
      local.curr_669.code == "]"
        ? local.iter_668.tape[local.iter_668.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_668.code_ptr)] : local.iter_668.code_ptr
        : local.iter_668.code_ptr)

    steps_taken = 1 + local.iter_668.steps_taken
  }
}

locals {
  end_of_code_670 = try(local.iter_669.code_ptr >= length(var.code), true)

  curr_670 = local.end_of_code_670 ? null : {
    code = substr(var.code, local.iter_669.code_ptr, 1)
    input = substr(var.code, local.iter_669.code_ptr, 1) == "," ? substr(local.iter_669.input, 0, 1) : null
  }

  iter_670 = local.end_of_code_670 ? local.iter_669 : {
    input = (local.curr_670.code == ","
      ? substr(local.iter_669.input, 1, -1)
      : local.iter_669.input)

    output = (local.curr_670.code == "."
      ? "${local.iter_669.output}${jsondecode(format("\"\\u%04x\"", local.iter_669.tape[local.iter_669.tape_ptr]))}"
      : local.iter_669.output)
    
    tape = (
      local.curr_670.code == "+"
        ? [for i, b in local.iter_669.tape : (i == local.iter_669.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_670.code == "-"
        ? [for i, b in local.iter_669.tape : (i == local.iter_669.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_670.code == ","
        ? [for i, b in local.iter_669.tape : (i == local.iter_669.tape_ptr ? local.ascii_lookup[local.curr_670.input] : b)]
        : local.iter_669.tape)

    tape_ptr = (
      local.curr_670.code == "<"
        ? local.iter_669.tape_ptr == 0 ? length(local.iter_669.tape) - 1 : local.iter_669.tape_ptr - 1 :
      local.curr_670.code == ">"
        ? local.iter_669.tape_ptr == length(local.iter_669.tape) - 1 ? 0 : local.iter_669.tape_ptr + 1
        : local.iter_669.tape_ptr)

    code_ptr = 1 + (
      local.curr_670.code == "["
        ? local.iter_669.tape[local.iter_669.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_669.code_ptr)] : local.iter_669.code_ptr :
      local.curr_670.code == "]"
        ? local.iter_669.tape[local.iter_669.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_669.code_ptr)] : local.iter_669.code_ptr
        : local.iter_669.code_ptr)

    steps_taken = 1 + local.iter_669.steps_taken
  }
}

locals {
  end_of_code_671 = try(local.iter_670.code_ptr >= length(var.code), true)

  curr_671 = local.end_of_code_671 ? null : {
    code = substr(var.code, local.iter_670.code_ptr, 1)
    input = substr(var.code, local.iter_670.code_ptr, 1) == "," ? substr(local.iter_670.input, 0, 1) : null
  }

  iter_671 = local.end_of_code_671 ? local.iter_670 : {
    input = (local.curr_671.code == ","
      ? substr(local.iter_670.input, 1, -1)
      : local.iter_670.input)

    output = (local.curr_671.code == "."
      ? "${local.iter_670.output}${jsondecode(format("\"\\u%04x\"", local.iter_670.tape[local.iter_670.tape_ptr]))}"
      : local.iter_670.output)
    
    tape = (
      local.curr_671.code == "+"
        ? [for i, b in local.iter_670.tape : (i == local.iter_670.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_671.code == "-"
        ? [for i, b in local.iter_670.tape : (i == local.iter_670.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_671.code == ","
        ? [for i, b in local.iter_670.tape : (i == local.iter_670.tape_ptr ? local.ascii_lookup[local.curr_671.input] : b)]
        : local.iter_670.tape)

    tape_ptr = (
      local.curr_671.code == "<"
        ? local.iter_670.tape_ptr == 0 ? length(local.iter_670.tape) - 1 : local.iter_670.tape_ptr - 1 :
      local.curr_671.code == ">"
        ? local.iter_670.tape_ptr == length(local.iter_670.tape) - 1 ? 0 : local.iter_670.tape_ptr + 1
        : local.iter_670.tape_ptr)

    code_ptr = 1 + (
      local.curr_671.code == "["
        ? local.iter_670.tape[local.iter_670.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_670.code_ptr)] : local.iter_670.code_ptr :
      local.curr_671.code == "]"
        ? local.iter_670.tape[local.iter_670.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_670.code_ptr)] : local.iter_670.code_ptr
        : local.iter_670.code_ptr)

    steps_taken = 1 + local.iter_670.steps_taken
  }
}

locals {
  end_of_code_672 = try(local.iter_671.code_ptr >= length(var.code), true)

  curr_672 = local.end_of_code_672 ? null : {
    code = substr(var.code, local.iter_671.code_ptr, 1)
    input = substr(var.code, local.iter_671.code_ptr, 1) == "," ? substr(local.iter_671.input, 0, 1) : null
  }

  iter_672 = local.end_of_code_672 ? local.iter_671 : {
    input = (local.curr_672.code == ","
      ? substr(local.iter_671.input, 1, -1)
      : local.iter_671.input)

    output = (local.curr_672.code == "."
      ? "${local.iter_671.output}${jsondecode(format("\"\\u%04x\"", local.iter_671.tape[local.iter_671.tape_ptr]))}"
      : local.iter_671.output)
    
    tape = (
      local.curr_672.code == "+"
        ? [for i, b in local.iter_671.tape : (i == local.iter_671.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_672.code == "-"
        ? [for i, b in local.iter_671.tape : (i == local.iter_671.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_672.code == ","
        ? [for i, b in local.iter_671.tape : (i == local.iter_671.tape_ptr ? local.ascii_lookup[local.curr_672.input] : b)]
        : local.iter_671.tape)

    tape_ptr = (
      local.curr_672.code == "<"
        ? local.iter_671.tape_ptr == 0 ? length(local.iter_671.tape) - 1 : local.iter_671.tape_ptr - 1 :
      local.curr_672.code == ">"
        ? local.iter_671.tape_ptr == length(local.iter_671.tape) - 1 ? 0 : local.iter_671.tape_ptr + 1
        : local.iter_671.tape_ptr)

    code_ptr = 1 + (
      local.curr_672.code == "["
        ? local.iter_671.tape[local.iter_671.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_671.code_ptr)] : local.iter_671.code_ptr :
      local.curr_672.code == "]"
        ? local.iter_671.tape[local.iter_671.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_671.code_ptr)] : local.iter_671.code_ptr
        : local.iter_671.code_ptr)

    steps_taken = 1 + local.iter_671.steps_taken
  }
}

locals {
  end_of_code_673 = try(local.iter_672.code_ptr >= length(var.code), true)

  curr_673 = local.end_of_code_673 ? null : {
    code = substr(var.code, local.iter_672.code_ptr, 1)
    input = substr(var.code, local.iter_672.code_ptr, 1) == "," ? substr(local.iter_672.input, 0, 1) : null
  }

  iter_673 = local.end_of_code_673 ? local.iter_672 : {
    input = (local.curr_673.code == ","
      ? substr(local.iter_672.input, 1, -1)
      : local.iter_672.input)

    output = (local.curr_673.code == "."
      ? "${local.iter_672.output}${jsondecode(format("\"\\u%04x\"", local.iter_672.tape[local.iter_672.tape_ptr]))}"
      : local.iter_672.output)
    
    tape = (
      local.curr_673.code == "+"
        ? [for i, b in local.iter_672.tape : (i == local.iter_672.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_673.code == "-"
        ? [for i, b in local.iter_672.tape : (i == local.iter_672.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_673.code == ","
        ? [for i, b in local.iter_672.tape : (i == local.iter_672.tape_ptr ? local.ascii_lookup[local.curr_673.input] : b)]
        : local.iter_672.tape)

    tape_ptr = (
      local.curr_673.code == "<"
        ? local.iter_672.tape_ptr == 0 ? length(local.iter_672.tape) - 1 : local.iter_672.tape_ptr - 1 :
      local.curr_673.code == ">"
        ? local.iter_672.tape_ptr == length(local.iter_672.tape) - 1 ? 0 : local.iter_672.tape_ptr + 1
        : local.iter_672.tape_ptr)

    code_ptr = 1 + (
      local.curr_673.code == "["
        ? local.iter_672.tape[local.iter_672.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_672.code_ptr)] : local.iter_672.code_ptr :
      local.curr_673.code == "]"
        ? local.iter_672.tape[local.iter_672.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_672.code_ptr)] : local.iter_672.code_ptr
        : local.iter_672.code_ptr)

    steps_taken = 1 + local.iter_672.steps_taken
  }
}

locals {
  end_of_code_674 = try(local.iter_673.code_ptr >= length(var.code), true)

  curr_674 = local.end_of_code_674 ? null : {
    code = substr(var.code, local.iter_673.code_ptr, 1)
    input = substr(var.code, local.iter_673.code_ptr, 1) == "," ? substr(local.iter_673.input, 0, 1) : null
  }

  iter_674 = local.end_of_code_674 ? local.iter_673 : {
    input = (local.curr_674.code == ","
      ? substr(local.iter_673.input, 1, -1)
      : local.iter_673.input)

    output = (local.curr_674.code == "."
      ? "${local.iter_673.output}${jsondecode(format("\"\\u%04x\"", local.iter_673.tape[local.iter_673.tape_ptr]))}"
      : local.iter_673.output)
    
    tape = (
      local.curr_674.code == "+"
        ? [for i, b in local.iter_673.tape : (i == local.iter_673.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_674.code == "-"
        ? [for i, b in local.iter_673.tape : (i == local.iter_673.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_674.code == ","
        ? [for i, b in local.iter_673.tape : (i == local.iter_673.tape_ptr ? local.ascii_lookup[local.curr_674.input] : b)]
        : local.iter_673.tape)

    tape_ptr = (
      local.curr_674.code == "<"
        ? local.iter_673.tape_ptr == 0 ? length(local.iter_673.tape) - 1 : local.iter_673.tape_ptr - 1 :
      local.curr_674.code == ">"
        ? local.iter_673.tape_ptr == length(local.iter_673.tape) - 1 ? 0 : local.iter_673.tape_ptr + 1
        : local.iter_673.tape_ptr)

    code_ptr = 1 + (
      local.curr_674.code == "["
        ? local.iter_673.tape[local.iter_673.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_673.code_ptr)] : local.iter_673.code_ptr :
      local.curr_674.code == "]"
        ? local.iter_673.tape[local.iter_673.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_673.code_ptr)] : local.iter_673.code_ptr
        : local.iter_673.code_ptr)

    steps_taken = 1 + local.iter_673.steps_taken
  }
}

locals {
  end_of_code_675 = try(local.iter_674.code_ptr >= length(var.code), true)

  curr_675 = local.end_of_code_675 ? null : {
    code = substr(var.code, local.iter_674.code_ptr, 1)
    input = substr(var.code, local.iter_674.code_ptr, 1) == "," ? substr(local.iter_674.input, 0, 1) : null
  }

  iter_675 = local.end_of_code_675 ? local.iter_674 : {
    input = (local.curr_675.code == ","
      ? substr(local.iter_674.input, 1, -1)
      : local.iter_674.input)

    output = (local.curr_675.code == "."
      ? "${local.iter_674.output}${jsondecode(format("\"\\u%04x\"", local.iter_674.tape[local.iter_674.tape_ptr]))}"
      : local.iter_674.output)
    
    tape = (
      local.curr_675.code == "+"
        ? [for i, b in local.iter_674.tape : (i == local.iter_674.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_675.code == "-"
        ? [for i, b in local.iter_674.tape : (i == local.iter_674.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_675.code == ","
        ? [for i, b in local.iter_674.tape : (i == local.iter_674.tape_ptr ? local.ascii_lookup[local.curr_675.input] : b)]
        : local.iter_674.tape)

    tape_ptr = (
      local.curr_675.code == "<"
        ? local.iter_674.tape_ptr == 0 ? length(local.iter_674.tape) - 1 : local.iter_674.tape_ptr - 1 :
      local.curr_675.code == ">"
        ? local.iter_674.tape_ptr == length(local.iter_674.tape) - 1 ? 0 : local.iter_674.tape_ptr + 1
        : local.iter_674.tape_ptr)

    code_ptr = 1 + (
      local.curr_675.code == "["
        ? local.iter_674.tape[local.iter_674.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_674.code_ptr)] : local.iter_674.code_ptr :
      local.curr_675.code == "]"
        ? local.iter_674.tape[local.iter_674.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_674.code_ptr)] : local.iter_674.code_ptr
        : local.iter_674.code_ptr)

    steps_taken = 1 + local.iter_674.steps_taken
  }
}

locals {
  end_of_code_676 = try(local.iter_675.code_ptr >= length(var.code), true)

  curr_676 = local.end_of_code_676 ? null : {
    code = substr(var.code, local.iter_675.code_ptr, 1)
    input = substr(var.code, local.iter_675.code_ptr, 1) == "," ? substr(local.iter_675.input, 0, 1) : null
  }

  iter_676 = local.end_of_code_676 ? local.iter_675 : {
    input = (local.curr_676.code == ","
      ? substr(local.iter_675.input, 1, -1)
      : local.iter_675.input)

    output = (local.curr_676.code == "."
      ? "${local.iter_675.output}${jsondecode(format("\"\\u%04x\"", local.iter_675.tape[local.iter_675.tape_ptr]))}"
      : local.iter_675.output)
    
    tape = (
      local.curr_676.code == "+"
        ? [for i, b in local.iter_675.tape : (i == local.iter_675.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_676.code == "-"
        ? [for i, b in local.iter_675.tape : (i == local.iter_675.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_676.code == ","
        ? [for i, b in local.iter_675.tape : (i == local.iter_675.tape_ptr ? local.ascii_lookup[local.curr_676.input] : b)]
        : local.iter_675.tape)

    tape_ptr = (
      local.curr_676.code == "<"
        ? local.iter_675.tape_ptr == 0 ? length(local.iter_675.tape) - 1 : local.iter_675.tape_ptr - 1 :
      local.curr_676.code == ">"
        ? local.iter_675.tape_ptr == length(local.iter_675.tape) - 1 ? 0 : local.iter_675.tape_ptr + 1
        : local.iter_675.tape_ptr)

    code_ptr = 1 + (
      local.curr_676.code == "["
        ? local.iter_675.tape[local.iter_675.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_675.code_ptr)] : local.iter_675.code_ptr :
      local.curr_676.code == "]"
        ? local.iter_675.tape[local.iter_675.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_675.code_ptr)] : local.iter_675.code_ptr
        : local.iter_675.code_ptr)

    steps_taken = 1 + local.iter_675.steps_taken
  }
}

locals {
  end_of_code_677 = try(local.iter_676.code_ptr >= length(var.code), true)

  curr_677 = local.end_of_code_677 ? null : {
    code = substr(var.code, local.iter_676.code_ptr, 1)
    input = substr(var.code, local.iter_676.code_ptr, 1) == "," ? substr(local.iter_676.input, 0, 1) : null
  }

  iter_677 = local.end_of_code_677 ? local.iter_676 : {
    input = (local.curr_677.code == ","
      ? substr(local.iter_676.input, 1, -1)
      : local.iter_676.input)

    output = (local.curr_677.code == "."
      ? "${local.iter_676.output}${jsondecode(format("\"\\u%04x\"", local.iter_676.tape[local.iter_676.tape_ptr]))}"
      : local.iter_676.output)
    
    tape = (
      local.curr_677.code == "+"
        ? [for i, b in local.iter_676.tape : (i == local.iter_676.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_677.code == "-"
        ? [for i, b in local.iter_676.tape : (i == local.iter_676.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_677.code == ","
        ? [for i, b in local.iter_676.tape : (i == local.iter_676.tape_ptr ? local.ascii_lookup[local.curr_677.input] : b)]
        : local.iter_676.tape)

    tape_ptr = (
      local.curr_677.code == "<"
        ? local.iter_676.tape_ptr == 0 ? length(local.iter_676.tape) - 1 : local.iter_676.tape_ptr - 1 :
      local.curr_677.code == ">"
        ? local.iter_676.tape_ptr == length(local.iter_676.tape) - 1 ? 0 : local.iter_676.tape_ptr + 1
        : local.iter_676.tape_ptr)

    code_ptr = 1 + (
      local.curr_677.code == "["
        ? local.iter_676.tape[local.iter_676.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_676.code_ptr)] : local.iter_676.code_ptr :
      local.curr_677.code == "]"
        ? local.iter_676.tape[local.iter_676.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_676.code_ptr)] : local.iter_676.code_ptr
        : local.iter_676.code_ptr)

    steps_taken = 1 + local.iter_676.steps_taken
  }
}

locals {
  end_of_code_678 = try(local.iter_677.code_ptr >= length(var.code), true)

  curr_678 = local.end_of_code_678 ? null : {
    code = substr(var.code, local.iter_677.code_ptr, 1)
    input = substr(var.code, local.iter_677.code_ptr, 1) == "," ? substr(local.iter_677.input, 0, 1) : null
  }

  iter_678 = local.end_of_code_678 ? local.iter_677 : {
    input = (local.curr_678.code == ","
      ? substr(local.iter_677.input, 1, -1)
      : local.iter_677.input)

    output = (local.curr_678.code == "."
      ? "${local.iter_677.output}${jsondecode(format("\"\\u%04x\"", local.iter_677.tape[local.iter_677.tape_ptr]))}"
      : local.iter_677.output)
    
    tape = (
      local.curr_678.code == "+"
        ? [for i, b in local.iter_677.tape : (i == local.iter_677.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_678.code == "-"
        ? [for i, b in local.iter_677.tape : (i == local.iter_677.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_678.code == ","
        ? [for i, b in local.iter_677.tape : (i == local.iter_677.tape_ptr ? local.ascii_lookup[local.curr_678.input] : b)]
        : local.iter_677.tape)

    tape_ptr = (
      local.curr_678.code == "<"
        ? local.iter_677.tape_ptr == 0 ? length(local.iter_677.tape) - 1 : local.iter_677.tape_ptr - 1 :
      local.curr_678.code == ">"
        ? local.iter_677.tape_ptr == length(local.iter_677.tape) - 1 ? 0 : local.iter_677.tape_ptr + 1
        : local.iter_677.tape_ptr)

    code_ptr = 1 + (
      local.curr_678.code == "["
        ? local.iter_677.tape[local.iter_677.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_677.code_ptr)] : local.iter_677.code_ptr :
      local.curr_678.code == "]"
        ? local.iter_677.tape[local.iter_677.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_677.code_ptr)] : local.iter_677.code_ptr
        : local.iter_677.code_ptr)

    steps_taken = 1 + local.iter_677.steps_taken
  }
}

locals {
  end_of_code_679 = try(local.iter_678.code_ptr >= length(var.code), true)

  curr_679 = local.end_of_code_679 ? null : {
    code = substr(var.code, local.iter_678.code_ptr, 1)
    input = substr(var.code, local.iter_678.code_ptr, 1) == "," ? substr(local.iter_678.input, 0, 1) : null
  }

  iter_679 = local.end_of_code_679 ? local.iter_678 : {
    input = (local.curr_679.code == ","
      ? substr(local.iter_678.input, 1, -1)
      : local.iter_678.input)

    output = (local.curr_679.code == "."
      ? "${local.iter_678.output}${jsondecode(format("\"\\u%04x\"", local.iter_678.tape[local.iter_678.tape_ptr]))}"
      : local.iter_678.output)
    
    tape = (
      local.curr_679.code == "+"
        ? [for i, b in local.iter_678.tape : (i == local.iter_678.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_679.code == "-"
        ? [for i, b in local.iter_678.tape : (i == local.iter_678.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_679.code == ","
        ? [for i, b in local.iter_678.tape : (i == local.iter_678.tape_ptr ? local.ascii_lookup[local.curr_679.input] : b)]
        : local.iter_678.tape)

    tape_ptr = (
      local.curr_679.code == "<"
        ? local.iter_678.tape_ptr == 0 ? length(local.iter_678.tape) - 1 : local.iter_678.tape_ptr - 1 :
      local.curr_679.code == ">"
        ? local.iter_678.tape_ptr == length(local.iter_678.tape) - 1 ? 0 : local.iter_678.tape_ptr + 1
        : local.iter_678.tape_ptr)

    code_ptr = 1 + (
      local.curr_679.code == "["
        ? local.iter_678.tape[local.iter_678.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_678.code_ptr)] : local.iter_678.code_ptr :
      local.curr_679.code == "]"
        ? local.iter_678.tape[local.iter_678.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_678.code_ptr)] : local.iter_678.code_ptr
        : local.iter_678.code_ptr)

    steps_taken = 1 + local.iter_678.steps_taken
  }
}

locals {
  end_of_code_680 = try(local.iter_679.code_ptr >= length(var.code), true)

  curr_680 = local.end_of_code_680 ? null : {
    code = substr(var.code, local.iter_679.code_ptr, 1)
    input = substr(var.code, local.iter_679.code_ptr, 1) == "," ? substr(local.iter_679.input, 0, 1) : null
  }

  iter_680 = local.end_of_code_680 ? local.iter_679 : {
    input = (local.curr_680.code == ","
      ? substr(local.iter_679.input, 1, -1)
      : local.iter_679.input)

    output = (local.curr_680.code == "."
      ? "${local.iter_679.output}${jsondecode(format("\"\\u%04x\"", local.iter_679.tape[local.iter_679.tape_ptr]))}"
      : local.iter_679.output)
    
    tape = (
      local.curr_680.code == "+"
        ? [for i, b in local.iter_679.tape : (i == local.iter_679.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_680.code == "-"
        ? [for i, b in local.iter_679.tape : (i == local.iter_679.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_680.code == ","
        ? [for i, b in local.iter_679.tape : (i == local.iter_679.tape_ptr ? local.ascii_lookup[local.curr_680.input] : b)]
        : local.iter_679.tape)

    tape_ptr = (
      local.curr_680.code == "<"
        ? local.iter_679.tape_ptr == 0 ? length(local.iter_679.tape) - 1 : local.iter_679.tape_ptr - 1 :
      local.curr_680.code == ">"
        ? local.iter_679.tape_ptr == length(local.iter_679.tape) - 1 ? 0 : local.iter_679.tape_ptr + 1
        : local.iter_679.tape_ptr)

    code_ptr = 1 + (
      local.curr_680.code == "["
        ? local.iter_679.tape[local.iter_679.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_679.code_ptr)] : local.iter_679.code_ptr :
      local.curr_680.code == "]"
        ? local.iter_679.tape[local.iter_679.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_679.code_ptr)] : local.iter_679.code_ptr
        : local.iter_679.code_ptr)

    steps_taken = 1 + local.iter_679.steps_taken
  }
}

locals {
  end_of_code_681 = try(local.iter_680.code_ptr >= length(var.code), true)

  curr_681 = local.end_of_code_681 ? null : {
    code = substr(var.code, local.iter_680.code_ptr, 1)
    input = substr(var.code, local.iter_680.code_ptr, 1) == "," ? substr(local.iter_680.input, 0, 1) : null
  }

  iter_681 = local.end_of_code_681 ? local.iter_680 : {
    input = (local.curr_681.code == ","
      ? substr(local.iter_680.input, 1, -1)
      : local.iter_680.input)

    output = (local.curr_681.code == "."
      ? "${local.iter_680.output}${jsondecode(format("\"\\u%04x\"", local.iter_680.tape[local.iter_680.tape_ptr]))}"
      : local.iter_680.output)
    
    tape = (
      local.curr_681.code == "+"
        ? [for i, b in local.iter_680.tape : (i == local.iter_680.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_681.code == "-"
        ? [for i, b in local.iter_680.tape : (i == local.iter_680.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_681.code == ","
        ? [for i, b in local.iter_680.tape : (i == local.iter_680.tape_ptr ? local.ascii_lookup[local.curr_681.input] : b)]
        : local.iter_680.tape)

    tape_ptr = (
      local.curr_681.code == "<"
        ? local.iter_680.tape_ptr == 0 ? length(local.iter_680.tape) - 1 : local.iter_680.tape_ptr - 1 :
      local.curr_681.code == ">"
        ? local.iter_680.tape_ptr == length(local.iter_680.tape) - 1 ? 0 : local.iter_680.tape_ptr + 1
        : local.iter_680.tape_ptr)

    code_ptr = 1 + (
      local.curr_681.code == "["
        ? local.iter_680.tape[local.iter_680.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_680.code_ptr)] : local.iter_680.code_ptr :
      local.curr_681.code == "]"
        ? local.iter_680.tape[local.iter_680.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_680.code_ptr)] : local.iter_680.code_ptr
        : local.iter_680.code_ptr)

    steps_taken = 1 + local.iter_680.steps_taken
  }
}

locals {
  end_of_code_682 = try(local.iter_681.code_ptr >= length(var.code), true)

  curr_682 = local.end_of_code_682 ? null : {
    code = substr(var.code, local.iter_681.code_ptr, 1)
    input = substr(var.code, local.iter_681.code_ptr, 1) == "," ? substr(local.iter_681.input, 0, 1) : null
  }

  iter_682 = local.end_of_code_682 ? local.iter_681 : {
    input = (local.curr_682.code == ","
      ? substr(local.iter_681.input, 1, -1)
      : local.iter_681.input)

    output = (local.curr_682.code == "."
      ? "${local.iter_681.output}${jsondecode(format("\"\\u%04x\"", local.iter_681.tape[local.iter_681.tape_ptr]))}"
      : local.iter_681.output)
    
    tape = (
      local.curr_682.code == "+"
        ? [for i, b in local.iter_681.tape : (i == local.iter_681.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_682.code == "-"
        ? [for i, b in local.iter_681.tape : (i == local.iter_681.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_682.code == ","
        ? [for i, b in local.iter_681.tape : (i == local.iter_681.tape_ptr ? local.ascii_lookup[local.curr_682.input] : b)]
        : local.iter_681.tape)

    tape_ptr = (
      local.curr_682.code == "<"
        ? local.iter_681.tape_ptr == 0 ? length(local.iter_681.tape) - 1 : local.iter_681.tape_ptr - 1 :
      local.curr_682.code == ">"
        ? local.iter_681.tape_ptr == length(local.iter_681.tape) - 1 ? 0 : local.iter_681.tape_ptr + 1
        : local.iter_681.tape_ptr)

    code_ptr = 1 + (
      local.curr_682.code == "["
        ? local.iter_681.tape[local.iter_681.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_681.code_ptr)] : local.iter_681.code_ptr :
      local.curr_682.code == "]"
        ? local.iter_681.tape[local.iter_681.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_681.code_ptr)] : local.iter_681.code_ptr
        : local.iter_681.code_ptr)

    steps_taken = 1 + local.iter_681.steps_taken
  }
}

locals {
  end_of_code_683 = try(local.iter_682.code_ptr >= length(var.code), true)

  curr_683 = local.end_of_code_683 ? null : {
    code = substr(var.code, local.iter_682.code_ptr, 1)
    input = substr(var.code, local.iter_682.code_ptr, 1) == "," ? substr(local.iter_682.input, 0, 1) : null
  }

  iter_683 = local.end_of_code_683 ? local.iter_682 : {
    input = (local.curr_683.code == ","
      ? substr(local.iter_682.input, 1, -1)
      : local.iter_682.input)

    output = (local.curr_683.code == "."
      ? "${local.iter_682.output}${jsondecode(format("\"\\u%04x\"", local.iter_682.tape[local.iter_682.tape_ptr]))}"
      : local.iter_682.output)
    
    tape = (
      local.curr_683.code == "+"
        ? [for i, b in local.iter_682.tape : (i == local.iter_682.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_683.code == "-"
        ? [for i, b in local.iter_682.tape : (i == local.iter_682.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_683.code == ","
        ? [for i, b in local.iter_682.tape : (i == local.iter_682.tape_ptr ? local.ascii_lookup[local.curr_683.input] : b)]
        : local.iter_682.tape)

    tape_ptr = (
      local.curr_683.code == "<"
        ? local.iter_682.tape_ptr == 0 ? length(local.iter_682.tape) - 1 : local.iter_682.tape_ptr - 1 :
      local.curr_683.code == ">"
        ? local.iter_682.tape_ptr == length(local.iter_682.tape) - 1 ? 0 : local.iter_682.tape_ptr + 1
        : local.iter_682.tape_ptr)

    code_ptr = 1 + (
      local.curr_683.code == "["
        ? local.iter_682.tape[local.iter_682.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_682.code_ptr)] : local.iter_682.code_ptr :
      local.curr_683.code == "]"
        ? local.iter_682.tape[local.iter_682.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_682.code_ptr)] : local.iter_682.code_ptr
        : local.iter_682.code_ptr)

    steps_taken = 1 + local.iter_682.steps_taken
  }
}

locals {
  end_of_code_684 = try(local.iter_683.code_ptr >= length(var.code), true)

  curr_684 = local.end_of_code_684 ? null : {
    code = substr(var.code, local.iter_683.code_ptr, 1)
    input = substr(var.code, local.iter_683.code_ptr, 1) == "," ? substr(local.iter_683.input, 0, 1) : null
  }

  iter_684 = local.end_of_code_684 ? local.iter_683 : {
    input = (local.curr_684.code == ","
      ? substr(local.iter_683.input, 1, -1)
      : local.iter_683.input)

    output = (local.curr_684.code == "."
      ? "${local.iter_683.output}${jsondecode(format("\"\\u%04x\"", local.iter_683.tape[local.iter_683.tape_ptr]))}"
      : local.iter_683.output)
    
    tape = (
      local.curr_684.code == "+"
        ? [for i, b in local.iter_683.tape : (i == local.iter_683.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_684.code == "-"
        ? [for i, b in local.iter_683.tape : (i == local.iter_683.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_684.code == ","
        ? [for i, b in local.iter_683.tape : (i == local.iter_683.tape_ptr ? local.ascii_lookup[local.curr_684.input] : b)]
        : local.iter_683.tape)

    tape_ptr = (
      local.curr_684.code == "<"
        ? local.iter_683.tape_ptr == 0 ? length(local.iter_683.tape) - 1 : local.iter_683.tape_ptr - 1 :
      local.curr_684.code == ">"
        ? local.iter_683.tape_ptr == length(local.iter_683.tape) - 1 ? 0 : local.iter_683.tape_ptr + 1
        : local.iter_683.tape_ptr)

    code_ptr = 1 + (
      local.curr_684.code == "["
        ? local.iter_683.tape[local.iter_683.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_683.code_ptr)] : local.iter_683.code_ptr :
      local.curr_684.code == "]"
        ? local.iter_683.tape[local.iter_683.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_683.code_ptr)] : local.iter_683.code_ptr
        : local.iter_683.code_ptr)

    steps_taken = 1 + local.iter_683.steps_taken
  }
}

locals {
  end_of_code_685 = try(local.iter_684.code_ptr >= length(var.code), true)

  curr_685 = local.end_of_code_685 ? null : {
    code = substr(var.code, local.iter_684.code_ptr, 1)
    input = substr(var.code, local.iter_684.code_ptr, 1) == "," ? substr(local.iter_684.input, 0, 1) : null
  }

  iter_685 = local.end_of_code_685 ? local.iter_684 : {
    input = (local.curr_685.code == ","
      ? substr(local.iter_684.input, 1, -1)
      : local.iter_684.input)

    output = (local.curr_685.code == "."
      ? "${local.iter_684.output}${jsondecode(format("\"\\u%04x\"", local.iter_684.tape[local.iter_684.tape_ptr]))}"
      : local.iter_684.output)
    
    tape = (
      local.curr_685.code == "+"
        ? [for i, b in local.iter_684.tape : (i == local.iter_684.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_685.code == "-"
        ? [for i, b in local.iter_684.tape : (i == local.iter_684.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_685.code == ","
        ? [for i, b in local.iter_684.tape : (i == local.iter_684.tape_ptr ? local.ascii_lookup[local.curr_685.input] : b)]
        : local.iter_684.tape)

    tape_ptr = (
      local.curr_685.code == "<"
        ? local.iter_684.tape_ptr == 0 ? length(local.iter_684.tape) - 1 : local.iter_684.tape_ptr - 1 :
      local.curr_685.code == ">"
        ? local.iter_684.tape_ptr == length(local.iter_684.tape) - 1 ? 0 : local.iter_684.tape_ptr + 1
        : local.iter_684.tape_ptr)

    code_ptr = 1 + (
      local.curr_685.code == "["
        ? local.iter_684.tape[local.iter_684.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_684.code_ptr)] : local.iter_684.code_ptr :
      local.curr_685.code == "]"
        ? local.iter_684.tape[local.iter_684.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_684.code_ptr)] : local.iter_684.code_ptr
        : local.iter_684.code_ptr)

    steps_taken = 1 + local.iter_684.steps_taken
  }
}

locals {
  end_of_code_686 = try(local.iter_685.code_ptr >= length(var.code), true)

  curr_686 = local.end_of_code_686 ? null : {
    code = substr(var.code, local.iter_685.code_ptr, 1)
    input = substr(var.code, local.iter_685.code_ptr, 1) == "," ? substr(local.iter_685.input, 0, 1) : null
  }

  iter_686 = local.end_of_code_686 ? local.iter_685 : {
    input = (local.curr_686.code == ","
      ? substr(local.iter_685.input, 1, -1)
      : local.iter_685.input)

    output = (local.curr_686.code == "."
      ? "${local.iter_685.output}${jsondecode(format("\"\\u%04x\"", local.iter_685.tape[local.iter_685.tape_ptr]))}"
      : local.iter_685.output)
    
    tape = (
      local.curr_686.code == "+"
        ? [for i, b in local.iter_685.tape : (i == local.iter_685.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_686.code == "-"
        ? [for i, b in local.iter_685.tape : (i == local.iter_685.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_686.code == ","
        ? [for i, b in local.iter_685.tape : (i == local.iter_685.tape_ptr ? local.ascii_lookup[local.curr_686.input] : b)]
        : local.iter_685.tape)

    tape_ptr = (
      local.curr_686.code == "<"
        ? local.iter_685.tape_ptr == 0 ? length(local.iter_685.tape) - 1 : local.iter_685.tape_ptr - 1 :
      local.curr_686.code == ">"
        ? local.iter_685.tape_ptr == length(local.iter_685.tape) - 1 ? 0 : local.iter_685.tape_ptr + 1
        : local.iter_685.tape_ptr)

    code_ptr = 1 + (
      local.curr_686.code == "["
        ? local.iter_685.tape[local.iter_685.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_685.code_ptr)] : local.iter_685.code_ptr :
      local.curr_686.code == "]"
        ? local.iter_685.tape[local.iter_685.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_685.code_ptr)] : local.iter_685.code_ptr
        : local.iter_685.code_ptr)

    steps_taken = 1 + local.iter_685.steps_taken
  }
}

locals {
  end_of_code_687 = try(local.iter_686.code_ptr >= length(var.code), true)

  curr_687 = local.end_of_code_687 ? null : {
    code = substr(var.code, local.iter_686.code_ptr, 1)
    input = substr(var.code, local.iter_686.code_ptr, 1) == "," ? substr(local.iter_686.input, 0, 1) : null
  }

  iter_687 = local.end_of_code_687 ? local.iter_686 : {
    input = (local.curr_687.code == ","
      ? substr(local.iter_686.input, 1, -1)
      : local.iter_686.input)

    output = (local.curr_687.code == "."
      ? "${local.iter_686.output}${jsondecode(format("\"\\u%04x\"", local.iter_686.tape[local.iter_686.tape_ptr]))}"
      : local.iter_686.output)
    
    tape = (
      local.curr_687.code == "+"
        ? [for i, b in local.iter_686.tape : (i == local.iter_686.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_687.code == "-"
        ? [for i, b in local.iter_686.tape : (i == local.iter_686.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_687.code == ","
        ? [for i, b in local.iter_686.tape : (i == local.iter_686.tape_ptr ? local.ascii_lookup[local.curr_687.input] : b)]
        : local.iter_686.tape)

    tape_ptr = (
      local.curr_687.code == "<"
        ? local.iter_686.tape_ptr == 0 ? length(local.iter_686.tape) - 1 : local.iter_686.tape_ptr - 1 :
      local.curr_687.code == ">"
        ? local.iter_686.tape_ptr == length(local.iter_686.tape) - 1 ? 0 : local.iter_686.tape_ptr + 1
        : local.iter_686.tape_ptr)

    code_ptr = 1 + (
      local.curr_687.code == "["
        ? local.iter_686.tape[local.iter_686.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_686.code_ptr)] : local.iter_686.code_ptr :
      local.curr_687.code == "]"
        ? local.iter_686.tape[local.iter_686.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_686.code_ptr)] : local.iter_686.code_ptr
        : local.iter_686.code_ptr)

    steps_taken = 1 + local.iter_686.steps_taken
  }
}

locals {
  end_of_code_688 = try(local.iter_687.code_ptr >= length(var.code), true)

  curr_688 = local.end_of_code_688 ? null : {
    code = substr(var.code, local.iter_687.code_ptr, 1)
    input = substr(var.code, local.iter_687.code_ptr, 1) == "," ? substr(local.iter_687.input, 0, 1) : null
  }

  iter_688 = local.end_of_code_688 ? local.iter_687 : {
    input = (local.curr_688.code == ","
      ? substr(local.iter_687.input, 1, -1)
      : local.iter_687.input)

    output = (local.curr_688.code == "."
      ? "${local.iter_687.output}${jsondecode(format("\"\\u%04x\"", local.iter_687.tape[local.iter_687.tape_ptr]))}"
      : local.iter_687.output)
    
    tape = (
      local.curr_688.code == "+"
        ? [for i, b in local.iter_687.tape : (i == local.iter_687.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_688.code == "-"
        ? [for i, b in local.iter_687.tape : (i == local.iter_687.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_688.code == ","
        ? [for i, b in local.iter_687.tape : (i == local.iter_687.tape_ptr ? local.ascii_lookup[local.curr_688.input] : b)]
        : local.iter_687.tape)

    tape_ptr = (
      local.curr_688.code == "<"
        ? local.iter_687.tape_ptr == 0 ? length(local.iter_687.tape) - 1 : local.iter_687.tape_ptr - 1 :
      local.curr_688.code == ">"
        ? local.iter_687.tape_ptr == length(local.iter_687.tape) - 1 ? 0 : local.iter_687.tape_ptr + 1
        : local.iter_687.tape_ptr)

    code_ptr = 1 + (
      local.curr_688.code == "["
        ? local.iter_687.tape[local.iter_687.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_687.code_ptr)] : local.iter_687.code_ptr :
      local.curr_688.code == "]"
        ? local.iter_687.tape[local.iter_687.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_687.code_ptr)] : local.iter_687.code_ptr
        : local.iter_687.code_ptr)

    steps_taken = 1 + local.iter_687.steps_taken
  }
}

locals {
  end_of_code_689 = try(local.iter_688.code_ptr >= length(var.code), true)

  curr_689 = local.end_of_code_689 ? null : {
    code = substr(var.code, local.iter_688.code_ptr, 1)
    input = substr(var.code, local.iter_688.code_ptr, 1) == "," ? substr(local.iter_688.input, 0, 1) : null
  }

  iter_689 = local.end_of_code_689 ? local.iter_688 : {
    input = (local.curr_689.code == ","
      ? substr(local.iter_688.input, 1, -1)
      : local.iter_688.input)

    output = (local.curr_689.code == "."
      ? "${local.iter_688.output}${jsondecode(format("\"\\u%04x\"", local.iter_688.tape[local.iter_688.tape_ptr]))}"
      : local.iter_688.output)
    
    tape = (
      local.curr_689.code == "+"
        ? [for i, b in local.iter_688.tape : (i == local.iter_688.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_689.code == "-"
        ? [for i, b in local.iter_688.tape : (i == local.iter_688.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_689.code == ","
        ? [for i, b in local.iter_688.tape : (i == local.iter_688.tape_ptr ? local.ascii_lookup[local.curr_689.input] : b)]
        : local.iter_688.tape)

    tape_ptr = (
      local.curr_689.code == "<"
        ? local.iter_688.tape_ptr == 0 ? length(local.iter_688.tape) - 1 : local.iter_688.tape_ptr - 1 :
      local.curr_689.code == ">"
        ? local.iter_688.tape_ptr == length(local.iter_688.tape) - 1 ? 0 : local.iter_688.tape_ptr + 1
        : local.iter_688.tape_ptr)

    code_ptr = 1 + (
      local.curr_689.code == "["
        ? local.iter_688.tape[local.iter_688.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_688.code_ptr)] : local.iter_688.code_ptr :
      local.curr_689.code == "]"
        ? local.iter_688.tape[local.iter_688.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_688.code_ptr)] : local.iter_688.code_ptr
        : local.iter_688.code_ptr)

    steps_taken = 1 + local.iter_688.steps_taken
  }
}

locals {
  end_of_code_690 = try(local.iter_689.code_ptr >= length(var.code), true)

  curr_690 = local.end_of_code_690 ? null : {
    code = substr(var.code, local.iter_689.code_ptr, 1)
    input = substr(var.code, local.iter_689.code_ptr, 1) == "," ? substr(local.iter_689.input, 0, 1) : null
  }

  iter_690 = local.end_of_code_690 ? local.iter_689 : {
    input = (local.curr_690.code == ","
      ? substr(local.iter_689.input, 1, -1)
      : local.iter_689.input)

    output = (local.curr_690.code == "."
      ? "${local.iter_689.output}${jsondecode(format("\"\\u%04x\"", local.iter_689.tape[local.iter_689.tape_ptr]))}"
      : local.iter_689.output)
    
    tape = (
      local.curr_690.code == "+"
        ? [for i, b in local.iter_689.tape : (i == local.iter_689.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_690.code == "-"
        ? [for i, b in local.iter_689.tape : (i == local.iter_689.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_690.code == ","
        ? [for i, b in local.iter_689.tape : (i == local.iter_689.tape_ptr ? local.ascii_lookup[local.curr_690.input] : b)]
        : local.iter_689.tape)

    tape_ptr = (
      local.curr_690.code == "<"
        ? local.iter_689.tape_ptr == 0 ? length(local.iter_689.tape) - 1 : local.iter_689.tape_ptr - 1 :
      local.curr_690.code == ">"
        ? local.iter_689.tape_ptr == length(local.iter_689.tape) - 1 ? 0 : local.iter_689.tape_ptr + 1
        : local.iter_689.tape_ptr)

    code_ptr = 1 + (
      local.curr_690.code == "["
        ? local.iter_689.tape[local.iter_689.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_689.code_ptr)] : local.iter_689.code_ptr :
      local.curr_690.code == "]"
        ? local.iter_689.tape[local.iter_689.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_689.code_ptr)] : local.iter_689.code_ptr
        : local.iter_689.code_ptr)

    steps_taken = 1 + local.iter_689.steps_taken
  }
}

locals {
  end_of_code_691 = try(local.iter_690.code_ptr >= length(var.code), true)

  curr_691 = local.end_of_code_691 ? null : {
    code = substr(var.code, local.iter_690.code_ptr, 1)
    input = substr(var.code, local.iter_690.code_ptr, 1) == "," ? substr(local.iter_690.input, 0, 1) : null
  }

  iter_691 = local.end_of_code_691 ? local.iter_690 : {
    input = (local.curr_691.code == ","
      ? substr(local.iter_690.input, 1, -1)
      : local.iter_690.input)

    output = (local.curr_691.code == "."
      ? "${local.iter_690.output}${jsondecode(format("\"\\u%04x\"", local.iter_690.tape[local.iter_690.tape_ptr]))}"
      : local.iter_690.output)
    
    tape = (
      local.curr_691.code == "+"
        ? [for i, b in local.iter_690.tape : (i == local.iter_690.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_691.code == "-"
        ? [for i, b in local.iter_690.tape : (i == local.iter_690.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_691.code == ","
        ? [for i, b in local.iter_690.tape : (i == local.iter_690.tape_ptr ? local.ascii_lookup[local.curr_691.input] : b)]
        : local.iter_690.tape)

    tape_ptr = (
      local.curr_691.code == "<"
        ? local.iter_690.tape_ptr == 0 ? length(local.iter_690.tape) - 1 : local.iter_690.tape_ptr - 1 :
      local.curr_691.code == ">"
        ? local.iter_690.tape_ptr == length(local.iter_690.tape) - 1 ? 0 : local.iter_690.tape_ptr + 1
        : local.iter_690.tape_ptr)

    code_ptr = 1 + (
      local.curr_691.code == "["
        ? local.iter_690.tape[local.iter_690.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_690.code_ptr)] : local.iter_690.code_ptr :
      local.curr_691.code == "]"
        ? local.iter_690.tape[local.iter_690.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_690.code_ptr)] : local.iter_690.code_ptr
        : local.iter_690.code_ptr)

    steps_taken = 1 + local.iter_690.steps_taken
  }
}

locals {
  end_of_code_692 = try(local.iter_691.code_ptr >= length(var.code), true)

  curr_692 = local.end_of_code_692 ? null : {
    code = substr(var.code, local.iter_691.code_ptr, 1)
    input = substr(var.code, local.iter_691.code_ptr, 1) == "," ? substr(local.iter_691.input, 0, 1) : null
  }

  iter_692 = local.end_of_code_692 ? local.iter_691 : {
    input = (local.curr_692.code == ","
      ? substr(local.iter_691.input, 1, -1)
      : local.iter_691.input)

    output = (local.curr_692.code == "."
      ? "${local.iter_691.output}${jsondecode(format("\"\\u%04x\"", local.iter_691.tape[local.iter_691.tape_ptr]))}"
      : local.iter_691.output)
    
    tape = (
      local.curr_692.code == "+"
        ? [for i, b in local.iter_691.tape : (i == local.iter_691.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_692.code == "-"
        ? [for i, b in local.iter_691.tape : (i == local.iter_691.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_692.code == ","
        ? [for i, b in local.iter_691.tape : (i == local.iter_691.tape_ptr ? local.ascii_lookup[local.curr_692.input] : b)]
        : local.iter_691.tape)

    tape_ptr = (
      local.curr_692.code == "<"
        ? local.iter_691.tape_ptr == 0 ? length(local.iter_691.tape) - 1 : local.iter_691.tape_ptr - 1 :
      local.curr_692.code == ">"
        ? local.iter_691.tape_ptr == length(local.iter_691.tape) - 1 ? 0 : local.iter_691.tape_ptr + 1
        : local.iter_691.tape_ptr)

    code_ptr = 1 + (
      local.curr_692.code == "["
        ? local.iter_691.tape[local.iter_691.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_691.code_ptr)] : local.iter_691.code_ptr :
      local.curr_692.code == "]"
        ? local.iter_691.tape[local.iter_691.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_691.code_ptr)] : local.iter_691.code_ptr
        : local.iter_691.code_ptr)

    steps_taken = 1 + local.iter_691.steps_taken
  }
}

locals {
  end_of_code_693 = try(local.iter_692.code_ptr >= length(var.code), true)

  curr_693 = local.end_of_code_693 ? null : {
    code = substr(var.code, local.iter_692.code_ptr, 1)
    input = substr(var.code, local.iter_692.code_ptr, 1) == "," ? substr(local.iter_692.input, 0, 1) : null
  }

  iter_693 = local.end_of_code_693 ? local.iter_692 : {
    input = (local.curr_693.code == ","
      ? substr(local.iter_692.input, 1, -1)
      : local.iter_692.input)

    output = (local.curr_693.code == "."
      ? "${local.iter_692.output}${jsondecode(format("\"\\u%04x\"", local.iter_692.tape[local.iter_692.tape_ptr]))}"
      : local.iter_692.output)
    
    tape = (
      local.curr_693.code == "+"
        ? [for i, b in local.iter_692.tape : (i == local.iter_692.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_693.code == "-"
        ? [for i, b in local.iter_692.tape : (i == local.iter_692.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_693.code == ","
        ? [for i, b in local.iter_692.tape : (i == local.iter_692.tape_ptr ? local.ascii_lookup[local.curr_693.input] : b)]
        : local.iter_692.tape)

    tape_ptr = (
      local.curr_693.code == "<"
        ? local.iter_692.tape_ptr == 0 ? length(local.iter_692.tape) - 1 : local.iter_692.tape_ptr - 1 :
      local.curr_693.code == ">"
        ? local.iter_692.tape_ptr == length(local.iter_692.tape) - 1 ? 0 : local.iter_692.tape_ptr + 1
        : local.iter_692.tape_ptr)

    code_ptr = 1 + (
      local.curr_693.code == "["
        ? local.iter_692.tape[local.iter_692.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_692.code_ptr)] : local.iter_692.code_ptr :
      local.curr_693.code == "]"
        ? local.iter_692.tape[local.iter_692.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_692.code_ptr)] : local.iter_692.code_ptr
        : local.iter_692.code_ptr)

    steps_taken = 1 + local.iter_692.steps_taken
  }
}

locals {
  end_of_code_694 = try(local.iter_693.code_ptr >= length(var.code), true)

  curr_694 = local.end_of_code_694 ? null : {
    code = substr(var.code, local.iter_693.code_ptr, 1)
    input = substr(var.code, local.iter_693.code_ptr, 1) == "," ? substr(local.iter_693.input, 0, 1) : null
  }

  iter_694 = local.end_of_code_694 ? local.iter_693 : {
    input = (local.curr_694.code == ","
      ? substr(local.iter_693.input, 1, -1)
      : local.iter_693.input)

    output = (local.curr_694.code == "."
      ? "${local.iter_693.output}${jsondecode(format("\"\\u%04x\"", local.iter_693.tape[local.iter_693.tape_ptr]))}"
      : local.iter_693.output)
    
    tape = (
      local.curr_694.code == "+"
        ? [for i, b in local.iter_693.tape : (i == local.iter_693.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_694.code == "-"
        ? [for i, b in local.iter_693.tape : (i == local.iter_693.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_694.code == ","
        ? [for i, b in local.iter_693.tape : (i == local.iter_693.tape_ptr ? local.ascii_lookup[local.curr_694.input] : b)]
        : local.iter_693.tape)

    tape_ptr = (
      local.curr_694.code == "<"
        ? local.iter_693.tape_ptr == 0 ? length(local.iter_693.tape) - 1 : local.iter_693.tape_ptr - 1 :
      local.curr_694.code == ">"
        ? local.iter_693.tape_ptr == length(local.iter_693.tape) - 1 ? 0 : local.iter_693.tape_ptr + 1
        : local.iter_693.tape_ptr)

    code_ptr = 1 + (
      local.curr_694.code == "["
        ? local.iter_693.tape[local.iter_693.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_693.code_ptr)] : local.iter_693.code_ptr :
      local.curr_694.code == "]"
        ? local.iter_693.tape[local.iter_693.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_693.code_ptr)] : local.iter_693.code_ptr
        : local.iter_693.code_ptr)

    steps_taken = 1 + local.iter_693.steps_taken
  }
}

locals {
  end_of_code_695 = try(local.iter_694.code_ptr >= length(var.code), true)

  curr_695 = local.end_of_code_695 ? null : {
    code = substr(var.code, local.iter_694.code_ptr, 1)
    input = substr(var.code, local.iter_694.code_ptr, 1) == "," ? substr(local.iter_694.input, 0, 1) : null
  }

  iter_695 = local.end_of_code_695 ? local.iter_694 : {
    input = (local.curr_695.code == ","
      ? substr(local.iter_694.input, 1, -1)
      : local.iter_694.input)

    output = (local.curr_695.code == "."
      ? "${local.iter_694.output}${jsondecode(format("\"\\u%04x\"", local.iter_694.tape[local.iter_694.tape_ptr]))}"
      : local.iter_694.output)
    
    tape = (
      local.curr_695.code == "+"
        ? [for i, b in local.iter_694.tape : (i == local.iter_694.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_695.code == "-"
        ? [for i, b in local.iter_694.tape : (i == local.iter_694.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_695.code == ","
        ? [for i, b in local.iter_694.tape : (i == local.iter_694.tape_ptr ? local.ascii_lookup[local.curr_695.input] : b)]
        : local.iter_694.tape)

    tape_ptr = (
      local.curr_695.code == "<"
        ? local.iter_694.tape_ptr == 0 ? length(local.iter_694.tape) - 1 : local.iter_694.tape_ptr - 1 :
      local.curr_695.code == ">"
        ? local.iter_694.tape_ptr == length(local.iter_694.tape) - 1 ? 0 : local.iter_694.tape_ptr + 1
        : local.iter_694.tape_ptr)

    code_ptr = 1 + (
      local.curr_695.code == "["
        ? local.iter_694.tape[local.iter_694.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_694.code_ptr)] : local.iter_694.code_ptr :
      local.curr_695.code == "]"
        ? local.iter_694.tape[local.iter_694.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_694.code_ptr)] : local.iter_694.code_ptr
        : local.iter_694.code_ptr)

    steps_taken = 1 + local.iter_694.steps_taken
  }
}

locals {
  end_of_code_696 = try(local.iter_695.code_ptr >= length(var.code), true)

  curr_696 = local.end_of_code_696 ? null : {
    code = substr(var.code, local.iter_695.code_ptr, 1)
    input = substr(var.code, local.iter_695.code_ptr, 1) == "," ? substr(local.iter_695.input, 0, 1) : null
  }

  iter_696 = local.end_of_code_696 ? local.iter_695 : {
    input = (local.curr_696.code == ","
      ? substr(local.iter_695.input, 1, -1)
      : local.iter_695.input)

    output = (local.curr_696.code == "."
      ? "${local.iter_695.output}${jsondecode(format("\"\\u%04x\"", local.iter_695.tape[local.iter_695.tape_ptr]))}"
      : local.iter_695.output)
    
    tape = (
      local.curr_696.code == "+"
        ? [for i, b in local.iter_695.tape : (i == local.iter_695.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_696.code == "-"
        ? [for i, b in local.iter_695.tape : (i == local.iter_695.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_696.code == ","
        ? [for i, b in local.iter_695.tape : (i == local.iter_695.tape_ptr ? local.ascii_lookup[local.curr_696.input] : b)]
        : local.iter_695.tape)

    tape_ptr = (
      local.curr_696.code == "<"
        ? local.iter_695.tape_ptr == 0 ? length(local.iter_695.tape) - 1 : local.iter_695.tape_ptr - 1 :
      local.curr_696.code == ">"
        ? local.iter_695.tape_ptr == length(local.iter_695.tape) - 1 ? 0 : local.iter_695.tape_ptr + 1
        : local.iter_695.tape_ptr)

    code_ptr = 1 + (
      local.curr_696.code == "["
        ? local.iter_695.tape[local.iter_695.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_695.code_ptr)] : local.iter_695.code_ptr :
      local.curr_696.code == "]"
        ? local.iter_695.tape[local.iter_695.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_695.code_ptr)] : local.iter_695.code_ptr
        : local.iter_695.code_ptr)

    steps_taken = 1 + local.iter_695.steps_taken
  }
}

locals {
  end_of_code_697 = try(local.iter_696.code_ptr >= length(var.code), true)

  curr_697 = local.end_of_code_697 ? null : {
    code = substr(var.code, local.iter_696.code_ptr, 1)
    input = substr(var.code, local.iter_696.code_ptr, 1) == "," ? substr(local.iter_696.input, 0, 1) : null
  }

  iter_697 = local.end_of_code_697 ? local.iter_696 : {
    input = (local.curr_697.code == ","
      ? substr(local.iter_696.input, 1, -1)
      : local.iter_696.input)

    output = (local.curr_697.code == "."
      ? "${local.iter_696.output}${jsondecode(format("\"\\u%04x\"", local.iter_696.tape[local.iter_696.tape_ptr]))}"
      : local.iter_696.output)
    
    tape = (
      local.curr_697.code == "+"
        ? [for i, b in local.iter_696.tape : (i == local.iter_696.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_697.code == "-"
        ? [for i, b in local.iter_696.tape : (i == local.iter_696.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_697.code == ","
        ? [for i, b in local.iter_696.tape : (i == local.iter_696.tape_ptr ? local.ascii_lookup[local.curr_697.input] : b)]
        : local.iter_696.tape)

    tape_ptr = (
      local.curr_697.code == "<"
        ? local.iter_696.tape_ptr == 0 ? length(local.iter_696.tape) - 1 : local.iter_696.tape_ptr - 1 :
      local.curr_697.code == ">"
        ? local.iter_696.tape_ptr == length(local.iter_696.tape) - 1 ? 0 : local.iter_696.tape_ptr + 1
        : local.iter_696.tape_ptr)

    code_ptr = 1 + (
      local.curr_697.code == "["
        ? local.iter_696.tape[local.iter_696.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_696.code_ptr)] : local.iter_696.code_ptr :
      local.curr_697.code == "]"
        ? local.iter_696.tape[local.iter_696.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_696.code_ptr)] : local.iter_696.code_ptr
        : local.iter_696.code_ptr)

    steps_taken = 1 + local.iter_696.steps_taken
  }
}

locals {
  end_of_code_698 = try(local.iter_697.code_ptr >= length(var.code), true)

  curr_698 = local.end_of_code_698 ? null : {
    code = substr(var.code, local.iter_697.code_ptr, 1)
    input = substr(var.code, local.iter_697.code_ptr, 1) == "," ? substr(local.iter_697.input, 0, 1) : null
  }

  iter_698 = local.end_of_code_698 ? local.iter_697 : {
    input = (local.curr_698.code == ","
      ? substr(local.iter_697.input, 1, -1)
      : local.iter_697.input)

    output = (local.curr_698.code == "."
      ? "${local.iter_697.output}${jsondecode(format("\"\\u%04x\"", local.iter_697.tape[local.iter_697.tape_ptr]))}"
      : local.iter_697.output)
    
    tape = (
      local.curr_698.code == "+"
        ? [for i, b in local.iter_697.tape : (i == local.iter_697.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_698.code == "-"
        ? [for i, b in local.iter_697.tape : (i == local.iter_697.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_698.code == ","
        ? [for i, b in local.iter_697.tape : (i == local.iter_697.tape_ptr ? local.ascii_lookup[local.curr_698.input] : b)]
        : local.iter_697.tape)

    tape_ptr = (
      local.curr_698.code == "<"
        ? local.iter_697.tape_ptr == 0 ? length(local.iter_697.tape) - 1 : local.iter_697.tape_ptr - 1 :
      local.curr_698.code == ">"
        ? local.iter_697.tape_ptr == length(local.iter_697.tape) - 1 ? 0 : local.iter_697.tape_ptr + 1
        : local.iter_697.tape_ptr)

    code_ptr = 1 + (
      local.curr_698.code == "["
        ? local.iter_697.tape[local.iter_697.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_697.code_ptr)] : local.iter_697.code_ptr :
      local.curr_698.code == "]"
        ? local.iter_697.tape[local.iter_697.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_697.code_ptr)] : local.iter_697.code_ptr
        : local.iter_697.code_ptr)

    steps_taken = 1 + local.iter_697.steps_taken
  }
}

locals {
  end_of_code_699 = try(local.iter_698.code_ptr >= length(var.code), true)

  curr_699 = local.end_of_code_699 ? null : {
    code = substr(var.code, local.iter_698.code_ptr, 1)
    input = substr(var.code, local.iter_698.code_ptr, 1) == "," ? substr(local.iter_698.input, 0, 1) : null
  }

  iter_699 = local.end_of_code_699 ? local.iter_698 : {
    input = (local.curr_699.code == ","
      ? substr(local.iter_698.input, 1, -1)
      : local.iter_698.input)

    output = (local.curr_699.code == "."
      ? "${local.iter_698.output}${jsondecode(format("\"\\u%04x\"", local.iter_698.tape[local.iter_698.tape_ptr]))}"
      : local.iter_698.output)
    
    tape = (
      local.curr_699.code == "+"
        ? [for i, b in local.iter_698.tape : (i == local.iter_698.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_699.code == "-"
        ? [for i, b in local.iter_698.tape : (i == local.iter_698.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_699.code == ","
        ? [for i, b in local.iter_698.tape : (i == local.iter_698.tape_ptr ? local.ascii_lookup[local.curr_699.input] : b)]
        : local.iter_698.tape)

    tape_ptr = (
      local.curr_699.code == "<"
        ? local.iter_698.tape_ptr == 0 ? length(local.iter_698.tape) - 1 : local.iter_698.tape_ptr - 1 :
      local.curr_699.code == ">"
        ? local.iter_698.tape_ptr == length(local.iter_698.tape) - 1 ? 0 : local.iter_698.tape_ptr + 1
        : local.iter_698.tape_ptr)

    code_ptr = 1 + (
      local.curr_699.code == "["
        ? local.iter_698.tape[local.iter_698.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_698.code_ptr)] : local.iter_698.code_ptr :
      local.curr_699.code == "]"
        ? local.iter_698.tape[local.iter_698.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_698.code_ptr)] : local.iter_698.code_ptr
        : local.iter_698.code_ptr)

    steps_taken = 1 + local.iter_698.steps_taken
  }
}

locals {
  end_of_code_700 = try(local.iter_699.code_ptr >= length(var.code), true)

  curr_700 = local.end_of_code_700 ? null : {
    code = substr(var.code, local.iter_699.code_ptr, 1)
    input = substr(var.code, local.iter_699.code_ptr, 1) == "," ? substr(local.iter_699.input, 0, 1) : null
  }

  iter_700 = local.end_of_code_700 ? local.iter_699 : {
    input = (local.curr_700.code == ","
      ? substr(local.iter_699.input, 1, -1)
      : local.iter_699.input)

    output = (local.curr_700.code == "."
      ? "${local.iter_699.output}${jsondecode(format("\"\\u%04x\"", local.iter_699.tape[local.iter_699.tape_ptr]))}"
      : local.iter_699.output)
    
    tape = (
      local.curr_700.code == "+"
        ? [for i, b in local.iter_699.tape : (i == local.iter_699.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_700.code == "-"
        ? [for i, b in local.iter_699.tape : (i == local.iter_699.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_700.code == ","
        ? [for i, b in local.iter_699.tape : (i == local.iter_699.tape_ptr ? local.ascii_lookup[local.curr_700.input] : b)]
        : local.iter_699.tape)

    tape_ptr = (
      local.curr_700.code == "<"
        ? local.iter_699.tape_ptr == 0 ? length(local.iter_699.tape) - 1 : local.iter_699.tape_ptr - 1 :
      local.curr_700.code == ">"
        ? local.iter_699.tape_ptr == length(local.iter_699.tape) - 1 ? 0 : local.iter_699.tape_ptr + 1
        : local.iter_699.tape_ptr)

    code_ptr = 1 + (
      local.curr_700.code == "["
        ? local.iter_699.tape[local.iter_699.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_699.code_ptr)] : local.iter_699.code_ptr :
      local.curr_700.code == "]"
        ? local.iter_699.tape[local.iter_699.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_699.code_ptr)] : local.iter_699.code_ptr
        : local.iter_699.code_ptr)

    steps_taken = 1 + local.iter_699.steps_taken
  }
}

locals {
  end_of_code_701 = try(local.iter_700.code_ptr >= length(var.code), true)

  curr_701 = local.end_of_code_701 ? null : {
    code = substr(var.code, local.iter_700.code_ptr, 1)
    input = substr(var.code, local.iter_700.code_ptr, 1) == "," ? substr(local.iter_700.input, 0, 1) : null
  }

  iter_701 = local.end_of_code_701 ? local.iter_700 : {
    input = (local.curr_701.code == ","
      ? substr(local.iter_700.input, 1, -1)
      : local.iter_700.input)

    output = (local.curr_701.code == "."
      ? "${local.iter_700.output}${jsondecode(format("\"\\u%04x\"", local.iter_700.tape[local.iter_700.tape_ptr]))}"
      : local.iter_700.output)
    
    tape = (
      local.curr_701.code == "+"
        ? [for i, b in local.iter_700.tape : (i == local.iter_700.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_701.code == "-"
        ? [for i, b in local.iter_700.tape : (i == local.iter_700.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_701.code == ","
        ? [for i, b in local.iter_700.tape : (i == local.iter_700.tape_ptr ? local.ascii_lookup[local.curr_701.input] : b)]
        : local.iter_700.tape)

    tape_ptr = (
      local.curr_701.code == "<"
        ? local.iter_700.tape_ptr == 0 ? length(local.iter_700.tape) - 1 : local.iter_700.tape_ptr - 1 :
      local.curr_701.code == ">"
        ? local.iter_700.tape_ptr == length(local.iter_700.tape) - 1 ? 0 : local.iter_700.tape_ptr + 1
        : local.iter_700.tape_ptr)

    code_ptr = 1 + (
      local.curr_701.code == "["
        ? local.iter_700.tape[local.iter_700.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_700.code_ptr)] : local.iter_700.code_ptr :
      local.curr_701.code == "]"
        ? local.iter_700.tape[local.iter_700.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_700.code_ptr)] : local.iter_700.code_ptr
        : local.iter_700.code_ptr)

    steps_taken = 1 + local.iter_700.steps_taken
  }
}

locals {
  end_of_code_702 = try(local.iter_701.code_ptr >= length(var.code), true)

  curr_702 = local.end_of_code_702 ? null : {
    code = substr(var.code, local.iter_701.code_ptr, 1)
    input = substr(var.code, local.iter_701.code_ptr, 1) == "," ? substr(local.iter_701.input, 0, 1) : null
  }

  iter_702 = local.end_of_code_702 ? local.iter_701 : {
    input = (local.curr_702.code == ","
      ? substr(local.iter_701.input, 1, -1)
      : local.iter_701.input)

    output = (local.curr_702.code == "."
      ? "${local.iter_701.output}${jsondecode(format("\"\\u%04x\"", local.iter_701.tape[local.iter_701.tape_ptr]))}"
      : local.iter_701.output)
    
    tape = (
      local.curr_702.code == "+"
        ? [for i, b in local.iter_701.tape : (i == local.iter_701.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_702.code == "-"
        ? [for i, b in local.iter_701.tape : (i == local.iter_701.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_702.code == ","
        ? [for i, b in local.iter_701.tape : (i == local.iter_701.tape_ptr ? local.ascii_lookup[local.curr_702.input] : b)]
        : local.iter_701.tape)

    tape_ptr = (
      local.curr_702.code == "<"
        ? local.iter_701.tape_ptr == 0 ? length(local.iter_701.tape) - 1 : local.iter_701.tape_ptr - 1 :
      local.curr_702.code == ">"
        ? local.iter_701.tape_ptr == length(local.iter_701.tape) - 1 ? 0 : local.iter_701.tape_ptr + 1
        : local.iter_701.tape_ptr)

    code_ptr = 1 + (
      local.curr_702.code == "["
        ? local.iter_701.tape[local.iter_701.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_701.code_ptr)] : local.iter_701.code_ptr :
      local.curr_702.code == "]"
        ? local.iter_701.tape[local.iter_701.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_701.code_ptr)] : local.iter_701.code_ptr
        : local.iter_701.code_ptr)

    steps_taken = 1 + local.iter_701.steps_taken
  }
}

locals {
  end_of_code_703 = try(local.iter_702.code_ptr >= length(var.code), true)

  curr_703 = local.end_of_code_703 ? null : {
    code = substr(var.code, local.iter_702.code_ptr, 1)
    input = substr(var.code, local.iter_702.code_ptr, 1) == "," ? substr(local.iter_702.input, 0, 1) : null
  }

  iter_703 = local.end_of_code_703 ? local.iter_702 : {
    input = (local.curr_703.code == ","
      ? substr(local.iter_702.input, 1, -1)
      : local.iter_702.input)

    output = (local.curr_703.code == "."
      ? "${local.iter_702.output}${jsondecode(format("\"\\u%04x\"", local.iter_702.tape[local.iter_702.tape_ptr]))}"
      : local.iter_702.output)
    
    tape = (
      local.curr_703.code == "+"
        ? [for i, b in local.iter_702.tape : (i == local.iter_702.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_703.code == "-"
        ? [for i, b in local.iter_702.tape : (i == local.iter_702.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_703.code == ","
        ? [for i, b in local.iter_702.tape : (i == local.iter_702.tape_ptr ? local.ascii_lookup[local.curr_703.input] : b)]
        : local.iter_702.tape)

    tape_ptr = (
      local.curr_703.code == "<"
        ? local.iter_702.tape_ptr == 0 ? length(local.iter_702.tape) - 1 : local.iter_702.tape_ptr - 1 :
      local.curr_703.code == ">"
        ? local.iter_702.tape_ptr == length(local.iter_702.tape) - 1 ? 0 : local.iter_702.tape_ptr + 1
        : local.iter_702.tape_ptr)

    code_ptr = 1 + (
      local.curr_703.code == "["
        ? local.iter_702.tape[local.iter_702.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_702.code_ptr)] : local.iter_702.code_ptr :
      local.curr_703.code == "]"
        ? local.iter_702.tape[local.iter_702.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_702.code_ptr)] : local.iter_702.code_ptr
        : local.iter_702.code_ptr)

    steps_taken = 1 + local.iter_702.steps_taken
  }
}

locals {
  end_of_code_704 = try(local.iter_703.code_ptr >= length(var.code), true)

  curr_704 = local.end_of_code_704 ? null : {
    code = substr(var.code, local.iter_703.code_ptr, 1)
    input = substr(var.code, local.iter_703.code_ptr, 1) == "," ? substr(local.iter_703.input, 0, 1) : null
  }

  iter_704 = local.end_of_code_704 ? local.iter_703 : {
    input = (local.curr_704.code == ","
      ? substr(local.iter_703.input, 1, -1)
      : local.iter_703.input)

    output = (local.curr_704.code == "."
      ? "${local.iter_703.output}${jsondecode(format("\"\\u%04x\"", local.iter_703.tape[local.iter_703.tape_ptr]))}"
      : local.iter_703.output)
    
    tape = (
      local.curr_704.code == "+"
        ? [for i, b in local.iter_703.tape : (i == local.iter_703.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_704.code == "-"
        ? [for i, b in local.iter_703.tape : (i == local.iter_703.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_704.code == ","
        ? [for i, b in local.iter_703.tape : (i == local.iter_703.tape_ptr ? local.ascii_lookup[local.curr_704.input] : b)]
        : local.iter_703.tape)

    tape_ptr = (
      local.curr_704.code == "<"
        ? local.iter_703.tape_ptr == 0 ? length(local.iter_703.tape) - 1 : local.iter_703.tape_ptr - 1 :
      local.curr_704.code == ">"
        ? local.iter_703.tape_ptr == length(local.iter_703.tape) - 1 ? 0 : local.iter_703.tape_ptr + 1
        : local.iter_703.tape_ptr)

    code_ptr = 1 + (
      local.curr_704.code == "["
        ? local.iter_703.tape[local.iter_703.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_703.code_ptr)] : local.iter_703.code_ptr :
      local.curr_704.code == "]"
        ? local.iter_703.tape[local.iter_703.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_703.code_ptr)] : local.iter_703.code_ptr
        : local.iter_703.code_ptr)

    steps_taken = 1 + local.iter_703.steps_taken
  }
}

locals {
  end_of_code_705 = try(local.iter_704.code_ptr >= length(var.code), true)

  curr_705 = local.end_of_code_705 ? null : {
    code = substr(var.code, local.iter_704.code_ptr, 1)
    input = substr(var.code, local.iter_704.code_ptr, 1) == "," ? substr(local.iter_704.input, 0, 1) : null
  }

  iter_705 = local.end_of_code_705 ? local.iter_704 : {
    input = (local.curr_705.code == ","
      ? substr(local.iter_704.input, 1, -1)
      : local.iter_704.input)

    output = (local.curr_705.code == "."
      ? "${local.iter_704.output}${jsondecode(format("\"\\u%04x\"", local.iter_704.tape[local.iter_704.tape_ptr]))}"
      : local.iter_704.output)
    
    tape = (
      local.curr_705.code == "+"
        ? [for i, b in local.iter_704.tape : (i == local.iter_704.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_705.code == "-"
        ? [for i, b in local.iter_704.tape : (i == local.iter_704.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_705.code == ","
        ? [for i, b in local.iter_704.tape : (i == local.iter_704.tape_ptr ? local.ascii_lookup[local.curr_705.input] : b)]
        : local.iter_704.tape)

    tape_ptr = (
      local.curr_705.code == "<"
        ? local.iter_704.tape_ptr == 0 ? length(local.iter_704.tape) - 1 : local.iter_704.tape_ptr - 1 :
      local.curr_705.code == ">"
        ? local.iter_704.tape_ptr == length(local.iter_704.tape) - 1 ? 0 : local.iter_704.tape_ptr + 1
        : local.iter_704.tape_ptr)

    code_ptr = 1 + (
      local.curr_705.code == "["
        ? local.iter_704.tape[local.iter_704.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_704.code_ptr)] : local.iter_704.code_ptr :
      local.curr_705.code == "]"
        ? local.iter_704.tape[local.iter_704.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_704.code_ptr)] : local.iter_704.code_ptr
        : local.iter_704.code_ptr)

    steps_taken = 1 + local.iter_704.steps_taken
  }
}

locals {
  end_of_code_706 = try(local.iter_705.code_ptr >= length(var.code), true)

  curr_706 = local.end_of_code_706 ? null : {
    code = substr(var.code, local.iter_705.code_ptr, 1)
    input = substr(var.code, local.iter_705.code_ptr, 1) == "," ? substr(local.iter_705.input, 0, 1) : null
  }

  iter_706 = local.end_of_code_706 ? local.iter_705 : {
    input = (local.curr_706.code == ","
      ? substr(local.iter_705.input, 1, -1)
      : local.iter_705.input)

    output = (local.curr_706.code == "."
      ? "${local.iter_705.output}${jsondecode(format("\"\\u%04x\"", local.iter_705.tape[local.iter_705.tape_ptr]))}"
      : local.iter_705.output)
    
    tape = (
      local.curr_706.code == "+"
        ? [for i, b in local.iter_705.tape : (i == local.iter_705.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_706.code == "-"
        ? [for i, b in local.iter_705.tape : (i == local.iter_705.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_706.code == ","
        ? [for i, b in local.iter_705.tape : (i == local.iter_705.tape_ptr ? local.ascii_lookup[local.curr_706.input] : b)]
        : local.iter_705.tape)

    tape_ptr = (
      local.curr_706.code == "<"
        ? local.iter_705.tape_ptr == 0 ? length(local.iter_705.tape) - 1 : local.iter_705.tape_ptr - 1 :
      local.curr_706.code == ">"
        ? local.iter_705.tape_ptr == length(local.iter_705.tape) - 1 ? 0 : local.iter_705.tape_ptr + 1
        : local.iter_705.tape_ptr)

    code_ptr = 1 + (
      local.curr_706.code == "["
        ? local.iter_705.tape[local.iter_705.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_705.code_ptr)] : local.iter_705.code_ptr :
      local.curr_706.code == "]"
        ? local.iter_705.tape[local.iter_705.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_705.code_ptr)] : local.iter_705.code_ptr
        : local.iter_705.code_ptr)

    steps_taken = 1 + local.iter_705.steps_taken
  }
}

locals {
  end_of_code_707 = try(local.iter_706.code_ptr >= length(var.code), true)

  curr_707 = local.end_of_code_707 ? null : {
    code = substr(var.code, local.iter_706.code_ptr, 1)
    input = substr(var.code, local.iter_706.code_ptr, 1) == "," ? substr(local.iter_706.input, 0, 1) : null
  }

  iter_707 = local.end_of_code_707 ? local.iter_706 : {
    input = (local.curr_707.code == ","
      ? substr(local.iter_706.input, 1, -1)
      : local.iter_706.input)

    output = (local.curr_707.code == "."
      ? "${local.iter_706.output}${jsondecode(format("\"\\u%04x\"", local.iter_706.tape[local.iter_706.tape_ptr]))}"
      : local.iter_706.output)
    
    tape = (
      local.curr_707.code == "+"
        ? [for i, b in local.iter_706.tape : (i == local.iter_706.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_707.code == "-"
        ? [for i, b in local.iter_706.tape : (i == local.iter_706.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_707.code == ","
        ? [for i, b in local.iter_706.tape : (i == local.iter_706.tape_ptr ? local.ascii_lookup[local.curr_707.input] : b)]
        : local.iter_706.tape)

    tape_ptr = (
      local.curr_707.code == "<"
        ? local.iter_706.tape_ptr == 0 ? length(local.iter_706.tape) - 1 : local.iter_706.tape_ptr - 1 :
      local.curr_707.code == ">"
        ? local.iter_706.tape_ptr == length(local.iter_706.tape) - 1 ? 0 : local.iter_706.tape_ptr + 1
        : local.iter_706.tape_ptr)

    code_ptr = 1 + (
      local.curr_707.code == "["
        ? local.iter_706.tape[local.iter_706.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_706.code_ptr)] : local.iter_706.code_ptr :
      local.curr_707.code == "]"
        ? local.iter_706.tape[local.iter_706.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_706.code_ptr)] : local.iter_706.code_ptr
        : local.iter_706.code_ptr)

    steps_taken = 1 + local.iter_706.steps_taken
  }
}

locals {
  end_of_code_708 = try(local.iter_707.code_ptr >= length(var.code), true)

  curr_708 = local.end_of_code_708 ? null : {
    code = substr(var.code, local.iter_707.code_ptr, 1)
    input = substr(var.code, local.iter_707.code_ptr, 1) == "," ? substr(local.iter_707.input, 0, 1) : null
  }

  iter_708 = local.end_of_code_708 ? local.iter_707 : {
    input = (local.curr_708.code == ","
      ? substr(local.iter_707.input, 1, -1)
      : local.iter_707.input)

    output = (local.curr_708.code == "."
      ? "${local.iter_707.output}${jsondecode(format("\"\\u%04x\"", local.iter_707.tape[local.iter_707.tape_ptr]))}"
      : local.iter_707.output)
    
    tape = (
      local.curr_708.code == "+"
        ? [for i, b in local.iter_707.tape : (i == local.iter_707.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_708.code == "-"
        ? [for i, b in local.iter_707.tape : (i == local.iter_707.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_708.code == ","
        ? [for i, b in local.iter_707.tape : (i == local.iter_707.tape_ptr ? local.ascii_lookup[local.curr_708.input] : b)]
        : local.iter_707.tape)

    tape_ptr = (
      local.curr_708.code == "<"
        ? local.iter_707.tape_ptr == 0 ? length(local.iter_707.tape) - 1 : local.iter_707.tape_ptr - 1 :
      local.curr_708.code == ">"
        ? local.iter_707.tape_ptr == length(local.iter_707.tape) - 1 ? 0 : local.iter_707.tape_ptr + 1
        : local.iter_707.tape_ptr)

    code_ptr = 1 + (
      local.curr_708.code == "["
        ? local.iter_707.tape[local.iter_707.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_707.code_ptr)] : local.iter_707.code_ptr :
      local.curr_708.code == "]"
        ? local.iter_707.tape[local.iter_707.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_707.code_ptr)] : local.iter_707.code_ptr
        : local.iter_707.code_ptr)

    steps_taken = 1 + local.iter_707.steps_taken
  }
}

locals {
  end_of_code_709 = try(local.iter_708.code_ptr >= length(var.code), true)

  curr_709 = local.end_of_code_709 ? null : {
    code = substr(var.code, local.iter_708.code_ptr, 1)
    input = substr(var.code, local.iter_708.code_ptr, 1) == "," ? substr(local.iter_708.input, 0, 1) : null
  }

  iter_709 = local.end_of_code_709 ? local.iter_708 : {
    input = (local.curr_709.code == ","
      ? substr(local.iter_708.input, 1, -1)
      : local.iter_708.input)

    output = (local.curr_709.code == "."
      ? "${local.iter_708.output}${jsondecode(format("\"\\u%04x\"", local.iter_708.tape[local.iter_708.tape_ptr]))}"
      : local.iter_708.output)
    
    tape = (
      local.curr_709.code == "+"
        ? [for i, b in local.iter_708.tape : (i == local.iter_708.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_709.code == "-"
        ? [for i, b in local.iter_708.tape : (i == local.iter_708.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_709.code == ","
        ? [for i, b in local.iter_708.tape : (i == local.iter_708.tape_ptr ? local.ascii_lookup[local.curr_709.input] : b)]
        : local.iter_708.tape)

    tape_ptr = (
      local.curr_709.code == "<"
        ? local.iter_708.tape_ptr == 0 ? length(local.iter_708.tape) - 1 : local.iter_708.tape_ptr - 1 :
      local.curr_709.code == ">"
        ? local.iter_708.tape_ptr == length(local.iter_708.tape) - 1 ? 0 : local.iter_708.tape_ptr + 1
        : local.iter_708.tape_ptr)

    code_ptr = 1 + (
      local.curr_709.code == "["
        ? local.iter_708.tape[local.iter_708.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_708.code_ptr)] : local.iter_708.code_ptr :
      local.curr_709.code == "]"
        ? local.iter_708.tape[local.iter_708.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_708.code_ptr)] : local.iter_708.code_ptr
        : local.iter_708.code_ptr)

    steps_taken = 1 + local.iter_708.steps_taken
  }
}

locals {
  end_of_code_710 = try(local.iter_709.code_ptr >= length(var.code), true)

  curr_710 = local.end_of_code_710 ? null : {
    code = substr(var.code, local.iter_709.code_ptr, 1)
    input = substr(var.code, local.iter_709.code_ptr, 1) == "," ? substr(local.iter_709.input, 0, 1) : null
  }

  iter_710 = local.end_of_code_710 ? local.iter_709 : {
    input = (local.curr_710.code == ","
      ? substr(local.iter_709.input, 1, -1)
      : local.iter_709.input)

    output = (local.curr_710.code == "."
      ? "${local.iter_709.output}${jsondecode(format("\"\\u%04x\"", local.iter_709.tape[local.iter_709.tape_ptr]))}"
      : local.iter_709.output)
    
    tape = (
      local.curr_710.code == "+"
        ? [for i, b in local.iter_709.tape : (i == local.iter_709.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_710.code == "-"
        ? [for i, b in local.iter_709.tape : (i == local.iter_709.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_710.code == ","
        ? [for i, b in local.iter_709.tape : (i == local.iter_709.tape_ptr ? local.ascii_lookup[local.curr_710.input] : b)]
        : local.iter_709.tape)

    tape_ptr = (
      local.curr_710.code == "<"
        ? local.iter_709.tape_ptr == 0 ? length(local.iter_709.tape) - 1 : local.iter_709.tape_ptr - 1 :
      local.curr_710.code == ">"
        ? local.iter_709.tape_ptr == length(local.iter_709.tape) - 1 ? 0 : local.iter_709.tape_ptr + 1
        : local.iter_709.tape_ptr)

    code_ptr = 1 + (
      local.curr_710.code == "["
        ? local.iter_709.tape[local.iter_709.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_709.code_ptr)] : local.iter_709.code_ptr :
      local.curr_710.code == "]"
        ? local.iter_709.tape[local.iter_709.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_709.code_ptr)] : local.iter_709.code_ptr
        : local.iter_709.code_ptr)

    steps_taken = 1 + local.iter_709.steps_taken
  }
}

locals {
  end_of_code_711 = try(local.iter_710.code_ptr >= length(var.code), true)

  curr_711 = local.end_of_code_711 ? null : {
    code = substr(var.code, local.iter_710.code_ptr, 1)
    input = substr(var.code, local.iter_710.code_ptr, 1) == "," ? substr(local.iter_710.input, 0, 1) : null
  }

  iter_711 = local.end_of_code_711 ? local.iter_710 : {
    input = (local.curr_711.code == ","
      ? substr(local.iter_710.input, 1, -1)
      : local.iter_710.input)

    output = (local.curr_711.code == "."
      ? "${local.iter_710.output}${jsondecode(format("\"\\u%04x\"", local.iter_710.tape[local.iter_710.tape_ptr]))}"
      : local.iter_710.output)
    
    tape = (
      local.curr_711.code == "+"
        ? [for i, b in local.iter_710.tape : (i == local.iter_710.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_711.code == "-"
        ? [for i, b in local.iter_710.tape : (i == local.iter_710.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_711.code == ","
        ? [for i, b in local.iter_710.tape : (i == local.iter_710.tape_ptr ? local.ascii_lookup[local.curr_711.input] : b)]
        : local.iter_710.tape)

    tape_ptr = (
      local.curr_711.code == "<"
        ? local.iter_710.tape_ptr == 0 ? length(local.iter_710.tape) - 1 : local.iter_710.tape_ptr - 1 :
      local.curr_711.code == ">"
        ? local.iter_710.tape_ptr == length(local.iter_710.tape) - 1 ? 0 : local.iter_710.tape_ptr + 1
        : local.iter_710.tape_ptr)

    code_ptr = 1 + (
      local.curr_711.code == "["
        ? local.iter_710.tape[local.iter_710.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_710.code_ptr)] : local.iter_710.code_ptr :
      local.curr_711.code == "]"
        ? local.iter_710.tape[local.iter_710.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_710.code_ptr)] : local.iter_710.code_ptr
        : local.iter_710.code_ptr)

    steps_taken = 1 + local.iter_710.steps_taken
  }
}

locals {
  end_of_code_712 = try(local.iter_711.code_ptr >= length(var.code), true)

  curr_712 = local.end_of_code_712 ? null : {
    code = substr(var.code, local.iter_711.code_ptr, 1)
    input = substr(var.code, local.iter_711.code_ptr, 1) == "," ? substr(local.iter_711.input, 0, 1) : null
  }

  iter_712 = local.end_of_code_712 ? local.iter_711 : {
    input = (local.curr_712.code == ","
      ? substr(local.iter_711.input, 1, -1)
      : local.iter_711.input)

    output = (local.curr_712.code == "."
      ? "${local.iter_711.output}${jsondecode(format("\"\\u%04x\"", local.iter_711.tape[local.iter_711.tape_ptr]))}"
      : local.iter_711.output)
    
    tape = (
      local.curr_712.code == "+"
        ? [for i, b in local.iter_711.tape : (i == local.iter_711.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_712.code == "-"
        ? [for i, b in local.iter_711.tape : (i == local.iter_711.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_712.code == ","
        ? [for i, b in local.iter_711.tape : (i == local.iter_711.tape_ptr ? local.ascii_lookup[local.curr_712.input] : b)]
        : local.iter_711.tape)

    tape_ptr = (
      local.curr_712.code == "<"
        ? local.iter_711.tape_ptr == 0 ? length(local.iter_711.tape) - 1 : local.iter_711.tape_ptr - 1 :
      local.curr_712.code == ">"
        ? local.iter_711.tape_ptr == length(local.iter_711.tape) - 1 ? 0 : local.iter_711.tape_ptr + 1
        : local.iter_711.tape_ptr)

    code_ptr = 1 + (
      local.curr_712.code == "["
        ? local.iter_711.tape[local.iter_711.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_711.code_ptr)] : local.iter_711.code_ptr :
      local.curr_712.code == "]"
        ? local.iter_711.tape[local.iter_711.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_711.code_ptr)] : local.iter_711.code_ptr
        : local.iter_711.code_ptr)

    steps_taken = 1 + local.iter_711.steps_taken
  }
}

locals {
  end_of_code_713 = try(local.iter_712.code_ptr >= length(var.code), true)

  curr_713 = local.end_of_code_713 ? null : {
    code = substr(var.code, local.iter_712.code_ptr, 1)
    input = substr(var.code, local.iter_712.code_ptr, 1) == "," ? substr(local.iter_712.input, 0, 1) : null
  }

  iter_713 = local.end_of_code_713 ? local.iter_712 : {
    input = (local.curr_713.code == ","
      ? substr(local.iter_712.input, 1, -1)
      : local.iter_712.input)

    output = (local.curr_713.code == "."
      ? "${local.iter_712.output}${jsondecode(format("\"\\u%04x\"", local.iter_712.tape[local.iter_712.tape_ptr]))}"
      : local.iter_712.output)
    
    tape = (
      local.curr_713.code == "+"
        ? [for i, b in local.iter_712.tape : (i == local.iter_712.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_713.code == "-"
        ? [for i, b in local.iter_712.tape : (i == local.iter_712.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_713.code == ","
        ? [for i, b in local.iter_712.tape : (i == local.iter_712.tape_ptr ? local.ascii_lookup[local.curr_713.input] : b)]
        : local.iter_712.tape)

    tape_ptr = (
      local.curr_713.code == "<"
        ? local.iter_712.tape_ptr == 0 ? length(local.iter_712.tape) - 1 : local.iter_712.tape_ptr - 1 :
      local.curr_713.code == ">"
        ? local.iter_712.tape_ptr == length(local.iter_712.tape) - 1 ? 0 : local.iter_712.tape_ptr + 1
        : local.iter_712.tape_ptr)

    code_ptr = 1 + (
      local.curr_713.code == "["
        ? local.iter_712.tape[local.iter_712.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_712.code_ptr)] : local.iter_712.code_ptr :
      local.curr_713.code == "]"
        ? local.iter_712.tape[local.iter_712.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_712.code_ptr)] : local.iter_712.code_ptr
        : local.iter_712.code_ptr)

    steps_taken = 1 + local.iter_712.steps_taken
  }
}

locals {
  end_of_code_714 = try(local.iter_713.code_ptr >= length(var.code), true)

  curr_714 = local.end_of_code_714 ? null : {
    code = substr(var.code, local.iter_713.code_ptr, 1)
    input = substr(var.code, local.iter_713.code_ptr, 1) == "," ? substr(local.iter_713.input, 0, 1) : null
  }

  iter_714 = local.end_of_code_714 ? local.iter_713 : {
    input = (local.curr_714.code == ","
      ? substr(local.iter_713.input, 1, -1)
      : local.iter_713.input)

    output = (local.curr_714.code == "."
      ? "${local.iter_713.output}${jsondecode(format("\"\\u%04x\"", local.iter_713.tape[local.iter_713.tape_ptr]))}"
      : local.iter_713.output)
    
    tape = (
      local.curr_714.code == "+"
        ? [for i, b in local.iter_713.tape : (i == local.iter_713.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_714.code == "-"
        ? [for i, b in local.iter_713.tape : (i == local.iter_713.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_714.code == ","
        ? [for i, b in local.iter_713.tape : (i == local.iter_713.tape_ptr ? local.ascii_lookup[local.curr_714.input] : b)]
        : local.iter_713.tape)

    tape_ptr = (
      local.curr_714.code == "<"
        ? local.iter_713.tape_ptr == 0 ? length(local.iter_713.tape) - 1 : local.iter_713.tape_ptr - 1 :
      local.curr_714.code == ">"
        ? local.iter_713.tape_ptr == length(local.iter_713.tape) - 1 ? 0 : local.iter_713.tape_ptr + 1
        : local.iter_713.tape_ptr)

    code_ptr = 1 + (
      local.curr_714.code == "["
        ? local.iter_713.tape[local.iter_713.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_713.code_ptr)] : local.iter_713.code_ptr :
      local.curr_714.code == "]"
        ? local.iter_713.tape[local.iter_713.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_713.code_ptr)] : local.iter_713.code_ptr
        : local.iter_713.code_ptr)

    steps_taken = 1 + local.iter_713.steps_taken
  }
}

locals {
  end_of_code_715 = try(local.iter_714.code_ptr >= length(var.code), true)

  curr_715 = local.end_of_code_715 ? null : {
    code = substr(var.code, local.iter_714.code_ptr, 1)
    input = substr(var.code, local.iter_714.code_ptr, 1) == "," ? substr(local.iter_714.input, 0, 1) : null
  }

  iter_715 = local.end_of_code_715 ? local.iter_714 : {
    input = (local.curr_715.code == ","
      ? substr(local.iter_714.input, 1, -1)
      : local.iter_714.input)

    output = (local.curr_715.code == "."
      ? "${local.iter_714.output}${jsondecode(format("\"\\u%04x\"", local.iter_714.tape[local.iter_714.tape_ptr]))}"
      : local.iter_714.output)
    
    tape = (
      local.curr_715.code == "+"
        ? [for i, b in local.iter_714.tape : (i == local.iter_714.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_715.code == "-"
        ? [for i, b in local.iter_714.tape : (i == local.iter_714.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_715.code == ","
        ? [for i, b in local.iter_714.tape : (i == local.iter_714.tape_ptr ? local.ascii_lookup[local.curr_715.input] : b)]
        : local.iter_714.tape)

    tape_ptr = (
      local.curr_715.code == "<"
        ? local.iter_714.tape_ptr == 0 ? length(local.iter_714.tape) - 1 : local.iter_714.tape_ptr - 1 :
      local.curr_715.code == ">"
        ? local.iter_714.tape_ptr == length(local.iter_714.tape) - 1 ? 0 : local.iter_714.tape_ptr + 1
        : local.iter_714.tape_ptr)

    code_ptr = 1 + (
      local.curr_715.code == "["
        ? local.iter_714.tape[local.iter_714.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_714.code_ptr)] : local.iter_714.code_ptr :
      local.curr_715.code == "]"
        ? local.iter_714.tape[local.iter_714.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_714.code_ptr)] : local.iter_714.code_ptr
        : local.iter_714.code_ptr)

    steps_taken = 1 + local.iter_714.steps_taken
  }
}

locals {
  end_of_code_716 = try(local.iter_715.code_ptr >= length(var.code), true)

  curr_716 = local.end_of_code_716 ? null : {
    code = substr(var.code, local.iter_715.code_ptr, 1)
    input = substr(var.code, local.iter_715.code_ptr, 1) == "," ? substr(local.iter_715.input, 0, 1) : null
  }

  iter_716 = local.end_of_code_716 ? local.iter_715 : {
    input = (local.curr_716.code == ","
      ? substr(local.iter_715.input, 1, -1)
      : local.iter_715.input)

    output = (local.curr_716.code == "."
      ? "${local.iter_715.output}${jsondecode(format("\"\\u%04x\"", local.iter_715.tape[local.iter_715.tape_ptr]))}"
      : local.iter_715.output)
    
    tape = (
      local.curr_716.code == "+"
        ? [for i, b in local.iter_715.tape : (i == local.iter_715.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_716.code == "-"
        ? [for i, b in local.iter_715.tape : (i == local.iter_715.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_716.code == ","
        ? [for i, b in local.iter_715.tape : (i == local.iter_715.tape_ptr ? local.ascii_lookup[local.curr_716.input] : b)]
        : local.iter_715.tape)

    tape_ptr = (
      local.curr_716.code == "<"
        ? local.iter_715.tape_ptr == 0 ? length(local.iter_715.tape) - 1 : local.iter_715.tape_ptr - 1 :
      local.curr_716.code == ">"
        ? local.iter_715.tape_ptr == length(local.iter_715.tape) - 1 ? 0 : local.iter_715.tape_ptr + 1
        : local.iter_715.tape_ptr)

    code_ptr = 1 + (
      local.curr_716.code == "["
        ? local.iter_715.tape[local.iter_715.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_715.code_ptr)] : local.iter_715.code_ptr :
      local.curr_716.code == "]"
        ? local.iter_715.tape[local.iter_715.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_715.code_ptr)] : local.iter_715.code_ptr
        : local.iter_715.code_ptr)

    steps_taken = 1 + local.iter_715.steps_taken
  }
}

locals {
  end_of_code_717 = try(local.iter_716.code_ptr >= length(var.code), true)

  curr_717 = local.end_of_code_717 ? null : {
    code = substr(var.code, local.iter_716.code_ptr, 1)
    input = substr(var.code, local.iter_716.code_ptr, 1) == "," ? substr(local.iter_716.input, 0, 1) : null
  }

  iter_717 = local.end_of_code_717 ? local.iter_716 : {
    input = (local.curr_717.code == ","
      ? substr(local.iter_716.input, 1, -1)
      : local.iter_716.input)

    output = (local.curr_717.code == "."
      ? "${local.iter_716.output}${jsondecode(format("\"\\u%04x\"", local.iter_716.tape[local.iter_716.tape_ptr]))}"
      : local.iter_716.output)
    
    tape = (
      local.curr_717.code == "+"
        ? [for i, b in local.iter_716.tape : (i == local.iter_716.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_717.code == "-"
        ? [for i, b in local.iter_716.tape : (i == local.iter_716.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_717.code == ","
        ? [for i, b in local.iter_716.tape : (i == local.iter_716.tape_ptr ? local.ascii_lookup[local.curr_717.input] : b)]
        : local.iter_716.tape)

    tape_ptr = (
      local.curr_717.code == "<"
        ? local.iter_716.tape_ptr == 0 ? length(local.iter_716.tape) - 1 : local.iter_716.tape_ptr - 1 :
      local.curr_717.code == ">"
        ? local.iter_716.tape_ptr == length(local.iter_716.tape) - 1 ? 0 : local.iter_716.tape_ptr + 1
        : local.iter_716.tape_ptr)

    code_ptr = 1 + (
      local.curr_717.code == "["
        ? local.iter_716.tape[local.iter_716.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_716.code_ptr)] : local.iter_716.code_ptr :
      local.curr_717.code == "]"
        ? local.iter_716.tape[local.iter_716.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_716.code_ptr)] : local.iter_716.code_ptr
        : local.iter_716.code_ptr)

    steps_taken = 1 + local.iter_716.steps_taken
  }
}

locals {
  end_of_code_718 = try(local.iter_717.code_ptr >= length(var.code), true)

  curr_718 = local.end_of_code_718 ? null : {
    code = substr(var.code, local.iter_717.code_ptr, 1)
    input = substr(var.code, local.iter_717.code_ptr, 1) == "," ? substr(local.iter_717.input, 0, 1) : null
  }

  iter_718 = local.end_of_code_718 ? local.iter_717 : {
    input = (local.curr_718.code == ","
      ? substr(local.iter_717.input, 1, -1)
      : local.iter_717.input)

    output = (local.curr_718.code == "."
      ? "${local.iter_717.output}${jsondecode(format("\"\\u%04x\"", local.iter_717.tape[local.iter_717.tape_ptr]))}"
      : local.iter_717.output)
    
    tape = (
      local.curr_718.code == "+"
        ? [for i, b in local.iter_717.tape : (i == local.iter_717.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_718.code == "-"
        ? [for i, b in local.iter_717.tape : (i == local.iter_717.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_718.code == ","
        ? [for i, b in local.iter_717.tape : (i == local.iter_717.tape_ptr ? local.ascii_lookup[local.curr_718.input] : b)]
        : local.iter_717.tape)

    tape_ptr = (
      local.curr_718.code == "<"
        ? local.iter_717.tape_ptr == 0 ? length(local.iter_717.tape) - 1 : local.iter_717.tape_ptr - 1 :
      local.curr_718.code == ">"
        ? local.iter_717.tape_ptr == length(local.iter_717.tape) - 1 ? 0 : local.iter_717.tape_ptr + 1
        : local.iter_717.tape_ptr)

    code_ptr = 1 + (
      local.curr_718.code == "["
        ? local.iter_717.tape[local.iter_717.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_717.code_ptr)] : local.iter_717.code_ptr :
      local.curr_718.code == "]"
        ? local.iter_717.tape[local.iter_717.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_717.code_ptr)] : local.iter_717.code_ptr
        : local.iter_717.code_ptr)

    steps_taken = 1 + local.iter_717.steps_taken
  }
}

locals {
  end_of_code_719 = try(local.iter_718.code_ptr >= length(var.code), true)

  curr_719 = local.end_of_code_719 ? null : {
    code = substr(var.code, local.iter_718.code_ptr, 1)
    input = substr(var.code, local.iter_718.code_ptr, 1) == "," ? substr(local.iter_718.input, 0, 1) : null
  }

  iter_719 = local.end_of_code_719 ? local.iter_718 : {
    input = (local.curr_719.code == ","
      ? substr(local.iter_718.input, 1, -1)
      : local.iter_718.input)

    output = (local.curr_719.code == "."
      ? "${local.iter_718.output}${jsondecode(format("\"\\u%04x\"", local.iter_718.tape[local.iter_718.tape_ptr]))}"
      : local.iter_718.output)
    
    tape = (
      local.curr_719.code == "+"
        ? [for i, b in local.iter_718.tape : (i == local.iter_718.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_719.code == "-"
        ? [for i, b in local.iter_718.tape : (i == local.iter_718.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_719.code == ","
        ? [for i, b in local.iter_718.tape : (i == local.iter_718.tape_ptr ? local.ascii_lookup[local.curr_719.input] : b)]
        : local.iter_718.tape)

    tape_ptr = (
      local.curr_719.code == "<"
        ? local.iter_718.tape_ptr == 0 ? length(local.iter_718.tape) - 1 : local.iter_718.tape_ptr - 1 :
      local.curr_719.code == ">"
        ? local.iter_718.tape_ptr == length(local.iter_718.tape) - 1 ? 0 : local.iter_718.tape_ptr + 1
        : local.iter_718.tape_ptr)

    code_ptr = 1 + (
      local.curr_719.code == "["
        ? local.iter_718.tape[local.iter_718.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_718.code_ptr)] : local.iter_718.code_ptr :
      local.curr_719.code == "]"
        ? local.iter_718.tape[local.iter_718.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_718.code_ptr)] : local.iter_718.code_ptr
        : local.iter_718.code_ptr)

    steps_taken = 1 + local.iter_718.steps_taken
  }
}

locals {
  end_of_code_720 = try(local.iter_719.code_ptr >= length(var.code), true)

  curr_720 = local.end_of_code_720 ? null : {
    code = substr(var.code, local.iter_719.code_ptr, 1)
    input = substr(var.code, local.iter_719.code_ptr, 1) == "," ? substr(local.iter_719.input, 0, 1) : null
  }

  iter_720 = local.end_of_code_720 ? local.iter_719 : {
    input = (local.curr_720.code == ","
      ? substr(local.iter_719.input, 1, -1)
      : local.iter_719.input)

    output = (local.curr_720.code == "."
      ? "${local.iter_719.output}${jsondecode(format("\"\\u%04x\"", local.iter_719.tape[local.iter_719.tape_ptr]))}"
      : local.iter_719.output)
    
    tape = (
      local.curr_720.code == "+"
        ? [for i, b in local.iter_719.tape : (i == local.iter_719.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_720.code == "-"
        ? [for i, b in local.iter_719.tape : (i == local.iter_719.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_720.code == ","
        ? [for i, b in local.iter_719.tape : (i == local.iter_719.tape_ptr ? local.ascii_lookup[local.curr_720.input] : b)]
        : local.iter_719.tape)

    tape_ptr = (
      local.curr_720.code == "<"
        ? local.iter_719.tape_ptr == 0 ? length(local.iter_719.tape) - 1 : local.iter_719.tape_ptr - 1 :
      local.curr_720.code == ">"
        ? local.iter_719.tape_ptr == length(local.iter_719.tape) - 1 ? 0 : local.iter_719.tape_ptr + 1
        : local.iter_719.tape_ptr)

    code_ptr = 1 + (
      local.curr_720.code == "["
        ? local.iter_719.tape[local.iter_719.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_719.code_ptr)] : local.iter_719.code_ptr :
      local.curr_720.code == "]"
        ? local.iter_719.tape[local.iter_719.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_719.code_ptr)] : local.iter_719.code_ptr
        : local.iter_719.code_ptr)

    steps_taken = 1 + local.iter_719.steps_taken
  }
}

locals {
  end_of_code_721 = try(local.iter_720.code_ptr >= length(var.code), true)

  curr_721 = local.end_of_code_721 ? null : {
    code = substr(var.code, local.iter_720.code_ptr, 1)
    input = substr(var.code, local.iter_720.code_ptr, 1) == "," ? substr(local.iter_720.input, 0, 1) : null
  }

  iter_721 = local.end_of_code_721 ? local.iter_720 : {
    input = (local.curr_721.code == ","
      ? substr(local.iter_720.input, 1, -1)
      : local.iter_720.input)

    output = (local.curr_721.code == "."
      ? "${local.iter_720.output}${jsondecode(format("\"\\u%04x\"", local.iter_720.tape[local.iter_720.tape_ptr]))}"
      : local.iter_720.output)
    
    tape = (
      local.curr_721.code == "+"
        ? [for i, b in local.iter_720.tape : (i == local.iter_720.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_721.code == "-"
        ? [for i, b in local.iter_720.tape : (i == local.iter_720.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_721.code == ","
        ? [for i, b in local.iter_720.tape : (i == local.iter_720.tape_ptr ? local.ascii_lookup[local.curr_721.input] : b)]
        : local.iter_720.tape)

    tape_ptr = (
      local.curr_721.code == "<"
        ? local.iter_720.tape_ptr == 0 ? length(local.iter_720.tape) - 1 : local.iter_720.tape_ptr - 1 :
      local.curr_721.code == ">"
        ? local.iter_720.tape_ptr == length(local.iter_720.tape) - 1 ? 0 : local.iter_720.tape_ptr + 1
        : local.iter_720.tape_ptr)

    code_ptr = 1 + (
      local.curr_721.code == "["
        ? local.iter_720.tape[local.iter_720.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_720.code_ptr)] : local.iter_720.code_ptr :
      local.curr_721.code == "]"
        ? local.iter_720.tape[local.iter_720.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_720.code_ptr)] : local.iter_720.code_ptr
        : local.iter_720.code_ptr)

    steps_taken = 1 + local.iter_720.steps_taken
  }
}

locals {
  end_of_code_722 = try(local.iter_721.code_ptr >= length(var.code), true)

  curr_722 = local.end_of_code_722 ? null : {
    code = substr(var.code, local.iter_721.code_ptr, 1)
    input = substr(var.code, local.iter_721.code_ptr, 1) == "," ? substr(local.iter_721.input, 0, 1) : null
  }

  iter_722 = local.end_of_code_722 ? local.iter_721 : {
    input = (local.curr_722.code == ","
      ? substr(local.iter_721.input, 1, -1)
      : local.iter_721.input)

    output = (local.curr_722.code == "."
      ? "${local.iter_721.output}${jsondecode(format("\"\\u%04x\"", local.iter_721.tape[local.iter_721.tape_ptr]))}"
      : local.iter_721.output)
    
    tape = (
      local.curr_722.code == "+"
        ? [for i, b in local.iter_721.tape : (i == local.iter_721.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_722.code == "-"
        ? [for i, b in local.iter_721.tape : (i == local.iter_721.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_722.code == ","
        ? [for i, b in local.iter_721.tape : (i == local.iter_721.tape_ptr ? local.ascii_lookup[local.curr_722.input] : b)]
        : local.iter_721.tape)

    tape_ptr = (
      local.curr_722.code == "<"
        ? local.iter_721.tape_ptr == 0 ? length(local.iter_721.tape) - 1 : local.iter_721.tape_ptr - 1 :
      local.curr_722.code == ">"
        ? local.iter_721.tape_ptr == length(local.iter_721.tape) - 1 ? 0 : local.iter_721.tape_ptr + 1
        : local.iter_721.tape_ptr)

    code_ptr = 1 + (
      local.curr_722.code == "["
        ? local.iter_721.tape[local.iter_721.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_721.code_ptr)] : local.iter_721.code_ptr :
      local.curr_722.code == "]"
        ? local.iter_721.tape[local.iter_721.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_721.code_ptr)] : local.iter_721.code_ptr
        : local.iter_721.code_ptr)

    steps_taken = 1 + local.iter_721.steps_taken
  }
}

locals {
  end_of_code_723 = try(local.iter_722.code_ptr >= length(var.code), true)

  curr_723 = local.end_of_code_723 ? null : {
    code = substr(var.code, local.iter_722.code_ptr, 1)
    input = substr(var.code, local.iter_722.code_ptr, 1) == "," ? substr(local.iter_722.input, 0, 1) : null
  }

  iter_723 = local.end_of_code_723 ? local.iter_722 : {
    input = (local.curr_723.code == ","
      ? substr(local.iter_722.input, 1, -1)
      : local.iter_722.input)

    output = (local.curr_723.code == "."
      ? "${local.iter_722.output}${jsondecode(format("\"\\u%04x\"", local.iter_722.tape[local.iter_722.tape_ptr]))}"
      : local.iter_722.output)
    
    tape = (
      local.curr_723.code == "+"
        ? [for i, b in local.iter_722.tape : (i == local.iter_722.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_723.code == "-"
        ? [for i, b in local.iter_722.tape : (i == local.iter_722.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_723.code == ","
        ? [for i, b in local.iter_722.tape : (i == local.iter_722.tape_ptr ? local.ascii_lookup[local.curr_723.input] : b)]
        : local.iter_722.tape)

    tape_ptr = (
      local.curr_723.code == "<"
        ? local.iter_722.tape_ptr == 0 ? length(local.iter_722.tape) - 1 : local.iter_722.tape_ptr - 1 :
      local.curr_723.code == ">"
        ? local.iter_722.tape_ptr == length(local.iter_722.tape) - 1 ? 0 : local.iter_722.tape_ptr + 1
        : local.iter_722.tape_ptr)

    code_ptr = 1 + (
      local.curr_723.code == "["
        ? local.iter_722.tape[local.iter_722.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_722.code_ptr)] : local.iter_722.code_ptr :
      local.curr_723.code == "]"
        ? local.iter_722.tape[local.iter_722.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_722.code_ptr)] : local.iter_722.code_ptr
        : local.iter_722.code_ptr)

    steps_taken = 1 + local.iter_722.steps_taken
  }
}

locals {
  end_of_code_724 = try(local.iter_723.code_ptr >= length(var.code), true)

  curr_724 = local.end_of_code_724 ? null : {
    code = substr(var.code, local.iter_723.code_ptr, 1)
    input = substr(var.code, local.iter_723.code_ptr, 1) == "," ? substr(local.iter_723.input, 0, 1) : null
  }

  iter_724 = local.end_of_code_724 ? local.iter_723 : {
    input = (local.curr_724.code == ","
      ? substr(local.iter_723.input, 1, -1)
      : local.iter_723.input)

    output = (local.curr_724.code == "."
      ? "${local.iter_723.output}${jsondecode(format("\"\\u%04x\"", local.iter_723.tape[local.iter_723.tape_ptr]))}"
      : local.iter_723.output)
    
    tape = (
      local.curr_724.code == "+"
        ? [for i, b in local.iter_723.tape : (i == local.iter_723.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_724.code == "-"
        ? [for i, b in local.iter_723.tape : (i == local.iter_723.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_724.code == ","
        ? [for i, b in local.iter_723.tape : (i == local.iter_723.tape_ptr ? local.ascii_lookup[local.curr_724.input] : b)]
        : local.iter_723.tape)

    tape_ptr = (
      local.curr_724.code == "<"
        ? local.iter_723.tape_ptr == 0 ? length(local.iter_723.tape) - 1 : local.iter_723.tape_ptr - 1 :
      local.curr_724.code == ">"
        ? local.iter_723.tape_ptr == length(local.iter_723.tape) - 1 ? 0 : local.iter_723.tape_ptr + 1
        : local.iter_723.tape_ptr)

    code_ptr = 1 + (
      local.curr_724.code == "["
        ? local.iter_723.tape[local.iter_723.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_723.code_ptr)] : local.iter_723.code_ptr :
      local.curr_724.code == "]"
        ? local.iter_723.tape[local.iter_723.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_723.code_ptr)] : local.iter_723.code_ptr
        : local.iter_723.code_ptr)

    steps_taken = 1 + local.iter_723.steps_taken
  }
}

locals {
  end_of_code_725 = try(local.iter_724.code_ptr >= length(var.code), true)

  curr_725 = local.end_of_code_725 ? null : {
    code = substr(var.code, local.iter_724.code_ptr, 1)
    input = substr(var.code, local.iter_724.code_ptr, 1) == "," ? substr(local.iter_724.input, 0, 1) : null
  }

  iter_725 = local.end_of_code_725 ? local.iter_724 : {
    input = (local.curr_725.code == ","
      ? substr(local.iter_724.input, 1, -1)
      : local.iter_724.input)

    output = (local.curr_725.code == "."
      ? "${local.iter_724.output}${jsondecode(format("\"\\u%04x\"", local.iter_724.tape[local.iter_724.tape_ptr]))}"
      : local.iter_724.output)
    
    tape = (
      local.curr_725.code == "+"
        ? [for i, b in local.iter_724.tape : (i == local.iter_724.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_725.code == "-"
        ? [for i, b in local.iter_724.tape : (i == local.iter_724.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_725.code == ","
        ? [for i, b in local.iter_724.tape : (i == local.iter_724.tape_ptr ? local.ascii_lookup[local.curr_725.input] : b)]
        : local.iter_724.tape)

    tape_ptr = (
      local.curr_725.code == "<"
        ? local.iter_724.tape_ptr == 0 ? length(local.iter_724.tape) - 1 : local.iter_724.tape_ptr - 1 :
      local.curr_725.code == ">"
        ? local.iter_724.tape_ptr == length(local.iter_724.tape) - 1 ? 0 : local.iter_724.tape_ptr + 1
        : local.iter_724.tape_ptr)

    code_ptr = 1 + (
      local.curr_725.code == "["
        ? local.iter_724.tape[local.iter_724.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_724.code_ptr)] : local.iter_724.code_ptr :
      local.curr_725.code == "]"
        ? local.iter_724.tape[local.iter_724.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_724.code_ptr)] : local.iter_724.code_ptr
        : local.iter_724.code_ptr)

    steps_taken = 1 + local.iter_724.steps_taken
  }
}

locals {
  end_of_code_726 = try(local.iter_725.code_ptr >= length(var.code), true)

  curr_726 = local.end_of_code_726 ? null : {
    code = substr(var.code, local.iter_725.code_ptr, 1)
    input = substr(var.code, local.iter_725.code_ptr, 1) == "," ? substr(local.iter_725.input, 0, 1) : null
  }

  iter_726 = local.end_of_code_726 ? local.iter_725 : {
    input = (local.curr_726.code == ","
      ? substr(local.iter_725.input, 1, -1)
      : local.iter_725.input)

    output = (local.curr_726.code == "."
      ? "${local.iter_725.output}${jsondecode(format("\"\\u%04x\"", local.iter_725.tape[local.iter_725.tape_ptr]))}"
      : local.iter_725.output)
    
    tape = (
      local.curr_726.code == "+"
        ? [for i, b in local.iter_725.tape : (i == local.iter_725.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_726.code == "-"
        ? [for i, b in local.iter_725.tape : (i == local.iter_725.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_726.code == ","
        ? [for i, b in local.iter_725.tape : (i == local.iter_725.tape_ptr ? local.ascii_lookup[local.curr_726.input] : b)]
        : local.iter_725.tape)

    tape_ptr = (
      local.curr_726.code == "<"
        ? local.iter_725.tape_ptr == 0 ? length(local.iter_725.tape) - 1 : local.iter_725.tape_ptr - 1 :
      local.curr_726.code == ">"
        ? local.iter_725.tape_ptr == length(local.iter_725.tape) - 1 ? 0 : local.iter_725.tape_ptr + 1
        : local.iter_725.tape_ptr)

    code_ptr = 1 + (
      local.curr_726.code == "["
        ? local.iter_725.tape[local.iter_725.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_725.code_ptr)] : local.iter_725.code_ptr :
      local.curr_726.code == "]"
        ? local.iter_725.tape[local.iter_725.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_725.code_ptr)] : local.iter_725.code_ptr
        : local.iter_725.code_ptr)

    steps_taken = 1 + local.iter_725.steps_taken
  }
}

locals {
  end_of_code_727 = try(local.iter_726.code_ptr >= length(var.code), true)

  curr_727 = local.end_of_code_727 ? null : {
    code = substr(var.code, local.iter_726.code_ptr, 1)
    input = substr(var.code, local.iter_726.code_ptr, 1) == "," ? substr(local.iter_726.input, 0, 1) : null
  }

  iter_727 = local.end_of_code_727 ? local.iter_726 : {
    input = (local.curr_727.code == ","
      ? substr(local.iter_726.input, 1, -1)
      : local.iter_726.input)

    output = (local.curr_727.code == "."
      ? "${local.iter_726.output}${jsondecode(format("\"\\u%04x\"", local.iter_726.tape[local.iter_726.tape_ptr]))}"
      : local.iter_726.output)
    
    tape = (
      local.curr_727.code == "+"
        ? [for i, b in local.iter_726.tape : (i == local.iter_726.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_727.code == "-"
        ? [for i, b in local.iter_726.tape : (i == local.iter_726.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_727.code == ","
        ? [for i, b in local.iter_726.tape : (i == local.iter_726.tape_ptr ? local.ascii_lookup[local.curr_727.input] : b)]
        : local.iter_726.tape)

    tape_ptr = (
      local.curr_727.code == "<"
        ? local.iter_726.tape_ptr == 0 ? length(local.iter_726.tape) - 1 : local.iter_726.tape_ptr - 1 :
      local.curr_727.code == ">"
        ? local.iter_726.tape_ptr == length(local.iter_726.tape) - 1 ? 0 : local.iter_726.tape_ptr + 1
        : local.iter_726.tape_ptr)

    code_ptr = 1 + (
      local.curr_727.code == "["
        ? local.iter_726.tape[local.iter_726.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_726.code_ptr)] : local.iter_726.code_ptr :
      local.curr_727.code == "]"
        ? local.iter_726.tape[local.iter_726.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_726.code_ptr)] : local.iter_726.code_ptr
        : local.iter_726.code_ptr)

    steps_taken = 1 + local.iter_726.steps_taken
  }
}

locals {
  end_of_code_728 = try(local.iter_727.code_ptr >= length(var.code), true)

  curr_728 = local.end_of_code_728 ? null : {
    code = substr(var.code, local.iter_727.code_ptr, 1)
    input = substr(var.code, local.iter_727.code_ptr, 1) == "," ? substr(local.iter_727.input, 0, 1) : null
  }

  iter_728 = local.end_of_code_728 ? local.iter_727 : {
    input = (local.curr_728.code == ","
      ? substr(local.iter_727.input, 1, -1)
      : local.iter_727.input)

    output = (local.curr_728.code == "."
      ? "${local.iter_727.output}${jsondecode(format("\"\\u%04x\"", local.iter_727.tape[local.iter_727.tape_ptr]))}"
      : local.iter_727.output)
    
    tape = (
      local.curr_728.code == "+"
        ? [for i, b in local.iter_727.tape : (i == local.iter_727.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_728.code == "-"
        ? [for i, b in local.iter_727.tape : (i == local.iter_727.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_728.code == ","
        ? [for i, b in local.iter_727.tape : (i == local.iter_727.tape_ptr ? local.ascii_lookup[local.curr_728.input] : b)]
        : local.iter_727.tape)

    tape_ptr = (
      local.curr_728.code == "<"
        ? local.iter_727.tape_ptr == 0 ? length(local.iter_727.tape) - 1 : local.iter_727.tape_ptr - 1 :
      local.curr_728.code == ">"
        ? local.iter_727.tape_ptr == length(local.iter_727.tape) - 1 ? 0 : local.iter_727.tape_ptr + 1
        : local.iter_727.tape_ptr)

    code_ptr = 1 + (
      local.curr_728.code == "["
        ? local.iter_727.tape[local.iter_727.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_727.code_ptr)] : local.iter_727.code_ptr :
      local.curr_728.code == "]"
        ? local.iter_727.tape[local.iter_727.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_727.code_ptr)] : local.iter_727.code_ptr
        : local.iter_727.code_ptr)

    steps_taken = 1 + local.iter_727.steps_taken
  }
}

locals {
  end_of_code_729 = try(local.iter_728.code_ptr >= length(var.code), true)

  curr_729 = local.end_of_code_729 ? null : {
    code = substr(var.code, local.iter_728.code_ptr, 1)
    input = substr(var.code, local.iter_728.code_ptr, 1) == "," ? substr(local.iter_728.input, 0, 1) : null
  }

  iter_729 = local.end_of_code_729 ? local.iter_728 : {
    input = (local.curr_729.code == ","
      ? substr(local.iter_728.input, 1, -1)
      : local.iter_728.input)

    output = (local.curr_729.code == "."
      ? "${local.iter_728.output}${jsondecode(format("\"\\u%04x\"", local.iter_728.tape[local.iter_728.tape_ptr]))}"
      : local.iter_728.output)
    
    tape = (
      local.curr_729.code == "+"
        ? [for i, b in local.iter_728.tape : (i == local.iter_728.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_729.code == "-"
        ? [for i, b in local.iter_728.tape : (i == local.iter_728.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_729.code == ","
        ? [for i, b in local.iter_728.tape : (i == local.iter_728.tape_ptr ? local.ascii_lookup[local.curr_729.input] : b)]
        : local.iter_728.tape)

    tape_ptr = (
      local.curr_729.code == "<"
        ? local.iter_728.tape_ptr == 0 ? length(local.iter_728.tape) - 1 : local.iter_728.tape_ptr - 1 :
      local.curr_729.code == ">"
        ? local.iter_728.tape_ptr == length(local.iter_728.tape) - 1 ? 0 : local.iter_728.tape_ptr + 1
        : local.iter_728.tape_ptr)

    code_ptr = 1 + (
      local.curr_729.code == "["
        ? local.iter_728.tape[local.iter_728.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_728.code_ptr)] : local.iter_728.code_ptr :
      local.curr_729.code == "]"
        ? local.iter_728.tape[local.iter_728.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_728.code_ptr)] : local.iter_728.code_ptr
        : local.iter_728.code_ptr)

    steps_taken = 1 + local.iter_728.steps_taken
  }
}

locals {
  end_of_code_730 = try(local.iter_729.code_ptr >= length(var.code), true)

  curr_730 = local.end_of_code_730 ? null : {
    code = substr(var.code, local.iter_729.code_ptr, 1)
    input = substr(var.code, local.iter_729.code_ptr, 1) == "," ? substr(local.iter_729.input, 0, 1) : null
  }

  iter_730 = local.end_of_code_730 ? local.iter_729 : {
    input = (local.curr_730.code == ","
      ? substr(local.iter_729.input, 1, -1)
      : local.iter_729.input)

    output = (local.curr_730.code == "."
      ? "${local.iter_729.output}${jsondecode(format("\"\\u%04x\"", local.iter_729.tape[local.iter_729.tape_ptr]))}"
      : local.iter_729.output)
    
    tape = (
      local.curr_730.code == "+"
        ? [for i, b in local.iter_729.tape : (i == local.iter_729.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_730.code == "-"
        ? [for i, b in local.iter_729.tape : (i == local.iter_729.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_730.code == ","
        ? [for i, b in local.iter_729.tape : (i == local.iter_729.tape_ptr ? local.ascii_lookup[local.curr_730.input] : b)]
        : local.iter_729.tape)

    tape_ptr = (
      local.curr_730.code == "<"
        ? local.iter_729.tape_ptr == 0 ? length(local.iter_729.tape) - 1 : local.iter_729.tape_ptr - 1 :
      local.curr_730.code == ">"
        ? local.iter_729.tape_ptr == length(local.iter_729.tape) - 1 ? 0 : local.iter_729.tape_ptr + 1
        : local.iter_729.tape_ptr)

    code_ptr = 1 + (
      local.curr_730.code == "["
        ? local.iter_729.tape[local.iter_729.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_729.code_ptr)] : local.iter_729.code_ptr :
      local.curr_730.code == "]"
        ? local.iter_729.tape[local.iter_729.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_729.code_ptr)] : local.iter_729.code_ptr
        : local.iter_729.code_ptr)

    steps_taken = 1 + local.iter_729.steps_taken
  }
}

locals {
  end_of_code_731 = try(local.iter_730.code_ptr >= length(var.code), true)

  curr_731 = local.end_of_code_731 ? null : {
    code = substr(var.code, local.iter_730.code_ptr, 1)
    input = substr(var.code, local.iter_730.code_ptr, 1) == "," ? substr(local.iter_730.input, 0, 1) : null
  }

  iter_731 = local.end_of_code_731 ? local.iter_730 : {
    input = (local.curr_731.code == ","
      ? substr(local.iter_730.input, 1, -1)
      : local.iter_730.input)

    output = (local.curr_731.code == "."
      ? "${local.iter_730.output}${jsondecode(format("\"\\u%04x\"", local.iter_730.tape[local.iter_730.tape_ptr]))}"
      : local.iter_730.output)
    
    tape = (
      local.curr_731.code == "+"
        ? [for i, b in local.iter_730.tape : (i == local.iter_730.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_731.code == "-"
        ? [for i, b in local.iter_730.tape : (i == local.iter_730.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_731.code == ","
        ? [for i, b in local.iter_730.tape : (i == local.iter_730.tape_ptr ? local.ascii_lookup[local.curr_731.input] : b)]
        : local.iter_730.tape)

    tape_ptr = (
      local.curr_731.code == "<"
        ? local.iter_730.tape_ptr == 0 ? length(local.iter_730.tape) - 1 : local.iter_730.tape_ptr - 1 :
      local.curr_731.code == ">"
        ? local.iter_730.tape_ptr == length(local.iter_730.tape) - 1 ? 0 : local.iter_730.tape_ptr + 1
        : local.iter_730.tape_ptr)

    code_ptr = 1 + (
      local.curr_731.code == "["
        ? local.iter_730.tape[local.iter_730.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_730.code_ptr)] : local.iter_730.code_ptr :
      local.curr_731.code == "]"
        ? local.iter_730.tape[local.iter_730.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_730.code_ptr)] : local.iter_730.code_ptr
        : local.iter_730.code_ptr)

    steps_taken = 1 + local.iter_730.steps_taken
  }
}

locals {
  end_of_code_732 = try(local.iter_731.code_ptr >= length(var.code), true)

  curr_732 = local.end_of_code_732 ? null : {
    code = substr(var.code, local.iter_731.code_ptr, 1)
    input = substr(var.code, local.iter_731.code_ptr, 1) == "," ? substr(local.iter_731.input, 0, 1) : null
  }

  iter_732 = local.end_of_code_732 ? local.iter_731 : {
    input = (local.curr_732.code == ","
      ? substr(local.iter_731.input, 1, -1)
      : local.iter_731.input)

    output = (local.curr_732.code == "."
      ? "${local.iter_731.output}${jsondecode(format("\"\\u%04x\"", local.iter_731.tape[local.iter_731.tape_ptr]))}"
      : local.iter_731.output)
    
    tape = (
      local.curr_732.code == "+"
        ? [for i, b in local.iter_731.tape : (i == local.iter_731.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_732.code == "-"
        ? [for i, b in local.iter_731.tape : (i == local.iter_731.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_732.code == ","
        ? [for i, b in local.iter_731.tape : (i == local.iter_731.tape_ptr ? local.ascii_lookup[local.curr_732.input] : b)]
        : local.iter_731.tape)

    tape_ptr = (
      local.curr_732.code == "<"
        ? local.iter_731.tape_ptr == 0 ? length(local.iter_731.tape) - 1 : local.iter_731.tape_ptr - 1 :
      local.curr_732.code == ">"
        ? local.iter_731.tape_ptr == length(local.iter_731.tape) - 1 ? 0 : local.iter_731.tape_ptr + 1
        : local.iter_731.tape_ptr)

    code_ptr = 1 + (
      local.curr_732.code == "["
        ? local.iter_731.tape[local.iter_731.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_731.code_ptr)] : local.iter_731.code_ptr :
      local.curr_732.code == "]"
        ? local.iter_731.tape[local.iter_731.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_731.code_ptr)] : local.iter_731.code_ptr
        : local.iter_731.code_ptr)

    steps_taken = 1 + local.iter_731.steps_taken
  }
}

locals {
  end_of_code_733 = try(local.iter_732.code_ptr >= length(var.code), true)

  curr_733 = local.end_of_code_733 ? null : {
    code = substr(var.code, local.iter_732.code_ptr, 1)
    input = substr(var.code, local.iter_732.code_ptr, 1) == "," ? substr(local.iter_732.input, 0, 1) : null
  }

  iter_733 = local.end_of_code_733 ? local.iter_732 : {
    input = (local.curr_733.code == ","
      ? substr(local.iter_732.input, 1, -1)
      : local.iter_732.input)

    output = (local.curr_733.code == "."
      ? "${local.iter_732.output}${jsondecode(format("\"\\u%04x\"", local.iter_732.tape[local.iter_732.tape_ptr]))}"
      : local.iter_732.output)
    
    tape = (
      local.curr_733.code == "+"
        ? [for i, b in local.iter_732.tape : (i == local.iter_732.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_733.code == "-"
        ? [for i, b in local.iter_732.tape : (i == local.iter_732.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_733.code == ","
        ? [for i, b in local.iter_732.tape : (i == local.iter_732.tape_ptr ? local.ascii_lookup[local.curr_733.input] : b)]
        : local.iter_732.tape)

    tape_ptr = (
      local.curr_733.code == "<"
        ? local.iter_732.tape_ptr == 0 ? length(local.iter_732.tape) - 1 : local.iter_732.tape_ptr - 1 :
      local.curr_733.code == ">"
        ? local.iter_732.tape_ptr == length(local.iter_732.tape) - 1 ? 0 : local.iter_732.tape_ptr + 1
        : local.iter_732.tape_ptr)

    code_ptr = 1 + (
      local.curr_733.code == "["
        ? local.iter_732.tape[local.iter_732.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_732.code_ptr)] : local.iter_732.code_ptr :
      local.curr_733.code == "]"
        ? local.iter_732.tape[local.iter_732.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_732.code_ptr)] : local.iter_732.code_ptr
        : local.iter_732.code_ptr)

    steps_taken = 1 + local.iter_732.steps_taken
  }
}

locals {
  end_of_code_734 = try(local.iter_733.code_ptr >= length(var.code), true)

  curr_734 = local.end_of_code_734 ? null : {
    code = substr(var.code, local.iter_733.code_ptr, 1)
    input = substr(var.code, local.iter_733.code_ptr, 1) == "," ? substr(local.iter_733.input, 0, 1) : null
  }

  iter_734 = local.end_of_code_734 ? local.iter_733 : {
    input = (local.curr_734.code == ","
      ? substr(local.iter_733.input, 1, -1)
      : local.iter_733.input)

    output = (local.curr_734.code == "."
      ? "${local.iter_733.output}${jsondecode(format("\"\\u%04x\"", local.iter_733.tape[local.iter_733.tape_ptr]))}"
      : local.iter_733.output)
    
    tape = (
      local.curr_734.code == "+"
        ? [for i, b in local.iter_733.tape : (i == local.iter_733.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_734.code == "-"
        ? [for i, b in local.iter_733.tape : (i == local.iter_733.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_734.code == ","
        ? [for i, b in local.iter_733.tape : (i == local.iter_733.tape_ptr ? local.ascii_lookup[local.curr_734.input] : b)]
        : local.iter_733.tape)

    tape_ptr = (
      local.curr_734.code == "<"
        ? local.iter_733.tape_ptr == 0 ? length(local.iter_733.tape) - 1 : local.iter_733.tape_ptr - 1 :
      local.curr_734.code == ">"
        ? local.iter_733.tape_ptr == length(local.iter_733.tape) - 1 ? 0 : local.iter_733.tape_ptr + 1
        : local.iter_733.tape_ptr)

    code_ptr = 1 + (
      local.curr_734.code == "["
        ? local.iter_733.tape[local.iter_733.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_733.code_ptr)] : local.iter_733.code_ptr :
      local.curr_734.code == "]"
        ? local.iter_733.tape[local.iter_733.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_733.code_ptr)] : local.iter_733.code_ptr
        : local.iter_733.code_ptr)

    steps_taken = 1 + local.iter_733.steps_taken
  }
}

locals {
  end_of_code_735 = try(local.iter_734.code_ptr >= length(var.code), true)

  curr_735 = local.end_of_code_735 ? null : {
    code = substr(var.code, local.iter_734.code_ptr, 1)
    input = substr(var.code, local.iter_734.code_ptr, 1) == "," ? substr(local.iter_734.input, 0, 1) : null
  }

  iter_735 = local.end_of_code_735 ? local.iter_734 : {
    input = (local.curr_735.code == ","
      ? substr(local.iter_734.input, 1, -1)
      : local.iter_734.input)

    output = (local.curr_735.code == "."
      ? "${local.iter_734.output}${jsondecode(format("\"\\u%04x\"", local.iter_734.tape[local.iter_734.tape_ptr]))}"
      : local.iter_734.output)
    
    tape = (
      local.curr_735.code == "+"
        ? [for i, b in local.iter_734.tape : (i == local.iter_734.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_735.code == "-"
        ? [for i, b in local.iter_734.tape : (i == local.iter_734.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_735.code == ","
        ? [for i, b in local.iter_734.tape : (i == local.iter_734.tape_ptr ? local.ascii_lookup[local.curr_735.input] : b)]
        : local.iter_734.tape)

    tape_ptr = (
      local.curr_735.code == "<"
        ? local.iter_734.tape_ptr == 0 ? length(local.iter_734.tape) - 1 : local.iter_734.tape_ptr - 1 :
      local.curr_735.code == ">"
        ? local.iter_734.tape_ptr == length(local.iter_734.tape) - 1 ? 0 : local.iter_734.tape_ptr + 1
        : local.iter_734.tape_ptr)

    code_ptr = 1 + (
      local.curr_735.code == "["
        ? local.iter_734.tape[local.iter_734.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_734.code_ptr)] : local.iter_734.code_ptr :
      local.curr_735.code == "]"
        ? local.iter_734.tape[local.iter_734.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_734.code_ptr)] : local.iter_734.code_ptr
        : local.iter_734.code_ptr)

    steps_taken = 1 + local.iter_734.steps_taken
  }
}

locals {
  end_of_code_736 = try(local.iter_735.code_ptr >= length(var.code), true)

  curr_736 = local.end_of_code_736 ? null : {
    code = substr(var.code, local.iter_735.code_ptr, 1)
    input = substr(var.code, local.iter_735.code_ptr, 1) == "," ? substr(local.iter_735.input, 0, 1) : null
  }

  iter_736 = local.end_of_code_736 ? local.iter_735 : {
    input = (local.curr_736.code == ","
      ? substr(local.iter_735.input, 1, -1)
      : local.iter_735.input)

    output = (local.curr_736.code == "."
      ? "${local.iter_735.output}${jsondecode(format("\"\\u%04x\"", local.iter_735.tape[local.iter_735.tape_ptr]))}"
      : local.iter_735.output)
    
    tape = (
      local.curr_736.code == "+"
        ? [for i, b in local.iter_735.tape : (i == local.iter_735.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_736.code == "-"
        ? [for i, b in local.iter_735.tape : (i == local.iter_735.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_736.code == ","
        ? [for i, b in local.iter_735.tape : (i == local.iter_735.tape_ptr ? local.ascii_lookup[local.curr_736.input] : b)]
        : local.iter_735.tape)

    tape_ptr = (
      local.curr_736.code == "<"
        ? local.iter_735.tape_ptr == 0 ? length(local.iter_735.tape) - 1 : local.iter_735.tape_ptr - 1 :
      local.curr_736.code == ">"
        ? local.iter_735.tape_ptr == length(local.iter_735.tape) - 1 ? 0 : local.iter_735.tape_ptr + 1
        : local.iter_735.tape_ptr)

    code_ptr = 1 + (
      local.curr_736.code == "["
        ? local.iter_735.tape[local.iter_735.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_735.code_ptr)] : local.iter_735.code_ptr :
      local.curr_736.code == "]"
        ? local.iter_735.tape[local.iter_735.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_735.code_ptr)] : local.iter_735.code_ptr
        : local.iter_735.code_ptr)

    steps_taken = 1 + local.iter_735.steps_taken
  }
}

locals {
  end_of_code_737 = try(local.iter_736.code_ptr >= length(var.code), true)

  curr_737 = local.end_of_code_737 ? null : {
    code = substr(var.code, local.iter_736.code_ptr, 1)
    input = substr(var.code, local.iter_736.code_ptr, 1) == "," ? substr(local.iter_736.input, 0, 1) : null
  }

  iter_737 = local.end_of_code_737 ? local.iter_736 : {
    input = (local.curr_737.code == ","
      ? substr(local.iter_736.input, 1, -1)
      : local.iter_736.input)

    output = (local.curr_737.code == "."
      ? "${local.iter_736.output}${jsondecode(format("\"\\u%04x\"", local.iter_736.tape[local.iter_736.tape_ptr]))}"
      : local.iter_736.output)
    
    tape = (
      local.curr_737.code == "+"
        ? [for i, b in local.iter_736.tape : (i == local.iter_736.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_737.code == "-"
        ? [for i, b in local.iter_736.tape : (i == local.iter_736.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_737.code == ","
        ? [for i, b in local.iter_736.tape : (i == local.iter_736.tape_ptr ? local.ascii_lookup[local.curr_737.input] : b)]
        : local.iter_736.tape)

    tape_ptr = (
      local.curr_737.code == "<"
        ? local.iter_736.tape_ptr == 0 ? length(local.iter_736.tape) - 1 : local.iter_736.tape_ptr - 1 :
      local.curr_737.code == ">"
        ? local.iter_736.tape_ptr == length(local.iter_736.tape) - 1 ? 0 : local.iter_736.tape_ptr + 1
        : local.iter_736.tape_ptr)

    code_ptr = 1 + (
      local.curr_737.code == "["
        ? local.iter_736.tape[local.iter_736.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_736.code_ptr)] : local.iter_736.code_ptr :
      local.curr_737.code == "]"
        ? local.iter_736.tape[local.iter_736.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_736.code_ptr)] : local.iter_736.code_ptr
        : local.iter_736.code_ptr)

    steps_taken = 1 + local.iter_736.steps_taken
  }
}

locals {
  end_of_code_738 = try(local.iter_737.code_ptr >= length(var.code), true)

  curr_738 = local.end_of_code_738 ? null : {
    code = substr(var.code, local.iter_737.code_ptr, 1)
    input = substr(var.code, local.iter_737.code_ptr, 1) == "," ? substr(local.iter_737.input, 0, 1) : null
  }

  iter_738 = local.end_of_code_738 ? local.iter_737 : {
    input = (local.curr_738.code == ","
      ? substr(local.iter_737.input, 1, -1)
      : local.iter_737.input)

    output = (local.curr_738.code == "."
      ? "${local.iter_737.output}${jsondecode(format("\"\\u%04x\"", local.iter_737.tape[local.iter_737.tape_ptr]))}"
      : local.iter_737.output)
    
    tape = (
      local.curr_738.code == "+"
        ? [for i, b in local.iter_737.tape : (i == local.iter_737.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_738.code == "-"
        ? [for i, b in local.iter_737.tape : (i == local.iter_737.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_738.code == ","
        ? [for i, b in local.iter_737.tape : (i == local.iter_737.tape_ptr ? local.ascii_lookup[local.curr_738.input] : b)]
        : local.iter_737.tape)

    tape_ptr = (
      local.curr_738.code == "<"
        ? local.iter_737.tape_ptr == 0 ? length(local.iter_737.tape) - 1 : local.iter_737.tape_ptr - 1 :
      local.curr_738.code == ">"
        ? local.iter_737.tape_ptr == length(local.iter_737.tape) - 1 ? 0 : local.iter_737.tape_ptr + 1
        : local.iter_737.tape_ptr)

    code_ptr = 1 + (
      local.curr_738.code == "["
        ? local.iter_737.tape[local.iter_737.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_737.code_ptr)] : local.iter_737.code_ptr :
      local.curr_738.code == "]"
        ? local.iter_737.tape[local.iter_737.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_737.code_ptr)] : local.iter_737.code_ptr
        : local.iter_737.code_ptr)

    steps_taken = 1 + local.iter_737.steps_taken
  }
}

locals {
  end_of_code_739 = try(local.iter_738.code_ptr >= length(var.code), true)

  curr_739 = local.end_of_code_739 ? null : {
    code = substr(var.code, local.iter_738.code_ptr, 1)
    input = substr(var.code, local.iter_738.code_ptr, 1) == "," ? substr(local.iter_738.input, 0, 1) : null
  }

  iter_739 = local.end_of_code_739 ? local.iter_738 : {
    input = (local.curr_739.code == ","
      ? substr(local.iter_738.input, 1, -1)
      : local.iter_738.input)

    output = (local.curr_739.code == "."
      ? "${local.iter_738.output}${jsondecode(format("\"\\u%04x\"", local.iter_738.tape[local.iter_738.tape_ptr]))}"
      : local.iter_738.output)
    
    tape = (
      local.curr_739.code == "+"
        ? [for i, b in local.iter_738.tape : (i == local.iter_738.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_739.code == "-"
        ? [for i, b in local.iter_738.tape : (i == local.iter_738.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_739.code == ","
        ? [for i, b in local.iter_738.tape : (i == local.iter_738.tape_ptr ? local.ascii_lookup[local.curr_739.input] : b)]
        : local.iter_738.tape)

    tape_ptr = (
      local.curr_739.code == "<"
        ? local.iter_738.tape_ptr == 0 ? length(local.iter_738.tape) - 1 : local.iter_738.tape_ptr - 1 :
      local.curr_739.code == ">"
        ? local.iter_738.tape_ptr == length(local.iter_738.tape) - 1 ? 0 : local.iter_738.tape_ptr + 1
        : local.iter_738.tape_ptr)

    code_ptr = 1 + (
      local.curr_739.code == "["
        ? local.iter_738.tape[local.iter_738.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_738.code_ptr)] : local.iter_738.code_ptr :
      local.curr_739.code == "]"
        ? local.iter_738.tape[local.iter_738.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_738.code_ptr)] : local.iter_738.code_ptr
        : local.iter_738.code_ptr)

    steps_taken = 1 + local.iter_738.steps_taken
  }
}

locals {
  end_of_code_740 = try(local.iter_739.code_ptr >= length(var.code), true)

  curr_740 = local.end_of_code_740 ? null : {
    code = substr(var.code, local.iter_739.code_ptr, 1)
    input = substr(var.code, local.iter_739.code_ptr, 1) == "," ? substr(local.iter_739.input, 0, 1) : null
  }

  iter_740 = local.end_of_code_740 ? local.iter_739 : {
    input = (local.curr_740.code == ","
      ? substr(local.iter_739.input, 1, -1)
      : local.iter_739.input)

    output = (local.curr_740.code == "."
      ? "${local.iter_739.output}${jsondecode(format("\"\\u%04x\"", local.iter_739.tape[local.iter_739.tape_ptr]))}"
      : local.iter_739.output)
    
    tape = (
      local.curr_740.code == "+"
        ? [for i, b in local.iter_739.tape : (i == local.iter_739.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_740.code == "-"
        ? [for i, b in local.iter_739.tape : (i == local.iter_739.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_740.code == ","
        ? [for i, b in local.iter_739.tape : (i == local.iter_739.tape_ptr ? local.ascii_lookup[local.curr_740.input] : b)]
        : local.iter_739.tape)

    tape_ptr = (
      local.curr_740.code == "<"
        ? local.iter_739.tape_ptr == 0 ? length(local.iter_739.tape) - 1 : local.iter_739.tape_ptr - 1 :
      local.curr_740.code == ">"
        ? local.iter_739.tape_ptr == length(local.iter_739.tape) - 1 ? 0 : local.iter_739.tape_ptr + 1
        : local.iter_739.tape_ptr)

    code_ptr = 1 + (
      local.curr_740.code == "["
        ? local.iter_739.tape[local.iter_739.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_739.code_ptr)] : local.iter_739.code_ptr :
      local.curr_740.code == "]"
        ? local.iter_739.tape[local.iter_739.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_739.code_ptr)] : local.iter_739.code_ptr
        : local.iter_739.code_ptr)

    steps_taken = 1 + local.iter_739.steps_taken
  }
}

locals {
  end_of_code_741 = try(local.iter_740.code_ptr >= length(var.code), true)

  curr_741 = local.end_of_code_741 ? null : {
    code = substr(var.code, local.iter_740.code_ptr, 1)
    input = substr(var.code, local.iter_740.code_ptr, 1) == "," ? substr(local.iter_740.input, 0, 1) : null
  }

  iter_741 = local.end_of_code_741 ? local.iter_740 : {
    input = (local.curr_741.code == ","
      ? substr(local.iter_740.input, 1, -1)
      : local.iter_740.input)

    output = (local.curr_741.code == "."
      ? "${local.iter_740.output}${jsondecode(format("\"\\u%04x\"", local.iter_740.tape[local.iter_740.tape_ptr]))}"
      : local.iter_740.output)
    
    tape = (
      local.curr_741.code == "+"
        ? [for i, b in local.iter_740.tape : (i == local.iter_740.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_741.code == "-"
        ? [for i, b in local.iter_740.tape : (i == local.iter_740.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_741.code == ","
        ? [for i, b in local.iter_740.tape : (i == local.iter_740.tape_ptr ? local.ascii_lookup[local.curr_741.input] : b)]
        : local.iter_740.tape)

    tape_ptr = (
      local.curr_741.code == "<"
        ? local.iter_740.tape_ptr == 0 ? length(local.iter_740.tape) - 1 : local.iter_740.tape_ptr - 1 :
      local.curr_741.code == ">"
        ? local.iter_740.tape_ptr == length(local.iter_740.tape) - 1 ? 0 : local.iter_740.tape_ptr + 1
        : local.iter_740.tape_ptr)

    code_ptr = 1 + (
      local.curr_741.code == "["
        ? local.iter_740.tape[local.iter_740.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_740.code_ptr)] : local.iter_740.code_ptr :
      local.curr_741.code == "]"
        ? local.iter_740.tape[local.iter_740.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_740.code_ptr)] : local.iter_740.code_ptr
        : local.iter_740.code_ptr)

    steps_taken = 1 + local.iter_740.steps_taken
  }
}

locals {
  end_of_code_742 = try(local.iter_741.code_ptr >= length(var.code), true)

  curr_742 = local.end_of_code_742 ? null : {
    code = substr(var.code, local.iter_741.code_ptr, 1)
    input = substr(var.code, local.iter_741.code_ptr, 1) == "," ? substr(local.iter_741.input, 0, 1) : null
  }

  iter_742 = local.end_of_code_742 ? local.iter_741 : {
    input = (local.curr_742.code == ","
      ? substr(local.iter_741.input, 1, -1)
      : local.iter_741.input)

    output = (local.curr_742.code == "."
      ? "${local.iter_741.output}${jsondecode(format("\"\\u%04x\"", local.iter_741.tape[local.iter_741.tape_ptr]))}"
      : local.iter_741.output)
    
    tape = (
      local.curr_742.code == "+"
        ? [for i, b in local.iter_741.tape : (i == local.iter_741.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_742.code == "-"
        ? [for i, b in local.iter_741.tape : (i == local.iter_741.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_742.code == ","
        ? [for i, b in local.iter_741.tape : (i == local.iter_741.tape_ptr ? local.ascii_lookup[local.curr_742.input] : b)]
        : local.iter_741.tape)

    tape_ptr = (
      local.curr_742.code == "<"
        ? local.iter_741.tape_ptr == 0 ? length(local.iter_741.tape) - 1 : local.iter_741.tape_ptr - 1 :
      local.curr_742.code == ">"
        ? local.iter_741.tape_ptr == length(local.iter_741.tape) - 1 ? 0 : local.iter_741.tape_ptr + 1
        : local.iter_741.tape_ptr)

    code_ptr = 1 + (
      local.curr_742.code == "["
        ? local.iter_741.tape[local.iter_741.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_741.code_ptr)] : local.iter_741.code_ptr :
      local.curr_742.code == "]"
        ? local.iter_741.tape[local.iter_741.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_741.code_ptr)] : local.iter_741.code_ptr
        : local.iter_741.code_ptr)

    steps_taken = 1 + local.iter_741.steps_taken
  }
}

locals {
  end_of_code_743 = try(local.iter_742.code_ptr >= length(var.code), true)

  curr_743 = local.end_of_code_743 ? null : {
    code = substr(var.code, local.iter_742.code_ptr, 1)
    input = substr(var.code, local.iter_742.code_ptr, 1) == "," ? substr(local.iter_742.input, 0, 1) : null
  }

  iter_743 = local.end_of_code_743 ? local.iter_742 : {
    input = (local.curr_743.code == ","
      ? substr(local.iter_742.input, 1, -1)
      : local.iter_742.input)

    output = (local.curr_743.code == "."
      ? "${local.iter_742.output}${jsondecode(format("\"\\u%04x\"", local.iter_742.tape[local.iter_742.tape_ptr]))}"
      : local.iter_742.output)
    
    tape = (
      local.curr_743.code == "+"
        ? [for i, b in local.iter_742.tape : (i == local.iter_742.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_743.code == "-"
        ? [for i, b in local.iter_742.tape : (i == local.iter_742.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_743.code == ","
        ? [for i, b in local.iter_742.tape : (i == local.iter_742.tape_ptr ? local.ascii_lookup[local.curr_743.input] : b)]
        : local.iter_742.tape)

    tape_ptr = (
      local.curr_743.code == "<"
        ? local.iter_742.tape_ptr == 0 ? length(local.iter_742.tape) - 1 : local.iter_742.tape_ptr - 1 :
      local.curr_743.code == ">"
        ? local.iter_742.tape_ptr == length(local.iter_742.tape) - 1 ? 0 : local.iter_742.tape_ptr + 1
        : local.iter_742.tape_ptr)

    code_ptr = 1 + (
      local.curr_743.code == "["
        ? local.iter_742.tape[local.iter_742.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_742.code_ptr)] : local.iter_742.code_ptr :
      local.curr_743.code == "]"
        ? local.iter_742.tape[local.iter_742.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_742.code_ptr)] : local.iter_742.code_ptr
        : local.iter_742.code_ptr)

    steps_taken = 1 + local.iter_742.steps_taken
  }
}

locals {
  end_of_code_744 = try(local.iter_743.code_ptr >= length(var.code), true)

  curr_744 = local.end_of_code_744 ? null : {
    code = substr(var.code, local.iter_743.code_ptr, 1)
    input = substr(var.code, local.iter_743.code_ptr, 1) == "," ? substr(local.iter_743.input, 0, 1) : null
  }

  iter_744 = local.end_of_code_744 ? local.iter_743 : {
    input = (local.curr_744.code == ","
      ? substr(local.iter_743.input, 1, -1)
      : local.iter_743.input)

    output = (local.curr_744.code == "."
      ? "${local.iter_743.output}${jsondecode(format("\"\\u%04x\"", local.iter_743.tape[local.iter_743.tape_ptr]))}"
      : local.iter_743.output)
    
    tape = (
      local.curr_744.code == "+"
        ? [for i, b in local.iter_743.tape : (i == local.iter_743.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_744.code == "-"
        ? [for i, b in local.iter_743.tape : (i == local.iter_743.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_744.code == ","
        ? [for i, b in local.iter_743.tape : (i == local.iter_743.tape_ptr ? local.ascii_lookup[local.curr_744.input] : b)]
        : local.iter_743.tape)

    tape_ptr = (
      local.curr_744.code == "<"
        ? local.iter_743.tape_ptr == 0 ? length(local.iter_743.tape) - 1 : local.iter_743.tape_ptr - 1 :
      local.curr_744.code == ">"
        ? local.iter_743.tape_ptr == length(local.iter_743.tape) - 1 ? 0 : local.iter_743.tape_ptr + 1
        : local.iter_743.tape_ptr)

    code_ptr = 1 + (
      local.curr_744.code == "["
        ? local.iter_743.tape[local.iter_743.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_743.code_ptr)] : local.iter_743.code_ptr :
      local.curr_744.code == "]"
        ? local.iter_743.tape[local.iter_743.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_743.code_ptr)] : local.iter_743.code_ptr
        : local.iter_743.code_ptr)

    steps_taken = 1 + local.iter_743.steps_taken
  }
}

locals {
  end_of_code_745 = try(local.iter_744.code_ptr >= length(var.code), true)

  curr_745 = local.end_of_code_745 ? null : {
    code = substr(var.code, local.iter_744.code_ptr, 1)
    input = substr(var.code, local.iter_744.code_ptr, 1) == "," ? substr(local.iter_744.input, 0, 1) : null
  }

  iter_745 = local.end_of_code_745 ? local.iter_744 : {
    input = (local.curr_745.code == ","
      ? substr(local.iter_744.input, 1, -1)
      : local.iter_744.input)

    output = (local.curr_745.code == "."
      ? "${local.iter_744.output}${jsondecode(format("\"\\u%04x\"", local.iter_744.tape[local.iter_744.tape_ptr]))}"
      : local.iter_744.output)
    
    tape = (
      local.curr_745.code == "+"
        ? [for i, b in local.iter_744.tape : (i == local.iter_744.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_745.code == "-"
        ? [for i, b in local.iter_744.tape : (i == local.iter_744.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_745.code == ","
        ? [for i, b in local.iter_744.tape : (i == local.iter_744.tape_ptr ? local.ascii_lookup[local.curr_745.input] : b)]
        : local.iter_744.tape)

    tape_ptr = (
      local.curr_745.code == "<"
        ? local.iter_744.tape_ptr == 0 ? length(local.iter_744.tape) - 1 : local.iter_744.tape_ptr - 1 :
      local.curr_745.code == ">"
        ? local.iter_744.tape_ptr == length(local.iter_744.tape) - 1 ? 0 : local.iter_744.tape_ptr + 1
        : local.iter_744.tape_ptr)

    code_ptr = 1 + (
      local.curr_745.code == "["
        ? local.iter_744.tape[local.iter_744.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_744.code_ptr)] : local.iter_744.code_ptr :
      local.curr_745.code == "]"
        ? local.iter_744.tape[local.iter_744.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_744.code_ptr)] : local.iter_744.code_ptr
        : local.iter_744.code_ptr)

    steps_taken = 1 + local.iter_744.steps_taken
  }
}

locals {
  end_of_code_746 = try(local.iter_745.code_ptr >= length(var.code), true)

  curr_746 = local.end_of_code_746 ? null : {
    code = substr(var.code, local.iter_745.code_ptr, 1)
    input = substr(var.code, local.iter_745.code_ptr, 1) == "," ? substr(local.iter_745.input, 0, 1) : null
  }

  iter_746 = local.end_of_code_746 ? local.iter_745 : {
    input = (local.curr_746.code == ","
      ? substr(local.iter_745.input, 1, -1)
      : local.iter_745.input)

    output = (local.curr_746.code == "."
      ? "${local.iter_745.output}${jsondecode(format("\"\\u%04x\"", local.iter_745.tape[local.iter_745.tape_ptr]))}"
      : local.iter_745.output)
    
    tape = (
      local.curr_746.code == "+"
        ? [for i, b in local.iter_745.tape : (i == local.iter_745.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_746.code == "-"
        ? [for i, b in local.iter_745.tape : (i == local.iter_745.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_746.code == ","
        ? [for i, b in local.iter_745.tape : (i == local.iter_745.tape_ptr ? local.ascii_lookup[local.curr_746.input] : b)]
        : local.iter_745.tape)

    tape_ptr = (
      local.curr_746.code == "<"
        ? local.iter_745.tape_ptr == 0 ? length(local.iter_745.tape) - 1 : local.iter_745.tape_ptr - 1 :
      local.curr_746.code == ">"
        ? local.iter_745.tape_ptr == length(local.iter_745.tape) - 1 ? 0 : local.iter_745.tape_ptr + 1
        : local.iter_745.tape_ptr)

    code_ptr = 1 + (
      local.curr_746.code == "["
        ? local.iter_745.tape[local.iter_745.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_745.code_ptr)] : local.iter_745.code_ptr :
      local.curr_746.code == "]"
        ? local.iter_745.tape[local.iter_745.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_745.code_ptr)] : local.iter_745.code_ptr
        : local.iter_745.code_ptr)

    steps_taken = 1 + local.iter_745.steps_taken
  }
}

locals {
  end_of_code_747 = try(local.iter_746.code_ptr >= length(var.code), true)

  curr_747 = local.end_of_code_747 ? null : {
    code = substr(var.code, local.iter_746.code_ptr, 1)
    input = substr(var.code, local.iter_746.code_ptr, 1) == "," ? substr(local.iter_746.input, 0, 1) : null
  }

  iter_747 = local.end_of_code_747 ? local.iter_746 : {
    input = (local.curr_747.code == ","
      ? substr(local.iter_746.input, 1, -1)
      : local.iter_746.input)

    output = (local.curr_747.code == "."
      ? "${local.iter_746.output}${jsondecode(format("\"\\u%04x\"", local.iter_746.tape[local.iter_746.tape_ptr]))}"
      : local.iter_746.output)
    
    tape = (
      local.curr_747.code == "+"
        ? [for i, b in local.iter_746.tape : (i == local.iter_746.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_747.code == "-"
        ? [for i, b in local.iter_746.tape : (i == local.iter_746.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_747.code == ","
        ? [for i, b in local.iter_746.tape : (i == local.iter_746.tape_ptr ? local.ascii_lookup[local.curr_747.input] : b)]
        : local.iter_746.tape)

    tape_ptr = (
      local.curr_747.code == "<"
        ? local.iter_746.tape_ptr == 0 ? length(local.iter_746.tape) - 1 : local.iter_746.tape_ptr - 1 :
      local.curr_747.code == ">"
        ? local.iter_746.tape_ptr == length(local.iter_746.tape) - 1 ? 0 : local.iter_746.tape_ptr + 1
        : local.iter_746.tape_ptr)

    code_ptr = 1 + (
      local.curr_747.code == "["
        ? local.iter_746.tape[local.iter_746.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_746.code_ptr)] : local.iter_746.code_ptr :
      local.curr_747.code == "]"
        ? local.iter_746.tape[local.iter_746.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_746.code_ptr)] : local.iter_746.code_ptr
        : local.iter_746.code_ptr)

    steps_taken = 1 + local.iter_746.steps_taken
  }
}

locals {
  end_of_code_748 = try(local.iter_747.code_ptr >= length(var.code), true)

  curr_748 = local.end_of_code_748 ? null : {
    code = substr(var.code, local.iter_747.code_ptr, 1)
    input = substr(var.code, local.iter_747.code_ptr, 1) == "," ? substr(local.iter_747.input, 0, 1) : null
  }

  iter_748 = local.end_of_code_748 ? local.iter_747 : {
    input = (local.curr_748.code == ","
      ? substr(local.iter_747.input, 1, -1)
      : local.iter_747.input)

    output = (local.curr_748.code == "."
      ? "${local.iter_747.output}${jsondecode(format("\"\\u%04x\"", local.iter_747.tape[local.iter_747.tape_ptr]))}"
      : local.iter_747.output)
    
    tape = (
      local.curr_748.code == "+"
        ? [for i, b in local.iter_747.tape : (i == local.iter_747.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_748.code == "-"
        ? [for i, b in local.iter_747.tape : (i == local.iter_747.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_748.code == ","
        ? [for i, b in local.iter_747.tape : (i == local.iter_747.tape_ptr ? local.ascii_lookup[local.curr_748.input] : b)]
        : local.iter_747.tape)

    tape_ptr = (
      local.curr_748.code == "<"
        ? local.iter_747.tape_ptr == 0 ? length(local.iter_747.tape) - 1 : local.iter_747.tape_ptr - 1 :
      local.curr_748.code == ">"
        ? local.iter_747.tape_ptr == length(local.iter_747.tape) - 1 ? 0 : local.iter_747.tape_ptr + 1
        : local.iter_747.tape_ptr)

    code_ptr = 1 + (
      local.curr_748.code == "["
        ? local.iter_747.tape[local.iter_747.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_747.code_ptr)] : local.iter_747.code_ptr :
      local.curr_748.code == "]"
        ? local.iter_747.tape[local.iter_747.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_747.code_ptr)] : local.iter_747.code_ptr
        : local.iter_747.code_ptr)

    steps_taken = 1 + local.iter_747.steps_taken
  }
}

locals {
  end_of_code_749 = try(local.iter_748.code_ptr >= length(var.code), true)

  curr_749 = local.end_of_code_749 ? null : {
    code = substr(var.code, local.iter_748.code_ptr, 1)
    input = substr(var.code, local.iter_748.code_ptr, 1) == "," ? substr(local.iter_748.input, 0, 1) : null
  }

  iter_749 = local.end_of_code_749 ? local.iter_748 : {
    input = (local.curr_749.code == ","
      ? substr(local.iter_748.input, 1, -1)
      : local.iter_748.input)

    output = (local.curr_749.code == "."
      ? "${local.iter_748.output}${jsondecode(format("\"\\u%04x\"", local.iter_748.tape[local.iter_748.tape_ptr]))}"
      : local.iter_748.output)
    
    tape = (
      local.curr_749.code == "+"
        ? [for i, b in local.iter_748.tape : (i == local.iter_748.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_749.code == "-"
        ? [for i, b in local.iter_748.tape : (i == local.iter_748.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_749.code == ","
        ? [for i, b in local.iter_748.tape : (i == local.iter_748.tape_ptr ? local.ascii_lookup[local.curr_749.input] : b)]
        : local.iter_748.tape)

    tape_ptr = (
      local.curr_749.code == "<"
        ? local.iter_748.tape_ptr == 0 ? length(local.iter_748.tape) - 1 : local.iter_748.tape_ptr - 1 :
      local.curr_749.code == ">"
        ? local.iter_748.tape_ptr == length(local.iter_748.tape) - 1 ? 0 : local.iter_748.tape_ptr + 1
        : local.iter_748.tape_ptr)

    code_ptr = 1 + (
      local.curr_749.code == "["
        ? local.iter_748.tape[local.iter_748.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_748.code_ptr)] : local.iter_748.code_ptr :
      local.curr_749.code == "]"
        ? local.iter_748.tape[local.iter_748.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_748.code_ptr)] : local.iter_748.code_ptr
        : local.iter_748.code_ptr)

    steps_taken = 1 + local.iter_748.steps_taken
  }
}

locals {
  end_of_code_750 = try(local.iter_749.code_ptr >= length(var.code), true)

  curr_750 = local.end_of_code_750 ? null : {
    code = substr(var.code, local.iter_749.code_ptr, 1)
    input = substr(var.code, local.iter_749.code_ptr, 1) == "," ? substr(local.iter_749.input, 0, 1) : null
  }

  iter_750 = local.end_of_code_750 ? local.iter_749 : {
    input = (local.curr_750.code == ","
      ? substr(local.iter_749.input, 1, -1)
      : local.iter_749.input)

    output = (local.curr_750.code == "."
      ? "${local.iter_749.output}${jsondecode(format("\"\\u%04x\"", local.iter_749.tape[local.iter_749.tape_ptr]))}"
      : local.iter_749.output)
    
    tape = (
      local.curr_750.code == "+"
        ? [for i, b in local.iter_749.tape : (i == local.iter_749.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_750.code == "-"
        ? [for i, b in local.iter_749.tape : (i == local.iter_749.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_750.code == ","
        ? [for i, b in local.iter_749.tape : (i == local.iter_749.tape_ptr ? local.ascii_lookup[local.curr_750.input] : b)]
        : local.iter_749.tape)

    tape_ptr = (
      local.curr_750.code == "<"
        ? local.iter_749.tape_ptr == 0 ? length(local.iter_749.tape) - 1 : local.iter_749.tape_ptr - 1 :
      local.curr_750.code == ">"
        ? local.iter_749.tape_ptr == length(local.iter_749.tape) - 1 ? 0 : local.iter_749.tape_ptr + 1
        : local.iter_749.tape_ptr)

    code_ptr = 1 + (
      local.curr_750.code == "["
        ? local.iter_749.tape[local.iter_749.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_749.code_ptr)] : local.iter_749.code_ptr :
      local.curr_750.code == "]"
        ? local.iter_749.tape[local.iter_749.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_749.code_ptr)] : local.iter_749.code_ptr
        : local.iter_749.code_ptr)

    steps_taken = 1 + local.iter_749.steps_taken
  }
}

locals {
  end_of_code_751 = try(local.iter_750.code_ptr >= length(var.code), true)

  curr_751 = local.end_of_code_751 ? null : {
    code = substr(var.code, local.iter_750.code_ptr, 1)
    input = substr(var.code, local.iter_750.code_ptr, 1) == "," ? substr(local.iter_750.input, 0, 1) : null
  }

  iter_751 = local.end_of_code_751 ? local.iter_750 : {
    input = (local.curr_751.code == ","
      ? substr(local.iter_750.input, 1, -1)
      : local.iter_750.input)

    output = (local.curr_751.code == "."
      ? "${local.iter_750.output}${jsondecode(format("\"\\u%04x\"", local.iter_750.tape[local.iter_750.tape_ptr]))}"
      : local.iter_750.output)
    
    tape = (
      local.curr_751.code == "+"
        ? [for i, b in local.iter_750.tape : (i == local.iter_750.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_751.code == "-"
        ? [for i, b in local.iter_750.tape : (i == local.iter_750.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_751.code == ","
        ? [for i, b in local.iter_750.tape : (i == local.iter_750.tape_ptr ? local.ascii_lookup[local.curr_751.input] : b)]
        : local.iter_750.tape)

    tape_ptr = (
      local.curr_751.code == "<"
        ? local.iter_750.tape_ptr == 0 ? length(local.iter_750.tape) - 1 : local.iter_750.tape_ptr - 1 :
      local.curr_751.code == ">"
        ? local.iter_750.tape_ptr == length(local.iter_750.tape) - 1 ? 0 : local.iter_750.tape_ptr + 1
        : local.iter_750.tape_ptr)

    code_ptr = 1 + (
      local.curr_751.code == "["
        ? local.iter_750.tape[local.iter_750.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_750.code_ptr)] : local.iter_750.code_ptr :
      local.curr_751.code == "]"
        ? local.iter_750.tape[local.iter_750.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_750.code_ptr)] : local.iter_750.code_ptr
        : local.iter_750.code_ptr)

    steps_taken = 1 + local.iter_750.steps_taken
  }
}

locals {
  end_of_code_752 = try(local.iter_751.code_ptr >= length(var.code), true)

  curr_752 = local.end_of_code_752 ? null : {
    code = substr(var.code, local.iter_751.code_ptr, 1)
    input = substr(var.code, local.iter_751.code_ptr, 1) == "," ? substr(local.iter_751.input, 0, 1) : null
  }

  iter_752 = local.end_of_code_752 ? local.iter_751 : {
    input = (local.curr_752.code == ","
      ? substr(local.iter_751.input, 1, -1)
      : local.iter_751.input)

    output = (local.curr_752.code == "."
      ? "${local.iter_751.output}${jsondecode(format("\"\\u%04x\"", local.iter_751.tape[local.iter_751.tape_ptr]))}"
      : local.iter_751.output)
    
    tape = (
      local.curr_752.code == "+"
        ? [for i, b in local.iter_751.tape : (i == local.iter_751.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_752.code == "-"
        ? [for i, b in local.iter_751.tape : (i == local.iter_751.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_752.code == ","
        ? [for i, b in local.iter_751.tape : (i == local.iter_751.tape_ptr ? local.ascii_lookup[local.curr_752.input] : b)]
        : local.iter_751.tape)

    tape_ptr = (
      local.curr_752.code == "<"
        ? local.iter_751.tape_ptr == 0 ? length(local.iter_751.tape) - 1 : local.iter_751.tape_ptr - 1 :
      local.curr_752.code == ">"
        ? local.iter_751.tape_ptr == length(local.iter_751.tape) - 1 ? 0 : local.iter_751.tape_ptr + 1
        : local.iter_751.tape_ptr)

    code_ptr = 1 + (
      local.curr_752.code == "["
        ? local.iter_751.tape[local.iter_751.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_751.code_ptr)] : local.iter_751.code_ptr :
      local.curr_752.code == "]"
        ? local.iter_751.tape[local.iter_751.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_751.code_ptr)] : local.iter_751.code_ptr
        : local.iter_751.code_ptr)

    steps_taken = 1 + local.iter_751.steps_taken
  }
}

locals {
  end_of_code_753 = try(local.iter_752.code_ptr >= length(var.code), true)

  curr_753 = local.end_of_code_753 ? null : {
    code = substr(var.code, local.iter_752.code_ptr, 1)
    input = substr(var.code, local.iter_752.code_ptr, 1) == "," ? substr(local.iter_752.input, 0, 1) : null
  }

  iter_753 = local.end_of_code_753 ? local.iter_752 : {
    input = (local.curr_753.code == ","
      ? substr(local.iter_752.input, 1, -1)
      : local.iter_752.input)

    output = (local.curr_753.code == "."
      ? "${local.iter_752.output}${jsondecode(format("\"\\u%04x\"", local.iter_752.tape[local.iter_752.tape_ptr]))}"
      : local.iter_752.output)
    
    tape = (
      local.curr_753.code == "+"
        ? [for i, b in local.iter_752.tape : (i == local.iter_752.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_753.code == "-"
        ? [for i, b in local.iter_752.tape : (i == local.iter_752.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_753.code == ","
        ? [for i, b in local.iter_752.tape : (i == local.iter_752.tape_ptr ? local.ascii_lookup[local.curr_753.input] : b)]
        : local.iter_752.tape)

    tape_ptr = (
      local.curr_753.code == "<"
        ? local.iter_752.tape_ptr == 0 ? length(local.iter_752.tape) - 1 : local.iter_752.tape_ptr - 1 :
      local.curr_753.code == ">"
        ? local.iter_752.tape_ptr == length(local.iter_752.tape) - 1 ? 0 : local.iter_752.tape_ptr + 1
        : local.iter_752.tape_ptr)

    code_ptr = 1 + (
      local.curr_753.code == "["
        ? local.iter_752.tape[local.iter_752.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_752.code_ptr)] : local.iter_752.code_ptr :
      local.curr_753.code == "]"
        ? local.iter_752.tape[local.iter_752.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_752.code_ptr)] : local.iter_752.code_ptr
        : local.iter_752.code_ptr)

    steps_taken = 1 + local.iter_752.steps_taken
  }
}

locals {
  end_of_code_754 = try(local.iter_753.code_ptr >= length(var.code), true)

  curr_754 = local.end_of_code_754 ? null : {
    code = substr(var.code, local.iter_753.code_ptr, 1)
    input = substr(var.code, local.iter_753.code_ptr, 1) == "," ? substr(local.iter_753.input, 0, 1) : null
  }

  iter_754 = local.end_of_code_754 ? local.iter_753 : {
    input = (local.curr_754.code == ","
      ? substr(local.iter_753.input, 1, -1)
      : local.iter_753.input)

    output = (local.curr_754.code == "."
      ? "${local.iter_753.output}${jsondecode(format("\"\\u%04x\"", local.iter_753.tape[local.iter_753.tape_ptr]))}"
      : local.iter_753.output)
    
    tape = (
      local.curr_754.code == "+"
        ? [for i, b in local.iter_753.tape : (i == local.iter_753.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_754.code == "-"
        ? [for i, b in local.iter_753.tape : (i == local.iter_753.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_754.code == ","
        ? [for i, b in local.iter_753.tape : (i == local.iter_753.tape_ptr ? local.ascii_lookup[local.curr_754.input] : b)]
        : local.iter_753.tape)

    tape_ptr = (
      local.curr_754.code == "<"
        ? local.iter_753.tape_ptr == 0 ? length(local.iter_753.tape) - 1 : local.iter_753.tape_ptr - 1 :
      local.curr_754.code == ">"
        ? local.iter_753.tape_ptr == length(local.iter_753.tape) - 1 ? 0 : local.iter_753.tape_ptr + 1
        : local.iter_753.tape_ptr)

    code_ptr = 1 + (
      local.curr_754.code == "["
        ? local.iter_753.tape[local.iter_753.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_753.code_ptr)] : local.iter_753.code_ptr :
      local.curr_754.code == "]"
        ? local.iter_753.tape[local.iter_753.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_753.code_ptr)] : local.iter_753.code_ptr
        : local.iter_753.code_ptr)

    steps_taken = 1 + local.iter_753.steps_taken
  }
}

locals {
  end_of_code_755 = try(local.iter_754.code_ptr >= length(var.code), true)

  curr_755 = local.end_of_code_755 ? null : {
    code = substr(var.code, local.iter_754.code_ptr, 1)
    input = substr(var.code, local.iter_754.code_ptr, 1) == "," ? substr(local.iter_754.input, 0, 1) : null
  }

  iter_755 = local.end_of_code_755 ? local.iter_754 : {
    input = (local.curr_755.code == ","
      ? substr(local.iter_754.input, 1, -1)
      : local.iter_754.input)

    output = (local.curr_755.code == "."
      ? "${local.iter_754.output}${jsondecode(format("\"\\u%04x\"", local.iter_754.tape[local.iter_754.tape_ptr]))}"
      : local.iter_754.output)
    
    tape = (
      local.curr_755.code == "+"
        ? [for i, b in local.iter_754.tape : (i == local.iter_754.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_755.code == "-"
        ? [for i, b in local.iter_754.tape : (i == local.iter_754.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_755.code == ","
        ? [for i, b in local.iter_754.tape : (i == local.iter_754.tape_ptr ? local.ascii_lookup[local.curr_755.input] : b)]
        : local.iter_754.tape)

    tape_ptr = (
      local.curr_755.code == "<"
        ? local.iter_754.tape_ptr == 0 ? length(local.iter_754.tape) - 1 : local.iter_754.tape_ptr - 1 :
      local.curr_755.code == ">"
        ? local.iter_754.tape_ptr == length(local.iter_754.tape) - 1 ? 0 : local.iter_754.tape_ptr + 1
        : local.iter_754.tape_ptr)

    code_ptr = 1 + (
      local.curr_755.code == "["
        ? local.iter_754.tape[local.iter_754.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_754.code_ptr)] : local.iter_754.code_ptr :
      local.curr_755.code == "]"
        ? local.iter_754.tape[local.iter_754.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_754.code_ptr)] : local.iter_754.code_ptr
        : local.iter_754.code_ptr)

    steps_taken = 1 + local.iter_754.steps_taken
  }
}

locals {
  end_of_code_756 = try(local.iter_755.code_ptr >= length(var.code), true)

  curr_756 = local.end_of_code_756 ? null : {
    code = substr(var.code, local.iter_755.code_ptr, 1)
    input = substr(var.code, local.iter_755.code_ptr, 1) == "," ? substr(local.iter_755.input, 0, 1) : null
  }

  iter_756 = local.end_of_code_756 ? local.iter_755 : {
    input = (local.curr_756.code == ","
      ? substr(local.iter_755.input, 1, -1)
      : local.iter_755.input)

    output = (local.curr_756.code == "."
      ? "${local.iter_755.output}${jsondecode(format("\"\\u%04x\"", local.iter_755.tape[local.iter_755.tape_ptr]))}"
      : local.iter_755.output)
    
    tape = (
      local.curr_756.code == "+"
        ? [for i, b in local.iter_755.tape : (i == local.iter_755.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_756.code == "-"
        ? [for i, b in local.iter_755.tape : (i == local.iter_755.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_756.code == ","
        ? [for i, b in local.iter_755.tape : (i == local.iter_755.tape_ptr ? local.ascii_lookup[local.curr_756.input] : b)]
        : local.iter_755.tape)

    tape_ptr = (
      local.curr_756.code == "<"
        ? local.iter_755.tape_ptr == 0 ? length(local.iter_755.tape) - 1 : local.iter_755.tape_ptr - 1 :
      local.curr_756.code == ">"
        ? local.iter_755.tape_ptr == length(local.iter_755.tape) - 1 ? 0 : local.iter_755.tape_ptr + 1
        : local.iter_755.tape_ptr)

    code_ptr = 1 + (
      local.curr_756.code == "["
        ? local.iter_755.tape[local.iter_755.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_755.code_ptr)] : local.iter_755.code_ptr :
      local.curr_756.code == "]"
        ? local.iter_755.tape[local.iter_755.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_755.code_ptr)] : local.iter_755.code_ptr
        : local.iter_755.code_ptr)

    steps_taken = 1 + local.iter_755.steps_taken
  }
}

locals {
  end_of_code_757 = try(local.iter_756.code_ptr >= length(var.code), true)

  curr_757 = local.end_of_code_757 ? null : {
    code = substr(var.code, local.iter_756.code_ptr, 1)
    input = substr(var.code, local.iter_756.code_ptr, 1) == "," ? substr(local.iter_756.input, 0, 1) : null
  }

  iter_757 = local.end_of_code_757 ? local.iter_756 : {
    input = (local.curr_757.code == ","
      ? substr(local.iter_756.input, 1, -1)
      : local.iter_756.input)

    output = (local.curr_757.code == "."
      ? "${local.iter_756.output}${jsondecode(format("\"\\u%04x\"", local.iter_756.tape[local.iter_756.tape_ptr]))}"
      : local.iter_756.output)
    
    tape = (
      local.curr_757.code == "+"
        ? [for i, b in local.iter_756.tape : (i == local.iter_756.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_757.code == "-"
        ? [for i, b in local.iter_756.tape : (i == local.iter_756.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_757.code == ","
        ? [for i, b in local.iter_756.tape : (i == local.iter_756.tape_ptr ? local.ascii_lookup[local.curr_757.input] : b)]
        : local.iter_756.tape)

    tape_ptr = (
      local.curr_757.code == "<"
        ? local.iter_756.tape_ptr == 0 ? length(local.iter_756.tape) - 1 : local.iter_756.tape_ptr - 1 :
      local.curr_757.code == ">"
        ? local.iter_756.tape_ptr == length(local.iter_756.tape) - 1 ? 0 : local.iter_756.tape_ptr + 1
        : local.iter_756.tape_ptr)

    code_ptr = 1 + (
      local.curr_757.code == "["
        ? local.iter_756.tape[local.iter_756.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_756.code_ptr)] : local.iter_756.code_ptr :
      local.curr_757.code == "]"
        ? local.iter_756.tape[local.iter_756.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_756.code_ptr)] : local.iter_756.code_ptr
        : local.iter_756.code_ptr)

    steps_taken = 1 + local.iter_756.steps_taken
  }
}

locals {
  end_of_code_758 = try(local.iter_757.code_ptr >= length(var.code), true)

  curr_758 = local.end_of_code_758 ? null : {
    code = substr(var.code, local.iter_757.code_ptr, 1)
    input = substr(var.code, local.iter_757.code_ptr, 1) == "," ? substr(local.iter_757.input, 0, 1) : null
  }

  iter_758 = local.end_of_code_758 ? local.iter_757 : {
    input = (local.curr_758.code == ","
      ? substr(local.iter_757.input, 1, -1)
      : local.iter_757.input)

    output = (local.curr_758.code == "."
      ? "${local.iter_757.output}${jsondecode(format("\"\\u%04x\"", local.iter_757.tape[local.iter_757.tape_ptr]))}"
      : local.iter_757.output)
    
    tape = (
      local.curr_758.code == "+"
        ? [for i, b in local.iter_757.tape : (i == local.iter_757.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_758.code == "-"
        ? [for i, b in local.iter_757.tape : (i == local.iter_757.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_758.code == ","
        ? [for i, b in local.iter_757.tape : (i == local.iter_757.tape_ptr ? local.ascii_lookup[local.curr_758.input] : b)]
        : local.iter_757.tape)

    tape_ptr = (
      local.curr_758.code == "<"
        ? local.iter_757.tape_ptr == 0 ? length(local.iter_757.tape) - 1 : local.iter_757.tape_ptr - 1 :
      local.curr_758.code == ">"
        ? local.iter_757.tape_ptr == length(local.iter_757.tape) - 1 ? 0 : local.iter_757.tape_ptr + 1
        : local.iter_757.tape_ptr)

    code_ptr = 1 + (
      local.curr_758.code == "["
        ? local.iter_757.tape[local.iter_757.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_757.code_ptr)] : local.iter_757.code_ptr :
      local.curr_758.code == "]"
        ? local.iter_757.tape[local.iter_757.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_757.code_ptr)] : local.iter_757.code_ptr
        : local.iter_757.code_ptr)

    steps_taken = 1 + local.iter_757.steps_taken
  }
}

locals {
  end_of_code_759 = try(local.iter_758.code_ptr >= length(var.code), true)

  curr_759 = local.end_of_code_759 ? null : {
    code = substr(var.code, local.iter_758.code_ptr, 1)
    input = substr(var.code, local.iter_758.code_ptr, 1) == "," ? substr(local.iter_758.input, 0, 1) : null
  }

  iter_759 = local.end_of_code_759 ? local.iter_758 : {
    input = (local.curr_759.code == ","
      ? substr(local.iter_758.input, 1, -1)
      : local.iter_758.input)

    output = (local.curr_759.code == "."
      ? "${local.iter_758.output}${jsondecode(format("\"\\u%04x\"", local.iter_758.tape[local.iter_758.tape_ptr]))}"
      : local.iter_758.output)
    
    tape = (
      local.curr_759.code == "+"
        ? [for i, b in local.iter_758.tape : (i == local.iter_758.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_759.code == "-"
        ? [for i, b in local.iter_758.tape : (i == local.iter_758.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_759.code == ","
        ? [for i, b in local.iter_758.tape : (i == local.iter_758.tape_ptr ? local.ascii_lookup[local.curr_759.input] : b)]
        : local.iter_758.tape)

    tape_ptr = (
      local.curr_759.code == "<"
        ? local.iter_758.tape_ptr == 0 ? length(local.iter_758.tape) - 1 : local.iter_758.tape_ptr - 1 :
      local.curr_759.code == ">"
        ? local.iter_758.tape_ptr == length(local.iter_758.tape) - 1 ? 0 : local.iter_758.tape_ptr + 1
        : local.iter_758.tape_ptr)

    code_ptr = 1 + (
      local.curr_759.code == "["
        ? local.iter_758.tape[local.iter_758.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_758.code_ptr)] : local.iter_758.code_ptr :
      local.curr_759.code == "]"
        ? local.iter_758.tape[local.iter_758.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_758.code_ptr)] : local.iter_758.code_ptr
        : local.iter_758.code_ptr)

    steps_taken = 1 + local.iter_758.steps_taken
  }
}

locals {
  end_of_code_760 = try(local.iter_759.code_ptr >= length(var.code), true)

  curr_760 = local.end_of_code_760 ? null : {
    code = substr(var.code, local.iter_759.code_ptr, 1)
    input = substr(var.code, local.iter_759.code_ptr, 1) == "," ? substr(local.iter_759.input, 0, 1) : null
  }

  iter_760 = local.end_of_code_760 ? local.iter_759 : {
    input = (local.curr_760.code == ","
      ? substr(local.iter_759.input, 1, -1)
      : local.iter_759.input)

    output = (local.curr_760.code == "."
      ? "${local.iter_759.output}${jsondecode(format("\"\\u%04x\"", local.iter_759.tape[local.iter_759.tape_ptr]))}"
      : local.iter_759.output)
    
    tape = (
      local.curr_760.code == "+"
        ? [for i, b in local.iter_759.tape : (i == local.iter_759.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_760.code == "-"
        ? [for i, b in local.iter_759.tape : (i == local.iter_759.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_760.code == ","
        ? [for i, b in local.iter_759.tape : (i == local.iter_759.tape_ptr ? local.ascii_lookup[local.curr_760.input] : b)]
        : local.iter_759.tape)

    tape_ptr = (
      local.curr_760.code == "<"
        ? local.iter_759.tape_ptr == 0 ? length(local.iter_759.tape) - 1 : local.iter_759.tape_ptr - 1 :
      local.curr_760.code == ">"
        ? local.iter_759.tape_ptr == length(local.iter_759.tape) - 1 ? 0 : local.iter_759.tape_ptr + 1
        : local.iter_759.tape_ptr)

    code_ptr = 1 + (
      local.curr_760.code == "["
        ? local.iter_759.tape[local.iter_759.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_759.code_ptr)] : local.iter_759.code_ptr :
      local.curr_760.code == "]"
        ? local.iter_759.tape[local.iter_759.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_759.code_ptr)] : local.iter_759.code_ptr
        : local.iter_759.code_ptr)

    steps_taken = 1 + local.iter_759.steps_taken
  }
}

locals {
  end_of_code_761 = try(local.iter_760.code_ptr >= length(var.code), true)

  curr_761 = local.end_of_code_761 ? null : {
    code = substr(var.code, local.iter_760.code_ptr, 1)
    input = substr(var.code, local.iter_760.code_ptr, 1) == "," ? substr(local.iter_760.input, 0, 1) : null
  }

  iter_761 = local.end_of_code_761 ? local.iter_760 : {
    input = (local.curr_761.code == ","
      ? substr(local.iter_760.input, 1, -1)
      : local.iter_760.input)

    output = (local.curr_761.code == "."
      ? "${local.iter_760.output}${jsondecode(format("\"\\u%04x\"", local.iter_760.tape[local.iter_760.tape_ptr]))}"
      : local.iter_760.output)
    
    tape = (
      local.curr_761.code == "+"
        ? [for i, b in local.iter_760.tape : (i == local.iter_760.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_761.code == "-"
        ? [for i, b in local.iter_760.tape : (i == local.iter_760.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_761.code == ","
        ? [for i, b in local.iter_760.tape : (i == local.iter_760.tape_ptr ? local.ascii_lookup[local.curr_761.input] : b)]
        : local.iter_760.tape)

    tape_ptr = (
      local.curr_761.code == "<"
        ? local.iter_760.tape_ptr == 0 ? length(local.iter_760.tape) - 1 : local.iter_760.tape_ptr - 1 :
      local.curr_761.code == ">"
        ? local.iter_760.tape_ptr == length(local.iter_760.tape) - 1 ? 0 : local.iter_760.tape_ptr + 1
        : local.iter_760.tape_ptr)

    code_ptr = 1 + (
      local.curr_761.code == "["
        ? local.iter_760.tape[local.iter_760.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_760.code_ptr)] : local.iter_760.code_ptr :
      local.curr_761.code == "]"
        ? local.iter_760.tape[local.iter_760.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_760.code_ptr)] : local.iter_760.code_ptr
        : local.iter_760.code_ptr)

    steps_taken = 1 + local.iter_760.steps_taken
  }
}

locals {
  end_of_code_762 = try(local.iter_761.code_ptr >= length(var.code), true)

  curr_762 = local.end_of_code_762 ? null : {
    code = substr(var.code, local.iter_761.code_ptr, 1)
    input = substr(var.code, local.iter_761.code_ptr, 1) == "," ? substr(local.iter_761.input, 0, 1) : null
  }

  iter_762 = local.end_of_code_762 ? local.iter_761 : {
    input = (local.curr_762.code == ","
      ? substr(local.iter_761.input, 1, -1)
      : local.iter_761.input)

    output = (local.curr_762.code == "."
      ? "${local.iter_761.output}${jsondecode(format("\"\\u%04x\"", local.iter_761.tape[local.iter_761.tape_ptr]))}"
      : local.iter_761.output)
    
    tape = (
      local.curr_762.code == "+"
        ? [for i, b in local.iter_761.tape : (i == local.iter_761.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_762.code == "-"
        ? [for i, b in local.iter_761.tape : (i == local.iter_761.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_762.code == ","
        ? [for i, b in local.iter_761.tape : (i == local.iter_761.tape_ptr ? local.ascii_lookup[local.curr_762.input] : b)]
        : local.iter_761.tape)

    tape_ptr = (
      local.curr_762.code == "<"
        ? local.iter_761.tape_ptr == 0 ? length(local.iter_761.tape) - 1 : local.iter_761.tape_ptr - 1 :
      local.curr_762.code == ">"
        ? local.iter_761.tape_ptr == length(local.iter_761.tape) - 1 ? 0 : local.iter_761.tape_ptr + 1
        : local.iter_761.tape_ptr)

    code_ptr = 1 + (
      local.curr_762.code == "["
        ? local.iter_761.tape[local.iter_761.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_761.code_ptr)] : local.iter_761.code_ptr :
      local.curr_762.code == "]"
        ? local.iter_761.tape[local.iter_761.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_761.code_ptr)] : local.iter_761.code_ptr
        : local.iter_761.code_ptr)

    steps_taken = 1 + local.iter_761.steps_taken
  }
}

locals {
  end_of_code_763 = try(local.iter_762.code_ptr >= length(var.code), true)

  curr_763 = local.end_of_code_763 ? null : {
    code = substr(var.code, local.iter_762.code_ptr, 1)
    input = substr(var.code, local.iter_762.code_ptr, 1) == "," ? substr(local.iter_762.input, 0, 1) : null
  }

  iter_763 = local.end_of_code_763 ? local.iter_762 : {
    input = (local.curr_763.code == ","
      ? substr(local.iter_762.input, 1, -1)
      : local.iter_762.input)

    output = (local.curr_763.code == "."
      ? "${local.iter_762.output}${jsondecode(format("\"\\u%04x\"", local.iter_762.tape[local.iter_762.tape_ptr]))}"
      : local.iter_762.output)
    
    tape = (
      local.curr_763.code == "+"
        ? [for i, b in local.iter_762.tape : (i == local.iter_762.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_763.code == "-"
        ? [for i, b in local.iter_762.tape : (i == local.iter_762.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_763.code == ","
        ? [for i, b in local.iter_762.tape : (i == local.iter_762.tape_ptr ? local.ascii_lookup[local.curr_763.input] : b)]
        : local.iter_762.tape)

    tape_ptr = (
      local.curr_763.code == "<"
        ? local.iter_762.tape_ptr == 0 ? length(local.iter_762.tape) - 1 : local.iter_762.tape_ptr - 1 :
      local.curr_763.code == ">"
        ? local.iter_762.tape_ptr == length(local.iter_762.tape) - 1 ? 0 : local.iter_762.tape_ptr + 1
        : local.iter_762.tape_ptr)

    code_ptr = 1 + (
      local.curr_763.code == "["
        ? local.iter_762.tape[local.iter_762.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_762.code_ptr)] : local.iter_762.code_ptr :
      local.curr_763.code == "]"
        ? local.iter_762.tape[local.iter_762.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_762.code_ptr)] : local.iter_762.code_ptr
        : local.iter_762.code_ptr)

    steps_taken = 1 + local.iter_762.steps_taken
  }
}

locals {
  end_of_code_764 = try(local.iter_763.code_ptr >= length(var.code), true)

  curr_764 = local.end_of_code_764 ? null : {
    code = substr(var.code, local.iter_763.code_ptr, 1)
    input = substr(var.code, local.iter_763.code_ptr, 1) == "," ? substr(local.iter_763.input, 0, 1) : null
  }

  iter_764 = local.end_of_code_764 ? local.iter_763 : {
    input = (local.curr_764.code == ","
      ? substr(local.iter_763.input, 1, -1)
      : local.iter_763.input)

    output = (local.curr_764.code == "."
      ? "${local.iter_763.output}${jsondecode(format("\"\\u%04x\"", local.iter_763.tape[local.iter_763.tape_ptr]))}"
      : local.iter_763.output)
    
    tape = (
      local.curr_764.code == "+"
        ? [for i, b in local.iter_763.tape : (i == local.iter_763.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_764.code == "-"
        ? [for i, b in local.iter_763.tape : (i == local.iter_763.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_764.code == ","
        ? [for i, b in local.iter_763.tape : (i == local.iter_763.tape_ptr ? local.ascii_lookup[local.curr_764.input] : b)]
        : local.iter_763.tape)

    tape_ptr = (
      local.curr_764.code == "<"
        ? local.iter_763.tape_ptr == 0 ? length(local.iter_763.tape) - 1 : local.iter_763.tape_ptr - 1 :
      local.curr_764.code == ">"
        ? local.iter_763.tape_ptr == length(local.iter_763.tape) - 1 ? 0 : local.iter_763.tape_ptr + 1
        : local.iter_763.tape_ptr)

    code_ptr = 1 + (
      local.curr_764.code == "["
        ? local.iter_763.tape[local.iter_763.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_763.code_ptr)] : local.iter_763.code_ptr :
      local.curr_764.code == "]"
        ? local.iter_763.tape[local.iter_763.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_763.code_ptr)] : local.iter_763.code_ptr
        : local.iter_763.code_ptr)

    steps_taken = 1 + local.iter_763.steps_taken
  }
}

locals {
  end_of_code_765 = try(local.iter_764.code_ptr >= length(var.code), true)

  curr_765 = local.end_of_code_765 ? null : {
    code = substr(var.code, local.iter_764.code_ptr, 1)
    input = substr(var.code, local.iter_764.code_ptr, 1) == "," ? substr(local.iter_764.input, 0, 1) : null
  }

  iter_765 = local.end_of_code_765 ? local.iter_764 : {
    input = (local.curr_765.code == ","
      ? substr(local.iter_764.input, 1, -1)
      : local.iter_764.input)

    output = (local.curr_765.code == "."
      ? "${local.iter_764.output}${jsondecode(format("\"\\u%04x\"", local.iter_764.tape[local.iter_764.tape_ptr]))}"
      : local.iter_764.output)
    
    tape = (
      local.curr_765.code == "+"
        ? [for i, b in local.iter_764.tape : (i == local.iter_764.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_765.code == "-"
        ? [for i, b in local.iter_764.tape : (i == local.iter_764.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_765.code == ","
        ? [for i, b in local.iter_764.tape : (i == local.iter_764.tape_ptr ? local.ascii_lookup[local.curr_765.input] : b)]
        : local.iter_764.tape)

    tape_ptr = (
      local.curr_765.code == "<"
        ? local.iter_764.tape_ptr == 0 ? length(local.iter_764.tape) - 1 : local.iter_764.tape_ptr - 1 :
      local.curr_765.code == ">"
        ? local.iter_764.tape_ptr == length(local.iter_764.tape) - 1 ? 0 : local.iter_764.tape_ptr + 1
        : local.iter_764.tape_ptr)

    code_ptr = 1 + (
      local.curr_765.code == "["
        ? local.iter_764.tape[local.iter_764.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_764.code_ptr)] : local.iter_764.code_ptr :
      local.curr_765.code == "]"
        ? local.iter_764.tape[local.iter_764.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_764.code_ptr)] : local.iter_764.code_ptr
        : local.iter_764.code_ptr)

    steps_taken = 1 + local.iter_764.steps_taken
  }
}

locals {
  end_of_code_766 = try(local.iter_765.code_ptr >= length(var.code), true)

  curr_766 = local.end_of_code_766 ? null : {
    code = substr(var.code, local.iter_765.code_ptr, 1)
    input = substr(var.code, local.iter_765.code_ptr, 1) == "," ? substr(local.iter_765.input, 0, 1) : null
  }

  iter_766 = local.end_of_code_766 ? local.iter_765 : {
    input = (local.curr_766.code == ","
      ? substr(local.iter_765.input, 1, -1)
      : local.iter_765.input)

    output = (local.curr_766.code == "."
      ? "${local.iter_765.output}${jsondecode(format("\"\\u%04x\"", local.iter_765.tape[local.iter_765.tape_ptr]))}"
      : local.iter_765.output)
    
    tape = (
      local.curr_766.code == "+"
        ? [for i, b in local.iter_765.tape : (i == local.iter_765.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_766.code == "-"
        ? [for i, b in local.iter_765.tape : (i == local.iter_765.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_766.code == ","
        ? [for i, b in local.iter_765.tape : (i == local.iter_765.tape_ptr ? local.ascii_lookup[local.curr_766.input] : b)]
        : local.iter_765.tape)

    tape_ptr = (
      local.curr_766.code == "<"
        ? local.iter_765.tape_ptr == 0 ? length(local.iter_765.tape) - 1 : local.iter_765.tape_ptr - 1 :
      local.curr_766.code == ">"
        ? local.iter_765.tape_ptr == length(local.iter_765.tape) - 1 ? 0 : local.iter_765.tape_ptr + 1
        : local.iter_765.tape_ptr)

    code_ptr = 1 + (
      local.curr_766.code == "["
        ? local.iter_765.tape[local.iter_765.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_765.code_ptr)] : local.iter_765.code_ptr :
      local.curr_766.code == "]"
        ? local.iter_765.tape[local.iter_765.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_765.code_ptr)] : local.iter_765.code_ptr
        : local.iter_765.code_ptr)

    steps_taken = 1 + local.iter_765.steps_taken
  }
}

locals {
  end_of_code_767 = try(local.iter_766.code_ptr >= length(var.code), true)

  curr_767 = local.end_of_code_767 ? null : {
    code = substr(var.code, local.iter_766.code_ptr, 1)
    input = substr(var.code, local.iter_766.code_ptr, 1) == "," ? substr(local.iter_766.input, 0, 1) : null
  }

  iter_767 = local.end_of_code_767 ? local.iter_766 : {
    input = (local.curr_767.code == ","
      ? substr(local.iter_766.input, 1, -1)
      : local.iter_766.input)

    output = (local.curr_767.code == "."
      ? "${local.iter_766.output}${jsondecode(format("\"\\u%04x\"", local.iter_766.tape[local.iter_766.tape_ptr]))}"
      : local.iter_766.output)
    
    tape = (
      local.curr_767.code == "+"
        ? [for i, b in local.iter_766.tape : (i == local.iter_766.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_767.code == "-"
        ? [for i, b in local.iter_766.tape : (i == local.iter_766.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_767.code == ","
        ? [for i, b in local.iter_766.tape : (i == local.iter_766.tape_ptr ? local.ascii_lookup[local.curr_767.input] : b)]
        : local.iter_766.tape)

    tape_ptr = (
      local.curr_767.code == "<"
        ? local.iter_766.tape_ptr == 0 ? length(local.iter_766.tape) - 1 : local.iter_766.tape_ptr - 1 :
      local.curr_767.code == ">"
        ? local.iter_766.tape_ptr == length(local.iter_766.tape) - 1 ? 0 : local.iter_766.tape_ptr + 1
        : local.iter_766.tape_ptr)

    code_ptr = 1 + (
      local.curr_767.code == "["
        ? local.iter_766.tape[local.iter_766.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_766.code_ptr)] : local.iter_766.code_ptr :
      local.curr_767.code == "]"
        ? local.iter_766.tape[local.iter_766.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_766.code_ptr)] : local.iter_766.code_ptr
        : local.iter_766.code_ptr)

    steps_taken = 1 + local.iter_766.steps_taken
  }
}

locals {
  end_of_code_768 = try(local.iter_767.code_ptr >= length(var.code), true)

  curr_768 = local.end_of_code_768 ? null : {
    code = substr(var.code, local.iter_767.code_ptr, 1)
    input = substr(var.code, local.iter_767.code_ptr, 1) == "," ? substr(local.iter_767.input, 0, 1) : null
  }

  iter_768 = local.end_of_code_768 ? local.iter_767 : {
    input = (local.curr_768.code == ","
      ? substr(local.iter_767.input, 1, -1)
      : local.iter_767.input)

    output = (local.curr_768.code == "."
      ? "${local.iter_767.output}${jsondecode(format("\"\\u%04x\"", local.iter_767.tape[local.iter_767.tape_ptr]))}"
      : local.iter_767.output)
    
    tape = (
      local.curr_768.code == "+"
        ? [for i, b in local.iter_767.tape : (i == local.iter_767.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_768.code == "-"
        ? [for i, b in local.iter_767.tape : (i == local.iter_767.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_768.code == ","
        ? [for i, b in local.iter_767.tape : (i == local.iter_767.tape_ptr ? local.ascii_lookup[local.curr_768.input] : b)]
        : local.iter_767.tape)

    tape_ptr = (
      local.curr_768.code == "<"
        ? local.iter_767.tape_ptr == 0 ? length(local.iter_767.tape) - 1 : local.iter_767.tape_ptr - 1 :
      local.curr_768.code == ">"
        ? local.iter_767.tape_ptr == length(local.iter_767.tape) - 1 ? 0 : local.iter_767.tape_ptr + 1
        : local.iter_767.tape_ptr)

    code_ptr = 1 + (
      local.curr_768.code == "["
        ? local.iter_767.tape[local.iter_767.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_767.code_ptr)] : local.iter_767.code_ptr :
      local.curr_768.code == "]"
        ? local.iter_767.tape[local.iter_767.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_767.code_ptr)] : local.iter_767.code_ptr
        : local.iter_767.code_ptr)

    steps_taken = 1 + local.iter_767.steps_taken
  }
}

locals {
  end_of_code_769 = try(local.iter_768.code_ptr >= length(var.code), true)

  curr_769 = local.end_of_code_769 ? null : {
    code = substr(var.code, local.iter_768.code_ptr, 1)
    input = substr(var.code, local.iter_768.code_ptr, 1) == "," ? substr(local.iter_768.input, 0, 1) : null
  }

  iter_769 = local.end_of_code_769 ? local.iter_768 : {
    input = (local.curr_769.code == ","
      ? substr(local.iter_768.input, 1, -1)
      : local.iter_768.input)

    output = (local.curr_769.code == "."
      ? "${local.iter_768.output}${jsondecode(format("\"\\u%04x\"", local.iter_768.tape[local.iter_768.tape_ptr]))}"
      : local.iter_768.output)
    
    tape = (
      local.curr_769.code == "+"
        ? [for i, b in local.iter_768.tape : (i == local.iter_768.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_769.code == "-"
        ? [for i, b in local.iter_768.tape : (i == local.iter_768.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_769.code == ","
        ? [for i, b in local.iter_768.tape : (i == local.iter_768.tape_ptr ? local.ascii_lookup[local.curr_769.input] : b)]
        : local.iter_768.tape)

    tape_ptr = (
      local.curr_769.code == "<"
        ? local.iter_768.tape_ptr == 0 ? length(local.iter_768.tape) - 1 : local.iter_768.tape_ptr - 1 :
      local.curr_769.code == ">"
        ? local.iter_768.tape_ptr == length(local.iter_768.tape) - 1 ? 0 : local.iter_768.tape_ptr + 1
        : local.iter_768.tape_ptr)

    code_ptr = 1 + (
      local.curr_769.code == "["
        ? local.iter_768.tape[local.iter_768.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_768.code_ptr)] : local.iter_768.code_ptr :
      local.curr_769.code == "]"
        ? local.iter_768.tape[local.iter_768.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_768.code_ptr)] : local.iter_768.code_ptr
        : local.iter_768.code_ptr)

    steps_taken = 1 + local.iter_768.steps_taken
  }
}

locals {
  end_of_code_770 = try(local.iter_769.code_ptr >= length(var.code), true)

  curr_770 = local.end_of_code_770 ? null : {
    code = substr(var.code, local.iter_769.code_ptr, 1)
    input = substr(var.code, local.iter_769.code_ptr, 1) == "," ? substr(local.iter_769.input, 0, 1) : null
  }

  iter_770 = local.end_of_code_770 ? local.iter_769 : {
    input = (local.curr_770.code == ","
      ? substr(local.iter_769.input, 1, -1)
      : local.iter_769.input)

    output = (local.curr_770.code == "."
      ? "${local.iter_769.output}${jsondecode(format("\"\\u%04x\"", local.iter_769.tape[local.iter_769.tape_ptr]))}"
      : local.iter_769.output)
    
    tape = (
      local.curr_770.code == "+"
        ? [for i, b in local.iter_769.tape : (i == local.iter_769.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_770.code == "-"
        ? [for i, b in local.iter_769.tape : (i == local.iter_769.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_770.code == ","
        ? [for i, b in local.iter_769.tape : (i == local.iter_769.tape_ptr ? local.ascii_lookup[local.curr_770.input] : b)]
        : local.iter_769.tape)

    tape_ptr = (
      local.curr_770.code == "<"
        ? local.iter_769.tape_ptr == 0 ? length(local.iter_769.tape) - 1 : local.iter_769.tape_ptr - 1 :
      local.curr_770.code == ">"
        ? local.iter_769.tape_ptr == length(local.iter_769.tape) - 1 ? 0 : local.iter_769.tape_ptr + 1
        : local.iter_769.tape_ptr)

    code_ptr = 1 + (
      local.curr_770.code == "["
        ? local.iter_769.tape[local.iter_769.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_769.code_ptr)] : local.iter_769.code_ptr :
      local.curr_770.code == "]"
        ? local.iter_769.tape[local.iter_769.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_769.code_ptr)] : local.iter_769.code_ptr
        : local.iter_769.code_ptr)

    steps_taken = 1 + local.iter_769.steps_taken
  }
}

locals {
  end_of_code_771 = try(local.iter_770.code_ptr >= length(var.code), true)

  curr_771 = local.end_of_code_771 ? null : {
    code = substr(var.code, local.iter_770.code_ptr, 1)
    input = substr(var.code, local.iter_770.code_ptr, 1) == "," ? substr(local.iter_770.input, 0, 1) : null
  }

  iter_771 = local.end_of_code_771 ? local.iter_770 : {
    input = (local.curr_771.code == ","
      ? substr(local.iter_770.input, 1, -1)
      : local.iter_770.input)

    output = (local.curr_771.code == "."
      ? "${local.iter_770.output}${jsondecode(format("\"\\u%04x\"", local.iter_770.tape[local.iter_770.tape_ptr]))}"
      : local.iter_770.output)
    
    tape = (
      local.curr_771.code == "+"
        ? [for i, b in local.iter_770.tape : (i == local.iter_770.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_771.code == "-"
        ? [for i, b in local.iter_770.tape : (i == local.iter_770.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_771.code == ","
        ? [for i, b in local.iter_770.tape : (i == local.iter_770.tape_ptr ? local.ascii_lookup[local.curr_771.input] : b)]
        : local.iter_770.tape)

    tape_ptr = (
      local.curr_771.code == "<"
        ? local.iter_770.tape_ptr == 0 ? length(local.iter_770.tape) - 1 : local.iter_770.tape_ptr - 1 :
      local.curr_771.code == ">"
        ? local.iter_770.tape_ptr == length(local.iter_770.tape) - 1 ? 0 : local.iter_770.tape_ptr + 1
        : local.iter_770.tape_ptr)

    code_ptr = 1 + (
      local.curr_771.code == "["
        ? local.iter_770.tape[local.iter_770.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_770.code_ptr)] : local.iter_770.code_ptr :
      local.curr_771.code == "]"
        ? local.iter_770.tape[local.iter_770.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_770.code_ptr)] : local.iter_770.code_ptr
        : local.iter_770.code_ptr)

    steps_taken = 1 + local.iter_770.steps_taken
  }
}

locals {
  end_of_code_772 = try(local.iter_771.code_ptr >= length(var.code), true)

  curr_772 = local.end_of_code_772 ? null : {
    code = substr(var.code, local.iter_771.code_ptr, 1)
    input = substr(var.code, local.iter_771.code_ptr, 1) == "," ? substr(local.iter_771.input, 0, 1) : null
  }

  iter_772 = local.end_of_code_772 ? local.iter_771 : {
    input = (local.curr_772.code == ","
      ? substr(local.iter_771.input, 1, -1)
      : local.iter_771.input)

    output = (local.curr_772.code == "."
      ? "${local.iter_771.output}${jsondecode(format("\"\\u%04x\"", local.iter_771.tape[local.iter_771.tape_ptr]))}"
      : local.iter_771.output)
    
    tape = (
      local.curr_772.code == "+"
        ? [for i, b in local.iter_771.tape : (i == local.iter_771.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_772.code == "-"
        ? [for i, b in local.iter_771.tape : (i == local.iter_771.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_772.code == ","
        ? [for i, b in local.iter_771.tape : (i == local.iter_771.tape_ptr ? local.ascii_lookup[local.curr_772.input] : b)]
        : local.iter_771.tape)

    tape_ptr = (
      local.curr_772.code == "<"
        ? local.iter_771.tape_ptr == 0 ? length(local.iter_771.tape) - 1 : local.iter_771.tape_ptr - 1 :
      local.curr_772.code == ">"
        ? local.iter_771.tape_ptr == length(local.iter_771.tape) - 1 ? 0 : local.iter_771.tape_ptr + 1
        : local.iter_771.tape_ptr)

    code_ptr = 1 + (
      local.curr_772.code == "["
        ? local.iter_771.tape[local.iter_771.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_771.code_ptr)] : local.iter_771.code_ptr :
      local.curr_772.code == "]"
        ? local.iter_771.tape[local.iter_771.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_771.code_ptr)] : local.iter_771.code_ptr
        : local.iter_771.code_ptr)

    steps_taken = 1 + local.iter_771.steps_taken
  }
}

locals {
  end_of_code_773 = try(local.iter_772.code_ptr >= length(var.code), true)

  curr_773 = local.end_of_code_773 ? null : {
    code = substr(var.code, local.iter_772.code_ptr, 1)
    input = substr(var.code, local.iter_772.code_ptr, 1) == "," ? substr(local.iter_772.input, 0, 1) : null
  }

  iter_773 = local.end_of_code_773 ? local.iter_772 : {
    input = (local.curr_773.code == ","
      ? substr(local.iter_772.input, 1, -1)
      : local.iter_772.input)

    output = (local.curr_773.code == "."
      ? "${local.iter_772.output}${jsondecode(format("\"\\u%04x\"", local.iter_772.tape[local.iter_772.tape_ptr]))}"
      : local.iter_772.output)
    
    tape = (
      local.curr_773.code == "+"
        ? [for i, b in local.iter_772.tape : (i == local.iter_772.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_773.code == "-"
        ? [for i, b in local.iter_772.tape : (i == local.iter_772.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_773.code == ","
        ? [for i, b in local.iter_772.tape : (i == local.iter_772.tape_ptr ? local.ascii_lookup[local.curr_773.input] : b)]
        : local.iter_772.tape)

    tape_ptr = (
      local.curr_773.code == "<"
        ? local.iter_772.tape_ptr == 0 ? length(local.iter_772.tape) - 1 : local.iter_772.tape_ptr - 1 :
      local.curr_773.code == ">"
        ? local.iter_772.tape_ptr == length(local.iter_772.tape) - 1 ? 0 : local.iter_772.tape_ptr + 1
        : local.iter_772.tape_ptr)

    code_ptr = 1 + (
      local.curr_773.code == "["
        ? local.iter_772.tape[local.iter_772.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_772.code_ptr)] : local.iter_772.code_ptr :
      local.curr_773.code == "]"
        ? local.iter_772.tape[local.iter_772.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_772.code_ptr)] : local.iter_772.code_ptr
        : local.iter_772.code_ptr)

    steps_taken = 1 + local.iter_772.steps_taken
  }
}

locals {
  end_of_code_774 = try(local.iter_773.code_ptr >= length(var.code), true)

  curr_774 = local.end_of_code_774 ? null : {
    code = substr(var.code, local.iter_773.code_ptr, 1)
    input = substr(var.code, local.iter_773.code_ptr, 1) == "," ? substr(local.iter_773.input, 0, 1) : null
  }

  iter_774 = local.end_of_code_774 ? local.iter_773 : {
    input = (local.curr_774.code == ","
      ? substr(local.iter_773.input, 1, -1)
      : local.iter_773.input)

    output = (local.curr_774.code == "."
      ? "${local.iter_773.output}${jsondecode(format("\"\\u%04x\"", local.iter_773.tape[local.iter_773.tape_ptr]))}"
      : local.iter_773.output)
    
    tape = (
      local.curr_774.code == "+"
        ? [for i, b in local.iter_773.tape : (i == local.iter_773.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_774.code == "-"
        ? [for i, b in local.iter_773.tape : (i == local.iter_773.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_774.code == ","
        ? [for i, b in local.iter_773.tape : (i == local.iter_773.tape_ptr ? local.ascii_lookup[local.curr_774.input] : b)]
        : local.iter_773.tape)

    tape_ptr = (
      local.curr_774.code == "<"
        ? local.iter_773.tape_ptr == 0 ? length(local.iter_773.tape) - 1 : local.iter_773.tape_ptr - 1 :
      local.curr_774.code == ">"
        ? local.iter_773.tape_ptr == length(local.iter_773.tape) - 1 ? 0 : local.iter_773.tape_ptr + 1
        : local.iter_773.tape_ptr)

    code_ptr = 1 + (
      local.curr_774.code == "["
        ? local.iter_773.tape[local.iter_773.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_773.code_ptr)] : local.iter_773.code_ptr :
      local.curr_774.code == "]"
        ? local.iter_773.tape[local.iter_773.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_773.code_ptr)] : local.iter_773.code_ptr
        : local.iter_773.code_ptr)

    steps_taken = 1 + local.iter_773.steps_taken
  }
}

locals {
  end_of_code_775 = try(local.iter_774.code_ptr >= length(var.code), true)

  curr_775 = local.end_of_code_775 ? null : {
    code = substr(var.code, local.iter_774.code_ptr, 1)
    input = substr(var.code, local.iter_774.code_ptr, 1) == "," ? substr(local.iter_774.input, 0, 1) : null
  }

  iter_775 = local.end_of_code_775 ? local.iter_774 : {
    input = (local.curr_775.code == ","
      ? substr(local.iter_774.input, 1, -1)
      : local.iter_774.input)

    output = (local.curr_775.code == "."
      ? "${local.iter_774.output}${jsondecode(format("\"\\u%04x\"", local.iter_774.tape[local.iter_774.tape_ptr]))}"
      : local.iter_774.output)
    
    tape = (
      local.curr_775.code == "+"
        ? [for i, b in local.iter_774.tape : (i == local.iter_774.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_775.code == "-"
        ? [for i, b in local.iter_774.tape : (i == local.iter_774.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_775.code == ","
        ? [for i, b in local.iter_774.tape : (i == local.iter_774.tape_ptr ? local.ascii_lookup[local.curr_775.input] : b)]
        : local.iter_774.tape)

    tape_ptr = (
      local.curr_775.code == "<"
        ? local.iter_774.tape_ptr == 0 ? length(local.iter_774.tape) - 1 : local.iter_774.tape_ptr - 1 :
      local.curr_775.code == ">"
        ? local.iter_774.tape_ptr == length(local.iter_774.tape) - 1 ? 0 : local.iter_774.tape_ptr + 1
        : local.iter_774.tape_ptr)

    code_ptr = 1 + (
      local.curr_775.code == "["
        ? local.iter_774.tape[local.iter_774.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_774.code_ptr)] : local.iter_774.code_ptr :
      local.curr_775.code == "]"
        ? local.iter_774.tape[local.iter_774.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_774.code_ptr)] : local.iter_774.code_ptr
        : local.iter_774.code_ptr)

    steps_taken = 1 + local.iter_774.steps_taken
  }
}

locals {
  end_of_code_776 = try(local.iter_775.code_ptr >= length(var.code), true)

  curr_776 = local.end_of_code_776 ? null : {
    code = substr(var.code, local.iter_775.code_ptr, 1)
    input = substr(var.code, local.iter_775.code_ptr, 1) == "," ? substr(local.iter_775.input, 0, 1) : null
  }

  iter_776 = local.end_of_code_776 ? local.iter_775 : {
    input = (local.curr_776.code == ","
      ? substr(local.iter_775.input, 1, -1)
      : local.iter_775.input)

    output = (local.curr_776.code == "."
      ? "${local.iter_775.output}${jsondecode(format("\"\\u%04x\"", local.iter_775.tape[local.iter_775.tape_ptr]))}"
      : local.iter_775.output)
    
    tape = (
      local.curr_776.code == "+"
        ? [for i, b in local.iter_775.tape : (i == local.iter_775.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_776.code == "-"
        ? [for i, b in local.iter_775.tape : (i == local.iter_775.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_776.code == ","
        ? [for i, b in local.iter_775.tape : (i == local.iter_775.tape_ptr ? local.ascii_lookup[local.curr_776.input] : b)]
        : local.iter_775.tape)

    tape_ptr = (
      local.curr_776.code == "<"
        ? local.iter_775.tape_ptr == 0 ? length(local.iter_775.tape) - 1 : local.iter_775.tape_ptr - 1 :
      local.curr_776.code == ">"
        ? local.iter_775.tape_ptr == length(local.iter_775.tape) - 1 ? 0 : local.iter_775.tape_ptr + 1
        : local.iter_775.tape_ptr)

    code_ptr = 1 + (
      local.curr_776.code == "["
        ? local.iter_775.tape[local.iter_775.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_775.code_ptr)] : local.iter_775.code_ptr :
      local.curr_776.code == "]"
        ? local.iter_775.tape[local.iter_775.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_775.code_ptr)] : local.iter_775.code_ptr
        : local.iter_775.code_ptr)

    steps_taken = 1 + local.iter_775.steps_taken
  }
}

locals {
  end_of_code_777 = try(local.iter_776.code_ptr >= length(var.code), true)

  curr_777 = local.end_of_code_777 ? null : {
    code = substr(var.code, local.iter_776.code_ptr, 1)
    input = substr(var.code, local.iter_776.code_ptr, 1) == "," ? substr(local.iter_776.input, 0, 1) : null
  }

  iter_777 = local.end_of_code_777 ? local.iter_776 : {
    input = (local.curr_777.code == ","
      ? substr(local.iter_776.input, 1, -1)
      : local.iter_776.input)

    output = (local.curr_777.code == "."
      ? "${local.iter_776.output}${jsondecode(format("\"\\u%04x\"", local.iter_776.tape[local.iter_776.tape_ptr]))}"
      : local.iter_776.output)
    
    tape = (
      local.curr_777.code == "+"
        ? [for i, b in local.iter_776.tape : (i == local.iter_776.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_777.code == "-"
        ? [for i, b in local.iter_776.tape : (i == local.iter_776.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_777.code == ","
        ? [for i, b in local.iter_776.tape : (i == local.iter_776.tape_ptr ? local.ascii_lookup[local.curr_777.input] : b)]
        : local.iter_776.tape)

    tape_ptr = (
      local.curr_777.code == "<"
        ? local.iter_776.tape_ptr == 0 ? length(local.iter_776.tape) - 1 : local.iter_776.tape_ptr - 1 :
      local.curr_777.code == ">"
        ? local.iter_776.tape_ptr == length(local.iter_776.tape) - 1 ? 0 : local.iter_776.tape_ptr + 1
        : local.iter_776.tape_ptr)

    code_ptr = 1 + (
      local.curr_777.code == "["
        ? local.iter_776.tape[local.iter_776.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_776.code_ptr)] : local.iter_776.code_ptr :
      local.curr_777.code == "]"
        ? local.iter_776.tape[local.iter_776.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_776.code_ptr)] : local.iter_776.code_ptr
        : local.iter_776.code_ptr)

    steps_taken = 1 + local.iter_776.steps_taken
  }
}

locals {
  end_of_code_778 = try(local.iter_777.code_ptr >= length(var.code), true)

  curr_778 = local.end_of_code_778 ? null : {
    code = substr(var.code, local.iter_777.code_ptr, 1)
    input = substr(var.code, local.iter_777.code_ptr, 1) == "," ? substr(local.iter_777.input, 0, 1) : null
  }

  iter_778 = local.end_of_code_778 ? local.iter_777 : {
    input = (local.curr_778.code == ","
      ? substr(local.iter_777.input, 1, -1)
      : local.iter_777.input)

    output = (local.curr_778.code == "."
      ? "${local.iter_777.output}${jsondecode(format("\"\\u%04x\"", local.iter_777.tape[local.iter_777.tape_ptr]))}"
      : local.iter_777.output)
    
    tape = (
      local.curr_778.code == "+"
        ? [for i, b in local.iter_777.tape : (i == local.iter_777.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_778.code == "-"
        ? [for i, b in local.iter_777.tape : (i == local.iter_777.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_778.code == ","
        ? [for i, b in local.iter_777.tape : (i == local.iter_777.tape_ptr ? local.ascii_lookup[local.curr_778.input] : b)]
        : local.iter_777.tape)

    tape_ptr = (
      local.curr_778.code == "<"
        ? local.iter_777.tape_ptr == 0 ? length(local.iter_777.tape) - 1 : local.iter_777.tape_ptr - 1 :
      local.curr_778.code == ">"
        ? local.iter_777.tape_ptr == length(local.iter_777.tape) - 1 ? 0 : local.iter_777.tape_ptr + 1
        : local.iter_777.tape_ptr)

    code_ptr = 1 + (
      local.curr_778.code == "["
        ? local.iter_777.tape[local.iter_777.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_777.code_ptr)] : local.iter_777.code_ptr :
      local.curr_778.code == "]"
        ? local.iter_777.tape[local.iter_777.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_777.code_ptr)] : local.iter_777.code_ptr
        : local.iter_777.code_ptr)

    steps_taken = 1 + local.iter_777.steps_taken
  }
}

locals {
  end_of_code_779 = try(local.iter_778.code_ptr >= length(var.code), true)

  curr_779 = local.end_of_code_779 ? null : {
    code = substr(var.code, local.iter_778.code_ptr, 1)
    input = substr(var.code, local.iter_778.code_ptr, 1) == "," ? substr(local.iter_778.input, 0, 1) : null
  }

  iter_779 = local.end_of_code_779 ? local.iter_778 : {
    input = (local.curr_779.code == ","
      ? substr(local.iter_778.input, 1, -1)
      : local.iter_778.input)

    output = (local.curr_779.code == "."
      ? "${local.iter_778.output}${jsondecode(format("\"\\u%04x\"", local.iter_778.tape[local.iter_778.tape_ptr]))}"
      : local.iter_778.output)
    
    tape = (
      local.curr_779.code == "+"
        ? [for i, b in local.iter_778.tape : (i == local.iter_778.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_779.code == "-"
        ? [for i, b in local.iter_778.tape : (i == local.iter_778.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_779.code == ","
        ? [for i, b in local.iter_778.tape : (i == local.iter_778.tape_ptr ? local.ascii_lookup[local.curr_779.input] : b)]
        : local.iter_778.tape)

    tape_ptr = (
      local.curr_779.code == "<"
        ? local.iter_778.tape_ptr == 0 ? length(local.iter_778.tape) - 1 : local.iter_778.tape_ptr - 1 :
      local.curr_779.code == ">"
        ? local.iter_778.tape_ptr == length(local.iter_778.tape) - 1 ? 0 : local.iter_778.tape_ptr + 1
        : local.iter_778.tape_ptr)

    code_ptr = 1 + (
      local.curr_779.code == "["
        ? local.iter_778.tape[local.iter_778.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_778.code_ptr)] : local.iter_778.code_ptr :
      local.curr_779.code == "]"
        ? local.iter_778.tape[local.iter_778.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_778.code_ptr)] : local.iter_778.code_ptr
        : local.iter_778.code_ptr)

    steps_taken = 1 + local.iter_778.steps_taken
  }
}

locals {
  end_of_code_780 = try(local.iter_779.code_ptr >= length(var.code), true)

  curr_780 = local.end_of_code_780 ? null : {
    code = substr(var.code, local.iter_779.code_ptr, 1)
    input = substr(var.code, local.iter_779.code_ptr, 1) == "," ? substr(local.iter_779.input, 0, 1) : null
  }

  iter_780 = local.end_of_code_780 ? local.iter_779 : {
    input = (local.curr_780.code == ","
      ? substr(local.iter_779.input, 1, -1)
      : local.iter_779.input)

    output = (local.curr_780.code == "."
      ? "${local.iter_779.output}${jsondecode(format("\"\\u%04x\"", local.iter_779.tape[local.iter_779.tape_ptr]))}"
      : local.iter_779.output)
    
    tape = (
      local.curr_780.code == "+"
        ? [for i, b in local.iter_779.tape : (i == local.iter_779.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_780.code == "-"
        ? [for i, b in local.iter_779.tape : (i == local.iter_779.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_780.code == ","
        ? [for i, b in local.iter_779.tape : (i == local.iter_779.tape_ptr ? local.ascii_lookup[local.curr_780.input] : b)]
        : local.iter_779.tape)

    tape_ptr = (
      local.curr_780.code == "<"
        ? local.iter_779.tape_ptr == 0 ? length(local.iter_779.tape) - 1 : local.iter_779.tape_ptr - 1 :
      local.curr_780.code == ">"
        ? local.iter_779.tape_ptr == length(local.iter_779.tape) - 1 ? 0 : local.iter_779.tape_ptr + 1
        : local.iter_779.tape_ptr)

    code_ptr = 1 + (
      local.curr_780.code == "["
        ? local.iter_779.tape[local.iter_779.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_779.code_ptr)] : local.iter_779.code_ptr :
      local.curr_780.code == "]"
        ? local.iter_779.tape[local.iter_779.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_779.code_ptr)] : local.iter_779.code_ptr
        : local.iter_779.code_ptr)

    steps_taken = 1 + local.iter_779.steps_taken
  }
}

locals {
  end_of_code_781 = try(local.iter_780.code_ptr >= length(var.code), true)

  curr_781 = local.end_of_code_781 ? null : {
    code = substr(var.code, local.iter_780.code_ptr, 1)
    input = substr(var.code, local.iter_780.code_ptr, 1) == "," ? substr(local.iter_780.input, 0, 1) : null
  }

  iter_781 = local.end_of_code_781 ? local.iter_780 : {
    input = (local.curr_781.code == ","
      ? substr(local.iter_780.input, 1, -1)
      : local.iter_780.input)

    output = (local.curr_781.code == "."
      ? "${local.iter_780.output}${jsondecode(format("\"\\u%04x\"", local.iter_780.tape[local.iter_780.tape_ptr]))}"
      : local.iter_780.output)
    
    tape = (
      local.curr_781.code == "+"
        ? [for i, b in local.iter_780.tape : (i == local.iter_780.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_781.code == "-"
        ? [for i, b in local.iter_780.tape : (i == local.iter_780.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_781.code == ","
        ? [for i, b in local.iter_780.tape : (i == local.iter_780.tape_ptr ? local.ascii_lookup[local.curr_781.input] : b)]
        : local.iter_780.tape)

    tape_ptr = (
      local.curr_781.code == "<"
        ? local.iter_780.tape_ptr == 0 ? length(local.iter_780.tape) - 1 : local.iter_780.tape_ptr - 1 :
      local.curr_781.code == ">"
        ? local.iter_780.tape_ptr == length(local.iter_780.tape) - 1 ? 0 : local.iter_780.tape_ptr + 1
        : local.iter_780.tape_ptr)

    code_ptr = 1 + (
      local.curr_781.code == "["
        ? local.iter_780.tape[local.iter_780.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_780.code_ptr)] : local.iter_780.code_ptr :
      local.curr_781.code == "]"
        ? local.iter_780.tape[local.iter_780.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_780.code_ptr)] : local.iter_780.code_ptr
        : local.iter_780.code_ptr)

    steps_taken = 1 + local.iter_780.steps_taken
  }
}

locals {
  end_of_code_782 = try(local.iter_781.code_ptr >= length(var.code), true)

  curr_782 = local.end_of_code_782 ? null : {
    code = substr(var.code, local.iter_781.code_ptr, 1)
    input = substr(var.code, local.iter_781.code_ptr, 1) == "," ? substr(local.iter_781.input, 0, 1) : null
  }

  iter_782 = local.end_of_code_782 ? local.iter_781 : {
    input = (local.curr_782.code == ","
      ? substr(local.iter_781.input, 1, -1)
      : local.iter_781.input)

    output = (local.curr_782.code == "."
      ? "${local.iter_781.output}${jsondecode(format("\"\\u%04x\"", local.iter_781.tape[local.iter_781.tape_ptr]))}"
      : local.iter_781.output)
    
    tape = (
      local.curr_782.code == "+"
        ? [for i, b in local.iter_781.tape : (i == local.iter_781.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_782.code == "-"
        ? [for i, b in local.iter_781.tape : (i == local.iter_781.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_782.code == ","
        ? [for i, b in local.iter_781.tape : (i == local.iter_781.tape_ptr ? local.ascii_lookup[local.curr_782.input] : b)]
        : local.iter_781.tape)

    tape_ptr = (
      local.curr_782.code == "<"
        ? local.iter_781.tape_ptr == 0 ? length(local.iter_781.tape) - 1 : local.iter_781.tape_ptr - 1 :
      local.curr_782.code == ">"
        ? local.iter_781.tape_ptr == length(local.iter_781.tape) - 1 ? 0 : local.iter_781.tape_ptr + 1
        : local.iter_781.tape_ptr)

    code_ptr = 1 + (
      local.curr_782.code == "["
        ? local.iter_781.tape[local.iter_781.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_781.code_ptr)] : local.iter_781.code_ptr :
      local.curr_782.code == "]"
        ? local.iter_781.tape[local.iter_781.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_781.code_ptr)] : local.iter_781.code_ptr
        : local.iter_781.code_ptr)

    steps_taken = 1 + local.iter_781.steps_taken
  }
}

locals {
  end_of_code_783 = try(local.iter_782.code_ptr >= length(var.code), true)

  curr_783 = local.end_of_code_783 ? null : {
    code = substr(var.code, local.iter_782.code_ptr, 1)
    input = substr(var.code, local.iter_782.code_ptr, 1) == "," ? substr(local.iter_782.input, 0, 1) : null
  }

  iter_783 = local.end_of_code_783 ? local.iter_782 : {
    input = (local.curr_783.code == ","
      ? substr(local.iter_782.input, 1, -1)
      : local.iter_782.input)

    output = (local.curr_783.code == "."
      ? "${local.iter_782.output}${jsondecode(format("\"\\u%04x\"", local.iter_782.tape[local.iter_782.tape_ptr]))}"
      : local.iter_782.output)
    
    tape = (
      local.curr_783.code == "+"
        ? [for i, b in local.iter_782.tape : (i == local.iter_782.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_783.code == "-"
        ? [for i, b in local.iter_782.tape : (i == local.iter_782.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_783.code == ","
        ? [for i, b in local.iter_782.tape : (i == local.iter_782.tape_ptr ? local.ascii_lookup[local.curr_783.input] : b)]
        : local.iter_782.tape)

    tape_ptr = (
      local.curr_783.code == "<"
        ? local.iter_782.tape_ptr == 0 ? length(local.iter_782.tape) - 1 : local.iter_782.tape_ptr - 1 :
      local.curr_783.code == ">"
        ? local.iter_782.tape_ptr == length(local.iter_782.tape) - 1 ? 0 : local.iter_782.tape_ptr + 1
        : local.iter_782.tape_ptr)

    code_ptr = 1 + (
      local.curr_783.code == "["
        ? local.iter_782.tape[local.iter_782.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_782.code_ptr)] : local.iter_782.code_ptr :
      local.curr_783.code == "]"
        ? local.iter_782.tape[local.iter_782.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_782.code_ptr)] : local.iter_782.code_ptr
        : local.iter_782.code_ptr)

    steps_taken = 1 + local.iter_782.steps_taken
  }
}

locals {
  end_of_code_784 = try(local.iter_783.code_ptr >= length(var.code), true)

  curr_784 = local.end_of_code_784 ? null : {
    code = substr(var.code, local.iter_783.code_ptr, 1)
    input = substr(var.code, local.iter_783.code_ptr, 1) == "," ? substr(local.iter_783.input, 0, 1) : null
  }

  iter_784 = local.end_of_code_784 ? local.iter_783 : {
    input = (local.curr_784.code == ","
      ? substr(local.iter_783.input, 1, -1)
      : local.iter_783.input)

    output = (local.curr_784.code == "."
      ? "${local.iter_783.output}${jsondecode(format("\"\\u%04x\"", local.iter_783.tape[local.iter_783.tape_ptr]))}"
      : local.iter_783.output)
    
    tape = (
      local.curr_784.code == "+"
        ? [for i, b in local.iter_783.tape : (i == local.iter_783.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_784.code == "-"
        ? [for i, b in local.iter_783.tape : (i == local.iter_783.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_784.code == ","
        ? [for i, b in local.iter_783.tape : (i == local.iter_783.tape_ptr ? local.ascii_lookup[local.curr_784.input] : b)]
        : local.iter_783.tape)

    tape_ptr = (
      local.curr_784.code == "<"
        ? local.iter_783.tape_ptr == 0 ? length(local.iter_783.tape) - 1 : local.iter_783.tape_ptr - 1 :
      local.curr_784.code == ">"
        ? local.iter_783.tape_ptr == length(local.iter_783.tape) - 1 ? 0 : local.iter_783.tape_ptr + 1
        : local.iter_783.tape_ptr)

    code_ptr = 1 + (
      local.curr_784.code == "["
        ? local.iter_783.tape[local.iter_783.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_783.code_ptr)] : local.iter_783.code_ptr :
      local.curr_784.code == "]"
        ? local.iter_783.tape[local.iter_783.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_783.code_ptr)] : local.iter_783.code_ptr
        : local.iter_783.code_ptr)

    steps_taken = 1 + local.iter_783.steps_taken
  }
}

locals {
  end_of_code_785 = try(local.iter_784.code_ptr >= length(var.code), true)

  curr_785 = local.end_of_code_785 ? null : {
    code = substr(var.code, local.iter_784.code_ptr, 1)
    input = substr(var.code, local.iter_784.code_ptr, 1) == "," ? substr(local.iter_784.input, 0, 1) : null
  }

  iter_785 = local.end_of_code_785 ? local.iter_784 : {
    input = (local.curr_785.code == ","
      ? substr(local.iter_784.input, 1, -1)
      : local.iter_784.input)

    output = (local.curr_785.code == "."
      ? "${local.iter_784.output}${jsondecode(format("\"\\u%04x\"", local.iter_784.tape[local.iter_784.tape_ptr]))}"
      : local.iter_784.output)
    
    tape = (
      local.curr_785.code == "+"
        ? [for i, b in local.iter_784.tape : (i == local.iter_784.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_785.code == "-"
        ? [for i, b in local.iter_784.tape : (i == local.iter_784.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_785.code == ","
        ? [for i, b in local.iter_784.tape : (i == local.iter_784.tape_ptr ? local.ascii_lookup[local.curr_785.input] : b)]
        : local.iter_784.tape)

    tape_ptr = (
      local.curr_785.code == "<"
        ? local.iter_784.tape_ptr == 0 ? length(local.iter_784.tape) - 1 : local.iter_784.tape_ptr - 1 :
      local.curr_785.code == ">"
        ? local.iter_784.tape_ptr == length(local.iter_784.tape) - 1 ? 0 : local.iter_784.tape_ptr + 1
        : local.iter_784.tape_ptr)

    code_ptr = 1 + (
      local.curr_785.code == "["
        ? local.iter_784.tape[local.iter_784.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_784.code_ptr)] : local.iter_784.code_ptr :
      local.curr_785.code == "]"
        ? local.iter_784.tape[local.iter_784.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_784.code_ptr)] : local.iter_784.code_ptr
        : local.iter_784.code_ptr)

    steps_taken = 1 + local.iter_784.steps_taken
  }
}

locals {
  end_of_code_786 = try(local.iter_785.code_ptr >= length(var.code), true)

  curr_786 = local.end_of_code_786 ? null : {
    code = substr(var.code, local.iter_785.code_ptr, 1)
    input = substr(var.code, local.iter_785.code_ptr, 1) == "," ? substr(local.iter_785.input, 0, 1) : null
  }

  iter_786 = local.end_of_code_786 ? local.iter_785 : {
    input = (local.curr_786.code == ","
      ? substr(local.iter_785.input, 1, -1)
      : local.iter_785.input)

    output = (local.curr_786.code == "."
      ? "${local.iter_785.output}${jsondecode(format("\"\\u%04x\"", local.iter_785.tape[local.iter_785.tape_ptr]))}"
      : local.iter_785.output)
    
    tape = (
      local.curr_786.code == "+"
        ? [for i, b in local.iter_785.tape : (i == local.iter_785.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_786.code == "-"
        ? [for i, b in local.iter_785.tape : (i == local.iter_785.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_786.code == ","
        ? [for i, b in local.iter_785.tape : (i == local.iter_785.tape_ptr ? local.ascii_lookup[local.curr_786.input] : b)]
        : local.iter_785.tape)

    tape_ptr = (
      local.curr_786.code == "<"
        ? local.iter_785.tape_ptr == 0 ? length(local.iter_785.tape) - 1 : local.iter_785.tape_ptr - 1 :
      local.curr_786.code == ">"
        ? local.iter_785.tape_ptr == length(local.iter_785.tape) - 1 ? 0 : local.iter_785.tape_ptr + 1
        : local.iter_785.tape_ptr)

    code_ptr = 1 + (
      local.curr_786.code == "["
        ? local.iter_785.tape[local.iter_785.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_785.code_ptr)] : local.iter_785.code_ptr :
      local.curr_786.code == "]"
        ? local.iter_785.tape[local.iter_785.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_785.code_ptr)] : local.iter_785.code_ptr
        : local.iter_785.code_ptr)

    steps_taken = 1 + local.iter_785.steps_taken
  }
}

locals {
  end_of_code_787 = try(local.iter_786.code_ptr >= length(var.code), true)

  curr_787 = local.end_of_code_787 ? null : {
    code = substr(var.code, local.iter_786.code_ptr, 1)
    input = substr(var.code, local.iter_786.code_ptr, 1) == "," ? substr(local.iter_786.input, 0, 1) : null
  }

  iter_787 = local.end_of_code_787 ? local.iter_786 : {
    input = (local.curr_787.code == ","
      ? substr(local.iter_786.input, 1, -1)
      : local.iter_786.input)

    output = (local.curr_787.code == "."
      ? "${local.iter_786.output}${jsondecode(format("\"\\u%04x\"", local.iter_786.tape[local.iter_786.tape_ptr]))}"
      : local.iter_786.output)
    
    tape = (
      local.curr_787.code == "+"
        ? [for i, b in local.iter_786.tape : (i == local.iter_786.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_787.code == "-"
        ? [for i, b in local.iter_786.tape : (i == local.iter_786.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_787.code == ","
        ? [for i, b in local.iter_786.tape : (i == local.iter_786.tape_ptr ? local.ascii_lookup[local.curr_787.input] : b)]
        : local.iter_786.tape)

    tape_ptr = (
      local.curr_787.code == "<"
        ? local.iter_786.tape_ptr == 0 ? length(local.iter_786.tape) - 1 : local.iter_786.tape_ptr - 1 :
      local.curr_787.code == ">"
        ? local.iter_786.tape_ptr == length(local.iter_786.tape) - 1 ? 0 : local.iter_786.tape_ptr + 1
        : local.iter_786.tape_ptr)

    code_ptr = 1 + (
      local.curr_787.code == "["
        ? local.iter_786.tape[local.iter_786.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_786.code_ptr)] : local.iter_786.code_ptr :
      local.curr_787.code == "]"
        ? local.iter_786.tape[local.iter_786.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_786.code_ptr)] : local.iter_786.code_ptr
        : local.iter_786.code_ptr)

    steps_taken = 1 + local.iter_786.steps_taken
  }
}

locals {
  end_of_code_788 = try(local.iter_787.code_ptr >= length(var.code), true)

  curr_788 = local.end_of_code_788 ? null : {
    code = substr(var.code, local.iter_787.code_ptr, 1)
    input = substr(var.code, local.iter_787.code_ptr, 1) == "," ? substr(local.iter_787.input, 0, 1) : null
  }

  iter_788 = local.end_of_code_788 ? local.iter_787 : {
    input = (local.curr_788.code == ","
      ? substr(local.iter_787.input, 1, -1)
      : local.iter_787.input)

    output = (local.curr_788.code == "."
      ? "${local.iter_787.output}${jsondecode(format("\"\\u%04x\"", local.iter_787.tape[local.iter_787.tape_ptr]))}"
      : local.iter_787.output)
    
    tape = (
      local.curr_788.code == "+"
        ? [for i, b in local.iter_787.tape : (i == local.iter_787.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_788.code == "-"
        ? [for i, b in local.iter_787.tape : (i == local.iter_787.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_788.code == ","
        ? [for i, b in local.iter_787.tape : (i == local.iter_787.tape_ptr ? local.ascii_lookup[local.curr_788.input] : b)]
        : local.iter_787.tape)

    tape_ptr = (
      local.curr_788.code == "<"
        ? local.iter_787.tape_ptr == 0 ? length(local.iter_787.tape) - 1 : local.iter_787.tape_ptr - 1 :
      local.curr_788.code == ">"
        ? local.iter_787.tape_ptr == length(local.iter_787.tape) - 1 ? 0 : local.iter_787.tape_ptr + 1
        : local.iter_787.tape_ptr)

    code_ptr = 1 + (
      local.curr_788.code == "["
        ? local.iter_787.tape[local.iter_787.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_787.code_ptr)] : local.iter_787.code_ptr :
      local.curr_788.code == "]"
        ? local.iter_787.tape[local.iter_787.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_787.code_ptr)] : local.iter_787.code_ptr
        : local.iter_787.code_ptr)

    steps_taken = 1 + local.iter_787.steps_taken
  }
}

locals {
  end_of_code_789 = try(local.iter_788.code_ptr >= length(var.code), true)

  curr_789 = local.end_of_code_789 ? null : {
    code = substr(var.code, local.iter_788.code_ptr, 1)
    input = substr(var.code, local.iter_788.code_ptr, 1) == "," ? substr(local.iter_788.input, 0, 1) : null
  }

  iter_789 = local.end_of_code_789 ? local.iter_788 : {
    input = (local.curr_789.code == ","
      ? substr(local.iter_788.input, 1, -1)
      : local.iter_788.input)

    output = (local.curr_789.code == "."
      ? "${local.iter_788.output}${jsondecode(format("\"\\u%04x\"", local.iter_788.tape[local.iter_788.tape_ptr]))}"
      : local.iter_788.output)
    
    tape = (
      local.curr_789.code == "+"
        ? [for i, b in local.iter_788.tape : (i == local.iter_788.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_789.code == "-"
        ? [for i, b in local.iter_788.tape : (i == local.iter_788.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_789.code == ","
        ? [for i, b in local.iter_788.tape : (i == local.iter_788.tape_ptr ? local.ascii_lookup[local.curr_789.input] : b)]
        : local.iter_788.tape)

    tape_ptr = (
      local.curr_789.code == "<"
        ? local.iter_788.tape_ptr == 0 ? length(local.iter_788.tape) - 1 : local.iter_788.tape_ptr - 1 :
      local.curr_789.code == ">"
        ? local.iter_788.tape_ptr == length(local.iter_788.tape) - 1 ? 0 : local.iter_788.tape_ptr + 1
        : local.iter_788.tape_ptr)

    code_ptr = 1 + (
      local.curr_789.code == "["
        ? local.iter_788.tape[local.iter_788.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_788.code_ptr)] : local.iter_788.code_ptr :
      local.curr_789.code == "]"
        ? local.iter_788.tape[local.iter_788.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_788.code_ptr)] : local.iter_788.code_ptr
        : local.iter_788.code_ptr)

    steps_taken = 1 + local.iter_788.steps_taken
  }
}

locals {
  end_of_code_790 = try(local.iter_789.code_ptr >= length(var.code), true)

  curr_790 = local.end_of_code_790 ? null : {
    code = substr(var.code, local.iter_789.code_ptr, 1)
    input = substr(var.code, local.iter_789.code_ptr, 1) == "," ? substr(local.iter_789.input, 0, 1) : null
  }

  iter_790 = local.end_of_code_790 ? local.iter_789 : {
    input = (local.curr_790.code == ","
      ? substr(local.iter_789.input, 1, -1)
      : local.iter_789.input)

    output = (local.curr_790.code == "."
      ? "${local.iter_789.output}${jsondecode(format("\"\\u%04x\"", local.iter_789.tape[local.iter_789.tape_ptr]))}"
      : local.iter_789.output)
    
    tape = (
      local.curr_790.code == "+"
        ? [for i, b in local.iter_789.tape : (i == local.iter_789.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_790.code == "-"
        ? [for i, b in local.iter_789.tape : (i == local.iter_789.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_790.code == ","
        ? [for i, b in local.iter_789.tape : (i == local.iter_789.tape_ptr ? local.ascii_lookup[local.curr_790.input] : b)]
        : local.iter_789.tape)

    tape_ptr = (
      local.curr_790.code == "<"
        ? local.iter_789.tape_ptr == 0 ? length(local.iter_789.tape) - 1 : local.iter_789.tape_ptr - 1 :
      local.curr_790.code == ">"
        ? local.iter_789.tape_ptr == length(local.iter_789.tape) - 1 ? 0 : local.iter_789.tape_ptr + 1
        : local.iter_789.tape_ptr)

    code_ptr = 1 + (
      local.curr_790.code == "["
        ? local.iter_789.tape[local.iter_789.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_789.code_ptr)] : local.iter_789.code_ptr :
      local.curr_790.code == "]"
        ? local.iter_789.tape[local.iter_789.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_789.code_ptr)] : local.iter_789.code_ptr
        : local.iter_789.code_ptr)

    steps_taken = 1 + local.iter_789.steps_taken
  }
}

locals {
  end_of_code_791 = try(local.iter_790.code_ptr >= length(var.code), true)

  curr_791 = local.end_of_code_791 ? null : {
    code = substr(var.code, local.iter_790.code_ptr, 1)
    input = substr(var.code, local.iter_790.code_ptr, 1) == "," ? substr(local.iter_790.input, 0, 1) : null
  }

  iter_791 = local.end_of_code_791 ? local.iter_790 : {
    input = (local.curr_791.code == ","
      ? substr(local.iter_790.input, 1, -1)
      : local.iter_790.input)

    output = (local.curr_791.code == "."
      ? "${local.iter_790.output}${jsondecode(format("\"\\u%04x\"", local.iter_790.tape[local.iter_790.tape_ptr]))}"
      : local.iter_790.output)
    
    tape = (
      local.curr_791.code == "+"
        ? [for i, b in local.iter_790.tape : (i == local.iter_790.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_791.code == "-"
        ? [for i, b in local.iter_790.tape : (i == local.iter_790.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_791.code == ","
        ? [for i, b in local.iter_790.tape : (i == local.iter_790.tape_ptr ? local.ascii_lookup[local.curr_791.input] : b)]
        : local.iter_790.tape)

    tape_ptr = (
      local.curr_791.code == "<"
        ? local.iter_790.tape_ptr == 0 ? length(local.iter_790.tape) - 1 : local.iter_790.tape_ptr - 1 :
      local.curr_791.code == ">"
        ? local.iter_790.tape_ptr == length(local.iter_790.tape) - 1 ? 0 : local.iter_790.tape_ptr + 1
        : local.iter_790.tape_ptr)

    code_ptr = 1 + (
      local.curr_791.code == "["
        ? local.iter_790.tape[local.iter_790.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_790.code_ptr)] : local.iter_790.code_ptr :
      local.curr_791.code == "]"
        ? local.iter_790.tape[local.iter_790.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_790.code_ptr)] : local.iter_790.code_ptr
        : local.iter_790.code_ptr)

    steps_taken = 1 + local.iter_790.steps_taken
  }
}

locals {
  end_of_code_792 = try(local.iter_791.code_ptr >= length(var.code), true)

  curr_792 = local.end_of_code_792 ? null : {
    code = substr(var.code, local.iter_791.code_ptr, 1)
    input = substr(var.code, local.iter_791.code_ptr, 1) == "," ? substr(local.iter_791.input, 0, 1) : null
  }

  iter_792 = local.end_of_code_792 ? local.iter_791 : {
    input = (local.curr_792.code == ","
      ? substr(local.iter_791.input, 1, -1)
      : local.iter_791.input)

    output = (local.curr_792.code == "."
      ? "${local.iter_791.output}${jsondecode(format("\"\\u%04x\"", local.iter_791.tape[local.iter_791.tape_ptr]))}"
      : local.iter_791.output)
    
    tape = (
      local.curr_792.code == "+"
        ? [for i, b in local.iter_791.tape : (i == local.iter_791.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_792.code == "-"
        ? [for i, b in local.iter_791.tape : (i == local.iter_791.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_792.code == ","
        ? [for i, b in local.iter_791.tape : (i == local.iter_791.tape_ptr ? local.ascii_lookup[local.curr_792.input] : b)]
        : local.iter_791.tape)

    tape_ptr = (
      local.curr_792.code == "<"
        ? local.iter_791.tape_ptr == 0 ? length(local.iter_791.tape) - 1 : local.iter_791.tape_ptr - 1 :
      local.curr_792.code == ">"
        ? local.iter_791.tape_ptr == length(local.iter_791.tape) - 1 ? 0 : local.iter_791.tape_ptr + 1
        : local.iter_791.tape_ptr)

    code_ptr = 1 + (
      local.curr_792.code == "["
        ? local.iter_791.tape[local.iter_791.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_791.code_ptr)] : local.iter_791.code_ptr :
      local.curr_792.code == "]"
        ? local.iter_791.tape[local.iter_791.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_791.code_ptr)] : local.iter_791.code_ptr
        : local.iter_791.code_ptr)

    steps_taken = 1 + local.iter_791.steps_taken
  }
}

locals {
  end_of_code_793 = try(local.iter_792.code_ptr >= length(var.code), true)

  curr_793 = local.end_of_code_793 ? null : {
    code = substr(var.code, local.iter_792.code_ptr, 1)
    input = substr(var.code, local.iter_792.code_ptr, 1) == "," ? substr(local.iter_792.input, 0, 1) : null
  }

  iter_793 = local.end_of_code_793 ? local.iter_792 : {
    input = (local.curr_793.code == ","
      ? substr(local.iter_792.input, 1, -1)
      : local.iter_792.input)

    output = (local.curr_793.code == "."
      ? "${local.iter_792.output}${jsondecode(format("\"\\u%04x\"", local.iter_792.tape[local.iter_792.tape_ptr]))}"
      : local.iter_792.output)
    
    tape = (
      local.curr_793.code == "+"
        ? [for i, b in local.iter_792.tape : (i == local.iter_792.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_793.code == "-"
        ? [for i, b in local.iter_792.tape : (i == local.iter_792.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_793.code == ","
        ? [for i, b in local.iter_792.tape : (i == local.iter_792.tape_ptr ? local.ascii_lookup[local.curr_793.input] : b)]
        : local.iter_792.tape)

    tape_ptr = (
      local.curr_793.code == "<"
        ? local.iter_792.tape_ptr == 0 ? length(local.iter_792.tape) - 1 : local.iter_792.tape_ptr - 1 :
      local.curr_793.code == ">"
        ? local.iter_792.tape_ptr == length(local.iter_792.tape) - 1 ? 0 : local.iter_792.tape_ptr + 1
        : local.iter_792.tape_ptr)

    code_ptr = 1 + (
      local.curr_793.code == "["
        ? local.iter_792.tape[local.iter_792.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_792.code_ptr)] : local.iter_792.code_ptr :
      local.curr_793.code == "]"
        ? local.iter_792.tape[local.iter_792.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_792.code_ptr)] : local.iter_792.code_ptr
        : local.iter_792.code_ptr)

    steps_taken = 1 + local.iter_792.steps_taken
  }
}

locals {
  end_of_code_794 = try(local.iter_793.code_ptr >= length(var.code), true)

  curr_794 = local.end_of_code_794 ? null : {
    code = substr(var.code, local.iter_793.code_ptr, 1)
    input = substr(var.code, local.iter_793.code_ptr, 1) == "," ? substr(local.iter_793.input, 0, 1) : null
  }

  iter_794 = local.end_of_code_794 ? local.iter_793 : {
    input = (local.curr_794.code == ","
      ? substr(local.iter_793.input, 1, -1)
      : local.iter_793.input)

    output = (local.curr_794.code == "."
      ? "${local.iter_793.output}${jsondecode(format("\"\\u%04x\"", local.iter_793.tape[local.iter_793.tape_ptr]))}"
      : local.iter_793.output)
    
    tape = (
      local.curr_794.code == "+"
        ? [for i, b in local.iter_793.tape : (i == local.iter_793.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_794.code == "-"
        ? [for i, b in local.iter_793.tape : (i == local.iter_793.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_794.code == ","
        ? [for i, b in local.iter_793.tape : (i == local.iter_793.tape_ptr ? local.ascii_lookup[local.curr_794.input] : b)]
        : local.iter_793.tape)

    tape_ptr = (
      local.curr_794.code == "<"
        ? local.iter_793.tape_ptr == 0 ? length(local.iter_793.tape) - 1 : local.iter_793.tape_ptr - 1 :
      local.curr_794.code == ">"
        ? local.iter_793.tape_ptr == length(local.iter_793.tape) - 1 ? 0 : local.iter_793.tape_ptr + 1
        : local.iter_793.tape_ptr)

    code_ptr = 1 + (
      local.curr_794.code == "["
        ? local.iter_793.tape[local.iter_793.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_793.code_ptr)] : local.iter_793.code_ptr :
      local.curr_794.code == "]"
        ? local.iter_793.tape[local.iter_793.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_793.code_ptr)] : local.iter_793.code_ptr
        : local.iter_793.code_ptr)

    steps_taken = 1 + local.iter_793.steps_taken
  }
}

locals {
  end_of_code_795 = try(local.iter_794.code_ptr >= length(var.code), true)

  curr_795 = local.end_of_code_795 ? null : {
    code = substr(var.code, local.iter_794.code_ptr, 1)
    input = substr(var.code, local.iter_794.code_ptr, 1) == "," ? substr(local.iter_794.input, 0, 1) : null
  }

  iter_795 = local.end_of_code_795 ? local.iter_794 : {
    input = (local.curr_795.code == ","
      ? substr(local.iter_794.input, 1, -1)
      : local.iter_794.input)

    output = (local.curr_795.code == "."
      ? "${local.iter_794.output}${jsondecode(format("\"\\u%04x\"", local.iter_794.tape[local.iter_794.tape_ptr]))}"
      : local.iter_794.output)
    
    tape = (
      local.curr_795.code == "+"
        ? [for i, b in local.iter_794.tape : (i == local.iter_794.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_795.code == "-"
        ? [for i, b in local.iter_794.tape : (i == local.iter_794.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_795.code == ","
        ? [for i, b in local.iter_794.tape : (i == local.iter_794.tape_ptr ? local.ascii_lookup[local.curr_795.input] : b)]
        : local.iter_794.tape)

    tape_ptr = (
      local.curr_795.code == "<"
        ? local.iter_794.tape_ptr == 0 ? length(local.iter_794.tape) - 1 : local.iter_794.tape_ptr - 1 :
      local.curr_795.code == ">"
        ? local.iter_794.tape_ptr == length(local.iter_794.tape) - 1 ? 0 : local.iter_794.tape_ptr + 1
        : local.iter_794.tape_ptr)

    code_ptr = 1 + (
      local.curr_795.code == "["
        ? local.iter_794.tape[local.iter_794.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_794.code_ptr)] : local.iter_794.code_ptr :
      local.curr_795.code == "]"
        ? local.iter_794.tape[local.iter_794.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_794.code_ptr)] : local.iter_794.code_ptr
        : local.iter_794.code_ptr)

    steps_taken = 1 + local.iter_794.steps_taken
  }
}

locals {
  end_of_code_796 = try(local.iter_795.code_ptr >= length(var.code), true)

  curr_796 = local.end_of_code_796 ? null : {
    code = substr(var.code, local.iter_795.code_ptr, 1)
    input = substr(var.code, local.iter_795.code_ptr, 1) == "," ? substr(local.iter_795.input, 0, 1) : null
  }

  iter_796 = local.end_of_code_796 ? local.iter_795 : {
    input = (local.curr_796.code == ","
      ? substr(local.iter_795.input, 1, -1)
      : local.iter_795.input)

    output = (local.curr_796.code == "."
      ? "${local.iter_795.output}${jsondecode(format("\"\\u%04x\"", local.iter_795.tape[local.iter_795.tape_ptr]))}"
      : local.iter_795.output)
    
    tape = (
      local.curr_796.code == "+"
        ? [for i, b in local.iter_795.tape : (i == local.iter_795.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_796.code == "-"
        ? [for i, b in local.iter_795.tape : (i == local.iter_795.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_796.code == ","
        ? [for i, b in local.iter_795.tape : (i == local.iter_795.tape_ptr ? local.ascii_lookup[local.curr_796.input] : b)]
        : local.iter_795.tape)

    tape_ptr = (
      local.curr_796.code == "<"
        ? local.iter_795.tape_ptr == 0 ? length(local.iter_795.tape) - 1 : local.iter_795.tape_ptr - 1 :
      local.curr_796.code == ">"
        ? local.iter_795.tape_ptr == length(local.iter_795.tape) - 1 ? 0 : local.iter_795.tape_ptr + 1
        : local.iter_795.tape_ptr)

    code_ptr = 1 + (
      local.curr_796.code == "["
        ? local.iter_795.tape[local.iter_795.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_795.code_ptr)] : local.iter_795.code_ptr :
      local.curr_796.code == "]"
        ? local.iter_795.tape[local.iter_795.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_795.code_ptr)] : local.iter_795.code_ptr
        : local.iter_795.code_ptr)

    steps_taken = 1 + local.iter_795.steps_taken
  }
}

locals {
  end_of_code_797 = try(local.iter_796.code_ptr >= length(var.code), true)

  curr_797 = local.end_of_code_797 ? null : {
    code = substr(var.code, local.iter_796.code_ptr, 1)
    input = substr(var.code, local.iter_796.code_ptr, 1) == "," ? substr(local.iter_796.input, 0, 1) : null
  }

  iter_797 = local.end_of_code_797 ? local.iter_796 : {
    input = (local.curr_797.code == ","
      ? substr(local.iter_796.input, 1, -1)
      : local.iter_796.input)

    output = (local.curr_797.code == "."
      ? "${local.iter_796.output}${jsondecode(format("\"\\u%04x\"", local.iter_796.tape[local.iter_796.tape_ptr]))}"
      : local.iter_796.output)
    
    tape = (
      local.curr_797.code == "+"
        ? [for i, b in local.iter_796.tape : (i == local.iter_796.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_797.code == "-"
        ? [for i, b in local.iter_796.tape : (i == local.iter_796.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_797.code == ","
        ? [for i, b in local.iter_796.tape : (i == local.iter_796.tape_ptr ? local.ascii_lookup[local.curr_797.input] : b)]
        : local.iter_796.tape)

    tape_ptr = (
      local.curr_797.code == "<"
        ? local.iter_796.tape_ptr == 0 ? length(local.iter_796.tape) - 1 : local.iter_796.tape_ptr - 1 :
      local.curr_797.code == ">"
        ? local.iter_796.tape_ptr == length(local.iter_796.tape) - 1 ? 0 : local.iter_796.tape_ptr + 1
        : local.iter_796.tape_ptr)

    code_ptr = 1 + (
      local.curr_797.code == "["
        ? local.iter_796.tape[local.iter_796.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_796.code_ptr)] : local.iter_796.code_ptr :
      local.curr_797.code == "]"
        ? local.iter_796.tape[local.iter_796.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_796.code_ptr)] : local.iter_796.code_ptr
        : local.iter_796.code_ptr)

    steps_taken = 1 + local.iter_796.steps_taken
  }
}

locals {
  end_of_code_798 = try(local.iter_797.code_ptr >= length(var.code), true)

  curr_798 = local.end_of_code_798 ? null : {
    code = substr(var.code, local.iter_797.code_ptr, 1)
    input = substr(var.code, local.iter_797.code_ptr, 1) == "," ? substr(local.iter_797.input, 0, 1) : null
  }

  iter_798 = local.end_of_code_798 ? local.iter_797 : {
    input = (local.curr_798.code == ","
      ? substr(local.iter_797.input, 1, -1)
      : local.iter_797.input)

    output = (local.curr_798.code == "."
      ? "${local.iter_797.output}${jsondecode(format("\"\\u%04x\"", local.iter_797.tape[local.iter_797.tape_ptr]))}"
      : local.iter_797.output)
    
    tape = (
      local.curr_798.code == "+"
        ? [for i, b in local.iter_797.tape : (i == local.iter_797.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_798.code == "-"
        ? [for i, b in local.iter_797.tape : (i == local.iter_797.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_798.code == ","
        ? [for i, b in local.iter_797.tape : (i == local.iter_797.tape_ptr ? local.ascii_lookup[local.curr_798.input] : b)]
        : local.iter_797.tape)

    tape_ptr = (
      local.curr_798.code == "<"
        ? local.iter_797.tape_ptr == 0 ? length(local.iter_797.tape) - 1 : local.iter_797.tape_ptr - 1 :
      local.curr_798.code == ">"
        ? local.iter_797.tape_ptr == length(local.iter_797.tape) - 1 ? 0 : local.iter_797.tape_ptr + 1
        : local.iter_797.tape_ptr)

    code_ptr = 1 + (
      local.curr_798.code == "["
        ? local.iter_797.tape[local.iter_797.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_797.code_ptr)] : local.iter_797.code_ptr :
      local.curr_798.code == "]"
        ? local.iter_797.tape[local.iter_797.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_797.code_ptr)] : local.iter_797.code_ptr
        : local.iter_797.code_ptr)

    steps_taken = 1 + local.iter_797.steps_taken
  }
}

locals {
  end_of_code_799 = try(local.iter_798.code_ptr >= length(var.code), true)

  curr_799 = local.end_of_code_799 ? null : {
    code = substr(var.code, local.iter_798.code_ptr, 1)
    input = substr(var.code, local.iter_798.code_ptr, 1) == "," ? substr(local.iter_798.input, 0, 1) : null
  }

  iter_799 = local.end_of_code_799 ? local.iter_798 : {
    input = (local.curr_799.code == ","
      ? substr(local.iter_798.input, 1, -1)
      : local.iter_798.input)

    output = (local.curr_799.code == "."
      ? "${local.iter_798.output}${jsondecode(format("\"\\u%04x\"", local.iter_798.tape[local.iter_798.tape_ptr]))}"
      : local.iter_798.output)
    
    tape = (
      local.curr_799.code == "+"
        ? [for i, b in local.iter_798.tape : (i == local.iter_798.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_799.code == "-"
        ? [for i, b in local.iter_798.tape : (i == local.iter_798.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_799.code == ","
        ? [for i, b in local.iter_798.tape : (i == local.iter_798.tape_ptr ? local.ascii_lookup[local.curr_799.input] : b)]
        : local.iter_798.tape)

    tape_ptr = (
      local.curr_799.code == "<"
        ? local.iter_798.tape_ptr == 0 ? length(local.iter_798.tape) - 1 : local.iter_798.tape_ptr - 1 :
      local.curr_799.code == ">"
        ? local.iter_798.tape_ptr == length(local.iter_798.tape) - 1 ? 0 : local.iter_798.tape_ptr + 1
        : local.iter_798.tape_ptr)

    code_ptr = 1 + (
      local.curr_799.code == "["
        ? local.iter_798.tape[local.iter_798.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_798.code_ptr)] : local.iter_798.code_ptr :
      local.curr_799.code == "]"
        ? local.iter_798.tape[local.iter_798.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_798.code_ptr)] : local.iter_798.code_ptr
        : local.iter_798.code_ptr)

    steps_taken = 1 + local.iter_798.steps_taken
  }
}

locals {
  end_of_code_800 = try(local.iter_799.code_ptr >= length(var.code), true)

  curr_800 = local.end_of_code_800 ? null : {
    code = substr(var.code, local.iter_799.code_ptr, 1)
    input = substr(var.code, local.iter_799.code_ptr, 1) == "," ? substr(local.iter_799.input, 0, 1) : null
  }

  iter_800 = local.end_of_code_800 ? local.iter_799 : {
    input = (local.curr_800.code == ","
      ? substr(local.iter_799.input, 1, -1)
      : local.iter_799.input)

    output = (local.curr_800.code == "."
      ? "${local.iter_799.output}${jsondecode(format("\"\\u%04x\"", local.iter_799.tape[local.iter_799.tape_ptr]))}"
      : local.iter_799.output)
    
    tape = (
      local.curr_800.code == "+"
        ? [for i, b in local.iter_799.tape : (i == local.iter_799.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_800.code == "-"
        ? [for i, b in local.iter_799.tape : (i == local.iter_799.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_800.code == ","
        ? [for i, b in local.iter_799.tape : (i == local.iter_799.tape_ptr ? local.ascii_lookup[local.curr_800.input] : b)]
        : local.iter_799.tape)

    tape_ptr = (
      local.curr_800.code == "<"
        ? local.iter_799.tape_ptr == 0 ? length(local.iter_799.tape) - 1 : local.iter_799.tape_ptr - 1 :
      local.curr_800.code == ">"
        ? local.iter_799.tape_ptr == length(local.iter_799.tape) - 1 ? 0 : local.iter_799.tape_ptr + 1
        : local.iter_799.tape_ptr)

    code_ptr = 1 + (
      local.curr_800.code == "["
        ? local.iter_799.tape[local.iter_799.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_799.code_ptr)] : local.iter_799.code_ptr :
      local.curr_800.code == "]"
        ? local.iter_799.tape[local.iter_799.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_799.code_ptr)] : local.iter_799.code_ptr
        : local.iter_799.code_ptr)

    steps_taken = 1 + local.iter_799.steps_taken
  }
}

locals {
  end_of_code_801 = try(local.iter_800.code_ptr >= length(var.code), true)

  curr_801 = local.end_of_code_801 ? null : {
    code = substr(var.code, local.iter_800.code_ptr, 1)
    input = substr(var.code, local.iter_800.code_ptr, 1) == "," ? substr(local.iter_800.input, 0, 1) : null
  }

  iter_801 = local.end_of_code_801 ? local.iter_800 : {
    input = (local.curr_801.code == ","
      ? substr(local.iter_800.input, 1, -1)
      : local.iter_800.input)

    output = (local.curr_801.code == "."
      ? "${local.iter_800.output}${jsondecode(format("\"\\u%04x\"", local.iter_800.tape[local.iter_800.tape_ptr]))}"
      : local.iter_800.output)
    
    tape = (
      local.curr_801.code == "+"
        ? [for i, b in local.iter_800.tape : (i == local.iter_800.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_801.code == "-"
        ? [for i, b in local.iter_800.tape : (i == local.iter_800.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_801.code == ","
        ? [for i, b in local.iter_800.tape : (i == local.iter_800.tape_ptr ? local.ascii_lookup[local.curr_801.input] : b)]
        : local.iter_800.tape)

    tape_ptr = (
      local.curr_801.code == "<"
        ? local.iter_800.tape_ptr == 0 ? length(local.iter_800.tape) - 1 : local.iter_800.tape_ptr - 1 :
      local.curr_801.code == ">"
        ? local.iter_800.tape_ptr == length(local.iter_800.tape) - 1 ? 0 : local.iter_800.tape_ptr + 1
        : local.iter_800.tape_ptr)

    code_ptr = 1 + (
      local.curr_801.code == "["
        ? local.iter_800.tape[local.iter_800.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_800.code_ptr)] : local.iter_800.code_ptr :
      local.curr_801.code == "]"
        ? local.iter_800.tape[local.iter_800.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_800.code_ptr)] : local.iter_800.code_ptr
        : local.iter_800.code_ptr)

    steps_taken = 1 + local.iter_800.steps_taken
  }
}

locals {
  end_of_code_802 = try(local.iter_801.code_ptr >= length(var.code), true)

  curr_802 = local.end_of_code_802 ? null : {
    code = substr(var.code, local.iter_801.code_ptr, 1)
    input = substr(var.code, local.iter_801.code_ptr, 1) == "," ? substr(local.iter_801.input, 0, 1) : null
  }

  iter_802 = local.end_of_code_802 ? local.iter_801 : {
    input = (local.curr_802.code == ","
      ? substr(local.iter_801.input, 1, -1)
      : local.iter_801.input)

    output = (local.curr_802.code == "."
      ? "${local.iter_801.output}${jsondecode(format("\"\\u%04x\"", local.iter_801.tape[local.iter_801.tape_ptr]))}"
      : local.iter_801.output)
    
    tape = (
      local.curr_802.code == "+"
        ? [for i, b in local.iter_801.tape : (i == local.iter_801.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_802.code == "-"
        ? [for i, b in local.iter_801.tape : (i == local.iter_801.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_802.code == ","
        ? [for i, b in local.iter_801.tape : (i == local.iter_801.tape_ptr ? local.ascii_lookup[local.curr_802.input] : b)]
        : local.iter_801.tape)

    tape_ptr = (
      local.curr_802.code == "<"
        ? local.iter_801.tape_ptr == 0 ? length(local.iter_801.tape) - 1 : local.iter_801.tape_ptr - 1 :
      local.curr_802.code == ">"
        ? local.iter_801.tape_ptr == length(local.iter_801.tape) - 1 ? 0 : local.iter_801.tape_ptr + 1
        : local.iter_801.tape_ptr)

    code_ptr = 1 + (
      local.curr_802.code == "["
        ? local.iter_801.tape[local.iter_801.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_801.code_ptr)] : local.iter_801.code_ptr :
      local.curr_802.code == "]"
        ? local.iter_801.tape[local.iter_801.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_801.code_ptr)] : local.iter_801.code_ptr
        : local.iter_801.code_ptr)

    steps_taken = 1 + local.iter_801.steps_taken
  }
}

locals {
  end_of_code_803 = try(local.iter_802.code_ptr >= length(var.code), true)

  curr_803 = local.end_of_code_803 ? null : {
    code = substr(var.code, local.iter_802.code_ptr, 1)
    input = substr(var.code, local.iter_802.code_ptr, 1) == "," ? substr(local.iter_802.input, 0, 1) : null
  }

  iter_803 = local.end_of_code_803 ? local.iter_802 : {
    input = (local.curr_803.code == ","
      ? substr(local.iter_802.input, 1, -1)
      : local.iter_802.input)

    output = (local.curr_803.code == "."
      ? "${local.iter_802.output}${jsondecode(format("\"\\u%04x\"", local.iter_802.tape[local.iter_802.tape_ptr]))}"
      : local.iter_802.output)
    
    tape = (
      local.curr_803.code == "+"
        ? [for i, b in local.iter_802.tape : (i == local.iter_802.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_803.code == "-"
        ? [for i, b in local.iter_802.tape : (i == local.iter_802.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_803.code == ","
        ? [for i, b in local.iter_802.tape : (i == local.iter_802.tape_ptr ? local.ascii_lookup[local.curr_803.input] : b)]
        : local.iter_802.tape)

    tape_ptr = (
      local.curr_803.code == "<"
        ? local.iter_802.tape_ptr == 0 ? length(local.iter_802.tape) - 1 : local.iter_802.tape_ptr - 1 :
      local.curr_803.code == ">"
        ? local.iter_802.tape_ptr == length(local.iter_802.tape) - 1 ? 0 : local.iter_802.tape_ptr + 1
        : local.iter_802.tape_ptr)

    code_ptr = 1 + (
      local.curr_803.code == "["
        ? local.iter_802.tape[local.iter_802.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_802.code_ptr)] : local.iter_802.code_ptr :
      local.curr_803.code == "]"
        ? local.iter_802.tape[local.iter_802.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_802.code_ptr)] : local.iter_802.code_ptr
        : local.iter_802.code_ptr)

    steps_taken = 1 + local.iter_802.steps_taken
  }
}

locals {
  end_of_code_804 = try(local.iter_803.code_ptr >= length(var.code), true)

  curr_804 = local.end_of_code_804 ? null : {
    code = substr(var.code, local.iter_803.code_ptr, 1)
    input = substr(var.code, local.iter_803.code_ptr, 1) == "," ? substr(local.iter_803.input, 0, 1) : null
  }

  iter_804 = local.end_of_code_804 ? local.iter_803 : {
    input = (local.curr_804.code == ","
      ? substr(local.iter_803.input, 1, -1)
      : local.iter_803.input)

    output = (local.curr_804.code == "."
      ? "${local.iter_803.output}${jsondecode(format("\"\\u%04x\"", local.iter_803.tape[local.iter_803.tape_ptr]))}"
      : local.iter_803.output)
    
    tape = (
      local.curr_804.code == "+"
        ? [for i, b in local.iter_803.tape : (i == local.iter_803.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_804.code == "-"
        ? [for i, b in local.iter_803.tape : (i == local.iter_803.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_804.code == ","
        ? [for i, b in local.iter_803.tape : (i == local.iter_803.tape_ptr ? local.ascii_lookup[local.curr_804.input] : b)]
        : local.iter_803.tape)

    tape_ptr = (
      local.curr_804.code == "<"
        ? local.iter_803.tape_ptr == 0 ? length(local.iter_803.tape) - 1 : local.iter_803.tape_ptr - 1 :
      local.curr_804.code == ">"
        ? local.iter_803.tape_ptr == length(local.iter_803.tape) - 1 ? 0 : local.iter_803.tape_ptr + 1
        : local.iter_803.tape_ptr)

    code_ptr = 1 + (
      local.curr_804.code == "["
        ? local.iter_803.tape[local.iter_803.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_803.code_ptr)] : local.iter_803.code_ptr :
      local.curr_804.code == "]"
        ? local.iter_803.tape[local.iter_803.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_803.code_ptr)] : local.iter_803.code_ptr
        : local.iter_803.code_ptr)

    steps_taken = 1 + local.iter_803.steps_taken
  }
}

locals {
  end_of_code_805 = try(local.iter_804.code_ptr >= length(var.code), true)

  curr_805 = local.end_of_code_805 ? null : {
    code = substr(var.code, local.iter_804.code_ptr, 1)
    input = substr(var.code, local.iter_804.code_ptr, 1) == "," ? substr(local.iter_804.input, 0, 1) : null
  }

  iter_805 = local.end_of_code_805 ? local.iter_804 : {
    input = (local.curr_805.code == ","
      ? substr(local.iter_804.input, 1, -1)
      : local.iter_804.input)

    output = (local.curr_805.code == "."
      ? "${local.iter_804.output}${jsondecode(format("\"\\u%04x\"", local.iter_804.tape[local.iter_804.tape_ptr]))}"
      : local.iter_804.output)
    
    tape = (
      local.curr_805.code == "+"
        ? [for i, b in local.iter_804.tape : (i == local.iter_804.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_805.code == "-"
        ? [for i, b in local.iter_804.tape : (i == local.iter_804.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_805.code == ","
        ? [for i, b in local.iter_804.tape : (i == local.iter_804.tape_ptr ? local.ascii_lookup[local.curr_805.input] : b)]
        : local.iter_804.tape)

    tape_ptr = (
      local.curr_805.code == "<"
        ? local.iter_804.tape_ptr == 0 ? length(local.iter_804.tape) - 1 : local.iter_804.tape_ptr - 1 :
      local.curr_805.code == ">"
        ? local.iter_804.tape_ptr == length(local.iter_804.tape) - 1 ? 0 : local.iter_804.tape_ptr + 1
        : local.iter_804.tape_ptr)

    code_ptr = 1 + (
      local.curr_805.code == "["
        ? local.iter_804.tape[local.iter_804.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_804.code_ptr)] : local.iter_804.code_ptr :
      local.curr_805.code == "]"
        ? local.iter_804.tape[local.iter_804.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_804.code_ptr)] : local.iter_804.code_ptr
        : local.iter_804.code_ptr)

    steps_taken = 1 + local.iter_804.steps_taken
  }
}

locals {
  end_of_code_806 = try(local.iter_805.code_ptr >= length(var.code), true)

  curr_806 = local.end_of_code_806 ? null : {
    code = substr(var.code, local.iter_805.code_ptr, 1)
    input = substr(var.code, local.iter_805.code_ptr, 1) == "," ? substr(local.iter_805.input, 0, 1) : null
  }

  iter_806 = local.end_of_code_806 ? local.iter_805 : {
    input = (local.curr_806.code == ","
      ? substr(local.iter_805.input, 1, -1)
      : local.iter_805.input)

    output = (local.curr_806.code == "."
      ? "${local.iter_805.output}${jsondecode(format("\"\\u%04x\"", local.iter_805.tape[local.iter_805.tape_ptr]))}"
      : local.iter_805.output)
    
    tape = (
      local.curr_806.code == "+"
        ? [for i, b in local.iter_805.tape : (i == local.iter_805.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_806.code == "-"
        ? [for i, b in local.iter_805.tape : (i == local.iter_805.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_806.code == ","
        ? [for i, b in local.iter_805.tape : (i == local.iter_805.tape_ptr ? local.ascii_lookup[local.curr_806.input] : b)]
        : local.iter_805.tape)

    tape_ptr = (
      local.curr_806.code == "<"
        ? local.iter_805.tape_ptr == 0 ? length(local.iter_805.tape) - 1 : local.iter_805.tape_ptr - 1 :
      local.curr_806.code == ">"
        ? local.iter_805.tape_ptr == length(local.iter_805.tape) - 1 ? 0 : local.iter_805.tape_ptr + 1
        : local.iter_805.tape_ptr)

    code_ptr = 1 + (
      local.curr_806.code == "["
        ? local.iter_805.tape[local.iter_805.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_805.code_ptr)] : local.iter_805.code_ptr :
      local.curr_806.code == "]"
        ? local.iter_805.tape[local.iter_805.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_805.code_ptr)] : local.iter_805.code_ptr
        : local.iter_805.code_ptr)

    steps_taken = 1 + local.iter_805.steps_taken
  }
}

locals {
  end_of_code_807 = try(local.iter_806.code_ptr >= length(var.code), true)

  curr_807 = local.end_of_code_807 ? null : {
    code = substr(var.code, local.iter_806.code_ptr, 1)
    input = substr(var.code, local.iter_806.code_ptr, 1) == "," ? substr(local.iter_806.input, 0, 1) : null
  }

  iter_807 = local.end_of_code_807 ? local.iter_806 : {
    input = (local.curr_807.code == ","
      ? substr(local.iter_806.input, 1, -1)
      : local.iter_806.input)

    output = (local.curr_807.code == "."
      ? "${local.iter_806.output}${jsondecode(format("\"\\u%04x\"", local.iter_806.tape[local.iter_806.tape_ptr]))}"
      : local.iter_806.output)
    
    tape = (
      local.curr_807.code == "+"
        ? [for i, b in local.iter_806.tape : (i == local.iter_806.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_807.code == "-"
        ? [for i, b in local.iter_806.tape : (i == local.iter_806.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_807.code == ","
        ? [for i, b in local.iter_806.tape : (i == local.iter_806.tape_ptr ? local.ascii_lookup[local.curr_807.input] : b)]
        : local.iter_806.tape)

    tape_ptr = (
      local.curr_807.code == "<"
        ? local.iter_806.tape_ptr == 0 ? length(local.iter_806.tape) - 1 : local.iter_806.tape_ptr - 1 :
      local.curr_807.code == ">"
        ? local.iter_806.tape_ptr == length(local.iter_806.tape) - 1 ? 0 : local.iter_806.tape_ptr + 1
        : local.iter_806.tape_ptr)

    code_ptr = 1 + (
      local.curr_807.code == "["
        ? local.iter_806.tape[local.iter_806.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_806.code_ptr)] : local.iter_806.code_ptr :
      local.curr_807.code == "]"
        ? local.iter_806.tape[local.iter_806.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_806.code_ptr)] : local.iter_806.code_ptr
        : local.iter_806.code_ptr)

    steps_taken = 1 + local.iter_806.steps_taken
  }
}

locals {
  end_of_code_808 = try(local.iter_807.code_ptr >= length(var.code), true)

  curr_808 = local.end_of_code_808 ? null : {
    code = substr(var.code, local.iter_807.code_ptr, 1)
    input = substr(var.code, local.iter_807.code_ptr, 1) == "," ? substr(local.iter_807.input, 0, 1) : null
  }

  iter_808 = local.end_of_code_808 ? local.iter_807 : {
    input = (local.curr_808.code == ","
      ? substr(local.iter_807.input, 1, -1)
      : local.iter_807.input)

    output = (local.curr_808.code == "."
      ? "${local.iter_807.output}${jsondecode(format("\"\\u%04x\"", local.iter_807.tape[local.iter_807.tape_ptr]))}"
      : local.iter_807.output)
    
    tape = (
      local.curr_808.code == "+"
        ? [for i, b in local.iter_807.tape : (i == local.iter_807.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_808.code == "-"
        ? [for i, b in local.iter_807.tape : (i == local.iter_807.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_808.code == ","
        ? [for i, b in local.iter_807.tape : (i == local.iter_807.tape_ptr ? local.ascii_lookup[local.curr_808.input] : b)]
        : local.iter_807.tape)

    tape_ptr = (
      local.curr_808.code == "<"
        ? local.iter_807.tape_ptr == 0 ? length(local.iter_807.tape) - 1 : local.iter_807.tape_ptr - 1 :
      local.curr_808.code == ">"
        ? local.iter_807.tape_ptr == length(local.iter_807.tape) - 1 ? 0 : local.iter_807.tape_ptr + 1
        : local.iter_807.tape_ptr)

    code_ptr = 1 + (
      local.curr_808.code == "["
        ? local.iter_807.tape[local.iter_807.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_807.code_ptr)] : local.iter_807.code_ptr :
      local.curr_808.code == "]"
        ? local.iter_807.tape[local.iter_807.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_807.code_ptr)] : local.iter_807.code_ptr
        : local.iter_807.code_ptr)

    steps_taken = 1 + local.iter_807.steps_taken
  }
}

locals {
  end_of_code_809 = try(local.iter_808.code_ptr >= length(var.code), true)

  curr_809 = local.end_of_code_809 ? null : {
    code = substr(var.code, local.iter_808.code_ptr, 1)
    input = substr(var.code, local.iter_808.code_ptr, 1) == "," ? substr(local.iter_808.input, 0, 1) : null
  }

  iter_809 = local.end_of_code_809 ? local.iter_808 : {
    input = (local.curr_809.code == ","
      ? substr(local.iter_808.input, 1, -1)
      : local.iter_808.input)

    output = (local.curr_809.code == "."
      ? "${local.iter_808.output}${jsondecode(format("\"\\u%04x\"", local.iter_808.tape[local.iter_808.tape_ptr]))}"
      : local.iter_808.output)
    
    tape = (
      local.curr_809.code == "+"
        ? [for i, b in local.iter_808.tape : (i == local.iter_808.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_809.code == "-"
        ? [for i, b in local.iter_808.tape : (i == local.iter_808.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_809.code == ","
        ? [for i, b in local.iter_808.tape : (i == local.iter_808.tape_ptr ? local.ascii_lookup[local.curr_809.input] : b)]
        : local.iter_808.tape)

    tape_ptr = (
      local.curr_809.code == "<"
        ? local.iter_808.tape_ptr == 0 ? length(local.iter_808.tape) - 1 : local.iter_808.tape_ptr - 1 :
      local.curr_809.code == ">"
        ? local.iter_808.tape_ptr == length(local.iter_808.tape) - 1 ? 0 : local.iter_808.tape_ptr + 1
        : local.iter_808.tape_ptr)

    code_ptr = 1 + (
      local.curr_809.code == "["
        ? local.iter_808.tape[local.iter_808.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_808.code_ptr)] : local.iter_808.code_ptr :
      local.curr_809.code == "]"
        ? local.iter_808.tape[local.iter_808.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_808.code_ptr)] : local.iter_808.code_ptr
        : local.iter_808.code_ptr)

    steps_taken = 1 + local.iter_808.steps_taken
  }
}

locals {
  end_of_code_810 = try(local.iter_809.code_ptr >= length(var.code), true)

  curr_810 = local.end_of_code_810 ? null : {
    code = substr(var.code, local.iter_809.code_ptr, 1)
    input = substr(var.code, local.iter_809.code_ptr, 1) == "," ? substr(local.iter_809.input, 0, 1) : null
  }

  iter_810 = local.end_of_code_810 ? local.iter_809 : {
    input = (local.curr_810.code == ","
      ? substr(local.iter_809.input, 1, -1)
      : local.iter_809.input)

    output = (local.curr_810.code == "."
      ? "${local.iter_809.output}${jsondecode(format("\"\\u%04x\"", local.iter_809.tape[local.iter_809.tape_ptr]))}"
      : local.iter_809.output)
    
    tape = (
      local.curr_810.code == "+"
        ? [for i, b in local.iter_809.tape : (i == local.iter_809.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_810.code == "-"
        ? [for i, b in local.iter_809.tape : (i == local.iter_809.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_810.code == ","
        ? [for i, b in local.iter_809.tape : (i == local.iter_809.tape_ptr ? local.ascii_lookup[local.curr_810.input] : b)]
        : local.iter_809.tape)

    tape_ptr = (
      local.curr_810.code == "<"
        ? local.iter_809.tape_ptr == 0 ? length(local.iter_809.tape) - 1 : local.iter_809.tape_ptr - 1 :
      local.curr_810.code == ">"
        ? local.iter_809.tape_ptr == length(local.iter_809.tape) - 1 ? 0 : local.iter_809.tape_ptr + 1
        : local.iter_809.tape_ptr)

    code_ptr = 1 + (
      local.curr_810.code == "["
        ? local.iter_809.tape[local.iter_809.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_809.code_ptr)] : local.iter_809.code_ptr :
      local.curr_810.code == "]"
        ? local.iter_809.tape[local.iter_809.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_809.code_ptr)] : local.iter_809.code_ptr
        : local.iter_809.code_ptr)

    steps_taken = 1 + local.iter_809.steps_taken
  }
}

locals {
  end_of_code_811 = try(local.iter_810.code_ptr >= length(var.code), true)

  curr_811 = local.end_of_code_811 ? null : {
    code = substr(var.code, local.iter_810.code_ptr, 1)
    input = substr(var.code, local.iter_810.code_ptr, 1) == "," ? substr(local.iter_810.input, 0, 1) : null
  }

  iter_811 = local.end_of_code_811 ? local.iter_810 : {
    input = (local.curr_811.code == ","
      ? substr(local.iter_810.input, 1, -1)
      : local.iter_810.input)

    output = (local.curr_811.code == "."
      ? "${local.iter_810.output}${jsondecode(format("\"\\u%04x\"", local.iter_810.tape[local.iter_810.tape_ptr]))}"
      : local.iter_810.output)
    
    tape = (
      local.curr_811.code == "+"
        ? [for i, b in local.iter_810.tape : (i == local.iter_810.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_811.code == "-"
        ? [for i, b in local.iter_810.tape : (i == local.iter_810.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_811.code == ","
        ? [for i, b in local.iter_810.tape : (i == local.iter_810.tape_ptr ? local.ascii_lookup[local.curr_811.input] : b)]
        : local.iter_810.tape)

    tape_ptr = (
      local.curr_811.code == "<"
        ? local.iter_810.tape_ptr == 0 ? length(local.iter_810.tape) - 1 : local.iter_810.tape_ptr - 1 :
      local.curr_811.code == ">"
        ? local.iter_810.tape_ptr == length(local.iter_810.tape) - 1 ? 0 : local.iter_810.tape_ptr + 1
        : local.iter_810.tape_ptr)

    code_ptr = 1 + (
      local.curr_811.code == "["
        ? local.iter_810.tape[local.iter_810.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_810.code_ptr)] : local.iter_810.code_ptr :
      local.curr_811.code == "]"
        ? local.iter_810.tape[local.iter_810.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_810.code_ptr)] : local.iter_810.code_ptr
        : local.iter_810.code_ptr)

    steps_taken = 1 + local.iter_810.steps_taken
  }
}

locals {
  end_of_code_812 = try(local.iter_811.code_ptr >= length(var.code), true)

  curr_812 = local.end_of_code_812 ? null : {
    code = substr(var.code, local.iter_811.code_ptr, 1)
    input = substr(var.code, local.iter_811.code_ptr, 1) == "," ? substr(local.iter_811.input, 0, 1) : null
  }

  iter_812 = local.end_of_code_812 ? local.iter_811 : {
    input = (local.curr_812.code == ","
      ? substr(local.iter_811.input, 1, -1)
      : local.iter_811.input)

    output = (local.curr_812.code == "."
      ? "${local.iter_811.output}${jsondecode(format("\"\\u%04x\"", local.iter_811.tape[local.iter_811.tape_ptr]))}"
      : local.iter_811.output)
    
    tape = (
      local.curr_812.code == "+"
        ? [for i, b in local.iter_811.tape : (i == local.iter_811.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_812.code == "-"
        ? [for i, b in local.iter_811.tape : (i == local.iter_811.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_812.code == ","
        ? [for i, b in local.iter_811.tape : (i == local.iter_811.tape_ptr ? local.ascii_lookup[local.curr_812.input] : b)]
        : local.iter_811.tape)

    tape_ptr = (
      local.curr_812.code == "<"
        ? local.iter_811.tape_ptr == 0 ? length(local.iter_811.tape) - 1 : local.iter_811.tape_ptr - 1 :
      local.curr_812.code == ">"
        ? local.iter_811.tape_ptr == length(local.iter_811.tape) - 1 ? 0 : local.iter_811.tape_ptr + 1
        : local.iter_811.tape_ptr)

    code_ptr = 1 + (
      local.curr_812.code == "["
        ? local.iter_811.tape[local.iter_811.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_811.code_ptr)] : local.iter_811.code_ptr :
      local.curr_812.code == "]"
        ? local.iter_811.tape[local.iter_811.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_811.code_ptr)] : local.iter_811.code_ptr
        : local.iter_811.code_ptr)

    steps_taken = 1 + local.iter_811.steps_taken
  }
}

locals {
  end_of_code_813 = try(local.iter_812.code_ptr >= length(var.code), true)

  curr_813 = local.end_of_code_813 ? null : {
    code = substr(var.code, local.iter_812.code_ptr, 1)
    input = substr(var.code, local.iter_812.code_ptr, 1) == "," ? substr(local.iter_812.input, 0, 1) : null
  }

  iter_813 = local.end_of_code_813 ? local.iter_812 : {
    input = (local.curr_813.code == ","
      ? substr(local.iter_812.input, 1, -1)
      : local.iter_812.input)

    output = (local.curr_813.code == "."
      ? "${local.iter_812.output}${jsondecode(format("\"\\u%04x\"", local.iter_812.tape[local.iter_812.tape_ptr]))}"
      : local.iter_812.output)
    
    tape = (
      local.curr_813.code == "+"
        ? [for i, b in local.iter_812.tape : (i == local.iter_812.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_813.code == "-"
        ? [for i, b in local.iter_812.tape : (i == local.iter_812.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_813.code == ","
        ? [for i, b in local.iter_812.tape : (i == local.iter_812.tape_ptr ? local.ascii_lookup[local.curr_813.input] : b)]
        : local.iter_812.tape)

    tape_ptr = (
      local.curr_813.code == "<"
        ? local.iter_812.tape_ptr == 0 ? length(local.iter_812.tape) - 1 : local.iter_812.tape_ptr - 1 :
      local.curr_813.code == ">"
        ? local.iter_812.tape_ptr == length(local.iter_812.tape) - 1 ? 0 : local.iter_812.tape_ptr + 1
        : local.iter_812.tape_ptr)

    code_ptr = 1 + (
      local.curr_813.code == "["
        ? local.iter_812.tape[local.iter_812.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_812.code_ptr)] : local.iter_812.code_ptr :
      local.curr_813.code == "]"
        ? local.iter_812.tape[local.iter_812.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_812.code_ptr)] : local.iter_812.code_ptr
        : local.iter_812.code_ptr)

    steps_taken = 1 + local.iter_812.steps_taken
  }
}

locals {
  end_of_code_814 = try(local.iter_813.code_ptr >= length(var.code), true)

  curr_814 = local.end_of_code_814 ? null : {
    code = substr(var.code, local.iter_813.code_ptr, 1)
    input = substr(var.code, local.iter_813.code_ptr, 1) == "," ? substr(local.iter_813.input, 0, 1) : null
  }

  iter_814 = local.end_of_code_814 ? local.iter_813 : {
    input = (local.curr_814.code == ","
      ? substr(local.iter_813.input, 1, -1)
      : local.iter_813.input)

    output = (local.curr_814.code == "."
      ? "${local.iter_813.output}${jsondecode(format("\"\\u%04x\"", local.iter_813.tape[local.iter_813.tape_ptr]))}"
      : local.iter_813.output)
    
    tape = (
      local.curr_814.code == "+"
        ? [for i, b in local.iter_813.tape : (i == local.iter_813.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_814.code == "-"
        ? [for i, b in local.iter_813.tape : (i == local.iter_813.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_814.code == ","
        ? [for i, b in local.iter_813.tape : (i == local.iter_813.tape_ptr ? local.ascii_lookup[local.curr_814.input] : b)]
        : local.iter_813.tape)

    tape_ptr = (
      local.curr_814.code == "<"
        ? local.iter_813.tape_ptr == 0 ? length(local.iter_813.tape) - 1 : local.iter_813.tape_ptr - 1 :
      local.curr_814.code == ">"
        ? local.iter_813.tape_ptr == length(local.iter_813.tape) - 1 ? 0 : local.iter_813.tape_ptr + 1
        : local.iter_813.tape_ptr)

    code_ptr = 1 + (
      local.curr_814.code == "["
        ? local.iter_813.tape[local.iter_813.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_813.code_ptr)] : local.iter_813.code_ptr :
      local.curr_814.code == "]"
        ? local.iter_813.tape[local.iter_813.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_813.code_ptr)] : local.iter_813.code_ptr
        : local.iter_813.code_ptr)

    steps_taken = 1 + local.iter_813.steps_taken
  }
}

locals {
  end_of_code_815 = try(local.iter_814.code_ptr >= length(var.code), true)

  curr_815 = local.end_of_code_815 ? null : {
    code = substr(var.code, local.iter_814.code_ptr, 1)
    input = substr(var.code, local.iter_814.code_ptr, 1) == "," ? substr(local.iter_814.input, 0, 1) : null
  }

  iter_815 = local.end_of_code_815 ? local.iter_814 : {
    input = (local.curr_815.code == ","
      ? substr(local.iter_814.input, 1, -1)
      : local.iter_814.input)

    output = (local.curr_815.code == "."
      ? "${local.iter_814.output}${jsondecode(format("\"\\u%04x\"", local.iter_814.tape[local.iter_814.tape_ptr]))}"
      : local.iter_814.output)
    
    tape = (
      local.curr_815.code == "+"
        ? [for i, b in local.iter_814.tape : (i == local.iter_814.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_815.code == "-"
        ? [for i, b in local.iter_814.tape : (i == local.iter_814.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_815.code == ","
        ? [for i, b in local.iter_814.tape : (i == local.iter_814.tape_ptr ? local.ascii_lookup[local.curr_815.input] : b)]
        : local.iter_814.tape)

    tape_ptr = (
      local.curr_815.code == "<"
        ? local.iter_814.tape_ptr == 0 ? length(local.iter_814.tape) - 1 : local.iter_814.tape_ptr - 1 :
      local.curr_815.code == ">"
        ? local.iter_814.tape_ptr == length(local.iter_814.tape) - 1 ? 0 : local.iter_814.tape_ptr + 1
        : local.iter_814.tape_ptr)

    code_ptr = 1 + (
      local.curr_815.code == "["
        ? local.iter_814.tape[local.iter_814.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_814.code_ptr)] : local.iter_814.code_ptr :
      local.curr_815.code == "]"
        ? local.iter_814.tape[local.iter_814.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_814.code_ptr)] : local.iter_814.code_ptr
        : local.iter_814.code_ptr)

    steps_taken = 1 + local.iter_814.steps_taken
  }
}

locals {
  end_of_code_816 = try(local.iter_815.code_ptr >= length(var.code), true)

  curr_816 = local.end_of_code_816 ? null : {
    code = substr(var.code, local.iter_815.code_ptr, 1)
    input = substr(var.code, local.iter_815.code_ptr, 1) == "," ? substr(local.iter_815.input, 0, 1) : null
  }

  iter_816 = local.end_of_code_816 ? local.iter_815 : {
    input = (local.curr_816.code == ","
      ? substr(local.iter_815.input, 1, -1)
      : local.iter_815.input)

    output = (local.curr_816.code == "."
      ? "${local.iter_815.output}${jsondecode(format("\"\\u%04x\"", local.iter_815.tape[local.iter_815.tape_ptr]))}"
      : local.iter_815.output)
    
    tape = (
      local.curr_816.code == "+"
        ? [for i, b in local.iter_815.tape : (i == local.iter_815.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_816.code == "-"
        ? [for i, b in local.iter_815.tape : (i == local.iter_815.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_816.code == ","
        ? [for i, b in local.iter_815.tape : (i == local.iter_815.tape_ptr ? local.ascii_lookup[local.curr_816.input] : b)]
        : local.iter_815.tape)

    tape_ptr = (
      local.curr_816.code == "<"
        ? local.iter_815.tape_ptr == 0 ? length(local.iter_815.tape) - 1 : local.iter_815.tape_ptr - 1 :
      local.curr_816.code == ">"
        ? local.iter_815.tape_ptr == length(local.iter_815.tape) - 1 ? 0 : local.iter_815.tape_ptr + 1
        : local.iter_815.tape_ptr)

    code_ptr = 1 + (
      local.curr_816.code == "["
        ? local.iter_815.tape[local.iter_815.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_815.code_ptr)] : local.iter_815.code_ptr :
      local.curr_816.code == "]"
        ? local.iter_815.tape[local.iter_815.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_815.code_ptr)] : local.iter_815.code_ptr
        : local.iter_815.code_ptr)

    steps_taken = 1 + local.iter_815.steps_taken
  }
}

locals {
  end_of_code_817 = try(local.iter_816.code_ptr >= length(var.code), true)

  curr_817 = local.end_of_code_817 ? null : {
    code = substr(var.code, local.iter_816.code_ptr, 1)
    input = substr(var.code, local.iter_816.code_ptr, 1) == "," ? substr(local.iter_816.input, 0, 1) : null
  }

  iter_817 = local.end_of_code_817 ? local.iter_816 : {
    input = (local.curr_817.code == ","
      ? substr(local.iter_816.input, 1, -1)
      : local.iter_816.input)

    output = (local.curr_817.code == "."
      ? "${local.iter_816.output}${jsondecode(format("\"\\u%04x\"", local.iter_816.tape[local.iter_816.tape_ptr]))}"
      : local.iter_816.output)
    
    tape = (
      local.curr_817.code == "+"
        ? [for i, b in local.iter_816.tape : (i == local.iter_816.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_817.code == "-"
        ? [for i, b in local.iter_816.tape : (i == local.iter_816.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_817.code == ","
        ? [for i, b in local.iter_816.tape : (i == local.iter_816.tape_ptr ? local.ascii_lookup[local.curr_817.input] : b)]
        : local.iter_816.tape)

    tape_ptr = (
      local.curr_817.code == "<"
        ? local.iter_816.tape_ptr == 0 ? length(local.iter_816.tape) - 1 : local.iter_816.tape_ptr - 1 :
      local.curr_817.code == ">"
        ? local.iter_816.tape_ptr == length(local.iter_816.tape) - 1 ? 0 : local.iter_816.tape_ptr + 1
        : local.iter_816.tape_ptr)

    code_ptr = 1 + (
      local.curr_817.code == "["
        ? local.iter_816.tape[local.iter_816.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_816.code_ptr)] : local.iter_816.code_ptr :
      local.curr_817.code == "]"
        ? local.iter_816.tape[local.iter_816.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_816.code_ptr)] : local.iter_816.code_ptr
        : local.iter_816.code_ptr)

    steps_taken = 1 + local.iter_816.steps_taken
  }
}

locals {
  end_of_code_818 = try(local.iter_817.code_ptr >= length(var.code), true)

  curr_818 = local.end_of_code_818 ? null : {
    code = substr(var.code, local.iter_817.code_ptr, 1)
    input = substr(var.code, local.iter_817.code_ptr, 1) == "," ? substr(local.iter_817.input, 0, 1) : null
  }

  iter_818 = local.end_of_code_818 ? local.iter_817 : {
    input = (local.curr_818.code == ","
      ? substr(local.iter_817.input, 1, -1)
      : local.iter_817.input)

    output = (local.curr_818.code == "."
      ? "${local.iter_817.output}${jsondecode(format("\"\\u%04x\"", local.iter_817.tape[local.iter_817.tape_ptr]))}"
      : local.iter_817.output)
    
    tape = (
      local.curr_818.code == "+"
        ? [for i, b in local.iter_817.tape : (i == local.iter_817.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_818.code == "-"
        ? [for i, b in local.iter_817.tape : (i == local.iter_817.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_818.code == ","
        ? [for i, b in local.iter_817.tape : (i == local.iter_817.tape_ptr ? local.ascii_lookup[local.curr_818.input] : b)]
        : local.iter_817.tape)

    tape_ptr = (
      local.curr_818.code == "<"
        ? local.iter_817.tape_ptr == 0 ? length(local.iter_817.tape) - 1 : local.iter_817.tape_ptr - 1 :
      local.curr_818.code == ">"
        ? local.iter_817.tape_ptr == length(local.iter_817.tape) - 1 ? 0 : local.iter_817.tape_ptr + 1
        : local.iter_817.tape_ptr)

    code_ptr = 1 + (
      local.curr_818.code == "["
        ? local.iter_817.tape[local.iter_817.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_817.code_ptr)] : local.iter_817.code_ptr :
      local.curr_818.code == "]"
        ? local.iter_817.tape[local.iter_817.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_817.code_ptr)] : local.iter_817.code_ptr
        : local.iter_817.code_ptr)

    steps_taken = 1 + local.iter_817.steps_taken
  }
}

locals {
  end_of_code_819 = try(local.iter_818.code_ptr >= length(var.code), true)

  curr_819 = local.end_of_code_819 ? null : {
    code = substr(var.code, local.iter_818.code_ptr, 1)
    input = substr(var.code, local.iter_818.code_ptr, 1) == "," ? substr(local.iter_818.input, 0, 1) : null
  }

  iter_819 = local.end_of_code_819 ? local.iter_818 : {
    input = (local.curr_819.code == ","
      ? substr(local.iter_818.input, 1, -1)
      : local.iter_818.input)

    output = (local.curr_819.code == "."
      ? "${local.iter_818.output}${jsondecode(format("\"\\u%04x\"", local.iter_818.tape[local.iter_818.tape_ptr]))}"
      : local.iter_818.output)
    
    tape = (
      local.curr_819.code == "+"
        ? [for i, b in local.iter_818.tape : (i == local.iter_818.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_819.code == "-"
        ? [for i, b in local.iter_818.tape : (i == local.iter_818.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_819.code == ","
        ? [for i, b in local.iter_818.tape : (i == local.iter_818.tape_ptr ? local.ascii_lookup[local.curr_819.input] : b)]
        : local.iter_818.tape)

    tape_ptr = (
      local.curr_819.code == "<"
        ? local.iter_818.tape_ptr == 0 ? length(local.iter_818.tape) - 1 : local.iter_818.tape_ptr - 1 :
      local.curr_819.code == ">"
        ? local.iter_818.tape_ptr == length(local.iter_818.tape) - 1 ? 0 : local.iter_818.tape_ptr + 1
        : local.iter_818.tape_ptr)

    code_ptr = 1 + (
      local.curr_819.code == "["
        ? local.iter_818.tape[local.iter_818.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_818.code_ptr)] : local.iter_818.code_ptr :
      local.curr_819.code == "]"
        ? local.iter_818.tape[local.iter_818.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_818.code_ptr)] : local.iter_818.code_ptr
        : local.iter_818.code_ptr)

    steps_taken = 1 + local.iter_818.steps_taken
  }
}

locals {
  end_of_code_820 = try(local.iter_819.code_ptr >= length(var.code), true)

  curr_820 = local.end_of_code_820 ? null : {
    code = substr(var.code, local.iter_819.code_ptr, 1)
    input = substr(var.code, local.iter_819.code_ptr, 1) == "," ? substr(local.iter_819.input, 0, 1) : null
  }

  iter_820 = local.end_of_code_820 ? local.iter_819 : {
    input = (local.curr_820.code == ","
      ? substr(local.iter_819.input, 1, -1)
      : local.iter_819.input)

    output = (local.curr_820.code == "."
      ? "${local.iter_819.output}${jsondecode(format("\"\\u%04x\"", local.iter_819.tape[local.iter_819.tape_ptr]))}"
      : local.iter_819.output)
    
    tape = (
      local.curr_820.code == "+"
        ? [for i, b in local.iter_819.tape : (i == local.iter_819.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_820.code == "-"
        ? [for i, b in local.iter_819.tape : (i == local.iter_819.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_820.code == ","
        ? [for i, b in local.iter_819.tape : (i == local.iter_819.tape_ptr ? local.ascii_lookup[local.curr_820.input] : b)]
        : local.iter_819.tape)

    tape_ptr = (
      local.curr_820.code == "<"
        ? local.iter_819.tape_ptr == 0 ? length(local.iter_819.tape) - 1 : local.iter_819.tape_ptr - 1 :
      local.curr_820.code == ">"
        ? local.iter_819.tape_ptr == length(local.iter_819.tape) - 1 ? 0 : local.iter_819.tape_ptr + 1
        : local.iter_819.tape_ptr)

    code_ptr = 1 + (
      local.curr_820.code == "["
        ? local.iter_819.tape[local.iter_819.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_819.code_ptr)] : local.iter_819.code_ptr :
      local.curr_820.code == "]"
        ? local.iter_819.tape[local.iter_819.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_819.code_ptr)] : local.iter_819.code_ptr
        : local.iter_819.code_ptr)

    steps_taken = 1 + local.iter_819.steps_taken
  }
}

locals {
  end_of_code_821 = try(local.iter_820.code_ptr >= length(var.code), true)

  curr_821 = local.end_of_code_821 ? null : {
    code = substr(var.code, local.iter_820.code_ptr, 1)
    input = substr(var.code, local.iter_820.code_ptr, 1) == "," ? substr(local.iter_820.input, 0, 1) : null
  }

  iter_821 = local.end_of_code_821 ? local.iter_820 : {
    input = (local.curr_821.code == ","
      ? substr(local.iter_820.input, 1, -1)
      : local.iter_820.input)

    output = (local.curr_821.code == "."
      ? "${local.iter_820.output}${jsondecode(format("\"\\u%04x\"", local.iter_820.tape[local.iter_820.tape_ptr]))}"
      : local.iter_820.output)
    
    tape = (
      local.curr_821.code == "+"
        ? [for i, b in local.iter_820.tape : (i == local.iter_820.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_821.code == "-"
        ? [for i, b in local.iter_820.tape : (i == local.iter_820.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_821.code == ","
        ? [for i, b in local.iter_820.tape : (i == local.iter_820.tape_ptr ? local.ascii_lookup[local.curr_821.input] : b)]
        : local.iter_820.tape)

    tape_ptr = (
      local.curr_821.code == "<"
        ? local.iter_820.tape_ptr == 0 ? length(local.iter_820.tape) - 1 : local.iter_820.tape_ptr - 1 :
      local.curr_821.code == ">"
        ? local.iter_820.tape_ptr == length(local.iter_820.tape) - 1 ? 0 : local.iter_820.tape_ptr + 1
        : local.iter_820.tape_ptr)

    code_ptr = 1 + (
      local.curr_821.code == "["
        ? local.iter_820.tape[local.iter_820.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_820.code_ptr)] : local.iter_820.code_ptr :
      local.curr_821.code == "]"
        ? local.iter_820.tape[local.iter_820.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_820.code_ptr)] : local.iter_820.code_ptr
        : local.iter_820.code_ptr)

    steps_taken = 1 + local.iter_820.steps_taken
  }
}

locals {
  end_of_code_822 = try(local.iter_821.code_ptr >= length(var.code), true)

  curr_822 = local.end_of_code_822 ? null : {
    code = substr(var.code, local.iter_821.code_ptr, 1)
    input = substr(var.code, local.iter_821.code_ptr, 1) == "," ? substr(local.iter_821.input, 0, 1) : null
  }

  iter_822 = local.end_of_code_822 ? local.iter_821 : {
    input = (local.curr_822.code == ","
      ? substr(local.iter_821.input, 1, -1)
      : local.iter_821.input)

    output = (local.curr_822.code == "."
      ? "${local.iter_821.output}${jsondecode(format("\"\\u%04x\"", local.iter_821.tape[local.iter_821.tape_ptr]))}"
      : local.iter_821.output)
    
    tape = (
      local.curr_822.code == "+"
        ? [for i, b in local.iter_821.tape : (i == local.iter_821.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_822.code == "-"
        ? [for i, b in local.iter_821.tape : (i == local.iter_821.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_822.code == ","
        ? [for i, b in local.iter_821.tape : (i == local.iter_821.tape_ptr ? local.ascii_lookup[local.curr_822.input] : b)]
        : local.iter_821.tape)

    tape_ptr = (
      local.curr_822.code == "<"
        ? local.iter_821.tape_ptr == 0 ? length(local.iter_821.tape) - 1 : local.iter_821.tape_ptr - 1 :
      local.curr_822.code == ">"
        ? local.iter_821.tape_ptr == length(local.iter_821.tape) - 1 ? 0 : local.iter_821.tape_ptr + 1
        : local.iter_821.tape_ptr)

    code_ptr = 1 + (
      local.curr_822.code == "["
        ? local.iter_821.tape[local.iter_821.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_821.code_ptr)] : local.iter_821.code_ptr :
      local.curr_822.code == "]"
        ? local.iter_821.tape[local.iter_821.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_821.code_ptr)] : local.iter_821.code_ptr
        : local.iter_821.code_ptr)

    steps_taken = 1 + local.iter_821.steps_taken
  }
}

locals {
  end_of_code_823 = try(local.iter_822.code_ptr >= length(var.code), true)

  curr_823 = local.end_of_code_823 ? null : {
    code = substr(var.code, local.iter_822.code_ptr, 1)
    input = substr(var.code, local.iter_822.code_ptr, 1) == "," ? substr(local.iter_822.input, 0, 1) : null
  }

  iter_823 = local.end_of_code_823 ? local.iter_822 : {
    input = (local.curr_823.code == ","
      ? substr(local.iter_822.input, 1, -1)
      : local.iter_822.input)

    output = (local.curr_823.code == "."
      ? "${local.iter_822.output}${jsondecode(format("\"\\u%04x\"", local.iter_822.tape[local.iter_822.tape_ptr]))}"
      : local.iter_822.output)
    
    tape = (
      local.curr_823.code == "+"
        ? [for i, b in local.iter_822.tape : (i == local.iter_822.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_823.code == "-"
        ? [for i, b in local.iter_822.tape : (i == local.iter_822.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_823.code == ","
        ? [for i, b in local.iter_822.tape : (i == local.iter_822.tape_ptr ? local.ascii_lookup[local.curr_823.input] : b)]
        : local.iter_822.tape)

    tape_ptr = (
      local.curr_823.code == "<"
        ? local.iter_822.tape_ptr == 0 ? length(local.iter_822.tape) - 1 : local.iter_822.tape_ptr - 1 :
      local.curr_823.code == ">"
        ? local.iter_822.tape_ptr == length(local.iter_822.tape) - 1 ? 0 : local.iter_822.tape_ptr + 1
        : local.iter_822.tape_ptr)

    code_ptr = 1 + (
      local.curr_823.code == "["
        ? local.iter_822.tape[local.iter_822.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_822.code_ptr)] : local.iter_822.code_ptr :
      local.curr_823.code == "]"
        ? local.iter_822.tape[local.iter_822.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_822.code_ptr)] : local.iter_822.code_ptr
        : local.iter_822.code_ptr)

    steps_taken = 1 + local.iter_822.steps_taken
  }
}

locals {
  end_of_code_824 = try(local.iter_823.code_ptr >= length(var.code), true)

  curr_824 = local.end_of_code_824 ? null : {
    code = substr(var.code, local.iter_823.code_ptr, 1)
    input = substr(var.code, local.iter_823.code_ptr, 1) == "," ? substr(local.iter_823.input, 0, 1) : null
  }

  iter_824 = local.end_of_code_824 ? local.iter_823 : {
    input = (local.curr_824.code == ","
      ? substr(local.iter_823.input, 1, -1)
      : local.iter_823.input)

    output = (local.curr_824.code == "."
      ? "${local.iter_823.output}${jsondecode(format("\"\\u%04x\"", local.iter_823.tape[local.iter_823.tape_ptr]))}"
      : local.iter_823.output)
    
    tape = (
      local.curr_824.code == "+"
        ? [for i, b in local.iter_823.tape : (i == local.iter_823.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_824.code == "-"
        ? [for i, b in local.iter_823.tape : (i == local.iter_823.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_824.code == ","
        ? [for i, b in local.iter_823.tape : (i == local.iter_823.tape_ptr ? local.ascii_lookup[local.curr_824.input] : b)]
        : local.iter_823.tape)

    tape_ptr = (
      local.curr_824.code == "<"
        ? local.iter_823.tape_ptr == 0 ? length(local.iter_823.tape) - 1 : local.iter_823.tape_ptr - 1 :
      local.curr_824.code == ">"
        ? local.iter_823.tape_ptr == length(local.iter_823.tape) - 1 ? 0 : local.iter_823.tape_ptr + 1
        : local.iter_823.tape_ptr)

    code_ptr = 1 + (
      local.curr_824.code == "["
        ? local.iter_823.tape[local.iter_823.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_823.code_ptr)] : local.iter_823.code_ptr :
      local.curr_824.code == "]"
        ? local.iter_823.tape[local.iter_823.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_823.code_ptr)] : local.iter_823.code_ptr
        : local.iter_823.code_ptr)

    steps_taken = 1 + local.iter_823.steps_taken
  }
}

locals {
  end_of_code_825 = try(local.iter_824.code_ptr >= length(var.code), true)

  curr_825 = local.end_of_code_825 ? null : {
    code = substr(var.code, local.iter_824.code_ptr, 1)
    input = substr(var.code, local.iter_824.code_ptr, 1) == "," ? substr(local.iter_824.input, 0, 1) : null
  }

  iter_825 = local.end_of_code_825 ? local.iter_824 : {
    input = (local.curr_825.code == ","
      ? substr(local.iter_824.input, 1, -1)
      : local.iter_824.input)

    output = (local.curr_825.code == "."
      ? "${local.iter_824.output}${jsondecode(format("\"\\u%04x\"", local.iter_824.tape[local.iter_824.tape_ptr]))}"
      : local.iter_824.output)
    
    tape = (
      local.curr_825.code == "+"
        ? [for i, b in local.iter_824.tape : (i == local.iter_824.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_825.code == "-"
        ? [for i, b in local.iter_824.tape : (i == local.iter_824.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_825.code == ","
        ? [for i, b in local.iter_824.tape : (i == local.iter_824.tape_ptr ? local.ascii_lookup[local.curr_825.input] : b)]
        : local.iter_824.tape)

    tape_ptr = (
      local.curr_825.code == "<"
        ? local.iter_824.tape_ptr == 0 ? length(local.iter_824.tape) - 1 : local.iter_824.tape_ptr - 1 :
      local.curr_825.code == ">"
        ? local.iter_824.tape_ptr == length(local.iter_824.tape) - 1 ? 0 : local.iter_824.tape_ptr + 1
        : local.iter_824.tape_ptr)

    code_ptr = 1 + (
      local.curr_825.code == "["
        ? local.iter_824.tape[local.iter_824.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_824.code_ptr)] : local.iter_824.code_ptr :
      local.curr_825.code == "]"
        ? local.iter_824.tape[local.iter_824.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_824.code_ptr)] : local.iter_824.code_ptr
        : local.iter_824.code_ptr)

    steps_taken = 1 + local.iter_824.steps_taken
  }
}

locals {
  end_of_code_826 = try(local.iter_825.code_ptr >= length(var.code), true)

  curr_826 = local.end_of_code_826 ? null : {
    code = substr(var.code, local.iter_825.code_ptr, 1)
    input = substr(var.code, local.iter_825.code_ptr, 1) == "," ? substr(local.iter_825.input, 0, 1) : null
  }

  iter_826 = local.end_of_code_826 ? local.iter_825 : {
    input = (local.curr_826.code == ","
      ? substr(local.iter_825.input, 1, -1)
      : local.iter_825.input)

    output = (local.curr_826.code == "."
      ? "${local.iter_825.output}${jsondecode(format("\"\\u%04x\"", local.iter_825.tape[local.iter_825.tape_ptr]))}"
      : local.iter_825.output)
    
    tape = (
      local.curr_826.code == "+"
        ? [for i, b in local.iter_825.tape : (i == local.iter_825.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_826.code == "-"
        ? [for i, b in local.iter_825.tape : (i == local.iter_825.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_826.code == ","
        ? [for i, b in local.iter_825.tape : (i == local.iter_825.tape_ptr ? local.ascii_lookup[local.curr_826.input] : b)]
        : local.iter_825.tape)

    tape_ptr = (
      local.curr_826.code == "<"
        ? local.iter_825.tape_ptr == 0 ? length(local.iter_825.tape) - 1 : local.iter_825.tape_ptr - 1 :
      local.curr_826.code == ">"
        ? local.iter_825.tape_ptr == length(local.iter_825.tape) - 1 ? 0 : local.iter_825.tape_ptr + 1
        : local.iter_825.tape_ptr)

    code_ptr = 1 + (
      local.curr_826.code == "["
        ? local.iter_825.tape[local.iter_825.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_825.code_ptr)] : local.iter_825.code_ptr :
      local.curr_826.code == "]"
        ? local.iter_825.tape[local.iter_825.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_825.code_ptr)] : local.iter_825.code_ptr
        : local.iter_825.code_ptr)

    steps_taken = 1 + local.iter_825.steps_taken
  }
}

locals {
  end_of_code_827 = try(local.iter_826.code_ptr >= length(var.code), true)

  curr_827 = local.end_of_code_827 ? null : {
    code = substr(var.code, local.iter_826.code_ptr, 1)
    input = substr(var.code, local.iter_826.code_ptr, 1) == "," ? substr(local.iter_826.input, 0, 1) : null
  }

  iter_827 = local.end_of_code_827 ? local.iter_826 : {
    input = (local.curr_827.code == ","
      ? substr(local.iter_826.input, 1, -1)
      : local.iter_826.input)

    output = (local.curr_827.code == "."
      ? "${local.iter_826.output}${jsondecode(format("\"\\u%04x\"", local.iter_826.tape[local.iter_826.tape_ptr]))}"
      : local.iter_826.output)
    
    tape = (
      local.curr_827.code == "+"
        ? [for i, b in local.iter_826.tape : (i == local.iter_826.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_827.code == "-"
        ? [for i, b in local.iter_826.tape : (i == local.iter_826.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_827.code == ","
        ? [for i, b in local.iter_826.tape : (i == local.iter_826.tape_ptr ? local.ascii_lookup[local.curr_827.input] : b)]
        : local.iter_826.tape)

    tape_ptr = (
      local.curr_827.code == "<"
        ? local.iter_826.tape_ptr == 0 ? length(local.iter_826.tape) - 1 : local.iter_826.tape_ptr - 1 :
      local.curr_827.code == ">"
        ? local.iter_826.tape_ptr == length(local.iter_826.tape) - 1 ? 0 : local.iter_826.tape_ptr + 1
        : local.iter_826.tape_ptr)

    code_ptr = 1 + (
      local.curr_827.code == "["
        ? local.iter_826.tape[local.iter_826.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_826.code_ptr)] : local.iter_826.code_ptr :
      local.curr_827.code == "]"
        ? local.iter_826.tape[local.iter_826.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_826.code_ptr)] : local.iter_826.code_ptr
        : local.iter_826.code_ptr)

    steps_taken = 1 + local.iter_826.steps_taken
  }
}

locals {
  end_of_code_828 = try(local.iter_827.code_ptr >= length(var.code), true)

  curr_828 = local.end_of_code_828 ? null : {
    code = substr(var.code, local.iter_827.code_ptr, 1)
    input = substr(var.code, local.iter_827.code_ptr, 1) == "," ? substr(local.iter_827.input, 0, 1) : null
  }

  iter_828 = local.end_of_code_828 ? local.iter_827 : {
    input = (local.curr_828.code == ","
      ? substr(local.iter_827.input, 1, -1)
      : local.iter_827.input)

    output = (local.curr_828.code == "."
      ? "${local.iter_827.output}${jsondecode(format("\"\\u%04x\"", local.iter_827.tape[local.iter_827.tape_ptr]))}"
      : local.iter_827.output)
    
    tape = (
      local.curr_828.code == "+"
        ? [for i, b in local.iter_827.tape : (i == local.iter_827.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_828.code == "-"
        ? [for i, b in local.iter_827.tape : (i == local.iter_827.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_828.code == ","
        ? [for i, b in local.iter_827.tape : (i == local.iter_827.tape_ptr ? local.ascii_lookup[local.curr_828.input] : b)]
        : local.iter_827.tape)

    tape_ptr = (
      local.curr_828.code == "<"
        ? local.iter_827.tape_ptr == 0 ? length(local.iter_827.tape) - 1 : local.iter_827.tape_ptr - 1 :
      local.curr_828.code == ">"
        ? local.iter_827.tape_ptr == length(local.iter_827.tape) - 1 ? 0 : local.iter_827.tape_ptr + 1
        : local.iter_827.tape_ptr)

    code_ptr = 1 + (
      local.curr_828.code == "["
        ? local.iter_827.tape[local.iter_827.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_827.code_ptr)] : local.iter_827.code_ptr :
      local.curr_828.code == "]"
        ? local.iter_827.tape[local.iter_827.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_827.code_ptr)] : local.iter_827.code_ptr
        : local.iter_827.code_ptr)

    steps_taken = 1 + local.iter_827.steps_taken
  }
}

locals {
  end_of_code_829 = try(local.iter_828.code_ptr >= length(var.code), true)

  curr_829 = local.end_of_code_829 ? null : {
    code = substr(var.code, local.iter_828.code_ptr, 1)
    input = substr(var.code, local.iter_828.code_ptr, 1) == "," ? substr(local.iter_828.input, 0, 1) : null
  }

  iter_829 = local.end_of_code_829 ? local.iter_828 : {
    input = (local.curr_829.code == ","
      ? substr(local.iter_828.input, 1, -1)
      : local.iter_828.input)

    output = (local.curr_829.code == "."
      ? "${local.iter_828.output}${jsondecode(format("\"\\u%04x\"", local.iter_828.tape[local.iter_828.tape_ptr]))}"
      : local.iter_828.output)
    
    tape = (
      local.curr_829.code == "+"
        ? [for i, b in local.iter_828.tape : (i == local.iter_828.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_829.code == "-"
        ? [for i, b in local.iter_828.tape : (i == local.iter_828.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_829.code == ","
        ? [for i, b in local.iter_828.tape : (i == local.iter_828.tape_ptr ? local.ascii_lookup[local.curr_829.input] : b)]
        : local.iter_828.tape)

    tape_ptr = (
      local.curr_829.code == "<"
        ? local.iter_828.tape_ptr == 0 ? length(local.iter_828.tape) - 1 : local.iter_828.tape_ptr - 1 :
      local.curr_829.code == ">"
        ? local.iter_828.tape_ptr == length(local.iter_828.tape) - 1 ? 0 : local.iter_828.tape_ptr + 1
        : local.iter_828.tape_ptr)

    code_ptr = 1 + (
      local.curr_829.code == "["
        ? local.iter_828.tape[local.iter_828.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_828.code_ptr)] : local.iter_828.code_ptr :
      local.curr_829.code == "]"
        ? local.iter_828.tape[local.iter_828.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_828.code_ptr)] : local.iter_828.code_ptr
        : local.iter_828.code_ptr)

    steps_taken = 1 + local.iter_828.steps_taken
  }
}

locals {
  end_of_code_830 = try(local.iter_829.code_ptr >= length(var.code), true)

  curr_830 = local.end_of_code_830 ? null : {
    code = substr(var.code, local.iter_829.code_ptr, 1)
    input = substr(var.code, local.iter_829.code_ptr, 1) == "," ? substr(local.iter_829.input, 0, 1) : null
  }

  iter_830 = local.end_of_code_830 ? local.iter_829 : {
    input = (local.curr_830.code == ","
      ? substr(local.iter_829.input, 1, -1)
      : local.iter_829.input)

    output = (local.curr_830.code == "."
      ? "${local.iter_829.output}${jsondecode(format("\"\\u%04x\"", local.iter_829.tape[local.iter_829.tape_ptr]))}"
      : local.iter_829.output)
    
    tape = (
      local.curr_830.code == "+"
        ? [for i, b in local.iter_829.tape : (i == local.iter_829.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_830.code == "-"
        ? [for i, b in local.iter_829.tape : (i == local.iter_829.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_830.code == ","
        ? [for i, b in local.iter_829.tape : (i == local.iter_829.tape_ptr ? local.ascii_lookup[local.curr_830.input] : b)]
        : local.iter_829.tape)

    tape_ptr = (
      local.curr_830.code == "<"
        ? local.iter_829.tape_ptr == 0 ? length(local.iter_829.tape) - 1 : local.iter_829.tape_ptr - 1 :
      local.curr_830.code == ">"
        ? local.iter_829.tape_ptr == length(local.iter_829.tape) - 1 ? 0 : local.iter_829.tape_ptr + 1
        : local.iter_829.tape_ptr)

    code_ptr = 1 + (
      local.curr_830.code == "["
        ? local.iter_829.tape[local.iter_829.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_829.code_ptr)] : local.iter_829.code_ptr :
      local.curr_830.code == "]"
        ? local.iter_829.tape[local.iter_829.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_829.code_ptr)] : local.iter_829.code_ptr
        : local.iter_829.code_ptr)

    steps_taken = 1 + local.iter_829.steps_taken
  }
}

locals {
  end_of_code_831 = try(local.iter_830.code_ptr >= length(var.code), true)

  curr_831 = local.end_of_code_831 ? null : {
    code = substr(var.code, local.iter_830.code_ptr, 1)
    input = substr(var.code, local.iter_830.code_ptr, 1) == "," ? substr(local.iter_830.input, 0, 1) : null
  }

  iter_831 = local.end_of_code_831 ? local.iter_830 : {
    input = (local.curr_831.code == ","
      ? substr(local.iter_830.input, 1, -1)
      : local.iter_830.input)

    output = (local.curr_831.code == "."
      ? "${local.iter_830.output}${jsondecode(format("\"\\u%04x\"", local.iter_830.tape[local.iter_830.tape_ptr]))}"
      : local.iter_830.output)
    
    tape = (
      local.curr_831.code == "+"
        ? [for i, b in local.iter_830.tape : (i == local.iter_830.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_831.code == "-"
        ? [for i, b in local.iter_830.tape : (i == local.iter_830.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_831.code == ","
        ? [for i, b in local.iter_830.tape : (i == local.iter_830.tape_ptr ? local.ascii_lookup[local.curr_831.input] : b)]
        : local.iter_830.tape)

    tape_ptr = (
      local.curr_831.code == "<"
        ? local.iter_830.tape_ptr == 0 ? length(local.iter_830.tape) - 1 : local.iter_830.tape_ptr - 1 :
      local.curr_831.code == ">"
        ? local.iter_830.tape_ptr == length(local.iter_830.tape) - 1 ? 0 : local.iter_830.tape_ptr + 1
        : local.iter_830.tape_ptr)

    code_ptr = 1 + (
      local.curr_831.code == "["
        ? local.iter_830.tape[local.iter_830.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_830.code_ptr)] : local.iter_830.code_ptr :
      local.curr_831.code == "]"
        ? local.iter_830.tape[local.iter_830.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_830.code_ptr)] : local.iter_830.code_ptr
        : local.iter_830.code_ptr)

    steps_taken = 1 + local.iter_830.steps_taken
  }
}

locals {
  end_of_code_832 = try(local.iter_831.code_ptr >= length(var.code), true)

  curr_832 = local.end_of_code_832 ? null : {
    code = substr(var.code, local.iter_831.code_ptr, 1)
    input = substr(var.code, local.iter_831.code_ptr, 1) == "," ? substr(local.iter_831.input, 0, 1) : null
  }

  iter_832 = local.end_of_code_832 ? local.iter_831 : {
    input = (local.curr_832.code == ","
      ? substr(local.iter_831.input, 1, -1)
      : local.iter_831.input)

    output = (local.curr_832.code == "."
      ? "${local.iter_831.output}${jsondecode(format("\"\\u%04x\"", local.iter_831.tape[local.iter_831.tape_ptr]))}"
      : local.iter_831.output)
    
    tape = (
      local.curr_832.code == "+"
        ? [for i, b in local.iter_831.tape : (i == local.iter_831.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_832.code == "-"
        ? [for i, b in local.iter_831.tape : (i == local.iter_831.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_832.code == ","
        ? [for i, b in local.iter_831.tape : (i == local.iter_831.tape_ptr ? local.ascii_lookup[local.curr_832.input] : b)]
        : local.iter_831.tape)

    tape_ptr = (
      local.curr_832.code == "<"
        ? local.iter_831.tape_ptr == 0 ? length(local.iter_831.tape) - 1 : local.iter_831.tape_ptr - 1 :
      local.curr_832.code == ">"
        ? local.iter_831.tape_ptr == length(local.iter_831.tape) - 1 ? 0 : local.iter_831.tape_ptr + 1
        : local.iter_831.tape_ptr)

    code_ptr = 1 + (
      local.curr_832.code == "["
        ? local.iter_831.tape[local.iter_831.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_831.code_ptr)] : local.iter_831.code_ptr :
      local.curr_832.code == "]"
        ? local.iter_831.tape[local.iter_831.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_831.code_ptr)] : local.iter_831.code_ptr
        : local.iter_831.code_ptr)

    steps_taken = 1 + local.iter_831.steps_taken
  }
}

locals {
  end_of_code_833 = try(local.iter_832.code_ptr >= length(var.code), true)

  curr_833 = local.end_of_code_833 ? null : {
    code = substr(var.code, local.iter_832.code_ptr, 1)
    input = substr(var.code, local.iter_832.code_ptr, 1) == "," ? substr(local.iter_832.input, 0, 1) : null
  }

  iter_833 = local.end_of_code_833 ? local.iter_832 : {
    input = (local.curr_833.code == ","
      ? substr(local.iter_832.input, 1, -1)
      : local.iter_832.input)

    output = (local.curr_833.code == "."
      ? "${local.iter_832.output}${jsondecode(format("\"\\u%04x\"", local.iter_832.tape[local.iter_832.tape_ptr]))}"
      : local.iter_832.output)
    
    tape = (
      local.curr_833.code == "+"
        ? [for i, b in local.iter_832.tape : (i == local.iter_832.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_833.code == "-"
        ? [for i, b in local.iter_832.tape : (i == local.iter_832.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_833.code == ","
        ? [for i, b in local.iter_832.tape : (i == local.iter_832.tape_ptr ? local.ascii_lookup[local.curr_833.input] : b)]
        : local.iter_832.tape)

    tape_ptr = (
      local.curr_833.code == "<"
        ? local.iter_832.tape_ptr == 0 ? length(local.iter_832.tape) - 1 : local.iter_832.tape_ptr - 1 :
      local.curr_833.code == ">"
        ? local.iter_832.tape_ptr == length(local.iter_832.tape) - 1 ? 0 : local.iter_832.tape_ptr + 1
        : local.iter_832.tape_ptr)

    code_ptr = 1 + (
      local.curr_833.code == "["
        ? local.iter_832.tape[local.iter_832.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_832.code_ptr)] : local.iter_832.code_ptr :
      local.curr_833.code == "]"
        ? local.iter_832.tape[local.iter_832.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_832.code_ptr)] : local.iter_832.code_ptr
        : local.iter_832.code_ptr)

    steps_taken = 1 + local.iter_832.steps_taken
  }
}

locals {
  end_of_code_834 = try(local.iter_833.code_ptr >= length(var.code), true)

  curr_834 = local.end_of_code_834 ? null : {
    code = substr(var.code, local.iter_833.code_ptr, 1)
    input = substr(var.code, local.iter_833.code_ptr, 1) == "," ? substr(local.iter_833.input, 0, 1) : null
  }

  iter_834 = local.end_of_code_834 ? local.iter_833 : {
    input = (local.curr_834.code == ","
      ? substr(local.iter_833.input, 1, -1)
      : local.iter_833.input)

    output = (local.curr_834.code == "."
      ? "${local.iter_833.output}${jsondecode(format("\"\\u%04x\"", local.iter_833.tape[local.iter_833.tape_ptr]))}"
      : local.iter_833.output)
    
    tape = (
      local.curr_834.code == "+"
        ? [for i, b in local.iter_833.tape : (i == local.iter_833.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_834.code == "-"
        ? [for i, b in local.iter_833.tape : (i == local.iter_833.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_834.code == ","
        ? [for i, b in local.iter_833.tape : (i == local.iter_833.tape_ptr ? local.ascii_lookup[local.curr_834.input] : b)]
        : local.iter_833.tape)

    tape_ptr = (
      local.curr_834.code == "<"
        ? local.iter_833.tape_ptr == 0 ? length(local.iter_833.tape) - 1 : local.iter_833.tape_ptr - 1 :
      local.curr_834.code == ">"
        ? local.iter_833.tape_ptr == length(local.iter_833.tape) - 1 ? 0 : local.iter_833.tape_ptr + 1
        : local.iter_833.tape_ptr)

    code_ptr = 1 + (
      local.curr_834.code == "["
        ? local.iter_833.tape[local.iter_833.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_833.code_ptr)] : local.iter_833.code_ptr :
      local.curr_834.code == "]"
        ? local.iter_833.tape[local.iter_833.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_833.code_ptr)] : local.iter_833.code_ptr
        : local.iter_833.code_ptr)

    steps_taken = 1 + local.iter_833.steps_taken
  }
}

locals {
  end_of_code_835 = try(local.iter_834.code_ptr >= length(var.code), true)

  curr_835 = local.end_of_code_835 ? null : {
    code = substr(var.code, local.iter_834.code_ptr, 1)
    input = substr(var.code, local.iter_834.code_ptr, 1) == "," ? substr(local.iter_834.input, 0, 1) : null
  }

  iter_835 = local.end_of_code_835 ? local.iter_834 : {
    input = (local.curr_835.code == ","
      ? substr(local.iter_834.input, 1, -1)
      : local.iter_834.input)

    output = (local.curr_835.code == "."
      ? "${local.iter_834.output}${jsondecode(format("\"\\u%04x\"", local.iter_834.tape[local.iter_834.tape_ptr]))}"
      : local.iter_834.output)
    
    tape = (
      local.curr_835.code == "+"
        ? [for i, b in local.iter_834.tape : (i == local.iter_834.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_835.code == "-"
        ? [for i, b in local.iter_834.tape : (i == local.iter_834.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_835.code == ","
        ? [for i, b in local.iter_834.tape : (i == local.iter_834.tape_ptr ? local.ascii_lookup[local.curr_835.input] : b)]
        : local.iter_834.tape)

    tape_ptr = (
      local.curr_835.code == "<"
        ? local.iter_834.tape_ptr == 0 ? length(local.iter_834.tape) - 1 : local.iter_834.tape_ptr - 1 :
      local.curr_835.code == ">"
        ? local.iter_834.tape_ptr == length(local.iter_834.tape) - 1 ? 0 : local.iter_834.tape_ptr + 1
        : local.iter_834.tape_ptr)

    code_ptr = 1 + (
      local.curr_835.code == "["
        ? local.iter_834.tape[local.iter_834.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_834.code_ptr)] : local.iter_834.code_ptr :
      local.curr_835.code == "]"
        ? local.iter_834.tape[local.iter_834.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_834.code_ptr)] : local.iter_834.code_ptr
        : local.iter_834.code_ptr)

    steps_taken = 1 + local.iter_834.steps_taken
  }
}

locals {
  end_of_code_836 = try(local.iter_835.code_ptr >= length(var.code), true)

  curr_836 = local.end_of_code_836 ? null : {
    code = substr(var.code, local.iter_835.code_ptr, 1)
    input = substr(var.code, local.iter_835.code_ptr, 1) == "," ? substr(local.iter_835.input, 0, 1) : null
  }

  iter_836 = local.end_of_code_836 ? local.iter_835 : {
    input = (local.curr_836.code == ","
      ? substr(local.iter_835.input, 1, -1)
      : local.iter_835.input)

    output = (local.curr_836.code == "."
      ? "${local.iter_835.output}${jsondecode(format("\"\\u%04x\"", local.iter_835.tape[local.iter_835.tape_ptr]))}"
      : local.iter_835.output)
    
    tape = (
      local.curr_836.code == "+"
        ? [for i, b in local.iter_835.tape : (i == local.iter_835.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_836.code == "-"
        ? [for i, b in local.iter_835.tape : (i == local.iter_835.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_836.code == ","
        ? [for i, b in local.iter_835.tape : (i == local.iter_835.tape_ptr ? local.ascii_lookup[local.curr_836.input] : b)]
        : local.iter_835.tape)

    tape_ptr = (
      local.curr_836.code == "<"
        ? local.iter_835.tape_ptr == 0 ? length(local.iter_835.tape) - 1 : local.iter_835.tape_ptr - 1 :
      local.curr_836.code == ">"
        ? local.iter_835.tape_ptr == length(local.iter_835.tape) - 1 ? 0 : local.iter_835.tape_ptr + 1
        : local.iter_835.tape_ptr)

    code_ptr = 1 + (
      local.curr_836.code == "["
        ? local.iter_835.tape[local.iter_835.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_835.code_ptr)] : local.iter_835.code_ptr :
      local.curr_836.code == "]"
        ? local.iter_835.tape[local.iter_835.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_835.code_ptr)] : local.iter_835.code_ptr
        : local.iter_835.code_ptr)

    steps_taken = 1 + local.iter_835.steps_taken
  }
}

locals {
  end_of_code_837 = try(local.iter_836.code_ptr >= length(var.code), true)

  curr_837 = local.end_of_code_837 ? null : {
    code = substr(var.code, local.iter_836.code_ptr, 1)
    input = substr(var.code, local.iter_836.code_ptr, 1) == "," ? substr(local.iter_836.input, 0, 1) : null
  }

  iter_837 = local.end_of_code_837 ? local.iter_836 : {
    input = (local.curr_837.code == ","
      ? substr(local.iter_836.input, 1, -1)
      : local.iter_836.input)

    output = (local.curr_837.code == "."
      ? "${local.iter_836.output}${jsondecode(format("\"\\u%04x\"", local.iter_836.tape[local.iter_836.tape_ptr]))}"
      : local.iter_836.output)
    
    tape = (
      local.curr_837.code == "+"
        ? [for i, b in local.iter_836.tape : (i == local.iter_836.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_837.code == "-"
        ? [for i, b in local.iter_836.tape : (i == local.iter_836.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_837.code == ","
        ? [for i, b in local.iter_836.tape : (i == local.iter_836.tape_ptr ? local.ascii_lookup[local.curr_837.input] : b)]
        : local.iter_836.tape)

    tape_ptr = (
      local.curr_837.code == "<"
        ? local.iter_836.tape_ptr == 0 ? length(local.iter_836.tape) - 1 : local.iter_836.tape_ptr - 1 :
      local.curr_837.code == ">"
        ? local.iter_836.tape_ptr == length(local.iter_836.tape) - 1 ? 0 : local.iter_836.tape_ptr + 1
        : local.iter_836.tape_ptr)

    code_ptr = 1 + (
      local.curr_837.code == "["
        ? local.iter_836.tape[local.iter_836.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_836.code_ptr)] : local.iter_836.code_ptr :
      local.curr_837.code == "]"
        ? local.iter_836.tape[local.iter_836.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_836.code_ptr)] : local.iter_836.code_ptr
        : local.iter_836.code_ptr)

    steps_taken = 1 + local.iter_836.steps_taken
  }
}

locals {
  end_of_code_838 = try(local.iter_837.code_ptr >= length(var.code), true)

  curr_838 = local.end_of_code_838 ? null : {
    code = substr(var.code, local.iter_837.code_ptr, 1)
    input = substr(var.code, local.iter_837.code_ptr, 1) == "," ? substr(local.iter_837.input, 0, 1) : null
  }

  iter_838 = local.end_of_code_838 ? local.iter_837 : {
    input = (local.curr_838.code == ","
      ? substr(local.iter_837.input, 1, -1)
      : local.iter_837.input)

    output = (local.curr_838.code == "."
      ? "${local.iter_837.output}${jsondecode(format("\"\\u%04x\"", local.iter_837.tape[local.iter_837.tape_ptr]))}"
      : local.iter_837.output)
    
    tape = (
      local.curr_838.code == "+"
        ? [for i, b in local.iter_837.tape : (i == local.iter_837.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_838.code == "-"
        ? [for i, b in local.iter_837.tape : (i == local.iter_837.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_838.code == ","
        ? [for i, b in local.iter_837.tape : (i == local.iter_837.tape_ptr ? local.ascii_lookup[local.curr_838.input] : b)]
        : local.iter_837.tape)

    tape_ptr = (
      local.curr_838.code == "<"
        ? local.iter_837.tape_ptr == 0 ? length(local.iter_837.tape) - 1 : local.iter_837.tape_ptr - 1 :
      local.curr_838.code == ">"
        ? local.iter_837.tape_ptr == length(local.iter_837.tape) - 1 ? 0 : local.iter_837.tape_ptr + 1
        : local.iter_837.tape_ptr)

    code_ptr = 1 + (
      local.curr_838.code == "["
        ? local.iter_837.tape[local.iter_837.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_837.code_ptr)] : local.iter_837.code_ptr :
      local.curr_838.code == "]"
        ? local.iter_837.tape[local.iter_837.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_837.code_ptr)] : local.iter_837.code_ptr
        : local.iter_837.code_ptr)

    steps_taken = 1 + local.iter_837.steps_taken
  }
}

locals {
  end_of_code_839 = try(local.iter_838.code_ptr >= length(var.code), true)

  curr_839 = local.end_of_code_839 ? null : {
    code = substr(var.code, local.iter_838.code_ptr, 1)
    input = substr(var.code, local.iter_838.code_ptr, 1) == "," ? substr(local.iter_838.input, 0, 1) : null
  }

  iter_839 = local.end_of_code_839 ? local.iter_838 : {
    input = (local.curr_839.code == ","
      ? substr(local.iter_838.input, 1, -1)
      : local.iter_838.input)

    output = (local.curr_839.code == "."
      ? "${local.iter_838.output}${jsondecode(format("\"\\u%04x\"", local.iter_838.tape[local.iter_838.tape_ptr]))}"
      : local.iter_838.output)
    
    tape = (
      local.curr_839.code == "+"
        ? [for i, b in local.iter_838.tape : (i == local.iter_838.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_839.code == "-"
        ? [for i, b in local.iter_838.tape : (i == local.iter_838.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_839.code == ","
        ? [for i, b in local.iter_838.tape : (i == local.iter_838.tape_ptr ? local.ascii_lookup[local.curr_839.input] : b)]
        : local.iter_838.tape)

    tape_ptr = (
      local.curr_839.code == "<"
        ? local.iter_838.tape_ptr == 0 ? length(local.iter_838.tape) - 1 : local.iter_838.tape_ptr - 1 :
      local.curr_839.code == ">"
        ? local.iter_838.tape_ptr == length(local.iter_838.tape) - 1 ? 0 : local.iter_838.tape_ptr + 1
        : local.iter_838.tape_ptr)

    code_ptr = 1 + (
      local.curr_839.code == "["
        ? local.iter_838.tape[local.iter_838.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_838.code_ptr)] : local.iter_838.code_ptr :
      local.curr_839.code == "]"
        ? local.iter_838.tape[local.iter_838.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_838.code_ptr)] : local.iter_838.code_ptr
        : local.iter_838.code_ptr)

    steps_taken = 1 + local.iter_838.steps_taken
  }
}

locals {
  end_of_code_840 = try(local.iter_839.code_ptr >= length(var.code), true)

  curr_840 = local.end_of_code_840 ? null : {
    code = substr(var.code, local.iter_839.code_ptr, 1)
    input = substr(var.code, local.iter_839.code_ptr, 1) == "," ? substr(local.iter_839.input, 0, 1) : null
  }

  iter_840 = local.end_of_code_840 ? local.iter_839 : {
    input = (local.curr_840.code == ","
      ? substr(local.iter_839.input, 1, -1)
      : local.iter_839.input)

    output = (local.curr_840.code == "."
      ? "${local.iter_839.output}${jsondecode(format("\"\\u%04x\"", local.iter_839.tape[local.iter_839.tape_ptr]))}"
      : local.iter_839.output)
    
    tape = (
      local.curr_840.code == "+"
        ? [for i, b in local.iter_839.tape : (i == local.iter_839.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_840.code == "-"
        ? [for i, b in local.iter_839.tape : (i == local.iter_839.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_840.code == ","
        ? [for i, b in local.iter_839.tape : (i == local.iter_839.tape_ptr ? local.ascii_lookup[local.curr_840.input] : b)]
        : local.iter_839.tape)

    tape_ptr = (
      local.curr_840.code == "<"
        ? local.iter_839.tape_ptr == 0 ? length(local.iter_839.tape) - 1 : local.iter_839.tape_ptr - 1 :
      local.curr_840.code == ">"
        ? local.iter_839.tape_ptr == length(local.iter_839.tape) - 1 ? 0 : local.iter_839.tape_ptr + 1
        : local.iter_839.tape_ptr)

    code_ptr = 1 + (
      local.curr_840.code == "["
        ? local.iter_839.tape[local.iter_839.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_839.code_ptr)] : local.iter_839.code_ptr :
      local.curr_840.code == "]"
        ? local.iter_839.tape[local.iter_839.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_839.code_ptr)] : local.iter_839.code_ptr
        : local.iter_839.code_ptr)

    steps_taken = 1 + local.iter_839.steps_taken
  }
}

locals {
  end_of_code_841 = try(local.iter_840.code_ptr >= length(var.code), true)

  curr_841 = local.end_of_code_841 ? null : {
    code = substr(var.code, local.iter_840.code_ptr, 1)
    input = substr(var.code, local.iter_840.code_ptr, 1) == "," ? substr(local.iter_840.input, 0, 1) : null
  }

  iter_841 = local.end_of_code_841 ? local.iter_840 : {
    input = (local.curr_841.code == ","
      ? substr(local.iter_840.input, 1, -1)
      : local.iter_840.input)

    output = (local.curr_841.code == "."
      ? "${local.iter_840.output}${jsondecode(format("\"\\u%04x\"", local.iter_840.tape[local.iter_840.tape_ptr]))}"
      : local.iter_840.output)
    
    tape = (
      local.curr_841.code == "+"
        ? [for i, b in local.iter_840.tape : (i == local.iter_840.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_841.code == "-"
        ? [for i, b in local.iter_840.tape : (i == local.iter_840.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_841.code == ","
        ? [for i, b in local.iter_840.tape : (i == local.iter_840.tape_ptr ? local.ascii_lookup[local.curr_841.input] : b)]
        : local.iter_840.tape)

    tape_ptr = (
      local.curr_841.code == "<"
        ? local.iter_840.tape_ptr == 0 ? length(local.iter_840.tape) - 1 : local.iter_840.tape_ptr - 1 :
      local.curr_841.code == ">"
        ? local.iter_840.tape_ptr == length(local.iter_840.tape) - 1 ? 0 : local.iter_840.tape_ptr + 1
        : local.iter_840.tape_ptr)

    code_ptr = 1 + (
      local.curr_841.code == "["
        ? local.iter_840.tape[local.iter_840.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_840.code_ptr)] : local.iter_840.code_ptr :
      local.curr_841.code == "]"
        ? local.iter_840.tape[local.iter_840.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_840.code_ptr)] : local.iter_840.code_ptr
        : local.iter_840.code_ptr)

    steps_taken = 1 + local.iter_840.steps_taken
  }
}

locals {
  end_of_code_842 = try(local.iter_841.code_ptr >= length(var.code), true)

  curr_842 = local.end_of_code_842 ? null : {
    code = substr(var.code, local.iter_841.code_ptr, 1)
    input = substr(var.code, local.iter_841.code_ptr, 1) == "," ? substr(local.iter_841.input, 0, 1) : null
  }

  iter_842 = local.end_of_code_842 ? local.iter_841 : {
    input = (local.curr_842.code == ","
      ? substr(local.iter_841.input, 1, -1)
      : local.iter_841.input)

    output = (local.curr_842.code == "."
      ? "${local.iter_841.output}${jsondecode(format("\"\\u%04x\"", local.iter_841.tape[local.iter_841.tape_ptr]))}"
      : local.iter_841.output)
    
    tape = (
      local.curr_842.code == "+"
        ? [for i, b in local.iter_841.tape : (i == local.iter_841.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_842.code == "-"
        ? [for i, b in local.iter_841.tape : (i == local.iter_841.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_842.code == ","
        ? [for i, b in local.iter_841.tape : (i == local.iter_841.tape_ptr ? local.ascii_lookup[local.curr_842.input] : b)]
        : local.iter_841.tape)

    tape_ptr = (
      local.curr_842.code == "<"
        ? local.iter_841.tape_ptr == 0 ? length(local.iter_841.tape) - 1 : local.iter_841.tape_ptr - 1 :
      local.curr_842.code == ">"
        ? local.iter_841.tape_ptr == length(local.iter_841.tape) - 1 ? 0 : local.iter_841.tape_ptr + 1
        : local.iter_841.tape_ptr)

    code_ptr = 1 + (
      local.curr_842.code == "["
        ? local.iter_841.tape[local.iter_841.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_841.code_ptr)] : local.iter_841.code_ptr :
      local.curr_842.code == "]"
        ? local.iter_841.tape[local.iter_841.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_841.code_ptr)] : local.iter_841.code_ptr
        : local.iter_841.code_ptr)

    steps_taken = 1 + local.iter_841.steps_taken
  }
}

locals {
  end_of_code_843 = try(local.iter_842.code_ptr >= length(var.code), true)

  curr_843 = local.end_of_code_843 ? null : {
    code = substr(var.code, local.iter_842.code_ptr, 1)
    input = substr(var.code, local.iter_842.code_ptr, 1) == "," ? substr(local.iter_842.input, 0, 1) : null
  }

  iter_843 = local.end_of_code_843 ? local.iter_842 : {
    input = (local.curr_843.code == ","
      ? substr(local.iter_842.input, 1, -1)
      : local.iter_842.input)

    output = (local.curr_843.code == "."
      ? "${local.iter_842.output}${jsondecode(format("\"\\u%04x\"", local.iter_842.tape[local.iter_842.tape_ptr]))}"
      : local.iter_842.output)
    
    tape = (
      local.curr_843.code == "+"
        ? [for i, b in local.iter_842.tape : (i == local.iter_842.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_843.code == "-"
        ? [for i, b in local.iter_842.tape : (i == local.iter_842.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_843.code == ","
        ? [for i, b in local.iter_842.tape : (i == local.iter_842.tape_ptr ? local.ascii_lookup[local.curr_843.input] : b)]
        : local.iter_842.tape)

    tape_ptr = (
      local.curr_843.code == "<"
        ? local.iter_842.tape_ptr == 0 ? length(local.iter_842.tape) - 1 : local.iter_842.tape_ptr - 1 :
      local.curr_843.code == ">"
        ? local.iter_842.tape_ptr == length(local.iter_842.tape) - 1 ? 0 : local.iter_842.tape_ptr + 1
        : local.iter_842.tape_ptr)

    code_ptr = 1 + (
      local.curr_843.code == "["
        ? local.iter_842.tape[local.iter_842.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_842.code_ptr)] : local.iter_842.code_ptr :
      local.curr_843.code == "]"
        ? local.iter_842.tape[local.iter_842.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_842.code_ptr)] : local.iter_842.code_ptr
        : local.iter_842.code_ptr)

    steps_taken = 1 + local.iter_842.steps_taken
  }
}

locals {
  end_of_code_844 = try(local.iter_843.code_ptr >= length(var.code), true)

  curr_844 = local.end_of_code_844 ? null : {
    code = substr(var.code, local.iter_843.code_ptr, 1)
    input = substr(var.code, local.iter_843.code_ptr, 1) == "," ? substr(local.iter_843.input, 0, 1) : null
  }

  iter_844 = local.end_of_code_844 ? local.iter_843 : {
    input = (local.curr_844.code == ","
      ? substr(local.iter_843.input, 1, -1)
      : local.iter_843.input)

    output = (local.curr_844.code == "."
      ? "${local.iter_843.output}${jsondecode(format("\"\\u%04x\"", local.iter_843.tape[local.iter_843.tape_ptr]))}"
      : local.iter_843.output)
    
    tape = (
      local.curr_844.code == "+"
        ? [for i, b in local.iter_843.tape : (i == local.iter_843.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_844.code == "-"
        ? [for i, b in local.iter_843.tape : (i == local.iter_843.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_844.code == ","
        ? [for i, b in local.iter_843.tape : (i == local.iter_843.tape_ptr ? local.ascii_lookup[local.curr_844.input] : b)]
        : local.iter_843.tape)

    tape_ptr = (
      local.curr_844.code == "<"
        ? local.iter_843.tape_ptr == 0 ? length(local.iter_843.tape) - 1 : local.iter_843.tape_ptr - 1 :
      local.curr_844.code == ">"
        ? local.iter_843.tape_ptr == length(local.iter_843.tape) - 1 ? 0 : local.iter_843.tape_ptr + 1
        : local.iter_843.tape_ptr)

    code_ptr = 1 + (
      local.curr_844.code == "["
        ? local.iter_843.tape[local.iter_843.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_843.code_ptr)] : local.iter_843.code_ptr :
      local.curr_844.code == "]"
        ? local.iter_843.tape[local.iter_843.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_843.code_ptr)] : local.iter_843.code_ptr
        : local.iter_843.code_ptr)

    steps_taken = 1 + local.iter_843.steps_taken
  }
}

locals {
  end_of_code_845 = try(local.iter_844.code_ptr >= length(var.code), true)

  curr_845 = local.end_of_code_845 ? null : {
    code = substr(var.code, local.iter_844.code_ptr, 1)
    input = substr(var.code, local.iter_844.code_ptr, 1) == "," ? substr(local.iter_844.input, 0, 1) : null
  }

  iter_845 = local.end_of_code_845 ? local.iter_844 : {
    input = (local.curr_845.code == ","
      ? substr(local.iter_844.input, 1, -1)
      : local.iter_844.input)

    output = (local.curr_845.code == "."
      ? "${local.iter_844.output}${jsondecode(format("\"\\u%04x\"", local.iter_844.tape[local.iter_844.tape_ptr]))}"
      : local.iter_844.output)
    
    tape = (
      local.curr_845.code == "+"
        ? [for i, b in local.iter_844.tape : (i == local.iter_844.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_845.code == "-"
        ? [for i, b in local.iter_844.tape : (i == local.iter_844.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_845.code == ","
        ? [for i, b in local.iter_844.tape : (i == local.iter_844.tape_ptr ? local.ascii_lookup[local.curr_845.input] : b)]
        : local.iter_844.tape)

    tape_ptr = (
      local.curr_845.code == "<"
        ? local.iter_844.tape_ptr == 0 ? length(local.iter_844.tape) - 1 : local.iter_844.tape_ptr - 1 :
      local.curr_845.code == ">"
        ? local.iter_844.tape_ptr == length(local.iter_844.tape) - 1 ? 0 : local.iter_844.tape_ptr + 1
        : local.iter_844.tape_ptr)

    code_ptr = 1 + (
      local.curr_845.code == "["
        ? local.iter_844.tape[local.iter_844.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_844.code_ptr)] : local.iter_844.code_ptr :
      local.curr_845.code == "]"
        ? local.iter_844.tape[local.iter_844.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_844.code_ptr)] : local.iter_844.code_ptr
        : local.iter_844.code_ptr)

    steps_taken = 1 + local.iter_844.steps_taken
  }
}

locals {
  end_of_code_846 = try(local.iter_845.code_ptr >= length(var.code), true)

  curr_846 = local.end_of_code_846 ? null : {
    code = substr(var.code, local.iter_845.code_ptr, 1)
    input = substr(var.code, local.iter_845.code_ptr, 1) == "," ? substr(local.iter_845.input, 0, 1) : null
  }

  iter_846 = local.end_of_code_846 ? local.iter_845 : {
    input = (local.curr_846.code == ","
      ? substr(local.iter_845.input, 1, -1)
      : local.iter_845.input)

    output = (local.curr_846.code == "."
      ? "${local.iter_845.output}${jsondecode(format("\"\\u%04x\"", local.iter_845.tape[local.iter_845.tape_ptr]))}"
      : local.iter_845.output)
    
    tape = (
      local.curr_846.code == "+"
        ? [for i, b in local.iter_845.tape : (i == local.iter_845.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_846.code == "-"
        ? [for i, b in local.iter_845.tape : (i == local.iter_845.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_846.code == ","
        ? [for i, b in local.iter_845.tape : (i == local.iter_845.tape_ptr ? local.ascii_lookup[local.curr_846.input] : b)]
        : local.iter_845.tape)

    tape_ptr = (
      local.curr_846.code == "<"
        ? local.iter_845.tape_ptr == 0 ? length(local.iter_845.tape) - 1 : local.iter_845.tape_ptr - 1 :
      local.curr_846.code == ">"
        ? local.iter_845.tape_ptr == length(local.iter_845.tape) - 1 ? 0 : local.iter_845.tape_ptr + 1
        : local.iter_845.tape_ptr)

    code_ptr = 1 + (
      local.curr_846.code == "["
        ? local.iter_845.tape[local.iter_845.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_845.code_ptr)] : local.iter_845.code_ptr :
      local.curr_846.code == "]"
        ? local.iter_845.tape[local.iter_845.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_845.code_ptr)] : local.iter_845.code_ptr
        : local.iter_845.code_ptr)

    steps_taken = 1 + local.iter_845.steps_taken
  }
}

locals {
  end_of_code_847 = try(local.iter_846.code_ptr >= length(var.code), true)

  curr_847 = local.end_of_code_847 ? null : {
    code = substr(var.code, local.iter_846.code_ptr, 1)
    input = substr(var.code, local.iter_846.code_ptr, 1) == "," ? substr(local.iter_846.input, 0, 1) : null
  }

  iter_847 = local.end_of_code_847 ? local.iter_846 : {
    input = (local.curr_847.code == ","
      ? substr(local.iter_846.input, 1, -1)
      : local.iter_846.input)

    output = (local.curr_847.code == "."
      ? "${local.iter_846.output}${jsondecode(format("\"\\u%04x\"", local.iter_846.tape[local.iter_846.tape_ptr]))}"
      : local.iter_846.output)
    
    tape = (
      local.curr_847.code == "+"
        ? [for i, b in local.iter_846.tape : (i == local.iter_846.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_847.code == "-"
        ? [for i, b in local.iter_846.tape : (i == local.iter_846.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_847.code == ","
        ? [for i, b in local.iter_846.tape : (i == local.iter_846.tape_ptr ? local.ascii_lookup[local.curr_847.input] : b)]
        : local.iter_846.tape)

    tape_ptr = (
      local.curr_847.code == "<"
        ? local.iter_846.tape_ptr == 0 ? length(local.iter_846.tape) - 1 : local.iter_846.tape_ptr - 1 :
      local.curr_847.code == ">"
        ? local.iter_846.tape_ptr == length(local.iter_846.tape) - 1 ? 0 : local.iter_846.tape_ptr + 1
        : local.iter_846.tape_ptr)

    code_ptr = 1 + (
      local.curr_847.code == "["
        ? local.iter_846.tape[local.iter_846.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_846.code_ptr)] : local.iter_846.code_ptr :
      local.curr_847.code == "]"
        ? local.iter_846.tape[local.iter_846.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_846.code_ptr)] : local.iter_846.code_ptr
        : local.iter_846.code_ptr)

    steps_taken = 1 + local.iter_846.steps_taken
  }
}

locals {
  end_of_code_848 = try(local.iter_847.code_ptr >= length(var.code), true)

  curr_848 = local.end_of_code_848 ? null : {
    code = substr(var.code, local.iter_847.code_ptr, 1)
    input = substr(var.code, local.iter_847.code_ptr, 1) == "," ? substr(local.iter_847.input, 0, 1) : null
  }

  iter_848 = local.end_of_code_848 ? local.iter_847 : {
    input = (local.curr_848.code == ","
      ? substr(local.iter_847.input, 1, -1)
      : local.iter_847.input)

    output = (local.curr_848.code == "."
      ? "${local.iter_847.output}${jsondecode(format("\"\\u%04x\"", local.iter_847.tape[local.iter_847.tape_ptr]))}"
      : local.iter_847.output)
    
    tape = (
      local.curr_848.code == "+"
        ? [for i, b in local.iter_847.tape : (i == local.iter_847.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_848.code == "-"
        ? [for i, b in local.iter_847.tape : (i == local.iter_847.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_848.code == ","
        ? [for i, b in local.iter_847.tape : (i == local.iter_847.tape_ptr ? local.ascii_lookup[local.curr_848.input] : b)]
        : local.iter_847.tape)

    tape_ptr = (
      local.curr_848.code == "<"
        ? local.iter_847.tape_ptr == 0 ? length(local.iter_847.tape) - 1 : local.iter_847.tape_ptr - 1 :
      local.curr_848.code == ">"
        ? local.iter_847.tape_ptr == length(local.iter_847.tape) - 1 ? 0 : local.iter_847.tape_ptr + 1
        : local.iter_847.tape_ptr)

    code_ptr = 1 + (
      local.curr_848.code == "["
        ? local.iter_847.tape[local.iter_847.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_847.code_ptr)] : local.iter_847.code_ptr :
      local.curr_848.code == "]"
        ? local.iter_847.tape[local.iter_847.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_847.code_ptr)] : local.iter_847.code_ptr
        : local.iter_847.code_ptr)

    steps_taken = 1 + local.iter_847.steps_taken
  }
}

locals {
  end_of_code_849 = try(local.iter_848.code_ptr >= length(var.code), true)

  curr_849 = local.end_of_code_849 ? null : {
    code = substr(var.code, local.iter_848.code_ptr, 1)
    input = substr(var.code, local.iter_848.code_ptr, 1) == "," ? substr(local.iter_848.input, 0, 1) : null
  }

  iter_849 = local.end_of_code_849 ? local.iter_848 : {
    input = (local.curr_849.code == ","
      ? substr(local.iter_848.input, 1, -1)
      : local.iter_848.input)

    output = (local.curr_849.code == "."
      ? "${local.iter_848.output}${jsondecode(format("\"\\u%04x\"", local.iter_848.tape[local.iter_848.tape_ptr]))}"
      : local.iter_848.output)
    
    tape = (
      local.curr_849.code == "+"
        ? [for i, b in local.iter_848.tape : (i == local.iter_848.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_849.code == "-"
        ? [for i, b in local.iter_848.tape : (i == local.iter_848.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_849.code == ","
        ? [for i, b in local.iter_848.tape : (i == local.iter_848.tape_ptr ? local.ascii_lookup[local.curr_849.input] : b)]
        : local.iter_848.tape)

    tape_ptr = (
      local.curr_849.code == "<"
        ? local.iter_848.tape_ptr == 0 ? length(local.iter_848.tape) - 1 : local.iter_848.tape_ptr - 1 :
      local.curr_849.code == ">"
        ? local.iter_848.tape_ptr == length(local.iter_848.tape) - 1 ? 0 : local.iter_848.tape_ptr + 1
        : local.iter_848.tape_ptr)

    code_ptr = 1 + (
      local.curr_849.code == "["
        ? local.iter_848.tape[local.iter_848.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_848.code_ptr)] : local.iter_848.code_ptr :
      local.curr_849.code == "]"
        ? local.iter_848.tape[local.iter_848.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_848.code_ptr)] : local.iter_848.code_ptr
        : local.iter_848.code_ptr)

    steps_taken = 1 + local.iter_848.steps_taken
  }
}

locals {
  end_of_code_850 = try(local.iter_849.code_ptr >= length(var.code), true)

  curr_850 = local.end_of_code_850 ? null : {
    code = substr(var.code, local.iter_849.code_ptr, 1)
    input = substr(var.code, local.iter_849.code_ptr, 1) == "," ? substr(local.iter_849.input, 0, 1) : null
  }

  iter_850 = local.end_of_code_850 ? local.iter_849 : {
    input = (local.curr_850.code == ","
      ? substr(local.iter_849.input, 1, -1)
      : local.iter_849.input)

    output = (local.curr_850.code == "."
      ? "${local.iter_849.output}${jsondecode(format("\"\\u%04x\"", local.iter_849.tape[local.iter_849.tape_ptr]))}"
      : local.iter_849.output)
    
    tape = (
      local.curr_850.code == "+"
        ? [for i, b in local.iter_849.tape : (i == local.iter_849.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_850.code == "-"
        ? [for i, b in local.iter_849.tape : (i == local.iter_849.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_850.code == ","
        ? [for i, b in local.iter_849.tape : (i == local.iter_849.tape_ptr ? local.ascii_lookup[local.curr_850.input] : b)]
        : local.iter_849.tape)

    tape_ptr = (
      local.curr_850.code == "<"
        ? local.iter_849.tape_ptr == 0 ? length(local.iter_849.tape) - 1 : local.iter_849.tape_ptr - 1 :
      local.curr_850.code == ">"
        ? local.iter_849.tape_ptr == length(local.iter_849.tape) - 1 ? 0 : local.iter_849.tape_ptr + 1
        : local.iter_849.tape_ptr)

    code_ptr = 1 + (
      local.curr_850.code == "["
        ? local.iter_849.tape[local.iter_849.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_849.code_ptr)] : local.iter_849.code_ptr :
      local.curr_850.code == "]"
        ? local.iter_849.tape[local.iter_849.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_849.code_ptr)] : local.iter_849.code_ptr
        : local.iter_849.code_ptr)

    steps_taken = 1 + local.iter_849.steps_taken
  }
}

locals {
  end_of_code_851 = try(local.iter_850.code_ptr >= length(var.code), true)

  curr_851 = local.end_of_code_851 ? null : {
    code = substr(var.code, local.iter_850.code_ptr, 1)
    input = substr(var.code, local.iter_850.code_ptr, 1) == "," ? substr(local.iter_850.input, 0, 1) : null
  }

  iter_851 = local.end_of_code_851 ? local.iter_850 : {
    input = (local.curr_851.code == ","
      ? substr(local.iter_850.input, 1, -1)
      : local.iter_850.input)

    output = (local.curr_851.code == "."
      ? "${local.iter_850.output}${jsondecode(format("\"\\u%04x\"", local.iter_850.tape[local.iter_850.tape_ptr]))}"
      : local.iter_850.output)
    
    tape = (
      local.curr_851.code == "+"
        ? [for i, b in local.iter_850.tape : (i == local.iter_850.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_851.code == "-"
        ? [for i, b in local.iter_850.tape : (i == local.iter_850.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_851.code == ","
        ? [for i, b in local.iter_850.tape : (i == local.iter_850.tape_ptr ? local.ascii_lookup[local.curr_851.input] : b)]
        : local.iter_850.tape)

    tape_ptr = (
      local.curr_851.code == "<"
        ? local.iter_850.tape_ptr == 0 ? length(local.iter_850.tape) - 1 : local.iter_850.tape_ptr - 1 :
      local.curr_851.code == ">"
        ? local.iter_850.tape_ptr == length(local.iter_850.tape) - 1 ? 0 : local.iter_850.tape_ptr + 1
        : local.iter_850.tape_ptr)

    code_ptr = 1 + (
      local.curr_851.code == "["
        ? local.iter_850.tape[local.iter_850.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_850.code_ptr)] : local.iter_850.code_ptr :
      local.curr_851.code == "]"
        ? local.iter_850.tape[local.iter_850.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_850.code_ptr)] : local.iter_850.code_ptr
        : local.iter_850.code_ptr)

    steps_taken = 1 + local.iter_850.steps_taken
  }
}

locals {
  end_of_code_852 = try(local.iter_851.code_ptr >= length(var.code), true)

  curr_852 = local.end_of_code_852 ? null : {
    code = substr(var.code, local.iter_851.code_ptr, 1)
    input = substr(var.code, local.iter_851.code_ptr, 1) == "," ? substr(local.iter_851.input, 0, 1) : null
  }

  iter_852 = local.end_of_code_852 ? local.iter_851 : {
    input = (local.curr_852.code == ","
      ? substr(local.iter_851.input, 1, -1)
      : local.iter_851.input)

    output = (local.curr_852.code == "."
      ? "${local.iter_851.output}${jsondecode(format("\"\\u%04x\"", local.iter_851.tape[local.iter_851.tape_ptr]))}"
      : local.iter_851.output)
    
    tape = (
      local.curr_852.code == "+"
        ? [for i, b in local.iter_851.tape : (i == local.iter_851.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_852.code == "-"
        ? [for i, b in local.iter_851.tape : (i == local.iter_851.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_852.code == ","
        ? [for i, b in local.iter_851.tape : (i == local.iter_851.tape_ptr ? local.ascii_lookup[local.curr_852.input] : b)]
        : local.iter_851.tape)

    tape_ptr = (
      local.curr_852.code == "<"
        ? local.iter_851.tape_ptr == 0 ? length(local.iter_851.tape) - 1 : local.iter_851.tape_ptr - 1 :
      local.curr_852.code == ">"
        ? local.iter_851.tape_ptr == length(local.iter_851.tape) - 1 ? 0 : local.iter_851.tape_ptr + 1
        : local.iter_851.tape_ptr)

    code_ptr = 1 + (
      local.curr_852.code == "["
        ? local.iter_851.tape[local.iter_851.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_851.code_ptr)] : local.iter_851.code_ptr :
      local.curr_852.code == "]"
        ? local.iter_851.tape[local.iter_851.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_851.code_ptr)] : local.iter_851.code_ptr
        : local.iter_851.code_ptr)

    steps_taken = 1 + local.iter_851.steps_taken
  }
}

locals {
  end_of_code_853 = try(local.iter_852.code_ptr >= length(var.code), true)

  curr_853 = local.end_of_code_853 ? null : {
    code = substr(var.code, local.iter_852.code_ptr, 1)
    input = substr(var.code, local.iter_852.code_ptr, 1) == "," ? substr(local.iter_852.input, 0, 1) : null
  }

  iter_853 = local.end_of_code_853 ? local.iter_852 : {
    input = (local.curr_853.code == ","
      ? substr(local.iter_852.input, 1, -1)
      : local.iter_852.input)

    output = (local.curr_853.code == "."
      ? "${local.iter_852.output}${jsondecode(format("\"\\u%04x\"", local.iter_852.tape[local.iter_852.tape_ptr]))}"
      : local.iter_852.output)
    
    tape = (
      local.curr_853.code == "+"
        ? [for i, b in local.iter_852.tape : (i == local.iter_852.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_853.code == "-"
        ? [for i, b in local.iter_852.tape : (i == local.iter_852.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_853.code == ","
        ? [for i, b in local.iter_852.tape : (i == local.iter_852.tape_ptr ? local.ascii_lookup[local.curr_853.input] : b)]
        : local.iter_852.tape)

    tape_ptr = (
      local.curr_853.code == "<"
        ? local.iter_852.tape_ptr == 0 ? length(local.iter_852.tape) - 1 : local.iter_852.tape_ptr - 1 :
      local.curr_853.code == ">"
        ? local.iter_852.tape_ptr == length(local.iter_852.tape) - 1 ? 0 : local.iter_852.tape_ptr + 1
        : local.iter_852.tape_ptr)

    code_ptr = 1 + (
      local.curr_853.code == "["
        ? local.iter_852.tape[local.iter_852.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_852.code_ptr)] : local.iter_852.code_ptr :
      local.curr_853.code == "]"
        ? local.iter_852.tape[local.iter_852.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_852.code_ptr)] : local.iter_852.code_ptr
        : local.iter_852.code_ptr)

    steps_taken = 1 + local.iter_852.steps_taken
  }
}

locals {
  end_of_code_854 = try(local.iter_853.code_ptr >= length(var.code), true)

  curr_854 = local.end_of_code_854 ? null : {
    code = substr(var.code, local.iter_853.code_ptr, 1)
    input = substr(var.code, local.iter_853.code_ptr, 1) == "," ? substr(local.iter_853.input, 0, 1) : null
  }

  iter_854 = local.end_of_code_854 ? local.iter_853 : {
    input = (local.curr_854.code == ","
      ? substr(local.iter_853.input, 1, -1)
      : local.iter_853.input)

    output = (local.curr_854.code == "."
      ? "${local.iter_853.output}${jsondecode(format("\"\\u%04x\"", local.iter_853.tape[local.iter_853.tape_ptr]))}"
      : local.iter_853.output)
    
    tape = (
      local.curr_854.code == "+"
        ? [for i, b in local.iter_853.tape : (i == local.iter_853.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_854.code == "-"
        ? [for i, b in local.iter_853.tape : (i == local.iter_853.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_854.code == ","
        ? [for i, b in local.iter_853.tape : (i == local.iter_853.tape_ptr ? local.ascii_lookup[local.curr_854.input] : b)]
        : local.iter_853.tape)

    tape_ptr = (
      local.curr_854.code == "<"
        ? local.iter_853.tape_ptr == 0 ? length(local.iter_853.tape) - 1 : local.iter_853.tape_ptr - 1 :
      local.curr_854.code == ">"
        ? local.iter_853.tape_ptr == length(local.iter_853.tape) - 1 ? 0 : local.iter_853.tape_ptr + 1
        : local.iter_853.tape_ptr)

    code_ptr = 1 + (
      local.curr_854.code == "["
        ? local.iter_853.tape[local.iter_853.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_853.code_ptr)] : local.iter_853.code_ptr :
      local.curr_854.code == "]"
        ? local.iter_853.tape[local.iter_853.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_853.code_ptr)] : local.iter_853.code_ptr
        : local.iter_853.code_ptr)

    steps_taken = 1 + local.iter_853.steps_taken
  }
}

locals {
  end_of_code_855 = try(local.iter_854.code_ptr >= length(var.code), true)

  curr_855 = local.end_of_code_855 ? null : {
    code = substr(var.code, local.iter_854.code_ptr, 1)
    input = substr(var.code, local.iter_854.code_ptr, 1) == "," ? substr(local.iter_854.input, 0, 1) : null
  }

  iter_855 = local.end_of_code_855 ? local.iter_854 : {
    input = (local.curr_855.code == ","
      ? substr(local.iter_854.input, 1, -1)
      : local.iter_854.input)

    output = (local.curr_855.code == "."
      ? "${local.iter_854.output}${jsondecode(format("\"\\u%04x\"", local.iter_854.tape[local.iter_854.tape_ptr]))}"
      : local.iter_854.output)
    
    tape = (
      local.curr_855.code == "+"
        ? [for i, b in local.iter_854.tape : (i == local.iter_854.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_855.code == "-"
        ? [for i, b in local.iter_854.tape : (i == local.iter_854.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_855.code == ","
        ? [for i, b in local.iter_854.tape : (i == local.iter_854.tape_ptr ? local.ascii_lookup[local.curr_855.input] : b)]
        : local.iter_854.tape)

    tape_ptr = (
      local.curr_855.code == "<"
        ? local.iter_854.tape_ptr == 0 ? length(local.iter_854.tape) - 1 : local.iter_854.tape_ptr - 1 :
      local.curr_855.code == ">"
        ? local.iter_854.tape_ptr == length(local.iter_854.tape) - 1 ? 0 : local.iter_854.tape_ptr + 1
        : local.iter_854.tape_ptr)

    code_ptr = 1 + (
      local.curr_855.code == "["
        ? local.iter_854.tape[local.iter_854.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_854.code_ptr)] : local.iter_854.code_ptr :
      local.curr_855.code == "]"
        ? local.iter_854.tape[local.iter_854.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_854.code_ptr)] : local.iter_854.code_ptr
        : local.iter_854.code_ptr)

    steps_taken = 1 + local.iter_854.steps_taken
  }
}

locals {
  end_of_code_856 = try(local.iter_855.code_ptr >= length(var.code), true)

  curr_856 = local.end_of_code_856 ? null : {
    code = substr(var.code, local.iter_855.code_ptr, 1)
    input = substr(var.code, local.iter_855.code_ptr, 1) == "," ? substr(local.iter_855.input, 0, 1) : null
  }

  iter_856 = local.end_of_code_856 ? local.iter_855 : {
    input = (local.curr_856.code == ","
      ? substr(local.iter_855.input, 1, -1)
      : local.iter_855.input)

    output = (local.curr_856.code == "."
      ? "${local.iter_855.output}${jsondecode(format("\"\\u%04x\"", local.iter_855.tape[local.iter_855.tape_ptr]))}"
      : local.iter_855.output)
    
    tape = (
      local.curr_856.code == "+"
        ? [for i, b in local.iter_855.tape : (i == local.iter_855.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_856.code == "-"
        ? [for i, b in local.iter_855.tape : (i == local.iter_855.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_856.code == ","
        ? [for i, b in local.iter_855.tape : (i == local.iter_855.tape_ptr ? local.ascii_lookup[local.curr_856.input] : b)]
        : local.iter_855.tape)

    tape_ptr = (
      local.curr_856.code == "<"
        ? local.iter_855.tape_ptr == 0 ? length(local.iter_855.tape) - 1 : local.iter_855.tape_ptr - 1 :
      local.curr_856.code == ">"
        ? local.iter_855.tape_ptr == length(local.iter_855.tape) - 1 ? 0 : local.iter_855.tape_ptr + 1
        : local.iter_855.tape_ptr)

    code_ptr = 1 + (
      local.curr_856.code == "["
        ? local.iter_855.tape[local.iter_855.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_855.code_ptr)] : local.iter_855.code_ptr :
      local.curr_856.code == "]"
        ? local.iter_855.tape[local.iter_855.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_855.code_ptr)] : local.iter_855.code_ptr
        : local.iter_855.code_ptr)

    steps_taken = 1 + local.iter_855.steps_taken
  }
}

locals {
  end_of_code_857 = try(local.iter_856.code_ptr >= length(var.code), true)

  curr_857 = local.end_of_code_857 ? null : {
    code = substr(var.code, local.iter_856.code_ptr, 1)
    input = substr(var.code, local.iter_856.code_ptr, 1) == "," ? substr(local.iter_856.input, 0, 1) : null
  }

  iter_857 = local.end_of_code_857 ? local.iter_856 : {
    input = (local.curr_857.code == ","
      ? substr(local.iter_856.input, 1, -1)
      : local.iter_856.input)

    output = (local.curr_857.code == "."
      ? "${local.iter_856.output}${jsondecode(format("\"\\u%04x\"", local.iter_856.tape[local.iter_856.tape_ptr]))}"
      : local.iter_856.output)
    
    tape = (
      local.curr_857.code == "+"
        ? [for i, b in local.iter_856.tape : (i == local.iter_856.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_857.code == "-"
        ? [for i, b in local.iter_856.tape : (i == local.iter_856.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_857.code == ","
        ? [for i, b in local.iter_856.tape : (i == local.iter_856.tape_ptr ? local.ascii_lookup[local.curr_857.input] : b)]
        : local.iter_856.tape)

    tape_ptr = (
      local.curr_857.code == "<"
        ? local.iter_856.tape_ptr == 0 ? length(local.iter_856.tape) - 1 : local.iter_856.tape_ptr - 1 :
      local.curr_857.code == ">"
        ? local.iter_856.tape_ptr == length(local.iter_856.tape) - 1 ? 0 : local.iter_856.tape_ptr + 1
        : local.iter_856.tape_ptr)

    code_ptr = 1 + (
      local.curr_857.code == "["
        ? local.iter_856.tape[local.iter_856.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_856.code_ptr)] : local.iter_856.code_ptr :
      local.curr_857.code == "]"
        ? local.iter_856.tape[local.iter_856.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_856.code_ptr)] : local.iter_856.code_ptr
        : local.iter_856.code_ptr)

    steps_taken = 1 + local.iter_856.steps_taken
  }
}

locals {
  end_of_code_858 = try(local.iter_857.code_ptr >= length(var.code), true)

  curr_858 = local.end_of_code_858 ? null : {
    code = substr(var.code, local.iter_857.code_ptr, 1)
    input = substr(var.code, local.iter_857.code_ptr, 1) == "," ? substr(local.iter_857.input, 0, 1) : null
  }

  iter_858 = local.end_of_code_858 ? local.iter_857 : {
    input = (local.curr_858.code == ","
      ? substr(local.iter_857.input, 1, -1)
      : local.iter_857.input)

    output = (local.curr_858.code == "."
      ? "${local.iter_857.output}${jsondecode(format("\"\\u%04x\"", local.iter_857.tape[local.iter_857.tape_ptr]))}"
      : local.iter_857.output)
    
    tape = (
      local.curr_858.code == "+"
        ? [for i, b in local.iter_857.tape : (i == local.iter_857.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_858.code == "-"
        ? [for i, b in local.iter_857.tape : (i == local.iter_857.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_858.code == ","
        ? [for i, b in local.iter_857.tape : (i == local.iter_857.tape_ptr ? local.ascii_lookup[local.curr_858.input] : b)]
        : local.iter_857.tape)

    tape_ptr = (
      local.curr_858.code == "<"
        ? local.iter_857.tape_ptr == 0 ? length(local.iter_857.tape) - 1 : local.iter_857.tape_ptr - 1 :
      local.curr_858.code == ">"
        ? local.iter_857.tape_ptr == length(local.iter_857.tape) - 1 ? 0 : local.iter_857.tape_ptr + 1
        : local.iter_857.tape_ptr)

    code_ptr = 1 + (
      local.curr_858.code == "["
        ? local.iter_857.tape[local.iter_857.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_857.code_ptr)] : local.iter_857.code_ptr :
      local.curr_858.code == "]"
        ? local.iter_857.tape[local.iter_857.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_857.code_ptr)] : local.iter_857.code_ptr
        : local.iter_857.code_ptr)

    steps_taken = 1 + local.iter_857.steps_taken
  }
}

locals {
  end_of_code_859 = try(local.iter_858.code_ptr >= length(var.code), true)

  curr_859 = local.end_of_code_859 ? null : {
    code = substr(var.code, local.iter_858.code_ptr, 1)
    input = substr(var.code, local.iter_858.code_ptr, 1) == "," ? substr(local.iter_858.input, 0, 1) : null
  }

  iter_859 = local.end_of_code_859 ? local.iter_858 : {
    input = (local.curr_859.code == ","
      ? substr(local.iter_858.input, 1, -1)
      : local.iter_858.input)

    output = (local.curr_859.code == "."
      ? "${local.iter_858.output}${jsondecode(format("\"\\u%04x\"", local.iter_858.tape[local.iter_858.tape_ptr]))}"
      : local.iter_858.output)
    
    tape = (
      local.curr_859.code == "+"
        ? [for i, b in local.iter_858.tape : (i == local.iter_858.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_859.code == "-"
        ? [for i, b in local.iter_858.tape : (i == local.iter_858.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_859.code == ","
        ? [for i, b in local.iter_858.tape : (i == local.iter_858.tape_ptr ? local.ascii_lookup[local.curr_859.input] : b)]
        : local.iter_858.tape)

    tape_ptr = (
      local.curr_859.code == "<"
        ? local.iter_858.tape_ptr == 0 ? length(local.iter_858.tape) - 1 : local.iter_858.tape_ptr - 1 :
      local.curr_859.code == ">"
        ? local.iter_858.tape_ptr == length(local.iter_858.tape) - 1 ? 0 : local.iter_858.tape_ptr + 1
        : local.iter_858.tape_ptr)

    code_ptr = 1 + (
      local.curr_859.code == "["
        ? local.iter_858.tape[local.iter_858.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_858.code_ptr)] : local.iter_858.code_ptr :
      local.curr_859.code == "]"
        ? local.iter_858.tape[local.iter_858.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_858.code_ptr)] : local.iter_858.code_ptr
        : local.iter_858.code_ptr)

    steps_taken = 1 + local.iter_858.steps_taken
  }
}

locals {
  end_of_code_860 = try(local.iter_859.code_ptr >= length(var.code), true)

  curr_860 = local.end_of_code_860 ? null : {
    code = substr(var.code, local.iter_859.code_ptr, 1)
    input = substr(var.code, local.iter_859.code_ptr, 1) == "," ? substr(local.iter_859.input, 0, 1) : null
  }

  iter_860 = local.end_of_code_860 ? local.iter_859 : {
    input = (local.curr_860.code == ","
      ? substr(local.iter_859.input, 1, -1)
      : local.iter_859.input)

    output = (local.curr_860.code == "."
      ? "${local.iter_859.output}${jsondecode(format("\"\\u%04x\"", local.iter_859.tape[local.iter_859.tape_ptr]))}"
      : local.iter_859.output)
    
    tape = (
      local.curr_860.code == "+"
        ? [for i, b in local.iter_859.tape : (i == local.iter_859.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_860.code == "-"
        ? [for i, b in local.iter_859.tape : (i == local.iter_859.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_860.code == ","
        ? [for i, b in local.iter_859.tape : (i == local.iter_859.tape_ptr ? local.ascii_lookup[local.curr_860.input] : b)]
        : local.iter_859.tape)

    tape_ptr = (
      local.curr_860.code == "<"
        ? local.iter_859.tape_ptr == 0 ? length(local.iter_859.tape) - 1 : local.iter_859.tape_ptr - 1 :
      local.curr_860.code == ">"
        ? local.iter_859.tape_ptr == length(local.iter_859.tape) - 1 ? 0 : local.iter_859.tape_ptr + 1
        : local.iter_859.tape_ptr)

    code_ptr = 1 + (
      local.curr_860.code == "["
        ? local.iter_859.tape[local.iter_859.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_859.code_ptr)] : local.iter_859.code_ptr :
      local.curr_860.code == "]"
        ? local.iter_859.tape[local.iter_859.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_859.code_ptr)] : local.iter_859.code_ptr
        : local.iter_859.code_ptr)

    steps_taken = 1 + local.iter_859.steps_taken
  }
}

locals {
  end_of_code_861 = try(local.iter_860.code_ptr >= length(var.code), true)

  curr_861 = local.end_of_code_861 ? null : {
    code = substr(var.code, local.iter_860.code_ptr, 1)
    input = substr(var.code, local.iter_860.code_ptr, 1) == "," ? substr(local.iter_860.input, 0, 1) : null
  }

  iter_861 = local.end_of_code_861 ? local.iter_860 : {
    input = (local.curr_861.code == ","
      ? substr(local.iter_860.input, 1, -1)
      : local.iter_860.input)

    output = (local.curr_861.code == "."
      ? "${local.iter_860.output}${jsondecode(format("\"\\u%04x\"", local.iter_860.tape[local.iter_860.tape_ptr]))}"
      : local.iter_860.output)
    
    tape = (
      local.curr_861.code == "+"
        ? [for i, b in local.iter_860.tape : (i == local.iter_860.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_861.code == "-"
        ? [for i, b in local.iter_860.tape : (i == local.iter_860.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_861.code == ","
        ? [for i, b in local.iter_860.tape : (i == local.iter_860.tape_ptr ? local.ascii_lookup[local.curr_861.input] : b)]
        : local.iter_860.tape)

    tape_ptr = (
      local.curr_861.code == "<"
        ? local.iter_860.tape_ptr == 0 ? length(local.iter_860.tape) - 1 : local.iter_860.tape_ptr - 1 :
      local.curr_861.code == ">"
        ? local.iter_860.tape_ptr == length(local.iter_860.tape) - 1 ? 0 : local.iter_860.tape_ptr + 1
        : local.iter_860.tape_ptr)

    code_ptr = 1 + (
      local.curr_861.code == "["
        ? local.iter_860.tape[local.iter_860.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_860.code_ptr)] : local.iter_860.code_ptr :
      local.curr_861.code == "]"
        ? local.iter_860.tape[local.iter_860.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_860.code_ptr)] : local.iter_860.code_ptr
        : local.iter_860.code_ptr)

    steps_taken = 1 + local.iter_860.steps_taken
  }
}

locals {
  end_of_code_862 = try(local.iter_861.code_ptr >= length(var.code), true)

  curr_862 = local.end_of_code_862 ? null : {
    code = substr(var.code, local.iter_861.code_ptr, 1)
    input = substr(var.code, local.iter_861.code_ptr, 1) == "," ? substr(local.iter_861.input, 0, 1) : null
  }

  iter_862 = local.end_of_code_862 ? local.iter_861 : {
    input = (local.curr_862.code == ","
      ? substr(local.iter_861.input, 1, -1)
      : local.iter_861.input)

    output = (local.curr_862.code == "."
      ? "${local.iter_861.output}${jsondecode(format("\"\\u%04x\"", local.iter_861.tape[local.iter_861.tape_ptr]))}"
      : local.iter_861.output)
    
    tape = (
      local.curr_862.code == "+"
        ? [for i, b in local.iter_861.tape : (i == local.iter_861.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_862.code == "-"
        ? [for i, b in local.iter_861.tape : (i == local.iter_861.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_862.code == ","
        ? [for i, b in local.iter_861.tape : (i == local.iter_861.tape_ptr ? local.ascii_lookup[local.curr_862.input] : b)]
        : local.iter_861.tape)

    tape_ptr = (
      local.curr_862.code == "<"
        ? local.iter_861.tape_ptr == 0 ? length(local.iter_861.tape) - 1 : local.iter_861.tape_ptr - 1 :
      local.curr_862.code == ">"
        ? local.iter_861.tape_ptr == length(local.iter_861.tape) - 1 ? 0 : local.iter_861.tape_ptr + 1
        : local.iter_861.tape_ptr)

    code_ptr = 1 + (
      local.curr_862.code == "["
        ? local.iter_861.tape[local.iter_861.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_861.code_ptr)] : local.iter_861.code_ptr :
      local.curr_862.code == "]"
        ? local.iter_861.tape[local.iter_861.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_861.code_ptr)] : local.iter_861.code_ptr
        : local.iter_861.code_ptr)

    steps_taken = 1 + local.iter_861.steps_taken
  }
}

locals {
  end_of_code_863 = try(local.iter_862.code_ptr >= length(var.code), true)

  curr_863 = local.end_of_code_863 ? null : {
    code = substr(var.code, local.iter_862.code_ptr, 1)
    input = substr(var.code, local.iter_862.code_ptr, 1) == "," ? substr(local.iter_862.input, 0, 1) : null
  }

  iter_863 = local.end_of_code_863 ? local.iter_862 : {
    input = (local.curr_863.code == ","
      ? substr(local.iter_862.input, 1, -1)
      : local.iter_862.input)

    output = (local.curr_863.code == "."
      ? "${local.iter_862.output}${jsondecode(format("\"\\u%04x\"", local.iter_862.tape[local.iter_862.tape_ptr]))}"
      : local.iter_862.output)
    
    tape = (
      local.curr_863.code == "+"
        ? [for i, b in local.iter_862.tape : (i == local.iter_862.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_863.code == "-"
        ? [for i, b in local.iter_862.tape : (i == local.iter_862.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_863.code == ","
        ? [for i, b in local.iter_862.tape : (i == local.iter_862.tape_ptr ? local.ascii_lookup[local.curr_863.input] : b)]
        : local.iter_862.tape)

    tape_ptr = (
      local.curr_863.code == "<"
        ? local.iter_862.tape_ptr == 0 ? length(local.iter_862.tape) - 1 : local.iter_862.tape_ptr - 1 :
      local.curr_863.code == ">"
        ? local.iter_862.tape_ptr == length(local.iter_862.tape) - 1 ? 0 : local.iter_862.tape_ptr + 1
        : local.iter_862.tape_ptr)

    code_ptr = 1 + (
      local.curr_863.code == "["
        ? local.iter_862.tape[local.iter_862.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_862.code_ptr)] : local.iter_862.code_ptr :
      local.curr_863.code == "]"
        ? local.iter_862.tape[local.iter_862.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_862.code_ptr)] : local.iter_862.code_ptr
        : local.iter_862.code_ptr)

    steps_taken = 1 + local.iter_862.steps_taken
  }
}

locals {
  end_of_code_864 = try(local.iter_863.code_ptr >= length(var.code), true)

  curr_864 = local.end_of_code_864 ? null : {
    code = substr(var.code, local.iter_863.code_ptr, 1)
    input = substr(var.code, local.iter_863.code_ptr, 1) == "," ? substr(local.iter_863.input, 0, 1) : null
  }

  iter_864 = local.end_of_code_864 ? local.iter_863 : {
    input = (local.curr_864.code == ","
      ? substr(local.iter_863.input, 1, -1)
      : local.iter_863.input)

    output = (local.curr_864.code == "."
      ? "${local.iter_863.output}${jsondecode(format("\"\\u%04x\"", local.iter_863.tape[local.iter_863.tape_ptr]))}"
      : local.iter_863.output)
    
    tape = (
      local.curr_864.code == "+"
        ? [for i, b in local.iter_863.tape : (i == local.iter_863.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_864.code == "-"
        ? [for i, b in local.iter_863.tape : (i == local.iter_863.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_864.code == ","
        ? [for i, b in local.iter_863.tape : (i == local.iter_863.tape_ptr ? local.ascii_lookup[local.curr_864.input] : b)]
        : local.iter_863.tape)

    tape_ptr = (
      local.curr_864.code == "<"
        ? local.iter_863.tape_ptr == 0 ? length(local.iter_863.tape) - 1 : local.iter_863.tape_ptr - 1 :
      local.curr_864.code == ">"
        ? local.iter_863.tape_ptr == length(local.iter_863.tape) - 1 ? 0 : local.iter_863.tape_ptr + 1
        : local.iter_863.tape_ptr)

    code_ptr = 1 + (
      local.curr_864.code == "["
        ? local.iter_863.tape[local.iter_863.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_863.code_ptr)] : local.iter_863.code_ptr :
      local.curr_864.code == "]"
        ? local.iter_863.tape[local.iter_863.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_863.code_ptr)] : local.iter_863.code_ptr
        : local.iter_863.code_ptr)

    steps_taken = 1 + local.iter_863.steps_taken
  }
}

locals {
  end_of_code_865 = try(local.iter_864.code_ptr >= length(var.code), true)

  curr_865 = local.end_of_code_865 ? null : {
    code = substr(var.code, local.iter_864.code_ptr, 1)
    input = substr(var.code, local.iter_864.code_ptr, 1) == "," ? substr(local.iter_864.input, 0, 1) : null
  }

  iter_865 = local.end_of_code_865 ? local.iter_864 : {
    input = (local.curr_865.code == ","
      ? substr(local.iter_864.input, 1, -1)
      : local.iter_864.input)

    output = (local.curr_865.code == "."
      ? "${local.iter_864.output}${jsondecode(format("\"\\u%04x\"", local.iter_864.tape[local.iter_864.tape_ptr]))}"
      : local.iter_864.output)
    
    tape = (
      local.curr_865.code == "+"
        ? [for i, b in local.iter_864.tape : (i == local.iter_864.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_865.code == "-"
        ? [for i, b in local.iter_864.tape : (i == local.iter_864.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_865.code == ","
        ? [for i, b in local.iter_864.tape : (i == local.iter_864.tape_ptr ? local.ascii_lookup[local.curr_865.input] : b)]
        : local.iter_864.tape)

    tape_ptr = (
      local.curr_865.code == "<"
        ? local.iter_864.tape_ptr == 0 ? length(local.iter_864.tape) - 1 : local.iter_864.tape_ptr - 1 :
      local.curr_865.code == ">"
        ? local.iter_864.tape_ptr == length(local.iter_864.tape) - 1 ? 0 : local.iter_864.tape_ptr + 1
        : local.iter_864.tape_ptr)

    code_ptr = 1 + (
      local.curr_865.code == "["
        ? local.iter_864.tape[local.iter_864.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_864.code_ptr)] : local.iter_864.code_ptr :
      local.curr_865.code == "]"
        ? local.iter_864.tape[local.iter_864.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_864.code_ptr)] : local.iter_864.code_ptr
        : local.iter_864.code_ptr)

    steps_taken = 1 + local.iter_864.steps_taken
  }
}

locals {
  end_of_code_866 = try(local.iter_865.code_ptr >= length(var.code), true)

  curr_866 = local.end_of_code_866 ? null : {
    code = substr(var.code, local.iter_865.code_ptr, 1)
    input = substr(var.code, local.iter_865.code_ptr, 1) == "," ? substr(local.iter_865.input, 0, 1) : null
  }

  iter_866 = local.end_of_code_866 ? local.iter_865 : {
    input = (local.curr_866.code == ","
      ? substr(local.iter_865.input, 1, -1)
      : local.iter_865.input)

    output = (local.curr_866.code == "."
      ? "${local.iter_865.output}${jsondecode(format("\"\\u%04x\"", local.iter_865.tape[local.iter_865.tape_ptr]))}"
      : local.iter_865.output)
    
    tape = (
      local.curr_866.code == "+"
        ? [for i, b in local.iter_865.tape : (i == local.iter_865.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_866.code == "-"
        ? [for i, b in local.iter_865.tape : (i == local.iter_865.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_866.code == ","
        ? [for i, b in local.iter_865.tape : (i == local.iter_865.tape_ptr ? local.ascii_lookup[local.curr_866.input] : b)]
        : local.iter_865.tape)

    tape_ptr = (
      local.curr_866.code == "<"
        ? local.iter_865.tape_ptr == 0 ? length(local.iter_865.tape) - 1 : local.iter_865.tape_ptr - 1 :
      local.curr_866.code == ">"
        ? local.iter_865.tape_ptr == length(local.iter_865.tape) - 1 ? 0 : local.iter_865.tape_ptr + 1
        : local.iter_865.tape_ptr)

    code_ptr = 1 + (
      local.curr_866.code == "["
        ? local.iter_865.tape[local.iter_865.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_865.code_ptr)] : local.iter_865.code_ptr :
      local.curr_866.code == "]"
        ? local.iter_865.tape[local.iter_865.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_865.code_ptr)] : local.iter_865.code_ptr
        : local.iter_865.code_ptr)

    steps_taken = 1 + local.iter_865.steps_taken
  }
}

locals {
  end_of_code_867 = try(local.iter_866.code_ptr >= length(var.code), true)

  curr_867 = local.end_of_code_867 ? null : {
    code = substr(var.code, local.iter_866.code_ptr, 1)
    input = substr(var.code, local.iter_866.code_ptr, 1) == "," ? substr(local.iter_866.input, 0, 1) : null
  }

  iter_867 = local.end_of_code_867 ? local.iter_866 : {
    input = (local.curr_867.code == ","
      ? substr(local.iter_866.input, 1, -1)
      : local.iter_866.input)

    output = (local.curr_867.code == "."
      ? "${local.iter_866.output}${jsondecode(format("\"\\u%04x\"", local.iter_866.tape[local.iter_866.tape_ptr]))}"
      : local.iter_866.output)
    
    tape = (
      local.curr_867.code == "+"
        ? [for i, b in local.iter_866.tape : (i == local.iter_866.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_867.code == "-"
        ? [for i, b in local.iter_866.tape : (i == local.iter_866.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_867.code == ","
        ? [for i, b in local.iter_866.tape : (i == local.iter_866.tape_ptr ? local.ascii_lookup[local.curr_867.input] : b)]
        : local.iter_866.tape)

    tape_ptr = (
      local.curr_867.code == "<"
        ? local.iter_866.tape_ptr == 0 ? length(local.iter_866.tape) - 1 : local.iter_866.tape_ptr - 1 :
      local.curr_867.code == ">"
        ? local.iter_866.tape_ptr == length(local.iter_866.tape) - 1 ? 0 : local.iter_866.tape_ptr + 1
        : local.iter_866.tape_ptr)

    code_ptr = 1 + (
      local.curr_867.code == "["
        ? local.iter_866.tape[local.iter_866.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_866.code_ptr)] : local.iter_866.code_ptr :
      local.curr_867.code == "]"
        ? local.iter_866.tape[local.iter_866.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_866.code_ptr)] : local.iter_866.code_ptr
        : local.iter_866.code_ptr)

    steps_taken = 1 + local.iter_866.steps_taken
  }
}

locals {
  end_of_code_868 = try(local.iter_867.code_ptr >= length(var.code), true)

  curr_868 = local.end_of_code_868 ? null : {
    code = substr(var.code, local.iter_867.code_ptr, 1)
    input = substr(var.code, local.iter_867.code_ptr, 1) == "," ? substr(local.iter_867.input, 0, 1) : null
  }

  iter_868 = local.end_of_code_868 ? local.iter_867 : {
    input = (local.curr_868.code == ","
      ? substr(local.iter_867.input, 1, -1)
      : local.iter_867.input)

    output = (local.curr_868.code == "."
      ? "${local.iter_867.output}${jsondecode(format("\"\\u%04x\"", local.iter_867.tape[local.iter_867.tape_ptr]))}"
      : local.iter_867.output)
    
    tape = (
      local.curr_868.code == "+"
        ? [for i, b in local.iter_867.tape : (i == local.iter_867.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_868.code == "-"
        ? [for i, b in local.iter_867.tape : (i == local.iter_867.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_868.code == ","
        ? [for i, b in local.iter_867.tape : (i == local.iter_867.tape_ptr ? local.ascii_lookup[local.curr_868.input] : b)]
        : local.iter_867.tape)

    tape_ptr = (
      local.curr_868.code == "<"
        ? local.iter_867.tape_ptr == 0 ? length(local.iter_867.tape) - 1 : local.iter_867.tape_ptr - 1 :
      local.curr_868.code == ">"
        ? local.iter_867.tape_ptr == length(local.iter_867.tape) - 1 ? 0 : local.iter_867.tape_ptr + 1
        : local.iter_867.tape_ptr)

    code_ptr = 1 + (
      local.curr_868.code == "["
        ? local.iter_867.tape[local.iter_867.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_867.code_ptr)] : local.iter_867.code_ptr :
      local.curr_868.code == "]"
        ? local.iter_867.tape[local.iter_867.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_867.code_ptr)] : local.iter_867.code_ptr
        : local.iter_867.code_ptr)

    steps_taken = 1 + local.iter_867.steps_taken
  }
}

locals {
  end_of_code_869 = try(local.iter_868.code_ptr >= length(var.code), true)

  curr_869 = local.end_of_code_869 ? null : {
    code = substr(var.code, local.iter_868.code_ptr, 1)
    input = substr(var.code, local.iter_868.code_ptr, 1) == "," ? substr(local.iter_868.input, 0, 1) : null
  }

  iter_869 = local.end_of_code_869 ? local.iter_868 : {
    input = (local.curr_869.code == ","
      ? substr(local.iter_868.input, 1, -1)
      : local.iter_868.input)

    output = (local.curr_869.code == "."
      ? "${local.iter_868.output}${jsondecode(format("\"\\u%04x\"", local.iter_868.tape[local.iter_868.tape_ptr]))}"
      : local.iter_868.output)
    
    tape = (
      local.curr_869.code == "+"
        ? [for i, b in local.iter_868.tape : (i == local.iter_868.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_869.code == "-"
        ? [for i, b in local.iter_868.tape : (i == local.iter_868.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_869.code == ","
        ? [for i, b in local.iter_868.tape : (i == local.iter_868.tape_ptr ? local.ascii_lookup[local.curr_869.input] : b)]
        : local.iter_868.tape)

    tape_ptr = (
      local.curr_869.code == "<"
        ? local.iter_868.tape_ptr == 0 ? length(local.iter_868.tape) - 1 : local.iter_868.tape_ptr - 1 :
      local.curr_869.code == ">"
        ? local.iter_868.tape_ptr == length(local.iter_868.tape) - 1 ? 0 : local.iter_868.tape_ptr + 1
        : local.iter_868.tape_ptr)

    code_ptr = 1 + (
      local.curr_869.code == "["
        ? local.iter_868.tape[local.iter_868.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_868.code_ptr)] : local.iter_868.code_ptr :
      local.curr_869.code == "]"
        ? local.iter_868.tape[local.iter_868.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_868.code_ptr)] : local.iter_868.code_ptr
        : local.iter_868.code_ptr)

    steps_taken = 1 + local.iter_868.steps_taken
  }
}

locals {
  end_of_code_870 = try(local.iter_869.code_ptr >= length(var.code), true)

  curr_870 = local.end_of_code_870 ? null : {
    code = substr(var.code, local.iter_869.code_ptr, 1)
    input = substr(var.code, local.iter_869.code_ptr, 1) == "," ? substr(local.iter_869.input, 0, 1) : null
  }

  iter_870 = local.end_of_code_870 ? local.iter_869 : {
    input = (local.curr_870.code == ","
      ? substr(local.iter_869.input, 1, -1)
      : local.iter_869.input)

    output = (local.curr_870.code == "."
      ? "${local.iter_869.output}${jsondecode(format("\"\\u%04x\"", local.iter_869.tape[local.iter_869.tape_ptr]))}"
      : local.iter_869.output)
    
    tape = (
      local.curr_870.code == "+"
        ? [for i, b in local.iter_869.tape : (i == local.iter_869.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_870.code == "-"
        ? [for i, b in local.iter_869.tape : (i == local.iter_869.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_870.code == ","
        ? [for i, b in local.iter_869.tape : (i == local.iter_869.tape_ptr ? local.ascii_lookup[local.curr_870.input] : b)]
        : local.iter_869.tape)

    tape_ptr = (
      local.curr_870.code == "<"
        ? local.iter_869.tape_ptr == 0 ? length(local.iter_869.tape) - 1 : local.iter_869.tape_ptr - 1 :
      local.curr_870.code == ">"
        ? local.iter_869.tape_ptr == length(local.iter_869.tape) - 1 ? 0 : local.iter_869.tape_ptr + 1
        : local.iter_869.tape_ptr)

    code_ptr = 1 + (
      local.curr_870.code == "["
        ? local.iter_869.tape[local.iter_869.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_869.code_ptr)] : local.iter_869.code_ptr :
      local.curr_870.code == "]"
        ? local.iter_869.tape[local.iter_869.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_869.code_ptr)] : local.iter_869.code_ptr
        : local.iter_869.code_ptr)

    steps_taken = 1 + local.iter_869.steps_taken
  }
}

locals {
  end_of_code_871 = try(local.iter_870.code_ptr >= length(var.code), true)

  curr_871 = local.end_of_code_871 ? null : {
    code = substr(var.code, local.iter_870.code_ptr, 1)
    input = substr(var.code, local.iter_870.code_ptr, 1) == "," ? substr(local.iter_870.input, 0, 1) : null
  }

  iter_871 = local.end_of_code_871 ? local.iter_870 : {
    input = (local.curr_871.code == ","
      ? substr(local.iter_870.input, 1, -1)
      : local.iter_870.input)

    output = (local.curr_871.code == "."
      ? "${local.iter_870.output}${jsondecode(format("\"\\u%04x\"", local.iter_870.tape[local.iter_870.tape_ptr]))}"
      : local.iter_870.output)
    
    tape = (
      local.curr_871.code == "+"
        ? [for i, b in local.iter_870.tape : (i == local.iter_870.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_871.code == "-"
        ? [for i, b in local.iter_870.tape : (i == local.iter_870.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_871.code == ","
        ? [for i, b in local.iter_870.tape : (i == local.iter_870.tape_ptr ? local.ascii_lookup[local.curr_871.input] : b)]
        : local.iter_870.tape)

    tape_ptr = (
      local.curr_871.code == "<"
        ? local.iter_870.tape_ptr == 0 ? length(local.iter_870.tape) - 1 : local.iter_870.tape_ptr - 1 :
      local.curr_871.code == ">"
        ? local.iter_870.tape_ptr == length(local.iter_870.tape) - 1 ? 0 : local.iter_870.tape_ptr + 1
        : local.iter_870.tape_ptr)

    code_ptr = 1 + (
      local.curr_871.code == "["
        ? local.iter_870.tape[local.iter_870.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_870.code_ptr)] : local.iter_870.code_ptr :
      local.curr_871.code == "]"
        ? local.iter_870.tape[local.iter_870.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_870.code_ptr)] : local.iter_870.code_ptr
        : local.iter_870.code_ptr)

    steps_taken = 1 + local.iter_870.steps_taken
  }
}

locals {
  end_of_code_872 = try(local.iter_871.code_ptr >= length(var.code), true)

  curr_872 = local.end_of_code_872 ? null : {
    code = substr(var.code, local.iter_871.code_ptr, 1)
    input = substr(var.code, local.iter_871.code_ptr, 1) == "," ? substr(local.iter_871.input, 0, 1) : null
  }

  iter_872 = local.end_of_code_872 ? local.iter_871 : {
    input = (local.curr_872.code == ","
      ? substr(local.iter_871.input, 1, -1)
      : local.iter_871.input)

    output = (local.curr_872.code == "."
      ? "${local.iter_871.output}${jsondecode(format("\"\\u%04x\"", local.iter_871.tape[local.iter_871.tape_ptr]))}"
      : local.iter_871.output)
    
    tape = (
      local.curr_872.code == "+"
        ? [for i, b in local.iter_871.tape : (i == local.iter_871.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_872.code == "-"
        ? [for i, b in local.iter_871.tape : (i == local.iter_871.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_872.code == ","
        ? [for i, b in local.iter_871.tape : (i == local.iter_871.tape_ptr ? local.ascii_lookup[local.curr_872.input] : b)]
        : local.iter_871.tape)

    tape_ptr = (
      local.curr_872.code == "<"
        ? local.iter_871.tape_ptr == 0 ? length(local.iter_871.tape) - 1 : local.iter_871.tape_ptr - 1 :
      local.curr_872.code == ">"
        ? local.iter_871.tape_ptr == length(local.iter_871.tape) - 1 ? 0 : local.iter_871.tape_ptr + 1
        : local.iter_871.tape_ptr)

    code_ptr = 1 + (
      local.curr_872.code == "["
        ? local.iter_871.tape[local.iter_871.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_871.code_ptr)] : local.iter_871.code_ptr :
      local.curr_872.code == "]"
        ? local.iter_871.tape[local.iter_871.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_871.code_ptr)] : local.iter_871.code_ptr
        : local.iter_871.code_ptr)

    steps_taken = 1 + local.iter_871.steps_taken
  }
}

locals {
  end_of_code_873 = try(local.iter_872.code_ptr >= length(var.code), true)

  curr_873 = local.end_of_code_873 ? null : {
    code = substr(var.code, local.iter_872.code_ptr, 1)
    input = substr(var.code, local.iter_872.code_ptr, 1) == "," ? substr(local.iter_872.input, 0, 1) : null
  }

  iter_873 = local.end_of_code_873 ? local.iter_872 : {
    input = (local.curr_873.code == ","
      ? substr(local.iter_872.input, 1, -1)
      : local.iter_872.input)

    output = (local.curr_873.code == "."
      ? "${local.iter_872.output}${jsondecode(format("\"\\u%04x\"", local.iter_872.tape[local.iter_872.tape_ptr]))}"
      : local.iter_872.output)
    
    tape = (
      local.curr_873.code == "+"
        ? [for i, b in local.iter_872.tape : (i == local.iter_872.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_873.code == "-"
        ? [for i, b in local.iter_872.tape : (i == local.iter_872.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_873.code == ","
        ? [for i, b in local.iter_872.tape : (i == local.iter_872.tape_ptr ? local.ascii_lookup[local.curr_873.input] : b)]
        : local.iter_872.tape)

    tape_ptr = (
      local.curr_873.code == "<"
        ? local.iter_872.tape_ptr == 0 ? length(local.iter_872.tape) - 1 : local.iter_872.tape_ptr - 1 :
      local.curr_873.code == ">"
        ? local.iter_872.tape_ptr == length(local.iter_872.tape) - 1 ? 0 : local.iter_872.tape_ptr + 1
        : local.iter_872.tape_ptr)

    code_ptr = 1 + (
      local.curr_873.code == "["
        ? local.iter_872.tape[local.iter_872.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_872.code_ptr)] : local.iter_872.code_ptr :
      local.curr_873.code == "]"
        ? local.iter_872.tape[local.iter_872.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_872.code_ptr)] : local.iter_872.code_ptr
        : local.iter_872.code_ptr)

    steps_taken = 1 + local.iter_872.steps_taken
  }
}

locals {
  end_of_code_874 = try(local.iter_873.code_ptr >= length(var.code), true)

  curr_874 = local.end_of_code_874 ? null : {
    code = substr(var.code, local.iter_873.code_ptr, 1)
    input = substr(var.code, local.iter_873.code_ptr, 1) == "," ? substr(local.iter_873.input, 0, 1) : null
  }

  iter_874 = local.end_of_code_874 ? local.iter_873 : {
    input = (local.curr_874.code == ","
      ? substr(local.iter_873.input, 1, -1)
      : local.iter_873.input)

    output = (local.curr_874.code == "."
      ? "${local.iter_873.output}${jsondecode(format("\"\\u%04x\"", local.iter_873.tape[local.iter_873.tape_ptr]))}"
      : local.iter_873.output)
    
    tape = (
      local.curr_874.code == "+"
        ? [for i, b in local.iter_873.tape : (i == local.iter_873.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_874.code == "-"
        ? [for i, b in local.iter_873.tape : (i == local.iter_873.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_874.code == ","
        ? [for i, b in local.iter_873.tape : (i == local.iter_873.tape_ptr ? local.ascii_lookup[local.curr_874.input] : b)]
        : local.iter_873.tape)

    tape_ptr = (
      local.curr_874.code == "<"
        ? local.iter_873.tape_ptr == 0 ? length(local.iter_873.tape) - 1 : local.iter_873.tape_ptr - 1 :
      local.curr_874.code == ">"
        ? local.iter_873.tape_ptr == length(local.iter_873.tape) - 1 ? 0 : local.iter_873.tape_ptr + 1
        : local.iter_873.tape_ptr)

    code_ptr = 1 + (
      local.curr_874.code == "["
        ? local.iter_873.tape[local.iter_873.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_873.code_ptr)] : local.iter_873.code_ptr :
      local.curr_874.code == "]"
        ? local.iter_873.tape[local.iter_873.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_873.code_ptr)] : local.iter_873.code_ptr
        : local.iter_873.code_ptr)

    steps_taken = 1 + local.iter_873.steps_taken
  }
}

locals {
  end_of_code_875 = try(local.iter_874.code_ptr >= length(var.code), true)

  curr_875 = local.end_of_code_875 ? null : {
    code = substr(var.code, local.iter_874.code_ptr, 1)
    input = substr(var.code, local.iter_874.code_ptr, 1) == "," ? substr(local.iter_874.input, 0, 1) : null
  }

  iter_875 = local.end_of_code_875 ? local.iter_874 : {
    input = (local.curr_875.code == ","
      ? substr(local.iter_874.input, 1, -1)
      : local.iter_874.input)

    output = (local.curr_875.code == "."
      ? "${local.iter_874.output}${jsondecode(format("\"\\u%04x\"", local.iter_874.tape[local.iter_874.tape_ptr]))}"
      : local.iter_874.output)
    
    tape = (
      local.curr_875.code == "+"
        ? [for i, b in local.iter_874.tape : (i == local.iter_874.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_875.code == "-"
        ? [for i, b in local.iter_874.tape : (i == local.iter_874.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_875.code == ","
        ? [for i, b in local.iter_874.tape : (i == local.iter_874.tape_ptr ? local.ascii_lookup[local.curr_875.input] : b)]
        : local.iter_874.tape)

    tape_ptr = (
      local.curr_875.code == "<"
        ? local.iter_874.tape_ptr == 0 ? length(local.iter_874.tape) - 1 : local.iter_874.tape_ptr - 1 :
      local.curr_875.code == ">"
        ? local.iter_874.tape_ptr == length(local.iter_874.tape) - 1 ? 0 : local.iter_874.tape_ptr + 1
        : local.iter_874.tape_ptr)

    code_ptr = 1 + (
      local.curr_875.code == "["
        ? local.iter_874.tape[local.iter_874.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_874.code_ptr)] : local.iter_874.code_ptr :
      local.curr_875.code == "]"
        ? local.iter_874.tape[local.iter_874.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_874.code_ptr)] : local.iter_874.code_ptr
        : local.iter_874.code_ptr)

    steps_taken = 1 + local.iter_874.steps_taken
  }
}

locals {
  end_of_code_876 = try(local.iter_875.code_ptr >= length(var.code), true)

  curr_876 = local.end_of_code_876 ? null : {
    code = substr(var.code, local.iter_875.code_ptr, 1)
    input = substr(var.code, local.iter_875.code_ptr, 1) == "," ? substr(local.iter_875.input, 0, 1) : null
  }

  iter_876 = local.end_of_code_876 ? local.iter_875 : {
    input = (local.curr_876.code == ","
      ? substr(local.iter_875.input, 1, -1)
      : local.iter_875.input)

    output = (local.curr_876.code == "."
      ? "${local.iter_875.output}${jsondecode(format("\"\\u%04x\"", local.iter_875.tape[local.iter_875.tape_ptr]))}"
      : local.iter_875.output)
    
    tape = (
      local.curr_876.code == "+"
        ? [for i, b in local.iter_875.tape : (i == local.iter_875.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_876.code == "-"
        ? [for i, b in local.iter_875.tape : (i == local.iter_875.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_876.code == ","
        ? [for i, b in local.iter_875.tape : (i == local.iter_875.tape_ptr ? local.ascii_lookup[local.curr_876.input] : b)]
        : local.iter_875.tape)

    tape_ptr = (
      local.curr_876.code == "<"
        ? local.iter_875.tape_ptr == 0 ? length(local.iter_875.tape) - 1 : local.iter_875.tape_ptr - 1 :
      local.curr_876.code == ">"
        ? local.iter_875.tape_ptr == length(local.iter_875.tape) - 1 ? 0 : local.iter_875.tape_ptr + 1
        : local.iter_875.tape_ptr)

    code_ptr = 1 + (
      local.curr_876.code == "["
        ? local.iter_875.tape[local.iter_875.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_875.code_ptr)] : local.iter_875.code_ptr :
      local.curr_876.code == "]"
        ? local.iter_875.tape[local.iter_875.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_875.code_ptr)] : local.iter_875.code_ptr
        : local.iter_875.code_ptr)

    steps_taken = 1 + local.iter_875.steps_taken
  }
}

locals {
  end_of_code_877 = try(local.iter_876.code_ptr >= length(var.code), true)

  curr_877 = local.end_of_code_877 ? null : {
    code = substr(var.code, local.iter_876.code_ptr, 1)
    input = substr(var.code, local.iter_876.code_ptr, 1) == "," ? substr(local.iter_876.input, 0, 1) : null
  }

  iter_877 = local.end_of_code_877 ? local.iter_876 : {
    input = (local.curr_877.code == ","
      ? substr(local.iter_876.input, 1, -1)
      : local.iter_876.input)

    output = (local.curr_877.code == "."
      ? "${local.iter_876.output}${jsondecode(format("\"\\u%04x\"", local.iter_876.tape[local.iter_876.tape_ptr]))}"
      : local.iter_876.output)
    
    tape = (
      local.curr_877.code == "+"
        ? [for i, b in local.iter_876.tape : (i == local.iter_876.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_877.code == "-"
        ? [for i, b in local.iter_876.tape : (i == local.iter_876.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_877.code == ","
        ? [for i, b in local.iter_876.tape : (i == local.iter_876.tape_ptr ? local.ascii_lookup[local.curr_877.input] : b)]
        : local.iter_876.tape)

    tape_ptr = (
      local.curr_877.code == "<"
        ? local.iter_876.tape_ptr == 0 ? length(local.iter_876.tape) - 1 : local.iter_876.tape_ptr - 1 :
      local.curr_877.code == ">"
        ? local.iter_876.tape_ptr == length(local.iter_876.tape) - 1 ? 0 : local.iter_876.tape_ptr + 1
        : local.iter_876.tape_ptr)

    code_ptr = 1 + (
      local.curr_877.code == "["
        ? local.iter_876.tape[local.iter_876.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_876.code_ptr)] : local.iter_876.code_ptr :
      local.curr_877.code == "]"
        ? local.iter_876.tape[local.iter_876.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_876.code_ptr)] : local.iter_876.code_ptr
        : local.iter_876.code_ptr)

    steps_taken = 1 + local.iter_876.steps_taken
  }
}

locals {
  end_of_code_878 = try(local.iter_877.code_ptr >= length(var.code), true)

  curr_878 = local.end_of_code_878 ? null : {
    code = substr(var.code, local.iter_877.code_ptr, 1)
    input = substr(var.code, local.iter_877.code_ptr, 1) == "," ? substr(local.iter_877.input, 0, 1) : null
  }

  iter_878 = local.end_of_code_878 ? local.iter_877 : {
    input = (local.curr_878.code == ","
      ? substr(local.iter_877.input, 1, -1)
      : local.iter_877.input)

    output = (local.curr_878.code == "."
      ? "${local.iter_877.output}${jsondecode(format("\"\\u%04x\"", local.iter_877.tape[local.iter_877.tape_ptr]))}"
      : local.iter_877.output)
    
    tape = (
      local.curr_878.code == "+"
        ? [for i, b in local.iter_877.tape : (i == local.iter_877.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_878.code == "-"
        ? [for i, b in local.iter_877.tape : (i == local.iter_877.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_878.code == ","
        ? [for i, b in local.iter_877.tape : (i == local.iter_877.tape_ptr ? local.ascii_lookup[local.curr_878.input] : b)]
        : local.iter_877.tape)

    tape_ptr = (
      local.curr_878.code == "<"
        ? local.iter_877.tape_ptr == 0 ? length(local.iter_877.tape) - 1 : local.iter_877.tape_ptr - 1 :
      local.curr_878.code == ">"
        ? local.iter_877.tape_ptr == length(local.iter_877.tape) - 1 ? 0 : local.iter_877.tape_ptr + 1
        : local.iter_877.tape_ptr)

    code_ptr = 1 + (
      local.curr_878.code == "["
        ? local.iter_877.tape[local.iter_877.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_877.code_ptr)] : local.iter_877.code_ptr :
      local.curr_878.code == "]"
        ? local.iter_877.tape[local.iter_877.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_877.code_ptr)] : local.iter_877.code_ptr
        : local.iter_877.code_ptr)

    steps_taken = 1 + local.iter_877.steps_taken
  }
}

locals {
  end_of_code_879 = try(local.iter_878.code_ptr >= length(var.code), true)

  curr_879 = local.end_of_code_879 ? null : {
    code = substr(var.code, local.iter_878.code_ptr, 1)
    input = substr(var.code, local.iter_878.code_ptr, 1) == "," ? substr(local.iter_878.input, 0, 1) : null
  }

  iter_879 = local.end_of_code_879 ? local.iter_878 : {
    input = (local.curr_879.code == ","
      ? substr(local.iter_878.input, 1, -1)
      : local.iter_878.input)

    output = (local.curr_879.code == "."
      ? "${local.iter_878.output}${jsondecode(format("\"\\u%04x\"", local.iter_878.tape[local.iter_878.tape_ptr]))}"
      : local.iter_878.output)
    
    tape = (
      local.curr_879.code == "+"
        ? [for i, b in local.iter_878.tape : (i == local.iter_878.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_879.code == "-"
        ? [for i, b in local.iter_878.tape : (i == local.iter_878.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_879.code == ","
        ? [for i, b in local.iter_878.tape : (i == local.iter_878.tape_ptr ? local.ascii_lookup[local.curr_879.input] : b)]
        : local.iter_878.tape)

    tape_ptr = (
      local.curr_879.code == "<"
        ? local.iter_878.tape_ptr == 0 ? length(local.iter_878.tape) - 1 : local.iter_878.tape_ptr - 1 :
      local.curr_879.code == ">"
        ? local.iter_878.tape_ptr == length(local.iter_878.tape) - 1 ? 0 : local.iter_878.tape_ptr + 1
        : local.iter_878.tape_ptr)

    code_ptr = 1 + (
      local.curr_879.code == "["
        ? local.iter_878.tape[local.iter_878.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_878.code_ptr)] : local.iter_878.code_ptr :
      local.curr_879.code == "]"
        ? local.iter_878.tape[local.iter_878.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_878.code_ptr)] : local.iter_878.code_ptr
        : local.iter_878.code_ptr)

    steps_taken = 1 + local.iter_878.steps_taken
  }
}

locals {
  end_of_code_880 = try(local.iter_879.code_ptr >= length(var.code), true)

  curr_880 = local.end_of_code_880 ? null : {
    code = substr(var.code, local.iter_879.code_ptr, 1)
    input = substr(var.code, local.iter_879.code_ptr, 1) == "," ? substr(local.iter_879.input, 0, 1) : null
  }

  iter_880 = local.end_of_code_880 ? local.iter_879 : {
    input = (local.curr_880.code == ","
      ? substr(local.iter_879.input, 1, -1)
      : local.iter_879.input)

    output = (local.curr_880.code == "."
      ? "${local.iter_879.output}${jsondecode(format("\"\\u%04x\"", local.iter_879.tape[local.iter_879.tape_ptr]))}"
      : local.iter_879.output)
    
    tape = (
      local.curr_880.code == "+"
        ? [for i, b in local.iter_879.tape : (i == local.iter_879.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_880.code == "-"
        ? [for i, b in local.iter_879.tape : (i == local.iter_879.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_880.code == ","
        ? [for i, b in local.iter_879.tape : (i == local.iter_879.tape_ptr ? local.ascii_lookup[local.curr_880.input] : b)]
        : local.iter_879.tape)

    tape_ptr = (
      local.curr_880.code == "<"
        ? local.iter_879.tape_ptr == 0 ? length(local.iter_879.tape) - 1 : local.iter_879.tape_ptr - 1 :
      local.curr_880.code == ">"
        ? local.iter_879.tape_ptr == length(local.iter_879.tape) - 1 ? 0 : local.iter_879.tape_ptr + 1
        : local.iter_879.tape_ptr)

    code_ptr = 1 + (
      local.curr_880.code == "["
        ? local.iter_879.tape[local.iter_879.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_879.code_ptr)] : local.iter_879.code_ptr :
      local.curr_880.code == "]"
        ? local.iter_879.tape[local.iter_879.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_879.code_ptr)] : local.iter_879.code_ptr
        : local.iter_879.code_ptr)

    steps_taken = 1 + local.iter_879.steps_taken
  }
}

locals {
  end_of_code_881 = try(local.iter_880.code_ptr >= length(var.code), true)

  curr_881 = local.end_of_code_881 ? null : {
    code = substr(var.code, local.iter_880.code_ptr, 1)
    input = substr(var.code, local.iter_880.code_ptr, 1) == "," ? substr(local.iter_880.input, 0, 1) : null
  }

  iter_881 = local.end_of_code_881 ? local.iter_880 : {
    input = (local.curr_881.code == ","
      ? substr(local.iter_880.input, 1, -1)
      : local.iter_880.input)

    output = (local.curr_881.code == "."
      ? "${local.iter_880.output}${jsondecode(format("\"\\u%04x\"", local.iter_880.tape[local.iter_880.tape_ptr]))}"
      : local.iter_880.output)
    
    tape = (
      local.curr_881.code == "+"
        ? [for i, b in local.iter_880.tape : (i == local.iter_880.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_881.code == "-"
        ? [for i, b in local.iter_880.tape : (i == local.iter_880.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_881.code == ","
        ? [for i, b in local.iter_880.tape : (i == local.iter_880.tape_ptr ? local.ascii_lookup[local.curr_881.input] : b)]
        : local.iter_880.tape)

    tape_ptr = (
      local.curr_881.code == "<"
        ? local.iter_880.tape_ptr == 0 ? length(local.iter_880.tape) - 1 : local.iter_880.tape_ptr - 1 :
      local.curr_881.code == ">"
        ? local.iter_880.tape_ptr == length(local.iter_880.tape) - 1 ? 0 : local.iter_880.tape_ptr + 1
        : local.iter_880.tape_ptr)

    code_ptr = 1 + (
      local.curr_881.code == "["
        ? local.iter_880.tape[local.iter_880.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_880.code_ptr)] : local.iter_880.code_ptr :
      local.curr_881.code == "]"
        ? local.iter_880.tape[local.iter_880.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_880.code_ptr)] : local.iter_880.code_ptr
        : local.iter_880.code_ptr)

    steps_taken = 1 + local.iter_880.steps_taken
  }
}

locals {
  end_of_code_882 = try(local.iter_881.code_ptr >= length(var.code), true)

  curr_882 = local.end_of_code_882 ? null : {
    code = substr(var.code, local.iter_881.code_ptr, 1)
    input = substr(var.code, local.iter_881.code_ptr, 1) == "," ? substr(local.iter_881.input, 0, 1) : null
  }

  iter_882 = local.end_of_code_882 ? local.iter_881 : {
    input = (local.curr_882.code == ","
      ? substr(local.iter_881.input, 1, -1)
      : local.iter_881.input)

    output = (local.curr_882.code == "."
      ? "${local.iter_881.output}${jsondecode(format("\"\\u%04x\"", local.iter_881.tape[local.iter_881.tape_ptr]))}"
      : local.iter_881.output)
    
    tape = (
      local.curr_882.code == "+"
        ? [for i, b in local.iter_881.tape : (i == local.iter_881.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_882.code == "-"
        ? [for i, b in local.iter_881.tape : (i == local.iter_881.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_882.code == ","
        ? [for i, b in local.iter_881.tape : (i == local.iter_881.tape_ptr ? local.ascii_lookup[local.curr_882.input] : b)]
        : local.iter_881.tape)

    tape_ptr = (
      local.curr_882.code == "<"
        ? local.iter_881.tape_ptr == 0 ? length(local.iter_881.tape) - 1 : local.iter_881.tape_ptr - 1 :
      local.curr_882.code == ">"
        ? local.iter_881.tape_ptr == length(local.iter_881.tape) - 1 ? 0 : local.iter_881.tape_ptr + 1
        : local.iter_881.tape_ptr)

    code_ptr = 1 + (
      local.curr_882.code == "["
        ? local.iter_881.tape[local.iter_881.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_881.code_ptr)] : local.iter_881.code_ptr :
      local.curr_882.code == "]"
        ? local.iter_881.tape[local.iter_881.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_881.code_ptr)] : local.iter_881.code_ptr
        : local.iter_881.code_ptr)

    steps_taken = 1 + local.iter_881.steps_taken
  }
}

locals {
  end_of_code_883 = try(local.iter_882.code_ptr >= length(var.code), true)

  curr_883 = local.end_of_code_883 ? null : {
    code = substr(var.code, local.iter_882.code_ptr, 1)
    input = substr(var.code, local.iter_882.code_ptr, 1) == "," ? substr(local.iter_882.input, 0, 1) : null
  }

  iter_883 = local.end_of_code_883 ? local.iter_882 : {
    input = (local.curr_883.code == ","
      ? substr(local.iter_882.input, 1, -1)
      : local.iter_882.input)

    output = (local.curr_883.code == "."
      ? "${local.iter_882.output}${jsondecode(format("\"\\u%04x\"", local.iter_882.tape[local.iter_882.tape_ptr]))}"
      : local.iter_882.output)
    
    tape = (
      local.curr_883.code == "+"
        ? [for i, b in local.iter_882.tape : (i == local.iter_882.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_883.code == "-"
        ? [for i, b in local.iter_882.tape : (i == local.iter_882.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_883.code == ","
        ? [for i, b in local.iter_882.tape : (i == local.iter_882.tape_ptr ? local.ascii_lookup[local.curr_883.input] : b)]
        : local.iter_882.tape)

    tape_ptr = (
      local.curr_883.code == "<"
        ? local.iter_882.tape_ptr == 0 ? length(local.iter_882.tape) - 1 : local.iter_882.tape_ptr - 1 :
      local.curr_883.code == ">"
        ? local.iter_882.tape_ptr == length(local.iter_882.tape) - 1 ? 0 : local.iter_882.tape_ptr + 1
        : local.iter_882.tape_ptr)

    code_ptr = 1 + (
      local.curr_883.code == "["
        ? local.iter_882.tape[local.iter_882.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_882.code_ptr)] : local.iter_882.code_ptr :
      local.curr_883.code == "]"
        ? local.iter_882.tape[local.iter_882.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_882.code_ptr)] : local.iter_882.code_ptr
        : local.iter_882.code_ptr)

    steps_taken = 1 + local.iter_882.steps_taken
  }
}

locals {
  end_of_code_884 = try(local.iter_883.code_ptr >= length(var.code), true)

  curr_884 = local.end_of_code_884 ? null : {
    code = substr(var.code, local.iter_883.code_ptr, 1)
    input = substr(var.code, local.iter_883.code_ptr, 1) == "," ? substr(local.iter_883.input, 0, 1) : null
  }

  iter_884 = local.end_of_code_884 ? local.iter_883 : {
    input = (local.curr_884.code == ","
      ? substr(local.iter_883.input, 1, -1)
      : local.iter_883.input)

    output = (local.curr_884.code == "."
      ? "${local.iter_883.output}${jsondecode(format("\"\\u%04x\"", local.iter_883.tape[local.iter_883.tape_ptr]))}"
      : local.iter_883.output)
    
    tape = (
      local.curr_884.code == "+"
        ? [for i, b in local.iter_883.tape : (i == local.iter_883.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_884.code == "-"
        ? [for i, b in local.iter_883.tape : (i == local.iter_883.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_884.code == ","
        ? [for i, b in local.iter_883.tape : (i == local.iter_883.tape_ptr ? local.ascii_lookup[local.curr_884.input] : b)]
        : local.iter_883.tape)

    tape_ptr = (
      local.curr_884.code == "<"
        ? local.iter_883.tape_ptr == 0 ? length(local.iter_883.tape) - 1 : local.iter_883.tape_ptr - 1 :
      local.curr_884.code == ">"
        ? local.iter_883.tape_ptr == length(local.iter_883.tape) - 1 ? 0 : local.iter_883.tape_ptr + 1
        : local.iter_883.tape_ptr)

    code_ptr = 1 + (
      local.curr_884.code == "["
        ? local.iter_883.tape[local.iter_883.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_883.code_ptr)] : local.iter_883.code_ptr :
      local.curr_884.code == "]"
        ? local.iter_883.tape[local.iter_883.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_883.code_ptr)] : local.iter_883.code_ptr
        : local.iter_883.code_ptr)

    steps_taken = 1 + local.iter_883.steps_taken
  }
}

locals {
  end_of_code_885 = try(local.iter_884.code_ptr >= length(var.code), true)

  curr_885 = local.end_of_code_885 ? null : {
    code = substr(var.code, local.iter_884.code_ptr, 1)
    input = substr(var.code, local.iter_884.code_ptr, 1) == "," ? substr(local.iter_884.input, 0, 1) : null
  }

  iter_885 = local.end_of_code_885 ? local.iter_884 : {
    input = (local.curr_885.code == ","
      ? substr(local.iter_884.input, 1, -1)
      : local.iter_884.input)

    output = (local.curr_885.code == "."
      ? "${local.iter_884.output}${jsondecode(format("\"\\u%04x\"", local.iter_884.tape[local.iter_884.tape_ptr]))}"
      : local.iter_884.output)
    
    tape = (
      local.curr_885.code == "+"
        ? [for i, b in local.iter_884.tape : (i == local.iter_884.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_885.code == "-"
        ? [for i, b in local.iter_884.tape : (i == local.iter_884.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_885.code == ","
        ? [for i, b in local.iter_884.tape : (i == local.iter_884.tape_ptr ? local.ascii_lookup[local.curr_885.input] : b)]
        : local.iter_884.tape)

    tape_ptr = (
      local.curr_885.code == "<"
        ? local.iter_884.tape_ptr == 0 ? length(local.iter_884.tape) - 1 : local.iter_884.tape_ptr - 1 :
      local.curr_885.code == ">"
        ? local.iter_884.tape_ptr == length(local.iter_884.tape) - 1 ? 0 : local.iter_884.tape_ptr + 1
        : local.iter_884.tape_ptr)

    code_ptr = 1 + (
      local.curr_885.code == "["
        ? local.iter_884.tape[local.iter_884.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_884.code_ptr)] : local.iter_884.code_ptr :
      local.curr_885.code == "]"
        ? local.iter_884.tape[local.iter_884.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_884.code_ptr)] : local.iter_884.code_ptr
        : local.iter_884.code_ptr)

    steps_taken = 1 + local.iter_884.steps_taken
  }
}

locals {
  end_of_code_886 = try(local.iter_885.code_ptr >= length(var.code), true)

  curr_886 = local.end_of_code_886 ? null : {
    code = substr(var.code, local.iter_885.code_ptr, 1)
    input = substr(var.code, local.iter_885.code_ptr, 1) == "," ? substr(local.iter_885.input, 0, 1) : null
  }

  iter_886 = local.end_of_code_886 ? local.iter_885 : {
    input = (local.curr_886.code == ","
      ? substr(local.iter_885.input, 1, -1)
      : local.iter_885.input)

    output = (local.curr_886.code == "."
      ? "${local.iter_885.output}${jsondecode(format("\"\\u%04x\"", local.iter_885.tape[local.iter_885.tape_ptr]))}"
      : local.iter_885.output)
    
    tape = (
      local.curr_886.code == "+"
        ? [for i, b in local.iter_885.tape : (i == local.iter_885.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_886.code == "-"
        ? [for i, b in local.iter_885.tape : (i == local.iter_885.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_886.code == ","
        ? [for i, b in local.iter_885.tape : (i == local.iter_885.tape_ptr ? local.ascii_lookup[local.curr_886.input] : b)]
        : local.iter_885.tape)

    tape_ptr = (
      local.curr_886.code == "<"
        ? local.iter_885.tape_ptr == 0 ? length(local.iter_885.tape) - 1 : local.iter_885.tape_ptr - 1 :
      local.curr_886.code == ">"
        ? local.iter_885.tape_ptr == length(local.iter_885.tape) - 1 ? 0 : local.iter_885.tape_ptr + 1
        : local.iter_885.tape_ptr)

    code_ptr = 1 + (
      local.curr_886.code == "["
        ? local.iter_885.tape[local.iter_885.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_885.code_ptr)] : local.iter_885.code_ptr :
      local.curr_886.code == "]"
        ? local.iter_885.tape[local.iter_885.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_885.code_ptr)] : local.iter_885.code_ptr
        : local.iter_885.code_ptr)

    steps_taken = 1 + local.iter_885.steps_taken
  }
}

locals {
  end_of_code_887 = try(local.iter_886.code_ptr >= length(var.code), true)

  curr_887 = local.end_of_code_887 ? null : {
    code = substr(var.code, local.iter_886.code_ptr, 1)
    input = substr(var.code, local.iter_886.code_ptr, 1) == "," ? substr(local.iter_886.input, 0, 1) : null
  }

  iter_887 = local.end_of_code_887 ? local.iter_886 : {
    input = (local.curr_887.code == ","
      ? substr(local.iter_886.input, 1, -1)
      : local.iter_886.input)

    output = (local.curr_887.code == "."
      ? "${local.iter_886.output}${jsondecode(format("\"\\u%04x\"", local.iter_886.tape[local.iter_886.tape_ptr]))}"
      : local.iter_886.output)
    
    tape = (
      local.curr_887.code == "+"
        ? [for i, b in local.iter_886.tape : (i == local.iter_886.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_887.code == "-"
        ? [for i, b in local.iter_886.tape : (i == local.iter_886.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_887.code == ","
        ? [for i, b in local.iter_886.tape : (i == local.iter_886.tape_ptr ? local.ascii_lookup[local.curr_887.input] : b)]
        : local.iter_886.tape)

    tape_ptr = (
      local.curr_887.code == "<"
        ? local.iter_886.tape_ptr == 0 ? length(local.iter_886.tape) - 1 : local.iter_886.tape_ptr - 1 :
      local.curr_887.code == ">"
        ? local.iter_886.tape_ptr == length(local.iter_886.tape) - 1 ? 0 : local.iter_886.tape_ptr + 1
        : local.iter_886.tape_ptr)

    code_ptr = 1 + (
      local.curr_887.code == "["
        ? local.iter_886.tape[local.iter_886.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_886.code_ptr)] : local.iter_886.code_ptr :
      local.curr_887.code == "]"
        ? local.iter_886.tape[local.iter_886.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_886.code_ptr)] : local.iter_886.code_ptr
        : local.iter_886.code_ptr)

    steps_taken = 1 + local.iter_886.steps_taken
  }
}

locals {
  end_of_code_888 = try(local.iter_887.code_ptr >= length(var.code), true)

  curr_888 = local.end_of_code_888 ? null : {
    code = substr(var.code, local.iter_887.code_ptr, 1)
    input = substr(var.code, local.iter_887.code_ptr, 1) == "," ? substr(local.iter_887.input, 0, 1) : null
  }

  iter_888 = local.end_of_code_888 ? local.iter_887 : {
    input = (local.curr_888.code == ","
      ? substr(local.iter_887.input, 1, -1)
      : local.iter_887.input)

    output = (local.curr_888.code == "."
      ? "${local.iter_887.output}${jsondecode(format("\"\\u%04x\"", local.iter_887.tape[local.iter_887.tape_ptr]))}"
      : local.iter_887.output)
    
    tape = (
      local.curr_888.code == "+"
        ? [for i, b in local.iter_887.tape : (i == local.iter_887.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_888.code == "-"
        ? [for i, b in local.iter_887.tape : (i == local.iter_887.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_888.code == ","
        ? [for i, b in local.iter_887.tape : (i == local.iter_887.tape_ptr ? local.ascii_lookup[local.curr_888.input] : b)]
        : local.iter_887.tape)

    tape_ptr = (
      local.curr_888.code == "<"
        ? local.iter_887.tape_ptr == 0 ? length(local.iter_887.tape) - 1 : local.iter_887.tape_ptr - 1 :
      local.curr_888.code == ">"
        ? local.iter_887.tape_ptr == length(local.iter_887.tape) - 1 ? 0 : local.iter_887.tape_ptr + 1
        : local.iter_887.tape_ptr)

    code_ptr = 1 + (
      local.curr_888.code == "["
        ? local.iter_887.tape[local.iter_887.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_887.code_ptr)] : local.iter_887.code_ptr :
      local.curr_888.code == "]"
        ? local.iter_887.tape[local.iter_887.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_887.code_ptr)] : local.iter_887.code_ptr
        : local.iter_887.code_ptr)

    steps_taken = 1 + local.iter_887.steps_taken
  }
}

locals {
  end_of_code_889 = try(local.iter_888.code_ptr >= length(var.code), true)

  curr_889 = local.end_of_code_889 ? null : {
    code = substr(var.code, local.iter_888.code_ptr, 1)
    input = substr(var.code, local.iter_888.code_ptr, 1) == "," ? substr(local.iter_888.input, 0, 1) : null
  }

  iter_889 = local.end_of_code_889 ? local.iter_888 : {
    input = (local.curr_889.code == ","
      ? substr(local.iter_888.input, 1, -1)
      : local.iter_888.input)

    output = (local.curr_889.code == "."
      ? "${local.iter_888.output}${jsondecode(format("\"\\u%04x\"", local.iter_888.tape[local.iter_888.tape_ptr]))}"
      : local.iter_888.output)
    
    tape = (
      local.curr_889.code == "+"
        ? [for i, b in local.iter_888.tape : (i == local.iter_888.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_889.code == "-"
        ? [for i, b in local.iter_888.tape : (i == local.iter_888.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_889.code == ","
        ? [for i, b in local.iter_888.tape : (i == local.iter_888.tape_ptr ? local.ascii_lookup[local.curr_889.input] : b)]
        : local.iter_888.tape)

    tape_ptr = (
      local.curr_889.code == "<"
        ? local.iter_888.tape_ptr == 0 ? length(local.iter_888.tape) - 1 : local.iter_888.tape_ptr - 1 :
      local.curr_889.code == ">"
        ? local.iter_888.tape_ptr == length(local.iter_888.tape) - 1 ? 0 : local.iter_888.tape_ptr + 1
        : local.iter_888.tape_ptr)

    code_ptr = 1 + (
      local.curr_889.code == "["
        ? local.iter_888.tape[local.iter_888.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_888.code_ptr)] : local.iter_888.code_ptr :
      local.curr_889.code == "]"
        ? local.iter_888.tape[local.iter_888.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_888.code_ptr)] : local.iter_888.code_ptr
        : local.iter_888.code_ptr)

    steps_taken = 1 + local.iter_888.steps_taken
  }
}

locals {
  end_of_code_890 = try(local.iter_889.code_ptr >= length(var.code), true)

  curr_890 = local.end_of_code_890 ? null : {
    code = substr(var.code, local.iter_889.code_ptr, 1)
    input = substr(var.code, local.iter_889.code_ptr, 1) == "," ? substr(local.iter_889.input, 0, 1) : null
  }

  iter_890 = local.end_of_code_890 ? local.iter_889 : {
    input = (local.curr_890.code == ","
      ? substr(local.iter_889.input, 1, -1)
      : local.iter_889.input)

    output = (local.curr_890.code == "."
      ? "${local.iter_889.output}${jsondecode(format("\"\\u%04x\"", local.iter_889.tape[local.iter_889.tape_ptr]))}"
      : local.iter_889.output)
    
    tape = (
      local.curr_890.code == "+"
        ? [for i, b in local.iter_889.tape : (i == local.iter_889.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_890.code == "-"
        ? [for i, b in local.iter_889.tape : (i == local.iter_889.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_890.code == ","
        ? [for i, b in local.iter_889.tape : (i == local.iter_889.tape_ptr ? local.ascii_lookup[local.curr_890.input] : b)]
        : local.iter_889.tape)

    tape_ptr = (
      local.curr_890.code == "<"
        ? local.iter_889.tape_ptr == 0 ? length(local.iter_889.tape) - 1 : local.iter_889.tape_ptr - 1 :
      local.curr_890.code == ">"
        ? local.iter_889.tape_ptr == length(local.iter_889.tape) - 1 ? 0 : local.iter_889.tape_ptr + 1
        : local.iter_889.tape_ptr)

    code_ptr = 1 + (
      local.curr_890.code == "["
        ? local.iter_889.tape[local.iter_889.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_889.code_ptr)] : local.iter_889.code_ptr :
      local.curr_890.code == "]"
        ? local.iter_889.tape[local.iter_889.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_889.code_ptr)] : local.iter_889.code_ptr
        : local.iter_889.code_ptr)

    steps_taken = 1 + local.iter_889.steps_taken
  }
}

locals {
  end_of_code_891 = try(local.iter_890.code_ptr >= length(var.code), true)

  curr_891 = local.end_of_code_891 ? null : {
    code = substr(var.code, local.iter_890.code_ptr, 1)
    input = substr(var.code, local.iter_890.code_ptr, 1) == "," ? substr(local.iter_890.input, 0, 1) : null
  }

  iter_891 = local.end_of_code_891 ? local.iter_890 : {
    input = (local.curr_891.code == ","
      ? substr(local.iter_890.input, 1, -1)
      : local.iter_890.input)

    output = (local.curr_891.code == "."
      ? "${local.iter_890.output}${jsondecode(format("\"\\u%04x\"", local.iter_890.tape[local.iter_890.tape_ptr]))}"
      : local.iter_890.output)
    
    tape = (
      local.curr_891.code == "+"
        ? [for i, b in local.iter_890.tape : (i == local.iter_890.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_891.code == "-"
        ? [for i, b in local.iter_890.tape : (i == local.iter_890.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_891.code == ","
        ? [for i, b in local.iter_890.tape : (i == local.iter_890.tape_ptr ? local.ascii_lookup[local.curr_891.input] : b)]
        : local.iter_890.tape)

    tape_ptr = (
      local.curr_891.code == "<"
        ? local.iter_890.tape_ptr == 0 ? length(local.iter_890.tape) - 1 : local.iter_890.tape_ptr - 1 :
      local.curr_891.code == ">"
        ? local.iter_890.tape_ptr == length(local.iter_890.tape) - 1 ? 0 : local.iter_890.tape_ptr + 1
        : local.iter_890.tape_ptr)

    code_ptr = 1 + (
      local.curr_891.code == "["
        ? local.iter_890.tape[local.iter_890.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_890.code_ptr)] : local.iter_890.code_ptr :
      local.curr_891.code == "]"
        ? local.iter_890.tape[local.iter_890.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_890.code_ptr)] : local.iter_890.code_ptr
        : local.iter_890.code_ptr)

    steps_taken = 1 + local.iter_890.steps_taken
  }
}

locals {
  end_of_code_892 = try(local.iter_891.code_ptr >= length(var.code), true)

  curr_892 = local.end_of_code_892 ? null : {
    code = substr(var.code, local.iter_891.code_ptr, 1)
    input = substr(var.code, local.iter_891.code_ptr, 1) == "," ? substr(local.iter_891.input, 0, 1) : null
  }

  iter_892 = local.end_of_code_892 ? local.iter_891 : {
    input = (local.curr_892.code == ","
      ? substr(local.iter_891.input, 1, -1)
      : local.iter_891.input)

    output = (local.curr_892.code == "."
      ? "${local.iter_891.output}${jsondecode(format("\"\\u%04x\"", local.iter_891.tape[local.iter_891.tape_ptr]))}"
      : local.iter_891.output)
    
    tape = (
      local.curr_892.code == "+"
        ? [for i, b in local.iter_891.tape : (i == local.iter_891.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_892.code == "-"
        ? [for i, b in local.iter_891.tape : (i == local.iter_891.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_892.code == ","
        ? [for i, b in local.iter_891.tape : (i == local.iter_891.tape_ptr ? local.ascii_lookup[local.curr_892.input] : b)]
        : local.iter_891.tape)

    tape_ptr = (
      local.curr_892.code == "<"
        ? local.iter_891.tape_ptr == 0 ? length(local.iter_891.tape) - 1 : local.iter_891.tape_ptr - 1 :
      local.curr_892.code == ">"
        ? local.iter_891.tape_ptr == length(local.iter_891.tape) - 1 ? 0 : local.iter_891.tape_ptr + 1
        : local.iter_891.tape_ptr)

    code_ptr = 1 + (
      local.curr_892.code == "["
        ? local.iter_891.tape[local.iter_891.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_891.code_ptr)] : local.iter_891.code_ptr :
      local.curr_892.code == "]"
        ? local.iter_891.tape[local.iter_891.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_891.code_ptr)] : local.iter_891.code_ptr
        : local.iter_891.code_ptr)

    steps_taken = 1 + local.iter_891.steps_taken
  }
}

locals {
  end_of_code_893 = try(local.iter_892.code_ptr >= length(var.code), true)

  curr_893 = local.end_of_code_893 ? null : {
    code = substr(var.code, local.iter_892.code_ptr, 1)
    input = substr(var.code, local.iter_892.code_ptr, 1) == "," ? substr(local.iter_892.input, 0, 1) : null
  }

  iter_893 = local.end_of_code_893 ? local.iter_892 : {
    input = (local.curr_893.code == ","
      ? substr(local.iter_892.input, 1, -1)
      : local.iter_892.input)

    output = (local.curr_893.code == "."
      ? "${local.iter_892.output}${jsondecode(format("\"\\u%04x\"", local.iter_892.tape[local.iter_892.tape_ptr]))}"
      : local.iter_892.output)
    
    tape = (
      local.curr_893.code == "+"
        ? [for i, b in local.iter_892.tape : (i == local.iter_892.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_893.code == "-"
        ? [for i, b in local.iter_892.tape : (i == local.iter_892.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_893.code == ","
        ? [for i, b in local.iter_892.tape : (i == local.iter_892.tape_ptr ? local.ascii_lookup[local.curr_893.input] : b)]
        : local.iter_892.tape)

    tape_ptr = (
      local.curr_893.code == "<"
        ? local.iter_892.tape_ptr == 0 ? length(local.iter_892.tape) - 1 : local.iter_892.tape_ptr - 1 :
      local.curr_893.code == ">"
        ? local.iter_892.tape_ptr == length(local.iter_892.tape) - 1 ? 0 : local.iter_892.tape_ptr + 1
        : local.iter_892.tape_ptr)

    code_ptr = 1 + (
      local.curr_893.code == "["
        ? local.iter_892.tape[local.iter_892.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_892.code_ptr)] : local.iter_892.code_ptr :
      local.curr_893.code == "]"
        ? local.iter_892.tape[local.iter_892.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_892.code_ptr)] : local.iter_892.code_ptr
        : local.iter_892.code_ptr)

    steps_taken = 1 + local.iter_892.steps_taken
  }
}

locals {
  end_of_code_894 = try(local.iter_893.code_ptr >= length(var.code), true)

  curr_894 = local.end_of_code_894 ? null : {
    code = substr(var.code, local.iter_893.code_ptr, 1)
    input = substr(var.code, local.iter_893.code_ptr, 1) == "," ? substr(local.iter_893.input, 0, 1) : null
  }

  iter_894 = local.end_of_code_894 ? local.iter_893 : {
    input = (local.curr_894.code == ","
      ? substr(local.iter_893.input, 1, -1)
      : local.iter_893.input)

    output = (local.curr_894.code == "."
      ? "${local.iter_893.output}${jsondecode(format("\"\\u%04x\"", local.iter_893.tape[local.iter_893.tape_ptr]))}"
      : local.iter_893.output)
    
    tape = (
      local.curr_894.code == "+"
        ? [for i, b in local.iter_893.tape : (i == local.iter_893.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_894.code == "-"
        ? [for i, b in local.iter_893.tape : (i == local.iter_893.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_894.code == ","
        ? [for i, b in local.iter_893.tape : (i == local.iter_893.tape_ptr ? local.ascii_lookup[local.curr_894.input] : b)]
        : local.iter_893.tape)

    tape_ptr = (
      local.curr_894.code == "<"
        ? local.iter_893.tape_ptr == 0 ? length(local.iter_893.tape) - 1 : local.iter_893.tape_ptr - 1 :
      local.curr_894.code == ">"
        ? local.iter_893.tape_ptr == length(local.iter_893.tape) - 1 ? 0 : local.iter_893.tape_ptr + 1
        : local.iter_893.tape_ptr)

    code_ptr = 1 + (
      local.curr_894.code == "["
        ? local.iter_893.tape[local.iter_893.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_893.code_ptr)] : local.iter_893.code_ptr :
      local.curr_894.code == "]"
        ? local.iter_893.tape[local.iter_893.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_893.code_ptr)] : local.iter_893.code_ptr
        : local.iter_893.code_ptr)

    steps_taken = 1 + local.iter_893.steps_taken
  }
}

locals {
  end_of_code_895 = try(local.iter_894.code_ptr >= length(var.code), true)

  curr_895 = local.end_of_code_895 ? null : {
    code = substr(var.code, local.iter_894.code_ptr, 1)
    input = substr(var.code, local.iter_894.code_ptr, 1) == "," ? substr(local.iter_894.input, 0, 1) : null
  }

  iter_895 = local.end_of_code_895 ? local.iter_894 : {
    input = (local.curr_895.code == ","
      ? substr(local.iter_894.input, 1, -1)
      : local.iter_894.input)

    output = (local.curr_895.code == "."
      ? "${local.iter_894.output}${jsondecode(format("\"\\u%04x\"", local.iter_894.tape[local.iter_894.tape_ptr]))}"
      : local.iter_894.output)
    
    tape = (
      local.curr_895.code == "+"
        ? [for i, b in local.iter_894.tape : (i == local.iter_894.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_895.code == "-"
        ? [for i, b in local.iter_894.tape : (i == local.iter_894.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_895.code == ","
        ? [for i, b in local.iter_894.tape : (i == local.iter_894.tape_ptr ? local.ascii_lookup[local.curr_895.input] : b)]
        : local.iter_894.tape)

    tape_ptr = (
      local.curr_895.code == "<"
        ? local.iter_894.tape_ptr == 0 ? length(local.iter_894.tape) - 1 : local.iter_894.tape_ptr - 1 :
      local.curr_895.code == ">"
        ? local.iter_894.tape_ptr == length(local.iter_894.tape) - 1 ? 0 : local.iter_894.tape_ptr + 1
        : local.iter_894.tape_ptr)

    code_ptr = 1 + (
      local.curr_895.code == "["
        ? local.iter_894.tape[local.iter_894.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_894.code_ptr)] : local.iter_894.code_ptr :
      local.curr_895.code == "]"
        ? local.iter_894.tape[local.iter_894.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_894.code_ptr)] : local.iter_894.code_ptr
        : local.iter_894.code_ptr)

    steps_taken = 1 + local.iter_894.steps_taken
  }
}

locals {
  end_of_code_896 = try(local.iter_895.code_ptr >= length(var.code), true)

  curr_896 = local.end_of_code_896 ? null : {
    code = substr(var.code, local.iter_895.code_ptr, 1)
    input = substr(var.code, local.iter_895.code_ptr, 1) == "," ? substr(local.iter_895.input, 0, 1) : null
  }

  iter_896 = local.end_of_code_896 ? local.iter_895 : {
    input = (local.curr_896.code == ","
      ? substr(local.iter_895.input, 1, -1)
      : local.iter_895.input)

    output = (local.curr_896.code == "."
      ? "${local.iter_895.output}${jsondecode(format("\"\\u%04x\"", local.iter_895.tape[local.iter_895.tape_ptr]))}"
      : local.iter_895.output)
    
    tape = (
      local.curr_896.code == "+"
        ? [for i, b in local.iter_895.tape : (i == local.iter_895.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_896.code == "-"
        ? [for i, b in local.iter_895.tape : (i == local.iter_895.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_896.code == ","
        ? [for i, b in local.iter_895.tape : (i == local.iter_895.tape_ptr ? local.ascii_lookup[local.curr_896.input] : b)]
        : local.iter_895.tape)

    tape_ptr = (
      local.curr_896.code == "<"
        ? local.iter_895.tape_ptr == 0 ? length(local.iter_895.tape) - 1 : local.iter_895.tape_ptr - 1 :
      local.curr_896.code == ">"
        ? local.iter_895.tape_ptr == length(local.iter_895.tape) - 1 ? 0 : local.iter_895.tape_ptr + 1
        : local.iter_895.tape_ptr)

    code_ptr = 1 + (
      local.curr_896.code == "["
        ? local.iter_895.tape[local.iter_895.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_895.code_ptr)] : local.iter_895.code_ptr :
      local.curr_896.code == "]"
        ? local.iter_895.tape[local.iter_895.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_895.code_ptr)] : local.iter_895.code_ptr
        : local.iter_895.code_ptr)

    steps_taken = 1 + local.iter_895.steps_taken
  }
}

locals {
  end_of_code_897 = try(local.iter_896.code_ptr >= length(var.code), true)

  curr_897 = local.end_of_code_897 ? null : {
    code = substr(var.code, local.iter_896.code_ptr, 1)
    input = substr(var.code, local.iter_896.code_ptr, 1) == "," ? substr(local.iter_896.input, 0, 1) : null
  }

  iter_897 = local.end_of_code_897 ? local.iter_896 : {
    input = (local.curr_897.code == ","
      ? substr(local.iter_896.input, 1, -1)
      : local.iter_896.input)

    output = (local.curr_897.code == "."
      ? "${local.iter_896.output}${jsondecode(format("\"\\u%04x\"", local.iter_896.tape[local.iter_896.tape_ptr]))}"
      : local.iter_896.output)
    
    tape = (
      local.curr_897.code == "+"
        ? [for i, b in local.iter_896.tape : (i == local.iter_896.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_897.code == "-"
        ? [for i, b in local.iter_896.tape : (i == local.iter_896.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_897.code == ","
        ? [for i, b in local.iter_896.tape : (i == local.iter_896.tape_ptr ? local.ascii_lookup[local.curr_897.input] : b)]
        : local.iter_896.tape)

    tape_ptr = (
      local.curr_897.code == "<"
        ? local.iter_896.tape_ptr == 0 ? length(local.iter_896.tape) - 1 : local.iter_896.tape_ptr - 1 :
      local.curr_897.code == ">"
        ? local.iter_896.tape_ptr == length(local.iter_896.tape) - 1 ? 0 : local.iter_896.tape_ptr + 1
        : local.iter_896.tape_ptr)

    code_ptr = 1 + (
      local.curr_897.code == "["
        ? local.iter_896.tape[local.iter_896.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_896.code_ptr)] : local.iter_896.code_ptr :
      local.curr_897.code == "]"
        ? local.iter_896.tape[local.iter_896.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_896.code_ptr)] : local.iter_896.code_ptr
        : local.iter_896.code_ptr)

    steps_taken = 1 + local.iter_896.steps_taken
  }
}

locals {
  end_of_code_898 = try(local.iter_897.code_ptr >= length(var.code), true)

  curr_898 = local.end_of_code_898 ? null : {
    code = substr(var.code, local.iter_897.code_ptr, 1)
    input = substr(var.code, local.iter_897.code_ptr, 1) == "," ? substr(local.iter_897.input, 0, 1) : null
  }

  iter_898 = local.end_of_code_898 ? local.iter_897 : {
    input = (local.curr_898.code == ","
      ? substr(local.iter_897.input, 1, -1)
      : local.iter_897.input)

    output = (local.curr_898.code == "."
      ? "${local.iter_897.output}${jsondecode(format("\"\\u%04x\"", local.iter_897.tape[local.iter_897.tape_ptr]))}"
      : local.iter_897.output)
    
    tape = (
      local.curr_898.code == "+"
        ? [for i, b in local.iter_897.tape : (i == local.iter_897.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_898.code == "-"
        ? [for i, b in local.iter_897.tape : (i == local.iter_897.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_898.code == ","
        ? [for i, b in local.iter_897.tape : (i == local.iter_897.tape_ptr ? local.ascii_lookup[local.curr_898.input] : b)]
        : local.iter_897.tape)

    tape_ptr = (
      local.curr_898.code == "<"
        ? local.iter_897.tape_ptr == 0 ? length(local.iter_897.tape) - 1 : local.iter_897.tape_ptr - 1 :
      local.curr_898.code == ">"
        ? local.iter_897.tape_ptr == length(local.iter_897.tape) - 1 ? 0 : local.iter_897.tape_ptr + 1
        : local.iter_897.tape_ptr)

    code_ptr = 1 + (
      local.curr_898.code == "["
        ? local.iter_897.tape[local.iter_897.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_897.code_ptr)] : local.iter_897.code_ptr :
      local.curr_898.code == "]"
        ? local.iter_897.tape[local.iter_897.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_897.code_ptr)] : local.iter_897.code_ptr
        : local.iter_897.code_ptr)

    steps_taken = 1 + local.iter_897.steps_taken
  }
}

locals {
  end_of_code_899 = try(local.iter_898.code_ptr >= length(var.code), true)

  curr_899 = local.end_of_code_899 ? null : {
    code = substr(var.code, local.iter_898.code_ptr, 1)
    input = substr(var.code, local.iter_898.code_ptr, 1) == "," ? substr(local.iter_898.input, 0, 1) : null
  }

  iter_899 = local.end_of_code_899 ? local.iter_898 : {
    input = (local.curr_899.code == ","
      ? substr(local.iter_898.input, 1, -1)
      : local.iter_898.input)

    output = (local.curr_899.code == "."
      ? "${local.iter_898.output}${jsondecode(format("\"\\u%04x\"", local.iter_898.tape[local.iter_898.tape_ptr]))}"
      : local.iter_898.output)
    
    tape = (
      local.curr_899.code == "+"
        ? [for i, b in local.iter_898.tape : (i == local.iter_898.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_899.code == "-"
        ? [for i, b in local.iter_898.tape : (i == local.iter_898.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_899.code == ","
        ? [for i, b in local.iter_898.tape : (i == local.iter_898.tape_ptr ? local.ascii_lookup[local.curr_899.input] : b)]
        : local.iter_898.tape)

    tape_ptr = (
      local.curr_899.code == "<"
        ? local.iter_898.tape_ptr == 0 ? length(local.iter_898.tape) - 1 : local.iter_898.tape_ptr - 1 :
      local.curr_899.code == ">"
        ? local.iter_898.tape_ptr == length(local.iter_898.tape) - 1 ? 0 : local.iter_898.tape_ptr + 1
        : local.iter_898.tape_ptr)

    code_ptr = 1 + (
      local.curr_899.code == "["
        ? local.iter_898.tape[local.iter_898.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_898.code_ptr)] : local.iter_898.code_ptr :
      local.curr_899.code == "]"
        ? local.iter_898.tape[local.iter_898.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_898.code_ptr)] : local.iter_898.code_ptr
        : local.iter_898.code_ptr)

    steps_taken = 1 + local.iter_898.steps_taken
  }
}

locals {
  end_of_code_900 = try(local.iter_899.code_ptr >= length(var.code), true)

  curr_900 = local.end_of_code_900 ? null : {
    code = substr(var.code, local.iter_899.code_ptr, 1)
    input = substr(var.code, local.iter_899.code_ptr, 1) == "," ? substr(local.iter_899.input, 0, 1) : null
  }

  iter_900 = local.end_of_code_900 ? local.iter_899 : {
    input = (local.curr_900.code == ","
      ? substr(local.iter_899.input, 1, -1)
      : local.iter_899.input)

    output = (local.curr_900.code == "."
      ? "${local.iter_899.output}${jsondecode(format("\"\\u%04x\"", local.iter_899.tape[local.iter_899.tape_ptr]))}"
      : local.iter_899.output)
    
    tape = (
      local.curr_900.code == "+"
        ? [for i, b in local.iter_899.tape : (i == local.iter_899.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_900.code == "-"
        ? [for i, b in local.iter_899.tape : (i == local.iter_899.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_900.code == ","
        ? [for i, b in local.iter_899.tape : (i == local.iter_899.tape_ptr ? local.ascii_lookup[local.curr_900.input] : b)]
        : local.iter_899.tape)

    tape_ptr = (
      local.curr_900.code == "<"
        ? local.iter_899.tape_ptr == 0 ? length(local.iter_899.tape) - 1 : local.iter_899.tape_ptr - 1 :
      local.curr_900.code == ">"
        ? local.iter_899.tape_ptr == length(local.iter_899.tape) - 1 ? 0 : local.iter_899.tape_ptr + 1
        : local.iter_899.tape_ptr)

    code_ptr = 1 + (
      local.curr_900.code == "["
        ? local.iter_899.tape[local.iter_899.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_899.code_ptr)] : local.iter_899.code_ptr :
      local.curr_900.code == "]"
        ? local.iter_899.tape[local.iter_899.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_899.code_ptr)] : local.iter_899.code_ptr
        : local.iter_899.code_ptr)

    steps_taken = 1 + local.iter_899.steps_taken
  }
}

locals {
  end_of_code_901 = try(local.iter_900.code_ptr >= length(var.code), true)

  curr_901 = local.end_of_code_901 ? null : {
    code = substr(var.code, local.iter_900.code_ptr, 1)
    input = substr(var.code, local.iter_900.code_ptr, 1) == "," ? substr(local.iter_900.input, 0, 1) : null
  }

  iter_901 = local.end_of_code_901 ? local.iter_900 : {
    input = (local.curr_901.code == ","
      ? substr(local.iter_900.input, 1, -1)
      : local.iter_900.input)

    output = (local.curr_901.code == "."
      ? "${local.iter_900.output}${jsondecode(format("\"\\u%04x\"", local.iter_900.tape[local.iter_900.tape_ptr]))}"
      : local.iter_900.output)
    
    tape = (
      local.curr_901.code == "+"
        ? [for i, b in local.iter_900.tape : (i == local.iter_900.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_901.code == "-"
        ? [for i, b in local.iter_900.tape : (i == local.iter_900.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_901.code == ","
        ? [for i, b in local.iter_900.tape : (i == local.iter_900.tape_ptr ? local.ascii_lookup[local.curr_901.input] : b)]
        : local.iter_900.tape)

    tape_ptr = (
      local.curr_901.code == "<"
        ? local.iter_900.tape_ptr == 0 ? length(local.iter_900.tape) - 1 : local.iter_900.tape_ptr - 1 :
      local.curr_901.code == ">"
        ? local.iter_900.tape_ptr == length(local.iter_900.tape) - 1 ? 0 : local.iter_900.tape_ptr + 1
        : local.iter_900.tape_ptr)

    code_ptr = 1 + (
      local.curr_901.code == "["
        ? local.iter_900.tape[local.iter_900.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_900.code_ptr)] : local.iter_900.code_ptr :
      local.curr_901.code == "]"
        ? local.iter_900.tape[local.iter_900.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_900.code_ptr)] : local.iter_900.code_ptr
        : local.iter_900.code_ptr)

    steps_taken = 1 + local.iter_900.steps_taken
  }
}

locals {
  end_of_code_902 = try(local.iter_901.code_ptr >= length(var.code), true)

  curr_902 = local.end_of_code_902 ? null : {
    code = substr(var.code, local.iter_901.code_ptr, 1)
    input = substr(var.code, local.iter_901.code_ptr, 1) == "," ? substr(local.iter_901.input, 0, 1) : null
  }

  iter_902 = local.end_of_code_902 ? local.iter_901 : {
    input = (local.curr_902.code == ","
      ? substr(local.iter_901.input, 1, -1)
      : local.iter_901.input)

    output = (local.curr_902.code == "."
      ? "${local.iter_901.output}${jsondecode(format("\"\\u%04x\"", local.iter_901.tape[local.iter_901.tape_ptr]))}"
      : local.iter_901.output)
    
    tape = (
      local.curr_902.code == "+"
        ? [for i, b in local.iter_901.tape : (i == local.iter_901.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_902.code == "-"
        ? [for i, b in local.iter_901.tape : (i == local.iter_901.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_902.code == ","
        ? [for i, b in local.iter_901.tape : (i == local.iter_901.tape_ptr ? local.ascii_lookup[local.curr_902.input] : b)]
        : local.iter_901.tape)

    tape_ptr = (
      local.curr_902.code == "<"
        ? local.iter_901.tape_ptr == 0 ? length(local.iter_901.tape) - 1 : local.iter_901.tape_ptr - 1 :
      local.curr_902.code == ">"
        ? local.iter_901.tape_ptr == length(local.iter_901.tape) - 1 ? 0 : local.iter_901.tape_ptr + 1
        : local.iter_901.tape_ptr)

    code_ptr = 1 + (
      local.curr_902.code == "["
        ? local.iter_901.tape[local.iter_901.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_901.code_ptr)] : local.iter_901.code_ptr :
      local.curr_902.code == "]"
        ? local.iter_901.tape[local.iter_901.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_901.code_ptr)] : local.iter_901.code_ptr
        : local.iter_901.code_ptr)

    steps_taken = 1 + local.iter_901.steps_taken
  }
}

locals {
  end_of_code_903 = try(local.iter_902.code_ptr >= length(var.code), true)

  curr_903 = local.end_of_code_903 ? null : {
    code = substr(var.code, local.iter_902.code_ptr, 1)
    input = substr(var.code, local.iter_902.code_ptr, 1) == "," ? substr(local.iter_902.input, 0, 1) : null
  }

  iter_903 = local.end_of_code_903 ? local.iter_902 : {
    input = (local.curr_903.code == ","
      ? substr(local.iter_902.input, 1, -1)
      : local.iter_902.input)

    output = (local.curr_903.code == "."
      ? "${local.iter_902.output}${jsondecode(format("\"\\u%04x\"", local.iter_902.tape[local.iter_902.tape_ptr]))}"
      : local.iter_902.output)
    
    tape = (
      local.curr_903.code == "+"
        ? [for i, b in local.iter_902.tape : (i == local.iter_902.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_903.code == "-"
        ? [for i, b in local.iter_902.tape : (i == local.iter_902.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_903.code == ","
        ? [for i, b in local.iter_902.tape : (i == local.iter_902.tape_ptr ? local.ascii_lookup[local.curr_903.input] : b)]
        : local.iter_902.tape)

    tape_ptr = (
      local.curr_903.code == "<"
        ? local.iter_902.tape_ptr == 0 ? length(local.iter_902.tape) - 1 : local.iter_902.tape_ptr - 1 :
      local.curr_903.code == ">"
        ? local.iter_902.tape_ptr == length(local.iter_902.tape) - 1 ? 0 : local.iter_902.tape_ptr + 1
        : local.iter_902.tape_ptr)

    code_ptr = 1 + (
      local.curr_903.code == "["
        ? local.iter_902.tape[local.iter_902.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_902.code_ptr)] : local.iter_902.code_ptr :
      local.curr_903.code == "]"
        ? local.iter_902.tape[local.iter_902.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_902.code_ptr)] : local.iter_902.code_ptr
        : local.iter_902.code_ptr)

    steps_taken = 1 + local.iter_902.steps_taken
  }
}

locals {
  end_of_code_904 = try(local.iter_903.code_ptr >= length(var.code), true)

  curr_904 = local.end_of_code_904 ? null : {
    code = substr(var.code, local.iter_903.code_ptr, 1)
    input = substr(var.code, local.iter_903.code_ptr, 1) == "," ? substr(local.iter_903.input, 0, 1) : null
  }

  iter_904 = local.end_of_code_904 ? local.iter_903 : {
    input = (local.curr_904.code == ","
      ? substr(local.iter_903.input, 1, -1)
      : local.iter_903.input)

    output = (local.curr_904.code == "."
      ? "${local.iter_903.output}${jsondecode(format("\"\\u%04x\"", local.iter_903.tape[local.iter_903.tape_ptr]))}"
      : local.iter_903.output)
    
    tape = (
      local.curr_904.code == "+"
        ? [for i, b in local.iter_903.tape : (i == local.iter_903.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_904.code == "-"
        ? [for i, b in local.iter_903.tape : (i == local.iter_903.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_904.code == ","
        ? [for i, b in local.iter_903.tape : (i == local.iter_903.tape_ptr ? local.ascii_lookup[local.curr_904.input] : b)]
        : local.iter_903.tape)

    tape_ptr = (
      local.curr_904.code == "<"
        ? local.iter_903.tape_ptr == 0 ? length(local.iter_903.tape) - 1 : local.iter_903.tape_ptr - 1 :
      local.curr_904.code == ">"
        ? local.iter_903.tape_ptr == length(local.iter_903.tape) - 1 ? 0 : local.iter_903.tape_ptr + 1
        : local.iter_903.tape_ptr)

    code_ptr = 1 + (
      local.curr_904.code == "["
        ? local.iter_903.tape[local.iter_903.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_903.code_ptr)] : local.iter_903.code_ptr :
      local.curr_904.code == "]"
        ? local.iter_903.tape[local.iter_903.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_903.code_ptr)] : local.iter_903.code_ptr
        : local.iter_903.code_ptr)

    steps_taken = 1 + local.iter_903.steps_taken
  }
}

locals {
  end_of_code_905 = try(local.iter_904.code_ptr >= length(var.code), true)

  curr_905 = local.end_of_code_905 ? null : {
    code = substr(var.code, local.iter_904.code_ptr, 1)
    input = substr(var.code, local.iter_904.code_ptr, 1) == "," ? substr(local.iter_904.input, 0, 1) : null
  }

  iter_905 = local.end_of_code_905 ? local.iter_904 : {
    input = (local.curr_905.code == ","
      ? substr(local.iter_904.input, 1, -1)
      : local.iter_904.input)

    output = (local.curr_905.code == "."
      ? "${local.iter_904.output}${jsondecode(format("\"\\u%04x\"", local.iter_904.tape[local.iter_904.tape_ptr]))}"
      : local.iter_904.output)
    
    tape = (
      local.curr_905.code == "+"
        ? [for i, b in local.iter_904.tape : (i == local.iter_904.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_905.code == "-"
        ? [for i, b in local.iter_904.tape : (i == local.iter_904.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_905.code == ","
        ? [for i, b in local.iter_904.tape : (i == local.iter_904.tape_ptr ? local.ascii_lookup[local.curr_905.input] : b)]
        : local.iter_904.tape)

    tape_ptr = (
      local.curr_905.code == "<"
        ? local.iter_904.tape_ptr == 0 ? length(local.iter_904.tape) - 1 : local.iter_904.tape_ptr - 1 :
      local.curr_905.code == ">"
        ? local.iter_904.tape_ptr == length(local.iter_904.tape) - 1 ? 0 : local.iter_904.tape_ptr + 1
        : local.iter_904.tape_ptr)

    code_ptr = 1 + (
      local.curr_905.code == "["
        ? local.iter_904.tape[local.iter_904.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_904.code_ptr)] : local.iter_904.code_ptr :
      local.curr_905.code == "]"
        ? local.iter_904.tape[local.iter_904.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_904.code_ptr)] : local.iter_904.code_ptr
        : local.iter_904.code_ptr)

    steps_taken = 1 + local.iter_904.steps_taken
  }
}

locals {
  end_of_code_906 = try(local.iter_905.code_ptr >= length(var.code), true)

  curr_906 = local.end_of_code_906 ? null : {
    code = substr(var.code, local.iter_905.code_ptr, 1)
    input = substr(var.code, local.iter_905.code_ptr, 1) == "," ? substr(local.iter_905.input, 0, 1) : null
  }

  iter_906 = local.end_of_code_906 ? local.iter_905 : {
    input = (local.curr_906.code == ","
      ? substr(local.iter_905.input, 1, -1)
      : local.iter_905.input)

    output = (local.curr_906.code == "."
      ? "${local.iter_905.output}${jsondecode(format("\"\\u%04x\"", local.iter_905.tape[local.iter_905.tape_ptr]))}"
      : local.iter_905.output)
    
    tape = (
      local.curr_906.code == "+"
        ? [for i, b in local.iter_905.tape : (i == local.iter_905.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_906.code == "-"
        ? [for i, b in local.iter_905.tape : (i == local.iter_905.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_906.code == ","
        ? [for i, b in local.iter_905.tape : (i == local.iter_905.tape_ptr ? local.ascii_lookup[local.curr_906.input] : b)]
        : local.iter_905.tape)

    tape_ptr = (
      local.curr_906.code == "<"
        ? local.iter_905.tape_ptr == 0 ? length(local.iter_905.tape) - 1 : local.iter_905.tape_ptr - 1 :
      local.curr_906.code == ">"
        ? local.iter_905.tape_ptr == length(local.iter_905.tape) - 1 ? 0 : local.iter_905.tape_ptr + 1
        : local.iter_905.tape_ptr)

    code_ptr = 1 + (
      local.curr_906.code == "["
        ? local.iter_905.tape[local.iter_905.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_905.code_ptr)] : local.iter_905.code_ptr :
      local.curr_906.code == "]"
        ? local.iter_905.tape[local.iter_905.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_905.code_ptr)] : local.iter_905.code_ptr
        : local.iter_905.code_ptr)

    steps_taken = 1 + local.iter_905.steps_taken
  }
}

locals {
  end_of_code_907 = try(local.iter_906.code_ptr >= length(var.code), true)

  curr_907 = local.end_of_code_907 ? null : {
    code = substr(var.code, local.iter_906.code_ptr, 1)
    input = substr(var.code, local.iter_906.code_ptr, 1) == "," ? substr(local.iter_906.input, 0, 1) : null
  }

  iter_907 = local.end_of_code_907 ? local.iter_906 : {
    input = (local.curr_907.code == ","
      ? substr(local.iter_906.input, 1, -1)
      : local.iter_906.input)

    output = (local.curr_907.code == "."
      ? "${local.iter_906.output}${jsondecode(format("\"\\u%04x\"", local.iter_906.tape[local.iter_906.tape_ptr]))}"
      : local.iter_906.output)
    
    tape = (
      local.curr_907.code == "+"
        ? [for i, b in local.iter_906.tape : (i == local.iter_906.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_907.code == "-"
        ? [for i, b in local.iter_906.tape : (i == local.iter_906.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_907.code == ","
        ? [for i, b in local.iter_906.tape : (i == local.iter_906.tape_ptr ? local.ascii_lookup[local.curr_907.input] : b)]
        : local.iter_906.tape)

    tape_ptr = (
      local.curr_907.code == "<"
        ? local.iter_906.tape_ptr == 0 ? length(local.iter_906.tape) - 1 : local.iter_906.tape_ptr - 1 :
      local.curr_907.code == ">"
        ? local.iter_906.tape_ptr == length(local.iter_906.tape) - 1 ? 0 : local.iter_906.tape_ptr + 1
        : local.iter_906.tape_ptr)

    code_ptr = 1 + (
      local.curr_907.code == "["
        ? local.iter_906.tape[local.iter_906.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_906.code_ptr)] : local.iter_906.code_ptr :
      local.curr_907.code == "]"
        ? local.iter_906.tape[local.iter_906.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_906.code_ptr)] : local.iter_906.code_ptr
        : local.iter_906.code_ptr)

    steps_taken = 1 + local.iter_906.steps_taken
  }
}

locals {
  end_of_code_908 = try(local.iter_907.code_ptr >= length(var.code), true)

  curr_908 = local.end_of_code_908 ? null : {
    code = substr(var.code, local.iter_907.code_ptr, 1)
    input = substr(var.code, local.iter_907.code_ptr, 1) == "," ? substr(local.iter_907.input, 0, 1) : null
  }

  iter_908 = local.end_of_code_908 ? local.iter_907 : {
    input = (local.curr_908.code == ","
      ? substr(local.iter_907.input, 1, -1)
      : local.iter_907.input)

    output = (local.curr_908.code == "."
      ? "${local.iter_907.output}${jsondecode(format("\"\\u%04x\"", local.iter_907.tape[local.iter_907.tape_ptr]))}"
      : local.iter_907.output)
    
    tape = (
      local.curr_908.code == "+"
        ? [for i, b in local.iter_907.tape : (i == local.iter_907.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_908.code == "-"
        ? [for i, b in local.iter_907.tape : (i == local.iter_907.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_908.code == ","
        ? [for i, b in local.iter_907.tape : (i == local.iter_907.tape_ptr ? local.ascii_lookup[local.curr_908.input] : b)]
        : local.iter_907.tape)

    tape_ptr = (
      local.curr_908.code == "<"
        ? local.iter_907.tape_ptr == 0 ? length(local.iter_907.tape) - 1 : local.iter_907.tape_ptr - 1 :
      local.curr_908.code == ">"
        ? local.iter_907.tape_ptr == length(local.iter_907.tape) - 1 ? 0 : local.iter_907.tape_ptr + 1
        : local.iter_907.tape_ptr)

    code_ptr = 1 + (
      local.curr_908.code == "["
        ? local.iter_907.tape[local.iter_907.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_907.code_ptr)] : local.iter_907.code_ptr :
      local.curr_908.code == "]"
        ? local.iter_907.tape[local.iter_907.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_907.code_ptr)] : local.iter_907.code_ptr
        : local.iter_907.code_ptr)

    steps_taken = 1 + local.iter_907.steps_taken
  }
}

locals {
  end_of_code_909 = try(local.iter_908.code_ptr >= length(var.code), true)

  curr_909 = local.end_of_code_909 ? null : {
    code = substr(var.code, local.iter_908.code_ptr, 1)
    input = substr(var.code, local.iter_908.code_ptr, 1) == "," ? substr(local.iter_908.input, 0, 1) : null
  }

  iter_909 = local.end_of_code_909 ? local.iter_908 : {
    input = (local.curr_909.code == ","
      ? substr(local.iter_908.input, 1, -1)
      : local.iter_908.input)

    output = (local.curr_909.code == "."
      ? "${local.iter_908.output}${jsondecode(format("\"\\u%04x\"", local.iter_908.tape[local.iter_908.tape_ptr]))}"
      : local.iter_908.output)
    
    tape = (
      local.curr_909.code == "+"
        ? [for i, b in local.iter_908.tape : (i == local.iter_908.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_909.code == "-"
        ? [for i, b in local.iter_908.tape : (i == local.iter_908.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_909.code == ","
        ? [for i, b in local.iter_908.tape : (i == local.iter_908.tape_ptr ? local.ascii_lookup[local.curr_909.input] : b)]
        : local.iter_908.tape)

    tape_ptr = (
      local.curr_909.code == "<"
        ? local.iter_908.tape_ptr == 0 ? length(local.iter_908.tape) - 1 : local.iter_908.tape_ptr - 1 :
      local.curr_909.code == ">"
        ? local.iter_908.tape_ptr == length(local.iter_908.tape) - 1 ? 0 : local.iter_908.tape_ptr + 1
        : local.iter_908.tape_ptr)

    code_ptr = 1 + (
      local.curr_909.code == "["
        ? local.iter_908.tape[local.iter_908.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_908.code_ptr)] : local.iter_908.code_ptr :
      local.curr_909.code == "]"
        ? local.iter_908.tape[local.iter_908.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_908.code_ptr)] : local.iter_908.code_ptr
        : local.iter_908.code_ptr)

    steps_taken = 1 + local.iter_908.steps_taken
  }
}

locals {
  end_of_code_910 = try(local.iter_909.code_ptr >= length(var.code), true)

  curr_910 = local.end_of_code_910 ? null : {
    code = substr(var.code, local.iter_909.code_ptr, 1)
    input = substr(var.code, local.iter_909.code_ptr, 1) == "," ? substr(local.iter_909.input, 0, 1) : null
  }

  iter_910 = local.end_of_code_910 ? local.iter_909 : {
    input = (local.curr_910.code == ","
      ? substr(local.iter_909.input, 1, -1)
      : local.iter_909.input)

    output = (local.curr_910.code == "."
      ? "${local.iter_909.output}${jsondecode(format("\"\\u%04x\"", local.iter_909.tape[local.iter_909.tape_ptr]))}"
      : local.iter_909.output)
    
    tape = (
      local.curr_910.code == "+"
        ? [for i, b in local.iter_909.tape : (i == local.iter_909.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_910.code == "-"
        ? [for i, b in local.iter_909.tape : (i == local.iter_909.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_910.code == ","
        ? [for i, b in local.iter_909.tape : (i == local.iter_909.tape_ptr ? local.ascii_lookup[local.curr_910.input] : b)]
        : local.iter_909.tape)

    tape_ptr = (
      local.curr_910.code == "<"
        ? local.iter_909.tape_ptr == 0 ? length(local.iter_909.tape) - 1 : local.iter_909.tape_ptr - 1 :
      local.curr_910.code == ">"
        ? local.iter_909.tape_ptr == length(local.iter_909.tape) - 1 ? 0 : local.iter_909.tape_ptr + 1
        : local.iter_909.tape_ptr)

    code_ptr = 1 + (
      local.curr_910.code == "["
        ? local.iter_909.tape[local.iter_909.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_909.code_ptr)] : local.iter_909.code_ptr :
      local.curr_910.code == "]"
        ? local.iter_909.tape[local.iter_909.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_909.code_ptr)] : local.iter_909.code_ptr
        : local.iter_909.code_ptr)

    steps_taken = 1 + local.iter_909.steps_taken
  }
}

locals {
  end_of_code_911 = try(local.iter_910.code_ptr >= length(var.code), true)

  curr_911 = local.end_of_code_911 ? null : {
    code = substr(var.code, local.iter_910.code_ptr, 1)
    input = substr(var.code, local.iter_910.code_ptr, 1) == "," ? substr(local.iter_910.input, 0, 1) : null
  }

  iter_911 = local.end_of_code_911 ? local.iter_910 : {
    input = (local.curr_911.code == ","
      ? substr(local.iter_910.input, 1, -1)
      : local.iter_910.input)

    output = (local.curr_911.code == "."
      ? "${local.iter_910.output}${jsondecode(format("\"\\u%04x\"", local.iter_910.tape[local.iter_910.tape_ptr]))}"
      : local.iter_910.output)
    
    tape = (
      local.curr_911.code == "+"
        ? [for i, b in local.iter_910.tape : (i == local.iter_910.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_911.code == "-"
        ? [for i, b in local.iter_910.tape : (i == local.iter_910.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_911.code == ","
        ? [for i, b in local.iter_910.tape : (i == local.iter_910.tape_ptr ? local.ascii_lookup[local.curr_911.input] : b)]
        : local.iter_910.tape)

    tape_ptr = (
      local.curr_911.code == "<"
        ? local.iter_910.tape_ptr == 0 ? length(local.iter_910.tape) - 1 : local.iter_910.tape_ptr - 1 :
      local.curr_911.code == ">"
        ? local.iter_910.tape_ptr == length(local.iter_910.tape) - 1 ? 0 : local.iter_910.tape_ptr + 1
        : local.iter_910.tape_ptr)

    code_ptr = 1 + (
      local.curr_911.code == "["
        ? local.iter_910.tape[local.iter_910.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_910.code_ptr)] : local.iter_910.code_ptr :
      local.curr_911.code == "]"
        ? local.iter_910.tape[local.iter_910.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_910.code_ptr)] : local.iter_910.code_ptr
        : local.iter_910.code_ptr)

    steps_taken = 1 + local.iter_910.steps_taken
  }
}

locals {
  end_of_code_912 = try(local.iter_911.code_ptr >= length(var.code), true)

  curr_912 = local.end_of_code_912 ? null : {
    code = substr(var.code, local.iter_911.code_ptr, 1)
    input = substr(var.code, local.iter_911.code_ptr, 1) == "," ? substr(local.iter_911.input, 0, 1) : null
  }

  iter_912 = local.end_of_code_912 ? local.iter_911 : {
    input = (local.curr_912.code == ","
      ? substr(local.iter_911.input, 1, -1)
      : local.iter_911.input)

    output = (local.curr_912.code == "."
      ? "${local.iter_911.output}${jsondecode(format("\"\\u%04x\"", local.iter_911.tape[local.iter_911.tape_ptr]))}"
      : local.iter_911.output)
    
    tape = (
      local.curr_912.code == "+"
        ? [for i, b in local.iter_911.tape : (i == local.iter_911.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_912.code == "-"
        ? [for i, b in local.iter_911.tape : (i == local.iter_911.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_912.code == ","
        ? [for i, b in local.iter_911.tape : (i == local.iter_911.tape_ptr ? local.ascii_lookup[local.curr_912.input] : b)]
        : local.iter_911.tape)

    tape_ptr = (
      local.curr_912.code == "<"
        ? local.iter_911.tape_ptr == 0 ? length(local.iter_911.tape) - 1 : local.iter_911.tape_ptr - 1 :
      local.curr_912.code == ">"
        ? local.iter_911.tape_ptr == length(local.iter_911.tape) - 1 ? 0 : local.iter_911.tape_ptr + 1
        : local.iter_911.tape_ptr)

    code_ptr = 1 + (
      local.curr_912.code == "["
        ? local.iter_911.tape[local.iter_911.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_911.code_ptr)] : local.iter_911.code_ptr :
      local.curr_912.code == "]"
        ? local.iter_911.tape[local.iter_911.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_911.code_ptr)] : local.iter_911.code_ptr
        : local.iter_911.code_ptr)

    steps_taken = 1 + local.iter_911.steps_taken
  }
}

locals {
  end_of_code_913 = try(local.iter_912.code_ptr >= length(var.code), true)

  curr_913 = local.end_of_code_913 ? null : {
    code = substr(var.code, local.iter_912.code_ptr, 1)
    input = substr(var.code, local.iter_912.code_ptr, 1) == "," ? substr(local.iter_912.input, 0, 1) : null
  }

  iter_913 = local.end_of_code_913 ? local.iter_912 : {
    input = (local.curr_913.code == ","
      ? substr(local.iter_912.input, 1, -1)
      : local.iter_912.input)

    output = (local.curr_913.code == "."
      ? "${local.iter_912.output}${jsondecode(format("\"\\u%04x\"", local.iter_912.tape[local.iter_912.tape_ptr]))}"
      : local.iter_912.output)
    
    tape = (
      local.curr_913.code == "+"
        ? [for i, b in local.iter_912.tape : (i == local.iter_912.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_913.code == "-"
        ? [for i, b in local.iter_912.tape : (i == local.iter_912.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_913.code == ","
        ? [for i, b in local.iter_912.tape : (i == local.iter_912.tape_ptr ? local.ascii_lookup[local.curr_913.input] : b)]
        : local.iter_912.tape)

    tape_ptr = (
      local.curr_913.code == "<"
        ? local.iter_912.tape_ptr == 0 ? length(local.iter_912.tape) - 1 : local.iter_912.tape_ptr - 1 :
      local.curr_913.code == ">"
        ? local.iter_912.tape_ptr == length(local.iter_912.tape) - 1 ? 0 : local.iter_912.tape_ptr + 1
        : local.iter_912.tape_ptr)

    code_ptr = 1 + (
      local.curr_913.code == "["
        ? local.iter_912.tape[local.iter_912.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_912.code_ptr)] : local.iter_912.code_ptr :
      local.curr_913.code == "]"
        ? local.iter_912.tape[local.iter_912.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_912.code_ptr)] : local.iter_912.code_ptr
        : local.iter_912.code_ptr)

    steps_taken = 1 + local.iter_912.steps_taken
  }
}

locals {
  end_of_code_914 = try(local.iter_913.code_ptr >= length(var.code), true)

  curr_914 = local.end_of_code_914 ? null : {
    code = substr(var.code, local.iter_913.code_ptr, 1)
    input = substr(var.code, local.iter_913.code_ptr, 1) == "," ? substr(local.iter_913.input, 0, 1) : null
  }

  iter_914 = local.end_of_code_914 ? local.iter_913 : {
    input = (local.curr_914.code == ","
      ? substr(local.iter_913.input, 1, -1)
      : local.iter_913.input)

    output = (local.curr_914.code == "."
      ? "${local.iter_913.output}${jsondecode(format("\"\\u%04x\"", local.iter_913.tape[local.iter_913.tape_ptr]))}"
      : local.iter_913.output)
    
    tape = (
      local.curr_914.code == "+"
        ? [for i, b in local.iter_913.tape : (i == local.iter_913.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_914.code == "-"
        ? [for i, b in local.iter_913.tape : (i == local.iter_913.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_914.code == ","
        ? [for i, b in local.iter_913.tape : (i == local.iter_913.tape_ptr ? local.ascii_lookup[local.curr_914.input] : b)]
        : local.iter_913.tape)

    tape_ptr = (
      local.curr_914.code == "<"
        ? local.iter_913.tape_ptr == 0 ? length(local.iter_913.tape) - 1 : local.iter_913.tape_ptr - 1 :
      local.curr_914.code == ">"
        ? local.iter_913.tape_ptr == length(local.iter_913.tape) - 1 ? 0 : local.iter_913.tape_ptr + 1
        : local.iter_913.tape_ptr)

    code_ptr = 1 + (
      local.curr_914.code == "["
        ? local.iter_913.tape[local.iter_913.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_913.code_ptr)] : local.iter_913.code_ptr :
      local.curr_914.code == "]"
        ? local.iter_913.tape[local.iter_913.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_913.code_ptr)] : local.iter_913.code_ptr
        : local.iter_913.code_ptr)

    steps_taken = 1 + local.iter_913.steps_taken
  }
}

locals {
  end_of_code_915 = try(local.iter_914.code_ptr >= length(var.code), true)

  curr_915 = local.end_of_code_915 ? null : {
    code = substr(var.code, local.iter_914.code_ptr, 1)
    input = substr(var.code, local.iter_914.code_ptr, 1) == "," ? substr(local.iter_914.input, 0, 1) : null
  }

  iter_915 = local.end_of_code_915 ? local.iter_914 : {
    input = (local.curr_915.code == ","
      ? substr(local.iter_914.input, 1, -1)
      : local.iter_914.input)

    output = (local.curr_915.code == "."
      ? "${local.iter_914.output}${jsondecode(format("\"\\u%04x\"", local.iter_914.tape[local.iter_914.tape_ptr]))}"
      : local.iter_914.output)
    
    tape = (
      local.curr_915.code == "+"
        ? [for i, b in local.iter_914.tape : (i == local.iter_914.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_915.code == "-"
        ? [for i, b in local.iter_914.tape : (i == local.iter_914.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_915.code == ","
        ? [for i, b in local.iter_914.tape : (i == local.iter_914.tape_ptr ? local.ascii_lookup[local.curr_915.input] : b)]
        : local.iter_914.tape)

    tape_ptr = (
      local.curr_915.code == "<"
        ? local.iter_914.tape_ptr == 0 ? length(local.iter_914.tape) - 1 : local.iter_914.tape_ptr - 1 :
      local.curr_915.code == ">"
        ? local.iter_914.tape_ptr == length(local.iter_914.tape) - 1 ? 0 : local.iter_914.tape_ptr + 1
        : local.iter_914.tape_ptr)

    code_ptr = 1 + (
      local.curr_915.code == "["
        ? local.iter_914.tape[local.iter_914.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_914.code_ptr)] : local.iter_914.code_ptr :
      local.curr_915.code == "]"
        ? local.iter_914.tape[local.iter_914.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_914.code_ptr)] : local.iter_914.code_ptr
        : local.iter_914.code_ptr)

    steps_taken = 1 + local.iter_914.steps_taken
  }
}

locals {
  end_of_code_916 = try(local.iter_915.code_ptr >= length(var.code), true)

  curr_916 = local.end_of_code_916 ? null : {
    code = substr(var.code, local.iter_915.code_ptr, 1)
    input = substr(var.code, local.iter_915.code_ptr, 1) == "," ? substr(local.iter_915.input, 0, 1) : null
  }

  iter_916 = local.end_of_code_916 ? local.iter_915 : {
    input = (local.curr_916.code == ","
      ? substr(local.iter_915.input, 1, -1)
      : local.iter_915.input)

    output = (local.curr_916.code == "."
      ? "${local.iter_915.output}${jsondecode(format("\"\\u%04x\"", local.iter_915.tape[local.iter_915.tape_ptr]))}"
      : local.iter_915.output)
    
    tape = (
      local.curr_916.code == "+"
        ? [for i, b in local.iter_915.tape : (i == local.iter_915.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_916.code == "-"
        ? [for i, b in local.iter_915.tape : (i == local.iter_915.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_916.code == ","
        ? [for i, b in local.iter_915.tape : (i == local.iter_915.tape_ptr ? local.ascii_lookup[local.curr_916.input] : b)]
        : local.iter_915.tape)

    tape_ptr = (
      local.curr_916.code == "<"
        ? local.iter_915.tape_ptr == 0 ? length(local.iter_915.tape) - 1 : local.iter_915.tape_ptr - 1 :
      local.curr_916.code == ">"
        ? local.iter_915.tape_ptr == length(local.iter_915.tape) - 1 ? 0 : local.iter_915.tape_ptr + 1
        : local.iter_915.tape_ptr)

    code_ptr = 1 + (
      local.curr_916.code == "["
        ? local.iter_915.tape[local.iter_915.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_915.code_ptr)] : local.iter_915.code_ptr :
      local.curr_916.code == "]"
        ? local.iter_915.tape[local.iter_915.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_915.code_ptr)] : local.iter_915.code_ptr
        : local.iter_915.code_ptr)

    steps_taken = 1 + local.iter_915.steps_taken
  }
}

locals {
  end_of_code_917 = try(local.iter_916.code_ptr >= length(var.code), true)

  curr_917 = local.end_of_code_917 ? null : {
    code = substr(var.code, local.iter_916.code_ptr, 1)
    input = substr(var.code, local.iter_916.code_ptr, 1) == "," ? substr(local.iter_916.input, 0, 1) : null
  }

  iter_917 = local.end_of_code_917 ? local.iter_916 : {
    input = (local.curr_917.code == ","
      ? substr(local.iter_916.input, 1, -1)
      : local.iter_916.input)

    output = (local.curr_917.code == "."
      ? "${local.iter_916.output}${jsondecode(format("\"\\u%04x\"", local.iter_916.tape[local.iter_916.tape_ptr]))}"
      : local.iter_916.output)
    
    tape = (
      local.curr_917.code == "+"
        ? [for i, b in local.iter_916.tape : (i == local.iter_916.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_917.code == "-"
        ? [for i, b in local.iter_916.tape : (i == local.iter_916.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_917.code == ","
        ? [for i, b in local.iter_916.tape : (i == local.iter_916.tape_ptr ? local.ascii_lookup[local.curr_917.input] : b)]
        : local.iter_916.tape)

    tape_ptr = (
      local.curr_917.code == "<"
        ? local.iter_916.tape_ptr == 0 ? length(local.iter_916.tape) - 1 : local.iter_916.tape_ptr - 1 :
      local.curr_917.code == ">"
        ? local.iter_916.tape_ptr == length(local.iter_916.tape) - 1 ? 0 : local.iter_916.tape_ptr + 1
        : local.iter_916.tape_ptr)

    code_ptr = 1 + (
      local.curr_917.code == "["
        ? local.iter_916.tape[local.iter_916.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_916.code_ptr)] : local.iter_916.code_ptr :
      local.curr_917.code == "]"
        ? local.iter_916.tape[local.iter_916.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_916.code_ptr)] : local.iter_916.code_ptr
        : local.iter_916.code_ptr)

    steps_taken = 1 + local.iter_916.steps_taken
  }
}

locals {
  end_of_code_918 = try(local.iter_917.code_ptr >= length(var.code), true)

  curr_918 = local.end_of_code_918 ? null : {
    code = substr(var.code, local.iter_917.code_ptr, 1)
    input = substr(var.code, local.iter_917.code_ptr, 1) == "," ? substr(local.iter_917.input, 0, 1) : null
  }

  iter_918 = local.end_of_code_918 ? local.iter_917 : {
    input = (local.curr_918.code == ","
      ? substr(local.iter_917.input, 1, -1)
      : local.iter_917.input)

    output = (local.curr_918.code == "."
      ? "${local.iter_917.output}${jsondecode(format("\"\\u%04x\"", local.iter_917.tape[local.iter_917.tape_ptr]))}"
      : local.iter_917.output)
    
    tape = (
      local.curr_918.code == "+"
        ? [for i, b in local.iter_917.tape : (i == local.iter_917.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_918.code == "-"
        ? [for i, b in local.iter_917.tape : (i == local.iter_917.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_918.code == ","
        ? [for i, b in local.iter_917.tape : (i == local.iter_917.tape_ptr ? local.ascii_lookup[local.curr_918.input] : b)]
        : local.iter_917.tape)

    tape_ptr = (
      local.curr_918.code == "<"
        ? local.iter_917.tape_ptr == 0 ? length(local.iter_917.tape) - 1 : local.iter_917.tape_ptr - 1 :
      local.curr_918.code == ">"
        ? local.iter_917.tape_ptr == length(local.iter_917.tape) - 1 ? 0 : local.iter_917.tape_ptr + 1
        : local.iter_917.tape_ptr)

    code_ptr = 1 + (
      local.curr_918.code == "["
        ? local.iter_917.tape[local.iter_917.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_917.code_ptr)] : local.iter_917.code_ptr :
      local.curr_918.code == "]"
        ? local.iter_917.tape[local.iter_917.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_917.code_ptr)] : local.iter_917.code_ptr
        : local.iter_917.code_ptr)

    steps_taken = 1 + local.iter_917.steps_taken
  }
}

locals {
  end_of_code_919 = try(local.iter_918.code_ptr >= length(var.code), true)

  curr_919 = local.end_of_code_919 ? null : {
    code = substr(var.code, local.iter_918.code_ptr, 1)
    input = substr(var.code, local.iter_918.code_ptr, 1) == "," ? substr(local.iter_918.input, 0, 1) : null
  }

  iter_919 = local.end_of_code_919 ? local.iter_918 : {
    input = (local.curr_919.code == ","
      ? substr(local.iter_918.input, 1, -1)
      : local.iter_918.input)

    output = (local.curr_919.code == "."
      ? "${local.iter_918.output}${jsondecode(format("\"\\u%04x\"", local.iter_918.tape[local.iter_918.tape_ptr]))}"
      : local.iter_918.output)
    
    tape = (
      local.curr_919.code == "+"
        ? [for i, b in local.iter_918.tape : (i == local.iter_918.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_919.code == "-"
        ? [for i, b in local.iter_918.tape : (i == local.iter_918.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_919.code == ","
        ? [for i, b in local.iter_918.tape : (i == local.iter_918.tape_ptr ? local.ascii_lookup[local.curr_919.input] : b)]
        : local.iter_918.tape)

    tape_ptr = (
      local.curr_919.code == "<"
        ? local.iter_918.tape_ptr == 0 ? length(local.iter_918.tape) - 1 : local.iter_918.tape_ptr - 1 :
      local.curr_919.code == ">"
        ? local.iter_918.tape_ptr == length(local.iter_918.tape) - 1 ? 0 : local.iter_918.tape_ptr + 1
        : local.iter_918.tape_ptr)

    code_ptr = 1 + (
      local.curr_919.code == "["
        ? local.iter_918.tape[local.iter_918.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_918.code_ptr)] : local.iter_918.code_ptr :
      local.curr_919.code == "]"
        ? local.iter_918.tape[local.iter_918.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_918.code_ptr)] : local.iter_918.code_ptr
        : local.iter_918.code_ptr)

    steps_taken = 1 + local.iter_918.steps_taken
  }
}

locals {
  end_of_code_920 = try(local.iter_919.code_ptr >= length(var.code), true)

  curr_920 = local.end_of_code_920 ? null : {
    code = substr(var.code, local.iter_919.code_ptr, 1)
    input = substr(var.code, local.iter_919.code_ptr, 1) == "," ? substr(local.iter_919.input, 0, 1) : null
  }

  iter_920 = local.end_of_code_920 ? local.iter_919 : {
    input = (local.curr_920.code == ","
      ? substr(local.iter_919.input, 1, -1)
      : local.iter_919.input)

    output = (local.curr_920.code == "."
      ? "${local.iter_919.output}${jsondecode(format("\"\\u%04x\"", local.iter_919.tape[local.iter_919.tape_ptr]))}"
      : local.iter_919.output)
    
    tape = (
      local.curr_920.code == "+"
        ? [for i, b in local.iter_919.tape : (i == local.iter_919.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_920.code == "-"
        ? [for i, b in local.iter_919.tape : (i == local.iter_919.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_920.code == ","
        ? [for i, b in local.iter_919.tape : (i == local.iter_919.tape_ptr ? local.ascii_lookup[local.curr_920.input] : b)]
        : local.iter_919.tape)

    tape_ptr = (
      local.curr_920.code == "<"
        ? local.iter_919.tape_ptr == 0 ? length(local.iter_919.tape) - 1 : local.iter_919.tape_ptr - 1 :
      local.curr_920.code == ">"
        ? local.iter_919.tape_ptr == length(local.iter_919.tape) - 1 ? 0 : local.iter_919.tape_ptr + 1
        : local.iter_919.tape_ptr)

    code_ptr = 1 + (
      local.curr_920.code == "["
        ? local.iter_919.tape[local.iter_919.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_919.code_ptr)] : local.iter_919.code_ptr :
      local.curr_920.code == "]"
        ? local.iter_919.tape[local.iter_919.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_919.code_ptr)] : local.iter_919.code_ptr
        : local.iter_919.code_ptr)

    steps_taken = 1 + local.iter_919.steps_taken
  }
}

locals {
  end_of_code_921 = try(local.iter_920.code_ptr >= length(var.code), true)

  curr_921 = local.end_of_code_921 ? null : {
    code = substr(var.code, local.iter_920.code_ptr, 1)
    input = substr(var.code, local.iter_920.code_ptr, 1) == "," ? substr(local.iter_920.input, 0, 1) : null
  }

  iter_921 = local.end_of_code_921 ? local.iter_920 : {
    input = (local.curr_921.code == ","
      ? substr(local.iter_920.input, 1, -1)
      : local.iter_920.input)

    output = (local.curr_921.code == "."
      ? "${local.iter_920.output}${jsondecode(format("\"\\u%04x\"", local.iter_920.tape[local.iter_920.tape_ptr]))}"
      : local.iter_920.output)
    
    tape = (
      local.curr_921.code == "+"
        ? [for i, b in local.iter_920.tape : (i == local.iter_920.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_921.code == "-"
        ? [for i, b in local.iter_920.tape : (i == local.iter_920.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_921.code == ","
        ? [for i, b in local.iter_920.tape : (i == local.iter_920.tape_ptr ? local.ascii_lookup[local.curr_921.input] : b)]
        : local.iter_920.tape)

    tape_ptr = (
      local.curr_921.code == "<"
        ? local.iter_920.tape_ptr == 0 ? length(local.iter_920.tape) - 1 : local.iter_920.tape_ptr - 1 :
      local.curr_921.code == ">"
        ? local.iter_920.tape_ptr == length(local.iter_920.tape) - 1 ? 0 : local.iter_920.tape_ptr + 1
        : local.iter_920.tape_ptr)

    code_ptr = 1 + (
      local.curr_921.code == "["
        ? local.iter_920.tape[local.iter_920.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_920.code_ptr)] : local.iter_920.code_ptr :
      local.curr_921.code == "]"
        ? local.iter_920.tape[local.iter_920.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_920.code_ptr)] : local.iter_920.code_ptr
        : local.iter_920.code_ptr)

    steps_taken = 1 + local.iter_920.steps_taken
  }
}

locals {
  end_of_code_922 = try(local.iter_921.code_ptr >= length(var.code), true)

  curr_922 = local.end_of_code_922 ? null : {
    code = substr(var.code, local.iter_921.code_ptr, 1)
    input = substr(var.code, local.iter_921.code_ptr, 1) == "," ? substr(local.iter_921.input, 0, 1) : null
  }

  iter_922 = local.end_of_code_922 ? local.iter_921 : {
    input = (local.curr_922.code == ","
      ? substr(local.iter_921.input, 1, -1)
      : local.iter_921.input)

    output = (local.curr_922.code == "."
      ? "${local.iter_921.output}${jsondecode(format("\"\\u%04x\"", local.iter_921.tape[local.iter_921.tape_ptr]))}"
      : local.iter_921.output)
    
    tape = (
      local.curr_922.code == "+"
        ? [for i, b in local.iter_921.tape : (i == local.iter_921.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_922.code == "-"
        ? [for i, b in local.iter_921.tape : (i == local.iter_921.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_922.code == ","
        ? [for i, b in local.iter_921.tape : (i == local.iter_921.tape_ptr ? local.ascii_lookup[local.curr_922.input] : b)]
        : local.iter_921.tape)

    tape_ptr = (
      local.curr_922.code == "<"
        ? local.iter_921.tape_ptr == 0 ? length(local.iter_921.tape) - 1 : local.iter_921.tape_ptr - 1 :
      local.curr_922.code == ">"
        ? local.iter_921.tape_ptr == length(local.iter_921.tape) - 1 ? 0 : local.iter_921.tape_ptr + 1
        : local.iter_921.tape_ptr)

    code_ptr = 1 + (
      local.curr_922.code == "["
        ? local.iter_921.tape[local.iter_921.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_921.code_ptr)] : local.iter_921.code_ptr :
      local.curr_922.code == "]"
        ? local.iter_921.tape[local.iter_921.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_921.code_ptr)] : local.iter_921.code_ptr
        : local.iter_921.code_ptr)

    steps_taken = 1 + local.iter_921.steps_taken
  }
}

locals {
  end_of_code_923 = try(local.iter_922.code_ptr >= length(var.code), true)

  curr_923 = local.end_of_code_923 ? null : {
    code = substr(var.code, local.iter_922.code_ptr, 1)
    input = substr(var.code, local.iter_922.code_ptr, 1) == "," ? substr(local.iter_922.input, 0, 1) : null
  }

  iter_923 = local.end_of_code_923 ? local.iter_922 : {
    input = (local.curr_923.code == ","
      ? substr(local.iter_922.input, 1, -1)
      : local.iter_922.input)

    output = (local.curr_923.code == "."
      ? "${local.iter_922.output}${jsondecode(format("\"\\u%04x\"", local.iter_922.tape[local.iter_922.tape_ptr]))}"
      : local.iter_922.output)
    
    tape = (
      local.curr_923.code == "+"
        ? [for i, b in local.iter_922.tape : (i == local.iter_922.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_923.code == "-"
        ? [for i, b in local.iter_922.tape : (i == local.iter_922.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_923.code == ","
        ? [for i, b in local.iter_922.tape : (i == local.iter_922.tape_ptr ? local.ascii_lookup[local.curr_923.input] : b)]
        : local.iter_922.tape)

    tape_ptr = (
      local.curr_923.code == "<"
        ? local.iter_922.tape_ptr == 0 ? length(local.iter_922.tape) - 1 : local.iter_922.tape_ptr - 1 :
      local.curr_923.code == ">"
        ? local.iter_922.tape_ptr == length(local.iter_922.tape) - 1 ? 0 : local.iter_922.tape_ptr + 1
        : local.iter_922.tape_ptr)

    code_ptr = 1 + (
      local.curr_923.code == "["
        ? local.iter_922.tape[local.iter_922.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_922.code_ptr)] : local.iter_922.code_ptr :
      local.curr_923.code == "]"
        ? local.iter_922.tape[local.iter_922.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_922.code_ptr)] : local.iter_922.code_ptr
        : local.iter_922.code_ptr)

    steps_taken = 1 + local.iter_922.steps_taken
  }
}

locals {
  end_of_code_924 = try(local.iter_923.code_ptr >= length(var.code), true)

  curr_924 = local.end_of_code_924 ? null : {
    code = substr(var.code, local.iter_923.code_ptr, 1)
    input = substr(var.code, local.iter_923.code_ptr, 1) == "," ? substr(local.iter_923.input, 0, 1) : null
  }

  iter_924 = local.end_of_code_924 ? local.iter_923 : {
    input = (local.curr_924.code == ","
      ? substr(local.iter_923.input, 1, -1)
      : local.iter_923.input)

    output = (local.curr_924.code == "."
      ? "${local.iter_923.output}${jsondecode(format("\"\\u%04x\"", local.iter_923.tape[local.iter_923.tape_ptr]))}"
      : local.iter_923.output)
    
    tape = (
      local.curr_924.code == "+"
        ? [for i, b in local.iter_923.tape : (i == local.iter_923.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_924.code == "-"
        ? [for i, b in local.iter_923.tape : (i == local.iter_923.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_924.code == ","
        ? [for i, b in local.iter_923.tape : (i == local.iter_923.tape_ptr ? local.ascii_lookup[local.curr_924.input] : b)]
        : local.iter_923.tape)

    tape_ptr = (
      local.curr_924.code == "<"
        ? local.iter_923.tape_ptr == 0 ? length(local.iter_923.tape) - 1 : local.iter_923.tape_ptr - 1 :
      local.curr_924.code == ">"
        ? local.iter_923.tape_ptr == length(local.iter_923.tape) - 1 ? 0 : local.iter_923.tape_ptr + 1
        : local.iter_923.tape_ptr)

    code_ptr = 1 + (
      local.curr_924.code == "["
        ? local.iter_923.tape[local.iter_923.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_923.code_ptr)] : local.iter_923.code_ptr :
      local.curr_924.code == "]"
        ? local.iter_923.tape[local.iter_923.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_923.code_ptr)] : local.iter_923.code_ptr
        : local.iter_923.code_ptr)

    steps_taken = 1 + local.iter_923.steps_taken
  }
}

locals {
  end_of_code_925 = try(local.iter_924.code_ptr >= length(var.code), true)

  curr_925 = local.end_of_code_925 ? null : {
    code = substr(var.code, local.iter_924.code_ptr, 1)
    input = substr(var.code, local.iter_924.code_ptr, 1) == "," ? substr(local.iter_924.input, 0, 1) : null
  }

  iter_925 = local.end_of_code_925 ? local.iter_924 : {
    input = (local.curr_925.code == ","
      ? substr(local.iter_924.input, 1, -1)
      : local.iter_924.input)

    output = (local.curr_925.code == "."
      ? "${local.iter_924.output}${jsondecode(format("\"\\u%04x\"", local.iter_924.tape[local.iter_924.tape_ptr]))}"
      : local.iter_924.output)
    
    tape = (
      local.curr_925.code == "+"
        ? [for i, b in local.iter_924.tape : (i == local.iter_924.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_925.code == "-"
        ? [for i, b in local.iter_924.tape : (i == local.iter_924.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_925.code == ","
        ? [for i, b in local.iter_924.tape : (i == local.iter_924.tape_ptr ? local.ascii_lookup[local.curr_925.input] : b)]
        : local.iter_924.tape)

    tape_ptr = (
      local.curr_925.code == "<"
        ? local.iter_924.tape_ptr == 0 ? length(local.iter_924.tape) - 1 : local.iter_924.tape_ptr - 1 :
      local.curr_925.code == ">"
        ? local.iter_924.tape_ptr == length(local.iter_924.tape) - 1 ? 0 : local.iter_924.tape_ptr + 1
        : local.iter_924.tape_ptr)

    code_ptr = 1 + (
      local.curr_925.code == "["
        ? local.iter_924.tape[local.iter_924.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_924.code_ptr)] : local.iter_924.code_ptr :
      local.curr_925.code == "]"
        ? local.iter_924.tape[local.iter_924.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_924.code_ptr)] : local.iter_924.code_ptr
        : local.iter_924.code_ptr)

    steps_taken = 1 + local.iter_924.steps_taken
  }
}

locals {
  end_of_code_926 = try(local.iter_925.code_ptr >= length(var.code), true)

  curr_926 = local.end_of_code_926 ? null : {
    code = substr(var.code, local.iter_925.code_ptr, 1)
    input = substr(var.code, local.iter_925.code_ptr, 1) == "," ? substr(local.iter_925.input, 0, 1) : null
  }

  iter_926 = local.end_of_code_926 ? local.iter_925 : {
    input = (local.curr_926.code == ","
      ? substr(local.iter_925.input, 1, -1)
      : local.iter_925.input)

    output = (local.curr_926.code == "."
      ? "${local.iter_925.output}${jsondecode(format("\"\\u%04x\"", local.iter_925.tape[local.iter_925.tape_ptr]))}"
      : local.iter_925.output)
    
    tape = (
      local.curr_926.code == "+"
        ? [for i, b in local.iter_925.tape : (i == local.iter_925.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_926.code == "-"
        ? [for i, b in local.iter_925.tape : (i == local.iter_925.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_926.code == ","
        ? [for i, b in local.iter_925.tape : (i == local.iter_925.tape_ptr ? local.ascii_lookup[local.curr_926.input] : b)]
        : local.iter_925.tape)

    tape_ptr = (
      local.curr_926.code == "<"
        ? local.iter_925.tape_ptr == 0 ? length(local.iter_925.tape) - 1 : local.iter_925.tape_ptr - 1 :
      local.curr_926.code == ">"
        ? local.iter_925.tape_ptr == length(local.iter_925.tape) - 1 ? 0 : local.iter_925.tape_ptr + 1
        : local.iter_925.tape_ptr)

    code_ptr = 1 + (
      local.curr_926.code == "["
        ? local.iter_925.tape[local.iter_925.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_925.code_ptr)] : local.iter_925.code_ptr :
      local.curr_926.code == "]"
        ? local.iter_925.tape[local.iter_925.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_925.code_ptr)] : local.iter_925.code_ptr
        : local.iter_925.code_ptr)

    steps_taken = 1 + local.iter_925.steps_taken
  }
}

locals {
  end_of_code_927 = try(local.iter_926.code_ptr >= length(var.code), true)

  curr_927 = local.end_of_code_927 ? null : {
    code = substr(var.code, local.iter_926.code_ptr, 1)
    input = substr(var.code, local.iter_926.code_ptr, 1) == "," ? substr(local.iter_926.input, 0, 1) : null
  }

  iter_927 = local.end_of_code_927 ? local.iter_926 : {
    input = (local.curr_927.code == ","
      ? substr(local.iter_926.input, 1, -1)
      : local.iter_926.input)

    output = (local.curr_927.code == "."
      ? "${local.iter_926.output}${jsondecode(format("\"\\u%04x\"", local.iter_926.tape[local.iter_926.tape_ptr]))}"
      : local.iter_926.output)
    
    tape = (
      local.curr_927.code == "+"
        ? [for i, b in local.iter_926.tape : (i == local.iter_926.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_927.code == "-"
        ? [for i, b in local.iter_926.tape : (i == local.iter_926.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_927.code == ","
        ? [for i, b in local.iter_926.tape : (i == local.iter_926.tape_ptr ? local.ascii_lookup[local.curr_927.input] : b)]
        : local.iter_926.tape)

    tape_ptr = (
      local.curr_927.code == "<"
        ? local.iter_926.tape_ptr == 0 ? length(local.iter_926.tape) - 1 : local.iter_926.tape_ptr - 1 :
      local.curr_927.code == ">"
        ? local.iter_926.tape_ptr == length(local.iter_926.tape) - 1 ? 0 : local.iter_926.tape_ptr + 1
        : local.iter_926.tape_ptr)

    code_ptr = 1 + (
      local.curr_927.code == "["
        ? local.iter_926.tape[local.iter_926.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_926.code_ptr)] : local.iter_926.code_ptr :
      local.curr_927.code == "]"
        ? local.iter_926.tape[local.iter_926.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_926.code_ptr)] : local.iter_926.code_ptr
        : local.iter_926.code_ptr)

    steps_taken = 1 + local.iter_926.steps_taken
  }
}

locals {
  end_of_code_928 = try(local.iter_927.code_ptr >= length(var.code), true)

  curr_928 = local.end_of_code_928 ? null : {
    code = substr(var.code, local.iter_927.code_ptr, 1)
    input = substr(var.code, local.iter_927.code_ptr, 1) == "," ? substr(local.iter_927.input, 0, 1) : null
  }

  iter_928 = local.end_of_code_928 ? local.iter_927 : {
    input = (local.curr_928.code == ","
      ? substr(local.iter_927.input, 1, -1)
      : local.iter_927.input)

    output = (local.curr_928.code == "."
      ? "${local.iter_927.output}${jsondecode(format("\"\\u%04x\"", local.iter_927.tape[local.iter_927.tape_ptr]))}"
      : local.iter_927.output)
    
    tape = (
      local.curr_928.code == "+"
        ? [for i, b in local.iter_927.tape : (i == local.iter_927.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_928.code == "-"
        ? [for i, b in local.iter_927.tape : (i == local.iter_927.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_928.code == ","
        ? [for i, b in local.iter_927.tape : (i == local.iter_927.tape_ptr ? local.ascii_lookup[local.curr_928.input] : b)]
        : local.iter_927.tape)

    tape_ptr = (
      local.curr_928.code == "<"
        ? local.iter_927.tape_ptr == 0 ? length(local.iter_927.tape) - 1 : local.iter_927.tape_ptr - 1 :
      local.curr_928.code == ">"
        ? local.iter_927.tape_ptr == length(local.iter_927.tape) - 1 ? 0 : local.iter_927.tape_ptr + 1
        : local.iter_927.tape_ptr)

    code_ptr = 1 + (
      local.curr_928.code == "["
        ? local.iter_927.tape[local.iter_927.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_927.code_ptr)] : local.iter_927.code_ptr :
      local.curr_928.code == "]"
        ? local.iter_927.tape[local.iter_927.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_927.code_ptr)] : local.iter_927.code_ptr
        : local.iter_927.code_ptr)

    steps_taken = 1 + local.iter_927.steps_taken
  }
}

locals {
  end_of_code_929 = try(local.iter_928.code_ptr >= length(var.code), true)

  curr_929 = local.end_of_code_929 ? null : {
    code = substr(var.code, local.iter_928.code_ptr, 1)
    input = substr(var.code, local.iter_928.code_ptr, 1) == "," ? substr(local.iter_928.input, 0, 1) : null
  }

  iter_929 = local.end_of_code_929 ? local.iter_928 : {
    input = (local.curr_929.code == ","
      ? substr(local.iter_928.input, 1, -1)
      : local.iter_928.input)

    output = (local.curr_929.code == "."
      ? "${local.iter_928.output}${jsondecode(format("\"\\u%04x\"", local.iter_928.tape[local.iter_928.tape_ptr]))}"
      : local.iter_928.output)
    
    tape = (
      local.curr_929.code == "+"
        ? [for i, b in local.iter_928.tape : (i == local.iter_928.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_929.code == "-"
        ? [for i, b in local.iter_928.tape : (i == local.iter_928.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_929.code == ","
        ? [for i, b in local.iter_928.tape : (i == local.iter_928.tape_ptr ? local.ascii_lookup[local.curr_929.input] : b)]
        : local.iter_928.tape)

    tape_ptr = (
      local.curr_929.code == "<"
        ? local.iter_928.tape_ptr == 0 ? length(local.iter_928.tape) - 1 : local.iter_928.tape_ptr - 1 :
      local.curr_929.code == ">"
        ? local.iter_928.tape_ptr == length(local.iter_928.tape) - 1 ? 0 : local.iter_928.tape_ptr + 1
        : local.iter_928.tape_ptr)

    code_ptr = 1 + (
      local.curr_929.code == "["
        ? local.iter_928.tape[local.iter_928.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_928.code_ptr)] : local.iter_928.code_ptr :
      local.curr_929.code == "]"
        ? local.iter_928.tape[local.iter_928.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_928.code_ptr)] : local.iter_928.code_ptr
        : local.iter_928.code_ptr)

    steps_taken = 1 + local.iter_928.steps_taken
  }
}

locals {
  end_of_code_930 = try(local.iter_929.code_ptr >= length(var.code), true)

  curr_930 = local.end_of_code_930 ? null : {
    code = substr(var.code, local.iter_929.code_ptr, 1)
    input = substr(var.code, local.iter_929.code_ptr, 1) == "," ? substr(local.iter_929.input, 0, 1) : null
  }

  iter_930 = local.end_of_code_930 ? local.iter_929 : {
    input = (local.curr_930.code == ","
      ? substr(local.iter_929.input, 1, -1)
      : local.iter_929.input)

    output = (local.curr_930.code == "."
      ? "${local.iter_929.output}${jsondecode(format("\"\\u%04x\"", local.iter_929.tape[local.iter_929.tape_ptr]))}"
      : local.iter_929.output)
    
    tape = (
      local.curr_930.code == "+"
        ? [for i, b in local.iter_929.tape : (i == local.iter_929.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_930.code == "-"
        ? [for i, b in local.iter_929.tape : (i == local.iter_929.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_930.code == ","
        ? [for i, b in local.iter_929.tape : (i == local.iter_929.tape_ptr ? local.ascii_lookup[local.curr_930.input] : b)]
        : local.iter_929.tape)

    tape_ptr = (
      local.curr_930.code == "<"
        ? local.iter_929.tape_ptr == 0 ? length(local.iter_929.tape) - 1 : local.iter_929.tape_ptr - 1 :
      local.curr_930.code == ">"
        ? local.iter_929.tape_ptr == length(local.iter_929.tape) - 1 ? 0 : local.iter_929.tape_ptr + 1
        : local.iter_929.tape_ptr)

    code_ptr = 1 + (
      local.curr_930.code == "["
        ? local.iter_929.tape[local.iter_929.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_929.code_ptr)] : local.iter_929.code_ptr :
      local.curr_930.code == "]"
        ? local.iter_929.tape[local.iter_929.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_929.code_ptr)] : local.iter_929.code_ptr
        : local.iter_929.code_ptr)

    steps_taken = 1 + local.iter_929.steps_taken
  }
}

locals {
  end_of_code_931 = try(local.iter_930.code_ptr >= length(var.code), true)

  curr_931 = local.end_of_code_931 ? null : {
    code = substr(var.code, local.iter_930.code_ptr, 1)
    input = substr(var.code, local.iter_930.code_ptr, 1) == "," ? substr(local.iter_930.input, 0, 1) : null
  }

  iter_931 = local.end_of_code_931 ? local.iter_930 : {
    input = (local.curr_931.code == ","
      ? substr(local.iter_930.input, 1, -1)
      : local.iter_930.input)

    output = (local.curr_931.code == "."
      ? "${local.iter_930.output}${jsondecode(format("\"\\u%04x\"", local.iter_930.tape[local.iter_930.tape_ptr]))}"
      : local.iter_930.output)
    
    tape = (
      local.curr_931.code == "+"
        ? [for i, b in local.iter_930.tape : (i == local.iter_930.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_931.code == "-"
        ? [for i, b in local.iter_930.tape : (i == local.iter_930.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_931.code == ","
        ? [for i, b in local.iter_930.tape : (i == local.iter_930.tape_ptr ? local.ascii_lookup[local.curr_931.input] : b)]
        : local.iter_930.tape)

    tape_ptr = (
      local.curr_931.code == "<"
        ? local.iter_930.tape_ptr == 0 ? length(local.iter_930.tape) - 1 : local.iter_930.tape_ptr - 1 :
      local.curr_931.code == ">"
        ? local.iter_930.tape_ptr == length(local.iter_930.tape) - 1 ? 0 : local.iter_930.tape_ptr + 1
        : local.iter_930.tape_ptr)

    code_ptr = 1 + (
      local.curr_931.code == "["
        ? local.iter_930.tape[local.iter_930.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_930.code_ptr)] : local.iter_930.code_ptr :
      local.curr_931.code == "]"
        ? local.iter_930.tape[local.iter_930.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_930.code_ptr)] : local.iter_930.code_ptr
        : local.iter_930.code_ptr)

    steps_taken = 1 + local.iter_930.steps_taken
  }
}

locals {
  end_of_code_932 = try(local.iter_931.code_ptr >= length(var.code), true)

  curr_932 = local.end_of_code_932 ? null : {
    code = substr(var.code, local.iter_931.code_ptr, 1)
    input = substr(var.code, local.iter_931.code_ptr, 1) == "," ? substr(local.iter_931.input, 0, 1) : null
  }

  iter_932 = local.end_of_code_932 ? local.iter_931 : {
    input = (local.curr_932.code == ","
      ? substr(local.iter_931.input, 1, -1)
      : local.iter_931.input)

    output = (local.curr_932.code == "."
      ? "${local.iter_931.output}${jsondecode(format("\"\\u%04x\"", local.iter_931.tape[local.iter_931.tape_ptr]))}"
      : local.iter_931.output)
    
    tape = (
      local.curr_932.code == "+"
        ? [for i, b in local.iter_931.tape : (i == local.iter_931.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_932.code == "-"
        ? [for i, b in local.iter_931.tape : (i == local.iter_931.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_932.code == ","
        ? [for i, b in local.iter_931.tape : (i == local.iter_931.tape_ptr ? local.ascii_lookup[local.curr_932.input] : b)]
        : local.iter_931.tape)

    tape_ptr = (
      local.curr_932.code == "<"
        ? local.iter_931.tape_ptr == 0 ? length(local.iter_931.tape) - 1 : local.iter_931.tape_ptr - 1 :
      local.curr_932.code == ">"
        ? local.iter_931.tape_ptr == length(local.iter_931.tape) - 1 ? 0 : local.iter_931.tape_ptr + 1
        : local.iter_931.tape_ptr)

    code_ptr = 1 + (
      local.curr_932.code == "["
        ? local.iter_931.tape[local.iter_931.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_931.code_ptr)] : local.iter_931.code_ptr :
      local.curr_932.code == "]"
        ? local.iter_931.tape[local.iter_931.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_931.code_ptr)] : local.iter_931.code_ptr
        : local.iter_931.code_ptr)

    steps_taken = 1 + local.iter_931.steps_taken
  }
}

locals {
  end_of_code_933 = try(local.iter_932.code_ptr >= length(var.code), true)

  curr_933 = local.end_of_code_933 ? null : {
    code = substr(var.code, local.iter_932.code_ptr, 1)
    input = substr(var.code, local.iter_932.code_ptr, 1) == "," ? substr(local.iter_932.input, 0, 1) : null
  }

  iter_933 = local.end_of_code_933 ? local.iter_932 : {
    input = (local.curr_933.code == ","
      ? substr(local.iter_932.input, 1, -1)
      : local.iter_932.input)

    output = (local.curr_933.code == "."
      ? "${local.iter_932.output}${jsondecode(format("\"\\u%04x\"", local.iter_932.tape[local.iter_932.tape_ptr]))}"
      : local.iter_932.output)
    
    tape = (
      local.curr_933.code == "+"
        ? [for i, b in local.iter_932.tape : (i == local.iter_932.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_933.code == "-"
        ? [for i, b in local.iter_932.tape : (i == local.iter_932.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_933.code == ","
        ? [for i, b in local.iter_932.tape : (i == local.iter_932.tape_ptr ? local.ascii_lookup[local.curr_933.input] : b)]
        : local.iter_932.tape)

    tape_ptr = (
      local.curr_933.code == "<"
        ? local.iter_932.tape_ptr == 0 ? length(local.iter_932.tape) - 1 : local.iter_932.tape_ptr - 1 :
      local.curr_933.code == ">"
        ? local.iter_932.tape_ptr == length(local.iter_932.tape) - 1 ? 0 : local.iter_932.tape_ptr + 1
        : local.iter_932.tape_ptr)

    code_ptr = 1 + (
      local.curr_933.code == "["
        ? local.iter_932.tape[local.iter_932.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_932.code_ptr)] : local.iter_932.code_ptr :
      local.curr_933.code == "]"
        ? local.iter_932.tape[local.iter_932.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_932.code_ptr)] : local.iter_932.code_ptr
        : local.iter_932.code_ptr)

    steps_taken = 1 + local.iter_932.steps_taken
  }
}

locals {
  end_of_code_934 = try(local.iter_933.code_ptr >= length(var.code), true)

  curr_934 = local.end_of_code_934 ? null : {
    code = substr(var.code, local.iter_933.code_ptr, 1)
    input = substr(var.code, local.iter_933.code_ptr, 1) == "," ? substr(local.iter_933.input, 0, 1) : null
  }

  iter_934 = local.end_of_code_934 ? local.iter_933 : {
    input = (local.curr_934.code == ","
      ? substr(local.iter_933.input, 1, -1)
      : local.iter_933.input)

    output = (local.curr_934.code == "."
      ? "${local.iter_933.output}${jsondecode(format("\"\\u%04x\"", local.iter_933.tape[local.iter_933.tape_ptr]))}"
      : local.iter_933.output)
    
    tape = (
      local.curr_934.code == "+"
        ? [for i, b in local.iter_933.tape : (i == local.iter_933.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_934.code == "-"
        ? [for i, b in local.iter_933.tape : (i == local.iter_933.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_934.code == ","
        ? [for i, b in local.iter_933.tape : (i == local.iter_933.tape_ptr ? local.ascii_lookup[local.curr_934.input] : b)]
        : local.iter_933.tape)

    tape_ptr = (
      local.curr_934.code == "<"
        ? local.iter_933.tape_ptr == 0 ? length(local.iter_933.tape) - 1 : local.iter_933.tape_ptr - 1 :
      local.curr_934.code == ">"
        ? local.iter_933.tape_ptr == length(local.iter_933.tape) - 1 ? 0 : local.iter_933.tape_ptr + 1
        : local.iter_933.tape_ptr)

    code_ptr = 1 + (
      local.curr_934.code == "["
        ? local.iter_933.tape[local.iter_933.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_933.code_ptr)] : local.iter_933.code_ptr :
      local.curr_934.code == "]"
        ? local.iter_933.tape[local.iter_933.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_933.code_ptr)] : local.iter_933.code_ptr
        : local.iter_933.code_ptr)

    steps_taken = 1 + local.iter_933.steps_taken
  }
}

locals {
  end_of_code_935 = try(local.iter_934.code_ptr >= length(var.code), true)

  curr_935 = local.end_of_code_935 ? null : {
    code = substr(var.code, local.iter_934.code_ptr, 1)
    input = substr(var.code, local.iter_934.code_ptr, 1) == "," ? substr(local.iter_934.input, 0, 1) : null
  }

  iter_935 = local.end_of_code_935 ? local.iter_934 : {
    input = (local.curr_935.code == ","
      ? substr(local.iter_934.input, 1, -1)
      : local.iter_934.input)

    output = (local.curr_935.code == "."
      ? "${local.iter_934.output}${jsondecode(format("\"\\u%04x\"", local.iter_934.tape[local.iter_934.tape_ptr]))}"
      : local.iter_934.output)
    
    tape = (
      local.curr_935.code == "+"
        ? [for i, b in local.iter_934.tape : (i == local.iter_934.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_935.code == "-"
        ? [for i, b in local.iter_934.tape : (i == local.iter_934.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_935.code == ","
        ? [for i, b in local.iter_934.tape : (i == local.iter_934.tape_ptr ? local.ascii_lookup[local.curr_935.input] : b)]
        : local.iter_934.tape)

    tape_ptr = (
      local.curr_935.code == "<"
        ? local.iter_934.tape_ptr == 0 ? length(local.iter_934.tape) - 1 : local.iter_934.tape_ptr - 1 :
      local.curr_935.code == ">"
        ? local.iter_934.tape_ptr == length(local.iter_934.tape) - 1 ? 0 : local.iter_934.tape_ptr + 1
        : local.iter_934.tape_ptr)

    code_ptr = 1 + (
      local.curr_935.code == "["
        ? local.iter_934.tape[local.iter_934.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_934.code_ptr)] : local.iter_934.code_ptr :
      local.curr_935.code == "]"
        ? local.iter_934.tape[local.iter_934.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_934.code_ptr)] : local.iter_934.code_ptr
        : local.iter_934.code_ptr)

    steps_taken = 1 + local.iter_934.steps_taken
  }
}

locals {
  end_of_code_936 = try(local.iter_935.code_ptr >= length(var.code), true)

  curr_936 = local.end_of_code_936 ? null : {
    code = substr(var.code, local.iter_935.code_ptr, 1)
    input = substr(var.code, local.iter_935.code_ptr, 1) == "," ? substr(local.iter_935.input, 0, 1) : null
  }

  iter_936 = local.end_of_code_936 ? local.iter_935 : {
    input = (local.curr_936.code == ","
      ? substr(local.iter_935.input, 1, -1)
      : local.iter_935.input)

    output = (local.curr_936.code == "."
      ? "${local.iter_935.output}${jsondecode(format("\"\\u%04x\"", local.iter_935.tape[local.iter_935.tape_ptr]))}"
      : local.iter_935.output)
    
    tape = (
      local.curr_936.code == "+"
        ? [for i, b in local.iter_935.tape : (i == local.iter_935.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_936.code == "-"
        ? [for i, b in local.iter_935.tape : (i == local.iter_935.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_936.code == ","
        ? [for i, b in local.iter_935.tape : (i == local.iter_935.tape_ptr ? local.ascii_lookup[local.curr_936.input] : b)]
        : local.iter_935.tape)

    tape_ptr = (
      local.curr_936.code == "<"
        ? local.iter_935.tape_ptr == 0 ? length(local.iter_935.tape) - 1 : local.iter_935.tape_ptr - 1 :
      local.curr_936.code == ">"
        ? local.iter_935.tape_ptr == length(local.iter_935.tape) - 1 ? 0 : local.iter_935.tape_ptr + 1
        : local.iter_935.tape_ptr)

    code_ptr = 1 + (
      local.curr_936.code == "["
        ? local.iter_935.tape[local.iter_935.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_935.code_ptr)] : local.iter_935.code_ptr :
      local.curr_936.code == "]"
        ? local.iter_935.tape[local.iter_935.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_935.code_ptr)] : local.iter_935.code_ptr
        : local.iter_935.code_ptr)

    steps_taken = 1 + local.iter_935.steps_taken
  }
}

locals {
  end_of_code_937 = try(local.iter_936.code_ptr >= length(var.code), true)

  curr_937 = local.end_of_code_937 ? null : {
    code = substr(var.code, local.iter_936.code_ptr, 1)
    input = substr(var.code, local.iter_936.code_ptr, 1) == "," ? substr(local.iter_936.input, 0, 1) : null
  }

  iter_937 = local.end_of_code_937 ? local.iter_936 : {
    input = (local.curr_937.code == ","
      ? substr(local.iter_936.input, 1, -1)
      : local.iter_936.input)

    output = (local.curr_937.code == "."
      ? "${local.iter_936.output}${jsondecode(format("\"\\u%04x\"", local.iter_936.tape[local.iter_936.tape_ptr]))}"
      : local.iter_936.output)
    
    tape = (
      local.curr_937.code == "+"
        ? [for i, b in local.iter_936.tape : (i == local.iter_936.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_937.code == "-"
        ? [for i, b in local.iter_936.tape : (i == local.iter_936.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_937.code == ","
        ? [for i, b in local.iter_936.tape : (i == local.iter_936.tape_ptr ? local.ascii_lookup[local.curr_937.input] : b)]
        : local.iter_936.tape)

    tape_ptr = (
      local.curr_937.code == "<"
        ? local.iter_936.tape_ptr == 0 ? length(local.iter_936.tape) - 1 : local.iter_936.tape_ptr - 1 :
      local.curr_937.code == ">"
        ? local.iter_936.tape_ptr == length(local.iter_936.tape) - 1 ? 0 : local.iter_936.tape_ptr + 1
        : local.iter_936.tape_ptr)

    code_ptr = 1 + (
      local.curr_937.code == "["
        ? local.iter_936.tape[local.iter_936.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_936.code_ptr)] : local.iter_936.code_ptr :
      local.curr_937.code == "]"
        ? local.iter_936.tape[local.iter_936.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_936.code_ptr)] : local.iter_936.code_ptr
        : local.iter_936.code_ptr)

    steps_taken = 1 + local.iter_936.steps_taken
  }
}

locals {
  end_of_code_938 = try(local.iter_937.code_ptr >= length(var.code), true)

  curr_938 = local.end_of_code_938 ? null : {
    code = substr(var.code, local.iter_937.code_ptr, 1)
    input = substr(var.code, local.iter_937.code_ptr, 1) == "," ? substr(local.iter_937.input, 0, 1) : null
  }

  iter_938 = local.end_of_code_938 ? local.iter_937 : {
    input = (local.curr_938.code == ","
      ? substr(local.iter_937.input, 1, -1)
      : local.iter_937.input)

    output = (local.curr_938.code == "."
      ? "${local.iter_937.output}${jsondecode(format("\"\\u%04x\"", local.iter_937.tape[local.iter_937.tape_ptr]))}"
      : local.iter_937.output)
    
    tape = (
      local.curr_938.code == "+"
        ? [for i, b in local.iter_937.tape : (i == local.iter_937.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_938.code == "-"
        ? [for i, b in local.iter_937.tape : (i == local.iter_937.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_938.code == ","
        ? [for i, b in local.iter_937.tape : (i == local.iter_937.tape_ptr ? local.ascii_lookup[local.curr_938.input] : b)]
        : local.iter_937.tape)

    tape_ptr = (
      local.curr_938.code == "<"
        ? local.iter_937.tape_ptr == 0 ? length(local.iter_937.tape) - 1 : local.iter_937.tape_ptr - 1 :
      local.curr_938.code == ">"
        ? local.iter_937.tape_ptr == length(local.iter_937.tape) - 1 ? 0 : local.iter_937.tape_ptr + 1
        : local.iter_937.tape_ptr)

    code_ptr = 1 + (
      local.curr_938.code == "["
        ? local.iter_937.tape[local.iter_937.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_937.code_ptr)] : local.iter_937.code_ptr :
      local.curr_938.code == "]"
        ? local.iter_937.tape[local.iter_937.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_937.code_ptr)] : local.iter_937.code_ptr
        : local.iter_937.code_ptr)

    steps_taken = 1 + local.iter_937.steps_taken
  }
}

locals {
  end_of_code_939 = try(local.iter_938.code_ptr >= length(var.code), true)

  curr_939 = local.end_of_code_939 ? null : {
    code = substr(var.code, local.iter_938.code_ptr, 1)
    input = substr(var.code, local.iter_938.code_ptr, 1) == "," ? substr(local.iter_938.input, 0, 1) : null
  }

  iter_939 = local.end_of_code_939 ? local.iter_938 : {
    input = (local.curr_939.code == ","
      ? substr(local.iter_938.input, 1, -1)
      : local.iter_938.input)

    output = (local.curr_939.code == "."
      ? "${local.iter_938.output}${jsondecode(format("\"\\u%04x\"", local.iter_938.tape[local.iter_938.tape_ptr]))}"
      : local.iter_938.output)
    
    tape = (
      local.curr_939.code == "+"
        ? [for i, b in local.iter_938.tape : (i == local.iter_938.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_939.code == "-"
        ? [for i, b in local.iter_938.tape : (i == local.iter_938.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_939.code == ","
        ? [for i, b in local.iter_938.tape : (i == local.iter_938.tape_ptr ? local.ascii_lookup[local.curr_939.input] : b)]
        : local.iter_938.tape)

    tape_ptr = (
      local.curr_939.code == "<"
        ? local.iter_938.tape_ptr == 0 ? length(local.iter_938.tape) - 1 : local.iter_938.tape_ptr - 1 :
      local.curr_939.code == ">"
        ? local.iter_938.tape_ptr == length(local.iter_938.tape) - 1 ? 0 : local.iter_938.tape_ptr + 1
        : local.iter_938.tape_ptr)

    code_ptr = 1 + (
      local.curr_939.code == "["
        ? local.iter_938.tape[local.iter_938.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_938.code_ptr)] : local.iter_938.code_ptr :
      local.curr_939.code == "]"
        ? local.iter_938.tape[local.iter_938.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_938.code_ptr)] : local.iter_938.code_ptr
        : local.iter_938.code_ptr)

    steps_taken = 1 + local.iter_938.steps_taken
  }
}

locals {
  end_of_code_940 = try(local.iter_939.code_ptr >= length(var.code), true)

  curr_940 = local.end_of_code_940 ? null : {
    code = substr(var.code, local.iter_939.code_ptr, 1)
    input = substr(var.code, local.iter_939.code_ptr, 1) == "," ? substr(local.iter_939.input, 0, 1) : null
  }

  iter_940 = local.end_of_code_940 ? local.iter_939 : {
    input = (local.curr_940.code == ","
      ? substr(local.iter_939.input, 1, -1)
      : local.iter_939.input)

    output = (local.curr_940.code == "."
      ? "${local.iter_939.output}${jsondecode(format("\"\\u%04x\"", local.iter_939.tape[local.iter_939.tape_ptr]))}"
      : local.iter_939.output)
    
    tape = (
      local.curr_940.code == "+"
        ? [for i, b in local.iter_939.tape : (i == local.iter_939.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_940.code == "-"
        ? [for i, b in local.iter_939.tape : (i == local.iter_939.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_940.code == ","
        ? [for i, b in local.iter_939.tape : (i == local.iter_939.tape_ptr ? local.ascii_lookup[local.curr_940.input] : b)]
        : local.iter_939.tape)

    tape_ptr = (
      local.curr_940.code == "<"
        ? local.iter_939.tape_ptr == 0 ? length(local.iter_939.tape) - 1 : local.iter_939.tape_ptr - 1 :
      local.curr_940.code == ">"
        ? local.iter_939.tape_ptr == length(local.iter_939.tape) - 1 ? 0 : local.iter_939.tape_ptr + 1
        : local.iter_939.tape_ptr)

    code_ptr = 1 + (
      local.curr_940.code == "["
        ? local.iter_939.tape[local.iter_939.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_939.code_ptr)] : local.iter_939.code_ptr :
      local.curr_940.code == "]"
        ? local.iter_939.tape[local.iter_939.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_939.code_ptr)] : local.iter_939.code_ptr
        : local.iter_939.code_ptr)

    steps_taken = 1 + local.iter_939.steps_taken
  }
}

locals {
  end_of_code_941 = try(local.iter_940.code_ptr >= length(var.code), true)

  curr_941 = local.end_of_code_941 ? null : {
    code = substr(var.code, local.iter_940.code_ptr, 1)
    input = substr(var.code, local.iter_940.code_ptr, 1) == "," ? substr(local.iter_940.input, 0, 1) : null
  }

  iter_941 = local.end_of_code_941 ? local.iter_940 : {
    input = (local.curr_941.code == ","
      ? substr(local.iter_940.input, 1, -1)
      : local.iter_940.input)

    output = (local.curr_941.code == "."
      ? "${local.iter_940.output}${jsondecode(format("\"\\u%04x\"", local.iter_940.tape[local.iter_940.tape_ptr]))}"
      : local.iter_940.output)
    
    tape = (
      local.curr_941.code == "+"
        ? [for i, b in local.iter_940.tape : (i == local.iter_940.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_941.code == "-"
        ? [for i, b in local.iter_940.tape : (i == local.iter_940.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_941.code == ","
        ? [for i, b in local.iter_940.tape : (i == local.iter_940.tape_ptr ? local.ascii_lookup[local.curr_941.input] : b)]
        : local.iter_940.tape)

    tape_ptr = (
      local.curr_941.code == "<"
        ? local.iter_940.tape_ptr == 0 ? length(local.iter_940.tape) - 1 : local.iter_940.tape_ptr - 1 :
      local.curr_941.code == ">"
        ? local.iter_940.tape_ptr == length(local.iter_940.tape) - 1 ? 0 : local.iter_940.tape_ptr + 1
        : local.iter_940.tape_ptr)

    code_ptr = 1 + (
      local.curr_941.code == "["
        ? local.iter_940.tape[local.iter_940.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_940.code_ptr)] : local.iter_940.code_ptr :
      local.curr_941.code == "]"
        ? local.iter_940.tape[local.iter_940.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_940.code_ptr)] : local.iter_940.code_ptr
        : local.iter_940.code_ptr)

    steps_taken = 1 + local.iter_940.steps_taken
  }
}

locals {
  end_of_code_942 = try(local.iter_941.code_ptr >= length(var.code), true)

  curr_942 = local.end_of_code_942 ? null : {
    code = substr(var.code, local.iter_941.code_ptr, 1)
    input = substr(var.code, local.iter_941.code_ptr, 1) == "," ? substr(local.iter_941.input, 0, 1) : null
  }

  iter_942 = local.end_of_code_942 ? local.iter_941 : {
    input = (local.curr_942.code == ","
      ? substr(local.iter_941.input, 1, -1)
      : local.iter_941.input)

    output = (local.curr_942.code == "."
      ? "${local.iter_941.output}${jsondecode(format("\"\\u%04x\"", local.iter_941.tape[local.iter_941.tape_ptr]))}"
      : local.iter_941.output)
    
    tape = (
      local.curr_942.code == "+"
        ? [for i, b in local.iter_941.tape : (i == local.iter_941.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_942.code == "-"
        ? [for i, b in local.iter_941.tape : (i == local.iter_941.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_942.code == ","
        ? [for i, b in local.iter_941.tape : (i == local.iter_941.tape_ptr ? local.ascii_lookup[local.curr_942.input] : b)]
        : local.iter_941.tape)

    tape_ptr = (
      local.curr_942.code == "<"
        ? local.iter_941.tape_ptr == 0 ? length(local.iter_941.tape) - 1 : local.iter_941.tape_ptr - 1 :
      local.curr_942.code == ">"
        ? local.iter_941.tape_ptr == length(local.iter_941.tape) - 1 ? 0 : local.iter_941.tape_ptr + 1
        : local.iter_941.tape_ptr)

    code_ptr = 1 + (
      local.curr_942.code == "["
        ? local.iter_941.tape[local.iter_941.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_941.code_ptr)] : local.iter_941.code_ptr :
      local.curr_942.code == "]"
        ? local.iter_941.tape[local.iter_941.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_941.code_ptr)] : local.iter_941.code_ptr
        : local.iter_941.code_ptr)

    steps_taken = 1 + local.iter_941.steps_taken
  }
}

locals {
  end_of_code_943 = try(local.iter_942.code_ptr >= length(var.code), true)

  curr_943 = local.end_of_code_943 ? null : {
    code = substr(var.code, local.iter_942.code_ptr, 1)
    input = substr(var.code, local.iter_942.code_ptr, 1) == "," ? substr(local.iter_942.input, 0, 1) : null
  }

  iter_943 = local.end_of_code_943 ? local.iter_942 : {
    input = (local.curr_943.code == ","
      ? substr(local.iter_942.input, 1, -1)
      : local.iter_942.input)

    output = (local.curr_943.code == "."
      ? "${local.iter_942.output}${jsondecode(format("\"\\u%04x\"", local.iter_942.tape[local.iter_942.tape_ptr]))}"
      : local.iter_942.output)
    
    tape = (
      local.curr_943.code == "+"
        ? [for i, b in local.iter_942.tape : (i == local.iter_942.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_943.code == "-"
        ? [for i, b in local.iter_942.tape : (i == local.iter_942.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_943.code == ","
        ? [for i, b in local.iter_942.tape : (i == local.iter_942.tape_ptr ? local.ascii_lookup[local.curr_943.input] : b)]
        : local.iter_942.tape)

    tape_ptr = (
      local.curr_943.code == "<"
        ? local.iter_942.tape_ptr == 0 ? length(local.iter_942.tape) - 1 : local.iter_942.tape_ptr - 1 :
      local.curr_943.code == ">"
        ? local.iter_942.tape_ptr == length(local.iter_942.tape) - 1 ? 0 : local.iter_942.tape_ptr + 1
        : local.iter_942.tape_ptr)

    code_ptr = 1 + (
      local.curr_943.code == "["
        ? local.iter_942.tape[local.iter_942.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_942.code_ptr)] : local.iter_942.code_ptr :
      local.curr_943.code == "]"
        ? local.iter_942.tape[local.iter_942.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_942.code_ptr)] : local.iter_942.code_ptr
        : local.iter_942.code_ptr)

    steps_taken = 1 + local.iter_942.steps_taken
  }
}

locals {
  end_of_code_944 = try(local.iter_943.code_ptr >= length(var.code), true)

  curr_944 = local.end_of_code_944 ? null : {
    code = substr(var.code, local.iter_943.code_ptr, 1)
    input = substr(var.code, local.iter_943.code_ptr, 1) == "," ? substr(local.iter_943.input, 0, 1) : null
  }

  iter_944 = local.end_of_code_944 ? local.iter_943 : {
    input = (local.curr_944.code == ","
      ? substr(local.iter_943.input, 1, -1)
      : local.iter_943.input)

    output = (local.curr_944.code == "."
      ? "${local.iter_943.output}${jsondecode(format("\"\\u%04x\"", local.iter_943.tape[local.iter_943.tape_ptr]))}"
      : local.iter_943.output)
    
    tape = (
      local.curr_944.code == "+"
        ? [for i, b in local.iter_943.tape : (i == local.iter_943.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_944.code == "-"
        ? [for i, b in local.iter_943.tape : (i == local.iter_943.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_944.code == ","
        ? [for i, b in local.iter_943.tape : (i == local.iter_943.tape_ptr ? local.ascii_lookup[local.curr_944.input] : b)]
        : local.iter_943.tape)

    tape_ptr = (
      local.curr_944.code == "<"
        ? local.iter_943.tape_ptr == 0 ? length(local.iter_943.tape) - 1 : local.iter_943.tape_ptr - 1 :
      local.curr_944.code == ">"
        ? local.iter_943.tape_ptr == length(local.iter_943.tape) - 1 ? 0 : local.iter_943.tape_ptr + 1
        : local.iter_943.tape_ptr)

    code_ptr = 1 + (
      local.curr_944.code == "["
        ? local.iter_943.tape[local.iter_943.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_943.code_ptr)] : local.iter_943.code_ptr :
      local.curr_944.code == "]"
        ? local.iter_943.tape[local.iter_943.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_943.code_ptr)] : local.iter_943.code_ptr
        : local.iter_943.code_ptr)

    steps_taken = 1 + local.iter_943.steps_taken
  }
}

locals {
  end_of_code_945 = try(local.iter_944.code_ptr >= length(var.code), true)

  curr_945 = local.end_of_code_945 ? null : {
    code = substr(var.code, local.iter_944.code_ptr, 1)
    input = substr(var.code, local.iter_944.code_ptr, 1) == "," ? substr(local.iter_944.input, 0, 1) : null
  }

  iter_945 = local.end_of_code_945 ? local.iter_944 : {
    input = (local.curr_945.code == ","
      ? substr(local.iter_944.input, 1, -1)
      : local.iter_944.input)

    output = (local.curr_945.code == "."
      ? "${local.iter_944.output}${jsondecode(format("\"\\u%04x\"", local.iter_944.tape[local.iter_944.tape_ptr]))}"
      : local.iter_944.output)
    
    tape = (
      local.curr_945.code == "+"
        ? [for i, b in local.iter_944.tape : (i == local.iter_944.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_945.code == "-"
        ? [for i, b in local.iter_944.tape : (i == local.iter_944.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_945.code == ","
        ? [for i, b in local.iter_944.tape : (i == local.iter_944.tape_ptr ? local.ascii_lookup[local.curr_945.input] : b)]
        : local.iter_944.tape)

    tape_ptr = (
      local.curr_945.code == "<"
        ? local.iter_944.tape_ptr == 0 ? length(local.iter_944.tape) - 1 : local.iter_944.tape_ptr - 1 :
      local.curr_945.code == ">"
        ? local.iter_944.tape_ptr == length(local.iter_944.tape) - 1 ? 0 : local.iter_944.tape_ptr + 1
        : local.iter_944.tape_ptr)

    code_ptr = 1 + (
      local.curr_945.code == "["
        ? local.iter_944.tape[local.iter_944.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_944.code_ptr)] : local.iter_944.code_ptr :
      local.curr_945.code == "]"
        ? local.iter_944.tape[local.iter_944.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_944.code_ptr)] : local.iter_944.code_ptr
        : local.iter_944.code_ptr)

    steps_taken = 1 + local.iter_944.steps_taken
  }
}

locals {
  end_of_code_946 = try(local.iter_945.code_ptr >= length(var.code), true)

  curr_946 = local.end_of_code_946 ? null : {
    code = substr(var.code, local.iter_945.code_ptr, 1)
    input = substr(var.code, local.iter_945.code_ptr, 1) == "," ? substr(local.iter_945.input, 0, 1) : null
  }

  iter_946 = local.end_of_code_946 ? local.iter_945 : {
    input = (local.curr_946.code == ","
      ? substr(local.iter_945.input, 1, -1)
      : local.iter_945.input)

    output = (local.curr_946.code == "."
      ? "${local.iter_945.output}${jsondecode(format("\"\\u%04x\"", local.iter_945.tape[local.iter_945.tape_ptr]))}"
      : local.iter_945.output)
    
    tape = (
      local.curr_946.code == "+"
        ? [for i, b in local.iter_945.tape : (i == local.iter_945.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_946.code == "-"
        ? [for i, b in local.iter_945.tape : (i == local.iter_945.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_946.code == ","
        ? [for i, b in local.iter_945.tape : (i == local.iter_945.tape_ptr ? local.ascii_lookup[local.curr_946.input] : b)]
        : local.iter_945.tape)

    tape_ptr = (
      local.curr_946.code == "<"
        ? local.iter_945.tape_ptr == 0 ? length(local.iter_945.tape) - 1 : local.iter_945.tape_ptr - 1 :
      local.curr_946.code == ">"
        ? local.iter_945.tape_ptr == length(local.iter_945.tape) - 1 ? 0 : local.iter_945.tape_ptr + 1
        : local.iter_945.tape_ptr)

    code_ptr = 1 + (
      local.curr_946.code == "["
        ? local.iter_945.tape[local.iter_945.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_945.code_ptr)] : local.iter_945.code_ptr :
      local.curr_946.code == "]"
        ? local.iter_945.tape[local.iter_945.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_945.code_ptr)] : local.iter_945.code_ptr
        : local.iter_945.code_ptr)

    steps_taken = 1 + local.iter_945.steps_taken
  }
}

locals {
  end_of_code_947 = try(local.iter_946.code_ptr >= length(var.code), true)

  curr_947 = local.end_of_code_947 ? null : {
    code = substr(var.code, local.iter_946.code_ptr, 1)
    input = substr(var.code, local.iter_946.code_ptr, 1) == "," ? substr(local.iter_946.input, 0, 1) : null
  }

  iter_947 = local.end_of_code_947 ? local.iter_946 : {
    input = (local.curr_947.code == ","
      ? substr(local.iter_946.input, 1, -1)
      : local.iter_946.input)

    output = (local.curr_947.code == "."
      ? "${local.iter_946.output}${jsondecode(format("\"\\u%04x\"", local.iter_946.tape[local.iter_946.tape_ptr]))}"
      : local.iter_946.output)
    
    tape = (
      local.curr_947.code == "+"
        ? [for i, b in local.iter_946.tape : (i == local.iter_946.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_947.code == "-"
        ? [for i, b in local.iter_946.tape : (i == local.iter_946.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_947.code == ","
        ? [for i, b in local.iter_946.tape : (i == local.iter_946.tape_ptr ? local.ascii_lookup[local.curr_947.input] : b)]
        : local.iter_946.tape)

    tape_ptr = (
      local.curr_947.code == "<"
        ? local.iter_946.tape_ptr == 0 ? length(local.iter_946.tape) - 1 : local.iter_946.tape_ptr - 1 :
      local.curr_947.code == ">"
        ? local.iter_946.tape_ptr == length(local.iter_946.tape) - 1 ? 0 : local.iter_946.tape_ptr + 1
        : local.iter_946.tape_ptr)

    code_ptr = 1 + (
      local.curr_947.code == "["
        ? local.iter_946.tape[local.iter_946.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_946.code_ptr)] : local.iter_946.code_ptr :
      local.curr_947.code == "]"
        ? local.iter_946.tape[local.iter_946.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_946.code_ptr)] : local.iter_946.code_ptr
        : local.iter_946.code_ptr)

    steps_taken = 1 + local.iter_946.steps_taken
  }
}

locals {
  end_of_code_948 = try(local.iter_947.code_ptr >= length(var.code), true)

  curr_948 = local.end_of_code_948 ? null : {
    code = substr(var.code, local.iter_947.code_ptr, 1)
    input = substr(var.code, local.iter_947.code_ptr, 1) == "," ? substr(local.iter_947.input, 0, 1) : null
  }

  iter_948 = local.end_of_code_948 ? local.iter_947 : {
    input = (local.curr_948.code == ","
      ? substr(local.iter_947.input, 1, -1)
      : local.iter_947.input)

    output = (local.curr_948.code == "."
      ? "${local.iter_947.output}${jsondecode(format("\"\\u%04x\"", local.iter_947.tape[local.iter_947.tape_ptr]))}"
      : local.iter_947.output)
    
    tape = (
      local.curr_948.code == "+"
        ? [for i, b in local.iter_947.tape : (i == local.iter_947.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_948.code == "-"
        ? [for i, b in local.iter_947.tape : (i == local.iter_947.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_948.code == ","
        ? [for i, b in local.iter_947.tape : (i == local.iter_947.tape_ptr ? local.ascii_lookup[local.curr_948.input] : b)]
        : local.iter_947.tape)

    tape_ptr = (
      local.curr_948.code == "<"
        ? local.iter_947.tape_ptr == 0 ? length(local.iter_947.tape) - 1 : local.iter_947.tape_ptr - 1 :
      local.curr_948.code == ">"
        ? local.iter_947.tape_ptr == length(local.iter_947.tape) - 1 ? 0 : local.iter_947.tape_ptr + 1
        : local.iter_947.tape_ptr)

    code_ptr = 1 + (
      local.curr_948.code == "["
        ? local.iter_947.tape[local.iter_947.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_947.code_ptr)] : local.iter_947.code_ptr :
      local.curr_948.code == "]"
        ? local.iter_947.tape[local.iter_947.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_947.code_ptr)] : local.iter_947.code_ptr
        : local.iter_947.code_ptr)

    steps_taken = 1 + local.iter_947.steps_taken
  }
}

locals {
  end_of_code_949 = try(local.iter_948.code_ptr >= length(var.code), true)

  curr_949 = local.end_of_code_949 ? null : {
    code = substr(var.code, local.iter_948.code_ptr, 1)
    input = substr(var.code, local.iter_948.code_ptr, 1) == "," ? substr(local.iter_948.input, 0, 1) : null
  }

  iter_949 = local.end_of_code_949 ? local.iter_948 : {
    input = (local.curr_949.code == ","
      ? substr(local.iter_948.input, 1, -1)
      : local.iter_948.input)

    output = (local.curr_949.code == "."
      ? "${local.iter_948.output}${jsondecode(format("\"\\u%04x\"", local.iter_948.tape[local.iter_948.tape_ptr]))}"
      : local.iter_948.output)
    
    tape = (
      local.curr_949.code == "+"
        ? [for i, b in local.iter_948.tape : (i == local.iter_948.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_949.code == "-"
        ? [for i, b in local.iter_948.tape : (i == local.iter_948.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_949.code == ","
        ? [for i, b in local.iter_948.tape : (i == local.iter_948.tape_ptr ? local.ascii_lookup[local.curr_949.input] : b)]
        : local.iter_948.tape)

    tape_ptr = (
      local.curr_949.code == "<"
        ? local.iter_948.tape_ptr == 0 ? length(local.iter_948.tape) - 1 : local.iter_948.tape_ptr - 1 :
      local.curr_949.code == ">"
        ? local.iter_948.tape_ptr == length(local.iter_948.tape) - 1 ? 0 : local.iter_948.tape_ptr + 1
        : local.iter_948.tape_ptr)

    code_ptr = 1 + (
      local.curr_949.code == "["
        ? local.iter_948.tape[local.iter_948.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_948.code_ptr)] : local.iter_948.code_ptr :
      local.curr_949.code == "]"
        ? local.iter_948.tape[local.iter_948.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_948.code_ptr)] : local.iter_948.code_ptr
        : local.iter_948.code_ptr)

    steps_taken = 1 + local.iter_948.steps_taken
  }
}

locals {
  end_of_code_950 = try(local.iter_949.code_ptr >= length(var.code), true)

  curr_950 = local.end_of_code_950 ? null : {
    code = substr(var.code, local.iter_949.code_ptr, 1)
    input = substr(var.code, local.iter_949.code_ptr, 1) == "," ? substr(local.iter_949.input, 0, 1) : null
  }

  iter_950 = local.end_of_code_950 ? local.iter_949 : {
    input = (local.curr_950.code == ","
      ? substr(local.iter_949.input, 1, -1)
      : local.iter_949.input)

    output = (local.curr_950.code == "."
      ? "${local.iter_949.output}${jsondecode(format("\"\\u%04x\"", local.iter_949.tape[local.iter_949.tape_ptr]))}"
      : local.iter_949.output)
    
    tape = (
      local.curr_950.code == "+"
        ? [for i, b in local.iter_949.tape : (i == local.iter_949.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_950.code == "-"
        ? [for i, b in local.iter_949.tape : (i == local.iter_949.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_950.code == ","
        ? [for i, b in local.iter_949.tape : (i == local.iter_949.tape_ptr ? local.ascii_lookup[local.curr_950.input] : b)]
        : local.iter_949.tape)

    tape_ptr = (
      local.curr_950.code == "<"
        ? local.iter_949.tape_ptr == 0 ? length(local.iter_949.tape) - 1 : local.iter_949.tape_ptr - 1 :
      local.curr_950.code == ">"
        ? local.iter_949.tape_ptr == length(local.iter_949.tape) - 1 ? 0 : local.iter_949.tape_ptr + 1
        : local.iter_949.tape_ptr)

    code_ptr = 1 + (
      local.curr_950.code == "["
        ? local.iter_949.tape[local.iter_949.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_949.code_ptr)] : local.iter_949.code_ptr :
      local.curr_950.code == "]"
        ? local.iter_949.tape[local.iter_949.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_949.code_ptr)] : local.iter_949.code_ptr
        : local.iter_949.code_ptr)

    steps_taken = 1 + local.iter_949.steps_taken
  }
}

locals {
  end_of_code_951 = try(local.iter_950.code_ptr >= length(var.code), true)

  curr_951 = local.end_of_code_951 ? null : {
    code = substr(var.code, local.iter_950.code_ptr, 1)
    input = substr(var.code, local.iter_950.code_ptr, 1) == "," ? substr(local.iter_950.input, 0, 1) : null
  }

  iter_951 = local.end_of_code_951 ? local.iter_950 : {
    input = (local.curr_951.code == ","
      ? substr(local.iter_950.input, 1, -1)
      : local.iter_950.input)

    output = (local.curr_951.code == "."
      ? "${local.iter_950.output}${jsondecode(format("\"\\u%04x\"", local.iter_950.tape[local.iter_950.tape_ptr]))}"
      : local.iter_950.output)
    
    tape = (
      local.curr_951.code == "+"
        ? [for i, b in local.iter_950.tape : (i == local.iter_950.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_951.code == "-"
        ? [for i, b in local.iter_950.tape : (i == local.iter_950.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_951.code == ","
        ? [for i, b in local.iter_950.tape : (i == local.iter_950.tape_ptr ? local.ascii_lookup[local.curr_951.input] : b)]
        : local.iter_950.tape)

    tape_ptr = (
      local.curr_951.code == "<"
        ? local.iter_950.tape_ptr == 0 ? length(local.iter_950.tape) - 1 : local.iter_950.tape_ptr - 1 :
      local.curr_951.code == ">"
        ? local.iter_950.tape_ptr == length(local.iter_950.tape) - 1 ? 0 : local.iter_950.tape_ptr + 1
        : local.iter_950.tape_ptr)

    code_ptr = 1 + (
      local.curr_951.code == "["
        ? local.iter_950.tape[local.iter_950.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_950.code_ptr)] : local.iter_950.code_ptr :
      local.curr_951.code == "]"
        ? local.iter_950.tape[local.iter_950.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_950.code_ptr)] : local.iter_950.code_ptr
        : local.iter_950.code_ptr)

    steps_taken = 1 + local.iter_950.steps_taken
  }
}

locals {
  end_of_code_952 = try(local.iter_951.code_ptr >= length(var.code), true)

  curr_952 = local.end_of_code_952 ? null : {
    code = substr(var.code, local.iter_951.code_ptr, 1)
    input = substr(var.code, local.iter_951.code_ptr, 1) == "," ? substr(local.iter_951.input, 0, 1) : null
  }

  iter_952 = local.end_of_code_952 ? local.iter_951 : {
    input = (local.curr_952.code == ","
      ? substr(local.iter_951.input, 1, -1)
      : local.iter_951.input)

    output = (local.curr_952.code == "."
      ? "${local.iter_951.output}${jsondecode(format("\"\\u%04x\"", local.iter_951.tape[local.iter_951.tape_ptr]))}"
      : local.iter_951.output)
    
    tape = (
      local.curr_952.code == "+"
        ? [for i, b in local.iter_951.tape : (i == local.iter_951.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_952.code == "-"
        ? [for i, b in local.iter_951.tape : (i == local.iter_951.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_952.code == ","
        ? [for i, b in local.iter_951.tape : (i == local.iter_951.tape_ptr ? local.ascii_lookup[local.curr_952.input] : b)]
        : local.iter_951.tape)

    tape_ptr = (
      local.curr_952.code == "<"
        ? local.iter_951.tape_ptr == 0 ? length(local.iter_951.tape) - 1 : local.iter_951.tape_ptr - 1 :
      local.curr_952.code == ">"
        ? local.iter_951.tape_ptr == length(local.iter_951.tape) - 1 ? 0 : local.iter_951.tape_ptr + 1
        : local.iter_951.tape_ptr)

    code_ptr = 1 + (
      local.curr_952.code == "["
        ? local.iter_951.tape[local.iter_951.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_951.code_ptr)] : local.iter_951.code_ptr :
      local.curr_952.code == "]"
        ? local.iter_951.tape[local.iter_951.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_951.code_ptr)] : local.iter_951.code_ptr
        : local.iter_951.code_ptr)

    steps_taken = 1 + local.iter_951.steps_taken
  }
}

locals {
  end_of_code_953 = try(local.iter_952.code_ptr >= length(var.code), true)

  curr_953 = local.end_of_code_953 ? null : {
    code = substr(var.code, local.iter_952.code_ptr, 1)
    input = substr(var.code, local.iter_952.code_ptr, 1) == "," ? substr(local.iter_952.input, 0, 1) : null
  }

  iter_953 = local.end_of_code_953 ? local.iter_952 : {
    input = (local.curr_953.code == ","
      ? substr(local.iter_952.input, 1, -1)
      : local.iter_952.input)

    output = (local.curr_953.code == "."
      ? "${local.iter_952.output}${jsondecode(format("\"\\u%04x\"", local.iter_952.tape[local.iter_952.tape_ptr]))}"
      : local.iter_952.output)
    
    tape = (
      local.curr_953.code == "+"
        ? [for i, b in local.iter_952.tape : (i == local.iter_952.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_953.code == "-"
        ? [for i, b in local.iter_952.tape : (i == local.iter_952.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_953.code == ","
        ? [for i, b in local.iter_952.tape : (i == local.iter_952.tape_ptr ? local.ascii_lookup[local.curr_953.input] : b)]
        : local.iter_952.tape)

    tape_ptr = (
      local.curr_953.code == "<"
        ? local.iter_952.tape_ptr == 0 ? length(local.iter_952.tape) - 1 : local.iter_952.tape_ptr - 1 :
      local.curr_953.code == ">"
        ? local.iter_952.tape_ptr == length(local.iter_952.tape) - 1 ? 0 : local.iter_952.tape_ptr + 1
        : local.iter_952.tape_ptr)

    code_ptr = 1 + (
      local.curr_953.code == "["
        ? local.iter_952.tape[local.iter_952.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_952.code_ptr)] : local.iter_952.code_ptr :
      local.curr_953.code == "]"
        ? local.iter_952.tape[local.iter_952.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_952.code_ptr)] : local.iter_952.code_ptr
        : local.iter_952.code_ptr)

    steps_taken = 1 + local.iter_952.steps_taken
  }
}

locals {
  end_of_code_954 = try(local.iter_953.code_ptr >= length(var.code), true)

  curr_954 = local.end_of_code_954 ? null : {
    code = substr(var.code, local.iter_953.code_ptr, 1)
    input = substr(var.code, local.iter_953.code_ptr, 1) == "," ? substr(local.iter_953.input, 0, 1) : null
  }

  iter_954 = local.end_of_code_954 ? local.iter_953 : {
    input = (local.curr_954.code == ","
      ? substr(local.iter_953.input, 1, -1)
      : local.iter_953.input)

    output = (local.curr_954.code == "."
      ? "${local.iter_953.output}${jsondecode(format("\"\\u%04x\"", local.iter_953.tape[local.iter_953.tape_ptr]))}"
      : local.iter_953.output)
    
    tape = (
      local.curr_954.code == "+"
        ? [for i, b in local.iter_953.tape : (i == local.iter_953.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_954.code == "-"
        ? [for i, b in local.iter_953.tape : (i == local.iter_953.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_954.code == ","
        ? [for i, b in local.iter_953.tape : (i == local.iter_953.tape_ptr ? local.ascii_lookup[local.curr_954.input] : b)]
        : local.iter_953.tape)

    tape_ptr = (
      local.curr_954.code == "<"
        ? local.iter_953.tape_ptr == 0 ? length(local.iter_953.tape) - 1 : local.iter_953.tape_ptr - 1 :
      local.curr_954.code == ">"
        ? local.iter_953.tape_ptr == length(local.iter_953.tape) - 1 ? 0 : local.iter_953.tape_ptr + 1
        : local.iter_953.tape_ptr)

    code_ptr = 1 + (
      local.curr_954.code == "["
        ? local.iter_953.tape[local.iter_953.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_953.code_ptr)] : local.iter_953.code_ptr :
      local.curr_954.code == "]"
        ? local.iter_953.tape[local.iter_953.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_953.code_ptr)] : local.iter_953.code_ptr
        : local.iter_953.code_ptr)

    steps_taken = 1 + local.iter_953.steps_taken
  }
}

locals {
  end_of_code_955 = try(local.iter_954.code_ptr >= length(var.code), true)

  curr_955 = local.end_of_code_955 ? null : {
    code = substr(var.code, local.iter_954.code_ptr, 1)
    input = substr(var.code, local.iter_954.code_ptr, 1) == "," ? substr(local.iter_954.input, 0, 1) : null
  }

  iter_955 = local.end_of_code_955 ? local.iter_954 : {
    input = (local.curr_955.code == ","
      ? substr(local.iter_954.input, 1, -1)
      : local.iter_954.input)

    output = (local.curr_955.code == "."
      ? "${local.iter_954.output}${jsondecode(format("\"\\u%04x\"", local.iter_954.tape[local.iter_954.tape_ptr]))}"
      : local.iter_954.output)
    
    tape = (
      local.curr_955.code == "+"
        ? [for i, b in local.iter_954.tape : (i == local.iter_954.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_955.code == "-"
        ? [for i, b in local.iter_954.tape : (i == local.iter_954.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_955.code == ","
        ? [for i, b in local.iter_954.tape : (i == local.iter_954.tape_ptr ? local.ascii_lookup[local.curr_955.input] : b)]
        : local.iter_954.tape)

    tape_ptr = (
      local.curr_955.code == "<"
        ? local.iter_954.tape_ptr == 0 ? length(local.iter_954.tape) - 1 : local.iter_954.tape_ptr - 1 :
      local.curr_955.code == ">"
        ? local.iter_954.tape_ptr == length(local.iter_954.tape) - 1 ? 0 : local.iter_954.tape_ptr + 1
        : local.iter_954.tape_ptr)

    code_ptr = 1 + (
      local.curr_955.code == "["
        ? local.iter_954.tape[local.iter_954.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_954.code_ptr)] : local.iter_954.code_ptr :
      local.curr_955.code == "]"
        ? local.iter_954.tape[local.iter_954.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_954.code_ptr)] : local.iter_954.code_ptr
        : local.iter_954.code_ptr)

    steps_taken = 1 + local.iter_954.steps_taken
  }
}

locals {
  end_of_code_956 = try(local.iter_955.code_ptr >= length(var.code), true)

  curr_956 = local.end_of_code_956 ? null : {
    code = substr(var.code, local.iter_955.code_ptr, 1)
    input = substr(var.code, local.iter_955.code_ptr, 1) == "," ? substr(local.iter_955.input, 0, 1) : null
  }

  iter_956 = local.end_of_code_956 ? local.iter_955 : {
    input = (local.curr_956.code == ","
      ? substr(local.iter_955.input, 1, -1)
      : local.iter_955.input)

    output = (local.curr_956.code == "."
      ? "${local.iter_955.output}${jsondecode(format("\"\\u%04x\"", local.iter_955.tape[local.iter_955.tape_ptr]))}"
      : local.iter_955.output)
    
    tape = (
      local.curr_956.code == "+"
        ? [for i, b in local.iter_955.tape : (i == local.iter_955.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_956.code == "-"
        ? [for i, b in local.iter_955.tape : (i == local.iter_955.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_956.code == ","
        ? [for i, b in local.iter_955.tape : (i == local.iter_955.tape_ptr ? local.ascii_lookup[local.curr_956.input] : b)]
        : local.iter_955.tape)

    tape_ptr = (
      local.curr_956.code == "<"
        ? local.iter_955.tape_ptr == 0 ? length(local.iter_955.tape) - 1 : local.iter_955.tape_ptr - 1 :
      local.curr_956.code == ">"
        ? local.iter_955.tape_ptr == length(local.iter_955.tape) - 1 ? 0 : local.iter_955.tape_ptr + 1
        : local.iter_955.tape_ptr)

    code_ptr = 1 + (
      local.curr_956.code == "["
        ? local.iter_955.tape[local.iter_955.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_955.code_ptr)] : local.iter_955.code_ptr :
      local.curr_956.code == "]"
        ? local.iter_955.tape[local.iter_955.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_955.code_ptr)] : local.iter_955.code_ptr
        : local.iter_955.code_ptr)

    steps_taken = 1 + local.iter_955.steps_taken
  }
}

locals {
  end_of_code_957 = try(local.iter_956.code_ptr >= length(var.code), true)

  curr_957 = local.end_of_code_957 ? null : {
    code = substr(var.code, local.iter_956.code_ptr, 1)
    input = substr(var.code, local.iter_956.code_ptr, 1) == "," ? substr(local.iter_956.input, 0, 1) : null
  }

  iter_957 = local.end_of_code_957 ? local.iter_956 : {
    input = (local.curr_957.code == ","
      ? substr(local.iter_956.input, 1, -1)
      : local.iter_956.input)

    output = (local.curr_957.code == "."
      ? "${local.iter_956.output}${jsondecode(format("\"\\u%04x\"", local.iter_956.tape[local.iter_956.tape_ptr]))}"
      : local.iter_956.output)
    
    tape = (
      local.curr_957.code == "+"
        ? [for i, b in local.iter_956.tape : (i == local.iter_956.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_957.code == "-"
        ? [for i, b in local.iter_956.tape : (i == local.iter_956.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_957.code == ","
        ? [for i, b in local.iter_956.tape : (i == local.iter_956.tape_ptr ? local.ascii_lookup[local.curr_957.input] : b)]
        : local.iter_956.tape)

    tape_ptr = (
      local.curr_957.code == "<"
        ? local.iter_956.tape_ptr == 0 ? length(local.iter_956.tape) - 1 : local.iter_956.tape_ptr - 1 :
      local.curr_957.code == ">"
        ? local.iter_956.tape_ptr == length(local.iter_956.tape) - 1 ? 0 : local.iter_956.tape_ptr + 1
        : local.iter_956.tape_ptr)

    code_ptr = 1 + (
      local.curr_957.code == "["
        ? local.iter_956.tape[local.iter_956.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_956.code_ptr)] : local.iter_956.code_ptr :
      local.curr_957.code == "]"
        ? local.iter_956.tape[local.iter_956.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_956.code_ptr)] : local.iter_956.code_ptr
        : local.iter_956.code_ptr)

    steps_taken = 1 + local.iter_956.steps_taken
  }
}

locals {
  end_of_code_958 = try(local.iter_957.code_ptr >= length(var.code), true)

  curr_958 = local.end_of_code_958 ? null : {
    code = substr(var.code, local.iter_957.code_ptr, 1)
    input = substr(var.code, local.iter_957.code_ptr, 1) == "," ? substr(local.iter_957.input, 0, 1) : null
  }

  iter_958 = local.end_of_code_958 ? local.iter_957 : {
    input = (local.curr_958.code == ","
      ? substr(local.iter_957.input, 1, -1)
      : local.iter_957.input)

    output = (local.curr_958.code == "."
      ? "${local.iter_957.output}${jsondecode(format("\"\\u%04x\"", local.iter_957.tape[local.iter_957.tape_ptr]))}"
      : local.iter_957.output)
    
    tape = (
      local.curr_958.code == "+"
        ? [for i, b in local.iter_957.tape : (i == local.iter_957.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_958.code == "-"
        ? [for i, b in local.iter_957.tape : (i == local.iter_957.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_958.code == ","
        ? [for i, b in local.iter_957.tape : (i == local.iter_957.tape_ptr ? local.ascii_lookup[local.curr_958.input] : b)]
        : local.iter_957.tape)

    tape_ptr = (
      local.curr_958.code == "<"
        ? local.iter_957.tape_ptr == 0 ? length(local.iter_957.tape) - 1 : local.iter_957.tape_ptr - 1 :
      local.curr_958.code == ">"
        ? local.iter_957.tape_ptr == length(local.iter_957.tape) - 1 ? 0 : local.iter_957.tape_ptr + 1
        : local.iter_957.tape_ptr)

    code_ptr = 1 + (
      local.curr_958.code == "["
        ? local.iter_957.tape[local.iter_957.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_957.code_ptr)] : local.iter_957.code_ptr :
      local.curr_958.code == "]"
        ? local.iter_957.tape[local.iter_957.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_957.code_ptr)] : local.iter_957.code_ptr
        : local.iter_957.code_ptr)

    steps_taken = 1 + local.iter_957.steps_taken
  }
}

locals {
  end_of_code_959 = try(local.iter_958.code_ptr >= length(var.code), true)

  curr_959 = local.end_of_code_959 ? null : {
    code = substr(var.code, local.iter_958.code_ptr, 1)
    input = substr(var.code, local.iter_958.code_ptr, 1) == "," ? substr(local.iter_958.input, 0, 1) : null
  }

  iter_959 = local.end_of_code_959 ? local.iter_958 : {
    input = (local.curr_959.code == ","
      ? substr(local.iter_958.input, 1, -1)
      : local.iter_958.input)

    output = (local.curr_959.code == "."
      ? "${local.iter_958.output}${jsondecode(format("\"\\u%04x\"", local.iter_958.tape[local.iter_958.tape_ptr]))}"
      : local.iter_958.output)
    
    tape = (
      local.curr_959.code == "+"
        ? [for i, b in local.iter_958.tape : (i == local.iter_958.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_959.code == "-"
        ? [for i, b in local.iter_958.tape : (i == local.iter_958.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_959.code == ","
        ? [for i, b in local.iter_958.tape : (i == local.iter_958.tape_ptr ? local.ascii_lookup[local.curr_959.input] : b)]
        : local.iter_958.tape)

    tape_ptr = (
      local.curr_959.code == "<"
        ? local.iter_958.tape_ptr == 0 ? length(local.iter_958.tape) - 1 : local.iter_958.tape_ptr - 1 :
      local.curr_959.code == ">"
        ? local.iter_958.tape_ptr == length(local.iter_958.tape) - 1 ? 0 : local.iter_958.tape_ptr + 1
        : local.iter_958.tape_ptr)

    code_ptr = 1 + (
      local.curr_959.code == "["
        ? local.iter_958.tape[local.iter_958.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_958.code_ptr)] : local.iter_958.code_ptr :
      local.curr_959.code == "]"
        ? local.iter_958.tape[local.iter_958.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_958.code_ptr)] : local.iter_958.code_ptr
        : local.iter_958.code_ptr)

    steps_taken = 1 + local.iter_958.steps_taken
  }
}

locals {
  end_of_code_960 = try(local.iter_959.code_ptr >= length(var.code), true)

  curr_960 = local.end_of_code_960 ? null : {
    code = substr(var.code, local.iter_959.code_ptr, 1)
    input = substr(var.code, local.iter_959.code_ptr, 1) == "," ? substr(local.iter_959.input, 0, 1) : null
  }

  iter_960 = local.end_of_code_960 ? local.iter_959 : {
    input = (local.curr_960.code == ","
      ? substr(local.iter_959.input, 1, -1)
      : local.iter_959.input)

    output = (local.curr_960.code == "."
      ? "${local.iter_959.output}${jsondecode(format("\"\\u%04x\"", local.iter_959.tape[local.iter_959.tape_ptr]))}"
      : local.iter_959.output)
    
    tape = (
      local.curr_960.code == "+"
        ? [for i, b in local.iter_959.tape : (i == local.iter_959.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_960.code == "-"
        ? [for i, b in local.iter_959.tape : (i == local.iter_959.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_960.code == ","
        ? [for i, b in local.iter_959.tape : (i == local.iter_959.tape_ptr ? local.ascii_lookup[local.curr_960.input] : b)]
        : local.iter_959.tape)

    tape_ptr = (
      local.curr_960.code == "<"
        ? local.iter_959.tape_ptr == 0 ? length(local.iter_959.tape) - 1 : local.iter_959.tape_ptr - 1 :
      local.curr_960.code == ">"
        ? local.iter_959.tape_ptr == length(local.iter_959.tape) - 1 ? 0 : local.iter_959.tape_ptr + 1
        : local.iter_959.tape_ptr)

    code_ptr = 1 + (
      local.curr_960.code == "["
        ? local.iter_959.tape[local.iter_959.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_959.code_ptr)] : local.iter_959.code_ptr :
      local.curr_960.code == "]"
        ? local.iter_959.tape[local.iter_959.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_959.code_ptr)] : local.iter_959.code_ptr
        : local.iter_959.code_ptr)

    steps_taken = 1 + local.iter_959.steps_taken
  }
}

locals {
  end_of_code_961 = try(local.iter_960.code_ptr >= length(var.code), true)

  curr_961 = local.end_of_code_961 ? null : {
    code = substr(var.code, local.iter_960.code_ptr, 1)
    input = substr(var.code, local.iter_960.code_ptr, 1) == "," ? substr(local.iter_960.input, 0, 1) : null
  }

  iter_961 = local.end_of_code_961 ? local.iter_960 : {
    input = (local.curr_961.code == ","
      ? substr(local.iter_960.input, 1, -1)
      : local.iter_960.input)

    output = (local.curr_961.code == "."
      ? "${local.iter_960.output}${jsondecode(format("\"\\u%04x\"", local.iter_960.tape[local.iter_960.tape_ptr]))}"
      : local.iter_960.output)
    
    tape = (
      local.curr_961.code == "+"
        ? [for i, b in local.iter_960.tape : (i == local.iter_960.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_961.code == "-"
        ? [for i, b in local.iter_960.tape : (i == local.iter_960.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_961.code == ","
        ? [for i, b in local.iter_960.tape : (i == local.iter_960.tape_ptr ? local.ascii_lookup[local.curr_961.input] : b)]
        : local.iter_960.tape)

    tape_ptr = (
      local.curr_961.code == "<"
        ? local.iter_960.tape_ptr == 0 ? length(local.iter_960.tape) - 1 : local.iter_960.tape_ptr - 1 :
      local.curr_961.code == ">"
        ? local.iter_960.tape_ptr == length(local.iter_960.tape) - 1 ? 0 : local.iter_960.tape_ptr + 1
        : local.iter_960.tape_ptr)

    code_ptr = 1 + (
      local.curr_961.code == "["
        ? local.iter_960.tape[local.iter_960.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_960.code_ptr)] : local.iter_960.code_ptr :
      local.curr_961.code == "]"
        ? local.iter_960.tape[local.iter_960.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_960.code_ptr)] : local.iter_960.code_ptr
        : local.iter_960.code_ptr)

    steps_taken = 1 + local.iter_960.steps_taken
  }
}

locals {
  end_of_code_962 = try(local.iter_961.code_ptr >= length(var.code), true)

  curr_962 = local.end_of_code_962 ? null : {
    code = substr(var.code, local.iter_961.code_ptr, 1)
    input = substr(var.code, local.iter_961.code_ptr, 1) == "," ? substr(local.iter_961.input, 0, 1) : null
  }

  iter_962 = local.end_of_code_962 ? local.iter_961 : {
    input = (local.curr_962.code == ","
      ? substr(local.iter_961.input, 1, -1)
      : local.iter_961.input)

    output = (local.curr_962.code == "."
      ? "${local.iter_961.output}${jsondecode(format("\"\\u%04x\"", local.iter_961.tape[local.iter_961.tape_ptr]))}"
      : local.iter_961.output)
    
    tape = (
      local.curr_962.code == "+"
        ? [for i, b in local.iter_961.tape : (i == local.iter_961.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_962.code == "-"
        ? [for i, b in local.iter_961.tape : (i == local.iter_961.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_962.code == ","
        ? [for i, b in local.iter_961.tape : (i == local.iter_961.tape_ptr ? local.ascii_lookup[local.curr_962.input] : b)]
        : local.iter_961.tape)

    tape_ptr = (
      local.curr_962.code == "<"
        ? local.iter_961.tape_ptr == 0 ? length(local.iter_961.tape) - 1 : local.iter_961.tape_ptr - 1 :
      local.curr_962.code == ">"
        ? local.iter_961.tape_ptr == length(local.iter_961.tape) - 1 ? 0 : local.iter_961.tape_ptr + 1
        : local.iter_961.tape_ptr)

    code_ptr = 1 + (
      local.curr_962.code == "["
        ? local.iter_961.tape[local.iter_961.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_961.code_ptr)] : local.iter_961.code_ptr :
      local.curr_962.code == "]"
        ? local.iter_961.tape[local.iter_961.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_961.code_ptr)] : local.iter_961.code_ptr
        : local.iter_961.code_ptr)

    steps_taken = 1 + local.iter_961.steps_taken
  }
}

locals {
  end_of_code_963 = try(local.iter_962.code_ptr >= length(var.code), true)

  curr_963 = local.end_of_code_963 ? null : {
    code = substr(var.code, local.iter_962.code_ptr, 1)
    input = substr(var.code, local.iter_962.code_ptr, 1) == "," ? substr(local.iter_962.input, 0, 1) : null
  }

  iter_963 = local.end_of_code_963 ? local.iter_962 : {
    input = (local.curr_963.code == ","
      ? substr(local.iter_962.input, 1, -1)
      : local.iter_962.input)

    output = (local.curr_963.code == "."
      ? "${local.iter_962.output}${jsondecode(format("\"\\u%04x\"", local.iter_962.tape[local.iter_962.tape_ptr]))}"
      : local.iter_962.output)
    
    tape = (
      local.curr_963.code == "+"
        ? [for i, b in local.iter_962.tape : (i == local.iter_962.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_963.code == "-"
        ? [for i, b in local.iter_962.tape : (i == local.iter_962.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_963.code == ","
        ? [for i, b in local.iter_962.tape : (i == local.iter_962.tape_ptr ? local.ascii_lookup[local.curr_963.input] : b)]
        : local.iter_962.tape)

    tape_ptr = (
      local.curr_963.code == "<"
        ? local.iter_962.tape_ptr == 0 ? length(local.iter_962.tape) - 1 : local.iter_962.tape_ptr - 1 :
      local.curr_963.code == ">"
        ? local.iter_962.tape_ptr == length(local.iter_962.tape) - 1 ? 0 : local.iter_962.tape_ptr + 1
        : local.iter_962.tape_ptr)

    code_ptr = 1 + (
      local.curr_963.code == "["
        ? local.iter_962.tape[local.iter_962.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_962.code_ptr)] : local.iter_962.code_ptr :
      local.curr_963.code == "]"
        ? local.iter_962.tape[local.iter_962.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_962.code_ptr)] : local.iter_962.code_ptr
        : local.iter_962.code_ptr)

    steps_taken = 1 + local.iter_962.steps_taken
  }
}

locals {
  end_of_code_964 = try(local.iter_963.code_ptr >= length(var.code), true)

  curr_964 = local.end_of_code_964 ? null : {
    code = substr(var.code, local.iter_963.code_ptr, 1)
    input = substr(var.code, local.iter_963.code_ptr, 1) == "," ? substr(local.iter_963.input, 0, 1) : null
  }

  iter_964 = local.end_of_code_964 ? local.iter_963 : {
    input = (local.curr_964.code == ","
      ? substr(local.iter_963.input, 1, -1)
      : local.iter_963.input)

    output = (local.curr_964.code == "."
      ? "${local.iter_963.output}${jsondecode(format("\"\\u%04x\"", local.iter_963.tape[local.iter_963.tape_ptr]))}"
      : local.iter_963.output)
    
    tape = (
      local.curr_964.code == "+"
        ? [for i, b in local.iter_963.tape : (i == local.iter_963.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_964.code == "-"
        ? [for i, b in local.iter_963.tape : (i == local.iter_963.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_964.code == ","
        ? [for i, b in local.iter_963.tape : (i == local.iter_963.tape_ptr ? local.ascii_lookup[local.curr_964.input] : b)]
        : local.iter_963.tape)

    tape_ptr = (
      local.curr_964.code == "<"
        ? local.iter_963.tape_ptr == 0 ? length(local.iter_963.tape) - 1 : local.iter_963.tape_ptr - 1 :
      local.curr_964.code == ">"
        ? local.iter_963.tape_ptr == length(local.iter_963.tape) - 1 ? 0 : local.iter_963.tape_ptr + 1
        : local.iter_963.tape_ptr)

    code_ptr = 1 + (
      local.curr_964.code == "["
        ? local.iter_963.tape[local.iter_963.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_963.code_ptr)] : local.iter_963.code_ptr :
      local.curr_964.code == "]"
        ? local.iter_963.tape[local.iter_963.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_963.code_ptr)] : local.iter_963.code_ptr
        : local.iter_963.code_ptr)

    steps_taken = 1 + local.iter_963.steps_taken
  }
}

locals {
  end_of_code_965 = try(local.iter_964.code_ptr >= length(var.code), true)

  curr_965 = local.end_of_code_965 ? null : {
    code = substr(var.code, local.iter_964.code_ptr, 1)
    input = substr(var.code, local.iter_964.code_ptr, 1) == "," ? substr(local.iter_964.input, 0, 1) : null
  }

  iter_965 = local.end_of_code_965 ? local.iter_964 : {
    input = (local.curr_965.code == ","
      ? substr(local.iter_964.input, 1, -1)
      : local.iter_964.input)

    output = (local.curr_965.code == "."
      ? "${local.iter_964.output}${jsondecode(format("\"\\u%04x\"", local.iter_964.tape[local.iter_964.tape_ptr]))}"
      : local.iter_964.output)
    
    tape = (
      local.curr_965.code == "+"
        ? [for i, b in local.iter_964.tape : (i == local.iter_964.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_965.code == "-"
        ? [for i, b in local.iter_964.tape : (i == local.iter_964.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_965.code == ","
        ? [for i, b in local.iter_964.tape : (i == local.iter_964.tape_ptr ? local.ascii_lookup[local.curr_965.input] : b)]
        : local.iter_964.tape)

    tape_ptr = (
      local.curr_965.code == "<"
        ? local.iter_964.tape_ptr == 0 ? length(local.iter_964.tape) - 1 : local.iter_964.tape_ptr - 1 :
      local.curr_965.code == ">"
        ? local.iter_964.tape_ptr == length(local.iter_964.tape) - 1 ? 0 : local.iter_964.tape_ptr + 1
        : local.iter_964.tape_ptr)

    code_ptr = 1 + (
      local.curr_965.code == "["
        ? local.iter_964.tape[local.iter_964.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_964.code_ptr)] : local.iter_964.code_ptr :
      local.curr_965.code == "]"
        ? local.iter_964.tape[local.iter_964.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_964.code_ptr)] : local.iter_964.code_ptr
        : local.iter_964.code_ptr)

    steps_taken = 1 + local.iter_964.steps_taken
  }
}

locals {
  end_of_code_966 = try(local.iter_965.code_ptr >= length(var.code), true)

  curr_966 = local.end_of_code_966 ? null : {
    code = substr(var.code, local.iter_965.code_ptr, 1)
    input = substr(var.code, local.iter_965.code_ptr, 1) == "," ? substr(local.iter_965.input, 0, 1) : null
  }

  iter_966 = local.end_of_code_966 ? local.iter_965 : {
    input = (local.curr_966.code == ","
      ? substr(local.iter_965.input, 1, -1)
      : local.iter_965.input)

    output = (local.curr_966.code == "."
      ? "${local.iter_965.output}${jsondecode(format("\"\\u%04x\"", local.iter_965.tape[local.iter_965.tape_ptr]))}"
      : local.iter_965.output)
    
    tape = (
      local.curr_966.code == "+"
        ? [for i, b in local.iter_965.tape : (i == local.iter_965.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_966.code == "-"
        ? [for i, b in local.iter_965.tape : (i == local.iter_965.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_966.code == ","
        ? [for i, b in local.iter_965.tape : (i == local.iter_965.tape_ptr ? local.ascii_lookup[local.curr_966.input] : b)]
        : local.iter_965.tape)

    tape_ptr = (
      local.curr_966.code == "<"
        ? local.iter_965.tape_ptr == 0 ? length(local.iter_965.tape) - 1 : local.iter_965.tape_ptr - 1 :
      local.curr_966.code == ">"
        ? local.iter_965.tape_ptr == length(local.iter_965.tape) - 1 ? 0 : local.iter_965.tape_ptr + 1
        : local.iter_965.tape_ptr)

    code_ptr = 1 + (
      local.curr_966.code == "["
        ? local.iter_965.tape[local.iter_965.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_965.code_ptr)] : local.iter_965.code_ptr :
      local.curr_966.code == "]"
        ? local.iter_965.tape[local.iter_965.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_965.code_ptr)] : local.iter_965.code_ptr
        : local.iter_965.code_ptr)

    steps_taken = 1 + local.iter_965.steps_taken
  }
}

locals {
  end_of_code_967 = try(local.iter_966.code_ptr >= length(var.code), true)

  curr_967 = local.end_of_code_967 ? null : {
    code = substr(var.code, local.iter_966.code_ptr, 1)
    input = substr(var.code, local.iter_966.code_ptr, 1) == "," ? substr(local.iter_966.input, 0, 1) : null
  }

  iter_967 = local.end_of_code_967 ? local.iter_966 : {
    input = (local.curr_967.code == ","
      ? substr(local.iter_966.input, 1, -1)
      : local.iter_966.input)

    output = (local.curr_967.code == "."
      ? "${local.iter_966.output}${jsondecode(format("\"\\u%04x\"", local.iter_966.tape[local.iter_966.tape_ptr]))}"
      : local.iter_966.output)
    
    tape = (
      local.curr_967.code == "+"
        ? [for i, b in local.iter_966.tape : (i == local.iter_966.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_967.code == "-"
        ? [for i, b in local.iter_966.tape : (i == local.iter_966.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_967.code == ","
        ? [for i, b in local.iter_966.tape : (i == local.iter_966.tape_ptr ? local.ascii_lookup[local.curr_967.input] : b)]
        : local.iter_966.tape)

    tape_ptr = (
      local.curr_967.code == "<"
        ? local.iter_966.tape_ptr == 0 ? length(local.iter_966.tape) - 1 : local.iter_966.tape_ptr - 1 :
      local.curr_967.code == ">"
        ? local.iter_966.tape_ptr == length(local.iter_966.tape) - 1 ? 0 : local.iter_966.tape_ptr + 1
        : local.iter_966.tape_ptr)

    code_ptr = 1 + (
      local.curr_967.code == "["
        ? local.iter_966.tape[local.iter_966.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_966.code_ptr)] : local.iter_966.code_ptr :
      local.curr_967.code == "]"
        ? local.iter_966.tape[local.iter_966.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_966.code_ptr)] : local.iter_966.code_ptr
        : local.iter_966.code_ptr)

    steps_taken = 1 + local.iter_966.steps_taken
  }
}

locals {
  end_of_code_968 = try(local.iter_967.code_ptr >= length(var.code), true)

  curr_968 = local.end_of_code_968 ? null : {
    code = substr(var.code, local.iter_967.code_ptr, 1)
    input = substr(var.code, local.iter_967.code_ptr, 1) == "," ? substr(local.iter_967.input, 0, 1) : null
  }

  iter_968 = local.end_of_code_968 ? local.iter_967 : {
    input = (local.curr_968.code == ","
      ? substr(local.iter_967.input, 1, -1)
      : local.iter_967.input)

    output = (local.curr_968.code == "."
      ? "${local.iter_967.output}${jsondecode(format("\"\\u%04x\"", local.iter_967.tape[local.iter_967.tape_ptr]))}"
      : local.iter_967.output)
    
    tape = (
      local.curr_968.code == "+"
        ? [for i, b in local.iter_967.tape : (i == local.iter_967.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_968.code == "-"
        ? [for i, b in local.iter_967.tape : (i == local.iter_967.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_968.code == ","
        ? [for i, b in local.iter_967.tape : (i == local.iter_967.tape_ptr ? local.ascii_lookup[local.curr_968.input] : b)]
        : local.iter_967.tape)

    tape_ptr = (
      local.curr_968.code == "<"
        ? local.iter_967.tape_ptr == 0 ? length(local.iter_967.tape) - 1 : local.iter_967.tape_ptr - 1 :
      local.curr_968.code == ">"
        ? local.iter_967.tape_ptr == length(local.iter_967.tape) - 1 ? 0 : local.iter_967.tape_ptr + 1
        : local.iter_967.tape_ptr)

    code_ptr = 1 + (
      local.curr_968.code == "["
        ? local.iter_967.tape[local.iter_967.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_967.code_ptr)] : local.iter_967.code_ptr :
      local.curr_968.code == "]"
        ? local.iter_967.tape[local.iter_967.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_967.code_ptr)] : local.iter_967.code_ptr
        : local.iter_967.code_ptr)

    steps_taken = 1 + local.iter_967.steps_taken
  }
}

locals {
  end_of_code_969 = try(local.iter_968.code_ptr >= length(var.code), true)

  curr_969 = local.end_of_code_969 ? null : {
    code = substr(var.code, local.iter_968.code_ptr, 1)
    input = substr(var.code, local.iter_968.code_ptr, 1) == "," ? substr(local.iter_968.input, 0, 1) : null
  }

  iter_969 = local.end_of_code_969 ? local.iter_968 : {
    input = (local.curr_969.code == ","
      ? substr(local.iter_968.input, 1, -1)
      : local.iter_968.input)

    output = (local.curr_969.code == "."
      ? "${local.iter_968.output}${jsondecode(format("\"\\u%04x\"", local.iter_968.tape[local.iter_968.tape_ptr]))}"
      : local.iter_968.output)
    
    tape = (
      local.curr_969.code == "+"
        ? [for i, b in local.iter_968.tape : (i == local.iter_968.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_969.code == "-"
        ? [for i, b in local.iter_968.tape : (i == local.iter_968.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_969.code == ","
        ? [for i, b in local.iter_968.tape : (i == local.iter_968.tape_ptr ? local.ascii_lookup[local.curr_969.input] : b)]
        : local.iter_968.tape)

    tape_ptr = (
      local.curr_969.code == "<"
        ? local.iter_968.tape_ptr == 0 ? length(local.iter_968.tape) - 1 : local.iter_968.tape_ptr - 1 :
      local.curr_969.code == ">"
        ? local.iter_968.tape_ptr == length(local.iter_968.tape) - 1 ? 0 : local.iter_968.tape_ptr + 1
        : local.iter_968.tape_ptr)

    code_ptr = 1 + (
      local.curr_969.code == "["
        ? local.iter_968.tape[local.iter_968.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_968.code_ptr)] : local.iter_968.code_ptr :
      local.curr_969.code == "]"
        ? local.iter_968.tape[local.iter_968.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_968.code_ptr)] : local.iter_968.code_ptr
        : local.iter_968.code_ptr)

    steps_taken = 1 + local.iter_968.steps_taken
  }
}

locals {
  end_of_code_970 = try(local.iter_969.code_ptr >= length(var.code), true)

  curr_970 = local.end_of_code_970 ? null : {
    code = substr(var.code, local.iter_969.code_ptr, 1)
    input = substr(var.code, local.iter_969.code_ptr, 1) == "," ? substr(local.iter_969.input, 0, 1) : null
  }

  iter_970 = local.end_of_code_970 ? local.iter_969 : {
    input = (local.curr_970.code == ","
      ? substr(local.iter_969.input, 1, -1)
      : local.iter_969.input)

    output = (local.curr_970.code == "."
      ? "${local.iter_969.output}${jsondecode(format("\"\\u%04x\"", local.iter_969.tape[local.iter_969.tape_ptr]))}"
      : local.iter_969.output)
    
    tape = (
      local.curr_970.code == "+"
        ? [for i, b in local.iter_969.tape : (i == local.iter_969.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_970.code == "-"
        ? [for i, b in local.iter_969.tape : (i == local.iter_969.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_970.code == ","
        ? [for i, b in local.iter_969.tape : (i == local.iter_969.tape_ptr ? local.ascii_lookup[local.curr_970.input] : b)]
        : local.iter_969.tape)

    tape_ptr = (
      local.curr_970.code == "<"
        ? local.iter_969.tape_ptr == 0 ? length(local.iter_969.tape) - 1 : local.iter_969.tape_ptr - 1 :
      local.curr_970.code == ">"
        ? local.iter_969.tape_ptr == length(local.iter_969.tape) - 1 ? 0 : local.iter_969.tape_ptr + 1
        : local.iter_969.tape_ptr)

    code_ptr = 1 + (
      local.curr_970.code == "["
        ? local.iter_969.tape[local.iter_969.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_969.code_ptr)] : local.iter_969.code_ptr :
      local.curr_970.code == "]"
        ? local.iter_969.tape[local.iter_969.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_969.code_ptr)] : local.iter_969.code_ptr
        : local.iter_969.code_ptr)

    steps_taken = 1 + local.iter_969.steps_taken
  }
}

locals {
  end_of_code_971 = try(local.iter_970.code_ptr >= length(var.code), true)

  curr_971 = local.end_of_code_971 ? null : {
    code = substr(var.code, local.iter_970.code_ptr, 1)
    input = substr(var.code, local.iter_970.code_ptr, 1) == "," ? substr(local.iter_970.input, 0, 1) : null
  }

  iter_971 = local.end_of_code_971 ? local.iter_970 : {
    input = (local.curr_971.code == ","
      ? substr(local.iter_970.input, 1, -1)
      : local.iter_970.input)

    output = (local.curr_971.code == "."
      ? "${local.iter_970.output}${jsondecode(format("\"\\u%04x\"", local.iter_970.tape[local.iter_970.tape_ptr]))}"
      : local.iter_970.output)
    
    tape = (
      local.curr_971.code == "+"
        ? [for i, b in local.iter_970.tape : (i == local.iter_970.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_971.code == "-"
        ? [for i, b in local.iter_970.tape : (i == local.iter_970.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_971.code == ","
        ? [for i, b in local.iter_970.tape : (i == local.iter_970.tape_ptr ? local.ascii_lookup[local.curr_971.input] : b)]
        : local.iter_970.tape)

    tape_ptr = (
      local.curr_971.code == "<"
        ? local.iter_970.tape_ptr == 0 ? length(local.iter_970.tape) - 1 : local.iter_970.tape_ptr - 1 :
      local.curr_971.code == ">"
        ? local.iter_970.tape_ptr == length(local.iter_970.tape) - 1 ? 0 : local.iter_970.tape_ptr + 1
        : local.iter_970.tape_ptr)

    code_ptr = 1 + (
      local.curr_971.code == "["
        ? local.iter_970.tape[local.iter_970.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_970.code_ptr)] : local.iter_970.code_ptr :
      local.curr_971.code == "]"
        ? local.iter_970.tape[local.iter_970.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_970.code_ptr)] : local.iter_970.code_ptr
        : local.iter_970.code_ptr)

    steps_taken = 1 + local.iter_970.steps_taken
  }
}

locals {
  end_of_code_972 = try(local.iter_971.code_ptr >= length(var.code), true)

  curr_972 = local.end_of_code_972 ? null : {
    code = substr(var.code, local.iter_971.code_ptr, 1)
    input = substr(var.code, local.iter_971.code_ptr, 1) == "," ? substr(local.iter_971.input, 0, 1) : null
  }

  iter_972 = local.end_of_code_972 ? local.iter_971 : {
    input = (local.curr_972.code == ","
      ? substr(local.iter_971.input, 1, -1)
      : local.iter_971.input)

    output = (local.curr_972.code == "."
      ? "${local.iter_971.output}${jsondecode(format("\"\\u%04x\"", local.iter_971.tape[local.iter_971.tape_ptr]))}"
      : local.iter_971.output)
    
    tape = (
      local.curr_972.code == "+"
        ? [for i, b in local.iter_971.tape : (i == local.iter_971.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_972.code == "-"
        ? [for i, b in local.iter_971.tape : (i == local.iter_971.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_972.code == ","
        ? [for i, b in local.iter_971.tape : (i == local.iter_971.tape_ptr ? local.ascii_lookup[local.curr_972.input] : b)]
        : local.iter_971.tape)

    tape_ptr = (
      local.curr_972.code == "<"
        ? local.iter_971.tape_ptr == 0 ? length(local.iter_971.tape) - 1 : local.iter_971.tape_ptr - 1 :
      local.curr_972.code == ">"
        ? local.iter_971.tape_ptr == length(local.iter_971.tape) - 1 ? 0 : local.iter_971.tape_ptr + 1
        : local.iter_971.tape_ptr)

    code_ptr = 1 + (
      local.curr_972.code == "["
        ? local.iter_971.tape[local.iter_971.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_971.code_ptr)] : local.iter_971.code_ptr :
      local.curr_972.code == "]"
        ? local.iter_971.tape[local.iter_971.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_971.code_ptr)] : local.iter_971.code_ptr
        : local.iter_971.code_ptr)

    steps_taken = 1 + local.iter_971.steps_taken
  }
}

locals {
  end_of_code_973 = try(local.iter_972.code_ptr >= length(var.code), true)

  curr_973 = local.end_of_code_973 ? null : {
    code = substr(var.code, local.iter_972.code_ptr, 1)
    input = substr(var.code, local.iter_972.code_ptr, 1) == "," ? substr(local.iter_972.input, 0, 1) : null
  }

  iter_973 = local.end_of_code_973 ? local.iter_972 : {
    input = (local.curr_973.code == ","
      ? substr(local.iter_972.input, 1, -1)
      : local.iter_972.input)

    output = (local.curr_973.code == "."
      ? "${local.iter_972.output}${jsondecode(format("\"\\u%04x\"", local.iter_972.tape[local.iter_972.tape_ptr]))}"
      : local.iter_972.output)
    
    tape = (
      local.curr_973.code == "+"
        ? [for i, b in local.iter_972.tape : (i == local.iter_972.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_973.code == "-"
        ? [for i, b in local.iter_972.tape : (i == local.iter_972.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_973.code == ","
        ? [for i, b in local.iter_972.tape : (i == local.iter_972.tape_ptr ? local.ascii_lookup[local.curr_973.input] : b)]
        : local.iter_972.tape)

    tape_ptr = (
      local.curr_973.code == "<"
        ? local.iter_972.tape_ptr == 0 ? length(local.iter_972.tape) - 1 : local.iter_972.tape_ptr - 1 :
      local.curr_973.code == ">"
        ? local.iter_972.tape_ptr == length(local.iter_972.tape) - 1 ? 0 : local.iter_972.tape_ptr + 1
        : local.iter_972.tape_ptr)

    code_ptr = 1 + (
      local.curr_973.code == "["
        ? local.iter_972.tape[local.iter_972.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_972.code_ptr)] : local.iter_972.code_ptr :
      local.curr_973.code == "]"
        ? local.iter_972.tape[local.iter_972.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_972.code_ptr)] : local.iter_972.code_ptr
        : local.iter_972.code_ptr)

    steps_taken = 1 + local.iter_972.steps_taken
  }
}

locals {
  end_of_code_974 = try(local.iter_973.code_ptr >= length(var.code), true)

  curr_974 = local.end_of_code_974 ? null : {
    code = substr(var.code, local.iter_973.code_ptr, 1)
    input = substr(var.code, local.iter_973.code_ptr, 1) == "," ? substr(local.iter_973.input, 0, 1) : null
  }

  iter_974 = local.end_of_code_974 ? local.iter_973 : {
    input = (local.curr_974.code == ","
      ? substr(local.iter_973.input, 1, -1)
      : local.iter_973.input)

    output = (local.curr_974.code == "."
      ? "${local.iter_973.output}${jsondecode(format("\"\\u%04x\"", local.iter_973.tape[local.iter_973.tape_ptr]))}"
      : local.iter_973.output)
    
    tape = (
      local.curr_974.code == "+"
        ? [for i, b in local.iter_973.tape : (i == local.iter_973.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_974.code == "-"
        ? [for i, b in local.iter_973.tape : (i == local.iter_973.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_974.code == ","
        ? [for i, b in local.iter_973.tape : (i == local.iter_973.tape_ptr ? local.ascii_lookup[local.curr_974.input] : b)]
        : local.iter_973.tape)

    tape_ptr = (
      local.curr_974.code == "<"
        ? local.iter_973.tape_ptr == 0 ? length(local.iter_973.tape) - 1 : local.iter_973.tape_ptr - 1 :
      local.curr_974.code == ">"
        ? local.iter_973.tape_ptr == length(local.iter_973.tape) - 1 ? 0 : local.iter_973.tape_ptr + 1
        : local.iter_973.tape_ptr)

    code_ptr = 1 + (
      local.curr_974.code == "["
        ? local.iter_973.tape[local.iter_973.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_973.code_ptr)] : local.iter_973.code_ptr :
      local.curr_974.code == "]"
        ? local.iter_973.tape[local.iter_973.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_973.code_ptr)] : local.iter_973.code_ptr
        : local.iter_973.code_ptr)

    steps_taken = 1 + local.iter_973.steps_taken
  }
}

locals {
  end_of_code_975 = try(local.iter_974.code_ptr >= length(var.code), true)

  curr_975 = local.end_of_code_975 ? null : {
    code = substr(var.code, local.iter_974.code_ptr, 1)
    input = substr(var.code, local.iter_974.code_ptr, 1) == "," ? substr(local.iter_974.input, 0, 1) : null
  }

  iter_975 = local.end_of_code_975 ? local.iter_974 : {
    input = (local.curr_975.code == ","
      ? substr(local.iter_974.input, 1, -1)
      : local.iter_974.input)

    output = (local.curr_975.code == "."
      ? "${local.iter_974.output}${jsondecode(format("\"\\u%04x\"", local.iter_974.tape[local.iter_974.tape_ptr]))}"
      : local.iter_974.output)
    
    tape = (
      local.curr_975.code == "+"
        ? [for i, b in local.iter_974.tape : (i == local.iter_974.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_975.code == "-"
        ? [for i, b in local.iter_974.tape : (i == local.iter_974.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_975.code == ","
        ? [for i, b in local.iter_974.tape : (i == local.iter_974.tape_ptr ? local.ascii_lookup[local.curr_975.input] : b)]
        : local.iter_974.tape)

    tape_ptr = (
      local.curr_975.code == "<"
        ? local.iter_974.tape_ptr == 0 ? length(local.iter_974.tape) - 1 : local.iter_974.tape_ptr - 1 :
      local.curr_975.code == ">"
        ? local.iter_974.tape_ptr == length(local.iter_974.tape) - 1 ? 0 : local.iter_974.tape_ptr + 1
        : local.iter_974.tape_ptr)

    code_ptr = 1 + (
      local.curr_975.code == "["
        ? local.iter_974.tape[local.iter_974.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_974.code_ptr)] : local.iter_974.code_ptr :
      local.curr_975.code == "]"
        ? local.iter_974.tape[local.iter_974.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_974.code_ptr)] : local.iter_974.code_ptr
        : local.iter_974.code_ptr)

    steps_taken = 1 + local.iter_974.steps_taken
  }
}

locals {
  end_of_code_976 = try(local.iter_975.code_ptr >= length(var.code), true)

  curr_976 = local.end_of_code_976 ? null : {
    code = substr(var.code, local.iter_975.code_ptr, 1)
    input = substr(var.code, local.iter_975.code_ptr, 1) == "," ? substr(local.iter_975.input, 0, 1) : null
  }

  iter_976 = local.end_of_code_976 ? local.iter_975 : {
    input = (local.curr_976.code == ","
      ? substr(local.iter_975.input, 1, -1)
      : local.iter_975.input)

    output = (local.curr_976.code == "."
      ? "${local.iter_975.output}${jsondecode(format("\"\\u%04x\"", local.iter_975.tape[local.iter_975.tape_ptr]))}"
      : local.iter_975.output)
    
    tape = (
      local.curr_976.code == "+"
        ? [for i, b in local.iter_975.tape : (i == local.iter_975.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_976.code == "-"
        ? [for i, b in local.iter_975.tape : (i == local.iter_975.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_976.code == ","
        ? [for i, b in local.iter_975.tape : (i == local.iter_975.tape_ptr ? local.ascii_lookup[local.curr_976.input] : b)]
        : local.iter_975.tape)

    tape_ptr = (
      local.curr_976.code == "<"
        ? local.iter_975.tape_ptr == 0 ? length(local.iter_975.tape) - 1 : local.iter_975.tape_ptr - 1 :
      local.curr_976.code == ">"
        ? local.iter_975.tape_ptr == length(local.iter_975.tape) - 1 ? 0 : local.iter_975.tape_ptr + 1
        : local.iter_975.tape_ptr)

    code_ptr = 1 + (
      local.curr_976.code == "["
        ? local.iter_975.tape[local.iter_975.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_975.code_ptr)] : local.iter_975.code_ptr :
      local.curr_976.code == "]"
        ? local.iter_975.tape[local.iter_975.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_975.code_ptr)] : local.iter_975.code_ptr
        : local.iter_975.code_ptr)

    steps_taken = 1 + local.iter_975.steps_taken
  }
}

locals {
  end_of_code_977 = try(local.iter_976.code_ptr >= length(var.code), true)

  curr_977 = local.end_of_code_977 ? null : {
    code = substr(var.code, local.iter_976.code_ptr, 1)
    input = substr(var.code, local.iter_976.code_ptr, 1) == "," ? substr(local.iter_976.input, 0, 1) : null
  }

  iter_977 = local.end_of_code_977 ? local.iter_976 : {
    input = (local.curr_977.code == ","
      ? substr(local.iter_976.input, 1, -1)
      : local.iter_976.input)

    output = (local.curr_977.code == "."
      ? "${local.iter_976.output}${jsondecode(format("\"\\u%04x\"", local.iter_976.tape[local.iter_976.tape_ptr]))}"
      : local.iter_976.output)
    
    tape = (
      local.curr_977.code == "+"
        ? [for i, b in local.iter_976.tape : (i == local.iter_976.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_977.code == "-"
        ? [for i, b in local.iter_976.tape : (i == local.iter_976.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_977.code == ","
        ? [for i, b in local.iter_976.tape : (i == local.iter_976.tape_ptr ? local.ascii_lookup[local.curr_977.input] : b)]
        : local.iter_976.tape)

    tape_ptr = (
      local.curr_977.code == "<"
        ? local.iter_976.tape_ptr == 0 ? length(local.iter_976.tape) - 1 : local.iter_976.tape_ptr - 1 :
      local.curr_977.code == ">"
        ? local.iter_976.tape_ptr == length(local.iter_976.tape) - 1 ? 0 : local.iter_976.tape_ptr + 1
        : local.iter_976.tape_ptr)

    code_ptr = 1 + (
      local.curr_977.code == "["
        ? local.iter_976.tape[local.iter_976.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_976.code_ptr)] : local.iter_976.code_ptr :
      local.curr_977.code == "]"
        ? local.iter_976.tape[local.iter_976.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_976.code_ptr)] : local.iter_976.code_ptr
        : local.iter_976.code_ptr)

    steps_taken = 1 + local.iter_976.steps_taken
  }
}

locals {
  end_of_code_978 = try(local.iter_977.code_ptr >= length(var.code), true)

  curr_978 = local.end_of_code_978 ? null : {
    code = substr(var.code, local.iter_977.code_ptr, 1)
    input = substr(var.code, local.iter_977.code_ptr, 1) == "," ? substr(local.iter_977.input, 0, 1) : null
  }

  iter_978 = local.end_of_code_978 ? local.iter_977 : {
    input = (local.curr_978.code == ","
      ? substr(local.iter_977.input, 1, -1)
      : local.iter_977.input)

    output = (local.curr_978.code == "."
      ? "${local.iter_977.output}${jsondecode(format("\"\\u%04x\"", local.iter_977.tape[local.iter_977.tape_ptr]))}"
      : local.iter_977.output)
    
    tape = (
      local.curr_978.code == "+"
        ? [for i, b in local.iter_977.tape : (i == local.iter_977.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_978.code == "-"
        ? [for i, b in local.iter_977.tape : (i == local.iter_977.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_978.code == ","
        ? [for i, b in local.iter_977.tape : (i == local.iter_977.tape_ptr ? local.ascii_lookup[local.curr_978.input] : b)]
        : local.iter_977.tape)

    tape_ptr = (
      local.curr_978.code == "<"
        ? local.iter_977.tape_ptr == 0 ? length(local.iter_977.tape) - 1 : local.iter_977.tape_ptr - 1 :
      local.curr_978.code == ">"
        ? local.iter_977.tape_ptr == length(local.iter_977.tape) - 1 ? 0 : local.iter_977.tape_ptr + 1
        : local.iter_977.tape_ptr)

    code_ptr = 1 + (
      local.curr_978.code == "["
        ? local.iter_977.tape[local.iter_977.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_977.code_ptr)] : local.iter_977.code_ptr :
      local.curr_978.code == "]"
        ? local.iter_977.tape[local.iter_977.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_977.code_ptr)] : local.iter_977.code_ptr
        : local.iter_977.code_ptr)

    steps_taken = 1 + local.iter_977.steps_taken
  }
}

locals {
  end_of_code_979 = try(local.iter_978.code_ptr >= length(var.code), true)

  curr_979 = local.end_of_code_979 ? null : {
    code = substr(var.code, local.iter_978.code_ptr, 1)
    input = substr(var.code, local.iter_978.code_ptr, 1) == "," ? substr(local.iter_978.input, 0, 1) : null
  }

  iter_979 = local.end_of_code_979 ? local.iter_978 : {
    input = (local.curr_979.code == ","
      ? substr(local.iter_978.input, 1, -1)
      : local.iter_978.input)

    output = (local.curr_979.code == "."
      ? "${local.iter_978.output}${jsondecode(format("\"\\u%04x\"", local.iter_978.tape[local.iter_978.tape_ptr]))}"
      : local.iter_978.output)
    
    tape = (
      local.curr_979.code == "+"
        ? [for i, b in local.iter_978.tape : (i == local.iter_978.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_979.code == "-"
        ? [for i, b in local.iter_978.tape : (i == local.iter_978.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_979.code == ","
        ? [for i, b in local.iter_978.tape : (i == local.iter_978.tape_ptr ? local.ascii_lookup[local.curr_979.input] : b)]
        : local.iter_978.tape)

    tape_ptr = (
      local.curr_979.code == "<"
        ? local.iter_978.tape_ptr == 0 ? length(local.iter_978.tape) - 1 : local.iter_978.tape_ptr - 1 :
      local.curr_979.code == ">"
        ? local.iter_978.tape_ptr == length(local.iter_978.tape) - 1 ? 0 : local.iter_978.tape_ptr + 1
        : local.iter_978.tape_ptr)

    code_ptr = 1 + (
      local.curr_979.code == "["
        ? local.iter_978.tape[local.iter_978.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_978.code_ptr)] : local.iter_978.code_ptr :
      local.curr_979.code == "]"
        ? local.iter_978.tape[local.iter_978.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_978.code_ptr)] : local.iter_978.code_ptr
        : local.iter_978.code_ptr)

    steps_taken = 1 + local.iter_978.steps_taken
  }
}

locals {
  end_of_code_980 = try(local.iter_979.code_ptr >= length(var.code), true)

  curr_980 = local.end_of_code_980 ? null : {
    code = substr(var.code, local.iter_979.code_ptr, 1)
    input = substr(var.code, local.iter_979.code_ptr, 1) == "," ? substr(local.iter_979.input, 0, 1) : null
  }

  iter_980 = local.end_of_code_980 ? local.iter_979 : {
    input = (local.curr_980.code == ","
      ? substr(local.iter_979.input, 1, -1)
      : local.iter_979.input)

    output = (local.curr_980.code == "."
      ? "${local.iter_979.output}${jsondecode(format("\"\\u%04x\"", local.iter_979.tape[local.iter_979.tape_ptr]))}"
      : local.iter_979.output)
    
    tape = (
      local.curr_980.code == "+"
        ? [for i, b in local.iter_979.tape : (i == local.iter_979.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_980.code == "-"
        ? [for i, b in local.iter_979.tape : (i == local.iter_979.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_980.code == ","
        ? [for i, b in local.iter_979.tape : (i == local.iter_979.tape_ptr ? local.ascii_lookup[local.curr_980.input] : b)]
        : local.iter_979.tape)

    tape_ptr = (
      local.curr_980.code == "<"
        ? local.iter_979.tape_ptr == 0 ? length(local.iter_979.tape) - 1 : local.iter_979.tape_ptr - 1 :
      local.curr_980.code == ">"
        ? local.iter_979.tape_ptr == length(local.iter_979.tape) - 1 ? 0 : local.iter_979.tape_ptr + 1
        : local.iter_979.tape_ptr)

    code_ptr = 1 + (
      local.curr_980.code == "["
        ? local.iter_979.tape[local.iter_979.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_979.code_ptr)] : local.iter_979.code_ptr :
      local.curr_980.code == "]"
        ? local.iter_979.tape[local.iter_979.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_979.code_ptr)] : local.iter_979.code_ptr
        : local.iter_979.code_ptr)

    steps_taken = 1 + local.iter_979.steps_taken
  }
}

locals {
  end_of_code_981 = try(local.iter_980.code_ptr >= length(var.code), true)

  curr_981 = local.end_of_code_981 ? null : {
    code = substr(var.code, local.iter_980.code_ptr, 1)
    input = substr(var.code, local.iter_980.code_ptr, 1) == "," ? substr(local.iter_980.input, 0, 1) : null
  }

  iter_981 = local.end_of_code_981 ? local.iter_980 : {
    input = (local.curr_981.code == ","
      ? substr(local.iter_980.input, 1, -1)
      : local.iter_980.input)

    output = (local.curr_981.code == "."
      ? "${local.iter_980.output}${jsondecode(format("\"\\u%04x\"", local.iter_980.tape[local.iter_980.tape_ptr]))}"
      : local.iter_980.output)
    
    tape = (
      local.curr_981.code == "+"
        ? [for i, b in local.iter_980.tape : (i == local.iter_980.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_981.code == "-"
        ? [for i, b in local.iter_980.tape : (i == local.iter_980.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_981.code == ","
        ? [for i, b in local.iter_980.tape : (i == local.iter_980.tape_ptr ? local.ascii_lookup[local.curr_981.input] : b)]
        : local.iter_980.tape)

    tape_ptr = (
      local.curr_981.code == "<"
        ? local.iter_980.tape_ptr == 0 ? length(local.iter_980.tape) - 1 : local.iter_980.tape_ptr - 1 :
      local.curr_981.code == ">"
        ? local.iter_980.tape_ptr == length(local.iter_980.tape) - 1 ? 0 : local.iter_980.tape_ptr + 1
        : local.iter_980.tape_ptr)

    code_ptr = 1 + (
      local.curr_981.code == "["
        ? local.iter_980.tape[local.iter_980.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_980.code_ptr)] : local.iter_980.code_ptr :
      local.curr_981.code == "]"
        ? local.iter_980.tape[local.iter_980.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_980.code_ptr)] : local.iter_980.code_ptr
        : local.iter_980.code_ptr)

    steps_taken = 1 + local.iter_980.steps_taken
  }
}

locals {
  end_of_code_982 = try(local.iter_981.code_ptr >= length(var.code), true)

  curr_982 = local.end_of_code_982 ? null : {
    code = substr(var.code, local.iter_981.code_ptr, 1)
    input = substr(var.code, local.iter_981.code_ptr, 1) == "," ? substr(local.iter_981.input, 0, 1) : null
  }

  iter_982 = local.end_of_code_982 ? local.iter_981 : {
    input = (local.curr_982.code == ","
      ? substr(local.iter_981.input, 1, -1)
      : local.iter_981.input)

    output = (local.curr_982.code == "."
      ? "${local.iter_981.output}${jsondecode(format("\"\\u%04x\"", local.iter_981.tape[local.iter_981.tape_ptr]))}"
      : local.iter_981.output)
    
    tape = (
      local.curr_982.code == "+"
        ? [for i, b in local.iter_981.tape : (i == local.iter_981.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_982.code == "-"
        ? [for i, b in local.iter_981.tape : (i == local.iter_981.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_982.code == ","
        ? [for i, b in local.iter_981.tape : (i == local.iter_981.tape_ptr ? local.ascii_lookup[local.curr_982.input] : b)]
        : local.iter_981.tape)

    tape_ptr = (
      local.curr_982.code == "<"
        ? local.iter_981.tape_ptr == 0 ? length(local.iter_981.tape) - 1 : local.iter_981.tape_ptr - 1 :
      local.curr_982.code == ">"
        ? local.iter_981.tape_ptr == length(local.iter_981.tape) - 1 ? 0 : local.iter_981.tape_ptr + 1
        : local.iter_981.tape_ptr)

    code_ptr = 1 + (
      local.curr_982.code == "["
        ? local.iter_981.tape[local.iter_981.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_981.code_ptr)] : local.iter_981.code_ptr :
      local.curr_982.code == "]"
        ? local.iter_981.tape[local.iter_981.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_981.code_ptr)] : local.iter_981.code_ptr
        : local.iter_981.code_ptr)

    steps_taken = 1 + local.iter_981.steps_taken
  }
}

locals {
  end_of_code_983 = try(local.iter_982.code_ptr >= length(var.code), true)

  curr_983 = local.end_of_code_983 ? null : {
    code = substr(var.code, local.iter_982.code_ptr, 1)
    input = substr(var.code, local.iter_982.code_ptr, 1) == "," ? substr(local.iter_982.input, 0, 1) : null
  }

  iter_983 = local.end_of_code_983 ? local.iter_982 : {
    input = (local.curr_983.code == ","
      ? substr(local.iter_982.input, 1, -1)
      : local.iter_982.input)

    output = (local.curr_983.code == "."
      ? "${local.iter_982.output}${jsondecode(format("\"\\u%04x\"", local.iter_982.tape[local.iter_982.tape_ptr]))}"
      : local.iter_982.output)
    
    tape = (
      local.curr_983.code == "+"
        ? [for i, b in local.iter_982.tape : (i == local.iter_982.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_983.code == "-"
        ? [for i, b in local.iter_982.tape : (i == local.iter_982.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_983.code == ","
        ? [for i, b in local.iter_982.tape : (i == local.iter_982.tape_ptr ? local.ascii_lookup[local.curr_983.input] : b)]
        : local.iter_982.tape)

    tape_ptr = (
      local.curr_983.code == "<"
        ? local.iter_982.tape_ptr == 0 ? length(local.iter_982.tape) - 1 : local.iter_982.tape_ptr - 1 :
      local.curr_983.code == ">"
        ? local.iter_982.tape_ptr == length(local.iter_982.tape) - 1 ? 0 : local.iter_982.tape_ptr + 1
        : local.iter_982.tape_ptr)

    code_ptr = 1 + (
      local.curr_983.code == "["
        ? local.iter_982.tape[local.iter_982.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_982.code_ptr)] : local.iter_982.code_ptr :
      local.curr_983.code == "]"
        ? local.iter_982.tape[local.iter_982.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_982.code_ptr)] : local.iter_982.code_ptr
        : local.iter_982.code_ptr)

    steps_taken = 1 + local.iter_982.steps_taken
  }
}

locals {
  end_of_code_984 = try(local.iter_983.code_ptr >= length(var.code), true)

  curr_984 = local.end_of_code_984 ? null : {
    code = substr(var.code, local.iter_983.code_ptr, 1)
    input = substr(var.code, local.iter_983.code_ptr, 1) == "," ? substr(local.iter_983.input, 0, 1) : null
  }

  iter_984 = local.end_of_code_984 ? local.iter_983 : {
    input = (local.curr_984.code == ","
      ? substr(local.iter_983.input, 1, -1)
      : local.iter_983.input)

    output = (local.curr_984.code == "."
      ? "${local.iter_983.output}${jsondecode(format("\"\\u%04x\"", local.iter_983.tape[local.iter_983.tape_ptr]))}"
      : local.iter_983.output)
    
    tape = (
      local.curr_984.code == "+"
        ? [for i, b in local.iter_983.tape : (i == local.iter_983.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_984.code == "-"
        ? [for i, b in local.iter_983.tape : (i == local.iter_983.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_984.code == ","
        ? [for i, b in local.iter_983.tape : (i == local.iter_983.tape_ptr ? local.ascii_lookup[local.curr_984.input] : b)]
        : local.iter_983.tape)

    tape_ptr = (
      local.curr_984.code == "<"
        ? local.iter_983.tape_ptr == 0 ? length(local.iter_983.tape) - 1 : local.iter_983.tape_ptr - 1 :
      local.curr_984.code == ">"
        ? local.iter_983.tape_ptr == length(local.iter_983.tape) - 1 ? 0 : local.iter_983.tape_ptr + 1
        : local.iter_983.tape_ptr)

    code_ptr = 1 + (
      local.curr_984.code == "["
        ? local.iter_983.tape[local.iter_983.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_983.code_ptr)] : local.iter_983.code_ptr :
      local.curr_984.code == "]"
        ? local.iter_983.tape[local.iter_983.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_983.code_ptr)] : local.iter_983.code_ptr
        : local.iter_983.code_ptr)

    steps_taken = 1 + local.iter_983.steps_taken
  }
}

locals {
  end_of_code_985 = try(local.iter_984.code_ptr >= length(var.code), true)

  curr_985 = local.end_of_code_985 ? null : {
    code = substr(var.code, local.iter_984.code_ptr, 1)
    input = substr(var.code, local.iter_984.code_ptr, 1) == "," ? substr(local.iter_984.input, 0, 1) : null
  }

  iter_985 = local.end_of_code_985 ? local.iter_984 : {
    input = (local.curr_985.code == ","
      ? substr(local.iter_984.input, 1, -1)
      : local.iter_984.input)

    output = (local.curr_985.code == "."
      ? "${local.iter_984.output}${jsondecode(format("\"\\u%04x\"", local.iter_984.tape[local.iter_984.tape_ptr]))}"
      : local.iter_984.output)
    
    tape = (
      local.curr_985.code == "+"
        ? [for i, b in local.iter_984.tape : (i == local.iter_984.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_985.code == "-"
        ? [for i, b in local.iter_984.tape : (i == local.iter_984.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_985.code == ","
        ? [for i, b in local.iter_984.tape : (i == local.iter_984.tape_ptr ? local.ascii_lookup[local.curr_985.input] : b)]
        : local.iter_984.tape)

    tape_ptr = (
      local.curr_985.code == "<"
        ? local.iter_984.tape_ptr == 0 ? length(local.iter_984.tape) - 1 : local.iter_984.tape_ptr - 1 :
      local.curr_985.code == ">"
        ? local.iter_984.tape_ptr == length(local.iter_984.tape) - 1 ? 0 : local.iter_984.tape_ptr + 1
        : local.iter_984.tape_ptr)

    code_ptr = 1 + (
      local.curr_985.code == "["
        ? local.iter_984.tape[local.iter_984.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_984.code_ptr)] : local.iter_984.code_ptr :
      local.curr_985.code == "]"
        ? local.iter_984.tape[local.iter_984.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_984.code_ptr)] : local.iter_984.code_ptr
        : local.iter_984.code_ptr)

    steps_taken = 1 + local.iter_984.steps_taken
  }
}

locals {
  end_of_code_986 = try(local.iter_985.code_ptr >= length(var.code), true)

  curr_986 = local.end_of_code_986 ? null : {
    code = substr(var.code, local.iter_985.code_ptr, 1)
    input = substr(var.code, local.iter_985.code_ptr, 1) == "," ? substr(local.iter_985.input, 0, 1) : null
  }

  iter_986 = local.end_of_code_986 ? local.iter_985 : {
    input = (local.curr_986.code == ","
      ? substr(local.iter_985.input, 1, -1)
      : local.iter_985.input)

    output = (local.curr_986.code == "."
      ? "${local.iter_985.output}${jsondecode(format("\"\\u%04x\"", local.iter_985.tape[local.iter_985.tape_ptr]))}"
      : local.iter_985.output)
    
    tape = (
      local.curr_986.code == "+"
        ? [for i, b in local.iter_985.tape : (i == local.iter_985.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_986.code == "-"
        ? [for i, b in local.iter_985.tape : (i == local.iter_985.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_986.code == ","
        ? [for i, b in local.iter_985.tape : (i == local.iter_985.tape_ptr ? local.ascii_lookup[local.curr_986.input] : b)]
        : local.iter_985.tape)

    tape_ptr = (
      local.curr_986.code == "<"
        ? local.iter_985.tape_ptr == 0 ? length(local.iter_985.tape) - 1 : local.iter_985.tape_ptr - 1 :
      local.curr_986.code == ">"
        ? local.iter_985.tape_ptr == length(local.iter_985.tape) - 1 ? 0 : local.iter_985.tape_ptr + 1
        : local.iter_985.tape_ptr)

    code_ptr = 1 + (
      local.curr_986.code == "["
        ? local.iter_985.tape[local.iter_985.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_985.code_ptr)] : local.iter_985.code_ptr :
      local.curr_986.code == "]"
        ? local.iter_985.tape[local.iter_985.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_985.code_ptr)] : local.iter_985.code_ptr
        : local.iter_985.code_ptr)

    steps_taken = 1 + local.iter_985.steps_taken
  }
}

locals {
  end_of_code_987 = try(local.iter_986.code_ptr >= length(var.code), true)

  curr_987 = local.end_of_code_987 ? null : {
    code = substr(var.code, local.iter_986.code_ptr, 1)
    input = substr(var.code, local.iter_986.code_ptr, 1) == "," ? substr(local.iter_986.input, 0, 1) : null
  }

  iter_987 = local.end_of_code_987 ? local.iter_986 : {
    input = (local.curr_987.code == ","
      ? substr(local.iter_986.input, 1, -1)
      : local.iter_986.input)

    output = (local.curr_987.code == "."
      ? "${local.iter_986.output}${jsondecode(format("\"\\u%04x\"", local.iter_986.tape[local.iter_986.tape_ptr]))}"
      : local.iter_986.output)
    
    tape = (
      local.curr_987.code == "+"
        ? [for i, b in local.iter_986.tape : (i == local.iter_986.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_987.code == "-"
        ? [for i, b in local.iter_986.tape : (i == local.iter_986.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_987.code == ","
        ? [for i, b in local.iter_986.tape : (i == local.iter_986.tape_ptr ? local.ascii_lookup[local.curr_987.input] : b)]
        : local.iter_986.tape)

    tape_ptr = (
      local.curr_987.code == "<"
        ? local.iter_986.tape_ptr == 0 ? length(local.iter_986.tape) - 1 : local.iter_986.tape_ptr - 1 :
      local.curr_987.code == ">"
        ? local.iter_986.tape_ptr == length(local.iter_986.tape) - 1 ? 0 : local.iter_986.tape_ptr + 1
        : local.iter_986.tape_ptr)

    code_ptr = 1 + (
      local.curr_987.code == "["
        ? local.iter_986.tape[local.iter_986.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_986.code_ptr)] : local.iter_986.code_ptr :
      local.curr_987.code == "]"
        ? local.iter_986.tape[local.iter_986.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_986.code_ptr)] : local.iter_986.code_ptr
        : local.iter_986.code_ptr)

    steps_taken = 1 + local.iter_986.steps_taken
  }
}

locals {
  end_of_code_988 = try(local.iter_987.code_ptr >= length(var.code), true)

  curr_988 = local.end_of_code_988 ? null : {
    code = substr(var.code, local.iter_987.code_ptr, 1)
    input = substr(var.code, local.iter_987.code_ptr, 1) == "," ? substr(local.iter_987.input, 0, 1) : null
  }

  iter_988 = local.end_of_code_988 ? local.iter_987 : {
    input = (local.curr_988.code == ","
      ? substr(local.iter_987.input, 1, -1)
      : local.iter_987.input)

    output = (local.curr_988.code == "."
      ? "${local.iter_987.output}${jsondecode(format("\"\\u%04x\"", local.iter_987.tape[local.iter_987.tape_ptr]))}"
      : local.iter_987.output)
    
    tape = (
      local.curr_988.code == "+"
        ? [for i, b in local.iter_987.tape : (i == local.iter_987.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_988.code == "-"
        ? [for i, b in local.iter_987.tape : (i == local.iter_987.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_988.code == ","
        ? [for i, b in local.iter_987.tape : (i == local.iter_987.tape_ptr ? local.ascii_lookup[local.curr_988.input] : b)]
        : local.iter_987.tape)

    tape_ptr = (
      local.curr_988.code == "<"
        ? local.iter_987.tape_ptr == 0 ? length(local.iter_987.tape) - 1 : local.iter_987.tape_ptr - 1 :
      local.curr_988.code == ">"
        ? local.iter_987.tape_ptr == length(local.iter_987.tape) - 1 ? 0 : local.iter_987.tape_ptr + 1
        : local.iter_987.tape_ptr)

    code_ptr = 1 + (
      local.curr_988.code == "["
        ? local.iter_987.tape[local.iter_987.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_987.code_ptr)] : local.iter_987.code_ptr :
      local.curr_988.code == "]"
        ? local.iter_987.tape[local.iter_987.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_987.code_ptr)] : local.iter_987.code_ptr
        : local.iter_987.code_ptr)

    steps_taken = 1 + local.iter_987.steps_taken
  }
}

locals {
  end_of_code_989 = try(local.iter_988.code_ptr >= length(var.code), true)

  curr_989 = local.end_of_code_989 ? null : {
    code = substr(var.code, local.iter_988.code_ptr, 1)
    input = substr(var.code, local.iter_988.code_ptr, 1) == "," ? substr(local.iter_988.input, 0, 1) : null
  }

  iter_989 = local.end_of_code_989 ? local.iter_988 : {
    input = (local.curr_989.code == ","
      ? substr(local.iter_988.input, 1, -1)
      : local.iter_988.input)

    output = (local.curr_989.code == "."
      ? "${local.iter_988.output}${jsondecode(format("\"\\u%04x\"", local.iter_988.tape[local.iter_988.tape_ptr]))}"
      : local.iter_988.output)
    
    tape = (
      local.curr_989.code == "+"
        ? [for i, b in local.iter_988.tape : (i == local.iter_988.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_989.code == "-"
        ? [for i, b in local.iter_988.tape : (i == local.iter_988.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_989.code == ","
        ? [for i, b in local.iter_988.tape : (i == local.iter_988.tape_ptr ? local.ascii_lookup[local.curr_989.input] : b)]
        : local.iter_988.tape)

    tape_ptr = (
      local.curr_989.code == "<"
        ? local.iter_988.tape_ptr == 0 ? length(local.iter_988.tape) - 1 : local.iter_988.tape_ptr - 1 :
      local.curr_989.code == ">"
        ? local.iter_988.tape_ptr == length(local.iter_988.tape) - 1 ? 0 : local.iter_988.tape_ptr + 1
        : local.iter_988.tape_ptr)

    code_ptr = 1 + (
      local.curr_989.code == "["
        ? local.iter_988.tape[local.iter_988.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_988.code_ptr)] : local.iter_988.code_ptr :
      local.curr_989.code == "]"
        ? local.iter_988.tape[local.iter_988.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_988.code_ptr)] : local.iter_988.code_ptr
        : local.iter_988.code_ptr)

    steps_taken = 1 + local.iter_988.steps_taken
  }
}

locals {
  end_of_code_990 = try(local.iter_989.code_ptr >= length(var.code), true)

  curr_990 = local.end_of_code_990 ? null : {
    code = substr(var.code, local.iter_989.code_ptr, 1)
    input = substr(var.code, local.iter_989.code_ptr, 1) == "," ? substr(local.iter_989.input, 0, 1) : null
  }

  iter_990 = local.end_of_code_990 ? local.iter_989 : {
    input = (local.curr_990.code == ","
      ? substr(local.iter_989.input, 1, -1)
      : local.iter_989.input)

    output = (local.curr_990.code == "."
      ? "${local.iter_989.output}${jsondecode(format("\"\\u%04x\"", local.iter_989.tape[local.iter_989.tape_ptr]))}"
      : local.iter_989.output)
    
    tape = (
      local.curr_990.code == "+"
        ? [for i, b in local.iter_989.tape : (i == local.iter_989.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_990.code == "-"
        ? [for i, b in local.iter_989.tape : (i == local.iter_989.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_990.code == ","
        ? [for i, b in local.iter_989.tape : (i == local.iter_989.tape_ptr ? local.ascii_lookup[local.curr_990.input] : b)]
        : local.iter_989.tape)

    tape_ptr = (
      local.curr_990.code == "<"
        ? local.iter_989.tape_ptr == 0 ? length(local.iter_989.tape) - 1 : local.iter_989.tape_ptr - 1 :
      local.curr_990.code == ">"
        ? local.iter_989.tape_ptr == length(local.iter_989.tape) - 1 ? 0 : local.iter_989.tape_ptr + 1
        : local.iter_989.tape_ptr)

    code_ptr = 1 + (
      local.curr_990.code == "["
        ? local.iter_989.tape[local.iter_989.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_989.code_ptr)] : local.iter_989.code_ptr :
      local.curr_990.code == "]"
        ? local.iter_989.tape[local.iter_989.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_989.code_ptr)] : local.iter_989.code_ptr
        : local.iter_989.code_ptr)

    steps_taken = 1 + local.iter_989.steps_taken
  }
}

locals {
  end_of_code_991 = try(local.iter_990.code_ptr >= length(var.code), true)

  curr_991 = local.end_of_code_991 ? null : {
    code = substr(var.code, local.iter_990.code_ptr, 1)
    input = substr(var.code, local.iter_990.code_ptr, 1) == "," ? substr(local.iter_990.input, 0, 1) : null
  }

  iter_991 = local.end_of_code_991 ? local.iter_990 : {
    input = (local.curr_991.code == ","
      ? substr(local.iter_990.input, 1, -1)
      : local.iter_990.input)

    output = (local.curr_991.code == "."
      ? "${local.iter_990.output}${jsondecode(format("\"\\u%04x\"", local.iter_990.tape[local.iter_990.tape_ptr]))}"
      : local.iter_990.output)
    
    tape = (
      local.curr_991.code == "+"
        ? [for i, b in local.iter_990.tape : (i == local.iter_990.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_991.code == "-"
        ? [for i, b in local.iter_990.tape : (i == local.iter_990.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_991.code == ","
        ? [for i, b in local.iter_990.tape : (i == local.iter_990.tape_ptr ? local.ascii_lookup[local.curr_991.input] : b)]
        : local.iter_990.tape)

    tape_ptr = (
      local.curr_991.code == "<"
        ? local.iter_990.tape_ptr == 0 ? length(local.iter_990.tape) - 1 : local.iter_990.tape_ptr - 1 :
      local.curr_991.code == ">"
        ? local.iter_990.tape_ptr == length(local.iter_990.tape) - 1 ? 0 : local.iter_990.tape_ptr + 1
        : local.iter_990.tape_ptr)

    code_ptr = 1 + (
      local.curr_991.code == "["
        ? local.iter_990.tape[local.iter_990.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_990.code_ptr)] : local.iter_990.code_ptr :
      local.curr_991.code == "]"
        ? local.iter_990.tape[local.iter_990.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_990.code_ptr)] : local.iter_990.code_ptr
        : local.iter_990.code_ptr)

    steps_taken = 1 + local.iter_990.steps_taken
  }
}

locals {
  end_of_code_992 = try(local.iter_991.code_ptr >= length(var.code), true)

  curr_992 = local.end_of_code_992 ? null : {
    code = substr(var.code, local.iter_991.code_ptr, 1)
    input = substr(var.code, local.iter_991.code_ptr, 1) == "," ? substr(local.iter_991.input, 0, 1) : null
  }

  iter_992 = local.end_of_code_992 ? local.iter_991 : {
    input = (local.curr_992.code == ","
      ? substr(local.iter_991.input, 1, -1)
      : local.iter_991.input)

    output = (local.curr_992.code == "."
      ? "${local.iter_991.output}${jsondecode(format("\"\\u%04x\"", local.iter_991.tape[local.iter_991.tape_ptr]))}"
      : local.iter_991.output)
    
    tape = (
      local.curr_992.code == "+"
        ? [for i, b in local.iter_991.tape : (i == local.iter_991.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_992.code == "-"
        ? [for i, b in local.iter_991.tape : (i == local.iter_991.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_992.code == ","
        ? [for i, b in local.iter_991.tape : (i == local.iter_991.tape_ptr ? local.ascii_lookup[local.curr_992.input] : b)]
        : local.iter_991.tape)

    tape_ptr = (
      local.curr_992.code == "<"
        ? local.iter_991.tape_ptr == 0 ? length(local.iter_991.tape) - 1 : local.iter_991.tape_ptr - 1 :
      local.curr_992.code == ">"
        ? local.iter_991.tape_ptr == length(local.iter_991.tape) - 1 ? 0 : local.iter_991.tape_ptr + 1
        : local.iter_991.tape_ptr)

    code_ptr = 1 + (
      local.curr_992.code == "["
        ? local.iter_991.tape[local.iter_991.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_991.code_ptr)] : local.iter_991.code_ptr :
      local.curr_992.code == "]"
        ? local.iter_991.tape[local.iter_991.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_991.code_ptr)] : local.iter_991.code_ptr
        : local.iter_991.code_ptr)

    steps_taken = 1 + local.iter_991.steps_taken
  }
}

locals {
  end_of_code_993 = try(local.iter_992.code_ptr >= length(var.code), true)

  curr_993 = local.end_of_code_993 ? null : {
    code = substr(var.code, local.iter_992.code_ptr, 1)
    input = substr(var.code, local.iter_992.code_ptr, 1) == "," ? substr(local.iter_992.input, 0, 1) : null
  }

  iter_993 = local.end_of_code_993 ? local.iter_992 : {
    input = (local.curr_993.code == ","
      ? substr(local.iter_992.input, 1, -1)
      : local.iter_992.input)

    output = (local.curr_993.code == "."
      ? "${local.iter_992.output}${jsondecode(format("\"\\u%04x\"", local.iter_992.tape[local.iter_992.tape_ptr]))}"
      : local.iter_992.output)
    
    tape = (
      local.curr_993.code == "+"
        ? [for i, b in local.iter_992.tape : (i == local.iter_992.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_993.code == "-"
        ? [for i, b in local.iter_992.tape : (i == local.iter_992.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_993.code == ","
        ? [for i, b in local.iter_992.tape : (i == local.iter_992.tape_ptr ? local.ascii_lookup[local.curr_993.input] : b)]
        : local.iter_992.tape)

    tape_ptr = (
      local.curr_993.code == "<"
        ? local.iter_992.tape_ptr == 0 ? length(local.iter_992.tape) - 1 : local.iter_992.tape_ptr - 1 :
      local.curr_993.code == ">"
        ? local.iter_992.tape_ptr == length(local.iter_992.tape) - 1 ? 0 : local.iter_992.tape_ptr + 1
        : local.iter_992.tape_ptr)

    code_ptr = 1 + (
      local.curr_993.code == "["
        ? local.iter_992.tape[local.iter_992.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_992.code_ptr)] : local.iter_992.code_ptr :
      local.curr_993.code == "]"
        ? local.iter_992.tape[local.iter_992.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_992.code_ptr)] : local.iter_992.code_ptr
        : local.iter_992.code_ptr)

    steps_taken = 1 + local.iter_992.steps_taken
  }
}

locals {
  end_of_code_994 = try(local.iter_993.code_ptr >= length(var.code), true)

  curr_994 = local.end_of_code_994 ? null : {
    code = substr(var.code, local.iter_993.code_ptr, 1)
    input = substr(var.code, local.iter_993.code_ptr, 1) == "," ? substr(local.iter_993.input, 0, 1) : null
  }

  iter_994 = local.end_of_code_994 ? local.iter_993 : {
    input = (local.curr_994.code == ","
      ? substr(local.iter_993.input, 1, -1)
      : local.iter_993.input)

    output = (local.curr_994.code == "."
      ? "${local.iter_993.output}${jsondecode(format("\"\\u%04x\"", local.iter_993.tape[local.iter_993.tape_ptr]))}"
      : local.iter_993.output)
    
    tape = (
      local.curr_994.code == "+"
        ? [for i, b in local.iter_993.tape : (i == local.iter_993.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_994.code == "-"
        ? [for i, b in local.iter_993.tape : (i == local.iter_993.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_994.code == ","
        ? [for i, b in local.iter_993.tape : (i == local.iter_993.tape_ptr ? local.ascii_lookup[local.curr_994.input] : b)]
        : local.iter_993.tape)

    tape_ptr = (
      local.curr_994.code == "<"
        ? local.iter_993.tape_ptr == 0 ? length(local.iter_993.tape) - 1 : local.iter_993.tape_ptr - 1 :
      local.curr_994.code == ">"
        ? local.iter_993.tape_ptr == length(local.iter_993.tape) - 1 ? 0 : local.iter_993.tape_ptr + 1
        : local.iter_993.tape_ptr)

    code_ptr = 1 + (
      local.curr_994.code == "["
        ? local.iter_993.tape[local.iter_993.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_993.code_ptr)] : local.iter_993.code_ptr :
      local.curr_994.code == "]"
        ? local.iter_993.tape[local.iter_993.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_993.code_ptr)] : local.iter_993.code_ptr
        : local.iter_993.code_ptr)

    steps_taken = 1 + local.iter_993.steps_taken
  }
}

locals {
  end_of_code_995 = try(local.iter_994.code_ptr >= length(var.code), true)

  curr_995 = local.end_of_code_995 ? null : {
    code = substr(var.code, local.iter_994.code_ptr, 1)
    input = substr(var.code, local.iter_994.code_ptr, 1) == "," ? substr(local.iter_994.input, 0, 1) : null
  }

  iter_995 = local.end_of_code_995 ? local.iter_994 : {
    input = (local.curr_995.code == ","
      ? substr(local.iter_994.input, 1, -1)
      : local.iter_994.input)

    output = (local.curr_995.code == "."
      ? "${local.iter_994.output}${jsondecode(format("\"\\u%04x\"", local.iter_994.tape[local.iter_994.tape_ptr]))}"
      : local.iter_994.output)
    
    tape = (
      local.curr_995.code == "+"
        ? [for i, b in local.iter_994.tape : (i == local.iter_994.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_995.code == "-"
        ? [for i, b in local.iter_994.tape : (i == local.iter_994.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_995.code == ","
        ? [for i, b in local.iter_994.tape : (i == local.iter_994.tape_ptr ? local.ascii_lookup[local.curr_995.input] : b)]
        : local.iter_994.tape)

    tape_ptr = (
      local.curr_995.code == "<"
        ? local.iter_994.tape_ptr == 0 ? length(local.iter_994.tape) - 1 : local.iter_994.tape_ptr - 1 :
      local.curr_995.code == ">"
        ? local.iter_994.tape_ptr == length(local.iter_994.tape) - 1 ? 0 : local.iter_994.tape_ptr + 1
        : local.iter_994.tape_ptr)

    code_ptr = 1 + (
      local.curr_995.code == "["
        ? local.iter_994.tape[local.iter_994.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_994.code_ptr)] : local.iter_994.code_ptr :
      local.curr_995.code == "]"
        ? local.iter_994.tape[local.iter_994.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_994.code_ptr)] : local.iter_994.code_ptr
        : local.iter_994.code_ptr)

    steps_taken = 1 + local.iter_994.steps_taken
  }
}

locals {
  end_of_code_996 = try(local.iter_995.code_ptr >= length(var.code), true)

  curr_996 = local.end_of_code_996 ? null : {
    code = substr(var.code, local.iter_995.code_ptr, 1)
    input = substr(var.code, local.iter_995.code_ptr, 1) == "," ? substr(local.iter_995.input, 0, 1) : null
  }

  iter_996 = local.end_of_code_996 ? local.iter_995 : {
    input = (local.curr_996.code == ","
      ? substr(local.iter_995.input, 1, -1)
      : local.iter_995.input)

    output = (local.curr_996.code == "."
      ? "${local.iter_995.output}${jsondecode(format("\"\\u%04x\"", local.iter_995.tape[local.iter_995.tape_ptr]))}"
      : local.iter_995.output)
    
    tape = (
      local.curr_996.code == "+"
        ? [for i, b in local.iter_995.tape : (i == local.iter_995.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_996.code == "-"
        ? [for i, b in local.iter_995.tape : (i == local.iter_995.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_996.code == ","
        ? [for i, b in local.iter_995.tape : (i == local.iter_995.tape_ptr ? local.ascii_lookup[local.curr_996.input] : b)]
        : local.iter_995.tape)

    tape_ptr = (
      local.curr_996.code == "<"
        ? local.iter_995.tape_ptr == 0 ? length(local.iter_995.tape) - 1 : local.iter_995.tape_ptr - 1 :
      local.curr_996.code == ">"
        ? local.iter_995.tape_ptr == length(local.iter_995.tape) - 1 ? 0 : local.iter_995.tape_ptr + 1
        : local.iter_995.tape_ptr)

    code_ptr = 1 + (
      local.curr_996.code == "["
        ? local.iter_995.tape[local.iter_995.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_995.code_ptr)] : local.iter_995.code_ptr :
      local.curr_996.code == "]"
        ? local.iter_995.tape[local.iter_995.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_995.code_ptr)] : local.iter_995.code_ptr
        : local.iter_995.code_ptr)

    steps_taken = 1 + local.iter_995.steps_taken
  }
}

locals {
  end_of_code_997 = try(local.iter_996.code_ptr >= length(var.code), true)

  curr_997 = local.end_of_code_997 ? null : {
    code = substr(var.code, local.iter_996.code_ptr, 1)
    input = substr(var.code, local.iter_996.code_ptr, 1) == "," ? substr(local.iter_996.input, 0, 1) : null
  }

  iter_997 = local.end_of_code_997 ? local.iter_996 : {
    input = (local.curr_997.code == ","
      ? substr(local.iter_996.input, 1, -1)
      : local.iter_996.input)

    output = (local.curr_997.code == "."
      ? "${local.iter_996.output}${jsondecode(format("\"\\u%04x\"", local.iter_996.tape[local.iter_996.tape_ptr]))}"
      : local.iter_996.output)
    
    tape = (
      local.curr_997.code == "+"
        ? [for i, b in local.iter_996.tape : (i == local.iter_996.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_997.code == "-"
        ? [for i, b in local.iter_996.tape : (i == local.iter_996.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_997.code == ","
        ? [for i, b in local.iter_996.tape : (i == local.iter_996.tape_ptr ? local.ascii_lookup[local.curr_997.input] : b)]
        : local.iter_996.tape)

    tape_ptr = (
      local.curr_997.code == "<"
        ? local.iter_996.tape_ptr == 0 ? length(local.iter_996.tape) - 1 : local.iter_996.tape_ptr - 1 :
      local.curr_997.code == ">"
        ? local.iter_996.tape_ptr == length(local.iter_996.tape) - 1 ? 0 : local.iter_996.tape_ptr + 1
        : local.iter_996.tape_ptr)

    code_ptr = 1 + (
      local.curr_997.code == "["
        ? local.iter_996.tape[local.iter_996.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_996.code_ptr)] : local.iter_996.code_ptr :
      local.curr_997.code == "]"
        ? local.iter_996.tape[local.iter_996.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_996.code_ptr)] : local.iter_996.code_ptr
        : local.iter_996.code_ptr)

    steps_taken = 1 + local.iter_996.steps_taken
  }
}

locals {
  end_of_code_998 = try(local.iter_997.code_ptr >= length(var.code), true)

  curr_998 = local.end_of_code_998 ? null : {
    code = substr(var.code, local.iter_997.code_ptr, 1)
    input = substr(var.code, local.iter_997.code_ptr, 1) == "," ? substr(local.iter_997.input, 0, 1) : null
  }

  iter_998 = local.end_of_code_998 ? local.iter_997 : {
    input = (local.curr_998.code == ","
      ? substr(local.iter_997.input, 1, -1)
      : local.iter_997.input)

    output = (local.curr_998.code == "."
      ? "${local.iter_997.output}${jsondecode(format("\"\\u%04x\"", local.iter_997.tape[local.iter_997.tape_ptr]))}"
      : local.iter_997.output)
    
    tape = (
      local.curr_998.code == "+"
        ? [for i, b in local.iter_997.tape : (i == local.iter_997.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_998.code == "-"
        ? [for i, b in local.iter_997.tape : (i == local.iter_997.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_998.code == ","
        ? [for i, b in local.iter_997.tape : (i == local.iter_997.tape_ptr ? local.ascii_lookup[local.curr_998.input] : b)]
        : local.iter_997.tape)

    tape_ptr = (
      local.curr_998.code == "<"
        ? local.iter_997.tape_ptr == 0 ? length(local.iter_997.tape) - 1 : local.iter_997.tape_ptr - 1 :
      local.curr_998.code == ">"
        ? local.iter_997.tape_ptr == length(local.iter_997.tape) - 1 ? 0 : local.iter_997.tape_ptr + 1
        : local.iter_997.tape_ptr)

    code_ptr = 1 + (
      local.curr_998.code == "["
        ? local.iter_997.tape[local.iter_997.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_997.code_ptr)] : local.iter_997.code_ptr :
      local.curr_998.code == "]"
        ? local.iter_997.tape[local.iter_997.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_997.code_ptr)] : local.iter_997.code_ptr
        : local.iter_997.code_ptr)

    steps_taken = 1 + local.iter_997.steps_taken
  }
}

locals {
  end_of_code_999 = try(local.iter_998.code_ptr >= length(var.code), true)

  curr_999 = local.end_of_code_999 ? null : {
    code = substr(var.code, local.iter_998.code_ptr, 1)
    input = substr(var.code, local.iter_998.code_ptr, 1) == "," ? substr(local.iter_998.input, 0, 1) : null
  }

  iter_999 = local.end_of_code_999 ? local.iter_998 : {
    input = (local.curr_999.code == ","
      ? substr(local.iter_998.input, 1, -1)
      : local.iter_998.input)

    output = (local.curr_999.code == "."
      ? "${local.iter_998.output}${jsondecode(format("\"\\u%04x\"", local.iter_998.tape[local.iter_998.tape_ptr]))}"
      : local.iter_998.output)
    
    tape = (
      local.curr_999.code == "+"
        ? [for i, b in local.iter_998.tape : (i == local.iter_998.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_999.code == "-"
        ? [for i, b in local.iter_998.tape : (i == local.iter_998.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_999.code == ","
        ? [for i, b in local.iter_998.tape : (i == local.iter_998.tape_ptr ? local.ascii_lookup[local.curr_999.input] : b)]
        : local.iter_998.tape)

    tape_ptr = (
      local.curr_999.code == "<"
        ? local.iter_998.tape_ptr == 0 ? length(local.iter_998.tape) - 1 : local.iter_998.tape_ptr - 1 :
      local.curr_999.code == ">"
        ? local.iter_998.tape_ptr == length(local.iter_998.tape) - 1 ? 0 : local.iter_998.tape_ptr + 1
        : local.iter_998.tape_ptr)

    code_ptr = 1 + (
      local.curr_999.code == "["
        ? local.iter_998.tape[local.iter_998.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_998.code_ptr)] : local.iter_998.code_ptr :
      local.curr_999.code == "]"
        ? local.iter_998.tape[local.iter_998.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_998.code_ptr)] : local.iter_998.code_ptr
        : local.iter_998.code_ptr)

    steps_taken = 1 + local.iter_998.steps_taken
  }
}

locals {
  end_of_code_1000 = try(local.iter_999.code_ptr >= length(var.code), true)

  curr_1000 = local.end_of_code_1000 ? null : {
    code = substr(var.code, local.iter_999.code_ptr, 1)
    input = substr(var.code, local.iter_999.code_ptr, 1) == "," ? substr(local.iter_999.input, 0, 1) : null
  }

  iter_1000 = local.end_of_code_1000 ? local.iter_999 : {
    input = (local.curr_1000.code == ","
      ? substr(local.iter_999.input, 1, -1)
      : local.iter_999.input)

    output = (local.curr_1000.code == "."
      ? "${local.iter_999.output}${jsondecode(format("\"\\u%04x\"", local.iter_999.tape[local.iter_999.tape_ptr]))}"
      : local.iter_999.output)
    
    tape = (
      local.curr_1000.code == "+"
        ? [for i, b in local.iter_999.tape : (i == local.iter_999.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1000.code == "-"
        ? [for i, b in local.iter_999.tape : (i == local.iter_999.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1000.code == ","
        ? [for i, b in local.iter_999.tape : (i == local.iter_999.tape_ptr ? local.ascii_lookup[local.curr_1000.input] : b)]
        : local.iter_999.tape)

    tape_ptr = (
      local.curr_1000.code == "<"
        ? local.iter_999.tape_ptr == 0 ? length(local.iter_999.tape) - 1 : local.iter_999.tape_ptr - 1 :
      local.curr_1000.code == ">"
        ? local.iter_999.tape_ptr == length(local.iter_999.tape) - 1 ? 0 : local.iter_999.tape_ptr + 1
        : local.iter_999.tape_ptr)

    code_ptr = 1 + (
      local.curr_1000.code == "["
        ? local.iter_999.tape[local.iter_999.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_999.code_ptr)] : local.iter_999.code_ptr :
      local.curr_1000.code == "]"
        ? local.iter_999.tape[local.iter_999.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_999.code_ptr)] : local.iter_999.code_ptr
        : local.iter_999.code_ptr)

    steps_taken = 1 + local.iter_999.steps_taken
  }
}

locals {
  end_of_code_1001 = try(local.iter_1000.code_ptr >= length(var.code), true)

  curr_1001 = local.end_of_code_1001 ? null : {
    code = substr(var.code, local.iter_1000.code_ptr, 1)
    input = substr(var.code, local.iter_1000.code_ptr, 1) == "," ? substr(local.iter_1000.input, 0, 1) : null
  }

  iter_1001 = local.end_of_code_1001 ? local.iter_1000 : {
    input = (local.curr_1001.code == ","
      ? substr(local.iter_1000.input, 1, -1)
      : local.iter_1000.input)

    output = (local.curr_1001.code == "."
      ? "${local.iter_1000.output}${jsondecode(format("\"\\u%04x\"", local.iter_1000.tape[local.iter_1000.tape_ptr]))}"
      : local.iter_1000.output)
    
    tape = (
      local.curr_1001.code == "+"
        ? [for i, b in local.iter_1000.tape : (i == local.iter_1000.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1001.code == "-"
        ? [for i, b in local.iter_1000.tape : (i == local.iter_1000.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1001.code == ","
        ? [for i, b in local.iter_1000.tape : (i == local.iter_1000.tape_ptr ? local.ascii_lookup[local.curr_1001.input] : b)]
        : local.iter_1000.tape)

    tape_ptr = (
      local.curr_1001.code == "<"
        ? local.iter_1000.tape_ptr == 0 ? length(local.iter_1000.tape) - 1 : local.iter_1000.tape_ptr - 1 :
      local.curr_1001.code == ">"
        ? local.iter_1000.tape_ptr == length(local.iter_1000.tape) - 1 ? 0 : local.iter_1000.tape_ptr + 1
        : local.iter_1000.tape_ptr)

    code_ptr = 1 + (
      local.curr_1001.code == "["
        ? local.iter_1000.tape[local.iter_1000.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1000.code_ptr)] : local.iter_1000.code_ptr :
      local.curr_1001.code == "]"
        ? local.iter_1000.tape[local.iter_1000.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1000.code_ptr)] : local.iter_1000.code_ptr
        : local.iter_1000.code_ptr)

    steps_taken = 1 + local.iter_1000.steps_taken
  }
}

locals {
  end_of_code_1002 = try(local.iter_1001.code_ptr >= length(var.code), true)

  curr_1002 = local.end_of_code_1002 ? null : {
    code = substr(var.code, local.iter_1001.code_ptr, 1)
    input = substr(var.code, local.iter_1001.code_ptr, 1) == "," ? substr(local.iter_1001.input, 0, 1) : null
  }

  iter_1002 = local.end_of_code_1002 ? local.iter_1001 : {
    input = (local.curr_1002.code == ","
      ? substr(local.iter_1001.input, 1, -1)
      : local.iter_1001.input)

    output = (local.curr_1002.code == "."
      ? "${local.iter_1001.output}${jsondecode(format("\"\\u%04x\"", local.iter_1001.tape[local.iter_1001.tape_ptr]))}"
      : local.iter_1001.output)
    
    tape = (
      local.curr_1002.code == "+"
        ? [for i, b in local.iter_1001.tape : (i == local.iter_1001.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1002.code == "-"
        ? [for i, b in local.iter_1001.tape : (i == local.iter_1001.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1002.code == ","
        ? [for i, b in local.iter_1001.tape : (i == local.iter_1001.tape_ptr ? local.ascii_lookup[local.curr_1002.input] : b)]
        : local.iter_1001.tape)

    tape_ptr = (
      local.curr_1002.code == "<"
        ? local.iter_1001.tape_ptr == 0 ? length(local.iter_1001.tape) - 1 : local.iter_1001.tape_ptr - 1 :
      local.curr_1002.code == ">"
        ? local.iter_1001.tape_ptr == length(local.iter_1001.tape) - 1 ? 0 : local.iter_1001.tape_ptr + 1
        : local.iter_1001.tape_ptr)

    code_ptr = 1 + (
      local.curr_1002.code == "["
        ? local.iter_1001.tape[local.iter_1001.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1001.code_ptr)] : local.iter_1001.code_ptr :
      local.curr_1002.code == "]"
        ? local.iter_1001.tape[local.iter_1001.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1001.code_ptr)] : local.iter_1001.code_ptr
        : local.iter_1001.code_ptr)

    steps_taken = 1 + local.iter_1001.steps_taken
  }
}

locals {
  end_of_code_1003 = try(local.iter_1002.code_ptr >= length(var.code), true)

  curr_1003 = local.end_of_code_1003 ? null : {
    code = substr(var.code, local.iter_1002.code_ptr, 1)
    input = substr(var.code, local.iter_1002.code_ptr, 1) == "," ? substr(local.iter_1002.input, 0, 1) : null
  }

  iter_1003 = local.end_of_code_1003 ? local.iter_1002 : {
    input = (local.curr_1003.code == ","
      ? substr(local.iter_1002.input, 1, -1)
      : local.iter_1002.input)

    output = (local.curr_1003.code == "."
      ? "${local.iter_1002.output}${jsondecode(format("\"\\u%04x\"", local.iter_1002.tape[local.iter_1002.tape_ptr]))}"
      : local.iter_1002.output)
    
    tape = (
      local.curr_1003.code == "+"
        ? [for i, b in local.iter_1002.tape : (i == local.iter_1002.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1003.code == "-"
        ? [for i, b in local.iter_1002.tape : (i == local.iter_1002.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1003.code == ","
        ? [for i, b in local.iter_1002.tape : (i == local.iter_1002.tape_ptr ? local.ascii_lookup[local.curr_1003.input] : b)]
        : local.iter_1002.tape)

    tape_ptr = (
      local.curr_1003.code == "<"
        ? local.iter_1002.tape_ptr == 0 ? length(local.iter_1002.tape) - 1 : local.iter_1002.tape_ptr - 1 :
      local.curr_1003.code == ">"
        ? local.iter_1002.tape_ptr == length(local.iter_1002.tape) - 1 ? 0 : local.iter_1002.tape_ptr + 1
        : local.iter_1002.tape_ptr)

    code_ptr = 1 + (
      local.curr_1003.code == "["
        ? local.iter_1002.tape[local.iter_1002.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1002.code_ptr)] : local.iter_1002.code_ptr :
      local.curr_1003.code == "]"
        ? local.iter_1002.tape[local.iter_1002.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1002.code_ptr)] : local.iter_1002.code_ptr
        : local.iter_1002.code_ptr)

    steps_taken = 1 + local.iter_1002.steps_taken
  }
}

locals {
  end_of_code_1004 = try(local.iter_1003.code_ptr >= length(var.code), true)

  curr_1004 = local.end_of_code_1004 ? null : {
    code = substr(var.code, local.iter_1003.code_ptr, 1)
    input = substr(var.code, local.iter_1003.code_ptr, 1) == "," ? substr(local.iter_1003.input, 0, 1) : null
  }

  iter_1004 = local.end_of_code_1004 ? local.iter_1003 : {
    input = (local.curr_1004.code == ","
      ? substr(local.iter_1003.input, 1, -1)
      : local.iter_1003.input)

    output = (local.curr_1004.code == "."
      ? "${local.iter_1003.output}${jsondecode(format("\"\\u%04x\"", local.iter_1003.tape[local.iter_1003.tape_ptr]))}"
      : local.iter_1003.output)
    
    tape = (
      local.curr_1004.code == "+"
        ? [for i, b in local.iter_1003.tape : (i == local.iter_1003.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1004.code == "-"
        ? [for i, b in local.iter_1003.tape : (i == local.iter_1003.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1004.code == ","
        ? [for i, b in local.iter_1003.tape : (i == local.iter_1003.tape_ptr ? local.ascii_lookup[local.curr_1004.input] : b)]
        : local.iter_1003.tape)

    tape_ptr = (
      local.curr_1004.code == "<"
        ? local.iter_1003.tape_ptr == 0 ? length(local.iter_1003.tape) - 1 : local.iter_1003.tape_ptr - 1 :
      local.curr_1004.code == ">"
        ? local.iter_1003.tape_ptr == length(local.iter_1003.tape) - 1 ? 0 : local.iter_1003.tape_ptr + 1
        : local.iter_1003.tape_ptr)

    code_ptr = 1 + (
      local.curr_1004.code == "["
        ? local.iter_1003.tape[local.iter_1003.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1003.code_ptr)] : local.iter_1003.code_ptr :
      local.curr_1004.code == "]"
        ? local.iter_1003.tape[local.iter_1003.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1003.code_ptr)] : local.iter_1003.code_ptr
        : local.iter_1003.code_ptr)

    steps_taken = 1 + local.iter_1003.steps_taken
  }
}

locals {
  end_of_code_1005 = try(local.iter_1004.code_ptr >= length(var.code), true)

  curr_1005 = local.end_of_code_1005 ? null : {
    code = substr(var.code, local.iter_1004.code_ptr, 1)
    input = substr(var.code, local.iter_1004.code_ptr, 1) == "," ? substr(local.iter_1004.input, 0, 1) : null
  }

  iter_1005 = local.end_of_code_1005 ? local.iter_1004 : {
    input = (local.curr_1005.code == ","
      ? substr(local.iter_1004.input, 1, -1)
      : local.iter_1004.input)

    output = (local.curr_1005.code == "."
      ? "${local.iter_1004.output}${jsondecode(format("\"\\u%04x\"", local.iter_1004.tape[local.iter_1004.tape_ptr]))}"
      : local.iter_1004.output)
    
    tape = (
      local.curr_1005.code == "+"
        ? [for i, b in local.iter_1004.tape : (i == local.iter_1004.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1005.code == "-"
        ? [for i, b in local.iter_1004.tape : (i == local.iter_1004.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1005.code == ","
        ? [for i, b in local.iter_1004.tape : (i == local.iter_1004.tape_ptr ? local.ascii_lookup[local.curr_1005.input] : b)]
        : local.iter_1004.tape)

    tape_ptr = (
      local.curr_1005.code == "<"
        ? local.iter_1004.tape_ptr == 0 ? length(local.iter_1004.tape) - 1 : local.iter_1004.tape_ptr - 1 :
      local.curr_1005.code == ">"
        ? local.iter_1004.tape_ptr == length(local.iter_1004.tape) - 1 ? 0 : local.iter_1004.tape_ptr + 1
        : local.iter_1004.tape_ptr)

    code_ptr = 1 + (
      local.curr_1005.code == "["
        ? local.iter_1004.tape[local.iter_1004.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1004.code_ptr)] : local.iter_1004.code_ptr :
      local.curr_1005.code == "]"
        ? local.iter_1004.tape[local.iter_1004.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1004.code_ptr)] : local.iter_1004.code_ptr
        : local.iter_1004.code_ptr)

    steps_taken = 1 + local.iter_1004.steps_taken
  }
}

locals {
  end_of_code_1006 = try(local.iter_1005.code_ptr >= length(var.code), true)

  curr_1006 = local.end_of_code_1006 ? null : {
    code = substr(var.code, local.iter_1005.code_ptr, 1)
    input = substr(var.code, local.iter_1005.code_ptr, 1) == "," ? substr(local.iter_1005.input, 0, 1) : null
  }

  iter_1006 = local.end_of_code_1006 ? local.iter_1005 : {
    input = (local.curr_1006.code == ","
      ? substr(local.iter_1005.input, 1, -1)
      : local.iter_1005.input)

    output = (local.curr_1006.code == "."
      ? "${local.iter_1005.output}${jsondecode(format("\"\\u%04x\"", local.iter_1005.tape[local.iter_1005.tape_ptr]))}"
      : local.iter_1005.output)
    
    tape = (
      local.curr_1006.code == "+"
        ? [for i, b in local.iter_1005.tape : (i == local.iter_1005.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1006.code == "-"
        ? [for i, b in local.iter_1005.tape : (i == local.iter_1005.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1006.code == ","
        ? [for i, b in local.iter_1005.tape : (i == local.iter_1005.tape_ptr ? local.ascii_lookup[local.curr_1006.input] : b)]
        : local.iter_1005.tape)

    tape_ptr = (
      local.curr_1006.code == "<"
        ? local.iter_1005.tape_ptr == 0 ? length(local.iter_1005.tape) - 1 : local.iter_1005.tape_ptr - 1 :
      local.curr_1006.code == ">"
        ? local.iter_1005.tape_ptr == length(local.iter_1005.tape) - 1 ? 0 : local.iter_1005.tape_ptr + 1
        : local.iter_1005.tape_ptr)

    code_ptr = 1 + (
      local.curr_1006.code == "["
        ? local.iter_1005.tape[local.iter_1005.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1005.code_ptr)] : local.iter_1005.code_ptr :
      local.curr_1006.code == "]"
        ? local.iter_1005.tape[local.iter_1005.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1005.code_ptr)] : local.iter_1005.code_ptr
        : local.iter_1005.code_ptr)

    steps_taken = 1 + local.iter_1005.steps_taken
  }
}

locals {
  end_of_code_1007 = try(local.iter_1006.code_ptr >= length(var.code), true)

  curr_1007 = local.end_of_code_1007 ? null : {
    code = substr(var.code, local.iter_1006.code_ptr, 1)
    input = substr(var.code, local.iter_1006.code_ptr, 1) == "," ? substr(local.iter_1006.input, 0, 1) : null
  }

  iter_1007 = local.end_of_code_1007 ? local.iter_1006 : {
    input = (local.curr_1007.code == ","
      ? substr(local.iter_1006.input, 1, -1)
      : local.iter_1006.input)

    output = (local.curr_1007.code == "."
      ? "${local.iter_1006.output}${jsondecode(format("\"\\u%04x\"", local.iter_1006.tape[local.iter_1006.tape_ptr]))}"
      : local.iter_1006.output)
    
    tape = (
      local.curr_1007.code == "+"
        ? [for i, b in local.iter_1006.tape : (i == local.iter_1006.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1007.code == "-"
        ? [for i, b in local.iter_1006.tape : (i == local.iter_1006.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1007.code == ","
        ? [for i, b in local.iter_1006.tape : (i == local.iter_1006.tape_ptr ? local.ascii_lookup[local.curr_1007.input] : b)]
        : local.iter_1006.tape)

    tape_ptr = (
      local.curr_1007.code == "<"
        ? local.iter_1006.tape_ptr == 0 ? length(local.iter_1006.tape) - 1 : local.iter_1006.tape_ptr - 1 :
      local.curr_1007.code == ">"
        ? local.iter_1006.tape_ptr == length(local.iter_1006.tape) - 1 ? 0 : local.iter_1006.tape_ptr + 1
        : local.iter_1006.tape_ptr)

    code_ptr = 1 + (
      local.curr_1007.code == "["
        ? local.iter_1006.tape[local.iter_1006.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1006.code_ptr)] : local.iter_1006.code_ptr :
      local.curr_1007.code == "]"
        ? local.iter_1006.tape[local.iter_1006.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1006.code_ptr)] : local.iter_1006.code_ptr
        : local.iter_1006.code_ptr)

    steps_taken = 1 + local.iter_1006.steps_taken
  }
}

locals {
  end_of_code_1008 = try(local.iter_1007.code_ptr >= length(var.code), true)

  curr_1008 = local.end_of_code_1008 ? null : {
    code = substr(var.code, local.iter_1007.code_ptr, 1)
    input = substr(var.code, local.iter_1007.code_ptr, 1) == "," ? substr(local.iter_1007.input, 0, 1) : null
  }

  iter_1008 = local.end_of_code_1008 ? local.iter_1007 : {
    input = (local.curr_1008.code == ","
      ? substr(local.iter_1007.input, 1, -1)
      : local.iter_1007.input)

    output = (local.curr_1008.code == "."
      ? "${local.iter_1007.output}${jsondecode(format("\"\\u%04x\"", local.iter_1007.tape[local.iter_1007.tape_ptr]))}"
      : local.iter_1007.output)
    
    tape = (
      local.curr_1008.code == "+"
        ? [for i, b in local.iter_1007.tape : (i == local.iter_1007.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1008.code == "-"
        ? [for i, b in local.iter_1007.tape : (i == local.iter_1007.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1008.code == ","
        ? [for i, b in local.iter_1007.tape : (i == local.iter_1007.tape_ptr ? local.ascii_lookup[local.curr_1008.input] : b)]
        : local.iter_1007.tape)

    tape_ptr = (
      local.curr_1008.code == "<"
        ? local.iter_1007.tape_ptr == 0 ? length(local.iter_1007.tape) - 1 : local.iter_1007.tape_ptr - 1 :
      local.curr_1008.code == ">"
        ? local.iter_1007.tape_ptr == length(local.iter_1007.tape) - 1 ? 0 : local.iter_1007.tape_ptr + 1
        : local.iter_1007.tape_ptr)

    code_ptr = 1 + (
      local.curr_1008.code == "["
        ? local.iter_1007.tape[local.iter_1007.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1007.code_ptr)] : local.iter_1007.code_ptr :
      local.curr_1008.code == "]"
        ? local.iter_1007.tape[local.iter_1007.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1007.code_ptr)] : local.iter_1007.code_ptr
        : local.iter_1007.code_ptr)

    steps_taken = 1 + local.iter_1007.steps_taken
  }
}

locals {
  end_of_code_1009 = try(local.iter_1008.code_ptr >= length(var.code), true)

  curr_1009 = local.end_of_code_1009 ? null : {
    code = substr(var.code, local.iter_1008.code_ptr, 1)
    input = substr(var.code, local.iter_1008.code_ptr, 1) == "," ? substr(local.iter_1008.input, 0, 1) : null
  }

  iter_1009 = local.end_of_code_1009 ? local.iter_1008 : {
    input = (local.curr_1009.code == ","
      ? substr(local.iter_1008.input, 1, -1)
      : local.iter_1008.input)

    output = (local.curr_1009.code == "."
      ? "${local.iter_1008.output}${jsondecode(format("\"\\u%04x\"", local.iter_1008.tape[local.iter_1008.tape_ptr]))}"
      : local.iter_1008.output)
    
    tape = (
      local.curr_1009.code == "+"
        ? [for i, b in local.iter_1008.tape : (i == local.iter_1008.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1009.code == "-"
        ? [for i, b in local.iter_1008.tape : (i == local.iter_1008.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1009.code == ","
        ? [for i, b in local.iter_1008.tape : (i == local.iter_1008.tape_ptr ? local.ascii_lookup[local.curr_1009.input] : b)]
        : local.iter_1008.tape)

    tape_ptr = (
      local.curr_1009.code == "<"
        ? local.iter_1008.tape_ptr == 0 ? length(local.iter_1008.tape) - 1 : local.iter_1008.tape_ptr - 1 :
      local.curr_1009.code == ">"
        ? local.iter_1008.tape_ptr == length(local.iter_1008.tape) - 1 ? 0 : local.iter_1008.tape_ptr + 1
        : local.iter_1008.tape_ptr)

    code_ptr = 1 + (
      local.curr_1009.code == "["
        ? local.iter_1008.tape[local.iter_1008.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1008.code_ptr)] : local.iter_1008.code_ptr :
      local.curr_1009.code == "]"
        ? local.iter_1008.tape[local.iter_1008.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1008.code_ptr)] : local.iter_1008.code_ptr
        : local.iter_1008.code_ptr)

    steps_taken = 1 + local.iter_1008.steps_taken
  }
}

locals {
  end_of_code_1010 = try(local.iter_1009.code_ptr >= length(var.code), true)

  curr_1010 = local.end_of_code_1010 ? null : {
    code = substr(var.code, local.iter_1009.code_ptr, 1)
    input = substr(var.code, local.iter_1009.code_ptr, 1) == "," ? substr(local.iter_1009.input, 0, 1) : null
  }

  iter_1010 = local.end_of_code_1010 ? local.iter_1009 : {
    input = (local.curr_1010.code == ","
      ? substr(local.iter_1009.input, 1, -1)
      : local.iter_1009.input)

    output = (local.curr_1010.code == "."
      ? "${local.iter_1009.output}${jsondecode(format("\"\\u%04x\"", local.iter_1009.tape[local.iter_1009.tape_ptr]))}"
      : local.iter_1009.output)
    
    tape = (
      local.curr_1010.code == "+"
        ? [for i, b in local.iter_1009.tape : (i == local.iter_1009.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1010.code == "-"
        ? [for i, b in local.iter_1009.tape : (i == local.iter_1009.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1010.code == ","
        ? [for i, b in local.iter_1009.tape : (i == local.iter_1009.tape_ptr ? local.ascii_lookup[local.curr_1010.input] : b)]
        : local.iter_1009.tape)

    tape_ptr = (
      local.curr_1010.code == "<"
        ? local.iter_1009.tape_ptr == 0 ? length(local.iter_1009.tape) - 1 : local.iter_1009.tape_ptr - 1 :
      local.curr_1010.code == ">"
        ? local.iter_1009.tape_ptr == length(local.iter_1009.tape) - 1 ? 0 : local.iter_1009.tape_ptr + 1
        : local.iter_1009.tape_ptr)

    code_ptr = 1 + (
      local.curr_1010.code == "["
        ? local.iter_1009.tape[local.iter_1009.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1009.code_ptr)] : local.iter_1009.code_ptr :
      local.curr_1010.code == "]"
        ? local.iter_1009.tape[local.iter_1009.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1009.code_ptr)] : local.iter_1009.code_ptr
        : local.iter_1009.code_ptr)

    steps_taken = 1 + local.iter_1009.steps_taken
  }
}

locals {
  end_of_code_1011 = try(local.iter_1010.code_ptr >= length(var.code), true)

  curr_1011 = local.end_of_code_1011 ? null : {
    code = substr(var.code, local.iter_1010.code_ptr, 1)
    input = substr(var.code, local.iter_1010.code_ptr, 1) == "," ? substr(local.iter_1010.input, 0, 1) : null
  }

  iter_1011 = local.end_of_code_1011 ? local.iter_1010 : {
    input = (local.curr_1011.code == ","
      ? substr(local.iter_1010.input, 1, -1)
      : local.iter_1010.input)

    output = (local.curr_1011.code == "."
      ? "${local.iter_1010.output}${jsondecode(format("\"\\u%04x\"", local.iter_1010.tape[local.iter_1010.tape_ptr]))}"
      : local.iter_1010.output)
    
    tape = (
      local.curr_1011.code == "+"
        ? [for i, b in local.iter_1010.tape : (i == local.iter_1010.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1011.code == "-"
        ? [for i, b in local.iter_1010.tape : (i == local.iter_1010.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1011.code == ","
        ? [for i, b in local.iter_1010.tape : (i == local.iter_1010.tape_ptr ? local.ascii_lookup[local.curr_1011.input] : b)]
        : local.iter_1010.tape)

    tape_ptr = (
      local.curr_1011.code == "<"
        ? local.iter_1010.tape_ptr == 0 ? length(local.iter_1010.tape) - 1 : local.iter_1010.tape_ptr - 1 :
      local.curr_1011.code == ">"
        ? local.iter_1010.tape_ptr == length(local.iter_1010.tape) - 1 ? 0 : local.iter_1010.tape_ptr + 1
        : local.iter_1010.tape_ptr)

    code_ptr = 1 + (
      local.curr_1011.code == "["
        ? local.iter_1010.tape[local.iter_1010.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1010.code_ptr)] : local.iter_1010.code_ptr :
      local.curr_1011.code == "]"
        ? local.iter_1010.tape[local.iter_1010.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1010.code_ptr)] : local.iter_1010.code_ptr
        : local.iter_1010.code_ptr)

    steps_taken = 1 + local.iter_1010.steps_taken
  }
}

locals {
  end_of_code_1012 = try(local.iter_1011.code_ptr >= length(var.code), true)

  curr_1012 = local.end_of_code_1012 ? null : {
    code = substr(var.code, local.iter_1011.code_ptr, 1)
    input = substr(var.code, local.iter_1011.code_ptr, 1) == "," ? substr(local.iter_1011.input, 0, 1) : null
  }

  iter_1012 = local.end_of_code_1012 ? local.iter_1011 : {
    input = (local.curr_1012.code == ","
      ? substr(local.iter_1011.input, 1, -1)
      : local.iter_1011.input)

    output = (local.curr_1012.code == "."
      ? "${local.iter_1011.output}${jsondecode(format("\"\\u%04x\"", local.iter_1011.tape[local.iter_1011.tape_ptr]))}"
      : local.iter_1011.output)
    
    tape = (
      local.curr_1012.code == "+"
        ? [for i, b in local.iter_1011.tape : (i == local.iter_1011.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1012.code == "-"
        ? [for i, b in local.iter_1011.tape : (i == local.iter_1011.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1012.code == ","
        ? [for i, b in local.iter_1011.tape : (i == local.iter_1011.tape_ptr ? local.ascii_lookup[local.curr_1012.input] : b)]
        : local.iter_1011.tape)

    tape_ptr = (
      local.curr_1012.code == "<"
        ? local.iter_1011.tape_ptr == 0 ? length(local.iter_1011.tape) - 1 : local.iter_1011.tape_ptr - 1 :
      local.curr_1012.code == ">"
        ? local.iter_1011.tape_ptr == length(local.iter_1011.tape) - 1 ? 0 : local.iter_1011.tape_ptr + 1
        : local.iter_1011.tape_ptr)

    code_ptr = 1 + (
      local.curr_1012.code == "["
        ? local.iter_1011.tape[local.iter_1011.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1011.code_ptr)] : local.iter_1011.code_ptr :
      local.curr_1012.code == "]"
        ? local.iter_1011.tape[local.iter_1011.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1011.code_ptr)] : local.iter_1011.code_ptr
        : local.iter_1011.code_ptr)

    steps_taken = 1 + local.iter_1011.steps_taken
  }
}

locals {
  end_of_code_1013 = try(local.iter_1012.code_ptr >= length(var.code), true)

  curr_1013 = local.end_of_code_1013 ? null : {
    code = substr(var.code, local.iter_1012.code_ptr, 1)
    input = substr(var.code, local.iter_1012.code_ptr, 1) == "," ? substr(local.iter_1012.input, 0, 1) : null
  }

  iter_1013 = local.end_of_code_1013 ? local.iter_1012 : {
    input = (local.curr_1013.code == ","
      ? substr(local.iter_1012.input, 1, -1)
      : local.iter_1012.input)

    output = (local.curr_1013.code == "."
      ? "${local.iter_1012.output}${jsondecode(format("\"\\u%04x\"", local.iter_1012.tape[local.iter_1012.tape_ptr]))}"
      : local.iter_1012.output)
    
    tape = (
      local.curr_1013.code == "+"
        ? [for i, b in local.iter_1012.tape : (i == local.iter_1012.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1013.code == "-"
        ? [for i, b in local.iter_1012.tape : (i == local.iter_1012.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1013.code == ","
        ? [for i, b in local.iter_1012.tape : (i == local.iter_1012.tape_ptr ? local.ascii_lookup[local.curr_1013.input] : b)]
        : local.iter_1012.tape)

    tape_ptr = (
      local.curr_1013.code == "<"
        ? local.iter_1012.tape_ptr == 0 ? length(local.iter_1012.tape) - 1 : local.iter_1012.tape_ptr - 1 :
      local.curr_1013.code == ">"
        ? local.iter_1012.tape_ptr == length(local.iter_1012.tape) - 1 ? 0 : local.iter_1012.tape_ptr + 1
        : local.iter_1012.tape_ptr)

    code_ptr = 1 + (
      local.curr_1013.code == "["
        ? local.iter_1012.tape[local.iter_1012.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1012.code_ptr)] : local.iter_1012.code_ptr :
      local.curr_1013.code == "]"
        ? local.iter_1012.tape[local.iter_1012.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1012.code_ptr)] : local.iter_1012.code_ptr
        : local.iter_1012.code_ptr)

    steps_taken = 1 + local.iter_1012.steps_taken
  }
}

locals {
  end_of_code_1014 = try(local.iter_1013.code_ptr >= length(var.code), true)

  curr_1014 = local.end_of_code_1014 ? null : {
    code = substr(var.code, local.iter_1013.code_ptr, 1)
    input = substr(var.code, local.iter_1013.code_ptr, 1) == "," ? substr(local.iter_1013.input, 0, 1) : null
  }

  iter_1014 = local.end_of_code_1014 ? local.iter_1013 : {
    input = (local.curr_1014.code == ","
      ? substr(local.iter_1013.input, 1, -1)
      : local.iter_1013.input)

    output = (local.curr_1014.code == "."
      ? "${local.iter_1013.output}${jsondecode(format("\"\\u%04x\"", local.iter_1013.tape[local.iter_1013.tape_ptr]))}"
      : local.iter_1013.output)
    
    tape = (
      local.curr_1014.code == "+"
        ? [for i, b in local.iter_1013.tape : (i == local.iter_1013.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1014.code == "-"
        ? [for i, b in local.iter_1013.tape : (i == local.iter_1013.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1014.code == ","
        ? [for i, b in local.iter_1013.tape : (i == local.iter_1013.tape_ptr ? local.ascii_lookup[local.curr_1014.input] : b)]
        : local.iter_1013.tape)

    tape_ptr = (
      local.curr_1014.code == "<"
        ? local.iter_1013.tape_ptr == 0 ? length(local.iter_1013.tape) - 1 : local.iter_1013.tape_ptr - 1 :
      local.curr_1014.code == ">"
        ? local.iter_1013.tape_ptr == length(local.iter_1013.tape) - 1 ? 0 : local.iter_1013.tape_ptr + 1
        : local.iter_1013.tape_ptr)

    code_ptr = 1 + (
      local.curr_1014.code == "["
        ? local.iter_1013.tape[local.iter_1013.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1013.code_ptr)] : local.iter_1013.code_ptr :
      local.curr_1014.code == "]"
        ? local.iter_1013.tape[local.iter_1013.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1013.code_ptr)] : local.iter_1013.code_ptr
        : local.iter_1013.code_ptr)

    steps_taken = 1 + local.iter_1013.steps_taken
  }
}

locals {
  end_of_code_1015 = try(local.iter_1014.code_ptr >= length(var.code), true)

  curr_1015 = local.end_of_code_1015 ? null : {
    code = substr(var.code, local.iter_1014.code_ptr, 1)
    input = substr(var.code, local.iter_1014.code_ptr, 1) == "," ? substr(local.iter_1014.input, 0, 1) : null
  }

  iter_1015 = local.end_of_code_1015 ? local.iter_1014 : {
    input = (local.curr_1015.code == ","
      ? substr(local.iter_1014.input, 1, -1)
      : local.iter_1014.input)

    output = (local.curr_1015.code == "."
      ? "${local.iter_1014.output}${jsondecode(format("\"\\u%04x\"", local.iter_1014.tape[local.iter_1014.tape_ptr]))}"
      : local.iter_1014.output)
    
    tape = (
      local.curr_1015.code == "+"
        ? [for i, b in local.iter_1014.tape : (i == local.iter_1014.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1015.code == "-"
        ? [for i, b in local.iter_1014.tape : (i == local.iter_1014.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1015.code == ","
        ? [for i, b in local.iter_1014.tape : (i == local.iter_1014.tape_ptr ? local.ascii_lookup[local.curr_1015.input] : b)]
        : local.iter_1014.tape)

    tape_ptr = (
      local.curr_1015.code == "<"
        ? local.iter_1014.tape_ptr == 0 ? length(local.iter_1014.tape) - 1 : local.iter_1014.tape_ptr - 1 :
      local.curr_1015.code == ">"
        ? local.iter_1014.tape_ptr == length(local.iter_1014.tape) - 1 ? 0 : local.iter_1014.tape_ptr + 1
        : local.iter_1014.tape_ptr)

    code_ptr = 1 + (
      local.curr_1015.code == "["
        ? local.iter_1014.tape[local.iter_1014.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1014.code_ptr)] : local.iter_1014.code_ptr :
      local.curr_1015.code == "]"
        ? local.iter_1014.tape[local.iter_1014.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1014.code_ptr)] : local.iter_1014.code_ptr
        : local.iter_1014.code_ptr)

    steps_taken = 1 + local.iter_1014.steps_taken
  }
}

locals {
  end_of_code_1016 = try(local.iter_1015.code_ptr >= length(var.code), true)

  curr_1016 = local.end_of_code_1016 ? null : {
    code = substr(var.code, local.iter_1015.code_ptr, 1)
    input = substr(var.code, local.iter_1015.code_ptr, 1) == "," ? substr(local.iter_1015.input, 0, 1) : null
  }

  iter_1016 = local.end_of_code_1016 ? local.iter_1015 : {
    input = (local.curr_1016.code == ","
      ? substr(local.iter_1015.input, 1, -1)
      : local.iter_1015.input)

    output = (local.curr_1016.code == "."
      ? "${local.iter_1015.output}${jsondecode(format("\"\\u%04x\"", local.iter_1015.tape[local.iter_1015.tape_ptr]))}"
      : local.iter_1015.output)
    
    tape = (
      local.curr_1016.code == "+"
        ? [for i, b in local.iter_1015.tape : (i == local.iter_1015.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1016.code == "-"
        ? [for i, b in local.iter_1015.tape : (i == local.iter_1015.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1016.code == ","
        ? [for i, b in local.iter_1015.tape : (i == local.iter_1015.tape_ptr ? local.ascii_lookup[local.curr_1016.input] : b)]
        : local.iter_1015.tape)

    tape_ptr = (
      local.curr_1016.code == "<"
        ? local.iter_1015.tape_ptr == 0 ? length(local.iter_1015.tape) - 1 : local.iter_1015.tape_ptr - 1 :
      local.curr_1016.code == ">"
        ? local.iter_1015.tape_ptr == length(local.iter_1015.tape) - 1 ? 0 : local.iter_1015.tape_ptr + 1
        : local.iter_1015.tape_ptr)

    code_ptr = 1 + (
      local.curr_1016.code == "["
        ? local.iter_1015.tape[local.iter_1015.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1015.code_ptr)] : local.iter_1015.code_ptr :
      local.curr_1016.code == "]"
        ? local.iter_1015.tape[local.iter_1015.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1015.code_ptr)] : local.iter_1015.code_ptr
        : local.iter_1015.code_ptr)

    steps_taken = 1 + local.iter_1015.steps_taken
  }
}

locals {
  end_of_code_1017 = try(local.iter_1016.code_ptr >= length(var.code), true)

  curr_1017 = local.end_of_code_1017 ? null : {
    code = substr(var.code, local.iter_1016.code_ptr, 1)
    input = substr(var.code, local.iter_1016.code_ptr, 1) == "," ? substr(local.iter_1016.input, 0, 1) : null
  }

  iter_1017 = local.end_of_code_1017 ? local.iter_1016 : {
    input = (local.curr_1017.code == ","
      ? substr(local.iter_1016.input, 1, -1)
      : local.iter_1016.input)

    output = (local.curr_1017.code == "."
      ? "${local.iter_1016.output}${jsondecode(format("\"\\u%04x\"", local.iter_1016.tape[local.iter_1016.tape_ptr]))}"
      : local.iter_1016.output)
    
    tape = (
      local.curr_1017.code == "+"
        ? [for i, b in local.iter_1016.tape : (i == local.iter_1016.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1017.code == "-"
        ? [for i, b in local.iter_1016.tape : (i == local.iter_1016.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1017.code == ","
        ? [for i, b in local.iter_1016.tape : (i == local.iter_1016.tape_ptr ? local.ascii_lookup[local.curr_1017.input] : b)]
        : local.iter_1016.tape)

    tape_ptr = (
      local.curr_1017.code == "<"
        ? local.iter_1016.tape_ptr == 0 ? length(local.iter_1016.tape) - 1 : local.iter_1016.tape_ptr - 1 :
      local.curr_1017.code == ">"
        ? local.iter_1016.tape_ptr == length(local.iter_1016.tape) - 1 ? 0 : local.iter_1016.tape_ptr + 1
        : local.iter_1016.tape_ptr)

    code_ptr = 1 + (
      local.curr_1017.code == "["
        ? local.iter_1016.tape[local.iter_1016.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1016.code_ptr)] : local.iter_1016.code_ptr :
      local.curr_1017.code == "]"
        ? local.iter_1016.tape[local.iter_1016.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1016.code_ptr)] : local.iter_1016.code_ptr
        : local.iter_1016.code_ptr)

    steps_taken = 1 + local.iter_1016.steps_taken
  }
}

locals {
  end_of_code_1018 = try(local.iter_1017.code_ptr >= length(var.code), true)

  curr_1018 = local.end_of_code_1018 ? null : {
    code = substr(var.code, local.iter_1017.code_ptr, 1)
    input = substr(var.code, local.iter_1017.code_ptr, 1) == "," ? substr(local.iter_1017.input, 0, 1) : null
  }

  iter_1018 = local.end_of_code_1018 ? local.iter_1017 : {
    input = (local.curr_1018.code == ","
      ? substr(local.iter_1017.input, 1, -1)
      : local.iter_1017.input)

    output = (local.curr_1018.code == "."
      ? "${local.iter_1017.output}${jsondecode(format("\"\\u%04x\"", local.iter_1017.tape[local.iter_1017.tape_ptr]))}"
      : local.iter_1017.output)
    
    tape = (
      local.curr_1018.code == "+"
        ? [for i, b in local.iter_1017.tape : (i == local.iter_1017.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1018.code == "-"
        ? [for i, b in local.iter_1017.tape : (i == local.iter_1017.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1018.code == ","
        ? [for i, b in local.iter_1017.tape : (i == local.iter_1017.tape_ptr ? local.ascii_lookup[local.curr_1018.input] : b)]
        : local.iter_1017.tape)

    tape_ptr = (
      local.curr_1018.code == "<"
        ? local.iter_1017.tape_ptr == 0 ? length(local.iter_1017.tape) - 1 : local.iter_1017.tape_ptr - 1 :
      local.curr_1018.code == ">"
        ? local.iter_1017.tape_ptr == length(local.iter_1017.tape) - 1 ? 0 : local.iter_1017.tape_ptr + 1
        : local.iter_1017.tape_ptr)

    code_ptr = 1 + (
      local.curr_1018.code == "["
        ? local.iter_1017.tape[local.iter_1017.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1017.code_ptr)] : local.iter_1017.code_ptr :
      local.curr_1018.code == "]"
        ? local.iter_1017.tape[local.iter_1017.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1017.code_ptr)] : local.iter_1017.code_ptr
        : local.iter_1017.code_ptr)

    steps_taken = 1 + local.iter_1017.steps_taken
  }
}

locals {
  end_of_code_1019 = try(local.iter_1018.code_ptr >= length(var.code), true)

  curr_1019 = local.end_of_code_1019 ? null : {
    code = substr(var.code, local.iter_1018.code_ptr, 1)
    input = substr(var.code, local.iter_1018.code_ptr, 1) == "," ? substr(local.iter_1018.input, 0, 1) : null
  }

  iter_1019 = local.end_of_code_1019 ? local.iter_1018 : {
    input = (local.curr_1019.code == ","
      ? substr(local.iter_1018.input, 1, -1)
      : local.iter_1018.input)

    output = (local.curr_1019.code == "."
      ? "${local.iter_1018.output}${jsondecode(format("\"\\u%04x\"", local.iter_1018.tape[local.iter_1018.tape_ptr]))}"
      : local.iter_1018.output)
    
    tape = (
      local.curr_1019.code == "+"
        ? [for i, b in local.iter_1018.tape : (i == local.iter_1018.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1019.code == "-"
        ? [for i, b in local.iter_1018.tape : (i == local.iter_1018.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1019.code == ","
        ? [for i, b in local.iter_1018.tape : (i == local.iter_1018.tape_ptr ? local.ascii_lookup[local.curr_1019.input] : b)]
        : local.iter_1018.tape)

    tape_ptr = (
      local.curr_1019.code == "<"
        ? local.iter_1018.tape_ptr == 0 ? length(local.iter_1018.tape) - 1 : local.iter_1018.tape_ptr - 1 :
      local.curr_1019.code == ">"
        ? local.iter_1018.tape_ptr == length(local.iter_1018.tape) - 1 ? 0 : local.iter_1018.tape_ptr + 1
        : local.iter_1018.tape_ptr)

    code_ptr = 1 + (
      local.curr_1019.code == "["
        ? local.iter_1018.tape[local.iter_1018.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1018.code_ptr)] : local.iter_1018.code_ptr :
      local.curr_1019.code == "]"
        ? local.iter_1018.tape[local.iter_1018.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1018.code_ptr)] : local.iter_1018.code_ptr
        : local.iter_1018.code_ptr)

    steps_taken = 1 + local.iter_1018.steps_taken
  }
}

locals {
  end_of_code_1020 = try(local.iter_1019.code_ptr >= length(var.code), true)

  curr_1020 = local.end_of_code_1020 ? null : {
    code = substr(var.code, local.iter_1019.code_ptr, 1)
    input = substr(var.code, local.iter_1019.code_ptr, 1) == "," ? substr(local.iter_1019.input, 0, 1) : null
  }

  iter_1020 = local.end_of_code_1020 ? local.iter_1019 : {
    input = (local.curr_1020.code == ","
      ? substr(local.iter_1019.input, 1, -1)
      : local.iter_1019.input)

    output = (local.curr_1020.code == "."
      ? "${local.iter_1019.output}${jsondecode(format("\"\\u%04x\"", local.iter_1019.tape[local.iter_1019.tape_ptr]))}"
      : local.iter_1019.output)
    
    tape = (
      local.curr_1020.code == "+"
        ? [for i, b in local.iter_1019.tape : (i == local.iter_1019.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1020.code == "-"
        ? [for i, b in local.iter_1019.tape : (i == local.iter_1019.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1020.code == ","
        ? [for i, b in local.iter_1019.tape : (i == local.iter_1019.tape_ptr ? local.ascii_lookup[local.curr_1020.input] : b)]
        : local.iter_1019.tape)

    tape_ptr = (
      local.curr_1020.code == "<"
        ? local.iter_1019.tape_ptr == 0 ? length(local.iter_1019.tape) - 1 : local.iter_1019.tape_ptr - 1 :
      local.curr_1020.code == ">"
        ? local.iter_1019.tape_ptr == length(local.iter_1019.tape) - 1 ? 0 : local.iter_1019.tape_ptr + 1
        : local.iter_1019.tape_ptr)

    code_ptr = 1 + (
      local.curr_1020.code == "["
        ? local.iter_1019.tape[local.iter_1019.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1019.code_ptr)] : local.iter_1019.code_ptr :
      local.curr_1020.code == "]"
        ? local.iter_1019.tape[local.iter_1019.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1019.code_ptr)] : local.iter_1019.code_ptr
        : local.iter_1019.code_ptr)

    steps_taken = 1 + local.iter_1019.steps_taken
  }
}

locals {
  end_of_code_1021 = try(local.iter_1020.code_ptr >= length(var.code), true)

  curr_1021 = local.end_of_code_1021 ? null : {
    code = substr(var.code, local.iter_1020.code_ptr, 1)
    input = substr(var.code, local.iter_1020.code_ptr, 1) == "," ? substr(local.iter_1020.input, 0, 1) : null
  }

  iter_1021 = local.end_of_code_1021 ? local.iter_1020 : {
    input = (local.curr_1021.code == ","
      ? substr(local.iter_1020.input, 1, -1)
      : local.iter_1020.input)

    output = (local.curr_1021.code == "."
      ? "${local.iter_1020.output}${jsondecode(format("\"\\u%04x\"", local.iter_1020.tape[local.iter_1020.tape_ptr]))}"
      : local.iter_1020.output)
    
    tape = (
      local.curr_1021.code == "+"
        ? [for i, b in local.iter_1020.tape : (i == local.iter_1020.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1021.code == "-"
        ? [for i, b in local.iter_1020.tape : (i == local.iter_1020.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1021.code == ","
        ? [for i, b in local.iter_1020.tape : (i == local.iter_1020.tape_ptr ? local.ascii_lookup[local.curr_1021.input] : b)]
        : local.iter_1020.tape)

    tape_ptr = (
      local.curr_1021.code == "<"
        ? local.iter_1020.tape_ptr == 0 ? length(local.iter_1020.tape) - 1 : local.iter_1020.tape_ptr - 1 :
      local.curr_1021.code == ">"
        ? local.iter_1020.tape_ptr == length(local.iter_1020.tape) - 1 ? 0 : local.iter_1020.tape_ptr + 1
        : local.iter_1020.tape_ptr)

    code_ptr = 1 + (
      local.curr_1021.code == "["
        ? local.iter_1020.tape[local.iter_1020.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1020.code_ptr)] : local.iter_1020.code_ptr :
      local.curr_1021.code == "]"
        ? local.iter_1020.tape[local.iter_1020.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1020.code_ptr)] : local.iter_1020.code_ptr
        : local.iter_1020.code_ptr)

    steps_taken = 1 + local.iter_1020.steps_taken
  }
}

locals {
  end_of_code_1022 = try(local.iter_1021.code_ptr >= length(var.code), true)

  curr_1022 = local.end_of_code_1022 ? null : {
    code = substr(var.code, local.iter_1021.code_ptr, 1)
    input = substr(var.code, local.iter_1021.code_ptr, 1) == "," ? substr(local.iter_1021.input, 0, 1) : null
  }

  iter_1022 = local.end_of_code_1022 ? local.iter_1021 : {
    input = (local.curr_1022.code == ","
      ? substr(local.iter_1021.input, 1, -1)
      : local.iter_1021.input)

    output = (local.curr_1022.code == "."
      ? "${local.iter_1021.output}${jsondecode(format("\"\\u%04x\"", local.iter_1021.tape[local.iter_1021.tape_ptr]))}"
      : local.iter_1021.output)
    
    tape = (
      local.curr_1022.code == "+"
        ? [for i, b in local.iter_1021.tape : (i == local.iter_1021.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1022.code == "-"
        ? [for i, b in local.iter_1021.tape : (i == local.iter_1021.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1022.code == ","
        ? [for i, b in local.iter_1021.tape : (i == local.iter_1021.tape_ptr ? local.ascii_lookup[local.curr_1022.input] : b)]
        : local.iter_1021.tape)

    tape_ptr = (
      local.curr_1022.code == "<"
        ? local.iter_1021.tape_ptr == 0 ? length(local.iter_1021.tape) - 1 : local.iter_1021.tape_ptr - 1 :
      local.curr_1022.code == ">"
        ? local.iter_1021.tape_ptr == length(local.iter_1021.tape) - 1 ? 0 : local.iter_1021.tape_ptr + 1
        : local.iter_1021.tape_ptr)

    code_ptr = 1 + (
      local.curr_1022.code == "["
        ? local.iter_1021.tape[local.iter_1021.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1021.code_ptr)] : local.iter_1021.code_ptr :
      local.curr_1022.code == "]"
        ? local.iter_1021.tape[local.iter_1021.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1021.code_ptr)] : local.iter_1021.code_ptr
        : local.iter_1021.code_ptr)

    steps_taken = 1 + local.iter_1021.steps_taken
  }
}

locals {
  end_of_code_1023 = try(local.iter_1022.code_ptr >= length(var.code), true)

  curr_1023 = local.end_of_code_1023 ? null : {
    code = substr(var.code, local.iter_1022.code_ptr, 1)
    input = substr(var.code, local.iter_1022.code_ptr, 1) == "," ? substr(local.iter_1022.input, 0, 1) : null
  }

  iter_1023 = local.end_of_code_1023 ? local.iter_1022 : {
    input = (local.curr_1023.code == ","
      ? substr(local.iter_1022.input, 1, -1)
      : local.iter_1022.input)

    output = (local.curr_1023.code == "."
      ? "${local.iter_1022.output}${jsondecode(format("\"\\u%04x\"", local.iter_1022.tape[local.iter_1022.tape_ptr]))}"
      : local.iter_1022.output)
    
    tape = (
      local.curr_1023.code == "+"
        ? [for i, b in local.iter_1022.tape : (i == local.iter_1022.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1023.code == "-"
        ? [for i, b in local.iter_1022.tape : (i == local.iter_1022.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1023.code == ","
        ? [for i, b in local.iter_1022.tape : (i == local.iter_1022.tape_ptr ? local.ascii_lookup[local.curr_1023.input] : b)]
        : local.iter_1022.tape)

    tape_ptr = (
      local.curr_1023.code == "<"
        ? local.iter_1022.tape_ptr == 0 ? length(local.iter_1022.tape) - 1 : local.iter_1022.tape_ptr - 1 :
      local.curr_1023.code == ">"
        ? local.iter_1022.tape_ptr == length(local.iter_1022.tape) - 1 ? 0 : local.iter_1022.tape_ptr + 1
        : local.iter_1022.tape_ptr)

    code_ptr = 1 + (
      local.curr_1023.code == "["
        ? local.iter_1022.tape[local.iter_1022.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1022.code_ptr)] : local.iter_1022.code_ptr :
      local.curr_1023.code == "]"
        ? local.iter_1022.tape[local.iter_1022.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1022.code_ptr)] : local.iter_1022.code_ptr
        : local.iter_1022.code_ptr)

    steps_taken = 1 + local.iter_1022.steps_taken
  }
}

locals {
  end_of_code_1024 = try(local.iter_1023.code_ptr >= length(var.code), true)

  curr_1024 = local.end_of_code_1024 ? null : {
    code = substr(var.code, local.iter_1023.code_ptr, 1)
    input = substr(var.code, local.iter_1023.code_ptr, 1) == "," ? substr(local.iter_1023.input, 0, 1) : null
  }

  iter_1024 = local.end_of_code_1024 ? local.iter_1023 : {
    input = (local.curr_1024.code == ","
      ? substr(local.iter_1023.input, 1, -1)
      : local.iter_1023.input)

    output = (local.curr_1024.code == "."
      ? "${local.iter_1023.output}${jsondecode(format("\"\\u%04x\"", local.iter_1023.tape[local.iter_1023.tape_ptr]))}"
      : local.iter_1023.output)
    
    tape = (
      local.curr_1024.code == "+"
        ? [for i, b in local.iter_1023.tape : (i == local.iter_1023.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1024.code == "-"
        ? [for i, b in local.iter_1023.tape : (i == local.iter_1023.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1024.code == ","
        ? [for i, b in local.iter_1023.tape : (i == local.iter_1023.tape_ptr ? local.ascii_lookup[local.curr_1024.input] : b)]
        : local.iter_1023.tape)

    tape_ptr = (
      local.curr_1024.code == "<"
        ? local.iter_1023.tape_ptr == 0 ? length(local.iter_1023.tape) - 1 : local.iter_1023.tape_ptr - 1 :
      local.curr_1024.code == ">"
        ? local.iter_1023.tape_ptr == length(local.iter_1023.tape) - 1 ? 0 : local.iter_1023.tape_ptr + 1
        : local.iter_1023.tape_ptr)

    code_ptr = 1 + (
      local.curr_1024.code == "["
        ? local.iter_1023.tape[local.iter_1023.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1023.code_ptr)] : local.iter_1023.code_ptr :
      local.curr_1024.code == "]"
        ? local.iter_1023.tape[local.iter_1023.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1023.code_ptr)] : local.iter_1023.code_ptr
        : local.iter_1023.code_ptr)

    steps_taken = 1 + local.iter_1023.steps_taken
  }
}

locals {
  end_of_code_1025 = try(local.iter_1024.code_ptr >= length(var.code), true)

  curr_1025 = local.end_of_code_1025 ? null : {
    code = substr(var.code, local.iter_1024.code_ptr, 1)
    input = substr(var.code, local.iter_1024.code_ptr, 1) == "," ? substr(local.iter_1024.input, 0, 1) : null
  }

  iter_1025 = local.end_of_code_1025 ? local.iter_1024 : {
    input = (local.curr_1025.code == ","
      ? substr(local.iter_1024.input, 1, -1)
      : local.iter_1024.input)

    output = (local.curr_1025.code == "."
      ? "${local.iter_1024.output}${jsondecode(format("\"\\u%04x\"", local.iter_1024.tape[local.iter_1024.tape_ptr]))}"
      : local.iter_1024.output)
    
    tape = (
      local.curr_1025.code == "+"
        ? [for i, b in local.iter_1024.tape : (i == local.iter_1024.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1025.code == "-"
        ? [for i, b in local.iter_1024.tape : (i == local.iter_1024.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1025.code == ","
        ? [for i, b in local.iter_1024.tape : (i == local.iter_1024.tape_ptr ? local.ascii_lookup[local.curr_1025.input] : b)]
        : local.iter_1024.tape)

    tape_ptr = (
      local.curr_1025.code == "<"
        ? local.iter_1024.tape_ptr == 0 ? length(local.iter_1024.tape) - 1 : local.iter_1024.tape_ptr - 1 :
      local.curr_1025.code == ">"
        ? local.iter_1024.tape_ptr == length(local.iter_1024.tape) - 1 ? 0 : local.iter_1024.tape_ptr + 1
        : local.iter_1024.tape_ptr)

    code_ptr = 1 + (
      local.curr_1025.code == "["
        ? local.iter_1024.tape[local.iter_1024.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1024.code_ptr)] : local.iter_1024.code_ptr :
      local.curr_1025.code == "]"
        ? local.iter_1024.tape[local.iter_1024.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1024.code_ptr)] : local.iter_1024.code_ptr
        : local.iter_1024.code_ptr)

    steps_taken = 1 + local.iter_1024.steps_taken
  }
}

locals {
  end_of_code_1026 = try(local.iter_1025.code_ptr >= length(var.code), true)

  curr_1026 = local.end_of_code_1026 ? null : {
    code = substr(var.code, local.iter_1025.code_ptr, 1)
    input = substr(var.code, local.iter_1025.code_ptr, 1) == "," ? substr(local.iter_1025.input, 0, 1) : null
  }

  iter_1026 = local.end_of_code_1026 ? local.iter_1025 : {
    input = (local.curr_1026.code == ","
      ? substr(local.iter_1025.input, 1, -1)
      : local.iter_1025.input)

    output = (local.curr_1026.code == "."
      ? "${local.iter_1025.output}${jsondecode(format("\"\\u%04x\"", local.iter_1025.tape[local.iter_1025.tape_ptr]))}"
      : local.iter_1025.output)
    
    tape = (
      local.curr_1026.code == "+"
        ? [for i, b in local.iter_1025.tape : (i == local.iter_1025.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1026.code == "-"
        ? [for i, b in local.iter_1025.tape : (i == local.iter_1025.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1026.code == ","
        ? [for i, b in local.iter_1025.tape : (i == local.iter_1025.tape_ptr ? local.ascii_lookup[local.curr_1026.input] : b)]
        : local.iter_1025.tape)

    tape_ptr = (
      local.curr_1026.code == "<"
        ? local.iter_1025.tape_ptr == 0 ? length(local.iter_1025.tape) - 1 : local.iter_1025.tape_ptr - 1 :
      local.curr_1026.code == ">"
        ? local.iter_1025.tape_ptr == length(local.iter_1025.tape) - 1 ? 0 : local.iter_1025.tape_ptr + 1
        : local.iter_1025.tape_ptr)

    code_ptr = 1 + (
      local.curr_1026.code == "["
        ? local.iter_1025.tape[local.iter_1025.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1025.code_ptr)] : local.iter_1025.code_ptr :
      local.curr_1026.code == "]"
        ? local.iter_1025.tape[local.iter_1025.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1025.code_ptr)] : local.iter_1025.code_ptr
        : local.iter_1025.code_ptr)

    steps_taken = 1 + local.iter_1025.steps_taken
  }
}

locals {
  end_of_code_1027 = try(local.iter_1026.code_ptr >= length(var.code), true)

  curr_1027 = local.end_of_code_1027 ? null : {
    code = substr(var.code, local.iter_1026.code_ptr, 1)
    input = substr(var.code, local.iter_1026.code_ptr, 1) == "," ? substr(local.iter_1026.input, 0, 1) : null
  }

  iter_1027 = local.end_of_code_1027 ? local.iter_1026 : {
    input = (local.curr_1027.code == ","
      ? substr(local.iter_1026.input, 1, -1)
      : local.iter_1026.input)

    output = (local.curr_1027.code == "."
      ? "${local.iter_1026.output}${jsondecode(format("\"\\u%04x\"", local.iter_1026.tape[local.iter_1026.tape_ptr]))}"
      : local.iter_1026.output)
    
    tape = (
      local.curr_1027.code == "+"
        ? [for i, b in local.iter_1026.tape : (i == local.iter_1026.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1027.code == "-"
        ? [for i, b in local.iter_1026.tape : (i == local.iter_1026.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1027.code == ","
        ? [for i, b in local.iter_1026.tape : (i == local.iter_1026.tape_ptr ? local.ascii_lookup[local.curr_1027.input] : b)]
        : local.iter_1026.tape)

    tape_ptr = (
      local.curr_1027.code == "<"
        ? local.iter_1026.tape_ptr == 0 ? length(local.iter_1026.tape) - 1 : local.iter_1026.tape_ptr - 1 :
      local.curr_1027.code == ">"
        ? local.iter_1026.tape_ptr == length(local.iter_1026.tape) - 1 ? 0 : local.iter_1026.tape_ptr + 1
        : local.iter_1026.tape_ptr)

    code_ptr = 1 + (
      local.curr_1027.code == "["
        ? local.iter_1026.tape[local.iter_1026.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1026.code_ptr)] : local.iter_1026.code_ptr :
      local.curr_1027.code == "]"
        ? local.iter_1026.tape[local.iter_1026.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1026.code_ptr)] : local.iter_1026.code_ptr
        : local.iter_1026.code_ptr)

    steps_taken = 1 + local.iter_1026.steps_taken
  }
}

locals {
  end_of_code_1028 = try(local.iter_1027.code_ptr >= length(var.code), true)

  curr_1028 = local.end_of_code_1028 ? null : {
    code = substr(var.code, local.iter_1027.code_ptr, 1)
    input = substr(var.code, local.iter_1027.code_ptr, 1) == "," ? substr(local.iter_1027.input, 0, 1) : null
  }

  iter_1028 = local.end_of_code_1028 ? local.iter_1027 : {
    input = (local.curr_1028.code == ","
      ? substr(local.iter_1027.input, 1, -1)
      : local.iter_1027.input)

    output = (local.curr_1028.code == "."
      ? "${local.iter_1027.output}${jsondecode(format("\"\\u%04x\"", local.iter_1027.tape[local.iter_1027.tape_ptr]))}"
      : local.iter_1027.output)
    
    tape = (
      local.curr_1028.code == "+"
        ? [for i, b in local.iter_1027.tape : (i == local.iter_1027.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1028.code == "-"
        ? [for i, b in local.iter_1027.tape : (i == local.iter_1027.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1028.code == ","
        ? [for i, b in local.iter_1027.tape : (i == local.iter_1027.tape_ptr ? local.ascii_lookup[local.curr_1028.input] : b)]
        : local.iter_1027.tape)

    tape_ptr = (
      local.curr_1028.code == "<"
        ? local.iter_1027.tape_ptr == 0 ? length(local.iter_1027.tape) - 1 : local.iter_1027.tape_ptr - 1 :
      local.curr_1028.code == ">"
        ? local.iter_1027.tape_ptr == length(local.iter_1027.tape) - 1 ? 0 : local.iter_1027.tape_ptr + 1
        : local.iter_1027.tape_ptr)

    code_ptr = 1 + (
      local.curr_1028.code == "["
        ? local.iter_1027.tape[local.iter_1027.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1027.code_ptr)] : local.iter_1027.code_ptr :
      local.curr_1028.code == "]"
        ? local.iter_1027.tape[local.iter_1027.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1027.code_ptr)] : local.iter_1027.code_ptr
        : local.iter_1027.code_ptr)

    steps_taken = 1 + local.iter_1027.steps_taken
  }
}

locals {
  end_of_code_1029 = try(local.iter_1028.code_ptr >= length(var.code), true)

  curr_1029 = local.end_of_code_1029 ? null : {
    code = substr(var.code, local.iter_1028.code_ptr, 1)
    input = substr(var.code, local.iter_1028.code_ptr, 1) == "," ? substr(local.iter_1028.input, 0, 1) : null
  }

  iter_1029 = local.end_of_code_1029 ? local.iter_1028 : {
    input = (local.curr_1029.code == ","
      ? substr(local.iter_1028.input, 1, -1)
      : local.iter_1028.input)

    output = (local.curr_1029.code == "."
      ? "${local.iter_1028.output}${jsondecode(format("\"\\u%04x\"", local.iter_1028.tape[local.iter_1028.tape_ptr]))}"
      : local.iter_1028.output)
    
    tape = (
      local.curr_1029.code == "+"
        ? [for i, b in local.iter_1028.tape : (i == local.iter_1028.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1029.code == "-"
        ? [for i, b in local.iter_1028.tape : (i == local.iter_1028.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1029.code == ","
        ? [for i, b in local.iter_1028.tape : (i == local.iter_1028.tape_ptr ? local.ascii_lookup[local.curr_1029.input] : b)]
        : local.iter_1028.tape)

    tape_ptr = (
      local.curr_1029.code == "<"
        ? local.iter_1028.tape_ptr == 0 ? length(local.iter_1028.tape) - 1 : local.iter_1028.tape_ptr - 1 :
      local.curr_1029.code == ">"
        ? local.iter_1028.tape_ptr == length(local.iter_1028.tape) - 1 ? 0 : local.iter_1028.tape_ptr + 1
        : local.iter_1028.tape_ptr)

    code_ptr = 1 + (
      local.curr_1029.code == "["
        ? local.iter_1028.tape[local.iter_1028.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1028.code_ptr)] : local.iter_1028.code_ptr :
      local.curr_1029.code == "]"
        ? local.iter_1028.tape[local.iter_1028.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1028.code_ptr)] : local.iter_1028.code_ptr
        : local.iter_1028.code_ptr)

    steps_taken = 1 + local.iter_1028.steps_taken
  }
}

locals {
  end_of_code_1030 = try(local.iter_1029.code_ptr >= length(var.code), true)

  curr_1030 = local.end_of_code_1030 ? null : {
    code = substr(var.code, local.iter_1029.code_ptr, 1)
    input = substr(var.code, local.iter_1029.code_ptr, 1) == "," ? substr(local.iter_1029.input, 0, 1) : null
  }

  iter_1030 = local.end_of_code_1030 ? local.iter_1029 : {
    input = (local.curr_1030.code == ","
      ? substr(local.iter_1029.input, 1, -1)
      : local.iter_1029.input)

    output = (local.curr_1030.code == "."
      ? "${local.iter_1029.output}${jsondecode(format("\"\\u%04x\"", local.iter_1029.tape[local.iter_1029.tape_ptr]))}"
      : local.iter_1029.output)
    
    tape = (
      local.curr_1030.code == "+"
        ? [for i, b in local.iter_1029.tape : (i == local.iter_1029.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1030.code == "-"
        ? [for i, b in local.iter_1029.tape : (i == local.iter_1029.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1030.code == ","
        ? [for i, b in local.iter_1029.tape : (i == local.iter_1029.tape_ptr ? local.ascii_lookup[local.curr_1030.input] : b)]
        : local.iter_1029.tape)

    tape_ptr = (
      local.curr_1030.code == "<"
        ? local.iter_1029.tape_ptr == 0 ? length(local.iter_1029.tape) - 1 : local.iter_1029.tape_ptr - 1 :
      local.curr_1030.code == ">"
        ? local.iter_1029.tape_ptr == length(local.iter_1029.tape) - 1 ? 0 : local.iter_1029.tape_ptr + 1
        : local.iter_1029.tape_ptr)

    code_ptr = 1 + (
      local.curr_1030.code == "["
        ? local.iter_1029.tape[local.iter_1029.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1029.code_ptr)] : local.iter_1029.code_ptr :
      local.curr_1030.code == "]"
        ? local.iter_1029.tape[local.iter_1029.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1029.code_ptr)] : local.iter_1029.code_ptr
        : local.iter_1029.code_ptr)

    steps_taken = 1 + local.iter_1029.steps_taken
  }
}

locals {
  end_of_code_1031 = try(local.iter_1030.code_ptr >= length(var.code), true)

  curr_1031 = local.end_of_code_1031 ? null : {
    code = substr(var.code, local.iter_1030.code_ptr, 1)
    input = substr(var.code, local.iter_1030.code_ptr, 1) == "," ? substr(local.iter_1030.input, 0, 1) : null
  }

  iter_1031 = local.end_of_code_1031 ? local.iter_1030 : {
    input = (local.curr_1031.code == ","
      ? substr(local.iter_1030.input, 1, -1)
      : local.iter_1030.input)

    output = (local.curr_1031.code == "."
      ? "${local.iter_1030.output}${jsondecode(format("\"\\u%04x\"", local.iter_1030.tape[local.iter_1030.tape_ptr]))}"
      : local.iter_1030.output)
    
    tape = (
      local.curr_1031.code == "+"
        ? [for i, b in local.iter_1030.tape : (i == local.iter_1030.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1031.code == "-"
        ? [for i, b in local.iter_1030.tape : (i == local.iter_1030.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1031.code == ","
        ? [for i, b in local.iter_1030.tape : (i == local.iter_1030.tape_ptr ? local.ascii_lookup[local.curr_1031.input] : b)]
        : local.iter_1030.tape)

    tape_ptr = (
      local.curr_1031.code == "<"
        ? local.iter_1030.tape_ptr == 0 ? length(local.iter_1030.tape) - 1 : local.iter_1030.tape_ptr - 1 :
      local.curr_1031.code == ">"
        ? local.iter_1030.tape_ptr == length(local.iter_1030.tape) - 1 ? 0 : local.iter_1030.tape_ptr + 1
        : local.iter_1030.tape_ptr)

    code_ptr = 1 + (
      local.curr_1031.code == "["
        ? local.iter_1030.tape[local.iter_1030.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1030.code_ptr)] : local.iter_1030.code_ptr :
      local.curr_1031.code == "]"
        ? local.iter_1030.tape[local.iter_1030.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1030.code_ptr)] : local.iter_1030.code_ptr
        : local.iter_1030.code_ptr)

    steps_taken = 1 + local.iter_1030.steps_taken
  }
}

locals {
  end_of_code_1032 = try(local.iter_1031.code_ptr >= length(var.code), true)

  curr_1032 = local.end_of_code_1032 ? null : {
    code = substr(var.code, local.iter_1031.code_ptr, 1)
    input = substr(var.code, local.iter_1031.code_ptr, 1) == "," ? substr(local.iter_1031.input, 0, 1) : null
  }

  iter_1032 = local.end_of_code_1032 ? local.iter_1031 : {
    input = (local.curr_1032.code == ","
      ? substr(local.iter_1031.input, 1, -1)
      : local.iter_1031.input)

    output = (local.curr_1032.code == "."
      ? "${local.iter_1031.output}${jsondecode(format("\"\\u%04x\"", local.iter_1031.tape[local.iter_1031.tape_ptr]))}"
      : local.iter_1031.output)
    
    tape = (
      local.curr_1032.code == "+"
        ? [for i, b in local.iter_1031.tape : (i == local.iter_1031.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1032.code == "-"
        ? [for i, b in local.iter_1031.tape : (i == local.iter_1031.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1032.code == ","
        ? [for i, b in local.iter_1031.tape : (i == local.iter_1031.tape_ptr ? local.ascii_lookup[local.curr_1032.input] : b)]
        : local.iter_1031.tape)

    tape_ptr = (
      local.curr_1032.code == "<"
        ? local.iter_1031.tape_ptr == 0 ? length(local.iter_1031.tape) - 1 : local.iter_1031.tape_ptr - 1 :
      local.curr_1032.code == ">"
        ? local.iter_1031.tape_ptr == length(local.iter_1031.tape) - 1 ? 0 : local.iter_1031.tape_ptr + 1
        : local.iter_1031.tape_ptr)

    code_ptr = 1 + (
      local.curr_1032.code == "["
        ? local.iter_1031.tape[local.iter_1031.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1031.code_ptr)] : local.iter_1031.code_ptr :
      local.curr_1032.code == "]"
        ? local.iter_1031.tape[local.iter_1031.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1031.code_ptr)] : local.iter_1031.code_ptr
        : local.iter_1031.code_ptr)

    steps_taken = 1 + local.iter_1031.steps_taken
  }
}

locals {
  end_of_code_1033 = try(local.iter_1032.code_ptr >= length(var.code), true)

  curr_1033 = local.end_of_code_1033 ? null : {
    code = substr(var.code, local.iter_1032.code_ptr, 1)
    input = substr(var.code, local.iter_1032.code_ptr, 1) == "," ? substr(local.iter_1032.input, 0, 1) : null
  }

  iter_1033 = local.end_of_code_1033 ? local.iter_1032 : {
    input = (local.curr_1033.code == ","
      ? substr(local.iter_1032.input, 1, -1)
      : local.iter_1032.input)

    output = (local.curr_1033.code == "."
      ? "${local.iter_1032.output}${jsondecode(format("\"\\u%04x\"", local.iter_1032.tape[local.iter_1032.tape_ptr]))}"
      : local.iter_1032.output)
    
    tape = (
      local.curr_1033.code == "+"
        ? [for i, b in local.iter_1032.tape : (i == local.iter_1032.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1033.code == "-"
        ? [for i, b in local.iter_1032.tape : (i == local.iter_1032.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1033.code == ","
        ? [for i, b in local.iter_1032.tape : (i == local.iter_1032.tape_ptr ? local.ascii_lookup[local.curr_1033.input] : b)]
        : local.iter_1032.tape)

    tape_ptr = (
      local.curr_1033.code == "<"
        ? local.iter_1032.tape_ptr == 0 ? length(local.iter_1032.tape) - 1 : local.iter_1032.tape_ptr - 1 :
      local.curr_1033.code == ">"
        ? local.iter_1032.tape_ptr == length(local.iter_1032.tape) - 1 ? 0 : local.iter_1032.tape_ptr + 1
        : local.iter_1032.tape_ptr)

    code_ptr = 1 + (
      local.curr_1033.code == "["
        ? local.iter_1032.tape[local.iter_1032.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1032.code_ptr)] : local.iter_1032.code_ptr :
      local.curr_1033.code == "]"
        ? local.iter_1032.tape[local.iter_1032.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1032.code_ptr)] : local.iter_1032.code_ptr
        : local.iter_1032.code_ptr)

    steps_taken = 1 + local.iter_1032.steps_taken
  }
}

locals {
  end_of_code_1034 = try(local.iter_1033.code_ptr >= length(var.code), true)

  curr_1034 = local.end_of_code_1034 ? null : {
    code = substr(var.code, local.iter_1033.code_ptr, 1)
    input = substr(var.code, local.iter_1033.code_ptr, 1) == "," ? substr(local.iter_1033.input, 0, 1) : null
  }

  iter_1034 = local.end_of_code_1034 ? local.iter_1033 : {
    input = (local.curr_1034.code == ","
      ? substr(local.iter_1033.input, 1, -1)
      : local.iter_1033.input)

    output = (local.curr_1034.code == "."
      ? "${local.iter_1033.output}${jsondecode(format("\"\\u%04x\"", local.iter_1033.tape[local.iter_1033.tape_ptr]))}"
      : local.iter_1033.output)
    
    tape = (
      local.curr_1034.code == "+"
        ? [for i, b in local.iter_1033.tape : (i == local.iter_1033.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1034.code == "-"
        ? [for i, b in local.iter_1033.tape : (i == local.iter_1033.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1034.code == ","
        ? [for i, b in local.iter_1033.tape : (i == local.iter_1033.tape_ptr ? local.ascii_lookup[local.curr_1034.input] : b)]
        : local.iter_1033.tape)

    tape_ptr = (
      local.curr_1034.code == "<"
        ? local.iter_1033.tape_ptr == 0 ? length(local.iter_1033.tape) - 1 : local.iter_1033.tape_ptr - 1 :
      local.curr_1034.code == ">"
        ? local.iter_1033.tape_ptr == length(local.iter_1033.tape) - 1 ? 0 : local.iter_1033.tape_ptr + 1
        : local.iter_1033.tape_ptr)

    code_ptr = 1 + (
      local.curr_1034.code == "["
        ? local.iter_1033.tape[local.iter_1033.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1033.code_ptr)] : local.iter_1033.code_ptr :
      local.curr_1034.code == "]"
        ? local.iter_1033.tape[local.iter_1033.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1033.code_ptr)] : local.iter_1033.code_ptr
        : local.iter_1033.code_ptr)

    steps_taken = 1 + local.iter_1033.steps_taken
  }
}

locals {
  end_of_code_1035 = try(local.iter_1034.code_ptr >= length(var.code), true)

  curr_1035 = local.end_of_code_1035 ? null : {
    code = substr(var.code, local.iter_1034.code_ptr, 1)
    input = substr(var.code, local.iter_1034.code_ptr, 1) == "," ? substr(local.iter_1034.input, 0, 1) : null
  }

  iter_1035 = local.end_of_code_1035 ? local.iter_1034 : {
    input = (local.curr_1035.code == ","
      ? substr(local.iter_1034.input, 1, -1)
      : local.iter_1034.input)

    output = (local.curr_1035.code == "."
      ? "${local.iter_1034.output}${jsondecode(format("\"\\u%04x\"", local.iter_1034.tape[local.iter_1034.tape_ptr]))}"
      : local.iter_1034.output)
    
    tape = (
      local.curr_1035.code == "+"
        ? [for i, b in local.iter_1034.tape : (i == local.iter_1034.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1035.code == "-"
        ? [for i, b in local.iter_1034.tape : (i == local.iter_1034.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1035.code == ","
        ? [for i, b in local.iter_1034.tape : (i == local.iter_1034.tape_ptr ? local.ascii_lookup[local.curr_1035.input] : b)]
        : local.iter_1034.tape)

    tape_ptr = (
      local.curr_1035.code == "<"
        ? local.iter_1034.tape_ptr == 0 ? length(local.iter_1034.tape) - 1 : local.iter_1034.tape_ptr - 1 :
      local.curr_1035.code == ">"
        ? local.iter_1034.tape_ptr == length(local.iter_1034.tape) - 1 ? 0 : local.iter_1034.tape_ptr + 1
        : local.iter_1034.tape_ptr)

    code_ptr = 1 + (
      local.curr_1035.code == "["
        ? local.iter_1034.tape[local.iter_1034.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1034.code_ptr)] : local.iter_1034.code_ptr :
      local.curr_1035.code == "]"
        ? local.iter_1034.tape[local.iter_1034.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1034.code_ptr)] : local.iter_1034.code_ptr
        : local.iter_1034.code_ptr)

    steps_taken = 1 + local.iter_1034.steps_taken
  }
}

locals {
  end_of_code_1036 = try(local.iter_1035.code_ptr >= length(var.code), true)

  curr_1036 = local.end_of_code_1036 ? null : {
    code = substr(var.code, local.iter_1035.code_ptr, 1)
    input = substr(var.code, local.iter_1035.code_ptr, 1) == "," ? substr(local.iter_1035.input, 0, 1) : null
  }

  iter_1036 = local.end_of_code_1036 ? local.iter_1035 : {
    input = (local.curr_1036.code == ","
      ? substr(local.iter_1035.input, 1, -1)
      : local.iter_1035.input)

    output = (local.curr_1036.code == "."
      ? "${local.iter_1035.output}${jsondecode(format("\"\\u%04x\"", local.iter_1035.tape[local.iter_1035.tape_ptr]))}"
      : local.iter_1035.output)
    
    tape = (
      local.curr_1036.code == "+"
        ? [for i, b in local.iter_1035.tape : (i == local.iter_1035.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1036.code == "-"
        ? [for i, b in local.iter_1035.tape : (i == local.iter_1035.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1036.code == ","
        ? [for i, b in local.iter_1035.tape : (i == local.iter_1035.tape_ptr ? local.ascii_lookup[local.curr_1036.input] : b)]
        : local.iter_1035.tape)

    tape_ptr = (
      local.curr_1036.code == "<"
        ? local.iter_1035.tape_ptr == 0 ? length(local.iter_1035.tape) - 1 : local.iter_1035.tape_ptr - 1 :
      local.curr_1036.code == ">"
        ? local.iter_1035.tape_ptr == length(local.iter_1035.tape) - 1 ? 0 : local.iter_1035.tape_ptr + 1
        : local.iter_1035.tape_ptr)

    code_ptr = 1 + (
      local.curr_1036.code == "["
        ? local.iter_1035.tape[local.iter_1035.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1035.code_ptr)] : local.iter_1035.code_ptr :
      local.curr_1036.code == "]"
        ? local.iter_1035.tape[local.iter_1035.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1035.code_ptr)] : local.iter_1035.code_ptr
        : local.iter_1035.code_ptr)

    steps_taken = 1 + local.iter_1035.steps_taken
  }
}

locals {
  end_of_code_1037 = try(local.iter_1036.code_ptr >= length(var.code), true)

  curr_1037 = local.end_of_code_1037 ? null : {
    code = substr(var.code, local.iter_1036.code_ptr, 1)
    input = substr(var.code, local.iter_1036.code_ptr, 1) == "," ? substr(local.iter_1036.input, 0, 1) : null
  }

  iter_1037 = local.end_of_code_1037 ? local.iter_1036 : {
    input = (local.curr_1037.code == ","
      ? substr(local.iter_1036.input, 1, -1)
      : local.iter_1036.input)

    output = (local.curr_1037.code == "."
      ? "${local.iter_1036.output}${jsondecode(format("\"\\u%04x\"", local.iter_1036.tape[local.iter_1036.tape_ptr]))}"
      : local.iter_1036.output)
    
    tape = (
      local.curr_1037.code == "+"
        ? [for i, b in local.iter_1036.tape : (i == local.iter_1036.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1037.code == "-"
        ? [for i, b in local.iter_1036.tape : (i == local.iter_1036.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1037.code == ","
        ? [for i, b in local.iter_1036.tape : (i == local.iter_1036.tape_ptr ? local.ascii_lookup[local.curr_1037.input] : b)]
        : local.iter_1036.tape)

    tape_ptr = (
      local.curr_1037.code == "<"
        ? local.iter_1036.tape_ptr == 0 ? length(local.iter_1036.tape) - 1 : local.iter_1036.tape_ptr - 1 :
      local.curr_1037.code == ">"
        ? local.iter_1036.tape_ptr == length(local.iter_1036.tape) - 1 ? 0 : local.iter_1036.tape_ptr + 1
        : local.iter_1036.tape_ptr)

    code_ptr = 1 + (
      local.curr_1037.code == "["
        ? local.iter_1036.tape[local.iter_1036.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1036.code_ptr)] : local.iter_1036.code_ptr :
      local.curr_1037.code == "]"
        ? local.iter_1036.tape[local.iter_1036.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1036.code_ptr)] : local.iter_1036.code_ptr
        : local.iter_1036.code_ptr)

    steps_taken = 1 + local.iter_1036.steps_taken
  }
}

locals {
  end_of_code_1038 = try(local.iter_1037.code_ptr >= length(var.code), true)

  curr_1038 = local.end_of_code_1038 ? null : {
    code = substr(var.code, local.iter_1037.code_ptr, 1)
    input = substr(var.code, local.iter_1037.code_ptr, 1) == "," ? substr(local.iter_1037.input, 0, 1) : null
  }

  iter_1038 = local.end_of_code_1038 ? local.iter_1037 : {
    input = (local.curr_1038.code == ","
      ? substr(local.iter_1037.input, 1, -1)
      : local.iter_1037.input)

    output = (local.curr_1038.code == "."
      ? "${local.iter_1037.output}${jsondecode(format("\"\\u%04x\"", local.iter_1037.tape[local.iter_1037.tape_ptr]))}"
      : local.iter_1037.output)
    
    tape = (
      local.curr_1038.code == "+"
        ? [for i, b in local.iter_1037.tape : (i == local.iter_1037.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1038.code == "-"
        ? [for i, b in local.iter_1037.tape : (i == local.iter_1037.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1038.code == ","
        ? [for i, b in local.iter_1037.tape : (i == local.iter_1037.tape_ptr ? local.ascii_lookup[local.curr_1038.input] : b)]
        : local.iter_1037.tape)

    tape_ptr = (
      local.curr_1038.code == "<"
        ? local.iter_1037.tape_ptr == 0 ? length(local.iter_1037.tape) - 1 : local.iter_1037.tape_ptr - 1 :
      local.curr_1038.code == ">"
        ? local.iter_1037.tape_ptr == length(local.iter_1037.tape) - 1 ? 0 : local.iter_1037.tape_ptr + 1
        : local.iter_1037.tape_ptr)

    code_ptr = 1 + (
      local.curr_1038.code == "["
        ? local.iter_1037.tape[local.iter_1037.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1037.code_ptr)] : local.iter_1037.code_ptr :
      local.curr_1038.code == "]"
        ? local.iter_1037.tape[local.iter_1037.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1037.code_ptr)] : local.iter_1037.code_ptr
        : local.iter_1037.code_ptr)

    steps_taken = 1 + local.iter_1037.steps_taken
  }
}

locals {
  end_of_code_1039 = try(local.iter_1038.code_ptr >= length(var.code), true)

  curr_1039 = local.end_of_code_1039 ? null : {
    code = substr(var.code, local.iter_1038.code_ptr, 1)
    input = substr(var.code, local.iter_1038.code_ptr, 1) == "," ? substr(local.iter_1038.input, 0, 1) : null
  }

  iter_1039 = local.end_of_code_1039 ? local.iter_1038 : {
    input = (local.curr_1039.code == ","
      ? substr(local.iter_1038.input, 1, -1)
      : local.iter_1038.input)

    output = (local.curr_1039.code == "."
      ? "${local.iter_1038.output}${jsondecode(format("\"\\u%04x\"", local.iter_1038.tape[local.iter_1038.tape_ptr]))}"
      : local.iter_1038.output)
    
    tape = (
      local.curr_1039.code == "+"
        ? [for i, b in local.iter_1038.tape : (i == local.iter_1038.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1039.code == "-"
        ? [for i, b in local.iter_1038.tape : (i == local.iter_1038.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1039.code == ","
        ? [for i, b in local.iter_1038.tape : (i == local.iter_1038.tape_ptr ? local.ascii_lookup[local.curr_1039.input] : b)]
        : local.iter_1038.tape)

    tape_ptr = (
      local.curr_1039.code == "<"
        ? local.iter_1038.tape_ptr == 0 ? length(local.iter_1038.tape) - 1 : local.iter_1038.tape_ptr - 1 :
      local.curr_1039.code == ">"
        ? local.iter_1038.tape_ptr == length(local.iter_1038.tape) - 1 ? 0 : local.iter_1038.tape_ptr + 1
        : local.iter_1038.tape_ptr)

    code_ptr = 1 + (
      local.curr_1039.code == "["
        ? local.iter_1038.tape[local.iter_1038.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1038.code_ptr)] : local.iter_1038.code_ptr :
      local.curr_1039.code == "]"
        ? local.iter_1038.tape[local.iter_1038.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1038.code_ptr)] : local.iter_1038.code_ptr
        : local.iter_1038.code_ptr)

    steps_taken = 1 + local.iter_1038.steps_taken
  }
}

locals {
  end_of_code_1040 = try(local.iter_1039.code_ptr >= length(var.code), true)

  curr_1040 = local.end_of_code_1040 ? null : {
    code = substr(var.code, local.iter_1039.code_ptr, 1)
    input = substr(var.code, local.iter_1039.code_ptr, 1) == "," ? substr(local.iter_1039.input, 0, 1) : null
  }

  iter_1040 = local.end_of_code_1040 ? local.iter_1039 : {
    input = (local.curr_1040.code == ","
      ? substr(local.iter_1039.input, 1, -1)
      : local.iter_1039.input)

    output = (local.curr_1040.code == "."
      ? "${local.iter_1039.output}${jsondecode(format("\"\\u%04x\"", local.iter_1039.tape[local.iter_1039.tape_ptr]))}"
      : local.iter_1039.output)
    
    tape = (
      local.curr_1040.code == "+"
        ? [for i, b in local.iter_1039.tape : (i == local.iter_1039.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1040.code == "-"
        ? [for i, b in local.iter_1039.tape : (i == local.iter_1039.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1040.code == ","
        ? [for i, b in local.iter_1039.tape : (i == local.iter_1039.tape_ptr ? local.ascii_lookup[local.curr_1040.input] : b)]
        : local.iter_1039.tape)

    tape_ptr = (
      local.curr_1040.code == "<"
        ? local.iter_1039.tape_ptr == 0 ? length(local.iter_1039.tape) - 1 : local.iter_1039.tape_ptr - 1 :
      local.curr_1040.code == ">"
        ? local.iter_1039.tape_ptr == length(local.iter_1039.tape) - 1 ? 0 : local.iter_1039.tape_ptr + 1
        : local.iter_1039.tape_ptr)

    code_ptr = 1 + (
      local.curr_1040.code == "["
        ? local.iter_1039.tape[local.iter_1039.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1039.code_ptr)] : local.iter_1039.code_ptr :
      local.curr_1040.code == "]"
        ? local.iter_1039.tape[local.iter_1039.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1039.code_ptr)] : local.iter_1039.code_ptr
        : local.iter_1039.code_ptr)

    steps_taken = 1 + local.iter_1039.steps_taken
  }
}

locals {
  end_of_code_1041 = try(local.iter_1040.code_ptr >= length(var.code), true)

  curr_1041 = local.end_of_code_1041 ? null : {
    code = substr(var.code, local.iter_1040.code_ptr, 1)
    input = substr(var.code, local.iter_1040.code_ptr, 1) == "," ? substr(local.iter_1040.input, 0, 1) : null
  }

  iter_1041 = local.end_of_code_1041 ? local.iter_1040 : {
    input = (local.curr_1041.code == ","
      ? substr(local.iter_1040.input, 1, -1)
      : local.iter_1040.input)

    output = (local.curr_1041.code == "."
      ? "${local.iter_1040.output}${jsondecode(format("\"\\u%04x\"", local.iter_1040.tape[local.iter_1040.tape_ptr]))}"
      : local.iter_1040.output)
    
    tape = (
      local.curr_1041.code == "+"
        ? [for i, b in local.iter_1040.tape : (i == local.iter_1040.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1041.code == "-"
        ? [for i, b in local.iter_1040.tape : (i == local.iter_1040.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1041.code == ","
        ? [for i, b in local.iter_1040.tape : (i == local.iter_1040.tape_ptr ? local.ascii_lookup[local.curr_1041.input] : b)]
        : local.iter_1040.tape)

    tape_ptr = (
      local.curr_1041.code == "<"
        ? local.iter_1040.tape_ptr == 0 ? length(local.iter_1040.tape) - 1 : local.iter_1040.tape_ptr - 1 :
      local.curr_1041.code == ">"
        ? local.iter_1040.tape_ptr == length(local.iter_1040.tape) - 1 ? 0 : local.iter_1040.tape_ptr + 1
        : local.iter_1040.tape_ptr)

    code_ptr = 1 + (
      local.curr_1041.code == "["
        ? local.iter_1040.tape[local.iter_1040.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1040.code_ptr)] : local.iter_1040.code_ptr :
      local.curr_1041.code == "]"
        ? local.iter_1040.tape[local.iter_1040.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1040.code_ptr)] : local.iter_1040.code_ptr
        : local.iter_1040.code_ptr)

    steps_taken = 1 + local.iter_1040.steps_taken
  }
}

locals {
  end_of_code_1042 = try(local.iter_1041.code_ptr >= length(var.code), true)

  curr_1042 = local.end_of_code_1042 ? null : {
    code = substr(var.code, local.iter_1041.code_ptr, 1)
    input = substr(var.code, local.iter_1041.code_ptr, 1) == "," ? substr(local.iter_1041.input, 0, 1) : null
  }

  iter_1042 = local.end_of_code_1042 ? local.iter_1041 : {
    input = (local.curr_1042.code == ","
      ? substr(local.iter_1041.input, 1, -1)
      : local.iter_1041.input)

    output = (local.curr_1042.code == "."
      ? "${local.iter_1041.output}${jsondecode(format("\"\\u%04x\"", local.iter_1041.tape[local.iter_1041.tape_ptr]))}"
      : local.iter_1041.output)
    
    tape = (
      local.curr_1042.code == "+"
        ? [for i, b in local.iter_1041.tape : (i == local.iter_1041.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1042.code == "-"
        ? [for i, b in local.iter_1041.tape : (i == local.iter_1041.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1042.code == ","
        ? [for i, b in local.iter_1041.tape : (i == local.iter_1041.tape_ptr ? local.ascii_lookup[local.curr_1042.input] : b)]
        : local.iter_1041.tape)

    tape_ptr = (
      local.curr_1042.code == "<"
        ? local.iter_1041.tape_ptr == 0 ? length(local.iter_1041.tape) - 1 : local.iter_1041.tape_ptr - 1 :
      local.curr_1042.code == ">"
        ? local.iter_1041.tape_ptr == length(local.iter_1041.tape) - 1 ? 0 : local.iter_1041.tape_ptr + 1
        : local.iter_1041.tape_ptr)

    code_ptr = 1 + (
      local.curr_1042.code == "["
        ? local.iter_1041.tape[local.iter_1041.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1041.code_ptr)] : local.iter_1041.code_ptr :
      local.curr_1042.code == "]"
        ? local.iter_1041.tape[local.iter_1041.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1041.code_ptr)] : local.iter_1041.code_ptr
        : local.iter_1041.code_ptr)

    steps_taken = 1 + local.iter_1041.steps_taken
  }
}

locals {
  end_of_code_1043 = try(local.iter_1042.code_ptr >= length(var.code), true)

  curr_1043 = local.end_of_code_1043 ? null : {
    code = substr(var.code, local.iter_1042.code_ptr, 1)
    input = substr(var.code, local.iter_1042.code_ptr, 1) == "," ? substr(local.iter_1042.input, 0, 1) : null
  }

  iter_1043 = local.end_of_code_1043 ? local.iter_1042 : {
    input = (local.curr_1043.code == ","
      ? substr(local.iter_1042.input, 1, -1)
      : local.iter_1042.input)

    output = (local.curr_1043.code == "."
      ? "${local.iter_1042.output}${jsondecode(format("\"\\u%04x\"", local.iter_1042.tape[local.iter_1042.tape_ptr]))}"
      : local.iter_1042.output)
    
    tape = (
      local.curr_1043.code == "+"
        ? [for i, b in local.iter_1042.tape : (i == local.iter_1042.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1043.code == "-"
        ? [for i, b in local.iter_1042.tape : (i == local.iter_1042.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1043.code == ","
        ? [for i, b in local.iter_1042.tape : (i == local.iter_1042.tape_ptr ? local.ascii_lookup[local.curr_1043.input] : b)]
        : local.iter_1042.tape)

    tape_ptr = (
      local.curr_1043.code == "<"
        ? local.iter_1042.tape_ptr == 0 ? length(local.iter_1042.tape) - 1 : local.iter_1042.tape_ptr - 1 :
      local.curr_1043.code == ">"
        ? local.iter_1042.tape_ptr == length(local.iter_1042.tape) - 1 ? 0 : local.iter_1042.tape_ptr + 1
        : local.iter_1042.tape_ptr)

    code_ptr = 1 + (
      local.curr_1043.code == "["
        ? local.iter_1042.tape[local.iter_1042.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1042.code_ptr)] : local.iter_1042.code_ptr :
      local.curr_1043.code == "]"
        ? local.iter_1042.tape[local.iter_1042.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1042.code_ptr)] : local.iter_1042.code_ptr
        : local.iter_1042.code_ptr)

    steps_taken = 1 + local.iter_1042.steps_taken
  }
}

locals {
  end_of_code_1044 = try(local.iter_1043.code_ptr >= length(var.code), true)

  curr_1044 = local.end_of_code_1044 ? null : {
    code = substr(var.code, local.iter_1043.code_ptr, 1)
    input = substr(var.code, local.iter_1043.code_ptr, 1) == "," ? substr(local.iter_1043.input, 0, 1) : null
  }

  iter_1044 = local.end_of_code_1044 ? local.iter_1043 : {
    input = (local.curr_1044.code == ","
      ? substr(local.iter_1043.input, 1, -1)
      : local.iter_1043.input)

    output = (local.curr_1044.code == "."
      ? "${local.iter_1043.output}${jsondecode(format("\"\\u%04x\"", local.iter_1043.tape[local.iter_1043.tape_ptr]))}"
      : local.iter_1043.output)
    
    tape = (
      local.curr_1044.code == "+"
        ? [for i, b in local.iter_1043.tape : (i == local.iter_1043.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1044.code == "-"
        ? [for i, b in local.iter_1043.tape : (i == local.iter_1043.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1044.code == ","
        ? [for i, b in local.iter_1043.tape : (i == local.iter_1043.tape_ptr ? local.ascii_lookup[local.curr_1044.input] : b)]
        : local.iter_1043.tape)

    tape_ptr = (
      local.curr_1044.code == "<"
        ? local.iter_1043.tape_ptr == 0 ? length(local.iter_1043.tape) - 1 : local.iter_1043.tape_ptr - 1 :
      local.curr_1044.code == ">"
        ? local.iter_1043.tape_ptr == length(local.iter_1043.tape) - 1 ? 0 : local.iter_1043.tape_ptr + 1
        : local.iter_1043.tape_ptr)

    code_ptr = 1 + (
      local.curr_1044.code == "["
        ? local.iter_1043.tape[local.iter_1043.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1043.code_ptr)] : local.iter_1043.code_ptr :
      local.curr_1044.code == "]"
        ? local.iter_1043.tape[local.iter_1043.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1043.code_ptr)] : local.iter_1043.code_ptr
        : local.iter_1043.code_ptr)

    steps_taken = 1 + local.iter_1043.steps_taken
  }
}

locals {
  end_of_code_1045 = try(local.iter_1044.code_ptr >= length(var.code), true)

  curr_1045 = local.end_of_code_1045 ? null : {
    code = substr(var.code, local.iter_1044.code_ptr, 1)
    input = substr(var.code, local.iter_1044.code_ptr, 1) == "," ? substr(local.iter_1044.input, 0, 1) : null
  }

  iter_1045 = local.end_of_code_1045 ? local.iter_1044 : {
    input = (local.curr_1045.code == ","
      ? substr(local.iter_1044.input, 1, -1)
      : local.iter_1044.input)

    output = (local.curr_1045.code == "."
      ? "${local.iter_1044.output}${jsondecode(format("\"\\u%04x\"", local.iter_1044.tape[local.iter_1044.tape_ptr]))}"
      : local.iter_1044.output)
    
    tape = (
      local.curr_1045.code == "+"
        ? [for i, b in local.iter_1044.tape : (i == local.iter_1044.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1045.code == "-"
        ? [for i, b in local.iter_1044.tape : (i == local.iter_1044.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1045.code == ","
        ? [for i, b in local.iter_1044.tape : (i == local.iter_1044.tape_ptr ? local.ascii_lookup[local.curr_1045.input] : b)]
        : local.iter_1044.tape)

    tape_ptr = (
      local.curr_1045.code == "<"
        ? local.iter_1044.tape_ptr == 0 ? length(local.iter_1044.tape) - 1 : local.iter_1044.tape_ptr - 1 :
      local.curr_1045.code == ">"
        ? local.iter_1044.tape_ptr == length(local.iter_1044.tape) - 1 ? 0 : local.iter_1044.tape_ptr + 1
        : local.iter_1044.tape_ptr)

    code_ptr = 1 + (
      local.curr_1045.code == "["
        ? local.iter_1044.tape[local.iter_1044.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1044.code_ptr)] : local.iter_1044.code_ptr :
      local.curr_1045.code == "]"
        ? local.iter_1044.tape[local.iter_1044.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1044.code_ptr)] : local.iter_1044.code_ptr
        : local.iter_1044.code_ptr)

    steps_taken = 1 + local.iter_1044.steps_taken
  }
}

locals {
  end_of_code_1046 = try(local.iter_1045.code_ptr >= length(var.code), true)

  curr_1046 = local.end_of_code_1046 ? null : {
    code = substr(var.code, local.iter_1045.code_ptr, 1)
    input = substr(var.code, local.iter_1045.code_ptr, 1) == "," ? substr(local.iter_1045.input, 0, 1) : null
  }

  iter_1046 = local.end_of_code_1046 ? local.iter_1045 : {
    input = (local.curr_1046.code == ","
      ? substr(local.iter_1045.input, 1, -1)
      : local.iter_1045.input)

    output = (local.curr_1046.code == "."
      ? "${local.iter_1045.output}${jsondecode(format("\"\\u%04x\"", local.iter_1045.tape[local.iter_1045.tape_ptr]))}"
      : local.iter_1045.output)
    
    tape = (
      local.curr_1046.code == "+"
        ? [for i, b in local.iter_1045.tape : (i == local.iter_1045.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1046.code == "-"
        ? [for i, b in local.iter_1045.tape : (i == local.iter_1045.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1046.code == ","
        ? [for i, b in local.iter_1045.tape : (i == local.iter_1045.tape_ptr ? local.ascii_lookup[local.curr_1046.input] : b)]
        : local.iter_1045.tape)

    tape_ptr = (
      local.curr_1046.code == "<"
        ? local.iter_1045.tape_ptr == 0 ? length(local.iter_1045.tape) - 1 : local.iter_1045.tape_ptr - 1 :
      local.curr_1046.code == ">"
        ? local.iter_1045.tape_ptr == length(local.iter_1045.tape) - 1 ? 0 : local.iter_1045.tape_ptr + 1
        : local.iter_1045.tape_ptr)

    code_ptr = 1 + (
      local.curr_1046.code == "["
        ? local.iter_1045.tape[local.iter_1045.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1045.code_ptr)] : local.iter_1045.code_ptr :
      local.curr_1046.code == "]"
        ? local.iter_1045.tape[local.iter_1045.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1045.code_ptr)] : local.iter_1045.code_ptr
        : local.iter_1045.code_ptr)

    steps_taken = 1 + local.iter_1045.steps_taken
  }
}

locals {
  end_of_code_1047 = try(local.iter_1046.code_ptr >= length(var.code), true)

  curr_1047 = local.end_of_code_1047 ? null : {
    code = substr(var.code, local.iter_1046.code_ptr, 1)
    input = substr(var.code, local.iter_1046.code_ptr, 1) == "," ? substr(local.iter_1046.input, 0, 1) : null
  }

  iter_1047 = local.end_of_code_1047 ? local.iter_1046 : {
    input = (local.curr_1047.code == ","
      ? substr(local.iter_1046.input, 1, -1)
      : local.iter_1046.input)

    output = (local.curr_1047.code == "."
      ? "${local.iter_1046.output}${jsondecode(format("\"\\u%04x\"", local.iter_1046.tape[local.iter_1046.tape_ptr]))}"
      : local.iter_1046.output)
    
    tape = (
      local.curr_1047.code == "+"
        ? [for i, b in local.iter_1046.tape : (i == local.iter_1046.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1047.code == "-"
        ? [for i, b in local.iter_1046.tape : (i == local.iter_1046.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1047.code == ","
        ? [for i, b in local.iter_1046.tape : (i == local.iter_1046.tape_ptr ? local.ascii_lookup[local.curr_1047.input] : b)]
        : local.iter_1046.tape)

    tape_ptr = (
      local.curr_1047.code == "<"
        ? local.iter_1046.tape_ptr == 0 ? length(local.iter_1046.tape) - 1 : local.iter_1046.tape_ptr - 1 :
      local.curr_1047.code == ">"
        ? local.iter_1046.tape_ptr == length(local.iter_1046.tape) - 1 ? 0 : local.iter_1046.tape_ptr + 1
        : local.iter_1046.tape_ptr)

    code_ptr = 1 + (
      local.curr_1047.code == "["
        ? local.iter_1046.tape[local.iter_1046.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1046.code_ptr)] : local.iter_1046.code_ptr :
      local.curr_1047.code == "]"
        ? local.iter_1046.tape[local.iter_1046.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1046.code_ptr)] : local.iter_1046.code_ptr
        : local.iter_1046.code_ptr)

    steps_taken = 1 + local.iter_1046.steps_taken
  }
}

locals {
  end_of_code_1048 = try(local.iter_1047.code_ptr >= length(var.code), true)

  curr_1048 = local.end_of_code_1048 ? null : {
    code = substr(var.code, local.iter_1047.code_ptr, 1)
    input = substr(var.code, local.iter_1047.code_ptr, 1) == "," ? substr(local.iter_1047.input, 0, 1) : null
  }

  iter_1048 = local.end_of_code_1048 ? local.iter_1047 : {
    input = (local.curr_1048.code == ","
      ? substr(local.iter_1047.input, 1, -1)
      : local.iter_1047.input)

    output = (local.curr_1048.code == "."
      ? "${local.iter_1047.output}${jsondecode(format("\"\\u%04x\"", local.iter_1047.tape[local.iter_1047.tape_ptr]))}"
      : local.iter_1047.output)
    
    tape = (
      local.curr_1048.code == "+"
        ? [for i, b in local.iter_1047.tape : (i == local.iter_1047.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1048.code == "-"
        ? [for i, b in local.iter_1047.tape : (i == local.iter_1047.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1048.code == ","
        ? [for i, b in local.iter_1047.tape : (i == local.iter_1047.tape_ptr ? local.ascii_lookup[local.curr_1048.input] : b)]
        : local.iter_1047.tape)

    tape_ptr = (
      local.curr_1048.code == "<"
        ? local.iter_1047.tape_ptr == 0 ? length(local.iter_1047.tape) - 1 : local.iter_1047.tape_ptr - 1 :
      local.curr_1048.code == ">"
        ? local.iter_1047.tape_ptr == length(local.iter_1047.tape) - 1 ? 0 : local.iter_1047.tape_ptr + 1
        : local.iter_1047.tape_ptr)

    code_ptr = 1 + (
      local.curr_1048.code == "["
        ? local.iter_1047.tape[local.iter_1047.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1047.code_ptr)] : local.iter_1047.code_ptr :
      local.curr_1048.code == "]"
        ? local.iter_1047.tape[local.iter_1047.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1047.code_ptr)] : local.iter_1047.code_ptr
        : local.iter_1047.code_ptr)

    steps_taken = 1 + local.iter_1047.steps_taken
  }
}

locals {
  end_of_code_1049 = try(local.iter_1048.code_ptr >= length(var.code), true)

  curr_1049 = local.end_of_code_1049 ? null : {
    code = substr(var.code, local.iter_1048.code_ptr, 1)
    input = substr(var.code, local.iter_1048.code_ptr, 1) == "," ? substr(local.iter_1048.input, 0, 1) : null
  }

  iter_1049 = local.end_of_code_1049 ? local.iter_1048 : {
    input = (local.curr_1049.code == ","
      ? substr(local.iter_1048.input, 1, -1)
      : local.iter_1048.input)

    output = (local.curr_1049.code == "."
      ? "${local.iter_1048.output}${jsondecode(format("\"\\u%04x\"", local.iter_1048.tape[local.iter_1048.tape_ptr]))}"
      : local.iter_1048.output)
    
    tape = (
      local.curr_1049.code == "+"
        ? [for i, b in local.iter_1048.tape : (i == local.iter_1048.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1049.code == "-"
        ? [for i, b in local.iter_1048.tape : (i == local.iter_1048.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1049.code == ","
        ? [for i, b in local.iter_1048.tape : (i == local.iter_1048.tape_ptr ? local.ascii_lookup[local.curr_1049.input] : b)]
        : local.iter_1048.tape)

    tape_ptr = (
      local.curr_1049.code == "<"
        ? local.iter_1048.tape_ptr == 0 ? length(local.iter_1048.tape) - 1 : local.iter_1048.tape_ptr - 1 :
      local.curr_1049.code == ">"
        ? local.iter_1048.tape_ptr == length(local.iter_1048.tape) - 1 ? 0 : local.iter_1048.tape_ptr + 1
        : local.iter_1048.tape_ptr)

    code_ptr = 1 + (
      local.curr_1049.code == "["
        ? local.iter_1048.tape[local.iter_1048.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1048.code_ptr)] : local.iter_1048.code_ptr :
      local.curr_1049.code == "]"
        ? local.iter_1048.tape[local.iter_1048.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1048.code_ptr)] : local.iter_1048.code_ptr
        : local.iter_1048.code_ptr)

    steps_taken = 1 + local.iter_1048.steps_taken
  }
}

locals {
  end_of_code_1050 = try(local.iter_1049.code_ptr >= length(var.code), true)

  curr_1050 = local.end_of_code_1050 ? null : {
    code = substr(var.code, local.iter_1049.code_ptr, 1)
    input = substr(var.code, local.iter_1049.code_ptr, 1) == "," ? substr(local.iter_1049.input, 0, 1) : null
  }

  iter_1050 = local.end_of_code_1050 ? local.iter_1049 : {
    input = (local.curr_1050.code == ","
      ? substr(local.iter_1049.input, 1, -1)
      : local.iter_1049.input)

    output = (local.curr_1050.code == "."
      ? "${local.iter_1049.output}${jsondecode(format("\"\\u%04x\"", local.iter_1049.tape[local.iter_1049.tape_ptr]))}"
      : local.iter_1049.output)
    
    tape = (
      local.curr_1050.code == "+"
        ? [for i, b in local.iter_1049.tape : (i == local.iter_1049.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1050.code == "-"
        ? [for i, b in local.iter_1049.tape : (i == local.iter_1049.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1050.code == ","
        ? [for i, b in local.iter_1049.tape : (i == local.iter_1049.tape_ptr ? local.ascii_lookup[local.curr_1050.input] : b)]
        : local.iter_1049.tape)

    tape_ptr = (
      local.curr_1050.code == "<"
        ? local.iter_1049.tape_ptr == 0 ? length(local.iter_1049.tape) - 1 : local.iter_1049.tape_ptr - 1 :
      local.curr_1050.code == ">"
        ? local.iter_1049.tape_ptr == length(local.iter_1049.tape) - 1 ? 0 : local.iter_1049.tape_ptr + 1
        : local.iter_1049.tape_ptr)

    code_ptr = 1 + (
      local.curr_1050.code == "["
        ? local.iter_1049.tape[local.iter_1049.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1049.code_ptr)] : local.iter_1049.code_ptr :
      local.curr_1050.code == "]"
        ? local.iter_1049.tape[local.iter_1049.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1049.code_ptr)] : local.iter_1049.code_ptr
        : local.iter_1049.code_ptr)

    steps_taken = 1 + local.iter_1049.steps_taken
  }
}

locals {
  end_of_code_1051 = try(local.iter_1050.code_ptr >= length(var.code), true)

  curr_1051 = local.end_of_code_1051 ? null : {
    code = substr(var.code, local.iter_1050.code_ptr, 1)
    input = substr(var.code, local.iter_1050.code_ptr, 1) == "," ? substr(local.iter_1050.input, 0, 1) : null
  }

  iter_1051 = local.end_of_code_1051 ? local.iter_1050 : {
    input = (local.curr_1051.code == ","
      ? substr(local.iter_1050.input, 1, -1)
      : local.iter_1050.input)

    output = (local.curr_1051.code == "."
      ? "${local.iter_1050.output}${jsondecode(format("\"\\u%04x\"", local.iter_1050.tape[local.iter_1050.tape_ptr]))}"
      : local.iter_1050.output)
    
    tape = (
      local.curr_1051.code == "+"
        ? [for i, b in local.iter_1050.tape : (i == local.iter_1050.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1051.code == "-"
        ? [for i, b in local.iter_1050.tape : (i == local.iter_1050.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1051.code == ","
        ? [for i, b in local.iter_1050.tape : (i == local.iter_1050.tape_ptr ? local.ascii_lookup[local.curr_1051.input] : b)]
        : local.iter_1050.tape)

    tape_ptr = (
      local.curr_1051.code == "<"
        ? local.iter_1050.tape_ptr == 0 ? length(local.iter_1050.tape) - 1 : local.iter_1050.tape_ptr - 1 :
      local.curr_1051.code == ">"
        ? local.iter_1050.tape_ptr == length(local.iter_1050.tape) - 1 ? 0 : local.iter_1050.tape_ptr + 1
        : local.iter_1050.tape_ptr)

    code_ptr = 1 + (
      local.curr_1051.code == "["
        ? local.iter_1050.tape[local.iter_1050.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1050.code_ptr)] : local.iter_1050.code_ptr :
      local.curr_1051.code == "]"
        ? local.iter_1050.tape[local.iter_1050.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1050.code_ptr)] : local.iter_1050.code_ptr
        : local.iter_1050.code_ptr)

    steps_taken = 1 + local.iter_1050.steps_taken
  }
}

locals {
  end_of_code_1052 = try(local.iter_1051.code_ptr >= length(var.code), true)

  curr_1052 = local.end_of_code_1052 ? null : {
    code = substr(var.code, local.iter_1051.code_ptr, 1)
    input = substr(var.code, local.iter_1051.code_ptr, 1) == "," ? substr(local.iter_1051.input, 0, 1) : null
  }

  iter_1052 = local.end_of_code_1052 ? local.iter_1051 : {
    input = (local.curr_1052.code == ","
      ? substr(local.iter_1051.input, 1, -1)
      : local.iter_1051.input)

    output = (local.curr_1052.code == "."
      ? "${local.iter_1051.output}${jsondecode(format("\"\\u%04x\"", local.iter_1051.tape[local.iter_1051.tape_ptr]))}"
      : local.iter_1051.output)
    
    tape = (
      local.curr_1052.code == "+"
        ? [for i, b in local.iter_1051.tape : (i == local.iter_1051.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1052.code == "-"
        ? [for i, b in local.iter_1051.tape : (i == local.iter_1051.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1052.code == ","
        ? [for i, b in local.iter_1051.tape : (i == local.iter_1051.tape_ptr ? local.ascii_lookup[local.curr_1052.input] : b)]
        : local.iter_1051.tape)

    tape_ptr = (
      local.curr_1052.code == "<"
        ? local.iter_1051.tape_ptr == 0 ? length(local.iter_1051.tape) - 1 : local.iter_1051.tape_ptr - 1 :
      local.curr_1052.code == ">"
        ? local.iter_1051.tape_ptr == length(local.iter_1051.tape) - 1 ? 0 : local.iter_1051.tape_ptr + 1
        : local.iter_1051.tape_ptr)

    code_ptr = 1 + (
      local.curr_1052.code == "["
        ? local.iter_1051.tape[local.iter_1051.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1051.code_ptr)] : local.iter_1051.code_ptr :
      local.curr_1052.code == "]"
        ? local.iter_1051.tape[local.iter_1051.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1051.code_ptr)] : local.iter_1051.code_ptr
        : local.iter_1051.code_ptr)

    steps_taken = 1 + local.iter_1051.steps_taken
  }
}

locals {
  end_of_code_1053 = try(local.iter_1052.code_ptr >= length(var.code), true)

  curr_1053 = local.end_of_code_1053 ? null : {
    code = substr(var.code, local.iter_1052.code_ptr, 1)
    input = substr(var.code, local.iter_1052.code_ptr, 1) == "," ? substr(local.iter_1052.input, 0, 1) : null
  }

  iter_1053 = local.end_of_code_1053 ? local.iter_1052 : {
    input = (local.curr_1053.code == ","
      ? substr(local.iter_1052.input, 1, -1)
      : local.iter_1052.input)

    output = (local.curr_1053.code == "."
      ? "${local.iter_1052.output}${jsondecode(format("\"\\u%04x\"", local.iter_1052.tape[local.iter_1052.tape_ptr]))}"
      : local.iter_1052.output)
    
    tape = (
      local.curr_1053.code == "+"
        ? [for i, b in local.iter_1052.tape : (i == local.iter_1052.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1053.code == "-"
        ? [for i, b in local.iter_1052.tape : (i == local.iter_1052.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1053.code == ","
        ? [for i, b in local.iter_1052.tape : (i == local.iter_1052.tape_ptr ? local.ascii_lookup[local.curr_1053.input] : b)]
        : local.iter_1052.tape)

    tape_ptr = (
      local.curr_1053.code == "<"
        ? local.iter_1052.tape_ptr == 0 ? length(local.iter_1052.tape) - 1 : local.iter_1052.tape_ptr - 1 :
      local.curr_1053.code == ">"
        ? local.iter_1052.tape_ptr == length(local.iter_1052.tape) - 1 ? 0 : local.iter_1052.tape_ptr + 1
        : local.iter_1052.tape_ptr)

    code_ptr = 1 + (
      local.curr_1053.code == "["
        ? local.iter_1052.tape[local.iter_1052.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1052.code_ptr)] : local.iter_1052.code_ptr :
      local.curr_1053.code == "]"
        ? local.iter_1052.tape[local.iter_1052.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1052.code_ptr)] : local.iter_1052.code_ptr
        : local.iter_1052.code_ptr)

    steps_taken = 1 + local.iter_1052.steps_taken
  }
}

locals {
  end_of_code_1054 = try(local.iter_1053.code_ptr >= length(var.code), true)

  curr_1054 = local.end_of_code_1054 ? null : {
    code = substr(var.code, local.iter_1053.code_ptr, 1)
    input = substr(var.code, local.iter_1053.code_ptr, 1) == "," ? substr(local.iter_1053.input, 0, 1) : null
  }

  iter_1054 = local.end_of_code_1054 ? local.iter_1053 : {
    input = (local.curr_1054.code == ","
      ? substr(local.iter_1053.input, 1, -1)
      : local.iter_1053.input)

    output = (local.curr_1054.code == "."
      ? "${local.iter_1053.output}${jsondecode(format("\"\\u%04x\"", local.iter_1053.tape[local.iter_1053.tape_ptr]))}"
      : local.iter_1053.output)
    
    tape = (
      local.curr_1054.code == "+"
        ? [for i, b in local.iter_1053.tape : (i == local.iter_1053.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1054.code == "-"
        ? [for i, b in local.iter_1053.tape : (i == local.iter_1053.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1054.code == ","
        ? [for i, b in local.iter_1053.tape : (i == local.iter_1053.tape_ptr ? local.ascii_lookup[local.curr_1054.input] : b)]
        : local.iter_1053.tape)

    tape_ptr = (
      local.curr_1054.code == "<"
        ? local.iter_1053.tape_ptr == 0 ? length(local.iter_1053.tape) - 1 : local.iter_1053.tape_ptr - 1 :
      local.curr_1054.code == ">"
        ? local.iter_1053.tape_ptr == length(local.iter_1053.tape) - 1 ? 0 : local.iter_1053.tape_ptr + 1
        : local.iter_1053.tape_ptr)

    code_ptr = 1 + (
      local.curr_1054.code == "["
        ? local.iter_1053.tape[local.iter_1053.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1053.code_ptr)] : local.iter_1053.code_ptr :
      local.curr_1054.code == "]"
        ? local.iter_1053.tape[local.iter_1053.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1053.code_ptr)] : local.iter_1053.code_ptr
        : local.iter_1053.code_ptr)

    steps_taken = 1 + local.iter_1053.steps_taken
  }
}

locals {
  end_of_code_1055 = try(local.iter_1054.code_ptr >= length(var.code), true)

  curr_1055 = local.end_of_code_1055 ? null : {
    code = substr(var.code, local.iter_1054.code_ptr, 1)
    input = substr(var.code, local.iter_1054.code_ptr, 1) == "," ? substr(local.iter_1054.input, 0, 1) : null
  }

  iter_1055 = local.end_of_code_1055 ? local.iter_1054 : {
    input = (local.curr_1055.code == ","
      ? substr(local.iter_1054.input, 1, -1)
      : local.iter_1054.input)

    output = (local.curr_1055.code == "."
      ? "${local.iter_1054.output}${jsondecode(format("\"\\u%04x\"", local.iter_1054.tape[local.iter_1054.tape_ptr]))}"
      : local.iter_1054.output)
    
    tape = (
      local.curr_1055.code == "+"
        ? [for i, b in local.iter_1054.tape : (i == local.iter_1054.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1055.code == "-"
        ? [for i, b in local.iter_1054.tape : (i == local.iter_1054.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1055.code == ","
        ? [for i, b in local.iter_1054.tape : (i == local.iter_1054.tape_ptr ? local.ascii_lookup[local.curr_1055.input] : b)]
        : local.iter_1054.tape)

    tape_ptr = (
      local.curr_1055.code == "<"
        ? local.iter_1054.tape_ptr == 0 ? length(local.iter_1054.tape) - 1 : local.iter_1054.tape_ptr - 1 :
      local.curr_1055.code == ">"
        ? local.iter_1054.tape_ptr == length(local.iter_1054.tape) - 1 ? 0 : local.iter_1054.tape_ptr + 1
        : local.iter_1054.tape_ptr)

    code_ptr = 1 + (
      local.curr_1055.code == "["
        ? local.iter_1054.tape[local.iter_1054.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1054.code_ptr)] : local.iter_1054.code_ptr :
      local.curr_1055.code == "]"
        ? local.iter_1054.tape[local.iter_1054.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1054.code_ptr)] : local.iter_1054.code_ptr
        : local.iter_1054.code_ptr)

    steps_taken = 1 + local.iter_1054.steps_taken
  }
}

locals {
  end_of_code_1056 = try(local.iter_1055.code_ptr >= length(var.code), true)

  curr_1056 = local.end_of_code_1056 ? null : {
    code = substr(var.code, local.iter_1055.code_ptr, 1)
    input = substr(var.code, local.iter_1055.code_ptr, 1) == "," ? substr(local.iter_1055.input, 0, 1) : null
  }

  iter_1056 = local.end_of_code_1056 ? local.iter_1055 : {
    input = (local.curr_1056.code == ","
      ? substr(local.iter_1055.input, 1, -1)
      : local.iter_1055.input)

    output = (local.curr_1056.code == "."
      ? "${local.iter_1055.output}${jsondecode(format("\"\\u%04x\"", local.iter_1055.tape[local.iter_1055.tape_ptr]))}"
      : local.iter_1055.output)
    
    tape = (
      local.curr_1056.code == "+"
        ? [for i, b in local.iter_1055.tape : (i == local.iter_1055.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1056.code == "-"
        ? [for i, b in local.iter_1055.tape : (i == local.iter_1055.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1056.code == ","
        ? [for i, b in local.iter_1055.tape : (i == local.iter_1055.tape_ptr ? local.ascii_lookup[local.curr_1056.input] : b)]
        : local.iter_1055.tape)

    tape_ptr = (
      local.curr_1056.code == "<"
        ? local.iter_1055.tape_ptr == 0 ? length(local.iter_1055.tape) - 1 : local.iter_1055.tape_ptr - 1 :
      local.curr_1056.code == ">"
        ? local.iter_1055.tape_ptr == length(local.iter_1055.tape) - 1 ? 0 : local.iter_1055.tape_ptr + 1
        : local.iter_1055.tape_ptr)

    code_ptr = 1 + (
      local.curr_1056.code == "["
        ? local.iter_1055.tape[local.iter_1055.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1055.code_ptr)] : local.iter_1055.code_ptr :
      local.curr_1056.code == "]"
        ? local.iter_1055.tape[local.iter_1055.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1055.code_ptr)] : local.iter_1055.code_ptr
        : local.iter_1055.code_ptr)

    steps_taken = 1 + local.iter_1055.steps_taken
  }
}

locals {
  end_of_code_1057 = try(local.iter_1056.code_ptr >= length(var.code), true)

  curr_1057 = local.end_of_code_1057 ? null : {
    code = substr(var.code, local.iter_1056.code_ptr, 1)
    input = substr(var.code, local.iter_1056.code_ptr, 1) == "," ? substr(local.iter_1056.input, 0, 1) : null
  }

  iter_1057 = local.end_of_code_1057 ? local.iter_1056 : {
    input = (local.curr_1057.code == ","
      ? substr(local.iter_1056.input, 1, -1)
      : local.iter_1056.input)

    output = (local.curr_1057.code == "."
      ? "${local.iter_1056.output}${jsondecode(format("\"\\u%04x\"", local.iter_1056.tape[local.iter_1056.tape_ptr]))}"
      : local.iter_1056.output)
    
    tape = (
      local.curr_1057.code == "+"
        ? [for i, b in local.iter_1056.tape : (i == local.iter_1056.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1057.code == "-"
        ? [for i, b in local.iter_1056.tape : (i == local.iter_1056.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1057.code == ","
        ? [for i, b in local.iter_1056.tape : (i == local.iter_1056.tape_ptr ? local.ascii_lookup[local.curr_1057.input] : b)]
        : local.iter_1056.tape)

    tape_ptr = (
      local.curr_1057.code == "<"
        ? local.iter_1056.tape_ptr == 0 ? length(local.iter_1056.tape) - 1 : local.iter_1056.tape_ptr - 1 :
      local.curr_1057.code == ">"
        ? local.iter_1056.tape_ptr == length(local.iter_1056.tape) - 1 ? 0 : local.iter_1056.tape_ptr + 1
        : local.iter_1056.tape_ptr)

    code_ptr = 1 + (
      local.curr_1057.code == "["
        ? local.iter_1056.tape[local.iter_1056.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1056.code_ptr)] : local.iter_1056.code_ptr :
      local.curr_1057.code == "]"
        ? local.iter_1056.tape[local.iter_1056.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1056.code_ptr)] : local.iter_1056.code_ptr
        : local.iter_1056.code_ptr)

    steps_taken = 1 + local.iter_1056.steps_taken
  }
}

locals {
  end_of_code_1058 = try(local.iter_1057.code_ptr >= length(var.code), true)

  curr_1058 = local.end_of_code_1058 ? null : {
    code = substr(var.code, local.iter_1057.code_ptr, 1)
    input = substr(var.code, local.iter_1057.code_ptr, 1) == "," ? substr(local.iter_1057.input, 0, 1) : null
  }

  iter_1058 = local.end_of_code_1058 ? local.iter_1057 : {
    input = (local.curr_1058.code == ","
      ? substr(local.iter_1057.input, 1, -1)
      : local.iter_1057.input)

    output = (local.curr_1058.code == "."
      ? "${local.iter_1057.output}${jsondecode(format("\"\\u%04x\"", local.iter_1057.tape[local.iter_1057.tape_ptr]))}"
      : local.iter_1057.output)
    
    tape = (
      local.curr_1058.code == "+"
        ? [for i, b in local.iter_1057.tape : (i == local.iter_1057.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1058.code == "-"
        ? [for i, b in local.iter_1057.tape : (i == local.iter_1057.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1058.code == ","
        ? [for i, b in local.iter_1057.tape : (i == local.iter_1057.tape_ptr ? local.ascii_lookup[local.curr_1058.input] : b)]
        : local.iter_1057.tape)

    tape_ptr = (
      local.curr_1058.code == "<"
        ? local.iter_1057.tape_ptr == 0 ? length(local.iter_1057.tape) - 1 : local.iter_1057.tape_ptr - 1 :
      local.curr_1058.code == ">"
        ? local.iter_1057.tape_ptr == length(local.iter_1057.tape) - 1 ? 0 : local.iter_1057.tape_ptr + 1
        : local.iter_1057.tape_ptr)

    code_ptr = 1 + (
      local.curr_1058.code == "["
        ? local.iter_1057.tape[local.iter_1057.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1057.code_ptr)] : local.iter_1057.code_ptr :
      local.curr_1058.code == "]"
        ? local.iter_1057.tape[local.iter_1057.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1057.code_ptr)] : local.iter_1057.code_ptr
        : local.iter_1057.code_ptr)

    steps_taken = 1 + local.iter_1057.steps_taken
  }
}

locals {
  end_of_code_1059 = try(local.iter_1058.code_ptr >= length(var.code), true)

  curr_1059 = local.end_of_code_1059 ? null : {
    code = substr(var.code, local.iter_1058.code_ptr, 1)
    input = substr(var.code, local.iter_1058.code_ptr, 1) == "," ? substr(local.iter_1058.input, 0, 1) : null
  }

  iter_1059 = local.end_of_code_1059 ? local.iter_1058 : {
    input = (local.curr_1059.code == ","
      ? substr(local.iter_1058.input, 1, -1)
      : local.iter_1058.input)

    output = (local.curr_1059.code == "."
      ? "${local.iter_1058.output}${jsondecode(format("\"\\u%04x\"", local.iter_1058.tape[local.iter_1058.tape_ptr]))}"
      : local.iter_1058.output)
    
    tape = (
      local.curr_1059.code == "+"
        ? [for i, b in local.iter_1058.tape : (i == local.iter_1058.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1059.code == "-"
        ? [for i, b in local.iter_1058.tape : (i == local.iter_1058.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1059.code == ","
        ? [for i, b in local.iter_1058.tape : (i == local.iter_1058.tape_ptr ? local.ascii_lookup[local.curr_1059.input] : b)]
        : local.iter_1058.tape)

    tape_ptr = (
      local.curr_1059.code == "<"
        ? local.iter_1058.tape_ptr == 0 ? length(local.iter_1058.tape) - 1 : local.iter_1058.tape_ptr - 1 :
      local.curr_1059.code == ">"
        ? local.iter_1058.tape_ptr == length(local.iter_1058.tape) - 1 ? 0 : local.iter_1058.tape_ptr + 1
        : local.iter_1058.tape_ptr)

    code_ptr = 1 + (
      local.curr_1059.code == "["
        ? local.iter_1058.tape[local.iter_1058.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1058.code_ptr)] : local.iter_1058.code_ptr :
      local.curr_1059.code == "]"
        ? local.iter_1058.tape[local.iter_1058.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1058.code_ptr)] : local.iter_1058.code_ptr
        : local.iter_1058.code_ptr)

    steps_taken = 1 + local.iter_1058.steps_taken
  }
}

locals {
  end_of_code_1060 = try(local.iter_1059.code_ptr >= length(var.code), true)

  curr_1060 = local.end_of_code_1060 ? null : {
    code = substr(var.code, local.iter_1059.code_ptr, 1)
    input = substr(var.code, local.iter_1059.code_ptr, 1) == "," ? substr(local.iter_1059.input, 0, 1) : null
  }

  iter_1060 = local.end_of_code_1060 ? local.iter_1059 : {
    input = (local.curr_1060.code == ","
      ? substr(local.iter_1059.input, 1, -1)
      : local.iter_1059.input)

    output = (local.curr_1060.code == "."
      ? "${local.iter_1059.output}${jsondecode(format("\"\\u%04x\"", local.iter_1059.tape[local.iter_1059.tape_ptr]))}"
      : local.iter_1059.output)
    
    tape = (
      local.curr_1060.code == "+"
        ? [for i, b in local.iter_1059.tape : (i == local.iter_1059.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1060.code == "-"
        ? [for i, b in local.iter_1059.tape : (i == local.iter_1059.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1060.code == ","
        ? [for i, b in local.iter_1059.tape : (i == local.iter_1059.tape_ptr ? local.ascii_lookup[local.curr_1060.input] : b)]
        : local.iter_1059.tape)

    tape_ptr = (
      local.curr_1060.code == "<"
        ? local.iter_1059.tape_ptr == 0 ? length(local.iter_1059.tape) - 1 : local.iter_1059.tape_ptr - 1 :
      local.curr_1060.code == ">"
        ? local.iter_1059.tape_ptr == length(local.iter_1059.tape) - 1 ? 0 : local.iter_1059.tape_ptr + 1
        : local.iter_1059.tape_ptr)

    code_ptr = 1 + (
      local.curr_1060.code == "["
        ? local.iter_1059.tape[local.iter_1059.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1059.code_ptr)] : local.iter_1059.code_ptr :
      local.curr_1060.code == "]"
        ? local.iter_1059.tape[local.iter_1059.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1059.code_ptr)] : local.iter_1059.code_ptr
        : local.iter_1059.code_ptr)

    steps_taken = 1 + local.iter_1059.steps_taken
  }
}

locals {
  end_of_code_1061 = try(local.iter_1060.code_ptr >= length(var.code), true)

  curr_1061 = local.end_of_code_1061 ? null : {
    code = substr(var.code, local.iter_1060.code_ptr, 1)
    input = substr(var.code, local.iter_1060.code_ptr, 1) == "," ? substr(local.iter_1060.input, 0, 1) : null
  }

  iter_1061 = local.end_of_code_1061 ? local.iter_1060 : {
    input = (local.curr_1061.code == ","
      ? substr(local.iter_1060.input, 1, -1)
      : local.iter_1060.input)

    output = (local.curr_1061.code == "."
      ? "${local.iter_1060.output}${jsondecode(format("\"\\u%04x\"", local.iter_1060.tape[local.iter_1060.tape_ptr]))}"
      : local.iter_1060.output)
    
    tape = (
      local.curr_1061.code == "+"
        ? [for i, b in local.iter_1060.tape : (i == local.iter_1060.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1061.code == "-"
        ? [for i, b in local.iter_1060.tape : (i == local.iter_1060.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1061.code == ","
        ? [for i, b in local.iter_1060.tape : (i == local.iter_1060.tape_ptr ? local.ascii_lookup[local.curr_1061.input] : b)]
        : local.iter_1060.tape)

    tape_ptr = (
      local.curr_1061.code == "<"
        ? local.iter_1060.tape_ptr == 0 ? length(local.iter_1060.tape) - 1 : local.iter_1060.tape_ptr - 1 :
      local.curr_1061.code == ">"
        ? local.iter_1060.tape_ptr == length(local.iter_1060.tape) - 1 ? 0 : local.iter_1060.tape_ptr + 1
        : local.iter_1060.tape_ptr)

    code_ptr = 1 + (
      local.curr_1061.code == "["
        ? local.iter_1060.tape[local.iter_1060.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1060.code_ptr)] : local.iter_1060.code_ptr :
      local.curr_1061.code == "]"
        ? local.iter_1060.tape[local.iter_1060.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1060.code_ptr)] : local.iter_1060.code_ptr
        : local.iter_1060.code_ptr)

    steps_taken = 1 + local.iter_1060.steps_taken
  }
}

locals {
  end_of_code_1062 = try(local.iter_1061.code_ptr >= length(var.code), true)

  curr_1062 = local.end_of_code_1062 ? null : {
    code = substr(var.code, local.iter_1061.code_ptr, 1)
    input = substr(var.code, local.iter_1061.code_ptr, 1) == "," ? substr(local.iter_1061.input, 0, 1) : null
  }

  iter_1062 = local.end_of_code_1062 ? local.iter_1061 : {
    input = (local.curr_1062.code == ","
      ? substr(local.iter_1061.input, 1, -1)
      : local.iter_1061.input)

    output = (local.curr_1062.code == "."
      ? "${local.iter_1061.output}${jsondecode(format("\"\\u%04x\"", local.iter_1061.tape[local.iter_1061.tape_ptr]))}"
      : local.iter_1061.output)
    
    tape = (
      local.curr_1062.code == "+"
        ? [for i, b in local.iter_1061.tape : (i == local.iter_1061.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1062.code == "-"
        ? [for i, b in local.iter_1061.tape : (i == local.iter_1061.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1062.code == ","
        ? [for i, b in local.iter_1061.tape : (i == local.iter_1061.tape_ptr ? local.ascii_lookup[local.curr_1062.input] : b)]
        : local.iter_1061.tape)

    tape_ptr = (
      local.curr_1062.code == "<"
        ? local.iter_1061.tape_ptr == 0 ? length(local.iter_1061.tape) - 1 : local.iter_1061.tape_ptr - 1 :
      local.curr_1062.code == ">"
        ? local.iter_1061.tape_ptr == length(local.iter_1061.tape) - 1 ? 0 : local.iter_1061.tape_ptr + 1
        : local.iter_1061.tape_ptr)

    code_ptr = 1 + (
      local.curr_1062.code == "["
        ? local.iter_1061.tape[local.iter_1061.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1061.code_ptr)] : local.iter_1061.code_ptr :
      local.curr_1062.code == "]"
        ? local.iter_1061.tape[local.iter_1061.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1061.code_ptr)] : local.iter_1061.code_ptr
        : local.iter_1061.code_ptr)

    steps_taken = 1 + local.iter_1061.steps_taken
  }
}

locals {
  end_of_code_1063 = try(local.iter_1062.code_ptr >= length(var.code), true)

  curr_1063 = local.end_of_code_1063 ? null : {
    code = substr(var.code, local.iter_1062.code_ptr, 1)
    input = substr(var.code, local.iter_1062.code_ptr, 1) == "," ? substr(local.iter_1062.input, 0, 1) : null
  }

  iter_1063 = local.end_of_code_1063 ? local.iter_1062 : {
    input = (local.curr_1063.code == ","
      ? substr(local.iter_1062.input, 1, -1)
      : local.iter_1062.input)

    output = (local.curr_1063.code == "."
      ? "${local.iter_1062.output}${jsondecode(format("\"\\u%04x\"", local.iter_1062.tape[local.iter_1062.tape_ptr]))}"
      : local.iter_1062.output)
    
    tape = (
      local.curr_1063.code == "+"
        ? [for i, b in local.iter_1062.tape : (i == local.iter_1062.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1063.code == "-"
        ? [for i, b in local.iter_1062.tape : (i == local.iter_1062.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1063.code == ","
        ? [for i, b in local.iter_1062.tape : (i == local.iter_1062.tape_ptr ? local.ascii_lookup[local.curr_1063.input] : b)]
        : local.iter_1062.tape)

    tape_ptr = (
      local.curr_1063.code == "<"
        ? local.iter_1062.tape_ptr == 0 ? length(local.iter_1062.tape) - 1 : local.iter_1062.tape_ptr - 1 :
      local.curr_1063.code == ">"
        ? local.iter_1062.tape_ptr == length(local.iter_1062.tape) - 1 ? 0 : local.iter_1062.tape_ptr + 1
        : local.iter_1062.tape_ptr)

    code_ptr = 1 + (
      local.curr_1063.code == "["
        ? local.iter_1062.tape[local.iter_1062.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1062.code_ptr)] : local.iter_1062.code_ptr :
      local.curr_1063.code == "]"
        ? local.iter_1062.tape[local.iter_1062.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1062.code_ptr)] : local.iter_1062.code_ptr
        : local.iter_1062.code_ptr)

    steps_taken = 1 + local.iter_1062.steps_taken
  }
}

locals {
  end_of_code_1064 = try(local.iter_1063.code_ptr >= length(var.code), true)

  curr_1064 = local.end_of_code_1064 ? null : {
    code = substr(var.code, local.iter_1063.code_ptr, 1)
    input = substr(var.code, local.iter_1063.code_ptr, 1) == "," ? substr(local.iter_1063.input, 0, 1) : null
  }

  iter_1064 = local.end_of_code_1064 ? local.iter_1063 : {
    input = (local.curr_1064.code == ","
      ? substr(local.iter_1063.input, 1, -1)
      : local.iter_1063.input)

    output = (local.curr_1064.code == "."
      ? "${local.iter_1063.output}${jsondecode(format("\"\\u%04x\"", local.iter_1063.tape[local.iter_1063.tape_ptr]))}"
      : local.iter_1063.output)
    
    tape = (
      local.curr_1064.code == "+"
        ? [for i, b in local.iter_1063.tape : (i == local.iter_1063.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1064.code == "-"
        ? [for i, b in local.iter_1063.tape : (i == local.iter_1063.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1064.code == ","
        ? [for i, b in local.iter_1063.tape : (i == local.iter_1063.tape_ptr ? local.ascii_lookup[local.curr_1064.input] : b)]
        : local.iter_1063.tape)

    tape_ptr = (
      local.curr_1064.code == "<"
        ? local.iter_1063.tape_ptr == 0 ? length(local.iter_1063.tape) - 1 : local.iter_1063.tape_ptr - 1 :
      local.curr_1064.code == ">"
        ? local.iter_1063.tape_ptr == length(local.iter_1063.tape) - 1 ? 0 : local.iter_1063.tape_ptr + 1
        : local.iter_1063.tape_ptr)

    code_ptr = 1 + (
      local.curr_1064.code == "["
        ? local.iter_1063.tape[local.iter_1063.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1063.code_ptr)] : local.iter_1063.code_ptr :
      local.curr_1064.code == "]"
        ? local.iter_1063.tape[local.iter_1063.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1063.code_ptr)] : local.iter_1063.code_ptr
        : local.iter_1063.code_ptr)

    steps_taken = 1 + local.iter_1063.steps_taken
  }
}

locals {
  end_of_code_1065 = try(local.iter_1064.code_ptr >= length(var.code), true)

  curr_1065 = local.end_of_code_1065 ? null : {
    code = substr(var.code, local.iter_1064.code_ptr, 1)
    input = substr(var.code, local.iter_1064.code_ptr, 1) == "," ? substr(local.iter_1064.input, 0, 1) : null
  }

  iter_1065 = local.end_of_code_1065 ? local.iter_1064 : {
    input = (local.curr_1065.code == ","
      ? substr(local.iter_1064.input, 1, -1)
      : local.iter_1064.input)

    output = (local.curr_1065.code == "."
      ? "${local.iter_1064.output}${jsondecode(format("\"\\u%04x\"", local.iter_1064.tape[local.iter_1064.tape_ptr]))}"
      : local.iter_1064.output)
    
    tape = (
      local.curr_1065.code == "+"
        ? [for i, b in local.iter_1064.tape : (i == local.iter_1064.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1065.code == "-"
        ? [for i, b in local.iter_1064.tape : (i == local.iter_1064.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1065.code == ","
        ? [for i, b in local.iter_1064.tape : (i == local.iter_1064.tape_ptr ? local.ascii_lookup[local.curr_1065.input] : b)]
        : local.iter_1064.tape)

    tape_ptr = (
      local.curr_1065.code == "<"
        ? local.iter_1064.tape_ptr == 0 ? length(local.iter_1064.tape) - 1 : local.iter_1064.tape_ptr - 1 :
      local.curr_1065.code == ">"
        ? local.iter_1064.tape_ptr == length(local.iter_1064.tape) - 1 ? 0 : local.iter_1064.tape_ptr + 1
        : local.iter_1064.tape_ptr)

    code_ptr = 1 + (
      local.curr_1065.code == "["
        ? local.iter_1064.tape[local.iter_1064.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1064.code_ptr)] : local.iter_1064.code_ptr :
      local.curr_1065.code == "]"
        ? local.iter_1064.tape[local.iter_1064.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1064.code_ptr)] : local.iter_1064.code_ptr
        : local.iter_1064.code_ptr)

    steps_taken = 1 + local.iter_1064.steps_taken
  }
}

locals {
  end_of_code_1066 = try(local.iter_1065.code_ptr >= length(var.code), true)

  curr_1066 = local.end_of_code_1066 ? null : {
    code = substr(var.code, local.iter_1065.code_ptr, 1)
    input = substr(var.code, local.iter_1065.code_ptr, 1) == "," ? substr(local.iter_1065.input, 0, 1) : null
  }

  iter_1066 = local.end_of_code_1066 ? local.iter_1065 : {
    input = (local.curr_1066.code == ","
      ? substr(local.iter_1065.input, 1, -1)
      : local.iter_1065.input)

    output = (local.curr_1066.code == "."
      ? "${local.iter_1065.output}${jsondecode(format("\"\\u%04x\"", local.iter_1065.tape[local.iter_1065.tape_ptr]))}"
      : local.iter_1065.output)
    
    tape = (
      local.curr_1066.code == "+"
        ? [for i, b in local.iter_1065.tape : (i == local.iter_1065.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1066.code == "-"
        ? [for i, b in local.iter_1065.tape : (i == local.iter_1065.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1066.code == ","
        ? [for i, b in local.iter_1065.tape : (i == local.iter_1065.tape_ptr ? local.ascii_lookup[local.curr_1066.input] : b)]
        : local.iter_1065.tape)

    tape_ptr = (
      local.curr_1066.code == "<"
        ? local.iter_1065.tape_ptr == 0 ? length(local.iter_1065.tape) - 1 : local.iter_1065.tape_ptr - 1 :
      local.curr_1066.code == ">"
        ? local.iter_1065.tape_ptr == length(local.iter_1065.tape) - 1 ? 0 : local.iter_1065.tape_ptr + 1
        : local.iter_1065.tape_ptr)

    code_ptr = 1 + (
      local.curr_1066.code == "["
        ? local.iter_1065.tape[local.iter_1065.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1065.code_ptr)] : local.iter_1065.code_ptr :
      local.curr_1066.code == "]"
        ? local.iter_1065.tape[local.iter_1065.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1065.code_ptr)] : local.iter_1065.code_ptr
        : local.iter_1065.code_ptr)

    steps_taken = 1 + local.iter_1065.steps_taken
  }
}

locals {
  end_of_code_1067 = try(local.iter_1066.code_ptr >= length(var.code), true)

  curr_1067 = local.end_of_code_1067 ? null : {
    code = substr(var.code, local.iter_1066.code_ptr, 1)
    input = substr(var.code, local.iter_1066.code_ptr, 1) == "," ? substr(local.iter_1066.input, 0, 1) : null
  }

  iter_1067 = local.end_of_code_1067 ? local.iter_1066 : {
    input = (local.curr_1067.code == ","
      ? substr(local.iter_1066.input, 1, -1)
      : local.iter_1066.input)

    output = (local.curr_1067.code == "."
      ? "${local.iter_1066.output}${jsondecode(format("\"\\u%04x\"", local.iter_1066.tape[local.iter_1066.tape_ptr]))}"
      : local.iter_1066.output)
    
    tape = (
      local.curr_1067.code == "+"
        ? [for i, b in local.iter_1066.tape : (i == local.iter_1066.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1067.code == "-"
        ? [for i, b in local.iter_1066.tape : (i == local.iter_1066.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1067.code == ","
        ? [for i, b in local.iter_1066.tape : (i == local.iter_1066.tape_ptr ? local.ascii_lookup[local.curr_1067.input] : b)]
        : local.iter_1066.tape)

    tape_ptr = (
      local.curr_1067.code == "<"
        ? local.iter_1066.tape_ptr == 0 ? length(local.iter_1066.tape) - 1 : local.iter_1066.tape_ptr - 1 :
      local.curr_1067.code == ">"
        ? local.iter_1066.tape_ptr == length(local.iter_1066.tape) - 1 ? 0 : local.iter_1066.tape_ptr + 1
        : local.iter_1066.tape_ptr)

    code_ptr = 1 + (
      local.curr_1067.code == "["
        ? local.iter_1066.tape[local.iter_1066.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1066.code_ptr)] : local.iter_1066.code_ptr :
      local.curr_1067.code == "]"
        ? local.iter_1066.tape[local.iter_1066.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1066.code_ptr)] : local.iter_1066.code_ptr
        : local.iter_1066.code_ptr)

    steps_taken = 1 + local.iter_1066.steps_taken
  }
}

locals {
  end_of_code_1068 = try(local.iter_1067.code_ptr >= length(var.code), true)

  curr_1068 = local.end_of_code_1068 ? null : {
    code = substr(var.code, local.iter_1067.code_ptr, 1)
    input = substr(var.code, local.iter_1067.code_ptr, 1) == "," ? substr(local.iter_1067.input, 0, 1) : null
  }

  iter_1068 = local.end_of_code_1068 ? local.iter_1067 : {
    input = (local.curr_1068.code == ","
      ? substr(local.iter_1067.input, 1, -1)
      : local.iter_1067.input)

    output = (local.curr_1068.code == "."
      ? "${local.iter_1067.output}${jsondecode(format("\"\\u%04x\"", local.iter_1067.tape[local.iter_1067.tape_ptr]))}"
      : local.iter_1067.output)
    
    tape = (
      local.curr_1068.code == "+"
        ? [for i, b in local.iter_1067.tape : (i == local.iter_1067.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1068.code == "-"
        ? [for i, b in local.iter_1067.tape : (i == local.iter_1067.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1068.code == ","
        ? [for i, b in local.iter_1067.tape : (i == local.iter_1067.tape_ptr ? local.ascii_lookup[local.curr_1068.input] : b)]
        : local.iter_1067.tape)

    tape_ptr = (
      local.curr_1068.code == "<"
        ? local.iter_1067.tape_ptr == 0 ? length(local.iter_1067.tape) - 1 : local.iter_1067.tape_ptr - 1 :
      local.curr_1068.code == ">"
        ? local.iter_1067.tape_ptr == length(local.iter_1067.tape) - 1 ? 0 : local.iter_1067.tape_ptr + 1
        : local.iter_1067.tape_ptr)

    code_ptr = 1 + (
      local.curr_1068.code == "["
        ? local.iter_1067.tape[local.iter_1067.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1067.code_ptr)] : local.iter_1067.code_ptr :
      local.curr_1068.code == "]"
        ? local.iter_1067.tape[local.iter_1067.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1067.code_ptr)] : local.iter_1067.code_ptr
        : local.iter_1067.code_ptr)

    steps_taken = 1 + local.iter_1067.steps_taken
  }
}

locals {
  end_of_code_1069 = try(local.iter_1068.code_ptr >= length(var.code), true)

  curr_1069 = local.end_of_code_1069 ? null : {
    code = substr(var.code, local.iter_1068.code_ptr, 1)
    input = substr(var.code, local.iter_1068.code_ptr, 1) == "," ? substr(local.iter_1068.input, 0, 1) : null
  }

  iter_1069 = local.end_of_code_1069 ? local.iter_1068 : {
    input = (local.curr_1069.code == ","
      ? substr(local.iter_1068.input, 1, -1)
      : local.iter_1068.input)

    output = (local.curr_1069.code == "."
      ? "${local.iter_1068.output}${jsondecode(format("\"\\u%04x\"", local.iter_1068.tape[local.iter_1068.tape_ptr]))}"
      : local.iter_1068.output)
    
    tape = (
      local.curr_1069.code == "+"
        ? [for i, b in local.iter_1068.tape : (i == local.iter_1068.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1069.code == "-"
        ? [for i, b in local.iter_1068.tape : (i == local.iter_1068.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1069.code == ","
        ? [for i, b in local.iter_1068.tape : (i == local.iter_1068.tape_ptr ? local.ascii_lookup[local.curr_1069.input] : b)]
        : local.iter_1068.tape)

    tape_ptr = (
      local.curr_1069.code == "<"
        ? local.iter_1068.tape_ptr == 0 ? length(local.iter_1068.tape) - 1 : local.iter_1068.tape_ptr - 1 :
      local.curr_1069.code == ">"
        ? local.iter_1068.tape_ptr == length(local.iter_1068.tape) - 1 ? 0 : local.iter_1068.tape_ptr + 1
        : local.iter_1068.tape_ptr)

    code_ptr = 1 + (
      local.curr_1069.code == "["
        ? local.iter_1068.tape[local.iter_1068.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1068.code_ptr)] : local.iter_1068.code_ptr :
      local.curr_1069.code == "]"
        ? local.iter_1068.tape[local.iter_1068.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1068.code_ptr)] : local.iter_1068.code_ptr
        : local.iter_1068.code_ptr)

    steps_taken = 1 + local.iter_1068.steps_taken
  }
}

locals {
  end_of_code_1070 = try(local.iter_1069.code_ptr >= length(var.code), true)

  curr_1070 = local.end_of_code_1070 ? null : {
    code = substr(var.code, local.iter_1069.code_ptr, 1)
    input = substr(var.code, local.iter_1069.code_ptr, 1) == "," ? substr(local.iter_1069.input, 0, 1) : null
  }

  iter_1070 = local.end_of_code_1070 ? local.iter_1069 : {
    input = (local.curr_1070.code == ","
      ? substr(local.iter_1069.input, 1, -1)
      : local.iter_1069.input)

    output = (local.curr_1070.code == "."
      ? "${local.iter_1069.output}${jsondecode(format("\"\\u%04x\"", local.iter_1069.tape[local.iter_1069.tape_ptr]))}"
      : local.iter_1069.output)
    
    tape = (
      local.curr_1070.code == "+"
        ? [for i, b in local.iter_1069.tape : (i == local.iter_1069.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1070.code == "-"
        ? [for i, b in local.iter_1069.tape : (i == local.iter_1069.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1070.code == ","
        ? [for i, b in local.iter_1069.tape : (i == local.iter_1069.tape_ptr ? local.ascii_lookup[local.curr_1070.input] : b)]
        : local.iter_1069.tape)

    tape_ptr = (
      local.curr_1070.code == "<"
        ? local.iter_1069.tape_ptr == 0 ? length(local.iter_1069.tape) - 1 : local.iter_1069.tape_ptr - 1 :
      local.curr_1070.code == ">"
        ? local.iter_1069.tape_ptr == length(local.iter_1069.tape) - 1 ? 0 : local.iter_1069.tape_ptr + 1
        : local.iter_1069.tape_ptr)

    code_ptr = 1 + (
      local.curr_1070.code == "["
        ? local.iter_1069.tape[local.iter_1069.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1069.code_ptr)] : local.iter_1069.code_ptr :
      local.curr_1070.code == "]"
        ? local.iter_1069.tape[local.iter_1069.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1069.code_ptr)] : local.iter_1069.code_ptr
        : local.iter_1069.code_ptr)

    steps_taken = 1 + local.iter_1069.steps_taken
  }
}

locals {
  end_of_code_1071 = try(local.iter_1070.code_ptr >= length(var.code), true)

  curr_1071 = local.end_of_code_1071 ? null : {
    code = substr(var.code, local.iter_1070.code_ptr, 1)
    input = substr(var.code, local.iter_1070.code_ptr, 1) == "," ? substr(local.iter_1070.input, 0, 1) : null
  }

  iter_1071 = local.end_of_code_1071 ? local.iter_1070 : {
    input = (local.curr_1071.code == ","
      ? substr(local.iter_1070.input, 1, -1)
      : local.iter_1070.input)

    output = (local.curr_1071.code == "."
      ? "${local.iter_1070.output}${jsondecode(format("\"\\u%04x\"", local.iter_1070.tape[local.iter_1070.tape_ptr]))}"
      : local.iter_1070.output)
    
    tape = (
      local.curr_1071.code == "+"
        ? [for i, b in local.iter_1070.tape : (i == local.iter_1070.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1071.code == "-"
        ? [for i, b in local.iter_1070.tape : (i == local.iter_1070.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1071.code == ","
        ? [for i, b in local.iter_1070.tape : (i == local.iter_1070.tape_ptr ? local.ascii_lookup[local.curr_1071.input] : b)]
        : local.iter_1070.tape)

    tape_ptr = (
      local.curr_1071.code == "<"
        ? local.iter_1070.tape_ptr == 0 ? length(local.iter_1070.tape) - 1 : local.iter_1070.tape_ptr - 1 :
      local.curr_1071.code == ">"
        ? local.iter_1070.tape_ptr == length(local.iter_1070.tape) - 1 ? 0 : local.iter_1070.tape_ptr + 1
        : local.iter_1070.tape_ptr)

    code_ptr = 1 + (
      local.curr_1071.code == "["
        ? local.iter_1070.tape[local.iter_1070.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1070.code_ptr)] : local.iter_1070.code_ptr :
      local.curr_1071.code == "]"
        ? local.iter_1070.tape[local.iter_1070.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1070.code_ptr)] : local.iter_1070.code_ptr
        : local.iter_1070.code_ptr)

    steps_taken = 1 + local.iter_1070.steps_taken
  }
}

locals {
  end_of_code_1072 = try(local.iter_1071.code_ptr >= length(var.code), true)

  curr_1072 = local.end_of_code_1072 ? null : {
    code = substr(var.code, local.iter_1071.code_ptr, 1)
    input = substr(var.code, local.iter_1071.code_ptr, 1) == "," ? substr(local.iter_1071.input, 0, 1) : null
  }

  iter_1072 = local.end_of_code_1072 ? local.iter_1071 : {
    input = (local.curr_1072.code == ","
      ? substr(local.iter_1071.input, 1, -1)
      : local.iter_1071.input)

    output = (local.curr_1072.code == "."
      ? "${local.iter_1071.output}${jsondecode(format("\"\\u%04x\"", local.iter_1071.tape[local.iter_1071.tape_ptr]))}"
      : local.iter_1071.output)
    
    tape = (
      local.curr_1072.code == "+"
        ? [for i, b in local.iter_1071.tape : (i == local.iter_1071.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1072.code == "-"
        ? [for i, b in local.iter_1071.tape : (i == local.iter_1071.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1072.code == ","
        ? [for i, b in local.iter_1071.tape : (i == local.iter_1071.tape_ptr ? local.ascii_lookup[local.curr_1072.input] : b)]
        : local.iter_1071.tape)

    tape_ptr = (
      local.curr_1072.code == "<"
        ? local.iter_1071.tape_ptr == 0 ? length(local.iter_1071.tape) - 1 : local.iter_1071.tape_ptr - 1 :
      local.curr_1072.code == ">"
        ? local.iter_1071.tape_ptr == length(local.iter_1071.tape) - 1 ? 0 : local.iter_1071.tape_ptr + 1
        : local.iter_1071.tape_ptr)

    code_ptr = 1 + (
      local.curr_1072.code == "["
        ? local.iter_1071.tape[local.iter_1071.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1071.code_ptr)] : local.iter_1071.code_ptr :
      local.curr_1072.code == "]"
        ? local.iter_1071.tape[local.iter_1071.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1071.code_ptr)] : local.iter_1071.code_ptr
        : local.iter_1071.code_ptr)

    steps_taken = 1 + local.iter_1071.steps_taken
  }
}

locals {
  end_of_code_1073 = try(local.iter_1072.code_ptr >= length(var.code), true)

  curr_1073 = local.end_of_code_1073 ? null : {
    code = substr(var.code, local.iter_1072.code_ptr, 1)
    input = substr(var.code, local.iter_1072.code_ptr, 1) == "," ? substr(local.iter_1072.input, 0, 1) : null
  }

  iter_1073 = local.end_of_code_1073 ? local.iter_1072 : {
    input = (local.curr_1073.code == ","
      ? substr(local.iter_1072.input, 1, -1)
      : local.iter_1072.input)

    output = (local.curr_1073.code == "."
      ? "${local.iter_1072.output}${jsondecode(format("\"\\u%04x\"", local.iter_1072.tape[local.iter_1072.tape_ptr]))}"
      : local.iter_1072.output)
    
    tape = (
      local.curr_1073.code == "+"
        ? [for i, b in local.iter_1072.tape : (i == local.iter_1072.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1073.code == "-"
        ? [for i, b in local.iter_1072.tape : (i == local.iter_1072.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1073.code == ","
        ? [for i, b in local.iter_1072.tape : (i == local.iter_1072.tape_ptr ? local.ascii_lookup[local.curr_1073.input] : b)]
        : local.iter_1072.tape)

    tape_ptr = (
      local.curr_1073.code == "<"
        ? local.iter_1072.tape_ptr == 0 ? length(local.iter_1072.tape) - 1 : local.iter_1072.tape_ptr - 1 :
      local.curr_1073.code == ">"
        ? local.iter_1072.tape_ptr == length(local.iter_1072.tape) - 1 ? 0 : local.iter_1072.tape_ptr + 1
        : local.iter_1072.tape_ptr)

    code_ptr = 1 + (
      local.curr_1073.code == "["
        ? local.iter_1072.tape[local.iter_1072.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1072.code_ptr)] : local.iter_1072.code_ptr :
      local.curr_1073.code == "]"
        ? local.iter_1072.tape[local.iter_1072.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1072.code_ptr)] : local.iter_1072.code_ptr
        : local.iter_1072.code_ptr)

    steps_taken = 1 + local.iter_1072.steps_taken
  }
}

locals {
  end_of_code_1074 = try(local.iter_1073.code_ptr >= length(var.code), true)

  curr_1074 = local.end_of_code_1074 ? null : {
    code = substr(var.code, local.iter_1073.code_ptr, 1)
    input = substr(var.code, local.iter_1073.code_ptr, 1) == "," ? substr(local.iter_1073.input, 0, 1) : null
  }

  iter_1074 = local.end_of_code_1074 ? local.iter_1073 : {
    input = (local.curr_1074.code == ","
      ? substr(local.iter_1073.input, 1, -1)
      : local.iter_1073.input)

    output = (local.curr_1074.code == "."
      ? "${local.iter_1073.output}${jsondecode(format("\"\\u%04x\"", local.iter_1073.tape[local.iter_1073.tape_ptr]))}"
      : local.iter_1073.output)
    
    tape = (
      local.curr_1074.code == "+"
        ? [for i, b in local.iter_1073.tape : (i == local.iter_1073.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1074.code == "-"
        ? [for i, b in local.iter_1073.tape : (i == local.iter_1073.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1074.code == ","
        ? [for i, b in local.iter_1073.tape : (i == local.iter_1073.tape_ptr ? local.ascii_lookup[local.curr_1074.input] : b)]
        : local.iter_1073.tape)

    tape_ptr = (
      local.curr_1074.code == "<"
        ? local.iter_1073.tape_ptr == 0 ? length(local.iter_1073.tape) - 1 : local.iter_1073.tape_ptr - 1 :
      local.curr_1074.code == ">"
        ? local.iter_1073.tape_ptr == length(local.iter_1073.tape) - 1 ? 0 : local.iter_1073.tape_ptr + 1
        : local.iter_1073.tape_ptr)

    code_ptr = 1 + (
      local.curr_1074.code == "["
        ? local.iter_1073.tape[local.iter_1073.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1073.code_ptr)] : local.iter_1073.code_ptr :
      local.curr_1074.code == "]"
        ? local.iter_1073.tape[local.iter_1073.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1073.code_ptr)] : local.iter_1073.code_ptr
        : local.iter_1073.code_ptr)

    steps_taken = 1 + local.iter_1073.steps_taken
  }
}

locals {
  end_of_code_1075 = try(local.iter_1074.code_ptr >= length(var.code), true)

  curr_1075 = local.end_of_code_1075 ? null : {
    code = substr(var.code, local.iter_1074.code_ptr, 1)
    input = substr(var.code, local.iter_1074.code_ptr, 1) == "," ? substr(local.iter_1074.input, 0, 1) : null
  }

  iter_1075 = local.end_of_code_1075 ? local.iter_1074 : {
    input = (local.curr_1075.code == ","
      ? substr(local.iter_1074.input, 1, -1)
      : local.iter_1074.input)

    output = (local.curr_1075.code == "."
      ? "${local.iter_1074.output}${jsondecode(format("\"\\u%04x\"", local.iter_1074.tape[local.iter_1074.tape_ptr]))}"
      : local.iter_1074.output)
    
    tape = (
      local.curr_1075.code == "+"
        ? [for i, b in local.iter_1074.tape : (i == local.iter_1074.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1075.code == "-"
        ? [for i, b in local.iter_1074.tape : (i == local.iter_1074.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1075.code == ","
        ? [for i, b in local.iter_1074.tape : (i == local.iter_1074.tape_ptr ? local.ascii_lookup[local.curr_1075.input] : b)]
        : local.iter_1074.tape)

    tape_ptr = (
      local.curr_1075.code == "<"
        ? local.iter_1074.tape_ptr == 0 ? length(local.iter_1074.tape) - 1 : local.iter_1074.tape_ptr - 1 :
      local.curr_1075.code == ">"
        ? local.iter_1074.tape_ptr == length(local.iter_1074.tape) - 1 ? 0 : local.iter_1074.tape_ptr + 1
        : local.iter_1074.tape_ptr)

    code_ptr = 1 + (
      local.curr_1075.code == "["
        ? local.iter_1074.tape[local.iter_1074.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1074.code_ptr)] : local.iter_1074.code_ptr :
      local.curr_1075.code == "]"
        ? local.iter_1074.tape[local.iter_1074.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1074.code_ptr)] : local.iter_1074.code_ptr
        : local.iter_1074.code_ptr)

    steps_taken = 1 + local.iter_1074.steps_taken
  }
}

locals {
  end_of_code_1076 = try(local.iter_1075.code_ptr >= length(var.code), true)

  curr_1076 = local.end_of_code_1076 ? null : {
    code = substr(var.code, local.iter_1075.code_ptr, 1)
    input = substr(var.code, local.iter_1075.code_ptr, 1) == "," ? substr(local.iter_1075.input, 0, 1) : null
  }

  iter_1076 = local.end_of_code_1076 ? local.iter_1075 : {
    input = (local.curr_1076.code == ","
      ? substr(local.iter_1075.input, 1, -1)
      : local.iter_1075.input)

    output = (local.curr_1076.code == "."
      ? "${local.iter_1075.output}${jsondecode(format("\"\\u%04x\"", local.iter_1075.tape[local.iter_1075.tape_ptr]))}"
      : local.iter_1075.output)
    
    tape = (
      local.curr_1076.code == "+"
        ? [for i, b in local.iter_1075.tape : (i == local.iter_1075.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1076.code == "-"
        ? [for i, b in local.iter_1075.tape : (i == local.iter_1075.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1076.code == ","
        ? [for i, b in local.iter_1075.tape : (i == local.iter_1075.tape_ptr ? local.ascii_lookup[local.curr_1076.input] : b)]
        : local.iter_1075.tape)

    tape_ptr = (
      local.curr_1076.code == "<"
        ? local.iter_1075.tape_ptr == 0 ? length(local.iter_1075.tape) - 1 : local.iter_1075.tape_ptr - 1 :
      local.curr_1076.code == ">"
        ? local.iter_1075.tape_ptr == length(local.iter_1075.tape) - 1 ? 0 : local.iter_1075.tape_ptr + 1
        : local.iter_1075.tape_ptr)

    code_ptr = 1 + (
      local.curr_1076.code == "["
        ? local.iter_1075.tape[local.iter_1075.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1075.code_ptr)] : local.iter_1075.code_ptr :
      local.curr_1076.code == "]"
        ? local.iter_1075.tape[local.iter_1075.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1075.code_ptr)] : local.iter_1075.code_ptr
        : local.iter_1075.code_ptr)

    steps_taken = 1 + local.iter_1075.steps_taken
  }
}

locals {
  end_of_code_1077 = try(local.iter_1076.code_ptr >= length(var.code), true)

  curr_1077 = local.end_of_code_1077 ? null : {
    code = substr(var.code, local.iter_1076.code_ptr, 1)
    input = substr(var.code, local.iter_1076.code_ptr, 1) == "," ? substr(local.iter_1076.input, 0, 1) : null
  }

  iter_1077 = local.end_of_code_1077 ? local.iter_1076 : {
    input = (local.curr_1077.code == ","
      ? substr(local.iter_1076.input, 1, -1)
      : local.iter_1076.input)

    output = (local.curr_1077.code == "."
      ? "${local.iter_1076.output}${jsondecode(format("\"\\u%04x\"", local.iter_1076.tape[local.iter_1076.tape_ptr]))}"
      : local.iter_1076.output)
    
    tape = (
      local.curr_1077.code == "+"
        ? [for i, b in local.iter_1076.tape : (i == local.iter_1076.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1077.code == "-"
        ? [for i, b in local.iter_1076.tape : (i == local.iter_1076.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1077.code == ","
        ? [for i, b in local.iter_1076.tape : (i == local.iter_1076.tape_ptr ? local.ascii_lookup[local.curr_1077.input] : b)]
        : local.iter_1076.tape)

    tape_ptr = (
      local.curr_1077.code == "<"
        ? local.iter_1076.tape_ptr == 0 ? length(local.iter_1076.tape) - 1 : local.iter_1076.tape_ptr - 1 :
      local.curr_1077.code == ">"
        ? local.iter_1076.tape_ptr == length(local.iter_1076.tape) - 1 ? 0 : local.iter_1076.tape_ptr + 1
        : local.iter_1076.tape_ptr)

    code_ptr = 1 + (
      local.curr_1077.code == "["
        ? local.iter_1076.tape[local.iter_1076.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1076.code_ptr)] : local.iter_1076.code_ptr :
      local.curr_1077.code == "]"
        ? local.iter_1076.tape[local.iter_1076.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1076.code_ptr)] : local.iter_1076.code_ptr
        : local.iter_1076.code_ptr)

    steps_taken = 1 + local.iter_1076.steps_taken
  }
}

locals {
  end_of_code_1078 = try(local.iter_1077.code_ptr >= length(var.code), true)

  curr_1078 = local.end_of_code_1078 ? null : {
    code = substr(var.code, local.iter_1077.code_ptr, 1)
    input = substr(var.code, local.iter_1077.code_ptr, 1) == "," ? substr(local.iter_1077.input, 0, 1) : null
  }

  iter_1078 = local.end_of_code_1078 ? local.iter_1077 : {
    input = (local.curr_1078.code == ","
      ? substr(local.iter_1077.input, 1, -1)
      : local.iter_1077.input)

    output = (local.curr_1078.code == "."
      ? "${local.iter_1077.output}${jsondecode(format("\"\\u%04x\"", local.iter_1077.tape[local.iter_1077.tape_ptr]))}"
      : local.iter_1077.output)
    
    tape = (
      local.curr_1078.code == "+"
        ? [for i, b in local.iter_1077.tape : (i == local.iter_1077.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1078.code == "-"
        ? [for i, b in local.iter_1077.tape : (i == local.iter_1077.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1078.code == ","
        ? [for i, b in local.iter_1077.tape : (i == local.iter_1077.tape_ptr ? local.ascii_lookup[local.curr_1078.input] : b)]
        : local.iter_1077.tape)

    tape_ptr = (
      local.curr_1078.code == "<"
        ? local.iter_1077.tape_ptr == 0 ? length(local.iter_1077.tape) - 1 : local.iter_1077.tape_ptr - 1 :
      local.curr_1078.code == ">"
        ? local.iter_1077.tape_ptr == length(local.iter_1077.tape) - 1 ? 0 : local.iter_1077.tape_ptr + 1
        : local.iter_1077.tape_ptr)

    code_ptr = 1 + (
      local.curr_1078.code == "["
        ? local.iter_1077.tape[local.iter_1077.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1077.code_ptr)] : local.iter_1077.code_ptr :
      local.curr_1078.code == "]"
        ? local.iter_1077.tape[local.iter_1077.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1077.code_ptr)] : local.iter_1077.code_ptr
        : local.iter_1077.code_ptr)

    steps_taken = 1 + local.iter_1077.steps_taken
  }
}

locals {
  end_of_code_1079 = try(local.iter_1078.code_ptr >= length(var.code), true)

  curr_1079 = local.end_of_code_1079 ? null : {
    code = substr(var.code, local.iter_1078.code_ptr, 1)
    input = substr(var.code, local.iter_1078.code_ptr, 1) == "," ? substr(local.iter_1078.input, 0, 1) : null
  }

  iter_1079 = local.end_of_code_1079 ? local.iter_1078 : {
    input = (local.curr_1079.code == ","
      ? substr(local.iter_1078.input, 1, -1)
      : local.iter_1078.input)

    output = (local.curr_1079.code == "."
      ? "${local.iter_1078.output}${jsondecode(format("\"\\u%04x\"", local.iter_1078.tape[local.iter_1078.tape_ptr]))}"
      : local.iter_1078.output)
    
    tape = (
      local.curr_1079.code == "+"
        ? [for i, b in local.iter_1078.tape : (i == local.iter_1078.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1079.code == "-"
        ? [for i, b in local.iter_1078.tape : (i == local.iter_1078.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1079.code == ","
        ? [for i, b in local.iter_1078.tape : (i == local.iter_1078.tape_ptr ? local.ascii_lookup[local.curr_1079.input] : b)]
        : local.iter_1078.tape)

    tape_ptr = (
      local.curr_1079.code == "<"
        ? local.iter_1078.tape_ptr == 0 ? length(local.iter_1078.tape) - 1 : local.iter_1078.tape_ptr - 1 :
      local.curr_1079.code == ">"
        ? local.iter_1078.tape_ptr == length(local.iter_1078.tape) - 1 ? 0 : local.iter_1078.tape_ptr + 1
        : local.iter_1078.tape_ptr)

    code_ptr = 1 + (
      local.curr_1079.code == "["
        ? local.iter_1078.tape[local.iter_1078.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1078.code_ptr)] : local.iter_1078.code_ptr :
      local.curr_1079.code == "]"
        ? local.iter_1078.tape[local.iter_1078.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1078.code_ptr)] : local.iter_1078.code_ptr
        : local.iter_1078.code_ptr)

    steps_taken = 1 + local.iter_1078.steps_taken
  }
}

locals {
  end_of_code_1080 = try(local.iter_1079.code_ptr >= length(var.code), true)

  curr_1080 = local.end_of_code_1080 ? null : {
    code = substr(var.code, local.iter_1079.code_ptr, 1)
    input = substr(var.code, local.iter_1079.code_ptr, 1) == "," ? substr(local.iter_1079.input, 0, 1) : null
  }

  iter_1080 = local.end_of_code_1080 ? local.iter_1079 : {
    input = (local.curr_1080.code == ","
      ? substr(local.iter_1079.input, 1, -1)
      : local.iter_1079.input)

    output = (local.curr_1080.code == "."
      ? "${local.iter_1079.output}${jsondecode(format("\"\\u%04x\"", local.iter_1079.tape[local.iter_1079.tape_ptr]))}"
      : local.iter_1079.output)
    
    tape = (
      local.curr_1080.code == "+"
        ? [for i, b in local.iter_1079.tape : (i == local.iter_1079.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1080.code == "-"
        ? [for i, b in local.iter_1079.tape : (i == local.iter_1079.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1080.code == ","
        ? [for i, b in local.iter_1079.tape : (i == local.iter_1079.tape_ptr ? local.ascii_lookup[local.curr_1080.input] : b)]
        : local.iter_1079.tape)

    tape_ptr = (
      local.curr_1080.code == "<"
        ? local.iter_1079.tape_ptr == 0 ? length(local.iter_1079.tape) - 1 : local.iter_1079.tape_ptr - 1 :
      local.curr_1080.code == ">"
        ? local.iter_1079.tape_ptr == length(local.iter_1079.tape) - 1 ? 0 : local.iter_1079.tape_ptr + 1
        : local.iter_1079.tape_ptr)

    code_ptr = 1 + (
      local.curr_1080.code == "["
        ? local.iter_1079.tape[local.iter_1079.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1079.code_ptr)] : local.iter_1079.code_ptr :
      local.curr_1080.code == "]"
        ? local.iter_1079.tape[local.iter_1079.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1079.code_ptr)] : local.iter_1079.code_ptr
        : local.iter_1079.code_ptr)

    steps_taken = 1 + local.iter_1079.steps_taken
  }
}

locals {
  end_of_code_1081 = try(local.iter_1080.code_ptr >= length(var.code), true)

  curr_1081 = local.end_of_code_1081 ? null : {
    code = substr(var.code, local.iter_1080.code_ptr, 1)
    input = substr(var.code, local.iter_1080.code_ptr, 1) == "," ? substr(local.iter_1080.input, 0, 1) : null
  }

  iter_1081 = local.end_of_code_1081 ? local.iter_1080 : {
    input = (local.curr_1081.code == ","
      ? substr(local.iter_1080.input, 1, -1)
      : local.iter_1080.input)

    output = (local.curr_1081.code == "."
      ? "${local.iter_1080.output}${jsondecode(format("\"\\u%04x\"", local.iter_1080.tape[local.iter_1080.tape_ptr]))}"
      : local.iter_1080.output)
    
    tape = (
      local.curr_1081.code == "+"
        ? [for i, b in local.iter_1080.tape : (i == local.iter_1080.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1081.code == "-"
        ? [for i, b in local.iter_1080.tape : (i == local.iter_1080.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1081.code == ","
        ? [for i, b in local.iter_1080.tape : (i == local.iter_1080.tape_ptr ? local.ascii_lookup[local.curr_1081.input] : b)]
        : local.iter_1080.tape)

    tape_ptr = (
      local.curr_1081.code == "<"
        ? local.iter_1080.tape_ptr == 0 ? length(local.iter_1080.tape) - 1 : local.iter_1080.tape_ptr - 1 :
      local.curr_1081.code == ">"
        ? local.iter_1080.tape_ptr == length(local.iter_1080.tape) - 1 ? 0 : local.iter_1080.tape_ptr + 1
        : local.iter_1080.tape_ptr)

    code_ptr = 1 + (
      local.curr_1081.code == "["
        ? local.iter_1080.tape[local.iter_1080.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1080.code_ptr)] : local.iter_1080.code_ptr :
      local.curr_1081.code == "]"
        ? local.iter_1080.tape[local.iter_1080.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1080.code_ptr)] : local.iter_1080.code_ptr
        : local.iter_1080.code_ptr)

    steps_taken = 1 + local.iter_1080.steps_taken
  }
}

locals {
  end_of_code_1082 = try(local.iter_1081.code_ptr >= length(var.code), true)

  curr_1082 = local.end_of_code_1082 ? null : {
    code = substr(var.code, local.iter_1081.code_ptr, 1)
    input = substr(var.code, local.iter_1081.code_ptr, 1) == "," ? substr(local.iter_1081.input, 0, 1) : null
  }

  iter_1082 = local.end_of_code_1082 ? local.iter_1081 : {
    input = (local.curr_1082.code == ","
      ? substr(local.iter_1081.input, 1, -1)
      : local.iter_1081.input)

    output = (local.curr_1082.code == "."
      ? "${local.iter_1081.output}${jsondecode(format("\"\\u%04x\"", local.iter_1081.tape[local.iter_1081.tape_ptr]))}"
      : local.iter_1081.output)
    
    tape = (
      local.curr_1082.code == "+"
        ? [for i, b in local.iter_1081.tape : (i == local.iter_1081.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1082.code == "-"
        ? [for i, b in local.iter_1081.tape : (i == local.iter_1081.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1082.code == ","
        ? [for i, b in local.iter_1081.tape : (i == local.iter_1081.tape_ptr ? local.ascii_lookup[local.curr_1082.input] : b)]
        : local.iter_1081.tape)

    tape_ptr = (
      local.curr_1082.code == "<"
        ? local.iter_1081.tape_ptr == 0 ? length(local.iter_1081.tape) - 1 : local.iter_1081.tape_ptr - 1 :
      local.curr_1082.code == ">"
        ? local.iter_1081.tape_ptr == length(local.iter_1081.tape) - 1 ? 0 : local.iter_1081.tape_ptr + 1
        : local.iter_1081.tape_ptr)

    code_ptr = 1 + (
      local.curr_1082.code == "["
        ? local.iter_1081.tape[local.iter_1081.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1081.code_ptr)] : local.iter_1081.code_ptr :
      local.curr_1082.code == "]"
        ? local.iter_1081.tape[local.iter_1081.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1081.code_ptr)] : local.iter_1081.code_ptr
        : local.iter_1081.code_ptr)

    steps_taken = 1 + local.iter_1081.steps_taken
  }
}

locals {
  end_of_code_1083 = try(local.iter_1082.code_ptr >= length(var.code), true)

  curr_1083 = local.end_of_code_1083 ? null : {
    code = substr(var.code, local.iter_1082.code_ptr, 1)
    input = substr(var.code, local.iter_1082.code_ptr, 1) == "," ? substr(local.iter_1082.input, 0, 1) : null
  }

  iter_1083 = local.end_of_code_1083 ? local.iter_1082 : {
    input = (local.curr_1083.code == ","
      ? substr(local.iter_1082.input, 1, -1)
      : local.iter_1082.input)

    output = (local.curr_1083.code == "."
      ? "${local.iter_1082.output}${jsondecode(format("\"\\u%04x\"", local.iter_1082.tape[local.iter_1082.tape_ptr]))}"
      : local.iter_1082.output)
    
    tape = (
      local.curr_1083.code == "+"
        ? [for i, b in local.iter_1082.tape : (i == local.iter_1082.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1083.code == "-"
        ? [for i, b in local.iter_1082.tape : (i == local.iter_1082.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1083.code == ","
        ? [for i, b in local.iter_1082.tape : (i == local.iter_1082.tape_ptr ? local.ascii_lookup[local.curr_1083.input] : b)]
        : local.iter_1082.tape)

    tape_ptr = (
      local.curr_1083.code == "<"
        ? local.iter_1082.tape_ptr == 0 ? length(local.iter_1082.tape) - 1 : local.iter_1082.tape_ptr - 1 :
      local.curr_1083.code == ">"
        ? local.iter_1082.tape_ptr == length(local.iter_1082.tape) - 1 ? 0 : local.iter_1082.tape_ptr + 1
        : local.iter_1082.tape_ptr)

    code_ptr = 1 + (
      local.curr_1083.code == "["
        ? local.iter_1082.tape[local.iter_1082.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1082.code_ptr)] : local.iter_1082.code_ptr :
      local.curr_1083.code == "]"
        ? local.iter_1082.tape[local.iter_1082.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1082.code_ptr)] : local.iter_1082.code_ptr
        : local.iter_1082.code_ptr)

    steps_taken = 1 + local.iter_1082.steps_taken
  }
}

locals {
  end_of_code_1084 = try(local.iter_1083.code_ptr >= length(var.code), true)

  curr_1084 = local.end_of_code_1084 ? null : {
    code = substr(var.code, local.iter_1083.code_ptr, 1)
    input = substr(var.code, local.iter_1083.code_ptr, 1) == "," ? substr(local.iter_1083.input, 0, 1) : null
  }

  iter_1084 = local.end_of_code_1084 ? local.iter_1083 : {
    input = (local.curr_1084.code == ","
      ? substr(local.iter_1083.input, 1, -1)
      : local.iter_1083.input)

    output = (local.curr_1084.code == "."
      ? "${local.iter_1083.output}${jsondecode(format("\"\\u%04x\"", local.iter_1083.tape[local.iter_1083.tape_ptr]))}"
      : local.iter_1083.output)
    
    tape = (
      local.curr_1084.code == "+"
        ? [for i, b in local.iter_1083.tape : (i == local.iter_1083.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1084.code == "-"
        ? [for i, b in local.iter_1083.tape : (i == local.iter_1083.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1084.code == ","
        ? [for i, b in local.iter_1083.tape : (i == local.iter_1083.tape_ptr ? local.ascii_lookup[local.curr_1084.input] : b)]
        : local.iter_1083.tape)

    tape_ptr = (
      local.curr_1084.code == "<"
        ? local.iter_1083.tape_ptr == 0 ? length(local.iter_1083.tape) - 1 : local.iter_1083.tape_ptr - 1 :
      local.curr_1084.code == ">"
        ? local.iter_1083.tape_ptr == length(local.iter_1083.tape) - 1 ? 0 : local.iter_1083.tape_ptr + 1
        : local.iter_1083.tape_ptr)

    code_ptr = 1 + (
      local.curr_1084.code == "["
        ? local.iter_1083.tape[local.iter_1083.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1083.code_ptr)] : local.iter_1083.code_ptr :
      local.curr_1084.code == "]"
        ? local.iter_1083.tape[local.iter_1083.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1083.code_ptr)] : local.iter_1083.code_ptr
        : local.iter_1083.code_ptr)

    steps_taken = 1 + local.iter_1083.steps_taken
  }
}

locals {
  end_of_code_1085 = try(local.iter_1084.code_ptr >= length(var.code), true)

  curr_1085 = local.end_of_code_1085 ? null : {
    code = substr(var.code, local.iter_1084.code_ptr, 1)
    input = substr(var.code, local.iter_1084.code_ptr, 1) == "," ? substr(local.iter_1084.input, 0, 1) : null
  }

  iter_1085 = local.end_of_code_1085 ? local.iter_1084 : {
    input = (local.curr_1085.code == ","
      ? substr(local.iter_1084.input, 1, -1)
      : local.iter_1084.input)

    output = (local.curr_1085.code == "."
      ? "${local.iter_1084.output}${jsondecode(format("\"\\u%04x\"", local.iter_1084.tape[local.iter_1084.tape_ptr]))}"
      : local.iter_1084.output)
    
    tape = (
      local.curr_1085.code == "+"
        ? [for i, b in local.iter_1084.tape : (i == local.iter_1084.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1085.code == "-"
        ? [for i, b in local.iter_1084.tape : (i == local.iter_1084.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1085.code == ","
        ? [for i, b in local.iter_1084.tape : (i == local.iter_1084.tape_ptr ? local.ascii_lookup[local.curr_1085.input] : b)]
        : local.iter_1084.tape)

    tape_ptr = (
      local.curr_1085.code == "<"
        ? local.iter_1084.tape_ptr == 0 ? length(local.iter_1084.tape) - 1 : local.iter_1084.tape_ptr - 1 :
      local.curr_1085.code == ">"
        ? local.iter_1084.tape_ptr == length(local.iter_1084.tape) - 1 ? 0 : local.iter_1084.tape_ptr + 1
        : local.iter_1084.tape_ptr)

    code_ptr = 1 + (
      local.curr_1085.code == "["
        ? local.iter_1084.tape[local.iter_1084.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1084.code_ptr)] : local.iter_1084.code_ptr :
      local.curr_1085.code == "]"
        ? local.iter_1084.tape[local.iter_1084.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1084.code_ptr)] : local.iter_1084.code_ptr
        : local.iter_1084.code_ptr)

    steps_taken = 1 + local.iter_1084.steps_taken
  }
}

locals {
  end_of_code_1086 = try(local.iter_1085.code_ptr >= length(var.code), true)

  curr_1086 = local.end_of_code_1086 ? null : {
    code = substr(var.code, local.iter_1085.code_ptr, 1)
    input = substr(var.code, local.iter_1085.code_ptr, 1) == "," ? substr(local.iter_1085.input, 0, 1) : null
  }

  iter_1086 = local.end_of_code_1086 ? local.iter_1085 : {
    input = (local.curr_1086.code == ","
      ? substr(local.iter_1085.input, 1, -1)
      : local.iter_1085.input)

    output = (local.curr_1086.code == "."
      ? "${local.iter_1085.output}${jsondecode(format("\"\\u%04x\"", local.iter_1085.tape[local.iter_1085.tape_ptr]))}"
      : local.iter_1085.output)
    
    tape = (
      local.curr_1086.code == "+"
        ? [for i, b in local.iter_1085.tape : (i == local.iter_1085.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1086.code == "-"
        ? [for i, b in local.iter_1085.tape : (i == local.iter_1085.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1086.code == ","
        ? [for i, b in local.iter_1085.tape : (i == local.iter_1085.tape_ptr ? local.ascii_lookup[local.curr_1086.input] : b)]
        : local.iter_1085.tape)

    tape_ptr = (
      local.curr_1086.code == "<"
        ? local.iter_1085.tape_ptr == 0 ? length(local.iter_1085.tape) - 1 : local.iter_1085.tape_ptr - 1 :
      local.curr_1086.code == ">"
        ? local.iter_1085.tape_ptr == length(local.iter_1085.tape) - 1 ? 0 : local.iter_1085.tape_ptr + 1
        : local.iter_1085.tape_ptr)

    code_ptr = 1 + (
      local.curr_1086.code == "["
        ? local.iter_1085.tape[local.iter_1085.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1085.code_ptr)] : local.iter_1085.code_ptr :
      local.curr_1086.code == "]"
        ? local.iter_1085.tape[local.iter_1085.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1085.code_ptr)] : local.iter_1085.code_ptr
        : local.iter_1085.code_ptr)

    steps_taken = 1 + local.iter_1085.steps_taken
  }
}

locals {
  end_of_code_1087 = try(local.iter_1086.code_ptr >= length(var.code), true)

  curr_1087 = local.end_of_code_1087 ? null : {
    code = substr(var.code, local.iter_1086.code_ptr, 1)
    input = substr(var.code, local.iter_1086.code_ptr, 1) == "," ? substr(local.iter_1086.input, 0, 1) : null
  }

  iter_1087 = local.end_of_code_1087 ? local.iter_1086 : {
    input = (local.curr_1087.code == ","
      ? substr(local.iter_1086.input, 1, -1)
      : local.iter_1086.input)

    output = (local.curr_1087.code == "."
      ? "${local.iter_1086.output}${jsondecode(format("\"\\u%04x\"", local.iter_1086.tape[local.iter_1086.tape_ptr]))}"
      : local.iter_1086.output)
    
    tape = (
      local.curr_1087.code == "+"
        ? [for i, b in local.iter_1086.tape : (i == local.iter_1086.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1087.code == "-"
        ? [for i, b in local.iter_1086.tape : (i == local.iter_1086.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1087.code == ","
        ? [for i, b in local.iter_1086.tape : (i == local.iter_1086.tape_ptr ? local.ascii_lookup[local.curr_1087.input] : b)]
        : local.iter_1086.tape)

    tape_ptr = (
      local.curr_1087.code == "<"
        ? local.iter_1086.tape_ptr == 0 ? length(local.iter_1086.tape) - 1 : local.iter_1086.tape_ptr - 1 :
      local.curr_1087.code == ">"
        ? local.iter_1086.tape_ptr == length(local.iter_1086.tape) - 1 ? 0 : local.iter_1086.tape_ptr + 1
        : local.iter_1086.tape_ptr)

    code_ptr = 1 + (
      local.curr_1087.code == "["
        ? local.iter_1086.tape[local.iter_1086.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1086.code_ptr)] : local.iter_1086.code_ptr :
      local.curr_1087.code == "]"
        ? local.iter_1086.tape[local.iter_1086.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1086.code_ptr)] : local.iter_1086.code_ptr
        : local.iter_1086.code_ptr)

    steps_taken = 1 + local.iter_1086.steps_taken
  }
}

locals {
  end_of_code_1088 = try(local.iter_1087.code_ptr >= length(var.code), true)

  curr_1088 = local.end_of_code_1088 ? null : {
    code = substr(var.code, local.iter_1087.code_ptr, 1)
    input = substr(var.code, local.iter_1087.code_ptr, 1) == "," ? substr(local.iter_1087.input, 0, 1) : null
  }

  iter_1088 = local.end_of_code_1088 ? local.iter_1087 : {
    input = (local.curr_1088.code == ","
      ? substr(local.iter_1087.input, 1, -1)
      : local.iter_1087.input)

    output = (local.curr_1088.code == "."
      ? "${local.iter_1087.output}${jsondecode(format("\"\\u%04x\"", local.iter_1087.tape[local.iter_1087.tape_ptr]))}"
      : local.iter_1087.output)
    
    tape = (
      local.curr_1088.code == "+"
        ? [for i, b in local.iter_1087.tape : (i == local.iter_1087.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1088.code == "-"
        ? [for i, b in local.iter_1087.tape : (i == local.iter_1087.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1088.code == ","
        ? [for i, b in local.iter_1087.tape : (i == local.iter_1087.tape_ptr ? local.ascii_lookup[local.curr_1088.input] : b)]
        : local.iter_1087.tape)

    tape_ptr = (
      local.curr_1088.code == "<"
        ? local.iter_1087.tape_ptr == 0 ? length(local.iter_1087.tape) - 1 : local.iter_1087.tape_ptr - 1 :
      local.curr_1088.code == ">"
        ? local.iter_1087.tape_ptr == length(local.iter_1087.tape) - 1 ? 0 : local.iter_1087.tape_ptr + 1
        : local.iter_1087.tape_ptr)

    code_ptr = 1 + (
      local.curr_1088.code == "["
        ? local.iter_1087.tape[local.iter_1087.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1087.code_ptr)] : local.iter_1087.code_ptr :
      local.curr_1088.code == "]"
        ? local.iter_1087.tape[local.iter_1087.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1087.code_ptr)] : local.iter_1087.code_ptr
        : local.iter_1087.code_ptr)

    steps_taken = 1 + local.iter_1087.steps_taken
  }
}

locals {
  end_of_code_1089 = try(local.iter_1088.code_ptr >= length(var.code), true)

  curr_1089 = local.end_of_code_1089 ? null : {
    code = substr(var.code, local.iter_1088.code_ptr, 1)
    input = substr(var.code, local.iter_1088.code_ptr, 1) == "," ? substr(local.iter_1088.input, 0, 1) : null
  }

  iter_1089 = local.end_of_code_1089 ? local.iter_1088 : {
    input = (local.curr_1089.code == ","
      ? substr(local.iter_1088.input, 1, -1)
      : local.iter_1088.input)

    output = (local.curr_1089.code == "."
      ? "${local.iter_1088.output}${jsondecode(format("\"\\u%04x\"", local.iter_1088.tape[local.iter_1088.tape_ptr]))}"
      : local.iter_1088.output)
    
    tape = (
      local.curr_1089.code == "+"
        ? [for i, b in local.iter_1088.tape : (i == local.iter_1088.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1089.code == "-"
        ? [for i, b in local.iter_1088.tape : (i == local.iter_1088.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1089.code == ","
        ? [for i, b in local.iter_1088.tape : (i == local.iter_1088.tape_ptr ? local.ascii_lookup[local.curr_1089.input] : b)]
        : local.iter_1088.tape)

    tape_ptr = (
      local.curr_1089.code == "<"
        ? local.iter_1088.tape_ptr == 0 ? length(local.iter_1088.tape) - 1 : local.iter_1088.tape_ptr - 1 :
      local.curr_1089.code == ">"
        ? local.iter_1088.tape_ptr == length(local.iter_1088.tape) - 1 ? 0 : local.iter_1088.tape_ptr + 1
        : local.iter_1088.tape_ptr)

    code_ptr = 1 + (
      local.curr_1089.code == "["
        ? local.iter_1088.tape[local.iter_1088.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1088.code_ptr)] : local.iter_1088.code_ptr :
      local.curr_1089.code == "]"
        ? local.iter_1088.tape[local.iter_1088.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1088.code_ptr)] : local.iter_1088.code_ptr
        : local.iter_1088.code_ptr)

    steps_taken = 1 + local.iter_1088.steps_taken
  }
}

locals {
  end_of_code_1090 = try(local.iter_1089.code_ptr >= length(var.code), true)

  curr_1090 = local.end_of_code_1090 ? null : {
    code = substr(var.code, local.iter_1089.code_ptr, 1)
    input = substr(var.code, local.iter_1089.code_ptr, 1) == "," ? substr(local.iter_1089.input, 0, 1) : null
  }

  iter_1090 = local.end_of_code_1090 ? local.iter_1089 : {
    input = (local.curr_1090.code == ","
      ? substr(local.iter_1089.input, 1, -1)
      : local.iter_1089.input)

    output = (local.curr_1090.code == "."
      ? "${local.iter_1089.output}${jsondecode(format("\"\\u%04x\"", local.iter_1089.tape[local.iter_1089.tape_ptr]))}"
      : local.iter_1089.output)
    
    tape = (
      local.curr_1090.code == "+"
        ? [for i, b in local.iter_1089.tape : (i == local.iter_1089.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1090.code == "-"
        ? [for i, b in local.iter_1089.tape : (i == local.iter_1089.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1090.code == ","
        ? [for i, b in local.iter_1089.tape : (i == local.iter_1089.tape_ptr ? local.ascii_lookup[local.curr_1090.input] : b)]
        : local.iter_1089.tape)

    tape_ptr = (
      local.curr_1090.code == "<"
        ? local.iter_1089.tape_ptr == 0 ? length(local.iter_1089.tape) - 1 : local.iter_1089.tape_ptr - 1 :
      local.curr_1090.code == ">"
        ? local.iter_1089.tape_ptr == length(local.iter_1089.tape) - 1 ? 0 : local.iter_1089.tape_ptr + 1
        : local.iter_1089.tape_ptr)

    code_ptr = 1 + (
      local.curr_1090.code == "["
        ? local.iter_1089.tape[local.iter_1089.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1089.code_ptr)] : local.iter_1089.code_ptr :
      local.curr_1090.code == "]"
        ? local.iter_1089.tape[local.iter_1089.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1089.code_ptr)] : local.iter_1089.code_ptr
        : local.iter_1089.code_ptr)

    steps_taken = 1 + local.iter_1089.steps_taken
  }
}

locals {
  end_of_code_1091 = try(local.iter_1090.code_ptr >= length(var.code), true)

  curr_1091 = local.end_of_code_1091 ? null : {
    code = substr(var.code, local.iter_1090.code_ptr, 1)
    input = substr(var.code, local.iter_1090.code_ptr, 1) == "," ? substr(local.iter_1090.input, 0, 1) : null
  }

  iter_1091 = local.end_of_code_1091 ? local.iter_1090 : {
    input = (local.curr_1091.code == ","
      ? substr(local.iter_1090.input, 1, -1)
      : local.iter_1090.input)

    output = (local.curr_1091.code == "."
      ? "${local.iter_1090.output}${jsondecode(format("\"\\u%04x\"", local.iter_1090.tape[local.iter_1090.tape_ptr]))}"
      : local.iter_1090.output)
    
    tape = (
      local.curr_1091.code == "+"
        ? [for i, b in local.iter_1090.tape : (i == local.iter_1090.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1091.code == "-"
        ? [for i, b in local.iter_1090.tape : (i == local.iter_1090.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1091.code == ","
        ? [for i, b in local.iter_1090.tape : (i == local.iter_1090.tape_ptr ? local.ascii_lookup[local.curr_1091.input] : b)]
        : local.iter_1090.tape)

    tape_ptr = (
      local.curr_1091.code == "<"
        ? local.iter_1090.tape_ptr == 0 ? length(local.iter_1090.tape) - 1 : local.iter_1090.tape_ptr - 1 :
      local.curr_1091.code == ">"
        ? local.iter_1090.tape_ptr == length(local.iter_1090.tape) - 1 ? 0 : local.iter_1090.tape_ptr + 1
        : local.iter_1090.tape_ptr)

    code_ptr = 1 + (
      local.curr_1091.code == "["
        ? local.iter_1090.tape[local.iter_1090.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1090.code_ptr)] : local.iter_1090.code_ptr :
      local.curr_1091.code == "]"
        ? local.iter_1090.tape[local.iter_1090.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1090.code_ptr)] : local.iter_1090.code_ptr
        : local.iter_1090.code_ptr)

    steps_taken = 1 + local.iter_1090.steps_taken
  }
}

locals {
  end_of_code_1092 = try(local.iter_1091.code_ptr >= length(var.code), true)

  curr_1092 = local.end_of_code_1092 ? null : {
    code = substr(var.code, local.iter_1091.code_ptr, 1)
    input = substr(var.code, local.iter_1091.code_ptr, 1) == "," ? substr(local.iter_1091.input, 0, 1) : null
  }

  iter_1092 = local.end_of_code_1092 ? local.iter_1091 : {
    input = (local.curr_1092.code == ","
      ? substr(local.iter_1091.input, 1, -1)
      : local.iter_1091.input)

    output = (local.curr_1092.code == "."
      ? "${local.iter_1091.output}${jsondecode(format("\"\\u%04x\"", local.iter_1091.tape[local.iter_1091.tape_ptr]))}"
      : local.iter_1091.output)
    
    tape = (
      local.curr_1092.code == "+"
        ? [for i, b in local.iter_1091.tape : (i == local.iter_1091.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1092.code == "-"
        ? [for i, b in local.iter_1091.tape : (i == local.iter_1091.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1092.code == ","
        ? [for i, b in local.iter_1091.tape : (i == local.iter_1091.tape_ptr ? local.ascii_lookup[local.curr_1092.input] : b)]
        : local.iter_1091.tape)

    tape_ptr = (
      local.curr_1092.code == "<"
        ? local.iter_1091.tape_ptr == 0 ? length(local.iter_1091.tape) - 1 : local.iter_1091.tape_ptr - 1 :
      local.curr_1092.code == ">"
        ? local.iter_1091.tape_ptr == length(local.iter_1091.tape) - 1 ? 0 : local.iter_1091.tape_ptr + 1
        : local.iter_1091.tape_ptr)

    code_ptr = 1 + (
      local.curr_1092.code == "["
        ? local.iter_1091.tape[local.iter_1091.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1091.code_ptr)] : local.iter_1091.code_ptr :
      local.curr_1092.code == "]"
        ? local.iter_1091.tape[local.iter_1091.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1091.code_ptr)] : local.iter_1091.code_ptr
        : local.iter_1091.code_ptr)

    steps_taken = 1 + local.iter_1091.steps_taken
  }
}

locals {
  end_of_code_1093 = try(local.iter_1092.code_ptr >= length(var.code), true)

  curr_1093 = local.end_of_code_1093 ? null : {
    code = substr(var.code, local.iter_1092.code_ptr, 1)
    input = substr(var.code, local.iter_1092.code_ptr, 1) == "," ? substr(local.iter_1092.input, 0, 1) : null
  }

  iter_1093 = local.end_of_code_1093 ? local.iter_1092 : {
    input = (local.curr_1093.code == ","
      ? substr(local.iter_1092.input, 1, -1)
      : local.iter_1092.input)

    output = (local.curr_1093.code == "."
      ? "${local.iter_1092.output}${jsondecode(format("\"\\u%04x\"", local.iter_1092.tape[local.iter_1092.tape_ptr]))}"
      : local.iter_1092.output)
    
    tape = (
      local.curr_1093.code == "+"
        ? [for i, b in local.iter_1092.tape : (i == local.iter_1092.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1093.code == "-"
        ? [for i, b in local.iter_1092.tape : (i == local.iter_1092.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1093.code == ","
        ? [for i, b in local.iter_1092.tape : (i == local.iter_1092.tape_ptr ? local.ascii_lookup[local.curr_1093.input] : b)]
        : local.iter_1092.tape)

    tape_ptr = (
      local.curr_1093.code == "<"
        ? local.iter_1092.tape_ptr == 0 ? length(local.iter_1092.tape) - 1 : local.iter_1092.tape_ptr - 1 :
      local.curr_1093.code == ">"
        ? local.iter_1092.tape_ptr == length(local.iter_1092.tape) - 1 ? 0 : local.iter_1092.tape_ptr + 1
        : local.iter_1092.tape_ptr)

    code_ptr = 1 + (
      local.curr_1093.code == "["
        ? local.iter_1092.tape[local.iter_1092.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1092.code_ptr)] : local.iter_1092.code_ptr :
      local.curr_1093.code == "]"
        ? local.iter_1092.tape[local.iter_1092.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1092.code_ptr)] : local.iter_1092.code_ptr
        : local.iter_1092.code_ptr)

    steps_taken = 1 + local.iter_1092.steps_taken
  }
}

locals {
  end_of_code_1094 = try(local.iter_1093.code_ptr >= length(var.code), true)

  curr_1094 = local.end_of_code_1094 ? null : {
    code = substr(var.code, local.iter_1093.code_ptr, 1)
    input = substr(var.code, local.iter_1093.code_ptr, 1) == "," ? substr(local.iter_1093.input, 0, 1) : null
  }

  iter_1094 = local.end_of_code_1094 ? local.iter_1093 : {
    input = (local.curr_1094.code == ","
      ? substr(local.iter_1093.input, 1, -1)
      : local.iter_1093.input)

    output = (local.curr_1094.code == "."
      ? "${local.iter_1093.output}${jsondecode(format("\"\\u%04x\"", local.iter_1093.tape[local.iter_1093.tape_ptr]))}"
      : local.iter_1093.output)
    
    tape = (
      local.curr_1094.code == "+"
        ? [for i, b in local.iter_1093.tape : (i == local.iter_1093.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1094.code == "-"
        ? [for i, b in local.iter_1093.tape : (i == local.iter_1093.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1094.code == ","
        ? [for i, b in local.iter_1093.tape : (i == local.iter_1093.tape_ptr ? local.ascii_lookup[local.curr_1094.input] : b)]
        : local.iter_1093.tape)

    tape_ptr = (
      local.curr_1094.code == "<"
        ? local.iter_1093.tape_ptr == 0 ? length(local.iter_1093.tape) - 1 : local.iter_1093.tape_ptr - 1 :
      local.curr_1094.code == ">"
        ? local.iter_1093.tape_ptr == length(local.iter_1093.tape) - 1 ? 0 : local.iter_1093.tape_ptr + 1
        : local.iter_1093.tape_ptr)

    code_ptr = 1 + (
      local.curr_1094.code == "["
        ? local.iter_1093.tape[local.iter_1093.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1093.code_ptr)] : local.iter_1093.code_ptr :
      local.curr_1094.code == "]"
        ? local.iter_1093.tape[local.iter_1093.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1093.code_ptr)] : local.iter_1093.code_ptr
        : local.iter_1093.code_ptr)

    steps_taken = 1 + local.iter_1093.steps_taken
  }
}

locals {
  end_of_code_1095 = try(local.iter_1094.code_ptr >= length(var.code), true)

  curr_1095 = local.end_of_code_1095 ? null : {
    code = substr(var.code, local.iter_1094.code_ptr, 1)
    input = substr(var.code, local.iter_1094.code_ptr, 1) == "," ? substr(local.iter_1094.input, 0, 1) : null
  }

  iter_1095 = local.end_of_code_1095 ? local.iter_1094 : {
    input = (local.curr_1095.code == ","
      ? substr(local.iter_1094.input, 1, -1)
      : local.iter_1094.input)

    output = (local.curr_1095.code == "."
      ? "${local.iter_1094.output}${jsondecode(format("\"\\u%04x\"", local.iter_1094.tape[local.iter_1094.tape_ptr]))}"
      : local.iter_1094.output)
    
    tape = (
      local.curr_1095.code == "+"
        ? [for i, b in local.iter_1094.tape : (i == local.iter_1094.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1095.code == "-"
        ? [for i, b in local.iter_1094.tape : (i == local.iter_1094.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1095.code == ","
        ? [for i, b in local.iter_1094.tape : (i == local.iter_1094.tape_ptr ? local.ascii_lookup[local.curr_1095.input] : b)]
        : local.iter_1094.tape)

    tape_ptr = (
      local.curr_1095.code == "<"
        ? local.iter_1094.tape_ptr == 0 ? length(local.iter_1094.tape) - 1 : local.iter_1094.tape_ptr - 1 :
      local.curr_1095.code == ">"
        ? local.iter_1094.tape_ptr == length(local.iter_1094.tape) - 1 ? 0 : local.iter_1094.tape_ptr + 1
        : local.iter_1094.tape_ptr)

    code_ptr = 1 + (
      local.curr_1095.code == "["
        ? local.iter_1094.tape[local.iter_1094.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1094.code_ptr)] : local.iter_1094.code_ptr :
      local.curr_1095.code == "]"
        ? local.iter_1094.tape[local.iter_1094.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1094.code_ptr)] : local.iter_1094.code_ptr
        : local.iter_1094.code_ptr)

    steps_taken = 1 + local.iter_1094.steps_taken
  }
}

locals {
  end_of_code_1096 = try(local.iter_1095.code_ptr >= length(var.code), true)

  curr_1096 = local.end_of_code_1096 ? null : {
    code = substr(var.code, local.iter_1095.code_ptr, 1)
    input = substr(var.code, local.iter_1095.code_ptr, 1) == "," ? substr(local.iter_1095.input, 0, 1) : null
  }

  iter_1096 = local.end_of_code_1096 ? local.iter_1095 : {
    input = (local.curr_1096.code == ","
      ? substr(local.iter_1095.input, 1, -1)
      : local.iter_1095.input)

    output = (local.curr_1096.code == "."
      ? "${local.iter_1095.output}${jsondecode(format("\"\\u%04x\"", local.iter_1095.tape[local.iter_1095.tape_ptr]))}"
      : local.iter_1095.output)
    
    tape = (
      local.curr_1096.code == "+"
        ? [for i, b in local.iter_1095.tape : (i == local.iter_1095.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1096.code == "-"
        ? [for i, b in local.iter_1095.tape : (i == local.iter_1095.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1096.code == ","
        ? [for i, b in local.iter_1095.tape : (i == local.iter_1095.tape_ptr ? local.ascii_lookup[local.curr_1096.input] : b)]
        : local.iter_1095.tape)

    tape_ptr = (
      local.curr_1096.code == "<"
        ? local.iter_1095.tape_ptr == 0 ? length(local.iter_1095.tape) - 1 : local.iter_1095.tape_ptr - 1 :
      local.curr_1096.code == ">"
        ? local.iter_1095.tape_ptr == length(local.iter_1095.tape) - 1 ? 0 : local.iter_1095.tape_ptr + 1
        : local.iter_1095.tape_ptr)

    code_ptr = 1 + (
      local.curr_1096.code == "["
        ? local.iter_1095.tape[local.iter_1095.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1095.code_ptr)] : local.iter_1095.code_ptr :
      local.curr_1096.code == "]"
        ? local.iter_1095.tape[local.iter_1095.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1095.code_ptr)] : local.iter_1095.code_ptr
        : local.iter_1095.code_ptr)

    steps_taken = 1 + local.iter_1095.steps_taken
  }
}

locals {
  end_of_code_1097 = try(local.iter_1096.code_ptr >= length(var.code), true)

  curr_1097 = local.end_of_code_1097 ? null : {
    code = substr(var.code, local.iter_1096.code_ptr, 1)
    input = substr(var.code, local.iter_1096.code_ptr, 1) == "," ? substr(local.iter_1096.input, 0, 1) : null
  }

  iter_1097 = local.end_of_code_1097 ? local.iter_1096 : {
    input = (local.curr_1097.code == ","
      ? substr(local.iter_1096.input, 1, -1)
      : local.iter_1096.input)

    output = (local.curr_1097.code == "."
      ? "${local.iter_1096.output}${jsondecode(format("\"\\u%04x\"", local.iter_1096.tape[local.iter_1096.tape_ptr]))}"
      : local.iter_1096.output)
    
    tape = (
      local.curr_1097.code == "+"
        ? [for i, b in local.iter_1096.tape : (i == local.iter_1096.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1097.code == "-"
        ? [for i, b in local.iter_1096.tape : (i == local.iter_1096.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1097.code == ","
        ? [for i, b in local.iter_1096.tape : (i == local.iter_1096.tape_ptr ? local.ascii_lookup[local.curr_1097.input] : b)]
        : local.iter_1096.tape)

    tape_ptr = (
      local.curr_1097.code == "<"
        ? local.iter_1096.tape_ptr == 0 ? length(local.iter_1096.tape) - 1 : local.iter_1096.tape_ptr - 1 :
      local.curr_1097.code == ">"
        ? local.iter_1096.tape_ptr == length(local.iter_1096.tape) - 1 ? 0 : local.iter_1096.tape_ptr + 1
        : local.iter_1096.tape_ptr)

    code_ptr = 1 + (
      local.curr_1097.code == "["
        ? local.iter_1096.tape[local.iter_1096.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1096.code_ptr)] : local.iter_1096.code_ptr :
      local.curr_1097.code == "]"
        ? local.iter_1096.tape[local.iter_1096.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1096.code_ptr)] : local.iter_1096.code_ptr
        : local.iter_1096.code_ptr)

    steps_taken = 1 + local.iter_1096.steps_taken
  }
}

locals {
  end_of_code_1098 = try(local.iter_1097.code_ptr >= length(var.code), true)

  curr_1098 = local.end_of_code_1098 ? null : {
    code = substr(var.code, local.iter_1097.code_ptr, 1)
    input = substr(var.code, local.iter_1097.code_ptr, 1) == "," ? substr(local.iter_1097.input, 0, 1) : null
  }

  iter_1098 = local.end_of_code_1098 ? local.iter_1097 : {
    input = (local.curr_1098.code == ","
      ? substr(local.iter_1097.input, 1, -1)
      : local.iter_1097.input)

    output = (local.curr_1098.code == "."
      ? "${local.iter_1097.output}${jsondecode(format("\"\\u%04x\"", local.iter_1097.tape[local.iter_1097.tape_ptr]))}"
      : local.iter_1097.output)
    
    tape = (
      local.curr_1098.code == "+"
        ? [for i, b in local.iter_1097.tape : (i == local.iter_1097.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1098.code == "-"
        ? [for i, b in local.iter_1097.tape : (i == local.iter_1097.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1098.code == ","
        ? [for i, b in local.iter_1097.tape : (i == local.iter_1097.tape_ptr ? local.ascii_lookup[local.curr_1098.input] : b)]
        : local.iter_1097.tape)

    tape_ptr = (
      local.curr_1098.code == "<"
        ? local.iter_1097.tape_ptr == 0 ? length(local.iter_1097.tape) - 1 : local.iter_1097.tape_ptr - 1 :
      local.curr_1098.code == ">"
        ? local.iter_1097.tape_ptr == length(local.iter_1097.tape) - 1 ? 0 : local.iter_1097.tape_ptr + 1
        : local.iter_1097.tape_ptr)

    code_ptr = 1 + (
      local.curr_1098.code == "["
        ? local.iter_1097.tape[local.iter_1097.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1097.code_ptr)] : local.iter_1097.code_ptr :
      local.curr_1098.code == "]"
        ? local.iter_1097.tape[local.iter_1097.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1097.code_ptr)] : local.iter_1097.code_ptr
        : local.iter_1097.code_ptr)

    steps_taken = 1 + local.iter_1097.steps_taken
  }
}

locals {
  end_of_code_1099 = try(local.iter_1098.code_ptr >= length(var.code), true)

  curr_1099 = local.end_of_code_1099 ? null : {
    code = substr(var.code, local.iter_1098.code_ptr, 1)
    input = substr(var.code, local.iter_1098.code_ptr, 1) == "," ? substr(local.iter_1098.input, 0, 1) : null
  }

  iter_1099 = local.end_of_code_1099 ? local.iter_1098 : {
    input = (local.curr_1099.code == ","
      ? substr(local.iter_1098.input, 1, -1)
      : local.iter_1098.input)

    output = (local.curr_1099.code == "."
      ? "${local.iter_1098.output}${jsondecode(format("\"\\u%04x\"", local.iter_1098.tape[local.iter_1098.tape_ptr]))}"
      : local.iter_1098.output)
    
    tape = (
      local.curr_1099.code == "+"
        ? [for i, b in local.iter_1098.tape : (i == local.iter_1098.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1099.code == "-"
        ? [for i, b in local.iter_1098.tape : (i == local.iter_1098.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1099.code == ","
        ? [for i, b in local.iter_1098.tape : (i == local.iter_1098.tape_ptr ? local.ascii_lookup[local.curr_1099.input] : b)]
        : local.iter_1098.tape)

    tape_ptr = (
      local.curr_1099.code == "<"
        ? local.iter_1098.tape_ptr == 0 ? length(local.iter_1098.tape) - 1 : local.iter_1098.tape_ptr - 1 :
      local.curr_1099.code == ">"
        ? local.iter_1098.tape_ptr == length(local.iter_1098.tape) - 1 ? 0 : local.iter_1098.tape_ptr + 1
        : local.iter_1098.tape_ptr)

    code_ptr = 1 + (
      local.curr_1099.code == "["
        ? local.iter_1098.tape[local.iter_1098.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1098.code_ptr)] : local.iter_1098.code_ptr :
      local.curr_1099.code == "]"
        ? local.iter_1098.tape[local.iter_1098.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1098.code_ptr)] : local.iter_1098.code_ptr
        : local.iter_1098.code_ptr)

    steps_taken = 1 + local.iter_1098.steps_taken
  }
}

locals {
  end_of_code_1100 = try(local.iter_1099.code_ptr >= length(var.code), true)

  curr_1100 = local.end_of_code_1100 ? null : {
    code = substr(var.code, local.iter_1099.code_ptr, 1)
    input = substr(var.code, local.iter_1099.code_ptr, 1) == "," ? substr(local.iter_1099.input, 0, 1) : null
  }

  iter_1100 = local.end_of_code_1100 ? local.iter_1099 : {
    input = (local.curr_1100.code == ","
      ? substr(local.iter_1099.input, 1, -1)
      : local.iter_1099.input)

    output = (local.curr_1100.code == "."
      ? "${local.iter_1099.output}${jsondecode(format("\"\\u%04x\"", local.iter_1099.tape[local.iter_1099.tape_ptr]))}"
      : local.iter_1099.output)
    
    tape = (
      local.curr_1100.code == "+"
        ? [for i, b in local.iter_1099.tape : (i == local.iter_1099.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1100.code == "-"
        ? [for i, b in local.iter_1099.tape : (i == local.iter_1099.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1100.code == ","
        ? [for i, b in local.iter_1099.tape : (i == local.iter_1099.tape_ptr ? local.ascii_lookup[local.curr_1100.input] : b)]
        : local.iter_1099.tape)

    tape_ptr = (
      local.curr_1100.code == "<"
        ? local.iter_1099.tape_ptr == 0 ? length(local.iter_1099.tape) - 1 : local.iter_1099.tape_ptr - 1 :
      local.curr_1100.code == ">"
        ? local.iter_1099.tape_ptr == length(local.iter_1099.tape) - 1 ? 0 : local.iter_1099.tape_ptr + 1
        : local.iter_1099.tape_ptr)

    code_ptr = 1 + (
      local.curr_1100.code == "["
        ? local.iter_1099.tape[local.iter_1099.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1099.code_ptr)] : local.iter_1099.code_ptr :
      local.curr_1100.code == "]"
        ? local.iter_1099.tape[local.iter_1099.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1099.code_ptr)] : local.iter_1099.code_ptr
        : local.iter_1099.code_ptr)

    steps_taken = 1 + local.iter_1099.steps_taken
  }
}

locals {
  end_of_code_1101 = try(local.iter_1100.code_ptr >= length(var.code), true)

  curr_1101 = local.end_of_code_1101 ? null : {
    code = substr(var.code, local.iter_1100.code_ptr, 1)
    input = substr(var.code, local.iter_1100.code_ptr, 1) == "," ? substr(local.iter_1100.input, 0, 1) : null
  }

  iter_1101 = local.end_of_code_1101 ? local.iter_1100 : {
    input = (local.curr_1101.code == ","
      ? substr(local.iter_1100.input, 1, -1)
      : local.iter_1100.input)

    output = (local.curr_1101.code == "."
      ? "${local.iter_1100.output}${jsondecode(format("\"\\u%04x\"", local.iter_1100.tape[local.iter_1100.tape_ptr]))}"
      : local.iter_1100.output)
    
    tape = (
      local.curr_1101.code == "+"
        ? [for i, b in local.iter_1100.tape : (i == local.iter_1100.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1101.code == "-"
        ? [for i, b in local.iter_1100.tape : (i == local.iter_1100.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1101.code == ","
        ? [for i, b in local.iter_1100.tape : (i == local.iter_1100.tape_ptr ? local.ascii_lookup[local.curr_1101.input] : b)]
        : local.iter_1100.tape)

    tape_ptr = (
      local.curr_1101.code == "<"
        ? local.iter_1100.tape_ptr == 0 ? length(local.iter_1100.tape) - 1 : local.iter_1100.tape_ptr - 1 :
      local.curr_1101.code == ">"
        ? local.iter_1100.tape_ptr == length(local.iter_1100.tape) - 1 ? 0 : local.iter_1100.tape_ptr + 1
        : local.iter_1100.tape_ptr)

    code_ptr = 1 + (
      local.curr_1101.code == "["
        ? local.iter_1100.tape[local.iter_1100.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1100.code_ptr)] : local.iter_1100.code_ptr :
      local.curr_1101.code == "]"
        ? local.iter_1100.tape[local.iter_1100.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1100.code_ptr)] : local.iter_1100.code_ptr
        : local.iter_1100.code_ptr)

    steps_taken = 1 + local.iter_1100.steps_taken
  }
}

locals {
  end_of_code_1102 = try(local.iter_1101.code_ptr >= length(var.code), true)

  curr_1102 = local.end_of_code_1102 ? null : {
    code = substr(var.code, local.iter_1101.code_ptr, 1)
    input = substr(var.code, local.iter_1101.code_ptr, 1) == "," ? substr(local.iter_1101.input, 0, 1) : null
  }

  iter_1102 = local.end_of_code_1102 ? local.iter_1101 : {
    input = (local.curr_1102.code == ","
      ? substr(local.iter_1101.input, 1, -1)
      : local.iter_1101.input)

    output = (local.curr_1102.code == "."
      ? "${local.iter_1101.output}${jsondecode(format("\"\\u%04x\"", local.iter_1101.tape[local.iter_1101.tape_ptr]))}"
      : local.iter_1101.output)
    
    tape = (
      local.curr_1102.code == "+"
        ? [for i, b in local.iter_1101.tape : (i == local.iter_1101.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1102.code == "-"
        ? [for i, b in local.iter_1101.tape : (i == local.iter_1101.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1102.code == ","
        ? [for i, b in local.iter_1101.tape : (i == local.iter_1101.tape_ptr ? local.ascii_lookup[local.curr_1102.input] : b)]
        : local.iter_1101.tape)

    tape_ptr = (
      local.curr_1102.code == "<"
        ? local.iter_1101.tape_ptr == 0 ? length(local.iter_1101.tape) - 1 : local.iter_1101.tape_ptr - 1 :
      local.curr_1102.code == ">"
        ? local.iter_1101.tape_ptr == length(local.iter_1101.tape) - 1 ? 0 : local.iter_1101.tape_ptr + 1
        : local.iter_1101.tape_ptr)

    code_ptr = 1 + (
      local.curr_1102.code == "["
        ? local.iter_1101.tape[local.iter_1101.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1101.code_ptr)] : local.iter_1101.code_ptr :
      local.curr_1102.code == "]"
        ? local.iter_1101.tape[local.iter_1101.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1101.code_ptr)] : local.iter_1101.code_ptr
        : local.iter_1101.code_ptr)

    steps_taken = 1 + local.iter_1101.steps_taken
  }
}

locals {
  end_of_code_1103 = try(local.iter_1102.code_ptr >= length(var.code), true)

  curr_1103 = local.end_of_code_1103 ? null : {
    code = substr(var.code, local.iter_1102.code_ptr, 1)
    input = substr(var.code, local.iter_1102.code_ptr, 1) == "," ? substr(local.iter_1102.input, 0, 1) : null
  }

  iter_1103 = local.end_of_code_1103 ? local.iter_1102 : {
    input = (local.curr_1103.code == ","
      ? substr(local.iter_1102.input, 1, -1)
      : local.iter_1102.input)

    output = (local.curr_1103.code == "."
      ? "${local.iter_1102.output}${jsondecode(format("\"\\u%04x\"", local.iter_1102.tape[local.iter_1102.tape_ptr]))}"
      : local.iter_1102.output)
    
    tape = (
      local.curr_1103.code == "+"
        ? [for i, b in local.iter_1102.tape : (i == local.iter_1102.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1103.code == "-"
        ? [for i, b in local.iter_1102.tape : (i == local.iter_1102.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1103.code == ","
        ? [for i, b in local.iter_1102.tape : (i == local.iter_1102.tape_ptr ? local.ascii_lookup[local.curr_1103.input] : b)]
        : local.iter_1102.tape)

    tape_ptr = (
      local.curr_1103.code == "<"
        ? local.iter_1102.tape_ptr == 0 ? length(local.iter_1102.tape) - 1 : local.iter_1102.tape_ptr - 1 :
      local.curr_1103.code == ">"
        ? local.iter_1102.tape_ptr == length(local.iter_1102.tape) - 1 ? 0 : local.iter_1102.tape_ptr + 1
        : local.iter_1102.tape_ptr)

    code_ptr = 1 + (
      local.curr_1103.code == "["
        ? local.iter_1102.tape[local.iter_1102.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1102.code_ptr)] : local.iter_1102.code_ptr :
      local.curr_1103.code == "]"
        ? local.iter_1102.tape[local.iter_1102.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1102.code_ptr)] : local.iter_1102.code_ptr
        : local.iter_1102.code_ptr)

    steps_taken = 1 + local.iter_1102.steps_taken
  }
}

locals {
  end_of_code_1104 = try(local.iter_1103.code_ptr >= length(var.code), true)

  curr_1104 = local.end_of_code_1104 ? null : {
    code = substr(var.code, local.iter_1103.code_ptr, 1)
    input = substr(var.code, local.iter_1103.code_ptr, 1) == "," ? substr(local.iter_1103.input, 0, 1) : null
  }

  iter_1104 = local.end_of_code_1104 ? local.iter_1103 : {
    input = (local.curr_1104.code == ","
      ? substr(local.iter_1103.input, 1, -1)
      : local.iter_1103.input)

    output = (local.curr_1104.code == "."
      ? "${local.iter_1103.output}${jsondecode(format("\"\\u%04x\"", local.iter_1103.tape[local.iter_1103.tape_ptr]))}"
      : local.iter_1103.output)
    
    tape = (
      local.curr_1104.code == "+"
        ? [for i, b in local.iter_1103.tape : (i == local.iter_1103.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1104.code == "-"
        ? [for i, b in local.iter_1103.tape : (i == local.iter_1103.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1104.code == ","
        ? [for i, b in local.iter_1103.tape : (i == local.iter_1103.tape_ptr ? local.ascii_lookup[local.curr_1104.input] : b)]
        : local.iter_1103.tape)

    tape_ptr = (
      local.curr_1104.code == "<"
        ? local.iter_1103.tape_ptr == 0 ? length(local.iter_1103.tape) - 1 : local.iter_1103.tape_ptr - 1 :
      local.curr_1104.code == ">"
        ? local.iter_1103.tape_ptr == length(local.iter_1103.tape) - 1 ? 0 : local.iter_1103.tape_ptr + 1
        : local.iter_1103.tape_ptr)

    code_ptr = 1 + (
      local.curr_1104.code == "["
        ? local.iter_1103.tape[local.iter_1103.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1103.code_ptr)] : local.iter_1103.code_ptr :
      local.curr_1104.code == "]"
        ? local.iter_1103.tape[local.iter_1103.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1103.code_ptr)] : local.iter_1103.code_ptr
        : local.iter_1103.code_ptr)

    steps_taken = 1 + local.iter_1103.steps_taken
  }
}

locals {
  end_of_code_1105 = try(local.iter_1104.code_ptr >= length(var.code), true)

  curr_1105 = local.end_of_code_1105 ? null : {
    code = substr(var.code, local.iter_1104.code_ptr, 1)
    input = substr(var.code, local.iter_1104.code_ptr, 1) == "," ? substr(local.iter_1104.input, 0, 1) : null
  }

  iter_1105 = local.end_of_code_1105 ? local.iter_1104 : {
    input = (local.curr_1105.code == ","
      ? substr(local.iter_1104.input, 1, -1)
      : local.iter_1104.input)

    output = (local.curr_1105.code == "."
      ? "${local.iter_1104.output}${jsondecode(format("\"\\u%04x\"", local.iter_1104.tape[local.iter_1104.tape_ptr]))}"
      : local.iter_1104.output)
    
    tape = (
      local.curr_1105.code == "+"
        ? [for i, b in local.iter_1104.tape : (i == local.iter_1104.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1105.code == "-"
        ? [for i, b in local.iter_1104.tape : (i == local.iter_1104.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1105.code == ","
        ? [for i, b in local.iter_1104.tape : (i == local.iter_1104.tape_ptr ? local.ascii_lookup[local.curr_1105.input] : b)]
        : local.iter_1104.tape)

    tape_ptr = (
      local.curr_1105.code == "<"
        ? local.iter_1104.tape_ptr == 0 ? length(local.iter_1104.tape) - 1 : local.iter_1104.tape_ptr - 1 :
      local.curr_1105.code == ">"
        ? local.iter_1104.tape_ptr == length(local.iter_1104.tape) - 1 ? 0 : local.iter_1104.tape_ptr + 1
        : local.iter_1104.tape_ptr)

    code_ptr = 1 + (
      local.curr_1105.code == "["
        ? local.iter_1104.tape[local.iter_1104.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1104.code_ptr)] : local.iter_1104.code_ptr :
      local.curr_1105.code == "]"
        ? local.iter_1104.tape[local.iter_1104.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1104.code_ptr)] : local.iter_1104.code_ptr
        : local.iter_1104.code_ptr)

    steps_taken = 1 + local.iter_1104.steps_taken
  }
}

locals {
  end_of_code_1106 = try(local.iter_1105.code_ptr >= length(var.code), true)

  curr_1106 = local.end_of_code_1106 ? null : {
    code = substr(var.code, local.iter_1105.code_ptr, 1)
    input = substr(var.code, local.iter_1105.code_ptr, 1) == "," ? substr(local.iter_1105.input, 0, 1) : null
  }

  iter_1106 = local.end_of_code_1106 ? local.iter_1105 : {
    input = (local.curr_1106.code == ","
      ? substr(local.iter_1105.input, 1, -1)
      : local.iter_1105.input)

    output = (local.curr_1106.code == "."
      ? "${local.iter_1105.output}${jsondecode(format("\"\\u%04x\"", local.iter_1105.tape[local.iter_1105.tape_ptr]))}"
      : local.iter_1105.output)
    
    tape = (
      local.curr_1106.code == "+"
        ? [for i, b in local.iter_1105.tape : (i == local.iter_1105.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1106.code == "-"
        ? [for i, b in local.iter_1105.tape : (i == local.iter_1105.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1106.code == ","
        ? [for i, b in local.iter_1105.tape : (i == local.iter_1105.tape_ptr ? local.ascii_lookup[local.curr_1106.input] : b)]
        : local.iter_1105.tape)

    tape_ptr = (
      local.curr_1106.code == "<"
        ? local.iter_1105.tape_ptr == 0 ? length(local.iter_1105.tape) - 1 : local.iter_1105.tape_ptr - 1 :
      local.curr_1106.code == ">"
        ? local.iter_1105.tape_ptr == length(local.iter_1105.tape) - 1 ? 0 : local.iter_1105.tape_ptr + 1
        : local.iter_1105.tape_ptr)

    code_ptr = 1 + (
      local.curr_1106.code == "["
        ? local.iter_1105.tape[local.iter_1105.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1105.code_ptr)] : local.iter_1105.code_ptr :
      local.curr_1106.code == "]"
        ? local.iter_1105.tape[local.iter_1105.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1105.code_ptr)] : local.iter_1105.code_ptr
        : local.iter_1105.code_ptr)

    steps_taken = 1 + local.iter_1105.steps_taken
  }
}

locals {
  end_of_code_1107 = try(local.iter_1106.code_ptr >= length(var.code), true)

  curr_1107 = local.end_of_code_1107 ? null : {
    code = substr(var.code, local.iter_1106.code_ptr, 1)
    input = substr(var.code, local.iter_1106.code_ptr, 1) == "," ? substr(local.iter_1106.input, 0, 1) : null
  }

  iter_1107 = local.end_of_code_1107 ? local.iter_1106 : {
    input = (local.curr_1107.code == ","
      ? substr(local.iter_1106.input, 1, -1)
      : local.iter_1106.input)

    output = (local.curr_1107.code == "."
      ? "${local.iter_1106.output}${jsondecode(format("\"\\u%04x\"", local.iter_1106.tape[local.iter_1106.tape_ptr]))}"
      : local.iter_1106.output)
    
    tape = (
      local.curr_1107.code == "+"
        ? [for i, b in local.iter_1106.tape : (i == local.iter_1106.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1107.code == "-"
        ? [for i, b in local.iter_1106.tape : (i == local.iter_1106.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1107.code == ","
        ? [for i, b in local.iter_1106.tape : (i == local.iter_1106.tape_ptr ? local.ascii_lookup[local.curr_1107.input] : b)]
        : local.iter_1106.tape)

    tape_ptr = (
      local.curr_1107.code == "<"
        ? local.iter_1106.tape_ptr == 0 ? length(local.iter_1106.tape) - 1 : local.iter_1106.tape_ptr - 1 :
      local.curr_1107.code == ">"
        ? local.iter_1106.tape_ptr == length(local.iter_1106.tape) - 1 ? 0 : local.iter_1106.tape_ptr + 1
        : local.iter_1106.tape_ptr)

    code_ptr = 1 + (
      local.curr_1107.code == "["
        ? local.iter_1106.tape[local.iter_1106.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1106.code_ptr)] : local.iter_1106.code_ptr :
      local.curr_1107.code == "]"
        ? local.iter_1106.tape[local.iter_1106.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1106.code_ptr)] : local.iter_1106.code_ptr
        : local.iter_1106.code_ptr)

    steps_taken = 1 + local.iter_1106.steps_taken
  }
}

locals {
  end_of_code_1108 = try(local.iter_1107.code_ptr >= length(var.code), true)

  curr_1108 = local.end_of_code_1108 ? null : {
    code = substr(var.code, local.iter_1107.code_ptr, 1)
    input = substr(var.code, local.iter_1107.code_ptr, 1) == "," ? substr(local.iter_1107.input, 0, 1) : null
  }

  iter_1108 = local.end_of_code_1108 ? local.iter_1107 : {
    input = (local.curr_1108.code == ","
      ? substr(local.iter_1107.input, 1, -1)
      : local.iter_1107.input)

    output = (local.curr_1108.code == "."
      ? "${local.iter_1107.output}${jsondecode(format("\"\\u%04x\"", local.iter_1107.tape[local.iter_1107.tape_ptr]))}"
      : local.iter_1107.output)
    
    tape = (
      local.curr_1108.code == "+"
        ? [for i, b in local.iter_1107.tape : (i == local.iter_1107.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1108.code == "-"
        ? [for i, b in local.iter_1107.tape : (i == local.iter_1107.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1108.code == ","
        ? [for i, b in local.iter_1107.tape : (i == local.iter_1107.tape_ptr ? local.ascii_lookup[local.curr_1108.input] : b)]
        : local.iter_1107.tape)

    tape_ptr = (
      local.curr_1108.code == "<"
        ? local.iter_1107.tape_ptr == 0 ? length(local.iter_1107.tape) - 1 : local.iter_1107.tape_ptr - 1 :
      local.curr_1108.code == ">"
        ? local.iter_1107.tape_ptr == length(local.iter_1107.tape) - 1 ? 0 : local.iter_1107.tape_ptr + 1
        : local.iter_1107.tape_ptr)

    code_ptr = 1 + (
      local.curr_1108.code == "["
        ? local.iter_1107.tape[local.iter_1107.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1107.code_ptr)] : local.iter_1107.code_ptr :
      local.curr_1108.code == "]"
        ? local.iter_1107.tape[local.iter_1107.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1107.code_ptr)] : local.iter_1107.code_ptr
        : local.iter_1107.code_ptr)

    steps_taken = 1 + local.iter_1107.steps_taken
  }
}

locals {
  end_of_code_1109 = try(local.iter_1108.code_ptr >= length(var.code), true)

  curr_1109 = local.end_of_code_1109 ? null : {
    code = substr(var.code, local.iter_1108.code_ptr, 1)
    input = substr(var.code, local.iter_1108.code_ptr, 1) == "," ? substr(local.iter_1108.input, 0, 1) : null
  }

  iter_1109 = local.end_of_code_1109 ? local.iter_1108 : {
    input = (local.curr_1109.code == ","
      ? substr(local.iter_1108.input, 1, -1)
      : local.iter_1108.input)

    output = (local.curr_1109.code == "."
      ? "${local.iter_1108.output}${jsondecode(format("\"\\u%04x\"", local.iter_1108.tape[local.iter_1108.tape_ptr]))}"
      : local.iter_1108.output)
    
    tape = (
      local.curr_1109.code == "+"
        ? [for i, b in local.iter_1108.tape : (i == local.iter_1108.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1109.code == "-"
        ? [for i, b in local.iter_1108.tape : (i == local.iter_1108.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1109.code == ","
        ? [for i, b in local.iter_1108.tape : (i == local.iter_1108.tape_ptr ? local.ascii_lookup[local.curr_1109.input] : b)]
        : local.iter_1108.tape)

    tape_ptr = (
      local.curr_1109.code == "<"
        ? local.iter_1108.tape_ptr == 0 ? length(local.iter_1108.tape) - 1 : local.iter_1108.tape_ptr - 1 :
      local.curr_1109.code == ">"
        ? local.iter_1108.tape_ptr == length(local.iter_1108.tape) - 1 ? 0 : local.iter_1108.tape_ptr + 1
        : local.iter_1108.tape_ptr)

    code_ptr = 1 + (
      local.curr_1109.code == "["
        ? local.iter_1108.tape[local.iter_1108.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1108.code_ptr)] : local.iter_1108.code_ptr :
      local.curr_1109.code == "]"
        ? local.iter_1108.tape[local.iter_1108.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1108.code_ptr)] : local.iter_1108.code_ptr
        : local.iter_1108.code_ptr)

    steps_taken = 1 + local.iter_1108.steps_taken
  }
}

locals {
  end_of_code_1110 = try(local.iter_1109.code_ptr >= length(var.code), true)

  curr_1110 = local.end_of_code_1110 ? null : {
    code = substr(var.code, local.iter_1109.code_ptr, 1)
    input = substr(var.code, local.iter_1109.code_ptr, 1) == "," ? substr(local.iter_1109.input, 0, 1) : null
  }

  iter_1110 = local.end_of_code_1110 ? local.iter_1109 : {
    input = (local.curr_1110.code == ","
      ? substr(local.iter_1109.input, 1, -1)
      : local.iter_1109.input)

    output = (local.curr_1110.code == "."
      ? "${local.iter_1109.output}${jsondecode(format("\"\\u%04x\"", local.iter_1109.tape[local.iter_1109.tape_ptr]))}"
      : local.iter_1109.output)
    
    tape = (
      local.curr_1110.code == "+"
        ? [for i, b in local.iter_1109.tape : (i == local.iter_1109.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1110.code == "-"
        ? [for i, b in local.iter_1109.tape : (i == local.iter_1109.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1110.code == ","
        ? [for i, b in local.iter_1109.tape : (i == local.iter_1109.tape_ptr ? local.ascii_lookup[local.curr_1110.input] : b)]
        : local.iter_1109.tape)

    tape_ptr = (
      local.curr_1110.code == "<"
        ? local.iter_1109.tape_ptr == 0 ? length(local.iter_1109.tape) - 1 : local.iter_1109.tape_ptr - 1 :
      local.curr_1110.code == ">"
        ? local.iter_1109.tape_ptr == length(local.iter_1109.tape) - 1 ? 0 : local.iter_1109.tape_ptr + 1
        : local.iter_1109.tape_ptr)

    code_ptr = 1 + (
      local.curr_1110.code == "["
        ? local.iter_1109.tape[local.iter_1109.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1109.code_ptr)] : local.iter_1109.code_ptr :
      local.curr_1110.code == "]"
        ? local.iter_1109.tape[local.iter_1109.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1109.code_ptr)] : local.iter_1109.code_ptr
        : local.iter_1109.code_ptr)

    steps_taken = 1 + local.iter_1109.steps_taken
  }
}

locals {
  end_of_code_1111 = try(local.iter_1110.code_ptr >= length(var.code), true)

  curr_1111 = local.end_of_code_1111 ? null : {
    code = substr(var.code, local.iter_1110.code_ptr, 1)
    input = substr(var.code, local.iter_1110.code_ptr, 1) == "," ? substr(local.iter_1110.input, 0, 1) : null
  }

  iter_1111 = local.end_of_code_1111 ? local.iter_1110 : {
    input = (local.curr_1111.code == ","
      ? substr(local.iter_1110.input, 1, -1)
      : local.iter_1110.input)

    output = (local.curr_1111.code == "."
      ? "${local.iter_1110.output}${jsondecode(format("\"\\u%04x\"", local.iter_1110.tape[local.iter_1110.tape_ptr]))}"
      : local.iter_1110.output)
    
    tape = (
      local.curr_1111.code == "+"
        ? [for i, b in local.iter_1110.tape : (i == local.iter_1110.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1111.code == "-"
        ? [for i, b in local.iter_1110.tape : (i == local.iter_1110.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1111.code == ","
        ? [for i, b in local.iter_1110.tape : (i == local.iter_1110.tape_ptr ? local.ascii_lookup[local.curr_1111.input] : b)]
        : local.iter_1110.tape)

    tape_ptr = (
      local.curr_1111.code == "<"
        ? local.iter_1110.tape_ptr == 0 ? length(local.iter_1110.tape) - 1 : local.iter_1110.tape_ptr - 1 :
      local.curr_1111.code == ">"
        ? local.iter_1110.tape_ptr == length(local.iter_1110.tape) - 1 ? 0 : local.iter_1110.tape_ptr + 1
        : local.iter_1110.tape_ptr)

    code_ptr = 1 + (
      local.curr_1111.code == "["
        ? local.iter_1110.tape[local.iter_1110.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1110.code_ptr)] : local.iter_1110.code_ptr :
      local.curr_1111.code == "]"
        ? local.iter_1110.tape[local.iter_1110.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1110.code_ptr)] : local.iter_1110.code_ptr
        : local.iter_1110.code_ptr)

    steps_taken = 1 + local.iter_1110.steps_taken
  }
}

locals {
  end_of_code_1112 = try(local.iter_1111.code_ptr >= length(var.code), true)

  curr_1112 = local.end_of_code_1112 ? null : {
    code = substr(var.code, local.iter_1111.code_ptr, 1)
    input = substr(var.code, local.iter_1111.code_ptr, 1) == "," ? substr(local.iter_1111.input, 0, 1) : null
  }

  iter_1112 = local.end_of_code_1112 ? local.iter_1111 : {
    input = (local.curr_1112.code == ","
      ? substr(local.iter_1111.input, 1, -1)
      : local.iter_1111.input)

    output = (local.curr_1112.code == "."
      ? "${local.iter_1111.output}${jsondecode(format("\"\\u%04x\"", local.iter_1111.tape[local.iter_1111.tape_ptr]))}"
      : local.iter_1111.output)
    
    tape = (
      local.curr_1112.code == "+"
        ? [for i, b in local.iter_1111.tape : (i == local.iter_1111.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1112.code == "-"
        ? [for i, b in local.iter_1111.tape : (i == local.iter_1111.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1112.code == ","
        ? [for i, b in local.iter_1111.tape : (i == local.iter_1111.tape_ptr ? local.ascii_lookup[local.curr_1112.input] : b)]
        : local.iter_1111.tape)

    tape_ptr = (
      local.curr_1112.code == "<"
        ? local.iter_1111.tape_ptr == 0 ? length(local.iter_1111.tape) - 1 : local.iter_1111.tape_ptr - 1 :
      local.curr_1112.code == ">"
        ? local.iter_1111.tape_ptr == length(local.iter_1111.tape) - 1 ? 0 : local.iter_1111.tape_ptr + 1
        : local.iter_1111.tape_ptr)

    code_ptr = 1 + (
      local.curr_1112.code == "["
        ? local.iter_1111.tape[local.iter_1111.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1111.code_ptr)] : local.iter_1111.code_ptr :
      local.curr_1112.code == "]"
        ? local.iter_1111.tape[local.iter_1111.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1111.code_ptr)] : local.iter_1111.code_ptr
        : local.iter_1111.code_ptr)

    steps_taken = 1 + local.iter_1111.steps_taken
  }
}

locals {
  end_of_code_1113 = try(local.iter_1112.code_ptr >= length(var.code), true)

  curr_1113 = local.end_of_code_1113 ? null : {
    code = substr(var.code, local.iter_1112.code_ptr, 1)
    input = substr(var.code, local.iter_1112.code_ptr, 1) == "," ? substr(local.iter_1112.input, 0, 1) : null
  }

  iter_1113 = local.end_of_code_1113 ? local.iter_1112 : {
    input = (local.curr_1113.code == ","
      ? substr(local.iter_1112.input, 1, -1)
      : local.iter_1112.input)

    output = (local.curr_1113.code == "."
      ? "${local.iter_1112.output}${jsondecode(format("\"\\u%04x\"", local.iter_1112.tape[local.iter_1112.tape_ptr]))}"
      : local.iter_1112.output)
    
    tape = (
      local.curr_1113.code == "+"
        ? [for i, b in local.iter_1112.tape : (i == local.iter_1112.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1113.code == "-"
        ? [for i, b in local.iter_1112.tape : (i == local.iter_1112.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1113.code == ","
        ? [for i, b in local.iter_1112.tape : (i == local.iter_1112.tape_ptr ? local.ascii_lookup[local.curr_1113.input] : b)]
        : local.iter_1112.tape)

    tape_ptr = (
      local.curr_1113.code == "<"
        ? local.iter_1112.tape_ptr == 0 ? length(local.iter_1112.tape) - 1 : local.iter_1112.tape_ptr - 1 :
      local.curr_1113.code == ">"
        ? local.iter_1112.tape_ptr == length(local.iter_1112.tape) - 1 ? 0 : local.iter_1112.tape_ptr + 1
        : local.iter_1112.tape_ptr)

    code_ptr = 1 + (
      local.curr_1113.code == "["
        ? local.iter_1112.tape[local.iter_1112.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1112.code_ptr)] : local.iter_1112.code_ptr :
      local.curr_1113.code == "]"
        ? local.iter_1112.tape[local.iter_1112.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1112.code_ptr)] : local.iter_1112.code_ptr
        : local.iter_1112.code_ptr)

    steps_taken = 1 + local.iter_1112.steps_taken
  }
}

locals {
  end_of_code_1114 = try(local.iter_1113.code_ptr >= length(var.code), true)

  curr_1114 = local.end_of_code_1114 ? null : {
    code = substr(var.code, local.iter_1113.code_ptr, 1)
    input = substr(var.code, local.iter_1113.code_ptr, 1) == "," ? substr(local.iter_1113.input, 0, 1) : null
  }

  iter_1114 = local.end_of_code_1114 ? local.iter_1113 : {
    input = (local.curr_1114.code == ","
      ? substr(local.iter_1113.input, 1, -1)
      : local.iter_1113.input)

    output = (local.curr_1114.code == "."
      ? "${local.iter_1113.output}${jsondecode(format("\"\\u%04x\"", local.iter_1113.tape[local.iter_1113.tape_ptr]))}"
      : local.iter_1113.output)
    
    tape = (
      local.curr_1114.code == "+"
        ? [for i, b in local.iter_1113.tape : (i == local.iter_1113.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1114.code == "-"
        ? [for i, b in local.iter_1113.tape : (i == local.iter_1113.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1114.code == ","
        ? [for i, b in local.iter_1113.tape : (i == local.iter_1113.tape_ptr ? local.ascii_lookup[local.curr_1114.input] : b)]
        : local.iter_1113.tape)

    tape_ptr = (
      local.curr_1114.code == "<"
        ? local.iter_1113.tape_ptr == 0 ? length(local.iter_1113.tape) - 1 : local.iter_1113.tape_ptr - 1 :
      local.curr_1114.code == ">"
        ? local.iter_1113.tape_ptr == length(local.iter_1113.tape) - 1 ? 0 : local.iter_1113.tape_ptr + 1
        : local.iter_1113.tape_ptr)

    code_ptr = 1 + (
      local.curr_1114.code == "["
        ? local.iter_1113.tape[local.iter_1113.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1113.code_ptr)] : local.iter_1113.code_ptr :
      local.curr_1114.code == "]"
        ? local.iter_1113.tape[local.iter_1113.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1113.code_ptr)] : local.iter_1113.code_ptr
        : local.iter_1113.code_ptr)

    steps_taken = 1 + local.iter_1113.steps_taken
  }
}

locals {
  end_of_code_1115 = try(local.iter_1114.code_ptr >= length(var.code), true)

  curr_1115 = local.end_of_code_1115 ? null : {
    code = substr(var.code, local.iter_1114.code_ptr, 1)
    input = substr(var.code, local.iter_1114.code_ptr, 1) == "," ? substr(local.iter_1114.input, 0, 1) : null
  }

  iter_1115 = local.end_of_code_1115 ? local.iter_1114 : {
    input = (local.curr_1115.code == ","
      ? substr(local.iter_1114.input, 1, -1)
      : local.iter_1114.input)

    output = (local.curr_1115.code == "."
      ? "${local.iter_1114.output}${jsondecode(format("\"\\u%04x\"", local.iter_1114.tape[local.iter_1114.tape_ptr]))}"
      : local.iter_1114.output)
    
    tape = (
      local.curr_1115.code == "+"
        ? [for i, b in local.iter_1114.tape : (i == local.iter_1114.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1115.code == "-"
        ? [for i, b in local.iter_1114.tape : (i == local.iter_1114.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1115.code == ","
        ? [for i, b in local.iter_1114.tape : (i == local.iter_1114.tape_ptr ? local.ascii_lookup[local.curr_1115.input] : b)]
        : local.iter_1114.tape)

    tape_ptr = (
      local.curr_1115.code == "<"
        ? local.iter_1114.tape_ptr == 0 ? length(local.iter_1114.tape) - 1 : local.iter_1114.tape_ptr - 1 :
      local.curr_1115.code == ">"
        ? local.iter_1114.tape_ptr == length(local.iter_1114.tape) - 1 ? 0 : local.iter_1114.tape_ptr + 1
        : local.iter_1114.tape_ptr)

    code_ptr = 1 + (
      local.curr_1115.code == "["
        ? local.iter_1114.tape[local.iter_1114.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1114.code_ptr)] : local.iter_1114.code_ptr :
      local.curr_1115.code == "]"
        ? local.iter_1114.tape[local.iter_1114.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1114.code_ptr)] : local.iter_1114.code_ptr
        : local.iter_1114.code_ptr)

    steps_taken = 1 + local.iter_1114.steps_taken
  }
}

locals {
  end_of_code_1116 = try(local.iter_1115.code_ptr >= length(var.code), true)

  curr_1116 = local.end_of_code_1116 ? null : {
    code = substr(var.code, local.iter_1115.code_ptr, 1)
    input = substr(var.code, local.iter_1115.code_ptr, 1) == "," ? substr(local.iter_1115.input, 0, 1) : null
  }

  iter_1116 = local.end_of_code_1116 ? local.iter_1115 : {
    input = (local.curr_1116.code == ","
      ? substr(local.iter_1115.input, 1, -1)
      : local.iter_1115.input)

    output = (local.curr_1116.code == "."
      ? "${local.iter_1115.output}${jsondecode(format("\"\\u%04x\"", local.iter_1115.tape[local.iter_1115.tape_ptr]))}"
      : local.iter_1115.output)
    
    tape = (
      local.curr_1116.code == "+"
        ? [for i, b in local.iter_1115.tape : (i == local.iter_1115.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1116.code == "-"
        ? [for i, b in local.iter_1115.tape : (i == local.iter_1115.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1116.code == ","
        ? [for i, b in local.iter_1115.tape : (i == local.iter_1115.tape_ptr ? local.ascii_lookup[local.curr_1116.input] : b)]
        : local.iter_1115.tape)

    tape_ptr = (
      local.curr_1116.code == "<"
        ? local.iter_1115.tape_ptr == 0 ? length(local.iter_1115.tape) - 1 : local.iter_1115.tape_ptr - 1 :
      local.curr_1116.code == ">"
        ? local.iter_1115.tape_ptr == length(local.iter_1115.tape) - 1 ? 0 : local.iter_1115.tape_ptr + 1
        : local.iter_1115.tape_ptr)

    code_ptr = 1 + (
      local.curr_1116.code == "["
        ? local.iter_1115.tape[local.iter_1115.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1115.code_ptr)] : local.iter_1115.code_ptr :
      local.curr_1116.code == "]"
        ? local.iter_1115.tape[local.iter_1115.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1115.code_ptr)] : local.iter_1115.code_ptr
        : local.iter_1115.code_ptr)

    steps_taken = 1 + local.iter_1115.steps_taken
  }
}

locals {
  end_of_code_1117 = try(local.iter_1116.code_ptr >= length(var.code), true)

  curr_1117 = local.end_of_code_1117 ? null : {
    code = substr(var.code, local.iter_1116.code_ptr, 1)
    input = substr(var.code, local.iter_1116.code_ptr, 1) == "," ? substr(local.iter_1116.input, 0, 1) : null
  }

  iter_1117 = local.end_of_code_1117 ? local.iter_1116 : {
    input = (local.curr_1117.code == ","
      ? substr(local.iter_1116.input, 1, -1)
      : local.iter_1116.input)

    output = (local.curr_1117.code == "."
      ? "${local.iter_1116.output}${jsondecode(format("\"\\u%04x\"", local.iter_1116.tape[local.iter_1116.tape_ptr]))}"
      : local.iter_1116.output)
    
    tape = (
      local.curr_1117.code == "+"
        ? [for i, b in local.iter_1116.tape : (i == local.iter_1116.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1117.code == "-"
        ? [for i, b in local.iter_1116.tape : (i == local.iter_1116.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1117.code == ","
        ? [for i, b in local.iter_1116.tape : (i == local.iter_1116.tape_ptr ? local.ascii_lookup[local.curr_1117.input] : b)]
        : local.iter_1116.tape)

    tape_ptr = (
      local.curr_1117.code == "<"
        ? local.iter_1116.tape_ptr == 0 ? length(local.iter_1116.tape) - 1 : local.iter_1116.tape_ptr - 1 :
      local.curr_1117.code == ">"
        ? local.iter_1116.tape_ptr == length(local.iter_1116.tape) - 1 ? 0 : local.iter_1116.tape_ptr + 1
        : local.iter_1116.tape_ptr)

    code_ptr = 1 + (
      local.curr_1117.code == "["
        ? local.iter_1116.tape[local.iter_1116.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1116.code_ptr)] : local.iter_1116.code_ptr :
      local.curr_1117.code == "]"
        ? local.iter_1116.tape[local.iter_1116.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1116.code_ptr)] : local.iter_1116.code_ptr
        : local.iter_1116.code_ptr)

    steps_taken = 1 + local.iter_1116.steps_taken
  }
}

locals {
  end_of_code_1118 = try(local.iter_1117.code_ptr >= length(var.code), true)

  curr_1118 = local.end_of_code_1118 ? null : {
    code = substr(var.code, local.iter_1117.code_ptr, 1)
    input = substr(var.code, local.iter_1117.code_ptr, 1) == "," ? substr(local.iter_1117.input, 0, 1) : null
  }

  iter_1118 = local.end_of_code_1118 ? local.iter_1117 : {
    input = (local.curr_1118.code == ","
      ? substr(local.iter_1117.input, 1, -1)
      : local.iter_1117.input)

    output = (local.curr_1118.code == "."
      ? "${local.iter_1117.output}${jsondecode(format("\"\\u%04x\"", local.iter_1117.tape[local.iter_1117.tape_ptr]))}"
      : local.iter_1117.output)
    
    tape = (
      local.curr_1118.code == "+"
        ? [for i, b in local.iter_1117.tape : (i == local.iter_1117.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1118.code == "-"
        ? [for i, b in local.iter_1117.tape : (i == local.iter_1117.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1118.code == ","
        ? [for i, b in local.iter_1117.tape : (i == local.iter_1117.tape_ptr ? local.ascii_lookup[local.curr_1118.input] : b)]
        : local.iter_1117.tape)

    tape_ptr = (
      local.curr_1118.code == "<"
        ? local.iter_1117.tape_ptr == 0 ? length(local.iter_1117.tape) - 1 : local.iter_1117.tape_ptr - 1 :
      local.curr_1118.code == ">"
        ? local.iter_1117.tape_ptr == length(local.iter_1117.tape) - 1 ? 0 : local.iter_1117.tape_ptr + 1
        : local.iter_1117.tape_ptr)

    code_ptr = 1 + (
      local.curr_1118.code == "["
        ? local.iter_1117.tape[local.iter_1117.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1117.code_ptr)] : local.iter_1117.code_ptr :
      local.curr_1118.code == "]"
        ? local.iter_1117.tape[local.iter_1117.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1117.code_ptr)] : local.iter_1117.code_ptr
        : local.iter_1117.code_ptr)

    steps_taken = 1 + local.iter_1117.steps_taken
  }
}

locals {
  end_of_code_1119 = try(local.iter_1118.code_ptr >= length(var.code), true)

  curr_1119 = local.end_of_code_1119 ? null : {
    code = substr(var.code, local.iter_1118.code_ptr, 1)
    input = substr(var.code, local.iter_1118.code_ptr, 1) == "," ? substr(local.iter_1118.input, 0, 1) : null
  }

  iter_1119 = local.end_of_code_1119 ? local.iter_1118 : {
    input = (local.curr_1119.code == ","
      ? substr(local.iter_1118.input, 1, -1)
      : local.iter_1118.input)

    output = (local.curr_1119.code == "."
      ? "${local.iter_1118.output}${jsondecode(format("\"\\u%04x\"", local.iter_1118.tape[local.iter_1118.tape_ptr]))}"
      : local.iter_1118.output)
    
    tape = (
      local.curr_1119.code == "+"
        ? [for i, b in local.iter_1118.tape : (i == local.iter_1118.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1119.code == "-"
        ? [for i, b in local.iter_1118.tape : (i == local.iter_1118.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1119.code == ","
        ? [for i, b in local.iter_1118.tape : (i == local.iter_1118.tape_ptr ? local.ascii_lookup[local.curr_1119.input] : b)]
        : local.iter_1118.tape)

    tape_ptr = (
      local.curr_1119.code == "<"
        ? local.iter_1118.tape_ptr == 0 ? length(local.iter_1118.tape) - 1 : local.iter_1118.tape_ptr - 1 :
      local.curr_1119.code == ">"
        ? local.iter_1118.tape_ptr == length(local.iter_1118.tape) - 1 ? 0 : local.iter_1118.tape_ptr + 1
        : local.iter_1118.tape_ptr)

    code_ptr = 1 + (
      local.curr_1119.code == "["
        ? local.iter_1118.tape[local.iter_1118.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1118.code_ptr)] : local.iter_1118.code_ptr :
      local.curr_1119.code == "]"
        ? local.iter_1118.tape[local.iter_1118.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1118.code_ptr)] : local.iter_1118.code_ptr
        : local.iter_1118.code_ptr)

    steps_taken = 1 + local.iter_1118.steps_taken
  }
}

locals {
  end_of_code_1120 = try(local.iter_1119.code_ptr >= length(var.code), true)

  curr_1120 = local.end_of_code_1120 ? null : {
    code = substr(var.code, local.iter_1119.code_ptr, 1)
    input = substr(var.code, local.iter_1119.code_ptr, 1) == "," ? substr(local.iter_1119.input, 0, 1) : null
  }

  iter_1120 = local.end_of_code_1120 ? local.iter_1119 : {
    input = (local.curr_1120.code == ","
      ? substr(local.iter_1119.input, 1, -1)
      : local.iter_1119.input)

    output = (local.curr_1120.code == "."
      ? "${local.iter_1119.output}${jsondecode(format("\"\\u%04x\"", local.iter_1119.tape[local.iter_1119.tape_ptr]))}"
      : local.iter_1119.output)
    
    tape = (
      local.curr_1120.code == "+"
        ? [for i, b in local.iter_1119.tape : (i == local.iter_1119.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1120.code == "-"
        ? [for i, b in local.iter_1119.tape : (i == local.iter_1119.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1120.code == ","
        ? [for i, b in local.iter_1119.tape : (i == local.iter_1119.tape_ptr ? local.ascii_lookup[local.curr_1120.input] : b)]
        : local.iter_1119.tape)

    tape_ptr = (
      local.curr_1120.code == "<"
        ? local.iter_1119.tape_ptr == 0 ? length(local.iter_1119.tape) - 1 : local.iter_1119.tape_ptr - 1 :
      local.curr_1120.code == ">"
        ? local.iter_1119.tape_ptr == length(local.iter_1119.tape) - 1 ? 0 : local.iter_1119.tape_ptr + 1
        : local.iter_1119.tape_ptr)

    code_ptr = 1 + (
      local.curr_1120.code == "["
        ? local.iter_1119.tape[local.iter_1119.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1119.code_ptr)] : local.iter_1119.code_ptr :
      local.curr_1120.code == "]"
        ? local.iter_1119.tape[local.iter_1119.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1119.code_ptr)] : local.iter_1119.code_ptr
        : local.iter_1119.code_ptr)

    steps_taken = 1 + local.iter_1119.steps_taken
  }
}

locals {
  end_of_code_1121 = try(local.iter_1120.code_ptr >= length(var.code), true)

  curr_1121 = local.end_of_code_1121 ? null : {
    code = substr(var.code, local.iter_1120.code_ptr, 1)
    input = substr(var.code, local.iter_1120.code_ptr, 1) == "," ? substr(local.iter_1120.input, 0, 1) : null
  }

  iter_1121 = local.end_of_code_1121 ? local.iter_1120 : {
    input = (local.curr_1121.code == ","
      ? substr(local.iter_1120.input, 1, -1)
      : local.iter_1120.input)

    output = (local.curr_1121.code == "."
      ? "${local.iter_1120.output}${jsondecode(format("\"\\u%04x\"", local.iter_1120.tape[local.iter_1120.tape_ptr]))}"
      : local.iter_1120.output)
    
    tape = (
      local.curr_1121.code == "+"
        ? [for i, b in local.iter_1120.tape : (i == local.iter_1120.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1121.code == "-"
        ? [for i, b in local.iter_1120.tape : (i == local.iter_1120.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1121.code == ","
        ? [for i, b in local.iter_1120.tape : (i == local.iter_1120.tape_ptr ? local.ascii_lookup[local.curr_1121.input] : b)]
        : local.iter_1120.tape)

    tape_ptr = (
      local.curr_1121.code == "<"
        ? local.iter_1120.tape_ptr == 0 ? length(local.iter_1120.tape) - 1 : local.iter_1120.tape_ptr - 1 :
      local.curr_1121.code == ">"
        ? local.iter_1120.tape_ptr == length(local.iter_1120.tape) - 1 ? 0 : local.iter_1120.tape_ptr + 1
        : local.iter_1120.tape_ptr)

    code_ptr = 1 + (
      local.curr_1121.code == "["
        ? local.iter_1120.tape[local.iter_1120.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1120.code_ptr)] : local.iter_1120.code_ptr :
      local.curr_1121.code == "]"
        ? local.iter_1120.tape[local.iter_1120.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1120.code_ptr)] : local.iter_1120.code_ptr
        : local.iter_1120.code_ptr)

    steps_taken = 1 + local.iter_1120.steps_taken
  }
}

locals {
  end_of_code_1122 = try(local.iter_1121.code_ptr >= length(var.code), true)

  curr_1122 = local.end_of_code_1122 ? null : {
    code = substr(var.code, local.iter_1121.code_ptr, 1)
    input = substr(var.code, local.iter_1121.code_ptr, 1) == "," ? substr(local.iter_1121.input, 0, 1) : null
  }

  iter_1122 = local.end_of_code_1122 ? local.iter_1121 : {
    input = (local.curr_1122.code == ","
      ? substr(local.iter_1121.input, 1, -1)
      : local.iter_1121.input)

    output = (local.curr_1122.code == "."
      ? "${local.iter_1121.output}${jsondecode(format("\"\\u%04x\"", local.iter_1121.tape[local.iter_1121.tape_ptr]))}"
      : local.iter_1121.output)
    
    tape = (
      local.curr_1122.code == "+"
        ? [for i, b in local.iter_1121.tape : (i == local.iter_1121.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1122.code == "-"
        ? [for i, b in local.iter_1121.tape : (i == local.iter_1121.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1122.code == ","
        ? [for i, b in local.iter_1121.tape : (i == local.iter_1121.tape_ptr ? local.ascii_lookup[local.curr_1122.input] : b)]
        : local.iter_1121.tape)

    tape_ptr = (
      local.curr_1122.code == "<"
        ? local.iter_1121.tape_ptr == 0 ? length(local.iter_1121.tape) - 1 : local.iter_1121.tape_ptr - 1 :
      local.curr_1122.code == ">"
        ? local.iter_1121.tape_ptr == length(local.iter_1121.tape) - 1 ? 0 : local.iter_1121.tape_ptr + 1
        : local.iter_1121.tape_ptr)

    code_ptr = 1 + (
      local.curr_1122.code == "["
        ? local.iter_1121.tape[local.iter_1121.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1121.code_ptr)] : local.iter_1121.code_ptr :
      local.curr_1122.code == "]"
        ? local.iter_1121.tape[local.iter_1121.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1121.code_ptr)] : local.iter_1121.code_ptr
        : local.iter_1121.code_ptr)

    steps_taken = 1 + local.iter_1121.steps_taken
  }
}

locals {
  end_of_code_1123 = try(local.iter_1122.code_ptr >= length(var.code), true)

  curr_1123 = local.end_of_code_1123 ? null : {
    code = substr(var.code, local.iter_1122.code_ptr, 1)
    input = substr(var.code, local.iter_1122.code_ptr, 1) == "," ? substr(local.iter_1122.input, 0, 1) : null
  }

  iter_1123 = local.end_of_code_1123 ? local.iter_1122 : {
    input = (local.curr_1123.code == ","
      ? substr(local.iter_1122.input, 1, -1)
      : local.iter_1122.input)

    output = (local.curr_1123.code == "."
      ? "${local.iter_1122.output}${jsondecode(format("\"\\u%04x\"", local.iter_1122.tape[local.iter_1122.tape_ptr]))}"
      : local.iter_1122.output)
    
    tape = (
      local.curr_1123.code == "+"
        ? [for i, b in local.iter_1122.tape : (i == local.iter_1122.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1123.code == "-"
        ? [for i, b in local.iter_1122.tape : (i == local.iter_1122.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1123.code == ","
        ? [for i, b in local.iter_1122.tape : (i == local.iter_1122.tape_ptr ? local.ascii_lookup[local.curr_1123.input] : b)]
        : local.iter_1122.tape)

    tape_ptr = (
      local.curr_1123.code == "<"
        ? local.iter_1122.tape_ptr == 0 ? length(local.iter_1122.tape) - 1 : local.iter_1122.tape_ptr - 1 :
      local.curr_1123.code == ">"
        ? local.iter_1122.tape_ptr == length(local.iter_1122.tape) - 1 ? 0 : local.iter_1122.tape_ptr + 1
        : local.iter_1122.tape_ptr)

    code_ptr = 1 + (
      local.curr_1123.code == "["
        ? local.iter_1122.tape[local.iter_1122.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1122.code_ptr)] : local.iter_1122.code_ptr :
      local.curr_1123.code == "]"
        ? local.iter_1122.tape[local.iter_1122.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1122.code_ptr)] : local.iter_1122.code_ptr
        : local.iter_1122.code_ptr)

    steps_taken = 1 + local.iter_1122.steps_taken
  }
}

locals {
  end_of_code_1124 = try(local.iter_1123.code_ptr >= length(var.code), true)

  curr_1124 = local.end_of_code_1124 ? null : {
    code = substr(var.code, local.iter_1123.code_ptr, 1)
    input = substr(var.code, local.iter_1123.code_ptr, 1) == "," ? substr(local.iter_1123.input, 0, 1) : null
  }

  iter_1124 = local.end_of_code_1124 ? local.iter_1123 : {
    input = (local.curr_1124.code == ","
      ? substr(local.iter_1123.input, 1, -1)
      : local.iter_1123.input)

    output = (local.curr_1124.code == "."
      ? "${local.iter_1123.output}${jsondecode(format("\"\\u%04x\"", local.iter_1123.tape[local.iter_1123.tape_ptr]))}"
      : local.iter_1123.output)
    
    tape = (
      local.curr_1124.code == "+"
        ? [for i, b in local.iter_1123.tape : (i == local.iter_1123.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1124.code == "-"
        ? [for i, b in local.iter_1123.tape : (i == local.iter_1123.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1124.code == ","
        ? [for i, b in local.iter_1123.tape : (i == local.iter_1123.tape_ptr ? local.ascii_lookup[local.curr_1124.input] : b)]
        : local.iter_1123.tape)

    tape_ptr = (
      local.curr_1124.code == "<"
        ? local.iter_1123.tape_ptr == 0 ? length(local.iter_1123.tape) - 1 : local.iter_1123.tape_ptr - 1 :
      local.curr_1124.code == ">"
        ? local.iter_1123.tape_ptr == length(local.iter_1123.tape) - 1 ? 0 : local.iter_1123.tape_ptr + 1
        : local.iter_1123.tape_ptr)

    code_ptr = 1 + (
      local.curr_1124.code == "["
        ? local.iter_1123.tape[local.iter_1123.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1123.code_ptr)] : local.iter_1123.code_ptr :
      local.curr_1124.code == "]"
        ? local.iter_1123.tape[local.iter_1123.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1123.code_ptr)] : local.iter_1123.code_ptr
        : local.iter_1123.code_ptr)

    steps_taken = 1 + local.iter_1123.steps_taken
  }
}

locals {
  end_of_code_1125 = try(local.iter_1124.code_ptr >= length(var.code), true)

  curr_1125 = local.end_of_code_1125 ? null : {
    code = substr(var.code, local.iter_1124.code_ptr, 1)
    input = substr(var.code, local.iter_1124.code_ptr, 1) == "," ? substr(local.iter_1124.input, 0, 1) : null
  }

  iter_1125 = local.end_of_code_1125 ? local.iter_1124 : {
    input = (local.curr_1125.code == ","
      ? substr(local.iter_1124.input, 1, -1)
      : local.iter_1124.input)

    output = (local.curr_1125.code == "."
      ? "${local.iter_1124.output}${jsondecode(format("\"\\u%04x\"", local.iter_1124.tape[local.iter_1124.tape_ptr]))}"
      : local.iter_1124.output)
    
    tape = (
      local.curr_1125.code == "+"
        ? [for i, b in local.iter_1124.tape : (i == local.iter_1124.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1125.code == "-"
        ? [for i, b in local.iter_1124.tape : (i == local.iter_1124.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1125.code == ","
        ? [for i, b in local.iter_1124.tape : (i == local.iter_1124.tape_ptr ? local.ascii_lookup[local.curr_1125.input] : b)]
        : local.iter_1124.tape)

    tape_ptr = (
      local.curr_1125.code == "<"
        ? local.iter_1124.tape_ptr == 0 ? length(local.iter_1124.tape) - 1 : local.iter_1124.tape_ptr - 1 :
      local.curr_1125.code == ">"
        ? local.iter_1124.tape_ptr == length(local.iter_1124.tape) - 1 ? 0 : local.iter_1124.tape_ptr + 1
        : local.iter_1124.tape_ptr)

    code_ptr = 1 + (
      local.curr_1125.code == "["
        ? local.iter_1124.tape[local.iter_1124.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1124.code_ptr)] : local.iter_1124.code_ptr :
      local.curr_1125.code == "]"
        ? local.iter_1124.tape[local.iter_1124.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1124.code_ptr)] : local.iter_1124.code_ptr
        : local.iter_1124.code_ptr)

    steps_taken = 1 + local.iter_1124.steps_taken
  }
}

locals {
  end_of_code_1126 = try(local.iter_1125.code_ptr >= length(var.code), true)

  curr_1126 = local.end_of_code_1126 ? null : {
    code = substr(var.code, local.iter_1125.code_ptr, 1)
    input = substr(var.code, local.iter_1125.code_ptr, 1) == "," ? substr(local.iter_1125.input, 0, 1) : null
  }

  iter_1126 = local.end_of_code_1126 ? local.iter_1125 : {
    input = (local.curr_1126.code == ","
      ? substr(local.iter_1125.input, 1, -1)
      : local.iter_1125.input)

    output = (local.curr_1126.code == "."
      ? "${local.iter_1125.output}${jsondecode(format("\"\\u%04x\"", local.iter_1125.tape[local.iter_1125.tape_ptr]))}"
      : local.iter_1125.output)
    
    tape = (
      local.curr_1126.code == "+"
        ? [for i, b in local.iter_1125.tape : (i == local.iter_1125.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1126.code == "-"
        ? [for i, b in local.iter_1125.tape : (i == local.iter_1125.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1126.code == ","
        ? [for i, b in local.iter_1125.tape : (i == local.iter_1125.tape_ptr ? local.ascii_lookup[local.curr_1126.input] : b)]
        : local.iter_1125.tape)

    tape_ptr = (
      local.curr_1126.code == "<"
        ? local.iter_1125.tape_ptr == 0 ? length(local.iter_1125.tape) - 1 : local.iter_1125.tape_ptr - 1 :
      local.curr_1126.code == ">"
        ? local.iter_1125.tape_ptr == length(local.iter_1125.tape) - 1 ? 0 : local.iter_1125.tape_ptr + 1
        : local.iter_1125.tape_ptr)

    code_ptr = 1 + (
      local.curr_1126.code == "["
        ? local.iter_1125.tape[local.iter_1125.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1125.code_ptr)] : local.iter_1125.code_ptr :
      local.curr_1126.code == "]"
        ? local.iter_1125.tape[local.iter_1125.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1125.code_ptr)] : local.iter_1125.code_ptr
        : local.iter_1125.code_ptr)

    steps_taken = 1 + local.iter_1125.steps_taken
  }
}

locals {
  end_of_code_1127 = try(local.iter_1126.code_ptr >= length(var.code), true)

  curr_1127 = local.end_of_code_1127 ? null : {
    code = substr(var.code, local.iter_1126.code_ptr, 1)
    input = substr(var.code, local.iter_1126.code_ptr, 1) == "," ? substr(local.iter_1126.input, 0, 1) : null
  }

  iter_1127 = local.end_of_code_1127 ? local.iter_1126 : {
    input = (local.curr_1127.code == ","
      ? substr(local.iter_1126.input, 1, -1)
      : local.iter_1126.input)

    output = (local.curr_1127.code == "."
      ? "${local.iter_1126.output}${jsondecode(format("\"\\u%04x\"", local.iter_1126.tape[local.iter_1126.tape_ptr]))}"
      : local.iter_1126.output)
    
    tape = (
      local.curr_1127.code == "+"
        ? [for i, b in local.iter_1126.tape : (i == local.iter_1126.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1127.code == "-"
        ? [for i, b in local.iter_1126.tape : (i == local.iter_1126.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1127.code == ","
        ? [for i, b in local.iter_1126.tape : (i == local.iter_1126.tape_ptr ? local.ascii_lookup[local.curr_1127.input] : b)]
        : local.iter_1126.tape)

    tape_ptr = (
      local.curr_1127.code == "<"
        ? local.iter_1126.tape_ptr == 0 ? length(local.iter_1126.tape) - 1 : local.iter_1126.tape_ptr - 1 :
      local.curr_1127.code == ">"
        ? local.iter_1126.tape_ptr == length(local.iter_1126.tape) - 1 ? 0 : local.iter_1126.tape_ptr + 1
        : local.iter_1126.tape_ptr)

    code_ptr = 1 + (
      local.curr_1127.code == "["
        ? local.iter_1126.tape[local.iter_1126.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1126.code_ptr)] : local.iter_1126.code_ptr :
      local.curr_1127.code == "]"
        ? local.iter_1126.tape[local.iter_1126.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1126.code_ptr)] : local.iter_1126.code_ptr
        : local.iter_1126.code_ptr)

    steps_taken = 1 + local.iter_1126.steps_taken
  }
}

locals {
  end_of_code_1128 = try(local.iter_1127.code_ptr >= length(var.code), true)

  curr_1128 = local.end_of_code_1128 ? null : {
    code = substr(var.code, local.iter_1127.code_ptr, 1)
    input = substr(var.code, local.iter_1127.code_ptr, 1) == "," ? substr(local.iter_1127.input, 0, 1) : null
  }

  iter_1128 = local.end_of_code_1128 ? local.iter_1127 : {
    input = (local.curr_1128.code == ","
      ? substr(local.iter_1127.input, 1, -1)
      : local.iter_1127.input)

    output = (local.curr_1128.code == "."
      ? "${local.iter_1127.output}${jsondecode(format("\"\\u%04x\"", local.iter_1127.tape[local.iter_1127.tape_ptr]))}"
      : local.iter_1127.output)
    
    tape = (
      local.curr_1128.code == "+"
        ? [for i, b in local.iter_1127.tape : (i == local.iter_1127.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1128.code == "-"
        ? [for i, b in local.iter_1127.tape : (i == local.iter_1127.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1128.code == ","
        ? [for i, b in local.iter_1127.tape : (i == local.iter_1127.tape_ptr ? local.ascii_lookup[local.curr_1128.input] : b)]
        : local.iter_1127.tape)

    tape_ptr = (
      local.curr_1128.code == "<"
        ? local.iter_1127.tape_ptr == 0 ? length(local.iter_1127.tape) - 1 : local.iter_1127.tape_ptr - 1 :
      local.curr_1128.code == ">"
        ? local.iter_1127.tape_ptr == length(local.iter_1127.tape) - 1 ? 0 : local.iter_1127.tape_ptr + 1
        : local.iter_1127.tape_ptr)

    code_ptr = 1 + (
      local.curr_1128.code == "["
        ? local.iter_1127.tape[local.iter_1127.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1127.code_ptr)] : local.iter_1127.code_ptr :
      local.curr_1128.code == "]"
        ? local.iter_1127.tape[local.iter_1127.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1127.code_ptr)] : local.iter_1127.code_ptr
        : local.iter_1127.code_ptr)

    steps_taken = 1 + local.iter_1127.steps_taken
  }
}

locals {
  end_of_code_1129 = try(local.iter_1128.code_ptr >= length(var.code), true)

  curr_1129 = local.end_of_code_1129 ? null : {
    code = substr(var.code, local.iter_1128.code_ptr, 1)
    input = substr(var.code, local.iter_1128.code_ptr, 1) == "," ? substr(local.iter_1128.input, 0, 1) : null
  }

  iter_1129 = local.end_of_code_1129 ? local.iter_1128 : {
    input = (local.curr_1129.code == ","
      ? substr(local.iter_1128.input, 1, -1)
      : local.iter_1128.input)

    output = (local.curr_1129.code == "."
      ? "${local.iter_1128.output}${jsondecode(format("\"\\u%04x\"", local.iter_1128.tape[local.iter_1128.tape_ptr]))}"
      : local.iter_1128.output)
    
    tape = (
      local.curr_1129.code == "+"
        ? [for i, b in local.iter_1128.tape : (i == local.iter_1128.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1129.code == "-"
        ? [for i, b in local.iter_1128.tape : (i == local.iter_1128.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1129.code == ","
        ? [for i, b in local.iter_1128.tape : (i == local.iter_1128.tape_ptr ? local.ascii_lookup[local.curr_1129.input] : b)]
        : local.iter_1128.tape)

    tape_ptr = (
      local.curr_1129.code == "<"
        ? local.iter_1128.tape_ptr == 0 ? length(local.iter_1128.tape) - 1 : local.iter_1128.tape_ptr - 1 :
      local.curr_1129.code == ">"
        ? local.iter_1128.tape_ptr == length(local.iter_1128.tape) - 1 ? 0 : local.iter_1128.tape_ptr + 1
        : local.iter_1128.tape_ptr)

    code_ptr = 1 + (
      local.curr_1129.code == "["
        ? local.iter_1128.tape[local.iter_1128.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1128.code_ptr)] : local.iter_1128.code_ptr :
      local.curr_1129.code == "]"
        ? local.iter_1128.tape[local.iter_1128.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1128.code_ptr)] : local.iter_1128.code_ptr
        : local.iter_1128.code_ptr)

    steps_taken = 1 + local.iter_1128.steps_taken
  }
}

locals {
  end_of_code_1130 = try(local.iter_1129.code_ptr >= length(var.code), true)

  curr_1130 = local.end_of_code_1130 ? null : {
    code = substr(var.code, local.iter_1129.code_ptr, 1)
    input = substr(var.code, local.iter_1129.code_ptr, 1) == "," ? substr(local.iter_1129.input, 0, 1) : null
  }

  iter_1130 = local.end_of_code_1130 ? local.iter_1129 : {
    input = (local.curr_1130.code == ","
      ? substr(local.iter_1129.input, 1, -1)
      : local.iter_1129.input)

    output = (local.curr_1130.code == "."
      ? "${local.iter_1129.output}${jsondecode(format("\"\\u%04x\"", local.iter_1129.tape[local.iter_1129.tape_ptr]))}"
      : local.iter_1129.output)
    
    tape = (
      local.curr_1130.code == "+"
        ? [for i, b in local.iter_1129.tape : (i == local.iter_1129.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1130.code == "-"
        ? [for i, b in local.iter_1129.tape : (i == local.iter_1129.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1130.code == ","
        ? [for i, b in local.iter_1129.tape : (i == local.iter_1129.tape_ptr ? local.ascii_lookup[local.curr_1130.input] : b)]
        : local.iter_1129.tape)

    tape_ptr = (
      local.curr_1130.code == "<"
        ? local.iter_1129.tape_ptr == 0 ? length(local.iter_1129.tape) - 1 : local.iter_1129.tape_ptr - 1 :
      local.curr_1130.code == ">"
        ? local.iter_1129.tape_ptr == length(local.iter_1129.tape) - 1 ? 0 : local.iter_1129.tape_ptr + 1
        : local.iter_1129.tape_ptr)

    code_ptr = 1 + (
      local.curr_1130.code == "["
        ? local.iter_1129.tape[local.iter_1129.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1129.code_ptr)] : local.iter_1129.code_ptr :
      local.curr_1130.code == "]"
        ? local.iter_1129.tape[local.iter_1129.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1129.code_ptr)] : local.iter_1129.code_ptr
        : local.iter_1129.code_ptr)

    steps_taken = 1 + local.iter_1129.steps_taken
  }
}

locals {
  end_of_code_1131 = try(local.iter_1130.code_ptr >= length(var.code), true)

  curr_1131 = local.end_of_code_1131 ? null : {
    code = substr(var.code, local.iter_1130.code_ptr, 1)
    input = substr(var.code, local.iter_1130.code_ptr, 1) == "," ? substr(local.iter_1130.input, 0, 1) : null
  }

  iter_1131 = local.end_of_code_1131 ? local.iter_1130 : {
    input = (local.curr_1131.code == ","
      ? substr(local.iter_1130.input, 1, -1)
      : local.iter_1130.input)

    output = (local.curr_1131.code == "."
      ? "${local.iter_1130.output}${jsondecode(format("\"\\u%04x\"", local.iter_1130.tape[local.iter_1130.tape_ptr]))}"
      : local.iter_1130.output)
    
    tape = (
      local.curr_1131.code == "+"
        ? [for i, b in local.iter_1130.tape : (i == local.iter_1130.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1131.code == "-"
        ? [for i, b in local.iter_1130.tape : (i == local.iter_1130.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1131.code == ","
        ? [for i, b in local.iter_1130.tape : (i == local.iter_1130.tape_ptr ? local.ascii_lookup[local.curr_1131.input] : b)]
        : local.iter_1130.tape)

    tape_ptr = (
      local.curr_1131.code == "<"
        ? local.iter_1130.tape_ptr == 0 ? length(local.iter_1130.tape) - 1 : local.iter_1130.tape_ptr - 1 :
      local.curr_1131.code == ">"
        ? local.iter_1130.tape_ptr == length(local.iter_1130.tape) - 1 ? 0 : local.iter_1130.tape_ptr + 1
        : local.iter_1130.tape_ptr)

    code_ptr = 1 + (
      local.curr_1131.code == "["
        ? local.iter_1130.tape[local.iter_1130.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1130.code_ptr)] : local.iter_1130.code_ptr :
      local.curr_1131.code == "]"
        ? local.iter_1130.tape[local.iter_1130.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1130.code_ptr)] : local.iter_1130.code_ptr
        : local.iter_1130.code_ptr)

    steps_taken = 1 + local.iter_1130.steps_taken
  }
}

locals {
  end_of_code_1132 = try(local.iter_1131.code_ptr >= length(var.code), true)

  curr_1132 = local.end_of_code_1132 ? null : {
    code = substr(var.code, local.iter_1131.code_ptr, 1)
    input = substr(var.code, local.iter_1131.code_ptr, 1) == "," ? substr(local.iter_1131.input, 0, 1) : null
  }

  iter_1132 = local.end_of_code_1132 ? local.iter_1131 : {
    input = (local.curr_1132.code == ","
      ? substr(local.iter_1131.input, 1, -1)
      : local.iter_1131.input)

    output = (local.curr_1132.code == "."
      ? "${local.iter_1131.output}${jsondecode(format("\"\\u%04x\"", local.iter_1131.tape[local.iter_1131.tape_ptr]))}"
      : local.iter_1131.output)
    
    tape = (
      local.curr_1132.code == "+"
        ? [for i, b in local.iter_1131.tape : (i == local.iter_1131.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1132.code == "-"
        ? [for i, b in local.iter_1131.tape : (i == local.iter_1131.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1132.code == ","
        ? [for i, b in local.iter_1131.tape : (i == local.iter_1131.tape_ptr ? local.ascii_lookup[local.curr_1132.input] : b)]
        : local.iter_1131.tape)

    tape_ptr = (
      local.curr_1132.code == "<"
        ? local.iter_1131.tape_ptr == 0 ? length(local.iter_1131.tape) - 1 : local.iter_1131.tape_ptr - 1 :
      local.curr_1132.code == ">"
        ? local.iter_1131.tape_ptr == length(local.iter_1131.tape) - 1 ? 0 : local.iter_1131.tape_ptr + 1
        : local.iter_1131.tape_ptr)

    code_ptr = 1 + (
      local.curr_1132.code == "["
        ? local.iter_1131.tape[local.iter_1131.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1131.code_ptr)] : local.iter_1131.code_ptr :
      local.curr_1132.code == "]"
        ? local.iter_1131.tape[local.iter_1131.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1131.code_ptr)] : local.iter_1131.code_ptr
        : local.iter_1131.code_ptr)

    steps_taken = 1 + local.iter_1131.steps_taken
  }
}

locals {
  end_of_code_1133 = try(local.iter_1132.code_ptr >= length(var.code), true)

  curr_1133 = local.end_of_code_1133 ? null : {
    code = substr(var.code, local.iter_1132.code_ptr, 1)
    input = substr(var.code, local.iter_1132.code_ptr, 1) == "," ? substr(local.iter_1132.input, 0, 1) : null
  }

  iter_1133 = local.end_of_code_1133 ? local.iter_1132 : {
    input = (local.curr_1133.code == ","
      ? substr(local.iter_1132.input, 1, -1)
      : local.iter_1132.input)

    output = (local.curr_1133.code == "."
      ? "${local.iter_1132.output}${jsondecode(format("\"\\u%04x\"", local.iter_1132.tape[local.iter_1132.tape_ptr]))}"
      : local.iter_1132.output)
    
    tape = (
      local.curr_1133.code == "+"
        ? [for i, b in local.iter_1132.tape : (i == local.iter_1132.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1133.code == "-"
        ? [for i, b in local.iter_1132.tape : (i == local.iter_1132.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1133.code == ","
        ? [for i, b in local.iter_1132.tape : (i == local.iter_1132.tape_ptr ? local.ascii_lookup[local.curr_1133.input] : b)]
        : local.iter_1132.tape)

    tape_ptr = (
      local.curr_1133.code == "<"
        ? local.iter_1132.tape_ptr == 0 ? length(local.iter_1132.tape) - 1 : local.iter_1132.tape_ptr - 1 :
      local.curr_1133.code == ">"
        ? local.iter_1132.tape_ptr == length(local.iter_1132.tape) - 1 ? 0 : local.iter_1132.tape_ptr + 1
        : local.iter_1132.tape_ptr)

    code_ptr = 1 + (
      local.curr_1133.code == "["
        ? local.iter_1132.tape[local.iter_1132.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1132.code_ptr)] : local.iter_1132.code_ptr :
      local.curr_1133.code == "]"
        ? local.iter_1132.tape[local.iter_1132.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1132.code_ptr)] : local.iter_1132.code_ptr
        : local.iter_1132.code_ptr)

    steps_taken = 1 + local.iter_1132.steps_taken
  }
}

locals {
  end_of_code_1134 = try(local.iter_1133.code_ptr >= length(var.code), true)

  curr_1134 = local.end_of_code_1134 ? null : {
    code = substr(var.code, local.iter_1133.code_ptr, 1)
    input = substr(var.code, local.iter_1133.code_ptr, 1) == "," ? substr(local.iter_1133.input, 0, 1) : null
  }

  iter_1134 = local.end_of_code_1134 ? local.iter_1133 : {
    input = (local.curr_1134.code == ","
      ? substr(local.iter_1133.input, 1, -1)
      : local.iter_1133.input)

    output = (local.curr_1134.code == "."
      ? "${local.iter_1133.output}${jsondecode(format("\"\\u%04x\"", local.iter_1133.tape[local.iter_1133.tape_ptr]))}"
      : local.iter_1133.output)
    
    tape = (
      local.curr_1134.code == "+"
        ? [for i, b in local.iter_1133.tape : (i == local.iter_1133.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1134.code == "-"
        ? [for i, b in local.iter_1133.tape : (i == local.iter_1133.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1134.code == ","
        ? [for i, b in local.iter_1133.tape : (i == local.iter_1133.tape_ptr ? local.ascii_lookup[local.curr_1134.input] : b)]
        : local.iter_1133.tape)

    tape_ptr = (
      local.curr_1134.code == "<"
        ? local.iter_1133.tape_ptr == 0 ? length(local.iter_1133.tape) - 1 : local.iter_1133.tape_ptr - 1 :
      local.curr_1134.code == ">"
        ? local.iter_1133.tape_ptr == length(local.iter_1133.tape) - 1 ? 0 : local.iter_1133.tape_ptr + 1
        : local.iter_1133.tape_ptr)

    code_ptr = 1 + (
      local.curr_1134.code == "["
        ? local.iter_1133.tape[local.iter_1133.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1133.code_ptr)] : local.iter_1133.code_ptr :
      local.curr_1134.code == "]"
        ? local.iter_1133.tape[local.iter_1133.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1133.code_ptr)] : local.iter_1133.code_ptr
        : local.iter_1133.code_ptr)

    steps_taken = 1 + local.iter_1133.steps_taken
  }
}

locals {
  end_of_code_1135 = try(local.iter_1134.code_ptr >= length(var.code), true)

  curr_1135 = local.end_of_code_1135 ? null : {
    code = substr(var.code, local.iter_1134.code_ptr, 1)
    input = substr(var.code, local.iter_1134.code_ptr, 1) == "," ? substr(local.iter_1134.input, 0, 1) : null
  }

  iter_1135 = local.end_of_code_1135 ? local.iter_1134 : {
    input = (local.curr_1135.code == ","
      ? substr(local.iter_1134.input, 1, -1)
      : local.iter_1134.input)

    output = (local.curr_1135.code == "."
      ? "${local.iter_1134.output}${jsondecode(format("\"\\u%04x\"", local.iter_1134.tape[local.iter_1134.tape_ptr]))}"
      : local.iter_1134.output)
    
    tape = (
      local.curr_1135.code == "+"
        ? [for i, b in local.iter_1134.tape : (i == local.iter_1134.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1135.code == "-"
        ? [for i, b in local.iter_1134.tape : (i == local.iter_1134.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1135.code == ","
        ? [for i, b in local.iter_1134.tape : (i == local.iter_1134.tape_ptr ? local.ascii_lookup[local.curr_1135.input] : b)]
        : local.iter_1134.tape)

    tape_ptr = (
      local.curr_1135.code == "<"
        ? local.iter_1134.tape_ptr == 0 ? length(local.iter_1134.tape) - 1 : local.iter_1134.tape_ptr - 1 :
      local.curr_1135.code == ">"
        ? local.iter_1134.tape_ptr == length(local.iter_1134.tape) - 1 ? 0 : local.iter_1134.tape_ptr + 1
        : local.iter_1134.tape_ptr)

    code_ptr = 1 + (
      local.curr_1135.code == "["
        ? local.iter_1134.tape[local.iter_1134.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1134.code_ptr)] : local.iter_1134.code_ptr :
      local.curr_1135.code == "]"
        ? local.iter_1134.tape[local.iter_1134.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1134.code_ptr)] : local.iter_1134.code_ptr
        : local.iter_1134.code_ptr)

    steps_taken = 1 + local.iter_1134.steps_taken
  }
}

locals {
  end_of_code_1136 = try(local.iter_1135.code_ptr >= length(var.code), true)

  curr_1136 = local.end_of_code_1136 ? null : {
    code = substr(var.code, local.iter_1135.code_ptr, 1)
    input = substr(var.code, local.iter_1135.code_ptr, 1) == "," ? substr(local.iter_1135.input, 0, 1) : null
  }

  iter_1136 = local.end_of_code_1136 ? local.iter_1135 : {
    input = (local.curr_1136.code == ","
      ? substr(local.iter_1135.input, 1, -1)
      : local.iter_1135.input)

    output = (local.curr_1136.code == "."
      ? "${local.iter_1135.output}${jsondecode(format("\"\\u%04x\"", local.iter_1135.tape[local.iter_1135.tape_ptr]))}"
      : local.iter_1135.output)
    
    tape = (
      local.curr_1136.code == "+"
        ? [for i, b in local.iter_1135.tape : (i == local.iter_1135.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1136.code == "-"
        ? [for i, b in local.iter_1135.tape : (i == local.iter_1135.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1136.code == ","
        ? [for i, b in local.iter_1135.tape : (i == local.iter_1135.tape_ptr ? local.ascii_lookup[local.curr_1136.input] : b)]
        : local.iter_1135.tape)

    tape_ptr = (
      local.curr_1136.code == "<"
        ? local.iter_1135.tape_ptr == 0 ? length(local.iter_1135.tape) - 1 : local.iter_1135.tape_ptr - 1 :
      local.curr_1136.code == ">"
        ? local.iter_1135.tape_ptr == length(local.iter_1135.tape) - 1 ? 0 : local.iter_1135.tape_ptr + 1
        : local.iter_1135.tape_ptr)

    code_ptr = 1 + (
      local.curr_1136.code == "["
        ? local.iter_1135.tape[local.iter_1135.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1135.code_ptr)] : local.iter_1135.code_ptr :
      local.curr_1136.code == "]"
        ? local.iter_1135.tape[local.iter_1135.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1135.code_ptr)] : local.iter_1135.code_ptr
        : local.iter_1135.code_ptr)

    steps_taken = 1 + local.iter_1135.steps_taken
  }
}

locals {
  end_of_code_1137 = try(local.iter_1136.code_ptr >= length(var.code), true)

  curr_1137 = local.end_of_code_1137 ? null : {
    code = substr(var.code, local.iter_1136.code_ptr, 1)
    input = substr(var.code, local.iter_1136.code_ptr, 1) == "," ? substr(local.iter_1136.input, 0, 1) : null
  }

  iter_1137 = local.end_of_code_1137 ? local.iter_1136 : {
    input = (local.curr_1137.code == ","
      ? substr(local.iter_1136.input, 1, -1)
      : local.iter_1136.input)

    output = (local.curr_1137.code == "."
      ? "${local.iter_1136.output}${jsondecode(format("\"\\u%04x\"", local.iter_1136.tape[local.iter_1136.tape_ptr]))}"
      : local.iter_1136.output)
    
    tape = (
      local.curr_1137.code == "+"
        ? [for i, b in local.iter_1136.tape : (i == local.iter_1136.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1137.code == "-"
        ? [for i, b in local.iter_1136.tape : (i == local.iter_1136.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1137.code == ","
        ? [for i, b in local.iter_1136.tape : (i == local.iter_1136.tape_ptr ? local.ascii_lookup[local.curr_1137.input] : b)]
        : local.iter_1136.tape)

    tape_ptr = (
      local.curr_1137.code == "<"
        ? local.iter_1136.tape_ptr == 0 ? length(local.iter_1136.tape) - 1 : local.iter_1136.tape_ptr - 1 :
      local.curr_1137.code == ">"
        ? local.iter_1136.tape_ptr == length(local.iter_1136.tape) - 1 ? 0 : local.iter_1136.tape_ptr + 1
        : local.iter_1136.tape_ptr)

    code_ptr = 1 + (
      local.curr_1137.code == "["
        ? local.iter_1136.tape[local.iter_1136.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1136.code_ptr)] : local.iter_1136.code_ptr :
      local.curr_1137.code == "]"
        ? local.iter_1136.tape[local.iter_1136.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1136.code_ptr)] : local.iter_1136.code_ptr
        : local.iter_1136.code_ptr)

    steps_taken = 1 + local.iter_1136.steps_taken
  }
}

locals {
  end_of_code_1138 = try(local.iter_1137.code_ptr >= length(var.code), true)

  curr_1138 = local.end_of_code_1138 ? null : {
    code = substr(var.code, local.iter_1137.code_ptr, 1)
    input = substr(var.code, local.iter_1137.code_ptr, 1) == "," ? substr(local.iter_1137.input, 0, 1) : null
  }

  iter_1138 = local.end_of_code_1138 ? local.iter_1137 : {
    input = (local.curr_1138.code == ","
      ? substr(local.iter_1137.input, 1, -1)
      : local.iter_1137.input)

    output = (local.curr_1138.code == "."
      ? "${local.iter_1137.output}${jsondecode(format("\"\\u%04x\"", local.iter_1137.tape[local.iter_1137.tape_ptr]))}"
      : local.iter_1137.output)
    
    tape = (
      local.curr_1138.code == "+"
        ? [for i, b in local.iter_1137.tape : (i == local.iter_1137.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1138.code == "-"
        ? [for i, b in local.iter_1137.tape : (i == local.iter_1137.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1138.code == ","
        ? [for i, b in local.iter_1137.tape : (i == local.iter_1137.tape_ptr ? local.ascii_lookup[local.curr_1138.input] : b)]
        : local.iter_1137.tape)

    tape_ptr = (
      local.curr_1138.code == "<"
        ? local.iter_1137.tape_ptr == 0 ? length(local.iter_1137.tape) - 1 : local.iter_1137.tape_ptr - 1 :
      local.curr_1138.code == ">"
        ? local.iter_1137.tape_ptr == length(local.iter_1137.tape) - 1 ? 0 : local.iter_1137.tape_ptr + 1
        : local.iter_1137.tape_ptr)

    code_ptr = 1 + (
      local.curr_1138.code == "["
        ? local.iter_1137.tape[local.iter_1137.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1137.code_ptr)] : local.iter_1137.code_ptr :
      local.curr_1138.code == "]"
        ? local.iter_1137.tape[local.iter_1137.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1137.code_ptr)] : local.iter_1137.code_ptr
        : local.iter_1137.code_ptr)

    steps_taken = 1 + local.iter_1137.steps_taken
  }
}

locals {
  end_of_code_1139 = try(local.iter_1138.code_ptr >= length(var.code), true)

  curr_1139 = local.end_of_code_1139 ? null : {
    code = substr(var.code, local.iter_1138.code_ptr, 1)
    input = substr(var.code, local.iter_1138.code_ptr, 1) == "," ? substr(local.iter_1138.input, 0, 1) : null
  }

  iter_1139 = local.end_of_code_1139 ? local.iter_1138 : {
    input = (local.curr_1139.code == ","
      ? substr(local.iter_1138.input, 1, -1)
      : local.iter_1138.input)

    output = (local.curr_1139.code == "."
      ? "${local.iter_1138.output}${jsondecode(format("\"\\u%04x\"", local.iter_1138.tape[local.iter_1138.tape_ptr]))}"
      : local.iter_1138.output)
    
    tape = (
      local.curr_1139.code == "+"
        ? [for i, b in local.iter_1138.tape : (i == local.iter_1138.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1139.code == "-"
        ? [for i, b in local.iter_1138.tape : (i == local.iter_1138.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1139.code == ","
        ? [for i, b in local.iter_1138.tape : (i == local.iter_1138.tape_ptr ? local.ascii_lookup[local.curr_1139.input] : b)]
        : local.iter_1138.tape)

    tape_ptr = (
      local.curr_1139.code == "<"
        ? local.iter_1138.tape_ptr == 0 ? length(local.iter_1138.tape) - 1 : local.iter_1138.tape_ptr - 1 :
      local.curr_1139.code == ">"
        ? local.iter_1138.tape_ptr == length(local.iter_1138.tape) - 1 ? 0 : local.iter_1138.tape_ptr + 1
        : local.iter_1138.tape_ptr)

    code_ptr = 1 + (
      local.curr_1139.code == "["
        ? local.iter_1138.tape[local.iter_1138.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1138.code_ptr)] : local.iter_1138.code_ptr :
      local.curr_1139.code == "]"
        ? local.iter_1138.tape[local.iter_1138.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1138.code_ptr)] : local.iter_1138.code_ptr
        : local.iter_1138.code_ptr)

    steps_taken = 1 + local.iter_1138.steps_taken
  }
}

locals {
  end_of_code_1140 = try(local.iter_1139.code_ptr >= length(var.code), true)

  curr_1140 = local.end_of_code_1140 ? null : {
    code = substr(var.code, local.iter_1139.code_ptr, 1)
    input = substr(var.code, local.iter_1139.code_ptr, 1) == "," ? substr(local.iter_1139.input, 0, 1) : null
  }

  iter_1140 = local.end_of_code_1140 ? local.iter_1139 : {
    input = (local.curr_1140.code == ","
      ? substr(local.iter_1139.input, 1, -1)
      : local.iter_1139.input)

    output = (local.curr_1140.code == "."
      ? "${local.iter_1139.output}${jsondecode(format("\"\\u%04x\"", local.iter_1139.tape[local.iter_1139.tape_ptr]))}"
      : local.iter_1139.output)
    
    tape = (
      local.curr_1140.code == "+"
        ? [for i, b in local.iter_1139.tape : (i == local.iter_1139.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1140.code == "-"
        ? [for i, b in local.iter_1139.tape : (i == local.iter_1139.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1140.code == ","
        ? [for i, b in local.iter_1139.tape : (i == local.iter_1139.tape_ptr ? local.ascii_lookup[local.curr_1140.input] : b)]
        : local.iter_1139.tape)

    tape_ptr = (
      local.curr_1140.code == "<"
        ? local.iter_1139.tape_ptr == 0 ? length(local.iter_1139.tape) - 1 : local.iter_1139.tape_ptr - 1 :
      local.curr_1140.code == ">"
        ? local.iter_1139.tape_ptr == length(local.iter_1139.tape) - 1 ? 0 : local.iter_1139.tape_ptr + 1
        : local.iter_1139.tape_ptr)

    code_ptr = 1 + (
      local.curr_1140.code == "["
        ? local.iter_1139.tape[local.iter_1139.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1139.code_ptr)] : local.iter_1139.code_ptr :
      local.curr_1140.code == "]"
        ? local.iter_1139.tape[local.iter_1139.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1139.code_ptr)] : local.iter_1139.code_ptr
        : local.iter_1139.code_ptr)

    steps_taken = 1 + local.iter_1139.steps_taken
  }
}

locals {
  end_of_code_1141 = try(local.iter_1140.code_ptr >= length(var.code), true)

  curr_1141 = local.end_of_code_1141 ? null : {
    code = substr(var.code, local.iter_1140.code_ptr, 1)
    input = substr(var.code, local.iter_1140.code_ptr, 1) == "," ? substr(local.iter_1140.input, 0, 1) : null
  }

  iter_1141 = local.end_of_code_1141 ? local.iter_1140 : {
    input = (local.curr_1141.code == ","
      ? substr(local.iter_1140.input, 1, -1)
      : local.iter_1140.input)

    output = (local.curr_1141.code == "."
      ? "${local.iter_1140.output}${jsondecode(format("\"\\u%04x\"", local.iter_1140.tape[local.iter_1140.tape_ptr]))}"
      : local.iter_1140.output)
    
    tape = (
      local.curr_1141.code == "+"
        ? [for i, b in local.iter_1140.tape : (i == local.iter_1140.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1141.code == "-"
        ? [for i, b in local.iter_1140.tape : (i == local.iter_1140.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1141.code == ","
        ? [for i, b in local.iter_1140.tape : (i == local.iter_1140.tape_ptr ? local.ascii_lookup[local.curr_1141.input] : b)]
        : local.iter_1140.tape)

    tape_ptr = (
      local.curr_1141.code == "<"
        ? local.iter_1140.tape_ptr == 0 ? length(local.iter_1140.tape) - 1 : local.iter_1140.tape_ptr - 1 :
      local.curr_1141.code == ">"
        ? local.iter_1140.tape_ptr == length(local.iter_1140.tape) - 1 ? 0 : local.iter_1140.tape_ptr + 1
        : local.iter_1140.tape_ptr)

    code_ptr = 1 + (
      local.curr_1141.code == "["
        ? local.iter_1140.tape[local.iter_1140.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1140.code_ptr)] : local.iter_1140.code_ptr :
      local.curr_1141.code == "]"
        ? local.iter_1140.tape[local.iter_1140.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1140.code_ptr)] : local.iter_1140.code_ptr
        : local.iter_1140.code_ptr)

    steps_taken = 1 + local.iter_1140.steps_taken
  }
}

locals {
  end_of_code_1142 = try(local.iter_1141.code_ptr >= length(var.code), true)

  curr_1142 = local.end_of_code_1142 ? null : {
    code = substr(var.code, local.iter_1141.code_ptr, 1)
    input = substr(var.code, local.iter_1141.code_ptr, 1) == "," ? substr(local.iter_1141.input, 0, 1) : null
  }

  iter_1142 = local.end_of_code_1142 ? local.iter_1141 : {
    input = (local.curr_1142.code == ","
      ? substr(local.iter_1141.input, 1, -1)
      : local.iter_1141.input)

    output = (local.curr_1142.code == "."
      ? "${local.iter_1141.output}${jsondecode(format("\"\\u%04x\"", local.iter_1141.tape[local.iter_1141.tape_ptr]))}"
      : local.iter_1141.output)
    
    tape = (
      local.curr_1142.code == "+"
        ? [for i, b in local.iter_1141.tape : (i == local.iter_1141.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1142.code == "-"
        ? [for i, b in local.iter_1141.tape : (i == local.iter_1141.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1142.code == ","
        ? [for i, b in local.iter_1141.tape : (i == local.iter_1141.tape_ptr ? local.ascii_lookup[local.curr_1142.input] : b)]
        : local.iter_1141.tape)

    tape_ptr = (
      local.curr_1142.code == "<"
        ? local.iter_1141.tape_ptr == 0 ? length(local.iter_1141.tape) - 1 : local.iter_1141.tape_ptr - 1 :
      local.curr_1142.code == ">"
        ? local.iter_1141.tape_ptr == length(local.iter_1141.tape) - 1 ? 0 : local.iter_1141.tape_ptr + 1
        : local.iter_1141.tape_ptr)

    code_ptr = 1 + (
      local.curr_1142.code == "["
        ? local.iter_1141.tape[local.iter_1141.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1141.code_ptr)] : local.iter_1141.code_ptr :
      local.curr_1142.code == "]"
        ? local.iter_1141.tape[local.iter_1141.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1141.code_ptr)] : local.iter_1141.code_ptr
        : local.iter_1141.code_ptr)

    steps_taken = 1 + local.iter_1141.steps_taken
  }
}

locals {
  end_of_code_1143 = try(local.iter_1142.code_ptr >= length(var.code), true)

  curr_1143 = local.end_of_code_1143 ? null : {
    code = substr(var.code, local.iter_1142.code_ptr, 1)
    input = substr(var.code, local.iter_1142.code_ptr, 1) == "," ? substr(local.iter_1142.input, 0, 1) : null
  }

  iter_1143 = local.end_of_code_1143 ? local.iter_1142 : {
    input = (local.curr_1143.code == ","
      ? substr(local.iter_1142.input, 1, -1)
      : local.iter_1142.input)

    output = (local.curr_1143.code == "."
      ? "${local.iter_1142.output}${jsondecode(format("\"\\u%04x\"", local.iter_1142.tape[local.iter_1142.tape_ptr]))}"
      : local.iter_1142.output)
    
    tape = (
      local.curr_1143.code == "+"
        ? [for i, b in local.iter_1142.tape : (i == local.iter_1142.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1143.code == "-"
        ? [for i, b in local.iter_1142.tape : (i == local.iter_1142.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1143.code == ","
        ? [for i, b in local.iter_1142.tape : (i == local.iter_1142.tape_ptr ? local.ascii_lookup[local.curr_1143.input] : b)]
        : local.iter_1142.tape)

    tape_ptr = (
      local.curr_1143.code == "<"
        ? local.iter_1142.tape_ptr == 0 ? length(local.iter_1142.tape) - 1 : local.iter_1142.tape_ptr - 1 :
      local.curr_1143.code == ">"
        ? local.iter_1142.tape_ptr == length(local.iter_1142.tape) - 1 ? 0 : local.iter_1142.tape_ptr + 1
        : local.iter_1142.tape_ptr)

    code_ptr = 1 + (
      local.curr_1143.code == "["
        ? local.iter_1142.tape[local.iter_1142.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1142.code_ptr)] : local.iter_1142.code_ptr :
      local.curr_1143.code == "]"
        ? local.iter_1142.tape[local.iter_1142.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1142.code_ptr)] : local.iter_1142.code_ptr
        : local.iter_1142.code_ptr)

    steps_taken = 1 + local.iter_1142.steps_taken
  }
}

locals {
  end_of_code_1144 = try(local.iter_1143.code_ptr >= length(var.code), true)

  curr_1144 = local.end_of_code_1144 ? null : {
    code = substr(var.code, local.iter_1143.code_ptr, 1)
    input = substr(var.code, local.iter_1143.code_ptr, 1) == "," ? substr(local.iter_1143.input, 0, 1) : null
  }

  iter_1144 = local.end_of_code_1144 ? local.iter_1143 : {
    input = (local.curr_1144.code == ","
      ? substr(local.iter_1143.input, 1, -1)
      : local.iter_1143.input)

    output = (local.curr_1144.code == "."
      ? "${local.iter_1143.output}${jsondecode(format("\"\\u%04x\"", local.iter_1143.tape[local.iter_1143.tape_ptr]))}"
      : local.iter_1143.output)
    
    tape = (
      local.curr_1144.code == "+"
        ? [for i, b in local.iter_1143.tape : (i == local.iter_1143.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1144.code == "-"
        ? [for i, b in local.iter_1143.tape : (i == local.iter_1143.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1144.code == ","
        ? [for i, b in local.iter_1143.tape : (i == local.iter_1143.tape_ptr ? local.ascii_lookup[local.curr_1144.input] : b)]
        : local.iter_1143.tape)

    tape_ptr = (
      local.curr_1144.code == "<"
        ? local.iter_1143.tape_ptr == 0 ? length(local.iter_1143.tape) - 1 : local.iter_1143.tape_ptr - 1 :
      local.curr_1144.code == ">"
        ? local.iter_1143.tape_ptr == length(local.iter_1143.tape) - 1 ? 0 : local.iter_1143.tape_ptr + 1
        : local.iter_1143.tape_ptr)

    code_ptr = 1 + (
      local.curr_1144.code == "["
        ? local.iter_1143.tape[local.iter_1143.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1143.code_ptr)] : local.iter_1143.code_ptr :
      local.curr_1144.code == "]"
        ? local.iter_1143.tape[local.iter_1143.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1143.code_ptr)] : local.iter_1143.code_ptr
        : local.iter_1143.code_ptr)

    steps_taken = 1 + local.iter_1143.steps_taken
  }
}

locals {
  end_of_code_1145 = try(local.iter_1144.code_ptr >= length(var.code), true)

  curr_1145 = local.end_of_code_1145 ? null : {
    code = substr(var.code, local.iter_1144.code_ptr, 1)
    input = substr(var.code, local.iter_1144.code_ptr, 1) == "," ? substr(local.iter_1144.input, 0, 1) : null
  }

  iter_1145 = local.end_of_code_1145 ? local.iter_1144 : {
    input = (local.curr_1145.code == ","
      ? substr(local.iter_1144.input, 1, -1)
      : local.iter_1144.input)

    output = (local.curr_1145.code == "."
      ? "${local.iter_1144.output}${jsondecode(format("\"\\u%04x\"", local.iter_1144.tape[local.iter_1144.tape_ptr]))}"
      : local.iter_1144.output)
    
    tape = (
      local.curr_1145.code == "+"
        ? [for i, b in local.iter_1144.tape : (i == local.iter_1144.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1145.code == "-"
        ? [for i, b in local.iter_1144.tape : (i == local.iter_1144.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1145.code == ","
        ? [for i, b in local.iter_1144.tape : (i == local.iter_1144.tape_ptr ? local.ascii_lookup[local.curr_1145.input] : b)]
        : local.iter_1144.tape)

    tape_ptr = (
      local.curr_1145.code == "<"
        ? local.iter_1144.tape_ptr == 0 ? length(local.iter_1144.tape) - 1 : local.iter_1144.tape_ptr - 1 :
      local.curr_1145.code == ">"
        ? local.iter_1144.tape_ptr == length(local.iter_1144.tape) - 1 ? 0 : local.iter_1144.tape_ptr + 1
        : local.iter_1144.tape_ptr)

    code_ptr = 1 + (
      local.curr_1145.code == "["
        ? local.iter_1144.tape[local.iter_1144.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1144.code_ptr)] : local.iter_1144.code_ptr :
      local.curr_1145.code == "]"
        ? local.iter_1144.tape[local.iter_1144.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1144.code_ptr)] : local.iter_1144.code_ptr
        : local.iter_1144.code_ptr)

    steps_taken = 1 + local.iter_1144.steps_taken
  }
}

locals {
  end_of_code_1146 = try(local.iter_1145.code_ptr >= length(var.code), true)

  curr_1146 = local.end_of_code_1146 ? null : {
    code = substr(var.code, local.iter_1145.code_ptr, 1)
    input = substr(var.code, local.iter_1145.code_ptr, 1) == "," ? substr(local.iter_1145.input, 0, 1) : null
  }

  iter_1146 = local.end_of_code_1146 ? local.iter_1145 : {
    input = (local.curr_1146.code == ","
      ? substr(local.iter_1145.input, 1, -1)
      : local.iter_1145.input)

    output = (local.curr_1146.code == "."
      ? "${local.iter_1145.output}${jsondecode(format("\"\\u%04x\"", local.iter_1145.tape[local.iter_1145.tape_ptr]))}"
      : local.iter_1145.output)
    
    tape = (
      local.curr_1146.code == "+"
        ? [for i, b in local.iter_1145.tape : (i == local.iter_1145.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1146.code == "-"
        ? [for i, b in local.iter_1145.tape : (i == local.iter_1145.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1146.code == ","
        ? [for i, b in local.iter_1145.tape : (i == local.iter_1145.tape_ptr ? local.ascii_lookup[local.curr_1146.input] : b)]
        : local.iter_1145.tape)

    tape_ptr = (
      local.curr_1146.code == "<"
        ? local.iter_1145.tape_ptr == 0 ? length(local.iter_1145.tape) - 1 : local.iter_1145.tape_ptr - 1 :
      local.curr_1146.code == ">"
        ? local.iter_1145.tape_ptr == length(local.iter_1145.tape) - 1 ? 0 : local.iter_1145.tape_ptr + 1
        : local.iter_1145.tape_ptr)

    code_ptr = 1 + (
      local.curr_1146.code == "["
        ? local.iter_1145.tape[local.iter_1145.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1145.code_ptr)] : local.iter_1145.code_ptr :
      local.curr_1146.code == "]"
        ? local.iter_1145.tape[local.iter_1145.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1145.code_ptr)] : local.iter_1145.code_ptr
        : local.iter_1145.code_ptr)

    steps_taken = 1 + local.iter_1145.steps_taken
  }
}

locals {
  end_of_code_1147 = try(local.iter_1146.code_ptr >= length(var.code), true)

  curr_1147 = local.end_of_code_1147 ? null : {
    code = substr(var.code, local.iter_1146.code_ptr, 1)
    input = substr(var.code, local.iter_1146.code_ptr, 1) == "," ? substr(local.iter_1146.input, 0, 1) : null
  }

  iter_1147 = local.end_of_code_1147 ? local.iter_1146 : {
    input = (local.curr_1147.code == ","
      ? substr(local.iter_1146.input, 1, -1)
      : local.iter_1146.input)

    output = (local.curr_1147.code == "."
      ? "${local.iter_1146.output}${jsondecode(format("\"\\u%04x\"", local.iter_1146.tape[local.iter_1146.tape_ptr]))}"
      : local.iter_1146.output)
    
    tape = (
      local.curr_1147.code == "+"
        ? [for i, b in local.iter_1146.tape : (i == local.iter_1146.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1147.code == "-"
        ? [for i, b in local.iter_1146.tape : (i == local.iter_1146.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1147.code == ","
        ? [for i, b in local.iter_1146.tape : (i == local.iter_1146.tape_ptr ? local.ascii_lookup[local.curr_1147.input] : b)]
        : local.iter_1146.tape)

    tape_ptr = (
      local.curr_1147.code == "<"
        ? local.iter_1146.tape_ptr == 0 ? length(local.iter_1146.tape) - 1 : local.iter_1146.tape_ptr - 1 :
      local.curr_1147.code == ">"
        ? local.iter_1146.tape_ptr == length(local.iter_1146.tape) - 1 ? 0 : local.iter_1146.tape_ptr + 1
        : local.iter_1146.tape_ptr)

    code_ptr = 1 + (
      local.curr_1147.code == "["
        ? local.iter_1146.tape[local.iter_1146.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1146.code_ptr)] : local.iter_1146.code_ptr :
      local.curr_1147.code == "]"
        ? local.iter_1146.tape[local.iter_1146.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1146.code_ptr)] : local.iter_1146.code_ptr
        : local.iter_1146.code_ptr)

    steps_taken = 1 + local.iter_1146.steps_taken
  }
}

locals {
  end_of_code_1148 = try(local.iter_1147.code_ptr >= length(var.code), true)

  curr_1148 = local.end_of_code_1148 ? null : {
    code = substr(var.code, local.iter_1147.code_ptr, 1)
    input = substr(var.code, local.iter_1147.code_ptr, 1) == "," ? substr(local.iter_1147.input, 0, 1) : null
  }

  iter_1148 = local.end_of_code_1148 ? local.iter_1147 : {
    input = (local.curr_1148.code == ","
      ? substr(local.iter_1147.input, 1, -1)
      : local.iter_1147.input)

    output = (local.curr_1148.code == "."
      ? "${local.iter_1147.output}${jsondecode(format("\"\\u%04x\"", local.iter_1147.tape[local.iter_1147.tape_ptr]))}"
      : local.iter_1147.output)
    
    tape = (
      local.curr_1148.code == "+"
        ? [for i, b in local.iter_1147.tape : (i == local.iter_1147.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1148.code == "-"
        ? [for i, b in local.iter_1147.tape : (i == local.iter_1147.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1148.code == ","
        ? [for i, b in local.iter_1147.tape : (i == local.iter_1147.tape_ptr ? local.ascii_lookup[local.curr_1148.input] : b)]
        : local.iter_1147.tape)

    tape_ptr = (
      local.curr_1148.code == "<"
        ? local.iter_1147.tape_ptr == 0 ? length(local.iter_1147.tape) - 1 : local.iter_1147.tape_ptr - 1 :
      local.curr_1148.code == ">"
        ? local.iter_1147.tape_ptr == length(local.iter_1147.tape) - 1 ? 0 : local.iter_1147.tape_ptr + 1
        : local.iter_1147.tape_ptr)

    code_ptr = 1 + (
      local.curr_1148.code == "["
        ? local.iter_1147.tape[local.iter_1147.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1147.code_ptr)] : local.iter_1147.code_ptr :
      local.curr_1148.code == "]"
        ? local.iter_1147.tape[local.iter_1147.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1147.code_ptr)] : local.iter_1147.code_ptr
        : local.iter_1147.code_ptr)

    steps_taken = 1 + local.iter_1147.steps_taken
  }
}

locals {
  end_of_code_1149 = try(local.iter_1148.code_ptr >= length(var.code), true)

  curr_1149 = local.end_of_code_1149 ? null : {
    code = substr(var.code, local.iter_1148.code_ptr, 1)
    input = substr(var.code, local.iter_1148.code_ptr, 1) == "," ? substr(local.iter_1148.input, 0, 1) : null
  }

  iter_1149 = local.end_of_code_1149 ? local.iter_1148 : {
    input = (local.curr_1149.code == ","
      ? substr(local.iter_1148.input, 1, -1)
      : local.iter_1148.input)

    output = (local.curr_1149.code == "."
      ? "${local.iter_1148.output}${jsondecode(format("\"\\u%04x\"", local.iter_1148.tape[local.iter_1148.tape_ptr]))}"
      : local.iter_1148.output)
    
    tape = (
      local.curr_1149.code == "+"
        ? [for i, b in local.iter_1148.tape : (i == local.iter_1148.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1149.code == "-"
        ? [for i, b in local.iter_1148.tape : (i == local.iter_1148.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1149.code == ","
        ? [for i, b in local.iter_1148.tape : (i == local.iter_1148.tape_ptr ? local.ascii_lookup[local.curr_1149.input] : b)]
        : local.iter_1148.tape)

    tape_ptr = (
      local.curr_1149.code == "<"
        ? local.iter_1148.tape_ptr == 0 ? length(local.iter_1148.tape) - 1 : local.iter_1148.tape_ptr - 1 :
      local.curr_1149.code == ">"
        ? local.iter_1148.tape_ptr == length(local.iter_1148.tape) - 1 ? 0 : local.iter_1148.tape_ptr + 1
        : local.iter_1148.tape_ptr)

    code_ptr = 1 + (
      local.curr_1149.code == "["
        ? local.iter_1148.tape[local.iter_1148.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1148.code_ptr)] : local.iter_1148.code_ptr :
      local.curr_1149.code == "]"
        ? local.iter_1148.tape[local.iter_1148.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1148.code_ptr)] : local.iter_1148.code_ptr
        : local.iter_1148.code_ptr)

    steps_taken = 1 + local.iter_1148.steps_taken
  }
}

locals {
  end_of_code_1150 = try(local.iter_1149.code_ptr >= length(var.code), true)

  curr_1150 = local.end_of_code_1150 ? null : {
    code = substr(var.code, local.iter_1149.code_ptr, 1)
    input = substr(var.code, local.iter_1149.code_ptr, 1) == "," ? substr(local.iter_1149.input, 0, 1) : null
  }

  iter_1150 = local.end_of_code_1150 ? local.iter_1149 : {
    input = (local.curr_1150.code == ","
      ? substr(local.iter_1149.input, 1, -1)
      : local.iter_1149.input)

    output = (local.curr_1150.code == "."
      ? "${local.iter_1149.output}${jsondecode(format("\"\\u%04x\"", local.iter_1149.tape[local.iter_1149.tape_ptr]))}"
      : local.iter_1149.output)
    
    tape = (
      local.curr_1150.code == "+"
        ? [for i, b in local.iter_1149.tape : (i == local.iter_1149.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1150.code == "-"
        ? [for i, b in local.iter_1149.tape : (i == local.iter_1149.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1150.code == ","
        ? [for i, b in local.iter_1149.tape : (i == local.iter_1149.tape_ptr ? local.ascii_lookup[local.curr_1150.input] : b)]
        : local.iter_1149.tape)

    tape_ptr = (
      local.curr_1150.code == "<"
        ? local.iter_1149.tape_ptr == 0 ? length(local.iter_1149.tape) - 1 : local.iter_1149.tape_ptr - 1 :
      local.curr_1150.code == ">"
        ? local.iter_1149.tape_ptr == length(local.iter_1149.tape) - 1 ? 0 : local.iter_1149.tape_ptr + 1
        : local.iter_1149.tape_ptr)

    code_ptr = 1 + (
      local.curr_1150.code == "["
        ? local.iter_1149.tape[local.iter_1149.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1149.code_ptr)] : local.iter_1149.code_ptr :
      local.curr_1150.code == "]"
        ? local.iter_1149.tape[local.iter_1149.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1149.code_ptr)] : local.iter_1149.code_ptr
        : local.iter_1149.code_ptr)

    steps_taken = 1 + local.iter_1149.steps_taken
  }
}

locals {
  end_of_code_1151 = try(local.iter_1150.code_ptr >= length(var.code), true)

  curr_1151 = local.end_of_code_1151 ? null : {
    code = substr(var.code, local.iter_1150.code_ptr, 1)
    input = substr(var.code, local.iter_1150.code_ptr, 1) == "," ? substr(local.iter_1150.input, 0, 1) : null
  }

  iter_1151 = local.end_of_code_1151 ? local.iter_1150 : {
    input = (local.curr_1151.code == ","
      ? substr(local.iter_1150.input, 1, -1)
      : local.iter_1150.input)

    output = (local.curr_1151.code == "."
      ? "${local.iter_1150.output}${jsondecode(format("\"\\u%04x\"", local.iter_1150.tape[local.iter_1150.tape_ptr]))}"
      : local.iter_1150.output)
    
    tape = (
      local.curr_1151.code == "+"
        ? [for i, b in local.iter_1150.tape : (i == local.iter_1150.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1151.code == "-"
        ? [for i, b in local.iter_1150.tape : (i == local.iter_1150.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1151.code == ","
        ? [for i, b in local.iter_1150.tape : (i == local.iter_1150.tape_ptr ? local.ascii_lookup[local.curr_1151.input] : b)]
        : local.iter_1150.tape)

    tape_ptr = (
      local.curr_1151.code == "<"
        ? local.iter_1150.tape_ptr == 0 ? length(local.iter_1150.tape) - 1 : local.iter_1150.tape_ptr - 1 :
      local.curr_1151.code == ">"
        ? local.iter_1150.tape_ptr == length(local.iter_1150.tape) - 1 ? 0 : local.iter_1150.tape_ptr + 1
        : local.iter_1150.tape_ptr)

    code_ptr = 1 + (
      local.curr_1151.code == "["
        ? local.iter_1150.tape[local.iter_1150.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1150.code_ptr)] : local.iter_1150.code_ptr :
      local.curr_1151.code == "]"
        ? local.iter_1150.tape[local.iter_1150.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1150.code_ptr)] : local.iter_1150.code_ptr
        : local.iter_1150.code_ptr)

    steps_taken = 1 + local.iter_1150.steps_taken
  }
}

locals {
  end_of_code_1152 = try(local.iter_1151.code_ptr >= length(var.code), true)

  curr_1152 = local.end_of_code_1152 ? null : {
    code = substr(var.code, local.iter_1151.code_ptr, 1)
    input = substr(var.code, local.iter_1151.code_ptr, 1) == "," ? substr(local.iter_1151.input, 0, 1) : null
  }

  iter_1152 = local.end_of_code_1152 ? local.iter_1151 : {
    input = (local.curr_1152.code == ","
      ? substr(local.iter_1151.input, 1, -1)
      : local.iter_1151.input)

    output = (local.curr_1152.code == "."
      ? "${local.iter_1151.output}${jsondecode(format("\"\\u%04x\"", local.iter_1151.tape[local.iter_1151.tape_ptr]))}"
      : local.iter_1151.output)
    
    tape = (
      local.curr_1152.code == "+"
        ? [for i, b in local.iter_1151.tape : (i == local.iter_1151.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1152.code == "-"
        ? [for i, b in local.iter_1151.tape : (i == local.iter_1151.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1152.code == ","
        ? [for i, b in local.iter_1151.tape : (i == local.iter_1151.tape_ptr ? local.ascii_lookup[local.curr_1152.input] : b)]
        : local.iter_1151.tape)

    tape_ptr = (
      local.curr_1152.code == "<"
        ? local.iter_1151.tape_ptr == 0 ? length(local.iter_1151.tape) - 1 : local.iter_1151.tape_ptr - 1 :
      local.curr_1152.code == ">"
        ? local.iter_1151.tape_ptr == length(local.iter_1151.tape) - 1 ? 0 : local.iter_1151.tape_ptr + 1
        : local.iter_1151.tape_ptr)

    code_ptr = 1 + (
      local.curr_1152.code == "["
        ? local.iter_1151.tape[local.iter_1151.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1151.code_ptr)] : local.iter_1151.code_ptr :
      local.curr_1152.code == "]"
        ? local.iter_1151.tape[local.iter_1151.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1151.code_ptr)] : local.iter_1151.code_ptr
        : local.iter_1151.code_ptr)

    steps_taken = 1 + local.iter_1151.steps_taken
  }
}

locals {
  end_of_code_1153 = try(local.iter_1152.code_ptr >= length(var.code), true)

  curr_1153 = local.end_of_code_1153 ? null : {
    code = substr(var.code, local.iter_1152.code_ptr, 1)
    input = substr(var.code, local.iter_1152.code_ptr, 1) == "," ? substr(local.iter_1152.input, 0, 1) : null
  }

  iter_1153 = local.end_of_code_1153 ? local.iter_1152 : {
    input = (local.curr_1153.code == ","
      ? substr(local.iter_1152.input, 1, -1)
      : local.iter_1152.input)

    output = (local.curr_1153.code == "."
      ? "${local.iter_1152.output}${jsondecode(format("\"\\u%04x\"", local.iter_1152.tape[local.iter_1152.tape_ptr]))}"
      : local.iter_1152.output)
    
    tape = (
      local.curr_1153.code == "+"
        ? [for i, b in local.iter_1152.tape : (i == local.iter_1152.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1153.code == "-"
        ? [for i, b in local.iter_1152.tape : (i == local.iter_1152.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1153.code == ","
        ? [for i, b in local.iter_1152.tape : (i == local.iter_1152.tape_ptr ? local.ascii_lookup[local.curr_1153.input] : b)]
        : local.iter_1152.tape)

    tape_ptr = (
      local.curr_1153.code == "<"
        ? local.iter_1152.tape_ptr == 0 ? length(local.iter_1152.tape) - 1 : local.iter_1152.tape_ptr - 1 :
      local.curr_1153.code == ">"
        ? local.iter_1152.tape_ptr == length(local.iter_1152.tape) - 1 ? 0 : local.iter_1152.tape_ptr + 1
        : local.iter_1152.tape_ptr)

    code_ptr = 1 + (
      local.curr_1153.code == "["
        ? local.iter_1152.tape[local.iter_1152.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1152.code_ptr)] : local.iter_1152.code_ptr :
      local.curr_1153.code == "]"
        ? local.iter_1152.tape[local.iter_1152.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1152.code_ptr)] : local.iter_1152.code_ptr
        : local.iter_1152.code_ptr)

    steps_taken = 1 + local.iter_1152.steps_taken
  }
}

locals {
  end_of_code_1154 = try(local.iter_1153.code_ptr >= length(var.code), true)

  curr_1154 = local.end_of_code_1154 ? null : {
    code = substr(var.code, local.iter_1153.code_ptr, 1)
    input = substr(var.code, local.iter_1153.code_ptr, 1) == "," ? substr(local.iter_1153.input, 0, 1) : null
  }

  iter_1154 = local.end_of_code_1154 ? local.iter_1153 : {
    input = (local.curr_1154.code == ","
      ? substr(local.iter_1153.input, 1, -1)
      : local.iter_1153.input)

    output = (local.curr_1154.code == "."
      ? "${local.iter_1153.output}${jsondecode(format("\"\\u%04x\"", local.iter_1153.tape[local.iter_1153.tape_ptr]))}"
      : local.iter_1153.output)
    
    tape = (
      local.curr_1154.code == "+"
        ? [for i, b in local.iter_1153.tape : (i == local.iter_1153.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1154.code == "-"
        ? [for i, b in local.iter_1153.tape : (i == local.iter_1153.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1154.code == ","
        ? [for i, b in local.iter_1153.tape : (i == local.iter_1153.tape_ptr ? local.ascii_lookup[local.curr_1154.input] : b)]
        : local.iter_1153.tape)

    tape_ptr = (
      local.curr_1154.code == "<"
        ? local.iter_1153.tape_ptr == 0 ? length(local.iter_1153.tape) - 1 : local.iter_1153.tape_ptr - 1 :
      local.curr_1154.code == ">"
        ? local.iter_1153.tape_ptr == length(local.iter_1153.tape) - 1 ? 0 : local.iter_1153.tape_ptr + 1
        : local.iter_1153.tape_ptr)

    code_ptr = 1 + (
      local.curr_1154.code == "["
        ? local.iter_1153.tape[local.iter_1153.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1153.code_ptr)] : local.iter_1153.code_ptr :
      local.curr_1154.code == "]"
        ? local.iter_1153.tape[local.iter_1153.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1153.code_ptr)] : local.iter_1153.code_ptr
        : local.iter_1153.code_ptr)

    steps_taken = 1 + local.iter_1153.steps_taken
  }
}

locals {
  end_of_code_1155 = try(local.iter_1154.code_ptr >= length(var.code), true)

  curr_1155 = local.end_of_code_1155 ? null : {
    code = substr(var.code, local.iter_1154.code_ptr, 1)
    input = substr(var.code, local.iter_1154.code_ptr, 1) == "," ? substr(local.iter_1154.input, 0, 1) : null
  }

  iter_1155 = local.end_of_code_1155 ? local.iter_1154 : {
    input = (local.curr_1155.code == ","
      ? substr(local.iter_1154.input, 1, -1)
      : local.iter_1154.input)

    output = (local.curr_1155.code == "."
      ? "${local.iter_1154.output}${jsondecode(format("\"\\u%04x\"", local.iter_1154.tape[local.iter_1154.tape_ptr]))}"
      : local.iter_1154.output)
    
    tape = (
      local.curr_1155.code == "+"
        ? [for i, b in local.iter_1154.tape : (i == local.iter_1154.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1155.code == "-"
        ? [for i, b in local.iter_1154.tape : (i == local.iter_1154.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1155.code == ","
        ? [for i, b in local.iter_1154.tape : (i == local.iter_1154.tape_ptr ? local.ascii_lookup[local.curr_1155.input] : b)]
        : local.iter_1154.tape)

    tape_ptr = (
      local.curr_1155.code == "<"
        ? local.iter_1154.tape_ptr == 0 ? length(local.iter_1154.tape) - 1 : local.iter_1154.tape_ptr - 1 :
      local.curr_1155.code == ">"
        ? local.iter_1154.tape_ptr == length(local.iter_1154.tape) - 1 ? 0 : local.iter_1154.tape_ptr + 1
        : local.iter_1154.tape_ptr)

    code_ptr = 1 + (
      local.curr_1155.code == "["
        ? local.iter_1154.tape[local.iter_1154.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1154.code_ptr)] : local.iter_1154.code_ptr :
      local.curr_1155.code == "]"
        ? local.iter_1154.tape[local.iter_1154.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1154.code_ptr)] : local.iter_1154.code_ptr
        : local.iter_1154.code_ptr)

    steps_taken = 1 + local.iter_1154.steps_taken
  }
}

locals {
  end_of_code_1156 = try(local.iter_1155.code_ptr >= length(var.code), true)

  curr_1156 = local.end_of_code_1156 ? null : {
    code = substr(var.code, local.iter_1155.code_ptr, 1)
    input = substr(var.code, local.iter_1155.code_ptr, 1) == "," ? substr(local.iter_1155.input, 0, 1) : null
  }

  iter_1156 = local.end_of_code_1156 ? local.iter_1155 : {
    input = (local.curr_1156.code == ","
      ? substr(local.iter_1155.input, 1, -1)
      : local.iter_1155.input)

    output = (local.curr_1156.code == "."
      ? "${local.iter_1155.output}${jsondecode(format("\"\\u%04x\"", local.iter_1155.tape[local.iter_1155.tape_ptr]))}"
      : local.iter_1155.output)
    
    tape = (
      local.curr_1156.code == "+"
        ? [for i, b in local.iter_1155.tape : (i == local.iter_1155.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1156.code == "-"
        ? [for i, b in local.iter_1155.tape : (i == local.iter_1155.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1156.code == ","
        ? [for i, b in local.iter_1155.tape : (i == local.iter_1155.tape_ptr ? local.ascii_lookup[local.curr_1156.input] : b)]
        : local.iter_1155.tape)

    tape_ptr = (
      local.curr_1156.code == "<"
        ? local.iter_1155.tape_ptr == 0 ? length(local.iter_1155.tape) - 1 : local.iter_1155.tape_ptr - 1 :
      local.curr_1156.code == ">"
        ? local.iter_1155.tape_ptr == length(local.iter_1155.tape) - 1 ? 0 : local.iter_1155.tape_ptr + 1
        : local.iter_1155.tape_ptr)

    code_ptr = 1 + (
      local.curr_1156.code == "["
        ? local.iter_1155.tape[local.iter_1155.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1155.code_ptr)] : local.iter_1155.code_ptr :
      local.curr_1156.code == "]"
        ? local.iter_1155.tape[local.iter_1155.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1155.code_ptr)] : local.iter_1155.code_ptr
        : local.iter_1155.code_ptr)

    steps_taken = 1 + local.iter_1155.steps_taken
  }
}

locals {
  end_of_code_1157 = try(local.iter_1156.code_ptr >= length(var.code), true)

  curr_1157 = local.end_of_code_1157 ? null : {
    code = substr(var.code, local.iter_1156.code_ptr, 1)
    input = substr(var.code, local.iter_1156.code_ptr, 1) == "," ? substr(local.iter_1156.input, 0, 1) : null
  }

  iter_1157 = local.end_of_code_1157 ? local.iter_1156 : {
    input = (local.curr_1157.code == ","
      ? substr(local.iter_1156.input, 1, -1)
      : local.iter_1156.input)

    output = (local.curr_1157.code == "."
      ? "${local.iter_1156.output}${jsondecode(format("\"\\u%04x\"", local.iter_1156.tape[local.iter_1156.tape_ptr]))}"
      : local.iter_1156.output)
    
    tape = (
      local.curr_1157.code == "+"
        ? [for i, b in local.iter_1156.tape : (i == local.iter_1156.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1157.code == "-"
        ? [for i, b in local.iter_1156.tape : (i == local.iter_1156.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1157.code == ","
        ? [for i, b in local.iter_1156.tape : (i == local.iter_1156.tape_ptr ? local.ascii_lookup[local.curr_1157.input] : b)]
        : local.iter_1156.tape)

    tape_ptr = (
      local.curr_1157.code == "<"
        ? local.iter_1156.tape_ptr == 0 ? length(local.iter_1156.tape) - 1 : local.iter_1156.tape_ptr - 1 :
      local.curr_1157.code == ">"
        ? local.iter_1156.tape_ptr == length(local.iter_1156.tape) - 1 ? 0 : local.iter_1156.tape_ptr + 1
        : local.iter_1156.tape_ptr)

    code_ptr = 1 + (
      local.curr_1157.code == "["
        ? local.iter_1156.tape[local.iter_1156.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1156.code_ptr)] : local.iter_1156.code_ptr :
      local.curr_1157.code == "]"
        ? local.iter_1156.tape[local.iter_1156.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1156.code_ptr)] : local.iter_1156.code_ptr
        : local.iter_1156.code_ptr)

    steps_taken = 1 + local.iter_1156.steps_taken
  }
}

locals {
  end_of_code_1158 = try(local.iter_1157.code_ptr >= length(var.code), true)

  curr_1158 = local.end_of_code_1158 ? null : {
    code = substr(var.code, local.iter_1157.code_ptr, 1)
    input = substr(var.code, local.iter_1157.code_ptr, 1) == "," ? substr(local.iter_1157.input, 0, 1) : null
  }

  iter_1158 = local.end_of_code_1158 ? local.iter_1157 : {
    input = (local.curr_1158.code == ","
      ? substr(local.iter_1157.input, 1, -1)
      : local.iter_1157.input)

    output = (local.curr_1158.code == "."
      ? "${local.iter_1157.output}${jsondecode(format("\"\\u%04x\"", local.iter_1157.tape[local.iter_1157.tape_ptr]))}"
      : local.iter_1157.output)
    
    tape = (
      local.curr_1158.code == "+"
        ? [for i, b in local.iter_1157.tape : (i == local.iter_1157.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1158.code == "-"
        ? [for i, b in local.iter_1157.tape : (i == local.iter_1157.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1158.code == ","
        ? [for i, b in local.iter_1157.tape : (i == local.iter_1157.tape_ptr ? local.ascii_lookup[local.curr_1158.input] : b)]
        : local.iter_1157.tape)

    tape_ptr = (
      local.curr_1158.code == "<"
        ? local.iter_1157.tape_ptr == 0 ? length(local.iter_1157.tape) - 1 : local.iter_1157.tape_ptr - 1 :
      local.curr_1158.code == ">"
        ? local.iter_1157.tape_ptr == length(local.iter_1157.tape) - 1 ? 0 : local.iter_1157.tape_ptr + 1
        : local.iter_1157.tape_ptr)

    code_ptr = 1 + (
      local.curr_1158.code == "["
        ? local.iter_1157.tape[local.iter_1157.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1157.code_ptr)] : local.iter_1157.code_ptr :
      local.curr_1158.code == "]"
        ? local.iter_1157.tape[local.iter_1157.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1157.code_ptr)] : local.iter_1157.code_ptr
        : local.iter_1157.code_ptr)

    steps_taken = 1 + local.iter_1157.steps_taken
  }
}

locals {
  end_of_code_1159 = try(local.iter_1158.code_ptr >= length(var.code), true)

  curr_1159 = local.end_of_code_1159 ? null : {
    code = substr(var.code, local.iter_1158.code_ptr, 1)
    input = substr(var.code, local.iter_1158.code_ptr, 1) == "," ? substr(local.iter_1158.input, 0, 1) : null
  }

  iter_1159 = local.end_of_code_1159 ? local.iter_1158 : {
    input = (local.curr_1159.code == ","
      ? substr(local.iter_1158.input, 1, -1)
      : local.iter_1158.input)

    output = (local.curr_1159.code == "."
      ? "${local.iter_1158.output}${jsondecode(format("\"\\u%04x\"", local.iter_1158.tape[local.iter_1158.tape_ptr]))}"
      : local.iter_1158.output)
    
    tape = (
      local.curr_1159.code == "+"
        ? [for i, b in local.iter_1158.tape : (i == local.iter_1158.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1159.code == "-"
        ? [for i, b in local.iter_1158.tape : (i == local.iter_1158.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1159.code == ","
        ? [for i, b in local.iter_1158.tape : (i == local.iter_1158.tape_ptr ? local.ascii_lookup[local.curr_1159.input] : b)]
        : local.iter_1158.tape)

    tape_ptr = (
      local.curr_1159.code == "<"
        ? local.iter_1158.tape_ptr == 0 ? length(local.iter_1158.tape) - 1 : local.iter_1158.tape_ptr - 1 :
      local.curr_1159.code == ">"
        ? local.iter_1158.tape_ptr == length(local.iter_1158.tape) - 1 ? 0 : local.iter_1158.tape_ptr + 1
        : local.iter_1158.tape_ptr)

    code_ptr = 1 + (
      local.curr_1159.code == "["
        ? local.iter_1158.tape[local.iter_1158.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1158.code_ptr)] : local.iter_1158.code_ptr :
      local.curr_1159.code == "]"
        ? local.iter_1158.tape[local.iter_1158.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1158.code_ptr)] : local.iter_1158.code_ptr
        : local.iter_1158.code_ptr)

    steps_taken = 1 + local.iter_1158.steps_taken
  }
}

locals {
  end_of_code_1160 = try(local.iter_1159.code_ptr >= length(var.code), true)

  curr_1160 = local.end_of_code_1160 ? null : {
    code = substr(var.code, local.iter_1159.code_ptr, 1)
    input = substr(var.code, local.iter_1159.code_ptr, 1) == "," ? substr(local.iter_1159.input, 0, 1) : null
  }

  iter_1160 = local.end_of_code_1160 ? local.iter_1159 : {
    input = (local.curr_1160.code == ","
      ? substr(local.iter_1159.input, 1, -1)
      : local.iter_1159.input)

    output = (local.curr_1160.code == "."
      ? "${local.iter_1159.output}${jsondecode(format("\"\\u%04x\"", local.iter_1159.tape[local.iter_1159.tape_ptr]))}"
      : local.iter_1159.output)
    
    tape = (
      local.curr_1160.code == "+"
        ? [for i, b in local.iter_1159.tape : (i == local.iter_1159.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1160.code == "-"
        ? [for i, b in local.iter_1159.tape : (i == local.iter_1159.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1160.code == ","
        ? [for i, b in local.iter_1159.tape : (i == local.iter_1159.tape_ptr ? local.ascii_lookup[local.curr_1160.input] : b)]
        : local.iter_1159.tape)

    tape_ptr = (
      local.curr_1160.code == "<"
        ? local.iter_1159.tape_ptr == 0 ? length(local.iter_1159.tape) - 1 : local.iter_1159.tape_ptr - 1 :
      local.curr_1160.code == ">"
        ? local.iter_1159.tape_ptr == length(local.iter_1159.tape) - 1 ? 0 : local.iter_1159.tape_ptr + 1
        : local.iter_1159.tape_ptr)

    code_ptr = 1 + (
      local.curr_1160.code == "["
        ? local.iter_1159.tape[local.iter_1159.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1159.code_ptr)] : local.iter_1159.code_ptr :
      local.curr_1160.code == "]"
        ? local.iter_1159.tape[local.iter_1159.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1159.code_ptr)] : local.iter_1159.code_ptr
        : local.iter_1159.code_ptr)

    steps_taken = 1 + local.iter_1159.steps_taken
  }
}

locals {
  end_of_code_1161 = try(local.iter_1160.code_ptr >= length(var.code), true)

  curr_1161 = local.end_of_code_1161 ? null : {
    code = substr(var.code, local.iter_1160.code_ptr, 1)
    input = substr(var.code, local.iter_1160.code_ptr, 1) == "," ? substr(local.iter_1160.input, 0, 1) : null
  }

  iter_1161 = local.end_of_code_1161 ? local.iter_1160 : {
    input = (local.curr_1161.code == ","
      ? substr(local.iter_1160.input, 1, -1)
      : local.iter_1160.input)

    output = (local.curr_1161.code == "."
      ? "${local.iter_1160.output}${jsondecode(format("\"\\u%04x\"", local.iter_1160.tape[local.iter_1160.tape_ptr]))}"
      : local.iter_1160.output)
    
    tape = (
      local.curr_1161.code == "+"
        ? [for i, b in local.iter_1160.tape : (i == local.iter_1160.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1161.code == "-"
        ? [for i, b in local.iter_1160.tape : (i == local.iter_1160.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1161.code == ","
        ? [for i, b in local.iter_1160.tape : (i == local.iter_1160.tape_ptr ? local.ascii_lookup[local.curr_1161.input] : b)]
        : local.iter_1160.tape)

    tape_ptr = (
      local.curr_1161.code == "<"
        ? local.iter_1160.tape_ptr == 0 ? length(local.iter_1160.tape) - 1 : local.iter_1160.tape_ptr - 1 :
      local.curr_1161.code == ">"
        ? local.iter_1160.tape_ptr == length(local.iter_1160.tape) - 1 ? 0 : local.iter_1160.tape_ptr + 1
        : local.iter_1160.tape_ptr)

    code_ptr = 1 + (
      local.curr_1161.code == "["
        ? local.iter_1160.tape[local.iter_1160.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1160.code_ptr)] : local.iter_1160.code_ptr :
      local.curr_1161.code == "]"
        ? local.iter_1160.tape[local.iter_1160.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1160.code_ptr)] : local.iter_1160.code_ptr
        : local.iter_1160.code_ptr)

    steps_taken = 1 + local.iter_1160.steps_taken
  }
}

locals {
  end_of_code_1162 = try(local.iter_1161.code_ptr >= length(var.code), true)

  curr_1162 = local.end_of_code_1162 ? null : {
    code = substr(var.code, local.iter_1161.code_ptr, 1)
    input = substr(var.code, local.iter_1161.code_ptr, 1) == "," ? substr(local.iter_1161.input, 0, 1) : null
  }

  iter_1162 = local.end_of_code_1162 ? local.iter_1161 : {
    input = (local.curr_1162.code == ","
      ? substr(local.iter_1161.input, 1, -1)
      : local.iter_1161.input)

    output = (local.curr_1162.code == "."
      ? "${local.iter_1161.output}${jsondecode(format("\"\\u%04x\"", local.iter_1161.tape[local.iter_1161.tape_ptr]))}"
      : local.iter_1161.output)
    
    tape = (
      local.curr_1162.code == "+"
        ? [for i, b in local.iter_1161.tape : (i == local.iter_1161.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1162.code == "-"
        ? [for i, b in local.iter_1161.tape : (i == local.iter_1161.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1162.code == ","
        ? [for i, b in local.iter_1161.tape : (i == local.iter_1161.tape_ptr ? local.ascii_lookup[local.curr_1162.input] : b)]
        : local.iter_1161.tape)

    tape_ptr = (
      local.curr_1162.code == "<"
        ? local.iter_1161.tape_ptr == 0 ? length(local.iter_1161.tape) - 1 : local.iter_1161.tape_ptr - 1 :
      local.curr_1162.code == ">"
        ? local.iter_1161.tape_ptr == length(local.iter_1161.tape) - 1 ? 0 : local.iter_1161.tape_ptr + 1
        : local.iter_1161.tape_ptr)

    code_ptr = 1 + (
      local.curr_1162.code == "["
        ? local.iter_1161.tape[local.iter_1161.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1161.code_ptr)] : local.iter_1161.code_ptr :
      local.curr_1162.code == "]"
        ? local.iter_1161.tape[local.iter_1161.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1161.code_ptr)] : local.iter_1161.code_ptr
        : local.iter_1161.code_ptr)

    steps_taken = 1 + local.iter_1161.steps_taken
  }
}

locals {
  end_of_code_1163 = try(local.iter_1162.code_ptr >= length(var.code), true)

  curr_1163 = local.end_of_code_1163 ? null : {
    code = substr(var.code, local.iter_1162.code_ptr, 1)
    input = substr(var.code, local.iter_1162.code_ptr, 1) == "," ? substr(local.iter_1162.input, 0, 1) : null
  }

  iter_1163 = local.end_of_code_1163 ? local.iter_1162 : {
    input = (local.curr_1163.code == ","
      ? substr(local.iter_1162.input, 1, -1)
      : local.iter_1162.input)

    output = (local.curr_1163.code == "."
      ? "${local.iter_1162.output}${jsondecode(format("\"\\u%04x\"", local.iter_1162.tape[local.iter_1162.tape_ptr]))}"
      : local.iter_1162.output)
    
    tape = (
      local.curr_1163.code == "+"
        ? [for i, b in local.iter_1162.tape : (i == local.iter_1162.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1163.code == "-"
        ? [for i, b in local.iter_1162.tape : (i == local.iter_1162.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1163.code == ","
        ? [for i, b in local.iter_1162.tape : (i == local.iter_1162.tape_ptr ? local.ascii_lookup[local.curr_1163.input] : b)]
        : local.iter_1162.tape)

    tape_ptr = (
      local.curr_1163.code == "<"
        ? local.iter_1162.tape_ptr == 0 ? length(local.iter_1162.tape) - 1 : local.iter_1162.tape_ptr - 1 :
      local.curr_1163.code == ">"
        ? local.iter_1162.tape_ptr == length(local.iter_1162.tape) - 1 ? 0 : local.iter_1162.tape_ptr + 1
        : local.iter_1162.tape_ptr)

    code_ptr = 1 + (
      local.curr_1163.code == "["
        ? local.iter_1162.tape[local.iter_1162.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1162.code_ptr)] : local.iter_1162.code_ptr :
      local.curr_1163.code == "]"
        ? local.iter_1162.tape[local.iter_1162.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1162.code_ptr)] : local.iter_1162.code_ptr
        : local.iter_1162.code_ptr)

    steps_taken = 1 + local.iter_1162.steps_taken
  }
}

locals {
  end_of_code_1164 = try(local.iter_1163.code_ptr >= length(var.code), true)

  curr_1164 = local.end_of_code_1164 ? null : {
    code = substr(var.code, local.iter_1163.code_ptr, 1)
    input = substr(var.code, local.iter_1163.code_ptr, 1) == "," ? substr(local.iter_1163.input, 0, 1) : null
  }

  iter_1164 = local.end_of_code_1164 ? local.iter_1163 : {
    input = (local.curr_1164.code == ","
      ? substr(local.iter_1163.input, 1, -1)
      : local.iter_1163.input)

    output = (local.curr_1164.code == "."
      ? "${local.iter_1163.output}${jsondecode(format("\"\\u%04x\"", local.iter_1163.tape[local.iter_1163.tape_ptr]))}"
      : local.iter_1163.output)
    
    tape = (
      local.curr_1164.code == "+"
        ? [for i, b in local.iter_1163.tape : (i == local.iter_1163.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1164.code == "-"
        ? [for i, b in local.iter_1163.tape : (i == local.iter_1163.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1164.code == ","
        ? [for i, b in local.iter_1163.tape : (i == local.iter_1163.tape_ptr ? local.ascii_lookup[local.curr_1164.input] : b)]
        : local.iter_1163.tape)

    tape_ptr = (
      local.curr_1164.code == "<"
        ? local.iter_1163.tape_ptr == 0 ? length(local.iter_1163.tape) - 1 : local.iter_1163.tape_ptr - 1 :
      local.curr_1164.code == ">"
        ? local.iter_1163.tape_ptr == length(local.iter_1163.tape) - 1 ? 0 : local.iter_1163.tape_ptr + 1
        : local.iter_1163.tape_ptr)

    code_ptr = 1 + (
      local.curr_1164.code == "["
        ? local.iter_1163.tape[local.iter_1163.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1163.code_ptr)] : local.iter_1163.code_ptr :
      local.curr_1164.code == "]"
        ? local.iter_1163.tape[local.iter_1163.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1163.code_ptr)] : local.iter_1163.code_ptr
        : local.iter_1163.code_ptr)

    steps_taken = 1 + local.iter_1163.steps_taken
  }
}

locals {
  end_of_code_1165 = try(local.iter_1164.code_ptr >= length(var.code), true)

  curr_1165 = local.end_of_code_1165 ? null : {
    code = substr(var.code, local.iter_1164.code_ptr, 1)
    input = substr(var.code, local.iter_1164.code_ptr, 1) == "," ? substr(local.iter_1164.input, 0, 1) : null
  }

  iter_1165 = local.end_of_code_1165 ? local.iter_1164 : {
    input = (local.curr_1165.code == ","
      ? substr(local.iter_1164.input, 1, -1)
      : local.iter_1164.input)

    output = (local.curr_1165.code == "."
      ? "${local.iter_1164.output}${jsondecode(format("\"\\u%04x\"", local.iter_1164.tape[local.iter_1164.tape_ptr]))}"
      : local.iter_1164.output)
    
    tape = (
      local.curr_1165.code == "+"
        ? [for i, b in local.iter_1164.tape : (i == local.iter_1164.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1165.code == "-"
        ? [for i, b in local.iter_1164.tape : (i == local.iter_1164.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1165.code == ","
        ? [for i, b in local.iter_1164.tape : (i == local.iter_1164.tape_ptr ? local.ascii_lookup[local.curr_1165.input] : b)]
        : local.iter_1164.tape)

    tape_ptr = (
      local.curr_1165.code == "<"
        ? local.iter_1164.tape_ptr == 0 ? length(local.iter_1164.tape) - 1 : local.iter_1164.tape_ptr - 1 :
      local.curr_1165.code == ">"
        ? local.iter_1164.tape_ptr == length(local.iter_1164.tape) - 1 ? 0 : local.iter_1164.tape_ptr + 1
        : local.iter_1164.tape_ptr)

    code_ptr = 1 + (
      local.curr_1165.code == "["
        ? local.iter_1164.tape[local.iter_1164.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1164.code_ptr)] : local.iter_1164.code_ptr :
      local.curr_1165.code == "]"
        ? local.iter_1164.tape[local.iter_1164.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1164.code_ptr)] : local.iter_1164.code_ptr
        : local.iter_1164.code_ptr)

    steps_taken = 1 + local.iter_1164.steps_taken
  }
}

locals {
  end_of_code_1166 = try(local.iter_1165.code_ptr >= length(var.code), true)

  curr_1166 = local.end_of_code_1166 ? null : {
    code = substr(var.code, local.iter_1165.code_ptr, 1)
    input = substr(var.code, local.iter_1165.code_ptr, 1) == "," ? substr(local.iter_1165.input, 0, 1) : null
  }

  iter_1166 = local.end_of_code_1166 ? local.iter_1165 : {
    input = (local.curr_1166.code == ","
      ? substr(local.iter_1165.input, 1, -1)
      : local.iter_1165.input)

    output = (local.curr_1166.code == "."
      ? "${local.iter_1165.output}${jsondecode(format("\"\\u%04x\"", local.iter_1165.tape[local.iter_1165.tape_ptr]))}"
      : local.iter_1165.output)
    
    tape = (
      local.curr_1166.code == "+"
        ? [for i, b in local.iter_1165.tape : (i == local.iter_1165.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1166.code == "-"
        ? [for i, b in local.iter_1165.tape : (i == local.iter_1165.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1166.code == ","
        ? [for i, b in local.iter_1165.tape : (i == local.iter_1165.tape_ptr ? local.ascii_lookup[local.curr_1166.input] : b)]
        : local.iter_1165.tape)

    tape_ptr = (
      local.curr_1166.code == "<"
        ? local.iter_1165.tape_ptr == 0 ? length(local.iter_1165.tape) - 1 : local.iter_1165.tape_ptr - 1 :
      local.curr_1166.code == ">"
        ? local.iter_1165.tape_ptr == length(local.iter_1165.tape) - 1 ? 0 : local.iter_1165.tape_ptr + 1
        : local.iter_1165.tape_ptr)

    code_ptr = 1 + (
      local.curr_1166.code == "["
        ? local.iter_1165.tape[local.iter_1165.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1165.code_ptr)] : local.iter_1165.code_ptr :
      local.curr_1166.code == "]"
        ? local.iter_1165.tape[local.iter_1165.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1165.code_ptr)] : local.iter_1165.code_ptr
        : local.iter_1165.code_ptr)

    steps_taken = 1 + local.iter_1165.steps_taken
  }
}

locals {
  end_of_code_1167 = try(local.iter_1166.code_ptr >= length(var.code), true)

  curr_1167 = local.end_of_code_1167 ? null : {
    code = substr(var.code, local.iter_1166.code_ptr, 1)
    input = substr(var.code, local.iter_1166.code_ptr, 1) == "," ? substr(local.iter_1166.input, 0, 1) : null
  }

  iter_1167 = local.end_of_code_1167 ? local.iter_1166 : {
    input = (local.curr_1167.code == ","
      ? substr(local.iter_1166.input, 1, -1)
      : local.iter_1166.input)

    output = (local.curr_1167.code == "."
      ? "${local.iter_1166.output}${jsondecode(format("\"\\u%04x\"", local.iter_1166.tape[local.iter_1166.tape_ptr]))}"
      : local.iter_1166.output)
    
    tape = (
      local.curr_1167.code == "+"
        ? [for i, b in local.iter_1166.tape : (i == local.iter_1166.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1167.code == "-"
        ? [for i, b in local.iter_1166.tape : (i == local.iter_1166.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1167.code == ","
        ? [for i, b in local.iter_1166.tape : (i == local.iter_1166.tape_ptr ? local.ascii_lookup[local.curr_1167.input] : b)]
        : local.iter_1166.tape)

    tape_ptr = (
      local.curr_1167.code == "<"
        ? local.iter_1166.tape_ptr == 0 ? length(local.iter_1166.tape) - 1 : local.iter_1166.tape_ptr - 1 :
      local.curr_1167.code == ">"
        ? local.iter_1166.tape_ptr == length(local.iter_1166.tape) - 1 ? 0 : local.iter_1166.tape_ptr + 1
        : local.iter_1166.tape_ptr)

    code_ptr = 1 + (
      local.curr_1167.code == "["
        ? local.iter_1166.tape[local.iter_1166.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1166.code_ptr)] : local.iter_1166.code_ptr :
      local.curr_1167.code == "]"
        ? local.iter_1166.tape[local.iter_1166.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1166.code_ptr)] : local.iter_1166.code_ptr
        : local.iter_1166.code_ptr)

    steps_taken = 1 + local.iter_1166.steps_taken
  }
}

locals {
  end_of_code_1168 = try(local.iter_1167.code_ptr >= length(var.code), true)

  curr_1168 = local.end_of_code_1168 ? null : {
    code = substr(var.code, local.iter_1167.code_ptr, 1)
    input = substr(var.code, local.iter_1167.code_ptr, 1) == "," ? substr(local.iter_1167.input, 0, 1) : null
  }

  iter_1168 = local.end_of_code_1168 ? local.iter_1167 : {
    input = (local.curr_1168.code == ","
      ? substr(local.iter_1167.input, 1, -1)
      : local.iter_1167.input)

    output = (local.curr_1168.code == "."
      ? "${local.iter_1167.output}${jsondecode(format("\"\\u%04x\"", local.iter_1167.tape[local.iter_1167.tape_ptr]))}"
      : local.iter_1167.output)
    
    tape = (
      local.curr_1168.code == "+"
        ? [for i, b in local.iter_1167.tape : (i == local.iter_1167.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1168.code == "-"
        ? [for i, b in local.iter_1167.tape : (i == local.iter_1167.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1168.code == ","
        ? [for i, b in local.iter_1167.tape : (i == local.iter_1167.tape_ptr ? local.ascii_lookup[local.curr_1168.input] : b)]
        : local.iter_1167.tape)

    tape_ptr = (
      local.curr_1168.code == "<"
        ? local.iter_1167.tape_ptr == 0 ? length(local.iter_1167.tape) - 1 : local.iter_1167.tape_ptr - 1 :
      local.curr_1168.code == ">"
        ? local.iter_1167.tape_ptr == length(local.iter_1167.tape) - 1 ? 0 : local.iter_1167.tape_ptr + 1
        : local.iter_1167.tape_ptr)

    code_ptr = 1 + (
      local.curr_1168.code == "["
        ? local.iter_1167.tape[local.iter_1167.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1167.code_ptr)] : local.iter_1167.code_ptr :
      local.curr_1168.code == "]"
        ? local.iter_1167.tape[local.iter_1167.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1167.code_ptr)] : local.iter_1167.code_ptr
        : local.iter_1167.code_ptr)

    steps_taken = 1 + local.iter_1167.steps_taken
  }
}

locals {
  end_of_code_1169 = try(local.iter_1168.code_ptr >= length(var.code), true)

  curr_1169 = local.end_of_code_1169 ? null : {
    code = substr(var.code, local.iter_1168.code_ptr, 1)
    input = substr(var.code, local.iter_1168.code_ptr, 1) == "," ? substr(local.iter_1168.input, 0, 1) : null
  }

  iter_1169 = local.end_of_code_1169 ? local.iter_1168 : {
    input = (local.curr_1169.code == ","
      ? substr(local.iter_1168.input, 1, -1)
      : local.iter_1168.input)

    output = (local.curr_1169.code == "."
      ? "${local.iter_1168.output}${jsondecode(format("\"\\u%04x\"", local.iter_1168.tape[local.iter_1168.tape_ptr]))}"
      : local.iter_1168.output)
    
    tape = (
      local.curr_1169.code == "+"
        ? [for i, b in local.iter_1168.tape : (i == local.iter_1168.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1169.code == "-"
        ? [for i, b in local.iter_1168.tape : (i == local.iter_1168.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1169.code == ","
        ? [for i, b in local.iter_1168.tape : (i == local.iter_1168.tape_ptr ? local.ascii_lookup[local.curr_1169.input] : b)]
        : local.iter_1168.tape)

    tape_ptr = (
      local.curr_1169.code == "<"
        ? local.iter_1168.tape_ptr == 0 ? length(local.iter_1168.tape) - 1 : local.iter_1168.tape_ptr - 1 :
      local.curr_1169.code == ">"
        ? local.iter_1168.tape_ptr == length(local.iter_1168.tape) - 1 ? 0 : local.iter_1168.tape_ptr + 1
        : local.iter_1168.tape_ptr)

    code_ptr = 1 + (
      local.curr_1169.code == "["
        ? local.iter_1168.tape[local.iter_1168.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1168.code_ptr)] : local.iter_1168.code_ptr :
      local.curr_1169.code == "]"
        ? local.iter_1168.tape[local.iter_1168.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1168.code_ptr)] : local.iter_1168.code_ptr
        : local.iter_1168.code_ptr)

    steps_taken = 1 + local.iter_1168.steps_taken
  }
}

locals {
  end_of_code_1170 = try(local.iter_1169.code_ptr >= length(var.code), true)

  curr_1170 = local.end_of_code_1170 ? null : {
    code = substr(var.code, local.iter_1169.code_ptr, 1)
    input = substr(var.code, local.iter_1169.code_ptr, 1) == "," ? substr(local.iter_1169.input, 0, 1) : null
  }

  iter_1170 = local.end_of_code_1170 ? local.iter_1169 : {
    input = (local.curr_1170.code == ","
      ? substr(local.iter_1169.input, 1, -1)
      : local.iter_1169.input)

    output = (local.curr_1170.code == "."
      ? "${local.iter_1169.output}${jsondecode(format("\"\\u%04x\"", local.iter_1169.tape[local.iter_1169.tape_ptr]))}"
      : local.iter_1169.output)
    
    tape = (
      local.curr_1170.code == "+"
        ? [for i, b in local.iter_1169.tape : (i == local.iter_1169.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1170.code == "-"
        ? [for i, b in local.iter_1169.tape : (i == local.iter_1169.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1170.code == ","
        ? [for i, b in local.iter_1169.tape : (i == local.iter_1169.tape_ptr ? local.ascii_lookup[local.curr_1170.input] : b)]
        : local.iter_1169.tape)

    tape_ptr = (
      local.curr_1170.code == "<"
        ? local.iter_1169.tape_ptr == 0 ? length(local.iter_1169.tape) - 1 : local.iter_1169.tape_ptr - 1 :
      local.curr_1170.code == ">"
        ? local.iter_1169.tape_ptr == length(local.iter_1169.tape) - 1 ? 0 : local.iter_1169.tape_ptr + 1
        : local.iter_1169.tape_ptr)

    code_ptr = 1 + (
      local.curr_1170.code == "["
        ? local.iter_1169.tape[local.iter_1169.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1169.code_ptr)] : local.iter_1169.code_ptr :
      local.curr_1170.code == "]"
        ? local.iter_1169.tape[local.iter_1169.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1169.code_ptr)] : local.iter_1169.code_ptr
        : local.iter_1169.code_ptr)

    steps_taken = 1 + local.iter_1169.steps_taken
  }
}

locals {
  end_of_code_1171 = try(local.iter_1170.code_ptr >= length(var.code), true)

  curr_1171 = local.end_of_code_1171 ? null : {
    code = substr(var.code, local.iter_1170.code_ptr, 1)
    input = substr(var.code, local.iter_1170.code_ptr, 1) == "," ? substr(local.iter_1170.input, 0, 1) : null
  }

  iter_1171 = local.end_of_code_1171 ? local.iter_1170 : {
    input = (local.curr_1171.code == ","
      ? substr(local.iter_1170.input, 1, -1)
      : local.iter_1170.input)

    output = (local.curr_1171.code == "."
      ? "${local.iter_1170.output}${jsondecode(format("\"\\u%04x\"", local.iter_1170.tape[local.iter_1170.tape_ptr]))}"
      : local.iter_1170.output)
    
    tape = (
      local.curr_1171.code == "+"
        ? [for i, b in local.iter_1170.tape : (i == local.iter_1170.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1171.code == "-"
        ? [for i, b in local.iter_1170.tape : (i == local.iter_1170.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1171.code == ","
        ? [for i, b in local.iter_1170.tape : (i == local.iter_1170.tape_ptr ? local.ascii_lookup[local.curr_1171.input] : b)]
        : local.iter_1170.tape)

    tape_ptr = (
      local.curr_1171.code == "<"
        ? local.iter_1170.tape_ptr == 0 ? length(local.iter_1170.tape) - 1 : local.iter_1170.tape_ptr - 1 :
      local.curr_1171.code == ">"
        ? local.iter_1170.tape_ptr == length(local.iter_1170.tape) - 1 ? 0 : local.iter_1170.tape_ptr + 1
        : local.iter_1170.tape_ptr)

    code_ptr = 1 + (
      local.curr_1171.code == "["
        ? local.iter_1170.tape[local.iter_1170.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1170.code_ptr)] : local.iter_1170.code_ptr :
      local.curr_1171.code == "]"
        ? local.iter_1170.tape[local.iter_1170.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1170.code_ptr)] : local.iter_1170.code_ptr
        : local.iter_1170.code_ptr)

    steps_taken = 1 + local.iter_1170.steps_taken
  }
}

locals {
  end_of_code_1172 = try(local.iter_1171.code_ptr >= length(var.code), true)

  curr_1172 = local.end_of_code_1172 ? null : {
    code = substr(var.code, local.iter_1171.code_ptr, 1)
    input = substr(var.code, local.iter_1171.code_ptr, 1) == "," ? substr(local.iter_1171.input, 0, 1) : null
  }

  iter_1172 = local.end_of_code_1172 ? local.iter_1171 : {
    input = (local.curr_1172.code == ","
      ? substr(local.iter_1171.input, 1, -1)
      : local.iter_1171.input)

    output = (local.curr_1172.code == "."
      ? "${local.iter_1171.output}${jsondecode(format("\"\\u%04x\"", local.iter_1171.tape[local.iter_1171.tape_ptr]))}"
      : local.iter_1171.output)
    
    tape = (
      local.curr_1172.code == "+"
        ? [for i, b in local.iter_1171.tape : (i == local.iter_1171.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1172.code == "-"
        ? [for i, b in local.iter_1171.tape : (i == local.iter_1171.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1172.code == ","
        ? [for i, b in local.iter_1171.tape : (i == local.iter_1171.tape_ptr ? local.ascii_lookup[local.curr_1172.input] : b)]
        : local.iter_1171.tape)

    tape_ptr = (
      local.curr_1172.code == "<"
        ? local.iter_1171.tape_ptr == 0 ? length(local.iter_1171.tape) - 1 : local.iter_1171.tape_ptr - 1 :
      local.curr_1172.code == ">"
        ? local.iter_1171.tape_ptr == length(local.iter_1171.tape) - 1 ? 0 : local.iter_1171.tape_ptr + 1
        : local.iter_1171.tape_ptr)

    code_ptr = 1 + (
      local.curr_1172.code == "["
        ? local.iter_1171.tape[local.iter_1171.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1171.code_ptr)] : local.iter_1171.code_ptr :
      local.curr_1172.code == "]"
        ? local.iter_1171.tape[local.iter_1171.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1171.code_ptr)] : local.iter_1171.code_ptr
        : local.iter_1171.code_ptr)

    steps_taken = 1 + local.iter_1171.steps_taken
  }
}

locals {
  end_of_code_1173 = try(local.iter_1172.code_ptr >= length(var.code), true)

  curr_1173 = local.end_of_code_1173 ? null : {
    code = substr(var.code, local.iter_1172.code_ptr, 1)
    input = substr(var.code, local.iter_1172.code_ptr, 1) == "," ? substr(local.iter_1172.input, 0, 1) : null
  }

  iter_1173 = local.end_of_code_1173 ? local.iter_1172 : {
    input = (local.curr_1173.code == ","
      ? substr(local.iter_1172.input, 1, -1)
      : local.iter_1172.input)

    output = (local.curr_1173.code == "."
      ? "${local.iter_1172.output}${jsondecode(format("\"\\u%04x\"", local.iter_1172.tape[local.iter_1172.tape_ptr]))}"
      : local.iter_1172.output)
    
    tape = (
      local.curr_1173.code == "+"
        ? [for i, b in local.iter_1172.tape : (i == local.iter_1172.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1173.code == "-"
        ? [for i, b in local.iter_1172.tape : (i == local.iter_1172.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1173.code == ","
        ? [for i, b in local.iter_1172.tape : (i == local.iter_1172.tape_ptr ? local.ascii_lookup[local.curr_1173.input] : b)]
        : local.iter_1172.tape)

    tape_ptr = (
      local.curr_1173.code == "<"
        ? local.iter_1172.tape_ptr == 0 ? length(local.iter_1172.tape) - 1 : local.iter_1172.tape_ptr - 1 :
      local.curr_1173.code == ">"
        ? local.iter_1172.tape_ptr == length(local.iter_1172.tape) - 1 ? 0 : local.iter_1172.tape_ptr + 1
        : local.iter_1172.tape_ptr)

    code_ptr = 1 + (
      local.curr_1173.code == "["
        ? local.iter_1172.tape[local.iter_1172.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1172.code_ptr)] : local.iter_1172.code_ptr :
      local.curr_1173.code == "]"
        ? local.iter_1172.tape[local.iter_1172.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1172.code_ptr)] : local.iter_1172.code_ptr
        : local.iter_1172.code_ptr)

    steps_taken = 1 + local.iter_1172.steps_taken
  }
}

locals {
  end_of_code_1174 = try(local.iter_1173.code_ptr >= length(var.code), true)

  curr_1174 = local.end_of_code_1174 ? null : {
    code = substr(var.code, local.iter_1173.code_ptr, 1)
    input = substr(var.code, local.iter_1173.code_ptr, 1) == "," ? substr(local.iter_1173.input, 0, 1) : null
  }

  iter_1174 = local.end_of_code_1174 ? local.iter_1173 : {
    input = (local.curr_1174.code == ","
      ? substr(local.iter_1173.input, 1, -1)
      : local.iter_1173.input)

    output = (local.curr_1174.code == "."
      ? "${local.iter_1173.output}${jsondecode(format("\"\\u%04x\"", local.iter_1173.tape[local.iter_1173.tape_ptr]))}"
      : local.iter_1173.output)
    
    tape = (
      local.curr_1174.code == "+"
        ? [for i, b in local.iter_1173.tape : (i == local.iter_1173.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1174.code == "-"
        ? [for i, b in local.iter_1173.tape : (i == local.iter_1173.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1174.code == ","
        ? [for i, b in local.iter_1173.tape : (i == local.iter_1173.tape_ptr ? local.ascii_lookup[local.curr_1174.input] : b)]
        : local.iter_1173.tape)

    tape_ptr = (
      local.curr_1174.code == "<"
        ? local.iter_1173.tape_ptr == 0 ? length(local.iter_1173.tape) - 1 : local.iter_1173.tape_ptr - 1 :
      local.curr_1174.code == ">"
        ? local.iter_1173.tape_ptr == length(local.iter_1173.tape) - 1 ? 0 : local.iter_1173.tape_ptr + 1
        : local.iter_1173.tape_ptr)

    code_ptr = 1 + (
      local.curr_1174.code == "["
        ? local.iter_1173.tape[local.iter_1173.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1173.code_ptr)] : local.iter_1173.code_ptr :
      local.curr_1174.code == "]"
        ? local.iter_1173.tape[local.iter_1173.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1173.code_ptr)] : local.iter_1173.code_ptr
        : local.iter_1173.code_ptr)

    steps_taken = 1 + local.iter_1173.steps_taken
  }
}

locals {
  end_of_code_1175 = try(local.iter_1174.code_ptr >= length(var.code), true)

  curr_1175 = local.end_of_code_1175 ? null : {
    code = substr(var.code, local.iter_1174.code_ptr, 1)
    input = substr(var.code, local.iter_1174.code_ptr, 1) == "," ? substr(local.iter_1174.input, 0, 1) : null
  }

  iter_1175 = local.end_of_code_1175 ? local.iter_1174 : {
    input = (local.curr_1175.code == ","
      ? substr(local.iter_1174.input, 1, -1)
      : local.iter_1174.input)

    output = (local.curr_1175.code == "."
      ? "${local.iter_1174.output}${jsondecode(format("\"\\u%04x\"", local.iter_1174.tape[local.iter_1174.tape_ptr]))}"
      : local.iter_1174.output)
    
    tape = (
      local.curr_1175.code == "+"
        ? [for i, b in local.iter_1174.tape : (i == local.iter_1174.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1175.code == "-"
        ? [for i, b in local.iter_1174.tape : (i == local.iter_1174.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1175.code == ","
        ? [for i, b in local.iter_1174.tape : (i == local.iter_1174.tape_ptr ? local.ascii_lookup[local.curr_1175.input] : b)]
        : local.iter_1174.tape)

    tape_ptr = (
      local.curr_1175.code == "<"
        ? local.iter_1174.tape_ptr == 0 ? length(local.iter_1174.tape) - 1 : local.iter_1174.tape_ptr - 1 :
      local.curr_1175.code == ">"
        ? local.iter_1174.tape_ptr == length(local.iter_1174.tape) - 1 ? 0 : local.iter_1174.tape_ptr + 1
        : local.iter_1174.tape_ptr)

    code_ptr = 1 + (
      local.curr_1175.code == "["
        ? local.iter_1174.tape[local.iter_1174.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1174.code_ptr)] : local.iter_1174.code_ptr :
      local.curr_1175.code == "]"
        ? local.iter_1174.tape[local.iter_1174.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1174.code_ptr)] : local.iter_1174.code_ptr
        : local.iter_1174.code_ptr)

    steps_taken = 1 + local.iter_1174.steps_taken
  }
}

locals {
  end_of_code_1176 = try(local.iter_1175.code_ptr >= length(var.code), true)

  curr_1176 = local.end_of_code_1176 ? null : {
    code = substr(var.code, local.iter_1175.code_ptr, 1)
    input = substr(var.code, local.iter_1175.code_ptr, 1) == "," ? substr(local.iter_1175.input, 0, 1) : null
  }

  iter_1176 = local.end_of_code_1176 ? local.iter_1175 : {
    input = (local.curr_1176.code == ","
      ? substr(local.iter_1175.input, 1, -1)
      : local.iter_1175.input)

    output = (local.curr_1176.code == "."
      ? "${local.iter_1175.output}${jsondecode(format("\"\\u%04x\"", local.iter_1175.tape[local.iter_1175.tape_ptr]))}"
      : local.iter_1175.output)
    
    tape = (
      local.curr_1176.code == "+"
        ? [for i, b in local.iter_1175.tape : (i == local.iter_1175.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1176.code == "-"
        ? [for i, b in local.iter_1175.tape : (i == local.iter_1175.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1176.code == ","
        ? [for i, b in local.iter_1175.tape : (i == local.iter_1175.tape_ptr ? local.ascii_lookup[local.curr_1176.input] : b)]
        : local.iter_1175.tape)

    tape_ptr = (
      local.curr_1176.code == "<"
        ? local.iter_1175.tape_ptr == 0 ? length(local.iter_1175.tape) - 1 : local.iter_1175.tape_ptr - 1 :
      local.curr_1176.code == ">"
        ? local.iter_1175.tape_ptr == length(local.iter_1175.tape) - 1 ? 0 : local.iter_1175.tape_ptr + 1
        : local.iter_1175.tape_ptr)

    code_ptr = 1 + (
      local.curr_1176.code == "["
        ? local.iter_1175.tape[local.iter_1175.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1175.code_ptr)] : local.iter_1175.code_ptr :
      local.curr_1176.code == "]"
        ? local.iter_1175.tape[local.iter_1175.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1175.code_ptr)] : local.iter_1175.code_ptr
        : local.iter_1175.code_ptr)

    steps_taken = 1 + local.iter_1175.steps_taken
  }
}

locals {
  end_of_code_1177 = try(local.iter_1176.code_ptr >= length(var.code), true)

  curr_1177 = local.end_of_code_1177 ? null : {
    code = substr(var.code, local.iter_1176.code_ptr, 1)
    input = substr(var.code, local.iter_1176.code_ptr, 1) == "," ? substr(local.iter_1176.input, 0, 1) : null
  }

  iter_1177 = local.end_of_code_1177 ? local.iter_1176 : {
    input = (local.curr_1177.code == ","
      ? substr(local.iter_1176.input, 1, -1)
      : local.iter_1176.input)

    output = (local.curr_1177.code == "."
      ? "${local.iter_1176.output}${jsondecode(format("\"\\u%04x\"", local.iter_1176.tape[local.iter_1176.tape_ptr]))}"
      : local.iter_1176.output)
    
    tape = (
      local.curr_1177.code == "+"
        ? [for i, b in local.iter_1176.tape : (i == local.iter_1176.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1177.code == "-"
        ? [for i, b in local.iter_1176.tape : (i == local.iter_1176.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1177.code == ","
        ? [for i, b in local.iter_1176.tape : (i == local.iter_1176.tape_ptr ? local.ascii_lookup[local.curr_1177.input] : b)]
        : local.iter_1176.tape)

    tape_ptr = (
      local.curr_1177.code == "<"
        ? local.iter_1176.tape_ptr == 0 ? length(local.iter_1176.tape) - 1 : local.iter_1176.tape_ptr - 1 :
      local.curr_1177.code == ">"
        ? local.iter_1176.tape_ptr == length(local.iter_1176.tape) - 1 ? 0 : local.iter_1176.tape_ptr + 1
        : local.iter_1176.tape_ptr)

    code_ptr = 1 + (
      local.curr_1177.code == "["
        ? local.iter_1176.tape[local.iter_1176.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1176.code_ptr)] : local.iter_1176.code_ptr :
      local.curr_1177.code == "]"
        ? local.iter_1176.tape[local.iter_1176.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1176.code_ptr)] : local.iter_1176.code_ptr
        : local.iter_1176.code_ptr)

    steps_taken = 1 + local.iter_1176.steps_taken
  }
}

locals {
  end_of_code_1178 = try(local.iter_1177.code_ptr >= length(var.code), true)

  curr_1178 = local.end_of_code_1178 ? null : {
    code = substr(var.code, local.iter_1177.code_ptr, 1)
    input = substr(var.code, local.iter_1177.code_ptr, 1) == "," ? substr(local.iter_1177.input, 0, 1) : null
  }

  iter_1178 = local.end_of_code_1178 ? local.iter_1177 : {
    input = (local.curr_1178.code == ","
      ? substr(local.iter_1177.input, 1, -1)
      : local.iter_1177.input)

    output = (local.curr_1178.code == "."
      ? "${local.iter_1177.output}${jsondecode(format("\"\\u%04x\"", local.iter_1177.tape[local.iter_1177.tape_ptr]))}"
      : local.iter_1177.output)
    
    tape = (
      local.curr_1178.code == "+"
        ? [for i, b in local.iter_1177.tape : (i == local.iter_1177.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1178.code == "-"
        ? [for i, b in local.iter_1177.tape : (i == local.iter_1177.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1178.code == ","
        ? [for i, b in local.iter_1177.tape : (i == local.iter_1177.tape_ptr ? local.ascii_lookup[local.curr_1178.input] : b)]
        : local.iter_1177.tape)

    tape_ptr = (
      local.curr_1178.code == "<"
        ? local.iter_1177.tape_ptr == 0 ? length(local.iter_1177.tape) - 1 : local.iter_1177.tape_ptr - 1 :
      local.curr_1178.code == ">"
        ? local.iter_1177.tape_ptr == length(local.iter_1177.tape) - 1 ? 0 : local.iter_1177.tape_ptr + 1
        : local.iter_1177.tape_ptr)

    code_ptr = 1 + (
      local.curr_1178.code == "["
        ? local.iter_1177.tape[local.iter_1177.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1177.code_ptr)] : local.iter_1177.code_ptr :
      local.curr_1178.code == "]"
        ? local.iter_1177.tape[local.iter_1177.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1177.code_ptr)] : local.iter_1177.code_ptr
        : local.iter_1177.code_ptr)

    steps_taken = 1 + local.iter_1177.steps_taken
  }
}

locals {
  end_of_code_1179 = try(local.iter_1178.code_ptr >= length(var.code), true)

  curr_1179 = local.end_of_code_1179 ? null : {
    code = substr(var.code, local.iter_1178.code_ptr, 1)
    input = substr(var.code, local.iter_1178.code_ptr, 1) == "," ? substr(local.iter_1178.input, 0, 1) : null
  }

  iter_1179 = local.end_of_code_1179 ? local.iter_1178 : {
    input = (local.curr_1179.code == ","
      ? substr(local.iter_1178.input, 1, -1)
      : local.iter_1178.input)

    output = (local.curr_1179.code == "."
      ? "${local.iter_1178.output}${jsondecode(format("\"\\u%04x\"", local.iter_1178.tape[local.iter_1178.tape_ptr]))}"
      : local.iter_1178.output)
    
    tape = (
      local.curr_1179.code == "+"
        ? [for i, b in local.iter_1178.tape : (i == local.iter_1178.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1179.code == "-"
        ? [for i, b in local.iter_1178.tape : (i == local.iter_1178.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1179.code == ","
        ? [for i, b in local.iter_1178.tape : (i == local.iter_1178.tape_ptr ? local.ascii_lookup[local.curr_1179.input] : b)]
        : local.iter_1178.tape)

    tape_ptr = (
      local.curr_1179.code == "<"
        ? local.iter_1178.tape_ptr == 0 ? length(local.iter_1178.tape) - 1 : local.iter_1178.tape_ptr - 1 :
      local.curr_1179.code == ">"
        ? local.iter_1178.tape_ptr == length(local.iter_1178.tape) - 1 ? 0 : local.iter_1178.tape_ptr + 1
        : local.iter_1178.tape_ptr)

    code_ptr = 1 + (
      local.curr_1179.code == "["
        ? local.iter_1178.tape[local.iter_1178.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1178.code_ptr)] : local.iter_1178.code_ptr :
      local.curr_1179.code == "]"
        ? local.iter_1178.tape[local.iter_1178.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1178.code_ptr)] : local.iter_1178.code_ptr
        : local.iter_1178.code_ptr)

    steps_taken = 1 + local.iter_1178.steps_taken
  }
}

locals {
  end_of_code_1180 = try(local.iter_1179.code_ptr >= length(var.code), true)

  curr_1180 = local.end_of_code_1180 ? null : {
    code = substr(var.code, local.iter_1179.code_ptr, 1)
    input = substr(var.code, local.iter_1179.code_ptr, 1) == "," ? substr(local.iter_1179.input, 0, 1) : null
  }

  iter_1180 = local.end_of_code_1180 ? local.iter_1179 : {
    input = (local.curr_1180.code == ","
      ? substr(local.iter_1179.input, 1, -1)
      : local.iter_1179.input)

    output = (local.curr_1180.code == "."
      ? "${local.iter_1179.output}${jsondecode(format("\"\\u%04x\"", local.iter_1179.tape[local.iter_1179.tape_ptr]))}"
      : local.iter_1179.output)
    
    tape = (
      local.curr_1180.code == "+"
        ? [for i, b in local.iter_1179.tape : (i == local.iter_1179.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1180.code == "-"
        ? [for i, b in local.iter_1179.tape : (i == local.iter_1179.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1180.code == ","
        ? [for i, b in local.iter_1179.tape : (i == local.iter_1179.tape_ptr ? local.ascii_lookup[local.curr_1180.input] : b)]
        : local.iter_1179.tape)

    tape_ptr = (
      local.curr_1180.code == "<"
        ? local.iter_1179.tape_ptr == 0 ? length(local.iter_1179.tape) - 1 : local.iter_1179.tape_ptr - 1 :
      local.curr_1180.code == ">"
        ? local.iter_1179.tape_ptr == length(local.iter_1179.tape) - 1 ? 0 : local.iter_1179.tape_ptr + 1
        : local.iter_1179.tape_ptr)

    code_ptr = 1 + (
      local.curr_1180.code == "["
        ? local.iter_1179.tape[local.iter_1179.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1179.code_ptr)] : local.iter_1179.code_ptr :
      local.curr_1180.code == "]"
        ? local.iter_1179.tape[local.iter_1179.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1179.code_ptr)] : local.iter_1179.code_ptr
        : local.iter_1179.code_ptr)

    steps_taken = 1 + local.iter_1179.steps_taken
  }
}

locals {
  end_of_code_1181 = try(local.iter_1180.code_ptr >= length(var.code), true)

  curr_1181 = local.end_of_code_1181 ? null : {
    code = substr(var.code, local.iter_1180.code_ptr, 1)
    input = substr(var.code, local.iter_1180.code_ptr, 1) == "," ? substr(local.iter_1180.input, 0, 1) : null
  }

  iter_1181 = local.end_of_code_1181 ? local.iter_1180 : {
    input = (local.curr_1181.code == ","
      ? substr(local.iter_1180.input, 1, -1)
      : local.iter_1180.input)

    output = (local.curr_1181.code == "."
      ? "${local.iter_1180.output}${jsondecode(format("\"\\u%04x\"", local.iter_1180.tape[local.iter_1180.tape_ptr]))}"
      : local.iter_1180.output)
    
    tape = (
      local.curr_1181.code == "+"
        ? [for i, b in local.iter_1180.tape : (i == local.iter_1180.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1181.code == "-"
        ? [for i, b in local.iter_1180.tape : (i == local.iter_1180.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1181.code == ","
        ? [for i, b in local.iter_1180.tape : (i == local.iter_1180.tape_ptr ? local.ascii_lookup[local.curr_1181.input] : b)]
        : local.iter_1180.tape)

    tape_ptr = (
      local.curr_1181.code == "<"
        ? local.iter_1180.tape_ptr == 0 ? length(local.iter_1180.tape) - 1 : local.iter_1180.tape_ptr - 1 :
      local.curr_1181.code == ">"
        ? local.iter_1180.tape_ptr == length(local.iter_1180.tape) - 1 ? 0 : local.iter_1180.tape_ptr + 1
        : local.iter_1180.tape_ptr)

    code_ptr = 1 + (
      local.curr_1181.code == "["
        ? local.iter_1180.tape[local.iter_1180.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1180.code_ptr)] : local.iter_1180.code_ptr :
      local.curr_1181.code == "]"
        ? local.iter_1180.tape[local.iter_1180.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1180.code_ptr)] : local.iter_1180.code_ptr
        : local.iter_1180.code_ptr)

    steps_taken = 1 + local.iter_1180.steps_taken
  }
}

locals {
  end_of_code_1182 = try(local.iter_1181.code_ptr >= length(var.code), true)

  curr_1182 = local.end_of_code_1182 ? null : {
    code = substr(var.code, local.iter_1181.code_ptr, 1)
    input = substr(var.code, local.iter_1181.code_ptr, 1) == "," ? substr(local.iter_1181.input, 0, 1) : null
  }

  iter_1182 = local.end_of_code_1182 ? local.iter_1181 : {
    input = (local.curr_1182.code == ","
      ? substr(local.iter_1181.input, 1, -1)
      : local.iter_1181.input)

    output = (local.curr_1182.code == "."
      ? "${local.iter_1181.output}${jsondecode(format("\"\\u%04x\"", local.iter_1181.tape[local.iter_1181.tape_ptr]))}"
      : local.iter_1181.output)
    
    tape = (
      local.curr_1182.code == "+"
        ? [for i, b in local.iter_1181.tape : (i == local.iter_1181.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1182.code == "-"
        ? [for i, b in local.iter_1181.tape : (i == local.iter_1181.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1182.code == ","
        ? [for i, b in local.iter_1181.tape : (i == local.iter_1181.tape_ptr ? local.ascii_lookup[local.curr_1182.input] : b)]
        : local.iter_1181.tape)

    tape_ptr = (
      local.curr_1182.code == "<"
        ? local.iter_1181.tape_ptr == 0 ? length(local.iter_1181.tape) - 1 : local.iter_1181.tape_ptr - 1 :
      local.curr_1182.code == ">"
        ? local.iter_1181.tape_ptr == length(local.iter_1181.tape) - 1 ? 0 : local.iter_1181.tape_ptr + 1
        : local.iter_1181.tape_ptr)

    code_ptr = 1 + (
      local.curr_1182.code == "["
        ? local.iter_1181.tape[local.iter_1181.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1181.code_ptr)] : local.iter_1181.code_ptr :
      local.curr_1182.code == "]"
        ? local.iter_1181.tape[local.iter_1181.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1181.code_ptr)] : local.iter_1181.code_ptr
        : local.iter_1181.code_ptr)

    steps_taken = 1 + local.iter_1181.steps_taken
  }
}

locals {
  end_of_code_1183 = try(local.iter_1182.code_ptr >= length(var.code), true)

  curr_1183 = local.end_of_code_1183 ? null : {
    code = substr(var.code, local.iter_1182.code_ptr, 1)
    input = substr(var.code, local.iter_1182.code_ptr, 1) == "," ? substr(local.iter_1182.input, 0, 1) : null
  }

  iter_1183 = local.end_of_code_1183 ? local.iter_1182 : {
    input = (local.curr_1183.code == ","
      ? substr(local.iter_1182.input, 1, -1)
      : local.iter_1182.input)

    output = (local.curr_1183.code == "."
      ? "${local.iter_1182.output}${jsondecode(format("\"\\u%04x\"", local.iter_1182.tape[local.iter_1182.tape_ptr]))}"
      : local.iter_1182.output)
    
    tape = (
      local.curr_1183.code == "+"
        ? [for i, b in local.iter_1182.tape : (i == local.iter_1182.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1183.code == "-"
        ? [for i, b in local.iter_1182.tape : (i == local.iter_1182.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1183.code == ","
        ? [for i, b in local.iter_1182.tape : (i == local.iter_1182.tape_ptr ? local.ascii_lookup[local.curr_1183.input] : b)]
        : local.iter_1182.tape)

    tape_ptr = (
      local.curr_1183.code == "<"
        ? local.iter_1182.tape_ptr == 0 ? length(local.iter_1182.tape) - 1 : local.iter_1182.tape_ptr - 1 :
      local.curr_1183.code == ">"
        ? local.iter_1182.tape_ptr == length(local.iter_1182.tape) - 1 ? 0 : local.iter_1182.tape_ptr + 1
        : local.iter_1182.tape_ptr)

    code_ptr = 1 + (
      local.curr_1183.code == "["
        ? local.iter_1182.tape[local.iter_1182.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1182.code_ptr)] : local.iter_1182.code_ptr :
      local.curr_1183.code == "]"
        ? local.iter_1182.tape[local.iter_1182.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1182.code_ptr)] : local.iter_1182.code_ptr
        : local.iter_1182.code_ptr)

    steps_taken = 1 + local.iter_1182.steps_taken
  }
}

locals {
  end_of_code_1184 = try(local.iter_1183.code_ptr >= length(var.code), true)

  curr_1184 = local.end_of_code_1184 ? null : {
    code = substr(var.code, local.iter_1183.code_ptr, 1)
    input = substr(var.code, local.iter_1183.code_ptr, 1) == "," ? substr(local.iter_1183.input, 0, 1) : null
  }

  iter_1184 = local.end_of_code_1184 ? local.iter_1183 : {
    input = (local.curr_1184.code == ","
      ? substr(local.iter_1183.input, 1, -1)
      : local.iter_1183.input)

    output = (local.curr_1184.code == "."
      ? "${local.iter_1183.output}${jsondecode(format("\"\\u%04x\"", local.iter_1183.tape[local.iter_1183.tape_ptr]))}"
      : local.iter_1183.output)
    
    tape = (
      local.curr_1184.code == "+"
        ? [for i, b in local.iter_1183.tape : (i == local.iter_1183.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1184.code == "-"
        ? [for i, b in local.iter_1183.tape : (i == local.iter_1183.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1184.code == ","
        ? [for i, b in local.iter_1183.tape : (i == local.iter_1183.tape_ptr ? local.ascii_lookup[local.curr_1184.input] : b)]
        : local.iter_1183.tape)

    tape_ptr = (
      local.curr_1184.code == "<"
        ? local.iter_1183.tape_ptr == 0 ? length(local.iter_1183.tape) - 1 : local.iter_1183.tape_ptr - 1 :
      local.curr_1184.code == ">"
        ? local.iter_1183.tape_ptr == length(local.iter_1183.tape) - 1 ? 0 : local.iter_1183.tape_ptr + 1
        : local.iter_1183.tape_ptr)

    code_ptr = 1 + (
      local.curr_1184.code == "["
        ? local.iter_1183.tape[local.iter_1183.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1183.code_ptr)] : local.iter_1183.code_ptr :
      local.curr_1184.code == "]"
        ? local.iter_1183.tape[local.iter_1183.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1183.code_ptr)] : local.iter_1183.code_ptr
        : local.iter_1183.code_ptr)

    steps_taken = 1 + local.iter_1183.steps_taken
  }
}

locals {
  end_of_code_1185 = try(local.iter_1184.code_ptr >= length(var.code), true)

  curr_1185 = local.end_of_code_1185 ? null : {
    code = substr(var.code, local.iter_1184.code_ptr, 1)
    input = substr(var.code, local.iter_1184.code_ptr, 1) == "," ? substr(local.iter_1184.input, 0, 1) : null
  }

  iter_1185 = local.end_of_code_1185 ? local.iter_1184 : {
    input = (local.curr_1185.code == ","
      ? substr(local.iter_1184.input, 1, -1)
      : local.iter_1184.input)

    output = (local.curr_1185.code == "."
      ? "${local.iter_1184.output}${jsondecode(format("\"\\u%04x\"", local.iter_1184.tape[local.iter_1184.tape_ptr]))}"
      : local.iter_1184.output)
    
    tape = (
      local.curr_1185.code == "+"
        ? [for i, b in local.iter_1184.tape : (i == local.iter_1184.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1185.code == "-"
        ? [for i, b in local.iter_1184.tape : (i == local.iter_1184.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1185.code == ","
        ? [for i, b in local.iter_1184.tape : (i == local.iter_1184.tape_ptr ? local.ascii_lookup[local.curr_1185.input] : b)]
        : local.iter_1184.tape)

    tape_ptr = (
      local.curr_1185.code == "<"
        ? local.iter_1184.tape_ptr == 0 ? length(local.iter_1184.tape) - 1 : local.iter_1184.tape_ptr - 1 :
      local.curr_1185.code == ">"
        ? local.iter_1184.tape_ptr == length(local.iter_1184.tape) - 1 ? 0 : local.iter_1184.tape_ptr + 1
        : local.iter_1184.tape_ptr)

    code_ptr = 1 + (
      local.curr_1185.code == "["
        ? local.iter_1184.tape[local.iter_1184.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1184.code_ptr)] : local.iter_1184.code_ptr :
      local.curr_1185.code == "]"
        ? local.iter_1184.tape[local.iter_1184.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1184.code_ptr)] : local.iter_1184.code_ptr
        : local.iter_1184.code_ptr)

    steps_taken = 1 + local.iter_1184.steps_taken
  }
}

locals {
  end_of_code_1186 = try(local.iter_1185.code_ptr >= length(var.code), true)

  curr_1186 = local.end_of_code_1186 ? null : {
    code = substr(var.code, local.iter_1185.code_ptr, 1)
    input = substr(var.code, local.iter_1185.code_ptr, 1) == "," ? substr(local.iter_1185.input, 0, 1) : null
  }

  iter_1186 = local.end_of_code_1186 ? local.iter_1185 : {
    input = (local.curr_1186.code == ","
      ? substr(local.iter_1185.input, 1, -1)
      : local.iter_1185.input)

    output = (local.curr_1186.code == "."
      ? "${local.iter_1185.output}${jsondecode(format("\"\\u%04x\"", local.iter_1185.tape[local.iter_1185.tape_ptr]))}"
      : local.iter_1185.output)
    
    tape = (
      local.curr_1186.code == "+"
        ? [for i, b in local.iter_1185.tape : (i == local.iter_1185.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1186.code == "-"
        ? [for i, b in local.iter_1185.tape : (i == local.iter_1185.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1186.code == ","
        ? [for i, b in local.iter_1185.tape : (i == local.iter_1185.tape_ptr ? local.ascii_lookup[local.curr_1186.input] : b)]
        : local.iter_1185.tape)

    tape_ptr = (
      local.curr_1186.code == "<"
        ? local.iter_1185.tape_ptr == 0 ? length(local.iter_1185.tape) - 1 : local.iter_1185.tape_ptr - 1 :
      local.curr_1186.code == ">"
        ? local.iter_1185.tape_ptr == length(local.iter_1185.tape) - 1 ? 0 : local.iter_1185.tape_ptr + 1
        : local.iter_1185.tape_ptr)

    code_ptr = 1 + (
      local.curr_1186.code == "["
        ? local.iter_1185.tape[local.iter_1185.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1185.code_ptr)] : local.iter_1185.code_ptr :
      local.curr_1186.code == "]"
        ? local.iter_1185.tape[local.iter_1185.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1185.code_ptr)] : local.iter_1185.code_ptr
        : local.iter_1185.code_ptr)

    steps_taken = 1 + local.iter_1185.steps_taken
  }
}

locals {
  end_of_code_1187 = try(local.iter_1186.code_ptr >= length(var.code), true)

  curr_1187 = local.end_of_code_1187 ? null : {
    code = substr(var.code, local.iter_1186.code_ptr, 1)
    input = substr(var.code, local.iter_1186.code_ptr, 1) == "," ? substr(local.iter_1186.input, 0, 1) : null
  }

  iter_1187 = local.end_of_code_1187 ? local.iter_1186 : {
    input = (local.curr_1187.code == ","
      ? substr(local.iter_1186.input, 1, -1)
      : local.iter_1186.input)

    output = (local.curr_1187.code == "."
      ? "${local.iter_1186.output}${jsondecode(format("\"\\u%04x\"", local.iter_1186.tape[local.iter_1186.tape_ptr]))}"
      : local.iter_1186.output)
    
    tape = (
      local.curr_1187.code == "+"
        ? [for i, b in local.iter_1186.tape : (i == local.iter_1186.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1187.code == "-"
        ? [for i, b in local.iter_1186.tape : (i == local.iter_1186.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1187.code == ","
        ? [for i, b in local.iter_1186.tape : (i == local.iter_1186.tape_ptr ? local.ascii_lookup[local.curr_1187.input] : b)]
        : local.iter_1186.tape)

    tape_ptr = (
      local.curr_1187.code == "<"
        ? local.iter_1186.tape_ptr == 0 ? length(local.iter_1186.tape) - 1 : local.iter_1186.tape_ptr - 1 :
      local.curr_1187.code == ">"
        ? local.iter_1186.tape_ptr == length(local.iter_1186.tape) - 1 ? 0 : local.iter_1186.tape_ptr + 1
        : local.iter_1186.tape_ptr)

    code_ptr = 1 + (
      local.curr_1187.code == "["
        ? local.iter_1186.tape[local.iter_1186.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1186.code_ptr)] : local.iter_1186.code_ptr :
      local.curr_1187.code == "]"
        ? local.iter_1186.tape[local.iter_1186.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1186.code_ptr)] : local.iter_1186.code_ptr
        : local.iter_1186.code_ptr)

    steps_taken = 1 + local.iter_1186.steps_taken
  }
}

locals {
  end_of_code_1188 = try(local.iter_1187.code_ptr >= length(var.code), true)

  curr_1188 = local.end_of_code_1188 ? null : {
    code = substr(var.code, local.iter_1187.code_ptr, 1)
    input = substr(var.code, local.iter_1187.code_ptr, 1) == "," ? substr(local.iter_1187.input, 0, 1) : null
  }

  iter_1188 = local.end_of_code_1188 ? local.iter_1187 : {
    input = (local.curr_1188.code == ","
      ? substr(local.iter_1187.input, 1, -1)
      : local.iter_1187.input)

    output = (local.curr_1188.code == "."
      ? "${local.iter_1187.output}${jsondecode(format("\"\\u%04x\"", local.iter_1187.tape[local.iter_1187.tape_ptr]))}"
      : local.iter_1187.output)
    
    tape = (
      local.curr_1188.code == "+"
        ? [for i, b in local.iter_1187.tape : (i == local.iter_1187.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1188.code == "-"
        ? [for i, b in local.iter_1187.tape : (i == local.iter_1187.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1188.code == ","
        ? [for i, b in local.iter_1187.tape : (i == local.iter_1187.tape_ptr ? local.ascii_lookup[local.curr_1188.input] : b)]
        : local.iter_1187.tape)

    tape_ptr = (
      local.curr_1188.code == "<"
        ? local.iter_1187.tape_ptr == 0 ? length(local.iter_1187.tape) - 1 : local.iter_1187.tape_ptr - 1 :
      local.curr_1188.code == ">"
        ? local.iter_1187.tape_ptr == length(local.iter_1187.tape) - 1 ? 0 : local.iter_1187.tape_ptr + 1
        : local.iter_1187.tape_ptr)

    code_ptr = 1 + (
      local.curr_1188.code == "["
        ? local.iter_1187.tape[local.iter_1187.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1187.code_ptr)] : local.iter_1187.code_ptr :
      local.curr_1188.code == "]"
        ? local.iter_1187.tape[local.iter_1187.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1187.code_ptr)] : local.iter_1187.code_ptr
        : local.iter_1187.code_ptr)

    steps_taken = 1 + local.iter_1187.steps_taken
  }
}

locals {
  end_of_code_1189 = try(local.iter_1188.code_ptr >= length(var.code), true)

  curr_1189 = local.end_of_code_1189 ? null : {
    code = substr(var.code, local.iter_1188.code_ptr, 1)
    input = substr(var.code, local.iter_1188.code_ptr, 1) == "," ? substr(local.iter_1188.input, 0, 1) : null
  }

  iter_1189 = local.end_of_code_1189 ? local.iter_1188 : {
    input = (local.curr_1189.code == ","
      ? substr(local.iter_1188.input, 1, -1)
      : local.iter_1188.input)

    output = (local.curr_1189.code == "."
      ? "${local.iter_1188.output}${jsondecode(format("\"\\u%04x\"", local.iter_1188.tape[local.iter_1188.tape_ptr]))}"
      : local.iter_1188.output)
    
    tape = (
      local.curr_1189.code == "+"
        ? [for i, b in local.iter_1188.tape : (i == local.iter_1188.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1189.code == "-"
        ? [for i, b in local.iter_1188.tape : (i == local.iter_1188.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1189.code == ","
        ? [for i, b in local.iter_1188.tape : (i == local.iter_1188.tape_ptr ? local.ascii_lookup[local.curr_1189.input] : b)]
        : local.iter_1188.tape)

    tape_ptr = (
      local.curr_1189.code == "<"
        ? local.iter_1188.tape_ptr == 0 ? length(local.iter_1188.tape) - 1 : local.iter_1188.tape_ptr - 1 :
      local.curr_1189.code == ">"
        ? local.iter_1188.tape_ptr == length(local.iter_1188.tape) - 1 ? 0 : local.iter_1188.tape_ptr + 1
        : local.iter_1188.tape_ptr)

    code_ptr = 1 + (
      local.curr_1189.code == "["
        ? local.iter_1188.tape[local.iter_1188.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1188.code_ptr)] : local.iter_1188.code_ptr :
      local.curr_1189.code == "]"
        ? local.iter_1188.tape[local.iter_1188.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1188.code_ptr)] : local.iter_1188.code_ptr
        : local.iter_1188.code_ptr)

    steps_taken = 1 + local.iter_1188.steps_taken
  }
}

locals {
  end_of_code_1190 = try(local.iter_1189.code_ptr >= length(var.code), true)

  curr_1190 = local.end_of_code_1190 ? null : {
    code = substr(var.code, local.iter_1189.code_ptr, 1)
    input = substr(var.code, local.iter_1189.code_ptr, 1) == "," ? substr(local.iter_1189.input, 0, 1) : null
  }

  iter_1190 = local.end_of_code_1190 ? local.iter_1189 : {
    input = (local.curr_1190.code == ","
      ? substr(local.iter_1189.input, 1, -1)
      : local.iter_1189.input)

    output = (local.curr_1190.code == "."
      ? "${local.iter_1189.output}${jsondecode(format("\"\\u%04x\"", local.iter_1189.tape[local.iter_1189.tape_ptr]))}"
      : local.iter_1189.output)
    
    tape = (
      local.curr_1190.code == "+"
        ? [for i, b in local.iter_1189.tape : (i == local.iter_1189.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1190.code == "-"
        ? [for i, b in local.iter_1189.tape : (i == local.iter_1189.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1190.code == ","
        ? [for i, b in local.iter_1189.tape : (i == local.iter_1189.tape_ptr ? local.ascii_lookup[local.curr_1190.input] : b)]
        : local.iter_1189.tape)

    tape_ptr = (
      local.curr_1190.code == "<"
        ? local.iter_1189.tape_ptr == 0 ? length(local.iter_1189.tape) - 1 : local.iter_1189.tape_ptr - 1 :
      local.curr_1190.code == ">"
        ? local.iter_1189.tape_ptr == length(local.iter_1189.tape) - 1 ? 0 : local.iter_1189.tape_ptr + 1
        : local.iter_1189.tape_ptr)

    code_ptr = 1 + (
      local.curr_1190.code == "["
        ? local.iter_1189.tape[local.iter_1189.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1189.code_ptr)] : local.iter_1189.code_ptr :
      local.curr_1190.code == "]"
        ? local.iter_1189.tape[local.iter_1189.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1189.code_ptr)] : local.iter_1189.code_ptr
        : local.iter_1189.code_ptr)

    steps_taken = 1 + local.iter_1189.steps_taken
  }
}

locals {
  end_of_code_1191 = try(local.iter_1190.code_ptr >= length(var.code), true)

  curr_1191 = local.end_of_code_1191 ? null : {
    code = substr(var.code, local.iter_1190.code_ptr, 1)
    input = substr(var.code, local.iter_1190.code_ptr, 1) == "," ? substr(local.iter_1190.input, 0, 1) : null
  }

  iter_1191 = local.end_of_code_1191 ? local.iter_1190 : {
    input = (local.curr_1191.code == ","
      ? substr(local.iter_1190.input, 1, -1)
      : local.iter_1190.input)

    output = (local.curr_1191.code == "."
      ? "${local.iter_1190.output}${jsondecode(format("\"\\u%04x\"", local.iter_1190.tape[local.iter_1190.tape_ptr]))}"
      : local.iter_1190.output)
    
    tape = (
      local.curr_1191.code == "+"
        ? [for i, b in local.iter_1190.tape : (i == local.iter_1190.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1191.code == "-"
        ? [for i, b in local.iter_1190.tape : (i == local.iter_1190.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1191.code == ","
        ? [for i, b in local.iter_1190.tape : (i == local.iter_1190.tape_ptr ? local.ascii_lookup[local.curr_1191.input] : b)]
        : local.iter_1190.tape)

    tape_ptr = (
      local.curr_1191.code == "<"
        ? local.iter_1190.tape_ptr == 0 ? length(local.iter_1190.tape) - 1 : local.iter_1190.tape_ptr - 1 :
      local.curr_1191.code == ">"
        ? local.iter_1190.tape_ptr == length(local.iter_1190.tape) - 1 ? 0 : local.iter_1190.tape_ptr + 1
        : local.iter_1190.tape_ptr)

    code_ptr = 1 + (
      local.curr_1191.code == "["
        ? local.iter_1190.tape[local.iter_1190.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1190.code_ptr)] : local.iter_1190.code_ptr :
      local.curr_1191.code == "]"
        ? local.iter_1190.tape[local.iter_1190.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1190.code_ptr)] : local.iter_1190.code_ptr
        : local.iter_1190.code_ptr)

    steps_taken = 1 + local.iter_1190.steps_taken
  }
}

locals {
  end_of_code_1192 = try(local.iter_1191.code_ptr >= length(var.code), true)

  curr_1192 = local.end_of_code_1192 ? null : {
    code = substr(var.code, local.iter_1191.code_ptr, 1)
    input = substr(var.code, local.iter_1191.code_ptr, 1) == "," ? substr(local.iter_1191.input, 0, 1) : null
  }

  iter_1192 = local.end_of_code_1192 ? local.iter_1191 : {
    input = (local.curr_1192.code == ","
      ? substr(local.iter_1191.input, 1, -1)
      : local.iter_1191.input)

    output = (local.curr_1192.code == "."
      ? "${local.iter_1191.output}${jsondecode(format("\"\\u%04x\"", local.iter_1191.tape[local.iter_1191.tape_ptr]))}"
      : local.iter_1191.output)
    
    tape = (
      local.curr_1192.code == "+"
        ? [for i, b in local.iter_1191.tape : (i == local.iter_1191.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1192.code == "-"
        ? [for i, b in local.iter_1191.tape : (i == local.iter_1191.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1192.code == ","
        ? [for i, b in local.iter_1191.tape : (i == local.iter_1191.tape_ptr ? local.ascii_lookup[local.curr_1192.input] : b)]
        : local.iter_1191.tape)

    tape_ptr = (
      local.curr_1192.code == "<"
        ? local.iter_1191.tape_ptr == 0 ? length(local.iter_1191.tape) - 1 : local.iter_1191.tape_ptr - 1 :
      local.curr_1192.code == ">"
        ? local.iter_1191.tape_ptr == length(local.iter_1191.tape) - 1 ? 0 : local.iter_1191.tape_ptr + 1
        : local.iter_1191.tape_ptr)

    code_ptr = 1 + (
      local.curr_1192.code == "["
        ? local.iter_1191.tape[local.iter_1191.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1191.code_ptr)] : local.iter_1191.code_ptr :
      local.curr_1192.code == "]"
        ? local.iter_1191.tape[local.iter_1191.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1191.code_ptr)] : local.iter_1191.code_ptr
        : local.iter_1191.code_ptr)

    steps_taken = 1 + local.iter_1191.steps_taken
  }
}

locals {
  end_of_code_1193 = try(local.iter_1192.code_ptr >= length(var.code), true)

  curr_1193 = local.end_of_code_1193 ? null : {
    code = substr(var.code, local.iter_1192.code_ptr, 1)
    input = substr(var.code, local.iter_1192.code_ptr, 1) == "," ? substr(local.iter_1192.input, 0, 1) : null
  }

  iter_1193 = local.end_of_code_1193 ? local.iter_1192 : {
    input = (local.curr_1193.code == ","
      ? substr(local.iter_1192.input, 1, -1)
      : local.iter_1192.input)

    output = (local.curr_1193.code == "."
      ? "${local.iter_1192.output}${jsondecode(format("\"\\u%04x\"", local.iter_1192.tape[local.iter_1192.tape_ptr]))}"
      : local.iter_1192.output)
    
    tape = (
      local.curr_1193.code == "+"
        ? [for i, b in local.iter_1192.tape : (i == local.iter_1192.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1193.code == "-"
        ? [for i, b in local.iter_1192.tape : (i == local.iter_1192.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1193.code == ","
        ? [for i, b in local.iter_1192.tape : (i == local.iter_1192.tape_ptr ? local.ascii_lookup[local.curr_1193.input] : b)]
        : local.iter_1192.tape)

    tape_ptr = (
      local.curr_1193.code == "<"
        ? local.iter_1192.tape_ptr == 0 ? length(local.iter_1192.tape) - 1 : local.iter_1192.tape_ptr - 1 :
      local.curr_1193.code == ">"
        ? local.iter_1192.tape_ptr == length(local.iter_1192.tape) - 1 ? 0 : local.iter_1192.tape_ptr + 1
        : local.iter_1192.tape_ptr)

    code_ptr = 1 + (
      local.curr_1193.code == "["
        ? local.iter_1192.tape[local.iter_1192.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1192.code_ptr)] : local.iter_1192.code_ptr :
      local.curr_1193.code == "]"
        ? local.iter_1192.tape[local.iter_1192.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1192.code_ptr)] : local.iter_1192.code_ptr
        : local.iter_1192.code_ptr)

    steps_taken = 1 + local.iter_1192.steps_taken
  }
}

locals {
  end_of_code_1194 = try(local.iter_1193.code_ptr >= length(var.code), true)

  curr_1194 = local.end_of_code_1194 ? null : {
    code = substr(var.code, local.iter_1193.code_ptr, 1)
    input = substr(var.code, local.iter_1193.code_ptr, 1) == "," ? substr(local.iter_1193.input, 0, 1) : null
  }

  iter_1194 = local.end_of_code_1194 ? local.iter_1193 : {
    input = (local.curr_1194.code == ","
      ? substr(local.iter_1193.input, 1, -1)
      : local.iter_1193.input)

    output = (local.curr_1194.code == "."
      ? "${local.iter_1193.output}${jsondecode(format("\"\\u%04x\"", local.iter_1193.tape[local.iter_1193.tape_ptr]))}"
      : local.iter_1193.output)
    
    tape = (
      local.curr_1194.code == "+"
        ? [for i, b in local.iter_1193.tape : (i == local.iter_1193.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1194.code == "-"
        ? [for i, b in local.iter_1193.tape : (i == local.iter_1193.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1194.code == ","
        ? [for i, b in local.iter_1193.tape : (i == local.iter_1193.tape_ptr ? local.ascii_lookup[local.curr_1194.input] : b)]
        : local.iter_1193.tape)

    tape_ptr = (
      local.curr_1194.code == "<"
        ? local.iter_1193.tape_ptr == 0 ? length(local.iter_1193.tape) - 1 : local.iter_1193.tape_ptr - 1 :
      local.curr_1194.code == ">"
        ? local.iter_1193.tape_ptr == length(local.iter_1193.tape) - 1 ? 0 : local.iter_1193.tape_ptr + 1
        : local.iter_1193.tape_ptr)

    code_ptr = 1 + (
      local.curr_1194.code == "["
        ? local.iter_1193.tape[local.iter_1193.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1193.code_ptr)] : local.iter_1193.code_ptr :
      local.curr_1194.code == "]"
        ? local.iter_1193.tape[local.iter_1193.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1193.code_ptr)] : local.iter_1193.code_ptr
        : local.iter_1193.code_ptr)

    steps_taken = 1 + local.iter_1193.steps_taken
  }
}

locals {
  end_of_code_1195 = try(local.iter_1194.code_ptr >= length(var.code), true)

  curr_1195 = local.end_of_code_1195 ? null : {
    code = substr(var.code, local.iter_1194.code_ptr, 1)
    input = substr(var.code, local.iter_1194.code_ptr, 1) == "," ? substr(local.iter_1194.input, 0, 1) : null
  }

  iter_1195 = local.end_of_code_1195 ? local.iter_1194 : {
    input = (local.curr_1195.code == ","
      ? substr(local.iter_1194.input, 1, -1)
      : local.iter_1194.input)

    output = (local.curr_1195.code == "."
      ? "${local.iter_1194.output}${jsondecode(format("\"\\u%04x\"", local.iter_1194.tape[local.iter_1194.tape_ptr]))}"
      : local.iter_1194.output)
    
    tape = (
      local.curr_1195.code == "+"
        ? [for i, b in local.iter_1194.tape : (i == local.iter_1194.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1195.code == "-"
        ? [for i, b in local.iter_1194.tape : (i == local.iter_1194.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1195.code == ","
        ? [for i, b in local.iter_1194.tape : (i == local.iter_1194.tape_ptr ? local.ascii_lookup[local.curr_1195.input] : b)]
        : local.iter_1194.tape)

    tape_ptr = (
      local.curr_1195.code == "<"
        ? local.iter_1194.tape_ptr == 0 ? length(local.iter_1194.tape) - 1 : local.iter_1194.tape_ptr - 1 :
      local.curr_1195.code == ">"
        ? local.iter_1194.tape_ptr == length(local.iter_1194.tape) - 1 ? 0 : local.iter_1194.tape_ptr + 1
        : local.iter_1194.tape_ptr)

    code_ptr = 1 + (
      local.curr_1195.code == "["
        ? local.iter_1194.tape[local.iter_1194.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1194.code_ptr)] : local.iter_1194.code_ptr :
      local.curr_1195.code == "]"
        ? local.iter_1194.tape[local.iter_1194.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1194.code_ptr)] : local.iter_1194.code_ptr
        : local.iter_1194.code_ptr)

    steps_taken = 1 + local.iter_1194.steps_taken
  }
}

locals {
  end_of_code_1196 = try(local.iter_1195.code_ptr >= length(var.code), true)

  curr_1196 = local.end_of_code_1196 ? null : {
    code = substr(var.code, local.iter_1195.code_ptr, 1)
    input = substr(var.code, local.iter_1195.code_ptr, 1) == "," ? substr(local.iter_1195.input, 0, 1) : null
  }

  iter_1196 = local.end_of_code_1196 ? local.iter_1195 : {
    input = (local.curr_1196.code == ","
      ? substr(local.iter_1195.input, 1, -1)
      : local.iter_1195.input)

    output = (local.curr_1196.code == "."
      ? "${local.iter_1195.output}${jsondecode(format("\"\\u%04x\"", local.iter_1195.tape[local.iter_1195.tape_ptr]))}"
      : local.iter_1195.output)
    
    tape = (
      local.curr_1196.code == "+"
        ? [for i, b in local.iter_1195.tape : (i == local.iter_1195.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1196.code == "-"
        ? [for i, b in local.iter_1195.tape : (i == local.iter_1195.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1196.code == ","
        ? [for i, b in local.iter_1195.tape : (i == local.iter_1195.tape_ptr ? local.ascii_lookup[local.curr_1196.input] : b)]
        : local.iter_1195.tape)

    tape_ptr = (
      local.curr_1196.code == "<"
        ? local.iter_1195.tape_ptr == 0 ? length(local.iter_1195.tape) - 1 : local.iter_1195.tape_ptr - 1 :
      local.curr_1196.code == ">"
        ? local.iter_1195.tape_ptr == length(local.iter_1195.tape) - 1 ? 0 : local.iter_1195.tape_ptr + 1
        : local.iter_1195.tape_ptr)

    code_ptr = 1 + (
      local.curr_1196.code == "["
        ? local.iter_1195.tape[local.iter_1195.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1195.code_ptr)] : local.iter_1195.code_ptr :
      local.curr_1196.code == "]"
        ? local.iter_1195.tape[local.iter_1195.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1195.code_ptr)] : local.iter_1195.code_ptr
        : local.iter_1195.code_ptr)

    steps_taken = 1 + local.iter_1195.steps_taken
  }
}

locals {
  end_of_code_1197 = try(local.iter_1196.code_ptr >= length(var.code), true)

  curr_1197 = local.end_of_code_1197 ? null : {
    code = substr(var.code, local.iter_1196.code_ptr, 1)
    input = substr(var.code, local.iter_1196.code_ptr, 1) == "," ? substr(local.iter_1196.input, 0, 1) : null
  }

  iter_1197 = local.end_of_code_1197 ? local.iter_1196 : {
    input = (local.curr_1197.code == ","
      ? substr(local.iter_1196.input, 1, -1)
      : local.iter_1196.input)

    output = (local.curr_1197.code == "."
      ? "${local.iter_1196.output}${jsondecode(format("\"\\u%04x\"", local.iter_1196.tape[local.iter_1196.tape_ptr]))}"
      : local.iter_1196.output)
    
    tape = (
      local.curr_1197.code == "+"
        ? [for i, b in local.iter_1196.tape : (i == local.iter_1196.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1197.code == "-"
        ? [for i, b in local.iter_1196.tape : (i == local.iter_1196.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1197.code == ","
        ? [for i, b in local.iter_1196.tape : (i == local.iter_1196.tape_ptr ? local.ascii_lookup[local.curr_1197.input] : b)]
        : local.iter_1196.tape)

    tape_ptr = (
      local.curr_1197.code == "<"
        ? local.iter_1196.tape_ptr == 0 ? length(local.iter_1196.tape) - 1 : local.iter_1196.tape_ptr - 1 :
      local.curr_1197.code == ">"
        ? local.iter_1196.tape_ptr == length(local.iter_1196.tape) - 1 ? 0 : local.iter_1196.tape_ptr + 1
        : local.iter_1196.tape_ptr)

    code_ptr = 1 + (
      local.curr_1197.code == "["
        ? local.iter_1196.tape[local.iter_1196.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1196.code_ptr)] : local.iter_1196.code_ptr :
      local.curr_1197.code == "]"
        ? local.iter_1196.tape[local.iter_1196.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1196.code_ptr)] : local.iter_1196.code_ptr
        : local.iter_1196.code_ptr)

    steps_taken = 1 + local.iter_1196.steps_taken
  }
}

locals {
  end_of_code_1198 = try(local.iter_1197.code_ptr >= length(var.code), true)

  curr_1198 = local.end_of_code_1198 ? null : {
    code = substr(var.code, local.iter_1197.code_ptr, 1)
    input = substr(var.code, local.iter_1197.code_ptr, 1) == "," ? substr(local.iter_1197.input, 0, 1) : null
  }

  iter_1198 = local.end_of_code_1198 ? local.iter_1197 : {
    input = (local.curr_1198.code == ","
      ? substr(local.iter_1197.input, 1, -1)
      : local.iter_1197.input)

    output = (local.curr_1198.code == "."
      ? "${local.iter_1197.output}${jsondecode(format("\"\\u%04x\"", local.iter_1197.tape[local.iter_1197.tape_ptr]))}"
      : local.iter_1197.output)
    
    tape = (
      local.curr_1198.code == "+"
        ? [for i, b in local.iter_1197.tape : (i == local.iter_1197.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1198.code == "-"
        ? [for i, b in local.iter_1197.tape : (i == local.iter_1197.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1198.code == ","
        ? [for i, b in local.iter_1197.tape : (i == local.iter_1197.tape_ptr ? local.ascii_lookup[local.curr_1198.input] : b)]
        : local.iter_1197.tape)

    tape_ptr = (
      local.curr_1198.code == "<"
        ? local.iter_1197.tape_ptr == 0 ? length(local.iter_1197.tape) - 1 : local.iter_1197.tape_ptr - 1 :
      local.curr_1198.code == ">"
        ? local.iter_1197.tape_ptr == length(local.iter_1197.tape) - 1 ? 0 : local.iter_1197.tape_ptr + 1
        : local.iter_1197.tape_ptr)

    code_ptr = 1 + (
      local.curr_1198.code == "["
        ? local.iter_1197.tape[local.iter_1197.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1197.code_ptr)] : local.iter_1197.code_ptr :
      local.curr_1198.code == "]"
        ? local.iter_1197.tape[local.iter_1197.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1197.code_ptr)] : local.iter_1197.code_ptr
        : local.iter_1197.code_ptr)

    steps_taken = 1 + local.iter_1197.steps_taken
  }
}

locals {
  end_of_code_1199 = try(local.iter_1198.code_ptr >= length(var.code), true)

  curr_1199 = local.end_of_code_1199 ? null : {
    code = substr(var.code, local.iter_1198.code_ptr, 1)
    input = substr(var.code, local.iter_1198.code_ptr, 1) == "," ? substr(local.iter_1198.input, 0, 1) : null
  }

  iter_1199 = local.end_of_code_1199 ? local.iter_1198 : {
    input = (local.curr_1199.code == ","
      ? substr(local.iter_1198.input, 1, -1)
      : local.iter_1198.input)

    output = (local.curr_1199.code == "."
      ? "${local.iter_1198.output}${jsondecode(format("\"\\u%04x\"", local.iter_1198.tape[local.iter_1198.tape_ptr]))}"
      : local.iter_1198.output)
    
    tape = (
      local.curr_1199.code == "+"
        ? [for i, b in local.iter_1198.tape : (i == local.iter_1198.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1199.code == "-"
        ? [for i, b in local.iter_1198.tape : (i == local.iter_1198.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1199.code == ","
        ? [for i, b in local.iter_1198.tape : (i == local.iter_1198.tape_ptr ? local.ascii_lookup[local.curr_1199.input] : b)]
        : local.iter_1198.tape)

    tape_ptr = (
      local.curr_1199.code == "<"
        ? local.iter_1198.tape_ptr == 0 ? length(local.iter_1198.tape) - 1 : local.iter_1198.tape_ptr - 1 :
      local.curr_1199.code == ">"
        ? local.iter_1198.tape_ptr == length(local.iter_1198.tape) - 1 ? 0 : local.iter_1198.tape_ptr + 1
        : local.iter_1198.tape_ptr)

    code_ptr = 1 + (
      local.curr_1199.code == "["
        ? local.iter_1198.tape[local.iter_1198.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1198.code_ptr)] : local.iter_1198.code_ptr :
      local.curr_1199.code == "]"
        ? local.iter_1198.tape[local.iter_1198.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1198.code_ptr)] : local.iter_1198.code_ptr
        : local.iter_1198.code_ptr)

    steps_taken = 1 + local.iter_1198.steps_taken
  }
}

locals {
  end_of_code_1200 = try(local.iter_1199.code_ptr >= length(var.code), true)

  curr_1200 = local.end_of_code_1200 ? null : {
    code = substr(var.code, local.iter_1199.code_ptr, 1)
    input = substr(var.code, local.iter_1199.code_ptr, 1) == "," ? substr(local.iter_1199.input, 0, 1) : null
  }

  iter_1200 = local.end_of_code_1200 ? local.iter_1199 : {
    input = (local.curr_1200.code == ","
      ? substr(local.iter_1199.input, 1, -1)
      : local.iter_1199.input)

    output = (local.curr_1200.code == "."
      ? "${local.iter_1199.output}${jsondecode(format("\"\\u%04x\"", local.iter_1199.tape[local.iter_1199.tape_ptr]))}"
      : local.iter_1199.output)
    
    tape = (
      local.curr_1200.code == "+"
        ? [for i, b in local.iter_1199.tape : (i == local.iter_1199.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1200.code == "-"
        ? [for i, b in local.iter_1199.tape : (i == local.iter_1199.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1200.code == ","
        ? [for i, b in local.iter_1199.tape : (i == local.iter_1199.tape_ptr ? local.ascii_lookup[local.curr_1200.input] : b)]
        : local.iter_1199.tape)

    tape_ptr = (
      local.curr_1200.code == "<"
        ? local.iter_1199.tape_ptr == 0 ? length(local.iter_1199.tape) - 1 : local.iter_1199.tape_ptr - 1 :
      local.curr_1200.code == ">"
        ? local.iter_1199.tape_ptr == length(local.iter_1199.tape) - 1 ? 0 : local.iter_1199.tape_ptr + 1
        : local.iter_1199.tape_ptr)

    code_ptr = 1 + (
      local.curr_1200.code == "["
        ? local.iter_1199.tape[local.iter_1199.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1199.code_ptr)] : local.iter_1199.code_ptr :
      local.curr_1200.code == "]"
        ? local.iter_1199.tape[local.iter_1199.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1199.code_ptr)] : local.iter_1199.code_ptr
        : local.iter_1199.code_ptr)

    steps_taken = 1 + local.iter_1199.steps_taken
  }
}

locals {
  end_of_code_1201 = try(local.iter_1200.code_ptr >= length(var.code), true)

  curr_1201 = local.end_of_code_1201 ? null : {
    code = substr(var.code, local.iter_1200.code_ptr, 1)
    input = substr(var.code, local.iter_1200.code_ptr, 1) == "," ? substr(local.iter_1200.input, 0, 1) : null
  }

  iter_1201 = local.end_of_code_1201 ? local.iter_1200 : {
    input = (local.curr_1201.code == ","
      ? substr(local.iter_1200.input, 1, -1)
      : local.iter_1200.input)

    output = (local.curr_1201.code == "."
      ? "${local.iter_1200.output}${jsondecode(format("\"\\u%04x\"", local.iter_1200.tape[local.iter_1200.tape_ptr]))}"
      : local.iter_1200.output)
    
    tape = (
      local.curr_1201.code == "+"
        ? [for i, b in local.iter_1200.tape : (i == local.iter_1200.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1201.code == "-"
        ? [for i, b in local.iter_1200.tape : (i == local.iter_1200.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1201.code == ","
        ? [for i, b in local.iter_1200.tape : (i == local.iter_1200.tape_ptr ? local.ascii_lookup[local.curr_1201.input] : b)]
        : local.iter_1200.tape)

    tape_ptr = (
      local.curr_1201.code == "<"
        ? local.iter_1200.tape_ptr == 0 ? length(local.iter_1200.tape) - 1 : local.iter_1200.tape_ptr - 1 :
      local.curr_1201.code == ">"
        ? local.iter_1200.tape_ptr == length(local.iter_1200.tape) - 1 ? 0 : local.iter_1200.tape_ptr + 1
        : local.iter_1200.tape_ptr)

    code_ptr = 1 + (
      local.curr_1201.code == "["
        ? local.iter_1200.tape[local.iter_1200.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1200.code_ptr)] : local.iter_1200.code_ptr :
      local.curr_1201.code == "]"
        ? local.iter_1200.tape[local.iter_1200.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1200.code_ptr)] : local.iter_1200.code_ptr
        : local.iter_1200.code_ptr)

    steps_taken = 1 + local.iter_1200.steps_taken
  }
}

locals {
  end_of_code_1202 = try(local.iter_1201.code_ptr >= length(var.code), true)

  curr_1202 = local.end_of_code_1202 ? null : {
    code = substr(var.code, local.iter_1201.code_ptr, 1)
    input = substr(var.code, local.iter_1201.code_ptr, 1) == "," ? substr(local.iter_1201.input, 0, 1) : null
  }

  iter_1202 = local.end_of_code_1202 ? local.iter_1201 : {
    input = (local.curr_1202.code == ","
      ? substr(local.iter_1201.input, 1, -1)
      : local.iter_1201.input)

    output = (local.curr_1202.code == "."
      ? "${local.iter_1201.output}${jsondecode(format("\"\\u%04x\"", local.iter_1201.tape[local.iter_1201.tape_ptr]))}"
      : local.iter_1201.output)
    
    tape = (
      local.curr_1202.code == "+"
        ? [for i, b in local.iter_1201.tape : (i == local.iter_1201.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1202.code == "-"
        ? [for i, b in local.iter_1201.tape : (i == local.iter_1201.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1202.code == ","
        ? [for i, b in local.iter_1201.tape : (i == local.iter_1201.tape_ptr ? local.ascii_lookup[local.curr_1202.input] : b)]
        : local.iter_1201.tape)

    tape_ptr = (
      local.curr_1202.code == "<"
        ? local.iter_1201.tape_ptr == 0 ? length(local.iter_1201.tape) - 1 : local.iter_1201.tape_ptr - 1 :
      local.curr_1202.code == ">"
        ? local.iter_1201.tape_ptr == length(local.iter_1201.tape) - 1 ? 0 : local.iter_1201.tape_ptr + 1
        : local.iter_1201.tape_ptr)

    code_ptr = 1 + (
      local.curr_1202.code == "["
        ? local.iter_1201.tape[local.iter_1201.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1201.code_ptr)] : local.iter_1201.code_ptr :
      local.curr_1202.code == "]"
        ? local.iter_1201.tape[local.iter_1201.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1201.code_ptr)] : local.iter_1201.code_ptr
        : local.iter_1201.code_ptr)

    steps_taken = 1 + local.iter_1201.steps_taken
  }
}

locals {
  end_of_code_1203 = try(local.iter_1202.code_ptr >= length(var.code), true)

  curr_1203 = local.end_of_code_1203 ? null : {
    code = substr(var.code, local.iter_1202.code_ptr, 1)
    input = substr(var.code, local.iter_1202.code_ptr, 1) == "," ? substr(local.iter_1202.input, 0, 1) : null
  }

  iter_1203 = local.end_of_code_1203 ? local.iter_1202 : {
    input = (local.curr_1203.code == ","
      ? substr(local.iter_1202.input, 1, -1)
      : local.iter_1202.input)

    output = (local.curr_1203.code == "."
      ? "${local.iter_1202.output}${jsondecode(format("\"\\u%04x\"", local.iter_1202.tape[local.iter_1202.tape_ptr]))}"
      : local.iter_1202.output)
    
    tape = (
      local.curr_1203.code == "+"
        ? [for i, b in local.iter_1202.tape : (i == local.iter_1202.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1203.code == "-"
        ? [for i, b in local.iter_1202.tape : (i == local.iter_1202.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1203.code == ","
        ? [for i, b in local.iter_1202.tape : (i == local.iter_1202.tape_ptr ? local.ascii_lookup[local.curr_1203.input] : b)]
        : local.iter_1202.tape)

    tape_ptr = (
      local.curr_1203.code == "<"
        ? local.iter_1202.tape_ptr == 0 ? length(local.iter_1202.tape) - 1 : local.iter_1202.tape_ptr - 1 :
      local.curr_1203.code == ">"
        ? local.iter_1202.tape_ptr == length(local.iter_1202.tape) - 1 ? 0 : local.iter_1202.tape_ptr + 1
        : local.iter_1202.tape_ptr)

    code_ptr = 1 + (
      local.curr_1203.code == "["
        ? local.iter_1202.tape[local.iter_1202.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1202.code_ptr)] : local.iter_1202.code_ptr :
      local.curr_1203.code == "]"
        ? local.iter_1202.tape[local.iter_1202.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1202.code_ptr)] : local.iter_1202.code_ptr
        : local.iter_1202.code_ptr)

    steps_taken = 1 + local.iter_1202.steps_taken
  }
}

locals {
  end_of_code_1204 = try(local.iter_1203.code_ptr >= length(var.code), true)

  curr_1204 = local.end_of_code_1204 ? null : {
    code = substr(var.code, local.iter_1203.code_ptr, 1)
    input = substr(var.code, local.iter_1203.code_ptr, 1) == "," ? substr(local.iter_1203.input, 0, 1) : null
  }

  iter_1204 = local.end_of_code_1204 ? local.iter_1203 : {
    input = (local.curr_1204.code == ","
      ? substr(local.iter_1203.input, 1, -1)
      : local.iter_1203.input)

    output = (local.curr_1204.code == "."
      ? "${local.iter_1203.output}${jsondecode(format("\"\\u%04x\"", local.iter_1203.tape[local.iter_1203.tape_ptr]))}"
      : local.iter_1203.output)
    
    tape = (
      local.curr_1204.code == "+"
        ? [for i, b in local.iter_1203.tape : (i == local.iter_1203.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1204.code == "-"
        ? [for i, b in local.iter_1203.tape : (i == local.iter_1203.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1204.code == ","
        ? [for i, b in local.iter_1203.tape : (i == local.iter_1203.tape_ptr ? local.ascii_lookup[local.curr_1204.input] : b)]
        : local.iter_1203.tape)

    tape_ptr = (
      local.curr_1204.code == "<"
        ? local.iter_1203.tape_ptr == 0 ? length(local.iter_1203.tape) - 1 : local.iter_1203.tape_ptr - 1 :
      local.curr_1204.code == ">"
        ? local.iter_1203.tape_ptr == length(local.iter_1203.tape) - 1 ? 0 : local.iter_1203.tape_ptr + 1
        : local.iter_1203.tape_ptr)

    code_ptr = 1 + (
      local.curr_1204.code == "["
        ? local.iter_1203.tape[local.iter_1203.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1203.code_ptr)] : local.iter_1203.code_ptr :
      local.curr_1204.code == "]"
        ? local.iter_1203.tape[local.iter_1203.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1203.code_ptr)] : local.iter_1203.code_ptr
        : local.iter_1203.code_ptr)

    steps_taken = 1 + local.iter_1203.steps_taken
  }
}

locals {
  end_of_code_1205 = try(local.iter_1204.code_ptr >= length(var.code), true)

  curr_1205 = local.end_of_code_1205 ? null : {
    code = substr(var.code, local.iter_1204.code_ptr, 1)
    input = substr(var.code, local.iter_1204.code_ptr, 1) == "," ? substr(local.iter_1204.input, 0, 1) : null
  }

  iter_1205 = local.end_of_code_1205 ? local.iter_1204 : {
    input = (local.curr_1205.code == ","
      ? substr(local.iter_1204.input, 1, -1)
      : local.iter_1204.input)

    output = (local.curr_1205.code == "."
      ? "${local.iter_1204.output}${jsondecode(format("\"\\u%04x\"", local.iter_1204.tape[local.iter_1204.tape_ptr]))}"
      : local.iter_1204.output)
    
    tape = (
      local.curr_1205.code == "+"
        ? [for i, b in local.iter_1204.tape : (i == local.iter_1204.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1205.code == "-"
        ? [for i, b in local.iter_1204.tape : (i == local.iter_1204.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1205.code == ","
        ? [for i, b in local.iter_1204.tape : (i == local.iter_1204.tape_ptr ? local.ascii_lookup[local.curr_1205.input] : b)]
        : local.iter_1204.tape)

    tape_ptr = (
      local.curr_1205.code == "<"
        ? local.iter_1204.tape_ptr == 0 ? length(local.iter_1204.tape) - 1 : local.iter_1204.tape_ptr - 1 :
      local.curr_1205.code == ">"
        ? local.iter_1204.tape_ptr == length(local.iter_1204.tape) - 1 ? 0 : local.iter_1204.tape_ptr + 1
        : local.iter_1204.tape_ptr)

    code_ptr = 1 + (
      local.curr_1205.code == "["
        ? local.iter_1204.tape[local.iter_1204.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1204.code_ptr)] : local.iter_1204.code_ptr :
      local.curr_1205.code == "]"
        ? local.iter_1204.tape[local.iter_1204.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1204.code_ptr)] : local.iter_1204.code_ptr
        : local.iter_1204.code_ptr)

    steps_taken = 1 + local.iter_1204.steps_taken
  }
}

locals {
  end_of_code_1206 = try(local.iter_1205.code_ptr >= length(var.code), true)

  curr_1206 = local.end_of_code_1206 ? null : {
    code = substr(var.code, local.iter_1205.code_ptr, 1)
    input = substr(var.code, local.iter_1205.code_ptr, 1) == "," ? substr(local.iter_1205.input, 0, 1) : null
  }

  iter_1206 = local.end_of_code_1206 ? local.iter_1205 : {
    input = (local.curr_1206.code == ","
      ? substr(local.iter_1205.input, 1, -1)
      : local.iter_1205.input)

    output = (local.curr_1206.code == "."
      ? "${local.iter_1205.output}${jsondecode(format("\"\\u%04x\"", local.iter_1205.tape[local.iter_1205.tape_ptr]))}"
      : local.iter_1205.output)
    
    tape = (
      local.curr_1206.code == "+"
        ? [for i, b in local.iter_1205.tape : (i == local.iter_1205.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1206.code == "-"
        ? [for i, b in local.iter_1205.tape : (i == local.iter_1205.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1206.code == ","
        ? [for i, b in local.iter_1205.tape : (i == local.iter_1205.tape_ptr ? local.ascii_lookup[local.curr_1206.input] : b)]
        : local.iter_1205.tape)

    tape_ptr = (
      local.curr_1206.code == "<"
        ? local.iter_1205.tape_ptr == 0 ? length(local.iter_1205.tape) - 1 : local.iter_1205.tape_ptr - 1 :
      local.curr_1206.code == ">"
        ? local.iter_1205.tape_ptr == length(local.iter_1205.tape) - 1 ? 0 : local.iter_1205.tape_ptr + 1
        : local.iter_1205.tape_ptr)

    code_ptr = 1 + (
      local.curr_1206.code == "["
        ? local.iter_1205.tape[local.iter_1205.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1205.code_ptr)] : local.iter_1205.code_ptr :
      local.curr_1206.code == "]"
        ? local.iter_1205.tape[local.iter_1205.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1205.code_ptr)] : local.iter_1205.code_ptr
        : local.iter_1205.code_ptr)

    steps_taken = 1 + local.iter_1205.steps_taken
  }
}

locals {
  end_of_code_1207 = try(local.iter_1206.code_ptr >= length(var.code), true)

  curr_1207 = local.end_of_code_1207 ? null : {
    code = substr(var.code, local.iter_1206.code_ptr, 1)
    input = substr(var.code, local.iter_1206.code_ptr, 1) == "," ? substr(local.iter_1206.input, 0, 1) : null
  }

  iter_1207 = local.end_of_code_1207 ? local.iter_1206 : {
    input = (local.curr_1207.code == ","
      ? substr(local.iter_1206.input, 1, -1)
      : local.iter_1206.input)

    output = (local.curr_1207.code == "."
      ? "${local.iter_1206.output}${jsondecode(format("\"\\u%04x\"", local.iter_1206.tape[local.iter_1206.tape_ptr]))}"
      : local.iter_1206.output)
    
    tape = (
      local.curr_1207.code == "+"
        ? [for i, b in local.iter_1206.tape : (i == local.iter_1206.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1207.code == "-"
        ? [for i, b in local.iter_1206.tape : (i == local.iter_1206.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1207.code == ","
        ? [for i, b in local.iter_1206.tape : (i == local.iter_1206.tape_ptr ? local.ascii_lookup[local.curr_1207.input] : b)]
        : local.iter_1206.tape)

    tape_ptr = (
      local.curr_1207.code == "<"
        ? local.iter_1206.tape_ptr == 0 ? length(local.iter_1206.tape) - 1 : local.iter_1206.tape_ptr - 1 :
      local.curr_1207.code == ">"
        ? local.iter_1206.tape_ptr == length(local.iter_1206.tape) - 1 ? 0 : local.iter_1206.tape_ptr + 1
        : local.iter_1206.tape_ptr)

    code_ptr = 1 + (
      local.curr_1207.code == "["
        ? local.iter_1206.tape[local.iter_1206.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1206.code_ptr)] : local.iter_1206.code_ptr :
      local.curr_1207.code == "]"
        ? local.iter_1206.tape[local.iter_1206.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1206.code_ptr)] : local.iter_1206.code_ptr
        : local.iter_1206.code_ptr)

    steps_taken = 1 + local.iter_1206.steps_taken
  }
}

locals {
  end_of_code_1208 = try(local.iter_1207.code_ptr >= length(var.code), true)

  curr_1208 = local.end_of_code_1208 ? null : {
    code = substr(var.code, local.iter_1207.code_ptr, 1)
    input = substr(var.code, local.iter_1207.code_ptr, 1) == "," ? substr(local.iter_1207.input, 0, 1) : null
  }

  iter_1208 = local.end_of_code_1208 ? local.iter_1207 : {
    input = (local.curr_1208.code == ","
      ? substr(local.iter_1207.input, 1, -1)
      : local.iter_1207.input)

    output = (local.curr_1208.code == "."
      ? "${local.iter_1207.output}${jsondecode(format("\"\\u%04x\"", local.iter_1207.tape[local.iter_1207.tape_ptr]))}"
      : local.iter_1207.output)
    
    tape = (
      local.curr_1208.code == "+"
        ? [for i, b in local.iter_1207.tape : (i == local.iter_1207.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1208.code == "-"
        ? [for i, b in local.iter_1207.tape : (i == local.iter_1207.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1208.code == ","
        ? [for i, b in local.iter_1207.tape : (i == local.iter_1207.tape_ptr ? local.ascii_lookup[local.curr_1208.input] : b)]
        : local.iter_1207.tape)

    tape_ptr = (
      local.curr_1208.code == "<"
        ? local.iter_1207.tape_ptr == 0 ? length(local.iter_1207.tape) - 1 : local.iter_1207.tape_ptr - 1 :
      local.curr_1208.code == ">"
        ? local.iter_1207.tape_ptr == length(local.iter_1207.tape) - 1 ? 0 : local.iter_1207.tape_ptr + 1
        : local.iter_1207.tape_ptr)

    code_ptr = 1 + (
      local.curr_1208.code == "["
        ? local.iter_1207.tape[local.iter_1207.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1207.code_ptr)] : local.iter_1207.code_ptr :
      local.curr_1208.code == "]"
        ? local.iter_1207.tape[local.iter_1207.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1207.code_ptr)] : local.iter_1207.code_ptr
        : local.iter_1207.code_ptr)

    steps_taken = 1 + local.iter_1207.steps_taken
  }
}

locals {
  end_of_code_1209 = try(local.iter_1208.code_ptr >= length(var.code), true)

  curr_1209 = local.end_of_code_1209 ? null : {
    code = substr(var.code, local.iter_1208.code_ptr, 1)
    input = substr(var.code, local.iter_1208.code_ptr, 1) == "," ? substr(local.iter_1208.input, 0, 1) : null
  }

  iter_1209 = local.end_of_code_1209 ? local.iter_1208 : {
    input = (local.curr_1209.code == ","
      ? substr(local.iter_1208.input, 1, -1)
      : local.iter_1208.input)

    output = (local.curr_1209.code == "."
      ? "${local.iter_1208.output}${jsondecode(format("\"\\u%04x\"", local.iter_1208.tape[local.iter_1208.tape_ptr]))}"
      : local.iter_1208.output)
    
    tape = (
      local.curr_1209.code == "+"
        ? [for i, b in local.iter_1208.tape : (i == local.iter_1208.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1209.code == "-"
        ? [for i, b in local.iter_1208.tape : (i == local.iter_1208.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1209.code == ","
        ? [for i, b in local.iter_1208.tape : (i == local.iter_1208.tape_ptr ? local.ascii_lookup[local.curr_1209.input] : b)]
        : local.iter_1208.tape)

    tape_ptr = (
      local.curr_1209.code == "<"
        ? local.iter_1208.tape_ptr == 0 ? length(local.iter_1208.tape) - 1 : local.iter_1208.tape_ptr - 1 :
      local.curr_1209.code == ">"
        ? local.iter_1208.tape_ptr == length(local.iter_1208.tape) - 1 ? 0 : local.iter_1208.tape_ptr + 1
        : local.iter_1208.tape_ptr)

    code_ptr = 1 + (
      local.curr_1209.code == "["
        ? local.iter_1208.tape[local.iter_1208.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1208.code_ptr)] : local.iter_1208.code_ptr :
      local.curr_1209.code == "]"
        ? local.iter_1208.tape[local.iter_1208.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1208.code_ptr)] : local.iter_1208.code_ptr
        : local.iter_1208.code_ptr)

    steps_taken = 1 + local.iter_1208.steps_taken
  }
}

locals {
  end_of_code_1210 = try(local.iter_1209.code_ptr >= length(var.code), true)

  curr_1210 = local.end_of_code_1210 ? null : {
    code = substr(var.code, local.iter_1209.code_ptr, 1)
    input = substr(var.code, local.iter_1209.code_ptr, 1) == "," ? substr(local.iter_1209.input, 0, 1) : null
  }

  iter_1210 = local.end_of_code_1210 ? local.iter_1209 : {
    input = (local.curr_1210.code == ","
      ? substr(local.iter_1209.input, 1, -1)
      : local.iter_1209.input)

    output = (local.curr_1210.code == "."
      ? "${local.iter_1209.output}${jsondecode(format("\"\\u%04x\"", local.iter_1209.tape[local.iter_1209.tape_ptr]))}"
      : local.iter_1209.output)
    
    tape = (
      local.curr_1210.code == "+"
        ? [for i, b in local.iter_1209.tape : (i == local.iter_1209.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1210.code == "-"
        ? [for i, b in local.iter_1209.tape : (i == local.iter_1209.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1210.code == ","
        ? [for i, b in local.iter_1209.tape : (i == local.iter_1209.tape_ptr ? local.ascii_lookup[local.curr_1210.input] : b)]
        : local.iter_1209.tape)

    tape_ptr = (
      local.curr_1210.code == "<"
        ? local.iter_1209.tape_ptr == 0 ? length(local.iter_1209.tape) - 1 : local.iter_1209.tape_ptr - 1 :
      local.curr_1210.code == ">"
        ? local.iter_1209.tape_ptr == length(local.iter_1209.tape) - 1 ? 0 : local.iter_1209.tape_ptr + 1
        : local.iter_1209.tape_ptr)

    code_ptr = 1 + (
      local.curr_1210.code == "["
        ? local.iter_1209.tape[local.iter_1209.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1209.code_ptr)] : local.iter_1209.code_ptr :
      local.curr_1210.code == "]"
        ? local.iter_1209.tape[local.iter_1209.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1209.code_ptr)] : local.iter_1209.code_ptr
        : local.iter_1209.code_ptr)

    steps_taken = 1 + local.iter_1209.steps_taken
  }
}

locals {
  end_of_code_1211 = try(local.iter_1210.code_ptr >= length(var.code), true)

  curr_1211 = local.end_of_code_1211 ? null : {
    code = substr(var.code, local.iter_1210.code_ptr, 1)
    input = substr(var.code, local.iter_1210.code_ptr, 1) == "," ? substr(local.iter_1210.input, 0, 1) : null
  }

  iter_1211 = local.end_of_code_1211 ? local.iter_1210 : {
    input = (local.curr_1211.code == ","
      ? substr(local.iter_1210.input, 1, -1)
      : local.iter_1210.input)

    output = (local.curr_1211.code == "."
      ? "${local.iter_1210.output}${jsondecode(format("\"\\u%04x\"", local.iter_1210.tape[local.iter_1210.tape_ptr]))}"
      : local.iter_1210.output)
    
    tape = (
      local.curr_1211.code == "+"
        ? [for i, b in local.iter_1210.tape : (i == local.iter_1210.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1211.code == "-"
        ? [for i, b in local.iter_1210.tape : (i == local.iter_1210.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1211.code == ","
        ? [for i, b in local.iter_1210.tape : (i == local.iter_1210.tape_ptr ? local.ascii_lookup[local.curr_1211.input] : b)]
        : local.iter_1210.tape)

    tape_ptr = (
      local.curr_1211.code == "<"
        ? local.iter_1210.tape_ptr == 0 ? length(local.iter_1210.tape) - 1 : local.iter_1210.tape_ptr - 1 :
      local.curr_1211.code == ">"
        ? local.iter_1210.tape_ptr == length(local.iter_1210.tape) - 1 ? 0 : local.iter_1210.tape_ptr + 1
        : local.iter_1210.tape_ptr)

    code_ptr = 1 + (
      local.curr_1211.code == "["
        ? local.iter_1210.tape[local.iter_1210.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1210.code_ptr)] : local.iter_1210.code_ptr :
      local.curr_1211.code == "]"
        ? local.iter_1210.tape[local.iter_1210.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1210.code_ptr)] : local.iter_1210.code_ptr
        : local.iter_1210.code_ptr)

    steps_taken = 1 + local.iter_1210.steps_taken
  }
}

locals {
  end_of_code_1212 = try(local.iter_1211.code_ptr >= length(var.code), true)

  curr_1212 = local.end_of_code_1212 ? null : {
    code = substr(var.code, local.iter_1211.code_ptr, 1)
    input = substr(var.code, local.iter_1211.code_ptr, 1) == "," ? substr(local.iter_1211.input, 0, 1) : null
  }

  iter_1212 = local.end_of_code_1212 ? local.iter_1211 : {
    input = (local.curr_1212.code == ","
      ? substr(local.iter_1211.input, 1, -1)
      : local.iter_1211.input)

    output = (local.curr_1212.code == "."
      ? "${local.iter_1211.output}${jsondecode(format("\"\\u%04x\"", local.iter_1211.tape[local.iter_1211.tape_ptr]))}"
      : local.iter_1211.output)
    
    tape = (
      local.curr_1212.code == "+"
        ? [for i, b in local.iter_1211.tape : (i == local.iter_1211.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1212.code == "-"
        ? [for i, b in local.iter_1211.tape : (i == local.iter_1211.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1212.code == ","
        ? [for i, b in local.iter_1211.tape : (i == local.iter_1211.tape_ptr ? local.ascii_lookup[local.curr_1212.input] : b)]
        : local.iter_1211.tape)

    tape_ptr = (
      local.curr_1212.code == "<"
        ? local.iter_1211.tape_ptr == 0 ? length(local.iter_1211.tape) - 1 : local.iter_1211.tape_ptr - 1 :
      local.curr_1212.code == ">"
        ? local.iter_1211.tape_ptr == length(local.iter_1211.tape) - 1 ? 0 : local.iter_1211.tape_ptr + 1
        : local.iter_1211.tape_ptr)

    code_ptr = 1 + (
      local.curr_1212.code == "["
        ? local.iter_1211.tape[local.iter_1211.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1211.code_ptr)] : local.iter_1211.code_ptr :
      local.curr_1212.code == "]"
        ? local.iter_1211.tape[local.iter_1211.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1211.code_ptr)] : local.iter_1211.code_ptr
        : local.iter_1211.code_ptr)

    steps_taken = 1 + local.iter_1211.steps_taken
  }
}

locals {
  end_of_code_1213 = try(local.iter_1212.code_ptr >= length(var.code), true)

  curr_1213 = local.end_of_code_1213 ? null : {
    code = substr(var.code, local.iter_1212.code_ptr, 1)
    input = substr(var.code, local.iter_1212.code_ptr, 1) == "," ? substr(local.iter_1212.input, 0, 1) : null
  }

  iter_1213 = local.end_of_code_1213 ? local.iter_1212 : {
    input = (local.curr_1213.code == ","
      ? substr(local.iter_1212.input, 1, -1)
      : local.iter_1212.input)

    output = (local.curr_1213.code == "."
      ? "${local.iter_1212.output}${jsondecode(format("\"\\u%04x\"", local.iter_1212.tape[local.iter_1212.tape_ptr]))}"
      : local.iter_1212.output)
    
    tape = (
      local.curr_1213.code == "+"
        ? [for i, b in local.iter_1212.tape : (i == local.iter_1212.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1213.code == "-"
        ? [for i, b in local.iter_1212.tape : (i == local.iter_1212.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1213.code == ","
        ? [for i, b in local.iter_1212.tape : (i == local.iter_1212.tape_ptr ? local.ascii_lookup[local.curr_1213.input] : b)]
        : local.iter_1212.tape)

    tape_ptr = (
      local.curr_1213.code == "<"
        ? local.iter_1212.tape_ptr == 0 ? length(local.iter_1212.tape) - 1 : local.iter_1212.tape_ptr - 1 :
      local.curr_1213.code == ">"
        ? local.iter_1212.tape_ptr == length(local.iter_1212.tape) - 1 ? 0 : local.iter_1212.tape_ptr + 1
        : local.iter_1212.tape_ptr)

    code_ptr = 1 + (
      local.curr_1213.code == "["
        ? local.iter_1212.tape[local.iter_1212.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1212.code_ptr)] : local.iter_1212.code_ptr :
      local.curr_1213.code == "]"
        ? local.iter_1212.tape[local.iter_1212.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1212.code_ptr)] : local.iter_1212.code_ptr
        : local.iter_1212.code_ptr)

    steps_taken = 1 + local.iter_1212.steps_taken
  }
}

locals {
  end_of_code_1214 = try(local.iter_1213.code_ptr >= length(var.code), true)

  curr_1214 = local.end_of_code_1214 ? null : {
    code = substr(var.code, local.iter_1213.code_ptr, 1)
    input = substr(var.code, local.iter_1213.code_ptr, 1) == "," ? substr(local.iter_1213.input, 0, 1) : null
  }

  iter_1214 = local.end_of_code_1214 ? local.iter_1213 : {
    input = (local.curr_1214.code == ","
      ? substr(local.iter_1213.input, 1, -1)
      : local.iter_1213.input)

    output = (local.curr_1214.code == "."
      ? "${local.iter_1213.output}${jsondecode(format("\"\\u%04x\"", local.iter_1213.tape[local.iter_1213.tape_ptr]))}"
      : local.iter_1213.output)
    
    tape = (
      local.curr_1214.code == "+"
        ? [for i, b in local.iter_1213.tape : (i == local.iter_1213.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1214.code == "-"
        ? [for i, b in local.iter_1213.tape : (i == local.iter_1213.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1214.code == ","
        ? [for i, b in local.iter_1213.tape : (i == local.iter_1213.tape_ptr ? local.ascii_lookup[local.curr_1214.input] : b)]
        : local.iter_1213.tape)

    tape_ptr = (
      local.curr_1214.code == "<"
        ? local.iter_1213.tape_ptr == 0 ? length(local.iter_1213.tape) - 1 : local.iter_1213.tape_ptr - 1 :
      local.curr_1214.code == ">"
        ? local.iter_1213.tape_ptr == length(local.iter_1213.tape) - 1 ? 0 : local.iter_1213.tape_ptr + 1
        : local.iter_1213.tape_ptr)

    code_ptr = 1 + (
      local.curr_1214.code == "["
        ? local.iter_1213.tape[local.iter_1213.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1213.code_ptr)] : local.iter_1213.code_ptr :
      local.curr_1214.code == "]"
        ? local.iter_1213.tape[local.iter_1213.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1213.code_ptr)] : local.iter_1213.code_ptr
        : local.iter_1213.code_ptr)

    steps_taken = 1 + local.iter_1213.steps_taken
  }
}

locals {
  end_of_code_1215 = try(local.iter_1214.code_ptr >= length(var.code), true)

  curr_1215 = local.end_of_code_1215 ? null : {
    code = substr(var.code, local.iter_1214.code_ptr, 1)
    input = substr(var.code, local.iter_1214.code_ptr, 1) == "," ? substr(local.iter_1214.input, 0, 1) : null
  }

  iter_1215 = local.end_of_code_1215 ? local.iter_1214 : {
    input = (local.curr_1215.code == ","
      ? substr(local.iter_1214.input, 1, -1)
      : local.iter_1214.input)

    output = (local.curr_1215.code == "."
      ? "${local.iter_1214.output}${jsondecode(format("\"\\u%04x\"", local.iter_1214.tape[local.iter_1214.tape_ptr]))}"
      : local.iter_1214.output)
    
    tape = (
      local.curr_1215.code == "+"
        ? [for i, b in local.iter_1214.tape : (i == local.iter_1214.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1215.code == "-"
        ? [for i, b in local.iter_1214.tape : (i == local.iter_1214.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1215.code == ","
        ? [for i, b in local.iter_1214.tape : (i == local.iter_1214.tape_ptr ? local.ascii_lookup[local.curr_1215.input] : b)]
        : local.iter_1214.tape)

    tape_ptr = (
      local.curr_1215.code == "<"
        ? local.iter_1214.tape_ptr == 0 ? length(local.iter_1214.tape) - 1 : local.iter_1214.tape_ptr - 1 :
      local.curr_1215.code == ">"
        ? local.iter_1214.tape_ptr == length(local.iter_1214.tape) - 1 ? 0 : local.iter_1214.tape_ptr + 1
        : local.iter_1214.tape_ptr)

    code_ptr = 1 + (
      local.curr_1215.code == "["
        ? local.iter_1214.tape[local.iter_1214.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1214.code_ptr)] : local.iter_1214.code_ptr :
      local.curr_1215.code == "]"
        ? local.iter_1214.tape[local.iter_1214.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1214.code_ptr)] : local.iter_1214.code_ptr
        : local.iter_1214.code_ptr)

    steps_taken = 1 + local.iter_1214.steps_taken
  }
}

locals {
  end_of_code_1216 = try(local.iter_1215.code_ptr >= length(var.code), true)

  curr_1216 = local.end_of_code_1216 ? null : {
    code = substr(var.code, local.iter_1215.code_ptr, 1)
    input = substr(var.code, local.iter_1215.code_ptr, 1) == "," ? substr(local.iter_1215.input, 0, 1) : null
  }

  iter_1216 = local.end_of_code_1216 ? local.iter_1215 : {
    input = (local.curr_1216.code == ","
      ? substr(local.iter_1215.input, 1, -1)
      : local.iter_1215.input)

    output = (local.curr_1216.code == "."
      ? "${local.iter_1215.output}${jsondecode(format("\"\\u%04x\"", local.iter_1215.tape[local.iter_1215.tape_ptr]))}"
      : local.iter_1215.output)
    
    tape = (
      local.curr_1216.code == "+"
        ? [for i, b in local.iter_1215.tape : (i == local.iter_1215.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1216.code == "-"
        ? [for i, b in local.iter_1215.tape : (i == local.iter_1215.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1216.code == ","
        ? [for i, b in local.iter_1215.tape : (i == local.iter_1215.tape_ptr ? local.ascii_lookup[local.curr_1216.input] : b)]
        : local.iter_1215.tape)

    tape_ptr = (
      local.curr_1216.code == "<"
        ? local.iter_1215.tape_ptr == 0 ? length(local.iter_1215.tape) - 1 : local.iter_1215.tape_ptr - 1 :
      local.curr_1216.code == ">"
        ? local.iter_1215.tape_ptr == length(local.iter_1215.tape) - 1 ? 0 : local.iter_1215.tape_ptr + 1
        : local.iter_1215.tape_ptr)

    code_ptr = 1 + (
      local.curr_1216.code == "["
        ? local.iter_1215.tape[local.iter_1215.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1215.code_ptr)] : local.iter_1215.code_ptr :
      local.curr_1216.code == "]"
        ? local.iter_1215.tape[local.iter_1215.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1215.code_ptr)] : local.iter_1215.code_ptr
        : local.iter_1215.code_ptr)

    steps_taken = 1 + local.iter_1215.steps_taken
  }
}

locals {
  end_of_code_1217 = try(local.iter_1216.code_ptr >= length(var.code), true)

  curr_1217 = local.end_of_code_1217 ? null : {
    code = substr(var.code, local.iter_1216.code_ptr, 1)
    input = substr(var.code, local.iter_1216.code_ptr, 1) == "," ? substr(local.iter_1216.input, 0, 1) : null
  }

  iter_1217 = local.end_of_code_1217 ? local.iter_1216 : {
    input = (local.curr_1217.code == ","
      ? substr(local.iter_1216.input, 1, -1)
      : local.iter_1216.input)

    output = (local.curr_1217.code == "."
      ? "${local.iter_1216.output}${jsondecode(format("\"\\u%04x\"", local.iter_1216.tape[local.iter_1216.tape_ptr]))}"
      : local.iter_1216.output)
    
    tape = (
      local.curr_1217.code == "+"
        ? [for i, b in local.iter_1216.tape : (i == local.iter_1216.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1217.code == "-"
        ? [for i, b in local.iter_1216.tape : (i == local.iter_1216.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1217.code == ","
        ? [for i, b in local.iter_1216.tape : (i == local.iter_1216.tape_ptr ? local.ascii_lookup[local.curr_1217.input] : b)]
        : local.iter_1216.tape)

    tape_ptr = (
      local.curr_1217.code == "<"
        ? local.iter_1216.tape_ptr == 0 ? length(local.iter_1216.tape) - 1 : local.iter_1216.tape_ptr - 1 :
      local.curr_1217.code == ">"
        ? local.iter_1216.tape_ptr == length(local.iter_1216.tape) - 1 ? 0 : local.iter_1216.tape_ptr + 1
        : local.iter_1216.tape_ptr)

    code_ptr = 1 + (
      local.curr_1217.code == "["
        ? local.iter_1216.tape[local.iter_1216.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1216.code_ptr)] : local.iter_1216.code_ptr :
      local.curr_1217.code == "]"
        ? local.iter_1216.tape[local.iter_1216.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1216.code_ptr)] : local.iter_1216.code_ptr
        : local.iter_1216.code_ptr)

    steps_taken = 1 + local.iter_1216.steps_taken
  }
}

locals {
  end_of_code_1218 = try(local.iter_1217.code_ptr >= length(var.code), true)

  curr_1218 = local.end_of_code_1218 ? null : {
    code = substr(var.code, local.iter_1217.code_ptr, 1)
    input = substr(var.code, local.iter_1217.code_ptr, 1) == "," ? substr(local.iter_1217.input, 0, 1) : null
  }

  iter_1218 = local.end_of_code_1218 ? local.iter_1217 : {
    input = (local.curr_1218.code == ","
      ? substr(local.iter_1217.input, 1, -1)
      : local.iter_1217.input)

    output = (local.curr_1218.code == "."
      ? "${local.iter_1217.output}${jsondecode(format("\"\\u%04x\"", local.iter_1217.tape[local.iter_1217.tape_ptr]))}"
      : local.iter_1217.output)
    
    tape = (
      local.curr_1218.code == "+"
        ? [for i, b in local.iter_1217.tape : (i == local.iter_1217.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1218.code == "-"
        ? [for i, b in local.iter_1217.tape : (i == local.iter_1217.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1218.code == ","
        ? [for i, b in local.iter_1217.tape : (i == local.iter_1217.tape_ptr ? local.ascii_lookup[local.curr_1218.input] : b)]
        : local.iter_1217.tape)

    tape_ptr = (
      local.curr_1218.code == "<"
        ? local.iter_1217.tape_ptr == 0 ? length(local.iter_1217.tape) - 1 : local.iter_1217.tape_ptr - 1 :
      local.curr_1218.code == ">"
        ? local.iter_1217.tape_ptr == length(local.iter_1217.tape) - 1 ? 0 : local.iter_1217.tape_ptr + 1
        : local.iter_1217.tape_ptr)

    code_ptr = 1 + (
      local.curr_1218.code == "["
        ? local.iter_1217.tape[local.iter_1217.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1217.code_ptr)] : local.iter_1217.code_ptr :
      local.curr_1218.code == "]"
        ? local.iter_1217.tape[local.iter_1217.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1217.code_ptr)] : local.iter_1217.code_ptr
        : local.iter_1217.code_ptr)

    steps_taken = 1 + local.iter_1217.steps_taken
  }
}

locals {
  end_of_code_1219 = try(local.iter_1218.code_ptr >= length(var.code), true)

  curr_1219 = local.end_of_code_1219 ? null : {
    code = substr(var.code, local.iter_1218.code_ptr, 1)
    input = substr(var.code, local.iter_1218.code_ptr, 1) == "," ? substr(local.iter_1218.input, 0, 1) : null
  }

  iter_1219 = local.end_of_code_1219 ? local.iter_1218 : {
    input = (local.curr_1219.code == ","
      ? substr(local.iter_1218.input, 1, -1)
      : local.iter_1218.input)

    output = (local.curr_1219.code == "."
      ? "${local.iter_1218.output}${jsondecode(format("\"\\u%04x\"", local.iter_1218.tape[local.iter_1218.tape_ptr]))}"
      : local.iter_1218.output)
    
    tape = (
      local.curr_1219.code == "+"
        ? [for i, b in local.iter_1218.tape : (i == local.iter_1218.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1219.code == "-"
        ? [for i, b in local.iter_1218.tape : (i == local.iter_1218.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1219.code == ","
        ? [for i, b in local.iter_1218.tape : (i == local.iter_1218.tape_ptr ? local.ascii_lookup[local.curr_1219.input] : b)]
        : local.iter_1218.tape)

    tape_ptr = (
      local.curr_1219.code == "<"
        ? local.iter_1218.tape_ptr == 0 ? length(local.iter_1218.tape) - 1 : local.iter_1218.tape_ptr - 1 :
      local.curr_1219.code == ">"
        ? local.iter_1218.tape_ptr == length(local.iter_1218.tape) - 1 ? 0 : local.iter_1218.tape_ptr + 1
        : local.iter_1218.tape_ptr)

    code_ptr = 1 + (
      local.curr_1219.code == "["
        ? local.iter_1218.tape[local.iter_1218.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1218.code_ptr)] : local.iter_1218.code_ptr :
      local.curr_1219.code == "]"
        ? local.iter_1218.tape[local.iter_1218.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1218.code_ptr)] : local.iter_1218.code_ptr
        : local.iter_1218.code_ptr)

    steps_taken = 1 + local.iter_1218.steps_taken
  }
}

locals {
  end_of_code_1220 = try(local.iter_1219.code_ptr >= length(var.code), true)

  curr_1220 = local.end_of_code_1220 ? null : {
    code = substr(var.code, local.iter_1219.code_ptr, 1)
    input = substr(var.code, local.iter_1219.code_ptr, 1) == "," ? substr(local.iter_1219.input, 0, 1) : null
  }

  iter_1220 = local.end_of_code_1220 ? local.iter_1219 : {
    input = (local.curr_1220.code == ","
      ? substr(local.iter_1219.input, 1, -1)
      : local.iter_1219.input)

    output = (local.curr_1220.code == "."
      ? "${local.iter_1219.output}${jsondecode(format("\"\\u%04x\"", local.iter_1219.tape[local.iter_1219.tape_ptr]))}"
      : local.iter_1219.output)
    
    tape = (
      local.curr_1220.code == "+"
        ? [for i, b in local.iter_1219.tape : (i == local.iter_1219.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1220.code == "-"
        ? [for i, b in local.iter_1219.tape : (i == local.iter_1219.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1220.code == ","
        ? [for i, b in local.iter_1219.tape : (i == local.iter_1219.tape_ptr ? local.ascii_lookup[local.curr_1220.input] : b)]
        : local.iter_1219.tape)

    tape_ptr = (
      local.curr_1220.code == "<"
        ? local.iter_1219.tape_ptr == 0 ? length(local.iter_1219.tape) - 1 : local.iter_1219.tape_ptr - 1 :
      local.curr_1220.code == ">"
        ? local.iter_1219.tape_ptr == length(local.iter_1219.tape) - 1 ? 0 : local.iter_1219.tape_ptr + 1
        : local.iter_1219.tape_ptr)

    code_ptr = 1 + (
      local.curr_1220.code == "["
        ? local.iter_1219.tape[local.iter_1219.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1219.code_ptr)] : local.iter_1219.code_ptr :
      local.curr_1220.code == "]"
        ? local.iter_1219.tape[local.iter_1219.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1219.code_ptr)] : local.iter_1219.code_ptr
        : local.iter_1219.code_ptr)

    steps_taken = 1 + local.iter_1219.steps_taken
  }
}

locals {
  end_of_code_1221 = try(local.iter_1220.code_ptr >= length(var.code), true)

  curr_1221 = local.end_of_code_1221 ? null : {
    code = substr(var.code, local.iter_1220.code_ptr, 1)
    input = substr(var.code, local.iter_1220.code_ptr, 1) == "," ? substr(local.iter_1220.input, 0, 1) : null
  }

  iter_1221 = local.end_of_code_1221 ? local.iter_1220 : {
    input = (local.curr_1221.code == ","
      ? substr(local.iter_1220.input, 1, -1)
      : local.iter_1220.input)

    output = (local.curr_1221.code == "."
      ? "${local.iter_1220.output}${jsondecode(format("\"\\u%04x\"", local.iter_1220.tape[local.iter_1220.tape_ptr]))}"
      : local.iter_1220.output)
    
    tape = (
      local.curr_1221.code == "+"
        ? [for i, b in local.iter_1220.tape : (i == local.iter_1220.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1221.code == "-"
        ? [for i, b in local.iter_1220.tape : (i == local.iter_1220.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1221.code == ","
        ? [for i, b in local.iter_1220.tape : (i == local.iter_1220.tape_ptr ? local.ascii_lookup[local.curr_1221.input] : b)]
        : local.iter_1220.tape)

    tape_ptr = (
      local.curr_1221.code == "<"
        ? local.iter_1220.tape_ptr == 0 ? length(local.iter_1220.tape) - 1 : local.iter_1220.tape_ptr - 1 :
      local.curr_1221.code == ">"
        ? local.iter_1220.tape_ptr == length(local.iter_1220.tape) - 1 ? 0 : local.iter_1220.tape_ptr + 1
        : local.iter_1220.tape_ptr)

    code_ptr = 1 + (
      local.curr_1221.code == "["
        ? local.iter_1220.tape[local.iter_1220.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1220.code_ptr)] : local.iter_1220.code_ptr :
      local.curr_1221.code == "]"
        ? local.iter_1220.tape[local.iter_1220.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1220.code_ptr)] : local.iter_1220.code_ptr
        : local.iter_1220.code_ptr)

    steps_taken = 1 + local.iter_1220.steps_taken
  }
}

locals {
  end_of_code_1222 = try(local.iter_1221.code_ptr >= length(var.code), true)

  curr_1222 = local.end_of_code_1222 ? null : {
    code = substr(var.code, local.iter_1221.code_ptr, 1)
    input = substr(var.code, local.iter_1221.code_ptr, 1) == "," ? substr(local.iter_1221.input, 0, 1) : null
  }

  iter_1222 = local.end_of_code_1222 ? local.iter_1221 : {
    input = (local.curr_1222.code == ","
      ? substr(local.iter_1221.input, 1, -1)
      : local.iter_1221.input)

    output = (local.curr_1222.code == "."
      ? "${local.iter_1221.output}${jsondecode(format("\"\\u%04x\"", local.iter_1221.tape[local.iter_1221.tape_ptr]))}"
      : local.iter_1221.output)
    
    tape = (
      local.curr_1222.code == "+"
        ? [for i, b in local.iter_1221.tape : (i == local.iter_1221.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1222.code == "-"
        ? [for i, b in local.iter_1221.tape : (i == local.iter_1221.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1222.code == ","
        ? [for i, b in local.iter_1221.tape : (i == local.iter_1221.tape_ptr ? local.ascii_lookup[local.curr_1222.input] : b)]
        : local.iter_1221.tape)

    tape_ptr = (
      local.curr_1222.code == "<"
        ? local.iter_1221.tape_ptr == 0 ? length(local.iter_1221.tape) - 1 : local.iter_1221.tape_ptr - 1 :
      local.curr_1222.code == ">"
        ? local.iter_1221.tape_ptr == length(local.iter_1221.tape) - 1 ? 0 : local.iter_1221.tape_ptr + 1
        : local.iter_1221.tape_ptr)

    code_ptr = 1 + (
      local.curr_1222.code == "["
        ? local.iter_1221.tape[local.iter_1221.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1221.code_ptr)] : local.iter_1221.code_ptr :
      local.curr_1222.code == "]"
        ? local.iter_1221.tape[local.iter_1221.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1221.code_ptr)] : local.iter_1221.code_ptr
        : local.iter_1221.code_ptr)

    steps_taken = 1 + local.iter_1221.steps_taken
  }
}

locals {
  end_of_code_1223 = try(local.iter_1222.code_ptr >= length(var.code), true)

  curr_1223 = local.end_of_code_1223 ? null : {
    code = substr(var.code, local.iter_1222.code_ptr, 1)
    input = substr(var.code, local.iter_1222.code_ptr, 1) == "," ? substr(local.iter_1222.input, 0, 1) : null
  }

  iter_1223 = local.end_of_code_1223 ? local.iter_1222 : {
    input = (local.curr_1223.code == ","
      ? substr(local.iter_1222.input, 1, -1)
      : local.iter_1222.input)

    output = (local.curr_1223.code == "."
      ? "${local.iter_1222.output}${jsondecode(format("\"\\u%04x\"", local.iter_1222.tape[local.iter_1222.tape_ptr]))}"
      : local.iter_1222.output)
    
    tape = (
      local.curr_1223.code == "+"
        ? [for i, b in local.iter_1222.tape : (i == local.iter_1222.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1223.code == "-"
        ? [for i, b in local.iter_1222.tape : (i == local.iter_1222.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1223.code == ","
        ? [for i, b in local.iter_1222.tape : (i == local.iter_1222.tape_ptr ? local.ascii_lookup[local.curr_1223.input] : b)]
        : local.iter_1222.tape)

    tape_ptr = (
      local.curr_1223.code == "<"
        ? local.iter_1222.tape_ptr == 0 ? length(local.iter_1222.tape) - 1 : local.iter_1222.tape_ptr - 1 :
      local.curr_1223.code == ">"
        ? local.iter_1222.tape_ptr == length(local.iter_1222.tape) - 1 ? 0 : local.iter_1222.tape_ptr + 1
        : local.iter_1222.tape_ptr)

    code_ptr = 1 + (
      local.curr_1223.code == "["
        ? local.iter_1222.tape[local.iter_1222.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1222.code_ptr)] : local.iter_1222.code_ptr :
      local.curr_1223.code == "]"
        ? local.iter_1222.tape[local.iter_1222.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1222.code_ptr)] : local.iter_1222.code_ptr
        : local.iter_1222.code_ptr)

    steps_taken = 1 + local.iter_1222.steps_taken
  }
}

locals {
  end_of_code_1224 = try(local.iter_1223.code_ptr >= length(var.code), true)

  curr_1224 = local.end_of_code_1224 ? null : {
    code = substr(var.code, local.iter_1223.code_ptr, 1)
    input = substr(var.code, local.iter_1223.code_ptr, 1) == "," ? substr(local.iter_1223.input, 0, 1) : null
  }

  iter_1224 = local.end_of_code_1224 ? local.iter_1223 : {
    input = (local.curr_1224.code == ","
      ? substr(local.iter_1223.input, 1, -1)
      : local.iter_1223.input)

    output = (local.curr_1224.code == "."
      ? "${local.iter_1223.output}${jsondecode(format("\"\\u%04x\"", local.iter_1223.tape[local.iter_1223.tape_ptr]))}"
      : local.iter_1223.output)
    
    tape = (
      local.curr_1224.code == "+"
        ? [for i, b in local.iter_1223.tape : (i == local.iter_1223.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1224.code == "-"
        ? [for i, b in local.iter_1223.tape : (i == local.iter_1223.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1224.code == ","
        ? [for i, b in local.iter_1223.tape : (i == local.iter_1223.tape_ptr ? local.ascii_lookup[local.curr_1224.input] : b)]
        : local.iter_1223.tape)

    tape_ptr = (
      local.curr_1224.code == "<"
        ? local.iter_1223.tape_ptr == 0 ? length(local.iter_1223.tape) - 1 : local.iter_1223.tape_ptr - 1 :
      local.curr_1224.code == ">"
        ? local.iter_1223.tape_ptr == length(local.iter_1223.tape) - 1 ? 0 : local.iter_1223.tape_ptr + 1
        : local.iter_1223.tape_ptr)

    code_ptr = 1 + (
      local.curr_1224.code == "["
        ? local.iter_1223.tape[local.iter_1223.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1223.code_ptr)] : local.iter_1223.code_ptr :
      local.curr_1224.code == "]"
        ? local.iter_1223.tape[local.iter_1223.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1223.code_ptr)] : local.iter_1223.code_ptr
        : local.iter_1223.code_ptr)

    steps_taken = 1 + local.iter_1223.steps_taken
  }
}

locals {
  end_of_code_1225 = try(local.iter_1224.code_ptr >= length(var.code), true)

  curr_1225 = local.end_of_code_1225 ? null : {
    code = substr(var.code, local.iter_1224.code_ptr, 1)
    input = substr(var.code, local.iter_1224.code_ptr, 1) == "," ? substr(local.iter_1224.input, 0, 1) : null
  }

  iter_1225 = local.end_of_code_1225 ? local.iter_1224 : {
    input = (local.curr_1225.code == ","
      ? substr(local.iter_1224.input, 1, -1)
      : local.iter_1224.input)

    output = (local.curr_1225.code == "."
      ? "${local.iter_1224.output}${jsondecode(format("\"\\u%04x\"", local.iter_1224.tape[local.iter_1224.tape_ptr]))}"
      : local.iter_1224.output)
    
    tape = (
      local.curr_1225.code == "+"
        ? [for i, b in local.iter_1224.tape : (i == local.iter_1224.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1225.code == "-"
        ? [for i, b in local.iter_1224.tape : (i == local.iter_1224.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1225.code == ","
        ? [for i, b in local.iter_1224.tape : (i == local.iter_1224.tape_ptr ? local.ascii_lookup[local.curr_1225.input] : b)]
        : local.iter_1224.tape)

    tape_ptr = (
      local.curr_1225.code == "<"
        ? local.iter_1224.tape_ptr == 0 ? length(local.iter_1224.tape) - 1 : local.iter_1224.tape_ptr - 1 :
      local.curr_1225.code == ">"
        ? local.iter_1224.tape_ptr == length(local.iter_1224.tape) - 1 ? 0 : local.iter_1224.tape_ptr + 1
        : local.iter_1224.tape_ptr)

    code_ptr = 1 + (
      local.curr_1225.code == "["
        ? local.iter_1224.tape[local.iter_1224.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1224.code_ptr)] : local.iter_1224.code_ptr :
      local.curr_1225.code == "]"
        ? local.iter_1224.tape[local.iter_1224.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1224.code_ptr)] : local.iter_1224.code_ptr
        : local.iter_1224.code_ptr)

    steps_taken = 1 + local.iter_1224.steps_taken
  }
}

locals {
  end_of_code_1226 = try(local.iter_1225.code_ptr >= length(var.code), true)

  curr_1226 = local.end_of_code_1226 ? null : {
    code = substr(var.code, local.iter_1225.code_ptr, 1)
    input = substr(var.code, local.iter_1225.code_ptr, 1) == "," ? substr(local.iter_1225.input, 0, 1) : null
  }

  iter_1226 = local.end_of_code_1226 ? local.iter_1225 : {
    input = (local.curr_1226.code == ","
      ? substr(local.iter_1225.input, 1, -1)
      : local.iter_1225.input)

    output = (local.curr_1226.code == "."
      ? "${local.iter_1225.output}${jsondecode(format("\"\\u%04x\"", local.iter_1225.tape[local.iter_1225.tape_ptr]))}"
      : local.iter_1225.output)
    
    tape = (
      local.curr_1226.code == "+"
        ? [for i, b in local.iter_1225.tape : (i == local.iter_1225.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1226.code == "-"
        ? [for i, b in local.iter_1225.tape : (i == local.iter_1225.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1226.code == ","
        ? [for i, b in local.iter_1225.tape : (i == local.iter_1225.tape_ptr ? local.ascii_lookup[local.curr_1226.input] : b)]
        : local.iter_1225.tape)

    tape_ptr = (
      local.curr_1226.code == "<"
        ? local.iter_1225.tape_ptr == 0 ? length(local.iter_1225.tape) - 1 : local.iter_1225.tape_ptr - 1 :
      local.curr_1226.code == ">"
        ? local.iter_1225.tape_ptr == length(local.iter_1225.tape) - 1 ? 0 : local.iter_1225.tape_ptr + 1
        : local.iter_1225.tape_ptr)

    code_ptr = 1 + (
      local.curr_1226.code == "["
        ? local.iter_1225.tape[local.iter_1225.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1225.code_ptr)] : local.iter_1225.code_ptr :
      local.curr_1226.code == "]"
        ? local.iter_1225.tape[local.iter_1225.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1225.code_ptr)] : local.iter_1225.code_ptr
        : local.iter_1225.code_ptr)

    steps_taken = 1 + local.iter_1225.steps_taken
  }
}

locals {
  end_of_code_1227 = try(local.iter_1226.code_ptr >= length(var.code), true)

  curr_1227 = local.end_of_code_1227 ? null : {
    code = substr(var.code, local.iter_1226.code_ptr, 1)
    input = substr(var.code, local.iter_1226.code_ptr, 1) == "," ? substr(local.iter_1226.input, 0, 1) : null
  }

  iter_1227 = local.end_of_code_1227 ? local.iter_1226 : {
    input = (local.curr_1227.code == ","
      ? substr(local.iter_1226.input, 1, -1)
      : local.iter_1226.input)

    output = (local.curr_1227.code == "."
      ? "${local.iter_1226.output}${jsondecode(format("\"\\u%04x\"", local.iter_1226.tape[local.iter_1226.tape_ptr]))}"
      : local.iter_1226.output)
    
    tape = (
      local.curr_1227.code == "+"
        ? [for i, b in local.iter_1226.tape : (i == local.iter_1226.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1227.code == "-"
        ? [for i, b in local.iter_1226.tape : (i == local.iter_1226.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1227.code == ","
        ? [for i, b in local.iter_1226.tape : (i == local.iter_1226.tape_ptr ? local.ascii_lookup[local.curr_1227.input] : b)]
        : local.iter_1226.tape)

    tape_ptr = (
      local.curr_1227.code == "<"
        ? local.iter_1226.tape_ptr == 0 ? length(local.iter_1226.tape) - 1 : local.iter_1226.tape_ptr - 1 :
      local.curr_1227.code == ">"
        ? local.iter_1226.tape_ptr == length(local.iter_1226.tape) - 1 ? 0 : local.iter_1226.tape_ptr + 1
        : local.iter_1226.tape_ptr)

    code_ptr = 1 + (
      local.curr_1227.code == "["
        ? local.iter_1226.tape[local.iter_1226.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1226.code_ptr)] : local.iter_1226.code_ptr :
      local.curr_1227.code == "]"
        ? local.iter_1226.tape[local.iter_1226.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1226.code_ptr)] : local.iter_1226.code_ptr
        : local.iter_1226.code_ptr)

    steps_taken = 1 + local.iter_1226.steps_taken
  }
}

locals {
  end_of_code_1228 = try(local.iter_1227.code_ptr >= length(var.code), true)

  curr_1228 = local.end_of_code_1228 ? null : {
    code = substr(var.code, local.iter_1227.code_ptr, 1)
    input = substr(var.code, local.iter_1227.code_ptr, 1) == "," ? substr(local.iter_1227.input, 0, 1) : null
  }

  iter_1228 = local.end_of_code_1228 ? local.iter_1227 : {
    input = (local.curr_1228.code == ","
      ? substr(local.iter_1227.input, 1, -1)
      : local.iter_1227.input)

    output = (local.curr_1228.code == "."
      ? "${local.iter_1227.output}${jsondecode(format("\"\\u%04x\"", local.iter_1227.tape[local.iter_1227.tape_ptr]))}"
      : local.iter_1227.output)
    
    tape = (
      local.curr_1228.code == "+"
        ? [for i, b in local.iter_1227.tape : (i == local.iter_1227.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1228.code == "-"
        ? [for i, b in local.iter_1227.tape : (i == local.iter_1227.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1228.code == ","
        ? [for i, b in local.iter_1227.tape : (i == local.iter_1227.tape_ptr ? local.ascii_lookup[local.curr_1228.input] : b)]
        : local.iter_1227.tape)

    tape_ptr = (
      local.curr_1228.code == "<"
        ? local.iter_1227.tape_ptr == 0 ? length(local.iter_1227.tape) - 1 : local.iter_1227.tape_ptr - 1 :
      local.curr_1228.code == ">"
        ? local.iter_1227.tape_ptr == length(local.iter_1227.tape) - 1 ? 0 : local.iter_1227.tape_ptr + 1
        : local.iter_1227.tape_ptr)

    code_ptr = 1 + (
      local.curr_1228.code == "["
        ? local.iter_1227.tape[local.iter_1227.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1227.code_ptr)] : local.iter_1227.code_ptr :
      local.curr_1228.code == "]"
        ? local.iter_1227.tape[local.iter_1227.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1227.code_ptr)] : local.iter_1227.code_ptr
        : local.iter_1227.code_ptr)

    steps_taken = 1 + local.iter_1227.steps_taken
  }
}

locals {
  end_of_code_1229 = try(local.iter_1228.code_ptr >= length(var.code), true)

  curr_1229 = local.end_of_code_1229 ? null : {
    code = substr(var.code, local.iter_1228.code_ptr, 1)
    input = substr(var.code, local.iter_1228.code_ptr, 1) == "," ? substr(local.iter_1228.input, 0, 1) : null
  }

  iter_1229 = local.end_of_code_1229 ? local.iter_1228 : {
    input = (local.curr_1229.code == ","
      ? substr(local.iter_1228.input, 1, -1)
      : local.iter_1228.input)

    output = (local.curr_1229.code == "."
      ? "${local.iter_1228.output}${jsondecode(format("\"\\u%04x\"", local.iter_1228.tape[local.iter_1228.tape_ptr]))}"
      : local.iter_1228.output)
    
    tape = (
      local.curr_1229.code == "+"
        ? [for i, b in local.iter_1228.tape : (i == local.iter_1228.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1229.code == "-"
        ? [for i, b in local.iter_1228.tape : (i == local.iter_1228.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1229.code == ","
        ? [for i, b in local.iter_1228.tape : (i == local.iter_1228.tape_ptr ? local.ascii_lookup[local.curr_1229.input] : b)]
        : local.iter_1228.tape)

    tape_ptr = (
      local.curr_1229.code == "<"
        ? local.iter_1228.tape_ptr == 0 ? length(local.iter_1228.tape) - 1 : local.iter_1228.tape_ptr - 1 :
      local.curr_1229.code == ">"
        ? local.iter_1228.tape_ptr == length(local.iter_1228.tape) - 1 ? 0 : local.iter_1228.tape_ptr + 1
        : local.iter_1228.tape_ptr)

    code_ptr = 1 + (
      local.curr_1229.code == "["
        ? local.iter_1228.tape[local.iter_1228.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1228.code_ptr)] : local.iter_1228.code_ptr :
      local.curr_1229.code == "]"
        ? local.iter_1228.tape[local.iter_1228.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1228.code_ptr)] : local.iter_1228.code_ptr
        : local.iter_1228.code_ptr)

    steps_taken = 1 + local.iter_1228.steps_taken
  }
}

locals {
  end_of_code_1230 = try(local.iter_1229.code_ptr >= length(var.code), true)

  curr_1230 = local.end_of_code_1230 ? null : {
    code = substr(var.code, local.iter_1229.code_ptr, 1)
    input = substr(var.code, local.iter_1229.code_ptr, 1) == "," ? substr(local.iter_1229.input, 0, 1) : null
  }

  iter_1230 = local.end_of_code_1230 ? local.iter_1229 : {
    input = (local.curr_1230.code == ","
      ? substr(local.iter_1229.input, 1, -1)
      : local.iter_1229.input)

    output = (local.curr_1230.code == "."
      ? "${local.iter_1229.output}${jsondecode(format("\"\\u%04x\"", local.iter_1229.tape[local.iter_1229.tape_ptr]))}"
      : local.iter_1229.output)
    
    tape = (
      local.curr_1230.code == "+"
        ? [for i, b in local.iter_1229.tape : (i == local.iter_1229.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1230.code == "-"
        ? [for i, b in local.iter_1229.tape : (i == local.iter_1229.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1230.code == ","
        ? [for i, b in local.iter_1229.tape : (i == local.iter_1229.tape_ptr ? local.ascii_lookup[local.curr_1230.input] : b)]
        : local.iter_1229.tape)

    tape_ptr = (
      local.curr_1230.code == "<"
        ? local.iter_1229.tape_ptr == 0 ? length(local.iter_1229.tape) - 1 : local.iter_1229.tape_ptr - 1 :
      local.curr_1230.code == ">"
        ? local.iter_1229.tape_ptr == length(local.iter_1229.tape) - 1 ? 0 : local.iter_1229.tape_ptr + 1
        : local.iter_1229.tape_ptr)

    code_ptr = 1 + (
      local.curr_1230.code == "["
        ? local.iter_1229.tape[local.iter_1229.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1229.code_ptr)] : local.iter_1229.code_ptr :
      local.curr_1230.code == "]"
        ? local.iter_1229.tape[local.iter_1229.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1229.code_ptr)] : local.iter_1229.code_ptr
        : local.iter_1229.code_ptr)

    steps_taken = 1 + local.iter_1229.steps_taken
  }
}

locals {
  end_of_code_1231 = try(local.iter_1230.code_ptr >= length(var.code), true)

  curr_1231 = local.end_of_code_1231 ? null : {
    code = substr(var.code, local.iter_1230.code_ptr, 1)
    input = substr(var.code, local.iter_1230.code_ptr, 1) == "," ? substr(local.iter_1230.input, 0, 1) : null
  }

  iter_1231 = local.end_of_code_1231 ? local.iter_1230 : {
    input = (local.curr_1231.code == ","
      ? substr(local.iter_1230.input, 1, -1)
      : local.iter_1230.input)

    output = (local.curr_1231.code == "."
      ? "${local.iter_1230.output}${jsondecode(format("\"\\u%04x\"", local.iter_1230.tape[local.iter_1230.tape_ptr]))}"
      : local.iter_1230.output)
    
    tape = (
      local.curr_1231.code == "+"
        ? [for i, b in local.iter_1230.tape : (i == local.iter_1230.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1231.code == "-"
        ? [for i, b in local.iter_1230.tape : (i == local.iter_1230.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1231.code == ","
        ? [for i, b in local.iter_1230.tape : (i == local.iter_1230.tape_ptr ? local.ascii_lookup[local.curr_1231.input] : b)]
        : local.iter_1230.tape)

    tape_ptr = (
      local.curr_1231.code == "<"
        ? local.iter_1230.tape_ptr == 0 ? length(local.iter_1230.tape) - 1 : local.iter_1230.tape_ptr - 1 :
      local.curr_1231.code == ">"
        ? local.iter_1230.tape_ptr == length(local.iter_1230.tape) - 1 ? 0 : local.iter_1230.tape_ptr + 1
        : local.iter_1230.tape_ptr)

    code_ptr = 1 + (
      local.curr_1231.code == "["
        ? local.iter_1230.tape[local.iter_1230.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1230.code_ptr)] : local.iter_1230.code_ptr :
      local.curr_1231.code == "]"
        ? local.iter_1230.tape[local.iter_1230.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1230.code_ptr)] : local.iter_1230.code_ptr
        : local.iter_1230.code_ptr)

    steps_taken = 1 + local.iter_1230.steps_taken
  }
}

locals {
  end_of_code_1232 = try(local.iter_1231.code_ptr >= length(var.code), true)

  curr_1232 = local.end_of_code_1232 ? null : {
    code = substr(var.code, local.iter_1231.code_ptr, 1)
    input = substr(var.code, local.iter_1231.code_ptr, 1) == "," ? substr(local.iter_1231.input, 0, 1) : null
  }

  iter_1232 = local.end_of_code_1232 ? local.iter_1231 : {
    input = (local.curr_1232.code == ","
      ? substr(local.iter_1231.input, 1, -1)
      : local.iter_1231.input)

    output = (local.curr_1232.code == "."
      ? "${local.iter_1231.output}${jsondecode(format("\"\\u%04x\"", local.iter_1231.tape[local.iter_1231.tape_ptr]))}"
      : local.iter_1231.output)
    
    tape = (
      local.curr_1232.code == "+"
        ? [for i, b in local.iter_1231.tape : (i == local.iter_1231.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1232.code == "-"
        ? [for i, b in local.iter_1231.tape : (i == local.iter_1231.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1232.code == ","
        ? [for i, b in local.iter_1231.tape : (i == local.iter_1231.tape_ptr ? local.ascii_lookup[local.curr_1232.input] : b)]
        : local.iter_1231.tape)

    tape_ptr = (
      local.curr_1232.code == "<"
        ? local.iter_1231.tape_ptr == 0 ? length(local.iter_1231.tape) - 1 : local.iter_1231.tape_ptr - 1 :
      local.curr_1232.code == ">"
        ? local.iter_1231.tape_ptr == length(local.iter_1231.tape) - 1 ? 0 : local.iter_1231.tape_ptr + 1
        : local.iter_1231.tape_ptr)

    code_ptr = 1 + (
      local.curr_1232.code == "["
        ? local.iter_1231.tape[local.iter_1231.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1231.code_ptr)] : local.iter_1231.code_ptr :
      local.curr_1232.code == "]"
        ? local.iter_1231.tape[local.iter_1231.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1231.code_ptr)] : local.iter_1231.code_ptr
        : local.iter_1231.code_ptr)

    steps_taken = 1 + local.iter_1231.steps_taken
  }
}

locals {
  end_of_code_1233 = try(local.iter_1232.code_ptr >= length(var.code), true)

  curr_1233 = local.end_of_code_1233 ? null : {
    code = substr(var.code, local.iter_1232.code_ptr, 1)
    input = substr(var.code, local.iter_1232.code_ptr, 1) == "," ? substr(local.iter_1232.input, 0, 1) : null
  }

  iter_1233 = local.end_of_code_1233 ? local.iter_1232 : {
    input = (local.curr_1233.code == ","
      ? substr(local.iter_1232.input, 1, -1)
      : local.iter_1232.input)

    output = (local.curr_1233.code == "."
      ? "${local.iter_1232.output}${jsondecode(format("\"\\u%04x\"", local.iter_1232.tape[local.iter_1232.tape_ptr]))}"
      : local.iter_1232.output)
    
    tape = (
      local.curr_1233.code == "+"
        ? [for i, b in local.iter_1232.tape : (i == local.iter_1232.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1233.code == "-"
        ? [for i, b in local.iter_1232.tape : (i == local.iter_1232.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1233.code == ","
        ? [for i, b in local.iter_1232.tape : (i == local.iter_1232.tape_ptr ? local.ascii_lookup[local.curr_1233.input] : b)]
        : local.iter_1232.tape)

    tape_ptr = (
      local.curr_1233.code == "<"
        ? local.iter_1232.tape_ptr == 0 ? length(local.iter_1232.tape) - 1 : local.iter_1232.tape_ptr - 1 :
      local.curr_1233.code == ">"
        ? local.iter_1232.tape_ptr == length(local.iter_1232.tape) - 1 ? 0 : local.iter_1232.tape_ptr + 1
        : local.iter_1232.tape_ptr)

    code_ptr = 1 + (
      local.curr_1233.code == "["
        ? local.iter_1232.tape[local.iter_1232.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1232.code_ptr)] : local.iter_1232.code_ptr :
      local.curr_1233.code == "]"
        ? local.iter_1232.tape[local.iter_1232.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1232.code_ptr)] : local.iter_1232.code_ptr
        : local.iter_1232.code_ptr)

    steps_taken = 1 + local.iter_1232.steps_taken
  }
}

locals {
  end_of_code_1234 = try(local.iter_1233.code_ptr >= length(var.code), true)

  curr_1234 = local.end_of_code_1234 ? null : {
    code = substr(var.code, local.iter_1233.code_ptr, 1)
    input = substr(var.code, local.iter_1233.code_ptr, 1) == "," ? substr(local.iter_1233.input, 0, 1) : null
  }

  iter_1234 = local.end_of_code_1234 ? local.iter_1233 : {
    input = (local.curr_1234.code == ","
      ? substr(local.iter_1233.input, 1, -1)
      : local.iter_1233.input)

    output = (local.curr_1234.code == "."
      ? "${local.iter_1233.output}${jsondecode(format("\"\\u%04x\"", local.iter_1233.tape[local.iter_1233.tape_ptr]))}"
      : local.iter_1233.output)
    
    tape = (
      local.curr_1234.code == "+"
        ? [for i, b in local.iter_1233.tape : (i == local.iter_1233.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1234.code == "-"
        ? [for i, b in local.iter_1233.tape : (i == local.iter_1233.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1234.code == ","
        ? [for i, b in local.iter_1233.tape : (i == local.iter_1233.tape_ptr ? local.ascii_lookup[local.curr_1234.input] : b)]
        : local.iter_1233.tape)

    tape_ptr = (
      local.curr_1234.code == "<"
        ? local.iter_1233.tape_ptr == 0 ? length(local.iter_1233.tape) - 1 : local.iter_1233.tape_ptr - 1 :
      local.curr_1234.code == ">"
        ? local.iter_1233.tape_ptr == length(local.iter_1233.tape) - 1 ? 0 : local.iter_1233.tape_ptr + 1
        : local.iter_1233.tape_ptr)

    code_ptr = 1 + (
      local.curr_1234.code == "["
        ? local.iter_1233.tape[local.iter_1233.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1233.code_ptr)] : local.iter_1233.code_ptr :
      local.curr_1234.code == "]"
        ? local.iter_1233.tape[local.iter_1233.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1233.code_ptr)] : local.iter_1233.code_ptr
        : local.iter_1233.code_ptr)

    steps_taken = 1 + local.iter_1233.steps_taken
  }
}

locals {
  end_of_code_1235 = try(local.iter_1234.code_ptr >= length(var.code), true)

  curr_1235 = local.end_of_code_1235 ? null : {
    code = substr(var.code, local.iter_1234.code_ptr, 1)
    input = substr(var.code, local.iter_1234.code_ptr, 1) == "," ? substr(local.iter_1234.input, 0, 1) : null
  }

  iter_1235 = local.end_of_code_1235 ? local.iter_1234 : {
    input = (local.curr_1235.code == ","
      ? substr(local.iter_1234.input, 1, -1)
      : local.iter_1234.input)

    output = (local.curr_1235.code == "."
      ? "${local.iter_1234.output}${jsondecode(format("\"\\u%04x\"", local.iter_1234.tape[local.iter_1234.tape_ptr]))}"
      : local.iter_1234.output)
    
    tape = (
      local.curr_1235.code == "+"
        ? [for i, b in local.iter_1234.tape : (i == local.iter_1234.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1235.code == "-"
        ? [for i, b in local.iter_1234.tape : (i == local.iter_1234.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1235.code == ","
        ? [for i, b in local.iter_1234.tape : (i == local.iter_1234.tape_ptr ? local.ascii_lookup[local.curr_1235.input] : b)]
        : local.iter_1234.tape)

    tape_ptr = (
      local.curr_1235.code == "<"
        ? local.iter_1234.tape_ptr == 0 ? length(local.iter_1234.tape) - 1 : local.iter_1234.tape_ptr - 1 :
      local.curr_1235.code == ">"
        ? local.iter_1234.tape_ptr == length(local.iter_1234.tape) - 1 ? 0 : local.iter_1234.tape_ptr + 1
        : local.iter_1234.tape_ptr)

    code_ptr = 1 + (
      local.curr_1235.code == "["
        ? local.iter_1234.tape[local.iter_1234.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1234.code_ptr)] : local.iter_1234.code_ptr :
      local.curr_1235.code == "]"
        ? local.iter_1234.tape[local.iter_1234.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1234.code_ptr)] : local.iter_1234.code_ptr
        : local.iter_1234.code_ptr)

    steps_taken = 1 + local.iter_1234.steps_taken
  }
}

locals {
  end_of_code_1236 = try(local.iter_1235.code_ptr >= length(var.code), true)

  curr_1236 = local.end_of_code_1236 ? null : {
    code = substr(var.code, local.iter_1235.code_ptr, 1)
    input = substr(var.code, local.iter_1235.code_ptr, 1) == "," ? substr(local.iter_1235.input, 0, 1) : null
  }

  iter_1236 = local.end_of_code_1236 ? local.iter_1235 : {
    input = (local.curr_1236.code == ","
      ? substr(local.iter_1235.input, 1, -1)
      : local.iter_1235.input)

    output = (local.curr_1236.code == "."
      ? "${local.iter_1235.output}${jsondecode(format("\"\\u%04x\"", local.iter_1235.tape[local.iter_1235.tape_ptr]))}"
      : local.iter_1235.output)
    
    tape = (
      local.curr_1236.code == "+"
        ? [for i, b in local.iter_1235.tape : (i == local.iter_1235.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1236.code == "-"
        ? [for i, b in local.iter_1235.tape : (i == local.iter_1235.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1236.code == ","
        ? [for i, b in local.iter_1235.tape : (i == local.iter_1235.tape_ptr ? local.ascii_lookup[local.curr_1236.input] : b)]
        : local.iter_1235.tape)

    tape_ptr = (
      local.curr_1236.code == "<"
        ? local.iter_1235.tape_ptr == 0 ? length(local.iter_1235.tape) - 1 : local.iter_1235.tape_ptr - 1 :
      local.curr_1236.code == ">"
        ? local.iter_1235.tape_ptr == length(local.iter_1235.tape) - 1 ? 0 : local.iter_1235.tape_ptr + 1
        : local.iter_1235.tape_ptr)

    code_ptr = 1 + (
      local.curr_1236.code == "["
        ? local.iter_1235.tape[local.iter_1235.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1235.code_ptr)] : local.iter_1235.code_ptr :
      local.curr_1236.code == "]"
        ? local.iter_1235.tape[local.iter_1235.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1235.code_ptr)] : local.iter_1235.code_ptr
        : local.iter_1235.code_ptr)

    steps_taken = 1 + local.iter_1235.steps_taken
  }
}

locals {
  end_of_code_1237 = try(local.iter_1236.code_ptr >= length(var.code), true)

  curr_1237 = local.end_of_code_1237 ? null : {
    code = substr(var.code, local.iter_1236.code_ptr, 1)
    input = substr(var.code, local.iter_1236.code_ptr, 1) == "," ? substr(local.iter_1236.input, 0, 1) : null
  }

  iter_1237 = local.end_of_code_1237 ? local.iter_1236 : {
    input = (local.curr_1237.code == ","
      ? substr(local.iter_1236.input, 1, -1)
      : local.iter_1236.input)

    output = (local.curr_1237.code == "."
      ? "${local.iter_1236.output}${jsondecode(format("\"\\u%04x\"", local.iter_1236.tape[local.iter_1236.tape_ptr]))}"
      : local.iter_1236.output)
    
    tape = (
      local.curr_1237.code == "+"
        ? [for i, b in local.iter_1236.tape : (i == local.iter_1236.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1237.code == "-"
        ? [for i, b in local.iter_1236.tape : (i == local.iter_1236.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1237.code == ","
        ? [for i, b in local.iter_1236.tape : (i == local.iter_1236.tape_ptr ? local.ascii_lookup[local.curr_1237.input] : b)]
        : local.iter_1236.tape)

    tape_ptr = (
      local.curr_1237.code == "<"
        ? local.iter_1236.tape_ptr == 0 ? length(local.iter_1236.tape) - 1 : local.iter_1236.tape_ptr - 1 :
      local.curr_1237.code == ">"
        ? local.iter_1236.tape_ptr == length(local.iter_1236.tape) - 1 ? 0 : local.iter_1236.tape_ptr + 1
        : local.iter_1236.tape_ptr)

    code_ptr = 1 + (
      local.curr_1237.code == "["
        ? local.iter_1236.tape[local.iter_1236.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1236.code_ptr)] : local.iter_1236.code_ptr :
      local.curr_1237.code == "]"
        ? local.iter_1236.tape[local.iter_1236.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1236.code_ptr)] : local.iter_1236.code_ptr
        : local.iter_1236.code_ptr)

    steps_taken = 1 + local.iter_1236.steps_taken
  }
}

locals {
  end_of_code_1238 = try(local.iter_1237.code_ptr >= length(var.code), true)

  curr_1238 = local.end_of_code_1238 ? null : {
    code = substr(var.code, local.iter_1237.code_ptr, 1)
    input = substr(var.code, local.iter_1237.code_ptr, 1) == "," ? substr(local.iter_1237.input, 0, 1) : null
  }

  iter_1238 = local.end_of_code_1238 ? local.iter_1237 : {
    input = (local.curr_1238.code == ","
      ? substr(local.iter_1237.input, 1, -1)
      : local.iter_1237.input)

    output = (local.curr_1238.code == "."
      ? "${local.iter_1237.output}${jsondecode(format("\"\\u%04x\"", local.iter_1237.tape[local.iter_1237.tape_ptr]))}"
      : local.iter_1237.output)
    
    tape = (
      local.curr_1238.code == "+"
        ? [for i, b in local.iter_1237.tape : (i == local.iter_1237.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1238.code == "-"
        ? [for i, b in local.iter_1237.tape : (i == local.iter_1237.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1238.code == ","
        ? [for i, b in local.iter_1237.tape : (i == local.iter_1237.tape_ptr ? local.ascii_lookup[local.curr_1238.input] : b)]
        : local.iter_1237.tape)

    tape_ptr = (
      local.curr_1238.code == "<"
        ? local.iter_1237.tape_ptr == 0 ? length(local.iter_1237.tape) - 1 : local.iter_1237.tape_ptr - 1 :
      local.curr_1238.code == ">"
        ? local.iter_1237.tape_ptr == length(local.iter_1237.tape) - 1 ? 0 : local.iter_1237.tape_ptr + 1
        : local.iter_1237.tape_ptr)

    code_ptr = 1 + (
      local.curr_1238.code == "["
        ? local.iter_1237.tape[local.iter_1237.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1237.code_ptr)] : local.iter_1237.code_ptr :
      local.curr_1238.code == "]"
        ? local.iter_1237.tape[local.iter_1237.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1237.code_ptr)] : local.iter_1237.code_ptr
        : local.iter_1237.code_ptr)

    steps_taken = 1 + local.iter_1237.steps_taken
  }
}

locals {
  end_of_code_1239 = try(local.iter_1238.code_ptr >= length(var.code), true)

  curr_1239 = local.end_of_code_1239 ? null : {
    code = substr(var.code, local.iter_1238.code_ptr, 1)
    input = substr(var.code, local.iter_1238.code_ptr, 1) == "," ? substr(local.iter_1238.input, 0, 1) : null
  }

  iter_1239 = local.end_of_code_1239 ? local.iter_1238 : {
    input = (local.curr_1239.code == ","
      ? substr(local.iter_1238.input, 1, -1)
      : local.iter_1238.input)

    output = (local.curr_1239.code == "."
      ? "${local.iter_1238.output}${jsondecode(format("\"\\u%04x\"", local.iter_1238.tape[local.iter_1238.tape_ptr]))}"
      : local.iter_1238.output)
    
    tape = (
      local.curr_1239.code == "+"
        ? [for i, b in local.iter_1238.tape : (i == local.iter_1238.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1239.code == "-"
        ? [for i, b in local.iter_1238.tape : (i == local.iter_1238.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1239.code == ","
        ? [for i, b in local.iter_1238.tape : (i == local.iter_1238.tape_ptr ? local.ascii_lookup[local.curr_1239.input] : b)]
        : local.iter_1238.tape)

    tape_ptr = (
      local.curr_1239.code == "<"
        ? local.iter_1238.tape_ptr == 0 ? length(local.iter_1238.tape) - 1 : local.iter_1238.tape_ptr - 1 :
      local.curr_1239.code == ">"
        ? local.iter_1238.tape_ptr == length(local.iter_1238.tape) - 1 ? 0 : local.iter_1238.tape_ptr + 1
        : local.iter_1238.tape_ptr)

    code_ptr = 1 + (
      local.curr_1239.code == "["
        ? local.iter_1238.tape[local.iter_1238.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1238.code_ptr)] : local.iter_1238.code_ptr :
      local.curr_1239.code == "]"
        ? local.iter_1238.tape[local.iter_1238.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1238.code_ptr)] : local.iter_1238.code_ptr
        : local.iter_1238.code_ptr)

    steps_taken = 1 + local.iter_1238.steps_taken
  }
}

locals {
  end_of_code_1240 = try(local.iter_1239.code_ptr >= length(var.code), true)

  curr_1240 = local.end_of_code_1240 ? null : {
    code = substr(var.code, local.iter_1239.code_ptr, 1)
    input = substr(var.code, local.iter_1239.code_ptr, 1) == "," ? substr(local.iter_1239.input, 0, 1) : null
  }

  iter_1240 = local.end_of_code_1240 ? local.iter_1239 : {
    input = (local.curr_1240.code == ","
      ? substr(local.iter_1239.input, 1, -1)
      : local.iter_1239.input)

    output = (local.curr_1240.code == "."
      ? "${local.iter_1239.output}${jsondecode(format("\"\\u%04x\"", local.iter_1239.tape[local.iter_1239.tape_ptr]))}"
      : local.iter_1239.output)
    
    tape = (
      local.curr_1240.code == "+"
        ? [for i, b in local.iter_1239.tape : (i == local.iter_1239.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1240.code == "-"
        ? [for i, b in local.iter_1239.tape : (i == local.iter_1239.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1240.code == ","
        ? [for i, b in local.iter_1239.tape : (i == local.iter_1239.tape_ptr ? local.ascii_lookup[local.curr_1240.input] : b)]
        : local.iter_1239.tape)

    tape_ptr = (
      local.curr_1240.code == "<"
        ? local.iter_1239.tape_ptr == 0 ? length(local.iter_1239.tape) - 1 : local.iter_1239.tape_ptr - 1 :
      local.curr_1240.code == ">"
        ? local.iter_1239.tape_ptr == length(local.iter_1239.tape) - 1 ? 0 : local.iter_1239.tape_ptr + 1
        : local.iter_1239.tape_ptr)

    code_ptr = 1 + (
      local.curr_1240.code == "["
        ? local.iter_1239.tape[local.iter_1239.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1239.code_ptr)] : local.iter_1239.code_ptr :
      local.curr_1240.code == "]"
        ? local.iter_1239.tape[local.iter_1239.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1239.code_ptr)] : local.iter_1239.code_ptr
        : local.iter_1239.code_ptr)

    steps_taken = 1 + local.iter_1239.steps_taken
  }
}

locals {
  end_of_code_1241 = try(local.iter_1240.code_ptr >= length(var.code), true)

  curr_1241 = local.end_of_code_1241 ? null : {
    code = substr(var.code, local.iter_1240.code_ptr, 1)
    input = substr(var.code, local.iter_1240.code_ptr, 1) == "," ? substr(local.iter_1240.input, 0, 1) : null
  }

  iter_1241 = local.end_of_code_1241 ? local.iter_1240 : {
    input = (local.curr_1241.code == ","
      ? substr(local.iter_1240.input, 1, -1)
      : local.iter_1240.input)

    output = (local.curr_1241.code == "."
      ? "${local.iter_1240.output}${jsondecode(format("\"\\u%04x\"", local.iter_1240.tape[local.iter_1240.tape_ptr]))}"
      : local.iter_1240.output)
    
    tape = (
      local.curr_1241.code == "+"
        ? [for i, b in local.iter_1240.tape : (i == local.iter_1240.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1241.code == "-"
        ? [for i, b in local.iter_1240.tape : (i == local.iter_1240.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1241.code == ","
        ? [for i, b in local.iter_1240.tape : (i == local.iter_1240.tape_ptr ? local.ascii_lookup[local.curr_1241.input] : b)]
        : local.iter_1240.tape)

    tape_ptr = (
      local.curr_1241.code == "<"
        ? local.iter_1240.tape_ptr == 0 ? length(local.iter_1240.tape) - 1 : local.iter_1240.tape_ptr - 1 :
      local.curr_1241.code == ">"
        ? local.iter_1240.tape_ptr == length(local.iter_1240.tape) - 1 ? 0 : local.iter_1240.tape_ptr + 1
        : local.iter_1240.tape_ptr)

    code_ptr = 1 + (
      local.curr_1241.code == "["
        ? local.iter_1240.tape[local.iter_1240.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1240.code_ptr)] : local.iter_1240.code_ptr :
      local.curr_1241.code == "]"
        ? local.iter_1240.tape[local.iter_1240.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1240.code_ptr)] : local.iter_1240.code_ptr
        : local.iter_1240.code_ptr)

    steps_taken = 1 + local.iter_1240.steps_taken
  }
}

locals {
  end_of_code_1242 = try(local.iter_1241.code_ptr >= length(var.code), true)

  curr_1242 = local.end_of_code_1242 ? null : {
    code = substr(var.code, local.iter_1241.code_ptr, 1)
    input = substr(var.code, local.iter_1241.code_ptr, 1) == "," ? substr(local.iter_1241.input, 0, 1) : null
  }

  iter_1242 = local.end_of_code_1242 ? local.iter_1241 : {
    input = (local.curr_1242.code == ","
      ? substr(local.iter_1241.input, 1, -1)
      : local.iter_1241.input)

    output = (local.curr_1242.code == "."
      ? "${local.iter_1241.output}${jsondecode(format("\"\\u%04x\"", local.iter_1241.tape[local.iter_1241.tape_ptr]))}"
      : local.iter_1241.output)
    
    tape = (
      local.curr_1242.code == "+"
        ? [for i, b in local.iter_1241.tape : (i == local.iter_1241.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1242.code == "-"
        ? [for i, b in local.iter_1241.tape : (i == local.iter_1241.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1242.code == ","
        ? [for i, b in local.iter_1241.tape : (i == local.iter_1241.tape_ptr ? local.ascii_lookup[local.curr_1242.input] : b)]
        : local.iter_1241.tape)

    tape_ptr = (
      local.curr_1242.code == "<"
        ? local.iter_1241.tape_ptr == 0 ? length(local.iter_1241.tape) - 1 : local.iter_1241.tape_ptr - 1 :
      local.curr_1242.code == ">"
        ? local.iter_1241.tape_ptr == length(local.iter_1241.tape) - 1 ? 0 : local.iter_1241.tape_ptr + 1
        : local.iter_1241.tape_ptr)

    code_ptr = 1 + (
      local.curr_1242.code == "["
        ? local.iter_1241.tape[local.iter_1241.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1241.code_ptr)] : local.iter_1241.code_ptr :
      local.curr_1242.code == "]"
        ? local.iter_1241.tape[local.iter_1241.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1241.code_ptr)] : local.iter_1241.code_ptr
        : local.iter_1241.code_ptr)

    steps_taken = 1 + local.iter_1241.steps_taken
  }
}

locals {
  end_of_code_1243 = try(local.iter_1242.code_ptr >= length(var.code), true)

  curr_1243 = local.end_of_code_1243 ? null : {
    code = substr(var.code, local.iter_1242.code_ptr, 1)
    input = substr(var.code, local.iter_1242.code_ptr, 1) == "," ? substr(local.iter_1242.input, 0, 1) : null
  }

  iter_1243 = local.end_of_code_1243 ? local.iter_1242 : {
    input = (local.curr_1243.code == ","
      ? substr(local.iter_1242.input, 1, -1)
      : local.iter_1242.input)

    output = (local.curr_1243.code == "."
      ? "${local.iter_1242.output}${jsondecode(format("\"\\u%04x\"", local.iter_1242.tape[local.iter_1242.tape_ptr]))}"
      : local.iter_1242.output)
    
    tape = (
      local.curr_1243.code == "+"
        ? [for i, b in local.iter_1242.tape : (i == local.iter_1242.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1243.code == "-"
        ? [for i, b in local.iter_1242.tape : (i == local.iter_1242.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1243.code == ","
        ? [for i, b in local.iter_1242.tape : (i == local.iter_1242.tape_ptr ? local.ascii_lookup[local.curr_1243.input] : b)]
        : local.iter_1242.tape)

    tape_ptr = (
      local.curr_1243.code == "<"
        ? local.iter_1242.tape_ptr == 0 ? length(local.iter_1242.tape) - 1 : local.iter_1242.tape_ptr - 1 :
      local.curr_1243.code == ">"
        ? local.iter_1242.tape_ptr == length(local.iter_1242.tape) - 1 ? 0 : local.iter_1242.tape_ptr + 1
        : local.iter_1242.tape_ptr)

    code_ptr = 1 + (
      local.curr_1243.code == "["
        ? local.iter_1242.tape[local.iter_1242.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1242.code_ptr)] : local.iter_1242.code_ptr :
      local.curr_1243.code == "]"
        ? local.iter_1242.tape[local.iter_1242.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1242.code_ptr)] : local.iter_1242.code_ptr
        : local.iter_1242.code_ptr)

    steps_taken = 1 + local.iter_1242.steps_taken
  }
}

locals {
  end_of_code_1244 = try(local.iter_1243.code_ptr >= length(var.code), true)

  curr_1244 = local.end_of_code_1244 ? null : {
    code = substr(var.code, local.iter_1243.code_ptr, 1)
    input = substr(var.code, local.iter_1243.code_ptr, 1) == "," ? substr(local.iter_1243.input, 0, 1) : null
  }

  iter_1244 = local.end_of_code_1244 ? local.iter_1243 : {
    input = (local.curr_1244.code == ","
      ? substr(local.iter_1243.input, 1, -1)
      : local.iter_1243.input)

    output = (local.curr_1244.code == "."
      ? "${local.iter_1243.output}${jsondecode(format("\"\\u%04x\"", local.iter_1243.tape[local.iter_1243.tape_ptr]))}"
      : local.iter_1243.output)
    
    tape = (
      local.curr_1244.code == "+"
        ? [for i, b in local.iter_1243.tape : (i == local.iter_1243.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1244.code == "-"
        ? [for i, b in local.iter_1243.tape : (i == local.iter_1243.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1244.code == ","
        ? [for i, b in local.iter_1243.tape : (i == local.iter_1243.tape_ptr ? local.ascii_lookup[local.curr_1244.input] : b)]
        : local.iter_1243.tape)

    tape_ptr = (
      local.curr_1244.code == "<"
        ? local.iter_1243.tape_ptr == 0 ? length(local.iter_1243.tape) - 1 : local.iter_1243.tape_ptr - 1 :
      local.curr_1244.code == ">"
        ? local.iter_1243.tape_ptr == length(local.iter_1243.tape) - 1 ? 0 : local.iter_1243.tape_ptr + 1
        : local.iter_1243.tape_ptr)

    code_ptr = 1 + (
      local.curr_1244.code == "["
        ? local.iter_1243.tape[local.iter_1243.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1243.code_ptr)] : local.iter_1243.code_ptr :
      local.curr_1244.code == "]"
        ? local.iter_1243.tape[local.iter_1243.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1243.code_ptr)] : local.iter_1243.code_ptr
        : local.iter_1243.code_ptr)

    steps_taken = 1 + local.iter_1243.steps_taken
  }
}

locals {
  end_of_code_1245 = try(local.iter_1244.code_ptr >= length(var.code), true)

  curr_1245 = local.end_of_code_1245 ? null : {
    code = substr(var.code, local.iter_1244.code_ptr, 1)
    input = substr(var.code, local.iter_1244.code_ptr, 1) == "," ? substr(local.iter_1244.input, 0, 1) : null
  }

  iter_1245 = local.end_of_code_1245 ? local.iter_1244 : {
    input = (local.curr_1245.code == ","
      ? substr(local.iter_1244.input, 1, -1)
      : local.iter_1244.input)

    output = (local.curr_1245.code == "."
      ? "${local.iter_1244.output}${jsondecode(format("\"\\u%04x\"", local.iter_1244.tape[local.iter_1244.tape_ptr]))}"
      : local.iter_1244.output)
    
    tape = (
      local.curr_1245.code == "+"
        ? [for i, b in local.iter_1244.tape : (i == local.iter_1244.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1245.code == "-"
        ? [for i, b in local.iter_1244.tape : (i == local.iter_1244.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1245.code == ","
        ? [for i, b in local.iter_1244.tape : (i == local.iter_1244.tape_ptr ? local.ascii_lookup[local.curr_1245.input] : b)]
        : local.iter_1244.tape)

    tape_ptr = (
      local.curr_1245.code == "<"
        ? local.iter_1244.tape_ptr == 0 ? length(local.iter_1244.tape) - 1 : local.iter_1244.tape_ptr - 1 :
      local.curr_1245.code == ">"
        ? local.iter_1244.tape_ptr == length(local.iter_1244.tape) - 1 ? 0 : local.iter_1244.tape_ptr + 1
        : local.iter_1244.tape_ptr)

    code_ptr = 1 + (
      local.curr_1245.code == "["
        ? local.iter_1244.tape[local.iter_1244.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1244.code_ptr)] : local.iter_1244.code_ptr :
      local.curr_1245.code == "]"
        ? local.iter_1244.tape[local.iter_1244.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1244.code_ptr)] : local.iter_1244.code_ptr
        : local.iter_1244.code_ptr)

    steps_taken = 1 + local.iter_1244.steps_taken
  }
}

locals {
  end_of_code_1246 = try(local.iter_1245.code_ptr >= length(var.code), true)

  curr_1246 = local.end_of_code_1246 ? null : {
    code = substr(var.code, local.iter_1245.code_ptr, 1)
    input = substr(var.code, local.iter_1245.code_ptr, 1) == "," ? substr(local.iter_1245.input, 0, 1) : null
  }

  iter_1246 = local.end_of_code_1246 ? local.iter_1245 : {
    input = (local.curr_1246.code == ","
      ? substr(local.iter_1245.input, 1, -1)
      : local.iter_1245.input)

    output = (local.curr_1246.code == "."
      ? "${local.iter_1245.output}${jsondecode(format("\"\\u%04x\"", local.iter_1245.tape[local.iter_1245.tape_ptr]))}"
      : local.iter_1245.output)
    
    tape = (
      local.curr_1246.code == "+"
        ? [for i, b in local.iter_1245.tape : (i == local.iter_1245.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1246.code == "-"
        ? [for i, b in local.iter_1245.tape : (i == local.iter_1245.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1246.code == ","
        ? [for i, b in local.iter_1245.tape : (i == local.iter_1245.tape_ptr ? local.ascii_lookup[local.curr_1246.input] : b)]
        : local.iter_1245.tape)

    tape_ptr = (
      local.curr_1246.code == "<"
        ? local.iter_1245.tape_ptr == 0 ? length(local.iter_1245.tape) - 1 : local.iter_1245.tape_ptr - 1 :
      local.curr_1246.code == ">"
        ? local.iter_1245.tape_ptr == length(local.iter_1245.tape) - 1 ? 0 : local.iter_1245.tape_ptr + 1
        : local.iter_1245.tape_ptr)

    code_ptr = 1 + (
      local.curr_1246.code == "["
        ? local.iter_1245.tape[local.iter_1245.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1245.code_ptr)] : local.iter_1245.code_ptr :
      local.curr_1246.code == "]"
        ? local.iter_1245.tape[local.iter_1245.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1245.code_ptr)] : local.iter_1245.code_ptr
        : local.iter_1245.code_ptr)

    steps_taken = 1 + local.iter_1245.steps_taken
  }
}

locals {
  end_of_code_1247 = try(local.iter_1246.code_ptr >= length(var.code), true)

  curr_1247 = local.end_of_code_1247 ? null : {
    code = substr(var.code, local.iter_1246.code_ptr, 1)
    input = substr(var.code, local.iter_1246.code_ptr, 1) == "," ? substr(local.iter_1246.input, 0, 1) : null
  }

  iter_1247 = local.end_of_code_1247 ? local.iter_1246 : {
    input = (local.curr_1247.code == ","
      ? substr(local.iter_1246.input, 1, -1)
      : local.iter_1246.input)

    output = (local.curr_1247.code == "."
      ? "${local.iter_1246.output}${jsondecode(format("\"\\u%04x\"", local.iter_1246.tape[local.iter_1246.tape_ptr]))}"
      : local.iter_1246.output)
    
    tape = (
      local.curr_1247.code == "+"
        ? [for i, b in local.iter_1246.tape : (i == local.iter_1246.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1247.code == "-"
        ? [for i, b in local.iter_1246.tape : (i == local.iter_1246.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1247.code == ","
        ? [for i, b in local.iter_1246.tape : (i == local.iter_1246.tape_ptr ? local.ascii_lookup[local.curr_1247.input] : b)]
        : local.iter_1246.tape)

    tape_ptr = (
      local.curr_1247.code == "<"
        ? local.iter_1246.tape_ptr == 0 ? length(local.iter_1246.tape) - 1 : local.iter_1246.tape_ptr - 1 :
      local.curr_1247.code == ">"
        ? local.iter_1246.tape_ptr == length(local.iter_1246.tape) - 1 ? 0 : local.iter_1246.tape_ptr + 1
        : local.iter_1246.tape_ptr)

    code_ptr = 1 + (
      local.curr_1247.code == "["
        ? local.iter_1246.tape[local.iter_1246.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1246.code_ptr)] : local.iter_1246.code_ptr :
      local.curr_1247.code == "]"
        ? local.iter_1246.tape[local.iter_1246.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1246.code_ptr)] : local.iter_1246.code_ptr
        : local.iter_1246.code_ptr)

    steps_taken = 1 + local.iter_1246.steps_taken
  }
}

locals {
  end_of_code_1248 = try(local.iter_1247.code_ptr >= length(var.code), true)

  curr_1248 = local.end_of_code_1248 ? null : {
    code = substr(var.code, local.iter_1247.code_ptr, 1)
    input = substr(var.code, local.iter_1247.code_ptr, 1) == "," ? substr(local.iter_1247.input, 0, 1) : null
  }

  iter_1248 = local.end_of_code_1248 ? local.iter_1247 : {
    input = (local.curr_1248.code == ","
      ? substr(local.iter_1247.input, 1, -1)
      : local.iter_1247.input)

    output = (local.curr_1248.code == "."
      ? "${local.iter_1247.output}${jsondecode(format("\"\\u%04x\"", local.iter_1247.tape[local.iter_1247.tape_ptr]))}"
      : local.iter_1247.output)
    
    tape = (
      local.curr_1248.code == "+"
        ? [for i, b in local.iter_1247.tape : (i == local.iter_1247.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1248.code == "-"
        ? [for i, b in local.iter_1247.tape : (i == local.iter_1247.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1248.code == ","
        ? [for i, b in local.iter_1247.tape : (i == local.iter_1247.tape_ptr ? local.ascii_lookup[local.curr_1248.input] : b)]
        : local.iter_1247.tape)

    tape_ptr = (
      local.curr_1248.code == "<"
        ? local.iter_1247.tape_ptr == 0 ? length(local.iter_1247.tape) - 1 : local.iter_1247.tape_ptr - 1 :
      local.curr_1248.code == ">"
        ? local.iter_1247.tape_ptr == length(local.iter_1247.tape) - 1 ? 0 : local.iter_1247.tape_ptr + 1
        : local.iter_1247.tape_ptr)

    code_ptr = 1 + (
      local.curr_1248.code == "["
        ? local.iter_1247.tape[local.iter_1247.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1247.code_ptr)] : local.iter_1247.code_ptr :
      local.curr_1248.code == "]"
        ? local.iter_1247.tape[local.iter_1247.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1247.code_ptr)] : local.iter_1247.code_ptr
        : local.iter_1247.code_ptr)

    steps_taken = 1 + local.iter_1247.steps_taken
  }
}

locals {
  end_of_code_1249 = try(local.iter_1248.code_ptr >= length(var.code), true)

  curr_1249 = local.end_of_code_1249 ? null : {
    code = substr(var.code, local.iter_1248.code_ptr, 1)
    input = substr(var.code, local.iter_1248.code_ptr, 1) == "," ? substr(local.iter_1248.input, 0, 1) : null
  }

  iter_1249 = local.end_of_code_1249 ? local.iter_1248 : {
    input = (local.curr_1249.code == ","
      ? substr(local.iter_1248.input, 1, -1)
      : local.iter_1248.input)

    output = (local.curr_1249.code == "."
      ? "${local.iter_1248.output}${jsondecode(format("\"\\u%04x\"", local.iter_1248.tape[local.iter_1248.tape_ptr]))}"
      : local.iter_1248.output)
    
    tape = (
      local.curr_1249.code == "+"
        ? [for i, b in local.iter_1248.tape : (i == local.iter_1248.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1249.code == "-"
        ? [for i, b in local.iter_1248.tape : (i == local.iter_1248.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1249.code == ","
        ? [for i, b in local.iter_1248.tape : (i == local.iter_1248.tape_ptr ? local.ascii_lookup[local.curr_1249.input] : b)]
        : local.iter_1248.tape)

    tape_ptr = (
      local.curr_1249.code == "<"
        ? local.iter_1248.tape_ptr == 0 ? length(local.iter_1248.tape) - 1 : local.iter_1248.tape_ptr - 1 :
      local.curr_1249.code == ">"
        ? local.iter_1248.tape_ptr == length(local.iter_1248.tape) - 1 ? 0 : local.iter_1248.tape_ptr + 1
        : local.iter_1248.tape_ptr)

    code_ptr = 1 + (
      local.curr_1249.code == "["
        ? local.iter_1248.tape[local.iter_1248.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1248.code_ptr)] : local.iter_1248.code_ptr :
      local.curr_1249.code == "]"
        ? local.iter_1248.tape[local.iter_1248.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1248.code_ptr)] : local.iter_1248.code_ptr
        : local.iter_1248.code_ptr)

    steps_taken = 1 + local.iter_1248.steps_taken
  }
}

locals {
  end_of_code_1250 = try(local.iter_1249.code_ptr >= length(var.code), true)

  curr_1250 = local.end_of_code_1250 ? null : {
    code = substr(var.code, local.iter_1249.code_ptr, 1)
    input = substr(var.code, local.iter_1249.code_ptr, 1) == "," ? substr(local.iter_1249.input, 0, 1) : null
  }

  iter_1250 = local.end_of_code_1250 ? local.iter_1249 : {
    input = (local.curr_1250.code == ","
      ? substr(local.iter_1249.input, 1, -1)
      : local.iter_1249.input)

    output = (local.curr_1250.code == "."
      ? "${local.iter_1249.output}${jsondecode(format("\"\\u%04x\"", local.iter_1249.tape[local.iter_1249.tape_ptr]))}"
      : local.iter_1249.output)
    
    tape = (
      local.curr_1250.code == "+"
        ? [for i, b in local.iter_1249.tape : (i == local.iter_1249.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1250.code == "-"
        ? [for i, b in local.iter_1249.tape : (i == local.iter_1249.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1250.code == ","
        ? [for i, b in local.iter_1249.tape : (i == local.iter_1249.tape_ptr ? local.ascii_lookup[local.curr_1250.input] : b)]
        : local.iter_1249.tape)

    tape_ptr = (
      local.curr_1250.code == "<"
        ? local.iter_1249.tape_ptr == 0 ? length(local.iter_1249.tape) - 1 : local.iter_1249.tape_ptr - 1 :
      local.curr_1250.code == ">"
        ? local.iter_1249.tape_ptr == length(local.iter_1249.tape) - 1 ? 0 : local.iter_1249.tape_ptr + 1
        : local.iter_1249.tape_ptr)

    code_ptr = 1 + (
      local.curr_1250.code == "["
        ? local.iter_1249.tape[local.iter_1249.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1249.code_ptr)] : local.iter_1249.code_ptr :
      local.curr_1250.code == "]"
        ? local.iter_1249.tape[local.iter_1249.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1249.code_ptr)] : local.iter_1249.code_ptr
        : local.iter_1249.code_ptr)

    steps_taken = 1 + local.iter_1249.steps_taken
  }
}

locals {
  end_of_code_1251 = try(local.iter_1250.code_ptr >= length(var.code), true)

  curr_1251 = local.end_of_code_1251 ? null : {
    code = substr(var.code, local.iter_1250.code_ptr, 1)
    input = substr(var.code, local.iter_1250.code_ptr, 1) == "," ? substr(local.iter_1250.input, 0, 1) : null
  }

  iter_1251 = local.end_of_code_1251 ? local.iter_1250 : {
    input = (local.curr_1251.code == ","
      ? substr(local.iter_1250.input, 1, -1)
      : local.iter_1250.input)

    output = (local.curr_1251.code == "."
      ? "${local.iter_1250.output}${jsondecode(format("\"\\u%04x\"", local.iter_1250.tape[local.iter_1250.tape_ptr]))}"
      : local.iter_1250.output)
    
    tape = (
      local.curr_1251.code == "+"
        ? [for i, b in local.iter_1250.tape : (i == local.iter_1250.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1251.code == "-"
        ? [for i, b in local.iter_1250.tape : (i == local.iter_1250.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1251.code == ","
        ? [for i, b in local.iter_1250.tape : (i == local.iter_1250.tape_ptr ? local.ascii_lookup[local.curr_1251.input] : b)]
        : local.iter_1250.tape)

    tape_ptr = (
      local.curr_1251.code == "<"
        ? local.iter_1250.tape_ptr == 0 ? length(local.iter_1250.tape) - 1 : local.iter_1250.tape_ptr - 1 :
      local.curr_1251.code == ">"
        ? local.iter_1250.tape_ptr == length(local.iter_1250.tape) - 1 ? 0 : local.iter_1250.tape_ptr + 1
        : local.iter_1250.tape_ptr)

    code_ptr = 1 + (
      local.curr_1251.code == "["
        ? local.iter_1250.tape[local.iter_1250.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1250.code_ptr)] : local.iter_1250.code_ptr :
      local.curr_1251.code == "]"
        ? local.iter_1250.tape[local.iter_1250.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1250.code_ptr)] : local.iter_1250.code_ptr
        : local.iter_1250.code_ptr)

    steps_taken = 1 + local.iter_1250.steps_taken
  }
}

locals {
  end_of_code_1252 = try(local.iter_1251.code_ptr >= length(var.code), true)

  curr_1252 = local.end_of_code_1252 ? null : {
    code = substr(var.code, local.iter_1251.code_ptr, 1)
    input = substr(var.code, local.iter_1251.code_ptr, 1) == "," ? substr(local.iter_1251.input, 0, 1) : null
  }

  iter_1252 = local.end_of_code_1252 ? local.iter_1251 : {
    input = (local.curr_1252.code == ","
      ? substr(local.iter_1251.input, 1, -1)
      : local.iter_1251.input)

    output = (local.curr_1252.code == "."
      ? "${local.iter_1251.output}${jsondecode(format("\"\\u%04x\"", local.iter_1251.tape[local.iter_1251.tape_ptr]))}"
      : local.iter_1251.output)
    
    tape = (
      local.curr_1252.code == "+"
        ? [for i, b in local.iter_1251.tape : (i == local.iter_1251.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1252.code == "-"
        ? [for i, b in local.iter_1251.tape : (i == local.iter_1251.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1252.code == ","
        ? [for i, b in local.iter_1251.tape : (i == local.iter_1251.tape_ptr ? local.ascii_lookup[local.curr_1252.input] : b)]
        : local.iter_1251.tape)

    tape_ptr = (
      local.curr_1252.code == "<"
        ? local.iter_1251.tape_ptr == 0 ? length(local.iter_1251.tape) - 1 : local.iter_1251.tape_ptr - 1 :
      local.curr_1252.code == ">"
        ? local.iter_1251.tape_ptr == length(local.iter_1251.tape) - 1 ? 0 : local.iter_1251.tape_ptr + 1
        : local.iter_1251.tape_ptr)

    code_ptr = 1 + (
      local.curr_1252.code == "["
        ? local.iter_1251.tape[local.iter_1251.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1251.code_ptr)] : local.iter_1251.code_ptr :
      local.curr_1252.code == "]"
        ? local.iter_1251.tape[local.iter_1251.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1251.code_ptr)] : local.iter_1251.code_ptr
        : local.iter_1251.code_ptr)

    steps_taken = 1 + local.iter_1251.steps_taken
  }
}

locals {
  end_of_code_1253 = try(local.iter_1252.code_ptr >= length(var.code), true)

  curr_1253 = local.end_of_code_1253 ? null : {
    code = substr(var.code, local.iter_1252.code_ptr, 1)
    input = substr(var.code, local.iter_1252.code_ptr, 1) == "," ? substr(local.iter_1252.input, 0, 1) : null
  }

  iter_1253 = local.end_of_code_1253 ? local.iter_1252 : {
    input = (local.curr_1253.code == ","
      ? substr(local.iter_1252.input, 1, -1)
      : local.iter_1252.input)

    output = (local.curr_1253.code == "."
      ? "${local.iter_1252.output}${jsondecode(format("\"\\u%04x\"", local.iter_1252.tape[local.iter_1252.tape_ptr]))}"
      : local.iter_1252.output)
    
    tape = (
      local.curr_1253.code == "+"
        ? [for i, b in local.iter_1252.tape : (i == local.iter_1252.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1253.code == "-"
        ? [for i, b in local.iter_1252.tape : (i == local.iter_1252.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1253.code == ","
        ? [for i, b in local.iter_1252.tape : (i == local.iter_1252.tape_ptr ? local.ascii_lookup[local.curr_1253.input] : b)]
        : local.iter_1252.tape)

    tape_ptr = (
      local.curr_1253.code == "<"
        ? local.iter_1252.tape_ptr == 0 ? length(local.iter_1252.tape) - 1 : local.iter_1252.tape_ptr - 1 :
      local.curr_1253.code == ">"
        ? local.iter_1252.tape_ptr == length(local.iter_1252.tape) - 1 ? 0 : local.iter_1252.tape_ptr + 1
        : local.iter_1252.tape_ptr)

    code_ptr = 1 + (
      local.curr_1253.code == "["
        ? local.iter_1252.tape[local.iter_1252.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1252.code_ptr)] : local.iter_1252.code_ptr :
      local.curr_1253.code == "]"
        ? local.iter_1252.tape[local.iter_1252.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1252.code_ptr)] : local.iter_1252.code_ptr
        : local.iter_1252.code_ptr)

    steps_taken = 1 + local.iter_1252.steps_taken
  }
}

locals {
  end_of_code_1254 = try(local.iter_1253.code_ptr >= length(var.code), true)

  curr_1254 = local.end_of_code_1254 ? null : {
    code = substr(var.code, local.iter_1253.code_ptr, 1)
    input = substr(var.code, local.iter_1253.code_ptr, 1) == "," ? substr(local.iter_1253.input, 0, 1) : null
  }

  iter_1254 = local.end_of_code_1254 ? local.iter_1253 : {
    input = (local.curr_1254.code == ","
      ? substr(local.iter_1253.input, 1, -1)
      : local.iter_1253.input)

    output = (local.curr_1254.code == "."
      ? "${local.iter_1253.output}${jsondecode(format("\"\\u%04x\"", local.iter_1253.tape[local.iter_1253.tape_ptr]))}"
      : local.iter_1253.output)
    
    tape = (
      local.curr_1254.code == "+"
        ? [for i, b in local.iter_1253.tape : (i == local.iter_1253.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1254.code == "-"
        ? [for i, b in local.iter_1253.tape : (i == local.iter_1253.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1254.code == ","
        ? [for i, b in local.iter_1253.tape : (i == local.iter_1253.tape_ptr ? local.ascii_lookup[local.curr_1254.input] : b)]
        : local.iter_1253.tape)

    tape_ptr = (
      local.curr_1254.code == "<"
        ? local.iter_1253.tape_ptr == 0 ? length(local.iter_1253.tape) - 1 : local.iter_1253.tape_ptr - 1 :
      local.curr_1254.code == ">"
        ? local.iter_1253.tape_ptr == length(local.iter_1253.tape) - 1 ? 0 : local.iter_1253.tape_ptr + 1
        : local.iter_1253.tape_ptr)

    code_ptr = 1 + (
      local.curr_1254.code == "["
        ? local.iter_1253.tape[local.iter_1253.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1253.code_ptr)] : local.iter_1253.code_ptr :
      local.curr_1254.code == "]"
        ? local.iter_1253.tape[local.iter_1253.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1253.code_ptr)] : local.iter_1253.code_ptr
        : local.iter_1253.code_ptr)

    steps_taken = 1 + local.iter_1253.steps_taken
  }
}

locals {
  end_of_code_1255 = try(local.iter_1254.code_ptr >= length(var.code), true)

  curr_1255 = local.end_of_code_1255 ? null : {
    code = substr(var.code, local.iter_1254.code_ptr, 1)
    input = substr(var.code, local.iter_1254.code_ptr, 1) == "," ? substr(local.iter_1254.input, 0, 1) : null
  }

  iter_1255 = local.end_of_code_1255 ? local.iter_1254 : {
    input = (local.curr_1255.code == ","
      ? substr(local.iter_1254.input, 1, -1)
      : local.iter_1254.input)

    output = (local.curr_1255.code == "."
      ? "${local.iter_1254.output}${jsondecode(format("\"\\u%04x\"", local.iter_1254.tape[local.iter_1254.tape_ptr]))}"
      : local.iter_1254.output)
    
    tape = (
      local.curr_1255.code == "+"
        ? [for i, b in local.iter_1254.tape : (i == local.iter_1254.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1255.code == "-"
        ? [for i, b in local.iter_1254.tape : (i == local.iter_1254.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1255.code == ","
        ? [for i, b in local.iter_1254.tape : (i == local.iter_1254.tape_ptr ? local.ascii_lookup[local.curr_1255.input] : b)]
        : local.iter_1254.tape)

    tape_ptr = (
      local.curr_1255.code == "<"
        ? local.iter_1254.tape_ptr == 0 ? length(local.iter_1254.tape) - 1 : local.iter_1254.tape_ptr - 1 :
      local.curr_1255.code == ">"
        ? local.iter_1254.tape_ptr == length(local.iter_1254.tape) - 1 ? 0 : local.iter_1254.tape_ptr + 1
        : local.iter_1254.tape_ptr)

    code_ptr = 1 + (
      local.curr_1255.code == "["
        ? local.iter_1254.tape[local.iter_1254.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1254.code_ptr)] : local.iter_1254.code_ptr :
      local.curr_1255.code == "]"
        ? local.iter_1254.tape[local.iter_1254.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1254.code_ptr)] : local.iter_1254.code_ptr
        : local.iter_1254.code_ptr)

    steps_taken = 1 + local.iter_1254.steps_taken
  }
}

locals {
  end_of_code_1256 = try(local.iter_1255.code_ptr >= length(var.code), true)

  curr_1256 = local.end_of_code_1256 ? null : {
    code = substr(var.code, local.iter_1255.code_ptr, 1)
    input = substr(var.code, local.iter_1255.code_ptr, 1) == "," ? substr(local.iter_1255.input, 0, 1) : null
  }

  iter_1256 = local.end_of_code_1256 ? local.iter_1255 : {
    input = (local.curr_1256.code == ","
      ? substr(local.iter_1255.input, 1, -1)
      : local.iter_1255.input)

    output = (local.curr_1256.code == "."
      ? "${local.iter_1255.output}${jsondecode(format("\"\\u%04x\"", local.iter_1255.tape[local.iter_1255.tape_ptr]))}"
      : local.iter_1255.output)
    
    tape = (
      local.curr_1256.code == "+"
        ? [for i, b in local.iter_1255.tape : (i == local.iter_1255.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1256.code == "-"
        ? [for i, b in local.iter_1255.tape : (i == local.iter_1255.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1256.code == ","
        ? [for i, b in local.iter_1255.tape : (i == local.iter_1255.tape_ptr ? local.ascii_lookup[local.curr_1256.input] : b)]
        : local.iter_1255.tape)

    tape_ptr = (
      local.curr_1256.code == "<"
        ? local.iter_1255.tape_ptr == 0 ? length(local.iter_1255.tape) - 1 : local.iter_1255.tape_ptr - 1 :
      local.curr_1256.code == ">"
        ? local.iter_1255.tape_ptr == length(local.iter_1255.tape) - 1 ? 0 : local.iter_1255.tape_ptr + 1
        : local.iter_1255.tape_ptr)

    code_ptr = 1 + (
      local.curr_1256.code == "["
        ? local.iter_1255.tape[local.iter_1255.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1255.code_ptr)] : local.iter_1255.code_ptr :
      local.curr_1256.code == "]"
        ? local.iter_1255.tape[local.iter_1255.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1255.code_ptr)] : local.iter_1255.code_ptr
        : local.iter_1255.code_ptr)

    steps_taken = 1 + local.iter_1255.steps_taken
  }
}

locals {
  end_of_code_1257 = try(local.iter_1256.code_ptr >= length(var.code), true)

  curr_1257 = local.end_of_code_1257 ? null : {
    code = substr(var.code, local.iter_1256.code_ptr, 1)
    input = substr(var.code, local.iter_1256.code_ptr, 1) == "," ? substr(local.iter_1256.input, 0, 1) : null
  }

  iter_1257 = local.end_of_code_1257 ? local.iter_1256 : {
    input = (local.curr_1257.code == ","
      ? substr(local.iter_1256.input, 1, -1)
      : local.iter_1256.input)

    output = (local.curr_1257.code == "."
      ? "${local.iter_1256.output}${jsondecode(format("\"\\u%04x\"", local.iter_1256.tape[local.iter_1256.tape_ptr]))}"
      : local.iter_1256.output)
    
    tape = (
      local.curr_1257.code == "+"
        ? [for i, b in local.iter_1256.tape : (i == local.iter_1256.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1257.code == "-"
        ? [for i, b in local.iter_1256.tape : (i == local.iter_1256.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1257.code == ","
        ? [for i, b in local.iter_1256.tape : (i == local.iter_1256.tape_ptr ? local.ascii_lookup[local.curr_1257.input] : b)]
        : local.iter_1256.tape)

    tape_ptr = (
      local.curr_1257.code == "<"
        ? local.iter_1256.tape_ptr == 0 ? length(local.iter_1256.tape) - 1 : local.iter_1256.tape_ptr - 1 :
      local.curr_1257.code == ">"
        ? local.iter_1256.tape_ptr == length(local.iter_1256.tape) - 1 ? 0 : local.iter_1256.tape_ptr + 1
        : local.iter_1256.tape_ptr)

    code_ptr = 1 + (
      local.curr_1257.code == "["
        ? local.iter_1256.tape[local.iter_1256.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1256.code_ptr)] : local.iter_1256.code_ptr :
      local.curr_1257.code == "]"
        ? local.iter_1256.tape[local.iter_1256.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1256.code_ptr)] : local.iter_1256.code_ptr
        : local.iter_1256.code_ptr)

    steps_taken = 1 + local.iter_1256.steps_taken
  }
}

locals {
  end_of_code_1258 = try(local.iter_1257.code_ptr >= length(var.code), true)

  curr_1258 = local.end_of_code_1258 ? null : {
    code = substr(var.code, local.iter_1257.code_ptr, 1)
    input = substr(var.code, local.iter_1257.code_ptr, 1) == "," ? substr(local.iter_1257.input, 0, 1) : null
  }

  iter_1258 = local.end_of_code_1258 ? local.iter_1257 : {
    input = (local.curr_1258.code == ","
      ? substr(local.iter_1257.input, 1, -1)
      : local.iter_1257.input)

    output = (local.curr_1258.code == "."
      ? "${local.iter_1257.output}${jsondecode(format("\"\\u%04x\"", local.iter_1257.tape[local.iter_1257.tape_ptr]))}"
      : local.iter_1257.output)
    
    tape = (
      local.curr_1258.code == "+"
        ? [for i, b in local.iter_1257.tape : (i == local.iter_1257.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1258.code == "-"
        ? [for i, b in local.iter_1257.tape : (i == local.iter_1257.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1258.code == ","
        ? [for i, b in local.iter_1257.tape : (i == local.iter_1257.tape_ptr ? local.ascii_lookup[local.curr_1258.input] : b)]
        : local.iter_1257.tape)

    tape_ptr = (
      local.curr_1258.code == "<"
        ? local.iter_1257.tape_ptr == 0 ? length(local.iter_1257.tape) - 1 : local.iter_1257.tape_ptr - 1 :
      local.curr_1258.code == ">"
        ? local.iter_1257.tape_ptr == length(local.iter_1257.tape) - 1 ? 0 : local.iter_1257.tape_ptr + 1
        : local.iter_1257.tape_ptr)

    code_ptr = 1 + (
      local.curr_1258.code == "["
        ? local.iter_1257.tape[local.iter_1257.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1257.code_ptr)] : local.iter_1257.code_ptr :
      local.curr_1258.code == "]"
        ? local.iter_1257.tape[local.iter_1257.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1257.code_ptr)] : local.iter_1257.code_ptr
        : local.iter_1257.code_ptr)

    steps_taken = 1 + local.iter_1257.steps_taken
  }
}

locals {
  end_of_code_1259 = try(local.iter_1258.code_ptr >= length(var.code), true)

  curr_1259 = local.end_of_code_1259 ? null : {
    code = substr(var.code, local.iter_1258.code_ptr, 1)
    input = substr(var.code, local.iter_1258.code_ptr, 1) == "," ? substr(local.iter_1258.input, 0, 1) : null
  }

  iter_1259 = local.end_of_code_1259 ? local.iter_1258 : {
    input = (local.curr_1259.code == ","
      ? substr(local.iter_1258.input, 1, -1)
      : local.iter_1258.input)

    output = (local.curr_1259.code == "."
      ? "${local.iter_1258.output}${jsondecode(format("\"\\u%04x\"", local.iter_1258.tape[local.iter_1258.tape_ptr]))}"
      : local.iter_1258.output)
    
    tape = (
      local.curr_1259.code == "+"
        ? [for i, b in local.iter_1258.tape : (i == local.iter_1258.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1259.code == "-"
        ? [for i, b in local.iter_1258.tape : (i == local.iter_1258.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1259.code == ","
        ? [for i, b in local.iter_1258.tape : (i == local.iter_1258.tape_ptr ? local.ascii_lookup[local.curr_1259.input] : b)]
        : local.iter_1258.tape)

    tape_ptr = (
      local.curr_1259.code == "<"
        ? local.iter_1258.tape_ptr == 0 ? length(local.iter_1258.tape) - 1 : local.iter_1258.tape_ptr - 1 :
      local.curr_1259.code == ">"
        ? local.iter_1258.tape_ptr == length(local.iter_1258.tape) - 1 ? 0 : local.iter_1258.tape_ptr + 1
        : local.iter_1258.tape_ptr)

    code_ptr = 1 + (
      local.curr_1259.code == "["
        ? local.iter_1258.tape[local.iter_1258.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1258.code_ptr)] : local.iter_1258.code_ptr :
      local.curr_1259.code == "]"
        ? local.iter_1258.tape[local.iter_1258.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1258.code_ptr)] : local.iter_1258.code_ptr
        : local.iter_1258.code_ptr)

    steps_taken = 1 + local.iter_1258.steps_taken
  }
}

locals {
  end_of_code_1260 = try(local.iter_1259.code_ptr >= length(var.code), true)

  curr_1260 = local.end_of_code_1260 ? null : {
    code = substr(var.code, local.iter_1259.code_ptr, 1)
    input = substr(var.code, local.iter_1259.code_ptr, 1) == "," ? substr(local.iter_1259.input, 0, 1) : null
  }

  iter_1260 = local.end_of_code_1260 ? local.iter_1259 : {
    input = (local.curr_1260.code == ","
      ? substr(local.iter_1259.input, 1, -1)
      : local.iter_1259.input)

    output = (local.curr_1260.code == "."
      ? "${local.iter_1259.output}${jsondecode(format("\"\\u%04x\"", local.iter_1259.tape[local.iter_1259.tape_ptr]))}"
      : local.iter_1259.output)
    
    tape = (
      local.curr_1260.code == "+"
        ? [for i, b in local.iter_1259.tape : (i == local.iter_1259.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1260.code == "-"
        ? [for i, b in local.iter_1259.tape : (i == local.iter_1259.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1260.code == ","
        ? [for i, b in local.iter_1259.tape : (i == local.iter_1259.tape_ptr ? local.ascii_lookup[local.curr_1260.input] : b)]
        : local.iter_1259.tape)

    tape_ptr = (
      local.curr_1260.code == "<"
        ? local.iter_1259.tape_ptr == 0 ? length(local.iter_1259.tape) - 1 : local.iter_1259.tape_ptr - 1 :
      local.curr_1260.code == ">"
        ? local.iter_1259.tape_ptr == length(local.iter_1259.tape) - 1 ? 0 : local.iter_1259.tape_ptr + 1
        : local.iter_1259.tape_ptr)

    code_ptr = 1 + (
      local.curr_1260.code == "["
        ? local.iter_1259.tape[local.iter_1259.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1259.code_ptr)] : local.iter_1259.code_ptr :
      local.curr_1260.code == "]"
        ? local.iter_1259.tape[local.iter_1259.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1259.code_ptr)] : local.iter_1259.code_ptr
        : local.iter_1259.code_ptr)

    steps_taken = 1 + local.iter_1259.steps_taken
  }
}

locals {
  end_of_code_1261 = try(local.iter_1260.code_ptr >= length(var.code), true)

  curr_1261 = local.end_of_code_1261 ? null : {
    code = substr(var.code, local.iter_1260.code_ptr, 1)
    input = substr(var.code, local.iter_1260.code_ptr, 1) == "," ? substr(local.iter_1260.input, 0, 1) : null
  }

  iter_1261 = local.end_of_code_1261 ? local.iter_1260 : {
    input = (local.curr_1261.code == ","
      ? substr(local.iter_1260.input, 1, -1)
      : local.iter_1260.input)

    output = (local.curr_1261.code == "."
      ? "${local.iter_1260.output}${jsondecode(format("\"\\u%04x\"", local.iter_1260.tape[local.iter_1260.tape_ptr]))}"
      : local.iter_1260.output)
    
    tape = (
      local.curr_1261.code == "+"
        ? [for i, b in local.iter_1260.tape : (i == local.iter_1260.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1261.code == "-"
        ? [for i, b in local.iter_1260.tape : (i == local.iter_1260.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1261.code == ","
        ? [for i, b in local.iter_1260.tape : (i == local.iter_1260.tape_ptr ? local.ascii_lookup[local.curr_1261.input] : b)]
        : local.iter_1260.tape)

    tape_ptr = (
      local.curr_1261.code == "<"
        ? local.iter_1260.tape_ptr == 0 ? length(local.iter_1260.tape) - 1 : local.iter_1260.tape_ptr - 1 :
      local.curr_1261.code == ">"
        ? local.iter_1260.tape_ptr == length(local.iter_1260.tape) - 1 ? 0 : local.iter_1260.tape_ptr + 1
        : local.iter_1260.tape_ptr)

    code_ptr = 1 + (
      local.curr_1261.code == "["
        ? local.iter_1260.tape[local.iter_1260.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1260.code_ptr)] : local.iter_1260.code_ptr :
      local.curr_1261.code == "]"
        ? local.iter_1260.tape[local.iter_1260.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1260.code_ptr)] : local.iter_1260.code_ptr
        : local.iter_1260.code_ptr)

    steps_taken = 1 + local.iter_1260.steps_taken
  }
}

locals {
  end_of_code_1262 = try(local.iter_1261.code_ptr >= length(var.code), true)

  curr_1262 = local.end_of_code_1262 ? null : {
    code = substr(var.code, local.iter_1261.code_ptr, 1)
    input = substr(var.code, local.iter_1261.code_ptr, 1) == "," ? substr(local.iter_1261.input, 0, 1) : null
  }

  iter_1262 = local.end_of_code_1262 ? local.iter_1261 : {
    input = (local.curr_1262.code == ","
      ? substr(local.iter_1261.input, 1, -1)
      : local.iter_1261.input)

    output = (local.curr_1262.code == "."
      ? "${local.iter_1261.output}${jsondecode(format("\"\\u%04x\"", local.iter_1261.tape[local.iter_1261.tape_ptr]))}"
      : local.iter_1261.output)
    
    tape = (
      local.curr_1262.code == "+"
        ? [for i, b in local.iter_1261.tape : (i == local.iter_1261.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1262.code == "-"
        ? [for i, b in local.iter_1261.tape : (i == local.iter_1261.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1262.code == ","
        ? [for i, b in local.iter_1261.tape : (i == local.iter_1261.tape_ptr ? local.ascii_lookup[local.curr_1262.input] : b)]
        : local.iter_1261.tape)

    tape_ptr = (
      local.curr_1262.code == "<"
        ? local.iter_1261.tape_ptr == 0 ? length(local.iter_1261.tape) - 1 : local.iter_1261.tape_ptr - 1 :
      local.curr_1262.code == ">"
        ? local.iter_1261.tape_ptr == length(local.iter_1261.tape) - 1 ? 0 : local.iter_1261.tape_ptr + 1
        : local.iter_1261.tape_ptr)

    code_ptr = 1 + (
      local.curr_1262.code == "["
        ? local.iter_1261.tape[local.iter_1261.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1261.code_ptr)] : local.iter_1261.code_ptr :
      local.curr_1262.code == "]"
        ? local.iter_1261.tape[local.iter_1261.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1261.code_ptr)] : local.iter_1261.code_ptr
        : local.iter_1261.code_ptr)

    steps_taken = 1 + local.iter_1261.steps_taken
  }
}

locals {
  end_of_code_1263 = try(local.iter_1262.code_ptr >= length(var.code), true)

  curr_1263 = local.end_of_code_1263 ? null : {
    code = substr(var.code, local.iter_1262.code_ptr, 1)
    input = substr(var.code, local.iter_1262.code_ptr, 1) == "," ? substr(local.iter_1262.input, 0, 1) : null
  }

  iter_1263 = local.end_of_code_1263 ? local.iter_1262 : {
    input = (local.curr_1263.code == ","
      ? substr(local.iter_1262.input, 1, -1)
      : local.iter_1262.input)

    output = (local.curr_1263.code == "."
      ? "${local.iter_1262.output}${jsondecode(format("\"\\u%04x\"", local.iter_1262.tape[local.iter_1262.tape_ptr]))}"
      : local.iter_1262.output)
    
    tape = (
      local.curr_1263.code == "+"
        ? [for i, b in local.iter_1262.tape : (i == local.iter_1262.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1263.code == "-"
        ? [for i, b in local.iter_1262.tape : (i == local.iter_1262.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1263.code == ","
        ? [for i, b in local.iter_1262.tape : (i == local.iter_1262.tape_ptr ? local.ascii_lookup[local.curr_1263.input] : b)]
        : local.iter_1262.tape)

    tape_ptr = (
      local.curr_1263.code == "<"
        ? local.iter_1262.tape_ptr == 0 ? length(local.iter_1262.tape) - 1 : local.iter_1262.tape_ptr - 1 :
      local.curr_1263.code == ">"
        ? local.iter_1262.tape_ptr == length(local.iter_1262.tape) - 1 ? 0 : local.iter_1262.tape_ptr + 1
        : local.iter_1262.tape_ptr)

    code_ptr = 1 + (
      local.curr_1263.code == "["
        ? local.iter_1262.tape[local.iter_1262.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1262.code_ptr)] : local.iter_1262.code_ptr :
      local.curr_1263.code == "]"
        ? local.iter_1262.tape[local.iter_1262.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1262.code_ptr)] : local.iter_1262.code_ptr
        : local.iter_1262.code_ptr)

    steps_taken = 1 + local.iter_1262.steps_taken
  }
}

locals {
  end_of_code_1264 = try(local.iter_1263.code_ptr >= length(var.code), true)

  curr_1264 = local.end_of_code_1264 ? null : {
    code = substr(var.code, local.iter_1263.code_ptr, 1)
    input = substr(var.code, local.iter_1263.code_ptr, 1) == "," ? substr(local.iter_1263.input, 0, 1) : null
  }

  iter_1264 = local.end_of_code_1264 ? local.iter_1263 : {
    input = (local.curr_1264.code == ","
      ? substr(local.iter_1263.input, 1, -1)
      : local.iter_1263.input)

    output = (local.curr_1264.code == "."
      ? "${local.iter_1263.output}${jsondecode(format("\"\\u%04x\"", local.iter_1263.tape[local.iter_1263.tape_ptr]))}"
      : local.iter_1263.output)
    
    tape = (
      local.curr_1264.code == "+"
        ? [for i, b in local.iter_1263.tape : (i == local.iter_1263.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1264.code == "-"
        ? [for i, b in local.iter_1263.tape : (i == local.iter_1263.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1264.code == ","
        ? [for i, b in local.iter_1263.tape : (i == local.iter_1263.tape_ptr ? local.ascii_lookup[local.curr_1264.input] : b)]
        : local.iter_1263.tape)

    tape_ptr = (
      local.curr_1264.code == "<"
        ? local.iter_1263.tape_ptr == 0 ? length(local.iter_1263.tape) - 1 : local.iter_1263.tape_ptr - 1 :
      local.curr_1264.code == ">"
        ? local.iter_1263.tape_ptr == length(local.iter_1263.tape) - 1 ? 0 : local.iter_1263.tape_ptr + 1
        : local.iter_1263.tape_ptr)

    code_ptr = 1 + (
      local.curr_1264.code == "["
        ? local.iter_1263.tape[local.iter_1263.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1263.code_ptr)] : local.iter_1263.code_ptr :
      local.curr_1264.code == "]"
        ? local.iter_1263.tape[local.iter_1263.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1263.code_ptr)] : local.iter_1263.code_ptr
        : local.iter_1263.code_ptr)

    steps_taken = 1 + local.iter_1263.steps_taken
  }
}

locals {
  end_of_code_1265 = try(local.iter_1264.code_ptr >= length(var.code), true)

  curr_1265 = local.end_of_code_1265 ? null : {
    code = substr(var.code, local.iter_1264.code_ptr, 1)
    input = substr(var.code, local.iter_1264.code_ptr, 1) == "," ? substr(local.iter_1264.input, 0, 1) : null
  }

  iter_1265 = local.end_of_code_1265 ? local.iter_1264 : {
    input = (local.curr_1265.code == ","
      ? substr(local.iter_1264.input, 1, -1)
      : local.iter_1264.input)

    output = (local.curr_1265.code == "."
      ? "${local.iter_1264.output}${jsondecode(format("\"\\u%04x\"", local.iter_1264.tape[local.iter_1264.tape_ptr]))}"
      : local.iter_1264.output)
    
    tape = (
      local.curr_1265.code == "+"
        ? [for i, b in local.iter_1264.tape : (i == local.iter_1264.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1265.code == "-"
        ? [for i, b in local.iter_1264.tape : (i == local.iter_1264.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1265.code == ","
        ? [for i, b in local.iter_1264.tape : (i == local.iter_1264.tape_ptr ? local.ascii_lookup[local.curr_1265.input] : b)]
        : local.iter_1264.tape)

    tape_ptr = (
      local.curr_1265.code == "<"
        ? local.iter_1264.tape_ptr == 0 ? length(local.iter_1264.tape) - 1 : local.iter_1264.tape_ptr - 1 :
      local.curr_1265.code == ">"
        ? local.iter_1264.tape_ptr == length(local.iter_1264.tape) - 1 ? 0 : local.iter_1264.tape_ptr + 1
        : local.iter_1264.tape_ptr)

    code_ptr = 1 + (
      local.curr_1265.code == "["
        ? local.iter_1264.tape[local.iter_1264.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1264.code_ptr)] : local.iter_1264.code_ptr :
      local.curr_1265.code == "]"
        ? local.iter_1264.tape[local.iter_1264.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1264.code_ptr)] : local.iter_1264.code_ptr
        : local.iter_1264.code_ptr)

    steps_taken = 1 + local.iter_1264.steps_taken
  }
}

locals {
  end_of_code_1266 = try(local.iter_1265.code_ptr >= length(var.code), true)

  curr_1266 = local.end_of_code_1266 ? null : {
    code = substr(var.code, local.iter_1265.code_ptr, 1)
    input = substr(var.code, local.iter_1265.code_ptr, 1) == "," ? substr(local.iter_1265.input, 0, 1) : null
  }

  iter_1266 = local.end_of_code_1266 ? local.iter_1265 : {
    input = (local.curr_1266.code == ","
      ? substr(local.iter_1265.input, 1, -1)
      : local.iter_1265.input)

    output = (local.curr_1266.code == "."
      ? "${local.iter_1265.output}${jsondecode(format("\"\\u%04x\"", local.iter_1265.tape[local.iter_1265.tape_ptr]))}"
      : local.iter_1265.output)
    
    tape = (
      local.curr_1266.code == "+"
        ? [for i, b in local.iter_1265.tape : (i == local.iter_1265.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1266.code == "-"
        ? [for i, b in local.iter_1265.tape : (i == local.iter_1265.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1266.code == ","
        ? [for i, b in local.iter_1265.tape : (i == local.iter_1265.tape_ptr ? local.ascii_lookup[local.curr_1266.input] : b)]
        : local.iter_1265.tape)

    tape_ptr = (
      local.curr_1266.code == "<"
        ? local.iter_1265.tape_ptr == 0 ? length(local.iter_1265.tape) - 1 : local.iter_1265.tape_ptr - 1 :
      local.curr_1266.code == ">"
        ? local.iter_1265.tape_ptr == length(local.iter_1265.tape) - 1 ? 0 : local.iter_1265.tape_ptr + 1
        : local.iter_1265.tape_ptr)

    code_ptr = 1 + (
      local.curr_1266.code == "["
        ? local.iter_1265.tape[local.iter_1265.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1265.code_ptr)] : local.iter_1265.code_ptr :
      local.curr_1266.code == "]"
        ? local.iter_1265.tape[local.iter_1265.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1265.code_ptr)] : local.iter_1265.code_ptr
        : local.iter_1265.code_ptr)

    steps_taken = 1 + local.iter_1265.steps_taken
  }
}

locals {
  end_of_code_1267 = try(local.iter_1266.code_ptr >= length(var.code), true)

  curr_1267 = local.end_of_code_1267 ? null : {
    code = substr(var.code, local.iter_1266.code_ptr, 1)
    input = substr(var.code, local.iter_1266.code_ptr, 1) == "," ? substr(local.iter_1266.input, 0, 1) : null
  }

  iter_1267 = local.end_of_code_1267 ? local.iter_1266 : {
    input = (local.curr_1267.code == ","
      ? substr(local.iter_1266.input, 1, -1)
      : local.iter_1266.input)

    output = (local.curr_1267.code == "."
      ? "${local.iter_1266.output}${jsondecode(format("\"\\u%04x\"", local.iter_1266.tape[local.iter_1266.tape_ptr]))}"
      : local.iter_1266.output)
    
    tape = (
      local.curr_1267.code == "+"
        ? [for i, b in local.iter_1266.tape : (i == local.iter_1266.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1267.code == "-"
        ? [for i, b in local.iter_1266.tape : (i == local.iter_1266.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1267.code == ","
        ? [for i, b in local.iter_1266.tape : (i == local.iter_1266.tape_ptr ? local.ascii_lookup[local.curr_1267.input] : b)]
        : local.iter_1266.tape)

    tape_ptr = (
      local.curr_1267.code == "<"
        ? local.iter_1266.tape_ptr == 0 ? length(local.iter_1266.tape) - 1 : local.iter_1266.tape_ptr - 1 :
      local.curr_1267.code == ">"
        ? local.iter_1266.tape_ptr == length(local.iter_1266.tape) - 1 ? 0 : local.iter_1266.tape_ptr + 1
        : local.iter_1266.tape_ptr)

    code_ptr = 1 + (
      local.curr_1267.code == "["
        ? local.iter_1266.tape[local.iter_1266.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1266.code_ptr)] : local.iter_1266.code_ptr :
      local.curr_1267.code == "]"
        ? local.iter_1266.tape[local.iter_1266.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1266.code_ptr)] : local.iter_1266.code_ptr
        : local.iter_1266.code_ptr)

    steps_taken = 1 + local.iter_1266.steps_taken
  }
}

locals {
  end_of_code_1268 = try(local.iter_1267.code_ptr >= length(var.code), true)

  curr_1268 = local.end_of_code_1268 ? null : {
    code = substr(var.code, local.iter_1267.code_ptr, 1)
    input = substr(var.code, local.iter_1267.code_ptr, 1) == "," ? substr(local.iter_1267.input, 0, 1) : null
  }

  iter_1268 = local.end_of_code_1268 ? local.iter_1267 : {
    input = (local.curr_1268.code == ","
      ? substr(local.iter_1267.input, 1, -1)
      : local.iter_1267.input)

    output = (local.curr_1268.code == "."
      ? "${local.iter_1267.output}${jsondecode(format("\"\\u%04x\"", local.iter_1267.tape[local.iter_1267.tape_ptr]))}"
      : local.iter_1267.output)
    
    tape = (
      local.curr_1268.code == "+"
        ? [for i, b in local.iter_1267.tape : (i == local.iter_1267.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1268.code == "-"
        ? [for i, b in local.iter_1267.tape : (i == local.iter_1267.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1268.code == ","
        ? [for i, b in local.iter_1267.tape : (i == local.iter_1267.tape_ptr ? local.ascii_lookup[local.curr_1268.input] : b)]
        : local.iter_1267.tape)

    tape_ptr = (
      local.curr_1268.code == "<"
        ? local.iter_1267.tape_ptr == 0 ? length(local.iter_1267.tape) - 1 : local.iter_1267.tape_ptr - 1 :
      local.curr_1268.code == ">"
        ? local.iter_1267.tape_ptr == length(local.iter_1267.tape) - 1 ? 0 : local.iter_1267.tape_ptr + 1
        : local.iter_1267.tape_ptr)

    code_ptr = 1 + (
      local.curr_1268.code == "["
        ? local.iter_1267.tape[local.iter_1267.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1267.code_ptr)] : local.iter_1267.code_ptr :
      local.curr_1268.code == "]"
        ? local.iter_1267.tape[local.iter_1267.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1267.code_ptr)] : local.iter_1267.code_ptr
        : local.iter_1267.code_ptr)

    steps_taken = 1 + local.iter_1267.steps_taken
  }
}

locals {
  end_of_code_1269 = try(local.iter_1268.code_ptr >= length(var.code), true)

  curr_1269 = local.end_of_code_1269 ? null : {
    code = substr(var.code, local.iter_1268.code_ptr, 1)
    input = substr(var.code, local.iter_1268.code_ptr, 1) == "," ? substr(local.iter_1268.input, 0, 1) : null
  }

  iter_1269 = local.end_of_code_1269 ? local.iter_1268 : {
    input = (local.curr_1269.code == ","
      ? substr(local.iter_1268.input, 1, -1)
      : local.iter_1268.input)

    output = (local.curr_1269.code == "."
      ? "${local.iter_1268.output}${jsondecode(format("\"\\u%04x\"", local.iter_1268.tape[local.iter_1268.tape_ptr]))}"
      : local.iter_1268.output)
    
    tape = (
      local.curr_1269.code == "+"
        ? [for i, b in local.iter_1268.tape : (i == local.iter_1268.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1269.code == "-"
        ? [for i, b in local.iter_1268.tape : (i == local.iter_1268.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1269.code == ","
        ? [for i, b in local.iter_1268.tape : (i == local.iter_1268.tape_ptr ? local.ascii_lookup[local.curr_1269.input] : b)]
        : local.iter_1268.tape)

    tape_ptr = (
      local.curr_1269.code == "<"
        ? local.iter_1268.tape_ptr == 0 ? length(local.iter_1268.tape) - 1 : local.iter_1268.tape_ptr - 1 :
      local.curr_1269.code == ">"
        ? local.iter_1268.tape_ptr == length(local.iter_1268.tape) - 1 ? 0 : local.iter_1268.tape_ptr + 1
        : local.iter_1268.tape_ptr)

    code_ptr = 1 + (
      local.curr_1269.code == "["
        ? local.iter_1268.tape[local.iter_1268.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1268.code_ptr)] : local.iter_1268.code_ptr :
      local.curr_1269.code == "]"
        ? local.iter_1268.tape[local.iter_1268.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1268.code_ptr)] : local.iter_1268.code_ptr
        : local.iter_1268.code_ptr)

    steps_taken = 1 + local.iter_1268.steps_taken
  }
}

locals {
  end_of_code_1270 = try(local.iter_1269.code_ptr >= length(var.code), true)

  curr_1270 = local.end_of_code_1270 ? null : {
    code = substr(var.code, local.iter_1269.code_ptr, 1)
    input = substr(var.code, local.iter_1269.code_ptr, 1) == "," ? substr(local.iter_1269.input, 0, 1) : null
  }

  iter_1270 = local.end_of_code_1270 ? local.iter_1269 : {
    input = (local.curr_1270.code == ","
      ? substr(local.iter_1269.input, 1, -1)
      : local.iter_1269.input)

    output = (local.curr_1270.code == "."
      ? "${local.iter_1269.output}${jsondecode(format("\"\\u%04x\"", local.iter_1269.tape[local.iter_1269.tape_ptr]))}"
      : local.iter_1269.output)
    
    tape = (
      local.curr_1270.code == "+"
        ? [for i, b in local.iter_1269.tape : (i == local.iter_1269.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1270.code == "-"
        ? [for i, b in local.iter_1269.tape : (i == local.iter_1269.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1270.code == ","
        ? [for i, b in local.iter_1269.tape : (i == local.iter_1269.tape_ptr ? local.ascii_lookup[local.curr_1270.input] : b)]
        : local.iter_1269.tape)

    tape_ptr = (
      local.curr_1270.code == "<"
        ? local.iter_1269.tape_ptr == 0 ? length(local.iter_1269.tape) - 1 : local.iter_1269.tape_ptr - 1 :
      local.curr_1270.code == ">"
        ? local.iter_1269.tape_ptr == length(local.iter_1269.tape) - 1 ? 0 : local.iter_1269.tape_ptr + 1
        : local.iter_1269.tape_ptr)

    code_ptr = 1 + (
      local.curr_1270.code == "["
        ? local.iter_1269.tape[local.iter_1269.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1269.code_ptr)] : local.iter_1269.code_ptr :
      local.curr_1270.code == "]"
        ? local.iter_1269.tape[local.iter_1269.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1269.code_ptr)] : local.iter_1269.code_ptr
        : local.iter_1269.code_ptr)

    steps_taken = 1 + local.iter_1269.steps_taken
  }
}

locals {
  end_of_code_1271 = try(local.iter_1270.code_ptr >= length(var.code), true)

  curr_1271 = local.end_of_code_1271 ? null : {
    code = substr(var.code, local.iter_1270.code_ptr, 1)
    input = substr(var.code, local.iter_1270.code_ptr, 1) == "," ? substr(local.iter_1270.input, 0, 1) : null
  }

  iter_1271 = local.end_of_code_1271 ? local.iter_1270 : {
    input = (local.curr_1271.code == ","
      ? substr(local.iter_1270.input, 1, -1)
      : local.iter_1270.input)

    output = (local.curr_1271.code == "."
      ? "${local.iter_1270.output}${jsondecode(format("\"\\u%04x\"", local.iter_1270.tape[local.iter_1270.tape_ptr]))}"
      : local.iter_1270.output)
    
    tape = (
      local.curr_1271.code == "+"
        ? [for i, b in local.iter_1270.tape : (i == local.iter_1270.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1271.code == "-"
        ? [for i, b in local.iter_1270.tape : (i == local.iter_1270.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1271.code == ","
        ? [for i, b in local.iter_1270.tape : (i == local.iter_1270.tape_ptr ? local.ascii_lookup[local.curr_1271.input] : b)]
        : local.iter_1270.tape)

    tape_ptr = (
      local.curr_1271.code == "<"
        ? local.iter_1270.tape_ptr == 0 ? length(local.iter_1270.tape) - 1 : local.iter_1270.tape_ptr - 1 :
      local.curr_1271.code == ">"
        ? local.iter_1270.tape_ptr == length(local.iter_1270.tape) - 1 ? 0 : local.iter_1270.tape_ptr + 1
        : local.iter_1270.tape_ptr)

    code_ptr = 1 + (
      local.curr_1271.code == "["
        ? local.iter_1270.tape[local.iter_1270.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1270.code_ptr)] : local.iter_1270.code_ptr :
      local.curr_1271.code == "]"
        ? local.iter_1270.tape[local.iter_1270.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1270.code_ptr)] : local.iter_1270.code_ptr
        : local.iter_1270.code_ptr)

    steps_taken = 1 + local.iter_1270.steps_taken
  }
}

locals {
  end_of_code_1272 = try(local.iter_1271.code_ptr >= length(var.code), true)

  curr_1272 = local.end_of_code_1272 ? null : {
    code = substr(var.code, local.iter_1271.code_ptr, 1)
    input = substr(var.code, local.iter_1271.code_ptr, 1) == "," ? substr(local.iter_1271.input, 0, 1) : null
  }

  iter_1272 = local.end_of_code_1272 ? local.iter_1271 : {
    input = (local.curr_1272.code == ","
      ? substr(local.iter_1271.input, 1, -1)
      : local.iter_1271.input)

    output = (local.curr_1272.code == "."
      ? "${local.iter_1271.output}${jsondecode(format("\"\\u%04x\"", local.iter_1271.tape[local.iter_1271.tape_ptr]))}"
      : local.iter_1271.output)
    
    tape = (
      local.curr_1272.code == "+"
        ? [for i, b in local.iter_1271.tape : (i == local.iter_1271.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1272.code == "-"
        ? [for i, b in local.iter_1271.tape : (i == local.iter_1271.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1272.code == ","
        ? [for i, b in local.iter_1271.tape : (i == local.iter_1271.tape_ptr ? local.ascii_lookup[local.curr_1272.input] : b)]
        : local.iter_1271.tape)

    tape_ptr = (
      local.curr_1272.code == "<"
        ? local.iter_1271.tape_ptr == 0 ? length(local.iter_1271.tape) - 1 : local.iter_1271.tape_ptr - 1 :
      local.curr_1272.code == ">"
        ? local.iter_1271.tape_ptr == length(local.iter_1271.tape) - 1 ? 0 : local.iter_1271.tape_ptr + 1
        : local.iter_1271.tape_ptr)

    code_ptr = 1 + (
      local.curr_1272.code == "["
        ? local.iter_1271.tape[local.iter_1271.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1271.code_ptr)] : local.iter_1271.code_ptr :
      local.curr_1272.code == "]"
        ? local.iter_1271.tape[local.iter_1271.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1271.code_ptr)] : local.iter_1271.code_ptr
        : local.iter_1271.code_ptr)

    steps_taken = 1 + local.iter_1271.steps_taken
  }
}

locals {
  end_of_code_1273 = try(local.iter_1272.code_ptr >= length(var.code), true)

  curr_1273 = local.end_of_code_1273 ? null : {
    code = substr(var.code, local.iter_1272.code_ptr, 1)
    input = substr(var.code, local.iter_1272.code_ptr, 1) == "," ? substr(local.iter_1272.input, 0, 1) : null
  }

  iter_1273 = local.end_of_code_1273 ? local.iter_1272 : {
    input = (local.curr_1273.code == ","
      ? substr(local.iter_1272.input, 1, -1)
      : local.iter_1272.input)

    output = (local.curr_1273.code == "."
      ? "${local.iter_1272.output}${jsondecode(format("\"\\u%04x\"", local.iter_1272.tape[local.iter_1272.tape_ptr]))}"
      : local.iter_1272.output)
    
    tape = (
      local.curr_1273.code == "+"
        ? [for i, b in local.iter_1272.tape : (i == local.iter_1272.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1273.code == "-"
        ? [for i, b in local.iter_1272.tape : (i == local.iter_1272.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1273.code == ","
        ? [for i, b in local.iter_1272.tape : (i == local.iter_1272.tape_ptr ? local.ascii_lookup[local.curr_1273.input] : b)]
        : local.iter_1272.tape)

    tape_ptr = (
      local.curr_1273.code == "<"
        ? local.iter_1272.tape_ptr == 0 ? length(local.iter_1272.tape) - 1 : local.iter_1272.tape_ptr - 1 :
      local.curr_1273.code == ">"
        ? local.iter_1272.tape_ptr == length(local.iter_1272.tape) - 1 ? 0 : local.iter_1272.tape_ptr + 1
        : local.iter_1272.tape_ptr)

    code_ptr = 1 + (
      local.curr_1273.code == "["
        ? local.iter_1272.tape[local.iter_1272.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1272.code_ptr)] : local.iter_1272.code_ptr :
      local.curr_1273.code == "]"
        ? local.iter_1272.tape[local.iter_1272.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1272.code_ptr)] : local.iter_1272.code_ptr
        : local.iter_1272.code_ptr)

    steps_taken = 1 + local.iter_1272.steps_taken
  }
}

locals {
  end_of_code_1274 = try(local.iter_1273.code_ptr >= length(var.code), true)

  curr_1274 = local.end_of_code_1274 ? null : {
    code = substr(var.code, local.iter_1273.code_ptr, 1)
    input = substr(var.code, local.iter_1273.code_ptr, 1) == "," ? substr(local.iter_1273.input, 0, 1) : null
  }

  iter_1274 = local.end_of_code_1274 ? local.iter_1273 : {
    input = (local.curr_1274.code == ","
      ? substr(local.iter_1273.input, 1, -1)
      : local.iter_1273.input)

    output = (local.curr_1274.code == "."
      ? "${local.iter_1273.output}${jsondecode(format("\"\\u%04x\"", local.iter_1273.tape[local.iter_1273.tape_ptr]))}"
      : local.iter_1273.output)
    
    tape = (
      local.curr_1274.code == "+"
        ? [for i, b in local.iter_1273.tape : (i == local.iter_1273.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1274.code == "-"
        ? [for i, b in local.iter_1273.tape : (i == local.iter_1273.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1274.code == ","
        ? [for i, b in local.iter_1273.tape : (i == local.iter_1273.tape_ptr ? local.ascii_lookup[local.curr_1274.input] : b)]
        : local.iter_1273.tape)

    tape_ptr = (
      local.curr_1274.code == "<"
        ? local.iter_1273.tape_ptr == 0 ? length(local.iter_1273.tape) - 1 : local.iter_1273.tape_ptr - 1 :
      local.curr_1274.code == ">"
        ? local.iter_1273.tape_ptr == length(local.iter_1273.tape) - 1 ? 0 : local.iter_1273.tape_ptr + 1
        : local.iter_1273.tape_ptr)

    code_ptr = 1 + (
      local.curr_1274.code == "["
        ? local.iter_1273.tape[local.iter_1273.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1273.code_ptr)] : local.iter_1273.code_ptr :
      local.curr_1274.code == "]"
        ? local.iter_1273.tape[local.iter_1273.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1273.code_ptr)] : local.iter_1273.code_ptr
        : local.iter_1273.code_ptr)

    steps_taken = 1 + local.iter_1273.steps_taken
  }
}

locals {
  end_of_code_1275 = try(local.iter_1274.code_ptr >= length(var.code), true)

  curr_1275 = local.end_of_code_1275 ? null : {
    code = substr(var.code, local.iter_1274.code_ptr, 1)
    input = substr(var.code, local.iter_1274.code_ptr, 1) == "," ? substr(local.iter_1274.input, 0, 1) : null
  }

  iter_1275 = local.end_of_code_1275 ? local.iter_1274 : {
    input = (local.curr_1275.code == ","
      ? substr(local.iter_1274.input, 1, -1)
      : local.iter_1274.input)

    output = (local.curr_1275.code == "."
      ? "${local.iter_1274.output}${jsondecode(format("\"\\u%04x\"", local.iter_1274.tape[local.iter_1274.tape_ptr]))}"
      : local.iter_1274.output)
    
    tape = (
      local.curr_1275.code == "+"
        ? [for i, b in local.iter_1274.tape : (i == local.iter_1274.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1275.code == "-"
        ? [for i, b in local.iter_1274.tape : (i == local.iter_1274.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1275.code == ","
        ? [for i, b in local.iter_1274.tape : (i == local.iter_1274.tape_ptr ? local.ascii_lookup[local.curr_1275.input] : b)]
        : local.iter_1274.tape)

    tape_ptr = (
      local.curr_1275.code == "<"
        ? local.iter_1274.tape_ptr == 0 ? length(local.iter_1274.tape) - 1 : local.iter_1274.tape_ptr - 1 :
      local.curr_1275.code == ">"
        ? local.iter_1274.tape_ptr == length(local.iter_1274.tape) - 1 ? 0 : local.iter_1274.tape_ptr + 1
        : local.iter_1274.tape_ptr)

    code_ptr = 1 + (
      local.curr_1275.code == "["
        ? local.iter_1274.tape[local.iter_1274.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1274.code_ptr)] : local.iter_1274.code_ptr :
      local.curr_1275.code == "]"
        ? local.iter_1274.tape[local.iter_1274.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1274.code_ptr)] : local.iter_1274.code_ptr
        : local.iter_1274.code_ptr)

    steps_taken = 1 + local.iter_1274.steps_taken
  }
}

locals {
  end_of_code_1276 = try(local.iter_1275.code_ptr >= length(var.code), true)

  curr_1276 = local.end_of_code_1276 ? null : {
    code = substr(var.code, local.iter_1275.code_ptr, 1)
    input = substr(var.code, local.iter_1275.code_ptr, 1) == "," ? substr(local.iter_1275.input, 0, 1) : null
  }

  iter_1276 = local.end_of_code_1276 ? local.iter_1275 : {
    input = (local.curr_1276.code == ","
      ? substr(local.iter_1275.input, 1, -1)
      : local.iter_1275.input)

    output = (local.curr_1276.code == "."
      ? "${local.iter_1275.output}${jsondecode(format("\"\\u%04x\"", local.iter_1275.tape[local.iter_1275.tape_ptr]))}"
      : local.iter_1275.output)
    
    tape = (
      local.curr_1276.code == "+"
        ? [for i, b in local.iter_1275.tape : (i == local.iter_1275.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1276.code == "-"
        ? [for i, b in local.iter_1275.tape : (i == local.iter_1275.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1276.code == ","
        ? [for i, b in local.iter_1275.tape : (i == local.iter_1275.tape_ptr ? local.ascii_lookup[local.curr_1276.input] : b)]
        : local.iter_1275.tape)

    tape_ptr = (
      local.curr_1276.code == "<"
        ? local.iter_1275.tape_ptr == 0 ? length(local.iter_1275.tape) - 1 : local.iter_1275.tape_ptr - 1 :
      local.curr_1276.code == ">"
        ? local.iter_1275.tape_ptr == length(local.iter_1275.tape) - 1 ? 0 : local.iter_1275.tape_ptr + 1
        : local.iter_1275.tape_ptr)

    code_ptr = 1 + (
      local.curr_1276.code == "["
        ? local.iter_1275.tape[local.iter_1275.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1275.code_ptr)] : local.iter_1275.code_ptr :
      local.curr_1276.code == "]"
        ? local.iter_1275.tape[local.iter_1275.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1275.code_ptr)] : local.iter_1275.code_ptr
        : local.iter_1275.code_ptr)

    steps_taken = 1 + local.iter_1275.steps_taken
  }
}

locals {
  end_of_code_1277 = try(local.iter_1276.code_ptr >= length(var.code), true)

  curr_1277 = local.end_of_code_1277 ? null : {
    code = substr(var.code, local.iter_1276.code_ptr, 1)
    input = substr(var.code, local.iter_1276.code_ptr, 1) == "," ? substr(local.iter_1276.input, 0, 1) : null
  }

  iter_1277 = local.end_of_code_1277 ? local.iter_1276 : {
    input = (local.curr_1277.code == ","
      ? substr(local.iter_1276.input, 1, -1)
      : local.iter_1276.input)

    output = (local.curr_1277.code == "."
      ? "${local.iter_1276.output}${jsondecode(format("\"\\u%04x\"", local.iter_1276.tape[local.iter_1276.tape_ptr]))}"
      : local.iter_1276.output)
    
    tape = (
      local.curr_1277.code == "+"
        ? [for i, b in local.iter_1276.tape : (i == local.iter_1276.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1277.code == "-"
        ? [for i, b in local.iter_1276.tape : (i == local.iter_1276.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1277.code == ","
        ? [for i, b in local.iter_1276.tape : (i == local.iter_1276.tape_ptr ? local.ascii_lookup[local.curr_1277.input] : b)]
        : local.iter_1276.tape)

    tape_ptr = (
      local.curr_1277.code == "<"
        ? local.iter_1276.tape_ptr == 0 ? length(local.iter_1276.tape) - 1 : local.iter_1276.tape_ptr - 1 :
      local.curr_1277.code == ">"
        ? local.iter_1276.tape_ptr == length(local.iter_1276.tape) - 1 ? 0 : local.iter_1276.tape_ptr + 1
        : local.iter_1276.tape_ptr)

    code_ptr = 1 + (
      local.curr_1277.code == "["
        ? local.iter_1276.tape[local.iter_1276.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1276.code_ptr)] : local.iter_1276.code_ptr :
      local.curr_1277.code == "]"
        ? local.iter_1276.tape[local.iter_1276.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1276.code_ptr)] : local.iter_1276.code_ptr
        : local.iter_1276.code_ptr)

    steps_taken = 1 + local.iter_1276.steps_taken
  }
}

locals {
  end_of_code_1278 = try(local.iter_1277.code_ptr >= length(var.code), true)

  curr_1278 = local.end_of_code_1278 ? null : {
    code = substr(var.code, local.iter_1277.code_ptr, 1)
    input = substr(var.code, local.iter_1277.code_ptr, 1) == "," ? substr(local.iter_1277.input, 0, 1) : null
  }

  iter_1278 = local.end_of_code_1278 ? local.iter_1277 : {
    input = (local.curr_1278.code == ","
      ? substr(local.iter_1277.input, 1, -1)
      : local.iter_1277.input)

    output = (local.curr_1278.code == "."
      ? "${local.iter_1277.output}${jsondecode(format("\"\\u%04x\"", local.iter_1277.tape[local.iter_1277.tape_ptr]))}"
      : local.iter_1277.output)
    
    tape = (
      local.curr_1278.code == "+"
        ? [for i, b in local.iter_1277.tape : (i == local.iter_1277.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1278.code == "-"
        ? [for i, b in local.iter_1277.tape : (i == local.iter_1277.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1278.code == ","
        ? [for i, b in local.iter_1277.tape : (i == local.iter_1277.tape_ptr ? local.ascii_lookup[local.curr_1278.input] : b)]
        : local.iter_1277.tape)

    tape_ptr = (
      local.curr_1278.code == "<"
        ? local.iter_1277.tape_ptr == 0 ? length(local.iter_1277.tape) - 1 : local.iter_1277.tape_ptr - 1 :
      local.curr_1278.code == ">"
        ? local.iter_1277.tape_ptr == length(local.iter_1277.tape) - 1 ? 0 : local.iter_1277.tape_ptr + 1
        : local.iter_1277.tape_ptr)

    code_ptr = 1 + (
      local.curr_1278.code == "["
        ? local.iter_1277.tape[local.iter_1277.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1277.code_ptr)] : local.iter_1277.code_ptr :
      local.curr_1278.code == "]"
        ? local.iter_1277.tape[local.iter_1277.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1277.code_ptr)] : local.iter_1277.code_ptr
        : local.iter_1277.code_ptr)

    steps_taken = 1 + local.iter_1277.steps_taken
  }
}

locals {
  end_of_code_1279 = try(local.iter_1278.code_ptr >= length(var.code), true)

  curr_1279 = local.end_of_code_1279 ? null : {
    code = substr(var.code, local.iter_1278.code_ptr, 1)
    input = substr(var.code, local.iter_1278.code_ptr, 1) == "," ? substr(local.iter_1278.input, 0, 1) : null
  }

  iter_1279 = local.end_of_code_1279 ? local.iter_1278 : {
    input = (local.curr_1279.code == ","
      ? substr(local.iter_1278.input, 1, -1)
      : local.iter_1278.input)

    output = (local.curr_1279.code == "."
      ? "${local.iter_1278.output}${jsondecode(format("\"\\u%04x\"", local.iter_1278.tape[local.iter_1278.tape_ptr]))}"
      : local.iter_1278.output)
    
    tape = (
      local.curr_1279.code == "+"
        ? [for i, b in local.iter_1278.tape : (i == local.iter_1278.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1279.code == "-"
        ? [for i, b in local.iter_1278.tape : (i == local.iter_1278.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1279.code == ","
        ? [for i, b in local.iter_1278.tape : (i == local.iter_1278.tape_ptr ? local.ascii_lookup[local.curr_1279.input] : b)]
        : local.iter_1278.tape)

    tape_ptr = (
      local.curr_1279.code == "<"
        ? local.iter_1278.tape_ptr == 0 ? length(local.iter_1278.tape) - 1 : local.iter_1278.tape_ptr - 1 :
      local.curr_1279.code == ">"
        ? local.iter_1278.tape_ptr == length(local.iter_1278.tape) - 1 ? 0 : local.iter_1278.tape_ptr + 1
        : local.iter_1278.tape_ptr)

    code_ptr = 1 + (
      local.curr_1279.code == "["
        ? local.iter_1278.tape[local.iter_1278.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1278.code_ptr)] : local.iter_1278.code_ptr :
      local.curr_1279.code == "]"
        ? local.iter_1278.tape[local.iter_1278.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1278.code_ptr)] : local.iter_1278.code_ptr
        : local.iter_1278.code_ptr)

    steps_taken = 1 + local.iter_1278.steps_taken
  }
}

locals {
  end_of_code_1280 = try(local.iter_1279.code_ptr >= length(var.code), true)

  curr_1280 = local.end_of_code_1280 ? null : {
    code = substr(var.code, local.iter_1279.code_ptr, 1)
    input = substr(var.code, local.iter_1279.code_ptr, 1) == "," ? substr(local.iter_1279.input, 0, 1) : null
  }

  iter_1280 = local.end_of_code_1280 ? local.iter_1279 : {
    input = (local.curr_1280.code == ","
      ? substr(local.iter_1279.input, 1, -1)
      : local.iter_1279.input)

    output = (local.curr_1280.code == "."
      ? "${local.iter_1279.output}${jsondecode(format("\"\\u%04x\"", local.iter_1279.tape[local.iter_1279.tape_ptr]))}"
      : local.iter_1279.output)
    
    tape = (
      local.curr_1280.code == "+"
        ? [for i, b in local.iter_1279.tape : (i == local.iter_1279.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1280.code == "-"
        ? [for i, b in local.iter_1279.tape : (i == local.iter_1279.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1280.code == ","
        ? [for i, b in local.iter_1279.tape : (i == local.iter_1279.tape_ptr ? local.ascii_lookup[local.curr_1280.input] : b)]
        : local.iter_1279.tape)

    tape_ptr = (
      local.curr_1280.code == "<"
        ? local.iter_1279.tape_ptr == 0 ? length(local.iter_1279.tape) - 1 : local.iter_1279.tape_ptr - 1 :
      local.curr_1280.code == ">"
        ? local.iter_1279.tape_ptr == length(local.iter_1279.tape) - 1 ? 0 : local.iter_1279.tape_ptr + 1
        : local.iter_1279.tape_ptr)

    code_ptr = 1 + (
      local.curr_1280.code == "["
        ? local.iter_1279.tape[local.iter_1279.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1279.code_ptr)] : local.iter_1279.code_ptr :
      local.curr_1280.code == "]"
        ? local.iter_1279.tape[local.iter_1279.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1279.code_ptr)] : local.iter_1279.code_ptr
        : local.iter_1279.code_ptr)

    steps_taken = 1 + local.iter_1279.steps_taken
  }
}

locals {
  end_of_code_1281 = try(local.iter_1280.code_ptr >= length(var.code), true)

  curr_1281 = local.end_of_code_1281 ? null : {
    code = substr(var.code, local.iter_1280.code_ptr, 1)
    input = substr(var.code, local.iter_1280.code_ptr, 1) == "," ? substr(local.iter_1280.input, 0, 1) : null
  }

  iter_1281 = local.end_of_code_1281 ? local.iter_1280 : {
    input = (local.curr_1281.code == ","
      ? substr(local.iter_1280.input, 1, -1)
      : local.iter_1280.input)

    output = (local.curr_1281.code == "."
      ? "${local.iter_1280.output}${jsondecode(format("\"\\u%04x\"", local.iter_1280.tape[local.iter_1280.tape_ptr]))}"
      : local.iter_1280.output)
    
    tape = (
      local.curr_1281.code == "+"
        ? [for i, b in local.iter_1280.tape : (i == local.iter_1280.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1281.code == "-"
        ? [for i, b in local.iter_1280.tape : (i == local.iter_1280.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1281.code == ","
        ? [for i, b in local.iter_1280.tape : (i == local.iter_1280.tape_ptr ? local.ascii_lookup[local.curr_1281.input] : b)]
        : local.iter_1280.tape)

    tape_ptr = (
      local.curr_1281.code == "<"
        ? local.iter_1280.tape_ptr == 0 ? length(local.iter_1280.tape) - 1 : local.iter_1280.tape_ptr - 1 :
      local.curr_1281.code == ">"
        ? local.iter_1280.tape_ptr == length(local.iter_1280.tape) - 1 ? 0 : local.iter_1280.tape_ptr + 1
        : local.iter_1280.tape_ptr)

    code_ptr = 1 + (
      local.curr_1281.code == "["
        ? local.iter_1280.tape[local.iter_1280.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1280.code_ptr)] : local.iter_1280.code_ptr :
      local.curr_1281.code == "]"
        ? local.iter_1280.tape[local.iter_1280.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1280.code_ptr)] : local.iter_1280.code_ptr
        : local.iter_1280.code_ptr)

    steps_taken = 1 + local.iter_1280.steps_taken
  }
}

locals {
  end_of_code_1282 = try(local.iter_1281.code_ptr >= length(var.code), true)

  curr_1282 = local.end_of_code_1282 ? null : {
    code = substr(var.code, local.iter_1281.code_ptr, 1)
    input = substr(var.code, local.iter_1281.code_ptr, 1) == "," ? substr(local.iter_1281.input, 0, 1) : null
  }

  iter_1282 = local.end_of_code_1282 ? local.iter_1281 : {
    input = (local.curr_1282.code == ","
      ? substr(local.iter_1281.input, 1, -1)
      : local.iter_1281.input)

    output = (local.curr_1282.code == "."
      ? "${local.iter_1281.output}${jsondecode(format("\"\\u%04x\"", local.iter_1281.tape[local.iter_1281.tape_ptr]))}"
      : local.iter_1281.output)
    
    tape = (
      local.curr_1282.code == "+"
        ? [for i, b in local.iter_1281.tape : (i == local.iter_1281.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1282.code == "-"
        ? [for i, b in local.iter_1281.tape : (i == local.iter_1281.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1282.code == ","
        ? [for i, b in local.iter_1281.tape : (i == local.iter_1281.tape_ptr ? local.ascii_lookup[local.curr_1282.input] : b)]
        : local.iter_1281.tape)

    tape_ptr = (
      local.curr_1282.code == "<"
        ? local.iter_1281.tape_ptr == 0 ? length(local.iter_1281.tape) - 1 : local.iter_1281.tape_ptr - 1 :
      local.curr_1282.code == ">"
        ? local.iter_1281.tape_ptr == length(local.iter_1281.tape) - 1 ? 0 : local.iter_1281.tape_ptr + 1
        : local.iter_1281.tape_ptr)

    code_ptr = 1 + (
      local.curr_1282.code == "["
        ? local.iter_1281.tape[local.iter_1281.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1281.code_ptr)] : local.iter_1281.code_ptr :
      local.curr_1282.code == "]"
        ? local.iter_1281.tape[local.iter_1281.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1281.code_ptr)] : local.iter_1281.code_ptr
        : local.iter_1281.code_ptr)

    steps_taken = 1 + local.iter_1281.steps_taken
  }
}

locals {
  end_of_code_1283 = try(local.iter_1282.code_ptr >= length(var.code), true)

  curr_1283 = local.end_of_code_1283 ? null : {
    code = substr(var.code, local.iter_1282.code_ptr, 1)
    input = substr(var.code, local.iter_1282.code_ptr, 1) == "," ? substr(local.iter_1282.input, 0, 1) : null
  }

  iter_1283 = local.end_of_code_1283 ? local.iter_1282 : {
    input = (local.curr_1283.code == ","
      ? substr(local.iter_1282.input, 1, -1)
      : local.iter_1282.input)

    output = (local.curr_1283.code == "."
      ? "${local.iter_1282.output}${jsondecode(format("\"\\u%04x\"", local.iter_1282.tape[local.iter_1282.tape_ptr]))}"
      : local.iter_1282.output)
    
    tape = (
      local.curr_1283.code == "+"
        ? [for i, b in local.iter_1282.tape : (i == local.iter_1282.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1283.code == "-"
        ? [for i, b in local.iter_1282.tape : (i == local.iter_1282.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1283.code == ","
        ? [for i, b in local.iter_1282.tape : (i == local.iter_1282.tape_ptr ? local.ascii_lookup[local.curr_1283.input] : b)]
        : local.iter_1282.tape)

    tape_ptr = (
      local.curr_1283.code == "<"
        ? local.iter_1282.tape_ptr == 0 ? length(local.iter_1282.tape) - 1 : local.iter_1282.tape_ptr - 1 :
      local.curr_1283.code == ">"
        ? local.iter_1282.tape_ptr == length(local.iter_1282.tape) - 1 ? 0 : local.iter_1282.tape_ptr + 1
        : local.iter_1282.tape_ptr)

    code_ptr = 1 + (
      local.curr_1283.code == "["
        ? local.iter_1282.tape[local.iter_1282.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1282.code_ptr)] : local.iter_1282.code_ptr :
      local.curr_1283.code == "]"
        ? local.iter_1282.tape[local.iter_1282.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1282.code_ptr)] : local.iter_1282.code_ptr
        : local.iter_1282.code_ptr)

    steps_taken = 1 + local.iter_1282.steps_taken
  }
}

locals {
  end_of_code_1284 = try(local.iter_1283.code_ptr >= length(var.code), true)

  curr_1284 = local.end_of_code_1284 ? null : {
    code = substr(var.code, local.iter_1283.code_ptr, 1)
    input = substr(var.code, local.iter_1283.code_ptr, 1) == "," ? substr(local.iter_1283.input, 0, 1) : null
  }

  iter_1284 = local.end_of_code_1284 ? local.iter_1283 : {
    input = (local.curr_1284.code == ","
      ? substr(local.iter_1283.input, 1, -1)
      : local.iter_1283.input)

    output = (local.curr_1284.code == "."
      ? "${local.iter_1283.output}${jsondecode(format("\"\\u%04x\"", local.iter_1283.tape[local.iter_1283.tape_ptr]))}"
      : local.iter_1283.output)
    
    tape = (
      local.curr_1284.code == "+"
        ? [for i, b in local.iter_1283.tape : (i == local.iter_1283.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1284.code == "-"
        ? [for i, b in local.iter_1283.tape : (i == local.iter_1283.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1284.code == ","
        ? [for i, b in local.iter_1283.tape : (i == local.iter_1283.tape_ptr ? local.ascii_lookup[local.curr_1284.input] : b)]
        : local.iter_1283.tape)

    tape_ptr = (
      local.curr_1284.code == "<"
        ? local.iter_1283.tape_ptr == 0 ? length(local.iter_1283.tape) - 1 : local.iter_1283.tape_ptr - 1 :
      local.curr_1284.code == ">"
        ? local.iter_1283.tape_ptr == length(local.iter_1283.tape) - 1 ? 0 : local.iter_1283.tape_ptr + 1
        : local.iter_1283.tape_ptr)

    code_ptr = 1 + (
      local.curr_1284.code == "["
        ? local.iter_1283.tape[local.iter_1283.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1283.code_ptr)] : local.iter_1283.code_ptr :
      local.curr_1284.code == "]"
        ? local.iter_1283.tape[local.iter_1283.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1283.code_ptr)] : local.iter_1283.code_ptr
        : local.iter_1283.code_ptr)

    steps_taken = 1 + local.iter_1283.steps_taken
  }
}

locals {
  end_of_code_1285 = try(local.iter_1284.code_ptr >= length(var.code), true)

  curr_1285 = local.end_of_code_1285 ? null : {
    code = substr(var.code, local.iter_1284.code_ptr, 1)
    input = substr(var.code, local.iter_1284.code_ptr, 1) == "," ? substr(local.iter_1284.input, 0, 1) : null
  }

  iter_1285 = local.end_of_code_1285 ? local.iter_1284 : {
    input = (local.curr_1285.code == ","
      ? substr(local.iter_1284.input, 1, -1)
      : local.iter_1284.input)

    output = (local.curr_1285.code == "."
      ? "${local.iter_1284.output}${jsondecode(format("\"\\u%04x\"", local.iter_1284.tape[local.iter_1284.tape_ptr]))}"
      : local.iter_1284.output)
    
    tape = (
      local.curr_1285.code == "+"
        ? [for i, b in local.iter_1284.tape : (i == local.iter_1284.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1285.code == "-"
        ? [for i, b in local.iter_1284.tape : (i == local.iter_1284.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1285.code == ","
        ? [for i, b in local.iter_1284.tape : (i == local.iter_1284.tape_ptr ? local.ascii_lookup[local.curr_1285.input] : b)]
        : local.iter_1284.tape)

    tape_ptr = (
      local.curr_1285.code == "<"
        ? local.iter_1284.tape_ptr == 0 ? length(local.iter_1284.tape) - 1 : local.iter_1284.tape_ptr - 1 :
      local.curr_1285.code == ">"
        ? local.iter_1284.tape_ptr == length(local.iter_1284.tape) - 1 ? 0 : local.iter_1284.tape_ptr + 1
        : local.iter_1284.tape_ptr)

    code_ptr = 1 + (
      local.curr_1285.code == "["
        ? local.iter_1284.tape[local.iter_1284.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1284.code_ptr)] : local.iter_1284.code_ptr :
      local.curr_1285.code == "]"
        ? local.iter_1284.tape[local.iter_1284.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1284.code_ptr)] : local.iter_1284.code_ptr
        : local.iter_1284.code_ptr)

    steps_taken = 1 + local.iter_1284.steps_taken
  }
}

locals {
  end_of_code_1286 = try(local.iter_1285.code_ptr >= length(var.code), true)

  curr_1286 = local.end_of_code_1286 ? null : {
    code = substr(var.code, local.iter_1285.code_ptr, 1)
    input = substr(var.code, local.iter_1285.code_ptr, 1) == "," ? substr(local.iter_1285.input, 0, 1) : null
  }

  iter_1286 = local.end_of_code_1286 ? local.iter_1285 : {
    input = (local.curr_1286.code == ","
      ? substr(local.iter_1285.input, 1, -1)
      : local.iter_1285.input)

    output = (local.curr_1286.code == "."
      ? "${local.iter_1285.output}${jsondecode(format("\"\\u%04x\"", local.iter_1285.tape[local.iter_1285.tape_ptr]))}"
      : local.iter_1285.output)
    
    tape = (
      local.curr_1286.code == "+"
        ? [for i, b in local.iter_1285.tape : (i == local.iter_1285.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1286.code == "-"
        ? [for i, b in local.iter_1285.tape : (i == local.iter_1285.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1286.code == ","
        ? [for i, b in local.iter_1285.tape : (i == local.iter_1285.tape_ptr ? local.ascii_lookup[local.curr_1286.input] : b)]
        : local.iter_1285.tape)

    tape_ptr = (
      local.curr_1286.code == "<"
        ? local.iter_1285.tape_ptr == 0 ? length(local.iter_1285.tape) - 1 : local.iter_1285.tape_ptr - 1 :
      local.curr_1286.code == ">"
        ? local.iter_1285.tape_ptr == length(local.iter_1285.tape) - 1 ? 0 : local.iter_1285.tape_ptr + 1
        : local.iter_1285.tape_ptr)

    code_ptr = 1 + (
      local.curr_1286.code == "["
        ? local.iter_1285.tape[local.iter_1285.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1285.code_ptr)] : local.iter_1285.code_ptr :
      local.curr_1286.code == "]"
        ? local.iter_1285.tape[local.iter_1285.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1285.code_ptr)] : local.iter_1285.code_ptr
        : local.iter_1285.code_ptr)

    steps_taken = 1 + local.iter_1285.steps_taken
  }
}

locals {
  end_of_code_1287 = try(local.iter_1286.code_ptr >= length(var.code), true)

  curr_1287 = local.end_of_code_1287 ? null : {
    code = substr(var.code, local.iter_1286.code_ptr, 1)
    input = substr(var.code, local.iter_1286.code_ptr, 1) == "," ? substr(local.iter_1286.input, 0, 1) : null
  }

  iter_1287 = local.end_of_code_1287 ? local.iter_1286 : {
    input = (local.curr_1287.code == ","
      ? substr(local.iter_1286.input, 1, -1)
      : local.iter_1286.input)

    output = (local.curr_1287.code == "."
      ? "${local.iter_1286.output}${jsondecode(format("\"\\u%04x\"", local.iter_1286.tape[local.iter_1286.tape_ptr]))}"
      : local.iter_1286.output)
    
    tape = (
      local.curr_1287.code == "+"
        ? [for i, b in local.iter_1286.tape : (i == local.iter_1286.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1287.code == "-"
        ? [for i, b in local.iter_1286.tape : (i == local.iter_1286.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1287.code == ","
        ? [for i, b in local.iter_1286.tape : (i == local.iter_1286.tape_ptr ? local.ascii_lookup[local.curr_1287.input] : b)]
        : local.iter_1286.tape)

    tape_ptr = (
      local.curr_1287.code == "<"
        ? local.iter_1286.tape_ptr == 0 ? length(local.iter_1286.tape) - 1 : local.iter_1286.tape_ptr - 1 :
      local.curr_1287.code == ">"
        ? local.iter_1286.tape_ptr == length(local.iter_1286.tape) - 1 ? 0 : local.iter_1286.tape_ptr + 1
        : local.iter_1286.tape_ptr)

    code_ptr = 1 + (
      local.curr_1287.code == "["
        ? local.iter_1286.tape[local.iter_1286.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1286.code_ptr)] : local.iter_1286.code_ptr :
      local.curr_1287.code == "]"
        ? local.iter_1286.tape[local.iter_1286.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1286.code_ptr)] : local.iter_1286.code_ptr
        : local.iter_1286.code_ptr)

    steps_taken = 1 + local.iter_1286.steps_taken
  }
}

locals {
  end_of_code_1288 = try(local.iter_1287.code_ptr >= length(var.code), true)

  curr_1288 = local.end_of_code_1288 ? null : {
    code = substr(var.code, local.iter_1287.code_ptr, 1)
    input = substr(var.code, local.iter_1287.code_ptr, 1) == "," ? substr(local.iter_1287.input, 0, 1) : null
  }

  iter_1288 = local.end_of_code_1288 ? local.iter_1287 : {
    input = (local.curr_1288.code == ","
      ? substr(local.iter_1287.input, 1, -1)
      : local.iter_1287.input)

    output = (local.curr_1288.code == "."
      ? "${local.iter_1287.output}${jsondecode(format("\"\\u%04x\"", local.iter_1287.tape[local.iter_1287.tape_ptr]))}"
      : local.iter_1287.output)
    
    tape = (
      local.curr_1288.code == "+"
        ? [for i, b in local.iter_1287.tape : (i == local.iter_1287.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1288.code == "-"
        ? [for i, b in local.iter_1287.tape : (i == local.iter_1287.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1288.code == ","
        ? [for i, b in local.iter_1287.tape : (i == local.iter_1287.tape_ptr ? local.ascii_lookup[local.curr_1288.input] : b)]
        : local.iter_1287.tape)

    tape_ptr = (
      local.curr_1288.code == "<"
        ? local.iter_1287.tape_ptr == 0 ? length(local.iter_1287.tape) - 1 : local.iter_1287.tape_ptr - 1 :
      local.curr_1288.code == ">"
        ? local.iter_1287.tape_ptr == length(local.iter_1287.tape) - 1 ? 0 : local.iter_1287.tape_ptr + 1
        : local.iter_1287.tape_ptr)

    code_ptr = 1 + (
      local.curr_1288.code == "["
        ? local.iter_1287.tape[local.iter_1287.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1287.code_ptr)] : local.iter_1287.code_ptr :
      local.curr_1288.code == "]"
        ? local.iter_1287.tape[local.iter_1287.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1287.code_ptr)] : local.iter_1287.code_ptr
        : local.iter_1287.code_ptr)

    steps_taken = 1 + local.iter_1287.steps_taken
  }
}

locals {
  end_of_code_1289 = try(local.iter_1288.code_ptr >= length(var.code), true)

  curr_1289 = local.end_of_code_1289 ? null : {
    code = substr(var.code, local.iter_1288.code_ptr, 1)
    input = substr(var.code, local.iter_1288.code_ptr, 1) == "," ? substr(local.iter_1288.input, 0, 1) : null
  }

  iter_1289 = local.end_of_code_1289 ? local.iter_1288 : {
    input = (local.curr_1289.code == ","
      ? substr(local.iter_1288.input, 1, -1)
      : local.iter_1288.input)

    output = (local.curr_1289.code == "."
      ? "${local.iter_1288.output}${jsondecode(format("\"\\u%04x\"", local.iter_1288.tape[local.iter_1288.tape_ptr]))}"
      : local.iter_1288.output)
    
    tape = (
      local.curr_1289.code == "+"
        ? [for i, b in local.iter_1288.tape : (i == local.iter_1288.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1289.code == "-"
        ? [for i, b in local.iter_1288.tape : (i == local.iter_1288.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1289.code == ","
        ? [for i, b in local.iter_1288.tape : (i == local.iter_1288.tape_ptr ? local.ascii_lookup[local.curr_1289.input] : b)]
        : local.iter_1288.tape)

    tape_ptr = (
      local.curr_1289.code == "<"
        ? local.iter_1288.tape_ptr == 0 ? length(local.iter_1288.tape) - 1 : local.iter_1288.tape_ptr - 1 :
      local.curr_1289.code == ">"
        ? local.iter_1288.tape_ptr == length(local.iter_1288.tape) - 1 ? 0 : local.iter_1288.tape_ptr + 1
        : local.iter_1288.tape_ptr)

    code_ptr = 1 + (
      local.curr_1289.code == "["
        ? local.iter_1288.tape[local.iter_1288.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1288.code_ptr)] : local.iter_1288.code_ptr :
      local.curr_1289.code == "]"
        ? local.iter_1288.tape[local.iter_1288.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1288.code_ptr)] : local.iter_1288.code_ptr
        : local.iter_1288.code_ptr)

    steps_taken = 1 + local.iter_1288.steps_taken
  }
}

locals {
  end_of_code_1290 = try(local.iter_1289.code_ptr >= length(var.code), true)

  curr_1290 = local.end_of_code_1290 ? null : {
    code = substr(var.code, local.iter_1289.code_ptr, 1)
    input = substr(var.code, local.iter_1289.code_ptr, 1) == "," ? substr(local.iter_1289.input, 0, 1) : null
  }

  iter_1290 = local.end_of_code_1290 ? local.iter_1289 : {
    input = (local.curr_1290.code == ","
      ? substr(local.iter_1289.input, 1, -1)
      : local.iter_1289.input)

    output = (local.curr_1290.code == "."
      ? "${local.iter_1289.output}${jsondecode(format("\"\\u%04x\"", local.iter_1289.tape[local.iter_1289.tape_ptr]))}"
      : local.iter_1289.output)
    
    tape = (
      local.curr_1290.code == "+"
        ? [for i, b in local.iter_1289.tape : (i == local.iter_1289.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1290.code == "-"
        ? [for i, b in local.iter_1289.tape : (i == local.iter_1289.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1290.code == ","
        ? [for i, b in local.iter_1289.tape : (i == local.iter_1289.tape_ptr ? local.ascii_lookup[local.curr_1290.input] : b)]
        : local.iter_1289.tape)

    tape_ptr = (
      local.curr_1290.code == "<"
        ? local.iter_1289.tape_ptr == 0 ? length(local.iter_1289.tape) - 1 : local.iter_1289.tape_ptr - 1 :
      local.curr_1290.code == ">"
        ? local.iter_1289.tape_ptr == length(local.iter_1289.tape) - 1 ? 0 : local.iter_1289.tape_ptr + 1
        : local.iter_1289.tape_ptr)

    code_ptr = 1 + (
      local.curr_1290.code == "["
        ? local.iter_1289.tape[local.iter_1289.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1289.code_ptr)] : local.iter_1289.code_ptr :
      local.curr_1290.code == "]"
        ? local.iter_1289.tape[local.iter_1289.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1289.code_ptr)] : local.iter_1289.code_ptr
        : local.iter_1289.code_ptr)

    steps_taken = 1 + local.iter_1289.steps_taken
  }
}

locals {
  end_of_code_1291 = try(local.iter_1290.code_ptr >= length(var.code), true)

  curr_1291 = local.end_of_code_1291 ? null : {
    code = substr(var.code, local.iter_1290.code_ptr, 1)
    input = substr(var.code, local.iter_1290.code_ptr, 1) == "," ? substr(local.iter_1290.input, 0, 1) : null
  }

  iter_1291 = local.end_of_code_1291 ? local.iter_1290 : {
    input = (local.curr_1291.code == ","
      ? substr(local.iter_1290.input, 1, -1)
      : local.iter_1290.input)

    output = (local.curr_1291.code == "."
      ? "${local.iter_1290.output}${jsondecode(format("\"\\u%04x\"", local.iter_1290.tape[local.iter_1290.tape_ptr]))}"
      : local.iter_1290.output)
    
    tape = (
      local.curr_1291.code == "+"
        ? [for i, b in local.iter_1290.tape : (i == local.iter_1290.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1291.code == "-"
        ? [for i, b in local.iter_1290.tape : (i == local.iter_1290.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1291.code == ","
        ? [for i, b in local.iter_1290.tape : (i == local.iter_1290.tape_ptr ? local.ascii_lookup[local.curr_1291.input] : b)]
        : local.iter_1290.tape)

    tape_ptr = (
      local.curr_1291.code == "<"
        ? local.iter_1290.tape_ptr == 0 ? length(local.iter_1290.tape) - 1 : local.iter_1290.tape_ptr - 1 :
      local.curr_1291.code == ">"
        ? local.iter_1290.tape_ptr == length(local.iter_1290.tape) - 1 ? 0 : local.iter_1290.tape_ptr + 1
        : local.iter_1290.tape_ptr)

    code_ptr = 1 + (
      local.curr_1291.code == "["
        ? local.iter_1290.tape[local.iter_1290.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1290.code_ptr)] : local.iter_1290.code_ptr :
      local.curr_1291.code == "]"
        ? local.iter_1290.tape[local.iter_1290.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1290.code_ptr)] : local.iter_1290.code_ptr
        : local.iter_1290.code_ptr)

    steps_taken = 1 + local.iter_1290.steps_taken
  }
}

locals {
  end_of_code_1292 = try(local.iter_1291.code_ptr >= length(var.code), true)

  curr_1292 = local.end_of_code_1292 ? null : {
    code = substr(var.code, local.iter_1291.code_ptr, 1)
    input = substr(var.code, local.iter_1291.code_ptr, 1) == "," ? substr(local.iter_1291.input, 0, 1) : null
  }

  iter_1292 = local.end_of_code_1292 ? local.iter_1291 : {
    input = (local.curr_1292.code == ","
      ? substr(local.iter_1291.input, 1, -1)
      : local.iter_1291.input)

    output = (local.curr_1292.code == "."
      ? "${local.iter_1291.output}${jsondecode(format("\"\\u%04x\"", local.iter_1291.tape[local.iter_1291.tape_ptr]))}"
      : local.iter_1291.output)
    
    tape = (
      local.curr_1292.code == "+"
        ? [for i, b in local.iter_1291.tape : (i == local.iter_1291.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1292.code == "-"
        ? [for i, b in local.iter_1291.tape : (i == local.iter_1291.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1292.code == ","
        ? [for i, b in local.iter_1291.tape : (i == local.iter_1291.tape_ptr ? local.ascii_lookup[local.curr_1292.input] : b)]
        : local.iter_1291.tape)

    tape_ptr = (
      local.curr_1292.code == "<"
        ? local.iter_1291.tape_ptr == 0 ? length(local.iter_1291.tape) - 1 : local.iter_1291.tape_ptr - 1 :
      local.curr_1292.code == ">"
        ? local.iter_1291.tape_ptr == length(local.iter_1291.tape) - 1 ? 0 : local.iter_1291.tape_ptr + 1
        : local.iter_1291.tape_ptr)

    code_ptr = 1 + (
      local.curr_1292.code == "["
        ? local.iter_1291.tape[local.iter_1291.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1291.code_ptr)] : local.iter_1291.code_ptr :
      local.curr_1292.code == "]"
        ? local.iter_1291.tape[local.iter_1291.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1291.code_ptr)] : local.iter_1291.code_ptr
        : local.iter_1291.code_ptr)

    steps_taken = 1 + local.iter_1291.steps_taken
  }
}

locals {
  end_of_code_1293 = try(local.iter_1292.code_ptr >= length(var.code), true)

  curr_1293 = local.end_of_code_1293 ? null : {
    code = substr(var.code, local.iter_1292.code_ptr, 1)
    input = substr(var.code, local.iter_1292.code_ptr, 1) == "," ? substr(local.iter_1292.input, 0, 1) : null
  }

  iter_1293 = local.end_of_code_1293 ? local.iter_1292 : {
    input = (local.curr_1293.code == ","
      ? substr(local.iter_1292.input, 1, -1)
      : local.iter_1292.input)

    output = (local.curr_1293.code == "."
      ? "${local.iter_1292.output}${jsondecode(format("\"\\u%04x\"", local.iter_1292.tape[local.iter_1292.tape_ptr]))}"
      : local.iter_1292.output)
    
    tape = (
      local.curr_1293.code == "+"
        ? [for i, b in local.iter_1292.tape : (i == local.iter_1292.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1293.code == "-"
        ? [for i, b in local.iter_1292.tape : (i == local.iter_1292.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1293.code == ","
        ? [for i, b in local.iter_1292.tape : (i == local.iter_1292.tape_ptr ? local.ascii_lookup[local.curr_1293.input] : b)]
        : local.iter_1292.tape)

    tape_ptr = (
      local.curr_1293.code == "<"
        ? local.iter_1292.tape_ptr == 0 ? length(local.iter_1292.tape) - 1 : local.iter_1292.tape_ptr - 1 :
      local.curr_1293.code == ">"
        ? local.iter_1292.tape_ptr == length(local.iter_1292.tape) - 1 ? 0 : local.iter_1292.tape_ptr + 1
        : local.iter_1292.tape_ptr)

    code_ptr = 1 + (
      local.curr_1293.code == "["
        ? local.iter_1292.tape[local.iter_1292.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1292.code_ptr)] : local.iter_1292.code_ptr :
      local.curr_1293.code == "]"
        ? local.iter_1292.tape[local.iter_1292.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1292.code_ptr)] : local.iter_1292.code_ptr
        : local.iter_1292.code_ptr)

    steps_taken = 1 + local.iter_1292.steps_taken
  }
}

locals {
  end_of_code_1294 = try(local.iter_1293.code_ptr >= length(var.code), true)

  curr_1294 = local.end_of_code_1294 ? null : {
    code = substr(var.code, local.iter_1293.code_ptr, 1)
    input = substr(var.code, local.iter_1293.code_ptr, 1) == "," ? substr(local.iter_1293.input, 0, 1) : null
  }

  iter_1294 = local.end_of_code_1294 ? local.iter_1293 : {
    input = (local.curr_1294.code == ","
      ? substr(local.iter_1293.input, 1, -1)
      : local.iter_1293.input)

    output = (local.curr_1294.code == "."
      ? "${local.iter_1293.output}${jsondecode(format("\"\\u%04x\"", local.iter_1293.tape[local.iter_1293.tape_ptr]))}"
      : local.iter_1293.output)
    
    tape = (
      local.curr_1294.code == "+"
        ? [for i, b in local.iter_1293.tape : (i == local.iter_1293.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1294.code == "-"
        ? [for i, b in local.iter_1293.tape : (i == local.iter_1293.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1294.code == ","
        ? [for i, b in local.iter_1293.tape : (i == local.iter_1293.tape_ptr ? local.ascii_lookup[local.curr_1294.input] : b)]
        : local.iter_1293.tape)

    tape_ptr = (
      local.curr_1294.code == "<"
        ? local.iter_1293.tape_ptr == 0 ? length(local.iter_1293.tape) - 1 : local.iter_1293.tape_ptr - 1 :
      local.curr_1294.code == ">"
        ? local.iter_1293.tape_ptr == length(local.iter_1293.tape) - 1 ? 0 : local.iter_1293.tape_ptr + 1
        : local.iter_1293.tape_ptr)

    code_ptr = 1 + (
      local.curr_1294.code == "["
        ? local.iter_1293.tape[local.iter_1293.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1293.code_ptr)] : local.iter_1293.code_ptr :
      local.curr_1294.code == "]"
        ? local.iter_1293.tape[local.iter_1293.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1293.code_ptr)] : local.iter_1293.code_ptr
        : local.iter_1293.code_ptr)

    steps_taken = 1 + local.iter_1293.steps_taken
  }
}

locals {
  end_of_code_1295 = try(local.iter_1294.code_ptr >= length(var.code), true)

  curr_1295 = local.end_of_code_1295 ? null : {
    code = substr(var.code, local.iter_1294.code_ptr, 1)
    input = substr(var.code, local.iter_1294.code_ptr, 1) == "," ? substr(local.iter_1294.input, 0, 1) : null
  }

  iter_1295 = local.end_of_code_1295 ? local.iter_1294 : {
    input = (local.curr_1295.code == ","
      ? substr(local.iter_1294.input, 1, -1)
      : local.iter_1294.input)

    output = (local.curr_1295.code == "."
      ? "${local.iter_1294.output}${jsondecode(format("\"\\u%04x\"", local.iter_1294.tape[local.iter_1294.tape_ptr]))}"
      : local.iter_1294.output)
    
    tape = (
      local.curr_1295.code == "+"
        ? [for i, b in local.iter_1294.tape : (i == local.iter_1294.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1295.code == "-"
        ? [for i, b in local.iter_1294.tape : (i == local.iter_1294.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1295.code == ","
        ? [for i, b in local.iter_1294.tape : (i == local.iter_1294.tape_ptr ? local.ascii_lookup[local.curr_1295.input] : b)]
        : local.iter_1294.tape)

    tape_ptr = (
      local.curr_1295.code == "<"
        ? local.iter_1294.tape_ptr == 0 ? length(local.iter_1294.tape) - 1 : local.iter_1294.tape_ptr - 1 :
      local.curr_1295.code == ">"
        ? local.iter_1294.tape_ptr == length(local.iter_1294.tape) - 1 ? 0 : local.iter_1294.tape_ptr + 1
        : local.iter_1294.tape_ptr)

    code_ptr = 1 + (
      local.curr_1295.code == "["
        ? local.iter_1294.tape[local.iter_1294.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1294.code_ptr)] : local.iter_1294.code_ptr :
      local.curr_1295.code == "]"
        ? local.iter_1294.tape[local.iter_1294.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1294.code_ptr)] : local.iter_1294.code_ptr
        : local.iter_1294.code_ptr)

    steps_taken = 1 + local.iter_1294.steps_taken
  }
}

locals {
  end_of_code_1296 = try(local.iter_1295.code_ptr >= length(var.code), true)

  curr_1296 = local.end_of_code_1296 ? null : {
    code = substr(var.code, local.iter_1295.code_ptr, 1)
    input = substr(var.code, local.iter_1295.code_ptr, 1) == "," ? substr(local.iter_1295.input, 0, 1) : null
  }

  iter_1296 = local.end_of_code_1296 ? local.iter_1295 : {
    input = (local.curr_1296.code == ","
      ? substr(local.iter_1295.input, 1, -1)
      : local.iter_1295.input)

    output = (local.curr_1296.code == "."
      ? "${local.iter_1295.output}${jsondecode(format("\"\\u%04x\"", local.iter_1295.tape[local.iter_1295.tape_ptr]))}"
      : local.iter_1295.output)
    
    tape = (
      local.curr_1296.code == "+"
        ? [for i, b in local.iter_1295.tape : (i == local.iter_1295.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1296.code == "-"
        ? [for i, b in local.iter_1295.tape : (i == local.iter_1295.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1296.code == ","
        ? [for i, b in local.iter_1295.tape : (i == local.iter_1295.tape_ptr ? local.ascii_lookup[local.curr_1296.input] : b)]
        : local.iter_1295.tape)

    tape_ptr = (
      local.curr_1296.code == "<"
        ? local.iter_1295.tape_ptr == 0 ? length(local.iter_1295.tape) - 1 : local.iter_1295.tape_ptr - 1 :
      local.curr_1296.code == ">"
        ? local.iter_1295.tape_ptr == length(local.iter_1295.tape) - 1 ? 0 : local.iter_1295.tape_ptr + 1
        : local.iter_1295.tape_ptr)

    code_ptr = 1 + (
      local.curr_1296.code == "["
        ? local.iter_1295.tape[local.iter_1295.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1295.code_ptr)] : local.iter_1295.code_ptr :
      local.curr_1296.code == "]"
        ? local.iter_1295.tape[local.iter_1295.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1295.code_ptr)] : local.iter_1295.code_ptr
        : local.iter_1295.code_ptr)

    steps_taken = 1 + local.iter_1295.steps_taken
  }
}

locals {
  end_of_code_1297 = try(local.iter_1296.code_ptr >= length(var.code), true)

  curr_1297 = local.end_of_code_1297 ? null : {
    code = substr(var.code, local.iter_1296.code_ptr, 1)
    input = substr(var.code, local.iter_1296.code_ptr, 1) == "," ? substr(local.iter_1296.input, 0, 1) : null
  }

  iter_1297 = local.end_of_code_1297 ? local.iter_1296 : {
    input = (local.curr_1297.code == ","
      ? substr(local.iter_1296.input, 1, -1)
      : local.iter_1296.input)

    output = (local.curr_1297.code == "."
      ? "${local.iter_1296.output}${jsondecode(format("\"\\u%04x\"", local.iter_1296.tape[local.iter_1296.tape_ptr]))}"
      : local.iter_1296.output)
    
    tape = (
      local.curr_1297.code == "+"
        ? [for i, b in local.iter_1296.tape : (i == local.iter_1296.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1297.code == "-"
        ? [for i, b in local.iter_1296.tape : (i == local.iter_1296.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1297.code == ","
        ? [for i, b in local.iter_1296.tape : (i == local.iter_1296.tape_ptr ? local.ascii_lookup[local.curr_1297.input] : b)]
        : local.iter_1296.tape)

    tape_ptr = (
      local.curr_1297.code == "<"
        ? local.iter_1296.tape_ptr == 0 ? length(local.iter_1296.tape) - 1 : local.iter_1296.tape_ptr - 1 :
      local.curr_1297.code == ">"
        ? local.iter_1296.tape_ptr == length(local.iter_1296.tape) - 1 ? 0 : local.iter_1296.tape_ptr + 1
        : local.iter_1296.tape_ptr)

    code_ptr = 1 + (
      local.curr_1297.code == "["
        ? local.iter_1296.tape[local.iter_1296.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1296.code_ptr)] : local.iter_1296.code_ptr :
      local.curr_1297.code == "]"
        ? local.iter_1296.tape[local.iter_1296.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1296.code_ptr)] : local.iter_1296.code_ptr
        : local.iter_1296.code_ptr)

    steps_taken = 1 + local.iter_1296.steps_taken
  }
}

locals {
  end_of_code_1298 = try(local.iter_1297.code_ptr >= length(var.code), true)

  curr_1298 = local.end_of_code_1298 ? null : {
    code = substr(var.code, local.iter_1297.code_ptr, 1)
    input = substr(var.code, local.iter_1297.code_ptr, 1) == "," ? substr(local.iter_1297.input, 0, 1) : null
  }

  iter_1298 = local.end_of_code_1298 ? local.iter_1297 : {
    input = (local.curr_1298.code == ","
      ? substr(local.iter_1297.input, 1, -1)
      : local.iter_1297.input)

    output = (local.curr_1298.code == "."
      ? "${local.iter_1297.output}${jsondecode(format("\"\\u%04x\"", local.iter_1297.tape[local.iter_1297.tape_ptr]))}"
      : local.iter_1297.output)
    
    tape = (
      local.curr_1298.code == "+"
        ? [for i, b in local.iter_1297.tape : (i == local.iter_1297.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1298.code == "-"
        ? [for i, b in local.iter_1297.tape : (i == local.iter_1297.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1298.code == ","
        ? [for i, b in local.iter_1297.tape : (i == local.iter_1297.tape_ptr ? local.ascii_lookup[local.curr_1298.input] : b)]
        : local.iter_1297.tape)

    tape_ptr = (
      local.curr_1298.code == "<"
        ? local.iter_1297.tape_ptr == 0 ? length(local.iter_1297.tape) - 1 : local.iter_1297.tape_ptr - 1 :
      local.curr_1298.code == ">"
        ? local.iter_1297.tape_ptr == length(local.iter_1297.tape) - 1 ? 0 : local.iter_1297.tape_ptr + 1
        : local.iter_1297.tape_ptr)

    code_ptr = 1 + (
      local.curr_1298.code == "["
        ? local.iter_1297.tape[local.iter_1297.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1297.code_ptr)] : local.iter_1297.code_ptr :
      local.curr_1298.code == "]"
        ? local.iter_1297.tape[local.iter_1297.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1297.code_ptr)] : local.iter_1297.code_ptr
        : local.iter_1297.code_ptr)

    steps_taken = 1 + local.iter_1297.steps_taken
  }
}

locals {
  end_of_code_1299 = try(local.iter_1298.code_ptr >= length(var.code), true)

  curr_1299 = local.end_of_code_1299 ? null : {
    code = substr(var.code, local.iter_1298.code_ptr, 1)
    input = substr(var.code, local.iter_1298.code_ptr, 1) == "," ? substr(local.iter_1298.input, 0, 1) : null
  }

  iter_1299 = local.end_of_code_1299 ? local.iter_1298 : {
    input = (local.curr_1299.code == ","
      ? substr(local.iter_1298.input, 1, -1)
      : local.iter_1298.input)

    output = (local.curr_1299.code == "."
      ? "${local.iter_1298.output}${jsondecode(format("\"\\u%04x\"", local.iter_1298.tape[local.iter_1298.tape_ptr]))}"
      : local.iter_1298.output)
    
    tape = (
      local.curr_1299.code == "+"
        ? [for i, b in local.iter_1298.tape : (i == local.iter_1298.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1299.code == "-"
        ? [for i, b in local.iter_1298.tape : (i == local.iter_1298.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1299.code == ","
        ? [for i, b in local.iter_1298.tape : (i == local.iter_1298.tape_ptr ? local.ascii_lookup[local.curr_1299.input] : b)]
        : local.iter_1298.tape)

    tape_ptr = (
      local.curr_1299.code == "<"
        ? local.iter_1298.tape_ptr == 0 ? length(local.iter_1298.tape) - 1 : local.iter_1298.tape_ptr - 1 :
      local.curr_1299.code == ">"
        ? local.iter_1298.tape_ptr == length(local.iter_1298.tape) - 1 ? 0 : local.iter_1298.tape_ptr + 1
        : local.iter_1298.tape_ptr)

    code_ptr = 1 + (
      local.curr_1299.code == "["
        ? local.iter_1298.tape[local.iter_1298.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1298.code_ptr)] : local.iter_1298.code_ptr :
      local.curr_1299.code == "]"
        ? local.iter_1298.tape[local.iter_1298.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1298.code_ptr)] : local.iter_1298.code_ptr
        : local.iter_1298.code_ptr)

    steps_taken = 1 + local.iter_1298.steps_taken
  }
}

locals {
  end_of_code_1300 = try(local.iter_1299.code_ptr >= length(var.code), true)

  curr_1300 = local.end_of_code_1300 ? null : {
    code = substr(var.code, local.iter_1299.code_ptr, 1)
    input = substr(var.code, local.iter_1299.code_ptr, 1) == "," ? substr(local.iter_1299.input, 0, 1) : null
  }

  iter_1300 = local.end_of_code_1300 ? local.iter_1299 : {
    input = (local.curr_1300.code == ","
      ? substr(local.iter_1299.input, 1, -1)
      : local.iter_1299.input)

    output = (local.curr_1300.code == "."
      ? "${local.iter_1299.output}${jsondecode(format("\"\\u%04x\"", local.iter_1299.tape[local.iter_1299.tape_ptr]))}"
      : local.iter_1299.output)
    
    tape = (
      local.curr_1300.code == "+"
        ? [for i, b in local.iter_1299.tape : (i == local.iter_1299.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1300.code == "-"
        ? [for i, b in local.iter_1299.tape : (i == local.iter_1299.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1300.code == ","
        ? [for i, b in local.iter_1299.tape : (i == local.iter_1299.tape_ptr ? local.ascii_lookup[local.curr_1300.input] : b)]
        : local.iter_1299.tape)

    tape_ptr = (
      local.curr_1300.code == "<"
        ? local.iter_1299.tape_ptr == 0 ? length(local.iter_1299.tape) - 1 : local.iter_1299.tape_ptr - 1 :
      local.curr_1300.code == ">"
        ? local.iter_1299.tape_ptr == length(local.iter_1299.tape) - 1 ? 0 : local.iter_1299.tape_ptr + 1
        : local.iter_1299.tape_ptr)

    code_ptr = 1 + (
      local.curr_1300.code == "["
        ? local.iter_1299.tape[local.iter_1299.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1299.code_ptr)] : local.iter_1299.code_ptr :
      local.curr_1300.code == "]"
        ? local.iter_1299.tape[local.iter_1299.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1299.code_ptr)] : local.iter_1299.code_ptr
        : local.iter_1299.code_ptr)

    steps_taken = 1 + local.iter_1299.steps_taken
  }
}

locals {
  end_of_code_1301 = try(local.iter_1300.code_ptr >= length(var.code), true)

  curr_1301 = local.end_of_code_1301 ? null : {
    code = substr(var.code, local.iter_1300.code_ptr, 1)
    input = substr(var.code, local.iter_1300.code_ptr, 1) == "," ? substr(local.iter_1300.input, 0, 1) : null
  }

  iter_1301 = local.end_of_code_1301 ? local.iter_1300 : {
    input = (local.curr_1301.code == ","
      ? substr(local.iter_1300.input, 1, -1)
      : local.iter_1300.input)

    output = (local.curr_1301.code == "."
      ? "${local.iter_1300.output}${jsondecode(format("\"\\u%04x\"", local.iter_1300.tape[local.iter_1300.tape_ptr]))}"
      : local.iter_1300.output)
    
    tape = (
      local.curr_1301.code == "+"
        ? [for i, b in local.iter_1300.tape : (i == local.iter_1300.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1301.code == "-"
        ? [for i, b in local.iter_1300.tape : (i == local.iter_1300.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1301.code == ","
        ? [for i, b in local.iter_1300.tape : (i == local.iter_1300.tape_ptr ? local.ascii_lookup[local.curr_1301.input] : b)]
        : local.iter_1300.tape)

    tape_ptr = (
      local.curr_1301.code == "<"
        ? local.iter_1300.tape_ptr == 0 ? length(local.iter_1300.tape) - 1 : local.iter_1300.tape_ptr - 1 :
      local.curr_1301.code == ">"
        ? local.iter_1300.tape_ptr == length(local.iter_1300.tape) - 1 ? 0 : local.iter_1300.tape_ptr + 1
        : local.iter_1300.tape_ptr)

    code_ptr = 1 + (
      local.curr_1301.code == "["
        ? local.iter_1300.tape[local.iter_1300.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1300.code_ptr)] : local.iter_1300.code_ptr :
      local.curr_1301.code == "]"
        ? local.iter_1300.tape[local.iter_1300.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1300.code_ptr)] : local.iter_1300.code_ptr
        : local.iter_1300.code_ptr)

    steps_taken = 1 + local.iter_1300.steps_taken
  }
}

locals {
  end_of_code_1302 = try(local.iter_1301.code_ptr >= length(var.code), true)

  curr_1302 = local.end_of_code_1302 ? null : {
    code = substr(var.code, local.iter_1301.code_ptr, 1)
    input = substr(var.code, local.iter_1301.code_ptr, 1) == "," ? substr(local.iter_1301.input, 0, 1) : null
  }

  iter_1302 = local.end_of_code_1302 ? local.iter_1301 : {
    input = (local.curr_1302.code == ","
      ? substr(local.iter_1301.input, 1, -1)
      : local.iter_1301.input)

    output = (local.curr_1302.code == "."
      ? "${local.iter_1301.output}${jsondecode(format("\"\\u%04x\"", local.iter_1301.tape[local.iter_1301.tape_ptr]))}"
      : local.iter_1301.output)
    
    tape = (
      local.curr_1302.code == "+"
        ? [for i, b in local.iter_1301.tape : (i == local.iter_1301.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1302.code == "-"
        ? [for i, b in local.iter_1301.tape : (i == local.iter_1301.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1302.code == ","
        ? [for i, b in local.iter_1301.tape : (i == local.iter_1301.tape_ptr ? local.ascii_lookup[local.curr_1302.input] : b)]
        : local.iter_1301.tape)

    tape_ptr = (
      local.curr_1302.code == "<"
        ? local.iter_1301.tape_ptr == 0 ? length(local.iter_1301.tape) - 1 : local.iter_1301.tape_ptr - 1 :
      local.curr_1302.code == ">"
        ? local.iter_1301.tape_ptr == length(local.iter_1301.tape) - 1 ? 0 : local.iter_1301.tape_ptr + 1
        : local.iter_1301.tape_ptr)

    code_ptr = 1 + (
      local.curr_1302.code == "["
        ? local.iter_1301.tape[local.iter_1301.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1301.code_ptr)] : local.iter_1301.code_ptr :
      local.curr_1302.code == "]"
        ? local.iter_1301.tape[local.iter_1301.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1301.code_ptr)] : local.iter_1301.code_ptr
        : local.iter_1301.code_ptr)

    steps_taken = 1 + local.iter_1301.steps_taken
  }
}

locals {
  end_of_code_1303 = try(local.iter_1302.code_ptr >= length(var.code), true)

  curr_1303 = local.end_of_code_1303 ? null : {
    code = substr(var.code, local.iter_1302.code_ptr, 1)
    input = substr(var.code, local.iter_1302.code_ptr, 1) == "," ? substr(local.iter_1302.input, 0, 1) : null
  }

  iter_1303 = local.end_of_code_1303 ? local.iter_1302 : {
    input = (local.curr_1303.code == ","
      ? substr(local.iter_1302.input, 1, -1)
      : local.iter_1302.input)

    output = (local.curr_1303.code == "."
      ? "${local.iter_1302.output}${jsondecode(format("\"\\u%04x\"", local.iter_1302.tape[local.iter_1302.tape_ptr]))}"
      : local.iter_1302.output)
    
    tape = (
      local.curr_1303.code == "+"
        ? [for i, b in local.iter_1302.tape : (i == local.iter_1302.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1303.code == "-"
        ? [for i, b in local.iter_1302.tape : (i == local.iter_1302.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1303.code == ","
        ? [for i, b in local.iter_1302.tape : (i == local.iter_1302.tape_ptr ? local.ascii_lookup[local.curr_1303.input] : b)]
        : local.iter_1302.tape)

    tape_ptr = (
      local.curr_1303.code == "<"
        ? local.iter_1302.tape_ptr == 0 ? length(local.iter_1302.tape) - 1 : local.iter_1302.tape_ptr - 1 :
      local.curr_1303.code == ">"
        ? local.iter_1302.tape_ptr == length(local.iter_1302.tape) - 1 ? 0 : local.iter_1302.tape_ptr + 1
        : local.iter_1302.tape_ptr)

    code_ptr = 1 + (
      local.curr_1303.code == "["
        ? local.iter_1302.tape[local.iter_1302.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1302.code_ptr)] : local.iter_1302.code_ptr :
      local.curr_1303.code == "]"
        ? local.iter_1302.tape[local.iter_1302.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1302.code_ptr)] : local.iter_1302.code_ptr
        : local.iter_1302.code_ptr)

    steps_taken = 1 + local.iter_1302.steps_taken
  }
}

locals {
  end_of_code_1304 = try(local.iter_1303.code_ptr >= length(var.code), true)

  curr_1304 = local.end_of_code_1304 ? null : {
    code = substr(var.code, local.iter_1303.code_ptr, 1)
    input = substr(var.code, local.iter_1303.code_ptr, 1) == "," ? substr(local.iter_1303.input, 0, 1) : null
  }

  iter_1304 = local.end_of_code_1304 ? local.iter_1303 : {
    input = (local.curr_1304.code == ","
      ? substr(local.iter_1303.input, 1, -1)
      : local.iter_1303.input)

    output = (local.curr_1304.code == "."
      ? "${local.iter_1303.output}${jsondecode(format("\"\\u%04x\"", local.iter_1303.tape[local.iter_1303.tape_ptr]))}"
      : local.iter_1303.output)
    
    tape = (
      local.curr_1304.code == "+"
        ? [for i, b in local.iter_1303.tape : (i == local.iter_1303.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1304.code == "-"
        ? [for i, b in local.iter_1303.tape : (i == local.iter_1303.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1304.code == ","
        ? [for i, b in local.iter_1303.tape : (i == local.iter_1303.tape_ptr ? local.ascii_lookup[local.curr_1304.input] : b)]
        : local.iter_1303.tape)

    tape_ptr = (
      local.curr_1304.code == "<"
        ? local.iter_1303.tape_ptr == 0 ? length(local.iter_1303.tape) - 1 : local.iter_1303.tape_ptr - 1 :
      local.curr_1304.code == ">"
        ? local.iter_1303.tape_ptr == length(local.iter_1303.tape) - 1 ? 0 : local.iter_1303.tape_ptr + 1
        : local.iter_1303.tape_ptr)

    code_ptr = 1 + (
      local.curr_1304.code == "["
        ? local.iter_1303.tape[local.iter_1303.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1303.code_ptr)] : local.iter_1303.code_ptr :
      local.curr_1304.code == "]"
        ? local.iter_1303.tape[local.iter_1303.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1303.code_ptr)] : local.iter_1303.code_ptr
        : local.iter_1303.code_ptr)

    steps_taken = 1 + local.iter_1303.steps_taken
  }
}

locals {
  end_of_code_1305 = try(local.iter_1304.code_ptr >= length(var.code), true)

  curr_1305 = local.end_of_code_1305 ? null : {
    code = substr(var.code, local.iter_1304.code_ptr, 1)
    input = substr(var.code, local.iter_1304.code_ptr, 1) == "," ? substr(local.iter_1304.input, 0, 1) : null
  }

  iter_1305 = local.end_of_code_1305 ? local.iter_1304 : {
    input = (local.curr_1305.code == ","
      ? substr(local.iter_1304.input, 1, -1)
      : local.iter_1304.input)

    output = (local.curr_1305.code == "."
      ? "${local.iter_1304.output}${jsondecode(format("\"\\u%04x\"", local.iter_1304.tape[local.iter_1304.tape_ptr]))}"
      : local.iter_1304.output)
    
    tape = (
      local.curr_1305.code == "+"
        ? [for i, b in local.iter_1304.tape : (i == local.iter_1304.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1305.code == "-"
        ? [for i, b in local.iter_1304.tape : (i == local.iter_1304.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1305.code == ","
        ? [for i, b in local.iter_1304.tape : (i == local.iter_1304.tape_ptr ? local.ascii_lookup[local.curr_1305.input] : b)]
        : local.iter_1304.tape)

    tape_ptr = (
      local.curr_1305.code == "<"
        ? local.iter_1304.tape_ptr == 0 ? length(local.iter_1304.tape) - 1 : local.iter_1304.tape_ptr - 1 :
      local.curr_1305.code == ">"
        ? local.iter_1304.tape_ptr == length(local.iter_1304.tape) - 1 ? 0 : local.iter_1304.tape_ptr + 1
        : local.iter_1304.tape_ptr)

    code_ptr = 1 + (
      local.curr_1305.code == "["
        ? local.iter_1304.tape[local.iter_1304.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1304.code_ptr)] : local.iter_1304.code_ptr :
      local.curr_1305.code == "]"
        ? local.iter_1304.tape[local.iter_1304.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1304.code_ptr)] : local.iter_1304.code_ptr
        : local.iter_1304.code_ptr)

    steps_taken = 1 + local.iter_1304.steps_taken
  }
}

locals {
  end_of_code_1306 = try(local.iter_1305.code_ptr >= length(var.code), true)

  curr_1306 = local.end_of_code_1306 ? null : {
    code = substr(var.code, local.iter_1305.code_ptr, 1)
    input = substr(var.code, local.iter_1305.code_ptr, 1) == "," ? substr(local.iter_1305.input, 0, 1) : null
  }

  iter_1306 = local.end_of_code_1306 ? local.iter_1305 : {
    input = (local.curr_1306.code == ","
      ? substr(local.iter_1305.input, 1, -1)
      : local.iter_1305.input)

    output = (local.curr_1306.code == "."
      ? "${local.iter_1305.output}${jsondecode(format("\"\\u%04x\"", local.iter_1305.tape[local.iter_1305.tape_ptr]))}"
      : local.iter_1305.output)
    
    tape = (
      local.curr_1306.code == "+"
        ? [for i, b in local.iter_1305.tape : (i == local.iter_1305.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1306.code == "-"
        ? [for i, b in local.iter_1305.tape : (i == local.iter_1305.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1306.code == ","
        ? [for i, b in local.iter_1305.tape : (i == local.iter_1305.tape_ptr ? local.ascii_lookup[local.curr_1306.input] : b)]
        : local.iter_1305.tape)

    tape_ptr = (
      local.curr_1306.code == "<"
        ? local.iter_1305.tape_ptr == 0 ? length(local.iter_1305.tape) - 1 : local.iter_1305.tape_ptr - 1 :
      local.curr_1306.code == ">"
        ? local.iter_1305.tape_ptr == length(local.iter_1305.tape) - 1 ? 0 : local.iter_1305.tape_ptr + 1
        : local.iter_1305.tape_ptr)

    code_ptr = 1 + (
      local.curr_1306.code == "["
        ? local.iter_1305.tape[local.iter_1305.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1305.code_ptr)] : local.iter_1305.code_ptr :
      local.curr_1306.code == "]"
        ? local.iter_1305.tape[local.iter_1305.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1305.code_ptr)] : local.iter_1305.code_ptr
        : local.iter_1305.code_ptr)

    steps_taken = 1 + local.iter_1305.steps_taken
  }
}

locals {
  end_of_code_1307 = try(local.iter_1306.code_ptr >= length(var.code), true)

  curr_1307 = local.end_of_code_1307 ? null : {
    code = substr(var.code, local.iter_1306.code_ptr, 1)
    input = substr(var.code, local.iter_1306.code_ptr, 1) == "," ? substr(local.iter_1306.input, 0, 1) : null
  }

  iter_1307 = local.end_of_code_1307 ? local.iter_1306 : {
    input = (local.curr_1307.code == ","
      ? substr(local.iter_1306.input, 1, -1)
      : local.iter_1306.input)

    output = (local.curr_1307.code == "."
      ? "${local.iter_1306.output}${jsondecode(format("\"\\u%04x\"", local.iter_1306.tape[local.iter_1306.tape_ptr]))}"
      : local.iter_1306.output)
    
    tape = (
      local.curr_1307.code == "+"
        ? [for i, b in local.iter_1306.tape : (i == local.iter_1306.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1307.code == "-"
        ? [for i, b in local.iter_1306.tape : (i == local.iter_1306.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1307.code == ","
        ? [for i, b in local.iter_1306.tape : (i == local.iter_1306.tape_ptr ? local.ascii_lookup[local.curr_1307.input] : b)]
        : local.iter_1306.tape)

    tape_ptr = (
      local.curr_1307.code == "<"
        ? local.iter_1306.tape_ptr == 0 ? length(local.iter_1306.tape) - 1 : local.iter_1306.tape_ptr - 1 :
      local.curr_1307.code == ">"
        ? local.iter_1306.tape_ptr == length(local.iter_1306.tape) - 1 ? 0 : local.iter_1306.tape_ptr + 1
        : local.iter_1306.tape_ptr)

    code_ptr = 1 + (
      local.curr_1307.code == "["
        ? local.iter_1306.tape[local.iter_1306.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1306.code_ptr)] : local.iter_1306.code_ptr :
      local.curr_1307.code == "]"
        ? local.iter_1306.tape[local.iter_1306.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1306.code_ptr)] : local.iter_1306.code_ptr
        : local.iter_1306.code_ptr)

    steps_taken = 1 + local.iter_1306.steps_taken
  }
}

locals {
  end_of_code_1308 = try(local.iter_1307.code_ptr >= length(var.code), true)

  curr_1308 = local.end_of_code_1308 ? null : {
    code = substr(var.code, local.iter_1307.code_ptr, 1)
    input = substr(var.code, local.iter_1307.code_ptr, 1) == "," ? substr(local.iter_1307.input, 0, 1) : null
  }

  iter_1308 = local.end_of_code_1308 ? local.iter_1307 : {
    input = (local.curr_1308.code == ","
      ? substr(local.iter_1307.input, 1, -1)
      : local.iter_1307.input)

    output = (local.curr_1308.code == "."
      ? "${local.iter_1307.output}${jsondecode(format("\"\\u%04x\"", local.iter_1307.tape[local.iter_1307.tape_ptr]))}"
      : local.iter_1307.output)
    
    tape = (
      local.curr_1308.code == "+"
        ? [for i, b in local.iter_1307.tape : (i == local.iter_1307.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1308.code == "-"
        ? [for i, b in local.iter_1307.tape : (i == local.iter_1307.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1308.code == ","
        ? [for i, b in local.iter_1307.tape : (i == local.iter_1307.tape_ptr ? local.ascii_lookup[local.curr_1308.input] : b)]
        : local.iter_1307.tape)

    tape_ptr = (
      local.curr_1308.code == "<"
        ? local.iter_1307.tape_ptr == 0 ? length(local.iter_1307.tape) - 1 : local.iter_1307.tape_ptr - 1 :
      local.curr_1308.code == ">"
        ? local.iter_1307.tape_ptr == length(local.iter_1307.tape) - 1 ? 0 : local.iter_1307.tape_ptr + 1
        : local.iter_1307.tape_ptr)

    code_ptr = 1 + (
      local.curr_1308.code == "["
        ? local.iter_1307.tape[local.iter_1307.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1307.code_ptr)] : local.iter_1307.code_ptr :
      local.curr_1308.code == "]"
        ? local.iter_1307.tape[local.iter_1307.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1307.code_ptr)] : local.iter_1307.code_ptr
        : local.iter_1307.code_ptr)

    steps_taken = 1 + local.iter_1307.steps_taken
  }
}

locals {
  end_of_code_1309 = try(local.iter_1308.code_ptr >= length(var.code), true)

  curr_1309 = local.end_of_code_1309 ? null : {
    code = substr(var.code, local.iter_1308.code_ptr, 1)
    input = substr(var.code, local.iter_1308.code_ptr, 1) == "," ? substr(local.iter_1308.input, 0, 1) : null
  }

  iter_1309 = local.end_of_code_1309 ? local.iter_1308 : {
    input = (local.curr_1309.code == ","
      ? substr(local.iter_1308.input, 1, -1)
      : local.iter_1308.input)

    output = (local.curr_1309.code == "."
      ? "${local.iter_1308.output}${jsondecode(format("\"\\u%04x\"", local.iter_1308.tape[local.iter_1308.tape_ptr]))}"
      : local.iter_1308.output)
    
    tape = (
      local.curr_1309.code == "+"
        ? [for i, b in local.iter_1308.tape : (i == local.iter_1308.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1309.code == "-"
        ? [for i, b in local.iter_1308.tape : (i == local.iter_1308.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1309.code == ","
        ? [for i, b in local.iter_1308.tape : (i == local.iter_1308.tape_ptr ? local.ascii_lookup[local.curr_1309.input] : b)]
        : local.iter_1308.tape)

    tape_ptr = (
      local.curr_1309.code == "<"
        ? local.iter_1308.tape_ptr == 0 ? length(local.iter_1308.tape) - 1 : local.iter_1308.tape_ptr - 1 :
      local.curr_1309.code == ">"
        ? local.iter_1308.tape_ptr == length(local.iter_1308.tape) - 1 ? 0 : local.iter_1308.tape_ptr + 1
        : local.iter_1308.tape_ptr)

    code_ptr = 1 + (
      local.curr_1309.code == "["
        ? local.iter_1308.tape[local.iter_1308.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1308.code_ptr)] : local.iter_1308.code_ptr :
      local.curr_1309.code == "]"
        ? local.iter_1308.tape[local.iter_1308.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1308.code_ptr)] : local.iter_1308.code_ptr
        : local.iter_1308.code_ptr)

    steps_taken = 1 + local.iter_1308.steps_taken
  }
}

locals {
  end_of_code_1310 = try(local.iter_1309.code_ptr >= length(var.code), true)

  curr_1310 = local.end_of_code_1310 ? null : {
    code = substr(var.code, local.iter_1309.code_ptr, 1)
    input = substr(var.code, local.iter_1309.code_ptr, 1) == "," ? substr(local.iter_1309.input, 0, 1) : null
  }

  iter_1310 = local.end_of_code_1310 ? local.iter_1309 : {
    input = (local.curr_1310.code == ","
      ? substr(local.iter_1309.input, 1, -1)
      : local.iter_1309.input)

    output = (local.curr_1310.code == "."
      ? "${local.iter_1309.output}${jsondecode(format("\"\\u%04x\"", local.iter_1309.tape[local.iter_1309.tape_ptr]))}"
      : local.iter_1309.output)
    
    tape = (
      local.curr_1310.code == "+"
        ? [for i, b in local.iter_1309.tape : (i == local.iter_1309.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1310.code == "-"
        ? [for i, b in local.iter_1309.tape : (i == local.iter_1309.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1310.code == ","
        ? [for i, b in local.iter_1309.tape : (i == local.iter_1309.tape_ptr ? local.ascii_lookup[local.curr_1310.input] : b)]
        : local.iter_1309.tape)

    tape_ptr = (
      local.curr_1310.code == "<"
        ? local.iter_1309.tape_ptr == 0 ? length(local.iter_1309.tape) - 1 : local.iter_1309.tape_ptr - 1 :
      local.curr_1310.code == ">"
        ? local.iter_1309.tape_ptr == length(local.iter_1309.tape) - 1 ? 0 : local.iter_1309.tape_ptr + 1
        : local.iter_1309.tape_ptr)

    code_ptr = 1 + (
      local.curr_1310.code == "["
        ? local.iter_1309.tape[local.iter_1309.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1309.code_ptr)] : local.iter_1309.code_ptr :
      local.curr_1310.code == "]"
        ? local.iter_1309.tape[local.iter_1309.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1309.code_ptr)] : local.iter_1309.code_ptr
        : local.iter_1309.code_ptr)

    steps_taken = 1 + local.iter_1309.steps_taken
  }
}

locals {
  end_of_code_1311 = try(local.iter_1310.code_ptr >= length(var.code), true)

  curr_1311 = local.end_of_code_1311 ? null : {
    code = substr(var.code, local.iter_1310.code_ptr, 1)
    input = substr(var.code, local.iter_1310.code_ptr, 1) == "," ? substr(local.iter_1310.input, 0, 1) : null
  }

  iter_1311 = local.end_of_code_1311 ? local.iter_1310 : {
    input = (local.curr_1311.code == ","
      ? substr(local.iter_1310.input, 1, -1)
      : local.iter_1310.input)

    output = (local.curr_1311.code == "."
      ? "${local.iter_1310.output}${jsondecode(format("\"\\u%04x\"", local.iter_1310.tape[local.iter_1310.tape_ptr]))}"
      : local.iter_1310.output)
    
    tape = (
      local.curr_1311.code == "+"
        ? [for i, b in local.iter_1310.tape : (i == local.iter_1310.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1311.code == "-"
        ? [for i, b in local.iter_1310.tape : (i == local.iter_1310.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1311.code == ","
        ? [for i, b in local.iter_1310.tape : (i == local.iter_1310.tape_ptr ? local.ascii_lookup[local.curr_1311.input] : b)]
        : local.iter_1310.tape)

    tape_ptr = (
      local.curr_1311.code == "<"
        ? local.iter_1310.tape_ptr == 0 ? length(local.iter_1310.tape) - 1 : local.iter_1310.tape_ptr - 1 :
      local.curr_1311.code == ">"
        ? local.iter_1310.tape_ptr == length(local.iter_1310.tape) - 1 ? 0 : local.iter_1310.tape_ptr + 1
        : local.iter_1310.tape_ptr)

    code_ptr = 1 + (
      local.curr_1311.code == "["
        ? local.iter_1310.tape[local.iter_1310.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1310.code_ptr)] : local.iter_1310.code_ptr :
      local.curr_1311.code == "]"
        ? local.iter_1310.tape[local.iter_1310.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1310.code_ptr)] : local.iter_1310.code_ptr
        : local.iter_1310.code_ptr)

    steps_taken = 1 + local.iter_1310.steps_taken
  }
}

locals {
  end_of_code_1312 = try(local.iter_1311.code_ptr >= length(var.code), true)

  curr_1312 = local.end_of_code_1312 ? null : {
    code = substr(var.code, local.iter_1311.code_ptr, 1)
    input = substr(var.code, local.iter_1311.code_ptr, 1) == "," ? substr(local.iter_1311.input, 0, 1) : null
  }

  iter_1312 = local.end_of_code_1312 ? local.iter_1311 : {
    input = (local.curr_1312.code == ","
      ? substr(local.iter_1311.input, 1, -1)
      : local.iter_1311.input)

    output = (local.curr_1312.code == "."
      ? "${local.iter_1311.output}${jsondecode(format("\"\\u%04x\"", local.iter_1311.tape[local.iter_1311.tape_ptr]))}"
      : local.iter_1311.output)
    
    tape = (
      local.curr_1312.code == "+"
        ? [for i, b in local.iter_1311.tape : (i == local.iter_1311.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1312.code == "-"
        ? [for i, b in local.iter_1311.tape : (i == local.iter_1311.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1312.code == ","
        ? [for i, b in local.iter_1311.tape : (i == local.iter_1311.tape_ptr ? local.ascii_lookup[local.curr_1312.input] : b)]
        : local.iter_1311.tape)

    tape_ptr = (
      local.curr_1312.code == "<"
        ? local.iter_1311.tape_ptr == 0 ? length(local.iter_1311.tape) - 1 : local.iter_1311.tape_ptr - 1 :
      local.curr_1312.code == ">"
        ? local.iter_1311.tape_ptr == length(local.iter_1311.tape) - 1 ? 0 : local.iter_1311.tape_ptr + 1
        : local.iter_1311.tape_ptr)

    code_ptr = 1 + (
      local.curr_1312.code == "["
        ? local.iter_1311.tape[local.iter_1311.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1311.code_ptr)] : local.iter_1311.code_ptr :
      local.curr_1312.code == "]"
        ? local.iter_1311.tape[local.iter_1311.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1311.code_ptr)] : local.iter_1311.code_ptr
        : local.iter_1311.code_ptr)

    steps_taken = 1 + local.iter_1311.steps_taken
  }
}

locals {
  end_of_code_1313 = try(local.iter_1312.code_ptr >= length(var.code), true)

  curr_1313 = local.end_of_code_1313 ? null : {
    code = substr(var.code, local.iter_1312.code_ptr, 1)
    input = substr(var.code, local.iter_1312.code_ptr, 1) == "," ? substr(local.iter_1312.input, 0, 1) : null
  }

  iter_1313 = local.end_of_code_1313 ? local.iter_1312 : {
    input = (local.curr_1313.code == ","
      ? substr(local.iter_1312.input, 1, -1)
      : local.iter_1312.input)

    output = (local.curr_1313.code == "."
      ? "${local.iter_1312.output}${jsondecode(format("\"\\u%04x\"", local.iter_1312.tape[local.iter_1312.tape_ptr]))}"
      : local.iter_1312.output)
    
    tape = (
      local.curr_1313.code == "+"
        ? [for i, b in local.iter_1312.tape : (i == local.iter_1312.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1313.code == "-"
        ? [for i, b in local.iter_1312.tape : (i == local.iter_1312.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1313.code == ","
        ? [for i, b in local.iter_1312.tape : (i == local.iter_1312.tape_ptr ? local.ascii_lookup[local.curr_1313.input] : b)]
        : local.iter_1312.tape)

    tape_ptr = (
      local.curr_1313.code == "<"
        ? local.iter_1312.tape_ptr == 0 ? length(local.iter_1312.tape) - 1 : local.iter_1312.tape_ptr - 1 :
      local.curr_1313.code == ">"
        ? local.iter_1312.tape_ptr == length(local.iter_1312.tape) - 1 ? 0 : local.iter_1312.tape_ptr + 1
        : local.iter_1312.tape_ptr)

    code_ptr = 1 + (
      local.curr_1313.code == "["
        ? local.iter_1312.tape[local.iter_1312.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1312.code_ptr)] : local.iter_1312.code_ptr :
      local.curr_1313.code == "]"
        ? local.iter_1312.tape[local.iter_1312.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1312.code_ptr)] : local.iter_1312.code_ptr
        : local.iter_1312.code_ptr)

    steps_taken = 1 + local.iter_1312.steps_taken
  }
}

locals {
  end_of_code_1314 = try(local.iter_1313.code_ptr >= length(var.code), true)

  curr_1314 = local.end_of_code_1314 ? null : {
    code = substr(var.code, local.iter_1313.code_ptr, 1)
    input = substr(var.code, local.iter_1313.code_ptr, 1) == "," ? substr(local.iter_1313.input, 0, 1) : null
  }

  iter_1314 = local.end_of_code_1314 ? local.iter_1313 : {
    input = (local.curr_1314.code == ","
      ? substr(local.iter_1313.input, 1, -1)
      : local.iter_1313.input)

    output = (local.curr_1314.code == "."
      ? "${local.iter_1313.output}${jsondecode(format("\"\\u%04x\"", local.iter_1313.tape[local.iter_1313.tape_ptr]))}"
      : local.iter_1313.output)
    
    tape = (
      local.curr_1314.code == "+"
        ? [for i, b in local.iter_1313.tape : (i == local.iter_1313.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1314.code == "-"
        ? [for i, b in local.iter_1313.tape : (i == local.iter_1313.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1314.code == ","
        ? [for i, b in local.iter_1313.tape : (i == local.iter_1313.tape_ptr ? local.ascii_lookup[local.curr_1314.input] : b)]
        : local.iter_1313.tape)

    tape_ptr = (
      local.curr_1314.code == "<"
        ? local.iter_1313.tape_ptr == 0 ? length(local.iter_1313.tape) - 1 : local.iter_1313.tape_ptr - 1 :
      local.curr_1314.code == ">"
        ? local.iter_1313.tape_ptr == length(local.iter_1313.tape) - 1 ? 0 : local.iter_1313.tape_ptr + 1
        : local.iter_1313.tape_ptr)

    code_ptr = 1 + (
      local.curr_1314.code == "["
        ? local.iter_1313.tape[local.iter_1313.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1313.code_ptr)] : local.iter_1313.code_ptr :
      local.curr_1314.code == "]"
        ? local.iter_1313.tape[local.iter_1313.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1313.code_ptr)] : local.iter_1313.code_ptr
        : local.iter_1313.code_ptr)

    steps_taken = 1 + local.iter_1313.steps_taken
  }
}

locals {
  end_of_code_1315 = try(local.iter_1314.code_ptr >= length(var.code), true)

  curr_1315 = local.end_of_code_1315 ? null : {
    code = substr(var.code, local.iter_1314.code_ptr, 1)
    input = substr(var.code, local.iter_1314.code_ptr, 1) == "," ? substr(local.iter_1314.input, 0, 1) : null
  }

  iter_1315 = local.end_of_code_1315 ? local.iter_1314 : {
    input = (local.curr_1315.code == ","
      ? substr(local.iter_1314.input, 1, -1)
      : local.iter_1314.input)

    output = (local.curr_1315.code == "."
      ? "${local.iter_1314.output}${jsondecode(format("\"\\u%04x\"", local.iter_1314.tape[local.iter_1314.tape_ptr]))}"
      : local.iter_1314.output)
    
    tape = (
      local.curr_1315.code == "+"
        ? [for i, b in local.iter_1314.tape : (i == local.iter_1314.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1315.code == "-"
        ? [for i, b in local.iter_1314.tape : (i == local.iter_1314.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1315.code == ","
        ? [for i, b in local.iter_1314.tape : (i == local.iter_1314.tape_ptr ? local.ascii_lookup[local.curr_1315.input] : b)]
        : local.iter_1314.tape)

    tape_ptr = (
      local.curr_1315.code == "<"
        ? local.iter_1314.tape_ptr == 0 ? length(local.iter_1314.tape) - 1 : local.iter_1314.tape_ptr - 1 :
      local.curr_1315.code == ">"
        ? local.iter_1314.tape_ptr == length(local.iter_1314.tape) - 1 ? 0 : local.iter_1314.tape_ptr + 1
        : local.iter_1314.tape_ptr)

    code_ptr = 1 + (
      local.curr_1315.code == "["
        ? local.iter_1314.tape[local.iter_1314.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1314.code_ptr)] : local.iter_1314.code_ptr :
      local.curr_1315.code == "]"
        ? local.iter_1314.tape[local.iter_1314.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1314.code_ptr)] : local.iter_1314.code_ptr
        : local.iter_1314.code_ptr)

    steps_taken = 1 + local.iter_1314.steps_taken
  }
}

locals {
  end_of_code_1316 = try(local.iter_1315.code_ptr >= length(var.code), true)

  curr_1316 = local.end_of_code_1316 ? null : {
    code = substr(var.code, local.iter_1315.code_ptr, 1)
    input = substr(var.code, local.iter_1315.code_ptr, 1) == "," ? substr(local.iter_1315.input, 0, 1) : null
  }

  iter_1316 = local.end_of_code_1316 ? local.iter_1315 : {
    input = (local.curr_1316.code == ","
      ? substr(local.iter_1315.input, 1, -1)
      : local.iter_1315.input)

    output = (local.curr_1316.code == "."
      ? "${local.iter_1315.output}${jsondecode(format("\"\\u%04x\"", local.iter_1315.tape[local.iter_1315.tape_ptr]))}"
      : local.iter_1315.output)
    
    tape = (
      local.curr_1316.code == "+"
        ? [for i, b in local.iter_1315.tape : (i == local.iter_1315.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1316.code == "-"
        ? [for i, b in local.iter_1315.tape : (i == local.iter_1315.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1316.code == ","
        ? [for i, b in local.iter_1315.tape : (i == local.iter_1315.tape_ptr ? local.ascii_lookup[local.curr_1316.input] : b)]
        : local.iter_1315.tape)

    tape_ptr = (
      local.curr_1316.code == "<"
        ? local.iter_1315.tape_ptr == 0 ? length(local.iter_1315.tape) - 1 : local.iter_1315.tape_ptr - 1 :
      local.curr_1316.code == ">"
        ? local.iter_1315.tape_ptr == length(local.iter_1315.tape) - 1 ? 0 : local.iter_1315.tape_ptr + 1
        : local.iter_1315.tape_ptr)

    code_ptr = 1 + (
      local.curr_1316.code == "["
        ? local.iter_1315.tape[local.iter_1315.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1315.code_ptr)] : local.iter_1315.code_ptr :
      local.curr_1316.code == "]"
        ? local.iter_1315.tape[local.iter_1315.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1315.code_ptr)] : local.iter_1315.code_ptr
        : local.iter_1315.code_ptr)

    steps_taken = 1 + local.iter_1315.steps_taken
  }
}

locals {
  end_of_code_1317 = try(local.iter_1316.code_ptr >= length(var.code), true)

  curr_1317 = local.end_of_code_1317 ? null : {
    code = substr(var.code, local.iter_1316.code_ptr, 1)
    input = substr(var.code, local.iter_1316.code_ptr, 1) == "," ? substr(local.iter_1316.input, 0, 1) : null
  }

  iter_1317 = local.end_of_code_1317 ? local.iter_1316 : {
    input = (local.curr_1317.code == ","
      ? substr(local.iter_1316.input, 1, -1)
      : local.iter_1316.input)

    output = (local.curr_1317.code == "."
      ? "${local.iter_1316.output}${jsondecode(format("\"\\u%04x\"", local.iter_1316.tape[local.iter_1316.tape_ptr]))}"
      : local.iter_1316.output)
    
    tape = (
      local.curr_1317.code == "+"
        ? [for i, b in local.iter_1316.tape : (i == local.iter_1316.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1317.code == "-"
        ? [for i, b in local.iter_1316.tape : (i == local.iter_1316.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1317.code == ","
        ? [for i, b in local.iter_1316.tape : (i == local.iter_1316.tape_ptr ? local.ascii_lookup[local.curr_1317.input] : b)]
        : local.iter_1316.tape)

    tape_ptr = (
      local.curr_1317.code == "<"
        ? local.iter_1316.tape_ptr == 0 ? length(local.iter_1316.tape) - 1 : local.iter_1316.tape_ptr - 1 :
      local.curr_1317.code == ">"
        ? local.iter_1316.tape_ptr == length(local.iter_1316.tape) - 1 ? 0 : local.iter_1316.tape_ptr + 1
        : local.iter_1316.tape_ptr)

    code_ptr = 1 + (
      local.curr_1317.code == "["
        ? local.iter_1316.tape[local.iter_1316.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1316.code_ptr)] : local.iter_1316.code_ptr :
      local.curr_1317.code == "]"
        ? local.iter_1316.tape[local.iter_1316.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1316.code_ptr)] : local.iter_1316.code_ptr
        : local.iter_1316.code_ptr)

    steps_taken = 1 + local.iter_1316.steps_taken
  }
}

locals {
  end_of_code_1318 = try(local.iter_1317.code_ptr >= length(var.code), true)

  curr_1318 = local.end_of_code_1318 ? null : {
    code = substr(var.code, local.iter_1317.code_ptr, 1)
    input = substr(var.code, local.iter_1317.code_ptr, 1) == "," ? substr(local.iter_1317.input, 0, 1) : null
  }

  iter_1318 = local.end_of_code_1318 ? local.iter_1317 : {
    input = (local.curr_1318.code == ","
      ? substr(local.iter_1317.input, 1, -1)
      : local.iter_1317.input)

    output = (local.curr_1318.code == "."
      ? "${local.iter_1317.output}${jsondecode(format("\"\\u%04x\"", local.iter_1317.tape[local.iter_1317.tape_ptr]))}"
      : local.iter_1317.output)
    
    tape = (
      local.curr_1318.code == "+"
        ? [for i, b in local.iter_1317.tape : (i == local.iter_1317.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1318.code == "-"
        ? [for i, b in local.iter_1317.tape : (i == local.iter_1317.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1318.code == ","
        ? [for i, b in local.iter_1317.tape : (i == local.iter_1317.tape_ptr ? local.ascii_lookup[local.curr_1318.input] : b)]
        : local.iter_1317.tape)

    tape_ptr = (
      local.curr_1318.code == "<"
        ? local.iter_1317.tape_ptr == 0 ? length(local.iter_1317.tape) - 1 : local.iter_1317.tape_ptr - 1 :
      local.curr_1318.code == ">"
        ? local.iter_1317.tape_ptr == length(local.iter_1317.tape) - 1 ? 0 : local.iter_1317.tape_ptr + 1
        : local.iter_1317.tape_ptr)

    code_ptr = 1 + (
      local.curr_1318.code == "["
        ? local.iter_1317.tape[local.iter_1317.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1317.code_ptr)] : local.iter_1317.code_ptr :
      local.curr_1318.code == "]"
        ? local.iter_1317.tape[local.iter_1317.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1317.code_ptr)] : local.iter_1317.code_ptr
        : local.iter_1317.code_ptr)

    steps_taken = 1 + local.iter_1317.steps_taken
  }
}

locals {
  end_of_code_1319 = try(local.iter_1318.code_ptr >= length(var.code), true)

  curr_1319 = local.end_of_code_1319 ? null : {
    code = substr(var.code, local.iter_1318.code_ptr, 1)
    input = substr(var.code, local.iter_1318.code_ptr, 1) == "," ? substr(local.iter_1318.input, 0, 1) : null
  }

  iter_1319 = local.end_of_code_1319 ? local.iter_1318 : {
    input = (local.curr_1319.code == ","
      ? substr(local.iter_1318.input, 1, -1)
      : local.iter_1318.input)

    output = (local.curr_1319.code == "."
      ? "${local.iter_1318.output}${jsondecode(format("\"\\u%04x\"", local.iter_1318.tape[local.iter_1318.tape_ptr]))}"
      : local.iter_1318.output)
    
    tape = (
      local.curr_1319.code == "+"
        ? [for i, b in local.iter_1318.tape : (i == local.iter_1318.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1319.code == "-"
        ? [for i, b in local.iter_1318.tape : (i == local.iter_1318.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1319.code == ","
        ? [for i, b in local.iter_1318.tape : (i == local.iter_1318.tape_ptr ? local.ascii_lookup[local.curr_1319.input] : b)]
        : local.iter_1318.tape)

    tape_ptr = (
      local.curr_1319.code == "<"
        ? local.iter_1318.tape_ptr == 0 ? length(local.iter_1318.tape) - 1 : local.iter_1318.tape_ptr - 1 :
      local.curr_1319.code == ">"
        ? local.iter_1318.tape_ptr == length(local.iter_1318.tape) - 1 ? 0 : local.iter_1318.tape_ptr + 1
        : local.iter_1318.tape_ptr)

    code_ptr = 1 + (
      local.curr_1319.code == "["
        ? local.iter_1318.tape[local.iter_1318.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1318.code_ptr)] : local.iter_1318.code_ptr :
      local.curr_1319.code == "]"
        ? local.iter_1318.tape[local.iter_1318.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1318.code_ptr)] : local.iter_1318.code_ptr
        : local.iter_1318.code_ptr)

    steps_taken = 1 + local.iter_1318.steps_taken
  }
}

locals {
  end_of_code_1320 = try(local.iter_1319.code_ptr >= length(var.code), true)

  curr_1320 = local.end_of_code_1320 ? null : {
    code = substr(var.code, local.iter_1319.code_ptr, 1)
    input = substr(var.code, local.iter_1319.code_ptr, 1) == "," ? substr(local.iter_1319.input, 0, 1) : null
  }

  iter_1320 = local.end_of_code_1320 ? local.iter_1319 : {
    input = (local.curr_1320.code == ","
      ? substr(local.iter_1319.input, 1, -1)
      : local.iter_1319.input)

    output = (local.curr_1320.code == "."
      ? "${local.iter_1319.output}${jsondecode(format("\"\\u%04x\"", local.iter_1319.tape[local.iter_1319.tape_ptr]))}"
      : local.iter_1319.output)
    
    tape = (
      local.curr_1320.code == "+"
        ? [for i, b in local.iter_1319.tape : (i == local.iter_1319.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1320.code == "-"
        ? [for i, b in local.iter_1319.tape : (i == local.iter_1319.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1320.code == ","
        ? [for i, b in local.iter_1319.tape : (i == local.iter_1319.tape_ptr ? local.ascii_lookup[local.curr_1320.input] : b)]
        : local.iter_1319.tape)

    tape_ptr = (
      local.curr_1320.code == "<"
        ? local.iter_1319.tape_ptr == 0 ? length(local.iter_1319.tape) - 1 : local.iter_1319.tape_ptr - 1 :
      local.curr_1320.code == ">"
        ? local.iter_1319.tape_ptr == length(local.iter_1319.tape) - 1 ? 0 : local.iter_1319.tape_ptr + 1
        : local.iter_1319.tape_ptr)

    code_ptr = 1 + (
      local.curr_1320.code == "["
        ? local.iter_1319.tape[local.iter_1319.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1319.code_ptr)] : local.iter_1319.code_ptr :
      local.curr_1320.code == "]"
        ? local.iter_1319.tape[local.iter_1319.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1319.code_ptr)] : local.iter_1319.code_ptr
        : local.iter_1319.code_ptr)

    steps_taken = 1 + local.iter_1319.steps_taken
  }
}

locals {
  end_of_code_1321 = try(local.iter_1320.code_ptr >= length(var.code), true)

  curr_1321 = local.end_of_code_1321 ? null : {
    code = substr(var.code, local.iter_1320.code_ptr, 1)
    input = substr(var.code, local.iter_1320.code_ptr, 1) == "," ? substr(local.iter_1320.input, 0, 1) : null
  }

  iter_1321 = local.end_of_code_1321 ? local.iter_1320 : {
    input = (local.curr_1321.code == ","
      ? substr(local.iter_1320.input, 1, -1)
      : local.iter_1320.input)

    output = (local.curr_1321.code == "."
      ? "${local.iter_1320.output}${jsondecode(format("\"\\u%04x\"", local.iter_1320.tape[local.iter_1320.tape_ptr]))}"
      : local.iter_1320.output)
    
    tape = (
      local.curr_1321.code == "+"
        ? [for i, b in local.iter_1320.tape : (i == local.iter_1320.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1321.code == "-"
        ? [for i, b in local.iter_1320.tape : (i == local.iter_1320.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1321.code == ","
        ? [for i, b in local.iter_1320.tape : (i == local.iter_1320.tape_ptr ? local.ascii_lookup[local.curr_1321.input] : b)]
        : local.iter_1320.tape)

    tape_ptr = (
      local.curr_1321.code == "<"
        ? local.iter_1320.tape_ptr == 0 ? length(local.iter_1320.tape) - 1 : local.iter_1320.tape_ptr - 1 :
      local.curr_1321.code == ">"
        ? local.iter_1320.tape_ptr == length(local.iter_1320.tape) - 1 ? 0 : local.iter_1320.tape_ptr + 1
        : local.iter_1320.tape_ptr)

    code_ptr = 1 + (
      local.curr_1321.code == "["
        ? local.iter_1320.tape[local.iter_1320.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1320.code_ptr)] : local.iter_1320.code_ptr :
      local.curr_1321.code == "]"
        ? local.iter_1320.tape[local.iter_1320.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1320.code_ptr)] : local.iter_1320.code_ptr
        : local.iter_1320.code_ptr)

    steps_taken = 1 + local.iter_1320.steps_taken
  }
}

locals {
  end_of_code_1322 = try(local.iter_1321.code_ptr >= length(var.code), true)

  curr_1322 = local.end_of_code_1322 ? null : {
    code = substr(var.code, local.iter_1321.code_ptr, 1)
    input = substr(var.code, local.iter_1321.code_ptr, 1) == "," ? substr(local.iter_1321.input, 0, 1) : null
  }

  iter_1322 = local.end_of_code_1322 ? local.iter_1321 : {
    input = (local.curr_1322.code == ","
      ? substr(local.iter_1321.input, 1, -1)
      : local.iter_1321.input)

    output = (local.curr_1322.code == "."
      ? "${local.iter_1321.output}${jsondecode(format("\"\\u%04x\"", local.iter_1321.tape[local.iter_1321.tape_ptr]))}"
      : local.iter_1321.output)
    
    tape = (
      local.curr_1322.code == "+"
        ? [for i, b in local.iter_1321.tape : (i == local.iter_1321.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1322.code == "-"
        ? [for i, b in local.iter_1321.tape : (i == local.iter_1321.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1322.code == ","
        ? [for i, b in local.iter_1321.tape : (i == local.iter_1321.tape_ptr ? local.ascii_lookup[local.curr_1322.input] : b)]
        : local.iter_1321.tape)

    tape_ptr = (
      local.curr_1322.code == "<"
        ? local.iter_1321.tape_ptr == 0 ? length(local.iter_1321.tape) - 1 : local.iter_1321.tape_ptr - 1 :
      local.curr_1322.code == ">"
        ? local.iter_1321.tape_ptr == length(local.iter_1321.tape) - 1 ? 0 : local.iter_1321.tape_ptr + 1
        : local.iter_1321.tape_ptr)

    code_ptr = 1 + (
      local.curr_1322.code == "["
        ? local.iter_1321.tape[local.iter_1321.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1321.code_ptr)] : local.iter_1321.code_ptr :
      local.curr_1322.code == "]"
        ? local.iter_1321.tape[local.iter_1321.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1321.code_ptr)] : local.iter_1321.code_ptr
        : local.iter_1321.code_ptr)

    steps_taken = 1 + local.iter_1321.steps_taken
  }
}

locals {
  end_of_code_1323 = try(local.iter_1322.code_ptr >= length(var.code), true)

  curr_1323 = local.end_of_code_1323 ? null : {
    code = substr(var.code, local.iter_1322.code_ptr, 1)
    input = substr(var.code, local.iter_1322.code_ptr, 1) == "," ? substr(local.iter_1322.input, 0, 1) : null
  }

  iter_1323 = local.end_of_code_1323 ? local.iter_1322 : {
    input = (local.curr_1323.code == ","
      ? substr(local.iter_1322.input, 1, -1)
      : local.iter_1322.input)

    output = (local.curr_1323.code == "."
      ? "${local.iter_1322.output}${jsondecode(format("\"\\u%04x\"", local.iter_1322.tape[local.iter_1322.tape_ptr]))}"
      : local.iter_1322.output)
    
    tape = (
      local.curr_1323.code == "+"
        ? [for i, b in local.iter_1322.tape : (i == local.iter_1322.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1323.code == "-"
        ? [for i, b in local.iter_1322.tape : (i == local.iter_1322.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1323.code == ","
        ? [for i, b in local.iter_1322.tape : (i == local.iter_1322.tape_ptr ? local.ascii_lookup[local.curr_1323.input] : b)]
        : local.iter_1322.tape)

    tape_ptr = (
      local.curr_1323.code == "<"
        ? local.iter_1322.tape_ptr == 0 ? length(local.iter_1322.tape) - 1 : local.iter_1322.tape_ptr - 1 :
      local.curr_1323.code == ">"
        ? local.iter_1322.tape_ptr == length(local.iter_1322.tape) - 1 ? 0 : local.iter_1322.tape_ptr + 1
        : local.iter_1322.tape_ptr)

    code_ptr = 1 + (
      local.curr_1323.code == "["
        ? local.iter_1322.tape[local.iter_1322.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1322.code_ptr)] : local.iter_1322.code_ptr :
      local.curr_1323.code == "]"
        ? local.iter_1322.tape[local.iter_1322.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1322.code_ptr)] : local.iter_1322.code_ptr
        : local.iter_1322.code_ptr)

    steps_taken = 1 + local.iter_1322.steps_taken
  }
}

locals {
  end_of_code_1324 = try(local.iter_1323.code_ptr >= length(var.code), true)

  curr_1324 = local.end_of_code_1324 ? null : {
    code = substr(var.code, local.iter_1323.code_ptr, 1)
    input = substr(var.code, local.iter_1323.code_ptr, 1) == "," ? substr(local.iter_1323.input, 0, 1) : null
  }

  iter_1324 = local.end_of_code_1324 ? local.iter_1323 : {
    input = (local.curr_1324.code == ","
      ? substr(local.iter_1323.input, 1, -1)
      : local.iter_1323.input)

    output = (local.curr_1324.code == "."
      ? "${local.iter_1323.output}${jsondecode(format("\"\\u%04x\"", local.iter_1323.tape[local.iter_1323.tape_ptr]))}"
      : local.iter_1323.output)
    
    tape = (
      local.curr_1324.code == "+"
        ? [for i, b in local.iter_1323.tape : (i == local.iter_1323.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1324.code == "-"
        ? [for i, b in local.iter_1323.tape : (i == local.iter_1323.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1324.code == ","
        ? [for i, b in local.iter_1323.tape : (i == local.iter_1323.tape_ptr ? local.ascii_lookup[local.curr_1324.input] : b)]
        : local.iter_1323.tape)

    tape_ptr = (
      local.curr_1324.code == "<"
        ? local.iter_1323.tape_ptr == 0 ? length(local.iter_1323.tape) - 1 : local.iter_1323.tape_ptr - 1 :
      local.curr_1324.code == ">"
        ? local.iter_1323.tape_ptr == length(local.iter_1323.tape) - 1 ? 0 : local.iter_1323.tape_ptr + 1
        : local.iter_1323.tape_ptr)

    code_ptr = 1 + (
      local.curr_1324.code == "["
        ? local.iter_1323.tape[local.iter_1323.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1323.code_ptr)] : local.iter_1323.code_ptr :
      local.curr_1324.code == "]"
        ? local.iter_1323.tape[local.iter_1323.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1323.code_ptr)] : local.iter_1323.code_ptr
        : local.iter_1323.code_ptr)

    steps_taken = 1 + local.iter_1323.steps_taken
  }
}

locals {
  end_of_code_1325 = try(local.iter_1324.code_ptr >= length(var.code), true)

  curr_1325 = local.end_of_code_1325 ? null : {
    code = substr(var.code, local.iter_1324.code_ptr, 1)
    input = substr(var.code, local.iter_1324.code_ptr, 1) == "," ? substr(local.iter_1324.input, 0, 1) : null
  }

  iter_1325 = local.end_of_code_1325 ? local.iter_1324 : {
    input = (local.curr_1325.code == ","
      ? substr(local.iter_1324.input, 1, -1)
      : local.iter_1324.input)

    output = (local.curr_1325.code == "."
      ? "${local.iter_1324.output}${jsondecode(format("\"\\u%04x\"", local.iter_1324.tape[local.iter_1324.tape_ptr]))}"
      : local.iter_1324.output)
    
    tape = (
      local.curr_1325.code == "+"
        ? [for i, b in local.iter_1324.tape : (i == local.iter_1324.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1325.code == "-"
        ? [for i, b in local.iter_1324.tape : (i == local.iter_1324.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1325.code == ","
        ? [for i, b in local.iter_1324.tape : (i == local.iter_1324.tape_ptr ? local.ascii_lookup[local.curr_1325.input] : b)]
        : local.iter_1324.tape)

    tape_ptr = (
      local.curr_1325.code == "<"
        ? local.iter_1324.tape_ptr == 0 ? length(local.iter_1324.tape) - 1 : local.iter_1324.tape_ptr - 1 :
      local.curr_1325.code == ">"
        ? local.iter_1324.tape_ptr == length(local.iter_1324.tape) - 1 ? 0 : local.iter_1324.tape_ptr + 1
        : local.iter_1324.tape_ptr)

    code_ptr = 1 + (
      local.curr_1325.code == "["
        ? local.iter_1324.tape[local.iter_1324.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1324.code_ptr)] : local.iter_1324.code_ptr :
      local.curr_1325.code == "]"
        ? local.iter_1324.tape[local.iter_1324.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1324.code_ptr)] : local.iter_1324.code_ptr
        : local.iter_1324.code_ptr)

    steps_taken = 1 + local.iter_1324.steps_taken
  }
}

locals {
  end_of_code_1326 = try(local.iter_1325.code_ptr >= length(var.code), true)

  curr_1326 = local.end_of_code_1326 ? null : {
    code = substr(var.code, local.iter_1325.code_ptr, 1)
    input = substr(var.code, local.iter_1325.code_ptr, 1) == "," ? substr(local.iter_1325.input, 0, 1) : null
  }

  iter_1326 = local.end_of_code_1326 ? local.iter_1325 : {
    input = (local.curr_1326.code == ","
      ? substr(local.iter_1325.input, 1, -1)
      : local.iter_1325.input)

    output = (local.curr_1326.code == "."
      ? "${local.iter_1325.output}${jsondecode(format("\"\\u%04x\"", local.iter_1325.tape[local.iter_1325.tape_ptr]))}"
      : local.iter_1325.output)
    
    tape = (
      local.curr_1326.code == "+"
        ? [for i, b in local.iter_1325.tape : (i == local.iter_1325.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1326.code == "-"
        ? [for i, b in local.iter_1325.tape : (i == local.iter_1325.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1326.code == ","
        ? [for i, b in local.iter_1325.tape : (i == local.iter_1325.tape_ptr ? local.ascii_lookup[local.curr_1326.input] : b)]
        : local.iter_1325.tape)

    tape_ptr = (
      local.curr_1326.code == "<"
        ? local.iter_1325.tape_ptr == 0 ? length(local.iter_1325.tape) - 1 : local.iter_1325.tape_ptr - 1 :
      local.curr_1326.code == ">"
        ? local.iter_1325.tape_ptr == length(local.iter_1325.tape) - 1 ? 0 : local.iter_1325.tape_ptr + 1
        : local.iter_1325.tape_ptr)

    code_ptr = 1 + (
      local.curr_1326.code == "["
        ? local.iter_1325.tape[local.iter_1325.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1325.code_ptr)] : local.iter_1325.code_ptr :
      local.curr_1326.code == "]"
        ? local.iter_1325.tape[local.iter_1325.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1325.code_ptr)] : local.iter_1325.code_ptr
        : local.iter_1325.code_ptr)

    steps_taken = 1 + local.iter_1325.steps_taken
  }
}

locals {
  end_of_code_1327 = try(local.iter_1326.code_ptr >= length(var.code), true)

  curr_1327 = local.end_of_code_1327 ? null : {
    code = substr(var.code, local.iter_1326.code_ptr, 1)
    input = substr(var.code, local.iter_1326.code_ptr, 1) == "," ? substr(local.iter_1326.input, 0, 1) : null
  }

  iter_1327 = local.end_of_code_1327 ? local.iter_1326 : {
    input = (local.curr_1327.code == ","
      ? substr(local.iter_1326.input, 1, -1)
      : local.iter_1326.input)

    output = (local.curr_1327.code == "."
      ? "${local.iter_1326.output}${jsondecode(format("\"\\u%04x\"", local.iter_1326.tape[local.iter_1326.tape_ptr]))}"
      : local.iter_1326.output)
    
    tape = (
      local.curr_1327.code == "+"
        ? [for i, b in local.iter_1326.tape : (i == local.iter_1326.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1327.code == "-"
        ? [for i, b in local.iter_1326.tape : (i == local.iter_1326.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1327.code == ","
        ? [for i, b in local.iter_1326.tape : (i == local.iter_1326.tape_ptr ? local.ascii_lookup[local.curr_1327.input] : b)]
        : local.iter_1326.tape)

    tape_ptr = (
      local.curr_1327.code == "<"
        ? local.iter_1326.tape_ptr == 0 ? length(local.iter_1326.tape) - 1 : local.iter_1326.tape_ptr - 1 :
      local.curr_1327.code == ">"
        ? local.iter_1326.tape_ptr == length(local.iter_1326.tape) - 1 ? 0 : local.iter_1326.tape_ptr + 1
        : local.iter_1326.tape_ptr)

    code_ptr = 1 + (
      local.curr_1327.code == "["
        ? local.iter_1326.tape[local.iter_1326.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1326.code_ptr)] : local.iter_1326.code_ptr :
      local.curr_1327.code == "]"
        ? local.iter_1326.tape[local.iter_1326.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1326.code_ptr)] : local.iter_1326.code_ptr
        : local.iter_1326.code_ptr)

    steps_taken = 1 + local.iter_1326.steps_taken
  }
}

locals {
  end_of_code_1328 = try(local.iter_1327.code_ptr >= length(var.code), true)

  curr_1328 = local.end_of_code_1328 ? null : {
    code = substr(var.code, local.iter_1327.code_ptr, 1)
    input = substr(var.code, local.iter_1327.code_ptr, 1) == "," ? substr(local.iter_1327.input, 0, 1) : null
  }

  iter_1328 = local.end_of_code_1328 ? local.iter_1327 : {
    input = (local.curr_1328.code == ","
      ? substr(local.iter_1327.input, 1, -1)
      : local.iter_1327.input)

    output = (local.curr_1328.code == "."
      ? "${local.iter_1327.output}${jsondecode(format("\"\\u%04x\"", local.iter_1327.tape[local.iter_1327.tape_ptr]))}"
      : local.iter_1327.output)
    
    tape = (
      local.curr_1328.code == "+"
        ? [for i, b in local.iter_1327.tape : (i == local.iter_1327.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1328.code == "-"
        ? [for i, b in local.iter_1327.tape : (i == local.iter_1327.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1328.code == ","
        ? [for i, b in local.iter_1327.tape : (i == local.iter_1327.tape_ptr ? local.ascii_lookup[local.curr_1328.input] : b)]
        : local.iter_1327.tape)

    tape_ptr = (
      local.curr_1328.code == "<"
        ? local.iter_1327.tape_ptr == 0 ? length(local.iter_1327.tape) - 1 : local.iter_1327.tape_ptr - 1 :
      local.curr_1328.code == ">"
        ? local.iter_1327.tape_ptr == length(local.iter_1327.tape) - 1 ? 0 : local.iter_1327.tape_ptr + 1
        : local.iter_1327.tape_ptr)

    code_ptr = 1 + (
      local.curr_1328.code == "["
        ? local.iter_1327.tape[local.iter_1327.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1327.code_ptr)] : local.iter_1327.code_ptr :
      local.curr_1328.code == "]"
        ? local.iter_1327.tape[local.iter_1327.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1327.code_ptr)] : local.iter_1327.code_ptr
        : local.iter_1327.code_ptr)

    steps_taken = 1 + local.iter_1327.steps_taken
  }
}

locals {
  end_of_code_1329 = try(local.iter_1328.code_ptr >= length(var.code), true)

  curr_1329 = local.end_of_code_1329 ? null : {
    code = substr(var.code, local.iter_1328.code_ptr, 1)
    input = substr(var.code, local.iter_1328.code_ptr, 1) == "," ? substr(local.iter_1328.input, 0, 1) : null
  }

  iter_1329 = local.end_of_code_1329 ? local.iter_1328 : {
    input = (local.curr_1329.code == ","
      ? substr(local.iter_1328.input, 1, -1)
      : local.iter_1328.input)

    output = (local.curr_1329.code == "."
      ? "${local.iter_1328.output}${jsondecode(format("\"\\u%04x\"", local.iter_1328.tape[local.iter_1328.tape_ptr]))}"
      : local.iter_1328.output)
    
    tape = (
      local.curr_1329.code == "+"
        ? [for i, b in local.iter_1328.tape : (i == local.iter_1328.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1329.code == "-"
        ? [for i, b in local.iter_1328.tape : (i == local.iter_1328.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1329.code == ","
        ? [for i, b in local.iter_1328.tape : (i == local.iter_1328.tape_ptr ? local.ascii_lookup[local.curr_1329.input] : b)]
        : local.iter_1328.tape)

    tape_ptr = (
      local.curr_1329.code == "<"
        ? local.iter_1328.tape_ptr == 0 ? length(local.iter_1328.tape) - 1 : local.iter_1328.tape_ptr - 1 :
      local.curr_1329.code == ">"
        ? local.iter_1328.tape_ptr == length(local.iter_1328.tape) - 1 ? 0 : local.iter_1328.tape_ptr + 1
        : local.iter_1328.tape_ptr)

    code_ptr = 1 + (
      local.curr_1329.code == "["
        ? local.iter_1328.tape[local.iter_1328.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1328.code_ptr)] : local.iter_1328.code_ptr :
      local.curr_1329.code == "]"
        ? local.iter_1328.tape[local.iter_1328.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1328.code_ptr)] : local.iter_1328.code_ptr
        : local.iter_1328.code_ptr)

    steps_taken = 1 + local.iter_1328.steps_taken
  }
}

locals {
  end_of_code_1330 = try(local.iter_1329.code_ptr >= length(var.code), true)

  curr_1330 = local.end_of_code_1330 ? null : {
    code = substr(var.code, local.iter_1329.code_ptr, 1)
    input = substr(var.code, local.iter_1329.code_ptr, 1) == "," ? substr(local.iter_1329.input, 0, 1) : null
  }

  iter_1330 = local.end_of_code_1330 ? local.iter_1329 : {
    input = (local.curr_1330.code == ","
      ? substr(local.iter_1329.input, 1, -1)
      : local.iter_1329.input)

    output = (local.curr_1330.code == "."
      ? "${local.iter_1329.output}${jsondecode(format("\"\\u%04x\"", local.iter_1329.tape[local.iter_1329.tape_ptr]))}"
      : local.iter_1329.output)
    
    tape = (
      local.curr_1330.code == "+"
        ? [for i, b in local.iter_1329.tape : (i == local.iter_1329.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1330.code == "-"
        ? [for i, b in local.iter_1329.tape : (i == local.iter_1329.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1330.code == ","
        ? [for i, b in local.iter_1329.tape : (i == local.iter_1329.tape_ptr ? local.ascii_lookup[local.curr_1330.input] : b)]
        : local.iter_1329.tape)

    tape_ptr = (
      local.curr_1330.code == "<"
        ? local.iter_1329.tape_ptr == 0 ? length(local.iter_1329.tape) - 1 : local.iter_1329.tape_ptr - 1 :
      local.curr_1330.code == ">"
        ? local.iter_1329.tape_ptr == length(local.iter_1329.tape) - 1 ? 0 : local.iter_1329.tape_ptr + 1
        : local.iter_1329.tape_ptr)

    code_ptr = 1 + (
      local.curr_1330.code == "["
        ? local.iter_1329.tape[local.iter_1329.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1329.code_ptr)] : local.iter_1329.code_ptr :
      local.curr_1330.code == "]"
        ? local.iter_1329.tape[local.iter_1329.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1329.code_ptr)] : local.iter_1329.code_ptr
        : local.iter_1329.code_ptr)

    steps_taken = 1 + local.iter_1329.steps_taken
  }
}

locals {
  end_of_code_1331 = try(local.iter_1330.code_ptr >= length(var.code), true)

  curr_1331 = local.end_of_code_1331 ? null : {
    code = substr(var.code, local.iter_1330.code_ptr, 1)
    input = substr(var.code, local.iter_1330.code_ptr, 1) == "," ? substr(local.iter_1330.input, 0, 1) : null
  }

  iter_1331 = local.end_of_code_1331 ? local.iter_1330 : {
    input = (local.curr_1331.code == ","
      ? substr(local.iter_1330.input, 1, -1)
      : local.iter_1330.input)

    output = (local.curr_1331.code == "."
      ? "${local.iter_1330.output}${jsondecode(format("\"\\u%04x\"", local.iter_1330.tape[local.iter_1330.tape_ptr]))}"
      : local.iter_1330.output)
    
    tape = (
      local.curr_1331.code == "+"
        ? [for i, b in local.iter_1330.tape : (i == local.iter_1330.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1331.code == "-"
        ? [for i, b in local.iter_1330.tape : (i == local.iter_1330.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1331.code == ","
        ? [for i, b in local.iter_1330.tape : (i == local.iter_1330.tape_ptr ? local.ascii_lookup[local.curr_1331.input] : b)]
        : local.iter_1330.tape)

    tape_ptr = (
      local.curr_1331.code == "<"
        ? local.iter_1330.tape_ptr == 0 ? length(local.iter_1330.tape) - 1 : local.iter_1330.tape_ptr - 1 :
      local.curr_1331.code == ">"
        ? local.iter_1330.tape_ptr == length(local.iter_1330.tape) - 1 ? 0 : local.iter_1330.tape_ptr + 1
        : local.iter_1330.tape_ptr)

    code_ptr = 1 + (
      local.curr_1331.code == "["
        ? local.iter_1330.tape[local.iter_1330.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1330.code_ptr)] : local.iter_1330.code_ptr :
      local.curr_1331.code == "]"
        ? local.iter_1330.tape[local.iter_1330.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1330.code_ptr)] : local.iter_1330.code_ptr
        : local.iter_1330.code_ptr)

    steps_taken = 1 + local.iter_1330.steps_taken
  }
}

locals {
  end_of_code_1332 = try(local.iter_1331.code_ptr >= length(var.code), true)

  curr_1332 = local.end_of_code_1332 ? null : {
    code = substr(var.code, local.iter_1331.code_ptr, 1)
    input = substr(var.code, local.iter_1331.code_ptr, 1) == "," ? substr(local.iter_1331.input, 0, 1) : null
  }

  iter_1332 = local.end_of_code_1332 ? local.iter_1331 : {
    input = (local.curr_1332.code == ","
      ? substr(local.iter_1331.input, 1, -1)
      : local.iter_1331.input)

    output = (local.curr_1332.code == "."
      ? "${local.iter_1331.output}${jsondecode(format("\"\\u%04x\"", local.iter_1331.tape[local.iter_1331.tape_ptr]))}"
      : local.iter_1331.output)
    
    tape = (
      local.curr_1332.code == "+"
        ? [for i, b in local.iter_1331.tape : (i == local.iter_1331.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1332.code == "-"
        ? [for i, b in local.iter_1331.tape : (i == local.iter_1331.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1332.code == ","
        ? [for i, b in local.iter_1331.tape : (i == local.iter_1331.tape_ptr ? local.ascii_lookup[local.curr_1332.input] : b)]
        : local.iter_1331.tape)

    tape_ptr = (
      local.curr_1332.code == "<"
        ? local.iter_1331.tape_ptr == 0 ? length(local.iter_1331.tape) - 1 : local.iter_1331.tape_ptr - 1 :
      local.curr_1332.code == ">"
        ? local.iter_1331.tape_ptr == length(local.iter_1331.tape) - 1 ? 0 : local.iter_1331.tape_ptr + 1
        : local.iter_1331.tape_ptr)

    code_ptr = 1 + (
      local.curr_1332.code == "["
        ? local.iter_1331.tape[local.iter_1331.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1331.code_ptr)] : local.iter_1331.code_ptr :
      local.curr_1332.code == "]"
        ? local.iter_1331.tape[local.iter_1331.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1331.code_ptr)] : local.iter_1331.code_ptr
        : local.iter_1331.code_ptr)

    steps_taken = 1 + local.iter_1331.steps_taken
  }
}

locals {
  end_of_code_1333 = try(local.iter_1332.code_ptr >= length(var.code), true)

  curr_1333 = local.end_of_code_1333 ? null : {
    code = substr(var.code, local.iter_1332.code_ptr, 1)
    input = substr(var.code, local.iter_1332.code_ptr, 1) == "," ? substr(local.iter_1332.input, 0, 1) : null
  }

  iter_1333 = local.end_of_code_1333 ? local.iter_1332 : {
    input = (local.curr_1333.code == ","
      ? substr(local.iter_1332.input, 1, -1)
      : local.iter_1332.input)

    output = (local.curr_1333.code == "."
      ? "${local.iter_1332.output}${jsondecode(format("\"\\u%04x\"", local.iter_1332.tape[local.iter_1332.tape_ptr]))}"
      : local.iter_1332.output)
    
    tape = (
      local.curr_1333.code == "+"
        ? [for i, b in local.iter_1332.tape : (i == local.iter_1332.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1333.code == "-"
        ? [for i, b in local.iter_1332.tape : (i == local.iter_1332.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1333.code == ","
        ? [for i, b in local.iter_1332.tape : (i == local.iter_1332.tape_ptr ? local.ascii_lookup[local.curr_1333.input] : b)]
        : local.iter_1332.tape)

    tape_ptr = (
      local.curr_1333.code == "<"
        ? local.iter_1332.tape_ptr == 0 ? length(local.iter_1332.tape) - 1 : local.iter_1332.tape_ptr - 1 :
      local.curr_1333.code == ">"
        ? local.iter_1332.tape_ptr == length(local.iter_1332.tape) - 1 ? 0 : local.iter_1332.tape_ptr + 1
        : local.iter_1332.tape_ptr)

    code_ptr = 1 + (
      local.curr_1333.code == "["
        ? local.iter_1332.tape[local.iter_1332.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1332.code_ptr)] : local.iter_1332.code_ptr :
      local.curr_1333.code == "]"
        ? local.iter_1332.tape[local.iter_1332.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1332.code_ptr)] : local.iter_1332.code_ptr
        : local.iter_1332.code_ptr)

    steps_taken = 1 + local.iter_1332.steps_taken
  }
}

locals {
  end_of_code_1334 = try(local.iter_1333.code_ptr >= length(var.code), true)

  curr_1334 = local.end_of_code_1334 ? null : {
    code = substr(var.code, local.iter_1333.code_ptr, 1)
    input = substr(var.code, local.iter_1333.code_ptr, 1) == "," ? substr(local.iter_1333.input, 0, 1) : null
  }

  iter_1334 = local.end_of_code_1334 ? local.iter_1333 : {
    input = (local.curr_1334.code == ","
      ? substr(local.iter_1333.input, 1, -1)
      : local.iter_1333.input)

    output = (local.curr_1334.code == "."
      ? "${local.iter_1333.output}${jsondecode(format("\"\\u%04x\"", local.iter_1333.tape[local.iter_1333.tape_ptr]))}"
      : local.iter_1333.output)
    
    tape = (
      local.curr_1334.code == "+"
        ? [for i, b in local.iter_1333.tape : (i == local.iter_1333.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1334.code == "-"
        ? [for i, b in local.iter_1333.tape : (i == local.iter_1333.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1334.code == ","
        ? [for i, b in local.iter_1333.tape : (i == local.iter_1333.tape_ptr ? local.ascii_lookup[local.curr_1334.input] : b)]
        : local.iter_1333.tape)

    tape_ptr = (
      local.curr_1334.code == "<"
        ? local.iter_1333.tape_ptr == 0 ? length(local.iter_1333.tape) - 1 : local.iter_1333.tape_ptr - 1 :
      local.curr_1334.code == ">"
        ? local.iter_1333.tape_ptr == length(local.iter_1333.tape) - 1 ? 0 : local.iter_1333.tape_ptr + 1
        : local.iter_1333.tape_ptr)

    code_ptr = 1 + (
      local.curr_1334.code == "["
        ? local.iter_1333.tape[local.iter_1333.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1333.code_ptr)] : local.iter_1333.code_ptr :
      local.curr_1334.code == "]"
        ? local.iter_1333.tape[local.iter_1333.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1333.code_ptr)] : local.iter_1333.code_ptr
        : local.iter_1333.code_ptr)

    steps_taken = 1 + local.iter_1333.steps_taken
  }
}

locals {
  end_of_code_1335 = try(local.iter_1334.code_ptr >= length(var.code), true)

  curr_1335 = local.end_of_code_1335 ? null : {
    code = substr(var.code, local.iter_1334.code_ptr, 1)
    input = substr(var.code, local.iter_1334.code_ptr, 1) == "," ? substr(local.iter_1334.input, 0, 1) : null
  }

  iter_1335 = local.end_of_code_1335 ? local.iter_1334 : {
    input = (local.curr_1335.code == ","
      ? substr(local.iter_1334.input, 1, -1)
      : local.iter_1334.input)

    output = (local.curr_1335.code == "."
      ? "${local.iter_1334.output}${jsondecode(format("\"\\u%04x\"", local.iter_1334.tape[local.iter_1334.tape_ptr]))}"
      : local.iter_1334.output)
    
    tape = (
      local.curr_1335.code == "+"
        ? [for i, b in local.iter_1334.tape : (i == local.iter_1334.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1335.code == "-"
        ? [for i, b in local.iter_1334.tape : (i == local.iter_1334.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1335.code == ","
        ? [for i, b in local.iter_1334.tape : (i == local.iter_1334.tape_ptr ? local.ascii_lookup[local.curr_1335.input] : b)]
        : local.iter_1334.tape)

    tape_ptr = (
      local.curr_1335.code == "<"
        ? local.iter_1334.tape_ptr == 0 ? length(local.iter_1334.tape) - 1 : local.iter_1334.tape_ptr - 1 :
      local.curr_1335.code == ">"
        ? local.iter_1334.tape_ptr == length(local.iter_1334.tape) - 1 ? 0 : local.iter_1334.tape_ptr + 1
        : local.iter_1334.tape_ptr)

    code_ptr = 1 + (
      local.curr_1335.code == "["
        ? local.iter_1334.tape[local.iter_1334.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1334.code_ptr)] : local.iter_1334.code_ptr :
      local.curr_1335.code == "]"
        ? local.iter_1334.tape[local.iter_1334.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1334.code_ptr)] : local.iter_1334.code_ptr
        : local.iter_1334.code_ptr)

    steps_taken = 1 + local.iter_1334.steps_taken
  }
}

locals {
  end_of_code_1336 = try(local.iter_1335.code_ptr >= length(var.code), true)

  curr_1336 = local.end_of_code_1336 ? null : {
    code = substr(var.code, local.iter_1335.code_ptr, 1)
    input = substr(var.code, local.iter_1335.code_ptr, 1) == "," ? substr(local.iter_1335.input, 0, 1) : null
  }

  iter_1336 = local.end_of_code_1336 ? local.iter_1335 : {
    input = (local.curr_1336.code == ","
      ? substr(local.iter_1335.input, 1, -1)
      : local.iter_1335.input)

    output = (local.curr_1336.code == "."
      ? "${local.iter_1335.output}${jsondecode(format("\"\\u%04x\"", local.iter_1335.tape[local.iter_1335.tape_ptr]))}"
      : local.iter_1335.output)
    
    tape = (
      local.curr_1336.code == "+"
        ? [for i, b in local.iter_1335.tape : (i == local.iter_1335.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1336.code == "-"
        ? [for i, b in local.iter_1335.tape : (i == local.iter_1335.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1336.code == ","
        ? [for i, b in local.iter_1335.tape : (i == local.iter_1335.tape_ptr ? local.ascii_lookup[local.curr_1336.input] : b)]
        : local.iter_1335.tape)

    tape_ptr = (
      local.curr_1336.code == "<"
        ? local.iter_1335.tape_ptr == 0 ? length(local.iter_1335.tape) - 1 : local.iter_1335.tape_ptr - 1 :
      local.curr_1336.code == ">"
        ? local.iter_1335.tape_ptr == length(local.iter_1335.tape) - 1 ? 0 : local.iter_1335.tape_ptr + 1
        : local.iter_1335.tape_ptr)

    code_ptr = 1 + (
      local.curr_1336.code == "["
        ? local.iter_1335.tape[local.iter_1335.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1335.code_ptr)] : local.iter_1335.code_ptr :
      local.curr_1336.code == "]"
        ? local.iter_1335.tape[local.iter_1335.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1335.code_ptr)] : local.iter_1335.code_ptr
        : local.iter_1335.code_ptr)

    steps_taken = 1 + local.iter_1335.steps_taken
  }
}

locals {
  end_of_code_1337 = try(local.iter_1336.code_ptr >= length(var.code), true)

  curr_1337 = local.end_of_code_1337 ? null : {
    code = substr(var.code, local.iter_1336.code_ptr, 1)
    input = substr(var.code, local.iter_1336.code_ptr, 1) == "," ? substr(local.iter_1336.input, 0, 1) : null
  }

  iter_1337 = local.end_of_code_1337 ? local.iter_1336 : {
    input = (local.curr_1337.code == ","
      ? substr(local.iter_1336.input, 1, -1)
      : local.iter_1336.input)

    output = (local.curr_1337.code == "."
      ? "${local.iter_1336.output}${jsondecode(format("\"\\u%04x\"", local.iter_1336.tape[local.iter_1336.tape_ptr]))}"
      : local.iter_1336.output)
    
    tape = (
      local.curr_1337.code == "+"
        ? [for i, b in local.iter_1336.tape : (i == local.iter_1336.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1337.code == "-"
        ? [for i, b in local.iter_1336.tape : (i == local.iter_1336.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1337.code == ","
        ? [for i, b in local.iter_1336.tape : (i == local.iter_1336.tape_ptr ? local.ascii_lookup[local.curr_1337.input] : b)]
        : local.iter_1336.tape)

    tape_ptr = (
      local.curr_1337.code == "<"
        ? local.iter_1336.tape_ptr == 0 ? length(local.iter_1336.tape) - 1 : local.iter_1336.tape_ptr - 1 :
      local.curr_1337.code == ">"
        ? local.iter_1336.tape_ptr == length(local.iter_1336.tape) - 1 ? 0 : local.iter_1336.tape_ptr + 1
        : local.iter_1336.tape_ptr)

    code_ptr = 1 + (
      local.curr_1337.code == "["
        ? local.iter_1336.tape[local.iter_1336.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1336.code_ptr)] : local.iter_1336.code_ptr :
      local.curr_1337.code == "]"
        ? local.iter_1336.tape[local.iter_1336.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1336.code_ptr)] : local.iter_1336.code_ptr
        : local.iter_1336.code_ptr)

    steps_taken = 1 + local.iter_1336.steps_taken
  }
}

locals {
  end_of_code_1338 = try(local.iter_1337.code_ptr >= length(var.code), true)

  curr_1338 = local.end_of_code_1338 ? null : {
    code = substr(var.code, local.iter_1337.code_ptr, 1)
    input = substr(var.code, local.iter_1337.code_ptr, 1) == "," ? substr(local.iter_1337.input, 0, 1) : null
  }

  iter_1338 = local.end_of_code_1338 ? local.iter_1337 : {
    input = (local.curr_1338.code == ","
      ? substr(local.iter_1337.input, 1, -1)
      : local.iter_1337.input)

    output = (local.curr_1338.code == "."
      ? "${local.iter_1337.output}${jsondecode(format("\"\\u%04x\"", local.iter_1337.tape[local.iter_1337.tape_ptr]))}"
      : local.iter_1337.output)
    
    tape = (
      local.curr_1338.code == "+"
        ? [for i, b in local.iter_1337.tape : (i == local.iter_1337.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1338.code == "-"
        ? [for i, b in local.iter_1337.tape : (i == local.iter_1337.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1338.code == ","
        ? [for i, b in local.iter_1337.tape : (i == local.iter_1337.tape_ptr ? local.ascii_lookup[local.curr_1338.input] : b)]
        : local.iter_1337.tape)

    tape_ptr = (
      local.curr_1338.code == "<"
        ? local.iter_1337.tape_ptr == 0 ? length(local.iter_1337.tape) - 1 : local.iter_1337.tape_ptr - 1 :
      local.curr_1338.code == ">"
        ? local.iter_1337.tape_ptr == length(local.iter_1337.tape) - 1 ? 0 : local.iter_1337.tape_ptr + 1
        : local.iter_1337.tape_ptr)

    code_ptr = 1 + (
      local.curr_1338.code == "["
        ? local.iter_1337.tape[local.iter_1337.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1337.code_ptr)] : local.iter_1337.code_ptr :
      local.curr_1338.code == "]"
        ? local.iter_1337.tape[local.iter_1337.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1337.code_ptr)] : local.iter_1337.code_ptr
        : local.iter_1337.code_ptr)

    steps_taken = 1 + local.iter_1337.steps_taken
  }
}

locals {
  end_of_code_1339 = try(local.iter_1338.code_ptr >= length(var.code), true)

  curr_1339 = local.end_of_code_1339 ? null : {
    code = substr(var.code, local.iter_1338.code_ptr, 1)
    input = substr(var.code, local.iter_1338.code_ptr, 1) == "," ? substr(local.iter_1338.input, 0, 1) : null
  }

  iter_1339 = local.end_of_code_1339 ? local.iter_1338 : {
    input = (local.curr_1339.code == ","
      ? substr(local.iter_1338.input, 1, -1)
      : local.iter_1338.input)

    output = (local.curr_1339.code == "."
      ? "${local.iter_1338.output}${jsondecode(format("\"\\u%04x\"", local.iter_1338.tape[local.iter_1338.tape_ptr]))}"
      : local.iter_1338.output)
    
    tape = (
      local.curr_1339.code == "+"
        ? [for i, b in local.iter_1338.tape : (i == local.iter_1338.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1339.code == "-"
        ? [for i, b in local.iter_1338.tape : (i == local.iter_1338.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1339.code == ","
        ? [for i, b in local.iter_1338.tape : (i == local.iter_1338.tape_ptr ? local.ascii_lookup[local.curr_1339.input] : b)]
        : local.iter_1338.tape)

    tape_ptr = (
      local.curr_1339.code == "<"
        ? local.iter_1338.tape_ptr == 0 ? length(local.iter_1338.tape) - 1 : local.iter_1338.tape_ptr - 1 :
      local.curr_1339.code == ">"
        ? local.iter_1338.tape_ptr == length(local.iter_1338.tape) - 1 ? 0 : local.iter_1338.tape_ptr + 1
        : local.iter_1338.tape_ptr)

    code_ptr = 1 + (
      local.curr_1339.code == "["
        ? local.iter_1338.tape[local.iter_1338.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1338.code_ptr)] : local.iter_1338.code_ptr :
      local.curr_1339.code == "]"
        ? local.iter_1338.tape[local.iter_1338.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1338.code_ptr)] : local.iter_1338.code_ptr
        : local.iter_1338.code_ptr)

    steps_taken = 1 + local.iter_1338.steps_taken
  }
}

locals {
  end_of_code_1340 = try(local.iter_1339.code_ptr >= length(var.code), true)

  curr_1340 = local.end_of_code_1340 ? null : {
    code = substr(var.code, local.iter_1339.code_ptr, 1)
    input = substr(var.code, local.iter_1339.code_ptr, 1) == "," ? substr(local.iter_1339.input, 0, 1) : null
  }

  iter_1340 = local.end_of_code_1340 ? local.iter_1339 : {
    input = (local.curr_1340.code == ","
      ? substr(local.iter_1339.input, 1, -1)
      : local.iter_1339.input)

    output = (local.curr_1340.code == "."
      ? "${local.iter_1339.output}${jsondecode(format("\"\\u%04x\"", local.iter_1339.tape[local.iter_1339.tape_ptr]))}"
      : local.iter_1339.output)
    
    tape = (
      local.curr_1340.code == "+"
        ? [for i, b in local.iter_1339.tape : (i == local.iter_1339.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1340.code == "-"
        ? [for i, b in local.iter_1339.tape : (i == local.iter_1339.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1340.code == ","
        ? [for i, b in local.iter_1339.tape : (i == local.iter_1339.tape_ptr ? local.ascii_lookup[local.curr_1340.input] : b)]
        : local.iter_1339.tape)

    tape_ptr = (
      local.curr_1340.code == "<"
        ? local.iter_1339.tape_ptr == 0 ? length(local.iter_1339.tape) - 1 : local.iter_1339.tape_ptr - 1 :
      local.curr_1340.code == ">"
        ? local.iter_1339.tape_ptr == length(local.iter_1339.tape) - 1 ? 0 : local.iter_1339.tape_ptr + 1
        : local.iter_1339.tape_ptr)

    code_ptr = 1 + (
      local.curr_1340.code == "["
        ? local.iter_1339.tape[local.iter_1339.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1339.code_ptr)] : local.iter_1339.code_ptr :
      local.curr_1340.code == "]"
        ? local.iter_1339.tape[local.iter_1339.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1339.code_ptr)] : local.iter_1339.code_ptr
        : local.iter_1339.code_ptr)

    steps_taken = 1 + local.iter_1339.steps_taken
  }
}

locals {
  end_of_code_1341 = try(local.iter_1340.code_ptr >= length(var.code), true)

  curr_1341 = local.end_of_code_1341 ? null : {
    code = substr(var.code, local.iter_1340.code_ptr, 1)
    input = substr(var.code, local.iter_1340.code_ptr, 1) == "," ? substr(local.iter_1340.input, 0, 1) : null
  }

  iter_1341 = local.end_of_code_1341 ? local.iter_1340 : {
    input = (local.curr_1341.code == ","
      ? substr(local.iter_1340.input, 1, -1)
      : local.iter_1340.input)

    output = (local.curr_1341.code == "."
      ? "${local.iter_1340.output}${jsondecode(format("\"\\u%04x\"", local.iter_1340.tape[local.iter_1340.tape_ptr]))}"
      : local.iter_1340.output)
    
    tape = (
      local.curr_1341.code == "+"
        ? [for i, b in local.iter_1340.tape : (i == local.iter_1340.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1341.code == "-"
        ? [for i, b in local.iter_1340.tape : (i == local.iter_1340.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1341.code == ","
        ? [for i, b in local.iter_1340.tape : (i == local.iter_1340.tape_ptr ? local.ascii_lookup[local.curr_1341.input] : b)]
        : local.iter_1340.tape)

    tape_ptr = (
      local.curr_1341.code == "<"
        ? local.iter_1340.tape_ptr == 0 ? length(local.iter_1340.tape) - 1 : local.iter_1340.tape_ptr - 1 :
      local.curr_1341.code == ">"
        ? local.iter_1340.tape_ptr == length(local.iter_1340.tape) - 1 ? 0 : local.iter_1340.tape_ptr + 1
        : local.iter_1340.tape_ptr)

    code_ptr = 1 + (
      local.curr_1341.code == "["
        ? local.iter_1340.tape[local.iter_1340.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1340.code_ptr)] : local.iter_1340.code_ptr :
      local.curr_1341.code == "]"
        ? local.iter_1340.tape[local.iter_1340.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1340.code_ptr)] : local.iter_1340.code_ptr
        : local.iter_1340.code_ptr)

    steps_taken = 1 + local.iter_1340.steps_taken
  }
}

locals {
  end_of_code_1342 = try(local.iter_1341.code_ptr >= length(var.code), true)

  curr_1342 = local.end_of_code_1342 ? null : {
    code = substr(var.code, local.iter_1341.code_ptr, 1)
    input = substr(var.code, local.iter_1341.code_ptr, 1) == "," ? substr(local.iter_1341.input, 0, 1) : null
  }

  iter_1342 = local.end_of_code_1342 ? local.iter_1341 : {
    input = (local.curr_1342.code == ","
      ? substr(local.iter_1341.input, 1, -1)
      : local.iter_1341.input)

    output = (local.curr_1342.code == "."
      ? "${local.iter_1341.output}${jsondecode(format("\"\\u%04x\"", local.iter_1341.tape[local.iter_1341.tape_ptr]))}"
      : local.iter_1341.output)
    
    tape = (
      local.curr_1342.code == "+"
        ? [for i, b in local.iter_1341.tape : (i == local.iter_1341.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1342.code == "-"
        ? [for i, b in local.iter_1341.tape : (i == local.iter_1341.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1342.code == ","
        ? [for i, b in local.iter_1341.tape : (i == local.iter_1341.tape_ptr ? local.ascii_lookup[local.curr_1342.input] : b)]
        : local.iter_1341.tape)

    tape_ptr = (
      local.curr_1342.code == "<"
        ? local.iter_1341.tape_ptr == 0 ? length(local.iter_1341.tape) - 1 : local.iter_1341.tape_ptr - 1 :
      local.curr_1342.code == ">"
        ? local.iter_1341.tape_ptr == length(local.iter_1341.tape) - 1 ? 0 : local.iter_1341.tape_ptr + 1
        : local.iter_1341.tape_ptr)

    code_ptr = 1 + (
      local.curr_1342.code == "["
        ? local.iter_1341.tape[local.iter_1341.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1341.code_ptr)] : local.iter_1341.code_ptr :
      local.curr_1342.code == "]"
        ? local.iter_1341.tape[local.iter_1341.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1341.code_ptr)] : local.iter_1341.code_ptr
        : local.iter_1341.code_ptr)

    steps_taken = 1 + local.iter_1341.steps_taken
  }
}

locals {
  end_of_code_1343 = try(local.iter_1342.code_ptr >= length(var.code), true)

  curr_1343 = local.end_of_code_1343 ? null : {
    code = substr(var.code, local.iter_1342.code_ptr, 1)
    input = substr(var.code, local.iter_1342.code_ptr, 1) == "," ? substr(local.iter_1342.input, 0, 1) : null
  }

  iter_1343 = local.end_of_code_1343 ? local.iter_1342 : {
    input = (local.curr_1343.code == ","
      ? substr(local.iter_1342.input, 1, -1)
      : local.iter_1342.input)

    output = (local.curr_1343.code == "."
      ? "${local.iter_1342.output}${jsondecode(format("\"\\u%04x\"", local.iter_1342.tape[local.iter_1342.tape_ptr]))}"
      : local.iter_1342.output)
    
    tape = (
      local.curr_1343.code == "+"
        ? [for i, b in local.iter_1342.tape : (i == local.iter_1342.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1343.code == "-"
        ? [for i, b in local.iter_1342.tape : (i == local.iter_1342.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1343.code == ","
        ? [for i, b in local.iter_1342.tape : (i == local.iter_1342.tape_ptr ? local.ascii_lookup[local.curr_1343.input] : b)]
        : local.iter_1342.tape)

    tape_ptr = (
      local.curr_1343.code == "<"
        ? local.iter_1342.tape_ptr == 0 ? length(local.iter_1342.tape) - 1 : local.iter_1342.tape_ptr - 1 :
      local.curr_1343.code == ">"
        ? local.iter_1342.tape_ptr == length(local.iter_1342.tape) - 1 ? 0 : local.iter_1342.tape_ptr + 1
        : local.iter_1342.tape_ptr)

    code_ptr = 1 + (
      local.curr_1343.code == "["
        ? local.iter_1342.tape[local.iter_1342.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1342.code_ptr)] : local.iter_1342.code_ptr :
      local.curr_1343.code == "]"
        ? local.iter_1342.tape[local.iter_1342.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1342.code_ptr)] : local.iter_1342.code_ptr
        : local.iter_1342.code_ptr)

    steps_taken = 1 + local.iter_1342.steps_taken
  }
}

locals {
  end_of_code_1344 = try(local.iter_1343.code_ptr >= length(var.code), true)

  curr_1344 = local.end_of_code_1344 ? null : {
    code = substr(var.code, local.iter_1343.code_ptr, 1)
    input = substr(var.code, local.iter_1343.code_ptr, 1) == "," ? substr(local.iter_1343.input, 0, 1) : null
  }

  iter_1344 = local.end_of_code_1344 ? local.iter_1343 : {
    input = (local.curr_1344.code == ","
      ? substr(local.iter_1343.input, 1, -1)
      : local.iter_1343.input)

    output = (local.curr_1344.code == "."
      ? "${local.iter_1343.output}${jsondecode(format("\"\\u%04x\"", local.iter_1343.tape[local.iter_1343.tape_ptr]))}"
      : local.iter_1343.output)
    
    tape = (
      local.curr_1344.code == "+"
        ? [for i, b in local.iter_1343.tape : (i == local.iter_1343.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1344.code == "-"
        ? [for i, b in local.iter_1343.tape : (i == local.iter_1343.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1344.code == ","
        ? [for i, b in local.iter_1343.tape : (i == local.iter_1343.tape_ptr ? local.ascii_lookup[local.curr_1344.input] : b)]
        : local.iter_1343.tape)

    tape_ptr = (
      local.curr_1344.code == "<"
        ? local.iter_1343.tape_ptr == 0 ? length(local.iter_1343.tape) - 1 : local.iter_1343.tape_ptr - 1 :
      local.curr_1344.code == ">"
        ? local.iter_1343.tape_ptr == length(local.iter_1343.tape) - 1 ? 0 : local.iter_1343.tape_ptr + 1
        : local.iter_1343.tape_ptr)

    code_ptr = 1 + (
      local.curr_1344.code == "["
        ? local.iter_1343.tape[local.iter_1343.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1343.code_ptr)] : local.iter_1343.code_ptr :
      local.curr_1344.code == "]"
        ? local.iter_1343.tape[local.iter_1343.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1343.code_ptr)] : local.iter_1343.code_ptr
        : local.iter_1343.code_ptr)

    steps_taken = 1 + local.iter_1343.steps_taken
  }
}

locals {
  end_of_code_1345 = try(local.iter_1344.code_ptr >= length(var.code), true)

  curr_1345 = local.end_of_code_1345 ? null : {
    code = substr(var.code, local.iter_1344.code_ptr, 1)
    input = substr(var.code, local.iter_1344.code_ptr, 1) == "," ? substr(local.iter_1344.input, 0, 1) : null
  }

  iter_1345 = local.end_of_code_1345 ? local.iter_1344 : {
    input = (local.curr_1345.code == ","
      ? substr(local.iter_1344.input, 1, -1)
      : local.iter_1344.input)

    output = (local.curr_1345.code == "."
      ? "${local.iter_1344.output}${jsondecode(format("\"\\u%04x\"", local.iter_1344.tape[local.iter_1344.tape_ptr]))}"
      : local.iter_1344.output)
    
    tape = (
      local.curr_1345.code == "+"
        ? [for i, b in local.iter_1344.tape : (i == local.iter_1344.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1345.code == "-"
        ? [for i, b in local.iter_1344.tape : (i == local.iter_1344.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1345.code == ","
        ? [for i, b in local.iter_1344.tape : (i == local.iter_1344.tape_ptr ? local.ascii_lookup[local.curr_1345.input] : b)]
        : local.iter_1344.tape)

    tape_ptr = (
      local.curr_1345.code == "<"
        ? local.iter_1344.tape_ptr == 0 ? length(local.iter_1344.tape) - 1 : local.iter_1344.tape_ptr - 1 :
      local.curr_1345.code == ">"
        ? local.iter_1344.tape_ptr == length(local.iter_1344.tape) - 1 ? 0 : local.iter_1344.tape_ptr + 1
        : local.iter_1344.tape_ptr)

    code_ptr = 1 + (
      local.curr_1345.code == "["
        ? local.iter_1344.tape[local.iter_1344.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1344.code_ptr)] : local.iter_1344.code_ptr :
      local.curr_1345.code == "]"
        ? local.iter_1344.tape[local.iter_1344.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1344.code_ptr)] : local.iter_1344.code_ptr
        : local.iter_1344.code_ptr)

    steps_taken = 1 + local.iter_1344.steps_taken
  }
}

locals {
  end_of_code_1346 = try(local.iter_1345.code_ptr >= length(var.code), true)

  curr_1346 = local.end_of_code_1346 ? null : {
    code = substr(var.code, local.iter_1345.code_ptr, 1)
    input = substr(var.code, local.iter_1345.code_ptr, 1) == "," ? substr(local.iter_1345.input, 0, 1) : null
  }

  iter_1346 = local.end_of_code_1346 ? local.iter_1345 : {
    input = (local.curr_1346.code == ","
      ? substr(local.iter_1345.input, 1, -1)
      : local.iter_1345.input)

    output = (local.curr_1346.code == "."
      ? "${local.iter_1345.output}${jsondecode(format("\"\\u%04x\"", local.iter_1345.tape[local.iter_1345.tape_ptr]))}"
      : local.iter_1345.output)
    
    tape = (
      local.curr_1346.code == "+"
        ? [for i, b in local.iter_1345.tape : (i == local.iter_1345.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1346.code == "-"
        ? [for i, b in local.iter_1345.tape : (i == local.iter_1345.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1346.code == ","
        ? [for i, b in local.iter_1345.tape : (i == local.iter_1345.tape_ptr ? local.ascii_lookup[local.curr_1346.input] : b)]
        : local.iter_1345.tape)

    tape_ptr = (
      local.curr_1346.code == "<"
        ? local.iter_1345.tape_ptr == 0 ? length(local.iter_1345.tape) - 1 : local.iter_1345.tape_ptr - 1 :
      local.curr_1346.code == ">"
        ? local.iter_1345.tape_ptr == length(local.iter_1345.tape) - 1 ? 0 : local.iter_1345.tape_ptr + 1
        : local.iter_1345.tape_ptr)

    code_ptr = 1 + (
      local.curr_1346.code == "["
        ? local.iter_1345.tape[local.iter_1345.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1345.code_ptr)] : local.iter_1345.code_ptr :
      local.curr_1346.code == "]"
        ? local.iter_1345.tape[local.iter_1345.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1345.code_ptr)] : local.iter_1345.code_ptr
        : local.iter_1345.code_ptr)

    steps_taken = 1 + local.iter_1345.steps_taken
  }
}

locals {
  end_of_code_1347 = try(local.iter_1346.code_ptr >= length(var.code), true)

  curr_1347 = local.end_of_code_1347 ? null : {
    code = substr(var.code, local.iter_1346.code_ptr, 1)
    input = substr(var.code, local.iter_1346.code_ptr, 1) == "," ? substr(local.iter_1346.input, 0, 1) : null
  }

  iter_1347 = local.end_of_code_1347 ? local.iter_1346 : {
    input = (local.curr_1347.code == ","
      ? substr(local.iter_1346.input, 1, -1)
      : local.iter_1346.input)

    output = (local.curr_1347.code == "."
      ? "${local.iter_1346.output}${jsondecode(format("\"\\u%04x\"", local.iter_1346.tape[local.iter_1346.tape_ptr]))}"
      : local.iter_1346.output)
    
    tape = (
      local.curr_1347.code == "+"
        ? [for i, b in local.iter_1346.tape : (i == local.iter_1346.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1347.code == "-"
        ? [for i, b in local.iter_1346.tape : (i == local.iter_1346.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1347.code == ","
        ? [for i, b in local.iter_1346.tape : (i == local.iter_1346.tape_ptr ? local.ascii_lookup[local.curr_1347.input] : b)]
        : local.iter_1346.tape)

    tape_ptr = (
      local.curr_1347.code == "<"
        ? local.iter_1346.tape_ptr == 0 ? length(local.iter_1346.tape) - 1 : local.iter_1346.tape_ptr - 1 :
      local.curr_1347.code == ">"
        ? local.iter_1346.tape_ptr == length(local.iter_1346.tape) - 1 ? 0 : local.iter_1346.tape_ptr + 1
        : local.iter_1346.tape_ptr)

    code_ptr = 1 + (
      local.curr_1347.code == "["
        ? local.iter_1346.tape[local.iter_1346.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1346.code_ptr)] : local.iter_1346.code_ptr :
      local.curr_1347.code == "]"
        ? local.iter_1346.tape[local.iter_1346.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1346.code_ptr)] : local.iter_1346.code_ptr
        : local.iter_1346.code_ptr)

    steps_taken = 1 + local.iter_1346.steps_taken
  }
}

locals {
  end_of_code_1348 = try(local.iter_1347.code_ptr >= length(var.code), true)

  curr_1348 = local.end_of_code_1348 ? null : {
    code = substr(var.code, local.iter_1347.code_ptr, 1)
    input = substr(var.code, local.iter_1347.code_ptr, 1) == "," ? substr(local.iter_1347.input, 0, 1) : null
  }

  iter_1348 = local.end_of_code_1348 ? local.iter_1347 : {
    input = (local.curr_1348.code == ","
      ? substr(local.iter_1347.input, 1, -1)
      : local.iter_1347.input)

    output = (local.curr_1348.code == "."
      ? "${local.iter_1347.output}${jsondecode(format("\"\\u%04x\"", local.iter_1347.tape[local.iter_1347.tape_ptr]))}"
      : local.iter_1347.output)
    
    tape = (
      local.curr_1348.code == "+"
        ? [for i, b in local.iter_1347.tape : (i == local.iter_1347.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1348.code == "-"
        ? [for i, b in local.iter_1347.tape : (i == local.iter_1347.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1348.code == ","
        ? [for i, b in local.iter_1347.tape : (i == local.iter_1347.tape_ptr ? local.ascii_lookup[local.curr_1348.input] : b)]
        : local.iter_1347.tape)

    tape_ptr = (
      local.curr_1348.code == "<"
        ? local.iter_1347.tape_ptr == 0 ? length(local.iter_1347.tape) - 1 : local.iter_1347.tape_ptr - 1 :
      local.curr_1348.code == ">"
        ? local.iter_1347.tape_ptr == length(local.iter_1347.tape) - 1 ? 0 : local.iter_1347.tape_ptr + 1
        : local.iter_1347.tape_ptr)

    code_ptr = 1 + (
      local.curr_1348.code == "["
        ? local.iter_1347.tape[local.iter_1347.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1347.code_ptr)] : local.iter_1347.code_ptr :
      local.curr_1348.code == "]"
        ? local.iter_1347.tape[local.iter_1347.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1347.code_ptr)] : local.iter_1347.code_ptr
        : local.iter_1347.code_ptr)

    steps_taken = 1 + local.iter_1347.steps_taken
  }
}

locals {
  end_of_code_1349 = try(local.iter_1348.code_ptr >= length(var.code), true)

  curr_1349 = local.end_of_code_1349 ? null : {
    code = substr(var.code, local.iter_1348.code_ptr, 1)
    input = substr(var.code, local.iter_1348.code_ptr, 1) == "," ? substr(local.iter_1348.input, 0, 1) : null
  }

  iter_1349 = local.end_of_code_1349 ? local.iter_1348 : {
    input = (local.curr_1349.code == ","
      ? substr(local.iter_1348.input, 1, -1)
      : local.iter_1348.input)

    output = (local.curr_1349.code == "."
      ? "${local.iter_1348.output}${jsondecode(format("\"\\u%04x\"", local.iter_1348.tape[local.iter_1348.tape_ptr]))}"
      : local.iter_1348.output)
    
    tape = (
      local.curr_1349.code == "+"
        ? [for i, b in local.iter_1348.tape : (i == local.iter_1348.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1349.code == "-"
        ? [for i, b in local.iter_1348.tape : (i == local.iter_1348.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1349.code == ","
        ? [for i, b in local.iter_1348.tape : (i == local.iter_1348.tape_ptr ? local.ascii_lookup[local.curr_1349.input] : b)]
        : local.iter_1348.tape)

    tape_ptr = (
      local.curr_1349.code == "<"
        ? local.iter_1348.tape_ptr == 0 ? length(local.iter_1348.tape) - 1 : local.iter_1348.tape_ptr - 1 :
      local.curr_1349.code == ">"
        ? local.iter_1348.tape_ptr == length(local.iter_1348.tape) - 1 ? 0 : local.iter_1348.tape_ptr + 1
        : local.iter_1348.tape_ptr)

    code_ptr = 1 + (
      local.curr_1349.code == "["
        ? local.iter_1348.tape[local.iter_1348.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1348.code_ptr)] : local.iter_1348.code_ptr :
      local.curr_1349.code == "]"
        ? local.iter_1348.tape[local.iter_1348.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1348.code_ptr)] : local.iter_1348.code_ptr
        : local.iter_1348.code_ptr)

    steps_taken = 1 + local.iter_1348.steps_taken
  }
}

locals {
  end_of_code_1350 = try(local.iter_1349.code_ptr >= length(var.code), true)

  curr_1350 = local.end_of_code_1350 ? null : {
    code = substr(var.code, local.iter_1349.code_ptr, 1)
    input = substr(var.code, local.iter_1349.code_ptr, 1) == "," ? substr(local.iter_1349.input, 0, 1) : null
  }

  iter_1350 = local.end_of_code_1350 ? local.iter_1349 : {
    input = (local.curr_1350.code == ","
      ? substr(local.iter_1349.input, 1, -1)
      : local.iter_1349.input)

    output = (local.curr_1350.code == "."
      ? "${local.iter_1349.output}${jsondecode(format("\"\\u%04x\"", local.iter_1349.tape[local.iter_1349.tape_ptr]))}"
      : local.iter_1349.output)
    
    tape = (
      local.curr_1350.code == "+"
        ? [for i, b in local.iter_1349.tape : (i == local.iter_1349.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1350.code == "-"
        ? [for i, b in local.iter_1349.tape : (i == local.iter_1349.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1350.code == ","
        ? [for i, b in local.iter_1349.tape : (i == local.iter_1349.tape_ptr ? local.ascii_lookup[local.curr_1350.input] : b)]
        : local.iter_1349.tape)

    tape_ptr = (
      local.curr_1350.code == "<"
        ? local.iter_1349.tape_ptr == 0 ? length(local.iter_1349.tape) - 1 : local.iter_1349.tape_ptr - 1 :
      local.curr_1350.code == ">"
        ? local.iter_1349.tape_ptr == length(local.iter_1349.tape) - 1 ? 0 : local.iter_1349.tape_ptr + 1
        : local.iter_1349.tape_ptr)

    code_ptr = 1 + (
      local.curr_1350.code == "["
        ? local.iter_1349.tape[local.iter_1349.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1349.code_ptr)] : local.iter_1349.code_ptr :
      local.curr_1350.code == "]"
        ? local.iter_1349.tape[local.iter_1349.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1349.code_ptr)] : local.iter_1349.code_ptr
        : local.iter_1349.code_ptr)

    steps_taken = 1 + local.iter_1349.steps_taken
  }
}

locals {
  end_of_code_1351 = try(local.iter_1350.code_ptr >= length(var.code), true)

  curr_1351 = local.end_of_code_1351 ? null : {
    code = substr(var.code, local.iter_1350.code_ptr, 1)
    input = substr(var.code, local.iter_1350.code_ptr, 1) == "," ? substr(local.iter_1350.input, 0, 1) : null
  }

  iter_1351 = local.end_of_code_1351 ? local.iter_1350 : {
    input = (local.curr_1351.code == ","
      ? substr(local.iter_1350.input, 1, -1)
      : local.iter_1350.input)

    output = (local.curr_1351.code == "."
      ? "${local.iter_1350.output}${jsondecode(format("\"\\u%04x\"", local.iter_1350.tape[local.iter_1350.tape_ptr]))}"
      : local.iter_1350.output)
    
    tape = (
      local.curr_1351.code == "+"
        ? [for i, b in local.iter_1350.tape : (i == local.iter_1350.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1351.code == "-"
        ? [for i, b in local.iter_1350.tape : (i == local.iter_1350.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1351.code == ","
        ? [for i, b in local.iter_1350.tape : (i == local.iter_1350.tape_ptr ? local.ascii_lookup[local.curr_1351.input] : b)]
        : local.iter_1350.tape)

    tape_ptr = (
      local.curr_1351.code == "<"
        ? local.iter_1350.tape_ptr == 0 ? length(local.iter_1350.tape) - 1 : local.iter_1350.tape_ptr - 1 :
      local.curr_1351.code == ">"
        ? local.iter_1350.tape_ptr == length(local.iter_1350.tape) - 1 ? 0 : local.iter_1350.tape_ptr + 1
        : local.iter_1350.tape_ptr)

    code_ptr = 1 + (
      local.curr_1351.code == "["
        ? local.iter_1350.tape[local.iter_1350.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1350.code_ptr)] : local.iter_1350.code_ptr :
      local.curr_1351.code == "]"
        ? local.iter_1350.tape[local.iter_1350.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1350.code_ptr)] : local.iter_1350.code_ptr
        : local.iter_1350.code_ptr)

    steps_taken = 1 + local.iter_1350.steps_taken
  }
}

locals {
  end_of_code_1352 = try(local.iter_1351.code_ptr >= length(var.code), true)

  curr_1352 = local.end_of_code_1352 ? null : {
    code = substr(var.code, local.iter_1351.code_ptr, 1)
    input = substr(var.code, local.iter_1351.code_ptr, 1) == "," ? substr(local.iter_1351.input, 0, 1) : null
  }

  iter_1352 = local.end_of_code_1352 ? local.iter_1351 : {
    input = (local.curr_1352.code == ","
      ? substr(local.iter_1351.input, 1, -1)
      : local.iter_1351.input)

    output = (local.curr_1352.code == "."
      ? "${local.iter_1351.output}${jsondecode(format("\"\\u%04x\"", local.iter_1351.tape[local.iter_1351.tape_ptr]))}"
      : local.iter_1351.output)
    
    tape = (
      local.curr_1352.code == "+"
        ? [for i, b in local.iter_1351.tape : (i == local.iter_1351.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1352.code == "-"
        ? [for i, b in local.iter_1351.tape : (i == local.iter_1351.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1352.code == ","
        ? [for i, b in local.iter_1351.tape : (i == local.iter_1351.tape_ptr ? local.ascii_lookup[local.curr_1352.input] : b)]
        : local.iter_1351.tape)

    tape_ptr = (
      local.curr_1352.code == "<"
        ? local.iter_1351.tape_ptr == 0 ? length(local.iter_1351.tape) - 1 : local.iter_1351.tape_ptr - 1 :
      local.curr_1352.code == ">"
        ? local.iter_1351.tape_ptr == length(local.iter_1351.tape) - 1 ? 0 : local.iter_1351.tape_ptr + 1
        : local.iter_1351.tape_ptr)

    code_ptr = 1 + (
      local.curr_1352.code == "["
        ? local.iter_1351.tape[local.iter_1351.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1351.code_ptr)] : local.iter_1351.code_ptr :
      local.curr_1352.code == "]"
        ? local.iter_1351.tape[local.iter_1351.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1351.code_ptr)] : local.iter_1351.code_ptr
        : local.iter_1351.code_ptr)

    steps_taken = 1 + local.iter_1351.steps_taken
  }
}

locals {
  end_of_code_1353 = try(local.iter_1352.code_ptr >= length(var.code), true)

  curr_1353 = local.end_of_code_1353 ? null : {
    code = substr(var.code, local.iter_1352.code_ptr, 1)
    input = substr(var.code, local.iter_1352.code_ptr, 1) == "," ? substr(local.iter_1352.input, 0, 1) : null
  }

  iter_1353 = local.end_of_code_1353 ? local.iter_1352 : {
    input = (local.curr_1353.code == ","
      ? substr(local.iter_1352.input, 1, -1)
      : local.iter_1352.input)

    output = (local.curr_1353.code == "."
      ? "${local.iter_1352.output}${jsondecode(format("\"\\u%04x\"", local.iter_1352.tape[local.iter_1352.tape_ptr]))}"
      : local.iter_1352.output)
    
    tape = (
      local.curr_1353.code == "+"
        ? [for i, b in local.iter_1352.tape : (i == local.iter_1352.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1353.code == "-"
        ? [for i, b in local.iter_1352.tape : (i == local.iter_1352.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1353.code == ","
        ? [for i, b in local.iter_1352.tape : (i == local.iter_1352.tape_ptr ? local.ascii_lookup[local.curr_1353.input] : b)]
        : local.iter_1352.tape)

    tape_ptr = (
      local.curr_1353.code == "<"
        ? local.iter_1352.tape_ptr == 0 ? length(local.iter_1352.tape) - 1 : local.iter_1352.tape_ptr - 1 :
      local.curr_1353.code == ">"
        ? local.iter_1352.tape_ptr == length(local.iter_1352.tape) - 1 ? 0 : local.iter_1352.tape_ptr + 1
        : local.iter_1352.tape_ptr)

    code_ptr = 1 + (
      local.curr_1353.code == "["
        ? local.iter_1352.tape[local.iter_1352.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1352.code_ptr)] : local.iter_1352.code_ptr :
      local.curr_1353.code == "]"
        ? local.iter_1352.tape[local.iter_1352.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1352.code_ptr)] : local.iter_1352.code_ptr
        : local.iter_1352.code_ptr)

    steps_taken = 1 + local.iter_1352.steps_taken
  }
}

locals {
  end_of_code_1354 = try(local.iter_1353.code_ptr >= length(var.code), true)

  curr_1354 = local.end_of_code_1354 ? null : {
    code = substr(var.code, local.iter_1353.code_ptr, 1)
    input = substr(var.code, local.iter_1353.code_ptr, 1) == "," ? substr(local.iter_1353.input, 0, 1) : null
  }

  iter_1354 = local.end_of_code_1354 ? local.iter_1353 : {
    input = (local.curr_1354.code == ","
      ? substr(local.iter_1353.input, 1, -1)
      : local.iter_1353.input)

    output = (local.curr_1354.code == "."
      ? "${local.iter_1353.output}${jsondecode(format("\"\\u%04x\"", local.iter_1353.tape[local.iter_1353.tape_ptr]))}"
      : local.iter_1353.output)
    
    tape = (
      local.curr_1354.code == "+"
        ? [for i, b in local.iter_1353.tape : (i == local.iter_1353.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1354.code == "-"
        ? [for i, b in local.iter_1353.tape : (i == local.iter_1353.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1354.code == ","
        ? [for i, b in local.iter_1353.tape : (i == local.iter_1353.tape_ptr ? local.ascii_lookup[local.curr_1354.input] : b)]
        : local.iter_1353.tape)

    tape_ptr = (
      local.curr_1354.code == "<"
        ? local.iter_1353.tape_ptr == 0 ? length(local.iter_1353.tape) - 1 : local.iter_1353.tape_ptr - 1 :
      local.curr_1354.code == ">"
        ? local.iter_1353.tape_ptr == length(local.iter_1353.tape) - 1 ? 0 : local.iter_1353.tape_ptr + 1
        : local.iter_1353.tape_ptr)

    code_ptr = 1 + (
      local.curr_1354.code == "["
        ? local.iter_1353.tape[local.iter_1353.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1353.code_ptr)] : local.iter_1353.code_ptr :
      local.curr_1354.code == "]"
        ? local.iter_1353.tape[local.iter_1353.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1353.code_ptr)] : local.iter_1353.code_ptr
        : local.iter_1353.code_ptr)

    steps_taken = 1 + local.iter_1353.steps_taken
  }
}

locals {
  end_of_code_1355 = try(local.iter_1354.code_ptr >= length(var.code), true)

  curr_1355 = local.end_of_code_1355 ? null : {
    code = substr(var.code, local.iter_1354.code_ptr, 1)
    input = substr(var.code, local.iter_1354.code_ptr, 1) == "," ? substr(local.iter_1354.input, 0, 1) : null
  }

  iter_1355 = local.end_of_code_1355 ? local.iter_1354 : {
    input = (local.curr_1355.code == ","
      ? substr(local.iter_1354.input, 1, -1)
      : local.iter_1354.input)

    output = (local.curr_1355.code == "."
      ? "${local.iter_1354.output}${jsondecode(format("\"\\u%04x\"", local.iter_1354.tape[local.iter_1354.tape_ptr]))}"
      : local.iter_1354.output)
    
    tape = (
      local.curr_1355.code == "+"
        ? [for i, b in local.iter_1354.tape : (i == local.iter_1354.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1355.code == "-"
        ? [for i, b in local.iter_1354.tape : (i == local.iter_1354.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1355.code == ","
        ? [for i, b in local.iter_1354.tape : (i == local.iter_1354.tape_ptr ? local.ascii_lookup[local.curr_1355.input] : b)]
        : local.iter_1354.tape)

    tape_ptr = (
      local.curr_1355.code == "<"
        ? local.iter_1354.tape_ptr == 0 ? length(local.iter_1354.tape) - 1 : local.iter_1354.tape_ptr - 1 :
      local.curr_1355.code == ">"
        ? local.iter_1354.tape_ptr == length(local.iter_1354.tape) - 1 ? 0 : local.iter_1354.tape_ptr + 1
        : local.iter_1354.tape_ptr)

    code_ptr = 1 + (
      local.curr_1355.code == "["
        ? local.iter_1354.tape[local.iter_1354.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1354.code_ptr)] : local.iter_1354.code_ptr :
      local.curr_1355.code == "]"
        ? local.iter_1354.tape[local.iter_1354.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1354.code_ptr)] : local.iter_1354.code_ptr
        : local.iter_1354.code_ptr)

    steps_taken = 1 + local.iter_1354.steps_taken
  }
}

locals {
  end_of_code_1356 = try(local.iter_1355.code_ptr >= length(var.code), true)

  curr_1356 = local.end_of_code_1356 ? null : {
    code = substr(var.code, local.iter_1355.code_ptr, 1)
    input = substr(var.code, local.iter_1355.code_ptr, 1) == "," ? substr(local.iter_1355.input, 0, 1) : null
  }

  iter_1356 = local.end_of_code_1356 ? local.iter_1355 : {
    input = (local.curr_1356.code == ","
      ? substr(local.iter_1355.input, 1, -1)
      : local.iter_1355.input)

    output = (local.curr_1356.code == "."
      ? "${local.iter_1355.output}${jsondecode(format("\"\\u%04x\"", local.iter_1355.tape[local.iter_1355.tape_ptr]))}"
      : local.iter_1355.output)
    
    tape = (
      local.curr_1356.code == "+"
        ? [for i, b in local.iter_1355.tape : (i == local.iter_1355.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1356.code == "-"
        ? [for i, b in local.iter_1355.tape : (i == local.iter_1355.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1356.code == ","
        ? [for i, b in local.iter_1355.tape : (i == local.iter_1355.tape_ptr ? local.ascii_lookup[local.curr_1356.input] : b)]
        : local.iter_1355.tape)

    tape_ptr = (
      local.curr_1356.code == "<"
        ? local.iter_1355.tape_ptr == 0 ? length(local.iter_1355.tape) - 1 : local.iter_1355.tape_ptr - 1 :
      local.curr_1356.code == ">"
        ? local.iter_1355.tape_ptr == length(local.iter_1355.tape) - 1 ? 0 : local.iter_1355.tape_ptr + 1
        : local.iter_1355.tape_ptr)

    code_ptr = 1 + (
      local.curr_1356.code == "["
        ? local.iter_1355.tape[local.iter_1355.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1355.code_ptr)] : local.iter_1355.code_ptr :
      local.curr_1356.code == "]"
        ? local.iter_1355.tape[local.iter_1355.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1355.code_ptr)] : local.iter_1355.code_ptr
        : local.iter_1355.code_ptr)

    steps_taken = 1 + local.iter_1355.steps_taken
  }
}

locals {
  end_of_code_1357 = try(local.iter_1356.code_ptr >= length(var.code), true)

  curr_1357 = local.end_of_code_1357 ? null : {
    code = substr(var.code, local.iter_1356.code_ptr, 1)
    input = substr(var.code, local.iter_1356.code_ptr, 1) == "," ? substr(local.iter_1356.input, 0, 1) : null
  }

  iter_1357 = local.end_of_code_1357 ? local.iter_1356 : {
    input = (local.curr_1357.code == ","
      ? substr(local.iter_1356.input, 1, -1)
      : local.iter_1356.input)

    output = (local.curr_1357.code == "."
      ? "${local.iter_1356.output}${jsondecode(format("\"\\u%04x\"", local.iter_1356.tape[local.iter_1356.tape_ptr]))}"
      : local.iter_1356.output)
    
    tape = (
      local.curr_1357.code == "+"
        ? [for i, b in local.iter_1356.tape : (i == local.iter_1356.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1357.code == "-"
        ? [for i, b in local.iter_1356.tape : (i == local.iter_1356.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1357.code == ","
        ? [for i, b in local.iter_1356.tape : (i == local.iter_1356.tape_ptr ? local.ascii_lookup[local.curr_1357.input] : b)]
        : local.iter_1356.tape)

    tape_ptr = (
      local.curr_1357.code == "<"
        ? local.iter_1356.tape_ptr == 0 ? length(local.iter_1356.tape) - 1 : local.iter_1356.tape_ptr - 1 :
      local.curr_1357.code == ">"
        ? local.iter_1356.tape_ptr == length(local.iter_1356.tape) - 1 ? 0 : local.iter_1356.tape_ptr + 1
        : local.iter_1356.tape_ptr)

    code_ptr = 1 + (
      local.curr_1357.code == "["
        ? local.iter_1356.tape[local.iter_1356.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1356.code_ptr)] : local.iter_1356.code_ptr :
      local.curr_1357.code == "]"
        ? local.iter_1356.tape[local.iter_1356.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1356.code_ptr)] : local.iter_1356.code_ptr
        : local.iter_1356.code_ptr)

    steps_taken = 1 + local.iter_1356.steps_taken
  }
}

locals {
  end_of_code_1358 = try(local.iter_1357.code_ptr >= length(var.code), true)

  curr_1358 = local.end_of_code_1358 ? null : {
    code = substr(var.code, local.iter_1357.code_ptr, 1)
    input = substr(var.code, local.iter_1357.code_ptr, 1) == "," ? substr(local.iter_1357.input, 0, 1) : null
  }

  iter_1358 = local.end_of_code_1358 ? local.iter_1357 : {
    input = (local.curr_1358.code == ","
      ? substr(local.iter_1357.input, 1, -1)
      : local.iter_1357.input)

    output = (local.curr_1358.code == "."
      ? "${local.iter_1357.output}${jsondecode(format("\"\\u%04x\"", local.iter_1357.tape[local.iter_1357.tape_ptr]))}"
      : local.iter_1357.output)
    
    tape = (
      local.curr_1358.code == "+"
        ? [for i, b in local.iter_1357.tape : (i == local.iter_1357.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1358.code == "-"
        ? [for i, b in local.iter_1357.tape : (i == local.iter_1357.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1358.code == ","
        ? [for i, b in local.iter_1357.tape : (i == local.iter_1357.tape_ptr ? local.ascii_lookup[local.curr_1358.input] : b)]
        : local.iter_1357.tape)

    tape_ptr = (
      local.curr_1358.code == "<"
        ? local.iter_1357.tape_ptr == 0 ? length(local.iter_1357.tape) - 1 : local.iter_1357.tape_ptr - 1 :
      local.curr_1358.code == ">"
        ? local.iter_1357.tape_ptr == length(local.iter_1357.tape) - 1 ? 0 : local.iter_1357.tape_ptr + 1
        : local.iter_1357.tape_ptr)

    code_ptr = 1 + (
      local.curr_1358.code == "["
        ? local.iter_1357.tape[local.iter_1357.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1357.code_ptr)] : local.iter_1357.code_ptr :
      local.curr_1358.code == "]"
        ? local.iter_1357.tape[local.iter_1357.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1357.code_ptr)] : local.iter_1357.code_ptr
        : local.iter_1357.code_ptr)

    steps_taken = 1 + local.iter_1357.steps_taken
  }
}

locals {
  end_of_code_1359 = try(local.iter_1358.code_ptr >= length(var.code), true)

  curr_1359 = local.end_of_code_1359 ? null : {
    code = substr(var.code, local.iter_1358.code_ptr, 1)
    input = substr(var.code, local.iter_1358.code_ptr, 1) == "," ? substr(local.iter_1358.input, 0, 1) : null
  }

  iter_1359 = local.end_of_code_1359 ? local.iter_1358 : {
    input = (local.curr_1359.code == ","
      ? substr(local.iter_1358.input, 1, -1)
      : local.iter_1358.input)

    output = (local.curr_1359.code == "."
      ? "${local.iter_1358.output}${jsondecode(format("\"\\u%04x\"", local.iter_1358.tape[local.iter_1358.tape_ptr]))}"
      : local.iter_1358.output)
    
    tape = (
      local.curr_1359.code == "+"
        ? [for i, b in local.iter_1358.tape : (i == local.iter_1358.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1359.code == "-"
        ? [for i, b in local.iter_1358.tape : (i == local.iter_1358.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1359.code == ","
        ? [for i, b in local.iter_1358.tape : (i == local.iter_1358.tape_ptr ? local.ascii_lookup[local.curr_1359.input] : b)]
        : local.iter_1358.tape)

    tape_ptr = (
      local.curr_1359.code == "<"
        ? local.iter_1358.tape_ptr == 0 ? length(local.iter_1358.tape) - 1 : local.iter_1358.tape_ptr - 1 :
      local.curr_1359.code == ">"
        ? local.iter_1358.tape_ptr == length(local.iter_1358.tape) - 1 ? 0 : local.iter_1358.tape_ptr + 1
        : local.iter_1358.tape_ptr)

    code_ptr = 1 + (
      local.curr_1359.code == "["
        ? local.iter_1358.tape[local.iter_1358.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1358.code_ptr)] : local.iter_1358.code_ptr :
      local.curr_1359.code == "]"
        ? local.iter_1358.tape[local.iter_1358.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1358.code_ptr)] : local.iter_1358.code_ptr
        : local.iter_1358.code_ptr)

    steps_taken = 1 + local.iter_1358.steps_taken
  }
}

locals {
  end_of_code_1360 = try(local.iter_1359.code_ptr >= length(var.code), true)

  curr_1360 = local.end_of_code_1360 ? null : {
    code = substr(var.code, local.iter_1359.code_ptr, 1)
    input = substr(var.code, local.iter_1359.code_ptr, 1) == "," ? substr(local.iter_1359.input, 0, 1) : null
  }

  iter_1360 = local.end_of_code_1360 ? local.iter_1359 : {
    input = (local.curr_1360.code == ","
      ? substr(local.iter_1359.input, 1, -1)
      : local.iter_1359.input)

    output = (local.curr_1360.code == "."
      ? "${local.iter_1359.output}${jsondecode(format("\"\\u%04x\"", local.iter_1359.tape[local.iter_1359.tape_ptr]))}"
      : local.iter_1359.output)
    
    tape = (
      local.curr_1360.code == "+"
        ? [for i, b in local.iter_1359.tape : (i == local.iter_1359.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1360.code == "-"
        ? [for i, b in local.iter_1359.tape : (i == local.iter_1359.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1360.code == ","
        ? [for i, b in local.iter_1359.tape : (i == local.iter_1359.tape_ptr ? local.ascii_lookup[local.curr_1360.input] : b)]
        : local.iter_1359.tape)

    tape_ptr = (
      local.curr_1360.code == "<"
        ? local.iter_1359.tape_ptr == 0 ? length(local.iter_1359.tape) - 1 : local.iter_1359.tape_ptr - 1 :
      local.curr_1360.code == ">"
        ? local.iter_1359.tape_ptr == length(local.iter_1359.tape) - 1 ? 0 : local.iter_1359.tape_ptr + 1
        : local.iter_1359.tape_ptr)

    code_ptr = 1 + (
      local.curr_1360.code == "["
        ? local.iter_1359.tape[local.iter_1359.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1359.code_ptr)] : local.iter_1359.code_ptr :
      local.curr_1360.code == "]"
        ? local.iter_1359.tape[local.iter_1359.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1359.code_ptr)] : local.iter_1359.code_ptr
        : local.iter_1359.code_ptr)

    steps_taken = 1 + local.iter_1359.steps_taken
  }
}

locals {
  end_of_code_1361 = try(local.iter_1360.code_ptr >= length(var.code), true)

  curr_1361 = local.end_of_code_1361 ? null : {
    code = substr(var.code, local.iter_1360.code_ptr, 1)
    input = substr(var.code, local.iter_1360.code_ptr, 1) == "," ? substr(local.iter_1360.input, 0, 1) : null
  }

  iter_1361 = local.end_of_code_1361 ? local.iter_1360 : {
    input = (local.curr_1361.code == ","
      ? substr(local.iter_1360.input, 1, -1)
      : local.iter_1360.input)

    output = (local.curr_1361.code == "."
      ? "${local.iter_1360.output}${jsondecode(format("\"\\u%04x\"", local.iter_1360.tape[local.iter_1360.tape_ptr]))}"
      : local.iter_1360.output)
    
    tape = (
      local.curr_1361.code == "+"
        ? [for i, b in local.iter_1360.tape : (i == local.iter_1360.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1361.code == "-"
        ? [for i, b in local.iter_1360.tape : (i == local.iter_1360.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1361.code == ","
        ? [for i, b in local.iter_1360.tape : (i == local.iter_1360.tape_ptr ? local.ascii_lookup[local.curr_1361.input] : b)]
        : local.iter_1360.tape)

    tape_ptr = (
      local.curr_1361.code == "<"
        ? local.iter_1360.tape_ptr == 0 ? length(local.iter_1360.tape) - 1 : local.iter_1360.tape_ptr - 1 :
      local.curr_1361.code == ">"
        ? local.iter_1360.tape_ptr == length(local.iter_1360.tape) - 1 ? 0 : local.iter_1360.tape_ptr + 1
        : local.iter_1360.tape_ptr)

    code_ptr = 1 + (
      local.curr_1361.code == "["
        ? local.iter_1360.tape[local.iter_1360.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1360.code_ptr)] : local.iter_1360.code_ptr :
      local.curr_1361.code == "]"
        ? local.iter_1360.tape[local.iter_1360.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1360.code_ptr)] : local.iter_1360.code_ptr
        : local.iter_1360.code_ptr)

    steps_taken = 1 + local.iter_1360.steps_taken
  }
}

locals {
  end_of_code_1362 = try(local.iter_1361.code_ptr >= length(var.code), true)

  curr_1362 = local.end_of_code_1362 ? null : {
    code = substr(var.code, local.iter_1361.code_ptr, 1)
    input = substr(var.code, local.iter_1361.code_ptr, 1) == "," ? substr(local.iter_1361.input, 0, 1) : null
  }

  iter_1362 = local.end_of_code_1362 ? local.iter_1361 : {
    input = (local.curr_1362.code == ","
      ? substr(local.iter_1361.input, 1, -1)
      : local.iter_1361.input)

    output = (local.curr_1362.code == "."
      ? "${local.iter_1361.output}${jsondecode(format("\"\\u%04x\"", local.iter_1361.tape[local.iter_1361.tape_ptr]))}"
      : local.iter_1361.output)
    
    tape = (
      local.curr_1362.code == "+"
        ? [for i, b in local.iter_1361.tape : (i == local.iter_1361.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1362.code == "-"
        ? [for i, b in local.iter_1361.tape : (i == local.iter_1361.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1362.code == ","
        ? [for i, b in local.iter_1361.tape : (i == local.iter_1361.tape_ptr ? local.ascii_lookup[local.curr_1362.input] : b)]
        : local.iter_1361.tape)

    tape_ptr = (
      local.curr_1362.code == "<"
        ? local.iter_1361.tape_ptr == 0 ? length(local.iter_1361.tape) - 1 : local.iter_1361.tape_ptr - 1 :
      local.curr_1362.code == ">"
        ? local.iter_1361.tape_ptr == length(local.iter_1361.tape) - 1 ? 0 : local.iter_1361.tape_ptr + 1
        : local.iter_1361.tape_ptr)

    code_ptr = 1 + (
      local.curr_1362.code == "["
        ? local.iter_1361.tape[local.iter_1361.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1361.code_ptr)] : local.iter_1361.code_ptr :
      local.curr_1362.code == "]"
        ? local.iter_1361.tape[local.iter_1361.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1361.code_ptr)] : local.iter_1361.code_ptr
        : local.iter_1361.code_ptr)

    steps_taken = 1 + local.iter_1361.steps_taken
  }
}

locals {
  end_of_code_1363 = try(local.iter_1362.code_ptr >= length(var.code), true)

  curr_1363 = local.end_of_code_1363 ? null : {
    code = substr(var.code, local.iter_1362.code_ptr, 1)
    input = substr(var.code, local.iter_1362.code_ptr, 1) == "," ? substr(local.iter_1362.input, 0, 1) : null
  }

  iter_1363 = local.end_of_code_1363 ? local.iter_1362 : {
    input = (local.curr_1363.code == ","
      ? substr(local.iter_1362.input, 1, -1)
      : local.iter_1362.input)

    output = (local.curr_1363.code == "."
      ? "${local.iter_1362.output}${jsondecode(format("\"\\u%04x\"", local.iter_1362.tape[local.iter_1362.tape_ptr]))}"
      : local.iter_1362.output)
    
    tape = (
      local.curr_1363.code == "+"
        ? [for i, b in local.iter_1362.tape : (i == local.iter_1362.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1363.code == "-"
        ? [for i, b in local.iter_1362.tape : (i == local.iter_1362.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1363.code == ","
        ? [for i, b in local.iter_1362.tape : (i == local.iter_1362.tape_ptr ? local.ascii_lookup[local.curr_1363.input] : b)]
        : local.iter_1362.tape)

    tape_ptr = (
      local.curr_1363.code == "<"
        ? local.iter_1362.tape_ptr == 0 ? length(local.iter_1362.tape) - 1 : local.iter_1362.tape_ptr - 1 :
      local.curr_1363.code == ">"
        ? local.iter_1362.tape_ptr == length(local.iter_1362.tape) - 1 ? 0 : local.iter_1362.tape_ptr + 1
        : local.iter_1362.tape_ptr)

    code_ptr = 1 + (
      local.curr_1363.code == "["
        ? local.iter_1362.tape[local.iter_1362.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1362.code_ptr)] : local.iter_1362.code_ptr :
      local.curr_1363.code == "]"
        ? local.iter_1362.tape[local.iter_1362.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1362.code_ptr)] : local.iter_1362.code_ptr
        : local.iter_1362.code_ptr)

    steps_taken = 1 + local.iter_1362.steps_taken
  }
}

locals {
  end_of_code_1364 = try(local.iter_1363.code_ptr >= length(var.code), true)

  curr_1364 = local.end_of_code_1364 ? null : {
    code = substr(var.code, local.iter_1363.code_ptr, 1)
    input = substr(var.code, local.iter_1363.code_ptr, 1) == "," ? substr(local.iter_1363.input, 0, 1) : null
  }

  iter_1364 = local.end_of_code_1364 ? local.iter_1363 : {
    input = (local.curr_1364.code == ","
      ? substr(local.iter_1363.input, 1, -1)
      : local.iter_1363.input)

    output = (local.curr_1364.code == "."
      ? "${local.iter_1363.output}${jsondecode(format("\"\\u%04x\"", local.iter_1363.tape[local.iter_1363.tape_ptr]))}"
      : local.iter_1363.output)
    
    tape = (
      local.curr_1364.code == "+"
        ? [for i, b in local.iter_1363.tape : (i == local.iter_1363.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1364.code == "-"
        ? [for i, b in local.iter_1363.tape : (i == local.iter_1363.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1364.code == ","
        ? [for i, b in local.iter_1363.tape : (i == local.iter_1363.tape_ptr ? local.ascii_lookup[local.curr_1364.input] : b)]
        : local.iter_1363.tape)

    tape_ptr = (
      local.curr_1364.code == "<"
        ? local.iter_1363.tape_ptr == 0 ? length(local.iter_1363.tape) - 1 : local.iter_1363.tape_ptr - 1 :
      local.curr_1364.code == ">"
        ? local.iter_1363.tape_ptr == length(local.iter_1363.tape) - 1 ? 0 : local.iter_1363.tape_ptr + 1
        : local.iter_1363.tape_ptr)

    code_ptr = 1 + (
      local.curr_1364.code == "["
        ? local.iter_1363.tape[local.iter_1363.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1363.code_ptr)] : local.iter_1363.code_ptr :
      local.curr_1364.code == "]"
        ? local.iter_1363.tape[local.iter_1363.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1363.code_ptr)] : local.iter_1363.code_ptr
        : local.iter_1363.code_ptr)

    steps_taken = 1 + local.iter_1363.steps_taken
  }
}

locals {
  end_of_code_1365 = try(local.iter_1364.code_ptr >= length(var.code), true)

  curr_1365 = local.end_of_code_1365 ? null : {
    code = substr(var.code, local.iter_1364.code_ptr, 1)
    input = substr(var.code, local.iter_1364.code_ptr, 1) == "," ? substr(local.iter_1364.input, 0, 1) : null
  }

  iter_1365 = local.end_of_code_1365 ? local.iter_1364 : {
    input = (local.curr_1365.code == ","
      ? substr(local.iter_1364.input, 1, -1)
      : local.iter_1364.input)

    output = (local.curr_1365.code == "."
      ? "${local.iter_1364.output}${jsondecode(format("\"\\u%04x\"", local.iter_1364.tape[local.iter_1364.tape_ptr]))}"
      : local.iter_1364.output)
    
    tape = (
      local.curr_1365.code == "+"
        ? [for i, b in local.iter_1364.tape : (i == local.iter_1364.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1365.code == "-"
        ? [for i, b in local.iter_1364.tape : (i == local.iter_1364.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1365.code == ","
        ? [for i, b in local.iter_1364.tape : (i == local.iter_1364.tape_ptr ? local.ascii_lookup[local.curr_1365.input] : b)]
        : local.iter_1364.tape)

    tape_ptr = (
      local.curr_1365.code == "<"
        ? local.iter_1364.tape_ptr == 0 ? length(local.iter_1364.tape) - 1 : local.iter_1364.tape_ptr - 1 :
      local.curr_1365.code == ">"
        ? local.iter_1364.tape_ptr == length(local.iter_1364.tape) - 1 ? 0 : local.iter_1364.tape_ptr + 1
        : local.iter_1364.tape_ptr)

    code_ptr = 1 + (
      local.curr_1365.code == "["
        ? local.iter_1364.tape[local.iter_1364.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1364.code_ptr)] : local.iter_1364.code_ptr :
      local.curr_1365.code == "]"
        ? local.iter_1364.tape[local.iter_1364.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1364.code_ptr)] : local.iter_1364.code_ptr
        : local.iter_1364.code_ptr)

    steps_taken = 1 + local.iter_1364.steps_taken
  }
}

locals {
  end_of_code_1366 = try(local.iter_1365.code_ptr >= length(var.code), true)

  curr_1366 = local.end_of_code_1366 ? null : {
    code = substr(var.code, local.iter_1365.code_ptr, 1)
    input = substr(var.code, local.iter_1365.code_ptr, 1) == "," ? substr(local.iter_1365.input, 0, 1) : null
  }

  iter_1366 = local.end_of_code_1366 ? local.iter_1365 : {
    input = (local.curr_1366.code == ","
      ? substr(local.iter_1365.input, 1, -1)
      : local.iter_1365.input)

    output = (local.curr_1366.code == "."
      ? "${local.iter_1365.output}${jsondecode(format("\"\\u%04x\"", local.iter_1365.tape[local.iter_1365.tape_ptr]))}"
      : local.iter_1365.output)
    
    tape = (
      local.curr_1366.code == "+"
        ? [for i, b in local.iter_1365.tape : (i == local.iter_1365.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1366.code == "-"
        ? [for i, b in local.iter_1365.tape : (i == local.iter_1365.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1366.code == ","
        ? [for i, b in local.iter_1365.tape : (i == local.iter_1365.tape_ptr ? local.ascii_lookup[local.curr_1366.input] : b)]
        : local.iter_1365.tape)

    tape_ptr = (
      local.curr_1366.code == "<"
        ? local.iter_1365.tape_ptr == 0 ? length(local.iter_1365.tape) - 1 : local.iter_1365.tape_ptr - 1 :
      local.curr_1366.code == ">"
        ? local.iter_1365.tape_ptr == length(local.iter_1365.tape) - 1 ? 0 : local.iter_1365.tape_ptr + 1
        : local.iter_1365.tape_ptr)

    code_ptr = 1 + (
      local.curr_1366.code == "["
        ? local.iter_1365.tape[local.iter_1365.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1365.code_ptr)] : local.iter_1365.code_ptr :
      local.curr_1366.code == "]"
        ? local.iter_1365.tape[local.iter_1365.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1365.code_ptr)] : local.iter_1365.code_ptr
        : local.iter_1365.code_ptr)

    steps_taken = 1 + local.iter_1365.steps_taken
  }
}

locals {
  end_of_code_1367 = try(local.iter_1366.code_ptr >= length(var.code), true)

  curr_1367 = local.end_of_code_1367 ? null : {
    code = substr(var.code, local.iter_1366.code_ptr, 1)
    input = substr(var.code, local.iter_1366.code_ptr, 1) == "," ? substr(local.iter_1366.input, 0, 1) : null
  }

  iter_1367 = local.end_of_code_1367 ? local.iter_1366 : {
    input = (local.curr_1367.code == ","
      ? substr(local.iter_1366.input, 1, -1)
      : local.iter_1366.input)

    output = (local.curr_1367.code == "."
      ? "${local.iter_1366.output}${jsondecode(format("\"\\u%04x\"", local.iter_1366.tape[local.iter_1366.tape_ptr]))}"
      : local.iter_1366.output)
    
    tape = (
      local.curr_1367.code == "+"
        ? [for i, b in local.iter_1366.tape : (i == local.iter_1366.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1367.code == "-"
        ? [for i, b in local.iter_1366.tape : (i == local.iter_1366.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1367.code == ","
        ? [for i, b in local.iter_1366.tape : (i == local.iter_1366.tape_ptr ? local.ascii_lookup[local.curr_1367.input] : b)]
        : local.iter_1366.tape)

    tape_ptr = (
      local.curr_1367.code == "<"
        ? local.iter_1366.tape_ptr == 0 ? length(local.iter_1366.tape) - 1 : local.iter_1366.tape_ptr - 1 :
      local.curr_1367.code == ">"
        ? local.iter_1366.tape_ptr == length(local.iter_1366.tape) - 1 ? 0 : local.iter_1366.tape_ptr + 1
        : local.iter_1366.tape_ptr)

    code_ptr = 1 + (
      local.curr_1367.code == "["
        ? local.iter_1366.tape[local.iter_1366.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1366.code_ptr)] : local.iter_1366.code_ptr :
      local.curr_1367.code == "]"
        ? local.iter_1366.tape[local.iter_1366.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1366.code_ptr)] : local.iter_1366.code_ptr
        : local.iter_1366.code_ptr)

    steps_taken = 1 + local.iter_1366.steps_taken
  }
}

locals {
  end_of_code_1368 = try(local.iter_1367.code_ptr >= length(var.code), true)

  curr_1368 = local.end_of_code_1368 ? null : {
    code = substr(var.code, local.iter_1367.code_ptr, 1)
    input = substr(var.code, local.iter_1367.code_ptr, 1) == "," ? substr(local.iter_1367.input, 0, 1) : null
  }

  iter_1368 = local.end_of_code_1368 ? local.iter_1367 : {
    input = (local.curr_1368.code == ","
      ? substr(local.iter_1367.input, 1, -1)
      : local.iter_1367.input)

    output = (local.curr_1368.code == "."
      ? "${local.iter_1367.output}${jsondecode(format("\"\\u%04x\"", local.iter_1367.tape[local.iter_1367.tape_ptr]))}"
      : local.iter_1367.output)
    
    tape = (
      local.curr_1368.code == "+"
        ? [for i, b in local.iter_1367.tape : (i == local.iter_1367.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1368.code == "-"
        ? [for i, b in local.iter_1367.tape : (i == local.iter_1367.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1368.code == ","
        ? [for i, b in local.iter_1367.tape : (i == local.iter_1367.tape_ptr ? local.ascii_lookup[local.curr_1368.input] : b)]
        : local.iter_1367.tape)

    tape_ptr = (
      local.curr_1368.code == "<"
        ? local.iter_1367.tape_ptr == 0 ? length(local.iter_1367.tape) - 1 : local.iter_1367.tape_ptr - 1 :
      local.curr_1368.code == ">"
        ? local.iter_1367.tape_ptr == length(local.iter_1367.tape) - 1 ? 0 : local.iter_1367.tape_ptr + 1
        : local.iter_1367.tape_ptr)

    code_ptr = 1 + (
      local.curr_1368.code == "["
        ? local.iter_1367.tape[local.iter_1367.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1367.code_ptr)] : local.iter_1367.code_ptr :
      local.curr_1368.code == "]"
        ? local.iter_1367.tape[local.iter_1367.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1367.code_ptr)] : local.iter_1367.code_ptr
        : local.iter_1367.code_ptr)

    steps_taken = 1 + local.iter_1367.steps_taken
  }
}

locals {
  end_of_code_1369 = try(local.iter_1368.code_ptr >= length(var.code), true)

  curr_1369 = local.end_of_code_1369 ? null : {
    code = substr(var.code, local.iter_1368.code_ptr, 1)
    input = substr(var.code, local.iter_1368.code_ptr, 1) == "," ? substr(local.iter_1368.input, 0, 1) : null
  }

  iter_1369 = local.end_of_code_1369 ? local.iter_1368 : {
    input = (local.curr_1369.code == ","
      ? substr(local.iter_1368.input, 1, -1)
      : local.iter_1368.input)

    output = (local.curr_1369.code == "."
      ? "${local.iter_1368.output}${jsondecode(format("\"\\u%04x\"", local.iter_1368.tape[local.iter_1368.tape_ptr]))}"
      : local.iter_1368.output)
    
    tape = (
      local.curr_1369.code == "+"
        ? [for i, b in local.iter_1368.tape : (i == local.iter_1368.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1369.code == "-"
        ? [for i, b in local.iter_1368.tape : (i == local.iter_1368.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1369.code == ","
        ? [for i, b in local.iter_1368.tape : (i == local.iter_1368.tape_ptr ? local.ascii_lookup[local.curr_1369.input] : b)]
        : local.iter_1368.tape)

    tape_ptr = (
      local.curr_1369.code == "<"
        ? local.iter_1368.tape_ptr == 0 ? length(local.iter_1368.tape) - 1 : local.iter_1368.tape_ptr - 1 :
      local.curr_1369.code == ">"
        ? local.iter_1368.tape_ptr == length(local.iter_1368.tape) - 1 ? 0 : local.iter_1368.tape_ptr + 1
        : local.iter_1368.tape_ptr)

    code_ptr = 1 + (
      local.curr_1369.code == "["
        ? local.iter_1368.tape[local.iter_1368.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1368.code_ptr)] : local.iter_1368.code_ptr :
      local.curr_1369.code == "]"
        ? local.iter_1368.tape[local.iter_1368.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1368.code_ptr)] : local.iter_1368.code_ptr
        : local.iter_1368.code_ptr)

    steps_taken = 1 + local.iter_1368.steps_taken
  }
}

locals {
  end_of_code_1370 = try(local.iter_1369.code_ptr >= length(var.code), true)

  curr_1370 = local.end_of_code_1370 ? null : {
    code = substr(var.code, local.iter_1369.code_ptr, 1)
    input = substr(var.code, local.iter_1369.code_ptr, 1) == "," ? substr(local.iter_1369.input, 0, 1) : null
  }

  iter_1370 = local.end_of_code_1370 ? local.iter_1369 : {
    input = (local.curr_1370.code == ","
      ? substr(local.iter_1369.input, 1, -1)
      : local.iter_1369.input)

    output = (local.curr_1370.code == "."
      ? "${local.iter_1369.output}${jsondecode(format("\"\\u%04x\"", local.iter_1369.tape[local.iter_1369.tape_ptr]))}"
      : local.iter_1369.output)
    
    tape = (
      local.curr_1370.code == "+"
        ? [for i, b in local.iter_1369.tape : (i == local.iter_1369.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1370.code == "-"
        ? [for i, b in local.iter_1369.tape : (i == local.iter_1369.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1370.code == ","
        ? [for i, b in local.iter_1369.tape : (i == local.iter_1369.tape_ptr ? local.ascii_lookup[local.curr_1370.input] : b)]
        : local.iter_1369.tape)

    tape_ptr = (
      local.curr_1370.code == "<"
        ? local.iter_1369.tape_ptr == 0 ? length(local.iter_1369.tape) - 1 : local.iter_1369.tape_ptr - 1 :
      local.curr_1370.code == ">"
        ? local.iter_1369.tape_ptr == length(local.iter_1369.tape) - 1 ? 0 : local.iter_1369.tape_ptr + 1
        : local.iter_1369.tape_ptr)

    code_ptr = 1 + (
      local.curr_1370.code == "["
        ? local.iter_1369.tape[local.iter_1369.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1369.code_ptr)] : local.iter_1369.code_ptr :
      local.curr_1370.code == "]"
        ? local.iter_1369.tape[local.iter_1369.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1369.code_ptr)] : local.iter_1369.code_ptr
        : local.iter_1369.code_ptr)

    steps_taken = 1 + local.iter_1369.steps_taken
  }
}

locals {
  end_of_code_1371 = try(local.iter_1370.code_ptr >= length(var.code), true)

  curr_1371 = local.end_of_code_1371 ? null : {
    code = substr(var.code, local.iter_1370.code_ptr, 1)
    input = substr(var.code, local.iter_1370.code_ptr, 1) == "," ? substr(local.iter_1370.input, 0, 1) : null
  }

  iter_1371 = local.end_of_code_1371 ? local.iter_1370 : {
    input = (local.curr_1371.code == ","
      ? substr(local.iter_1370.input, 1, -1)
      : local.iter_1370.input)

    output = (local.curr_1371.code == "."
      ? "${local.iter_1370.output}${jsondecode(format("\"\\u%04x\"", local.iter_1370.tape[local.iter_1370.tape_ptr]))}"
      : local.iter_1370.output)
    
    tape = (
      local.curr_1371.code == "+"
        ? [for i, b in local.iter_1370.tape : (i == local.iter_1370.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1371.code == "-"
        ? [for i, b in local.iter_1370.tape : (i == local.iter_1370.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1371.code == ","
        ? [for i, b in local.iter_1370.tape : (i == local.iter_1370.tape_ptr ? local.ascii_lookup[local.curr_1371.input] : b)]
        : local.iter_1370.tape)

    tape_ptr = (
      local.curr_1371.code == "<"
        ? local.iter_1370.tape_ptr == 0 ? length(local.iter_1370.tape) - 1 : local.iter_1370.tape_ptr - 1 :
      local.curr_1371.code == ">"
        ? local.iter_1370.tape_ptr == length(local.iter_1370.tape) - 1 ? 0 : local.iter_1370.tape_ptr + 1
        : local.iter_1370.tape_ptr)

    code_ptr = 1 + (
      local.curr_1371.code == "["
        ? local.iter_1370.tape[local.iter_1370.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1370.code_ptr)] : local.iter_1370.code_ptr :
      local.curr_1371.code == "]"
        ? local.iter_1370.tape[local.iter_1370.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1370.code_ptr)] : local.iter_1370.code_ptr
        : local.iter_1370.code_ptr)

    steps_taken = 1 + local.iter_1370.steps_taken
  }
}

locals {
  end_of_code_1372 = try(local.iter_1371.code_ptr >= length(var.code), true)

  curr_1372 = local.end_of_code_1372 ? null : {
    code = substr(var.code, local.iter_1371.code_ptr, 1)
    input = substr(var.code, local.iter_1371.code_ptr, 1) == "," ? substr(local.iter_1371.input, 0, 1) : null
  }

  iter_1372 = local.end_of_code_1372 ? local.iter_1371 : {
    input = (local.curr_1372.code == ","
      ? substr(local.iter_1371.input, 1, -1)
      : local.iter_1371.input)

    output = (local.curr_1372.code == "."
      ? "${local.iter_1371.output}${jsondecode(format("\"\\u%04x\"", local.iter_1371.tape[local.iter_1371.tape_ptr]))}"
      : local.iter_1371.output)
    
    tape = (
      local.curr_1372.code == "+"
        ? [for i, b in local.iter_1371.tape : (i == local.iter_1371.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1372.code == "-"
        ? [for i, b in local.iter_1371.tape : (i == local.iter_1371.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1372.code == ","
        ? [for i, b in local.iter_1371.tape : (i == local.iter_1371.tape_ptr ? local.ascii_lookup[local.curr_1372.input] : b)]
        : local.iter_1371.tape)

    tape_ptr = (
      local.curr_1372.code == "<"
        ? local.iter_1371.tape_ptr == 0 ? length(local.iter_1371.tape) - 1 : local.iter_1371.tape_ptr - 1 :
      local.curr_1372.code == ">"
        ? local.iter_1371.tape_ptr == length(local.iter_1371.tape) - 1 ? 0 : local.iter_1371.tape_ptr + 1
        : local.iter_1371.tape_ptr)

    code_ptr = 1 + (
      local.curr_1372.code == "["
        ? local.iter_1371.tape[local.iter_1371.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1371.code_ptr)] : local.iter_1371.code_ptr :
      local.curr_1372.code == "]"
        ? local.iter_1371.tape[local.iter_1371.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1371.code_ptr)] : local.iter_1371.code_ptr
        : local.iter_1371.code_ptr)

    steps_taken = 1 + local.iter_1371.steps_taken
  }
}

locals {
  end_of_code_1373 = try(local.iter_1372.code_ptr >= length(var.code), true)

  curr_1373 = local.end_of_code_1373 ? null : {
    code = substr(var.code, local.iter_1372.code_ptr, 1)
    input = substr(var.code, local.iter_1372.code_ptr, 1) == "," ? substr(local.iter_1372.input, 0, 1) : null
  }

  iter_1373 = local.end_of_code_1373 ? local.iter_1372 : {
    input = (local.curr_1373.code == ","
      ? substr(local.iter_1372.input, 1, -1)
      : local.iter_1372.input)

    output = (local.curr_1373.code == "."
      ? "${local.iter_1372.output}${jsondecode(format("\"\\u%04x\"", local.iter_1372.tape[local.iter_1372.tape_ptr]))}"
      : local.iter_1372.output)
    
    tape = (
      local.curr_1373.code == "+"
        ? [for i, b in local.iter_1372.tape : (i == local.iter_1372.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1373.code == "-"
        ? [for i, b in local.iter_1372.tape : (i == local.iter_1372.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1373.code == ","
        ? [for i, b in local.iter_1372.tape : (i == local.iter_1372.tape_ptr ? local.ascii_lookup[local.curr_1373.input] : b)]
        : local.iter_1372.tape)

    tape_ptr = (
      local.curr_1373.code == "<"
        ? local.iter_1372.tape_ptr == 0 ? length(local.iter_1372.tape) - 1 : local.iter_1372.tape_ptr - 1 :
      local.curr_1373.code == ">"
        ? local.iter_1372.tape_ptr == length(local.iter_1372.tape) - 1 ? 0 : local.iter_1372.tape_ptr + 1
        : local.iter_1372.tape_ptr)

    code_ptr = 1 + (
      local.curr_1373.code == "["
        ? local.iter_1372.tape[local.iter_1372.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1372.code_ptr)] : local.iter_1372.code_ptr :
      local.curr_1373.code == "]"
        ? local.iter_1372.tape[local.iter_1372.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1372.code_ptr)] : local.iter_1372.code_ptr
        : local.iter_1372.code_ptr)

    steps_taken = 1 + local.iter_1372.steps_taken
  }
}

locals {
  end_of_code_1374 = try(local.iter_1373.code_ptr >= length(var.code), true)

  curr_1374 = local.end_of_code_1374 ? null : {
    code = substr(var.code, local.iter_1373.code_ptr, 1)
    input = substr(var.code, local.iter_1373.code_ptr, 1) == "," ? substr(local.iter_1373.input, 0, 1) : null
  }

  iter_1374 = local.end_of_code_1374 ? local.iter_1373 : {
    input = (local.curr_1374.code == ","
      ? substr(local.iter_1373.input, 1, -1)
      : local.iter_1373.input)

    output = (local.curr_1374.code == "."
      ? "${local.iter_1373.output}${jsondecode(format("\"\\u%04x\"", local.iter_1373.tape[local.iter_1373.tape_ptr]))}"
      : local.iter_1373.output)
    
    tape = (
      local.curr_1374.code == "+"
        ? [for i, b in local.iter_1373.tape : (i == local.iter_1373.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1374.code == "-"
        ? [for i, b in local.iter_1373.tape : (i == local.iter_1373.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1374.code == ","
        ? [for i, b in local.iter_1373.tape : (i == local.iter_1373.tape_ptr ? local.ascii_lookup[local.curr_1374.input] : b)]
        : local.iter_1373.tape)

    tape_ptr = (
      local.curr_1374.code == "<"
        ? local.iter_1373.tape_ptr == 0 ? length(local.iter_1373.tape) - 1 : local.iter_1373.tape_ptr - 1 :
      local.curr_1374.code == ">"
        ? local.iter_1373.tape_ptr == length(local.iter_1373.tape) - 1 ? 0 : local.iter_1373.tape_ptr + 1
        : local.iter_1373.tape_ptr)

    code_ptr = 1 + (
      local.curr_1374.code == "["
        ? local.iter_1373.tape[local.iter_1373.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1373.code_ptr)] : local.iter_1373.code_ptr :
      local.curr_1374.code == "]"
        ? local.iter_1373.tape[local.iter_1373.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1373.code_ptr)] : local.iter_1373.code_ptr
        : local.iter_1373.code_ptr)

    steps_taken = 1 + local.iter_1373.steps_taken
  }
}

locals {
  end_of_code_1375 = try(local.iter_1374.code_ptr >= length(var.code), true)

  curr_1375 = local.end_of_code_1375 ? null : {
    code = substr(var.code, local.iter_1374.code_ptr, 1)
    input = substr(var.code, local.iter_1374.code_ptr, 1) == "," ? substr(local.iter_1374.input, 0, 1) : null
  }

  iter_1375 = local.end_of_code_1375 ? local.iter_1374 : {
    input = (local.curr_1375.code == ","
      ? substr(local.iter_1374.input, 1, -1)
      : local.iter_1374.input)

    output = (local.curr_1375.code == "."
      ? "${local.iter_1374.output}${jsondecode(format("\"\\u%04x\"", local.iter_1374.tape[local.iter_1374.tape_ptr]))}"
      : local.iter_1374.output)
    
    tape = (
      local.curr_1375.code == "+"
        ? [for i, b in local.iter_1374.tape : (i == local.iter_1374.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1375.code == "-"
        ? [for i, b in local.iter_1374.tape : (i == local.iter_1374.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1375.code == ","
        ? [for i, b in local.iter_1374.tape : (i == local.iter_1374.tape_ptr ? local.ascii_lookup[local.curr_1375.input] : b)]
        : local.iter_1374.tape)

    tape_ptr = (
      local.curr_1375.code == "<"
        ? local.iter_1374.tape_ptr == 0 ? length(local.iter_1374.tape) - 1 : local.iter_1374.tape_ptr - 1 :
      local.curr_1375.code == ">"
        ? local.iter_1374.tape_ptr == length(local.iter_1374.tape) - 1 ? 0 : local.iter_1374.tape_ptr + 1
        : local.iter_1374.tape_ptr)

    code_ptr = 1 + (
      local.curr_1375.code == "["
        ? local.iter_1374.tape[local.iter_1374.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1374.code_ptr)] : local.iter_1374.code_ptr :
      local.curr_1375.code == "]"
        ? local.iter_1374.tape[local.iter_1374.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1374.code_ptr)] : local.iter_1374.code_ptr
        : local.iter_1374.code_ptr)

    steps_taken = 1 + local.iter_1374.steps_taken
  }
}

locals {
  end_of_code_1376 = try(local.iter_1375.code_ptr >= length(var.code), true)

  curr_1376 = local.end_of_code_1376 ? null : {
    code = substr(var.code, local.iter_1375.code_ptr, 1)
    input = substr(var.code, local.iter_1375.code_ptr, 1) == "," ? substr(local.iter_1375.input, 0, 1) : null
  }

  iter_1376 = local.end_of_code_1376 ? local.iter_1375 : {
    input = (local.curr_1376.code == ","
      ? substr(local.iter_1375.input, 1, -1)
      : local.iter_1375.input)

    output = (local.curr_1376.code == "."
      ? "${local.iter_1375.output}${jsondecode(format("\"\\u%04x\"", local.iter_1375.tape[local.iter_1375.tape_ptr]))}"
      : local.iter_1375.output)
    
    tape = (
      local.curr_1376.code == "+"
        ? [for i, b in local.iter_1375.tape : (i == local.iter_1375.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1376.code == "-"
        ? [for i, b in local.iter_1375.tape : (i == local.iter_1375.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1376.code == ","
        ? [for i, b in local.iter_1375.tape : (i == local.iter_1375.tape_ptr ? local.ascii_lookup[local.curr_1376.input] : b)]
        : local.iter_1375.tape)

    tape_ptr = (
      local.curr_1376.code == "<"
        ? local.iter_1375.tape_ptr == 0 ? length(local.iter_1375.tape) - 1 : local.iter_1375.tape_ptr - 1 :
      local.curr_1376.code == ">"
        ? local.iter_1375.tape_ptr == length(local.iter_1375.tape) - 1 ? 0 : local.iter_1375.tape_ptr + 1
        : local.iter_1375.tape_ptr)

    code_ptr = 1 + (
      local.curr_1376.code == "["
        ? local.iter_1375.tape[local.iter_1375.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1375.code_ptr)] : local.iter_1375.code_ptr :
      local.curr_1376.code == "]"
        ? local.iter_1375.tape[local.iter_1375.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1375.code_ptr)] : local.iter_1375.code_ptr
        : local.iter_1375.code_ptr)

    steps_taken = 1 + local.iter_1375.steps_taken
  }
}

locals {
  end_of_code_1377 = try(local.iter_1376.code_ptr >= length(var.code), true)

  curr_1377 = local.end_of_code_1377 ? null : {
    code = substr(var.code, local.iter_1376.code_ptr, 1)
    input = substr(var.code, local.iter_1376.code_ptr, 1) == "," ? substr(local.iter_1376.input, 0, 1) : null
  }

  iter_1377 = local.end_of_code_1377 ? local.iter_1376 : {
    input = (local.curr_1377.code == ","
      ? substr(local.iter_1376.input, 1, -1)
      : local.iter_1376.input)

    output = (local.curr_1377.code == "."
      ? "${local.iter_1376.output}${jsondecode(format("\"\\u%04x\"", local.iter_1376.tape[local.iter_1376.tape_ptr]))}"
      : local.iter_1376.output)
    
    tape = (
      local.curr_1377.code == "+"
        ? [for i, b in local.iter_1376.tape : (i == local.iter_1376.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1377.code == "-"
        ? [for i, b in local.iter_1376.tape : (i == local.iter_1376.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1377.code == ","
        ? [for i, b in local.iter_1376.tape : (i == local.iter_1376.tape_ptr ? local.ascii_lookup[local.curr_1377.input] : b)]
        : local.iter_1376.tape)

    tape_ptr = (
      local.curr_1377.code == "<"
        ? local.iter_1376.tape_ptr == 0 ? length(local.iter_1376.tape) - 1 : local.iter_1376.tape_ptr - 1 :
      local.curr_1377.code == ">"
        ? local.iter_1376.tape_ptr == length(local.iter_1376.tape) - 1 ? 0 : local.iter_1376.tape_ptr + 1
        : local.iter_1376.tape_ptr)

    code_ptr = 1 + (
      local.curr_1377.code == "["
        ? local.iter_1376.tape[local.iter_1376.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1376.code_ptr)] : local.iter_1376.code_ptr :
      local.curr_1377.code == "]"
        ? local.iter_1376.tape[local.iter_1376.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1376.code_ptr)] : local.iter_1376.code_ptr
        : local.iter_1376.code_ptr)

    steps_taken = 1 + local.iter_1376.steps_taken
  }
}

locals {
  end_of_code_1378 = try(local.iter_1377.code_ptr >= length(var.code), true)

  curr_1378 = local.end_of_code_1378 ? null : {
    code = substr(var.code, local.iter_1377.code_ptr, 1)
    input = substr(var.code, local.iter_1377.code_ptr, 1) == "," ? substr(local.iter_1377.input, 0, 1) : null
  }

  iter_1378 = local.end_of_code_1378 ? local.iter_1377 : {
    input = (local.curr_1378.code == ","
      ? substr(local.iter_1377.input, 1, -1)
      : local.iter_1377.input)

    output = (local.curr_1378.code == "."
      ? "${local.iter_1377.output}${jsondecode(format("\"\\u%04x\"", local.iter_1377.tape[local.iter_1377.tape_ptr]))}"
      : local.iter_1377.output)
    
    tape = (
      local.curr_1378.code == "+"
        ? [for i, b in local.iter_1377.tape : (i == local.iter_1377.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1378.code == "-"
        ? [for i, b in local.iter_1377.tape : (i == local.iter_1377.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1378.code == ","
        ? [for i, b in local.iter_1377.tape : (i == local.iter_1377.tape_ptr ? local.ascii_lookup[local.curr_1378.input] : b)]
        : local.iter_1377.tape)

    tape_ptr = (
      local.curr_1378.code == "<"
        ? local.iter_1377.tape_ptr == 0 ? length(local.iter_1377.tape) - 1 : local.iter_1377.tape_ptr - 1 :
      local.curr_1378.code == ">"
        ? local.iter_1377.tape_ptr == length(local.iter_1377.tape) - 1 ? 0 : local.iter_1377.tape_ptr + 1
        : local.iter_1377.tape_ptr)

    code_ptr = 1 + (
      local.curr_1378.code == "["
        ? local.iter_1377.tape[local.iter_1377.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1377.code_ptr)] : local.iter_1377.code_ptr :
      local.curr_1378.code == "]"
        ? local.iter_1377.tape[local.iter_1377.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1377.code_ptr)] : local.iter_1377.code_ptr
        : local.iter_1377.code_ptr)

    steps_taken = 1 + local.iter_1377.steps_taken
  }
}

locals {
  end_of_code_1379 = try(local.iter_1378.code_ptr >= length(var.code), true)

  curr_1379 = local.end_of_code_1379 ? null : {
    code = substr(var.code, local.iter_1378.code_ptr, 1)
    input = substr(var.code, local.iter_1378.code_ptr, 1) == "," ? substr(local.iter_1378.input, 0, 1) : null
  }

  iter_1379 = local.end_of_code_1379 ? local.iter_1378 : {
    input = (local.curr_1379.code == ","
      ? substr(local.iter_1378.input, 1, -1)
      : local.iter_1378.input)

    output = (local.curr_1379.code == "."
      ? "${local.iter_1378.output}${jsondecode(format("\"\\u%04x\"", local.iter_1378.tape[local.iter_1378.tape_ptr]))}"
      : local.iter_1378.output)
    
    tape = (
      local.curr_1379.code == "+"
        ? [for i, b in local.iter_1378.tape : (i == local.iter_1378.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1379.code == "-"
        ? [for i, b in local.iter_1378.tape : (i == local.iter_1378.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1379.code == ","
        ? [for i, b in local.iter_1378.tape : (i == local.iter_1378.tape_ptr ? local.ascii_lookup[local.curr_1379.input] : b)]
        : local.iter_1378.tape)

    tape_ptr = (
      local.curr_1379.code == "<"
        ? local.iter_1378.tape_ptr == 0 ? length(local.iter_1378.tape) - 1 : local.iter_1378.tape_ptr - 1 :
      local.curr_1379.code == ">"
        ? local.iter_1378.tape_ptr == length(local.iter_1378.tape) - 1 ? 0 : local.iter_1378.tape_ptr + 1
        : local.iter_1378.tape_ptr)

    code_ptr = 1 + (
      local.curr_1379.code == "["
        ? local.iter_1378.tape[local.iter_1378.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1378.code_ptr)] : local.iter_1378.code_ptr :
      local.curr_1379.code == "]"
        ? local.iter_1378.tape[local.iter_1378.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1378.code_ptr)] : local.iter_1378.code_ptr
        : local.iter_1378.code_ptr)

    steps_taken = 1 + local.iter_1378.steps_taken
  }
}

locals {
  end_of_code_1380 = try(local.iter_1379.code_ptr >= length(var.code), true)

  curr_1380 = local.end_of_code_1380 ? null : {
    code = substr(var.code, local.iter_1379.code_ptr, 1)
    input = substr(var.code, local.iter_1379.code_ptr, 1) == "," ? substr(local.iter_1379.input, 0, 1) : null
  }

  iter_1380 = local.end_of_code_1380 ? local.iter_1379 : {
    input = (local.curr_1380.code == ","
      ? substr(local.iter_1379.input, 1, -1)
      : local.iter_1379.input)

    output = (local.curr_1380.code == "."
      ? "${local.iter_1379.output}${jsondecode(format("\"\\u%04x\"", local.iter_1379.tape[local.iter_1379.tape_ptr]))}"
      : local.iter_1379.output)
    
    tape = (
      local.curr_1380.code == "+"
        ? [for i, b in local.iter_1379.tape : (i == local.iter_1379.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1380.code == "-"
        ? [for i, b in local.iter_1379.tape : (i == local.iter_1379.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1380.code == ","
        ? [for i, b in local.iter_1379.tape : (i == local.iter_1379.tape_ptr ? local.ascii_lookup[local.curr_1380.input] : b)]
        : local.iter_1379.tape)

    tape_ptr = (
      local.curr_1380.code == "<"
        ? local.iter_1379.tape_ptr == 0 ? length(local.iter_1379.tape) - 1 : local.iter_1379.tape_ptr - 1 :
      local.curr_1380.code == ">"
        ? local.iter_1379.tape_ptr == length(local.iter_1379.tape) - 1 ? 0 : local.iter_1379.tape_ptr + 1
        : local.iter_1379.tape_ptr)

    code_ptr = 1 + (
      local.curr_1380.code == "["
        ? local.iter_1379.tape[local.iter_1379.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1379.code_ptr)] : local.iter_1379.code_ptr :
      local.curr_1380.code == "]"
        ? local.iter_1379.tape[local.iter_1379.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1379.code_ptr)] : local.iter_1379.code_ptr
        : local.iter_1379.code_ptr)

    steps_taken = 1 + local.iter_1379.steps_taken
  }
}

locals {
  end_of_code_1381 = try(local.iter_1380.code_ptr >= length(var.code), true)

  curr_1381 = local.end_of_code_1381 ? null : {
    code = substr(var.code, local.iter_1380.code_ptr, 1)
    input = substr(var.code, local.iter_1380.code_ptr, 1) == "," ? substr(local.iter_1380.input, 0, 1) : null
  }

  iter_1381 = local.end_of_code_1381 ? local.iter_1380 : {
    input = (local.curr_1381.code == ","
      ? substr(local.iter_1380.input, 1, -1)
      : local.iter_1380.input)

    output = (local.curr_1381.code == "."
      ? "${local.iter_1380.output}${jsondecode(format("\"\\u%04x\"", local.iter_1380.tape[local.iter_1380.tape_ptr]))}"
      : local.iter_1380.output)
    
    tape = (
      local.curr_1381.code == "+"
        ? [for i, b in local.iter_1380.tape : (i == local.iter_1380.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1381.code == "-"
        ? [for i, b in local.iter_1380.tape : (i == local.iter_1380.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1381.code == ","
        ? [for i, b in local.iter_1380.tape : (i == local.iter_1380.tape_ptr ? local.ascii_lookup[local.curr_1381.input] : b)]
        : local.iter_1380.tape)

    tape_ptr = (
      local.curr_1381.code == "<"
        ? local.iter_1380.tape_ptr == 0 ? length(local.iter_1380.tape) - 1 : local.iter_1380.tape_ptr - 1 :
      local.curr_1381.code == ">"
        ? local.iter_1380.tape_ptr == length(local.iter_1380.tape) - 1 ? 0 : local.iter_1380.tape_ptr + 1
        : local.iter_1380.tape_ptr)

    code_ptr = 1 + (
      local.curr_1381.code == "["
        ? local.iter_1380.tape[local.iter_1380.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1380.code_ptr)] : local.iter_1380.code_ptr :
      local.curr_1381.code == "]"
        ? local.iter_1380.tape[local.iter_1380.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1380.code_ptr)] : local.iter_1380.code_ptr
        : local.iter_1380.code_ptr)

    steps_taken = 1 + local.iter_1380.steps_taken
  }
}

locals {
  end_of_code_1382 = try(local.iter_1381.code_ptr >= length(var.code), true)

  curr_1382 = local.end_of_code_1382 ? null : {
    code = substr(var.code, local.iter_1381.code_ptr, 1)
    input = substr(var.code, local.iter_1381.code_ptr, 1) == "," ? substr(local.iter_1381.input, 0, 1) : null
  }

  iter_1382 = local.end_of_code_1382 ? local.iter_1381 : {
    input = (local.curr_1382.code == ","
      ? substr(local.iter_1381.input, 1, -1)
      : local.iter_1381.input)

    output = (local.curr_1382.code == "."
      ? "${local.iter_1381.output}${jsondecode(format("\"\\u%04x\"", local.iter_1381.tape[local.iter_1381.tape_ptr]))}"
      : local.iter_1381.output)
    
    tape = (
      local.curr_1382.code == "+"
        ? [for i, b in local.iter_1381.tape : (i == local.iter_1381.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1382.code == "-"
        ? [for i, b in local.iter_1381.tape : (i == local.iter_1381.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1382.code == ","
        ? [for i, b in local.iter_1381.tape : (i == local.iter_1381.tape_ptr ? local.ascii_lookup[local.curr_1382.input] : b)]
        : local.iter_1381.tape)

    tape_ptr = (
      local.curr_1382.code == "<"
        ? local.iter_1381.tape_ptr == 0 ? length(local.iter_1381.tape) - 1 : local.iter_1381.tape_ptr - 1 :
      local.curr_1382.code == ">"
        ? local.iter_1381.tape_ptr == length(local.iter_1381.tape) - 1 ? 0 : local.iter_1381.tape_ptr + 1
        : local.iter_1381.tape_ptr)

    code_ptr = 1 + (
      local.curr_1382.code == "["
        ? local.iter_1381.tape[local.iter_1381.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1381.code_ptr)] : local.iter_1381.code_ptr :
      local.curr_1382.code == "]"
        ? local.iter_1381.tape[local.iter_1381.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1381.code_ptr)] : local.iter_1381.code_ptr
        : local.iter_1381.code_ptr)

    steps_taken = 1 + local.iter_1381.steps_taken
  }
}

locals {
  end_of_code_1383 = try(local.iter_1382.code_ptr >= length(var.code), true)

  curr_1383 = local.end_of_code_1383 ? null : {
    code = substr(var.code, local.iter_1382.code_ptr, 1)
    input = substr(var.code, local.iter_1382.code_ptr, 1) == "," ? substr(local.iter_1382.input, 0, 1) : null
  }

  iter_1383 = local.end_of_code_1383 ? local.iter_1382 : {
    input = (local.curr_1383.code == ","
      ? substr(local.iter_1382.input, 1, -1)
      : local.iter_1382.input)

    output = (local.curr_1383.code == "."
      ? "${local.iter_1382.output}${jsondecode(format("\"\\u%04x\"", local.iter_1382.tape[local.iter_1382.tape_ptr]))}"
      : local.iter_1382.output)
    
    tape = (
      local.curr_1383.code == "+"
        ? [for i, b in local.iter_1382.tape : (i == local.iter_1382.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1383.code == "-"
        ? [for i, b in local.iter_1382.tape : (i == local.iter_1382.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1383.code == ","
        ? [for i, b in local.iter_1382.tape : (i == local.iter_1382.tape_ptr ? local.ascii_lookup[local.curr_1383.input] : b)]
        : local.iter_1382.tape)

    tape_ptr = (
      local.curr_1383.code == "<"
        ? local.iter_1382.tape_ptr == 0 ? length(local.iter_1382.tape) - 1 : local.iter_1382.tape_ptr - 1 :
      local.curr_1383.code == ">"
        ? local.iter_1382.tape_ptr == length(local.iter_1382.tape) - 1 ? 0 : local.iter_1382.tape_ptr + 1
        : local.iter_1382.tape_ptr)

    code_ptr = 1 + (
      local.curr_1383.code == "["
        ? local.iter_1382.tape[local.iter_1382.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1382.code_ptr)] : local.iter_1382.code_ptr :
      local.curr_1383.code == "]"
        ? local.iter_1382.tape[local.iter_1382.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1382.code_ptr)] : local.iter_1382.code_ptr
        : local.iter_1382.code_ptr)

    steps_taken = 1 + local.iter_1382.steps_taken
  }
}

locals {
  end_of_code_1384 = try(local.iter_1383.code_ptr >= length(var.code), true)

  curr_1384 = local.end_of_code_1384 ? null : {
    code = substr(var.code, local.iter_1383.code_ptr, 1)
    input = substr(var.code, local.iter_1383.code_ptr, 1) == "," ? substr(local.iter_1383.input, 0, 1) : null
  }

  iter_1384 = local.end_of_code_1384 ? local.iter_1383 : {
    input = (local.curr_1384.code == ","
      ? substr(local.iter_1383.input, 1, -1)
      : local.iter_1383.input)

    output = (local.curr_1384.code == "."
      ? "${local.iter_1383.output}${jsondecode(format("\"\\u%04x\"", local.iter_1383.tape[local.iter_1383.tape_ptr]))}"
      : local.iter_1383.output)
    
    tape = (
      local.curr_1384.code == "+"
        ? [for i, b in local.iter_1383.tape : (i == local.iter_1383.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1384.code == "-"
        ? [for i, b in local.iter_1383.tape : (i == local.iter_1383.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1384.code == ","
        ? [for i, b in local.iter_1383.tape : (i == local.iter_1383.tape_ptr ? local.ascii_lookup[local.curr_1384.input] : b)]
        : local.iter_1383.tape)

    tape_ptr = (
      local.curr_1384.code == "<"
        ? local.iter_1383.tape_ptr == 0 ? length(local.iter_1383.tape) - 1 : local.iter_1383.tape_ptr - 1 :
      local.curr_1384.code == ">"
        ? local.iter_1383.tape_ptr == length(local.iter_1383.tape) - 1 ? 0 : local.iter_1383.tape_ptr + 1
        : local.iter_1383.tape_ptr)

    code_ptr = 1 + (
      local.curr_1384.code == "["
        ? local.iter_1383.tape[local.iter_1383.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1383.code_ptr)] : local.iter_1383.code_ptr :
      local.curr_1384.code == "]"
        ? local.iter_1383.tape[local.iter_1383.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1383.code_ptr)] : local.iter_1383.code_ptr
        : local.iter_1383.code_ptr)

    steps_taken = 1 + local.iter_1383.steps_taken
  }
}

locals {
  end_of_code_1385 = try(local.iter_1384.code_ptr >= length(var.code), true)

  curr_1385 = local.end_of_code_1385 ? null : {
    code = substr(var.code, local.iter_1384.code_ptr, 1)
    input = substr(var.code, local.iter_1384.code_ptr, 1) == "," ? substr(local.iter_1384.input, 0, 1) : null
  }

  iter_1385 = local.end_of_code_1385 ? local.iter_1384 : {
    input = (local.curr_1385.code == ","
      ? substr(local.iter_1384.input, 1, -1)
      : local.iter_1384.input)

    output = (local.curr_1385.code == "."
      ? "${local.iter_1384.output}${jsondecode(format("\"\\u%04x\"", local.iter_1384.tape[local.iter_1384.tape_ptr]))}"
      : local.iter_1384.output)
    
    tape = (
      local.curr_1385.code == "+"
        ? [for i, b in local.iter_1384.tape : (i == local.iter_1384.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1385.code == "-"
        ? [for i, b in local.iter_1384.tape : (i == local.iter_1384.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1385.code == ","
        ? [for i, b in local.iter_1384.tape : (i == local.iter_1384.tape_ptr ? local.ascii_lookup[local.curr_1385.input] : b)]
        : local.iter_1384.tape)

    tape_ptr = (
      local.curr_1385.code == "<"
        ? local.iter_1384.tape_ptr == 0 ? length(local.iter_1384.tape) - 1 : local.iter_1384.tape_ptr - 1 :
      local.curr_1385.code == ">"
        ? local.iter_1384.tape_ptr == length(local.iter_1384.tape) - 1 ? 0 : local.iter_1384.tape_ptr + 1
        : local.iter_1384.tape_ptr)

    code_ptr = 1 + (
      local.curr_1385.code == "["
        ? local.iter_1384.tape[local.iter_1384.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1384.code_ptr)] : local.iter_1384.code_ptr :
      local.curr_1385.code == "]"
        ? local.iter_1384.tape[local.iter_1384.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1384.code_ptr)] : local.iter_1384.code_ptr
        : local.iter_1384.code_ptr)

    steps_taken = 1 + local.iter_1384.steps_taken
  }
}

locals {
  end_of_code_1386 = try(local.iter_1385.code_ptr >= length(var.code), true)

  curr_1386 = local.end_of_code_1386 ? null : {
    code = substr(var.code, local.iter_1385.code_ptr, 1)
    input = substr(var.code, local.iter_1385.code_ptr, 1) == "," ? substr(local.iter_1385.input, 0, 1) : null
  }

  iter_1386 = local.end_of_code_1386 ? local.iter_1385 : {
    input = (local.curr_1386.code == ","
      ? substr(local.iter_1385.input, 1, -1)
      : local.iter_1385.input)

    output = (local.curr_1386.code == "."
      ? "${local.iter_1385.output}${jsondecode(format("\"\\u%04x\"", local.iter_1385.tape[local.iter_1385.tape_ptr]))}"
      : local.iter_1385.output)
    
    tape = (
      local.curr_1386.code == "+"
        ? [for i, b in local.iter_1385.tape : (i == local.iter_1385.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1386.code == "-"
        ? [for i, b in local.iter_1385.tape : (i == local.iter_1385.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1386.code == ","
        ? [for i, b in local.iter_1385.tape : (i == local.iter_1385.tape_ptr ? local.ascii_lookup[local.curr_1386.input] : b)]
        : local.iter_1385.tape)

    tape_ptr = (
      local.curr_1386.code == "<"
        ? local.iter_1385.tape_ptr == 0 ? length(local.iter_1385.tape) - 1 : local.iter_1385.tape_ptr - 1 :
      local.curr_1386.code == ">"
        ? local.iter_1385.tape_ptr == length(local.iter_1385.tape) - 1 ? 0 : local.iter_1385.tape_ptr + 1
        : local.iter_1385.tape_ptr)

    code_ptr = 1 + (
      local.curr_1386.code == "["
        ? local.iter_1385.tape[local.iter_1385.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1385.code_ptr)] : local.iter_1385.code_ptr :
      local.curr_1386.code == "]"
        ? local.iter_1385.tape[local.iter_1385.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1385.code_ptr)] : local.iter_1385.code_ptr
        : local.iter_1385.code_ptr)

    steps_taken = 1 + local.iter_1385.steps_taken
  }
}

locals {
  end_of_code_1387 = try(local.iter_1386.code_ptr >= length(var.code), true)

  curr_1387 = local.end_of_code_1387 ? null : {
    code = substr(var.code, local.iter_1386.code_ptr, 1)
    input = substr(var.code, local.iter_1386.code_ptr, 1) == "," ? substr(local.iter_1386.input, 0, 1) : null
  }

  iter_1387 = local.end_of_code_1387 ? local.iter_1386 : {
    input = (local.curr_1387.code == ","
      ? substr(local.iter_1386.input, 1, -1)
      : local.iter_1386.input)

    output = (local.curr_1387.code == "."
      ? "${local.iter_1386.output}${jsondecode(format("\"\\u%04x\"", local.iter_1386.tape[local.iter_1386.tape_ptr]))}"
      : local.iter_1386.output)
    
    tape = (
      local.curr_1387.code == "+"
        ? [for i, b in local.iter_1386.tape : (i == local.iter_1386.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1387.code == "-"
        ? [for i, b in local.iter_1386.tape : (i == local.iter_1386.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1387.code == ","
        ? [for i, b in local.iter_1386.tape : (i == local.iter_1386.tape_ptr ? local.ascii_lookup[local.curr_1387.input] : b)]
        : local.iter_1386.tape)

    tape_ptr = (
      local.curr_1387.code == "<"
        ? local.iter_1386.tape_ptr == 0 ? length(local.iter_1386.tape) - 1 : local.iter_1386.tape_ptr - 1 :
      local.curr_1387.code == ">"
        ? local.iter_1386.tape_ptr == length(local.iter_1386.tape) - 1 ? 0 : local.iter_1386.tape_ptr + 1
        : local.iter_1386.tape_ptr)

    code_ptr = 1 + (
      local.curr_1387.code == "["
        ? local.iter_1386.tape[local.iter_1386.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1386.code_ptr)] : local.iter_1386.code_ptr :
      local.curr_1387.code == "]"
        ? local.iter_1386.tape[local.iter_1386.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1386.code_ptr)] : local.iter_1386.code_ptr
        : local.iter_1386.code_ptr)

    steps_taken = 1 + local.iter_1386.steps_taken
  }
}

locals {
  end_of_code_1388 = try(local.iter_1387.code_ptr >= length(var.code), true)

  curr_1388 = local.end_of_code_1388 ? null : {
    code = substr(var.code, local.iter_1387.code_ptr, 1)
    input = substr(var.code, local.iter_1387.code_ptr, 1) == "," ? substr(local.iter_1387.input, 0, 1) : null
  }

  iter_1388 = local.end_of_code_1388 ? local.iter_1387 : {
    input = (local.curr_1388.code == ","
      ? substr(local.iter_1387.input, 1, -1)
      : local.iter_1387.input)

    output = (local.curr_1388.code == "."
      ? "${local.iter_1387.output}${jsondecode(format("\"\\u%04x\"", local.iter_1387.tape[local.iter_1387.tape_ptr]))}"
      : local.iter_1387.output)
    
    tape = (
      local.curr_1388.code == "+"
        ? [for i, b in local.iter_1387.tape : (i == local.iter_1387.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1388.code == "-"
        ? [for i, b in local.iter_1387.tape : (i == local.iter_1387.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1388.code == ","
        ? [for i, b in local.iter_1387.tape : (i == local.iter_1387.tape_ptr ? local.ascii_lookup[local.curr_1388.input] : b)]
        : local.iter_1387.tape)

    tape_ptr = (
      local.curr_1388.code == "<"
        ? local.iter_1387.tape_ptr == 0 ? length(local.iter_1387.tape) - 1 : local.iter_1387.tape_ptr - 1 :
      local.curr_1388.code == ">"
        ? local.iter_1387.tape_ptr == length(local.iter_1387.tape) - 1 ? 0 : local.iter_1387.tape_ptr + 1
        : local.iter_1387.tape_ptr)

    code_ptr = 1 + (
      local.curr_1388.code == "["
        ? local.iter_1387.tape[local.iter_1387.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1387.code_ptr)] : local.iter_1387.code_ptr :
      local.curr_1388.code == "]"
        ? local.iter_1387.tape[local.iter_1387.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1387.code_ptr)] : local.iter_1387.code_ptr
        : local.iter_1387.code_ptr)

    steps_taken = 1 + local.iter_1387.steps_taken
  }
}

locals {
  end_of_code_1389 = try(local.iter_1388.code_ptr >= length(var.code), true)

  curr_1389 = local.end_of_code_1389 ? null : {
    code = substr(var.code, local.iter_1388.code_ptr, 1)
    input = substr(var.code, local.iter_1388.code_ptr, 1) == "," ? substr(local.iter_1388.input, 0, 1) : null
  }

  iter_1389 = local.end_of_code_1389 ? local.iter_1388 : {
    input = (local.curr_1389.code == ","
      ? substr(local.iter_1388.input, 1, -1)
      : local.iter_1388.input)

    output = (local.curr_1389.code == "."
      ? "${local.iter_1388.output}${jsondecode(format("\"\\u%04x\"", local.iter_1388.tape[local.iter_1388.tape_ptr]))}"
      : local.iter_1388.output)
    
    tape = (
      local.curr_1389.code == "+"
        ? [for i, b in local.iter_1388.tape : (i == local.iter_1388.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1389.code == "-"
        ? [for i, b in local.iter_1388.tape : (i == local.iter_1388.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1389.code == ","
        ? [for i, b in local.iter_1388.tape : (i == local.iter_1388.tape_ptr ? local.ascii_lookup[local.curr_1389.input] : b)]
        : local.iter_1388.tape)

    tape_ptr = (
      local.curr_1389.code == "<"
        ? local.iter_1388.tape_ptr == 0 ? length(local.iter_1388.tape) - 1 : local.iter_1388.tape_ptr - 1 :
      local.curr_1389.code == ">"
        ? local.iter_1388.tape_ptr == length(local.iter_1388.tape) - 1 ? 0 : local.iter_1388.tape_ptr + 1
        : local.iter_1388.tape_ptr)

    code_ptr = 1 + (
      local.curr_1389.code == "["
        ? local.iter_1388.tape[local.iter_1388.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1388.code_ptr)] : local.iter_1388.code_ptr :
      local.curr_1389.code == "]"
        ? local.iter_1388.tape[local.iter_1388.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1388.code_ptr)] : local.iter_1388.code_ptr
        : local.iter_1388.code_ptr)

    steps_taken = 1 + local.iter_1388.steps_taken
  }
}

locals {
  end_of_code_1390 = try(local.iter_1389.code_ptr >= length(var.code), true)

  curr_1390 = local.end_of_code_1390 ? null : {
    code = substr(var.code, local.iter_1389.code_ptr, 1)
    input = substr(var.code, local.iter_1389.code_ptr, 1) == "," ? substr(local.iter_1389.input, 0, 1) : null
  }

  iter_1390 = local.end_of_code_1390 ? local.iter_1389 : {
    input = (local.curr_1390.code == ","
      ? substr(local.iter_1389.input, 1, -1)
      : local.iter_1389.input)

    output = (local.curr_1390.code == "."
      ? "${local.iter_1389.output}${jsondecode(format("\"\\u%04x\"", local.iter_1389.tape[local.iter_1389.tape_ptr]))}"
      : local.iter_1389.output)
    
    tape = (
      local.curr_1390.code == "+"
        ? [for i, b in local.iter_1389.tape : (i == local.iter_1389.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1390.code == "-"
        ? [for i, b in local.iter_1389.tape : (i == local.iter_1389.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1390.code == ","
        ? [for i, b in local.iter_1389.tape : (i == local.iter_1389.tape_ptr ? local.ascii_lookup[local.curr_1390.input] : b)]
        : local.iter_1389.tape)

    tape_ptr = (
      local.curr_1390.code == "<"
        ? local.iter_1389.tape_ptr == 0 ? length(local.iter_1389.tape) - 1 : local.iter_1389.tape_ptr - 1 :
      local.curr_1390.code == ">"
        ? local.iter_1389.tape_ptr == length(local.iter_1389.tape) - 1 ? 0 : local.iter_1389.tape_ptr + 1
        : local.iter_1389.tape_ptr)

    code_ptr = 1 + (
      local.curr_1390.code == "["
        ? local.iter_1389.tape[local.iter_1389.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1389.code_ptr)] : local.iter_1389.code_ptr :
      local.curr_1390.code == "]"
        ? local.iter_1389.tape[local.iter_1389.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1389.code_ptr)] : local.iter_1389.code_ptr
        : local.iter_1389.code_ptr)

    steps_taken = 1 + local.iter_1389.steps_taken
  }
}

locals {
  end_of_code_1391 = try(local.iter_1390.code_ptr >= length(var.code), true)

  curr_1391 = local.end_of_code_1391 ? null : {
    code = substr(var.code, local.iter_1390.code_ptr, 1)
    input = substr(var.code, local.iter_1390.code_ptr, 1) == "," ? substr(local.iter_1390.input, 0, 1) : null
  }

  iter_1391 = local.end_of_code_1391 ? local.iter_1390 : {
    input = (local.curr_1391.code == ","
      ? substr(local.iter_1390.input, 1, -1)
      : local.iter_1390.input)

    output = (local.curr_1391.code == "."
      ? "${local.iter_1390.output}${jsondecode(format("\"\\u%04x\"", local.iter_1390.tape[local.iter_1390.tape_ptr]))}"
      : local.iter_1390.output)
    
    tape = (
      local.curr_1391.code == "+"
        ? [for i, b in local.iter_1390.tape : (i == local.iter_1390.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1391.code == "-"
        ? [for i, b in local.iter_1390.tape : (i == local.iter_1390.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1391.code == ","
        ? [for i, b in local.iter_1390.tape : (i == local.iter_1390.tape_ptr ? local.ascii_lookup[local.curr_1391.input] : b)]
        : local.iter_1390.tape)

    tape_ptr = (
      local.curr_1391.code == "<"
        ? local.iter_1390.tape_ptr == 0 ? length(local.iter_1390.tape) - 1 : local.iter_1390.tape_ptr - 1 :
      local.curr_1391.code == ">"
        ? local.iter_1390.tape_ptr == length(local.iter_1390.tape) - 1 ? 0 : local.iter_1390.tape_ptr + 1
        : local.iter_1390.tape_ptr)

    code_ptr = 1 + (
      local.curr_1391.code == "["
        ? local.iter_1390.tape[local.iter_1390.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1390.code_ptr)] : local.iter_1390.code_ptr :
      local.curr_1391.code == "]"
        ? local.iter_1390.tape[local.iter_1390.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1390.code_ptr)] : local.iter_1390.code_ptr
        : local.iter_1390.code_ptr)

    steps_taken = 1 + local.iter_1390.steps_taken
  }
}

locals {
  end_of_code_1392 = try(local.iter_1391.code_ptr >= length(var.code), true)

  curr_1392 = local.end_of_code_1392 ? null : {
    code = substr(var.code, local.iter_1391.code_ptr, 1)
    input = substr(var.code, local.iter_1391.code_ptr, 1) == "," ? substr(local.iter_1391.input, 0, 1) : null
  }

  iter_1392 = local.end_of_code_1392 ? local.iter_1391 : {
    input = (local.curr_1392.code == ","
      ? substr(local.iter_1391.input, 1, -1)
      : local.iter_1391.input)

    output = (local.curr_1392.code == "."
      ? "${local.iter_1391.output}${jsondecode(format("\"\\u%04x\"", local.iter_1391.tape[local.iter_1391.tape_ptr]))}"
      : local.iter_1391.output)
    
    tape = (
      local.curr_1392.code == "+"
        ? [for i, b in local.iter_1391.tape : (i == local.iter_1391.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1392.code == "-"
        ? [for i, b in local.iter_1391.tape : (i == local.iter_1391.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1392.code == ","
        ? [for i, b in local.iter_1391.tape : (i == local.iter_1391.tape_ptr ? local.ascii_lookup[local.curr_1392.input] : b)]
        : local.iter_1391.tape)

    tape_ptr = (
      local.curr_1392.code == "<"
        ? local.iter_1391.tape_ptr == 0 ? length(local.iter_1391.tape) - 1 : local.iter_1391.tape_ptr - 1 :
      local.curr_1392.code == ">"
        ? local.iter_1391.tape_ptr == length(local.iter_1391.tape) - 1 ? 0 : local.iter_1391.tape_ptr + 1
        : local.iter_1391.tape_ptr)

    code_ptr = 1 + (
      local.curr_1392.code == "["
        ? local.iter_1391.tape[local.iter_1391.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1391.code_ptr)] : local.iter_1391.code_ptr :
      local.curr_1392.code == "]"
        ? local.iter_1391.tape[local.iter_1391.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1391.code_ptr)] : local.iter_1391.code_ptr
        : local.iter_1391.code_ptr)

    steps_taken = 1 + local.iter_1391.steps_taken
  }
}

locals {
  end_of_code_1393 = try(local.iter_1392.code_ptr >= length(var.code), true)

  curr_1393 = local.end_of_code_1393 ? null : {
    code = substr(var.code, local.iter_1392.code_ptr, 1)
    input = substr(var.code, local.iter_1392.code_ptr, 1) == "," ? substr(local.iter_1392.input, 0, 1) : null
  }

  iter_1393 = local.end_of_code_1393 ? local.iter_1392 : {
    input = (local.curr_1393.code == ","
      ? substr(local.iter_1392.input, 1, -1)
      : local.iter_1392.input)

    output = (local.curr_1393.code == "."
      ? "${local.iter_1392.output}${jsondecode(format("\"\\u%04x\"", local.iter_1392.tape[local.iter_1392.tape_ptr]))}"
      : local.iter_1392.output)
    
    tape = (
      local.curr_1393.code == "+"
        ? [for i, b in local.iter_1392.tape : (i == local.iter_1392.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1393.code == "-"
        ? [for i, b in local.iter_1392.tape : (i == local.iter_1392.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1393.code == ","
        ? [for i, b in local.iter_1392.tape : (i == local.iter_1392.tape_ptr ? local.ascii_lookup[local.curr_1393.input] : b)]
        : local.iter_1392.tape)

    tape_ptr = (
      local.curr_1393.code == "<"
        ? local.iter_1392.tape_ptr == 0 ? length(local.iter_1392.tape) - 1 : local.iter_1392.tape_ptr - 1 :
      local.curr_1393.code == ">"
        ? local.iter_1392.tape_ptr == length(local.iter_1392.tape) - 1 ? 0 : local.iter_1392.tape_ptr + 1
        : local.iter_1392.tape_ptr)

    code_ptr = 1 + (
      local.curr_1393.code == "["
        ? local.iter_1392.tape[local.iter_1392.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1392.code_ptr)] : local.iter_1392.code_ptr :
      local.curr_1393.code == "]"
        ? local.iter_1392.tape[local.iter_1392.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1392.code_ptr)] : local.iter_1392.code_ptr
        : local.iter_1392.code_ptr)

    steps_taken = 1 + local.iter_1392.steps_taken
  }
}

locals {
  end_of_code_1394 = try(local.iter_1393.code_ptr >= length(var.code), true)

  curr_1394 = local.end_of_code_1394 ? null : {
    code = substr(var.code, local.iter_1393.code_ptr, 1)
    input = substr(var.code, local.iter_1393.code_ptr, 1) == "," ? substr(local.iter_1393.input, 0, 1) : null
  }

  iter_1394 = local.end_of_code_1394 ? local.iter_1393 : {
    input = (local.curr_1394.code == ","
      ? substr(local.iter_1393.input, 1, -1)
      : local.iter_1393.input)

    output = (local.curr_1394.code == "."
      ? "${local.iter_1393.output}${jsondecode(format("\"\\u%04x\"", local.iter_1393.tape[local.iter_1393.tape_ptr]))}"
      : local.iter_1393.output)
    
    tape = (
      local.curr_1394.code == "+"
        ? [for i, b in local.iter_1393.tape : (i == local.iter_1393.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1394.code == "-"
        ? [for i, b in local.iter_1393.tape : (i == local.iter_1393.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1394.code == ","
        ? [for i, b in local.iter_1393.tape : (i == local.iter_1393.tape_ptr ? local.ascii_lookup[local.curr_1394.input] : b)]
        : local.iter_1393.tape)

    tape_ptr = (
      local.curr_1394.code == "<"
        ? local.iter_1393.tape_ptr == 0 ? length(local.iter_1393.tape) - 1 : local.iter_1393.tape_ptr - 1 :
      local.curr_1394.code == ">"
        ? local.iter_1393.tape_ptr == length(local.iter_1393.tape) - 1 ? 0 : local.iter_1393.tape_ptr + 1
        : local.iter_1393.tape_ptr)

    code_ptr = 1 + (
      local.curr_1394.code == "["
        ? local.iter_1393.tape[local.iter_1393.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1393.code_ptr)] : local.iter_1393.code_ptr :
      local.curr_1394.code == "]"
        ? local.iter_1393.tape[local.iter_1393.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1393.code_ptr)] : local.iter_1393.code_ptr
        : local.iter_1393.code_ptr)

    steps_taken = 1 + local.iter_1393.steps_taken
  }
}

locals {
  end_of_code_1395 = try(local.iter_1394.code_ptr >= length(var.code), true)

  curr_1395 = local.end_of_code_1395 ? null : {
    code = substr(var.code, local.iter_1394.code_ptr, 1)
    input = substr(var.code, local.iter_1394.code_ptr, 1) == "," ? substr(local.iter_1394.input, 0, 1) : null
  }

  iter_1395 = local.end_of_code_1395 ? local.iter_1394 : {
    input = (local.curr_1395.code == ","
      ? substr(local.iter_1394.input, 1, -1)
      : local.iter_1394.input)

    output = (local.curr_1395.code == "."
      ? "${local.iter_1394.output}${jsondecode(format("\"\\u%04x\"", local.iter_1394.tape[local.iter_1394.tape_ptr]))}"
      : local.iter_1394.output)
    
    tape = (
      local.curr_1395.code == "+"
        ? [for i, b in local.iter_1394.tape : (i == local.iter_1394.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1395.code == "-"
        ? [for i, b in local.iter_1394.tape : (i == local.iter_1394.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1395.code == ","
        ? [for i, b in local.iter_1394.tape : (i == local.iter_1394.tape_ptr ? local.ascii_lookup[local.curr_1395.input] : b)]
        : local.iter_1394.tape)

    tape_ptr = (
      local.curr_1395.code == "<"
        ? local.iter_1394.tape_ptr == 0 ? length(local.iter_1394.tape) - 1 : local.iter_1394.tape_ptr - 1 :
      local.curr_1395.code == ">"
        ? local.iter_1394.tape_ptr == length(local.iter_1394.tape) - 1 ? 0 : local.iter_1394.tape_ptr + 1
        : local.iter_1394.tape_ptr)

    code_ptr = 1 + (
      local.curr_1395.code == "["
        ? local.iter_1394.tape[local.iter_1394.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1394.code_ptr)] : local.iter_1394.code_ptr :
      local.curr_1395.code == "]"
        ? local.iter_1394.tape[local.iter_1394.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1394.code_ptr)] : local.iter_1394.code_ptr
        : local.iter_1394.code_ptr)

    steps_taken = 1 + local.iter_1394.steps_taken
  }
}

locals {
  end_of_code_1396 = try(local.iter_1395.code_ptr >= length(var.code), true)

  curr_1396 = local.end_of_code_1396 ? null : {
    code = substr(var.code, local.iter_1395.code_ptr, 1)
    input = substr(var.code, local.iter_1395.code_ptr, 1) == "," ? substr(local.iter_1395.input, 0, 1) : null
  }

  iter_1396 = local.end_of_code_1396 ? local.iter_1395 : {
    input = (local.curr_1396.code == ","
      ? substr(local.iter_1395.input, 1, -1)
      : local.iter_1395.input)

    output = (local.curr_1396.code == "."
      ? "${local.iter_1395.output}${jsondecode(format("\"\\u%04x\"", local.iter_1395.tape[local.iter_1395.tape_ptr]))}"
      : local.iter_1395.output)
    
    tape = (
      local.curr_1396.code == "+"
        ? [for i, b in local.iter_1395.tape : (i == local.iter_1395.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1396.code == "-"
        ? [for i, b in local.iter_1395.tape : (i == local.iter_1395.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1396.code == ","
        ? [for i, b in local.iter_1395.tape : (i == local.iter_1395.tape_ptr ? local.ascii_lookup[local.curr_1396.input] : b)]
        : local.iter_1395.tape)

    tape_ptr = (
      local.curr_1396.code == "<"
        ? local.iter_1395.tape_ptr == 0 ? length(local.iter_1395.tape) - 1 : local.iter_1395.tape_ptr - 1 :
      local.curr_1396.code == ">"
        ? local.iter_1395.tape_ptr == length(local.iter_1395.tape) - 1 ? 0 : local.iter_1395.tape_ptr + 1
        : local.iter_1395.tape_ptr)

    code_ptr = 1 + (
      local.curr_1396.code == "["
        ? local.iter_1395.tape[local.iter_1395.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1395.code_ptr)] : local.iter_1395.code_ptr :
      local.curr_1396.code == "]"
        ? local.iter_1395.tape[local.iter_1395.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1395.code_ptr)] : local.iter_1395.code_ptr
        : local.iter_1395.code_ptr)

    steps_taken = 1 + local.iter_1395.steps_taken
  }
}

locals {
  end_of_code_1397 = try(local.iter_1396.code_ptr >= length(var.code), true)

  curr_1397 = local.end_of_code_1397 ? null : {
    code = substr(var.code, local.iter_1396.code_ptr, 1)
    input = substr(var.code, local.iter_1396.code_ptr, 1) == "," ? substr(local.iter_1396.input, 0, 1) : null
  }

  iter_1397 = local.end_of_code_1397 ? local.iter_1396 : {
    input = (local.curr_1397.code == ","
      ? substr(local.iter_1396.input, 1, -1)
      : local.iter_1396.input)

    output = (local.curr_1397.code == "."
      ? "${local.iter_1396.output}${jsondecode(format("\"\\u%04x\"", local.iter_1396.tape[local.iter_1396.tape_ptr]))}"
      : local.iter_1396.output)
    
    tape = (
      local.curr_1397.code == "+"
        ? [for i, b in local.iter_1396.tape : (i == local.iter_1396.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1397.code == "-"
        ? [for i, b in local.iter_1396.tape : (i == local.iter_1396.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1397.code == ","
        ? [for i, b in local.iter_1396.tape : (i == local.iter_1396.tape_ptr ? local.ascii_lookup[local.curr_1397.input] : b)]
        : local.iter_1396.tape)

    tape_ptr = (
      local.curr_1397.code == "<"
        ? local.iter_1396.tape_ptr == 0 ? length(local.iter_1396.tape) - 1 : local.iter_1396.tape_ptr - 1 :
      local.curr_1397.code == ">"
        ? local.iter_1396.tape_ptr == length(local.iter_1396.tape) - 1 ? 0 : local.iter_1396.tape_ptr + 1
        : local.iter_1396.tape_ptr)

    code_ptr = 1 + (
      local.curr_1397.code == "["
        ? local.iter_1396.tape[local.iter_1396.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1396.code_ptr)] : local.iter_1396.code_ptr :
      local.curr_1397.code == "]"
        ? local.iter_1396.tape[local.iter_1396.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1396.code_ptr)] : local.iter_1396.code_ptr
        : local.iter_1396.code_ptr)

    steps_taken = 1 + local.iter_1396.steps_taken
  }
}

locals {
  end_of_code_1398 = try(local.iter_1397.code_ptr >= length(var.code), true)

  curr_1398 = local.end_of_code_1398 ? null : {
    code = substr(var.code, local.iter_1397.code_ptr, 1)
    input = substr(var.code, local.iter_1397.code_ptr, 1) == "," ? substr(local.iter_1397.input, 0, 1) : null
  }

  iter_1398 = local.end_of_code_1398 ? local.iter_1397 : {
    input = (local.curr_1398.code == ","
      ? substr(local.iter_1397.input, 1, -1)
      : local.iter_1397.input)

    output = (local.curr_1398.code == "."
      ? "${local.iter_1397.output}${jsondecode(format("\"\\u%04x\"", local.iter_1397.tape[local.iter_1397.tape_ptr]))}"
      : local.iter_1397.output)
    
    tape = (
      local.curr_1398.code == "+"
        ? [for i, b in local.iter_1397.tape : (i == local.iter_1397.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1398.code == "-"
        ? [for i, b in local.iter_1397.tape : (i == local.iter_1397.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1398.code == ","
        ? [for i, b in local.iter_1397.tape : (i == local.iter_1397.tape_ptr ? local.ascii_lookup[local.curr_1398.input] : b)]
        : local.iter_1397.tape)

    tape_ptr = (
      local.curr_1398.code == "<"
        ? local.iter_1397.tape_ptr == 0 ? length(local.iter_1397.tape) - 1 : local.iter_1397.tape_ptr - 1 :
      local.curr_1398.code == ">"
        ? local.iter_1397.tape_ptr == length(local.iter_1397.tape) - 1 ? 0 : local.iter_1397.tape_ptr + 1
        : local.iter_1397.tape_ptr)

    code_ptr = 1 + (
      local.curr_1398.code == "["
        ? local.iter_1397.tape[local.iter_1397.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1397.code_ptr)] : local.iter_1397.code_ptr :
      local.curr_1398.code == "]"
        ? local.iter_1397.tape[local.iter_1397.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1397.code_ptr)] : local.iter_1397.code_ptr
        : local.iter_1397.code_ptr)

    steps_taken = 1 + local.iter_1397.steps_taken
  }
}

locals {
  end_of_code_1399 = try(local.iter_1398.code_ptr >= length(var.code), true)

  curr_1399 = local.end_of_code_1399 ? null : {
    code = substr(var.code, local.iter_1398.code_ptr, 1)
    input = substr(var.code, local.iter_1398.code_ptr, 1) == "," ? substr(local.iter_1398.input, 0, 1) : null
  }

  iter_1399 = local.end_of_code_1399 ? local.iter_1398 : {
    input = (local.curr_1399.code == ","
      ? substr(local.iter_1398.input, 1, -1)
      : local.iter_1398.input)

    output = (local.curr_1399.code == "."
      ? "${local.iter_1398.output}${jsondecode(format("\"\\u%04x\"", local.iter_1398.tape[local.iter_1398.tape_ptr]))}"
      : local.iter_1398.output)
    
    tape = (
      local.curr_1399.code == "+"
        ? [for i, b in local.iter_1398.tape : (i == local.iter_1398.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1399.code == "-"
        ? [for i, b in local.iter_1398.tape : (i == local.iter_1398.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1399.code == ","
        ? [for i, b in local.iter_1398.tape : (i == local.iter_1398.tape_ptr ? local.ascii_lookup[local.curr_1399.input] : b)]
        : local.iter_1398.tape)

    tape_ptr = (
      local.curr_1399.code == "<"
        ? local.iter_1398.tape_ptr == 0 ? length(local.iter_1398.tape) - 1 : local.iter_1398.tape_ptr - 1 :
      local.curr_1399.code == ">"
        ? local.iter_1398.tape_ptr == length(local.iter_1398.tape) - 1 ? 0 : local.iter_1398.tape_ptr + 1
        : local.iter_1398.tape_ptr)

    code_ptr = 1 + (
      local.curr_1399.code == "["
        ? local.iter_1398.tape[local.iter_1398.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1398.code_ptr)] : local.iter_1398.code_ptr :
      local.curr_1399.code == "]"
        ? local.iter_1398.tape[local.iter_1398.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1398.code_ptr)] : local.iter_1398.code_ptr
        : local.iter_1398.code_ptr)

    steps_taken = 1 + local.iter_1398.steps_taken
  }
}

locals {
  end_of_code_1400 = try(local.iter_1399.code_ptr >= length(var.code), true)

  curr_1400 = local.end_of_code_1400 ? null : {
    code = substr(var.code, local.iter_1399.code_ptr, 1)
    input = substr(var.code, local.iter_1399.code_ptr, 1) == "," ? substr(local.iter_1399.input, 0, 1) : null
  }

  iter_1400 = local.end_of_code_1400 ? local.iter_1399 : {
    input = (local.curr_1400.code == ","
      ? substr(local.iter_1399.input, 1, -1)
      : local.iter_1399.input)

    output = (local.curr_1400.code == "."
      ? "${local.iter_1399.output}${jsondecode(format("\"\\u%04x\"", local.iter_1399.tape[local.iter_1399.tape_ptr]))}"
      : local.iter_1399.output)
    
    tape = (
      local.curr_1400.code == "+"
        ? [for i, b in local.iter_1399.tape : (i == local.iter_1399.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1400.code == "-"
        ? [for i, b in local.iter_1399.tape : (i == local.iter_1399.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1400.code == ","
        ? [for i, b in local.iter_1399.tape : (i == local.iter_1399.tape_ptr ? local.ascii_lookup[local.curr_1400.input] : b)]
        : local.iter_1399.tape)

    tape_ptr = (
      local.curr_1400.code == "<"
        ? local.iter_1399.tape_ptr == 0 ? length(local.iter_1399.tape) - 1 : local.iter_1399.tape_ptr - 1 :
      local.curr_1400.code == ">"
        ? local.iter_1399.tape_ptr == length(local.iter_1399.tape) - 1 ? 0 : local.iter_1399.tape_ptr + 1
        : local.iter_1399.tape_ptr)

    code_ptr = 1 + (
      local.curr_1400.code == "["
        ? local.iter_1399.tape[local.iter_1399.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1399.code_ptr)] : local.iter_1399.code_ptr :
      local.curr_1400.code == "]"
        ? local.iter_1399.tape[local.iter_1399.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1399.code_ptr)] : local.iter_1399.code_ptr
        : local.iter_1399.code_ptr)

    steps_taken = 1 + local.iter_1399.steps_taken
  }
}

locals {
  end_of_code_1401 = try(local.iter_1400.code_ptr >= length(var.code), true)

  curr_1401 = local.end_of_code_1401 ? null : {
    code = substr(var.code, local.iter_1400.code_ptr, 1)
    input = substr(var.code, local.iter_1400.code_ptr, 1) == "," ? substr(local.iter_1400.input, 0, 1) : null
  }

  iter_1401 = local.end_of_code_1401 ? local.iter_1400 : {
    input = (local.curr_1401.code == ","
      ? substr(local.iter_1400.input, 1, -1)
      : local.iter_1400.input)

    output = (local.curr_1401.code == "."
      ? "${local.iter_1400.output}${jsondecode(format("\"\\u%04x\"", local.iter_1400.tape[local.iter_1400.tape_ptr]))}"
      : local.iter_1400.output)
    
    tape = (
      local.curr_1401.code == "+"
        ? [for i, b in local.iter_1400.tape : (i == local.iter_1400.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1401.code == "-"
        ? [for i, b in local.iter_1400.tape : (i == local.iter_1400.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1401.code == ","
        ? [for i, b in local.iter_1400.tape : (i == local.iter_1400.tape_ptr ? local.ascii_lookup[local.curr_1401.input] : b)]
        : local.iter_1400.tape)

    tape_ptr = (
      local.curr_1401.code == "<"
        ? local.iter_1400.tape_ptr == 0 ? length(local.iter_1400.tape) - 1 : local.iter_1400.tape_ptr - 1 :
      local.curr_1401.code == ">"
        ? local.iter_1400.tape_ptr == length(local.iter_1400.tape) - 1 ? 0 : local.iter_1400.tape_ptr + 1
        : local.iter_1400.tape_ptr)

    code_ptr = 1 + (
      local.curr_1401.code == "["
        ? local.iter_1400.tape[local.iter_1400.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1400.code_ptr)] : local.iter_1400.code_ptr :
      local.curr_1401.code == "]"
        ? local.iter_1400.tape[local.iter_1400.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1400.code_ptr)] : local.iter_1400.code_ptr
        : local.iter_1400.code_ptr)

    steps_taken = 1 + local.iter_1400.steps_taken
  }
}

locals {
  end_of_code_1402 = try(local.iter_1401.code_ptr >= length(var.code), true)

  curr_1402 = local.end_of_code_1402 ? null : {
    code = substr(var.code, local.iter_1401.code_ptr, 1)
    input = substr(var.code, local.iter_1401.code_ptr, 1) == "," ? substr(local.iter_1401.input, 0, 1) : null
  }

  iter_1402 = local.end_of_code_1402 ? local.iter_1401 : {
    input = (local.curr_1402.code == ","
      ? substr(local.iter_1401.input, 1, -1)
      : local.iter_1401.input)

    output = (local.curr_1402.code == "."
      ? "${local.iter_1401.output}${jsondecode(format("\"\\u%04x\"", local.iter_1401.tape[local.iter_1401.tape_ptr]))}"
      : local.iter_1401.output)
    
    tape = (
      local.curr_1402.code == "+"
        ? [for i, b in local.iter_1401.tape : (i == local.iter_1401.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1402.code == "-"
        ? [for i, b in local.iter_1401.tape : (i == local.iter_1401.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1402.code == ","
        ? [for i, b in local.iter_1401.tape : (i == local.iter_1401.tape_ptr ? local.ascii_lookup[local.curr_1402.input] : b)]
        : local.iter_1401.tape)

    tape_ptr = (
      local.curr_1402.code == "<"
        ? local.iter_1401.tape_ptr == 0 ? length(local.iter_1401.tape) - 1 : local.iter_1401.tape_ptr - 1 :
      local.curr_1402.code == ">"
        ? local.iter_1401.tape_ptr == length(local.iter_1401.tape) - 1 ? 0 : local.iter_1401.tape_ptr + 1
        : local.iter_1401.tape_ptr)

    code_ptr = 1 + (
      local.curr_1402.code == "["
        ? local.iter_1401.tape[local.iter_1401.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1401.code_ptr)] : local.iter_1401.code_ptr :
      local.curr_1402.code == "]"
        ? local.iter_1401.tape[local.iter_1401.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1401.code_ptr)] : local.iter_1401.code_ptr
        : local.iter_1401.code_ptr)

    steps_taken = 1 + local.iter_1401.steps_taken
  }
}

locals {
  end_of_code_1403 = try(local.iter_1402.code_ptr >= length(var.code), true)

  curr_1403 = local.end_of_code_1403 ? null : {
    code = substr(var.code, local.iter_1402.code_ptr, 1)
    input = substr(var.code, local.iter_1402.code_ptr, 1) == "," ? substr(local.iter_1402.input, 0, 1) : null
  }

  iter_1403 = local.end_of_code_1403 ? local.iter_1402 : {
    input = (local.curr_1403.code == ","
      ? substr(local.iter_1402.input, 1, -1)
      : local.iter_1402.input)

    output = (local.curr_1403.code == "."
      ? "${local.iter_1402.output}${jsondecode(format("\"\\u%04x\"", local.iter_1402.tape[local.iter_1402.tape_ptr]))}"
      : local.iter_1402.output)
    
    tape = (
      local.curr_1403.code == "+"
        ? [for i, b in local.iter_1402.tape : (i == local.iter_1402.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1403.code == "-"
        ? [for i, b in local.iter_1402.tape : (i == local.iter_1402.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1403.code == ","
        ? [for i, b in local.iter_1402.tape : (i == local.iter_1402.tape_ptr ? local.ascii_lookup[local.curr_1403.input] : b)]
        : local.iter_1402.tape)

    tape_ptr = (
      local.curr_1403.code == "<"
        ? local.iter_1402.tape_ptr == 0 ? length(local.iter_1402.tape) - 1 : local.iter_1402.tape_ptr - 1 :
      local.curr_1403.code == ">"
        ? local.iter_1402.tape_ptr == length(local.iter_1402.tape) - 1 ? 0 : local.iter_1402.tape_ptr + 1
        : local.iter_1402.tape_ptr)

    code_ptr = 1 + (
      local.curr_1403.code == "["
        ? local.iter_1402.tape[local.iter_1402.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1402.code_ptr)] : local.iter_1402.code_ptr :
      local.curr_1403.code == "]"
        ? local.iter_1402.tape[local.iter_1402.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1402.code_ptr)] : local.iter_1402.code_ptr
        : local.iter_1402.code_ptr)

    steps_taken = 1 + local.iter_1402.steps_taken
  }
}

locals {
  end_of_code_1404 = try(local.iter_1403.code_ptr >= length(var.code), true)

  curr_1404 = local.end_of_code_1404 ? null : {
    code = substr(var.code, local.iter_1403.code_ptr, 1)
    input = substr(var.code, local.iter_1403.code_ptr, 1) == "," ? substr(local.iter_1403.input, 0, 1) : null
  }

  iter_1404 = local.end_of_code_1404 ? local.iter_1403 : {
    input = (local.curr_1404.code == ","
      ? substr(local.iter_1403.input, 1, -1)
      : local.iter_1403.input)

    output = (local.curr_1404.code == "."
      ? "${local.iter_1403.output}${jsondecode(format("\"\\u%04x\"", local.iter_1403.tape[local.iter_1403.tape_ptr]))}"
      : local.iter_1403.output)
    
    tape = (
      local.curr_1404.code == "+"
        ? [for i, b in local.iter_1403.tape : (i == local.iter_1403.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1404.code == "-"
        ? [for i, b in local.iter_1403.tape : (i == local.iter_1403.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1404.code == ","
        ? [for i, b in local.iter_1403.tape : (i == local.iter_1403.tape_ptr ? local.ascii_lookup[local.curr_1404.input] : b)]
        : local.iter_1403.tape)

    tape_ptr = (
      local.curr_1404.code == "<"
        ? local.iter_1403.tape_ptr == 0 ? length(local.iter_1403.tape) - 1 : local.iter_1403.tape_ptr - 1 :
      local.curr_1404.code == ">"
        ? local.iter_1403.tape_ptr == length(local.iter_1403.tape) - 1 ? 0 : local.iter_1403.tape_ptr + 1
        : local.iter_1403.tape_ptr)

    code_ptr = 1 + (
      local.curr_1404.code == "["
        ? local.iter_1403.tape[local.iter_1403.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1403.code_ptr)] : local.iter_1403.code_ptr :
      local.curr_1404.code == "]"
        ? local.iter_1403.tape[local.iter_1403.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1403.code_ptr)] : local.iter_1403.code_ptr
        : local.iter_1403.code_ptr)

    steps_taken = 1 + local.iter_1403.steps_taken
  }
}

locals {
  end_of_code_1405 = try(local.iter_1404.code_ptr >= length(var.code), true)

  curr_1405 = local.end_of_code_1405 ? null : {
    code = substr(var.code, local.iter_1404.code_ptr, 1)
    input = substr(var.code, local.iter_1404.code_ptr, 1) == "," ? substr(local.iter_1404.input, 0, 1) : null
  }

  iter_1405 = local.end_of_code_1405 ? local.iter_1404 : {
    input = (local.curr_1405.code == ","
      ? substr(local.iter_1404.input, 1, -1)
      : local.iter_1404.input)

    output = (local.curr_1405.code == "."
      ? "${local.iter_1404.output}${jsondecode(format("\"\\u%04x\"", local.iter_1404.tape[local.iter_1404.tape_ptr]))}"
      : local.iter_1404.output)
    
    tape = (
      local.curr_1405.code == "+"
        ? [for i, b in local.iter_1404.tape : (i == local.iter_1404.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1405.code == "-"
        ? [for i, b in local.iter_1404.tape : (i == local.iter_1404.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1405.code == ","
        ? [for i, b in local.iter_1404.tape : (i == local.iter_1404.tape_ptr ? local.ascii_lookup[local.curr_1405.input] : b)]
        : local.iter_1404.tape)

    tape_ptr = (
      local.curr_1405.code == "<"
        ? local.iter_1404.tape_ptr == 0 ? length(local.iter_1404.tape) - 1 : local.iter_1404.tape_ptr - 1 :
      local.curr_1405.code == ">"
        ? local.iter_1404.tape_ptr == length(local.iter_1404.tape) - 1 ? 0 : local.iter_1404.tape_ptr + 1
        : local.iter_1404.tape_ptr)

    code_ptr = 1 + (
      local.curr_1405.code == "["
        ? local.iter_1404.tape[local.iter_1404.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1404.code_ptr)] : local.iter_1404.code_ptr :
      local.curr_1405.code == "]"
        ? local.iter_1404.tape[local.iter_1404.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1404.code_ptr)] : local.iter_1404.code_ptr
        : local.iter_1404.code_ptr)

    steps_taken = 1 + local.iter_1404.steps_taken
  }
}

locals {
  end_of_code_1406 = try(local.iter_1405.code_ptr >= length(var.code), true)

  curr_1406 = local.end_of_code_1406 ? null : {
    code = substr(var.code, local.iter_1405.code_ptr, 1)
    input = substr(var.code, local.iter_1405.code_ptr, 1) == "," ? substr(local.iter_1405.input, 0, 1) : null
  }

  iter_1406 = local.end_of_code_1406 ? local.iter_1405 : {
    input = (local.curr_1406.code == ","
      ? substr(local.iter_1405.input, 1, -1)
      : local.iter_1405.input)

    output = (local.curr_1406.code == "."
      ? "${local.iter_1405.output}${jsondecode(format("\"\\u%04x\"", local.iter_1405.tape[local.iter_1405.tape_ptr]))}"
      : local.iter_1405.output)
    
    tape = (
      local.curr_1406.code == "+"
        ? [for i, b in local.iter_1405.tape : (i == local.iter_1405.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1406.code == "-"
        ? [for i, b in local.iter_1405.tape : (i == local.iter_1405.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1406.code == ","
        ? [for i, b in local.iter_1405.tape : (i == local.iter_1405.tape_ptr ? local.ascii_lookup[local.curr_1406.input] : b)]
        : local.iter_1405.tape)

    tape_ptr = (
      local.curr_1406.code == "<"
        ? local.iter_1405.tape_ptr == 0 ? length(local.iter_1405.tape) - 1 : local.iter_1405.tape_ptr - 1 :
      local.curr_1406.code == ">"
        ? local.iter_1405.tape_ptr == length(local.iter_1405.tape) - 1 ? 0 : local.iter_1405.tape_ptr + 1
        : local.iter_1405.tape_ptr)

    code_ptr = 1 + (
      local.curr_1406.code == "["
        ? local.iter_1405.tape[local.iter_1405.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1405.code_ptr)] : local.iter_1405.code_ptr :
      local.curr_1406.code == "]"
        ? local.iter_1405.tape[local.iter_1405.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1405.code_ptr)] : local.iter_1405.code_ptr
        : local.iter_1405.code_ptr)

    steps_taken = 1 + local.iter_1405.steps_taken
  }
}

locals {
  end_of_code_1407 = try(local.iter_1406.code_ptr >= length(var.code), true)

  curr_1407 = local.end_of_code_1407 ? null : {
    code = substr(var.code, local.iter_1406.code_ptr, 1)
    input = substr(var.code, local.iter_1406.code_ptr, 1) == "," ? substr(local.iter_1406.input, 0, 1) : null
  }

  iter_1407 = local.end_of_code_1407 ? local.iter_1406 : {
    input = (local.curr_1407.code == ","
      ? substr(local.iter_1406.input, 1, -1)
      : local.iter_1406.input)

    output = (local.curr_1407.code == "."
      ? "${local.iter_1406.output}${jsondecode(format("\"\\u%04x\"", local.iter_1406.tape[local.iter_1406.tape_ptr]))}"
      : local.iter_1406.output)
    
    tape = (
      local.curr_1407.code == "+"
        ? [for i, b in local.iter_1406.tape : (i == local.iter_1406.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1407.code == "-"
        ? [for i, b in local.iter_1406.tape : (i == local.iter_1406.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1407.code == ","
        ? [for i, b in local.iter_1406.tape : (i == local.iter_1406.tape_ptr ? local.ascii_lookup[local.curr_1407.input] : b)]
        : local.iter_1406.tape)

    tape_ptr = (
      local.curr_1407.code == "<"
        ? local.iter_1406.tape_ptr == 0 ? length(local.iter_1406.tape) - 1 : local.iter_1406.tape_ptr - 1 :
      local.curr_1407.code == ">"
        ? local.iter_1406.tape_ptr == length(local.iter_1406.tape) - 1 ? 0 : local.iter_1406.tape_ptr + 1
        : local.iter_1406.tape_ptr)

    code_ptr = 1 + (
      local.curr_1407.code == "["
        ? local.iter_1406.tape[local.iter_1406.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1406.code_ptr)] : local.iter_1406.code_ptr :
      local.curr_1407.code == "]"
        ? local.iter_1406.tape[local.iter_1406.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1406.code_ptr)] : local.iter_1406.code_ptr
        : local.iter_1406.code_ptr)

    steps_taken = 1 + local.iter_1406.steps_taken
  }
}

locals {
  end_of_code_1408 = try(local.iter_1407.code_ptr >= length(var.code), true)

  curr_1408 = local.end_of_code_1408 ? null : {
    code = substr(var.code, local.iter_1407.code_ptr, 1)
    input = substr(var.code, local.iter_1407.code_ptr, 1) == "," ? substr(local.iter_1407.input, 0, 1) : null
  }

  iter_1408 = local.end_of_code_1408 ? local.iter_1407 : {
    input = (local.curr_1408.code == ","
      ? substr(local.iter_1407.input, 1, -1)
      : local.iter_1407.input)

    output = (local.curr_1408.code == "."
      ? "${local.iter_1407.output}${jsondecode(format("\"\\u%04x\"", local.iter_1407.tape[local.iter_1407.tape_ptr]))}"
      : local.iter_1407.output)
    
    tape = (
      local.curr_1408.code == "+"
        ? [for i, b in local.iter_1407.tape : (i == local.iter_1407.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1408.code == "-"
        ? [for i, b in local.iter_1407.tape : (i == local.iter_1407.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1408.code == ","
        ? [for i, b in local.iter_1407.tape : (i == local.iter_1407.tape_ptr ? local.ascii_lookup[local.curr_1408.input] : b)]
        : local.iter_1407.tape)

    tape_ptr = (
      local.curr_1408.code == "<"
        ? local.iter_1407.tape_ptr == 0 ? length(local.iter_1407.tape) - 1 : local.iter_1407.tape_ptr - 1 :
      local.curr_1408.code == ">"
        ? local.iter_1407.tape_ptr == length(local.iter_1407.tape) - 1 ? 0 : local.iter_1407.tape_ptr + 1
        : local.iter_1407.tape_ptr)

    code_ptr = 1 + (
      local.curr_1408.code == "["
        ? local.iter_1407.tape[local.iter_1407.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1407.code_ptr)] : local.iter_1407.code_ptr :
      local.curr_1408.code == "]"
        ? local.iter_1407.tape[local.iter_1407.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1407.code_ptr)] : local.iter_1407.code_ptr
        : local.iter_1407.code_ptr)

    steps_taken = 1 + local.iter_1407.steps_taken
  }
}

locals {
  end_of_code_1409 = try(local.iter_1408.code_ptr >= length(var.code), true)

  curr_1409 = local.end_of_code_1409 ? null : {
    code = substr(var.code, local.iter_1408.code_ptr, 1)
    input = substr(var.code, local.iter_1408.code_ptr, 1) == "," ? substr(local.iter_1408.input, 0, 1) : null
  }

  iter_1409 = local.end_of_code_1409 ? local.iter_1408 : {
    input = (local.curr_1409.code == ","
      ? substr(local.iter_1408.input, 1, -1)
      : local.iter_1408.input)

    output = (local.curr_1409.code == "."
      ? "${local.iter_1408.output}${jsondecode(format("\"\\u%04x\"", local.iter_1408.tape[local.iter_1408.tape_ptr]))}"
      : local.iter_1408.output)
    
    tape = (
      local.curr_1409.code == "+"
        ? [for i, b in local.iter_1408.tape : (i == local.iter_1408.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1409.code == "-"
        ? [for i, b in local.iter_1408.tape : (i == local.iter_1408.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1409.code == ","
        ? [for i, b in local.iter_1408.tape : (i == local.iter_1408.tape_ptr ? local.ascii_lookup[local.curr_1409.input] : b)]
        : local.iter_1408.tape)

    tape_ptr = (
      local.curr_1409.code == "<"
        ? local.iter_1408.tape_ptr == 0 ? length(local.iter_1408.tape) - 1 : local.iter_1408.tape_ptr - 1 :
      local.curr_1409.code == ">"
        ? local.iter_1408.tape_ptr == length(local.iter_1408.tape) - 1 ? 0 : local.iter_1408.tape_ptr + 1
        : local.iter_1408.tape_ptr)

    code_ptr = 1 + (
      local.curr_1409.code == "["
        ? local.iter_1408.tape[local.iter_1408.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1408.code_ptr)] : local.iter_1408.code_ptr :
      local.curr_1409.code == "]"
        ? local.iter_1408.tape[local.iter_1408.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1408.code_ptr)] : local.iter_1408.code_ptr
        : local.iter_1408.code_ptr)

    steps_taken = 1 + local.iter_1408.steps_taken
  }
}

locals {
  end_of_code_1410 = try(local.iter_1409.code_ptr >= length(var.code), true)

  curr_1410 = local.end_of_code_1410 ? null : {
    code = substr(var.code, local.iter_1409.code_ptr, 1)
    input = substr(var.code, local.iter_1409.code_ptr, 1) == "," ? substr(local.iter_1409.input, 0, 1) : null
  }

  iter_1410 = local.end_of_code_1410 ? local.iter_1409 : {
    input = (local.curr_1410.code == ","
      ? substr(local.iter_1409.input, 1, -1)
      : local.iter_1409.input)

    output = (local.curr_1410.code == "."
      ? "${local.iter_1409.output}${jsondecode(format("\"\\u%04x\"", local.iter_1409.tape[local.iter_1409.tape_ptr]))}"
      : local.iter_1409.output)
    
    tape = (
      local.curr_1410.code == "+"
        ? [for i, b in local.iter_1409.tape : (i == local.iter_1409.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1410.code == "-"
        ? [for i, b in local.iter_1409.tape : (i == local.iter_1409.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1410.code == ","
        ? [for i, b in local.iter_1409.tape : (i == local.iter_1409.tape_ptr ? local.ascii_lookup[local.curr_1410.input] : b)]
        : local.iter_1409.tape)

    tape_ptr = (
      local.curr_1410.code == "<"
        ? local.iter_1409.tape_ptr == 0 ? length(local.iter_1409.tape) - 1 : local.iter_1409.tape_ptr - 1 :
      local.curr_1410.code == ">"
        ? local.iter_1409.tape_ptr == length(local.iter_1409.tape) - 1 ? 0 : local.iter_1409.tape_ptr + 1
        : local.iter_1409.tape_ptr)

    code_ptr = 1 + (
      local.curr_1410.code == "["
        ? local.iter_1409.tape[local.iter_1409.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1409.code_ptr)] : local.iter_1409.code_ptr :
      local.curr_1410.code == "]"
        ? local.iter_1409.tape[local.iter_1409.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1409.code_ptr)] : local.iter_1409.code_ptr
        : local.iter_1409.code_ptr)

    steps_taken = 1 + local.iter_1409.steps_taken
  }
}

locals {
  end_of_code_1411 = try(local.iter_1410.code_ptr >= length(var.code), true)

  curr_1411 = local.end_of_code_1411 ? null : {
    code = substr(var.code, local.iter_1410.code_ptr, 1)
    input = substr(var.code, local.iter_1410.code_ptr, 1) == "," ? substr(local.iter_1410.input, 0, 1) : null
  }

  iter_1411 = local.end_of_code_1411 ? local.iter_1410 : {
    input = (local.curr_1411.code == ","
      ? substr(local.iter_1410.input, 1, -1)
      : local.iter_1410.input)

    output = (local.curr_1411.code == "."
      ? "${local.iter_1410.output}${jsondecode(format("\"\\u%04x\"", local.iter_1410.tape[local.iter_1410.tape_ptr]))}"
      : local.iter_1410.output)
    
    tape = (
      local.curr_1411.code == "+"
        ? [for i, b in local.iter_1410.tape : (i == local.iter_1410.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1411.code == "-"
        ? [for i, b in local.iter_1410.tape : (i == local.iter_1410.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1411.code == ","
        ? [for i, b in local.iter_1410.tape : (i == local.iter_1410.tape_ptr ? local.ascii_lookup[local.curr_1411.input] : b)]
        : local.iter_1410.tape)

    tape_ptr = (
      local.curr_1411.code == "<"
        ? local.iter_1410.tape_ptr == 0 ? length(local.iter_1410.tape) - 1 : local.iter_1410.tape_ptr - 1 :
      local.curr_1411.code == ">"
        ? local.iter_1410.tape_ptr == length(local.iter_1410.tape) - 1 ? 0 : local.iter_1410.tape_ptr + 1
        : local.iter_1410.tape_ptr)

    code_ptr = 1 + (
      local.curr_1411.code == "["
        ? local.iter_1410.tape[local.iter_1410.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1410.code_ptr)] : local.iter_1410.code_ptr :
      local.curr_1411.code == "]"
        ? local.iter_1410.tape[local.iter_1410.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1410.code_ptr)] : local.iter_1410.code_ptr
        : local.iter_1410.code_ptr)

    steps_taken = 1 + local.iter_1410.steps_taken
  }
}

locals {
  end_of_code_1412 = try(local.iter_1411.code_ptr >= length(var.code), true)

  curr_1412 = local.end_of_code_1412 ? null : {
    code = substr(var.code, local.iter_1411.code_ptr, 1)
    input = substr(var.code, local.iter_1411.code_ptr, 1) == "," ? substr(local.iter_1411.input, 0, 1) : null
  }

  iter_1412 = local.end_of_code_1412 ? local.iter_1411 : {
    input = (local.curr_1412.code == ","
      ? substr(local.iter_1411.input, 1, -1)
      : local.iter_1411.input)

    output = (local.curr_1412.code == "."
      ? "${local.iter_1411.output}${jsondecode(format("\"\\u%04x\"", local.iter_1411.tape[local.iter_1411.tape_ptr]))}"
      : local.iter_1411.output)
    
    tape = (
      local.curr_1412.code == "+"
        ? [for i, b in local.iter_1411.tape : (i == local.iter_1411.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1412.code == "-"
        ? [for i, b in local.iter_1411.tape : (i == local.iter_1411.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1412.code == ","
        ? [for i, b in local.iter_1411.tape : (i == local.iter_1411.tape_ptr ? local.ascii_lookup[local.curr_1412.input] : b)]
        : local.iter_1411.tape)

    tape_ptr = (
      local.curr_1412.code == "<"
        ? local.iter_1411.tape_ptr == 0 ? length(local.iter_1411.tape) - 1 : local.iter_1411.tape_ptr - 1 :
      local.curr_1412.code == ">"
        ? local.iter_1411.tape_ptr == length(local.iter_1411.tape) - 1 ? 0 : local.iter_1411.tape_ptr + 1
        : local.iter_1411.tape_ptr)

    code_ptr = 1 + (
      local.curr_1412.code == "["
        ? local.iter_1411.tape[local.iter_1411.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1411.code_ptr)] : local.iter_1411.code_ptr :
      local.curr_1412.code == "]"
        ? local.iter_1411.tape[local.iter_1411.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1411.code_ptr)] : local.iter_1411.code_ptr
        : local.iter_1411.code_ptr)

    steps_taken = 1 + local.iter_1411.steps_taken
  }
}

locals {
  end_of_code_1413 = try(local.iter_1412.code_ptr >= length(var.code), true)

  curr_1413 = local.end_of_code_1413 ? null : {
    code = substr(var.code, local.iter_1412.code_ptr, 1)
    input = substr(var.code, local.iter_1412.code_ptr, 1) == "," ? substr(local.iter_1412.input, 0, 1) : null
  }

  iter_1413 = local.end_of_code_1413 ? local.iter_1412 : {
    input = (local.curr_1413.code == ","
      ? substr(local.iter_1412.input, 1, -1)
      : local.iter_1412.input)

    output = (local.curr_1413.code == "."
      ? "${local.iter_1412.output}${jsondecode(format("\"\\u%04x\"", local.iter_1412.tape[local.iter_1412.tape_ptr]))}"
      : local.iter_1412.output)
    
    tape = (
      local.curr_1413.code == "+"
        ? [for i, b in local.iter_1412.tape : (i == local.iter_1412.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1413.code == "-"
        ? [for i, b in local.iter_1412.tape : (i == local.iter_1412.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1413.code == ","
        ? [for i, b in local.iter_1412.tape : (i == local.iter_1412.tape_ptr ? local.ascii_lookup[local.curr_1413.input] : b)]
        : local.iter_1412.tape)

    tape_ptr = (
      local.curr_1413.code == "<"
        ? local.iter_1412.tape_ptr == 0 ? length(local.iter_1412.tape) - 1 : local.iter_1412.tape_ptr - 1 :
      local.curr_1413.code == ">"
        ? local.iter_1412.tape_ptr == length(local.iter_1412.tape) - 1 ? 0 : local.iter_1412.tape_ptr + 1
        : local.iter_1412.tape_ptr)

    code_ptr = 1 + (
      local.curr_1413.code == "["
        ? local.iter_1412.tape[local.iter_1412.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1412.code_ptr)] : local.iter_1412.code_ptr :
      local.curr_1413.code == "]"
        ? local.iter_1412.tape[local.iter_1412.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1412.code_ptr)] : local.iter_1412.code_ptr
        : local.iter_1412.code_ptr)

    steps_taken = 1 + local.iter_1412.steps_taken
  }
}

locals {
  end_of_code_1414 = try(local.iter_1413.code_ptr >= length(var.code), true)

  curr_1414 = local.end_of_code_1414 ? null : {
    code = substr(var.code, local.iter_1413.code_ptr, 1)
    input = substr(var.code, local.iter_1413.code_ptr, 1) == "," ? substr(local.iter_1413.input, 0, 1) : null
  }

  iter_1414 = local.end_of_code_1414 ? local.iter_1413 : {
    input = (local.curr_1414.code == ","
      ? substr(local.iter_1413.input, 1, -1)
      : local.iter_1413.input)

    output = (local.curr_1414.code == "."
      ? "${local.iter_1413.output}${jsondecode(format("\"\\u%04x\"", local.iter_1413.tape[local.iter_1413.tape_ptr]))}"
      : local.iter_1413.output)
    
    tape = (
      local.curr_1414.code == "+"
        ? [for i, b in local.iter_1413.tape : (i == local.iter_1413.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1414.code == "-"
        ? [for i, b in local.iter_1413.tape : (i == local.iter_1413.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1414.code == ","
        ? [for i, b in local.iter_1413.tape : (i == local.iter_1413.tape_ptr ? local.ascii_lookup[local.curr_1414.input] : b)]
        : local.iter_1413.tape)

    tape_ptr = (
      local.curr_1414.code == "<"
        ? local.iter_1413.tape_ptr == 0 ? length(local.iter_1413.tape) - 1 : local.iter_1413.tape_ptr - 1 :
      local.curr_1414.code == ">"
        ? local.iter_1413.tape_ptr == length(local.iter_1413.tape) - 1 ? 0 : local.iter_1413.tape_ptr + 1
        : local.iter_1413.tape_ptr)

    code_ptr = 1 + (
      local.curr_1414.code == "["
        ? local.iter_1413.tape[local.iter_1413.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1413.code_ptr)] : local.iter_1413.code_ptr :
      local.curr_1414.code == "]"
        ? local.iter_1413.tape[local.iter_1413.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1413.code_ptr)] : local.iter_1413.code_ptr
        : local.iter_1413.code_ptr)

    steps_taken = 1 + local.iter_1413.steps_taken
  }
}

locals {
  end_of_code_1415 = try(local.iter_1414.code_ptr >= length(var.code), true)

  curr_1415 = local.end_of_code_1415 ? null : {
    code = substr(var.code, local.iter_1414.code_ptr, 1)
    input = substr(var.code, local.iter_1414.code_ptr, 1) == "," ? substr(local.iter_1414.input, 0, 1) : null
  }

  iter_1415 = local.end_of_code_1415 ? local.iter_1414 : {
    input = (local.curr_1415.code == ","
      ? substr(local.iter_1414.input, 1, -1)
      : local.iter_1414.input)

    output = (local.curr_1415.code == "."
      ? "${local.iter_1414.output}${jsondecode(format("\"\\u%04x\"", local.iter_1414.tape[local.iter_1414.tape_ptr]))}"
      : local.iter_1414.output)
    
    tape = (
      local.curr_1415.code == "+"
        ? [for i, b in local.iter_1414.tape : (i == local.iter_1414.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1415.code == "-"
        ? [for i, b in local.iter_1414.tape : (i == local.iter_1414.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1415.code == ","
        ? [for i, b in local.iter_1414.tape : (i == local.iter_1414.tape_ptr ? local.ascii_lookup[local.curr_1415.input] : b)]
        : local.iter_1414.tape)

    tape_ptr = (
      local.curr_1415.code == "<"
        ? local.iter_1414.tape_ptr == 0 ? length(local.iter_1414.tape) - 1 : local.iter_1414.tape_ptr - 1 :
      local.curr_1415.code == ">"
        ? local.iter_1414.tape_ptr == length(local.iter_1414.tape) - 1 ? 0 : local.iter_1414.tape_ptr + 1
        : local.iter_1414.tape_ptr)

    code_ptr = 1 + (
      local.curr_1415.code == "["
        ? local.iter_1414.tape[local.iter_1414.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1414.code_ptr)] : local.iter_1414.code_ptr :
      local.curr_1415.code == "]"
        ? local.iter_1414.tape[local.iter_1414.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1414.code_ptr)] : local.iter_1414.code_ptr
        : local.iter_1414.code_ptr)

    steps_taken = 1 + local.iter_1414.steps_taken
  }
}

locals {
  end_of_code_1416 = try(local.iter_1415.code_ptr >= length(var.code), true)

  curr_1416 = local.end_of_code_1416 ? null : {
    code = substr(var.code, local.iter_1415.code_ptr, 1)
    input = substr(var.code, local.iter_1415.code_ptr, 1) == "," ? substr(local.iter_1415.input, 0, 1) : null
  }

  iter_1416 = local.end_of_code_1416 ? local.iter_1415 : {
    input = (local.curr_1416.code == ","
      ? substr(local.iter_1415.input, 1, -1)
      : local.iter_1415.input)

    output = (local.curr_1416.code == "."
      ? "${local.iter_1415.output}${jsondecode(format("\"\\u%04x\"", local.iter_1415.tape[local.iter_1415.tape_ptr]))}"
      : local.iter_1415.output)
    
    tape = (
      local.curr_1416.code == "+"
        ? [for i, b in local.iter_1415.tape : (i == local.iter_1415.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1416.code == "-"
        ? [for i, b in local.iter_1415.tape : (i == local.iter_1415.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1416.code == ","
        ? [for i, b in local.iter_1415.tape : (i == local.iter_1415.tape_ptr ? local.ascii_lookup[local.curr_1416.input] : b)]
        : local.iter_1415.tape)

    tape_ptr = (
      local.curr_1416.code == "<"
        ? local.iter_1415.tape_ptr == 0 ? length(local.iter_1415.tape) - 1 : local.iter_1415.tape_ptr - 1 :
      local.curr_1416.code == ">"
        ? local.iter_1415.tape_ptr == length(local.iter_1415.tape) - 1 ? 0 : local.iter_1415.tape_ptr + 1
        : local.iter_1415.tape_ptr)

    code_ptr = 1 + (
      local.curr_1416.code == "["
        ? local.iter_1415.tape[local.iter_1415.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1415.code_ptr)] : local.iter_1415.code_ptr :
      local.curr_1416.code == "]"
        ? local.iter_1415.tape[local.iter_1415.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1415.code_ptr)] : local.iter_1415.code_ptr
        : local.iter_1415.code_ptr)

    steps_taken = 1 + local.iter_1415.steps_taken
  }
}

locals {
  end_of_code_1417 = try(local.iter_1416.code_ptr >= length(var.code), true)

  curr_1417 = local.end_of_code_1417 ? null : {
    code = substr(var.code, local.iter_1416.code_ptr, 1)
    input = substr(var.code, local.iter_1416.code_ptr, 1) == "," ? substr(local.iter_1416.input, 0, 1) : null
  }

  iter_1417 = local.end_of_code_1417 ? local.iter_1416 : {
    input = (local.curr_1417.code == ","
      ? substr(local.iter_1416.input, 1, -1)
      : local.iter_1416.input)

    output = (local.curr_1417.code == "."
      ? "${local.iter_1416.output}${jsondecode(format("\"\\u%04x\"", local.iter_1416.tape[local.iter_1416.tape_ptr]))}"
      : local.iter_1416.output)
    
    tape = (
      local.curr_1417.code == "+"
        ? [for i, b in local.iter_1416.tape : (i == local.iter_1416.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1417.code == "-"
        ? [for i, b in local.iter_1416.tape : (i == local.iter_1416.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1417.code == ","
        ? [for i, b in local.iter_1416.tape : (i == local.iter_1416.tape_ptr ? local.ascii_lookup[local.curr_1417.input] : b)]
        : local.iter_1416.tape)

    tape_ptr = (
      local.curr_1417.code == "<"
        ? local.iter_1416.tape_ptr == 0 ? length(local.iter_1416.tape) - 1 : local.iter_1416.tape_ptr - 1 :
      local.curr_1417.code == ">"
        ? local.iter_1416.tape_ptr == length(local.iter_1416.tape) - 1 ? 0 : local.iter_1416.tape_ptr + 1
        : local.iter_1416.tape_ptr)

    code_ptr = 1 + (
      local.curr_1417.code == "["
        ? local.iter_1416.tape[local.iter_1416.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1416.code_ptr)] : local.iter_1416.code_ptr :
      local.curr_1417.code == "]"
        ? local.iter_1416.tape[local.iter_1416.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1416.code_ptr)] : local.iter_1416.code_ptr
        : local.iter_1416.code_ptr)

    steps_taken = 1 + local.iter_1416.steps_taken
  }
}

locals {
  end_of_code_1418 = try(local.iter_1417.code_ptr >= length(var.code), true)

  curr_1418 = local.end_of_code_1418 ? null : {
    code = substr(var.code, local.iter_1417.code_ptr, 1)
    input = substr(var.code, local.iter_1417.code_ptr, 1) == "," ? substr(local.iter_1417.input, 0, 1) : null
  }

  iter_1418 = local.end_of_code_1418 ? local.iter_1417 : {
    input = (local.curr_1418.code == ","
      ? substr(local.iter_1417.input, 1, -1)
      : local.iter_1417.input)

    output = (local.curr_1418.code == "."
      ? "${local.iter_1417.output}${jsondecode(format("\"\\u%04x\"", local.iter_1417.tape[local.iter_1417.tape_ptr]))}"
      : local.iter_1417.output)
    
    tape = (
      local.curr_1418.code == "+"
        ? [for i, b in local.iter_1417.tape : (i == local.iter_1417.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1418.code == "-"
        ? [for i, b in local.iter_1417.tape : (i == local.iter_1417.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1418.code == ","
        ? [for i, b in local.iter_1417.tape : (i == local.iter_1417.tape_ptr ? local.ascii_lookup[local.curr_1418.input] : b)]
        : local.iter_1417.tape)

    tape_ptr = (
      local.curr_1418.code == "<"
        ? local.iter_1417.tape_ptr == 0 ? length(local.iter_1417.tape) - 1 : local.iter_1417.tape_ptr - 1 :
      local.curr_1418.code == ">"
        ? local.iter_1417.tape_ptr == length(local.iter_1417.tape) - 1 ? 0 : local.iter_1417.tape_ptr + 1
        : local.iter_1417.tape_ptr)

    code_ptr = 1 + (
      local.curr_1418.code == "["
        ? local.iter_1417.tape[local.iter_1417.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1417.code_ptr)] : local.iter_1417.code_ptr :
      local.curr_1418.code == "]"
        ? local.iter_1417.tape[local.iter_1417.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1417.code_ptr)] : local.iter_1417.code_ptr
        : local.iter_1417.code_ptr)

    steps_taken = 1 + local.iter_1417.steps_taken
  }
}

locals {
  end_of_code_1419 = try(local.iter_1418.code_ptr >= length(var.code), true)

  curr_1419 = local.end_of_code_1419 ? null : {
    code = substr(var.code, local.iter_1418.code_ptr, 1)
    input = substr(var.code, local.iter_1418.code_ptr, 1) == "," ? substr(local.iter_1418.input, 0, 1) : null
  }

  iter_1419 = local.end_of_code_1419 ? local.iter_1418 : {
    input = (local.curr_1419.code == ","
      ? substr(local.iter_1418.input, 1, -1)
      : local.iter_1418.input)

    output = (local.curr_1419.code == "."
      ? "${local.iter_1418.output}${jsondecode(format("\"\\u%04x\"", local.iter_1418.tape[local.iter_1418.tape_ptr]))}"
      : local.iter_1418.output)
    
    tape = (
      local.curr_1419.code == "+"
        ? [for i, b in local.iter_1418.tape : (i == local.iter_1418.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1419.code == "-"
        ? [for i, b in local.iter_1418.tape : (i == local.iter_1418.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1419.code == ","
        ? [for i, b in local.iter_1418.tape : (i == local.iter_1418.tape_ptr ? local.ascii_lookup[local.curr_1419.input] : b)]
        : local.iter_1418.tape)

    tape_ptr = (
      local.curr_1419.code == "<"
        ? local.iter_1418.tape_ptr == 0 ? length(local.iter_1418.tape) - 1 : local.iter_1418.tape_ptr - 1 :
      local.curr_1419.code == ">"
        ? local.iter_1418.tape_ptr == length(local.iter_1418.tape) - 1 ? 0 : local.iter_1418.tape_ptr + 1
        : local.iter_1418.tape_ptr)

    code_ptr = 1 + (
      local.curr_1419.code == "["
        ? local.iter_1418.tape[local.iter_1418.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1418.code_ptr)] : local.iter_1418.code_ptr :
      local.curr_1419.code == "]"
        ? local.iter_1418.tape[local.iter_1418.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1418.code_ptr)] : local.iter_1418.code_ptr
        : local.iter_1418.code_ptr)

    steps_taken = 1 + local.iter_1418.steps_taken
  }
}

locals {
  end_of_code_1420 = try(local.iter_1419.code_ptr >= length(var.code), true)

  curr_1420 = local.end_of_code_1420 ? null : {
    code = substr(var.code, local.iter_1419.code_ptr, 1)
    input = substr(var.code, local.iter_1419.code_ptr, 1) == "," ? substr(local.iter_1419.input, 0, 1) : null
  }

  iter_1420 = local.end_of_code_1420 ? local.iter_1419 : {
    input = (local.curr_1420.code == ","
      ? substr(local.iter_1419.input, 1, -1)
      : local.iter_1419.input)

    output = (local.curr_1420.code == "."
      ? "${local.iter_1419.output}${jsondecode(format("\"\\u%04x\"", local.iter_1419.tape[local.iter_1419.tape_ptr]))}"
      : local.iter_1419.output)
    
    tape = (
      local.curr_1420.code == "+"
        ? [for i, b in local.iter_1419.tape : (i == local.iter_1419.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1420.code == "-"
        ? [for i, b in local.iter_1419.tape : (i == local.iter_1419.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1420.code == ","
        ? [for i, b in local.iter_1419.tape : (i == local.iter_1419.tape_ptr ? local.ascii_lookup[local.curr_1420.input] : b)]
        : local.iter_1419.tape)

    tape_ptr = (
      local.curr_1420.code == "<"
        ? local.iter_1419.tape_ptr == 0 ? length(local.iter_1419.tape) - 1 : local.iter_1419.tape_ptr - 1 :
      local.curr_1420.code == ">"
        ? local.iter_1419.tape_ptr == length(local.iter_1419.tape) - 1 ? 0 : local.iter_1419.tape_ptr + 1
        : local.iter_1419.tape_ptr)

    code_ptr = 1 + (
      local.curr_1420.code == "["
        ? local.iter_1419.tape[local.iter_1419.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1419.code_ptr)] : local.iter_1419.code_ptr :
      local.curr_1420.code == "]"
        ? local.iter_1419.tape[local.iter_1419.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1419.code_ptr)] : local.iter_1419.code_ptr
        : local.iter_1419.code_ptr)

    steps_taken = 1 + local.iter_1419.steps_taken
  }
}

locals {
  end_of_code_1421 = try(local.iter_1420.code_ptr >= length(var.code), true)

  curr_1421 = local.end_of_code_1421 ? null : {
    code = substr(var.code, local.iter_1420.code_ptr, 1)
    input = substr(var.code, local.iter_1420.code_ptr, 1) == "," ? substr(local.iter_1420.input, 0, 1) : null
  }

  iter_1421 = local.end_of_code_1421 ? local.iter_1420 : {
    input = (local.curr_1421.code == ","
      ? substr(local.iter_1420.input, 1, -1)
      : local.iter_1420.input)

    output = (local.curr_1421.code == "."
      ? "${local.iter_1420.output}${jsondecode(format("\"\\u%04x\"", local.iter_1420.tape[local.iter_1420.tape_ptr]))}"
      : local.iter_1420.output)
    
    tape = (
      local.curr_1421.code == "+"
        ? [for i, b in local.iter_1420.tape : (i == local.iter_1420.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1421.code == "-"
        ? [for i, b in local.iter_1420.tape : (i == local.iter_1420.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1421.code == ","
        ? [for i, b in local.iter_1420.tape : (i == local.iter_1420.tape_ptr ? local.ascii_lookup[local.curr_1421.input] : b)]
        : local.iter_1420.tape)

    tape_ptr = (
      local.curr_1421.code == "<"
        ? local.iter_1420.tape_ptr == 0 ? length(local.iter_1420.tape) - 1 : local.iter_1420.tape_ptr - 1 :
      local.curr_1421.code == ">"
        ? local.iter_1420.tape_ptr == length(local.iter_1420.tape) - 1 ? 0 : local.iter_1420.tape_ptr + 1
        : local.iter_1420.tape_ptr)

    code_ptr = 1 + (
      local.curr_1421.code == "["
        ? local.iter_1420.tape[local.iter_1420.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1420.code_ptr)] : local.iter_1420.code_ptr :
      local.curr_1421.code == "]"
        ? local.iter_1420.tape[local.iter_1420.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1420.code_ptr)] : local.iter_1420.code_ptr
        : local.iter_1420.code_ptr)

    steps_taken = 1 + local.iter_1420.steps_taken
  }
}

locals {
  end_of_code_1422 = try(local.iter_1421.code_ptr >= length(var.code), true)

  curr_1422 = local.end_of_code_1422 ? null : {
    code = substr(var.code, local.iter_1421.code_ptr, 1)
    input = substr(var.code, local.iter_1421.code_ptr, 1) == "," ? substr(local.iter_1421.input, 0, 1) : null
  }

  iter_1422 = local.end_of_code_1422 ? local.iter_1421 : {
    input = (local.curr_1422.code == ","
      ? substr(local.iter_1421.input, 1, -1)
      : local.iter_1421.input)

    output = (local.curr_1422.code == "."
      ? "${local.iter_1421.output}${jsondecode(format("\"\\u%04x\"", local.iter_1421.tape[local.iter_1421.tape_ptr]))}"
      : local.iter_1421.output)
    
    tape = (
      local.curr_1422.code == "+"
        ? [for i, b in local.iter_1421.tape : (i == local.iter_1421.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1422.code == "-"
        ? [for i, b in local.iter_1421.tape : (i == local.iter_1421.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1422.code == ","
        ? [for i, b in local.iter_1421.tape : (i == local.iter_1421.tape_ptr ? local.ascii_lookup[local.curr_1422.input] : b)]
        : local.iter_1421.tape)

    tape_ptr = (
      local.curr_1422.code == "<"
        ? local.iter_1421.tape_ptr == 0 ? length(local.iter_1421.tape) - 1 : local.iter_1421.tape_ptr - 1 :
      local.curr_1422.code == ">"
        ? local.iter_1421.tape_ptr == length(local.iter_1421.tape) - 1 ? 0 : local.iter_1421.tape_ptr + 1
        : local.iter_1421.tape_ptr)

    code_ptr = 1 + (
      local.curr_1422.code == "["
        ? local.iter_1421.tape[local.iter_1421.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1421.code_ptr)] : local.iter_1421.code_ptr :
      local.curr_1422.code == "]"
        ? local.iter_1421.tape[local.iter_1421.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1421.code_ptr)] : local.iter_1421.code_ptr
        : local.iter_1421.code_ptr)

    steps_taken = 1 + local.iter_1421.steps_taken
  }
}

locals {
  end_of_code_1423 = try(local.iter_1422.code_ptr >= length(var.code), true)

  curr_1423 = local.end_of_code_1423 ? null : {
    code = substr(var.code, local.iter_1422.code_ptr, 1)
    input = substr(var.code, local.iter_1422.code_ptr, 1) == "," ? substr(local.iter_1422.input, 0, 1) : null
  }

  iter_1423 = local.end_of_code_1423 ? local.iter_1422 : {
    input = (local.curr_1423.code == ","
      ? substr(local.iter_1422.input, 1, -1)
      : local.iter_1422.input)

    output = (local.curr_1423.code == "."
      ? "${local.iter_1422.output}${jsondecode(format("\"\\u%04x\"", local.iter_1422.tape[local.iter_1422.tape_ptr]))}"
      : local.iter_1422.output)
    
    tape = (
      local.curr_1423.code == "+"
        ? [for i, b in local.iter_1422.tape : (i == local.iter_1422.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1423.code == "-"
        ? [for i, b in local.iter_1422.tape : (i == local.iter_1422.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1423.code == ","
        ? [for i, b in local.iter_1422.tape : (i == local.iter_1422.tape_ptr ? local.ascii_lookup[local.curr_1423.input] : b)]
        : local.iter_1422.tape)

    tape_ptr = (
      local.curr_1423.code == "<"
        ? local.iter_1422.tape_ptr == 0 ? length(local.iter_1422.tape) - 1 : local.iter_1422.tape_ptr - 1 :
      local.curr_1423.code == ">"
        ? local.iter_1422.tape_ptr == length(local.iter_1422.tape) - 1 ? 0 : local.iter_1422.tape_ptr + 1
        : local.iter_1422.tape_ptr)

    code_ptr = 1 + (
      local.curr_1423.code == "["
        ? local.iter_1422.tape[local.iter_1422.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1422.code_ptr)] : local.iter_1422.code_ptr :
      local.curr_1423.code == "]"
        ? local.iter_1422.tape[local.iter_1422.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1422.code_ptr)] : local.iter_1422.code_ptr
        : local.iter_1422.code_ptr)

    steps_taken = 1 + local.iter_1422.steps_taken
  }
}

locals {
  end_of_code_1424 = try(local.iter_1423.code_ptr >= length(var.code), true)

  curr_1424 = local.end_of_code_1424 ? null : {
    code = substr(var.code, local.iter_1423.code_ptr, 1)
    input = substr(var.code, local.iter_1423.code_ptr, 1) == "," ? substr(local.iter_1423.input, 0, 1) : null
  }

  iter_1424 = local.end_of_code_1424 ? local.iter_1423 : {
    input = (local.curr_1424.code == ","
      ? substr(local.iter_1423.input, 1, -1)
      : local.iter_1423.input)

    output = (local.curr_1424.code == "."
      ? "${local.iter_1423.output}${jsondecode(format("\"\\u%04x\"", local.iter_1423.tape[local.iter_1423.tape_ptr]))}"
      : local.iter_1423.output)
    
    tape = (
      local.curr_1424.code == "+"
        ? [for i, b in local.iter_1423.tape : (i == local.iter_1423.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1424.code == "-"
        ? [for i, b in local.iter_1423.tape : (i == local.iter_1423.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1424.code == ","
        ? [for i, b in local.iter_1423.tape : (i == local.iter_1423.tape_ptr ? local.ascii_lookup[local.curr_1424.input] : b)]
        : local.iter_1423.tape)

    tape_ptr = (
      local.curr_1424.code == "<"
        ? local.iter_1423.tape_ptr == 0 ? length(local.iter_1423.tape) - 1 : local.iter_1423.tape_ptr - 1 :
      local.curr_1424.code == ">"
        ? local.iter_1423.tape_ptr == length(local.iter_1423.tape) - 1 ? 0 : local.iter_1423.tape_ptr + 1
        : local.iter_1423.tape_ptr)

    code_ptr = 1 + (
      local.curr_1424.code == "["
        ? local.iter_1423.tape[local.iter_1423.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1423.code_ptr)] : local.iter_1423.code_ptr :
      local.curr_1424.code == "]"
        ? local.iter_1423.tape[local.iter_1423.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1423.code_ptr)] : local.iter_1423.code_ptr
        : local.iter_1423.code_ptr)

    steps_taken = 1 + local.iter_1423.steps_taken
  }
}

locals {
  end_of_code_1425 = try(local.iter_1424.code_ptr >= length(var.code), true)

  curr_1425 = local.end_of_code_1425 ? null : {
    code = substr(var.code, local.iter_1424.code_ptr, 1)
    input = substr(var.code, local.iter_1424.code_ptr, 1) == "," ? substr(local.iter_1424.input, 0, 1) : null
  }

  iter_1425 = local.end_of_code_1425 ? local.iter_1424 : {
    input = (local.curr_1425.code == ","
      ? substr(local.iter_1424.input, 1, -1)
      : local.iter_1424.input)

    output = (local.curr_1425.code == "."
      ? "${local.iter_1424.output}${jsondecode(format("\"\\u%04x\"", local.iter_1424.tape[local.iter_1424.tape_ptr]))}"
      : local.iter_1424.output)
    
    tape = (
      local.curr_1425.code == "+"
        ? [for i, b in local.iter_1424.tape : (i == local.iter_1424.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1425.code == "-"
        ? [for i, b in local.iter_1424.tape : (i == local.iter_1424.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1425.code == ","
        ? [for i, b in local.iter_1424.tape : (i == local.iter_1424.tape_ptr ? local.ascii_lookup[local.curr_1425.input] : b)]
        : local.iter_1424.tape)

    tape_ptr = (
      local.curr_1425.code == "<"
        ? local.iter_1424.tape_ptr == 0 ? length(local.iter_1424.tape) - 1 : local.iter_1424.tape_ptr - 1 :
      local.curr_1425.code == ">"
        ? local.iter_1424.tape_ptr == length(local.iter_1424.tape) - 1 ? 0 : local.iter_1424.tape_ptr + 1
        : local.iter_1424.tape_ptr)

    code_ptr = 1 + (
      local.curr_1425.code == "["
        ? local.iter_1424.tape[local.iter_1424.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1424.code_ptr)] : local.iter_1424.code_ptr :
      local.curr_1425.code == "]"
        ? local.iter_1424.tape[local.iter_1424.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1424.code_ptr)] : local.iter_1424.code_ptr
        : local.iter_1424.code_ptr)

    steps_taken = 1 + local.iter_1424.steps_taken
  }
}

locals {
  end_of_code_1426 = try(local.iter_1425.code_ptr >= length(var.code), true)

  curr_1426 = local.end_of_code_1426 ? null : {
    code = substr(var.code, local.iter_1425.code_ptr, 1)
    input = substr(var.code, local.iter_1425.code_ptr, 1) == "," ? substr(local.iter_1425.input, 0, 1) : null
  }

  iter_1426 = local.end_of_code_1426 ? local.iter_1425 : {
    input = (local.curr_1426.code == ","
      ? substr(local.iter_1425.input, 1, -1)
      : local.iter_1425.input)

    output = (local.curr_1426.code == "."
      ? "${local.iter_1425.output}${jsondecode(format("\"\\u%04x\"", local.iter_1425.tape[local.iter_1425.tape_ptr]))}"
      : local.iter_1425.output)
    
    tape = (
      local.curr_1426.code == "+"
        ? [for i, b in local.iter_1425.tape : (i == local.iter_1425.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1426.code == "-"
        ? [for i, b in local.iter_1425.tape : (i == local.iter_1425.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1426.code == ","
        ? [for i, b in local.iter_1425.tape : (i == local.iter_1425.tape_ptr ? local.ascii_lookup[local.curr_1426.input] : b)]
        : local.iter_1425.tape)

    tape_ptr = (
      local.curr_1426.code == "<"
        ? local.iter_1425.tape_ptr == 0 ? length(local.iter_1425.tape) - 1 : local.iter_1425.tape_ptr - 1 :
      local.curr_1426.code == ">"
        ? local.iter_1425.tape_ptr == length(local.iter_1425.tape) - 1 ? 0 : local.iter_1425.tape_ptr + 1
        : local.iter_1425.tape_ptr)

    code_ptr = 1 + (
      local.curr_1426.code == "["
        ? local.iter_1425.tape[local.iter_1425.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1425.code_ptr)] : local.iter_1425.code_ptr :
      local.curr_1426.code == "]"
        ? local.iter_1425.tape[local.iter_1425.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1425.code_ptr)] : local.iter_1425.code_ptr
        : local.iter_1425.code_ptr)

    steps_taken = 1 + local.iter_1425.steps_taken
  }
}

locals {
  end_of_code_1427 = try(local.iter_1426.code_ptr >= length(var.code), true)

  curr_1427 = local.end_of_code_1427 ? null : {
    code = substr(var.code, local.iter_1426.code_ptr, 1)
    input = substr(var.code, local.iter_1426.code_ptr, 1) == "," ? substr(local.iter_1426.input, 0, 1) : null
  }

  iter_1427 = local.end_of_code_1427 ? local.iter_1426 : {
    input = (local.curr_1427.code == ","
      ? substr(local.iter_1426.input, 1, -1)
      : local.iter_1426.input)

    output = (local.curr_1427.code == "."
      ? "${local.iter_1426.output}${jsondecode(format("\"\\u%04x\"", local.iter_1426.tape[local.iter_1426.tape_ptr]))}"
      : local.iter_1426.output)
    
    tape = (
      local.curr_1427.code == "+"
        ? [for i, b in local.iter_1426.tape : (i == local.iter_1426.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1427.code == "-"
        ? [for i, b in local.iter_1426.tape : (i == local.iter_1426.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1427.code == ","
        ? [for i, b in local.iter_1426.tape : (i == local.iter_1426.tape_ptr ? local.ascii_lookup[local.curr_1427.input] : b)]
        : local.iter_1426.tape)

    tape_ptr = (
      local.curr_1427.code == "<"
        ? local.iter_1426.tape_ptr == 0 ? length(local.iter_1426.tape) - 1 : local.iter_1426.tape_ptr - 1 :
      local.curr_1427.code == ">"
        ? local.iter_1426.tape_ptr == length(local.iter_1426.tape) - 1 ? 0 : local.iter_1426.tape_ptr + 1
        : local.iter_1426.tape_ptr)

    code_ptr = 1 + (
      local.curr_1427.code == "["
        ? local.iter_1426.tape[local.iter_1426.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1426.code_ptr)] : local.iter_1426.code_ptr :
      local.curr_1427.code == "]"
        ? local.iter_1426.tape[local.iter_1426.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1426.code_ptr)] : local.iter_1426.code_ptr
        : local.iter_1426.code_ptr)

    steps_taken = 1 + local.iter_1426.steps_taken
  }
}

locals {
  end_of_code_1428 = try(local.iter_1427.code_ptr >= length(var.code), true)

  curr_1428 = local.end_of_code_1428 ? null : {
    code = substr(var.code, local.iter_1427.code_ptr, 1)
    input = substr(var.code, local.iter_1427.code_ptr, 1) == "," ? substr(local.iter_1427.input, 0, 1) : null
  }

  iter_1428 = local.end_of_code_1428 ? local.iter_1427 : {
    input = (local.curr_1428.code == ","
      ? substr(local.iter_1427.input, 1, -1)
      : local.iter_1427.input)

    output = (local.curr_1428.code == "."
      ? "${local.iter_1427.output}${jsondecode(format("\"\\u%04x\"", local.iter_1427.tape[local.iter_1427.tape_ptr]))}"
      : local.iter_1427.output)
    
    tape = (
      local.curr_1428.code == "+"
        ? [for i, b in local.iter_1427.tape : (i == local.iter_1427.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1428.code == "-"
        ? [for i, b in local.iter_1427.tape : (i == local.iter_1427.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1428.code == ","
        ? [for i, b in local.iter_1427.tape : (i == local.iter_1427.tape_ptr ? local.ascii_lookup[local.curr_1428.input] : b)]
        : local.iter_1427.tape)

    tape_ptr = (
      local.curr_1428.code == "<"
        ? local.iter_1427.tape_ptr == 0 ? length(local.iter_1427.tape) - 1 : local.iter_1427.tape_ptr - 1 :
      local.curr_1428.code == ">"
        ? local.iter_1427.tape_ptr == length(local.iter_1427.tape) - 1 ? 0 : local.iter_1427.tape_ptr + 1
        : local.iter_1427.tape_ptr)

    code_ptr = 1 + (
      local.curr_1428.code == "["
        ? local.iter_1427.tape[local.iter_1427.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1427.code_ptr)] : local.iter_1427.code_ptr :
      local.curr_1428.code == "]"
        ? local.iter_1427.tape[local.iter_1427.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1427.code_ptr)] : local.iter_1427.code_ptr
        : local.iter_1427.code_ptr)

    steps_taken = 1 + local.iter_1427.steps_taken
  }
}

locals {
  end_of_code_1429 = try(local.iter_1428.code_ptr >= length(var.code), true)

  curr_1429 = local.end_of_code_1429 ? null : {
    code = substr(var.code, local.iter_1428.code_ptr, 1)
    input = substr(var.code, local.iter_1428.code_ptr, 1) == "," ? substr(local.iter_1428.input, 0, 1) : null
  }

  iter_1429 = local.end_of_code_1429 ? local.iter_1428 : {
    input = (local.curr_1429.code == ","
      ? substr(local.iter_1428.input, 1, -1)
      : local.iter_1428.input)

    output = (local.curr_1429.code == "."
      ? "${local.iter_1428.output}${jsondecode(format("\"\\u%04x\"", local.iter_1428.tape[local.iter_1428.tape_ptr]))}"
      : local.iter_1428.output)
    
    tape = (
      local.curr_1429.code == "+"
        ? [for i, b in local.iter_1428.tape : (i == local.iter_1428.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1429.code == "-"
        ? [for i, b in local.iter_1428.tape : (i == local.iter_1428.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1429.code == ","
        ? [for i, b in local.iter_1428.tape : (i == local.iter_1428.tape_ptr ? local.ascii_lookup[local.curr_1429.input] : b)]
        : local.iter_1428.tape)

    tape_ptr = (
      local.curr_1429.code == "<"
        ? local.iter_1428.tape_ptr == 0 ? length(local.iter_1428.tape) - 1 : local.iter_1428.tape_ptr - 1 :
      local.curr_1429.code == ">"
        ? local.iter_1428.tape_ptr == length(local.iter_1428.tape) - 1 ? 0 : local.iter_1428.tape_ptr + 1
        : local.iter_1428.tape_ptr)

    code_ptr = 1 + (
      local.curr_1429.code == "["
        ? local.iter_1428.tape[local.iter_1428.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1428.code_ptr)] : local.iter_1428.code_ptr :
      local.curr_1429.code == "]"
        ? local.iter_1428.tape[local.iter_1428.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1428.code_ptr)] : local.iter_1428.code_ptr
        : local.iter_1428.code_ptr)

    steps_taken = 1 + local.iter_1428.steps_taken
  }
}

locals {
  end_of_code_1430 = try(local.iter_1429.code_ptr >= length(var.code), true)

  curr_1430 = local.end_of_code_1430 ? null : {
    code = substr(var.code, local.iter_1429.code_ptr, 1)
    input = substr(var.code, local.iter_1429.code_ptr, 1) == "," ? substr(local.iter_1429.input, 0, 1) : null
  }

  iter_1430 = local.end_of_code_1430 ? local.iter_1429 : {
    input = (local.curr_1430.code == ","
      ? substr(local.iter_1429.input, 1, -1)
      : local.iter_1429.input)

    output = (local.curr_1430.code == "."
      ? "${local.iter_1429.output}${jsondecode(format("\"\\u%04x\"", local.iter_1429.tape[local.iter_1429.tape_ptr]))}"
      : local.iter_1429.output)
    
    tape = (
      local.curr_1430.code == "+"
        ? [for i, b in local.iter_1429.tape : (i == local.iter_1429.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1430.code == "-"
        ? [for i, b in local.iter_1429.tape : (i == local.iter_1429.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1430.code == ","
        ? [for i, b in local.iter_1429.tape : (i == local.iter_1429.tape_ptr ? local.ascii_lookup[local.curr_1430.input] : b)]
        : local.iter_1429.tape)

    tape_ptr = (
      local.curr_1430.code == "<"
        ? local.iter_1429.tape_ptr == 0 ? length(local.iter_1429.tape) - 1 : local.iter_1429.tape_ptr - 1 :
      local.curr_1430.code == ">"
        ? local.iter_1429.tape_ptr == length(local.iter_1429.tape) - 1 ? 0 : local.iter_1429.tape_ptr + 1
        : local.iter_1429.tape_ptr)

    code_ptr = 1 + (
      local.curr_1430.code == "["
        ? local.iter_1429.tape[local.iter_1429.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1429.code_ptr)] : local.iter_1429.code_ptr :
      local.curr_1430.code == "]"
        ? local.iter_1429.tape[local.iter_1429.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1429.code_ptr)] : local.iter_1429.code_ptr
        : local.iter_1429.code_ptr)

    steps_taken = 1 + local.iter_1429.steps_taken
  }
}

locals {
  end_of_code_1431 = try(local.iter_1430.code_ptr >= length(var.code), true)

  curr_1431 = local.end_of_code_1431 ? null : {
    code = substr(var.code, local.iter_1430.code_ptr, 1)
    input = substr(var.code, local.iter_1430.code_ptr, 1) == "," ? substr(local.iter_1430.input, 0, 1) : null
  }

  iter_1431 = local.end_of_code_1431 ? local.iter_1430 : {
    input = (local.curr_1431.code == ","
      ? substr(local.iter_1430.input, 1, -1)
      : local.iter_1430.input)

    output = (local.curr_1431.code == "."
      ? "${local.iter_1430.output}${jsondecode(format("\"\\u%04x\"", local.iter_1430.tape[local.iter_1430.tape_ptr]))}"
      : local.iter_1430.output)
    
    tape = (
      local.curr_1431.code == "+"
        ? [for i, b in local.iter_1430.tape : (i == local.iter_1430.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1431.code == "-"
        ? [for i, b in local.iter_1430.tape : (i == local.iter_1430.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1431.code == ","
        ? [for i, b in local.iter_1430.tape : (i == local.iter_1430.tape_ptr ? local.ascii_lookup[local.curr_1431.input] : b)]
        : local.iter_1430.tape)

    tape_ptr = (
      local.curr_1431.code == "<"
        ? local.iter_1430.tape_ptr == 0 ? length(local.iter_1430.tape) - 1 : local.iter_1430.tape_ptr - 1 :
      local.curr_1431.code == ">"
        ? local.iter_1430.tape_ptr == length(local.iter_1430.tape) - 1 ? 0 : local.iter_1430.tape_ptr + 1
        : local.iter_1430.tape_ptr)

    code_ptr = 1 + (
      local.curr_1431.code == "["
        ? local.iter_1430.tape[local.iter_1430.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1430.code_ptr)] : local.iter_1430.code_ptr :
      local.curr_1431.code == "]"
        ? local.iter_1430.tape[local.iter_1430.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1430.code_ptr)] : local.iter_1430.code_ptr
        : local.iter_1430.code_ptr)

    steps_taken = 1 + local.iter_1430.steps_taken
  }
}

locals {
  end_of_code_1432 = try(local.iter_1431.code_ptr >= length(var.code), true)

  curr_1432 = local.end_of_code_1432 ? null : {
    code = substr(var.code, local.iter_1431.code_ptr, 1)
    input = substr(var.code, local.iter_1431.code_ptr, 1) == "," ? substr(local.iter_1431.input, 0, 1) : null
  }

  iter_1432 = local.end_of_code_1432 ? local.iter_1431 : {
    input = (local.curr_1432.code == ","
      ? substr(local.iter_1431.input, 1, -1)
      : local.iter_1431.input)

    output = (local.curr_1432.code == "."
      ? "${local.iter_1431.output}${jsondecode(format("\"\\u%04x\"", local.iter_1431.tape[local.iter_1431.tape_ptr]))}"
      : local.iter_1431.output)
    
    tape = (
      local.curr_1432.code == "+"
        ? [for i, b in local.iter_1431.tape : (i == local.iter_1431.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1432.code == "-"
        ? [for i, b in local.iter_1431.tape : (i == local.iter_1431.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1432.code == ","
        ? [for i, b in local.iter_1431.tape : (i == local.iter_1431.tape_ptr ? local.ascii_lookup[local.curr_1432.input] : b)]
        : local.iter_1431.tape)

    tape_ptr = (
      local.curr_1432.code == "<"
        ? local.iter_1431.tape_ptr == 0 ? length(local.iter_1431.tape) - 1 : local.iter_1431.tape_ptr - 1 :
      local.curr_1432.code == ">"
        ? local.iter_1431.tape_ptr == length(local.iter_1431.tape) - 1 ? 0 : local.iter_1431.tape_ptr + 1
        : local.iter_1431.tape_ptr)

    code_ptr = 1 + (
      local.curr_1432.code == "["
        ? local.iter_1431.tape[local.iter_1431.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1431.code_ptr)] : local.iter_1431.code_ptr :
      local.curr_1432.code == "]"
        ? local.iter_1431.tape[local.iter_1431.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1431.code_ptr)] : local.iter_1431.code_ptr
        : local.iter_1431.code_ptr)

    steps_taken = 1 + local.iter_1431.steps_taken
  }
}

locals {
  end_of_code_1433 = try(local.iter_1432.code_ptr >= length(var.code), true)

  curr_1433 = local.end_of_code_1433 ? null : {
    code = substr(var.code, local.iter_1432.code_ptr, 1)
    input = substr(var.code, local.iter_1432.code_ptr, 1) == "," ? substr(local.iter_1432.input, 0, 1) : null
  }

  iter_1433 = local.end_of_code_1433 ? local.iter_1432 : {
    input = (local.curr_1433.code == ","
      ? substr(local.iter_1432.input, 1, -1)
      : local.iter_1432.input)

    output = (local.curr_1433.code == "."
      ? "${local.iter_1432.output}${jsondecode(format("\"\\u%04x\"", local.iter_1432.tape[local.iter_1432.tape_ptr]))}"
      : local.iter_1432.output)
    
    tape = (
      local.curr_1433.code == "+"
        ? [for i, b in local.iter_1432.tape : (i == local.iter_1432.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1433.code == "-"
        ? [for i, b in local.iter_1432.tape : (i == local.iter_1432.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1433.code == ","
        ? [for i, b in local.iter_1432.tape : (i == local.iter_1432.tape_ptr ? local.ascii_lookup[local.curr_1433.input] : b)]
        : local.iter_1432.tape)

    tape_ptr = (
      local.curr_1433.code == "<"
        ? local.iter_1432.tape_ptr == 0 ? length(local.iter_1432.tape) - 1 : local.iter_1432.tape_ptr - 1 :
      local.curr_1433.code == ">"
        ? local.iter_1432.tape_ptr == length(local.iter_1432.tape) - 1 ? 0 : local.iter_1432.tape_ptr + 1
        : local.iter_1432.tape_ptr)

    code_ptr = 1 + (
      local.curr_1433.code == "["
        ? local.iter_1432.tape[local.iter_1432.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1432.code_ptr)] : local.iter_1432.code_ptr :
      local.curr_1433.code == "]"
        ? local.iter_1432.tape[local.iter_1432.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1432.code_ptr)] : local.iter_1432.code_ptr
        : local.iter_1432.code_ptr)

    steps_taken = 1 + local.iter_1432.steps_taken
  }
}

locals {
  end_of_code_1434 = try(local.iter_1433.code_ptr >= length(var.code), true)

  curr_1434 = local.end_of_code_1434 ? null : {
    code = substr(var.code, local.iter_1433.code_ptr, 1)
    input = substr(var.code, local.iter_1433.code_ptr, 1) == "," ? substr(local.iter_1433.input, 0, 1) : null
  }

  iter_1434 = local.end_of_code_1434 ? local.iter_1433 : {
    input = (local.curr_1434.code == ","
      ? substr(local.iter_1433.input, 1, -1)
      : local.iter_1433.input)

    output = (local.curr_1434.code == "."
      ? "${local.iter_1433.output}${jsondecode(format("\"\\u%04x\"", local.iter_1433.tape[local.iter_1433.tape_ptr]))}"
      : local.iter_1433.output)
    
    tape = (
      local.curr_1434.code == "+"
        ? [for i, b in local.iter_1433.tape : (i == local.iter_1433.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1434.code == "-"
        ? [for i, b in local.iter_1433.tape : (i == local.iter_1433.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1434.code == ","
        ? [for i, b in local.iter_1433.tape : (i == local.iter_1433.tape_ptr ? local.ascii_lookup[local.curr_1434.input] : b)]
        : local.iter_1433.tape)

    tape_ptr = (
      local.curr_1434.code == "<"
        ? local.iter_1433.tape_ptr == 0 ? length(local.iter_1433.tape) - 1 : local.iter_1433.tape_ptr - 1 :
      local.curr_1434.code == ">"
        ? local.iter_1433.tape_ptr == length(local.iter_1433.tape) - 1 ? 0 : local.iter_1433.tape_ptr + 1
        : local.iter_1433.tape_ptr)

    code_ptr = 1 + (
      local.curr_1434.code == "["
        ? local.iter_1433.tape[local.iter_1433.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1433.code_ptr)] : local.iter_1433.code_ptr :
      local.curr_1434.code == "]"
        ? local.iter_1433.tape[local.iter_1433.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1433.code_ptr)] : local.iter_1433.code_ptr
        : local.iter_1433.code_ptr)

    steps_taken = 1 + local.iter_1433.steps_taken
  }
}

locals {
  end_of_code_1435 = try(local.iter_1434.code_ptr >= length(var.code), true)

  curr_1435 = local.end_of_code_1435 ? null : {
    code = substr(var.code, local.iter_1434.code_ptr, 1)
    input = substr(var.code, local.iter_1434.code_ptr, 1) == "," ? substr(local.iter_1434.input, 0, 1) : null
  }

  iter_1435 = local.end_of_code_1435 ? local.iter_1434 : {
    input = (local.curr_1435.code == ","
      ? substr(local.iter_1434.input, 1, -1)
      : local.iter_1434.input)

    output = (local.curr_1435.code == "."
      ? "${local.iter_1434.output}${jsondecode(format("\"\\u%04x\"", local.iter_1434.tape[local.iter_1434.tape_ptr]))}"
      : local.iter_1434.output)
    
    tape = (
      local.curr_1435.code == "+"
        ? [for i, b in local.iter_1434.tape : (i == local.iter_1434.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1435.code == "-"
        ? [for i, b in local.iter_1434.tape : (i == local.iter_1434.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1435.code == ","
        ? [for i, b in local.iter_1434.tape : (i == local.iter_1434.tape_ptr ? local.ascii_lookup[local.curr_1435.input] : b)]
        : local.iter_1434.tape)

    tape_ptr = (
      local.curr_1435.code == "<"
        ? local.iter_1434.tape_ptr == 0 ? length(local.iter_1434.tape) - 1 : local.iter_1434.tape_ptr - 1 :
      local.curr_1435.code == ">"
        ? local.iter_1434.tape_ptr == length(local.iter_1434.tape) - 1 ? 0 : local.iter_1434.tape_ptr + 1
        : local.iter_1434.tape_ptr)

    code_ptr = 1 + (
      local.curr_1435.code == "["
        ? local.iter_1434.tape[local.iter_1434.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1434.code_ptr)] : local.iter_1434.code_ptr :
      local.curr_1435.code == "]"
        ? local.iter_1434.tape[local.iter_1434.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1434.code_ptr)] : local.iter_1434.code_ptr
        : local.iter_1434.code_ptr)

    steps_taken = 1 + local.iter_1434.steps_taken
  }
}

locals {
  end_of_code_1436 = try(local.iter_1435.code_ptr >= length(var.code), true)

  curr_1436 = local.end_of_code_1436 ? null : {
    code = substr(var.code, local.iter_1435.code_ptr, 1)
    input = substr(var.code, local.iter_1435.code_ptr, 1) == "," ? substr(local.iter_1435.input, 0, 1) : null
  }

  iter_1436 = local.end_of_code_1436 ? local.iter_1435 : {
    input = (local.curr_1436.code == ","
      ? substr(local.iter_1435.input, 1, -1)
      : local.iter_1435.input)

    output = (local.curr_1436.code == "."
      ? "${local.iter_1435.output}${jsondecode(format("\"\\u%04x\"", local.iter_1435.tape[local.iter_1435.tape_ptr]))}"
      : local.iter_1435.output)
    
    tape = (
      local.curr_1436.code == "+"
        ? [for i, b in local.iter_1435.tape : (i == local.iter_1435.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1436.code == "-"
        ? [for i, b in local.iter_1435.tape : (i == local.iter_1435.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1436.code == ","
        ? [for i, b in local.iter_1435.tape : (i == local.iter_1435.tape_ptr ? local.ascii_lookup[local.curr_1436.input] : b)]
        : local.iter_1435.tape)

    tape_ptr = (
      local.curr_1436.code == "<"
        ? local.iter_1435.tape_ptr == 0 ? length(local.iter_1435.tape) - 1 : local.iter_1435.tape_ptr - 1 :
      local.curr_1436.code == ">"
        ? local.iter_1435.tape_ptr == length(local.iter_1435.tape) - 1 ? 0 : local.iter_1435.tape_ptr + 1
        : local.iter_1435.tape_ptr)

    code_ptr = 1 + (
      local.curr_1436.code == "["
        ? local.iter_1435.tape[local.iter_1435.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1435.code_ptr)] : local.iter_1435.code_ptr :
      local.curr_1436.code == "]"
        ? local.iter_1435.tape[local.iter_1435.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1435.code_ptr)] : local.iter_1435.code_ptr
        : local.iter_1435.code_ptr)

    steps_taken = 1 + local.iter_1435.steps_taken
  }
}

locals {
  end_of_code_1437 = try(local.iter_1436.code_ptr >= length(var.code), true)

  curr_1437 = local.end_of_code_1437 ? null : {
    code = substr(var.code, local.iter_1436.code_ptr, 1)
    input = substr(var.code, local.iter_1436.code_ptr, 1) == "," ? substr(local.iter_1436.input, 0, 1) : null
  }

  iter_1437 = local.end_of_code_1437 ? local.iter_1436 : {
    input = (local.curr_1437.code == ","
      ? substr(local.iter_1436.input, 1, -1)
      : local.iter_1436.input)

    output = (local.curr_1437.code == "."
      ? "${local.iter_1436.output}${jsondecode(format("\"\\u%04x\"", local.iter_1436.tape[local.iter_1436.tape_ptr]))}"
      : local.iter_1436.output)
    
    tape = (
      local.curr_1437.code == "+"
        ? [for i, b in local.iter_1436.tape : (i == local.iter_1436.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1437.code == "-"
        ? [for i, b in local.iter_1436.tape : (i == local.iter_1436.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1437.code == ","
        ? [for i, b in local.iter_1436.tape : (i == local.iter_1436.tape_ptr ? local.ascii_lookup[local.curr_1437.input] : b)]
        : local.iter_1436.tape)

    tape_ptr = (
      local.curr_1437.code == "<"
        ? local.iter_1436.tape_ptr == 0 ? length(local.iter_1436.tape) - 1 : local.iter_1436.tape_ptr - 1 :
      local.curr_1437.code == ">"
        ? local.iter_1436.tape_ptr == length(local.iter_1436.tape) - 1 ? 0 : local.iter_1436.tape_ptr + 1
        : local.iter_1436.tape_ptr)

    code_ptr = 1 + (
      local.curr_1437.code == "["
        ? local.iter_1436.tape[local.iter_1436.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1436.code_ptr)] : local.iter_1436.code_ptr :
      local.curr_1437.code == "]"
        ? local.iter_1436.tape[local.iter_1436.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1436.code_ptr)] : local.iter_1436.code_ptr
        : local.iter_1436.code_ptr)

    steps_taken = 1 + local.iter_1436.steps_taken
  }
}

locals {
  end_of_code_1438 = try(local.iter_1437.code_ptr >= length(var.code), true)

  curr_1438 = local.end_of_code_1438 ? null : {
    code = substr(var.code, local.iter_1437.code_ptr, 1)
    input = substr(var.code, local.iter_1437.code_ptr, 1) == "," ? substr(local.iter_1437.input, 0, 1) : null
  }

  iter_1438 = local.end_of_code_1438 ? local.iter_1437 : {
    input = (local.curr_1438.code == ","
      ? substr(local.iter_1437.input, 1, -1)
      : local.iter_1437.input)

    output = (local.curr_1438.code == "."
      ? "${local.iter_1437.output}${jsondecode(format("\"\\u%04x\"", local.iter_1437.tape[local.iter_1437.tape_ptr]))}"
      : local.iter_1437.output)
    
    tape = (
      local.curr_1438.code == "+"
        ? [for i, b in local.iter_1437.tape : (i == local.iter_1437.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1438.code == "-"
        ? [for i, b in local.iter_1437.tape : (i == local.iter_1437.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1438.code == ","
        ? [for i, b in local.iter_1437.tape : (i == local.iter_1437.tape_ptr ? local.ascii_lookup[local.curr_1438.input] : b)]
        : local.iter_1437.tape)

    tape_ptr = (
      local.curr_1438.code == "<"
        ? local.iter_1437.tape_ptr == 0 ? length(local.iter_1437.tape) - 1 : local.iter_1437.tape_ptr - 1 :
      local.curr_1438.code == ">"
        ? local.iter_1437.tape_ptr == length(local.iter_1437.tape) - 1 ? 0 : local.iter_1437.tape_ptr + 1
        : local.iter_1437.tape_ptr)

    code_ptr = 1 + (
      local.curr_1438.code == "["
        ? local.iter_1437.tape[local.iter_1437.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1437.code_ptr)] : local.iter_1437.code_ptr :
      local.curr_1438.code == "]"
        ? local.iter_1437.tape[local.iter_1437.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1437.code_ptr)] : local.iter_1437.code_ptr
        : local.iter_1437.code_ptr)

    steps_taken = 1 + local.iter_1437.steps_taken
  }
}

locals {
  end_of_code_1439 = try(local.iter_1438.code_ptr >= length(var.code), true)

  curr_1439 = local.end_of_code_1439 ? null : {
    code = substr(var.code, local.iter_1438.code_ptr, 1)
    input = substr(var.code, local.iter_1438.code_ptr, 1) == "," ? substr(local.iter_1438.input, 0, 1) : null
  }

  iter_1439 = local.end_of_code_1439 ? local.iter_1438 : {
    input = (local.curr_1439.code == ","
      ? substr(local.iter_1438.input, 1, -1)
      : local.iter_1438.input)

    output = (local.curr_1439.code == "."
      ? "${local.iter_1438.output}${jsondecode(format("\"\\u%04x\"", local.iter_1438.tape[local.iter_1438.tape_ptr]))}"
      : local.iter_1438.output)
    
    tape = (
      local.curr_1439.code == "+"
        ? [for i, b in local.iter_1438.tape : (i == local.iter_1438.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1439.code == "-"
        ? [for i, b in local.iter_1438.tape : (i == local.iter_1438.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1439.code == ","
        ? [for i, b in local.iter_1438.tape : (i == local.iter_1438.tape_ptr ? local.ascii_lookup[local.curr_1439.input] : b)]
        : local.iter_1438.tape)

    tape_ptr = (
      local.curr_1439.code == "<"
        ? local.iter_1438.tape_ptr == 0 ? length(local.iter_1438.tape) - 1 : local.iter_1438.tape_ptr - 1 :
      local.curr_1439.code == ">"
        ? local.iter_1438.tape_ptr == length(local.iter_1438.tape) - 1 ? 0 : local.iter_1438.tape_ptr + 1
        : local.iter_1438.tape_ptr)

    code_ptr = 1 + (
      local.curr_1439.code == "["
        ? local.iter_1438.tape[local.iter_1438.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1438.code_ptr)] : local.iter_1438.code_ptr :
      local.curr_1439.code == "]"
        ? local.iter_1438.tape[local.iter_1438.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1438.code_ptr)] : local.iter_1438.code_ptr
        : local.iter_1438.code_ptr)

    steps_taken = 1 + local.iter_1438.steps_taken
  }
}

locals {
  end_of_code_1440 = try(local.iter_1439.code_ptr >= length(var.code), true)

  curr_1440 = local.end_of_code_1440 ? null : {
    code = substr(var.code, local.iter_1439.code_ptr, 1)
    input = substr(var.code, local.iter_1439.code_ptr, 1) == "," ? substr(local.iter_1439.input, 0, 1) : null
  }

  iter_1440 = local.end_of_code_1440 ? local.iter_1439 : {
    input = (local.curr_1440.code == ","
      ? substr(local.iter_1439.input, 1, -1)
      : local.iter_1439.input)

    output = (local.curr_1440.code == "."
      ? "${local.iter_1439.output}${jsondecode(format("\"\\u%04x\"", local.iter_1439.tape[local.iter_1439.tape_ptr]))}"
      : local.iter_1439.output)
    
    tape = (
      local.curr_1440.code == "+"
        ? [for i, b in local.iter_1439.tape : (i == local.iter_1439.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1440.code == "-"
        ? [for i, b in local.iter_1439.tape : (i == local.iter_1439.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1440.code == ","
        ? [for i, b in local.iter_1439.tape : (i == local.iter_1439.tape_ptr ? local.ascii_lookup[local.curr_1440.input] : b)]
        : local.iter_1439.tape)

    tape_ptr = (
      local.curr_1440.code == "<"
        ? local.iter_1439.tape_ptr == 0 ? length(local.iter_1439.tape) - 1 : local.iter_1439.tape_ptr - 1 :
      local.curr_1440.code == ">"
        ? local.iter_1439.tape_ptr == length(local.iter_1439.tape) - 1 ? 0 : local.iter_1439.tape_ptr + 1
        : local.iter_1439.tape_ptr)

    code_ptr = 1 + (
      local.curr_1440.code == "["
        ? local.iter_1439.tape[local.iter_1439.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1439.code_ptr)] : local.iter_1439.code_ptr :
      local.curr_1440.code == "]"
        ? local.iter_1439.tape[local.iter_1439.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1439.code_ptr)] : local.iter_1439.code_ptr
        : local.iter_1439.code_ptr)

    steps_taken = 1 + local.iter_1439.steps_taken
  }
}

locals {
  end_of_code_1441 = try(local.iter_1440.code_ptr >= length(var.code), true)

  curr_1441 = local.end_of_code_1441 ? null : {
    code = substr(var.code, local.iter_1440.code_ptr, 1)
    input = substr(var.code, local.iter_1440.code_ptr, 1) == "," ? substr(local.iter_1440.input, 0, 1) : null
  }

  iter_1441 = local.end_of_code_1441 ? local.iter_1440 : {
    input = (local.curr_1441.code == ","
      ? substr(local.iter_1440.input, 1, -1)
      : local.iter_1440.input)

    output = (local.curr_1441.code == "."
      ? "${local.iter_1440.output}${jsondecode(format("\"\\u%04x\"", local.iter_1440.tape[local.iter_1440.tape_ptr]))}"
      : local.iter_1440.output)
    
    tape = (
      local.curr_1441.code == "+"
        ? [for i, b in local.iter_1440.tape : (i == local.iter_1440.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1441.code == "-"
        ? [for i, b in local.iter_1440.tape : (i == local.iter_1440.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1441.code == ","
        ? [for i, b in local.iter_1440.tape : (i == local.iter_1440.tape_ptr ? local.ascii_lookup[local.curr_1441.input] : b)]
        : local.iter_1440.tape)

    tape_ptr = (
      local.curr_1441.code == "<"
        ? local.iter_1440.tape_ptr == 0 ? length(local.iter_1440.tape) - 1 : local.iter_1440.tape_ptr - 1 :
      local.curr_1441.code == ">"
        ? local.iter_1440.tape_ptr == length(local.iter_1440.tape) - 1 ? 0 : local.iter_1440.tape_ptr + 1
        : local.iter_1440.tape_ptr)

    code_ptr = 1 + (
      local.curr_1441.code == "["
        ? local.iter_1440.tape[local.iter_1440.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1440.code_ptr)] : local.iter_1440.code_ptr :
      local.curr_1441.code == "]"
        ? local.iter_1440.tape[local.iter_1440.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1440.code_ptr)] : local.iter_1440.code_ptr
        : local.iter_1440.code_ptr)

    steps_taken = 1 + local.iter_1440.steps_taken
  }
}

locals {
  end_of_code_1442 = try(local.iter_1441.code_ptr >= length(var.code), true)

  curr_1442 = local.end_of_code_1442 ? null : {
    code = substr(var.code, local.iter_1441.code_ptr, 1)
    input = substr(var.code, local.iter_1441.code_ptr, 1) == "," ? substr(local.iter_1441.input, 0, 1) : null
  }

  iter_1442 = local.end_of_code_1442 ? local.iter_1441 : {
    input = (local.curr_1442.code == ","
      ? substr(local.iter_1441.input, 1, -1)
      : local.iter_1441.input)

    output = (local.curr_1442.code == "."
      ? "${local.iter_1441.output}${jsondecode(format("\"\\u%04x\"", local.iter_1441.tape[local.iter_1441.tape_ptr]))}"
      : local.iter_1441.output)
    
    tape = (
      local.curr_1442.code == "+"
        ? [for i, b in local.iter_1441.tape : (i == local.iter_1441.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1442.code == "-"
        ? [for i, b in local.iter_1441.tape : (i == local.iter_1441.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1442.code == ","
        ? [for i, b in local.iter_1441.tape : (i == local.iter_1441.tape_ptr ? local.ascii_lookup[local.curr_1442.input] : b)]
        : local.iter_1441.tape)

    tape_ptr = (
      local.curr_1442.code == "<"
        ? local.iter_1441.tape_ptr == 0 ? length(local.iter_1441.tape) - 1 : local.iter_1441.tape_ptr - 1 :
      local.curr_1442.code == ">"
        ? local.iter_1441.tape_ptr == length(local.iter_1441.tape) - 1 ? 0 : local.iter_1441.tape_ptr + 1
        : local.iter_1441.tape_ptr)

    code_ptr = 1 + (
      local.curr_1442.code == "["
        ? local.iter_1441.tape[local.iter_1441.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1441.code_ptr)] : local.iter_1441.code_ptr :
      local.curr_1442.code == "]"
        ? local.iter_1441.tape[local.iter_1441.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1441.code_ptr)] : local.iter_1441.code_ptr
        : local.iter_1441.code_ptr)

    steps_taken = 1 + local.iter_1441.steps_taken
  }
}

locals {
  end_of_code_1443 = try(local.iter_1442.code_ptr >= length(var.code), true)

  curr_1443 = local.end_of_code_1443 ? null : {
    code = substr(var.code, local.iter_1442.code_ptr, 1)
    input = substr(var.code, local.iter_1442.code_ptr, 1) == "," ? substr(local.iter_1442.input, 0, 1) : null
  }

  iter_1443 = local.end_of_code_1443 ? local.iter_1442 : {
    input = (local.curr_1443.code == ","
      ? substr(local.iter_1442.input, 1, -1)
      : local.iter_1442.input)

    output = (local.curr_1443.code == "."
      ? "${local.iter_1442.output}${jsondecode(format("\"\\u%04x\"", local.iter_1442.tape[local.iter_1442.tape_ptr]))}"
      : local.iter_1442.output)
    
    tape = (
      local.curr_1443.code == "+"
        ? [for i, b in local.iter_1442.tape : (i == local.iter_1442.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1443.code == "-"
        ? [for i, b in local.iter_1442.tape : (i == local.iter_1442.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1443.code == ","
        ? [for i, b in local.iter_1442.tape : (i == local.iter_1442.tape_ptr ? local.ascii_lookup[local.curr_1443.input] : b)]
        : local.iter_1442.tape)

    tape_ptr = (
      local.curr_1443.code == "<"
        ? local.iter_1442.tape_ptr == 0 ? length(local.iter_1442.tape) - 1 : local.iter_1442.tape_ptr - 1 :
      local.curr_1443.code == ">"
        ? local.iter_1442.tape_ptr == length(local.iter_1442.tape) - 1 ? 0 : local.iter_1442.tape_ptr + 1
        : local.iter_1442.tape_ptr)

    code_ptr = 1 + (
      local.curr_1443.code == "["
        ? local.iter_1442.tape[local.iter_1442.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1442.code_ptr)] : local.iter_1442.code_ptr :
      local.curr_1443.code == "]"
        ? local.iter_1442.tape[local.iter_1442.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1442.code_ptr)] : local.iter_1442.code_ptr
        : local.iter_1442.code_ptr)

    steps_taken = 1 + local.iter_1442.steps_taken
  }
}

locals {
  end_of_code_1444 = try(local.iter_1443.code_ptr >= length(var.code), true)

  curr_1444 = local.end_of_code_1444 ? null : {
    code = substr(var.code, local.iter_1443.code_ptr, 1)
    input = substr(var.code, local.iter_1443.code_ptr, 1) == "," ? substr(local.iter_1443.input, 0, 1) : null
  }

  iter_1444 = local.end_of_code_1444 ? local.iter_1443 : {
    input = (local.curr_1444.code == ","
      ? substr(local.iter_1443.input, 1, -1)
      : local.iter_1443.input)

    output = (local.curr_1444.code == "."
      ? "${local.iter_1443.output}${jsondecode(format("\"\\u%04x\"", local.iter_1443.tape[local.iter_1443.tape_ptr]))}"
      : local.iter_1443.output)
    
    tape = (
      local.curr_1444.code == "+"
        ? [for i, b in local.iter_1443.tape : (i == local.iter_1443.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1444.code == "-"
        ? [for i, b in local.iter_1443.tape : (i == local.iter_1443.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1444.code == ","
        ? [for i, b in local.iter_1443.tape : (i == local.iter_1443.tape_ptr ? local.ascii_lookup[local.curr_1444.input] : b)]
        : local.iter_1443.tape)

    tape_ptr = (
      local.curr_1444.code == "<"
        ? local.iter_1443.tape_ptr == 0 ? length(local.iter_1443.tape) - 1 : local.iter_1443.tape_ptr - 1 :
      local.curr_1444.code == ">"
        ? local.iter_1443.tape_ptr == length(local.iter_1443.tape) - 1 ? 0 : local.iter_1443.tape_ptr + 1
        : local.iter_1443.tape_ptr)

    code_ptr = 1 + (
      local.curr_1444.code == "["
        ? local.iter_1443.tape[local.iter_1443.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1443.code_ptr)] : local.iter_1443.code_ptr :
      local.curr_1444.code == "]"
        ? local.iter_1443.tape[local.iter_1443.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1443.code_ptr)] : local.iter_1443.code_ptr
        : local.iter_1443.code_ptr)

    steps_taken = 1 + local.iter_1443.steps_taken
  }
}

locals {
  end_of_code_1445 = try(local.iter_1444.code_ptr >= length(var.code), true)

  curr_1445 = local.end_of_code_1445 ? null : {
    code = substr(var.code, local.iter_1444.code_ptr, 1)
    input = substr(var.code, local.iter_1444.code_ptr, 1) == "," ? substr(local.iter_1444.input, 0, 1) : null
  }

  iter_1445 = local.end_of_code_1445 ? local.iter_1444 : {
    input = (local.curr_1445.code == ","
      ? substr(local.iter_1444.input, 1, -1)
      : local.iter_1444.input)

    output = (local.curr_1445.code == "."
      ? "${local.iter_1444.output}${jsondecode(format("\"\\u%04x\"", local.iter_1444.tape[local.iter_1444.tape_ptr]))}"
      : local.iter_1444.output)
    
    tape = (
      local.curr_1445.code == "+"
        ? [for i, b in local.iter_1444.tape : (i == local.iter_1444.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1445.code == "-"
        ? [for i, b in local.iter_1444.tape : (i == local.iter_1444.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1445.code == ","
        ? [for i, b in local.iter_1444.tape : (i == local.iter_1444.tape_ptr ? local.ascii_lookup[local.curr_1445.input] : b)]
        : local.iter_1444.tape)

    tape_ptr = (
      local.curr_1445.code == "<"
        ? local.iter_1444.tape_ptr == 0 ? length(local.iter_1444.tape) - 1 : local.iter_1444.tape_ptr - 1 :
      local.curr_1445.code == ">"
        ? local.iter_1444.tape_ptr == length(local.iter_1444.tape) - 1 ? 0 : local.iter_1444.tape_ptr + 1
        : local.iter_1444.tape_ptr)

    code_ptr = 1 + (
      local.curr_1445.code == "["
        ? local.iter_1444.tape[local.iter_1444.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1444.code_ptr)] : local.iter_1444.code_ptr :
      local.curr_1445.code == "]"
        ? local.iter_1444.tape[local.iter_1444.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1444.code_ptr)] : local.iter_1444.code_ptr
        : local.iter_1444.code_ptr)

    steps_taken = 1 + local.iter_1444.steps_taken
  }
}

locals {
  end_of_code_1446 = try(local.iter_1445.code_ptr >= length(var.code), true)

  curr_1446 = local.end_of_code_1446 ? null : {
    code = substr(var.code, local.iter_1445.code_ptr, 1)
    input = substr(var.code, local.iter_1445.code_ptr, 1) == "," ? substr(local.iter_1445.input, 0, 1) : null
  }

  iter_1446 = local.end_of_code_1446 ? local.iter_1445 : {
    input = (local.curr_1446.code == ","
      ? substr(local.iter_1445.input, 1, -1)
      : local.iter_1445.input)

    output = (local.curr_1446.code == "."
      ? "${local.iter_1445.output}${jsondecode(format("\"\\u%04x\"", local.iter_1445.tape[local.iter_1445.tape_ptr]))}"
      : local.iter_1445.output)
    
    tape = (
      local.curr_1446.code == "+"
        ? [for i, b in local.iter_1445.tape : (i == local.iter_1445.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1446.code == "-"
        ? [for i, b in local.iter_1445.tape : (i == local.iter_1445.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1446.code == ","
        ? [for i, b in local.iter_1445.tape : (i == local.iter_1445.tape_ptr ? local.ascii_lookup[local.curr_1446.input] : b)]
        : local.iter_1445.tape)

    tape_ptr = (
      local.curr_1446.code == "<"
        ? local.iter_1445.tape_ptr == 0 ? length(local.iter_1445.tape) - 1 : local.iter_1445.tape_ptr - 1 :
      local.curr_1446.code == ">"
        ? local.iter_1445.tape_ptr == length(local.iter_1445.tape) - 1 ? 0 : local.iter_1445.tape_ptr + 1
        : local.iter_1445.tape_ptr)

    code_ptr = 1 + (
      local.curr_1446.code == "["
        ? local.iter_1445.tape[local.iter_1445.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1445.code_ptr)] : local.iter_1445.code_ptr :
      local.curr_1446.code == "]"
        ? local.iter_1445.tape[local.iter_1445.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1445.code_ptr)] : local.iter_1445.code_ptr
        : local.iter_1445.code_ptr)

    steps_taken = 1 + local.iter_1445.steps_taken
  }
}

locals {
  end_of_code_1447 = try(local.iter_1446.code_ptr >= length(var.code), true)

  curr_1447 = local.end_of_code_1447 ? null : {
    code = substr(var.code, local.iter_1446.code_ptr, 1)
    input = substr(var.code, local.iter_1446.code_ptr, 1) == "," ? substr(local.iter_1446.input, 0, 1) : null
  }

  iter_1447 = local.end_of_code_1447 ? local.iter_1446 : {
    input = (local.curr_1447.code == ","
      ? substr(local.iter_1446.input, 1, -1)
      : local.iter_1446.input)

    output = (local.curr_1447.code == "."
      ? "${local.iter_1446.output}${jsondecode(format("\"\\u%04x\"", local.iter_1446.tape[local.iter_1446.tape_ptr]))}"
      : local.iter_1446.output)
    
    tape = (
      local.curr_1447.code == "+"
        ? [for i, b in local.iter_1446.tape : (i == local.iter_1446.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1447.code == "-"
        ? [for i, b in local.iter_1446.tape : (i == local.iter_1446.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1447.code == ","
        ? [for i, b in local.iter_1446.tape : (i == local.iter_1446.tape_ptr ? local.ascii_lookup[local.curr_1447.input] : b)]
        : local.iter_1446.tape)

    tape_ptr = (
      local.curr_1447.code == "<"
        ? local.iter_1446.tape_ptr == 0 ? length(local.iter_1446.tape) - 1 : local.iter_1446.tape_ptr - 1 :
      local.curr_1447.code == ">"
        ? local.iter_1446.tape_ptr == length(local.iter_1446.tape) - 1 ? 0 : local.iter_1446.tape_ptr + 1
        : local.iter_1446.tape_ptr)

    code_ptr = 1 + (
      local.curr_1447.code == "["
        ? local.iter_1446.tape[local.iter_1446.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1446.code_ptr)] : local.iter_1446.code_ptr :
      local.curr_1447.code == "]"
        ? local.iter_1446.tape[local.iter_1446.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1446.code_ptr)] : local.iter_1446.code_ptr
        : local.iter_1446.code_ptr)

    steps_taken = 1 + local.iter_1446.steps_taken
  }
}

locals {
  end_of_code_1448 = try(local.iter_1447.code_ptr >= length(var.code), true)

  curr_1448 = local.end_of_code_1448 ? null : {
    code = substr(var.code, local.iter_1447.code_ptr, 1)
    input = substr(var.code, local.iter_1447.code_ptr, 1) == "," ? substr(local.iter_1447.input, 0, 1) : null
  }

  iter_1448 = local.end_of_code_1448 ? local.iter_1447 : {
    input = (local.curr_1448.code == ","
      ? substr(local.iter_1447.input, 1, -1)
      : local.iter_1447.input)

    output = (local.curr_1448.code == "."
      ? "${local.iter_1447.output}${jsondecode(format("\"\\u%04x\"", local.iter_1447.tape[local.iter_1447.tape_ptr]))}"
      : local.iter_1447.output)
    
    tape = (
      local.curr_1448.code == "+"
        ? [for i, b in local.iter_1447.tape : (i == local.iter_1447.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1448.code == "-"
        ? [for i, b in local.iter_1447.tape : (i == local.iter_1447.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1448.code == ","
        ? [for i, b in local.iter_1447.tape : (i == local.iter_1447.tape_ptr ? local.ascii_lookup[local.curr_1448.input] : b)]
        : local.iter_1447.tape)

    tape_ptr = (
      local.curr_1448.code == "<"
        ? local.iter_1447.tape_ptr == 0 ? length(local.iter_1447.tape) - 1 : local.iter_1447.tape_ptr - 1 :
      local.curr_1448.code == ">"
        ? local.iter_1447.tape_ptr == length(local.iter_1447.tape) - 1 ? 0 : local.iter_1447.tape_ptr + 1
        : local.iter_1447.tape_ptr)

    code_ptr = 1 + (
      local.curr_1448.code == "["
        ? local.iter_1447.tape[local.iter_1447.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1447.code_ptr)] : local.iter_1447.code_ptr :
      local.curr_1448.code == "]"
        ? local.iter_1447.tape[local.iter_1447.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1447.code_ptr)] : local.iter_1447.code_ptr
        : local.iter_1447.code_ptr)

    steps_taken = 1 + local.iter_1447.steps_taken
  }
}

locals {
  end_of_code_1449 = try(local.iter_1448.code_ptr >= length(var.code), true)

  curr_1449 = local.end_of_code_1449 ? null : {
    code = substr(var.code, local.iter_1448.code_ptr, 1)
    input = substr(var.code, local.iter_1448.code_ptr, 1) == "," ? substr(local.iter_1448.input, 0, 1) : null
  }

  iter_1449 = local.end_of_code_1449 ? local.iter_1448 : {
    input = (local.curr_1449.code == ","
      ? substr(local.iter_1448.input, 1, -1)
      : local.iter_1448.input)

    output = (local.curr_1449.code == "."
      ? "${local.iter_1448.output}${jsondecode(format("\"\\u%04x\"", local.iter_1448.tape[local.iter_1448.tape_ptr]))}"
      : local.iter_1448.output)
    
    tape = (
      local.curr_1449.code == "+"
        ? [for i, b in local.iter_1448.tape : (i == local.iter_1448.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1449.code == "-"
        ? [for i, b in local.iter_1448.tape : (i == local.iter_1448.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1449.code == ","
        ? [for i, b in local.iter_1448.tape : (i == local.iter_1448.tape_ptr ? local.ascii_lookup[local.curr_1449.input] : b)]
        : local.iter_1448.tape)

    tape_ptr = (
      local.curr_1449.code == "<"
        ? local.iter_1448.tape_ptr == 0 ? length(local.iter_1448.tape) - 1 : local.iter_1448.tape_ptr - 1 :
      local.curr_1449.code == ">"
        ? local.iter_1448.tape_ptr == length(local.iter_1448.tape) - 1 ? 0 : local.iter_1448.tape_ptr + 1
        : local.iter_1448.tape_ptr)

    code_ptr = 1 + (
      local.curr_1449.code == "["
        ? local.iter_1448.tape[local.iter_1448.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1448.code_ptr)] : local.iter_1448.code_ptr :
      local.curr_1449.code == "]"
        ? local.iter_1448.tape[local.iter_1448.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1448.code_ptr)] : local.iter_1448.code_ptr
        : local.iter_1448.code_ptr)

    steps_taken = 1 + local.iter_1448.steps_taken
  }
}

locals {
  end_of_code_1450 = try(local.iter_1449.code_ptr >= length(var.code), true)

  curr_1450 = local.end_of_code_1450 ? null : {
    code = substr(var.code, local.iter_1449.code_ptr, 1)
    input = substr(var.code, local.iter_1449.code_ptr, 1) == "," ? substr(local.iter_1449.input, 0, 1) : null
  }

  iter_1450 = local.end_of_code_1450 ? local.iter_1449 : {
    input = (local.curr_1450.code == ","
      ? substr(local.iter_1449.input, 1, -1)
      : local.iter_1449.input)

    output = (local.curr_1450.code == "."
      ? "${local.iter_1449.output}${jsondecode(format("\"\\u%04x\"", local.iter_1449.tape[local.iter_1449.tape_ptr]))}"
      : local.iter_1449.output)
    
    tape = (
      local.curr_1450.code == "+"
        ? [for i, b in local.iter_1449.tape : (i == local.iter_1449.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1450.code == "-"
        ? [for i, b in local.iter_1449.tape : (i == local.iter_1449.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1450.code == ","
        ? [for i, b in local.iter_1449.tape : (i == local.iter_1449.tape_ptr ? local.ascii_lookup[local.curr_1450.input] : b)]
        : local.iter_1449.tape)

    tape_ptr = (
      local.curr_1450.code == "<"
        ? local.iter_1449.tape_ptr == 0 ? length(local.iter_1449.tape) - 1 : local.iter_1449.tape_ptr - 1 :
      local.curr_1450.code == ">"
        ? local.iter_1449.tape_ptr == length(local.iter_1449.tape) - 1 ? 0 : local.iter_1449.tape_ptr + 1
        : local.iter_1449.tape_ptr)

    code_ptr = 1 + (
      local.curr_1450.code == "["
        ? local.iter_1449.tape[local.iter_1449.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1449.code_ptr)] : local.iter_1449.code_ptr :
      local.curr_1450.code == "]"
        ? local.iter_1449.tape[local.iter_1449.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1449.code_ptr)] : local.iter_1449.code_ptr
        : local.iter_1449.code_ptr)

    steps_taken = 1 + local.iter_1449.steps_taken
  }
}

locals {
  end_of_code_1451 = try(local.iter_1450.code_ptr >= length(var.code), true)

  curr_1451 = local.end_of_code_1451 ? null : {
    code = substr(var.code, local.iter_1450.code_ptr, 1)
    input = substr(var.code, local.iter_1450.code_ptr, 1) == "," ? substr(local.iter_1450.input, 0, 1) : null
  }

  iter_1451 = local.end_of_code_1451 ? local.iter_1450 : {
    input = (local.curr_1451.code == ","
      ? substr(local.iter_1450.input, 1, -1)
      : local.iter_1450.input)

    output = (local.curr_1451.code == "."
      ? "${local.iter_1450.output}${jsondecode(format("\"\\u%04x\"", local.iter_1450.tape[local.iter_1450.tape_ptr]))}"
      : local.iter_1450.output)
    
    tape = (
      local.curr_1451.code == "+"
        ? [for i, b in local.iter_1450.tape : (i == local.iter_1450.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1451.code == "-"
        ? [for i, b in local.iter_1450.tape : (i == local.iter_1450.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1451.code == ","
        ? [for i, b in local.iter_1450.tape : (i == local.iter_1450.tape_ptr ? local.ascii_lookup[local.curr_1451.input] : b)]
        : local.iter_1450.tape)

    tape_ptr = (
      local.curr_1451.code == "<"
        ? local.iter_1450.tape_ptr == 0 ? length(local.iter_1450.tape) - 1 : local.iter_1450.tape_ptr - 1 :
      local.curr_1451.code == ">"
        ? local.iter_1450.tape_ptr == length(local.iter_1450.tape) - 1 ? 0 : local.iter_1450.tape_ptr + 1
        : local.iter_1450.tape_ptr)

    code_ptr = 1 + (
      local.curr_1451.code == "["
        ? local.iter_1450.tape[local.iter_1450.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1450.code_ptr)] : local.iter_1450.code_ptr :
      local.curr_1451.code == "]"
        ? local.iter_1450.tape[local.iter_1450.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1450.code_ptr)] : local.iter_1450.code_ptr
        : local.iter_1450.code_ptr)

    steps_taken = 1 + local.iter_1450.steps_taken
  }
}

locals {
  end_of_code_1452 = try(local.iter_1451.code_ptr >= length(var.code), true)

  curr_1452 = local.end_of_code_1452 ? null : {
    code = substr(var.code, local.iter_1451.code_ptr, 1)
    input = substr(var.code, local.iter_1451.code_ptr, 1) == "," ? substr(local.iter_1451.input, 0, 1) : null
  }

  iter_1452 = local.end_of_code_1452 ? local.iter_1451 : {
    input = (local.curr_1452.code == ","
      ? substr(local.iter_1451.input, 1, -1)
      : local.iter_1451.input)

    output = (local.curr_1452.code == "."
      ? "${local.iter_1451.output}${jsondecode(format("\"\\u%04x\"", local.iter_1451.tape[local.iter_1451.tape_ptr]))}"
      : local.iter_1451.output)
    
    tape = (
      local.curr_1452.code == "+"
        ? [for i, b in local.iter_1451.tape : (i == local.iter_1451.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1452.code == "-"
        ? [for i, b in local.iter_1451.tape : (i == local.iter_1451.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1452.code == ","
        ? [for i, b in local.iter_1451.tape : (i == local.iter_1451.tape_ptr ? local.ascii_lookup[local.curr_1452.input] : b)]
        : local.iter_1451.tape)

    tape_ptr = (
      local.curr_1452.code == "<"
        ? local.iter_1451.tape_ptr == 0 ? length(local.iter_1451.tape) - 1 : local.iter_1451.tape_ptr - 1 :
      local.curr_1452.code == ">"
        ? local.iter_1451.tape_ptr == length(local.iter_1451.tape) - 1 ? 0 : local.iter_1451.tape_ptr + 1
        : local.iter_1451.tape_ptr)

    code_ptr = 1 + (
      local.curr_1452.code == "["
        ? local.iter_1451.tape[local.iter_1451.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1451.code_ptr)] : local.iter_1451.code_ptr :
      local.curr_1452.code == "]"
        ? local.iter_1451.tape[local.iter_1451.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1451.code_ptr)] : local.iter_1451.code_ptr
        : local.iter_1451.code_ptr)

    steps_taken = 1 + local.iter_1451.steps_taken
  }
}

locals {
  end_of_code_1453 = try(local.iter_1452.code_ptr >= length(var.code), true)

  curr_1453 = local.end_of_code_1453 ? null : {
    code = substr(var.code, local.iter_1452.code_ptr, 1)
    input = substr(var.code, local.iter_1452.code_ptr, 1) == "," ? substr(local.iter_1452.input, 0, 1) : null
  }

  iter_1453 = local.end_of_code_1453 ? local.iter_1452 : {
    input = (local.curr_1453.code == ","
      ? substr(local.iter_1452.input, 1, -1)
      : local.iter_1452.input)

    output = (local.curr_1453.code == "."
      ? "${local.iter_1452.output}${jsondecode(format("\"\\u%04x\"", local.iter_1452.tape[local.iter_1452.tape_ptr]))}"
      : local.iter_1452.output)
    
    tape = (
      local.curr_1453.code == "+"
        ? [for i, b in local.iter_1452.tape : (i == local.iter_1452.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1453.code == "-"
        ? [for i, b in local.iter_1452.tape : (i == local.iter_1452.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1453.code == ","
        ? [for i, b in local.iter_1452.tape : (i == local.iter_1452.tape_ptr ? local.ascii_lookup[local.curr_1453.input] : b)]
        : local.iter_1452.tape)

    tape_ptr = (
      local.curr_1453.code == "<"
        ? local.iter_1452.tape_ptr == 0 ? length(local.iter_1452.tape) - 1 : local.iter_1452.tape_ptr - 1 :
      local.curr_1453.code == ">"
        ? local.iter_1452.tape_ptr == length(local.iter_1452.tape) - 1 ? 0 : local.iter_1452.tape_ptr + 1
        : local.iter_1452.tape_ptr)

    code_ptr = 1 + (
      local.curr_1453.code == "["
        ? local.iter_1452.tape[local.iter_1452.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1452.code_ptr)] : local.iter_1452.code_ptr :
      local.curr_1453.code == "]"
        ? local.iter_1452.tape[local.iter_1452.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1452.code_ptr)] : local.iter_1452.code_ptr
        : local.iter_1452.code_ptr)

    steps_taken = 1 + local.iter_1452.steps_taken
  }
}

locals {
  end_of_code_1454 = try(local.iter_1453.code_ptr >= length(var.code), true)

  curr_1454 = local.end_of_code_1454 ? null : {
    code = substr(var.code, local.iter_1453.code_ptr, 1)
    input = substr(var.code, local.iter_1453.code_ptr, 1) == "," ? substr(local.iter_1453.input, 0, 1) : null
  }

  iter_1454 = local.end_of_code_1454 ? local.iter_1453 : {
    input = (local.curr_1454.code == ","
      ? substr(local.iter_1453.input, 1, -1)
      : local.iter_1453.input)

    output = (local.curr_1454.code == "."
      ? "${local.iter_1453.output}${jsondecode(format("\"\\u%04x\"", local.iter_1453.tape[local.iter_1453.tape_ptr]))}"
      : local.iter_1453.output)
    
    tape = (
      local.curr_1454.code == "+"
        ? [for i, b in local.iter_1453.tape : (i == local.iter_1453.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1454.code == "-"
        ? [for i, b in local.iter_1453.tape : (i == local.iter_1453.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1454.code == ","
        ? [for i, b in local.iter_1453.tape : (i == local.iter_1453.tape_ptr ? local.ascii_lookup[local.curr_1454.input] : b)]
        : local.iter_1453.tape)

    tape_ptr = (
      local.curr_1454.code == "<"
        ? local.iter_1453.tape_ptr == 0 ? length(local.iter_1453.tape) - 1 : local.iter_1453.tape_ptr - 1 :
      local.curr_1454.code == ">"
        ? local.iter_1453.tape_ptr == length(local.iter_1453.tape) - 1 ? 0 : local.iter_1453.tape_ptr + 1
        : local.iter_1453.tape_ptr)

    code_ptr = 1 + (
      local.curr_1454.code == "["
        ? local.iter_1453.tape[local.iter_1453.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1453.code_ptr)] : local.iter_1453.code_ptr :
      local.curr_1454.code == "]"
        ? local.iter_1453.tape[local.iter_1453.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1453.code_ptr)] : local.iter_1453.code_ptr
        : local.iter_1453.code_ptr)

    steps_taken = 1 + local.iter_1453.steps_taken
  }
}

locals {
  end_of_code_1455 = try(local.iter_1454.code_ptr >= length(var.code), true)

  curr_1455 = local.end_of_code_1455 ? null : {
    code = substr(var.code, local.iter_1454.code_ptr, 1)
    input = substr(var.code, local.iter_1454.code_ptr, 1) == "," ? substr(local.iter_1454.input, 0, 1) : null
  }

  iter_1455 = local.end_of_code_1455 ? local.iter_1454 : {
    input = (local.curr_1455.code == ","
      ? substr(local.iter_1454.input, 1, -1)
      : local.iter_1454.input)

    output = (local.curr_1455.code == "."
      ? "${local.iter_1454.output}${jsondecode(format("\"\\u%04x\"", local.iter_1454.tape[local.iter_1454.tape_ptr]))}"
      : local.iter_1454.output)
    
    tape = (
      local.curr_1455.code == "+"
        ? [for i, b in local.iter_1454.tape : (i == local.iter_1454.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1455.code == "-"
        ? [for i, b in local.iter_1454.tape : (i == local.iter_1454.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1455.code == ","
        ? [for i, b in local.iter_1454.tape : (i == local.iter_1454.tape_ptr ? local.ascii_lookup[local.curr_1455.input] : b)]
        : local.iter_1454.tape)

    tape_ptr = (
      local.curr_1455.code == "<"
        ? local.iter_1454.tape_ptr == 0 ? length(local.iter_1454.tape) - 1 : local.iter_1454.tape_ptr - 1 :
      local.curr_1455.code == ">"
        ? local.iter_1454.tape_ptr == length(local.iter_1454.tape) - 1 ? 0 : local.iter_1454.tape_ptr + 1
        : local.iter_1454.tape_ptr)

    code_ptr = 1 + (
      local.curr_1455.code == "["
        ? local.iter_1454.tape[local.iter_1454.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1454.code_ptr)] : local.iter_1454.code_ptr :
      local.curr_1455.code == "]"
        ? local.iter_1454.tape[local.iter_1454.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1454.code_ptr)] : local.iter_1454.code_ptr
        : local.iter_1454.code_ptr)

    steps_taken = 1 + local.iter_1454.steps_taken
  }
}

locals {
  end_of_code_1456 = try(local.iter_1455.code_ptr >= length(var.code), true)

  curr_1456 = local.end_of_code_1456 ? null : {
    code = substr(var.code, local.iter_1455.code_ptr, 1)
    input = substr(var.code, local.iter_1455.code_ptr, 1) == "," ? substr(local.iter_1455.input, 0, 1) : null
  }

  iter_1456 = local.end_of_code_1456 ? local.iter_1455 : {
    input = (local.curr_1456.code == ","
      ? substr(local.iter_1455.input, 1, -1)
      : local.iter_1455.input)

    output = (local.curr_1456.code == "."
      ? "${local.iter_1455.output}${jsondecode(format("\"\\u%04x\"", local.iter_1455.tape[local.iter_1455.tape_ptr]))}"
      : local.iter_1455.output)
    
    tape = (
      local.curr_1456.code == "+"
        ? [for i, b in local.iter_1455.tape : (i == local.iter_1455.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1456.code == "-"
        ? [for i, b in local.iter_1455.tape : (i == local.iter_1455.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1456.code == ","
        ? [for i, b in local.iter_1455.tape : (i == local.iter_1455.tape_ptr ? local.ascii_lookup[local.curr_1456.input] : b)]
        : local.iter_1455.tape)

    tape_ptr = (
      local.curr_1456.code == "<"
        ? local.iter_1455.tape_ptr == 0 ? length(local.iter_1455.tape) - 1 : local.iter_1455.tape_ptr - 1 :
      local.curr_1456.code == ">"
        ? local.iter_1455.tape_ptr == length(local.iter_1455.tape) - 1 ? 0 : local.iter_1455.tape_ptr + 1
        : local.iter_1455.tape_ptr)

    code_ptr = 1 + (
      local.curr_1456.code == "["
        ? local.iter_1455.tape[local.iter_1455.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1455.code_ptr)] : local.iter_1455.code_ptr :
      local.curr_1456.code == "]"
        ? local.iter_1455.tape[local.iter_1455.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1455.code_ptr)] : local.iter_1455.code_ptr
        : local.iter_1455.code_ptr)

    steps_taken = 1 + local.iter_1455.steps_taken
  }
}

locals {
  end_of_code_1457 = try(local.iter_1456.code_ptr >= length(var.code), true)

  curr_1457 = local.end_of_code_1457 ? null : {
    code = substr(var.code, local.iter_1456.code_ptr, 1)
    input = substr(var.code, local.iter_1456.code_ptr, 1) == "," ? substr(local.iter_1456.input, 0, 1) : null
  }

  iter_1457 = local.end_of_code_1457 ? local.iter_1456 : {
    input = (local.curr_1457.code == ","
      ? substr(local.iter_1456.input, 1, -1)
      : local.iter_1456.input)

    output = (local.curr_1457.code == "."
      ? "${local.iter_1456.output}${jsondecode(format("\"\\u%04x\"", local.iter_1456.tape[local.iter_1456.tape_ptr]))}"
      : local.iter_1456.output)
    
    tape = (
      local.curr_1457.code == "+"
        ? [for i, b in local.iter_1456.tape : (i == local.iter_1456.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1457.code == "-"
        ? [for i, b in local.iter_1456.tape : (i == local.iter_1456.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1457.code == ","
        ? [for i, b in local.iter_1456.tape : (i == local.iter_1456.tape_ptr ? local.ascii_lookup[local.curr_1457.input] : b)]
        : local.iter_1456.tape)

    tape_ptr = (
      local.curr_1457.code == "<"
        ? local.iter_1456.tape_ptr == 0 ? length(local.iter_1456.tape) - 1 : local.iter_1456.tape_ptr - 1 :
      local.curr_1457.code == ">"
        ? local.iter_1456.tape_ptr == length(local.iter_1456.tape) - 1 ? 0 : local.iter_1456.tape_ptr + 1
        : local.iter_1456.tape_ptr)

    code_ptr = 1 + (
      local.curr_1457.code == "["
        ? local.iter_1456.tape[local.iter_1456.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1456.code_ptr)] : local.iter_1456.code_ptr :
      local.curr_1457.code == "]"
        ? local.iter_1456.tape[local.iter_1456.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1456.code_ptr)] : local.iter_1456.code_ptr
        : local.iter_1456.code_ptr)

    steps_taken = 1 + local.iter_1456.steps_taken
  }
}

locals {
  end_of_code_1458 = try(local.iter_1457.code_ptr >= length(var.code), true)

  curr_1458 = local.end_of_code_1458 ? null : {
    code = substr(var.code, local.iter_1457.code_ptr, 1)
    input = substr(var.code, local.iter_1457.code_ptr, 1) == "," ? substr(local.iter_1457.input, 0, 1) : null
  }

  iter_1458 = local.end_of_code_1458 ? local.iter_1457 : {
    input = (local.curr_1458.code == ","
      ? substr(local.iter_1457.input, 1, -1)
      : local.iter_1457.input)

    output = (local.curr_1458.code == "."
      ? "${local.iter_1457.output}${jsondecode(format("\"\\u%04x\"", local.iter_1457.tape[local.iter_1457.tape_ptr]))}"
      : local.iter_1457.output)
    
    tape = (
      local.curr_1458.code == "+"
        ? [for i, b in local.iter_1457.tape : (i == local.iter_1457.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1458.code == "-"
        ? [for i, b in local.iter_1457.tape : (i == local.iter_1457.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1458.code == ","
        ? [for i, b in local.iter_1457.tape : (i == local.iter_1457.tape_ptr ? local.ascii_lookup[local.curr_1458.input] : b)]
        : local.iter_1457.tape)

    tape_ptr = (
      local.curr_1458.code == "<"
        ? local.iter_1457.tape_ptr == 0 ? length(local.iter_1457.tape) - 1 : local.iter_1457.tape_ptr - 1 :
      local.curr_1458.code == ">"
        ? local.iter_1457.tape_ptr == length(local.iter_1457.tape) - 1 ? 0 : local.iter_1457.tape_ptr + 1
        : local.iter_1457.tape_ptr)

    code_ptr = 1 + (
      local.curr_1458.code == "["
        ? local.iter_1457.tape[local.iter_1457.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1457.code_ptr)] : local.iter_1457.code_ptr :
      local.curr_1458.code == "]"
        ? local.iter_1457.tape[local.iter_1457.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1457.code_ptr)] : local.iter_1457.code_ptr
        : local.iter_1457.code_ptr)

    steps_taken = 1 + local.iter_1457.steps_taken
  }
}

locals {
  end_of_code_1459 = try(local.iter_1458.code_ptr >= length(var.code), true)

  curr_1459 = local.end_of_code_1459 ? null : {
    code = substr(var.code, local.iter_1458.code_ptr, 1)
    input = substr(var.code, local.iter_1458.code_ptr, 1) == "," ? substr(local.iter_1458.input, 0, 1) : null
  }

  iter_1459 = local.end_of_code_1459 ? local.iter_1458 : {
    input = (local.curr_1459.code == ","
      ? substr(local.iter_1458.input, 1, -1)
      : local.iter_1458.input)

    output = (local.curr_1459.code == "."
      ? "${local.iter_1458.output}${jsondecode(format("\"\\u%04x\"", local.iter_1458.tape[local.iter_1458.tape_ptr]))}"
      : local.iter_1458.output)
    
    tape = (
      local.curr_1459.code == "+"
        ? [for i, b in local.iter_1458.tape : (i == local.iter_1458.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1459.code == "-"
        ? [for i, b in local.iter_1458.tape : (i == local.iter_1458.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1459.code == ","
        ? [for i, b in local.iter_1458.tape : (i == local.iter_1458.tape_ptr ? local.ascii_lookup[local.curr_1459.input] : b)]
        : local.iter_1458.tape)

    tape_ptr = (
      local.curr_1459.code == "<"
        ? local.iter_1458.tape_ptr == 0 ? length(local.iter_1458.tape) - 1 : local.iter_1458.tape_ptr - 1 :
      local.curr_1459.code == ">"
        ? local.iter_1458.tape_ptr == length(local.iter_1458.tape) - 1 ? 0 : local.iter_1458.tape_ptr + 1
        : local.iter_1458.tape_ptr)

    code_ptr = 1 + (
      local.curr_1459.code == "["
        ? local.iter_1458.tape[local.iter_1458.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1458.code_ptr)] : local.iter_1458.code_ptr :
      local.curr_1459.code == "]"
        ? local.iter_1458.tape[local.iter_1458.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1458.code_ptr)] : local.iter_1458.code_ptr
        : local.iter_1458.code_ptr)

    steps_taken = 1 + local.iter_1458.steps_taken
  }
}

locals {
  end_of_code_1460 = try(local.iter_1459.code_ptr >= length(var.code), true)

  curr_1460 = local.end_of_code_1460 ? null : {
    code = substr(var.code, local.iter_1459.code_ptr, 1)
    input = substr(var.code, local.iter_1459.code_ptr, 1) == "," ? substr(local.iter_1459.input, 0, 1) : null
  }

  iter_1460 = local.end_of_code_1460 ? local.iter_1459 : {
    input = (local.curr_1460.code == ","
      ? substr(local.iter_1459.input, 1, -1)
      : local.iter_1459.input)

    output = (local.curr_1460.code == "."
      ? "${local.iter_1459.output}${jsondecode(format("\"\\u%04x\"", local.iter_1459.tape[local.iter_1459.tape_ptr]))}"
      : local.iter_1459.output)
    
    tape = (
      local.curr_1460.code == "+"
        ? [for i, b in local.iter_1459.tape : (i == local.iter_1459.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1460.code == "-"
        ? [for i, b in local.iter_1459.tape : (i == local.iter_1459.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1460.code == ","
        ? [for i, b in local.iter_1459.tape : (i == local.iter_1459.tape_ptr ? local.ascii_lookup[local.curr_1460.input] : b)]
        : local.iter_1459.tape)

    tape_ptr = (
      local.curr_1460.code == "<"
        ? local.iter_1459.tape_ptr == 0 ? length(local.iter_1459.tape) - 1 : local.iter_1459.tape_ptr - 1 :
      local.curr_1460.code == ">"
        ? local.iter_1459.tape_ptr == length(local.iter_1459.tape) - 1 ? 0 : local.iter_1459.tape_ptr + 1
        : local.iter_1459.tape_ptr)

    code_ptr = 1 + (
      local.curr_1460.code == "["
        ? local.iter_1459.tape[local.iter_1459.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1459.code_ptr)] : local.iter_1459.code_ptr :
      local.curr_1460.code == "]"
        ? local.iter_1459.tape[local.iter_1459.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1459.code_ptr)] : local.iter_1459.code_ptr
        : local.iter_1459.code_ptr)

    steps_taken = 1 + local.iter_1459.steps_taken
  }
}

locals {
  end_of_code_1461 = try(local.iter_1460.code_ptr >= length(var.code), true)

  curr_1461 = local.end_of_code_1461 ? null : {
    code = substr(var.code, local.iter_1460.code_ptr, 1)
    input = substr(var.code, local.iter_1460.code_ptr, 1) == "," ? substr(local.iter_1460.input, 0, 1) : null
  }

  iter_1461 = local.end_of_code_1461 ? local.iter_1460 : {
    input = (local.curr_1461.code == ","
      ? substr(local.iter_1460.input, 1, -1)
      : local.iter_1460.input)

    output = (local.curr_1461.code == "."
      ? "${local.iter_1460.output}${jsondecode(format("\"\\u%04x\"", local.iter_1460.tape[local.iter_1460.tape_ptr]))}"
      : local.iter_1460.output)
    
    tape = (
      local.curr_1461.code == "+"
        ? [for i, b in local.iter_1460.tape : (i == local.iter_1460.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1461.code == "-"
        ? [for i, b in local.iter_1460.tape : (i == local.iter_1460.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1461.code == ","
        ? [for i, b in local.iter_1460.tape : (i == local.iter_1460.tape_ptr ? local.ascii_lookup[local.curr_1461.input] : b)]
        : local.iter_1460.tape)

    tape_ptr = (
      local.curr_1461.code == "<"
        ? local.iter_1460.tape_ptr == 0 ? length(local.iter_1460.tape) - 1 : local.iter_1460.tape_ptr - 1 :
      local.curr_1461.code == ">"
        ? local.iter_1460.tape_ptr == length(local.iter_1460.tape) - 1 ? 0 : local.iter_1460.tape_ptr + 1
        : local.iter_1460.tape_ptr)

    code_ptr = 1 + (
      local.curr_1461.code == "["
        ? local.iter_1460.tape[local.iter_1460.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1460.code_ptr)] : local.iter_1460.code_ptr :
      local.curr_1461.code == "]"
        ? local.iter_1460.tape[local.iter_1460.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1460.code_ptr)] : local.iter_1460.code_ptr
        : local.iter_1460.code_ptr)

    steps_taken = 1 + local.iter_1460.steps_taken
  }
}

locals {
  end_of_code_1462 = try(local.iter_1461.code_ptr >= length(var.code), true)

  curr_1462 = local.end_of_code_1462 ? null : {
    code = substr(var.code, local.iter_1461.code_ptr, 1)
    input = substr(var.code, local.iter_1461.code_ptr, 1) == "," ? substr(local.iter_1461.input, 0, 1) : null
  }

  iter_1462 = local.end_of_code_1462 ? local.iter_1461 : {
    input = (local.curr_1462.code == ","
      ? substr(local.iter_1461.input, 1, -1)
      : local.iter_1461.input)

    output = (local.curr_1462.code == "."
      ? "${local.iter_1461.output}${jsondecode(format("\"\\u%04x\"", local.iter_1461.tape[local.iter_1461.tape_ptr]))}"
      : local.iter_1461.output)
    
    tape = (
      local.curr_1462.code == "+"
        ? [for i, b in local.iter_1461.tape : (i == local.iter_1461.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1462.code == "-"
        ? [for i, b in local.iter_1461.tape : (i == local.iter_1461.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1462.code == ","
        ? [for i, b in local.iter_1461.tape : (i == local.iter_1461.tape_ptr ? local.ascii_lookup[local.curr_1462.input] : b)]
        : local.iter_1461.tape)

    tape_ptr = (
      local.curr_1462.code == "<"
        ? local.iter_1461.tape_ptr == 0 ? length(local.iter_1461.tape) - 1 : local.iter_1461.tape_ptr - 1 :
      local.curr_1462.code == ">"
        ? local.iter_1461.tape_ptr == length(local.iter_1461.tape) - 1 ? 0 : local.iter_1461.tape_ptr + 1
        : local.iter_1461.tape_ptr)

    code_ptr = 1 + (
      local.curr_1462.code == "["
        ? local.iter_1461.tape[local.iter_1461.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1461.code_ptr)] : local.iter_1461.code_ptr :
      local.curr_1462.code == "]"
        ? local.iter_1461.tape[local.iter_1461.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1461.code_ptr)] : local.iter_1461.code_ptr
        : local.iter_1461.code_ptr)

    steps_taken = 1 + local.iter_1461.steps_taken
  }
}

locals {
  end_of_code_1463 = try(local.iter_1462.code_ptr >= length(var.code), true)

  curr_1463 = local.end_of_code_1463 ? null : {
    code = substr(var.code, local.iter_1462.code_ptr, 1)
    input = substr(var.code, local.iter_1462.code_ptr, 1) == "," ? substr(local.iter_1462.input, 0, 1) : null
  }

  iter_1463 = local.end_of_code_1463 ? local.iter_1462 : {
    input = (local.curr_1463.code == ","
      ? substr(local.iter_1462.input, 1, -1)
      : local.iter_1462.input)

    output = (local.curr_1463.code == "."
      ? "${local.iter_1462.output}${jsondecode(format("\"\\u%04x\"", local.iter_1462.tape[local.iter_1462.tape_ptr]))}"
      : local.iter_1462.output)
    
    tape = (
      local.curr_1463.code == "+"
        ? [for i, b in local.iter_1462.tape : (i == local.iter_1462.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1463.code == "-"
        ? [for i, b in local.iter_1462.tape : (i == local.iter_1462.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1463.code == ","
        ? [for i, b in local.iter_1462.tape : (i == local.iter_1462.tape_ptr ? local.ascii_lookup[local.curr_1463.input] : b)]
        : local.iter_1462.tape)

    tape_ptr = (
      local.curr_1463.code == "<"
        ? local.iter_1462.tape_ptr == 0 ? length(local.iter_1462.tape) - 1 : local.iter_1462.tape_ptr - 1 :
      local.curr_1463.code == ">"
        ? local.iter_1462.tape_ptr == length(local.iter_1462.tape) - 1 ? 0 : local.iter_1462.tape_ptr + 1
        : local.iter_1462.tape_ptr)

    code_ptr = 1 + (
      local.curr_1463.code == "["
        ? local.iter_1462.tape[local.iter_1462.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1462.code_ptr)] : local.iter_1462.code_ptr :
      local.curr_1463.code == "]"
        ? local.iter_1462.tape[local.iter_1462.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1462.code_ptr)] : local.iter_1462.code_ptr
        : local.iter_1462.code_ptr)

    steps_taken = 1 + local.iter_1462.steps_taken
  }
}

locals {
  end_of_code_1464 = try(local.iter_1463.code_ptr >= length(var.code), true)

  curr_1464 = local.end_of_code_1464 ? null : {
    code = substr(var.code, local.iter_1463.code_ptr, 1)
    input = substr(var.code, local.iter_1463.code_ptr, 1) == "," ? substr(local.iter_1463.input, 0, 1) : null
  }

  iter_1464 = local.end_of_code_1464 ? local.iter_1463 : {
    input = (local.curr_1464.code == ","
      ? substr(local.iter_1463.input, 1, -1)
      : local.iter_1463.input)

    output = (local.curr_1464.code == "."
      ? "${local.iter_1463.output}${jsondecode(format("\"\\u%04x\"", local.iter_1463.tape[local.iter_1463.tape_ptr]))}"
      : local.iter_1463.output)
    
    tape = (
      local.curr_1464.code == "+"
        ? [for i, b in local.iter_1463.tape : (i == local.iter_1463.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1464.code == "-"
        ? [for i, b in local.iter_1463.tape : (i == local.iter_1463.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1464.code == ","
        ? [for i, b in local.iter_1463.tape : (i == local.iter_1463.tape_ptr ? local.ascii_lookup[local.curr_1464.input] : b)]
        : local.iter_1463.tape)

    tape_ptr = (
      local.curr_1464.code == "<"
        ? local.iter_1463.tape_ptr == 0 ? length(local.iter_1463.tape) - 1 : local.iter_1463.tape_ptr - 1 :
      local.curr_1464.code == ">"
        ? local.iter_1463.tape_ptr == length(local.iter_1463.tape) - 1 ? 0 : local.iter_1463.tape_ptr + 1
        : local.iter_1463.tape_ptr)

    code_ptr = 1 + (
      local.curr_1464.code == "["
        ? local.iter_1463.tape[local.iter_1463.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1463.code_ptr)] : local.iter_1463.code_ptr :
      local.curr_1464.code == "]"
        ? local.iter_1463.tape[local.iter_1463.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1463.code_ptr)] : local.iter_1463.code_ptr
        : local.iter_1463.code_ptr)

    steps_taken = 1 + local.iter_1463.steps_taken
  }
}

locals {
  end_of_code_1465 = try(local.iter_1464.code_ptr >= length(var.code), true)

  curr_1465 = local.end_of_code_1465 ? null : {
    code = substr(var.code, local.iter_1464.code_ptr, 1)
    input = substr(var.code, local.iter_1464.code_ptr, 1) == "," ? substr(local.iter_1464.input, 0, 1) : null
  }

  iter_1465 = local.end_of_code_1465 ? local.iter_1464 : {
    input = (local.curr_1465.code == ","
      ? substr(local.iter_1464.input, 1, -1)
      : local.iter_1464.input)

    output = (local.curr_1465.code == "."
      ? "${local.iter_1464.output}${jsondecode(format("\"\\u%04x\"", local.iter_1464.tape[local.iter_1464.tape_ptr]))}"
      : local.iter_1464.output)
    
    tape = (
      local.curr_1465.code == "+"
        ? [for i, b in local.iter_1464.tape : (i == local.iter_1464.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1465.code == "-"
        ? [for i, b in local.iter_1464.tape : (i == local.iter_1464.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1465.code == ","
        ? [for i, b in local.iter_1464.tape : (i == local.iter_1464.tape_ptr ? local.ascii_lookup[local.curr_1465.input] : b)]
        : local.iter_1464.tape)

    tape_ptr = (
      local.curr_1465.code == "<"
        ? local.iter_1464.tape_ptr == 0 ? length(local.iter_1464.tape) - 1 : local.iter_1464.tape_ptr - 1 :
      local.curr_1465.code == ">"
        ? local.iter_1464.tape_ptr == length(local.iter_1464.tape) - 1 ? 0 : local.iter_1464.tape_ptr + 1
        : local.iter_1464.tape_ptr)

    code_ptr = 1 + (
      local.curr_1465.code == "["
        ? local.iter_1464.tape[local.iter_1464.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1464.code_ptr)] : local.iter_1464.code_ptr :
      local.curr_1465.code == "]"
        ? local.iter_1464.tape[local.iter_1464.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1464.code_ptr)] : local.iter_1464.code_ptr
        : local.iter_1464.code_ptr)

    steps_taken = 1 + local.iter_1464.steps_taken
  }
}

locals {
  end_of_code_1466 = try(local.iter_1465.code_ptr >= length(var.code), true)

  curr_1466 = local.end_of_code_1466 ? null : {
    code = substr(var.code, local.iter_1465.code_ptr, 1)
    input = substr(var.code, local.iter_1465.code_ptr, 1) == "," ? substr(local.iter_1465.input, 0, 1) : null
  }

  iter_1466 = local.end_of_code_1466 ? local.iter_1465 : {
    input = (local.curr_1466.code == ","
      ? substr(local.iter_1465.input, 1, -1)
      : local.iter_1465.input)

    output = (local.curr_1466.code == "."
      ? "${local.iter_1465.output}${jsondecode(format("\"\\u%04x\"", local.iter_1465.tape[local.iter_1465.tape_ptr]))}"
      : local.iter_1465.output)
    
    tape = (
      local.curr_1466.code == "+"
        ? [for i, b in local.iter_1465.tape : (i == local.iter_1465.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1466.code == "-"
        ? [for i, b in local.iter_1465.tape : (i == local.iter_1465.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1466.code == ","
        ? [for i, b in local.iter_1465.tape : (i == local.iter_1465.tape_ptr ? local.ascii_lookup[local.curr_1466.input] : b)]
        : local.iter_1465.tape)

    tape_ptr = (
      local.curr_1466.code == "<"
        ? local.iter_1465.tape_ptr == 0 ? length(local.iter_1465.tape) - 1 : local.iter_1465.tape_ptr - 1 :
      local.curr_1466.code == ">"
        ? local.iter_1465.tape_ptr == length(local.iter_1465.tape) - 1 ? 0 : local.iter_1465.tape_ptr + 1
        : local.iter_1465.tape_ptr)

    code_ptr = 1 + (
      local.curr_1466.code == "["
        ? local.iter_1465.tape[local.iter_1465.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1465.code_ptr)] : local.iter_1465.code_ptr :
      local.curr_1466.code == "]"
        ? local.iter_1465.tape[local.iter_1465.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1465.code_ptr)] : local.iter_1465.code_ptr
        : local.iter_1465.code_ptr)

    steps_taken = 1 + local.iter_1465.steps_taken
  }
}

locals {
  end_of_code_1467 = try(local.iter_1466.code_ptr >= length(var.code), true)

  curr_1467 = local.end_of_code_1467 ? null : {
    code = substr(var.code, local.iter_1466.code_ptr, 1)
    input = substr(var.code, local.iter_1466.code_ptr, 1) == "," ? substr(local.iter_1466.input, 0, 1) : null
  }

  iter_1467 = local.end_of_code_1467 ? local.iter_1466 : {
    input = (local.curr_1467.code == ","
      ? substr(local.iter_1466.input, 1, -1)
      : local.iter_1466.input)

    output = (local.curr_1467.code == "."
      ? "${local.iter_1466.output}${jsondecode(format("\"\\u%04x\"", local.iter_1466.tape[local.iter_1466.tape_ptr]))}"
      : local.iter_1466.output)
    
    tape = (
      local.curr_1467.code == "+"
        ? [for i, b in local.iter_1466.tape : (i == local.iter_1466.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1467.code == "-"
        ? [for i, b in local.iter_1466.tape : (i == local.iter_1466.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1467.code == ","
        ? [for i, b in local.iter_1466.tape : (i == local.iter_1466.tape_ptr ? local.ascii_lookup[local.curr_1467.input] : b)]
        : local.iter_1466.tape)

    tape_ptr = (
      local.curr_1467.code == "<"
        ? local.iter_1466.tape_ptr == 0 ? length(local.iter_1466.tape) - 1 : local.iter_1466.tape_ptr - 1 :
      local.curr_1467.code == ">"
        ? local.iter_1466.tape_ptr == length(local.iter_1466.tape) - 1 ? 0 : local.iter_1466.tape_ptr + 1
        : local.iter_1466.tape_ptr)

    code_ptr = 1 + (
      local.curr_1467.code == "["
        ? local.iter_1466.tape[local.iter_1466.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1466.code_ptr)] : local.iter_1466.code_ptr :
      local.curr_1467.code == "]"
        ? local.iter_1466.tape[local.iter_1466.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1466.code_ptr)] : local.iter_1466.code_ptr
        : local.iter_1466.code_ptr)

    steps_taken = 1 + local.iter_1466.steps_taken
  }
}

locals {
  end_of_code_1468 = try(local.iter_1467.code_ptr >= length(var.code), true)

  curr_1468 = local.end_of_code_1468 ? null : {
    code = substr(var.code, local.iter_1467.code_ptr, 1)
    input = substr(var.code, local.iter_1467.code_ptr, 1) == "," ? substr(local.iter_1467.input, 0, 1) : null
  }

  iter_1468 = local.end_of_code_1468 ? local.iter_1467 : {
    input = (local.curr_1468.code == ","
      ? substr(local.iter_1467.input, 1, -1)
      : local.iter_1467.input)

    output = (local.curr_1468.code == "."
      ? "${local.iter_1467.output}${jsondecode(format("\"\\u%04x\"", local.iter_1467.tape[local.iter_1467.tape_ptr]))}"
      : local.iter_1467.output)
    
    tape = (
      local.curr_1468.code == "+"
        ? [for i, b in local.iter_1467.tape : (i == local.iter_1467.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1468.code == "-"
        ? [for i, b in local.iter_1467.tape : (i == local.iter_1467.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1468.code == ","
        ? [for i, b in local.iter_1467.tape : (i == local.iter_1467.tape_ptr ? local.ascii_lookup[local.curr_1468.input] : b)]
        : local.iter_1467.tape)

    tape_ptr = (
      local.curr_1468.code == "<"
        ? local.iter_1467.tape_ptr == 0 ? length(local.iter_1467.tape) - 1 : local.iter_1467.tape_ptr - 1 :
      local.curr_1468.code == ">"
        ? local.iter_1467.tape_ptr == length(local.iter_1467.tape) - 1 ? 0 : local.iter_1467.tape_ptr + 1
        : local.iter_1467.tape_ptr)

    code_ptr = 1 + (
      local.curr_1468.code == "["
        ? local.iter_1467.tape[local.iter_1467.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1467.code_ptr)] : local.iter_1467.code_ptr :
      local.curr_1468.code == "]"
        ? local.iter_1467.tape[local.iter_1467.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1467.code_ptr)] : local.iter_1467.code_ptr
        : local.iter_1467.code_ptr)

    steps_taken = 1 + local.iter_1467.steps_taken
  }
}

locals {
  end_of_code_1469 = try(local.iter_1468.code_ptr >= length(var.code), true)

  curr_1469 = local.end_of_code_1469 ? null : {
    code = substr(var.code, local.iter_1468.code_ptr, 1)
    input = substr(var.code, local.iter_1468.code_ptr, 1) == "," ? substr(local.iter_1468.input, 0, 1) : null
  }

  iter_1469 = local.end_of_code_1469 ? local.iter_1468 : {
    input = (local.curr_1469.code == ","
      ? substr(local.iter_1468.input, 1, -1)
      : local.iter_1468.input)

    output = (local.curr_1469.code == "."
      ? "${local.iter_1468.output}${jsondecode(format("\"\\u%04x\"", local.iter_1468.tape[local.iter_1468.tape_ptr]))}"
      : local.iter_1468.output)
    
    tape = (
      local.curr_1469.code == "+"
        ? [for i, b in local.iter_1468.tape : (i == local.iter_1468.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1469.code == "-"
        ? [for i, b in local.iter_1468.tape : (i == local.iter_1468.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1469.code == ","
        ? [for i, b in local.iter_1468.tape : (i == local.iter_1468.tape_ptr ? local.ascii_lookup[local.curr_1469.input] : b)]
        : local.iter_1468.tape)

    tape_ptr = (
      local.curr_1469.code == "<"
        ? local.iter_1468.tape_ptr == 0 ? length(local.iter_1468.tape) - 1 : local.iter_1468.tape_ptr - 1 :
      local.curr_1469.code == ">"
        ? local.iter_1468.tape_ptr == length(local.iter_1468.tape) - 1 ? 0 : local.iter_1468.tape_ptr + 1
        : local.iter_1468.tape_ptr)

    code_ptr = 1 + (
      local.curr_1469.code == "["
        ? local.iter_1468.tape[local.iter_1468.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1468.code_ptr)] : local.iter_1468.code_ptr :
      local.curr_1469.code == "]"
        ? local.iter_1468.tape[local.iter_1468.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1468.code_ptr)] : local.iter_1468.code_ptr
        : local.iter_1468.code_ptr)

    steps_taken = 1 + local.iter_1468.steps_taken
  }
}

locals {
  end_of_code_1470 = try(local.iter_1469.code_ptr >= length(var.code), true)

  curr_1470 = local.end_of_code_1470 ? null : {
    code = substr(var.code, local.iter_1469.code_ptr, 1)
    input = substr(var.code, local.iter_1469.code_ptr, 1) == "," ? substr(local.iter_1469.input, 0, 1) : null
  }

  iter_1470 = local.end_of_code_1470 ? local.iter_1469 : {
    input = (local.curr_1470.code == ","
      ? substr(local.iter_1469.input, 1, -1)
      : local.iter_1469.input)

    output = (local.curr_1470.code == "."
      ? "${local.iter_1469.output}${jsondecode(format("\"\\u%04x\"", local.iter_1469.tape[local.iter_1469.tape_ptr]))}"
      : local.iter_1469.output)
    
    tape = (
      local.curr_1470.code == "+"
        ? [for i, b in local.iter_1469.tape : (i == local.iter_1469.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1470.code == "-"
        ? [for i, b in local.iter_1469.tape : (i == local.iter_1469.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1470.code == ","
        ? [for i, b in local.iter_1469.tape : (i == local.iter_1469.tape_ptr ? local.ascii_lookup[local.curr_1470.input] : b)]
        : local.iter_1469.tape)

    tape_ptr = (
      local.curr_1470.code == "<"
        ? local.iter_1469.tape_ptr == 0 ? length(local.iter_1469.tape) - 1 : local.iter_1469.tape_ptr - 1 :
      local.curr_1470.code == ">"
        ? local.iter_1469.tape_ptr == length(local.iter_1469.tape) - 1 ? 0 : local.iter_1469.tape_ptr + 1
        : local.iter_1469.tape_ptr)

    code_ptr = 1 + (
      local.curr_1470.code == "["
        ? local.iter_1469.tape[local.iter_1469.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1469.code_ptr)] : local.iter_1469.code_ptr :
      local.curr_1470.code == "]"
        ? local.iter_1469.tape[local.iter_1469.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1469.code_ptr)] : local.iter_1469.code_ptr
        : local.iter_1469.code_ptr)

    steps_taken = 1 + local.iter_1469.steps_taken
  }
}

locals {
  end_of_code_1471 = try(local.iter_1470.code_ptr >= length(var.code), true)

  curr_1471 = local.end_of_code_1471 ? null : {
    code = substr(var.code, local.iter_1470.code_ptr, 1)
    input = substr(var.code, local.iter_1470.code_ptr, 1) == "," ? substr(local.iter_1470.input, 0, 1) : null
  }

  iter_1471 = local.end_of_code_1471 ? local.iter_1470 : {
    input = (local.curr_1471.code == ","
      ? substr(local.iter_1470.input, 1, -1)
      : local.iter_1470.input)

    output = (local.curr_1471.code == "."
      ? "${local.iter_1470.output}${jsondecode(format("\"\\u%04x\"", local.iter_1470.tape[local.iter_1470.tape_ptr]))}"
      : local.iter_1470.output)
    
    tape = (
      local.curr_1471.code == "+"
        ? [for i, b in local.iter_1470.tape : (i == local.iter_1470.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1471.code == "-"
        ? [for i, b in local.iter_1470.tape : (i == local.iter_1470.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1471.code == ","
        ? [for i, b in local.iter_1470.tape : (i == local.iter_1470.tape_ptr ? local.ascii_lookup[local.curr_1471.input] : b)]
        : local.iter_1470.tape)

    tape_ptr = (
      local.curr_1471.code == "<"
        ? local.iter_1470.tape_ptr == 0 ? length(local.iter_1470.tape) - 1 : local.iter_1470.tape_ptr - 1 :
      local.curr_1471.code == ">"
        ? local.iter_1470.tape_ptr == length(local.iter_1470.tape) - 1 ? 0 : local.iter_1470.tape_ptr + 1
        : local.iter_1470.tape_ptr)

    code_ptr = 1 + (
      local.curr_1471.code == "["
        ? local.iter_1470.tape[local.iter_1470.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1470.code_ptr)] : local.iter_1470.code_ptr :
      local.curr_1471.code == "]"
        ? local.iter_1470.tape[local.iter_1470.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1470.code_ptr)] : local.iter_1470.code_ptr
        : local.iter_1470.code_ptr)

    steps_taken = 1 + local.iter_1470.steps_taken
  }
}

locals {
  end_of_code_1472 = try(local.iter_1471.code_ptr >= length(var.code), true)

  curr_1472 = local.end_of_code_1472 ? null : {
    code = substr(var.code, local.iter_1471.code_ptr, 1)
    input = substr(var.code, local.iter_1471.code_ptr, 1) == "," ? substr(local.iter_1471.input, 0, 1) : null
  }

  iter_1472 = local.end_of_code_1472 ? local.iter_1471 : {
    input = (local.curr_1472.code == ","
      ? substr(local.iter_1471.input, 1, -1)
      : local.iter_1471.input)

    output = (local.curr_1472.code == "."
      ? "${local.iter_1471.output}${jsondecode(format("\"\\u%04x\"", local.iter_1471.tape[local.iter_1471.tape_ptr]))}"
      : local.iter_1471.output)
    
    tape = (
      local.curr_1472.code == "+"
        ? [for i, b in local.iter_1471.tape : (i == local.iter_1471.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1472.code == "-"
        ? [for i, b in local.iter_1471.tape : (i == local.iter_1471.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1472.code == ","
        ? [for i, b in local.iter_1471.tape : (i == local.iter_1471.tape_ptr ? local.ascii_lookup[local.curr_1472.input] : b)]
        : local.iter_1471.tape)

    tape_ptr = (
      local.curr_1472.code == "<"
        ? local.iter_1471.tape_ptr == 0 ? length(local.iter_1471.tape) - 1 : local.iter_1471.tape_ptr - 1 :
      local.curr_1472.code == ">"
        ? local.iter_1471.tape_ptr == length(local.iter_1471.tape) - 1 ? 0 : local.iter_1471.tape_ptr + 1
        : local.iter_1471.tape_ptr)

    code_ptr = 1 + (
      local.curr_1472.code == "["
        ? local.iter_1471.tape[local.iter_1471.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1471.code_ptr)] : local.iter_1471.code_ptr :
      local.curr_1472.code == "]"
        ? local.iter_1471.tape[local.iter_1471.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1471.code_ptr)] : local.iter_1471.code_ptr
        : local.iter_1471.code_ptr)

    steps_taken = 1 + local.iter_1471.steps_taken
  }
}

locals {
  end_of_code_1473 = try(local.iter_1472.code_ptr >= length(var.code), true)

  curr_1473 = local.end_of_code_1473 ? null : {
    code = substr(var.code, local.iter_1472.code_ptr, 1)
    input = substr(var.code, local.iter_1472.code_ptr, 1) == "," ? substr(local.iter_1472.input, 0, 1) : null
  }

  iter_1473 = local.end_of_code_1473 ? local.iter_1472 : {
    input = (local.curr_1473.code == ","
      ? substr(local.iter_1472.input, 1, -1)
      : local.iter_1472.input)

    output = (local.curr_1473.code == "."
      ? "${local.iter_1472.output}${jsondecode(format("\"\\u%04x\"", local.iter_1472.tape[local.iter_1472.tape_ptr]))}"
      : local.iter_1472.output)
    
    tape = (
      local.curr_1473.code == "+"
        ? [for i, b in local.iter_1472.tape : (i == local.iter_1472.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1473.code == "-"
        ? [for i, b in local.iter_1472.tape : (i == local.iter_1472.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1473.code == ","
        ? [for i, b in local.iter_1472.tape : (i == local.iter_1472.tape_ptr ? local.ascii_lookup[local.curr_1473.input] : b)]
        : local.iter_1472.tape)

    tape_ptr = (
      local.curr_1473.code == "<"
        ? local.iter_1472.tape_ptr == 0 ? length(local.iter_1472.tape) - 1 : local.iter_1472.tape_ptr - 1 :
      local.curr_1473.code == ">"
        ? local.iter_1472.tape_ptr == length(local.iter_1472.tape) - 1 ? 0 : local.iter_1472.tape_ptr + 1
        : local.iter_1472.tape_ptr)

    code_ptr = 1 + (
      local.curr_1473.code == "["
        ? local.iter_1472.tape[local.iter_1472.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1472.code_ptr)] : local.iter_1472.code_ptr :
      local.curr_1473.code == "]"
        ? local.iter_1472.tape[local.iter_1472.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1472.code_ptr)] : local.iter_1472.code_ptr
        : local.iter_1472.code_ptr)

    steps_taken = 1 + local.iter_1472.steps_taken
  }
}

locals {
  end_of_code_1474 = try(local.iter_1473.code_ptr >= length(var.code), true)

  curr_1474 = local.end_of_code_1474 ? null : {
    code = substr(var.code, local.iter_1473.code_ptr, 1)
    input = substr(var.code, local.iter_1473.code_ptr, 1) == "," ? substr(local.iter_1473.input, 0, 1) : null
  }

  iter_1474 = local.end_of_code_1474 ? local.iter_1473 : {
    input = (local.curr_1474.code == ","
      ? substr(local.iter_1473.input, 1, -1)
      : local.iter_1473.input)

    output = (local.curr_1474.code == "."
      ? "${local.iter_1473.output}${jsondecode(format("\"\\u%04x\"", local.iter_1473.tape[local.iter_1473.tape_ptr]))}"
      : local.iter_1473.output)
    
    tape = (
      local.curr_1474.code == "+"
        ? [for i, b in local.iter_1473.tape : (i == local.iter_1473.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1474.code == "-"
        ? [for i, b in local.iter_1473.tape : (i == local.iter_1473.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1474.code == ","
        ? [for i, b in local.iter_1473.tape : (i == local.iter_1473.tape_ptr ? local.ascii_lookup[local.curr_1474.input] : b)]
        : local.iter_1473.tape)

    tape_ptr = (
      local.curr_1474.code == "<"
        ? local.iter_1473.tape_ptr == 0 ? length(local.iter_1473.tape) - 1 : local.iter_1473.tape_ptr - 1 :
      local.curr_1474.code == ">"
        ? local.iter_1473.tape_ptr == length(local.iter_1473.tape) - 1 ? 0 : local.iter_1473.tape_ptr + 1
        : local.iter_1473.tape_ptr)

    code_ptr = 1 + (
      local.curr_1474.code == "["
        ? local.iter_1473.tape[local.iter_1473.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1473.code_ptr)] : local.iter_1473.code_ptr :
      local.curr_1474.code == "]"
        ? local.iter_1473.tape[local.iter_1473.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1473.code_ptr)] : local.iter_1473.code_ptr
        : local.iter_1473.code_ptr)

    steps_taken = 1 + local.iter_1473.steps_taken
  }
}

locals {
  end_of_code_1475 = try(local.iter_1474.code_ptr >= length(var.code), true)

  curr_1475 = local.end_of_code_1475 ? null : {
    code = substr(var.code, local.iter_1474.code_ptr, 1)
    input = substr(var.code, local.iter_1474.code_ptr, 1) == "," ? substr(local.iter_1474.input, 0, 1) : null
  }

  iter_1475 = local.end_of_code_1475 ? local.iter_1474 : {
    input = (local.curr_1475.code == ","
      ? substr(local.iter_1474.input, 1, -1)
      : local.iter_1474.input)

    output = (local.curr_1475.code == "."
      ? "${local.iter_1474.output}${jsondecode(format("\"\\u%04x\"", local.iter_1474.tape[local.iter_1474.tape_ptr]))}"
      : local.iter_1474.output)
    
    tape = (
      local.curr_1475.code == "+"
        ? [for i, b in local.iter_1474.tape : (i == local.iter_1474.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1475.code == "-"
        ? [for i, b in local.iter_1474.tape : (i == local.iter_1474.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1475.code == ","
        ? [for i, b in local.iter_1474.tape : (i == local.iter_1474.tape_ptr ? local.ascii_lookup[local.curr_1475.input] : b)]
        : local.iter_1474.tape)

    tape_ptr = (
      local.curr_1475.code == "<"
        ? local.iter_1474.tape_ptr == 0 ? length(local.iter_1474.tape) - 1 : local.iter_1474.tape_ptr - 1 :
      local.curr_1475.code == ">"
        ? local.iter_1474.tape_ptr == length(local.iter_1474.tape) - 1 ? 0 : local.iter_1474.tape_ptr + 1
        : local.iter_1474.tape_ptr)

    code_ptr = 1 + (
      local.curr_1475.code == "["
        ? local.iter_1474.tape[local.iter_1474.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1474.code_ptr)] : local.iter_1474.code_ptr :
      local.curr_1475.code == "]"
        ? local.iter_1474.tape[local.iter_1474.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1474.code_ptr)] : local.iter_1474.code_ptr
        : local.iter_1474.code_ptr)

    steps_taken = 1 + local.iter_1474.steps_taken
  }
}

locals {
  end_of_code_1476 = try(local.iter_1475.code_ptr >= length(var.code), true)

  curr_1476 = local.end_of_code_1476 ? null : {
    code = substr(var.code, local.iter_1475.code_ptr, 1)
    input = substr(var.code, local.iter_1475.code_ptr, 1) == "," ? substr(local.iter_1475.input, 0, 1) : null
  }

  iter_1476 = local.end_of_code_1476 ? local.iter_1475 : {
    input = (local.curr_1476.code == ","
      ? substr(local.iter_1475.input, 1, -1)
      : local.iter_1475.input)

    output = (local.curr_1476.code == "."
      ? "${local.iter_1475.output}${jsondecode(format("\"\\u%04x\"", local.iter_1475.tape[local.iter_1475.tape_ptr]))}"
      : local.iter_1475.output)
    
    tape = (
      local.curr_1476.code == "+"
        ? [for i, b in local.iter_1475.tape : (i == local.iter_1475.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1476.code == "-"
        ? [for i, b in local.iter_1475.tape : (i == local.iter_1475.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1476.code == ","
        ? [for i, b in local.iter_1475.tape : (i == local.iter_1475.tape_ptr ? local.ascii_lookup[local.curr_1476.input] : b)]
        : local.iter_1475.tape)

    tape_ptr = (
      local.curr_1476.code == "<"
        ? local.iter_1475.tape_ptr == 0 ? length(local.iter_1475.tape) - 1 : local.iter_1475.tape_ptr - 1 :
      local.curr_1476.code == ">"
        ? local.iter_1475.tape_ptr == length(local.iter_1475.tape) - 1 ? 0 : local.iter_1475.tape_ptr + 1
        : local.iter_1475.tape_ptr)

    code_ptr = 1 + (
      local.curr_1476.code == "["
        ? local.iter_1475.tape[local.iter_1475.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1475.code_ptr)] : local.iter_1475.code_ptr :
      local.curr_1476.code == "]"
        ? local.iter_1475.tape[local.iter_1475.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1475.code_ptr)] : local.iter_1475.code_ptr
        : local.iter_1475.code_ptr)

    steps_taken = 1 + local.iter_1475.steps_taken
  }
}

locals {
  end_of_code_1477 = try(local.iter_1476.code_ptr >= length(var.code), true)

  curr_1477 = local.end_of_code_1477 ? null : {
    code = substr(var.code, local.iter_1476.code_ptr, 1)
    input = substr(var.code, local.iter_1476.code_ptr, 1) == "," ? substr(local.iter_1476.input, 0, 1) : null
  }

  iter_1477 = local.end_of_code_1477 ? local.iter_1476 : {
    input = (local.curr_1477.code == ","
      ? substr(local.iter_1476.input, 1, -1)
      : local.iter_1476.input)

    output = (local.curr_1477.code == "."
      ? "${local.iter_1476.output}${jsondecode(format("\"\\u%04x\"", local.iter_1476.tape[local.iter_1476.tape_ptr]))}"
      : local.iter_1476.output)
    
    tape = (
      local.curr_1477.code == "+"
        ? [for i, b in local.iter_1476.tape : (i == local.iter_1476.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1477.code == "-"
        ? [for i, b in local.iter_1476.tape : (i == local.iter_1476.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1477.code == ","
        ? [for i, b in local.iter_1476.tape : (i == local.iter_1476.tape_ptr ? local.ascii_lookup[local.curr_1477.input] : b)]
        : local.iter_1476.tape)

    tape_ptr = (
      local.curr_1477.code == "<"
        ? local.iter_1476.tape_ptr == 0 ? length(local.iter_1476.tape) - 1 : local.iter_1476.tape_ptr - 1 :
      local.curr_1477.code == ">"
        ? local.iter_1476.tape_ptr == length(local.iter_1476.tape) - 1 ? 0 : local.iter_1476.tape_ptr + 1
        : local.iter_1476.tape_ptr)

    code_ptr = 1 + (
      local.curr_1477.code == "["
        ? local.iter_1476.tape[local.iter_1476.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1476.code_ptr)] : local.iter_1476.code_ptr :
      local.curr_1477.code == "]"
        ? local.iter_1476.tape[local.iter_1476.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1476.code_ptr)] : local.iter_1476.code_ptr
        : local.iter_1476.code_ptr)

    steps_taken = 1 + local.iter_1476.steps_taken
  }
}

locals {
  end_of_code_1478 = try(local.iter_1477.code_ptr >= length(var.code), true)

  curr_1478 = local.end_of_code_1478 ? null : {
    code = substr(var.code, local.iter_1477.code_ptr, 1)
    input = substr(var.code, local.iter_1477.code_ptr, 1) == "," ? substr(local.iter_1477.input, 0, 1) : null
  }

  iter_1478 = local.end_of_code_1478 ? local.iter_1477 : {
    input = (local.curr_1478.code == ","
      ? substr(local.iter_1477.input, 1, -1)
      : local.iter_1477.input)

    output = (local.curr_1478.code == "."
      ? "${local.iter_1477.output}${jsondecode(format("\"\\u%04x\"", local.iter_1477.tape[local.iter_1477.tape_ptr]))}"
      : local.iter_1477.output)
    
    tape = (
      local.curr_1478.code == "+"
        ? [for i, b in local.iter_1477.tape : (i == local.iter_1477.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1478.code == "-"
        ? [for i, b in local.iter_1477.tape : (i == local.iter_1477.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1478.code == ","
        ? [for i, b in local.iter_1477.tape : (i == local.iter_1477.tape_ptr ? local.ascii_lookup[local.curr_1478.input] : b)]
        : local.iter_1477.tape)

    tape_ptr = (
      local.curr_1478.code == "<"
        ? local.iter_1477.tape_ptr == 0 ? length(local.iter_1477.tape) - 1 : local.iter_1477.tape_ptr - 1 :
      local.curr_1478.code == ">"
        ? local.iter_1477.tape_ptr == length(local.iter_1477.tape) - 1 ? 0 : local.iter_1477.tape_ptr + 1
        : local.iter_1477.tape_ptr)

    code_ptr = 1 + (
      local.curr_1478.code == "["
        ? local.iter_1477.tape[local.iter_1477.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1477.code_ptr)] : local.iter_1477.code_ptr :
      local.curr_1478.code == "]"
        ? local.iter_1477.tape[local.iter_1477.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1477.code_ptr)] : local.iter_1477.code_ptr
        : local.iter_1477.code_ptr)

    steps_taken = 1 + local.iter_1477.steps_taken
  }
}

locals {
  end_of_code_1479 = try(local.iter_1478.code_ptr >= length(var.code), true)

  curr_1479 = local.end_of_code_1479 ? null : {
    code = substr(var.code, local.iter_1478.code_ptr, 1)
    input = substr(var.code, local.iter_1478.code_ptr, 1) == "," ? substr(local.iter_1478.input, 0, 1) : null
  }

  iter_1479 = local.end_of_code_1479 ? local.iter_1478 : {
    input = (local.curr_1479.code == ","
      ? substr(local.iter_1478.input, 1, -1)
      : local.iter_1478.input)

    output = (local.curr_1479.code == "."
      ? "${local.iter_1478.output}${jsondecode(format("\"\\u%04x\"", local.iter_1478.tape[local.iter_1478.tape_ptr]))}"
      : local.iter_1478.output)
    
    tape = (
      local.curr_1479.code == "+"
        ? [for i, b in local.iter_1478.tape : (i == local.iter_1478.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1479.code == "-"
        ? [for i, b in local.iter_1478.tape : (i == local.iter_1478.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1479.code == ","
        ? [for i, b in local.iter_1478.tape : (i == local.iter_1478.tape_ptr ? local.ascii_lookup[local.curr_1479.input] : b)]
        : local.iter_1478.tape)

    tape_ptr = (
      local.curr_1479.code == "<"
        ? local.iter_1478.tape_ptr == 0 ? length(local.iter_1478.tape) - 1 : local.iter_1478.tape_ptr - 1 :
      local.curr_1479.code == ">"
        ? local.iter_1478.tape_ptr == length(local.iter_1478.tape) - 1 ? 0 : local.iter_1478.tape_ptr + 1
        : local.iter_1478.tape_ptr)

    code_ptr = 1 + (
      local.curr_1479.code == "["
        ? local.iter_1478.tape[local.iter_1478.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1478.code_ptr)] : local.iter_1478.code_ptr :
      local.curr_1479.code == "]"
        ? local.iter_1478.tape[local.iter_1478.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1478.code_ptr)] : local.iter_1478.code_ptr
        : local.iter_1478.code_ptr)

    steps_taken = 1 + local.iter_1478.steps_taken
  }
}

locals {
  end_of_code_1480 = try(local.iter_1479.code_ptr >= length(var.code), true)

  curr_1480 = local.end_of_code_1480 ? null : {
    code = substr(var.code, local.iter_1479.code_ptr, 1)
    input = substr(var.code, local.iter_1479.code_ptr, 1) == "," ? substr(local.iter_1479.input, 0, 1) : null
  }

  iter_1480 = local.end_of_code_1480 ? local.iter_1479 : {
    input = (local.curr_1480.code == ","
      ? substr(local.iter_1479.input, 1, -1)
      : local.iter_1479.input)

    output = (local.curr_1480.code == "."
      ? "${local.iter_1479.output}${jsondecode(format("\"\\u%04x\"", local.iter_1479.tape[local.iter_1479.tape_ptr]))}"
      : local.iter_1479.output)
    
    tape = (
      local.curr_1480.code == "+"
        ? [for i, b in local.iter_1479.tape : (i == local.iter_1479.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1480.code == "-"
        ? [for i, b in local.iter_1479.tape : (i == local.iter_1479.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1480.code == ","
        ? [for i, b in local.iter_1479.tape : (i == local.iter_1479.tape_ptr ? local.ascii_lookup[local.curr_1480.input] : b)]
        : local.iter_1479.tape)

    tape_ptr = (
      local.curr_1480.code == "<"
        ? local.iter_1479.tape_ptr == 0 ? length(local.iter_1479.tape) - 1 : local.iter_1479.tape_ptr - 1 :
      local.curr_1480.code == ">"
        ? local.iter_1479.tape_ptr == length(local.iter_1479.tape) - 1 ? 0 : local.iter_1479.tape_ptr + 1
        : local.iter_1479.tape_ptr)

    code_ptr = 1 + (
      local.curr_1480.code == "["
        ? local.iter_1479.tape[local.iter_1479.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1479.code_ptr)] : local.iter_1479.code_ptr :
      local.curr_1480.code == "]"
        ? local.iter_1479.tape[local.iter_1479.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1479.code_ptr)] : local.iter_1479.code_ptr
        : local.iter_1479.code_ptr)

    steps_taken = 1 + local.iter_1479.steps_taken
  }
}

locals {
  end_of_code_1481 = try(local.iter_1480.code_ptr >= length(var.code), true)

  curr_1481 = local.end_of_code_1481 ? null : {
    code = substr(var.code, local.iter_1480.code_ptr, 1)
    input = substr(var.code, local.iter_1480.code_ptr, 1) == "," ? substr(local.iter_1480.input, 0, 1) : null
  }

  iter_1481 = local.end_of_code_1481 ? local.iter_1480 : {
    input = (local.curr_1481.code == ","
      ? substr(local.iter_1480.input, 1, -1)
      : local.iter_1480.input)

    output = (local.curr_1481.code == "."
      ? "${local.iter_1480.output}${jsondecode(format("\"\\u%04x\"", local.iter_1480.tape[local.iter_1480.tape_ptr]))}"
      : local.iter_1480.output)
    
    tape = (
      local.curr_1481.code == "+"
        ? [for i, b in local.iter_1480.tape : (i == local.iter_1480.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1481.code == "-"
        ? [for i, b in local.iter_1480.tape : (i == local.iter_1480.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1481.code == ","
        ? [for i, b in local.iter_1480.tape : (i == local.iter_1480.tape_ptr ? local.ascii_lookup[local.curr_1481.input] : b)]
        : local.iter_1480.tape)

    tape_ptr = (
      local.curr_1481.code == "<"
        ? local.iter_1480.tape_ptr == 0 ? length(local.iter_1480.tape) - 1 : local.iter_1480.tape_ptr - 1 :
      local.curr_1481.code == ">"
        ? local.iter_1480.tape_ptr == length(local.iter_1480.tape) - 1 ? 0 : local.iter_1480.tape_ptr + 1
        : local.iter_1480.tape_ptr)

    code_ptr = 1 + (
      local.curr_1481.code == "["
        ? local.iter_1480.tape[local.iter_1480.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1480.code_ptr)] : local.iter_1480.code_ptr :
      local.curr_1481.code == "]"
        ? local.iter_1480.tape[local.iter_1480.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1480.code_ptr)] : local.iter_1480.code_ptr
        : local.iter_1480.code_ptr)

    steps_taken = 1 + local.iter_1480.steps_taken
  }
}

locals {
  end_of_code_1482 = try(local.iter_1481.code_ptr >= length(var.code), true)

  curr_1482 = local.end_of_code_1482 ? null : {
    code = substr(var.code, local.iter_1481.code_ptr, 1)
    input = substr(var.code, local.iter_1481.code_ptr, 1) == "," ? substr(local.iter_1481.input, 0, 1) : null
  }

  iter_1482 = local.end_of_code_1482 ? local.iter_1481 : {
    input = (local.curr_1482.code == ","
      ? substr(local.iter_1481.input, 1, -1)
      : local.iter_1481.input)

    output = (local.curr_1482.code == "."
      ? "${local.iter_1481.output}${jsondecode(format("\"\\u%04x\"", local.iter_1481.tape[local.iter_1481.tape_ptr]))}"
      : local.iter_1481.output)
    
    tape = (
      local.curr_1482.code == "+"
        ? [for i, b in local.iter_1481.tape : (i == local.iter_1481.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1482.code == "-"
        ? [for i, b in local.iter_1481.tape : (i == local.iter_1481.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1482.code == ","
        ? [for i, b in local.iter_1481.tape : (i == local.iter_1481.tape_ptr ? local.ascii_lookup[local.curr_1482.input] : b)]
        : local.iter_1481.tape)

    tape_ptr = (
      local.curr_1482.code == "<"
        ? local.iter_1481.tape_ptr == 0 ? length(local.iter_1481.tape) - 1 : local.iter_1481.tape_ptr - 1 :
      local.curr_1482.code == ">"
        ? local.iter_1481.tape_ptr == length(local.iter_1481.tape) - 1 ? 0 : local.iter_1481.tape_ptr + 1
        : local.iter_1481.tape_ptr)

    code_ptr = 1 + (
      local.curr_1482.code == "["
        ? local.iter_1481.tape[local.iter_1481.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1481.code_ptr)] : local.iter_1481.code_ptr :
      local.curr_1482.code == "]"
        ? local.iter_1481.tape[local.iter_1481.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1481.code_ptr)] : local.iter_1481.code_ptr
        : local.iter_1481.code_ptr)

    steps_taken = 1 + local.iter_1481.steps_taken
  }
}

locals {
  end_of_code_1483 = try(local.iter_1482.code_ptr >= length(var.code), true)

  curr_1483 = local.end_of_code_1483 ? null : {
    code = substr(var.code, local.iter_1482.code_ptr, 1)
    input = substr(var.code, local.iter_1482.code_ptr, 1) == "," ? substr(local.iter_1482.input, 0, 1) : null
  }

  iter_1483 = local.end_of_code_1483 ? local.iter_1482 : {
    input = (local.curr_1483.code == ","
      ? substr(local.iter_1482.input, 1, -1)
      : local.iter_1482.input)

    output = (local.curr_1483.code == "."
      ? "${local.iter_1482.output}${jsondecode(format("\"\\u%04x\"", local.iter_1482.tape[local.iter_1482.tape_ptr]))}"
      : local.iter_1482.output)
    
    tape = (
      local.curr_1483.code == "+"
        ? [for i, b in local.iter_1482.tape : (i == local.iter_1482.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1483.code == "-"
        ? [for i, b in local.iter_1482.tape : (i == local.iter_1482.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1483.code == ","
        ? [for i, b in local.iter_1482.tape : (i == local.iter_1482.tape_ptr ? local.ascii_lookup[local.curr_1483.input] : b)]
        : local.iter_1482.tape)

    tape_ptr = (
      local.curr_1483.code == "<"
        ? local.iter_1482.tape_ptr == 0 ? length(local.iter_1482.tape) - 1 : local.iter_1482.tape_ptr - 1 :
      local.curr_1483.code == ">"
        ? local.iter_1482.tape_ptr == length(local.iter_1482.tape) - 1 ? 0 : local.iter_1482.tape_ptr + 1
        : local.iter_1482.tape_ptr)

    code_ptr = 1 + (
      local.curr_1483.code == "["
        ? local.iter_1482.tape[local.iter_1482.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1482.code_ptr)] : local.iter_1482.code_ptr :
      local.curr_1483.code == "]"
        ? local.iter_1482.tape[local.iter_1482.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1482.code_ptr)] : local.iter_1482.code_ptr
        : local.iter_1482.code_ptr)

    steps_taken = 1 + local.iter_1482.steps_taken
  }
}

locals {
  end_of_code_1484 = try(local.iter_1483.code_ptr >= length(var.code), true)

  curr_1484 = local.end_of_code_1484 ? null : {
    code = substr(var.code, local.iter_1483.code_ptr, 1)
    input = substr(var.code, local.iter_1483.code_ptr, 1) == "," ? substr(local.iter_1483.input, 0, 1) : null
  }

  iter_1484 = local.end_of_code_1484 ? local.iter_1483 : {
    input = (local.curr_1484.code == ","
      ? substr(local.iter_1483.input, 1, -1)
      : local.iter_1483.input)

    output = (local.curr_1484.code == "."
      ? "${local.iter_1483.output}${jsondecode(format("\"\\u%04x\"", local.iter_1483.tape[local.iter_1483.tape_ptr]))}"
      : local.iter_1483.output)
    
    tape = (
      local.curr_1484.code == "+"
        ? [for i, b in local.iter_1483.tape : (i == local.iter_1483.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1484.code == "-"
        ? [for i, b in local.iter_1483.tape : (i == local.iter_1483.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1484.code == ","
        ? [for i, b in local.iter_1483.tape : (i == local.iter_1483.tape_ptr ? local.ascii_lookup[local.curr_1484.input] : b)]
        : local.iter_1483.tape)

    tape_ptr = (
      local.curr_1484.code == "<"
        ? local.iter_1483.tape_ptr == 0 ? length(local.iter_1483.tape) - 1 : local.iter_1483.tape_ptr - 1 :
      local.curr_1484.code == ">"
        ? local.iter_1483.tape_ptr == length(local.iter_1483.tape) - 1 ? 0 : local.iter_1483.tape_ptr + 1
        : local.iter_1483.tape_ptr)

    code_ptr = 1 + (
      local.curr_1484.code == "["
        ? local.iter_1483.tape[local.iter_1483.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1483.code_ptr)] : local.iter_1483.code_ptr :
      local.curr_1484.code == "]"
        ? local.iter_1483.tape[local.iter_1483.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1483.code_ptr)] : local.iter_1483.code_ptr
        : local.iter_1483.code_ptr)

    steps_taken = 1 + local.iter_1483.steps_taken
  }
}

locals {
  end_of_code_1485 = try(local.iter_1484.code_ptr >= length(var.code), true)

  curr_1485 = local.end_of_code_1485 ? null : {
    code = substr(var.code, local.iter_1484.code_ptr, 1)
    input = substr(var.code, local.iter_1484.code_ptr, 1) == "," ? substr(local.iter_1484.input, 0, 1) : null
  }

  iter_1485 = local.end_of_code_1485 ? local.iter_1484 : {
    input = (local.curr_1485.code == ","
      ? substr(local.iter_1484.input, 1, -1)
      : local.iter_1484.input)

    output = (local.curr_1485.code == "."
      ? "${local.iter_1484.output}${jsondecode(format("\"\\u%04x\"", local.iter_1484.tape[local.iter_1484.tape_ptr]))}"
      : local.iter_1484.output)
    
    tape = (
      local.curr_1485.code == "+"
        ? [for i, b in local.iter_1484.tape : (i == local.iter_1484.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1485.code == "-"
        ? [for i, b in local.iter_1484.tape : (i == local.iter_1484.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1485.code == ","
        ? [for i, b in local.iter_1484.tape : (i == local.iter_1484.tape_ptr ? local.ascii_lookup[local.curr_1485.input] : b)]
        : local.iter_1484.tape)

    tape_ptr = (
      local.curr_1485.code == "<"
        ? local.iter_1484.tape_ptr == 0 ? length(local.iter_1484.tape) - 1 : local.iter_1484.tape_ptr - 1 :
      local.curr_1485.code == ">"
        ? local.iter_1484.tape_ptr == length(local.iter_1484.tape) - 1 ? 0 : local.iter_1484.tape_ptr + 1
        : local.iter_1484.tape_ptr)

    code_ptr = 1 + (
      local.curr_1485.code == "["
        ? local.iter_1484.tape[local.iter_1484.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1484.code_ptr)] : local.iter_1484.code_ptr :
      local.curr_1485.code == "]"
        ? local.iter_1484.tape[local.iter_1484.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1484.code_ptr)] : local.iter_1484.code_ptr
        : local.iter_1484.code_ptr)

    steps_taken = 1 + local.iter_1484.steps_taken
  }
}

locals {
  end_of_code_1486 = try(local.iter_1485.code_ptr >= length(var.code), true)

  curr_1486 = local.end_of_code_1486 ? null : {
    code = substr(var.code, local.iter_1485.code_ptr, 1)
    input = substr(var.code, local.iter_1485.code_ptr, 1) == "," ? substr(local.iter_1485.input, 0, 1) : null
  }

  iter_1486 = local.end_of_code_1486 ? local.iter_1485 : {
    input = (local.curr_1486.code == ","
      ? substr(local.iter_1485.input, 1, -1)
      : local.iter_1485.input)

    output = (local.curr_1486.code == "."
      ? "${local.iter_1485.output}${jsondecode(format("\"\\u%04x\"", local.iter_1485.tape[local.iter_1485.tape_ptr]))}"
      : local.iter_1485.output)
    
    tape = (
      local.curr_1486.code == "+"
        ? [for i, b in local.iter_1485.tape : (i == local.iter_1485.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1486.code == "-"
        ? [for i, b in local.iter_1485.tape : (i == local.iter_1485.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1486.code == ","
        ? [for i, b in local.iter_1485.tape : (i == local.iter_1485.tape_ptr ? local.ascii_lookup[local.curr_1486.input] : b)]
        : local.iter_1485.tape)

    tape_ptr = (
      local.curr_1486.code == "<"
        ? local.iter_1485.tape_ptr == 0 ? length(local.iter_1485.tape) - 1 : local.iter_1485.tape_ptr - 1 :
      local.curr_1486.code == ">"
        ? local.iter_1485.tape_ptr == length(local.iter_1485.tape) - 1 ? 0 : local.iter_1485.tape_ptr + 1
        : local.iter_1485.tape_ptr)

    code_ptr = 1 + (
      local.curr_1486.code == "["
        ? local.iter_1485.tape[local.iter_1485.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1485.code_ptr)] : local.iter_1485.code_ptr :
      local.curr_1486.code == "]"
        ? local.iter_1485.tape[local.iter_1485.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1485.code_ptr)] : local.iter_1485.code_ptr
        : local.iter_1485.code_ptr)

    steps_taken = 1 + local.iter_1485.steps_taken
  }
}

locals {
  end_of_code_1487 = try(local.iter_1486.code_ptr >= length(var.code), true)

  curr_1487 = local.end_of_code_1487 ? null : {
    code = substr(var.code, local.iter_1486.code_ptr, 1)
    input = substr(var.code, local.iter_1486.code_ptr, 1) == "," ? substr(local.iter_1486.input, 0, 1) : null
  }

  iter_1487 = local.end_of_code_1487 ? local.iter_1486 : {
    input = (local.curr_1487.code == ","
      ? substr(local.iter_1486.input, 1, -1)
      : local.iter_1486.input)

    output = (local.curr_1487.code == "."
      ? "${local.iter_1486.output}${jsondecode(format("\"\\u%04x\"", local.iter_1486.tape[local.iter_1486.tape_ptr]))}"
      : local.iter_1486.output)
    
    tape = (
      local.curr_1487.code == "+"
        ? [for i, b in local.iter_1486.tape : (i == local.iter_1486.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1487.code == "-"
        ? [for i, b in local.iter_1486.tape : (i == local.iter_1486.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1487.code == ","
        ? [for i, b in local.iter_1486.tape : (i == local.iter_1486.tape_ptr ? local.ascii_lookup[local.curr_1487.input] : b)]
        : local.iter_1486.tape)

    tape_ptr = (
      local.curr_1487.code == "<"
        ? local.iter_1486.tape_ptr == 0 ? length(local.iter_1486.tape) - 1 : local.iter_1486.tape_ptr - 1 :
      local.curr_1487.code == ">"
        ? local.iter_1486.tape_ptr == length(local.iter_1486.tape) - 1 ? 0 : local.iter_1486.tape_ptr + 1
        : local.iter_1486.tape_ptr)

    code_ptr = 1 + (
      local.curr_1487.code == "["
        ? local.iter_1486.tape[local.iter_1486.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1486.code_ptr)] : local.iter_1486.code_ptr :
      local.curr_1487.code == "]"
        ? local.iter_1486.tape[local.iter_1486.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1486.code_ptr)] : local.iter_1486.code_ptr
        : local.iter_1486.code_ptr)

    steps_taken = 1 + local.iter_1486.steps_taken
  }
}

locals {
  end_of_code_1488 = try(local.iter_1487.code_ptr >= length(var.code), true)

  curr_1488 = local.end_of_code_1488 ? null : {
    code = substr(var.code, local.iter_1487.code_ptr, 1)
    input = substr(var.code, local.iter_1487.code_ptr, 1) == "," ? substr(local.iter_1487.input, 0, 1) : null
  }

  iter_1488 = local.end_of_code_1488 ? local.iter_1487 : {
    input = (local.curr_1488.code == ","
      ? substr(local.iter_1487.input, 1, -1)
      : local.iter_1487.input)

    output = (local.curr_1488.code == "."
      ? "${local.iter_1487.output}${jsondecode(format("\"\\u%04x\"", local.iter_1487.tape[local.iter_1487.tape_ptr]))}"
      : local.iter_1487.output)
    
    tape = (
      local.curr_1488.code == "+"
        ? [for i, b in local.iter_1487.tape : (i == local.iter_1487.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1488.code == "-"
        ? [for i, b in local.iter_1487.tape : (i == local.iter_1487.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1488.code == ","
        ? [for i, b in local.iter_1487.tape : (i == local.iter_1487.tape_ptr ? local.ascii_lookup[local.curr_1488.input] : b)]
        : local.iter_1487.tape)

    tape_ptr = (
      local.curr_1488.code == "<"
        ? local.iter_1487.tape_ptr == 0 ? length(local.iter_1487.tape) - 1 : local.iter_1487.tape_ptr - 1 :
      local.curr_1488.code == ">"
        ? local.iter_1487.tape_ptr == length(local.iter_1487.tape) - 1 ? 0 : local.iter_1487.tape_ptr + 1
        : local.iter_1487.tape_ptr)

    code_ptr = 1 + (
      local.curr_1488.code == "["
        ? local.iter_1487.tape[local.iter_1487.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1487.code_ptr)] : local.iter_1487.code_ptr :
      local.curr_1488.code == "]"
        ? local.iter_1487.tape[local.iter_1487.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1487.code_ptr)] : local.iter_1487.code_ptr
        : local.iter_1487.code_ptr)

    steps_taken = 1 + local.iter_1487.steps_taken
  }
}

locals {
  end_of_code_1489 = try(local.iter_1488.code_ptr >= length(var.code), true)

  curr_1489 = local.end_of_code_1489 ? null : {
    code = substr(var.code, local.iter_1488.code_ptr, 1)
    input = substr(var.code, local.iter_1488.code_ptr, 1) == "," ? substr(local.iter_1488.input, 0, 1) : null
  }

  iter_1489 = local.end_of_code_1489 ? local.iter_1488 : {
    input = (local.curr_1489.code == ","
      ? substr(local.iter_1488.input, 1, -1)
      : local.iter_1488.input)

    output = (local.curr_1489.code == "."
      ? "${local.iter_1488.output}${jsondecode(format("\"\\u%04x\"", local.iter_1488.tape[local.iter_1488.tape_ptr]))}"
      : local.iter_1488.output)
    
    tape = (
      local.curr_1489.code == "+"
        ? [for i, b in local.iter_1488.tape : (i == local.iter_1488.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1489.code == "-"
        ? [for i, b in local.iter_1488.tape : (i == local.iter_1488.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1489.code == ","
        ? [for i, b in local.iter_1488.tape : (i == local.iter_1488.tape_ptr ? local.ascii_lookup[local.curr_1489.input] : b)]
        : local.iter_1488.tape)

    tape_ptr = (
      local.curr_1489.code == "<"
        ? local.iter_1488.tape_ptr == 0 ? length(local.iter_1488.tape) - 1 : local.iter_1488.tape_ptr - 1 :
      local.curr_1489.code == ">"
        ? local.iter_1488.tape_ptr == length(local.iter_1488.tape) - 1 ? 0 : local.iter_1488.tape_ptr + 1
        : local.iter_1488.tape_ptr)

    code_ptr = 1 + (
      local.curr_1489.code == "["
        ? local.iter_1488.tape[local.iter_1488.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1488.code_ptr)] : local.iter_1488.code_ptr :
      local.curr_1489.code == "]"
        ? local.iter_1488.tape[local.iter_1488.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1488.code_ptr)] : local.iter_1488.code_ptr
        : local.iter_1488.code_ptr)

    steps_taken = 1 + local.iter_1488.steps_taken
  }
}

locals {
  end_of_code_1490 = try(local.iter_1489.code_ptr >= length(var.code), true)

  curr_1490 = local.end_of_code_1490 ? null : {
    code = substr(var.code, local.iter_1489.code_ptr, 1)
    input = substr(var.code, local.iter_1489.code_ptr, 1) == "," ? substr(local.iter_1489.input, 0, 1) : null
  }

  iter_1490 = local.end_of_code_1490 ? local.iter_1489 : {
    input = (local.curr_1490.code == ","
      ? substr(local.iter_1489.input, 1, -1)
      : local.iter_1489.input)

    output = (local.curr_1490.code == "."
      ? "${local.iter_1489.output}${jsondecode(format("\"\\u%04x\"", local.iter_1489.tape[local.iter_1489.tape_ptr]))}"
      : local.iter_1489.output)
    
    tape = (
      local.curr_1490.code == "+"
        ? [for i, b in local.iter_1489.tape : (i == local.iter_1489.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1490.code == "-"
        ? [for i, b in local.iter_1489.tape : (i == local.iter_1489.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1490.code == ","
        ? [for i, b in local.iter_1489.tape : (i == local.iter_1489.tape_ptr ? local.ascii_lookup[local.curr_1490.input] : b)]
        : local.iter_1489.tape)

    tape_ptr = (
      local.curr_1490.code == "<"
        ? local.iter_1489.tape_ptr == 0 ? length(local.iter_1489.tape) - 1 : local.iter_1489.tape_ptr - 1 :
      local.curr_1490.code == ">"
        ? local.iter_1489.tape_ptr == length(local.iter_1489.tape) - 1 ? 0 : local.iter_1489.tape_ptr + 1
        : local.iter_1489.tape_ptr)

    code_ptr = 1 + (
      local.curr_1490.code == "["
        ? local.iter_1489.tape[local.iter_1489.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1489.code_ptr)] : local.iter_1489.code_ptr :
      local.curr_1490.code == "]"
        ? local.iter_1489.tape[local.iter_1489.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1489.code_ptr)] : local.iter_1489.code_ptr
        : local.iter_1489.code_ptr)

    steps_taken = 1 + local.iter_1489.steps_taken
  }
}

locals {
  end_of_code_1491 = try(local.iter_1490.code_ptr >= length(var.code), true)

  curr_1491 = local.end_of_code_1491 ? null : {
    code = substr(var.code, local.iter_1490.code_ptr, 1)
    input = substr(var.code, local.iter_1490.code_ptr, 1) == "," ? substr(local.iter_1490.input, 0, 1) : null
  }

  iter_1491 = local.end_of_code_1491 ? local.iter_1490 : {
    input = (local.curr_1491.code == ","
      ? substr(local.iter_1490.input, 1, -1)
      : local.iter_1490.input)

    output = (local.curr_1491.code == "."
      ? "${local.iter_1490.output}${jsondecode(format("\"\\u%04x\"", local.iter_1490.tape[local.iter_1490.tape_ptr]))}"
      : local.iter_1490.output)
    
    tape = (
      local.curr_1491.code == "+"
        ? [for i, b in local.iter_1490.tape : (i == local.iter_1490.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1491.code == "-"
        ? [for i, b in local.iter_1490.tape : (i == local.iter_1490.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1491.code == ","
        ? [for i, b in local.iter_1490.tape : (i == local.iter_1490.tape_ptr ? local.ascii_lookup[local.curr_1491.input] : b)]
        : local.iter_1490.tape)

    tape_ptr = (
      local.curr_1491.code == "<"
        ? local.iter_1490.tape_ptr == 0 ? length(local.iter_1490.tape) - 1 : local.iter_1490.tape_ptr - 1 :
      local.curr_1491.code == ">"
        ? local.iter_1490.tape_ptr == length(local.iter_1490.tape) - 1 ? 0 : local.iter_1490.tape_ptr + 1
        : local.iter_1490.tape_ptr)

    code_ptr = 1 + (
      local.curr_1491.code == "["
        ? local.iter_1490.tape[local.iter_1490.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1490.code_ptr)] : local.iter_1490.code_ptr :
      local.curr_1491.code == "]"
        ? local.iter_1490.tape[local.iter_1490.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1490.code_ptr)] : local.iter_1490.code_ptr
        : local.iter_1490.code_ptr)

    steps_taken = 1 + local.iter_1490.steps_taken
  }
}

locals {
  end_of_code_1492 = try(local.iter_1491.code_ptr >= length(var.code), true)

  curr_1492 = local.end_of_code_1492 ? null : {
    code = substr(var.code, local.iter_1491.code_ptr, 1)
    input = substr(var.code, local.iter_1491.code_ptr, 1) == "," ? substr(local.iter_1491.input, 0, 1) : null
  }

  iter_1492 = local.end_of_code_1492 ? local.iter_1491 : {
    input = (local.curr_1492.code == ","
      ? substr(local.iter_1491.input, 1, -1)
      : local.iter_1491.input)

    output = (local.curr_1492.code == "."
      ? "${local.iter_1491.output}${jsondecode(format("\"\\u%04x\"", local.iter_1491.tape[local.iter_1491.tape_ptr]))}"
      : local.iter_1491.output)
    
    tape = (
      local.curr_1492.code == "+"
        ? [for i, b in local.iter_1491.tape : (i == local.iter_1491.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1492.code == "-"
        ? [for i, b in local.iter_1491.tape : (i == local.iter_1491.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1492.code == ","
        ? [for i, b in local.iter_1491.tape : (i == local.iter_1491.tape_ptr ? local.ascii_lookup[local.curr_1492.input] : b)]
        : local.iter_1491.tape)

    tape_ptr = (
      local.curr_1492.code == "<"
        ? local.iter_1491.tape_ptr == 0 ? length(local.iter_1491.tape) - 1 : local.iter_1491.tape_ptr - 1 :
      local.curr_1492.code == ">"
        ? local.iter_1491.tape_ptr == length(local.iter_1491.tape) - 1 ? 0 : local.iter_1491.tape_ptr + 1
        : local.iter_1491.tape_ptr)

    code_ptr = 1 + (
      local.curr_1492.code == "["
        ? local.iter_1491.tape[local.iter_1491.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1491.code_ptr)] : local.iter_1491.code_ptr :
      local.curr_1492.code == "]"
        ? local.iter_1491.tape[local.iter_1491.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1491.code_ptr)] : local.iter_1491.code_ptr
        : local.iter_1491.code_ptr)

    steps_taken = 1 + local.iter_1491.steps_taken
  }
}

locals {
  end_of_code_1493 = try(local.iter_1492.code_ptr >= length(var.code), true)

  curr_1493 = local.end_of_code_1493 ? null : {
    code = substr(var.code, local.iter_1492.code_ptr, 1)
    input = substr(var.code, local.iter_1492.code_ptr, 1) == "," ? substr(local.iter_1492.input, 0, 1) : null
  }

  iter_1493 = local.end_of_code_1493 ? local.iter_1492 : {
    input = (local.curr_1493.code == ","
      ? substr(local.iter_1492.input, 1, -1)
      : local.iter_1492.input)

    output = (local.curr_1493.code == "."
      ? "${local.iter_1492.output}${jsondecode(format("\"\\u%04x\"", local.iter_1492.tape[local.iter_1492.tape_ptr]))}"
      : local.iter_1492.output)
    
    tape = (
      local.curr_1493.code == "+"
        ? [for i, b in local.iter_1492.tape : (i == local.iter_1492.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1493.code == "-"
        ? [for i, b in local.iter_1492.tape : (i == local.iter_1492.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1493.code == ","
        ? [for i, b in local.iter_1492.tape : (i == local.iter_1492.tape_ptr ? local.ascii_lookup[local.curr_1493.input] : b)]
        : local.iter_1492.tape)

    tape_ptr = (
      local.curr_1493.code == "<"
        ? local.iter_1492.tape_ptr == 0 ? length(local.iter_1492.tape) - 1 : local.iter_1492.tape_ptr - 1 :
      local.curr_1493.code == ">"
        ? local.iter_1492.tape_ptr == length(local.iter_1492.tape) - 1 ? 0 : local.iter_1492.tape_ptr + 1
        : local.iter_1492.tape_ptr)

    code_ptr = 1 + (
      local.curr_1493.code == "["
        ? local.iter_1492.tape[local.iter_1492.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1492.code_ptr)] : local.iter_1492.code_ptr :
      local.curr_1493.code == "]"
        ? local.iter_1492.tape[local.iter_1492.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1492.code_ptr)] : local.iter_1492.code_ptr
        : local.iter_1492.code_ptr)

    steps_taken = 1 + local.iter_1492.steps_taken
  }
}

locals {
  end_of_code_1494 = try(local.iter_1493.code_ptr >= length(var.code), true)

  curr_1494 = local.end_of_code_1494 ? null : {
    code = substr(var.code, local.iter_1493.code_ptr, 1)
    input = substr(var.code, local.iter_1493.code_ptr, 1) == "," ? substr(local.iter_1493.input, 0, 1) : null
  }

  iter_1494 = local.end_of_code_1494 ? local.iter_1493 : {
    input = (local.curr_1494.code == ","
      ? substr(local.iter_1493.input, 1, -1)
      : local.iter_1493.input)

    output = (local.curr_1494.code == "."
      ? "${local.iter_1493.output}${jsondecode(format("\"\\u%04x\"", local.iter_1493.tape[local.iter_1493.tape_ptr]))}"
      : local.iter_1493.output)
    
    tape = (
      local.curr_1494.code == "+"
        ? [for i, b in local.iter_1493.tape : (i == local.iter_1493.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1494.code == "-"
        ? [for i, b in local.iter_1493.tape : (i == local.iter_1493.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1494.code == ","
        ? [for i, b in local.iter_1493.tape : (i == local.iter_1493.tape_ptr ? local.ascii_lookup[local.curr_1494.input] : b)]
        : local.iter_1493.tape)

    tape_ptr = (
      local.curr_1494.code == "<"
        ? local.iter_1493.tape_ptr == 0 ? length(local.iter_1493.tape) - 1 : local.iter_1493.tape_ptr - 1 :
      local.curr_1494.code == ">"
        ? local.iter_1493.tape_ptr == length(local.iter_1493.tape) - 1 ? 0 : local.iter_1493.tape_ptr + 1
        : local.iter_1493.tape_ptr)

    code_ptr = 1 + (
      local.curr_1494.code == "["
        ? local.iter_1493.tape[local.iter_1493.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1493.code_ptr)] : local.iter_1493.code_ptr :
      local.curr_1494.code == "]"
        ? local.iter_1493.tape[local.iter_1493.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1493.code_ptr)] : local.iter_1493.code_ptr
        : local.iter_1493.code_ptr)

    steps_taken = 1 + local.iter_1493.steps_taken
  }
}

locals {
  end_of_code_1495 = try(local.iter_1494.code_ptr >= length(var.code), true)

  curr_1495 = local.end_of_code_1495 ? null : {
    code = substr(var.code, local.iter_1494.code_ptr, 1)
    input = substr(var.code, local.iter_1494.code_ptr, 1) == "," ? substr(local.iter_1494.input, 0, 1) : null
  }

  iter_1495 = local.end_of_code_1495 ? local.iter_1494 : {
    input = (local.curr_1495.code == ","
      ? substr(local.iter_1494.input, 1, -1)
      : local.iter_1494.input)

    output = (local.curr_1495.code == "."
      ? "${local.iter_1494.output}${jsondecode(format("\"\\u%04x\"", local.iter_1494.tape[local.iter_1494.tape_ptr]))}"
      : local.iter_1494.output)
    
    tape = (
      local.curr_1495.code == "+"
        ? [for i, b in local.iter_1494.tape : (i == local.iter_1494.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1495.code == "-"
        ? [for i, b in local.iter_1494.tape : (i == local.iter_1494.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1495.code == ","
        ? [for i, b in local.iter_1494.tape : (i == local.iter_1494.tape_ptr ? local.ascii_lookup[local.curr_1495.input] : b)]
        : local.iter_1494.tape)

    tape_ptr = (
      local.curr_1495.code == "<"
        ? local.iter_1494.tape_ptr == 0 ? length(local.iter_1494.tape) - 1 : local.iter_1494.tape_ptr - 1 :
      local.curr_1495.code == ">"
        ? local.iter_1494.tape_ptr == length(local.iter_1494.tape) - 1 ? 0 : local.iter_1494.tape_ptr + 1
        : local.iter_1494.tape_ptr)

    code_ptr = 1 + (
      local.curr_1495.code == "["
        ? local.iter_1494.tape[local.iter_1494.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1494.code_ptr)] : local.iter_1494.code_ptr :
      local.curr_1495.code == "]"
        ? local.iter_1494.tape[local.iter_1494.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1494.code_ptr)] : local.iter_1494.code_ptr
        : local.iter_1494.code_ptr)

    steps_taken = 1 + local.iter_1494.steps_taken
  }
}

locals {
  end_of_code_1496 = try(local.iter_1495.code_ptr >= length(var.code), true)

  curr_1496 = local.end_of_code_1496 ? null : {
    code = substr(var.code, local.iter_1495.code_ptr, 1)
    input = substr(var.code, local.iter_1495.code_ptr, 1) == "," ? substr(local.iter_1495.input, 0, 1) : null
  }

  iter_1496 = local.end_of_code_1496 ? local.iter_1495 : {
    input = (local.curr_1496.code == ","
      ? substr(local.iter_1495.input, 1, -1)
      : local.iter_1495.input)

    output = (local.curr_1496.code == "."
      ? "${local.iter_1495.output}${jsondecode(format("\"\\u%04x\"", local.iter_1495.tape[local.iter_1495.tape_ptr]))}"
      : local.iter_1495.output)
    
    tape = (
      local.curr_1496.code == "+"
        ? [for i, b in local.iter_1495.tape : (i == local.iter_1495.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1496.code == "-"
        ? [for i, b in local.iter_1495.tape : (i == local.iter_1495.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1496.code == ","
        ? [for i, b in local.iter_1495.tape : (i == local.iter_1495.tape_ptr ? local.ascii_lookup[local.curr_1496.input] : b)]
        : local.iter_1495.tape)

    tape_ptr = (
      local.curr_1496.code == "<"
        ? local.iter_1495.tape_ptr == 0 ? length(local.iter_1495.tape) - 1 : local.iter_1495.tape_ptr - 1 :
      local.curr_1496.code == ">"
        ? local.iter_1495.tape_ptr == length(local.iter_1495.tape) - 1 ? 0 : local.iter_1495.tape_ptr + 1
        : local.iter_1495.tape_ptr)

    code_ptr = 1 + (
      local.curr_1496.code == "["
        ? local.iter_1495.tape[local.iter_1495.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1495.code_ptr)] : local.iter_1495.code_ptr :
      local.curr_1496.code == "]"
        ? local.iter_1495.tape[local.iter_1495.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1495.code_ptr)] : local.iter_1495.code_ptr
        : local.iter_1495.code_ptr)

    steps_taken = 1 + local.iter_1495.steps_taken
  }
}

locals {
  end_of_code_1497 = try(local.iter_1496.code_ptr >= length(var.code), true)

  curr_1497 = local.end_of_code_1497 ? null : {
    code = substr(var.code, local.iter_1496.code_ptr, 1)
    input = substr(var.code, local.iter_1496.code_ptr, 1) == "," ? substr(local.iter_1496.input, 0, 1) : null
  }

  iter_1497 = local.end_of_code_1497 ? local.iter_1496 : {
    input = (local.curr_1497.code == ","
      ? substr(local.iter_1496.input, 1, -1)
      : local.iter_1496.input)

    output = (local.curr_1497.code == "."
      ? "${local.iter_1496.output}${jsondecode(format("\"\\u%04x\"", local.iter_1496.tape[local.iter_1496.tape_ptr]))}"
      : local.iter_1496.output)
    
    tape = (
      local.curr_1497.code == "+"
        ? [for i, b in local.iter_1496.tape : (i == local.iter_1496.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1497.code == "-"
        ? [for i, b in local.iter_1496.tape : (i == local.iter_1496.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1497.code == ","
        ? [for i, b in local.iter_1496.tape : (i == local.iter_1496.tape_ptr ? local.ascii_lookup[local.curr_1497.input] : b)]
        : local.iter_1496.tape)

    tape_ptr = (
      local.curr_1497.code == "<"
        ? local.iter_1496.tape_ptr == 0 ? length(local.iter_1496.tape) - 1 : local.iter_1496.tape_ptr - 1 :
      local.curr_1497.code == ">"
        ? local.iter_1496.tape_ptr == length(local.iter_1496.tape) - 1 ? 0 : local.iter_1496.tape_ptr + 1
        : local.iter_1496.tape_ptr)

    code_ptr = 1 + (
      local.curr_1497.code == "["
        ? local.iter_1496.tape[local.iter_1496.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1496.code_ptr)] : local.iter_1496.code_ptr :
      local.curr_1497.code == "]"
        ? local.iter_1496.tape[local.iter_1496.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1496.code_ptr)] : local.iter_1496.code_ptr
        : local.iter_1496.code_ptr)

    steps_taken = 1 + local.iter_1496.steps_taken
  }
}

locals {
  end_of_code_1498 = try(local.iter_1497.code_ptr >= length(var.code), true)

  curr_1498 = local.end_of_code_1498 ? null : {
    code = substr(var.code, local.iter_1497.code_ptr, 1)
    input = substr(var.code, local.iter_1497.code_ptr, 1) == "," ? substr(local.iter_1497.input, 0, 1) : null
  }

  iter_1498 = local.end_of_code_1498 ? local.iter_1497 : {
    input = (local.curr_1498.code == ","
      ? substr(local.iter_1497.input, 1, -1)
      : local.iter_1497.input)

    output = (local.curr_1498.code == "."
      ? "${local.iter_1497.output}${jsondecode(format("\"\\u%04x\"", local.iter_1497.tape[local.iter_1497.tape_ptr]))}"
      : local.iter_1497.output)
    
    tape = (
      local.curr_1498.code == "+"
        ? [for i, b in local.iter_1497.tape : (i == local.iter_1497.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1498.code == "-"
        ? [for i, b in local.iter_1497.tape : (i == local.iter_1497.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1498.code == ","
        ? [for i, b in local.iter_1497.tape : (i == local.iter_1497.tape_ptr ? local.ascii_lookup[local.curr_1498.input] : b)]
        : local.iter_1497.tape)

    tape_ptr = (
      local.curr_1498.code == "<"
        ? local.iter_1497.tape_ptr == 0 ? length(local.iter_1497.tape) - 1 : local.iter_1497.tape_ptr - 1 :
      local.curr_1498.code == ">"
        ? local.iter_1497.tape_ptr == length(local.iter_1497.tape) - 1 ? 0 : local.iter_1497.tape_ptr + 1
        : local.iter_1497.tape_ptr)

    code_ptr = 1 + (
      local.curr_1498.code == "["
        ? local.iter_1497.tape[local.iter_1497.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1497.code_ptr)] : local.iter_1497.code_ptr :
      local.curr_1498.code == "]"
        ? local.iter_1497.tape[local.iter_1497.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1497.code_ptr)] : local.iter_1497.code_ptr
        : local.iter_1497.code_ptr)

    steps_taken = 1 + local.iter_1497.steps_taken
  }
}

locals {
  end_of_code_1499 = try(local.iter_1498.code_ptr >= length(var.code), true)

  curr_1499 = local.end_of_code_1499 ? null : {
    code = substr(var.code, local.iter_1498.code_ptr, 1)
    input = substr(var.code, local.iter_1498.code_ptr, 1) == "," ? substr(local.iter_1498.input, 0, 1) : null
  }

  iter_1499 = local.end_of_code_1499 ? local.iter_1498 : {
    input = (local.curr_1499.code == ","
      ? substr(local.iter_1498.input, 1, -1)
      : local.iter_1498.input)

    output = (local.curr_1499.code == "."
      ? "${local.iter_1498.output}${jsondecode(format("\"\\u%04x\"", local.iter_1498.tape[local.iter_1498.tape_ptr]))}"
      : local.iter_1498.output)
    
    tape = (
      local.curr_1499.code == "+"
        ? [for i, b in local.iter_1498.tape : (i == local.iter_1498.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1499.code == "-"
        ? [for i, b in local.iter_1498.tape : (i == local.iter_1498.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1499.code == ","
        ? [for i, b in local.iter_1498.tape : (i == local.iter_1498.tape_ptr ? local.ascii_lookup[local.curr_1499.input] : b)]
        : local.iter_1498.tape)

    tape_ptr = (
      local.curr_1499.code == "<"
        ? local.iter_1498.tape_ptr == 0 ? length(local.iter_1498.tape) - 1 : local.iter_1498.tape_ptr - 1 :
      local.curr_1499.code == ">"
        ? local.iter_1498.tape_ptr == length(local.iter_1498.tape) - 1 ? 0 : local.iter_1498.tape_ptr + 1
        : local.iter_1498.tape_ptr)

    code_ptr = 1 + (
      local.curr_1499.code == "["
        ? local.iter_1498.tape[local.iter_1498.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1498.code_ptr)] : local.iter_1498.code_ptr :
      local.curr_1499.code == "]"
        ? local.iter_1498.tape[local.iter_1498.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1498.code_ptr)] : local.iter_1498.code_ptr
        : local.iter_1498.code_ptr)

    steps_taken = 1 + local.iter_1498.steps_taken
  }
}

locals {
  end_of_code_1500 = try(local.iter_1499.code_ptr >= length(var.code), true)

  curr_1500 = local.end_of_code_1500 ? null : {
    code = substr(var.code, local.iter_1499.code_ptr, 1)
    input = substr(var.code, local.iter_1499.code_ptr, 1) == "," ? substr(local.iter_1499.input, 0, 1) : null
  }

  iter_1500 = local.end_of_code_1500 ? local.iter_1499 : {
    input = (local.curr_1500.code == ","
      ? substr(local.iter_1499.input, 1, -1)
      : local.iter_1499.input)

    output = (local.curr_1500.code == "."
      ? "${local.iter_1499.output}${jsondecode(format("\"\\u%04x\"", local.iter_1499.tape[local.iter_1499.tape_ptr]))}"
      : local.iter_1499.output)
    
    tape = (
      local.curr_1500.code == "+"
        ? [for i, b in local.iter_1499.tape : (i == local.iter_1499.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1500.code == "-"
        ? [for i, b in local.iter_1499.tape : (i == local.iter_1499.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1500.code == ","
        ? [for i, b in local.iter_1499.tape : (i == local.iter_1499.tape_ptr ? local.ascii_lookup[local.curr_1500.input] : b)]
        : local.iter_1499.tape)

    tape_ptr = (
      local.curr_1500.code == "<"
        ? local.iter_1499.tape_ptr == 0 ? length(local.iter_1499.tape) - 1 : local.iter_1499.tape_ptr - 1 :
      local.curr_1500.code == ">"
        ? local.iter_1499.tape_ptr == length(local.iter_1499.tape) - 1 ? 0 : local.iter_1499.tape_ptr + 1
        : local.iter_1499.tape_ptr)

    code_ptr = 1 + (
      local.curr_1500.code == "["
        ? local.iter_1499.tape[local.iter_1499.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1499.code_ptr)] : local.iter_1499.code_ptr :
      local.curr_1500.code == "]"
        ? local.iter_1499.tape[local.iter_1499.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1499.code_ptr)] : local.iter_1499.code_ptr
        : local.iter_1499.code_ptr)

    steps_taken = 1 + local.iter_1499.steps_taken
  }
}

locals {
  end_of_code_1501 = try(local.iter_1500.code_ptr >= length(var.code), true)

  curr_1501 = local.end_of_code_1501 ? null : {
    code = substr(var.code, local.iter_1500.code_ptr, 1)
    input = substr(var.code, local.iter_1500.code_ptr, 1) == "," ? substr(local.iter_1500.input, 0, 1) : null
  }

  iter_1501 = local.end_of_code_1501 ? local.iter_1500 : {
    input = (local.curr_1501.code == ","
      ? substr(local.iter_1500.input, 1, -1)
      : local.iter_1500.input)

    output = (local.curr_1501.code == "."
      ? "${local.iter_1500.output}${jsondecode(format("\"\\u%04x\"", local.iter_1500.tape[local.iter_1500.tape_ptr]))}"
      : local.iter_1500.output)
    
    tape = (
      local.curr_1501.code == "+"
        ? [for i, b in local.iter_1500.tape : (i == local.iter_1500.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1501.code == "-"
        ? [for i, b in local.iter_1500.tape : (i == local.iter_1500.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1501.code == ","
        ? [for i, b in local.iter_1500.tape : (i == local.iter_1500.tape_ptr ? local.ascii_lookup[local.curr_1501.input] : b)]
        : local.iter_1500.tape)

    tape_ptr = (
      local.curr_1501.code == "<"
        ? local.iter_1500.tape_ptr == 0 ? length(local.iter_1500.tape) - 1 : local.iter_1500.tape_ptr - 1 :
      local.curr_1501.code == ">"
        ? local.iter_1500.tape_ptr == length(local.iter_1500.tape) - 1 ? 0 : local.iter_1500.tape_ptr + 1
        : local.iter_1500.tape_ptr)

    code_ptr = 1 + (
      local.curr_1501.code == "["
        ? local.iter_1500.tape[local.iter_1500.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1500.code_ptr)] : local.iter_1500.code_ptr :
      local.curr_1501.code == "]"
        ? local.iter_1500.tape[local.iter_1500.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1500.code_ptr)] : local.iter_1500.code_ptr
        : local.iter_1500.code_ptr)

    steps_taken = 1 + local.iter_1500.steps_taken
  }
}

locals {
  end_of_code_1502 = try(local.iter_1501.code_ptr >= length(var.code), true)

  curr_1502 = local.end_of_code_1502 ? null : {
    code = substr(var.code, local.iter_1501.code_ptr, 1)
    input = substr(var.code, local.iter_1501.code_ptr, 1) == "," ? substr(local.iter_1501.input, 0, 1) : null
  }

  iter_1502 = local.end_of_code_1502 ? local.iter_1501 : {
    input = (local.curr_1502.code == ","
      ? substr(local.iter_1501.input, 1, -1)
      : local.iter_1501.input)

    output = (local.curr_1502.code == "."
      ? "${local.iter_1501.output}${jsondecode(format("\"\\u%04x\"", local.iter_1501.tape[local.iter_1501.tape_ptr]))}"
      : local.iter_1501.output)
    
    tape = (
      local.curr_1502.code == "+"
        ? [for i, b in local.iter_1501.tape : (i == local.iter_1501.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1502.code == "-"
        ? [for i, b in local.iter_1501.tape : (i == local.iter_1501.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1502.code == ","
        ? [for i, b in local.iter_1501.tape : (i == local.iter_1501.tape_ptr ? local.ascii_lookup[local.curr_1502.input] : b)]
        : local.iter_1501.tape)

    tape_ptr = (
      local.curr_1502.code == "<"
        ? local.iter_1501.tape_ptr == 0 ? length(local.iter_1501.tape) - 1 : local.iter_1501.tape_ptr - 1 :
      local.curr_1502.code == ">"
        ? local.iter_1501.tape_ptr == length(local.iter_1501.tape) - 1 ? 0 : local.iter_1501.tape_ptr + 1
        : local.iter_1501.tape_ptr)

    code_ptr = 1 + (
      local.curr_1502.code == "["
        ? local.iter_1501.tape[local.iter_1501.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1501.code_ptr)] : local.iter_1501.code_ptr :
      local.curr_1502.code == "]"
        ? local.iter_1501.tape[local.iter_1501.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1501.code_ptr)] : local.iter_1501.code_ptr
        : local.iter_1501.code_ptr)

    steps_taken = 1 + local.iter_1501.steps_taken
  }
}

locals {
  end_of_code_1503 = try(local.iter_1502.code_ptr >= length(var.code), true)

  curr_1503 = local.end_of_code_1503 ? null : {
    code = substr(var.code, local.iter_1502.code_ptr, 1)
    input = substr(var.code, local.iter_1502.code_ptr, 1) == "," ? substr(local.iter_1502.input, 0, 1) : null
  }

  iter_1503 = local.end_of_code_1503 ? local.iter_1502 : {
    input = (local.curr_1503.code == ","
      ? substr(local.iter_1502.input, 1, -1)
      : local.iter_1502.input)

    output = (local.curr_1503.code == "."
      ? "${local.iter_1502.output}${jsondecode(format("\"\\u%04x\"", local.iter_1502.tape[local.iter_1502.tape_ptr]))}"
      : local.iter_1502.output)
    
    tape = (
      local.curr_1503.code == "+"
        ? [for i, b in local.iter_1502.tape : (i == local.iter_1502.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1503.code == "-"
        ? [for i, b in local.iter_1502.tape : (i == local.iter_1502.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1503.code == ","
        ? [for i, b in local.iter_1502.tape : (i == local.iter_1502.tape_ptr ? local.ascii_lookup[local.curr_1503.input] : b)]
        : local.iter_1502.tape)

    tape_ptr = (
      local.curr_1503.code == "<"
        ? local.iter_1502.tape_ptr == 0 ? length(local.iter_1502.tape) - 1 : local.iter_1502.tape_ptr - 1 :
      local.curr_1503.code == ">"
        ? local.iter_1502.tape_ptr == length(local.iter_1502.tape) - 1 ? 0 : local.iter_1502.tape_ptr + 1
        : local.iter_1502.tape_ptr)

    code_ptr = 1 + (
      local.curr_1503.code == "["
        ? local.iter_1502.tape[local.iter_1502.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1502.code_ptr)] : local.iter_1502.code_ptr :
      local.curr_1503.code == "]"
        ? local.iter_1502.tape[local.iter_1502.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1502.code_ptr)] : local.iter_1502.code_ptr
        : local.iter_1502.code_ptr)

    steps_taken = 1 + local.iter_1502.steps_taken
  }
}

locals {
  end_of_code_1504 = try(local.iter_1503.code_ptr >= length(var.code), true)

  curr_1504 = local.end_of_code_1504 ? null : {
    code = substr(var.code, local.iter_1503.code_ptr, 1)
    input = substr(var.code, local.iter_1503.code_ptr, 1) == "," ? substr(local.iter_1503.input, 0, 1) : null
  }

  iter_1504 = local.end_of_code_1504 ? local.iter_1503 : {
    input = (local.curr_1504.code == ","
      ? substr(local.iter_1503.input, 1, -1)
      : local.iter_1503.input)

    output = (local.curr_1504.code == "."
      ? "${local.iter_1503.output}${jsondecode(format("\"\\u%04x\"", local.iter_1503.tape[local.iter_1503.tape_ptr]))}"
      : local.iter_1503.output)
    
    tape = (
      local.curr_1504.code == "+"
        ? [for i, b in local.iter_1503.tape : (i == local.iter_1503.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1504.code == "-"
        ? [for i, b in local.iter_1503.tape : (i == local.iter_1503.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1504.code == ","
        ? [for i, b in local.iter_1503.tape : (i == local.iter_1503.tape_ptr ? local.ascii_lookup[local.curr_1504.input] : b)]
        : local.iter_1503.tape)

    tape_ptr = (
      local.curr_1504.code == "<"
        ? local.iter_1503.tape_ptr == 0 ? length(local.iter_1503.tape) - 1 : local.iter_1503.tape_ptr - 1 :
      local.curr_1504.code == ">"
        ? local.iter_1503.tape_ptr == length(local.iter_1503.tape) - 1 ? 0 : local.iter_1503.tape_ptr + 1
        : local.iter_1503.tape_ptr)

    code_ptr = 1 + (
      local.curr_1504.code == "["
        ? local.iter_1503.tape[local.iter_1503.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1503.code_ptr)] : local.iter_1503.code_ptr :
      local.curr_1504.code == "]"
        ? local.iter_1503.tape[local.iter_1503.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1503.code_ptr)] : local.iter_1503.code_ptr
        : local.iter_1503.code_ptr)

    steps_taken = 1 + local.iter_1503.steps_taken
  }
}

locals {
  end_of_code_1505 = try(local.iter_1504.code_ptr >= length(var.code), true)

  curr_1505 = local.end_of_code_1505 ? null : {
    code = substr(var.code, local.iter_1504.code_ptr, 1)
    input = substr(var.code, local.iter_1504.code_ptr, 1) == "," ? substr(local.iter_1504.input, 0, 1) : null
  }

  iter_1505 = local.end_of_code_1505 ? local.iter_1504 : {
    input = (local.curr_1505.code == ","
      ? substr(local.iter_1504.input, 1, -1)
      : local.iter_1504.input)

    output = (local.curr_1505.code == "."
      ? "${local.iter_1504.output}${jsondecode(format("\"\\u%04x\"", local.iter_1504.tape[local.iter_1504.tape_ptr]))}"
      : local.iter_1504.output)
    
    tape = (
      local.curr_1505.code == "+"
        ? [for i, b in local.iter_1504.tape : (i == local.iter_1504.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1505.code == "-"
        ? [for i, b in local.iter_1504.tape : (i == local.iter_1504.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1505.code == ","
        ? [for i, b in local.iter_1504.tape : (i == local.iter_1504.tape_ptr ? local.ascii_lookup[local.curr_1505.input] : b)]
        : local.iter_1504.tape)

    tape_ptr = (
      local.curr_1505.code == "<"
        ? local.iter_1504.tape_ptr == 0 ? length(local.iter_1504.tape) - 1 : local.iter_1504.tape_ptr - 1 :
      local.curr_1505.code == ">"
        ? local.iter_1504.tape_ptr == length(local.iter_1504.tape) - 1 ? 0 : local.iter_1504.tape_ptr + 1
        : local.iter_1504.tape_ptr)

    code_ptr = 1 + (
      local.curr_1505.code == "["
        ? local.iter_1504.tape[local.iter_1504.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1504.code_ptr)] : local.iter_1504.code_ptr :
      local.curr_1505.code == "]"
        ? local.iter_1504.tape[local.iter_1504.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1504.code_ptr)] : local.iter_1504.code_ptr
        : local.iter_1504.code_ptr)

    steps_taken = 1 + local.iter_1504.steps_taken
  }
}

locals {
  end_of_code_1506 = try(local.iter_1505.code_ptr >= length(var.code), true)

  curr_1506 = local.end_of_code_1506 ? null : {
    code = substr(var.code, local.iter_1505.code_ptr, 1)
    input = substr(var.code, local.iter_1505.code_ptr, 1) == "," ? substr(local.iter_1505.input, 0, 1) : null
  }

  iter_1506 = local.end_of_code_1506 ? local.iter_1505 : {
    input = (local.curr_1506.code == ","
      ? substr(local.iter_1505.input, 1, -1)
      : local.iter_1505.input)

    output = (local.curr_1506.code == "."
      ? "${local.iter_1505.output}${jsondecode(format("\"\\u%04x\"", local.iter_1505.tape[local.iter_1505.tape_ptr]))}"
      : local.iter_1505.output)
    
    tape = (
      local.curr_1506.code == "+"
        ? [for i, b in local.iter_1505.tape : (i == local.iter_1505.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1506.code == "-"
        ? [for i, b in local.iter_1505.tape : (i == local.iter_1505.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1506.code == ","
        ? [for i, b in local.iter_1505.tape : (i == local.iter_1505.tape_ptr ? local.ascii_lookup[local.curr_1506.input] : b)]
        : local.iter_1505.tape)

    tape_ptr = (
      local.curr_1506.code == "<"
        ? local.iter_1505.tape_ptr == 0 ? length(local.iter_1505.tape) - 1 : local.iter_1505.tape_ptr - 1 :
      local.curr_1506.code == ">"
        ? local.iter_1505.tape_ptr == length(local.iter_1505.tape) - 1 ? 0 : local.iter_1505.tape_ptr + 1
        : local.iter_1505.tape_ptr)

    code_ptr = 1 + (
      local.curr_1506.code == "["
        ? local.iter_1505.tape[local.iter_1505.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1505.code_ptr)] : local.iter_1505.code_ptr :
      local.curr_1506.code == "]"
        ? local.iter_1505.tape[local.iter_1505.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1505.code_ptr)] : local.iter_1505.code_ptr
        : local.iter_1505.code_ptr)

    steps_taken = 1 + local.iter_1505.steps_taken
  }
}

locals {
  end_of_code_1507 = try(local.iter_1506.code_ptr >= length(var.code), true)

  curr_1507 = local.end_of_code_1507 ? null : {
    code = substr(var.code, local.iter_1506.code_ptr, 1)
    input = substr(var.code, local.iter_1506.code_ptr, 1) == "," ? substr(local.iter_1506.input, 0, 1) : null
  }

  iter_1507 = local.end_of_code_1507 ? local.iter_1506 : {
    input = (local.curr_1507.code == ","
      ? substr(local.iter_1506.input, 1, -1)
      : local.iter_1506.input)

    output = (local.curr_1507.code == "."
      ? "${local.iter_1506.output}${jsondecode(format("\"\\u%04x\"", local.iter_1506.tape[local.iter_1506.tape_ptr]))}"
      : local.iter_1506.output)
    
    tape = (
      local.curr_1507.code == "+"
        ? [for i, b in local.iter_1506.tape : (i == local.iter_1506.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1507.code == "-"
        ? [for i, b in local.iter_1506.tape : (i == local.iter_1506.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1507.code == ","
        ? [for i, b in local.iter_1506.tape : (i == local.iter_1506.tape_ptr ? local.ascii_lookup[local.curr_1507.input] : b)]
        : local.iter_1506.tape)

    tape_ptr = (
      local.curr_1507.code == "<"
        ? local.iter_1506.tape_ptr == 0 ? length(local.iter_1506.tape) - 1 : local.iter_1506.tape_ptr - 1 :
      local.curr_1507.code == ">"
        ? local.iter_1506.tape_ptr == length(local.iter_1506.tape) - 1 ? 0 : local.iter_1506.tape_ptr + 1
        : local.iter_1506.tape_ptr)

    code_ptr = 1 + (
      local.curr_1507.code == "["
        ? local.iter_1506.tape[local.iter_1506.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1506.code_ptr)] : local.iter_1506.code_ptr :
      local.curr_1507.code == "]"
        ? local.iter_1506.tape[local.iter_1506.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1506.code_ptr)] : local.iter_1506.code_ptr
        : local.iter_1506.code_ptr)

    steps_taken = 1 + local.iter_1506.steps_taken
  }
}

locals {
  end_of_code_1508 = try(local.iter_1507.code_ptr >= length(var.code), true)

  curr_1508 = local.end_of_code_1508 ? null : {
    code = substr(var.code, local.iter_1507.code_ptr, 1)
    input = substr(var.code, local.iter_1507.code_ptr, 1) == "," ? substr(local.iter_1507.input, 0, 1) : null
  }

  iter_1508 = local.end_of_code_1508 ? local.iter_1507 : {
    input = (local.curr_1508.code == ","
      ? substr(local.iter_1507.input, 1, -1)
      : local.iter_1507.input)

    output = (local.curr_1508.code == "."
      ? "${local.iter_1507.output}${jsondecode(format("\"\\u%04x\"", local.iter_1507.tape[local.iter_1507.tape_ptr]))}"
      : local.iter_1507.output)
    
    tape = (
      local.curr_1508.code == "+"
        ? [for i, b in local.iter_1507.tape : (i == local.iter_1507.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1508.code == "-"
        ? [for i, b in local.iter_1507.tape : (i == local.iter_1507.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1508.code == ","
        ? [for i, b in local.iter_1507.tape : (i == local.iter_1507.tape_ptr ? local.ascii_lookup[local.curr_1508.input] : b)]
        : local.iter_1507.tape)

    tape_ptr = (
      local.curr_1508.code == "<"
        ? local.iter_1507.tape_ptr == 0 ? length(local.iter_1507.tape) - 1 : local.iter_1507.tape_ptr - 1 :
      local.curr_1508.code == ">"
        ? local.iter_1507.tape_ptr == length(local.iter_1507.tape) - 1 ? 0 : local.iter_1507.tape_ptr + 1
        : local.iter_1507.tape_ptr)

    code_ptr = 1 + (
      local.curr_1508.code == "["
        ? local.iter_1507.tape[local.iter_1507.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1507.code_ptr)] : local.iter_1507.code_ptr :
      local.curr_1508.code == "]"
        ? local.iter_1507.tape[local.iter_1507.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1507.code_ptr)] : local.iter_1507.code_ptr
        : local.iter_1507.code_ptr)

    steps_taken = 1 + local.iter_1507.steps_taken
  }
}

locals {
  end_of_code_1509 = try(local.iter_1508.code_ptr >= length(var.code), true)

  curr_1509 = local.end_of_code_1509 ? null : {
    code = substr(var.code, local.iter_1508.code_ptr, 1)
    input = substr(var.code, local.iter_1508.code_ptr, 1) == "," ? substr(local.iter_1508.input, 0, 1) : null
  }

  iter_1509 = local.end_of_code_1509 ? local.iter_1508 : {
    input = (local.curr_1509.code == ","
      ? substr(local.iter_1508.input, 1, -1)
      : local.iter_1508.input)

    output = (local.curr_1509.code == "."
      ? "${local.iter_1508.output}${jsondecode(format("\"\\u%04x\"", local.iter_1508.tape[local.iter_1508.tape_ptr]))}"
      : local.iter_1508.output)
    
    tape = (
      local.curr_1509.code == "+"
        ? [for i, b in local.iter_1508.tape : (i == local.iter_1508.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1509.code == "-"
        ? [for i, b in local.iter_1508.tape : (i == local.iter_1508.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1509.code == ","
        ? [for i, b in local.iter_1508.tape : (i == local.iter_1508.tape_ptr ? local.ascii_lookup[local.curr_1509.input] : b)]
        : local.iter_1508.tape)

    tape_ptr = (
      local.curr_1509.code == "<"
        ? local.iter_1508.tape_ptr == 0 ? length(local.iter_1508.tape) - 1 : local.iter_1508.tape_ptr - 1 :
      local.curr_1509.code == ">"
        ? local.iter_1508.tape_ptr == length(local.iter_1508.tape) - 1 ? 0 : local.iter_1508.tape_ptr + 1
        : local.iter_1508.tape_ptr)

    code_ptr = 1 + (
      local.curr_1509.code == "["
        ? local.iter_1508.tape[local.iter_1508.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1508.code_ptr)] : local.iter_1508.code_ptr :
      local.curr_1509.code == "]"
        ? local.iter_1508.tape[local.iter_1508.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1508.code_ptr)] : local.iter_1508.code_ptr
        : local.iter_1508.code_ptr)

    steps_taken = 1 + local.iter_1508.steps_taken
  }
}

locals {
  end_of_code_1510 = try(local.iter_1509.code_ptr >= length(var.code), true)

  curr_1510 = local.end_of_code_1510 ? null : {
    code = substr(var.code, local.iter_1509.code_ptr, 1)
    input = substr(var.code, local.iter_1509.code_ptr, 1) == "," ? substr(local.iter_1509.input, 0, 1) : null
  }

  iter_1510 = local.end_of_code_1510 ? local.iter_1509 : {
    input = (local.curr_1510.code == ","
      ? substr(local.iter_1509.input, 1, -1)
      : local.iter_1509.input)

    output = (local.curr_1510.code == "."
      ? "${local.iter_1509.output}${jsondecode(format("\"\\u%04x\"", local.iter_1509.tape[local.iter_1509.tape_ptr]))}"
      : local.iter_1509.output)
    
    tape = (
      local.curr_1510.code == "+"
        ? [for i, b in local.iter_1509.tape : (i == local.iter_1509.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1510.code == "-"
        ? [for i, b in local.iter_1509.tape : (i == local.iter_1509.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1510.code == ","
        ? [for i, b in local.iter_1509.tape : (i == local.iter_1509.tape_ptr ? local.ascii_lookup[local.curr_1510.input] : b)]
        : local.iter_1509.tape)

    tape_ptr = (
      local.curr_1510.code == "<"
        ? local.iter_1509.tape_ptr == 0 ? length(local.iter_1509.tape) - 1 : local.iter_1509.tape_ptr - 1 :
      local.curr_1510.code == ">"
        ? local.iter_1509.tape_ptr == length(local.iter_1509.tape) - 1 ? 0 : local.iter_1509.tape_ptr + 1
        : local.iter_1509.tape_ptr)

    code_ptr = 1 + (
      local.curr_1510.code == "["
        ? local.iter_1509.tape[local.iter_1509.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1509.code_ptr)] : local.iter_1509.code_ptr :
      local.curr_1510.code == "]"
        ? local.iter_1509.tape[local.iter_1509.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1509.code_ptr)] : local.iter_1509.code_ptr
        : local.iter_1509.code_ptr)

    steps_taken = 1 + local.iter_1509.steps_taken
  }
}

locals {
  end_of_code_1511 = try(local.iter_1510.code_ptr >= length(var.code), true)

  curr_1511 = local.end_of_code_1511 ? null : {
    code = substr(var.code, local.iter_1510.code_ptr, 1)
    input = substr(var.code, local.iter_1510.code_ptr, 1) == "," ? substr(local.iter_1510.input, 0, 1) : null
  }

  iter_1511 = local.end_of_code_1511 ? local.iter_1510 : {
    input = (local.curr_1511.code == ","
      ? substr(local.iter_1510.input, 1, -1)
      : local.iter_1510.input)

    output = (local.curr_1511.code == "."
      ? "${local.iter_1510.output}${jsondecode(format("\"\\u%04x\"", local.iter_1510.tape[local.iter_1510.tape_ptr]))}"
      : local.iter_1510.output)
    
    tape = (
      local.curr_1511.code == "+"
        ? [for i, b in local.iter_1510.tape : (i == local.iter_1510.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1511.code == "-"
        ? [for i, b in local.iter_1510.tape : (i == local.iter_1510.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1511.code == ","
        ? [for i, b in local.iter_1510.tape : (i == local.iter_1510.tape_ptr ? local.ascii_lookup[local.curr_1511.input] : b)]
        : local.iter_1510.tape)

    tape_ptr = (
      local.curr_1511.code == "<"
        ? local.iter_1510.tape_ptr == 0 ? length(local.iter_1510.tape) - 1 : local.iter_1510.tape_ptr - 1 :
      local.curr_1511.code == ">"
        ? local.iter_1510.tape_ptr == length(local.iter_1510.tape) - 1 ? 0 : local.iter_1510.tape_ptr + 1
        : local.iter_1510.tape_ptr)

    code_ptr = 1 + (
      local.curr_1511.code == "["
        ? local.iter_1510.tape[local.iter_1510.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1510.code_ptr)] : local.iter_1510.code_ptr :
      local.curr_1511.code == "]"
        ? local.iter_1510.tape[local.iter_1510.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1510.code_ptr)] : local.iter_1510.code_ptr
        : local.iter_1510.code_ptr)

    steps_taken = 1 + local.iter_1510.steps_taken
  }
}

locals {
  end_of_code_1512 = try(local.iter_1511.code_ptr >= length(var.code), true)

  curr_1512 = local.end_of_code_1512 ? null : {
    code = substr(var.code, local.iter_1511.code_ptr, 1)
    input = substr(var.code, local.iter_1511.code_ptr, 1) == "," ? substr(local.iter_1511.input, 0, 1) : null
  }

  iter_1512 = local.end_of_code_1512 ? local.iter_1511 : {
    input = (local.curr_1512.code == ","
      ? substr(local.iter_1511.input, 1, -1)
      : local.iter_1511.input)

    output = (local.curr_1512.code == "."
      ? "${local.iter_1511.output}${jsondecode(format("\"\\u%04x\"", local.iter_1511.tape[local.iter_1511.tape_ptr]))}"
      : local.iter_1511.output)
    
    tape = (
      local.curr_1512.code == "+"
        ? [for i, b in local.iter_1511.tape : (i == local.iter_1511.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1512.code == "-"
        ? [for i, b in local.iter_1511.tape : (i == local.iter_1511.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1512.code == ","
        ? [for i, b in local.iter_1511.tape : (i == local.iter_1511.tape_ptr ? local.ascii_lookup[local.curr_1512.input] : b)]
        : local.iter_1511.tape)

    tape_ptr = (
      local.curr_1512.code == "<"
        ? local.iter_1511.tape_ptr == 0 ? length(local.iter_1511.tape) - 1 : local.iter_1511.tape_ptr - 1 :
      local.curr_1512.code == ">"
        ? local.iter_1511.tape_ptr == length(local.iter_1511.tape) - 1 ? 0 : local.iter_1511.tape_ptr + 1
        : local.iter_1511.tape_ptr)

    code_ptr = 1 + (
      local.curr_1512.code == "["
        ? local.iter_1511.tape[local.iter_1511.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1511.code_ptr)] : local.iter_1511.code_ptr :
      local.curr_1512.code == "]"
        ? local.iter_1511.tape[local.iter_1511.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1511.code_ptr)] : local.iter_1511.code_ptr
        : local.iter_1511.code_ptr)

    steps_taken = 1 + local.iter_1511.steps_taken
  }
}

locals {
  end_of_code_1513 = try(local.iter_1512.code_ptr >= length(var.code), true)

  curr_1513 = local.end_of_code_1513 ? null : {
    code = substr(var.code, local.iter_1512.code_ptr, 1)
    input = substr(var.code, local.iter_1512.code_ptr, 1) == "," ? substr(local.iter_1512.input, 0, 1) : null
  }

  iter_1513 = local.end_of_code_1513 ? local.iter_1512 : {
    input = (local.curr_1513.code == ","
      ? substr(local.iter_1512.input, 1, -1)
      : local.iter_1512.input)

    output = (local.curr_1513.code == "."
      ? "${local.iter_1512.output}${jsondecode(format("\"\\u%04x\"", local.iter_1512.tape[local.iter_1512.tape_ptr]))}"
      : local.iter_1512.output)
    
    tape = (
      local.curr_1513.code == "+"
        ? [for i, b in local.iter_1512.tape : (i == local.iter_1512.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1513.code == "-"
        ? [for i, b in local.iter_1512.tape : (i == local.iter_1512.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1513.code == ","
        ? [for i, b in local.iter_1512.tape : (i == local.iter_1512.tape_ptr ? local.ascii_lookup[local.curr_1513.input] : b)]
        : local.iter_1512.tape)

    tape_ptr = (
      local.curr_1513.code == "<"
        ? local.iter_1512.tape_ptr == 0 ? length(local.iter_1512.tape) - 1 : local.iter_1512.tape_ptr - 1 :
      local.curr_1513.code == ">"
        ? local.iter_1512.tape_ptr == length(local.iter_1512.tape) - 1 ? 0 : local.iter_1512.tape_ptr + 1
        : local.iter_1512.tape_ptr)

    code_ptr = 1 + (
      local.curr_1513.code == "["
        ? local.iter_1512.tape[local.iter_1512.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1512.code_ptr)] : local.iter_1512.code_ptr :
      local.curr_1513.code == "]"
        ? local.iter_1512.tape[local.iter_1512.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1512.code_ptr)] : local.iter_1512.code_ptr
        : local.iter_1512.code_ptr)

    steps_taken = 1 + local.iter_1512.steps_taken
  }
}

locals {
  end_of_code_1514 = try(local.iter_1513.code_ptr >= length(var.code), true)

  curr_1514 = local.end_of_code_1514 ? null : {
    code = substr(var.code, local.iter_1513.code_ptr, 1)
    input = substr(var.code, local.iter_1513.code_ptr, 1) == "," ? substr(local.iter_1513.input, 0, 1) : null
  }

  iter_1514 = local.end_of_code_1514 ? local.iter_1513 : {
    input = (local.curr_1514.code == ","
      ? substr(local.iter_1513.input, 1, -1)
      : local.iter_1513.input)

    output = (local.curr_1514.code == "."
      ? "${local.iter_1513.output}${jsondecode(format("\"\\u%04x\"", local.iter_1513.tape[local.iter_1513.tape_ptr]))}"
      : local.iter_1513.output)
    
    tape = (
      local.curr_1514.code == "+"
        ? [for i, b in local.iter_1513.tape : (i == local.iter_1513.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1514.code == "-"
        ? [for i, b in local.iter_1513.tape : (i == local.iter_1513.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1514.code == ","
        ? [for i, b in local.iter_1513.tape : (i == local.iter_1513.tape_ptr ? local.ascii_lookup[local.curr_1514.input] : b)]
        : local.iter_1513.tape)

    tape_ptr = (
      local.curr_1514.code == "<"
        ? local.iter_1513.tape_ptr == 0 ? length(local.iter_1513.tape) - 1 : local.iter_1513.tape_ptr - 1 :
      local.curr_1514.code == ">"
        ? local.iter_1513.tape_ptr == length(local.iter_1513.tape) - 1 ? 0 : local.iter_1513.tape_ptr + 1
        : local.iter_1513.tape_ptr)

    code_ptr = 1 + (
      local.curr_1514.code == "["
        ? local.iter_1513.tape[local.iter_1513.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1513.code_ptr)] : local.iter_1513.code_ptr :
      local.curr_1514.code == "]"
        ? local.iter_1513.tape[local.iter_1513.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1513.code_ptr)] : local.iter_1513.code_ptr
        : local.iter_1513.code_ptr)

    steps_taken = 1 + local.iter_1513.steps_taken
  }
}

locals {
  end_of_code_1515 = try(local.iter_1514.code_ptr >= length(var.code), true)

  curr_1515 = local.end_of_code_1515 ? null : {
    code = substr(var.code, local.iter_1514.code_ptr, 1)
    input = substr(var.code, local.iter_1514.code_ptr, 1) == "," ? substr(local.iter_1514.input, 0, 1) : null
  }

  iter_1515 = local.end_of_code_1515 ? local.iter_1514 : {
    input = (local.curr_1515.code == ","
      ? substr(local.iter_1514.input, 1, -1)
      : local.iter_1514.input)

    output = (local.curr_1515.code == "."
      ? "${local.iter_1514.output}${jsondecode(format("\"\\u%04x\"", local.iter_1514.tape[local.iter_1514.tape_ptr]))}"
      : local.iter_1514.output)
    
    tape = (
      local.curr_1515.code == "+"
        ? [for i, b in local.iter_1514.tape : (i == local.iter_1514.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1515.code == "-"
        ? [for i, b in local.iter_1514.tape : (i == local.iter_1514.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1515.code == ","
        ? [for i, b in local.iter_1514.tape : (i == local.iter_1514.tape_ptr ? local.ascii_lookup[local.curr_1515.input] : b)]
        : local.iter_1514.tape)

    tape_ptr = (
      local.curr_1515.code == "<"
        ? local.iter_1514.tape_ptr == 0 ? length(local.iter_1514.tape) - 1 : local.iter_1514.tape_ptr - 1 :
      local.curr_1515.code == ">"
        ? local.iter_1514.tape_ptr == length(local.iter_1514.tape) - 1 ? 0 : local.iter_1514.tape_ptr + 1
        : local.iter_1514.tape_ptr)

    code_ptr = 1 + (
      local.curr_1515.code == "["
        ? local.iter_1514.tape[local.iter_1514.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1514.code_ptr)] : local.iter_1514.code_ptr :
      local.curr_1515.code == "]"
        ? local.iter_1514.tape[local.iter_1514.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1514.code_ptr)] : local.iter_1514.code_ptr
        : local.iter_1514.code_ptr)

    steps_taken = 1 + local.iter_1514.steps_taken
  }
}

locals {
  end_of_code_1516 = try(local.iter_1515.code_ptr >= length(var.code), true)

  curr_1516 = local.end_of_code_1516 ? null : {
    code = substr(var.code, local.iter_1515.code_ptr, 1)
    input = substr(var.code, local.iter_1515.code_ptr, 1) == "," ? substr(local.iter_1515.input, 0, 1) : null
  }

  iter_1516 = local.end_of_code_1516 ? local.iter_1515 : {
    input = (local.curr_1516.code == ","
      ? substr(local.iter_1515.input, 1, -1)
      : local.iter_1515.input)

    output = (local.curr_1516.code == "."
      ? "${local.iter_1515.output}${jsondecode(format("\"\\u%04x\"", local.iter_1515.tape[local.iter_1515.tape_ptr]))}"
      : local.iter_1515.output)
    
    tape = (
      local.curr_1516.code == "+"
        ? [for i, b in local.iter_1515.tape : (i == local.iter_1515.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1516.code == "-"
        ? [for i, b in local.iter_1515.tape : (i == local.iter_1515.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1516.code == ","
        ? [for i, b in local.iter_1515.tape : (i == local.iter_1515.tape_ptr ? local.ascii_lookup[local.curr_1516.input] : b)]
        : local.iter_1515.tape)

    tape_ptr = (
      local.curr_1516.code == "<"
        ? local.iter_1515.tape_ptr == 0 ? length(local.iter_1515.tape) - 1 : local.iter_1515.tape_ptr - 1 :
      local.curr_1516.code == ">"
        ? local.iter_1515.tape_ptr == length(local.iter_1515.tape) - 1 ? 0 : local.iter_1515.tape_ptr + 1
        : local.iter_1515.tape_ptr)

    code_ptr = 1 + (
      local.curr_1516.code == "["
        ? local.iter_1515.tape[local.iter_1515.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1515.code_ptr)] : local.iter_1515.code_ptr :
      local.curr_1516.code == "]"
        ? local.iter_1515.tape[local.iter_1515.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1515.code_ptr)] : local.iter_1515.code_ptr
        : local.iter_1515.code_ptr)

    steps_taken = 1 + local.iter_1515.steps_taken
  }
}

locals {
  end_of_code_1517 = try(local.iter_1516.code_ptr >= length(var.code), true)

  curr_1517 = local.end_of_code_1517 ? null : {
    code = substr(var.code, local.iter_1516.code_ptr, 1)
    input = substr(var.code, local.iter_1516.code_ptr, 1) == "," ? substr(local.iter_1516.input, 0, 1) : null
  }

  iter_1517 = local.end_of_code_1517 ? local.iter_1516 : {
    input = (local.curr_1517.code == ","
      ? substr(local.iter_1516.input, 1, -1)
      : local.iter_1516.input)

    output = (local.curr_1517.code == "."
      ? "${local.iter_1516.output}${jsondecode(format("\"\\u%04x\"", local.iter_1516.tape[local.iter_1516.tape_ptr]))}"
      : local.iter_1516.output)
    
    tape = (
      local.curr_1517.code == "+"
        ? [for i, b in local.iter_1516.tape : (i == local.iter_1516.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1517.code == "-"
        ? [for i, b in local.iter_1516.tape : (i == local.iter_1516.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1517.code == ","
        ? [for i, b in local.iter_1516.tape : (i == local.iter_1516.tape_ptr ? local.ascii_lookup[local.curr_1517.input] : b)]
        : local.iter_1516.tape)

    tape_ptr = (
      local.curr_1517.code == "<"
        ? local.iter_1516.tape_ptr == 0 ? length(local.iter_1516.tape) - 1 : local.iter_1516.tape_ptr - 1 :
      local.curr_1517.code == ">"
        ? local.iter_1516.tape_ptr == length(local.iter_1516.tape) - 1 ? 0 : local.iter_1516.tape_ptr + 1
        : local.iter_1516.tape_ptr)

    code_ptr = 1 + (
      local.curr_1517.code == "["
        ? local.iter_1516.tape[local.iter_1516.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1516.code_ptr)] : local.iter_1516.code_ptr :
      local.curr_1517.code == "]"
        ? local.iter_1516.tape[local.iter_1516.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1516.code_ptr)] : local.iter_1516.code_ptr
        : local.iter_1516.code_ptr)

    steps_taken = 1 + local.iter_1516.steps_taken
  }
}

locals {
  end_of_code_1518 = try(local.iter_1517.code_ptr >= length(var.code), true)

  curr_1518 = local.end_of_code_1518 ? null : {
    code = substr(var.code, local.iter_1517.code_ptr, 1)
    input = substr(var.code, local.iter_1517.code_ptr, 1) == "," ? substr(local.iter_1517.input, 0, 1) : null
  }

  iter_1518 = local.end_of_code_1518 ? local.iter_1517 : {
    input = (local.curr_1518.code == ","
      ? substr(local.iter_1517.input, 1, -1)
      : local.iter_1517.input)

    output = (local.curr_1518.code == "."
      ? "${local.iter_1517.output}${jsondecode(format("\"\\u%04x\"", local.iter_1517.tape[local.iter_1517.tape_ptr]))}"
      : local.iter_1517.output)
    
    tape = (
      local.curr_1518.code == "+"
        ? [for i, b in local.iter_1517.tape : (i == local.iter_1517.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1518.code == "-"
        ? [for i, b in local.iter_1517.tape : (i == local.iter_1517.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1518.code == ","
        ? [for i, b in local.iter_1517.tape : (i == local.iter_1517.tape_ptr ? local.ascii_lookup[local.curr_1518.input] : b)]
        : local.iter_1517.tape)

    tape_ptr = (
      local.curr_1518.code == "<"
        ? local.iter_1517.tape_ptr == 0 ? length(local.iter_1517.tape) - 1 : local.iter_1517.tape_ptr - 1 :
      local.curr_1518.code == ">"
        ? local.iter_1517.tape_ptr == length(local.iter_1517.tape) - 1 ? 0 : local.iter_1517.tape_ptr + 1
        : local.iter_1517.tape_ptr)

    code_ptr = 1 + (
      local.curr_1518.code == "["
        ? local.iter_1517.tape[local.iter_1517.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1517.code_ptr)] : local.iter_1517.code_ptr :
      local.curr_1518.code == "]"
        ? local.iter_1517.tape[local.iter_1517.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1517.code_ptr)] : local.iter_1517.code_ptr
        : local.iter_1517.code_ptr)

    steps_taken = 1 + local.iter_1517.steps_taken
  }
}

locals {
  end_of_code_1519 = try(local.iter_1518.code_ptr >= length(var.code), true)

  curr_1519 = local.end_of_code_1519 ? null : {
    code = substr(var.code, local.iter_1518.code_ptr, 1)
    input = substr(var.code, local.iter_1518.code_ptr, 1) == "," ? substr(local.iter_1518.input, 0, 1) : null
  }

  iter_1519 = local.end_of_code_1519 ? local.iter_1518 : {
    input = (local.curr_1519.code == ","
      ? substr(local.iter_1518.input, 1, -1)
      : local.iter_1518.input)

    output = (local.curr_1519.code == "."
      ? "${local.iter_1518.output}${jsondecode(format("\"\\u%04x\"", local.iter_1518.tape[local.iter_1518.tape_ptr]))}"
      : local.iter_1518.output)
    
    tape = (
      local.curr_1519.code == "+"
        ? [for i, b in local.iter_1518.tape : (i == local.iter_1518.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1519.code == "-"
        ? [for i, b in local.iter_1518.tape : (i == local.iter_1518.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1519.code == ","
        ? [for i, b in local.iter_1518.tape : (i == local.iter_1518.tape_ptr ? local.ascii_lookup[local.curr_1519.input] : b)]
        : local.iter_1518.tape)

    tape_ptr = (
      local.curr_1519.code == "<"
        ? local.iter_1518.tape_ptr == 0 ? length(local.iter_1518.tape) - 1 : local.iter_1518.tape_ptr - 1 :
      local.curr_1519.code == ">"
        ? local.iter_1518.tape_ptr == length(local.iter_1518.tape) - 1 ? 0 : local.iter_1518.tape_ptr + 1
        : local.iter_1518.tape_ptr)

    code_ptr = 1 + (
      local.curr_1519.code == "["
        ? local.iter_1518.tape[local.iter_1518.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1518.code_ptr)] : local.iter_1518.code_ptr :
      local.curr_1519.code == "]"
        ? local.iter_1518.tape[local.iter_1518.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1518.code_ptr)] : local.iter_1518.code_ptr
        : local.iter_1518.code_ptr)

    steps_taken = 1 + local.iter_1518.steps_taken
  }
}

locals {
  end_of_code_1520 = try(local.iter_1519.code_ptr >= length(var.code), true)

  curr_1520 = local.end_of_code_1520 ? null : {
    code = substr(var.code, local.iter_1519.code_ptr, 1)
    input = substr(var.code, local.iter_1519.code_ptr, 1) == "," ? substr(local.iter_1519.input, 0, 1) : null
  }

  iter_1520 = local.end_of_code_1520 ? local.iter_1519 : {
    input = (local.curr_1520.code == ","
      ? substr(local.iter_1519.input, 1, -1)
      : local.iter_1519.input)

    output = (local.curr_1520.code == "."
      ? "${local.iter_1519.output}${jsondecode(format("\"\\u%04x\"", local.iter_1519.tape[local.iter_1519.tape_ptr]))}"
      : local.iter_1519.output)
    
    tape = (
      local.curr_1520.code == "+"
        ? [for i, b in local.iter_1519.tape : (i == local.iter_1519.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1520.code == "-"
        ? [for i, b in local.iter_1519.tape : (i == local.iter_1519.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1520.code == ","
        ? [for i, b in local.iter_1519.tape : (i == local.iter_1519.tape_ptr ? local.ascii_lookup[local.curr_1520.input] : b)]
        : local.iter_1519.tape)

    tape_ptr = (
      local.curr_1520.code == "<"
        ? local.iter_1519.tape_ptr == 0 ? length(local.iter_1519.tape) - 1 : local.iter_1519.tape_ptr - 1 :
      local.curr_1520.code == ">"
        ? local.iter_1519.tape_ptr == length(local.iter_1519.tape) - 1 ? 0 : local.iter_1519.tape_ptr + 1
        : local.iter_1519.tape_ptr)

    code_ptr = 1 + (
      local.curr_1520.code == "["
        ? local.iter_1519.tape[local.iter_1519.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1519.code_ptr)] : local.iter_1519.code_ptr :
      local.curr_1520.code == "]"
        ? local.iter_1519.tape[local.iter_1519.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1519.code_ptr)] : local.iter_1519.code_ptr
        : local.iter_1519.code_ptr)

    steps_taken = 1 + local.iter_1519.steps_taken
  }
}

locals {
  end_of_code_1521 = try(local.iter_1520.code_ptr >= length(var.code), true)

  curr_1521 = local.end_of_code_1521 ? null : {
    code = substr(var.code, local.iter_1520.code_ptr, 1)
    input = substr(var.code, local.iter_1520.code_ptr, 1) == "," ? substr(local.iter_1520.input, 0, 1) : null
  }

  iter_1521 = local.end_of_code_1521 ? local.iter_1520 : {
    input = (local.curr_1521.code == ","
      ? substr(local.iter_1520.input, 1, -1)
      : local.iter_1520.input)

    output = (local.curr_1521.code == "."
      ? "${local.iter_1520.output}${jsondecode(format("\"\\u%04x\"", local.iter_1520.tape[local.iter_1520.tape_ptr]))}"
      : local.iter_1520.output)
    
    tape = (
      local.curr_1521.code == "+"
        ? [for i, b in local.iter_1520.tape : (i == local.iter_1520.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1521.code == "-"
        ? [for i, b in local.iter_1520.tape : (i == local.iter_1520.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1521.code == ","
        ? [for i, b in local.iter_1520.tape : (i == local.iter_1520.tape_ptr ? local.ascii_lookup[local.curr_1521.input] : b)]
        : local.iter_1520.tape)

    tape_ptr = (
      local.curr_1521.code == "<"
        ? local.iter_1520.tape_ptr == 0 ? length(local.iter_1520.tape) - 1 : local.iter_1520.tape_ptr - 1 :
      local.curr_1521.code == ">"
        ? local.iter_1520.tape_ptr == length(local.iter_1520.tape) - 1 ? 0 : local.iter_1520.tape_ptr + 1
        : local.iter_1520.tape_ptr)

    code_ptr = 1 + (
      local.curr_1521.code == "["
        ? local.iter_1520.tape[local.iter_1520.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1520.code_ptr)] : local.iter_1520.code_ptr :
      local.curr_1521.code == "]"
        ? local.iter_1520.tape[local.iter_1520.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1520.code_ptr)] : local.iter_1520.code_ptr
        : local.iter_1520.code_ptr)

    steps_taken = 1 + local.iter_1520.steps_taken
  }
}

locals {
  end_of_code_1522 = try(local.iter_1521.code_ptr >= length(var.code), true)

  curr_1522 = local.end_of_code_1522 ? null : {
    code = substr(var.code, local.iter_1521.code_ptr, 1)
    input = substr(var.code, local.iter_1521.code_ptr, 1) == "," ? substr(local.iter_1521.input, 0, 1) : null
  }

  iter_1522 = local.end_of_code_1522 ? local.iter_1521 : {
    input = (local.curr_1522.code == ","
      ? substr(local.iter_1521.input, 1, -1)
      : local.iter_1521.input)

    output = (local.curr_1522.code == "."
      ? "${local.iter_1521.output}${jsondecode(format("\"\\u%04x\"", local.iter_1521.tape[local.iter_1521.tape_ptr]))}"
      : local.iter_1521.output)
    
    tape = (
      local.curr_1522.code == "+"
        ? [for i, b in local.iter_1521.tape : (i == local.iter_1521.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1522.code == "-"
        ? [for i, b in local.iter_1521.tape : (i == local.iter_1521.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1522.code == ","
        ? [for i, b in local.iter_1521.tape : (i == local.iter_1521.tape_ptr ? local.ascii_lookup[local.curr_1522.input] : b)]
        : local.iter_1521.tape)

    tape_ptr = (
      local.curr_1522.code == "<"
        ? local.iter_1521.tape_ptr == 0 ? length(local.iter_1521.tape) - 1 : local.iter_1521.tape_ptr - 1 :
      local.curr_1522.code == ">"
        ? local.iter_1521.tape_ptr == length(local.iter_1521.tape) - 1 ? 0 : local.iter_1521.tape_ptr + 1
        : local.iter_1521.tape_ptr)

    code_ptr = 1 + (
      local.curr_1522.code == "["
        ? local.iter_1521.tape[local.iter_1521.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1521.code_ptr)] : local.iter_1521.code_ptr :
      local.curr_1522.code == "]"
        ? local.iter_1521.tape[local.iter_1521.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1521.code_ptr)] : local.iter_1521.code_ptr
        : local.iter_1521.code_ptr)

    steps_taken = 1 + local.iter_1521.steps_taken
  }
}

locals {
  end_of_code_1523 = try(local.iter_1522.code_ptr >= length(var.code), true)

  curr_1523 = local.end_of_code_1523 ? null : {
    code = substr(var.code, local.iter_1522.code_ptr, 1)
    input = substr(var.code, local.iter_1522.code_ptr, 1) == "," ? substr(local.iter_1522.input, 0, 1) : null
  }

  iter_1523 = local.end_of_code_1523 ? local.iter_1522 : {
    input = (local.curr_1523.code == ","
      ? substr(local.iter_1522.input, 1, -1)
      : local.iter_1522.input)

    output = (local.curr_1523.code == "."
      ? "${local.iter_1522.output}${jsondecode(format("\"\\u%04x\"", local.iter_1522.tape[local.iter_1522.tape_ptr]))}"
      : local.iter_1522.output)
    
    tape = (
      local.curr_1523.code == "+"
        ? [for i, b in local.iter_1522.tape : (i == local.iter_1522.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1523.code == "-"
        ? [for i, b in local.iter_1522.tape : (i == local.iter_1522.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1523.code == ","
        ? [for i, b in local.iter_1522.tape : (i == local.iter_1522.tape_ptr ? local.ascii_lookup[local.curr_1523.input] : b)]
        : local.iter_1522.tape)

    tape_ptr = (
      local.curr_1523.code == "<"
        ? local.iter_1522.tape_ptr == 0 ? length(local.iter_1522.tape) - 1 : local.iter_1522.tape_ptr - 1 :
      local.curr_1523.code == ">"
        ? local.iter_1522.tape_ptr == length(local.iter_1522.tape) - 1 ? 0 : local.iter_1522.tape_ptr + 1
        : local.iter_1522.tape_ptr)

    code_ptr = 1 + (
      local.curr_1523.code == "["
        ? local.iter_1522.tape[local.iter_1522.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1522.code_ptr)] : local.iter_1522.code_ptr :
      local.curr_1523.code == "]"
        ? local.iter_1522.tape[local.iter_1522.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1522.code_ptr)] : local.iter_1522.code_ptr
        : local.iter_1522.code_ptr)

    steps_taken = 1 + local.iter_1522.steps_taken
  }
}

locals {
  end_of_code_1524 = try(local.iter_1523.code_ptr >= length(var.code), true)

  curr_1524 = local.end_of_code_1524 ? null : {
    code = substr(var.code, local.iter_1523.code_ptr, 1)
    input = substr(var.code, local.iter_1523.code_ptr, 1) == "," ? substr(local.iter_1523.input, 0, 1) : null
  }

  iter_1524 = local.end_of_code_1524 ? local.iter_1523 : {
    input = (local.curr_1524.code == ","
      ? substr(local.iter_1523.input, 1, -1)
      : local.iter_1523.input)

    output = (local.curr_1524.code == "."
      ? "${local.iter_1523.output}${jsondecode(format("\"\\u%04x\"", local.iter_1523.tape[local.iter_1523.tape_ptr]))}"
      : local.iter_1523.output)
    
    tape = (
      local.curr_1524.code == "+"
        ? [for i, b in local.iter_1523.tape : (i == local.iter_1523.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1524.code == "-"
        ? [for i, b in local.iter_1523.tape : (i == local.iter_1523.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1524.code == ","
        ? [for i, b in local.iter_1523.tape : (i == local.iter_1523.tape_ptr ? local.ascii_lookup[local.curr_1524.input] : b)]
        : local.iter_1523.tape)

    tape_ptr = (
      local.curr_1524.code == "<"
        ? local.iter_1523.tape_ptr == 0 ? length(local.iter_1523.tape) - 1 : local.iter_1523.tape_ptr - 1 :
      local.curr_1524.code == ">"
        ? local.iter_1523.tape_ptr == length(local.iter_1523.tape) - 1 ? 0 : local.iter_1523.tape_ptr + 1
        : local.iter_1523.tape_ptr)

    code_ptr = 1 + (
      local.curr_1524.code == "["
        ? local.iter_1523.tape[local.iter_1523.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1523.code_ptr)] : local.iter_1523.code_ptr :
      local.curr_1524.code == "]"
        ? local.iter_1523.tape[local.iter_1523.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1523.code_ptr)] : local.iter_1523.code_ptr
        : local.iter_1523.code_ptr)

    steps_taken = 1 + local.iter_1523.steps_taken
  }
}

locals {
  end_of_code_1525 = try(local.iter_1524.code_ptr >= length(var.code), true)

  curr_1525 = local.end_of_code_1525 ? null : {
    code = substr(var.code, local.iter_1524.code_ptr, 1)
    input = substr(var.code, local.iter_1524.code_ptr, 1) == "," ? substr(local.iter_1524.input, 0, 1) : null
  }

  iter_1525 = local.end_of_code_1525 ? local.iter_1524 : {
    input = (local.curr_1525.code == ","
      ? substr(local.iter_1524.input, 1, -1)
      : local.iter_1524.input)

    output = (local.curr_1525.code == "."
      ? "${local.iter_1524.output}${jsondecode(format("\"\\u%04x\"", local.iter_1524.tape[local.iter_1524.tape_ptr]))}"
      : local.iter_1524.output)
    
    tape = (
      local.curr_1525.code == "+"
        ? [for i, b in local.iter_1524.tape : (i == local.iter_1524.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1525.code == "-"
        ? [for i, b in local.iter_1524.tape : (i == local.iter_1524.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1525.code == ","
        ? [for i, b in local.iter_1524.tape : (i == local.iter_1524.tape_ptr ? local.ascii_lookup[local.curr_1525.input] : b)]
        : local.iter_1524.tape)

    tape_ptr = (
      local.curr_1525.code == "<"
        ? local.iter_1524.tape_ptr == 0 ? length(local.iter_1524.tape) - 1 : local.iter_1524.tape_ptr - 1 :
      local.curr_1525.code == ">"
        ? local.iter_1524.tape_ptr == length(local.iter_1524.tape) - 1 ? 0 : local.iter_1524.tape_ptr + 1
        : local.iter_1524.tape_ptr)

    code_ptr = 1 + (
      local.curr_1525.code == "["
        ? local.iter_1524.tape[local.iter_1524.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1524.code_ptr)] : local.iter_1524.code_ptr :
      local.curr_1525.code == "]"
        ? local.iter_1524.tape[local.iter_1524.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1524.code_ptr)] : local.iter_1524.code_ptr
        : local.iter_1524.code_ptr)

    steps_taken = 1 + local.iter_1524.steps_taken
  }
}

locals {
  end_of_code_1526 = try(local.iter_1525.code_ptr >= length(var.code), true)

  curr_1526 = local.end_of_code_1526 ? null : {
    code = substr(var.code, local.iter_1525.code_ptr, 1)
    input = substr(var.code, local.iter_1525.code_ptr, 1) == "," ? substr(local.iter_1525.input, 0, 1) : null
  }

  iter_1526 = local.end_of_code_1526 ? local.iter_1525 : {
    input = (local.curr_1526.code == ","
      ? substr(local.iter_1525.input, 1, -1)
      : local.iter_1525.input)

    output = (local.curr_1526.code == "."
      ? "${local.iter_1525.output}${jsondecode(format("\"\\u%04x\"", local.iter_1525.tape[local.iter_1525.tape_ptr]))}"
      : local.iter_1525.output)
    
    tape = (
      local.curr_1526.code == "+"
        ? [for i, b in local.iter_1525.tape : (i == local.iter_1525.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1526.code == "-"
        ? [for i, b in local.iter_1525.tape : (i == local.iter_1525.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1526.code == ","
        ? [for i, b in local.iter_1525.tape : (i == local.iter_1525.tape_ptr ? local.ascii_lookup[local.curr_1526.input] : b)]
        : local.iter_1525.tape)

    tape_ptr = (
      local.curr_1526.code == "<"
        ? local.iter_1525.tape_ptr == 0 ? length(local.iter_1525.tape) - 1 : local.iter_1525.tape_ptr - 1 :
      local.curr_1526.code == ">"
        ? local.iter_1525.tape_ptr == length(local.iter_1525.tape) - 1 ? 0 : local.iter_1525.tape_ptr + 1
        : local.iter_1525.tape_ptr)

    code_ptr = 1 + (
      local.curr_1526.code == "["
        ? local.iter_1525.tape[local.iter_1525.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1525.code_ptr)] : local.iter_1525.code_ptr :
      local.curr_1526.code == "]"
        ? local.iter_1525.tape[local.iter_1525.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1525.code_ptr)] : local.iter_1525.code_ptr
        : local.iter_1525.code_ptr)

    steps_taken = 1 + local.iter_1525.steps_taken
  }
}

locals {
  end_of_code_1527 = try(local.iter_1526.code_ptr >= length(var.code), true)

  curr_1527 = local.end_of_code_1527 ? null : {
    code = substr(var.code, local.iter_1526.code_ptr, 1)
    input = substr(var.code, local.iter_1526.code_ptr, 1) == "," ? substr(local.iter_1526.input, 0, 1) : null
  }

  iter_1527 = local.end_of_code_1527 ? local.iter_1526 : {
    input = (local.curr_1527.code == ","
      ? substr(local.iter_1526.input, 1, -1)
      : local.iter_1526.input)

    output = (local.curr_1527.code == "."
      ? "${local.iter_1526.output}${jsondecode(format("\"\\u%04x\"", local.iter_1526.tape[local.iter_1526.tape_ptr]))}"
      : local.iter_1526.output)
    
    tape = (
      local.curr_1527.code == "+"
        ? [for i, b in local.iter_1526.tape : (i == local.iter_1526.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1527.code == "-"
        ? [for i, b in local.iter_1526.tape : (i == local.iter_1526.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1527.code == ","
        ? [for i, b in local.iter_1526.tape : (i == local.iter_1526.tape_ptr ? local.ascii_lookup[local.curr_1527.input] : b)]
        : local.iter_1526.tape)

    tape_ptr = (
      local.curr_1527.code == "<"
        ? local.iter_1526.tape_ptr == 0 ? length(local.iter_1526.tape) - 1 : local.iter_1526.tape_ptr - 1 :
      local.curr_1527.code == ">"
        ? local.iter_1526.tape_ptr == length(local.iter_1526.tape) - 1 ? 0 : local.iter_1526.tape_ptr + 1
        : local.iter_1526.tape_ptr)

    code_ptr = 1 + (
      local.curr_1527.code == "["
        ? local.iter_1526.tape[local.iter_1526.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1526.code_ptr)] : local.iter_1526.code_ptr :
      local.curr_1527.code == "]"
        ? local.iter_1526.tape[local.iter_1526.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1526.code_ptr)] : local.iter_1526.code_ptr
        : local.iter_1526.code_ptr)

    steps_taken = 1 + local.iter_1526.steps_taken
  }
}

locals {
  end_of_code_1528 = try(local.iter_1527.code_ptr >= length(var.code), true)

  curr_1528 = local.end_of_code_1528 ? null : {
    code = substr(var.code, local.iter_1527.code_ptr, 1)
    input = substr(var.code, local.iter_1527.code_ptr, 1) == "," ? substr(local.iter_1527.input, 0, 1) : null
  }

  iter_1528 = local.end_of_code_1528 ? local.iter_1527 : {
    input = (local.curr_1528.code == ","
      ? substr(local.iter_1527.input, 1, -1)
      : local.iter_1527.input)

    output = (local.curr_1528.code == "."
      ? "${local.iter_1527.output}${jsondecode(format("\"\\u%04x\"", local.iter_1527.tape[local.iter_1527.tape_ptr]))}"
      : local.iter_1527.output)
    
    tape = (
      local.curr_1528.code == "+"
        ? [for i, b in local.iter_1527.tape : (i == local.iter_1527.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1528.code == "-"
        ? [for i, b in local.iter_1527.tape : (i == local.iter_1527.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1528.code == ","
        ? [for i, b in local.iter_1527.tape : (i == local.iter_1527.tape_ptr ? local.ascii_lookup[local.curr_1528.input] : b)]
        : local.iter_1527.tape)

    tape_ptr = (
      local.curr_1528.code == "<"
        ? local.iter_1527.tape_ptr == 0 ? length(local.iter_1527.tape) - 1 : local.iter_1527.tape_ptr - 1 :
      local.curr_1528.code == ">"
        ? local.iter_1527.tape_ptr == length(local.iter_1527.tape) - 1 ? 0 : local.iter_1527.tape_ptr + 1
        : local.iter_1527.tape_ptr)

    code_ptr = 1 + (
      local.curr_1528.code == "["
        ? local.iter_1527.tape[local.iter_1527.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1527.code_ptr)] : local.iter_1527.code_ptr :
      local.curr_1528.code == "]"
        ? local.iter_1527.tape[local.iter_1527.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1527.code_ptr)] : local.iter_1527.code_ptr
        : local.iter_1527.code_ptr)

    steps_taken = 1 + local.iter_1527.steps_taken
  }
}

locals {
  end_of_code_1529 = try(local.iter_1528.code_ptr >= length(var.code), true)

  curr_1529 = local.end_of_code_1529 ? null : {
    code = substr(var.code, local.iter_1528.code_ptr, 1)
    input = substr(var.code, local.iter_1528.code_ptr, 1) == "," ? substr(local.iter_1528.input, 0, 1) : null
  }

  iter_1529 = local.end_of_code_1529 ? local.iter_1528 : {
    input = (local.curr_1529.code == ","
      ? substr(local.iter_1528.input, 1, -1)
      : local.iter_1528.input)

    output = (local.curr_1529.code == "."
      ? "${local.iter_1528.output}${jsondecode(format("\"\\u%04x\"", local.iter_1528.tape[local.iter_1528.tape_ptr]))}"
      : local.iter_1528.output)
    
    tape = (
      local.curr_1529.code == "+"
        ? [for i, b in local.iter_1528.tape : (i == local.iter_1528.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1529.code == "-"
        ? [for i, b in local.iter_1528.tape : (i == local.iter_1528.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1529.code == ","
        ? [for i, b in local.iter_1528.tape : (i == local.iter_1528.tape_ptr ? local.ascii_lookup[local.curr_1529.input] : b)]
        : local.iter_1528.tape)

    tape_ptr = (
      local.curr_1529.code == "<"
        ? local.iter_1528.tape_ptr == 0 ? length(local.iter_1528.tape) - 1 : local.iter_1528.tape_ptr - 1 :
      local.curr_1529.code == ">"
        ? local.iter_1528.tape_ptr == length(local.iter_1528.tape) - 1 ? 0 : local.iter_1528.tape_ptr + 1
        : local.iter_1528.tape_ptr)

    code_ptr = 1 + (
      local.curr_1529.code == "["
        ? local.iter_1528.tape[local.iter_1528.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1528.code_ptr)] : local.iter_1528.code_ptr :
      local.curr_1529.code == "]"
        ? local.iter_1528.tape[local.iter_1528.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1528.code_ptr)] : local.iter_1528.code_ptr
        : local.iter_1528.code_ptr)

    steps_taken = 1 + local.iter_1528.steps_taken
  }
}

locals {
  end_of_code_1530 = try(local.iter_1529.code_ptr >= length(var.code), true)

  curr_1530 = local.end_of_code_1530 ? null : {
    code = substr(var.code, local.iter_1529.code_ptr, 1)
    input = substr(var.code, local.iter_1529.code_ptr, 1) == "," ? substr(local.iter_1529.input, 0, 1) : null
  }

  iter_1530 = local.end_of_code_1530 ? local.iter_1529 : {
    input = (local.curr_1530.code == ","
      ? substr(local.iter_1529.input, 1, -1)
      : local.iter_1529.input)

    output = (local.curr_1530.code == "."
      ? "${local.iter_1529.output}${jsondecode(format("\"\\u%04x\"", local.iter_1529.tape[local.iter_1529.tape_ptr]))}"
      : local.iter_1529.output)
    
    tape = (
      local.curr_1530.code == "+"
        ? [for i, b in local.iter_1529.tape : (i == local.iter_1529.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1530.code == "-"
        ? [for i, b in local.iter_1529.tape : (i == local.iter_1529.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1530.code == ","
        ? [for i, b in local.iter_1529.tape : (i == local.iter_1529.tape_ptr ? local.ascii_lookup[local.curr_1530.input] : b)]
        : local.iter_1529.tape)

    tape_ptr = (
      local.curr_1530.code == "<"
        ? local.iter_1529.tape_ptr == 0 ? length(local.iter_1529.tape) - 1 : local.iter_1529.tape_ptr - 1 :
      local.curr_1530.code == ">"
        ? local.iter_1529.tape_ptr == length(local.iter_1529.tape) - 1 ? 0 : local.iter_1529.tape_ptr + 1
        : local.iter_1529.tape_ptr)

    code_ptr = 1 + (
      local.curr_1530.code == "["
        ? local.iter_1529.tape[local.iter_1529.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1529.code_ptr)] : local.iter_1529.code_ptr :
      local.curr_1530.code == "]"
        ? local.iter_1529.tape[local.iter_1529.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1529.code_ptr)] : local.iter_1529.code_ptr
        : local.iter_1529.code_ptr)

    steps_taken = 1 + local.iter_1529.steps_taken
  }
}

locals {
  end_of_code_1531 = try(local.iter_1530.code_ptr >= length(var.code), true)

  curr_1531 = local.end_of_code_1531 ? null : {
    code = substr(var.code, local.iter_1530.code_ptr, 1)
    input = substr(var.code, local.iter_1530.code_ptr, 1) == "," ? substr(local.iter_1530.input, 0, 1) : null
  }

  iter_1531 = local.end_of_code_1531 ? local.iter_1530 : {
    input = (local.curr_1531.code == ","
      ? substr(local.iter_1530.input, 1, -1)
      : local.iter_1530.input)

    output = (local.curr_1531.code == "."
      ? "${local.iter_1530.output}${jsondecode(format("\"\\u%04x\"", local.iter_1530.tape[local.iter_1530.tape_ptr]))}"
      : local.iter_1530.output)
    
    tape = (
      local.curr_1531.code == "+"
        ? [for i, b in local.iter_1530.tape : (i == local.iter_1530.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1531.code == "-"
        ? [for i, b in local.iter_1530.tape : (i == local.iter_1530.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1531.code == ","
        ? [for i, b in local.iter_1530.tape : (i == local.iter_1530.tape_ptr ? local.ascii_lookup[local.curr_1531.input] : b)]
        : local.iter_1530.tape)

    tape_ptr = (
      local.curr_1531.code == "<"
        ? local.iter_1530.tape_ptr == 0 ? length(local.iter_1530.tape) - 1 : local.iter_1530.tape_ptr - 1 :
      local.curr_1531.code == ">"
        ? local.iter_1530.tape_ptr == length(local.iter_1530.tape) - 1 ? 0 : local.iter_1530.tape_ptr + 1
        : local.iter_1530.tape_ptr)

    code_ptr = 1 + (
      local.curr_1531.code == "["
        ? local.iter_1530.tape[local.iter_1530.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1530.code_ptr)] : local.iter_1530.code_ptr :
      local.curr_1531.code == "]"
        ? local.iter_1530.tape[local.iter_1530.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1530.code_ptr)] : local.iter_1530.code_ptr
        : local.iter_1530.code_ptr)

    steps_taken = 1 + local.iter_1530.steps_taken
  }
}

locals {
  end_of_code_1532 = try(local.iter_1531.code_ptr >= length(var.code), true)

  curr_1532 = local.end_of_code_1532 ? null : {
    code = substr(var.code, local.iter_1531.code_ptr, 1)
    input = substr(var.code, local.iter_1531.code_ptr, 1) == "," ? substr(local.iter_1531.input, 0, 1) : null
  }

  iter_1532 = local.end_of_code_1532 ? local.iter_1531 : {
    input = (local.curr_1532.code == ","
      ? substr(local.iter_1531.input, 1, -1)
      : local.iter_1531.input)

    output = (local.curr_1532.code == "."
      ? "${local.iter_1531.output}${jsondecode(format("\"\\u%04x\"", local.iter_1531.tape[local.iter_1531.tape_ptr]))}"
      : local.iter_1531.output)
    
    tape = (
      local.curr_1532.code == "+"
        ? [for i, b in local.iter_1531.tape : (i == local.iter_1531.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1532.code == "-"
        ? [for i, b in local.iter_1531.tape : (i == local.iter_1531.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1532.code == ","
        ? [for i, b in local.iter_1531.tape : (i == local.iter_1531.tape_ptr ? local.ascii_lookup[local.curr_1532.input] : b)]
        : local.iter_1531.tape)

    tape_ptr = (
      local.curr_1532.code == "<"
        ? local.iter_1531.tape_ptr == 0 ? length(local.iter_1531.tape) - 1 : local.iter_1531.tape_ptr - 1 :
      local.curr_1532.code == ">"
        ? local.iter_1531.tape_ptr == length(local.iter_1531.tape) - 1 ? 0 : local.iter_1531.tape_ptr + 1
        : local.iter_1531.tape_ptr)

    code_ptr = 1 + (
      local.curr_1532.code == "["
        ? local.iter_1531.tape[local.iter_1531.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1531.code_ptr)] : local.iter_1531.code_ptr :
      local.curr_1532.code == "]"
        ? local.iter_1531.tape[local.iter_1531.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1531.code_ptr)] : local.iter_1531.code_ptr
        : local.iter_1531.code_ptr)

    steps_taken = 1 + local.iter_1531.steps_taken
  }
}

locals {
  end_of_code_1533 = try(local.iter_1532.code_ptr >= length(var.code), true)

  curr_1533 = local.end_of_code_1533 ? null : {
    code = substr(var.code, local.iter_1532.code_ptr, 1)
    input = substr(var.code, local.iter_1532.code_ptr, 1) == "," ? substr(local.iter_1532.input, 0, 1) : null
  }

  iter_1533 = local.end_of_code_1533 ? local.iter_1532 : {
    input = (local.curr_1533.code == ","
      ? substr(local.iter_1532.input, 1, -1)
      : local.iter_1532.input)

    output = (local.curr_1533.code == "."
      ? "${local.iter_1532.output}${jsondecode(format("\"\\u%04x\"", local.iter_1532.tape[local.iter_1532.tape_ptr]))}"
      : local.iter_1532.output)
    
    tape = (
      local.curr_1533.code == "+"
        ? [for i, b in local.iter_1532.tape : (i == local.iter_1532.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1533.code == "-"
        ? [for i, b in local.iter_1532.tape : (i == local.iter_1532.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1533.code == ","
        ? [for i, b in local.iter_1532.tape : (i == local.iter_1532.tape_ptr ? local.ascii_lookup[local.curr_1533.input] : b)]
        : local.iter_1532.tape)

    tape_ptr = (
      local.curr_1533.code == "<"
        ? local.iter_1532.tape_ptr == 0 ? length(local.iter_1532.tape) - 1 : local.iter_1532.tape_ptr - 1 :
      local.curr_1533.code == ">"
        ? local.iter_1532.tape_ptr == length(local.iter_1532.tape) - 1 ? 0 : local.iter_1532.tape_ptr + 1
        : local.iter_1532.tape_ptr)

    code_ptr = 1 + (
      local.curr_1533.code == "["
        ? local.iter_1532.tape[local.iter_1532.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1532.code_ptr)] : local.iter_1532.code_ptr :
      local.curr_1533.code == "]"
        ? local.iter_1532.tape[local.iter_1532.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1532.code_ptr)] : local.iter_1532.code_ptr
        : local.iter_1532.code_ptr)

    steps_taken = 1 + local.iter_1532.steps_taken
  }
}

locals {
  end_of_code_1534 = try(local.iter_1533.code_ptr >= length(var.code), true)

  curr_1534 = local.end_of_code_1534 ? null : {
    code = substr(var.code, local.iter_1533.code_ptr, 1)
    input = substr(var.code, local.iter_1533.code_ptr, 1) == "," ? substr(local.iter_1533.input, 0, 1) : null
  }

  iter_1534 = local.end_of_code_1534 ? local.iter_1533 : {
    input = (local.curr_1534.code == ","
      ? substr(local.iter_1533.input, 1, -1)
      : local.iter_1533.input)

    output = (local.curr_1534.code == "."
      ? "${local.iter_1533.output}${jsondecode(format("\"\\u%04x\"", local.iter_1533.tape[local.iter_1533.tape_ptr]))}"
      : local.iter_1533.output)
    
    tape = (
      local.curr_1534.code == "+"
        ? [for i, b in local.iter_1533.tape : (i == local.iter_1533.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1534.code == "-"
        ? [for i, b in local.iter_1533.tape : (i == local.iter_1533.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1534.code == ","
        ? [for i, b in local.iter_1533.tape : (i == local.iter_1533.tape_ptr ? local.ascii_lookup[local.curr_1534.input] : b)]
        : local.iter_1533.tape)

    tape_ptr = (
      local.curr_1534.code == "<"
        ? local.iter_1533.tape_ptr == 0 ? length(local.iter_1533.tape) - 1 : local.iter_1533.tape_ptr - 1 :
      local.curr_1534.code == ">"
        ? local.iter_1533.tape_ptr == length(local.iter_1533.tape) - 1 ? 0 : local.iter_1533.tape_ptr + 1
        : local.iter_1533.tape_ptr)

    code_ptr = 1 + (
      local.curr_1534.code == "["
        ? local.iter_1533.tape[local.iter_1533.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1533.code_ptr)] : local.iter_1533.code_ptr :
      local.curr_1534.code == "]"
        ? local.iter_1533.tape[local.iter_1533.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1533.code_ptr)] : local.iter_1533.code_ptr
        : local.iter_1533.code_ptr)

    steps_taken = 1 + local.iter_1533.steps_taken
  }
}

locals {
  end_of_code_1535 = try(local.iter_1534.code_ptr >= length(var.code), true)

  curr_1535 = local.end_of_code_1535 ? null : {
    code = substr(var.code, local.iter_1534.code_ptr, 1)
    input = substr(var.code, local.iter_1534.code_ptr, 1) == "," ? substr(local.iter_1534.input, 0, 1) : null
  }

  iter_1535 = local.end_of_code_1535 ? local.iter_1534 : {
    input = (local.curr_1535.code == ","
      ? substr(local.iter_1534.input, 1, -1)
      : local.iter_1534.input)

    output = (local.curr_1535.code == "."
      ? "${local.iter_1534.output}${jsondecode(format("\"\\u%04x\"", local.iter_1534.tape[local.iter_1534.tape_ptr]))}"
      : local.iter_1534.output)
    
    tape = (
      local.curr_1535.code == "+"
        ? [for i, b in local.iter_1534.tape : (i == local.iter_1534.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1535.code == "-"
        ? [for i, b in local.iter_1534.tape : (i == local.iter_1534.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1535.code == ","
        ? [for i, b in local.iter_1534.tape : (i == local.iter_1534.tape_ptr ? local.ascii_lookup[local.curr_1535.input] : b)]
        : local.iter_1534.tape)

    tape_ptr = (
      local.curr_1535.code == "<"
        ? local.iter_1534.tape_ptr == 0 ? length(local.iter_1534.tape) - 1 : local.iter_1534.tape_ptr - 1 :
      local.curr_1535.code == ">"
        ? local.iter_1534.tape_ptr == length(local.iter_1534.tape) - 1 ? 0 : local.iter_1534.tape_ptr + 1
        : local.iter_1534.tape_ptr)

    code_ptr = 1 + (
      local.curr_1535.code == "["
        ? local.iter_1534.tape[local.iter_1534.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1534.code_ptr)] : local.iter_1534.code_ptr :
      local.curr_1535.code == "]"
        ? local.iter_1534.tape[local.iter_1534.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1534.code_ptr)] : local.iter_1534.code_ptr
        : local.iter_1534.code_ptr)

    steps_taken = 1 + local.iter_1534.steps_taken
  }
}

locals {
  end_of_code_1536 = try(local.iter_1535.code_ptr >= length(var.code), true)

  curr_1536 = local.end_of_code_1536 ? null : {
    code = substr(var.code, local.iter_1535.code_ptr, 1)
    input = substr(var.code, local.iter_1535.code_ptr, 1) == "," ? substr(local.iter_1535.input, 0, 1) : null
  }

  iter_1536 = local.end_of_code_1536 ? local.iter_1535 : {
    input = (local.curr_1536.code == ","
      ? substr(local.iter_1535.input, 1, -1)
      : local.iter_1535.input)

    output = (local.curr_1536.code == "."
      ? "${local.iter_1535.output}${jsondecode(format("\"\\u%04x\"", local.iter_1535.tape[local.iter_1535.tape_ptr]))}"
      : local.iter_1535.output)
    
    tape = (
      local.curr_1536.code == "+"
        ? [for i, b in local.iter_1535.tape : (i == local.iter_1535.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1536.code == "-"
        ? [for i, b in local.iter_1535.tape : (i == local.iter_1535.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1536.code == ","
        ? [for i, b in local.iter_1535.tape : (i == local.iter_1535.tape_ptr ? local.ascii_lookup[local.curr_1536.input] : b)]
        : local.iter_1535.tape)

    tape_ptr = (
      local.curr_1536.code == "<"
        ? local.iter_1535.tape_ptr == 0 ? length(local.iter_1535.tape) - 1 : local.iter_1535.tape_ptr - 1 :
      local.curr_1536.code == ">"
        ? local.iter_1535.tape_ptr == length(local.iter_1535.tape) - 1 ? 0 : local.iter_1535.tape_ptr + 1
        : local.iter_1535.tape_ptr)

    code_ptr = 1 + (
      local.curr_1536.code == "["
        ? local.iter_1535.tape[local.iter_1535.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1535.code_ptr)] : local.iter_1535.code_ptr :
      local.curr_1536.code == "]"
        ? local.iter_1535.tape[local.iter_1535.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1535.code_ptr)] : local.iter_1535.code_ptr
        : local.iter_1535.code_ptr)

    steps_taken = 1 + local.iter_1535.steps_taken
  }
}

locals {
  end_of_code_1537 = try(local.iter_1536.code_ptr >= length(var.code), true)

  curr_1537 = local.end_of_code_1537 ? null : {
    code = substr(var.code, local.iter_1536.code_ptr, 1)
    input = substr(var.code, local.iter_1536.code_ptr, 1) == "," ? substr(local.iter_1536.input, 0, 1) : null
  }

  iter_1537 = local.end_of_code_1537 ? local.iter_1536 : {
    input = (local.curr_1537.code == ","
      ? substr(local.iter_1536.input, 1, -1)
      : local.iter_1536.input)

    output = (local.curr_1537.code == "."
      ? "${local.iter_1536.output}${jsondecode(format("\"\\u%04x\"", local.iter_1536.tape[local.iter_1536.tape_ptr]))}"
      : local.iter_1536.output)
    
    tape = (
      local.curr_1537.code == "+"
        ? [for i, b in local.iter_1536.tape : (i == local.iter_1536.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1537.code == "-"
        ? [for i, b in local.iter_1536.tape : (i == local.iter_1536.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1537.code == ","
        ? [for i, b in local.iter_1536.tape : (i == local.iter_1536.tape_ptr ? local.ascii_lookup[local.curr_1537.input] : b)]
        : local.iter_1536.tape)

    tape_ptr = (
      local.curr_1537.code == "<"
        ? local.iter_1536.tape_ptr == 0 ? length(local.iter_1536.tape) - 1 : local.iter_1536.tape_ptr - 1 :
      local.curr_1537.code == ">"
        ? local.iter_1536.tape_ptr == length(local.iter_1536.tape) - 1 ? 0 : local.iter_1536.tape_ptr + 1
        : local.iter_1536.tape_ptr)

    code_ptr = 1 + (
      local.curr_1537.code == "["
        ? local.iter_1536.tape[local.iter_1536.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1536.code_ptr)] : local.iter_1536.code_ptr :
      local.curr_1537.code == "]"
        ? local.iter_1536.tape[local.iter_1536.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1536.code_ptr)] : local.iter_1536.code_ptr
        : local.iter_1536.code_ptr)

    steps_taken = 1 + local.iter_1536.steps_taken
  }
}

locals {
  end_of_code_1538 = try(local.iter_1537.code_ptr >= length(var.code), true)

  curr_1538 = local.end_of_code_1538 ? null : {
    code = substr(var.code, local.iter_1537.code_ptr, 1)
    input = substr(var.code, local.iter_1537.code_ptr, 1) == "," ? substr(local.iter_1537.input, 0, 1) : null
  }

  iter_1538 = local.end_of_code_1538 ? local.iter_1537 : {
    input = (local.curr_1538.code == ","
      ? substr(local.iter_1537.input, 1, -1)
      : local.iter_1537.input)

    output = (local.curr_1538.code == "."
      ? "${local.iter_1537.output}${jsondecode(format("\"\\u%04x\"", local.iter_1537.tape[local.iter_1537.tape_ptr]))}"
      : local.iter_1537.output)
    
    tape = (
      local.curr_1538.code == "+"
        ? [for i, b in local.iter_1537.tape : (i == local.iter_1537.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1538.code == "-"
        ? [for i, b in local.iter_1537.tape : (i == local.iter_1537.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1538.code == ","
        ? [for i, b in local.iter_1537.tape : (i == local.iter_1537.tape_ptr ? local.ascii_lookup[local.curr_1538.input] : b)]
        : local.iter_1537.tape)

    tape_ptr = (
      local.curr_1538.code == "<"
        ? local.iter_1537.tape_ptr == 0 ? length(local.iter_1537.tape) - 1 : local.iter_1537.tape_ptr - 1 :
      local.curr_1538.code == ">"
        ? local.iter_1537.tape_ptr == length(local.iter_1537.tape) - 1 ? 0 : local.iter_1537.tape_ptr + 1
        : local.iter_1537.tape_ptr)

    code_ptr = 1 + (
      local.curr_1538.code == "["
        ? local.iter_1537.tape[local.iter_1537.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1537.code_ptr)] : local.iter_1537.code_ptr :
      local.curr_1538.code == "]"
        ? local.iter_1537.tape[local.iter_1537.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1537.code_ptr)] : local.iter_1537.code_ptr
        : local.iter_1537.code_ptr)

    steps_taken = 1 + local.iter_1537.steps_taken
  }
}

locals {
  end_of_code_1539 = try(local.iter_1538.code_ptr >= length(var.code), true)

  curr_1539 = local.end_of_code_1539 ? null : {
    code = substr(var.code, local.iter_1538.code_ptr, 1)
    input = substr(var.code, local.iter_1538.code_ptr, 1) == "," ? substr(local.iter_1538.input, 0, 1) : null
  }

  iter_1539 = local.end_of_code_1539 ? local.iter_1538 : {
    input = (local.curr_1539.code == ","
      ? substr(local.iter_1538.input, 1, -1)
      : local.iter_1538.input)

    output = (local.curr_1539.code == "."
      ? "${local.iter_1538.output}${jsondecode(format("\"\\u%04x\"", local.iter_1538.tape[local.iter_1538.tape_ptr]))}"
      : local.iter_1538.output)
    
    tape = (
      local.curr_1539.code == "+"
        ? [for i, b in local.iter_1538.tape : (i == local.iter_1538.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1539.code == "-"
        ? [for i, b in local.iter_1538.tape : (i == local.iter_1538.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1539.code == ","
        ? [for i, b in local.iter_1538.tape : (i == local.iter_1538.tape_ptr ? local.ascii_lookup[local.curr_1539.input] : b)]
        : local.iter_1538.tape)

    tape_ptr = (
      local.curr_1539.code == "<"
        ? local.iter_1538.tape_ptr == 0 ? length(local.iter_1538.tape) - 1 : local.iter_1538.tape_ptr - 1 :
      local.curr_1539.code == ">"
        ? local.iter_1538.tape_ptr == length(local.iter_1538.tape) - 1 ? 0 : local.iter_1538.tape_ptr + 1
        : local.iter_1538.tape_ptr)

    code_ptr = 1 + (
      local.curr_1539.code == "["
        ? local.iter_1538.tape[local.iter_1538.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1538.code_ptr)] : local.iter_1538.code_ptr :
      local.curr_1539.code == "]"
        ? local.iter_1538.tape[local.iter_1538.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1538.code_ptr)] : local.iter_1538.code_ptr
        : local.iter_1538.code_ptr)

    steps_taken = 1 + local.iter_1538.steps_taken
  }
}

locals {
  end_of_code_1540 = try(local.iter_1539.code_ptr >= length(var.code), true)

  curr_1540 = local.end_of_code_1540 ? null : {
    code = substr(var.code, local.iter_1539.code_ptr, 1)
    input = substr(var.code, local.iter_1539.code_ptr, 1) == "," ? substr(local.iter_1539.input, 0, 1) : null
  }

  iter_1540 = local.end_of_code_1540 ? local.iter_1539 : {
    input = (local.curr_1540.code == ","
      ? substr(local.iter_1539.input, 1, -1)
      : local.iter_1539.input)

    output = (local.curr_1540.code == "."
      ? "${local.iter_1539.output}${jsondecode(format("\"\\u%04x\"", local.iter_1539.tape[local.iter_1539.tape_ptr]))}"
      : local.iter_1539.output)
    
    tape = (
      local.curr_1540.code == "+"
        ? [for i, b in local.iter_1539.tape : (i == local.iter_1539.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1540.code == "-"
        ? [for i, b in local.iter_1539.tape : (i == local.iter_1539.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1540.code == ","
        ? [for i, b in local.iter_1539.tape : (i == local.iter_1539.tape_ptr ? local.ascii_lookup[local.curr_1540.input] : b)]
        : local.iter_1539.tape)

    tape_ptr = (
      local.curr_1540.code == "<"
        ? local.iter_1539.tape_ptr == 0 ? length(local.iter_1539.tape) - 1 : local.iter_1539.tape_ptr - 1 :
      local.curr_1540.code == ">"
        ? local.iter_1539.tape_ptr == length(local.iter_1539.tape) - 1 ? 0 : local.iter_1539.tape_ptr + 1
        : local.iter_1539.tape_ptr)

    code_ptr = 1 + (
      local.curr_1540.code == "["
        ? local.iter_1539.tape[local.iter_1539.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1539.code_ptr)] : local.iter_1539.code_ptr :
      local.curr_1540.code == "]"
        ? local.iter_1539.tape[local.iter_1539.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1539.code_ptr)] : local.iter_1539.code_ptr
        : local.iter_1539.code_ptr)

    steps_taken = 1 + local.iter_1539.steps_taken
  }
}

locals {
  end_of_code_1541 = try(local.iter_1540.code_ptr >= length(var.code), true)

  curr_1541 = local.end_of_code_1541 ? null : {
    code = substr(var.code, local.iter_1540.code_ptr, 1)
    input = substr(var.code, local.iter_1540.code_ptr, 1) == "," ? substr(local.iter_1540.input, 0, 1) : null
  }

  iter_1541 = local.end_of_code_1541 ? local.iter_1540 : {
    input = (local.curr_1541.code == ","
      ? substr(local.iter_1540.input, 1, -1)
      : local.iter_1540.input)

    output = (local.curr_1541.code == "."
      ? "${local.iter_1540.output}${jsondecode(format("\"\\u%04x\"", local.iter_1540.tape[local.iter_1540.tape_ptr]))}"
      : local.iter_1540.output)
    
    tape = (
      local.curr_1541.code == "+"
        ? [for i, b in local.iter_1540.tape : (i == local.iter_1540.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1541.code == "-"
        ? [for i, b in local.iter_1540.tape : (i == local.iter_1540.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1541.code == ","
        ? [for i, b in local.iter_1540.tape : (i == local.iter_1540.tape_ptr ? local.ascii_lookup[local.curr_1541.input] : b)]
        : local.iter_1540.tape)

    tape_ptr = (
      local.curr_1541.code == "<"
        ? local.iter_1540.tape_ptr == 0 ? length(local.iter_1540.tape) - 1 : local.iter_1540.tape_ptr - 1 :
      local.curr_1541.code == ">"
        ? local.iter_1540.tape_ptr == length(local.iter_1540.tape) - 1 ? 0 : local.iter_1540.tape_ptr + 1
        : local.iter_1540.tape_ptr)

    code_ptr = 1 + (
      local.curr_1541.code == "["
        ? local.iter_1540.tape[local.iter_1540.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1540.code_ptr)] : local.iter_1540.code_ptr :
      local.curr_1541.code == "]"
        ? local.iter_1540.tape[local.iter_1540.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1540.code_ptr)] : local.iter_1540.code_ptr
        : local.iter_1540.code_ptr)

    steps_taken = 1 + local.iter_1540.steps_taken
  }
}

locals {
  end_of_code_1542 = try(local.iter_1541.code_ptr >= length(var.code), true)

  curr_1542 = local.end_of_code_1542 ? null : {
    code = substr(var.code, local.iter_1541.code_ptr, 1)
    input = substr(var.code, local.iter_1541.code_ptr, 1) == "," ? substr(local.iter_1541.input, 0, 1) : null
  }

  iter_1542 = local.end_of_code_1542 ? local.iter_1541 : {
    input = (local.curr_1542.code == ","
      ? substr(local.iter_1541.input, 1, -1)
      : local.iter_1541.input)

    output = (local.curr_1542.code == "."
      ? "${local.iter_1541.output}${jsondecode(format("\"\\u%04x\"", local.iter_1541.tape[local.iter_1541.tape_ptr]))}"
      : local.iter_1541.output)
    
    tape = (
      local.curr_1542.code == "+"
        ? [for i, b in local.iter_1541.tape : (i == local.iter_1541.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1542.code == "-"
        ? [for i, b in local.iter_1541.tape : (i == local.iter_1541.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1542.code == ","
        ? [for i, b in local.iter_1541.tape : (i == local.iter_1541.tape_ptr ? local.ascii_lookup[local.curr_1542.input] : b)]
        : local.iter_1541.tape)

    tape_ptr = (
      local.curr_1542.code == "<"
        ? local.iter_1541.tape_ptr == 0 ? length(local.iter_1541.tape) - 1 : local.iter_1541.tape_ptr - 1 :
      local.curr_1542.code == ">"
        ? local.iter_1541.tape_ptr == length(local.iter_1541.tape) - 1 ? 0 : local.iter_1541.tape_ptr + 1
        : local.iter_1541.tape_ptr)

    code_ptr = 1 + (
      local.curr_1542.code == "["
        ? local.iter_1541.tape[local.iter_1541.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1541.code_ptr)] : local.iter_1541.code_ptr :
      local.curr_1542.code == "]"
        ? local.iter_1541.tape[local.iter_1541.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1541.code_ptr)] : local.iter_1541.code_ptr
        : local.iter_1541.code_ptr)

    steps_taken = 1 + local.iter_1541.steps_taken
  }
}

locals {
  end_of_code_1543 = try(local.iter_1542.code_ptr >= length(var.code), true)

  curr_1543 = local.end_of_code_1543 ? null : {
    code = substr(var.code, local.iter_1542.code_ptr, 1)
    input = substr(var.code, local.iter_1542.code_ptr, 1) == "," ? substr(local.iter_1542.input, 0, 1) : null
  }

  iter_1543 = local.end_of_code_1543 ? local.iter_1542 : {
    input = (local.curr_1543.code == ","
      ? substr(local.iter_1542.input, 1, -1)
      : local.iter_1542.input)

    output = (local.curr_1543.code == "."
      ? "${local.iter_1542.output}${jsondecode(format("\"\\u%04x\"", local.iter_1542.tape[local.iter_1542.tape_ptr]))}"
      : local.iter_1542.output)
    
    tape = (
      local.curr_1543.code == "+"
        ? [for i, b in local.iter_1542.tape : (i == local.iter_1542.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1543.code == "-"
        ? [for i, b in local.iter_1542.tape : (i == local.iter_1542.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1543.code == ","
        ? [for i, b in local.iter_1542.tape : (i == local.iter_1542.tape_ptr ? local.ascii_lookup[local.curr_1543.input] : b)]
        : local.iter_1542.tape)

    tape_ptr = (
      local.curr_1543.code == "<"
        ? local.iter_1542.tape_ptr == 0 ? length(local.iter_1542.tape) - 1 : local.iter_1542.tape_ptr - 1 :
      local.curr_1543.code == ">"
        ? local.iter_1542.tape_ptr == length(local.iter_1542.tape) - 1 ? 0 : local.iter_1542.tape_ptr + 1
        : local.iter_1542.tape_ptr)

    code_ptr = 1 + (
      local.curr_1543.code == "["
        ? local.iter_1542.tape[local.iter_1542.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1542.code_ptr)] : local.iter_1542.code_ptr :
      local.curr_1543.code == "]"
        ? local.iter_1542.tape[local.iter_1542.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1542.code_ptr)] : local.iter_1542.code_ptr
        : local.iter_1542.code_ptr)

    steps_taken = 1 + local.iter_1542.steps_taken
  }
}

locals {
  end_of_code_1544 = try(local.iter_1543.code_ptr >= length(var.code), true)

  curr_1544 = local.end_of_code_1544 ? null : {
    code = substr(var.code, local.iter_1543.code_ptr, 1)
    input = substr(var.code, local.iter_1543.code_ptr, 1) == "," ? substr(local.iter_1543.input, 0, 1) : null
  }

  iter_1544 = local.end_of_code_1544 ? local.iter_1543 : {
    input = (local.curr_1544.code == ","
      ? substr(local.iter_1543.input, 1, -1)
      : local.iter_1543.input)

    output = (local.curr_1544.code == "."
      ? "${local.iter_1543.output}${jsondecode(format("\"\\u%04x\"", local.iter_1543.tape[local.iter_1543.tape_ptr]))}"
      : local.iter_1543.output)
    
    tape = (
      local.curr_1544.code == "+"
        ? [for i, b in local.iter_1543.tape : (i == local.iter_1543.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1544.code == "-"
        ? [for i, b in local.iter_1543.tape : (i == local.iter_1543.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1544.code == ","
        ? [for i, b in local.iter_1543.tape : (i == local.iter_1543.tape_ptr ? local.ascii_lookup[local.curr_1544.input] : b)]
        : local.iter_1543.tape)

    tape_ptr = (
      local.curr_1544.code == "<"
        ? local.iter_1543.tape_ptr == 0 ? length(local.iter_1543.tape) - 1 : local.iter_1543.tape_ptr - 1 :
      local.curr_1544.code == ">"
        ? local.iter_1543.tape_ptr == length(local.iter_1543.tape) - 1 ? 0 : local.iter_1543.tape_ptr + 1
        : local.iter_1543.tape_ptr)

    code_ptr = 1 + (
      local.curr_1544.code == "["
        ? local.iter_1543.tape[local.iter_1543.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1543.code_ptr)] : local.iter_1543.code_ptr :
      local.curr_1544.code == "]"
        ? local.iter_1543.tape[local.iter_1543.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1543.code_ptr)] : local.iter_1543.code_ptr
        : local.iter_1543.code_ptr)

    steps_taken = 1 + local.iter_1543.steps_taken
  }
}

locals {
  end_of_code_1545 = try(local.iter_1544.code_ptr >= length(var.code), true)

  curr_1545 = local.end_of_code_1545 ? null : {
    code = substr(var.code, local.iter_1544.code_ptr, 1)
    input = substr(var.code, local.iter_1544.code_ptr, 1) == "," ? substr(local.iter_1544.input, 0, 1) : null
  }

  iter_1545 = local.end_of_code_1545 ? local.iter_1544 : {
    input = (local.curr_1545.code == ","
      ? substr(local.iter_1544.input, 1, -1)
      : local.iter_1544.input)

    output = (local.curr_1545.code == "."
      ? "${local.iter_1544.output}${jsondecode(format("\"\\u%04x\"", local.iter_1544.tape[local.iter_1544.tape_ptr]))}"
      : local.iter_1544.output)
    
    tape = (
      local.curr_1545.code == "+"
        ? [for i, b in local.iter_1544.tape : (i == local.iter_1544.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1545.code == "-"
        ? [for i, b in local.iter_1544.tape : (i == local.iter_1544.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1545.code == ","
        ? [for i, b in local.iter_1544.tape : (i == local.iter_1544.tape_ptr ? local.ascii_lookup[local.curr_1545.input] : b)]
        : local.iter_1544.tape)

    tape_ptr = (
      local.curr_1545.code == "<"
        ? local.iter_1544.tape_ptr == 0 ? length(local.iter_1544.tape) - 1 : local.iter_1544.tape_ptr - 1 :
      local.curr_1545.code == ">"
        ? local.iter_1544.tape_ptr == length(local.iter_1544.tape) - 1 ? 0 : local.iter_1544.tape_ptr + 1
        : local.iter_1544.tape_ptr)

    code_ptr = 1 + (
      local.curr_1545.code == "["
        ? local.iter_1544.tape[local.iter_1544.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1544.code_ptr)] : local.iter_1544.code_ptr :
      local.curr_1545.code == "]"
        ? local.iter_1544.tape[local.iter_1544.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1544.code_ptr)] : local.iter_1544.code_ptr
        : local.iter_1544.code_ptr)

    steps_taken = 1 + local.iter_1544.steps_taken
  }
}

locals {
  end_of_code_1546 = try(local.iter_1545.code_ptr >= length(var.code), true)

  curr_1546 = local.end_of_code_1546 ? null : {
    code = substr(var.code, local.iter_1545.code_ptr, 1)
    input = substr(var.code, local.iter_1545.code_ptr, 1) == "," ? substr(local.iter_1545.input, 0, 1) : null
  }

  iter_1546 = local.end_of_code_1546 ? local.iter_1545 : {
    input = (local.curr_1546.code == ","
      ? substr(local.iter_1545.input, 1, -1)
      : local.iter_1545.input)

    output = (local.curr_1546.code == "."
      ? "${local.iter_1545.output}${jsondecode(format("\"\\u%04x\"", local.iter_1545.tape[local.iter_1545.tape_ptr]))}"
      : local.iter_1545.output)
    
    tape = (
      local.curr_1546.code == "+"
        ? [for i, b in local.iter_1545.tape : (i == local.iter_1545.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1546.code == "-"
        ? [for i, b in local.iter_1545.tape : (i == local.iter_1545.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1546.code == ","
        ? [for i, b in local.iter_1545.tape : (i == local.iter_1545.tape_ptr ? local.ascii_lookup[local.curr_1546.input] : b)]
        : local.iter_1545.tape)

    tape_ptr = (
      local.curr_1546.code == "<"
        ? local.iter_1545.tape_ptr == 0 ? length(local.iter_1545.tape) - 1 : local.iter_1545.tape_ptr - 1 :
      local.curr_1546.code == ">"
        ? local.iter_1545.tape_ptr == length(local.iter_1545.tape) - 1 ? 0 : local.iter_1545.tape_ptr + 1
        : local.iter_1545.tape_ptr)

    code_ptr = 1 + (
      local.curr_1546.code == "["
        ? local.iter_1545.tape[local.iter_1545.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1545.code_ptr)] : local.iter_1545.code_ptr :
      local.curr_1546.code == "]"
        ? local.iter_1545.tape[local.iter_1545.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1545.code_ptr)] : local.iter_1545.code_ptr
        : local.iter_1545.code_ptr)

    steps_taken = 1 + local.iter_1545.steps_taken
  }
}

locals {
  end_of_code_1547 = try(local.iter_1546.code_ptr >= length(var.code), true)

  curr_1547 = local.end_of_code_1547 ? null : {
    code = substr(var.code, local.iter_1546.code_ptr, 1)
    input = substr(var.code, local.iter_1546.code_ptr, 1) == "," ? substr(local.iter_1546.input, 0, 1) : null
  }

  iter_1547 = local.end_of_code_1547 ? local.iter_1546 : {
    input = (local.curr_1547.code == ","
      ? substr(local.iter_1546.input, 1, -1)
      : local.iter_1546.input)

    output = (local.curr_1547.code == "."
      ? "${local.iter_1546.output}${jsondecode(format("\"\\u%04x\"", local.iter_1546.tape[local.iter_1546.tape_ptr]))}"
      : local.iter_1546.output)
    
    tape = (
      local.curr_1547.code == "+"
        ? [for i, b in local.iter_1546.tape : (i == local.iter_1546.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1547.code == "-"
        ? [for i, b in local.iter_1546.tape : (i == local.iter_1546.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1547.code == ","
        ? [for i, b in local.iter_1546.tape : (i == local.iter_1546.tape_ptr ? local.ascii_lookup[local.curr_1547.input] : b)]
        : local.iter_1546.tape)

    tape_ptr = (
      local.curr_1547.code == "<"
        ? local.iter_1546.tape_ptr == 0 ? length(local.iter_1546.tape) - 1 : local.iter_1546.tape_ptr - 1 :
      local.curr_1547.code == ">"
        ? local.iter_1546.tape_ptr == length(local.iter_1546.tape) - 1 ? 0 : local.iter_1546.tape_ptr + 1
        : local.iter_1546.tape_ptr)

    code_ptr = 1 + (
      local.curr_1547.code == "["
        ? local.iter_1546.tape[local.iter_1546.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1546.code_ptr)] : local.iter_1546.code_ptr :
      local.curr_1547.code == "]"
        ? local.iter_1546.tape[local.iter_1546.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1546.code_ptr)] : local.iter_1546.code_ptr
        : local.iter_1546.code_ptr)

    steps_taken = 1 + local.iter_1546.steps_taken
  }
}

locals {
  end_of_code_1548 = try(local.iter_1547.code_ptr >= length(var.code), true)

  curr_1548 = local.end_of_code_1548 ? null : {
    code = substr(var.code, local.iter_1547.code_ptr, 1)
    input = substr(var.code, local.iter_1547.code_ptr, 1) == "," ? substr(local.iter_1547.input, 0, 1) : null
  }

  iter_1548 = local.end_of_code_1548 ? local.iter_1547 : {
    input = (local.curr_1548.code == ","
      ? substr(local.iter_1547.input, 1, -1)
      : local.iter_1547.input)

    output = (local.curr_1548.code == "."
      ? "${local.iter_1547.output}${jsondecode(format("\"\\u%04x\"", local.iter_1547.tape[local.iter_1547.tape_ptr]))}"
      : local.iter_1547.output)
    
    tape = (
      local.curr_1548.code == "+"
        ? [for i, b in local.iter_1547.tape : (i == local.iter_1547.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1548.code == "-"
        ? [for i, b in local.iter_1547.tape : (i == local.iter_1547.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1548.code == ","
        ? [for i, b in local.iter_1547.tape : (i == local.iter_1547.tape_ptr ? local.ascii_lookup[local.curr_1548.input] : b)]
        : local.iter_1547.tape)

    tape_ptr = (
      local.curr_1548.code == "<"
        ? local.iter_1547.tape_ptr == 0 ? length(local.iter_1547.tape) - 1 : local.iter_1547.tape_ptr - 1 :
      local.curr_1548.code == ">"
        ? local.iter_1547.tape_ptr == length(local.iter_1547.tape) - 1 ? 0 : local.iter_1547.tape_ptr + 1
        : local.iter_1547.tape_ptr)

    code_ptr = 1 + (
      local.curr_1548.code == "["
        ? local.iter_1547.tape[local.iter_1547.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1547.code_ptr)] : local.iter_1547.code_ptr :
      local.curr_1548.code == "]"
        ? local.iter_1547.tape[local.iter_1547.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1547.code_ptr)] : local.iter_1547.code_ptr
        : local.iter_1547.code_ptr)

    steps_taken = 1 + local.iter_1547.steps_taken
  }
}

locals {
  end_of_code_1549 = try(local.iter_1548.code_ptr >= length(var.code), true)

  curr_1549 = local.end_of_code_1549 ? null : {
    code = substr(var.code, local.iter_1548.code_ptr, 1)
    input = substr(var.code, local.iter_1548.code_ptr, 1) == "," ? substr(local.iter_1548.input, 0, 1) : null
  }

  iter_1549 = local.end_of_code_1549 ? local.iter_1548 : {
    input = (local.curr_1549.code == ","
      ? substr(local.iter_1548.input, 1, -1)
      : local.iter_1548.input)

    output = (local.curr_1549.code == "."
      ? "${local.iter_1548.output}${jsondecode(format("\"\\u%04x\"", local.iter_1548.tape[local.iter_1548.tape_ptr]))}"
      : local.iter_1548.output)
    
    tape = (
      local.curr_1549.code == "+"
        ? [for i, b in local.iter_1548.tape : (i == local.iter_1548.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1549.code == "-"
        ? [for i, b in local.iter_1548.tape : (i == local.iter_1548.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1549.code == ","
        ? [for i, b in local.iter_1548.tape : (i == local.iter_1548.tape_ptr ? local.ascii_lookup[local.curr_1549.input] : b)]
        : local.iter_1548.tape)

    tape_ptr = (
      local.curr_1549.code == "<"
        ? local.iter_1548.tape_ptr == 0 ? length(local.iter_1548.tape) - 1 : local.iter_1548.tape_ptr - 1 :
      local.curr_1549.code == ">"
        ? local.iter_1548.tape_ptr == length(local.iter_1548.tape) - 1 ? 0 : local.iter_1548.tape_ptr + 1
        : local.iter_1548.tape_ptr)

    code_ptr = 1 + (
      local.curr_1549.code == "["
        ? local.iter_1548.tape[local.iter_1548.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1548.code_ptr)] : local.iter_1548.code_ptr :
      local.curr_1549.code == "]"
        ? local.iter_1548.tape[local.iter_1548.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1548.code_ptr)] : local.iter_1548.code_ptr
        : local.iter_1548.code_ptr)

    steps_taken = 1 + local.iter_1548.steps_taken
  }
}

locals {
  end_of_code_1550 = try(local.iter_1549.code_ptr >= length(var.code), true)

  curr_1550 = local.end_of_code_1550 ? null : {
    code = substr(var.code, local.iter_1549.code_ptr, 1)
    input = substr(var.code, local.iter_1549.code_ptr, 1) == "," ? substr(local.iter_1549.input, 0, 1) : null
  }

  iter_1550 = local.end_of_code_1550 ? local.iter_1549 : {
    input = (local.curr_1550.code == ","
      ? substr(local.iter_1549.input, 1, -1)
      : local.iter_1549.input)

    output = (local.curr_1550.code == "."
      ? "${local.iter_1549.output}${jsondecode(format("\"\\u%04x\"", local.iter_1549.tape[local.iter_1549.tape_ptr]))}"
      : local.iter_1549.output)
    
    tape = (
      local.curr_1550.code == "+"
        ? [for i, b in local.iter_1549.tape : (i == local.iter_1549.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1550.code == "-"
        ? [for i, b in local.iter_1549.tape : (i == local.iter_1549.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1550.code == ","
        ? [for i, b in local.iter_1549.tape : (i == local.iter_1549.tape_ptr ? local.ascii_lookup[local.curr_1550.input] : b)]
        : local.iter_1549.tape)

    tape_ptr = (
      local.curr_1550.code == "<"
        ? local.iter_1549.tape_ptr == 0 ? length(local.iter_1549.tape) - 1 : local.iter_1549.tape_ptr - 1 :
      local.curr_1550.code == ">"
        ? local.iter_1549.tape_ptr == length(local.iter_1549.tape) - 1 ? 0 : local.iter_1549.tape_ptr + 1
        : local.iter_1549.tape_ptr)

    code_ptr = 1 + (
      local.curr_1550.code == "["
        ? local.iter_1549.tape[local.iter_1549.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1549.code_ptr)] : local.iter_1549.code_ptr :
      local.curr_1550.code == "]"
        ? local.iter_1549.tape[local.iter_1549.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1549.code_ptr)] : local.iter_1549.code_ptr
        : local.iter_1549.code_ptr)

    steps_taken = 1 + local.iter_1549.steps_taken
  }
}

locals {
  end_of_code_1551 = try(local.iter_1550.code_ptr >= length(var.code), true)

  curr_1551 = local.end_of_code_1551 ? null : {
    code = substr(var.code, local.iter_1550.code_ptr, 1)
    input = substr(var.code, local.iter_1550.code_ptr, 1) == "," ? substr(local.iter_1550.input, 0, 1) : null
  }

  iter_1551 = local.end_of_code_1551 ? local.iter_1550 : {
    input = (local.curr_1551.code == ","
      ? substr(local.iter_1550.input, 1, -1)
      : local.iter_1550.input)

    output = (local.curr_1551.code == "."
      ? "${local.iter_1550.output}${jsondecode(format("\"\\u%04x\"", local.iter_1550.tape[local.iter_1550.tape_ptr]))}"
      : local.iter_1550.output)
    
    tape = (
      local.curr_1551.code == "+"
        ? [for i, b in local.iter_1550.tape : (i == local.iter_1550.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1551.code == "-"
        ? [for i, b in local.iter_1550.tape : (i == local.iter_1550.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1551.code == ","
        ? [for i, b in local.iter_1550.tape : (i == local.iter_1550.tape_ptr ? local.ascii_lookup[local.curr_1551.input] : b)]
        : local.iter_1550.tape)

    tape_ptr = (
      local.curr_1551.code == "<"
        ? local.iter_1550.tape_ptr == 0 ? length(local.iter_1550.tape) - 1 : local.iter_1550.tape_ptr - 1 :
      local.curr_1551.code == ">"
        ? local.iter_1550.tape_ptr == length(local.iter_1550.tape) - 1 ? 0 : local.iter_1550.tape_ptr + 1
        : local.iter_1550.tape_ptr)

    code_ptr = 1 + (
      local.curr_1551.code == "["
        ? local.iter_1550.tape[local.iter_1550.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1550.code_ptr)] : local.iter_1550.code_ptr :
      local.curr_1551.code == "]"
        ? local.iter_1550.tape[local.iter_1550.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1550.code_ptr)] : local.iter_1550.code_ptr
        : local.iter_1550.code_ptr)

    steps_taken = 1 + local.iter_1550.steps_taken
  }
}

locals {
  end_of_code_1552 = try(local.iter_1551.code_ptr >= length(var.code), true)

  curr_1552 = local.end_of_code_1552 ? null : {
    code = substr(var.code, local.iter_1551.code_ptr, 1)
    input = substr(var.code, local.iter_1551.code_ptr, 1) == "," ? substr(local.iter_1551.input, 0, 1) : null
  }

  iter_1552 = local.end_of_code_1552 ? local.iter_1551 : {
    input = (local.curr_1552.code == ","
      ? substr(local.iter_1551.input, 1, -1)
      : local.iter_1551.input)

    output = (local.curr_1552.code == "."
      ? "${local.iter_1551.output}${jsondecode(format("\"\\u%04x\"", local.iter_1551.tape[local.iter_1551.tape_ptr]))}"
      : local.iter_1551.output)
    
    tape = (
      local.curr_1552.code == "+"
        ? [for i, b in local.iter_1551.tape : (i == local.iter_1551.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1552.code == "-"
        ? [for i, b in local.iter_1551.tape : (i == local.iter_1551.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1552.code == ","
        ? [for i, b in local.iter_1551.tape : (i == local.iter_1551.tape_ptr ? local.ascii_lookup[local.curr_1552.input] : b)]
        : local.iter_1551.tape)

    tape_ptr = (
      local.curr_1552.code == "<"
        ? local.iter_1551.tape_ptr == 0 ? length(local.iter_1551.tape) - 1 : local.iter_1551.tape_ptr - 1 :
      local.curr_1552.code == ">"
        ? local.iter_1551.tape_ptr == length(local.iter_1551.tape) - 1 ? 0 : local.iter_1551.tape_ptr + 1
        : local.iter_1551.tape_ptr)

    code_ptr = 1 + (
      local.curr_1552.code == "["
        ? local.iter_1551.tape[local.iter_1551.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1551.code_ptr)] : local.iter_1551.code_ptr :
      local.curr_1552.code == "]"
        ? local.iter_1551.tape[local.iter_1551.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1551.code_ptr)] : local.iter_1551.code_ptr
        : local.iter_1551.code_ptr)

    steps_taken = 1 + local.iter_1551.steps_taken
  }
}

locals {
  end_of_code_1553 = try(local.iter_1552.code_ptr >= length(var.code), true)

  curr_1553 = local.end_of_code_1553 ? null : {
    code = substr(var.code, local.iter_1552.code_ptr, 1)
    input = substr(var.code, local.iter_1552.code_ptr, 1) == "," ? substr(local.iter_1552.input, 0, 1) : null
  }

  iter_1553 = local.end_of_code_1553 ? local.iter_1552 : {
    input = (local.curr_1553.code == ","
      ? substr(local.iter_1552.input, 1, -1)
      : local.iter_1552.input)

    output = (local.curr_1553.code == "."
      ? "${local.iter_1552.output}${jsondecode(format("\"\\u%04x\"", local.iter_1552.tape[local.iter_1552.tape_ptr]))}"
      : local.iter_1552.output)
    
    tape = (
      local.curr_1553.code == "+"
        ? [for i, b in local.iter_1552.tape : (i == local.iter_1552.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1553.code == "-"
        ? [for i, b in local.iter_1552.tape : (i == local.iter_1552.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1553.code == ","
        ? [for i, b in local.iter_1552.tape : (i == local.iter_1552.tape_ptr ? local.ascii_lookup[local.curr_1553.input] : b)]
        : local.iter_1552.tape)

    tape_ptr = (
      local.curr_1553.code == "<"
        ? local.iter_1552.tape_ptr == 0 ? length(local.iter_1552.tape) - 1 : local.iter_1552.tape_ptr - 1 :
      local.curr_1553.code == ">"
        ? local.iter_1552.tape_ptr == length(local.iter_1552.tape) - 1 ? 0 : local.iter_1552.tape_ptr + 1
        : local.iter_1552.tape_ptr)

    code_ptr = 1 + (
      local.curr_1553.code == "["
        ? local.iter_1552.tape[local.iter_1552.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1552.code_ptr)] : local.iter_1552.code_ptr :
      local.curr_1553.code == "]"
        ? local.iter_1552.tape[local.iter_1552.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1552.code_ptr)] : local.iter_1552.code_ptr
        : local.iter_1552.code_ptr)

    steps_taken = 1 + local.iter_1552.steps_taken
  }
}

locals {
  end_of_code_1554 = try(local.iter_1553.code_ptr >= length(var.code), true)

  curr_1554 = local.end_of_code_1554 ? null : {
    code = substr(var.code, local.iter_1553.code_ptr, 1)
    input = substr(var.code, local.iter_1553.code_ptr, 1) == "," ? substr(local.iter_1553.input, 0, 1) : null
  }

  iter_1554 = local.end_of_code_1554 ? local.iter_1553 : {
    input = (local.curr_1554.code == ","
      ? substr(local.iter_1553.input, 1, -1)
      : local.iter_1553.input)

    output = (local.curr_1554.code == "."
      ? "${local.iter_1553.output}${jsondecode(format("\"\\u%04x\"", local.iter_1553.tape[local.iter_1553.tape_ptr]))}"
      : local.iter_1553.output)
    
    tape = (
      local.curr_1554.code == "+"
        ? [for i, b in local.iter_1553.tape : (i == local.iter_1553.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1554.code == "-"
        ? [for i, b in local.iter_1553.tape : (i == local.iter_1553.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1554.code == ","
        ? [for i, b in local.iter_1553.tape : (i == local.iter_1553.tape_ptr ? local.ascii_lookup[local.curr_1554.input] : b)]
        : local.iter_1553.tape)

    tape_ptr = (
      local.curr_1554.code == "<"
        ? local.iter_1553.tape_ptr == 0 ? length(local.iter_1553.tape) - 1 : local.iter_1553.tape_ptr - 1 :
      local.curr_1554.code == ">"
        ? local.iter_1553.tape_ptr == length(local.iter_1553.tape) - 1 ? 0 : local.iter_1553.tape_ptr + 1
        : local.iter_1553.tape_ptr)

    code_ptr = 1 + (
      local.curr_1554.code == "["
        ? local.iter_1553.tape[local.iter_1553.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1553.code_ptr)] : local.iter_1553.code_ptr :
      local.curr_1554.code == "]"
        ? local.iter_1553.tape[local.iter_1553.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1553.code_ptr)] : local.iter_1553.code_ptr
        : local.iter_1553.code_ptr)

    steps_taken = 1 + local.iter_1553.steps_taken
  }
}

locals {
  end_of_code_1555 = try(local.iter_1554.code_ptr >= length(var.code), true)

  curr_1555 = local.end_of_code_1555 ? null : {
    code = substr(var.code, local.iter_1554.code_ptr, 1)
    input = substr(var.code, local.iter_1554.code_ptr, 1) == "," ? substr(local.iter_1554.input, 0, 1) : null
  }

  iter_1555 = local.end_of_code_1555 ? local.iter_1554 : {
    input = (local.curr_1555.code == ","
      ? substr(local.iter_1554.input, 1, -1)
      : local.iter_1554.input)

    output = (local.curr_1555.code == "."
      ? "${local.iter_1554.output}${jsondecode(format("\"\\u%04x\"", local.iter_1554.tape[local.iter_1554.tape_ptr]))}"
      : local.iter_1554.output)
    
    tape = (
      local.curr_1555.code == "+"
        ? [for i, b in local.iter_1554.tape : (i == local.iter_1554.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1555.code == "-"
        ? [for i, b in local.iter_1554.tape : (i == local.iter_1554.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1555.code == ","
        ? [for i, b in local.iter_1554.tape : (i == local.iter_1554.tape_ptr ? local.ascii_lookup[local.curr_1555.input] : b)]
        : local.iter_1554.tape)

    tape_ptr = (
      local.curr_1555.code == "<"
        ? local.iter_1554.tape_ptr == 0 ? length(local.iter_1554.tape) - 1 : local.iter_1554.tape_ptr - 1 :
      local.curr_1555.code == ">"
        ? local.iter_1554.tape_ptr == length(local.iter_1554.tape) - 1 ? 0 : local.iter_1554.tape_ptr + 1
        : local.iter_1554.tape_ptr)

    code_ptr = 1 + (
      local.curr_1555.code == "["
        ? local.iter_1554.tape[local.iter_1554.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1554.code_ptr)] : local.iter_1554.code_ptr :
      local.curr_1555.code == "]"
        ? local.iter_1554.tape[local.iter_1554.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1554.code_ptr)] : local.iter_1554.code_ptr
        : local.iter_1554.code_ptr)

    steps_taken = 1 + local.iter_1554.steps_taken
  }
}

locals {
  end_of_code_1556 = try(local.iter_1555.code_ptr >= length(var.code), true)

  curr_1556 = local.end_of_code_1556 ? null : {
    code = substr(var.code, local.iter_1555.code_ptr, 1)
    input = substr(var.code, local.iter_1555.code_ptr, 1) == "," ? substr(local.iter_1555.input, 0, 1) : null
  }

  iter_1556 = local.end_of_code_1556 ? local.iter_1555 : {
    input = (local.curr_1556.code == ","
      ? substr(local.iter_1555.input, 1, -1)
      : local.iter_1555.input)

    output = (local.curr_1556.code == "."
      ? "${local.iter_1555.output}${jsondecode(format("\"\\u%04x\"", local.iter_1555.tape[local.iter_1555.tape_ptr]))}"
      : local.iter_1555.output)
    
    tape = (
      local.curr_1556.code == "+"
        ? [for i, b in local.iter_1555.tape : (i == local.iter_1555.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1556.code == "-"
        ? [for i, b in local.iter_1555.tape : (i == local.iter_1555.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1556.code == ","
        ? [for i, b in local.iter_1555.tape : (i == local.iter_1555.tape_ptr ? local.ascii_lookup[local.curr_1556.input] : b)]
        : local.iter_1555.tape)

    tape_ptr = (
      local.curr_1556.code == "<"
        ? local.iter_1555.tape_ptr == 0 ? length(local.iter_1555.tape) - 1 : local.iter_1555.tape_ptr - 1 :
      local.curr_1556.code == ">"
        ? local.iter_1555.tape_ptr == length(local.iter_1555.tape) - 1 ? 0 : local.iter_1555.tape_ptr + 1
        : local.iter_1555.tape_ptr)

    code_ptr = 1 + (
      local.curr_1556.code == "["
        ? local.iter_1555.tape[local.iter_1555.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1555.code_ptr)] : local.iter_1555.code_ptr :
      local.curr_1556.code == "]"
        ? local.iter_1555.tape[local.iter_1555.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1555.code_ptr)] : local.iter_1555.code_ptr
        : local.iter_1555.code_ptr)

    steps_taken = 1 + local.iter_1555.steps_taken
  }
}

locals {
  end_of_code_1557 = try(local.iter_1556.code_ptr >= length(var.code), true)

  curr_1557 = local.end_of_code_1557 ? null : {
    code = substr(var.code, local.iter_1556.code_ptr, 1)
    input = substr(var.code, local.iter_1556.code_ptr, 1) == "," ? substr(local.iter_1556.input, 0, 1) : null
  }

  iter_1557 = local.end_of_code_1557 ? local.iter_1556 : {
    input = (local.curr_1557.code == ","
      ? substr(local.iter_1556.input, 1, -1)
      : local.iter_1556.input)

    output = (local.curr_1557.code == "."
      ? "${local.iter_1556.output}${jsondecode(format("\"\\u%04x\"", local.iter_1556.tape[local.iter_1556.tape_ptr]))}"
      : local.iter_1556.output)
    
    tape = (
      local.curr_1557.code == "+"
        ? [for i, b in local.iter_1556.tape : (i == local.iter_1556.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1557.code == "-"
        ? [for i, b in local.iter_1556.tape : (i == local.iter_1556.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1557.code == ","
        ? [for i, b in local.iter_1556.tape : (i == local.iter_1556.tape_ptr ? local.ascii_lookup[local.curr_1557.input] : b)]
        : local.iter_1556.tape)

    tape_ptr = (
      local.curr_1557.code == "<"
        ? local.iter_1556.tape_ptr == 0 ? length(local.iter_1556.tape) - 1 : local.iter_1556.tape_ptr - 1 :
      local.curr_1557.code == ">"
        ? local.iter_1556.tape_ptr == length(local.iter_1556.tape) - 1 ? 0 : local.iter_1556.tape_ptr + 1
        : local.iter_1556.tape_ptr)

    code_ptr = 1 + (
      local.curr_1557.code == "["
        ? local.iter_1556.tape[local.iter_1556.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1556.code_ptr)] : local.iter_1556.code_ptr :
      local.curr_1557.code == "]"
        ? local.iter_1556.tape[local.iter_1556.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1556.code_ptr)] : local.iter_1556.code_ptr
        : local.iter_1556.code_ptr)

    steps_taken = 1 + local.iter_1556.steps_taken
  }
}

locals {
  end_of_code_1558 = try(local.iter_1557.code_ptr >= length(var.code), true)

  curr_1558 = local.end_of_code_1558 ? null : {
    code = substr(var.code, local.iter_1557.code_ptr, 1)
    input = substr(var.code, local.iter_1557.code_ptr, 1) == "," ? substr(local.iter_1557.input, 0, 1) : null
  }

  iter_1558 = local.end_of_code_1558 ? local.iter_1557 : {
    input = (local.curr_1558.code == ","
      ? substr(local.iter_1557.input, 1, -1)
      : local.iter_1557.input)

    output = (local.curr_1558.code == "."
      ? "${local.iter_1557.output}${jsondecode(format("\"\\u%04x\"", local.iter_1557.tape[local.iter_1557.tape_ptr]))}"
      : local.iter_1557.output)
    
    tape = (
      local.curr_1558.code == "+"
        ? [for i, b in local.iter_1557.tape : (i == local.iter_1557.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1558.code == "-"
        ? [for i, b in local.iter_1557.tape : (i == local.iter_1557.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1558.code == ","
        ? [for i, b in local.iter_1557.tape : (i == local.iter_1557.tape_ptr ? local.ascii_lookup[local.curr_1558.input] : b)]
        : local.iter_1557.tape)

    tape_ptr = (
      local.curr_1558.code == "<"
        ? local.iter_1557.tape_ptr == 0 ? length(local.iter_1557.tape) - 1 : local.iter_1557.tape_ptr - 1 :
      local.curr_1558.code == ">"
        ? local.iter_1557.tape_ptr == length(local.iter_1557.tape) - 1 ? 0 : local.iter_1557.tape_ptr + 1
        : local.iter_1557.tape_ptr)

    code_ptr = 1 + (
      local.curr_1558.code == "["
        ? local.iter_1557.tape[local.iter_1557.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1557.code_ptr)] : local.iter_1557.code_ptr :
      local.curr_1558.code == "]"
        ? local.iter_1557.tape[local.iter_1557.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1557.code_ptr)] : local.iter_1557.code_ptr
        : local.iter_1557.code_ptr)

    steps_taken = 1 + local.iter_1557.steps_taken
  }
}

locals {
  end_of_code_1559 = try(local.iter_1558.code_ptr >= length(var.code), true)

  curr_1559 = local.end_of_code_1559 ? null : {
    code = substr(var.code, local.iter_1558.code_ptr, 1)
    input = substr(var.code, local.iter_1558.code_ptr, 1) == "," ? substr(local.iter_1558.input, 0, 1) : null
  }

  iter_1559 = local.end_of_code_1559 ? local.iter_1558 : {
    input = (local.curr_1559.code == ","
      ? substr(local.iter_1558.input, 1, -1)
      : local.iter_1558.input)

    output = (local.curr_1559.code == "."
      ? "${local.iter_1558.output}${jsondecode(format("\"\\u%04x\"", local.iter_1558.tape[local.iter_1558.tape_ptr]))}"
      : local.iter_1558.output)
    
    tape = (
      local.curr_1559.code == "+"
        ? [for i, b in local.iter_1558.tape : (i == local.iter_1558.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1559.code == "-"
        ? [for i, b in local.iter_1558.tape : (i == local.iter_1558.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1559.code == ","
        ? [for i, b in local.iter_1558.tape : (i == local.iter_1558.tape_ptr ? local.ascii_lookup[local.curr_1559.input] : b)]
        : local.iter_1558.tape)

    tape_ptr = (
      local.curr_1559.code == "<"
        ? local.iter_1558.tape_ptr == 0 ? length(local.iter_1558.tape) - 1 : local.iter_1558.tape_ptr - 1 :
      local.curr_1559.code == ">"
        ? local.iter_1558.tape_ptr == length(local.iter_1558.tape) - 1 ? 0 : local.iter_1558.tape_ptr + 1
        : local.iter_1558.tape_ptr)

    code_ptr = 1 + (
      local.curr_1559.code == "["
        ? local.iter_1558.tape[local.iter_1558.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1558.code_ptr)] : local.iter_1558.code_ptr :
      local.curr_1559.code == "]"
        ? local.iter_1558.tape[local.iter_1558.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1558.code_ptr)] : local.iter_1558.code_ptr
        : local.iter_1558.code_ptr)

    steps_taken = 1 + local.iter_1558.steps_taken
  }
}

locals {
  end_of_code_1560 = try(local.iter_1559.code_ptr >= length(var.code), true)

  curr_1560 = local.end_of_code_1560 ? null : {
    code = substr(var.code, local.iter_1559.code_ptr, 1)
    input = substr(var.code, local.iter_1559.code_ptr, 1) == "," ? substr(local.iter_1559.input, 0, 1) : null
  }

  iter_1560 = local.end_of_code_1560 ? local.iter_1559 : {
    input = (local.curr_1560.code == ","
      ? substr(local.iter_1559.input, 1, -1)
      : local.iter_1559.input)

    output = (local.curr_1560.code == "."
      ? "${local.iter_1559.output}${jsondecode(format("\"\\u%04x\"", local.iter_1559.tape[local.iter_1559.tape_ptr]))}"
      : local.iter_1559.output)
    
    tape = (
      local.curr_1560.code == "+"
        ? [for i, b in local.iter_1559.tape : (i == local.iter_1559.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1560.code == "-"
        ? [for i, b in local.iter_1559.tape : (i == local.iter_1559.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1560.code == ","
        ? [for i, b in local.iter_1559.tape : (i == local.iter_1559.tape_ptr ? local.ascii_lookup[local.curr_1560.input] : b)]
        : local.iter_1559.tape)

    tape_ptr = (
      local.curr_1560.code == "<"
        ? local.iter_1559.tape_ptr == 0 ? length(local.iter_1559.tape) - 1 : local.iter_1559.tape_ptr - 1 :
      local.curr_1560.code == ">"
        ? local.iter_1559.tape_ptr == length(local.iter_1559.tape) - 1 ? 0 : local.iter_1559.tape_ptr + 1
        : local.iter_1559.tape_ptr)

    code_ptr = 1 + (
      local.curr_1560.code == "["
        ? local.iter_1559.tape[local.iter_1559.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1559.code_ptr)] : local.iter_1559.code_ptr :
      local.curr_1560.code == "]"
        ? local.iter_1559.tape[local.iter_1559.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1559.code_ptr)] : local.iter_1559.code_ptr
        : local.iter_1559.code_ptr)

    steps_taken = 1 + local.iter_1559.steps_taken
  }
}

locals {
  end_of_code_1561 = try(local.iter_1560.code_ptr >= length(var.code), true)

  curr_1561 = local.end_of_code_1561 ? null : {
    code = substr(var.code, local.iter_1560.code_ptr, 1)
    input = substr(var.code, local.iter_1560.code_ptr, 1) == "," ? substr(local.iter_1560.input, 0, 1) : null
  }

  iter_1561 = local.end_of_code_1561 ? local.iter_1560 : {
    input = (local.curr_1561.code == ","
      ? substr(local.iter_1560.input, 1, -1)
      : local.iter_1560.input)

    output = (local.curr_1561.code == "."
      ? "${local.iter_1560.output}${jsondecode(format("\"\\u%04x\"", local.iter_1560.tape[local.iter_1560.tape_ptr]))}"
      : local.iter_1560.output)
    
    tape = (
      local.curr_1561.code == "+"
        ? [for i, b in local.iter_1560.tape : (i == local.iter_1560.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1561.code == "-"
        ? [for i, b in local.iter_1560.tape : (i == local.iter_1560.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1561.code == ","
        ? [for i, b in local.iter_1560.tape : (i == local.iter_1560.tape_ptr ? local.ascii_lookup[local.curr_1561.input] : b)]
        : local.iter_1560.tape)

    tape_ptr = (
      local.curr_1561.code == "<"
        ? local.iter_1560.tape_ptr == 0 ? length(local.iter_1560.tape) - 1 : local.iter_1560.tape_ptr - 1 :
      local.curr_1561.code == ">"
        ? local.iter_1560.tape_ptr == length(local.iter_1560.tape) - 1 ? 0 : local.iter_1560.tape_ptr + 1
        : local.iter_1560.tape_ptr)

    code_ptr = 1 + (
      local.curr_1561.code == "["
        ? local.iter_1560.tape[local.iter_1560.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1560.code_ptr)] : local.iter_1560.code_ptr :
      local.curr_1561.code == "]"
        ? local.iter_1560.tape[local.iter_1560.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1560.code_ptr)] : local.iter_1560.code_ptr
        : local.iter_1560.code_ptr)

    steps_taken = 1 + local.iter_1560.steps_taken
  }
}

locals {
  end_of_code_1562 = try(local.iter_1561.code_ptr >= length(var.code), true)

  curr_1562 = local.end_of_code_1562 ? null : {
    code = substr(var.code, local.iter_1561.code_ptr, 1)
    input = substr(var.code, local.iter_1561.code_ptr, 1) == "," ? substr(local.iter_1561.input, 0, 1) : null
  }

  iter_1562 = local.end_of_code_1562 ? local.iter_1561 : {
    input = (local.curr_1562.code == ","
      ? substr(local.iter_1561.input, 1, -1)
      : local.iter_1561.input)

    output = (local.curr_1562.code == "."
      ? "${local.iter_1561.output}${jsondecode(format("\"\\u%04x\"", local.iter_1561.tape[local.iter_1561.tape_ptr]))}"
      : local.iter_1561.output)
    
    tape = (
      local.curr_1562.code == "+"
        ? [for i, b in local.iter_1561.tape : (i == local.iter_1561.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1562.code == "-"
        ? [for i, b in local.iter_1561.tape : (i == local.iter_1561.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1562.code == ","
        ? [for i, b in local.iter_1561.tape : (i == local.iter_1561.tape_ptr ? local.ascii_lookup[local.curr_1562.input] : b)]
        : local.iter_1561.tape)

    tape_ptr = (
      local.curr_1562.code == "<"
        ? local.iter_1561.tape_ptr == 0 ? length(local.iter_1561.tape) - 1 : local.iter_1561.tape_ptr - 1 :
      local.curr_1562.code == ">"
        ? local.iter_1561.tape_ptr == length(local.iter_1561.tape) - 1 ? 0 : local.iter_1561.tape_ptr + 1
        : local.iter_1561.tape_ptr)

    code_ptr = 1 + (
      local.curr_1562.code == "["
        ? local.iter_1561.tape[local.iter_1561.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1561.code_ptr)] : local.iter_1561.code_ptr :
      local.curr_1562.code == "]"
        ? local.iter_1561.tape[local.iter_1561.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1561.code_ptr)] : local.iter_1561.code_ptr
        : local.iter_1561.code_ptr)

    steps_taken = 1 + local.iter_1561.steps_taken
  }
}

locals {
  end_of_code_1563 = try(local.iter_1562.code_ptr >= length(var.code), true)

  curr_1563 = local.end_of_code_1563 ? null : {
    code = substr(var.code, local.iter_1562.code_ptr, 1)
    input = substr(var.code, local.iter_1562.code_ptr, 1) == "," ? substr(local.iter_1562.input, 0, 1) : null
  }

  iter_1563 = local.end_of_code_1563 ? local.iter_1562 : {
    input = (local.curr_1563.code == ","
      ? substr(local.iter_1562.input, 1, -1)
      : local.iter_1562.input)

    output = (local.curr_1563.code == "."
      ? "${local.iter_1562.output}${jsondecode(format("\"\\u%04x\"", local.iter_1562.tape[local.iter_1562.tape_ptr]))}"
      : local.iter_1562.output)
    
    tape = (
      local.curr_1563.code == "+"
        ? [for i, b in local.iter_1562.tape : (i == local.iter_1562.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1563.code == "-"
        ? [for i, b in local.iter_1562.tape : (i == local.iter_1562.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1563.code == ","
        ? [for i, b in local.iter_1562.tape : (i == local.iter_1562.tape_ptr ? local.ascii_lookup[local.curr_1563.input] : b)]
        : local.iter_1562.tape)

    tape_ptr = (
      local.curr_1563.code == "<"
        ? local.iter_1562.tape_ptr == 0 ? length(local.iter_1562.tape) - 1 : local.iter_1562.tape_ptr - 1 :
      local.curr_1563.code == ">"
        ? local.iter_1562.tape_ptr == length(local.iter_1562.tape) - 1 ? 0 : local.iter_1562.tape_ptr + 1
        : local.iter_1562.tape_ptr)

    code_ptr = 1 + (
      local.curr_1563.code == "["
        ? local.iter_1562.tape[local.iter_1562.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1562.code_ptr)] : local.iter_1562.code_ptr :
      local.curr_1563.code == "]"
        ? local.iter_1562.tape[local.iter_1562.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1562.code_ptr)] : local.iter_1562.code_ptr
        : local.iter_1562.code_ptr)

    steps_taken = 1 + local.iter_1562.steps_taken
  }
}

locals {
  end_of_code_1564 = try(local.iter_1563.code_ptr >= length(var.code), true)

  curr_1564 = local.end_of_code_1564 ? null : {
    code = substr(var.code, local.iter_1563.code_ptr, 1)
    input = substr(var.code, local.iter_1563.code_ptr, 1) == "," ? substr(local.iter_1563.input, 0, 1) : null
  }

  iter_1564 = local.end_of_code_1564 ? local.iter_1563 : {
    input = (local.curr_1564.code == ","
      ? substr(local.iter_1563.input, 1, -1)
      : local.iter_1563.input)

    output = (local.curr_1564.code == "."
      ? "${local.iter_1563.output}${jsondecode(format("\"\\u%04x\"", local.iter_1563.tape[local.iter_1563.tape_ptr]))}"
      : local.iter_1563.output)
    
    tape = (
      local.curr_1564.code == "+"
        ? [for i, b in local.iter_1563.tape : (i == local.iter_1563.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1564.code == "-"
        ? [for i, b in local.iter_1563.tape : (i == local.iter_1563.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1564.code == ","
        ? [for i, b in local.iter_1563.tape : (i == local.iter_1563.tape_ptr ? local.ascii_lookup[local.curr_1564.input] : b)]
        : local.iter_1563.tape)

    tape_ptr = (
      local.curr_1564.code == "<"
        ? local.iter_1563.tape_ptr == 0 ? length(local.iter_1563.tape) - 1 : local.iter_1563.tape_ptr - 1 :
      local.curr_1564.code == ">"
        ? local.iter_1563.tape_ptr == length(local.iter_1563.tape) - 1 ? 0 : local.iter_1563.tape_ptr + 1
        : local.iter_1563.tape_ptr)

    code_ptr = 1 + (
      local.curr_1564.code == "["
        ? local.iter_1563.tape[local.iter_1563.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1563.code_ptr)] : local.iter_1563.code_ptr :
      local.curr_1564.code == "]"
        ? local.iter_1563.tape[local.iter_1563.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1563.code_ptr)] : local.iter_1563.code_ptr
        : local.iter_1563.code_ptr)

    steps_taken = 1 + local.iter_1563.steps_taken
  }
}

locals {
  end_of_code_1565 = try(local.iter_1564.code_ptr >= length(var.code), true)

  curr_1565 = local.end_of_code_1565 ? null : {
    code = substr(var.code, local.iter_1564.code_ptr, 1)
    input = substr(var.code, local.iter_1564.code_ptr, 1) == "," ? substr(local.iter_1564.input, 0, 1) : null
  }

  iter_1565 = local.end_of_code_1565 ? local.iter_1564 : {
    input = (local.curr_1565.code == ","
      ? substr(local.iter_1564.input, 1, -1)
      : local.iter_1564.input)

    output = (local.curr_1565.code == "."
      ? "${local.iter_1564.output}${jsondecode(format("\"\\u%04x\"", local.iter_1564.tape[local.iter_1564.tape_ptr]))}"
      : local.iter_1564.output)
    
    tape = (
      local.curr_1565.code == "+"
        ? [for i, b in local.iter_1564.tape : (i == local.iter_1564.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1565.code == "-"
        ? [for i, b in local.iter_1564.tape : (i == local.iter_1564.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1565.code == ","
        ? [for i, b in local.iter_1564.tape : (i == local.iter_1564.tape_ptr ? local.ascii_lookup[local.curr_1565.input] : b)]
        : local.iter_1564.tape)

    tape_ptr = (
      local.curr_1565.code == "<"
        ? local.iter_1564.tape_ptr == 0 ? length(local.iter_1564.tape) - 1 : local.iter_1564.tape_ptr - 1 :
      local.curr_1565.code == ">"
        ? local.iter_1564.tape_ptr == length(local.iter_1564.tape) - 1 ? 0 : local.iter_1564.tape_ptr + 1
        : local.iter_1564.tape_ptr)

    code_ptr = 1 + (
      local.curr_1565.code == "["
        ? local.iter_1564.tape[local.iter_1564.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1564.code_ptr)] : local.iter_1564.code_ptr :
      local.curr_1565.code == "]"
        ? local.iter_1564.tape[local.iter_1564.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1564.code_ptr)] : local.iter_1564.code_ptr
        : local.iter_1564.code_ptr)

    steps_taken = 1 + local.iter_1564.steps_taken
  }
}

locals {
  end_of_code_1566 = try(local.iter_1565.code_ptr >= length(var.code), true)

  curr_1566 = local.end_of_code_1566 ? null : {
    code = substr(var.code, local.iter_1565.code_ptr, 1)
    input = substr(var.code, local.iter_1565.code_ptr, 1) == "," ? substr(local.iter_1565.input, 0, 1) : null
  }

  iter_1566 = local.end_of_code_1566 ? local.iter_1565 : {
    input = (local.curr_1566.code == ","
      ? substr(local.iter_1565.input, 1, -1)
      : local.iter_1565.input)

    output = (local.curr_1566.code == "."
      ? "${local.iter_1565.output}${jsondecode(format("\"\\u%04x\"", local.iter_1565.tape[local.iter_1565.tape_ptr]))}"
      : local.iter_1565.output)
    
    tape = (
      local.curr_1566.code == "+"
        ? [for i, b in local.iter_1565.tape : (i == local.iter_1565.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1566.code == "-"
        ? [for i, b in local.iter_1565.tape : (i == local.iter_1565.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1566.code == ","
        ? [for i, b in local.iter_1565.tape : (i == local.iter_1565.tape_ptr ? local.ascii_lookup[local.curr_1566.input] : b)]
        : local.iter_1565.tape)

    tape_ptr = (
      local.curr_1566.code == "<"
        ? local.iter_1565.tape_ptr == 0 ? length(local.iter_1565.tape) - 1 : local.iter_1565.tape_ptr - 1 :
      local.curr_1566.code == ">"
        ? local.iter_1565.tape_ptr == length(local.iter_1565.tape) - 1 ? 0 : local.iter_1565.tape_ptr + 1
        : local.iter_1565.tape_ptr)

    code_ptr = 1 + (
      local.curr_1566.code == "["
        ? local.iter_1565.tape[local.iter_1565.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1565.code_ptr)] : local.iter_1565.code_ptr :
      local.curr_1566.code == "]"
        ? local.iter_1565.tape[local.iter_1565.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1565.code_ptr)] : local.iter_1565.code_ptr
        : local.iter_1565.code_ptr)

    steps_taken = 1 + local.iter_1565.steps_taken
  }
}

locals {
  end_of_code_1567 = try(local.iter_1566.code_ptr >= length(var.code), true)

  curr_1567 = local.end_of_code_1567 ? null : {
    code = substr(var.code, local.iter_1566.code_ptr, 1)
    input = substr(var.code, local.iter_1566.code_ptr, 1) == "," ? substr(local.iter_1566.input, 0, 1) : null
  }

  iter_1567 = local.end_of_code_1567 ? local.iter_1566 : {
    input = (local.curr_1567.code == ","
      ? substr(local.iter_1566.input, 1, -1)
      : local.iter_1566.input)

    output = (local.curr_1567.code == "."
      ? "${local.iter_1566.output}${jsondecode(format("\"\\u%04x\"", local.iter_1566.tape[local.iter_1566.tape_ptr]))}"
      : local.iter_1566.output)
    
    tape = (
      local.curr_1567.code == "+"
        ? [for i, b in local.iter_1566.tape : (i == local.iter_1566.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1567.code == "-"
        ? [for i, b in local.iter_1566.tape : (i == local.iter_1566.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1567.code == ","
        ? [for i, b in local.iter_1566.tape : (i == local.iter_1566.tape_ptr ? local.ascii_lookup[local.curr_1567.input] : b)]
        : local.iter_1566.tape)

    tape_ptr = (
      local.curr_1567.code == "<"
        ? local.iter_1566.tape_ptr == 0 ? length(local.iter_1566.tape) - 1 : local.iter_1566.tape_ptr - 1 :
      local.curr_1567.code == ">"
        ? local.iter_1566.tape_ptr == length(local.iter_1566.tape) - 1 ? 0 : local.iter_1566.tape_ptr + 1
        : local.iter_1566.tape_ptr)

    code_ptr = 1 + (
      local.curr_1567.code == "["
        ? local.iter_1566.tape[local.iter_1566.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1566.code_ptr)] : local.iter_1566.code_ptr :
      local.curr_1567.code == "]"
        ? local.iter_1566.tape[local.iter_1566.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1566.code_ptr)] : local.iter_1566.code_ptr
        : local.iter_1566.code_ptr)

    steps_taken = 1 + local.iter_1566.steps_taken
  }
}

locals {
  end_of_code_1568 = try(local.iter_1567.code_ptr >= length(var.code), true)

  curr_1568 = local.end_of_code_1568 ? null : {
    code = substr(var.code, local.iter_1567.code_ptr, 1)
    input = substr(var.code, local.iter_1567.code_ptr, 1) == "," ? substr(local.iter_1567.input, 0, 1) : null
  }

  iter_1568 = local.end_of_code_1568 ? local.iter_1567 : {
    input = (local.curr_1568.code == ","
      ? substr(local.iter_1567.input, 1, -1)
      : local.iter_1567.input)

    output = (local.curr_1568.code == "."
      ? "${local.iter_1567.output}${jsondecode(format("\"\\u%04x\"", local.iter_1567.tape[local.iter_1567.tape_ptr]))}"
      : local.iter_1567.output)
    
    tape = (
      local.curr_1568.code == "+"
        ? [for i, b in local.iter_1567.tape : (i == local.iter_1567.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1568.code == "-"
        ? [for i, b in local.iter_1567.tape : (i == local.iter_1567.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1568.code == ","
        ? [for i, b in local.iter_1567.tape : (i == local.iter_1567.tape_ptr ? local.ascii_lookup[local.curr_1568.input] : b)]
        : local.iter_1567.tape)

    tape_ptr = (
      local.curr_1568.code == "<"
        ? local.iter_1567.tape_ptr == 0 ? length(local.iter_1567.tape) - 1 : local.iter_1567.tape_ptr - 1 :
      local.curr_1568.code == ">"
        ? local.iter_1567.tape_ptr == length(local.iter_1567.tape) - 1 ? 0 : local.iter_1567.tape_ptr + 1
        : local.iter_1567.tape_ptr)

    code_ptr = 1 + (
      local.curr_1568.code == "["
        ? local.iter_1567.tape[local.iter_1567.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1567.code_ptr)] : local.iter_1567.code_ptr :
      local.curr_1568.code == "]"
        ? local.iter_1567.tape[local.iter_1567.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1567.code_ptr)] : local.iter_1567.code_ptr
        : local.iter_1567.code_ptr)

    steps_taken = 1 + local.iter_1567.steps_taken
  }
}

locals {
  end_of_code_1569 = try(local.iter_1568.code_ptr >= length(var.code), true)

  curr_1569 = local.end_of_code_1569 ? null : {
    code = substr(var.code, local.iter_1568.code_ptr, 1)
    input = substr(var.code, local.iter_1568.code_ptr, 1) == "," ? substr(local.iter_1568.input, 0, 1) : null
  }

  iter_1569 = local.end_of_code_1569 ? local.iter_1568 : {
    input = (local.curr_1569.code == ","
      ? substr(local.iter_1568.input, 1, -1)
      : local.iter_1568.input)

    output = (local.curr_1569.code == "."
      ? "${local.iter_1568.output}${jsondecode(format("\"\\u%04x\"", local.iter_1568.tape[local.iter_1568.tape_ptr]))}"
      : local.iter_1568.output)
    
    tape = (
      local.curr_1569.code == "+"
        ? [for i, b in local.iter_1568.tape : (i == local.iter_1568.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1569.code == "-"
        ? [for i, b in local.iter_1568.tape : (i == local.iter_1568.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1569.code == ","
        ? [for i, b in local.iter_1568.tape : (i == local.iter_1568.tape_ptr ? local.ascii_lookup[local.curr_1569.input] : b)]
        : local.iter_1568.tape)

    tape_ptr = (
      local.curr_1569.code == "<"
        ? local.iter_1568.tape_ptr == 0 ? length(local.iter_1568.tape) - 1 : local.iter_1568.tape_ptr - 1 :
      local.curr_1569.code == ">"
        ? local.iter_1568.tape_ptr == length(local.iter_1568.tape) - 1 ? 0 : local.iter_1568.tape_ptr + 1
        : local.iter_1568.tape_ptr)

    code_ptr = 1 + (
      local.curr_1569.code == "["
        ? local.iter_1568.tape[local.iter_1568.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1568.code_ptr)] : local.iter_1568.code_ptr :
      local.curr_1569.code == "]"
        ? local.iter_1568.tape[local.iter_1568.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1568.code_ptr)] : local.iter_1568.code_ptr
        : local.iter_1568.code_ptr)

    steps_taken = 1 + local.iter_1568.steps_taken
  }
}

locals {
  end_of_code_1570 = try(local.iter_1569.code_ptr >= length(var.code), true)

  curr_1570 = local.end_of_code_1570 ? null : {
    code = substr(var.code, local.iter_1569.code_ptr, 1)
    input = substr(var.code, local.iter_1569.code_ptr, 1) == "," ? substr(local.iter_1569.input, 0, 1) : null
  }

  iter_1570 = local.end_of_code_1570 ? local.iter_1569 : {
    input = (local.curr_1570.code == ","
      ? substr(local.iter_1569.input, 1, -1)
      : local.iter_1569.input)

    output = (local.curr_1570.code == "."
      ? "${local.iter_1569.output}${jsondecode(format("\"\\u%04x\"", local.iter_1569.tape[local.iter_1569.tape_ptr]))}"
      : local.iter_1569.output)
    
    tape = (
      local.curr_1570.code == "+"
        ? [for i, b in local.iter_1569.tape : (i == local.iter_1569.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1570.code == "-"
        ? [for i, b in local.iter_1569.tape : (i == local.iter_1569.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1570.code == ","
        ? [for i, b in local.iter_1569.tape : (i == local.iter_1569.tape_ptr ? local.ascii_lookup[local.curr_1570.input] : b)]
        : local.iter_1569.tape)

    tape_ptr = (
      local.curr_1570.code == "<"
        ? local.iter_1569.tape_ptr == 0 ? length(local.iter_1569.tape) - 1 : local.iter_1569.tape_ptr - 1 :
      local.curr_1570.code == ">"
        ? local.iter_1569.tape_ptr == length(local.iter_1569.tape) - 1 ? 0 : local.iter_1569.tape_ptr + 1
        : local.iter_1569.tape_ptr)

    code_ptr = 1 + (
      local.curr_1570.code == "["
        ? local.iter_1569.tape[local.iter_1569.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1569.code_ptr)] : local.iter_1569.code_ptr :
      local.curr_1570.code == "]"
        ? local.iter_1569.tape[local.iter_1569.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1569.code_ptr)] : local.iter_1569.code_ptr
        : local.iter_1569.code_ptr)

    steps_taken = 1 + local.iter_1569.steps_taken
  }
}

locals {
  end_of_code_1571 = try(local.iter_1570.code_ptr >= length(var.code), true)

  curr_1571 = local.end_of_code_1571 ? null : {
    code = substr(var.code, local.iter_1570.code_ptr, 1)
    input = substr(var.code, local.iter_1570.code_ptr, 1) == "," ? substr(local.iter_1570.input, 0, 1) : null
  }

  iter_1571 = local.end_of_code_1571 ? local.iter_1570 : {
    input = (local.curr_1571.code == ","
      ? substr(local.iter_1570.input, 1, -1)
      : local.iter_1570.input)

    output = (local.curr_1571.code == "."
      ? "${local.iter_1570.output}${jsondecode(format("\"\\u%04x\"", local.iter_1570.tape[local.iter_1570.tape_ptr]))}"
      : local.iter_1570.output)
    
    tape = (
      local.curr_1571.code == "+"
        ? [for i, b in local.iter_1570.tape : (i == local.iter_1570.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1571.code == "-"
        ? [for i, b in local.iter_1570.tape : (i == local.iter_1570.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1571.code == ","
        ? [for i, b in local.iter_1570.tape : (i == local.iter_1570.tape_ptr ? local.ascii_lookup[local.curr_1571.input] : b)]
        : local.iter_1570.tape)

    tape_ptr = (
      local.curr_1571.code == "<"
        ? local.iter_1570.tape_ptr == 0 ? length(local.iter_1570.tape) - 1 : local.iter_1570.tape_ptr - 1 :
      local.curr_1571.code == ">"
        ? local.iter_1570.tape_ptr == length(local.iter_1570.tape) - 1 ? 0 : local.iter_1570.tape_ptr + 1
        : local.iter_1570.tape_ptr)

    code_ptr = 1 + (
      local.curr_1571.code == "["
        ? local.iter_1570.tape[local.iter_1570.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1570.code_ptr)] : local.iter_1570.code_ptr :
      local.curr_1571.code == "]"
        ? local.iter_1570.tape[local.iter_1570.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1570.code_ptr)] : local.iter_1570.code_ptr
        : local.iter_1570.code_ptr)

    steps_taken = 1 + local.iter_1570.steps_taken
  }
}

locals {
  end_of_code_1572 = try(local.iter_1571.code_ptr >= length(var.code), true)

  curr_1572 = local.end_of_code_1572 ? null : {
    code = substr(var.code, local.iter_1571.code_ptr, 1)
    input = substr(var.code, local.iter_1571.code_ptr, 1) == "," ? substr(local.iter_1571.input, 0, 1) : null
  }

  iter_1572 = local.end_of_code_1572 ? local.iter_1571 : {
    input = (local.curr_1572.code == ","
      ? substr(local.iter_1571.input, 1, -1)
      : local.iter_1571.input)

    output = (local.curr_1572.code == "."
      ? "${local.iter_1571.output}${jsondecode(format("\"\\u%04x\"", local.iter_1571.tape[local.iter_1571.tape_ptr]))}"
      : local.iter_1571.output)
    
    tape = (
      local.curr_1572.code == "+"
        ? [for i, b in local.iter_1571.tape : (i == local.iter_1571.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1572.code == "-"
        ? [for i, b in local.iter_1571.tape : (i == local.iter_1571.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1572.code == ","
        ? [for i, b in local.iter_1571.tape : (i == local.iter_1571.tape_ptr ? local.ascii_lookup[local.curr_1572.input] : b)]
        : local.iter_1571.tape)

    tape_ptr = (
      local.curr_1572.code == "<"
        ? local.iter_1571.tape_ptr == 0 ? length(local.iter_1571.tape) - 1 : local.iter_1571.tape_ptr - 1 :
      local.curr_1572.code == ">"
        ? local.iter_1571.tape_ptr == length(local.iter_1571.tape) - 1 ? 0 : local.iter_1571.tape_ptr + 1
        : local.iter_1571.tape_ptr)

    code_ptr = 1 + (
      local.curr_1572.code == "["
        ? local.iter_1571.tape[local.iter_1571.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1571.code_ptr)] : local.iter_1571.code_ptr :
      local.curr_1572.code == "]"
        ? local.iter_1571.tape[local.iter_1571.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1571.code_ptr)] : local.iter_1571.code_ptr
        : local.iter_1571.code_ptr)

    steps_taken = 1 + local.iter_1571.steps_taken
  }
}

locals {
  end_of_code_1573 = try(local.iter_1572.code_ptr >= length(var.code), true)

  curr_1573 = local.end_of_code_1573 ? null : {
    code = substr(var.code, local.iter_1572.code_ptr, 1)
    input = substr(var.code, local.iter_1572.code_ptr, 1) == "," ? substr(local.iter_1572.input, 0, 1) : null
  }

  iter_1573 = local.end_of_code_1573 ? local.iter_1572 : {
    input = (local.curr_1573.code == ","
      ? substr(local.iter_1572.input, 1, -1)
      : local.iter_1572.input)

    output = (local.curr_1573.code == "."
      ? "${local.iter_1572.output}${jsondecode(format("\"\\u%04x\"", local.iter_1572.tape[local.iter_1572.tape_ptr]))}"
      : local.iter_1572.output)
    
    tape = (
      local.curr_1573.code == "+"
        ? [for i, b in local.iter_1572.tape : (i == local.iter_1572.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1573.code == "-"
        ? [for i, b in local.iter_1572.tape : (i == local.iter_1572.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1573.code == ","
        ? [for i, b in local.iter_1572.tape : (i == local.iter_1572.tape_ptr ? local.ascii_lookup[local.curr_1573.input] : b)]
        : local.iter_1572.tape)

    tape_ptr = (
      local.curr_1573.code == "<"
        ? local.iter_1572.tape_ptr == 0 ? length(local.iter_1572.tape) - 1 : local.iter_1572.tape_ptr - 1 :
      local.curr_1573.code == ">"
        ? local.iter_1572.tape_ptr == length(local.iter_1572.tape) - 1 ? 0 : local.iter_1572.tape_ptr + 1
        : local.iter_1572.tape_ptr)

    code_ptr = 1 + (
      local.curr_1573.code == "["
        ? local.iter_1572.tape[local.iter_1572.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1572.code_ptr)] : local.iter_1572.code_ptr :
      local.curr_1573.code == "]"
        ? local.iter_1572.tape[local.iter_1572.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1572.code_ptr)] : local.iter_1572.code_ptr
        : local.iter_1572.code_ptr)

    steps_taken = 1 + local.iter_1572.steps_taken
  }
}

locals {
  end_of_code_1574 = try(local.iter_1573.code_ptr >= length(var.code), true)

  curr_1574 = local.end_of_code_1574 ? null : {
    code = substr(var.code, local.iter_1573.code_ptr, 1)
    input = substr(var.code, local.iter_1573.code_ptr, 1) == "," ? substr(local.iter_1573.input, 0, 1) : null
  }

  iter_1574 = local.end_of_code_1574 ? local.iter_1573 : {
    input = (local.curr_1574.code == ","
      ? substr(local.iter_1573.input, 1, -1)
      : local.iter_1573.input)

    output = (local.curr_1574.code == "."
      ? "${local.iter_1573.output}${jsondecode(format("\"\\u%04x\"", local.iter_1573.tape[local.iter_1573.tape_ptr]))}"
      : local.iter_1573.output)
    
    tape = (
      local.curr_1574.code == "+"
        ? [for i, b in local.iter_1573.tape : (i == local.iter_1573.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1574.code == "-"
        ? [for i, b in local.iter_1573.tape : (i == local.iter_1573.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1574.code == ","
        ? [for i, b in local.iter_1573.tape : (i == local.iter_1573.tape_ptr ? local.ascii_lookup[local.curr_1574.input] : b)]
        : local.iter_1573.tape)

    tape_ptr = (
      local.curr_1574.code == "<"
        ? local.iter_1573.tape_ptr == 0 ? length(local.iter_1573.tape) - 1 : local.iter_1573.tape_ptr - 1 :
      local.curr_1574.code == ">"
        ? local.iter_1573.tape_ptr == length(local.iter_1573.tape) - 1 ? 0 : local.iter_1573.tape_ptr + 1
        : local.iter_1573.tape_ptr)

    code_ptr = 1 + (
      local.curr_1574.code == "["
        ? local.iter_1573.tape[local.iter_1573.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1573.code_ptr)] : local.iter_1573.code_ptr :
      local.curr_1574.code == "]"
        ? local.iter_1573.tape[local.iter_1573.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1573.code_ptr)] : local.iter_1573.code_ptr
        : local.iter_1573.code_ptr)

    steps_taken = 1 + local.iter_1573.steps_taken
  }
}

locals {
  end_of_code_1575 = try(local.iter_1574.code_ptr >= length(var.code), true)

  curr_1575 = local.end_of_code_1575 ? null : {
    code = substr(var.code, local.iter_1574.code_ptr, 1)
    input = substr(var.code, local.iter_1574.code_ptr, 1) == "," ? substr(local.iter_1574.input, 0, 1) : null
  }

  iter_1575 = local.end_of_code_1575 ? local.iter_1574 : {
    input = (local.curr_1575.code == ","
      ? substr(local.iter_1574.input, 1, -1)
      : local.iter_1574.input)

    output = (local.curr_1575.code == "."
      ? "${local.iter_1574.output}${jsondecode(format("\"\\u%04x\"", local.iter_1574.tape[local.iter_1574.tape_ptr]))}"
      : local.iter_1574.output)
    
    tape = (
      local.curr_1575.code == "+"
        ? [for i, b in local.iter_1574.tape : (i == local.iter_1574.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1575.code == "-"
        ? [for i, b in local.iter_1574.tape : (i == local.iter_1574.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1575.code == ","
        ? [for i, b in local.iter_1574.tape : (i == local.iter_1574.tape_ptr ? local.ascii_lookup[local.curr_1575.input] : b)]
        : local.iter_1574.tape)

    tape_ptr = (
      local.curr_1575.code == "<"
        ? local.iter_1574.tape_ptr == 0 ? length(local.iter_1574.tape) - 1 : local.iter_1574.tape_ptr - 1 :
      local.curr_1575.code == ">"
        ? local.iter_1574.tape_ptr == length(local.iter_1574.tape) - 1 ? 0 : local.iter_1574.tape_ptr + 1
        : local.iter_1574.tape_ptr)

    code_ptr = 1 + (
      local.curr_1575.code == "["
        ? local.iter_1574.tape[local.iter_1574.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1574.code_ptr)] : local.iter_1574.code_ptr :
      local.curr_1575.code == "]"
        ? local.iter_1574.tape[local.iter_1574.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1574.code_ptr)] : local.iter_1574.code_ptr
        : local.iter_1574.code_ptr)

    steps_taken = 1 + local.iter_1574.steps_taken
  }
}

locals {
  end_of_code_1576 = try(local.iter_1575.code_ptr >= length(var.code), true)

  curr_1576 = local.end_of_code_1576 ? null : {
    code = substr(var.code, local.iter_1575.code_ptr, 1)
    input = substr(var.code, local.iter_1575.code_ptr, 1) == "," ? substr(local.iter_1575.input, 0, 1) : null
  }

  iter_1576 = local.end_of_code_1576 ? local.iter_1575 : {
    input = (local.curr_1576.code == ","
      ? substr(local.iter_1575.input, 1, -1)
      : local.iter_1575.input)

    output = (local.curr_1576.code == "."
      ? "${local.iter_1575.output}${jsondecode(format("\"\\u%04x\"", local.iter_1575.tape[local.iter_1575.tape_ptr]))}"
      : local.iter_1575.output)
    
    tape = (
      local.curr_1576.code == "+"
        ? [for i, b in local.iter_1575.tape : (i == local.iter_1575.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1576.code == "-"
        ? [for i, b in local.iter_1575.tape : (i == local.iter_1575.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1576.code == ","
        ? [for i, b in local.iter_1575.tape : (i == local.iter_1575.tape_ptr ? local.ascii_lookup[local.curr_1576.input] : b)]
        : local.iter_1575.tape)

    tape_ptr = (
      local.curr_1576.code == "<"
        ? local.iter_1575.tape_ptr == 0 ? length(local.iter_1575.tape) - 1 : local.iter_1575.tape_ptr - 1 :
      local.curr_1576.code == ">"
        ? local.iter_1575.tape_ptr == length(local.iter_1575.tape) - 1 ? 0 : local.iter_1575.tape_ptr + 1
        : local.iter_1575.tape_ptr)

    code_ptr = 1 + (
      local.curr_1576.code == "["
        ? local.iter_1575.tape[local.iter_1575.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1575.code_ptr)] : local.iter_1575.code_ptr :
      local.curr_1576.code == "]"
        ? local.iter_1575.tape[local.iter_1575.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1575.code_ptr)] : local.iter_1575.code_ptr
        : local.iter_1575.code_ptr)

    steps_taken = 1 + local.iter_1575.steps_taken
  }
}

locals {
  end_of_code_1577 = try(local.iter_1576.code_ptr >= length(var.code), true)

  curr_1577 = local.end_of_code_1577 ? null : {
    code = substr(var.code, local.iter_1576.code_ptr, 1)
    input = substr(var.code, local.iter_1576.code_ptr, 1) == "," ? substr(local.iter_1576.input, 0, 1) : null
  }

  iter_1577 = local.end_of_code_1577 ? local.iter_1576 : {
    input = (local.curr_1577.code == ","
      ? substr(local.iter_1576.input, 1, -1)
      : local.iter_1576.input)

    output = (local.curr_1577.code == "."
      ? "${local.iter_1576.output}${jsondecode(format("\"\\u%04x\"", local.iter_1576.tape[local.iter_1576.tape_ptr]))}"
      : local.iter_1576.output)
    
    tape = (
      local.curr_1577.code == "+"
        ? [for i, b in local.iter_1576.tape : (i == local.iter_1576.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1577.code == "-"
        ? [for i, b in local.iter_1576.tape : (i == local.iter_1576.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1577.code == ","
        ? [for i, b in local.iter_1576.tape : (i == local.iter_1576.tape_ptr ? local.ascii_lookup[local.curr_1577.input] : b)]
        : local.iter_1576.tape)

    tape_ptr = (
      local.curr_1577.code == "<"
        ? local.iter_1576.tape_ptr == 0 ? length(local.iter_1576.tape) - 1 : local.iter_1576.tape_ptr - 1 :
      local.curr_1577.code == ">"
        ? local.iter_1576.tape_ptr == length(local.iter_1576.tape) - 1 ? 0 : local.iter_1576.tape_ptr + 1
        : local.iter_1576.tape_ptr)

    code_ptr = 1 + (
      local.curr_1577.code == "["
        ? local.iter_1576.tape[local.iter_1576.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1576.code_ptr)] : local.iter_1576.code_ptr :
      local.curr_1577.code == "]"
        ? local.iter_1576.tape[local.iter_1576.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1576.code_ptr)] : local.iter_1576.code_ptr
        : local.iter_1576.code_ptr)

    steps_taken = 1 + local.iter_1576.steps_taken
  }
}

locals {
  end_of_code_1578 = try(local.iter_1577.code_ptr >= length(var.code), true)

  curr_1578 = local.end_of_code_1578 ? null : {
    code = substr(var.code, local.iter_1577.code_ptr, 1)
    input = substr(var.code, local.iter_1577.code_ptr, 1) == "," ? substr(local.iter_1577.input, 0, 1) : null
  }

  iter_1578 = local.end_of_code_1578 ? local.iter_1577 : {
    input = (local.curr_1578.code == ","
      ? substr(local.iter_1577.input, 1, -1)
      : local.iter_1577.input)

    output = (local.curr_1578.code == "."
      ? "${local.iter_1577.output}${jsondecode(format("\"\\u%04x\"", local.iter_1577.tape[local.iter_1577.tape_ptr]))}"
      : local.iter_1577.output)
    
    tape = (
      local.curr_1578.code == "+"
        ? [for i, b in local.iter_1577.tape : (i == local.iter_1577.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1578.code == "-"
        ? [for i, b in local.iter_1577.tape : (i == local.iter_1577.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1578.code == ","
        ? [for i, b in local.iter_1577.tape : (i == local.iter_1577.tape_ptr ? local.ascii_lookup[local.curr_1578.input] : b)]
        : local.iter_1577.tape)

    tape_ptr = (
      local.curr_1578.code == "<"
        ? local.iter_1577.tape_ptr == 0 ? length(local.iter_1577.tape) - 1 : local.iter_1577.tape_ptr - 1 :
      local.curr_1578.code == ">"
        ? local.iter_1577.tape_ptr == length(local.iter_1577.tape) - 1 ? 0 : local.iter_1577.tape_ptr + 1
        : local.iter_1577.tape_ptr)

    code_ptr = 1 + (
      local.curr_1578.code == "["
        ? local.iter_1577.tape[local.iter_1577.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1577.code_ptr)] : local.iter_1577.code_ptr :
      local.curr_1578.code == "]"
        ? local.iter_1577.tape[local.iter_1577.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1577.code_ptr)] : local.iter_1577.code_ptr
        : local.iter_1577.code_ptr)

    steps_taken = 1 + local.iter_1577.steps_taken
  }
}

locals {
  end_of_code_1579 = try(local.iter_1578.code_ptr >= length(var.code), true)

  curr_1579 = local.end_of_code_1579 ? null : {
    code = substr(var.code, local.iter_1578.code_ptr, 1)
    input = substr(var.code, local.iter_1578.code_ptr, 1) == "," ? substr(local.iter_1578.input, 0, 1) : null
  }

  iter_1579 = local.end_of_code_1579 ? local.iter_1578 : {
    input = (local.curr_1579.code == ","
      ? substr(local.iter_1578.input, 1, -1)
      : local.iter_1578.input)

    output = (local.curr_1579.code == "."
      ? "${local.iter_1578.output}${jsondecode(format("\"\\u%04x\"", local.iter_1578.tape[local.iter_1578.tape_ptr]))}"
      : local.iter_1578.output)
    
    tape = (
      local.curr_1579.code == "+"
        ? [for i, b in local.iter_1578.tape : (i == local.iter_1578.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1579.code == "-"
        ? [for i, b in local.iter_1578.tape : (i == local.iter_1578.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1579.code == ","
        ? [for i, b in local.iter_1578.tape : (i == local.iter_1578.tape_ptr ? local.ascii_lookup[local.curr_1579.input] : b)]
        : local.iter_1578.tape)

    tape_ptr = (
      local.curr_1579.code == "<"
        ? local.iter_1578.tape_ptr == 0 ? length(local.iter_1578.tape) - 1 : local.iter_1578.tape_ptr - 1 :
      local.curr_1579.code == ">"
        ? local.iter_1578.tape_ptr == length(local.iter_1578.tape) - 1 ? 0 : local.iter_1578.tape_ptr + 1
        : local.iter_1578.tape_ptr)

    code_ptr = 1 + (
      local.curr_1579.code == "["
        ? local.iter_1578.tape[local.iter_1578.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1578.code_ptr)] : local.iter_1578.code_ptr :
      local.curr_1579.code == "]"
        ? local.iter_1578.tape[local.iter_1578.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1578.code_ptr)] : local.iter_1578.code_ptr
        : local.iter_1578.code_ptr)

    steps_taken = 1 + local.iter_1578.steps_taken
  }
}

locals {
  end_of_code_1580 = try(local.iter_1579.code_ptr >= length(var.code), true)

  curr_1580 = local.end_of_code_1580 ? null : {
    code = substr(var.code, local.iter_1579.code_ptr, 1)
    input = substr(var.code, local.iter_1579.code_ptr, 1) == "," ? substr(local.iter_1579.input, 0, 1) : null
  }

  iter_1580 = local.end_of_code_1580 ? local.iter_1579 : {
    input = (local.curr_1580.code == ","
      ? substr(local.iter_1579.input, 1, -1)
      : local.iter_1579.input)

    output = (local.curr_1580.code == "."
      ? "${local.iter_1579.output}${jsondecode(format("\"\\u%04x\"", local.iter_1579.tape[local.iter_1579.tape_ptr]))}"
      : local.iter_1579.output)
    
    tape = (
      local.curr_1580.code == "+"
        ? [for i, b in local.iter_1579.tape : (i == local.iter_1579.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1580.code == "-"
        ? [for i, b in local.iter_1579.tape : (i == local.iter_1579.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1580.code == ","
        ? [for i, b in local.iter_1579.tape : (i == local.iter_1579.tape_ptr ? local.ascii_lookup[local.curr_1580.input] : b)]
        : local.iter_1579.tape)

    tape_ptr = (
      local.curr_1580.code == "<"
        ? local.iter_1579.tape_ptr == 0 ? length(local.iter_1579.tape) - 1 : local.iter_1579.tape_ptr - 1 :
      local.curr_1580.code == ">"
        ? local.iter_1579.tape_ptr == length(local.iter_1579.tape) - 1 ? 0 : local.iter_1579.tape_ptr + 1
        : local.iter_1579.tape_ptr)

    code_ptr = 1 + (
      local.curr_1580.code == "["
        ? local.iter_1579.tape[local.iter_1579.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1579.code_ptr)] : local.iter_1579.code_ptr :
      local.curr_1580.code == "]"
        ? local.iter_1579.tape[local.iter_1579.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1579.code_ptr)] : local.iter_1579.code_ptr
        : local.iter_1579.code_ptr)

    steps_taken = 1 + local.iter_1579.steps_taken
  }
}

locals {
  end_of_code_1581 = try(local.iter_1580.code_ptr >= length(var.code), true)

  curr_1581 = local.end_of_code_1581 ? null : {
    code = substr(var.code, local.iter_1580.code_ptr, 1)
    input = substr(var.code, local.iter_1580.code_ptr, 1) == "," ? substr(local.iter_1580.input, 0, 1) : null
  }

  iter_1581 = local.end_of_code_1581 ? local.iter_1580 : {
    input = (local.curr_1581.code == ","
      ? substr(local.iter_1580.input, 1, -1)
      : local.iter_1580.input)

    output = (local.curr_1581.code == "."
      ? "${local.iter_1580.output}${jsondecode(format("\"\\u%04x\"", local.iter_1580.tape[local.iter_1580.tape_ptr]))}"
      : local.iter_1580.output)
    
    tape = (
      local.curr_1581.code == "+"
        ? [for i, b in local.iter_1580.tape : (i == local.iter_1580.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1581.code == "-"
        ? [for i, b in local.iter_1580.tape : (i == local.iter_1580.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1581.code == ","
        ? [for i, b in local.iter_1580.tape : (i == local.iter_1580.tape_ptr ? local.ascii_lookup[local.curr_1581.input] : b)]
        : local.iter_1580.tape)

    tape_ptr = (
      local.curr_1581.code == "<"
        ? local.iter_1580.tape_ptr == 0 ? length(local.iter_1580.tape) - 1 : local.iter_1580.tape_ptr - 1 :
      local.curr_1581.code == ">"
        ? local.iter_1580.tape_ptr == length(local.iter_1580.tape) - 1 ? 0 : local.iter_1580.tape_ptr + 1
        : local.iter_1580.tape_ptr)

    code_ptr = 1 + (
      local.curr_1581.code == "["
        ? local.iter_1580.tape[local.iter_1580.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1580.code_ptr)] : local.iter_1580.code_ptr :
      local.curr_1581.code == "]"
        ? local.iter_1580.tape[local.iter_1580.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1580.code_ptr)] : local.iter_1580.code_ptr
        : local.iter_1580.code_ptr)

    steps_taken = 1 + local.iter_1580.steps_taken
  }
}

locals {
  end_of_code_1582 = try(local.iter_1581.code_ptr >= length(var.code), true)

  curr_1582 = local.end_of_code_1582 ? null : {
    code = substr(var.code, local.iter_1581.code_ptr, 1)
    input = substr(var.code, local.iter_1581.code_ptr, 1) == "," ? substr(local.iter_1581.input, 0, 1) : null
  }

  iter_1582 = local.end_of_code_1582 ? local.iter_1581 : {
    input = (local.curr_1582.code == ","
      ? substr(local.iter_1581.input, 1, -1)
      : local.iter_1581.input)

    output = (local.curr_1582.code == "."
      ? "${local.iter_1581.output}${jsondecode(format("\"\\u%04x\"", local.iter_1581.tape[local.iter_1581.tape_ptr]))}"
      : local.iter_1581.output)
    
    tape = (
      local.curr_1582.code == "+"
        ? [for i, b in local.iter_1581.tape : (i == local.iter_1581.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1582.code == "-"
        ? [for i, b in local.iter_1581.tape : (i == local.iter_1581.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1582.code == ","
        ? [for i, b in local.iter_1581.tape : (i == local.iter_1581.tape_ptr ? local.ascii_lookup[local.curr_1582.input] : b)]
        : local.iter_1581.tape)

    tape_ptr = (
      local.curr_1582.code == "<"
        ? local.iter_1581.tape_ptr == 0 ? length(local.iter_1581.tape) - 1 : local.iter_1581.tape_ptr - 1 :
      local.curr_1582.code == ">"
        ? local.iter_1581.tape_ptr == length(local.iter_1581.tape) - 1 ? 0 : local.iter_1581.tape_ptr + 1
        : local.iter_1581.tape_ptr)

    code_ptr = 1 + (
      local.curr_1582.code == "["
        ? local.iter_1581.tape[local.iter_1581.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1581.code_ptr)] : local.iter_1581.code_ptr :
      local.curr_1582.code == "]"
        ? local.iter_1581.tape[local.iter_1581.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1581.code_ptr)] : local.iter_1581.code_ptr
        : local.iter_1581.code_ptr)

    steps_taken = 1 + local.iter_1581.steps_taken
  }
}

locals {
  end_of_code_1583 = try(local.iter_1582.code_ptr >= length(var.code), true)

  curr_1583 = local.end_of_code_1583 ? null : {
    code = substr(var.code, local.iter_1582.code_ptr, 1)
    input = substr(var.code, local.iter_1582.code_ptr, 1) == "," ? substr(local.iter_1582.input, 0, 1) : null
  }

  iter_1583 = local.end_of_code_1583 ? local.iter_1582 : {
    input = (local.curr_1583.code == ","
      ? substr(local.iter_1582.input, 1, -1)
      : local.iter_1582.input)

    output = (local.curr_1583.code == "."
      ? "${local.iter_1582.output}${jsondecode(format("\"\\u%04x\"", local.iter_1582.tape[local.iter_1582.tape_ptr]))}"
      : local.iter_1582.output)
    
    tape = (
      local.curr_1583.code == "+"
        ? [for i, b in local.iter_1582.tape : (i == local.iter_1582.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1583.code == "-"
        ? [for i, b in local.iter_1582.tape : (i == local.iter_1582.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1583.code == ","
        ? [for i, b in local.iter_1582.tape : (i == local.iter_1582.tape_ptr ? local.ascii_lookup[local.curr_1583.input] : b)]
        : local.iter_1582.tape)

    tape_ptr = (
      local.curr_1583.code == "<"
        ? local.iter_1582.tape_ptr == 0 ? length(local.iter_1582.tape) - 1 : local.iter_1582.tape_ptr - 1 :
      local.curr_1583.code == ">"
        ? local.iter_1582.tape_ptr == length(local.iter_1582.tape) - 1 ? 0 : local.iter_1582.tape_ptr + 1
        : local.iter_1582.tape_ptr)

    code_ptr = 1 + (
      local.curr_1583.code == "["
        ? local.iter_1582.tape[local.iter_1582.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1582.code_ptr)] : local.iter_1582.code_ptr :
      local.curr_1583.code == "]"
        ? local.iter_1582.tape[local.iter_1582.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1582.code_ptr)] : local.iter_1582.code_ptr
        : local.iter_1582.code_ptr)

    steps_taken = 1 + local.iter_1582.steps_taken
  }
}

locals {
  end_of_code_1584 = try(local.iter_1583.code_ptr >= length(var.code), true)

  curr_1584 = local.end_of_code_1584 ? null : {
    code = substr(var.code, local.iter_1583.code_ptr, 1)
    input = substr(var.code, local.iter_1583.code_ptr, 1) == "," ? substr(local.iter_1583.input, 0, 1) : null
  }

  iter_1584 = local.end_of_code_1584 ? local.iter_1583 : {
    input = (local.curr_1584.code == ","
      ? substr(local.iter_1583.input, 1, -1)
      : local.iter_1583.input)

    output = (local.curr_1584.code == "."
      ? "${local.iter_1583.output}${jsondecode(format("\"\\u%04x\"", local.iter_1583.tape[local.iter_1583.tape_ptr]))}"
      : local.iter_1583.output)
    
    tape = (
      local.curr_1584.code == "+"
        ? [for i, b in local.iter_1583.tape : (i == local.iter_1583.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1584.code == "-"
        ? [for i, b in local.iter_1583.tape : (i == local.iter_1583.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1584.code == ","
        ? [for i, b in local.iter_1583.tape : (i == local.iter_1583.tape_ptr ? local.ascii_lookup[local.curr_1584.input] : b)]
        : local.iter_1583.tape)

    tape_ptr = (
      local.curr_1584.code == "<"
        ? local.iter_1583.tape_ptr == 0 ? length(local.iter_1583.tape) - 1 : local.iter_1583.tape_ptr - 1 :
      local.curr_1584.code == ">"
        ? local.iter_1583.tape_ptr == length(local.iter_1583.tape) - 1 ? 0 : local.iter_1583.tape_ptr + 1
        : local.iter_1583.tape_ptr)

    code_ptr = 1 + (
      local.curr_1584.code == "["
        ? local.iter_1583.tape[local.iter_1583.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1583.code_ptr)] : local.iter_1583.code_ptr :
      local.curr_1584.code == "]"
        ? local.iter_1583.tape[local.iter_1583.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1583.code_ptr)] : local.iter_1583.code_ptr
        : local.iter_1583.code_ptr)

    steps_taken = 1 + local.iter_1583.steps_taken
  }
}

locals {
  end_of_code_1585 = try(local.iter_1584.code_ptr >= length(var.code), true)

  curr_1585 = local.end_of_code_1585 ? null : {
    code = substr(var.code, local.iter_1584.code_ptr, 1)
    input = substr(var.code, local.iter_1584.code_ptr, 1) == "," ? substr(local.iter_1584.input, 0, 1) : null
  }

  iter_1585 = local.end_of_code_1585 ? local.iter_1584 : {
    input = (local.curr_1585.code == ","
      ? substr(local.iter_1584.input, 1, -1)
      : local.iter_1584.input)

    output = (local.curr_1585.code == "."
      ? "${local.iter_1584.output}${jsondecode(format("\"\\u%04x\"", local.iter_1584.tape[local.iter_1584.tape_ptr]))}"
      : local.iter_1584.output)
    
    tape = (
      local.curr_1585.code == "+"
        ? [for i, b in local.iter_1584.tape : (i == local.iter_1584.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1585.code == "-"
        ? [for i, b in local.iter_1584.tape : (i == local.iter_1584.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1585.code == ","
        ? [for i, b in local.iter_1584.tape : (i == local.iter_1584.tape_ptr ? local.ascii_lookup[local.curr_1585.input] : b)]
        : local.iter_1584.tape)

    tape_ptr = (
      local.curr_1585.code == "<"
        ? local.iter_1584.tape_ptr == 0 ? length(local.iter_1584.tape) - 1 : local.iter_1584.tape_ptr - 1 :
      local.curr_1585.code == ">"
        ? local.iter_1584.tape_ptr == length(local.iter_1584.tape) - 1 ? 0 : local.iter_1584.tape_ptr + 1
        : local.iter_1584.tape_ptr)

    code_ptr = 1 + (
      local.curr_1585.code == "["
        ? local.iter_1584.tape[local.iter_1584.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1584.code_ptr)] : local.iter_1584.code_ptr :
      local.curr_1585.code == "]"
        ? local.iter_1584.tape[local.iter_1584.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1584.code_ptr)] : local.iter_1584.code_ptr
        : local.iter_1584.code_ptr)

    steps_taken = 1 + local.iter_1584.steps_taken
  }
}

locals {
  end_of_code_1586 = try(local.iter_1585.code_ptr >= length(var.code), true)

  curr_1586 = local.end_of_code_1586 ? null : {
    code = substr(var.code, local.iter_1585.code_ptr, 1)
    input = substr(var.code, local.iter_1585.code_ptr, 1) == "," ? substr(local.iter_1585.input, 0, 1) : null
  }

  iter_1586 = local.end_of_code_1586 ? local.iter_1585 : {
    input = (local.curr_1586.code == ","
      ? substr(local.iter_1585.input, 1, -1)
      : local.iter_1585.input)

    output = (local.curr_1586.code == "."
      ? "${local.iter_1585.output}${jsondecode(format("\"\\u%04x\"", local.iter_1585.tape[local.iter_1585.tape_ptr]))}"
      : local.iter_1585.output)
    
    tape = (
      local.curr_1586.code == "+"
        ? [for i, b in local.iter_1585.tape : (i == local.iter_1585.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1586.code == "-"
        ? [for i, b in local.iter_1585.tape : (i == local.iter_1585.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1586.code == ","
        ? [for i, b in local.iter_1585.tape : (i == local.iter_1585.tape_ptr ? local.ascii_lookup[local.curr_1586.input] : b)]
        : local.iter_1585.tape)

    tape_ptr = (
      local.curr_1586.code == "<"
        ? local.iter_1585.tape_ptr == 0 ? length(local.iter_1585.tape) - 1 : local.iter_1585.tape_ptr - 1 :
      local.curr_1586.code == ">"
        ? local.iter_1585.tape_ptr == length(local.iter_1585.tape) - 1 ? 0 : local.iter_1585.tape_ptr + 1
        : local.iter_1585.tape_ptr)

    code_ptr = 1 + (
      local.curr_1586.code == "["
        ? local.iter_1585.tape[local.iter_1585.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1585.code_ptr)] : local.iter_1585.code_ptr :
      local.curr_1586.code == "]"
        ? local.iter_1585.tape[local.iter_1585.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1585.code_ptr)] : local.iter_1585.code_ptr
        : local.iter_1585.code_ptr)

    steps_taken = 1 + local.iter_1585.steps_taken
  }
}

locals {
  end_of_code_1587 = try(local.iter_1586.code_ptr >= length(var.code), true)

  curr_1587 = local.end_of_code_1587 ? null : {
    code = substr(var.code, local.iter_1586.code_ptr, 1)
    input = substr(var.code, local.iter_1586.code_ptr, 1) == "," ? substr(local.iter_1586.input, 0, 1) : null
  }

  iter_1587 = local.end_of_code_1587 ? local.iter_1586 : {
    input = (local.curr_1587.code == ","
      ? substr(local.iter_1586.input, 1, -1)
      : local.iter_1586.input)

    output = (local.curr_1587.code == "."
      ? "${local.iter_1586.output}${jsondecode(format("\"\\u%04x\"", local.iter_1586.tape[local.iter_1586.tape_ptr]))}"
      : local.iter_1586.output)
    
    tape = (
      local.curr_1587.code == "+"
        ? [for i, b in local.iter_1586.tape : (i == local.iter_1586.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1587.code == "-"
        ? [for i, b in local.iter_1586.tape : (i == local.iter_1586.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1587.code == ","
        ? [for i, b in local.iter_1586.tape : (i == local.iter_1586.tape_ptr ? local.ascii_lookup[local.curr_1587.input] : b)]
        : local.iter_1586.tape)

    tape_ptr = (
      local.curr_1587.code == "<"
        ? local.iter_1586.tape_ptr == 0 ? length(local.iter_1586.tape) - 1 : local.iter_1586.tape_ptr - 1 :
      local.curr_1587.code == ">"
        ? local.iter_1586.tape_ptr == length(local.iter_1586.tape) - 1 ? 0 : local.iter_1586.tape_ptr + 1
        : local.iter_1586.tape_ptr)

    code_ptr = 1 + (
      local.curr_1587.code == "["
        ? local.iter_1586.tape[local.iter_1586.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1586.code_ptr)] : local.iter_1586.code_ptr :
      local.curr_1587.code == "]"
        ? local.iter_1586.tape[local.iter_1586.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1586.code_ptr)] : local.iter_1586.code_ptr
        : local.iter_1586.code_ptr)

    steps_taken = 1 + local.iter_1586.steps_taken
  }
}

locals {
  end_of_code_1588 = try(local.iter_1587.code_ptr >= length(var.code), true)

  curr_1588 = local.end_of_code_1588 ? null : {
    code = substr(var.code, local.iter_1587.code_ptr, 1)
    input = substr(var.code, local.iter_1587.code_ptr, 1) == "," ? substr(local.iter_1587.input, 0, 1) : null
  }

  iter_1588 = local.end_of_code_1588 ? local.iter_1587 : {
    input = (local.curr_1588.code == ","
      ? substr(local.iter_1587.input, 1, -1)
      : local.iter_1587.input)

    output = (local.curr_1588.code == "."
      ? "${local.iter_1587.output}${jsondecode(format("\"\\u%04x\"", local.iter_1587.tape[local.iter_1587.tape_ptr]))}"
      : local.iter_1587.output)
    
    tape = (
      local.curr_1588.code == "+"
        ? [for i, b in local.iter_1587.tape : (i == local.iter_1587.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1588.code == "-"
        ? [for i, b in local.iter_1587.tape : (i == local.iter_1587.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1588.code == ","
        ? [for i, b in local.iter_1587.tape : (i == local.iter_1587.tape_ptr ? local.ascii_lookup[local.curr_1588.input] : b)]
        : local.iter_1587.tape)

    tape_ptr = (
      local.curr_1588.code == "<"
        ? local.iter_1587.tape_ptr == 0 ? length(local.iter_1587.tape) - 1 : local.iter_1587.tape_ptr - 1 :
      local.curr_1588.code == ">"
        ? local.iter_1587.tape_ptr == length(local.iter_1587.tape) - 1 ? 0 : local.iter_1587.tape_ptr + 1
        : local.iter_1587.tape_ptr)

    code_ptr = 1 + (
      local.curr_1588.code == "["
        ? local.iter_1587.tape[local.iter_1587.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1587.code_ptr)] : local.iter_1587.code_ptr :
      local.curr_1588.code == "]"
        ? local.iter_1587.tape[local.iter_1587.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1587.code_ptr)] : local.iter_1587.code_ptr
        : local.iter_1587.code_ptr)

    steps_taken = 1 + local.iter_1587.steps_taken
  }
}

locals {
  end_of_code_1589 = try(local.iter_1588.code_ptr >= length(var.code), true)

  curr_1589 = local.end_of_code_1589 ? null : {
    code = substr(var.code, local.iter_1588.code_ptr, 1)
    input = substr(var.code, local.iter_1588.code_ptr, 1) == "," ? substr(local.iter_1588.input, 0, 1) : null
  }

  iter_1589 = local.end_of_code_1589 ? local.iter_1588 : {
    input = (local.curr_1589.code == ","
      ? substr(local.iter_1588.input, 1, -1)
      : local.iter_1588.input)

    output = (local.curr_1589.code == "."
      ? "${local.iter_1588.output}${jsondecode(format("\"\\u%04x\"", local.iter_1588.tape[local.iter_1588.tape_ptr]))}"
      : local.iter_1588.output)
    
    tape = (
      local.curr_1589.code == "+"
        ? [for i, b in local.iter_1588.tape : (i == local.iter_1588.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1589.code == "-"
        ? [for i, b in local.iter_1588.tape : (i == local.iter_1588.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1589.code == ","
        ? [for i, b in local.iter_1588.tape : (i == local.iter_1588.tape_ptr ? local.ascii_lookup[local.curr_1589.input] : b)]
        : local.iter_1588.tape)

    tape_ptr = (
      local.curr_1589.code == "<"
        ? local.iter_1588.tape_ptr == 0 ? length(local.iter_1588.tape) - 1 : local.iter_1588.tape_ptr - 1 :
      local.curr_1589.code == ">"
        ? local.iter_1588.tape_ptr == length(local.iter_1588.tape) - 1 ? 0 : local.iter_1588.tape_ptr + 1
        : local.iter_1588.tape_ptr)

    code_ptr = 1 + (
      local.curr_1589.code == "["
        ? local.iter_1588.tape[local.iter_1588.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1588.code_ptr)] : local.iter_1588.code_ptr :
      local.curr_1589.code == "]"
        ? local.iter_1588.tape[local.iter_1588.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1588.code_ptr)] : local.iter_1588.code_ptr
        : local.iter_1588.code_ptr)

    steps_taken = 1 + local.iter_1588.steps_taken
  }
}

locals {
  end_of_code_1590 = try(local.iter_1589.code_ptr >= length(var.code), true)

  curr_1590 = local.end_of_code_1590 ? null : {
    code = substr(var.code, local.iter_1589.code_ptr, 1)
    input = substr(var.code, local.iter_1589.code_ptr, 1) == "," ? substr(local.iter_1589.input, 0, 1) : null
  }

  iter_1590 = local.end_of_code_1590 ? local.iter_1589 : {
    input = (local.curr_1590.code == ","
      ? substr(local.iter_1589.input, 1, -1)
      : local.iter_1589.input)

    output = (local.curr_1590.code == "."
      ? "${local.iter_1589.output}${jsondecode(format("\"\\u%04x\"", local.iter_1589.tape[local.iter_1589.tape_ptr]))}"
      : local.iter_1589.output)
    
    tape = (
      local.curr_1590.code == "+"
        ? [for i, b in local.iter_1589.tape : (i == local.iter_1589.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1590.code == "-"
        ? [for i, b in local.iter_1589.tape : (i == local.iter_1589.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1590.code == ","
        ? [for i, b in local.iter_1589.tape : (i == local.iter_1589.tape_ptr ? local.ascii_lookup[local.curr_1590.input] : b)]
        : local.iter_1589.tape)

    tape_ptr = (
      local.curr_1590.code == "<"
        ? local.iter_1589.tape_ptr == 0 ? length(local.iter_1589.tape) - 1 : local.iter_1589.tape_ptr - 1 :
      local.curr_1590.code == ">"
        ? local.iter_1589.tape_ptr == length(local.iter_1589.tape) - 1 ? 0 : local.iter_1589.tape_ptr + 1
        : local.iter_1589.tape_ptr)

    code_ptr = 1 + (
      local.curr_1590.code == "["
        ? local.iter_1589.tape[local.iter_1589.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1589.code_ptr)] : local.iter_1589.code_ptr :
      local.curr_1590.code == "]"
        ? local.iter_1589.tape[local.iter_1589.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1589.code_ptr)] : local.iter_1589.code_ptr
        : local.iter_1589.code_ptr)

    steps_taken = 1 + local.iter_1589.steps_taken
  }
}

locals {
  end_of_code_1591 = try(local.iter_1590.code_ptr >= length(var.code), true)

  curr_1591 = local.end_of_code_1591 ? null : {
    code = substr(var.code, local.iter_1590.code_ptr, 1)
    input = substr(var.code, local.iter_1590.code_ptr, 1) == "," ? substr(local.iter_1590.input, 0, 1) : null
  }

  iter_1591 = local.end_of_code_1591 ? local.iter_1590 : {
    input = (local.curr_1591.code == ","
      ? substr(local.iter_1590.input, 1, -1)
      : local.iter_1590.input)

    output = (local.curr_1591.code == "."
      ? "${local.iter_1590.output}${jsondecode(format("\"\\u%04x\"", local.iter_1590.tape[local.iter_1590.tape_ptr]))}"
      : local.iter_1590.output)
    
    tape = (
      local.curr_1591.code == "+"
        ? [for i, b in local.iter_1590.tape : (i == local.iter_1590.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1591.code == "-"
        ? [for i, b in local.iter_1590.tape : (i == local.iter_1590.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1591.code == ","
        ? [for i, b in local.iter_1590.tape : (i == local.iter_1590.tape_ptr ? local.ascii_lookup[local.curr_1591.input] : b)]
        : local.iter_1590.tape)

    tape_ptr = (
      local.curr_1591.code == "<"
        ? local.iter_1590.tape_ptr == 0 ? length(local.iter_1590.tape) - 1 : local.iter_1590.tape_ptr - 1 :
      local.curr_1591.code == ">"
        ? local.iter_1590.tape_ptr == length(local.iter_1590.tape) - 1 ? 0 : local.iter_1590.tape_ptr + 1
        : local.iter_1590.tape_ptr)

    code_ptr = 1 + (
      local.curr_1591.code == "["
        ? local.iter_1590.tape[local.iter_1590.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1590.code_ptr)] : local.iter_1590.code_ptr :
      local.curr_1591.code == "]"
        ? local.iter_1590.tape[local.iter_1590.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1590.code_ptr)] : local.iter_1590.code_ptr
        : local.iter_1590.code_ptr)

    steps_taken = 1 + local.iter_1590.steps_taken
  }
}

locals {
  end_of_code_1592 = try(local.iter_1591.code_ptr >= length(var.code), true)

  curr_1592 = local.end_of_code_1592 ? null : {
    code = substr(var.code, local.iter_1591.code_ptr, 1)
    input = substr(var.code, local.iter_1591.code_ptr, 1) == "," ? substr(local.iter_1591.input, 0, 1) : null
  }

  iter_1592 = local.end_of_code_1592 ? local.iter_1591 : {
    input = (local.curr_1592.code == ","
      ? substr(local.iter_1591.input, 1, -1)
      : local.iter_1591.input)

    output = (local.curr_1592.code == "."
      ? "${local.iter_1591.output}${jsondecode(format("\"\\u%04x\"", local.iter_1591.tape[local.iter_1591.tape_ptr]))}"
      : local.iter_1591.output)
    
    tape = (
      local.curr_1592.code == "+"
        ? [for i, b in local.iter_1591.tape : (i == local.iter_1591.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1592.code == "-"
        ? [for i, b in local.iter_1591.tape : (i == local.iter_1591.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1592.code == ","
        ? [for i, b in local.iter_1591.tape : (i == local.iter_1591.tape_ptr ? local.ascii_lookup[local.curr_1592.input] : b)]
        : local.iter_1591.tape)

    tape_ptr = (
      local.curr_1592.code == "<"
        ? local.iter_1591.tape_ptr == 0 ? length(local.iter_1591.tape) - 1 : local.iter_1591.tape_ptr - 1 :
      local.curr_1592.code == ">"
        ? local.iter_1591.tape_ptr == length(local.iter_1591.tape) - 1 ? 0 : local.iter_1591.tape_ptr + 1
        : local.iter_1591.tape_ptr)

    code_ptr = 1 + (
      local.curr_1592.code == "["
        ? local.iter_1591.tape[local.iter_1591.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1591.code_ptr)] : local.iter_1591.code_ptr :
      local.curr_1592.code == "]"
        ? local.iter_1591.tape[local.iter_1591.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1591.code_ptr)] : local.iter_1591.code_ptr
        : local.iter_1591.code_ptr)

    steps_taken = 1 + local.iter_1591.steps_taken
  }
}

locals {
  end_of_code_1593 = try(local.iter_1592.code_ptr >= length(var.code), true)

  curr_1593 = local.end_of_code_1593 ? null : {
    code = substr(var.code, local.iter_1592.code_ptr, 1)
    input = substr(var.code, local.iter_1592.code_ptr, 1) == "," ? substr(local.iter_1592.input, 0, 1) : null
  }

  iter_1593 = local.end_of_code_1593 ? local.iter_1592 : {
    input = (local.curr_1593.code == ","
      ? substr(local.iter_1592.input, 1, -1)
      : local.iter_1592.input)

    output = (local.curr_1593.code == "."
      ? "${local.iter_1592.output}${jsondecode(format("\"\\u%04x\"", local.iter_1592.tape[local.iter_1592.tape_ptr]))}"
      : local.iter_1592.output)
    
    tape = (
      local.curr_1593.code == "+"
        ? [for i, b in local.iter_1592.tape : (i == local.iter_1592.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1593.code == "-"
        ? [for i, b in local.iter_1592.tape : (i == local.iter_1592.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1593.code == ","
        ? [for i, b in local.iter_1592.tape : (i == local.iter_1592.tape_ptr ? local.ascii_lookup[local.curr_1593.input] : b)]
        : local.iter_1592.tape)

    tape_ptr = (
      local.curr_1593.code == "<"
        ? local.iter_1592.tape_ptr == 0 ? length(local.iter_1592.tape) - 1 : local.iter_1592.tape_ptr - 1 :
      local.curr_1593.code == ">"
        ? local.iter_1592.tape_ptr == length(local.iter_1592.tape) - 1 ? 0 : local.iter_1592.tape_ptr + 1
        : local.iter_1592.tape_ptr)

    code_ptr = 1 + (
      local.curr_1593.code == "["
        ? local.iter_1592.tape[local.iter_1592.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1592.code_ptr)] : local.iter_1592.code_ptr :
      local.curr_1593.code == "]"
        ? local.iter_1592.tape[local.iter_1592.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1592.code_ptr)] : local.iter_1592.code_ptr
        : local.iter_1592.code_ptr)

    steps_taken = 1 + local.iter_1592.steps_taken
  }
}

locals {
  end_of_code_1594 = try(local.iter_1593.code_ptr >= length(var.code), true)

  curr_1594 = local.end_of_code_1594 ? null : {
    code = substr(var.code, local.iter_1593.code_ptr, 1)
    input = substr(var.code, local.iter_1593.code_ptr, 1) == "," ? substr(local.iter_1593.input, 0, 1) : null
  }

  iter_1594 = local.end_of_code_1594 ? local.iter_1593 : {
    input = (local.curr_1594.code == ","
      ? substr(local.iter_1593.input, 1, -1)
      : local.iter_1593.input)

    output = (local.curr_1594.code == "."
      ? "${local.iter_1593.output}${jsondecode(format("\"\\u%04x\"", local.iter_1593.tape[local.iter_1593.tape_ptr]))}"
      : local.iter_1593.output)
    
    tape = (
      local.curr_1594.code == "+"
        ? [for i, b in local.iter_1593.tape : (i == local.iter_1593.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1594.code == "-"
        ? [for i, b in local.iter_1593.tape : (i == local.iter_1593.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1594.code == ","
        ? [for i, b in local.iter_1593.tape : (i == local.iter_1593.tape_ptr ? local.ascii_lookup[local.curr_1594.input] : b)]
        : local.iter_1593.tape)

    tape_ptr = (
      local.curr_1594.code == "<"
        ? local.iter_1593.tape_ptr == 0 ? length(local.iter_1593.tape) - 1 : local.iter_1593.tape_ptr - 1 :
      local.curr_1594.code == ">"
        ? local.iter_1593.tape_ptr == length(local.iter_1593.tape) - 1 ? 0 : local.iter_1593.tape_ptr + 1
        : local.iter_1593.tape_ptr)

    code_ptr = 1 + (
      local.curr_1594.code == "["
        ? local.iter_1593.tape[local.iter_1593.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1593.code_ptr)] : local.iter_1593.code_ptr :
      local.curr_1594.code == "]"
        ? local.iter_1593.tape[local.iter_1593.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1593.code_ptr)] : local.iter_1593.code_ptr
        : local.iter_1593.code_ptr)

    steps_taken = 1 + local.iter_1593.steps_taken
  }
}

locals {
  end_of_code_1595 = try(local.iter_1594.code_ptr >= length(var.code), true)

  curr_1595 = local.end_of_code_1595 ? null : {
    code = substr(var.code, local.iter_1594.code_ptr, 1)
    input = substr(var.code, local.iter_1594.code_ptr, 1) == "," ? substr(local.iter_1594.input, 0, 1) : null
  }

  iter_1595 = local.end_of_code_1595 ? local.iter_1594 : {
    input = (local.curr_1595.code == ","
      ? substr(local.iter_1594.input, 1, -1)
      : local.iter_1594.input)

    output = (local.curr_1595.code == "."
      ? "${local.iter_1594.output}${jsondecode(format("\"\\u%04x\"", local.iter_1594.tape[local.iter_1594.tape_ptr]))}"
      : local.iter_1594.output)
    
    tape = (
      local.curr_1595.code == "+"
        ? [for i, b in local.iter_1594.tape : (i == local.iter_1594.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1595.code == "-"
        ? [for i, b in local.iter_1594.tape : (i == local.iter_1594.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1595.code == ","
        ? [for i, b in local.iter_1594.tape : (i == local.iter_1594.tape_ptr ? local.ascii_lookup[local.curr_1595.input] : b)]
        : local.iter_1594.tape)

    tape_ptr = (
      local.curr_1595.code == "<"
        ? local.iter_1594.tape_ptr == 0 ? length(local.iter_1594.tape) - 1 : local.iter_1594.tape_ptr - 1 :
      local.curr_1595.code == ">"
        ? local.iter_1594.tape_ptr == length(local.iter_1594.tape) - 1 ? 0 : local.iter_1594.tape_ptr + 1
        : local.iter_1594.tape_ptr)

    code_ptr = 1 + (
      local.curr_1595.code == "["
        ? local.iter_1594.tape[local.iter_1594.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1594.code_ptr)] : local.iter_1594.code_ptr :
      local.curr_1595.code == "]"
        ? local.iter_1594.tape[local.iter_1594.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1594.code_ptr)] : local.iter_1594.code_ptr
        : local.iter_1594.code_ptr)

    steps_taken = 1 + local.iter_1594.steps_taken
  }
}

locals {
  end_of_code_1596 = try(local.iter_1595.code_ptr >= length(var.code), true)

  curr_1596 = local.end_of_code_1596 ? null : {
    code = substr(var.code, local.iter_1595.code_ptr, 1)
    input = substr(var.code, local.iter_1595.code_ptr, 1) == "," ? substr(local.iter_1595.input, 0, 1) : null
  }

  iter_1596 = local.end_of_code_1596 ? local.iter_1595 : {
    input = (local.curr_1596.code == ","
      ? substr(local.iter_1595.input, 1, -1)
      : local.iter_1595.input)

    output = (local.curr_1596.code == "."
      ? "${local.iter_1595.output}${jsondecode(format("\"\\u%04x\"", local.iter_1595.tape[local.iter_1595.tape_ptr]))}"
      : local.iter_1595.output)
    
    tape = (
      local.curr_1596.code == "+"
        ? [for i, b in local.iter_1595.tape : (i == local.iter_1595.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1596.code == "-"
        ? [for i, b in local.iter_1595.tape : (i == local.iter_1595.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1596.code == ","
        ? [for i, b in local.iter_1595.tape : (i == local.iter_1595.tape_ptr ? local.ascii_lookup[local.curr_1596.input] : b)]
        : local.iter_1595.tape)

    tape_ptr = (
      local.curr_1596.code == "<"
        ? local.iter_1595.tape_ptr == 0 ? length(local.iter_1595.tape) - 1 : local.iter_1595.tape_ptr - 1 :
      local.curr_1596.code == ">"
        ? local.iter_1595.tape_ptr == length(local.iter_1595.tape) - 1 ? 0 : local.iter_1595.tape_ptr + 1
        : local.iter_1595.tape_ptr)

    code_ptr = 1 + (
      local.curr_1596.code == "["
        ? local.iter_1595.tape[local.iter_1595.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1595.code_ptr)] : local.iter_1595.code_ptr :
      local.curr_1596.code == "]"
        ? local.iter_1595.tape[local.iter_1595.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1595.code_ptr)] : local.iter_1595.code_ptr
        : local.iter_1595.code_ptr)

    steps_taken = 1 + local.iter_1595.steps_taken
  }
}

locals {
  end_of_code_1597 = try(local.iter_1596.code_ptr >= length(var.code), true)

  curr_1597 = local.end_of_code_1597 ? null : {
    code = substr(var.code, local.iter_1596.code_ptr, 1)
    input = substr(var.code, local.iter_1596.code_ptr, 1) == "," ? substr(local.iter_1596.input, 0, 1) : null
  }

  iter_1597 = local.end_of_code_1597 ? local.iter_1596 : {
    input = (local.curr_1597.code == ","
      ? substr(local.iter_1596.input, 1, -1)
      : local.iter_1596.input)

    output = (local.curr_1597.code == "."
      ? "${local.iter_1596.output}${jsondecode(format("\"\\u%04x\"", local.iter_1596.tape[local.iter_1596.tape_ptr]))}"
      : local.iter_1596.output)
    
    tape = (
      local.curr_1597.code == "+"
        ? [for i, b in local.iter_1596.tape : (i == local.iter_1596.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1597.code == "-"
        ? [for i, b in local.iter_1596.tape : (i == local.iter_1596.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1597.code == ","
        ? [for i, b in local.iter_1596.tape : (i == local.iter_1596.tape_ptr ? local.ascii_lookup[local.curr_1597.input] : b)]
        : local.iter_1596.tape)

    tape_ptr = (
      local.curr_1597.code == "<"
        ? local.iter_1596.tape_ptr == 0 ? length(local.iter_1596.tape) - 1 : local.iter_1596.tape_ptr - 1 :
      local.curr_1597.code == ">"
        ? local.iter_1596.tape_ptr == length(local.iter_1596.tape) - 1 ? 0 : local.iter_1596.tape_ptr + 1
        : local.iter_1596.tape_ptr)

    code_ptr = 1 + (
      local.curr_1597.code == "["
        ? local.iter_1596.tape[local.iter_1596.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1596.code_ptr)] : local.iter_1596.code_ptr :
      local.curr_1597.code == "]"
        ? local.iter_1596.tape[local.iter_1596.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1596.code_ptr)] : local.iter_1596.code_ptr
        : local.iter_1596.code_ptr)

    steps_taken = 1 + local.iter_1596.steps_taken
  }
}

locals {
  end_of_code_1598 = try(local.iter_1597.code_ptr >= length(var.code), true)

  curr_1598 = local.end_of_code_1598 ? null : {
    code = substr(var.code, local.iter_1597.code_ptr, 1)
    input = substr(var.code, local.iter_1597.code_ptr, 1) == "," ? substr(local.iter_1597.input, 0, 1) : null
  }

  iter_1598 = local.end_of_code_1598 ? local.iter_1597 : {
    input = (local.curr_1598.code == ","
      ? substr(local.iter_1597.input, 1, -1)
      : local.iter_1597.input)

    output = (local.curr_1598.code == "."
      ? "${local.iter_1597.output}${jsondecode(format("\"\\u%04x\"", local.iter_1597.tape[local.iter_1597.tape_ptr]))}"
      : local.iter_1597.output)
    
    tape = (
      local.curr_1598.code == "+"
        ? [for i, b in local.iter_1597.tape : (i == local.iter_1597.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1598.code == "-"
        ? [for i, b in local.iter_1597.tape : (i == local.iter_1597.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1598.code == ","
        ? [for i, b in local.iter_1597.tape : (i == local.iter_1597.tape_ptr ? local.ascii_lookup[local.curr_1598.input] : b)]
        : local.iter_1597.tape)

    tape_ptr = (
      local.curr_1598.code == "<"
        ? local.iter_1597.tape_ptr == 0 ? length(local.iter_1597.tape) - 1 : local.iter_1597.tape_ptr - 1 :
      local.curr_1598.code == ">"
        ? local.iter_1597.tape_ptr == length(local.iter_1597.tape) - 1 ? 0 : local.iter_1597.tape_ptr + 1
        : local.iter_1597.tape_ptr)

    code_ptr = 1 + (
      local.curr_1598.code == "["
        ? local.iter_1597.tape[local.iter_1597.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1597.code_ptr)] : local.iter_1597.code_ptr :
      local.curr_1598.code == "]"
        ? local.iter_1597.tape[local.iter_1597.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1597.code_ptr)] : local.iter_1597.code_ptr
        : local.iter_1597.code_ptr)

    steps_taken = 1 + local.iter_1597.steps_taken
  }
}

locals {
  end_of_code_1599 = try(local.iter_1598.code_ptr >= length(var.code), true)

  curr_1599 = local.end_of_code_1599 ? null : {
    code = substr(var.code, local.iter_1598.code_ptr, 1)
    input = substr(var.code, local.iter_1598.code_ptr, 1) == "," ? substr(local.iter_1598.input, 0, 1) : null
  }

  iter_1599 = local.end_of_code_1599 ? local.iter_1598 : {
    input = (local.curr_1599.code == ","
      ? substr(local.iter_1598.input, 1, -1)
      : local.iter_1598.input)

    output = (local.curr_1599.code == "."
      ? "${local.iter_1598.output}${jsondecode(format("\"\\u%04x\"", local.iter_1598.tape[local.iter_1598.tape_ptr]))}"
      : local.iter_1598.output)
    
    tape = (
      local.curr_1599.code == "+"
        ? [for i, b in local.iter_1598.tape : (i == local.iter_1598.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1599.code == "-"
        ? [for i, b in local.iter_1598.tape : (i == local.iter_1598.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1599.code == ","
        ? [for i, b in local.iter_1598.tape : (i == local.iter_1598.tape_ptr ? local.ascii_lookup[local.curr_1599.input] : b)]
        : local.iter_1598.tape)

    tape_ptr = (
      local.curr_1599.code == "<"
        ? local.iter_1598.tape_ptr == 0 ? length(local.iter_1598.tape) - 1 : local.iter_1598.tape_ptr - 1 :
      local.curr_1599.code == ">"
        ? local.iter_1598.tape_ptr == length(local.iter_1598.tape) - 1 ? 0 : local.iter_1598.tape_ptr + 1
        : local.iter_1598.tape_ptr)

    code_ptr = 1 + (
      local.curr_1599.code == "["
        ? local.iter_1598.tape[local.iter_1598.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1598.code_ptr)] : local.iter_1598.code_ptr :
      local.curr_1599.code == "]"
        ? local.iter_1598.tape[local.iter_1598.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1598.code_ptr)] : local.iter_1598.code_ptr
        : local.iter_1598.code_ptr)

    steps_taken = 1 + local.iter_1598.steps_taken
  }
}

locals {
  end_of_code_1600 = try(local.iter_1599.code_ptr >= length(var.code), true)

  curr_1600 = local.end_of_code_1600 ? null : {
    code = substr(var.code, local.iter_1599.code_ptr, 1)
    input = substr(var.code, local.iter_1599.code_ptr, 1) == "," ? substr(local.iter_1599.input, 0, 1) : null
  }

  iter_1600 = local.end_of_code_1600 ? local.iter_1599 : {
    input = (local.curr_1600.code == ","
      ? substr(local.iter_1599.input, 1, -1)
      : local.iter_1599.input)

    output = (local.curr_1600.code == "."
      ? "${local.iter_1599.output}${jsondecode(format("\"\\u%04x\"", local.iter_1599.tape[local.iter_1599.tape_ptr]))}"
      : local.iter_1599.output)
    
    tape = (
      local.curr_1600.code == "+"
        ? [for i, b in local.iter_1599.tape : (i == local.iter_1599.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1600.code == "-"
        ? [for i, b in local.iter_1599.tape : (i == local.iter_1599.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1600.code == ","
        ? [for i, b in local.iter_1599.tape : (i == local.iter_1599.tape_ptr ? local.ascii_lookup[local.curr_1600.input] : b)]
        : local.iter_1599.tape)

    tape_ptr = (
      local.curr_1600.code == "<"
        ? local.iter_1599.tape_ptr == 0 ? length(local.iter_1599.tape) - 1 : local.iter_1599.tape_ptr - 1 :
      local.curr_1600.code == ">"
        ? local.iter_1599.tape_ptr == length(local.iter_1599.tape) - 1 ? 0 : local.iter_1599.tape_ptr + 1
        : local.iter_1599.tape_ptr)

    code_ptr = 1 + (
      local.curr_1600.code == "["
        ? local.iter_1599.tape[local.iter_1599.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1599.code_ptr)] : local.iter_1599.code_ptr :
      local.curr_1600.code == "]"
        ? local.iter_1599.tape[local.iter_1599.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1599.code_ptr)] : local.iter_1599.code_ptr
        : local.iter_1599.code_ptr)

    steps_taken = 1 + local.iter_1599.steps_taken
  }
}

locals {
  end_of_code_1601 = try(local.iter_1600.code_ptr >= length(var.code), true)

  curr_1601 = local.end_of_code_1601 ? null : {
    code = substr(var.code, local.iter_1600.code_ptr, 1)
    input = substr(var.code, local.iter_1600.code_ptr, 1) == "," ? substr(local.iter_1600.input, 0, 1) : null
  }

  iter_1601 = local.end_of_code_1601 ? local.iter_1600 : {
    input = (local.curr_1601.code == ","
      ? substr(local.iter_1600.input, 1, -1)
      : local.iter_1600.input)

    output = (local.curr_1601.code == "."
      ? "${local.iter_1600.output}${jsondecode(format("\"\\u%04x\"", local.iter_1600.tape[local.iter_1600.tape_ptr]))}"
      : local.iter_1600.output)
    
    tape = (
      local.curr_1601.code == "+"
        ? [for i, b in local.iter_1600.tape : (i == local.iter_1600.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1601.code == "-"
        ? [for i, b in local.iter_1600.tape : (i == local.iter_1600.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1601.code == ","
        ? [for i, b in local.iter_1600.tape : (i == local.iter_1600.tape_ptr ? local.ascii_lookup[local.curr_1601.input] : b)]
        : local.iter_1600.tape)

    tape_ptr = (
      local.curr_1601.code == "<"
        ? local.iter_1600.tape_ptr == 0 ? length(local.iter_1600.tape) - 1 : local.iter_1600.tape_ptr - 1 :
      local.curr_1601.code == ">"
        ? local.iter_1600.tape_ptr == length(local.iter_1600.tape) - 1 ? 0 : local.iter_1600.tape_ptr + 1
        : local.iter_1600.tape_ptr)

    code_ptr = 1 + (
      local.curr_1601.code == "["
        ? local.iter_1600.tape[local.iter_1600.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1600.code_ptr)] : local.iter_1600.code_ptr :
      local.curr_1601.code == "]"
        ? local.iter_1600.tape[local.iter_1600.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1600.code_ptr)] : local.iter_1600.code_ptr
        : local.iter_1600.code_ptr)

    steps_taken = 1 + local.iter_1600.steps_taken
  }
}

locals {
  end_of_code_1602 = try(local.iter_1601.code_ptr >= length(var.code), true)

  curr_1602 = local.end_of_code_1602 ? null : {
    code = substr(var.code, local.iter_1601.code_ptr, 1)
    input = substr(var.code, local.iter_1601.code_ptr, 1) == "," ? substr(local.iter_1601.input, 0, 1) : null
  }

  iter_1602 = local.end_of_code_1602 ? local.iter_1601 : {
    input = (local.curr_1602.code == ","
      ? substr(local.iter_1601.input, 1, -1)
      : local.iter_1601.input)

    output = (local.curr_1602.code == "."
      ? "${local.iter_1601.output}${jsondecode(format("\"\\u%04x\"", local.iter_1601.tape[local.iter_1601.tape_ptr]))}"
      : local.iter_1601.output)
    
    tape = (
      local.curr_1602.code == "+"
        ? [for i, b in local.iter_1601.tape : (i == local.iter_1601.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1602.code == "-"
        ? [for i, b in local.iter_1601.tape : (i == local.iter_1601.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1602.code == ","
        ? [for i, b in local.iter_1601.tape : (i == local.iter_1601.tape_ptr ? local.ascii_lookup[local.curr_1602.input] : b)]
        : local.iter_1601.tape)

    tape_ptr = (
      local.curr_1602.code == "<"
        ? local.iter_1601.tape_ptr == 0 ? length(local.iter_1601.tape) - 1 : local.iter_1601.tape_ptr - 1 :
      local.curr_1602.code == ">"
        ? local.iter_1601.tape_ptr == length(local.iter_1601.tape) - 1 ? 0 : local.iter_1601.tape_ptr + 1
        : local.iter_1601.tape_ptr)

    code_ptr = 1 + (
      local.curr_1602.code == "["
        ? local.iter_1601.tape[local.iter_1601.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1601.code_ptr)] : local.iter_1601.code_ptr :
      local.curr_1602.code == "]"
        ? local.iter_1601.tape[local.iter_1601.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1601.code_ptr)] : local.iter_1601.code_ptr
        : local.iter_1601.code_ptr)

    steps_taken = 1 + local.iter_1601.steps_taken
  }
}

locals {
  end_of_code_1603 = try(local.iter_1602.code_ptr >= length(var.code), true)

  curr_1603 = local.end_of_code_1603 ? null : {
    code = substr(var.code, local.iter_1602.code_ptr, 1)
    input = substr(var.code, local.iter_1602.code_ptr, 1) == "," ? substr(local.iter_1602.input, 0, 1) : null
  }

  iter_1603 = local.end_of_code_1603 ? local.iter_1602 : {
    input = (local.curr_1603.code == ","
      ? substr(local.iter_1602.input, 1, -1)
      : local.iter_1602.input)

    output = (local.curr_1603.code == "."
      ? "${local.iter_1602.output}${jsondecode(format("\"\\u%04x\"", local.iter_1602.tape[local.iter_1602.tape_ptr]))}"
      : local.iter_1602.output)
    
    tape = (
      local.curr_1603.code == "+"
        ? [for i, b in local.iter_1602.tape : (i == local.iter_1602.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1603.code == "-"
        ? [for i, b in local.iter_1602.tape : (i == local.iter_1602.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1603.code == ","
        ? [for i, b in local.iter_1602.tape : (i == local.iter_1602.tape_ptr ? local.ascii_lookup[local.curr_1603.input] : b)]
        : local.iter_1602.tape)

    tape_ptr = (
      local.curr_1603.code == "<"
        ? local.iter_1602.tape_ptr == 0 ? length(local.iter_1602.tape) - 1 : local.iter_1602.tape_ptr - 1 :
      local.curr_1603.code == ">"
        ? local.iter_1602.tape_ptr == length(local.iter_1602.tape) - 1 ? 0 : local.iter_1602.tape_ptr + 1
        : local.iter_1602.tape_ptr)

    code_ptr = 1 + (
      local.curr_1603.code == "["
        ? local.iter_1602.tape[local.iter_1602.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1602.code_ptr)] : local.iter_1602.code_ptr :
      local.curr_1603.code == "]"
        ? local.iter_1602.tape[local.iter_1602.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1602.code_ptr)] : local.iter_1602.code_ptr
        : local.iter_1602.code_ptr)

    steps_taken = 1 + local.iter_1602.steps_taken
  }
}

locals {
  end_of_code_1604 = try(local.iter_1603.code_ptr >= length(var.code), true)

  curr_1604 = local.end_of_code_1604 ? null : {
    code = substr(var.code, local.iter_1603.code_ptr, 1)
    input = substr(var.code, local.iter_1603.code_ptr, 1) == "," ? substr(local.iter_1603.input, 0, 1) : null
  }

  iter_1604 = local.end_of_code_1604 ? local.iter_1603 : {
    input = (local.curr_1604.code == ","
      ? substr(local.iter_1603.input, 1, -1)
      : local.iter_1603.input)

    output = (local.curr_1604.code == "."
      ? "${local.iter_1603.output}${jsondecode(format("\"\\u%04x\"", local.iter_1603.tape[local.iter_1603.tape_ptr]))}"
      : local.iter_1603.output)
    
    tape = (
      local.curr_1604.code == "+"
        ? [for i, b in local.iter_1603.tape : (i == local.iter_1603.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1604.code == "-"
        ? [for i, b in local.iter_1603.tape : (i == local.iter_1603.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1604.code == ","
        ? [for i, b in local.iter_1603.tape : (i == local.iter_1603.tape_ptr ? local.ascii_lookup[local.curr_1604.input] : b)]
        : local.iter_1603.tape)

    tape_ptr = (
      local.curr_1604.code == "<"
        ? local.iter_1603.tape_ptr == 0 ? length(local.iter_1603.tape) - 1 : local.iter_1603.tape_ptr - 1 :
      local.curr_1604.code == ">"
        ? local.iter_1603.tape_ptr == length(local.iter_1603.tape) - 1 ? 0 : local.iter_1603.tape_ptr + 1
        : local.iter_1603.tape_ptr)

    code_ptr = 1 + (
      local.curr_1604.code == "["
        ? local.iter_1603.tape[local.iter_1603.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1603.code_ptr)] : local.iter_1603.code_ptr :
      local.curr_1604.code == "]"
        ? local.iter_1603.tape[local.iter_1603.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1603.code_ptr)] : local.iter_1603.code_ptr
        : local.iter_1603.code_ptr)

    steps_taken = 1 + local.iter_1603.steps_taken
  }
}

locals {
  end_of_code_1605 = try(local.iter_1604.code_ptr >= length(var.code), true)

  curr_1605 = local.end_of_code_1605 ? null : {
    code = substr(var.code, local.iter_1604.code_ptr, 1)
    input = substr(var.code, local.iter_1604.code_ptr, 1) == "," ? substr(local.iter_1604.input, 0, 1) : null
  }

  iter_1605 = local.end_of_code_1605 ? local.iter_1604 : {
    input = (local.curr_1605.code == ","
      ? substr(local.iter_1604.input, 1, -1)
      : local.iter_1604.input)

    output = (local.curr_1605.code == "."
      ? "${local.iter_1604.output}${jsondecode(format("\"\\u%04x\"", local.iter_1604.tape[local.iter_1604.tape_ptr]))}"
      : local.iter_1604.output)
    
    tape = (
      local.curr_1605.code == "+"
        ? [for i, b in local.iter_1604.tape : (i == local.iter_1604.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1605.code == "-"
        ? [for i, b in local.iter_1604.tape : (i == local.iter_1604.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1605.code == ","
        ? [for i, b in local.iter_1604.tape : (i == local.iter_1604.tape_ptr ? local.ascii_lookup[local.curr_1605.input] : b)]
        : local.iter_1604.tape)

    tape_ptr = (
      local.curr_1605.code == "<"
        ? local.iter_1604.tape_ptr == 0 ? length(local.iter_1604.tape) - 1 : local.iter_1604.tape_ptr - 1 :
      local.curr_1605.code == ">"
        ? local.iter_1604.tape_ptr == length(local.iter_1604.tape) - 1 ? 0 : local.iter_1604.tape_ptr + 1
        : local.iter_1604.tape_ptr)

    code_ptr = 1 + (
      local.curr_1605.code == "["
        ? local.iter_1604.tape[local.iter_1604.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1604.code_ptr)] : local.iter_1604.code_ptr :
      local.curr_1605.code == "]"
        ? local.iter_1604.tape[local.iter_1604.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1604.code_ptr)] : local.iter_1604.code_ptr
        : local.iter_1604.code_ptr)

    steps_taken = 1 + local.iter_1604.steps_taken
  }
}

locals {
  end_of_code_1606 = try(local.iter_1605.code_ptr >= length(var.code), true)

  curr_1606 = local.end_of_code_1606 ? null : {
    code = substr(var.code, local.iter_1605.code_ptr, 1)
    input = substr(var.code, local.iter_1605.code_ptr, 1) == "," ? substr(local.iter_1605.input, 0, 1) : null
  }

  iter_1606 = local.end_of_code_1606 ? local.iter_1605 : {
    input = (local.curr_1606.code == ","
      ? substr(local.iter_1605.input, 1, -1)
      : local.iter_1605.input)

    output = (local.curr_1606.code == "."
      ? "${local.iter_1605.output}${jsondecode(format("\"\\u%04x\"", local.iter_1605.tape[local.iter_1605.tape_ptr]))}"
      : local.iter_1605.output)
    
    tape = (
      local.curr_1606.code == "+"
        ? [for i, b in local.iter_1605.tape : (i == local.iter_1605.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1606.code == "-"
        ? [for i, b in local.iter_1605.tape : (i == local.iter_1605.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1606.code == ","
        ? [for i, b in local.iter_1605.tape : (i == local.iter_1605.tape_ptr ? local.ascii_lookup[local.curr_1606.input] : b)]
        : local.iter_1605.tape)

    tape_ptr = (
      local.curr_1606.code == "<"
        ? local.iter_1605.tape_ptr == 0 ? length(local.iter_1605.tape) - 1 : local.iter_1605.tape_ptr - 1 :
      local.curr_1606.code == ">"
        ? local.iter_1605.tape_ptr == length(local.iter_1605.tape) - 1 ? 0 : local.iter_1605.tape_ptr + 1
        : local.iter_1605.tape_ptr)

    code_ptr = 1 + (
      local.curr_1606.code == "["
        ? local.iter_1605.tape[local.iter_1605.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1605.code_ptr)] : local.iter_1605.code_ptr :
      local.curr_1606.code == "]"
        ? local.iter_1605.tape[local.iter_1605.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1605.code_ptr)] : local.iter_1605.code_ptr
        : local.iter_1605.code_ptr)

    steps_taken = 1 + local.iter_1605.steps_taken
  }
}

locals {
  end_of_code_1607 = try(local.iter_1606.code_ptr >= length(var.code), true)

  curr_1607 = local.end_of_code_1607 ? null : {
    code = substr(var.code, local.iter_1606.code_ptr, 1)
    input = substr(var.code, local.iter_1606.code_ptr, 1) == "," ? substr(local.iter_1606.input, 0, 1) : null
  }

  iter_1607 = local.end_of_code_1607 ? local.iter_1606 : {
    input = (local.curr_1607.code == ","
      ? substr(local.iter_1606.input, 1, -1)
      : local.iter_1606.input)

    output = (local.curr_1607.code == "."
      ? "${local.iter_1606.output}${jsondecode(format("\"\\u%04x\"", local.iter_1606.tape[local.iter_1606.tape_ptr]))}"
      : local.iter_1606.output)
    
    tape = (
      local.curr_1607.code == "+"
        ? [for i, b in local.iter_1606.tape : (i == local.iter_1606.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1607.code == "-"
        ? [for i, b in local.iter_1606.tape : (i == local.iter_1606.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1607.code == ","
        ? [for i, b in local.iter_1606.tape : (i == local.iter_1606.tape_ptr ? local.ascii_lookup[local.curr_1607.input] : b)]
        : local.iter_1606.tape)

    tape_ptr = (
      local.curr_1607.code == "<"
        ? local.iter_1606.tape_ptr == 0 ? length(local.iter_1606.tape) - 1 : local.iter_1606.tape_ptr - 1 :
      local.curr_1607.code == ">"
        ? local.iter_1606.tape_ptr == length(local.iter_1606.tape) - 1 ? 0 : local.iter_1606.tape_ptr + 1
        : local.iter_1606.tape_ptr)

    code_ptr = 1 + (
      local.curr_1607.code == "["
        ? local.iter_1606.tape[local.iter_1606.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1606.code_ptr)] : local.iter_1606.code_ptr :
      local.curr_1607.code == "]"
        ? local.iter_1606.tape[local.iter_1606.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1606.code_ptr)] : local.iter_1606.code_ptr
        : local.iter_1606.code_ptr)

    steps_taken = 1 + local.iter_1606.steps_taken
  }
}

locals {
  end_of_code_1608 = try(local.iter_1607.code_ptr >= length(var.code), true)

  curr_1608 = local.end_of_code_1608 ? null : {
    code = substr(var.code, local.iter_1607.code_ptr, 1)
    input = substr(var.code, local.iter_1607.code_ptr, 1) == "," ? substr(local.iter_1607.input, 0, 1) : null
  }

  iter_1608 = local.end_of_code_1608 ? local.iter_1607 : {
    input = (local.curr_1608.code == ","
      ? substr(local.iter_1607.input, 1, -1)
      : local.iter_1607.input)

    output = (local.curr_1608.code == "."
      ? "${local.iter_1607.output}${jsondecode(format("\"\\u%04x\"", local.iter_1607.tape[local.iter_1607.tape_ptr]))}"
      : local.iter_1607.output)
    
    tape = (
      local.curr_1608.code == "+"
        ? [for i, b in local.iter_1607.tape : (i == local.iter_1607.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1608.code == "-"
        ? [for i, b in local.iter_1607.tape : (i == local.iter_1607.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1608.code == ","
        ? [for i, b in local.iter_1607.tape : (i == local.iter_1607.tape_ptr ? local.ascii_lookup[local.curr_1608.input] : b)]
        : local.iter_1607.tape)

    tape_ptr = (
      local.curr_1608.code == "<"
        ? local.iter_1607.tape_ptr == 0 ? length(local.iter_1607.tape) - 1 : local.iter_1607.tape_ptr - 1 :
      local.curr_1608.code == ">"
        ? local.iter_1607.tape_ptr == length(local.iter_1607.tape) - 1 ? 0 : local.iter_1607.tape_ptr + 1
        : local.iter_1607.tape_ptr)

    code_ptr = 1 + (
      local.curr_1608.code == "["
        ? local.iter_1607.tape[local.iter_1607.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1607.code_ptr)] : local.iter_1607.code_ptr :
      local.curr_1608.code == "]"
        ? local.iter_1607.tape[local.iter_1607.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1607.code_ptr)] : local.iter_1607.code_ptr
        : local.iter_1607.code_ptr)

    steps_taken = 1 + local.iter_1607.steps_taken
  }
}

locals {
  end_of_code_1609 = try(local.iter_1608.code_ptr >= length(var.code), true)

  curr_1609 = local.end_of_code_1609 ? null : {
    code = substr(var.code, local.iter_1608.code_ptr, 1)
    input = substr(var.code, local.iter_1608.code_ptr, 1) == "," ? substr(local.iter_1608.input, 0, 1) : null
  }

  iter_1609 = local.end_of_code_1609 ? local.iter_1608 : {
    input = (local.curr_1609.code == ","
      ? substr(local.iter_1608.input, 1, -1)
      : local.iter_1608.input)

    output = (local.curr_1609.code == "."
      ? "${local.iter_1608.output}${jsondecode(format("\"\\u%04x\"", local.iter_1608.tape[local.iter_1608.tape_ptr]))}"
      : local.iter_1608.output)
    
    tape = (
      local.curr_1609.code == "+"
        ? [for i, b in local.iter_1608.tape : (i == local.iter_1608.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1609.code == "-"
        ? [for i, b in local.iter_1608.tape : (i == local.iter_1608.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1609.code == ","
        ? [for i, b in local.iter_1608.tape : (i == local.iter_1608.tape_ptr ? local.ascii_lookup[local.curr_1609.input] : b)]
        : local.iter_1608.tape)

    tape_ptr = (
      local.curr_1609.code == "<"
        ? local.iter_1608.tape_ptr == 0 ? length(local.iter_1608.tape) - 1 : local.iter_1608.tape_ptr - 1 :
      local.curr_1609.code == ">"
        ? local.iter_1608.tape_ptr == length(local.iter_1608.tape) - 1 ? 0 : local.iter_1608.tape_ptr + 1
        : local.iter_1608.tape_ptr)

    code_ptr = 1 + (
      local.curr_1609.code == "["
        ? local.iter_1608.tape[local.iter_1608.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1608.code_ptr)] : local.iter_1608.code_ptr :
      local.curr_1609.code == "]"
        ? local.iter_1608.tape[local.iter_1608.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1608.code_ptr)] : local.iter_1608.code_ptr
        : local.iter_1608.code_ptr)

    steps_taken = 1 + local.iter_1608.steps_taken
  }
}

locals {
  end_of_code_1610 = try(local.iter_1609.code_ptr >= length(var.code), true)

  curr_1610 = local.end_of_code_1610 ? null : {
    code = substr(var.code, local.iter_1609.code_ptr, 1)
    input = substr(var.code, local.iter_1609.code_ptr, 1) == "," ? substr(local.iter_1609.input, 0, 1) : null
  }

  iter_1610 = local.end_of_code_1610 ? local.iter_1609 : {
    input = (local.curr_1610.code == ","
      ? substr(local.iter_1609.input, 1, -1)
      : local.iter_1609.input)

    output = (local.curr_1610.code == "."
      ? "${local.iter_1609.output}${jsondecode(format("\"\\u%04x\"", local.iter_1609.tape[local.iter_1609.tape_ptr]))}"
      : local.iter_1609.output)
    
    tape = (
      local.curr_1610.code == "+"
        ? [for i, b in local.iter_1609.tape : (i == local.iter_1609.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1610.code == "-"
        ? [for i, b in local.iter_1609.tape : (i == local.iter_1609.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1610.code == ","
        ? [for i, b in local.iter_1609.tape : (i == local.iter_1609.tape_ptr ? local.ascii_lookup[local.curr_1610.input] : b)]
        : local.iter_1609.tape)

    tape_ptr = (
      local.curr_1610.code == "<"
        ? local.iter_1609.tape_ptr == 0 ? length(local.iter_1609.tape) - 1 : local.iter_1609.tape_ptr - 1 :
      local.curr_1610.code == ">"
        ? local.iter_1609.tape_ptr == length(local.iter_1609.tape) - 1 ? 0 : local.iter_1609.tape_ptr + 1
        : local.iter_1609.tape_ptr)

    code_ptr = 1 + (
      local.curr_1610.code == "["
        ? local.iter_1609.tape[local.iter_1609.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1609.code_ptr)] : local.iter_1609.code_ptr :
      local.curr_1610.code == "]"
        ? local.iter_1609.tape[local.iter_1609.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1609.code_ptr)] : local.iter_1609.code_ptr
        : local.iter_1609.code_ptr)

    steps_taken = 1 + local.iter_1609.steps_taken
  }
}

locals {
  end_of_code_1611 = try(local.iter_1610.code_ptr >= length(var.code), true)

  curr_1611 = local.end_of_code_1611 ? null : {
    code = substr(var.code, local.iter_1610.code_ptr, 1)
    input = substr(var.code, local.iter_1610.code_ptr, 1) == "," ? substr(local.iter_1610.input, 0, 1) : null
  }

  iter_1611 = local.end_of_code_1611 ? local.iter_1610 : {
    input = (local.curr_1611.code == ","
      ? substr(local.iter_1610.input, 1, -1)
      : local.iter_1610.input)

    output = (local.curr_1611.code == "."
      ? "${local.iter_1610.output}${jsondecode(format("\"\\u%04x\"", local.iter_1610.tape[local.iter_1610.tape_ptr]))}"
      : local.iter_1610.output)
    
    tape = (
      local.curr_1611.code == "+"
        ? [for i, b in local.iter_1610.tape : (i == local.iter_1610.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1611.code == "-"
        ? [for i, b in local.iter_1610.tape : (i == local.iter_1610.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1611.code == ","
        ? [for i, b in local.iter_1610.tape : (i == local.iter_1610.tape_ptr ? local.ascii_lookup[local.curr_1611.input] : b)]
        : local.iter_1610.tape)

    tape_ptr = (
      local.curr_1611.code == "<"
        ? local.iter_1610.tape_ptr == 0 ? length(local.iter_1610.tape) - 1 : local.iter_1610.tape_ptr - 1 :
      local.curr_1611.code == ">"
        ? local.iter_1610.tape_ptr == length(local.iter_1610.tape) - 1 ? 0 : local.iter_1610.tape_ptr + 1
        : local.iter_1610.tape_ptr)

    code_ptr = 1 + (
      local.curr_1611.code == "["
        ? local.iter_1610.tape[local.iter_1610.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1610.code_ptr)] : local.iter_1610.code_ptr :
      local.curr_1611.code == "]"
        ? local.iter_1610.tape[local.iter_1610.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1610.code_ptr)] : local.iter_1610.code_ptr
        : local.iter_1610.code_ptr)

    steps_taken = 1 + local.iter_1610.steps_taken
  }
}

locals {
  end_of_code_1612 = try(local.iter_1611.code_ptr >= length(var.code), true)

  curr_1612 = local.end_of_code_1612 ? null : {
    code = substr(var.code, local.iter_1611.code_ptr, 1)
    input = substr(var.code, local.iter_1611.code_ptr, 1) == "," ? substr(local.iter_1611.input, 0, 1) : null
  }

  iter_1612 = local.end_of_code_1612 ? local.iter_1611 : {
    input = (local.curr_1612.code == ","
      ? substr(local.iter_1611.input, 1, -1)
      : local.iter_1611.input)

    output = (local.curr_1612.code == "."
      ? "${local.iter_1611.output}${jsondecode(format("\"\\u%04x\"", local.iter_1611.tape[local.iter_1611.tape_ptr]))}"
      : local.iter_1611.output)
    
    tape = (
      local.curr_1612.code == "+"
        ? [for i, b in local.iter_1611.tape : (i == local.iter_1611.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1612.code == "-"
        ? [for i, b in local.iter_1611.tape : (i == local.iter_1611.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1612.code == ","
        ? [for i, b in local.iter_1611.tape : (i == local.iter_1611.tape_ptr ? local.ascii_lookup[local.curr_1612.input] : b)]
        : local.iter_1611.tape)

    tape_ptr = (
      local.curr_1612.code == "<"
        ? local.iter_1611.tape_ptr == 0 ? length(local.iter_1611.tape) - 1 : local.iter_1611.tape_ptr - 1 :
      local.curr_1612.code == ">"
        ? local.iter_1611.tape_ptr == length(local.iter_1611.tape) - 1 ? 0 : local.iter_1611.tape_ptr + 1
        : local.iter_1611.tape_ptr)

    code_ptr = 1 + (
      local.curr_1612.code == "["
        ? local.iter_1611.tape[local.iter_1611.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1611.code_ptr)] : local.iter_1611.code_ptr :
      local.curr_1612.code == "]"
        ? local.iter_1611.tape[local.iter_1611.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1611.code_ptr)] : local.iter_1611.code_ptr
        : local.iter_1611.code_ptr)

    steps_taken = 1 + local.iter_1611.steps_taken
  }
}

locals {
  end_of_code_1613 = try(local.iter_1612.code_ptr >= length(var.code), true)

  curr_1613 = local.end_of_code_1613 ? null : {
    code = substr(var.code, local.iter_1612.code_ptr, 1)
    input = substr(var.code, local.iter_1612.code_ptr, 1) == "," ? substr(local.iter_1612.input, 0, 1) : null
  }

  iter_1613 = local.end_of_code_1613 ? local.iter_1612 : {
    input = (local.curr_1613.code == ","
      ? substr(local.iter_1612.input, 1, -1)
      : local.iter_1612.input)

    output = (local.curr_1613.code == "."
      ? "${local.iter_1612.output}${jsondecode(format("\"\\u%04x\"", local.iter_1612.tape[local.iter_1612.tape_ptr]))}"
      : local.iter_1612.output)
    
    tape = (
      local.curr_1613.code == "+"
        ? [for i, b in local.iter_1612.tape : (i == local.iter_1612.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1613.code == "-"
        ? [for i, b in local.iter_1612.tape : (i == local.iter_1612.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1613.code == ","
        ? [for i, b in local.iter_1612.tape : (i == local.iter_1612.tape_ptr ? local.ascii_lookup[local.curr_1613.input] : b)]
        : local.iter_1612.tape)

    tape_ptr = (
      local.curr_1613.code == "<"
        ? local.iter_1612.tape_ptr == 0 ? length(local.iter_1612.tape) - 1 : local.iter_1612.tape_ptr - 1 :
      local.curr_1613.code == ">"
        ? local.iter_1612.tape_ptr == length(local.iter_1612.tape) - 1 ? 0 : local.iter_1612.tape_ptr + 1
        : local.iter_1612.tape_ptr)

    code_ptr = 1 + (
      local.curr_1613.code == "["
        ? local.iter_1612.tape[local.iter_1612.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1612.code_ptr)] : local.iter_1612.code_ptr :
      local.curr_1613.code == "]"
        ? local.iter_1612.tape[local.iter_1612.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1612.code_ptr)] : local.iter_1612.code_ptr
        : local.iter_1612.code_ptr)

    steps_taken = 1 + local.iter_1612.steps_taken
  }
}

locals {
  end_of_code_1614 = try(local.iter_1613.code_ptr >= length(var.code), true)

  curr_1614 = local.end_of_code_1614 ? null : {
    code = substr(var.code, local.iter_1613.code_ptr, 1)
    input = substr(var.code, local.iter_1613.code_ptr, 1) == "," ? substr(local.iter_1613.input, 0, 1) : null
  }

  iter_1614 = local.end_of_code_1614 ? local.iter_1613 : {
    input = (local.curr_1614.code == ","
      ? substr(local.iter_1613.input, 1, -1)
      : local.iter_1613.input)

    output = (local.curr_1614.code == "."
      ? "${local.iter_1613.output}${jsondecode(format("\"\\u%04x\"", local.iter_1613.tape[local.iter_1613.tape_ptr]))}"
      : local.iter_1613.output)
    
    tape = (
      local.curr_1614.code == "+"
        ? [for i, b in local.iter_1613.tape : (i == local.iter_1613.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1614.code == "-"
        ? [for i, b in local.iter_1613.tape : (i == local.iter_1613.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1614.code == ","
        ? [for i, b in local.iter_1613.tape : (i == local.iter_1613.tape_ptr ? local.ascii_lookup[local.curr_1614.input] : b)]
        : local.iter_1613.tape)

    tape_ptr = (
      local.curr_1614.code == "<"
        ? local.iter_1613.tape_ptr == 0 ? length(local.iter_1613.tape) - 1 : local.iter_1613.tape_ptr - 1 :
      local.curr_1614.code == ">"
        ? local.iter_1613.tape_ptr == length(local.iter_1613.tape) - 1 ? 0 : local.iter_1613.tape_ptr + 1
        : local.iter_1613.tape_ptr)

    code_ptr = 1 + (
      local.curr_1614.code == "["
        ? local.iter_1613.tape[local.iter_1613.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1613.code_ptr)] : local.iter_1613.code_ptr :
      local.curr_1614.code == "]"
        ? local.iter_1613.tape[local.iter_1613.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1613.code_ptr)] : local.iter_1613.code_ptr
        : local.iter_1613.code_ptr)

    steps_taken = 1 + local.iter_1613.steps_taken
  }
}

locals {
  end_of_code_1615 = try(local.iter_1614.code_ptr >= length(var.code), true)

  curr_1615 = local.end_of_code_1615 ? null : {
    code = substr(var.code, local.iter_1614.code_ptr, 1)
    input = substr(var.code, local.iter_1614.code_ptr, 1) == "," ? substr(local.iter_1614.input, 0, 1) : null
  }

  iter_1615 = local.end_of_code_1615 ? local.iter_1614 : {
    input = (local.curr_1615.code == ","
      ? substr(local.iter_1614.input, 1, -1)
      : local.iter_1614.input)

    output = (local.curr_1615.code == "."
      ? "${local.iter_1614.output}${jsondecode(format("\"\\u%04x\"", local.iter_1614.tape[local.iter_1614.tape_ptr]))}"
      : local.iter_1614.output)
    
    tape = (
      local.curr_1615.code == "+"
        ? [for i, b in local.iter_1614.tape : (i == local.iter_1614.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1615.code == "-"
        ? [for i, b in local.iter_1614.tape : (i == local.iter_1614.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1615.code == ","
        ? [for i, b in local.iter_1614.tape : (i == local.iter_1614.tape_ptr ? local.ascii_lookup[local.curr_1615.input] : b)]
        : local.iter_1614.tape)

    tape_ptr = (
      local.curr_1615.code == "<"
        ? local.iter_1614.tape_ptr == 0 ? length(local.iter_1614.tape) - 1 : local.iter_1614.tape_ptr - 1 :
      local.curr_1615.code == ">"
        ? local.iter_1614.tape_ptr == length(local.iter_1614.tape) - 1 ? 0 : local.iter_1614.tape_ptr + 1
        : local.iter_1614.tape_ptr)

    code_ptr = 1 + (
      local.curr_1615.code == "["
        ? local.iter_1614.tape[local.iter_1614.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1614.code_ptr)] : local.iter_1614.code_ptr :
      local.curr_1615.code == "]"
        ? local.iter_1614.tape[local.iter_1614.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1614.code_ptr)] : local.iter_1614.code_ptr
        : local.iter_1614.code_ptr)

    steps_taken = 1 + local.iter_1614.steps_taken
  }
}

locals {
  end_of_code_1616 = try(local.iter_1615.code_ptr >= length(var.code), true)

  curr_1616 = local.end_of_code_1616 ? null : {
    code = substr(var.code, local.iter_1615.code_ptr, 1)
    input = substr(var.code, local.iter_1615.code_ptr, 1) == "," ? substr(local.iter_1615.input, 0, 1) : null
  }

  iter_1616 = local.end_of_code_1616 ? local.iter_1615 : {
    input = (local.curr_1616.code == ","
      ? substr(local.iter_1615.input, 1, -1)
      : local.iter_1615.input)

    output = (local.curr_1616.code == "."
      ? "${local.iter_1615.output}${jsondecode(format("\"\\u%04x\"", local.iter_1615.tape[local.iter_1615.tape_ptr]))}"
      : local.iter_1615.output)
    
    tape = (
      local.curr_1616.code == "+"
        ? [for i, b in local.iter_1615.tape : (i == local.iter_1615.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1616.code == "-"
        ? [for i, b in local.iter_1615.tape : (i == local.iter_1615.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1616.code == ","
        ? [for i, b in local.iter_1615.tape : (i == local.iter_1615.tape_ptr ? local.ascii_lookup[local.curr_1616.input] : b)]
        : local.iter_1615.tape)

    tape_ptr = (
      local.curr_1616.code == "<"
        ? local.iter_1615.tape_ptr == 0 ? length(local.iter_1615.tape) - 1 : local.iter_1615.tape_ptr - 1 :
      local.curr_1616.code == ">"
        ? local.iter_1615.tape_ptr == length(local.iter_1615.tape) - 1 ? 0 : local.iter_1615.tape_ptr + 1
        : local.iter_1615.tape_ptr)

    code_ptr = 1 + (
      local.curr_1616.code == "["
        ? local.iter_1615.tape[local.iter_1615.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1615.code_ptr)] : local.iter_1615.code_ptr :
      local.curr_1616.code == "]"
        ? local.iter_1615.tape[local.iter_1615.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1615.code_ptr)] : local.iter_1615.code_ptr
        : local.iter_1615.code_ptr)

    steps_taken = 1 + local.iter_1615.steps_taken
  }
}

locals {
  end_of_code_1617 = try(local.iter_1616.code_ptr >= length(var.code), true)

  curr_1617 = local.end_of_code_1617 ? null : {
    code = substr(var.code, local.iter_1616.code_ptr, 1)
    input = substr(var.code, local.iter_1616.code_ptr, 1) == "," ? substr(local.iter_1616.input, 0, 1) : null
  }

  iter_1617 = local.end_of_code_1617 ? local.iter_1616 : {
    input = (local.curr_1617.code == ","
      ? substr(local.iter_1616.input, 1, -1)
      : local.iter_1616.input)

    output = (local.curr_1617.code == "."
      ? "${local.iter_1616.output}${jsondecode(format("\"\\u%04x\"", local.iter_1616.tape[local.iter_1616.tape_ptr]))}"
      : local.iter_1616.output)
    
    tape = (
      local.curr_1617.code == "+"
        ? [for i, b in local.iter_1616.tape : (i == local.iter_1616.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1617.code == "-"
        ? [for i, b in local.iter_1616.tape : (i == local.iter_1616.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1617.code == ","
        ? [for i, b in local.iter_1616.tape : (i == local.iter_1616.tape_ptr ? local.ascii_lookup[local.curr_1617.input] : b)]
        : local.iter_1616.tape)

    tape_ptr = (
      local.curr_1617.code == "<"
        ? local.iter_1616.tape_ptr == 0 ? length(local.iter_1616.tape) - 1 : local.iter_1616.tape_ptr - 1 :
      local.curr_1617.code == ">"
        ? local.iter_1616.tape_ptr == length(local.iter_1616.tape) - 1 ? 0 : local.iter_1616.tape_ptr + 1
        : local.iter_1616.tape_ptr)

    code_ptr = 1 + (
      local.curr_1617.code == "["
        ? local.iter_1616.tape[local.iter_1616.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1616.code_ptr)] : local.iter_1616.code_ptr :
      local.curr_1617.code == "]"
        ? local.iter_1616.tape[local.iter_1616.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1616.code_ptr)] : local.iter_1616.code_ptr
        : local.iter_1616.code_ptr)

    steps_taken = 1 + local.iter_1616.steps_taken
  }
}

locals {
  end_of_code_1618 = try(local.iter_1617.code_ptr >= length(var.code), true)

  curr_1618 = local.end_of_code_1618 ? null : {
    code = substr(var.code, local.iter_1617.code_ptr, 1)
    input = substr(var.code, local.iter_1617.code_ptr, 1) == "," ? substr(local.iter_1617.input, 0, 1) : null
  }

  iter_1618 = local.end_of_code_1618 ? local.iter_1617 : {
    input = (local.curr_1618.code == ","
      ? substr(local.iter_1617.input, 1, -1)
      : local.iter_1617.input)

    output = (local.curr_1618.code == "."
      ? "${local.iter_1617.output}${jsondecode(format("\"\\u%04x\"", local.iter_1617.tape[local.iter_1617.tape_ptr]))}"
      : local.iter_1617.output)
    
    tape = (
      local.curr_1618.code == "+"
        ? [for i, b in local.iter_1617.tape : (i == local.iter_1617.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1618.code == "-"
        ? [for i, b in local.iter_1617.tape : (i == local.iter_1617.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1618.code == ","
        ? [for i, b in local.iter_1617.tape : (i == local.iter_1617.tape_ptr ? local.ascii_lookup[local.curr_1618.input] : b)]
        : local.iter_1617.tape)

    tape_ptr = (
      local.curr_1618.code == "<"
        ? local.iter_1617.tape_ptr == 0 ? length(local.iter_1617.tape) - 1 : local.iter_1617.tape_ptr - 1 :
      local.curr_1618.code == ">"
        ? local.iter_1617.tape_ptr == length(local.iter_1617.tape) - 1 ? 0 : local.iter_1617.tape_ptr + 1
        : local.iter_1617.tape_ptr)

    code_ptr = 1 + (
      local.curr_1618.code == "["
        ? local.iter_1617.tape[local.iter_1617.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1617.code_ptr)] : local.iter_1617.code_ptr :
      local.curr_1618.code == "]"
        ? local.iter_1617.tape[local.iter_1617.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1617.code_ptr)] : local.iter_1617.code_ptr
        : local.iter_1617.code_ptr)

    steps_taken = 1 + local.iter_1617.steps_taken
  }
}

locals {
  end_of_code_1619 = try(local.iter_1618.code_ptr >= length(var.code), true)

  curr_1619 = local.end_of_code_1619 ? null : {
    code = substr(var.code, local.iter_1618.code_ptr, 1)
    input = substr(var.code, local.iter_1618.code_ptr, 1) == "," ? substr(local.iter_1618.input, 0, 1) : null
  }

  iter_1619 = local.end_of_code_1619 ? local.iter_1618 : {
    input = (local.curr_1619.code == ","
      ? substr(local.iter_1618.input, 1, -1)
      : local.iter_1618.input)

    output = (local.curr_1619.code == "."
      ? "${local.iter_1618.output}${jsondecode(format("\"\\u%04x\"", local.iter_1618.tape[local.iter_1618.tape_ptr]))}"
      : local.iter_1618.output)
    
    tape = (
      local.curr_1619.code == "+"
        ? [for i, b in local.iter_1618.tape : (i == local.iter_1618.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1619.code == "-"
        ? [for i, b in local.iter_1618.tape : (i == local.iter_1618.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1619.code == ","
        ? [for i, b in local.iter_1618.tape : (i == local.iter_1618.tape_ptr ? local.ascii_lookup[local.curr_1619.input] : b)]
        : local.iter_1618.tape)

    tape_ptr = (
      local.curr_1619.code == "<"
        ? local.iter_1618.tape_ptr == 0 ? length(local.iter_1618.tape) - 1 : local.iter_1618.tape_ptr - 1 :
      local.curr_1619.code == ">"
        ? local.iter_1618.tape_ptr == length(local.iter_1618.tape) - 1 ? 0 : local.iter_1618.tape_ptr + 1
        : local.iter_1618.tape_ptr)

    code_ptr = 1 + (
      local.curr_1619.code == "["
        ? local.iter_1618.tape[local.iter_1618.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1618.code_ptr)] : local.iter_1618.code_ptr :
      local.curr_1619.code == "]"
        ? local.iter_1618.tape[local.iter_1618.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1618.code_ptr)] : local.iter_1618.code_ptr
        : local.iter_1618.code_ptr)

    steps_taken = 1 + local.iter_1618.steps_taken
  }
}

locals {
  end_of_code_1620 = try(local.iter_1619.code_ptr >= length(var.code), true)

  curr_1620 = local.end_of_code_1620 ? null : {
    code = substr(var.code, local.iter_1619.code_ptr, 1)
    input = substr(var.code, local.iter_1619.code_ptr, 1) == "," ? substr(local.iter_1619.input, 0, 1) : null
  }

  iter_1620 = local.end_of_code_1620 ? local.iter_1619 : {
    input = (local.curr_1620.code == ","
      ? substr(local.iter_1619.input, 1, -1)
      : local.iter_1619.input)

    output = (local.curr_1620.code == "."
      ? "${local.iter_1619.output}${jsondecode(format("\"\\u%04x\"", local.iter_1619.tape[local.iter_1619.tape_ptr]))}"
      : local.iter_1619.output)
    
    tape = (
      local.curr_1620.code == "+"
        ? [for i, b in local.iter_1619.tape : (i == local.iter_1619.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1620.code == "-"
        ? [for i, b in local.iter_1619.tape : (i == local.iter_1619.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1620.code == ","
        ? [for i, b in local.iter_1619.tape : (i == local.iter_1619.tape_ptr ? local.ascii_lookup[local.curr_1620.input] : b)]
        : local.iter_1619.tape)

    tape_ptr = (
      local.curr_1620.code == "<"
        ? local.iter_1619.tape_ptr == 0 ? length(local.iter_1619.tape) - 1 : local.iter_1619.tape_ptr - 1 :
      local.curr_1620.code == ">"
        ? local.iter_1619.tape_ptr == length(local.iter_1619.tape) - 1 ? 0 : local.iter_1619.tape_ptr + 1
        : local.iter_1619.tape_ptr)

    code_ptr = 1 + (
      local.curr_1620.code == "["
        ? local.iter_1619.tape[local.iter_1619.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1619.code_ptr)] : local.iter_1619.code_ptr :
      local.curr_1620.code == "]"
        ? local.iter_1619.tape[local.iter_1619.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1619.code_ptr)] : local.iter_1619.code_ptr
        : local.iter_1619.code_ptr)

    steps_taken = 1 + local.iter_1619.steps_taken
  }
}

locals {
  end_of_code_1621 = try(local.iter_1620.code_ptr >= length(var.code), true)

  curr_1621 = local.end_of_code_1621 ? null : {
    code = substr(var.code, local.iter_1620.code_ptr, 1)
    input = substr(var.code, local.iter_1620.code_ptr, 1) == "," ? substr(local.iter_1620.input, 0, 1) : null
  }

  iter_1621 = local.end_of_code_1621 ? local.iter_1620 : {
    input = (local.curr_1621.code == ","
      ? substr(local.iter_1620.input, 1, -1)
      : local.iter_1620.input)

    output = (local.curr_1621.code == "."
      ? "${local.iter_1620.output}${jsondecode(format("\"\\u%04x\"", local.iter_1620.tape[local.iter_1620.tape_ptr]))}"
      : local.iter_1620.output)
    
    tape = (
      local.curr_1621.code == "+"
        ? [for i, b in local.iter_1620.tape : (i == local.iter_1620.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1621.code == "-"
        ? [for i, b in local.iter_1620.tape : (i == local.iter_1620.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1621.code == ","
        ? [for i, b in local.iter_1620.tape : (i == local.iter_1620.tape_ptr ? local.ascii_lookup[local.curr_1621.input] : b)]
        : local.iter_1620.tape)

    tape_ptr = (
      local.curr_1621.code == "<"
        ? local.iter_1620.tape_ptr == 0 ? length(local.iter_1620.tape) - 1 : local.iter_1620.tape_ptr - 1 :
      local.curr_1621.code == ">"
        ? local.iter_1620.tape_ptr == length(local.iter_1620.tape) - 1 ? 0 : local.iter_1620.tape_ptr + 1
        : local.iter_1620.tape_ptr)

    code_ptr = 1 + (
      local.curr_1621.code == "["
        ? local.iter_1620.tape[local.iter_1620.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1620.code_ptr)] : local.iter_1620.code_ptr :
      local.curr_1621.code == "]"
        ? local.iter_1620.tape[local.iter_1620.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1620.code_ptr)] : local.iter_1620.code_ptr
        : local.iter_1620.code_ptr)

    steps_taken = 1 + local.iter_1620.steps_taken
  }
}

locals {
  end_of_code_1622 = try(local.iter_1621.code_ptr >= length(var.code), true)

  curr_1622 = local.end_of_code_1622 ? null : {
    code = substr(var.code, local.iter_1621.code_ptr, 1)
    input = substr(var.code, local.iter_1621.code_ptr, 1) == "," ? substr(local.iter_1621.input, 0, 1) : null
  }

  iter_1622 = local.end_of_code_1622 ? local.iter_1621 : {
    input = (local.curr_1622.code == ","
      ? substr(local.iter_1621.input, 1, -1)
      : local.iter_1621.input)

    output = (local.curr_1622.code == "."
      ? "${local.iter_1621.output}${jsondecode(format("\"\\u%04x\"", local.iter_1621.tape[local.iter_1621.tape_ptr]))}"
      : local.iter_1621.output)
    
    tape = (
      local.curr_1622.code == "+"
        ? [for i, b in local.iter_1621.tape : (i == local.iter_1621.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1622.code == "-"
        ? [for i, b in local.iter_1621.tape : (i == local.iter_1621.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1622.code == ","
        ? [for i, b in local.iter_1621.tape : (i == local.iter_1621.tape_ptr ? local.ascii_lookup[local.curr_1622.input] : b)]
        : local.iter_1621.tape)

    tape_ptr = (
      local.curr_1622.code == "<"
        ? local.iter_1621.tape_ptr == 0 ? length(local.iter_1621.tape) - 1 : local.iter_1621.tape_ptr - 1 :
      local.curr_1622.code == ">"
        ? local.iter_1621.tape_ptr == length(local.iter_1621.tape) - 1 ? 0 : local.iter_1621.tape_ptr + 1
        : local.iter_1621.tape_ptr)

    code_ptr = 1 + (
      local.curr_1622.code == "["
        ? local.iter_1621.tape[local.iter_1621.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1621.code_ptr)] : local.iter_1621.code_ptr :
      local.curr_1622.code == "]"
        ? local.iter_1621.tape[local.iter_1621.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1621.code_ptr)] : local.iter_1621.code_ptr
        : local.iter_1621.code_ptr)

    steps_taken = 1 + local.iter_1621.steps_taken
  }
}

locals {
  end_of_code_1623 = try(local.iter_1622.code_ptr >= length(var.code), true)

  curr_1623 = local.end_of_code_1623 ? null : {
    code = substr(var.code, local.iter_1622.code_ptr, 1)
    input = substr(var.code, local.iter_1622.code_ptr, 1) == "," ? substr(local.iter_1622.input, 0, 1) : null
  }

  iter_1623 = local.end_of_code_1623 ? local.iter_1622 : {
    input = (local.curr_1623.code == ","
      ? substr(local.iter_1622.input, 1, -1)
      : local.iter_1622.input)

    output = (local.curr_1623.code == "."
      ? "${local.iter_1622.output}${jsondecode(format("\"\\u%04x\"", local.iter_1622.tape[local.iter_1622.tape_ptr]))}"
      : local.iter_1622.output)
    
    tape = (
      local.curr_1623.code == "+"
        ? [for i, b in local.iter_1622.tape : (i == local.iter_1622.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1623.code == "-"
        ? [for i, b in local.iter_1622.tape : (i == local.iter_1622.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1623.code == ","
        ? [for i, b in local.iter_1622.tape : (i == local.iter_1622.tape_ptr ? local.ascii_lookup[local.curr_1623.input] : b)]
        : local.iter_1622.tape)

    tape_ptr = (
      local.curr_1623.code == "<"
        ? local.iter_1622.tape_ptr == 0 ? length(local.iter_1622.tape) - 1 : local.iter_1622.tape_ptr - 1 :
      local.curr_1623.code == ">"
        ? local.iter_1622.tape_ptr == length(local.iter_1622.tape) - 1 ? 0 : local.iter_1622.tape_ptr + 1
        : local.iter_1622.tape_ptr)

    code_ptr = 1 + (
      local.curr_1623.code == "["
        ? local.iter_1622.tape[local.iter_1622.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1622.code_ptr)] : local.iter_1622.code_ptr :
      local.curr_1623.code == "]"
        ? local.iter_1622.tape[local.iter_1622.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1622.code_ptr)] : local.iter_1622.code_ptr
        : local.iter_1622.code_ptr)

    steps_taken = 1 + local.iter_1622.steps_taken
  }
}

locals {
  end_of_code_1624 = try(local.iter_1623.code_ptr >= length(var.code), true)

  curr_1624 = local.end_of_code_1624 ? null : {
    code = substr(var.code, local.iter_1623.code_ptr, 1)
    input = substr(var.code, local.iter_1623.code_ptr, 1) == "," ? substr(local.iter_1623.input, 0, 1) : null
  }

  iter_1624 = local.end_of_code_1624 ? local.iter_1623 : {
    input = (local.curr_1624.code == ","
      ? substr(local.iter_1623.input, 1, -1)
      : local.iter_1623.input)

    output = (local.curr_1624.code == "."
      ? "${local.iter_1623.output}${jsondecode(format("\"\\u%04x\"", local.iter_1623.tape[local.iter_1623.tape_ptr]))}"
      : local.iter_1623.output)
    
    tape = (
      local.curr_1624.code == "+"
        ? [for i, b in local.iter_1623.tape : (i == local.iter_1623.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1624.code == "-"
        ? [for i, b in local.iter_1623.tape : (i == local.iter_1623.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1624.code == ","
        ? [for i, b in local.iter_1623.tape : (i == local.iter_1623.tape_ptr ? local.ascii_lookup[local.curr_1624.input] : b)]
        : local.iter_1623.tape)

    tape_ptr = (
      local.curr_1624.code == "<"
        ? local.iter_1623.tape_ptr == 0 ? length(local.iter_1623.tape) - 1 : local.iter_1623.tape_ptr - 1 :
      local.curr_1624.code == ">"
        ? local.iter_1623.tape_ptr == length(local.iter_1623.tape) - 1 ? 0 : local.iter_1623.tape_ptr + 1
        : local.iter_1623.tape_ptr)

    code_ptr = 1 + (
      local.curr_1624.code == "["
        ? local.iter_1623.tape[local.iter_1623.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1623.code_ptr)] : local.iter_1623.code_ptr :
      local.curr_1624.code == "]"
        ? local.iter_1623.tape[local.iter_1623.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1623.code_ptr)] : local.iter_1623.code_ptr
        : local.iter_1623.code_ptr)

    steps_taken = 1 + local.iter_1623.steps_taken
  }
}

locals {
  end_of_code_1625 = try(local.iter_1624.code_ptr >= length(var.code), true)

  curr_1625 = local.end_of_code_1625 ? null : {
    code = substr(var.code, local.iter_1624.code_ptr, 1)
    input = substr(var.code, local.iter_1624.code_ptr, 1) == "," ? substr(local.iter_1624.input, 0, 1) : null
  }

  iter_1625 = local.end_of_code_1625 ? local.iter_1624 : {
    input = (local.curr_1625.code == ","
      ? substr(local.iter_1624.input, 1, -1)
      : local.iter_1624.input)

    output = (local.curr_1625.code == "."
      ? "${local.iter_1624.output}${jsondecode(format("\"\\u%04x\"", local.iter_1624.tape[local.iter_1624.tape_ptr]))}"
      : local.iter_1624.output)
    
    tape = (
      local.curr_1625.code == "+"
        ? [for i, b in local.iter_1624.tape : (i == local.iter_1624.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1625.code == "-"
        ? [for i, b in local.iter_1624.tape : (i == local.iter_1624.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1625.code == ","
        ? [for i, b in local.iter_1624.tape : (i == local.iter_1624.tape_ptr ? local.ascii_lookup[local.curr_1625.input] : b)]
        : local.iter_1624.tape)

    tape_ptr = (
      local.curr_1625.code == "<"
        ? local.iter_1624.tape_ptr == 0 ? length(local.iter_1624.tape) - 1 : local.iter_1624.tape_ptr - 1 :
      local.curr_1625.code == ">"
        ? local.iter_1624.tape_ptr == length(local.iter_1624.tape) - 1 ? 0 : local.iter_1624.tape_ptr + 1
        : local.iter_1624.tape_ptr)

    code_ptr = 1 + (
      local.curr_1625.code == "["
        ? local.iter_1624.tape[local.iter_1624.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1624.code_ptr)] : local.iter_1624.code_ptr :
      local.curr_1625.code == "]"
        ? local.iter_1624.tape[local.iter_1624.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1624.code_ptr)] : local.iter_1624.code_ptr
        : local.iter_1624.code_ptr)

    steps_taken = 1 + local.iter_1624.steps_taken
  }
}

locals {
  end_of_code_1626 = try(local.iter_1625.code_ptr >= length(var.code), true)

  curr_1626 = local.end_of_code_1626 ? null : {
    code = substr(var.code, local.iter_1625.code_ptr, 1)
    input = substr(var.code, local.iter_1625.code_ptr, 1) == "," ? substr(local.iter_1625.input, 0, 1) : null
  }

  iter_1626 = local.end_of_code_1626 ? local.iter_1625 : {
    input = (local.curr_1626.code == ","
      ? substr(local.iter_1625.input, 1, -1)
      : local.iter_1625.input)

    output = (local.curr_1626.code == "."
      ? "${local.iter_1625.output}${jsondecode(format("\"\\u%04x\"", local.iter_1625.tape[local.iter_1625.tape_ptr]))}"
      : local.iter_1625.output)
    
    tape = (
      local.curr_1626.code == "+"
        ? [for i, b in local.iter_1625.tape : (i == local.iter_1625.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1626.code == "-"
        ? [for i, b in local.iter_1625.tape : (i == local.iter_1625.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1626.code == ","
        ? [for i, b in local.iter_1625.tape : (i == local.iter_1625.tape_ptr ? local.ascii_lookup[local.curr_1626.input] : b)]
        : local.iter_1625.tape)

    tape_ptr = (
      local.curr_1626.code == "<"
        ? local.iter_1625.tape_ptr == 0 ? length(local.iter_1625.tape) - 1 : local.iter_1625.tape_ptr - 1 :
      local.curr_1626.code == ">"
        ? local.iter_1625.tape_ptr == length(local.iter_1625.tape) - 1 ? 0 : local.iter_1625.tape_ptr + 1
        : local.iter_1625.tape_ptr)

    code_ptr = 1 + (
      local.curr_1626.code == "["
        ? local.iter_1625.tape[local.iter_1625.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1625.code_ptr)] : local.iter_1625.code_ptr :
      local.curr_1626.code == "]"
        ? local.iter_1625.tape[local.iter_1625.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1625.code_ptr)] : local.iter_1625.code_ptr
        : local.iter_1625.code_ptr)

    steps_taken = 1 + local.iter_1625.steps_taken
  }
}

locals {
  end_of_code_1627 = try(local.iter_1626.code_ptr >= length(var.code), true)

  curr_1627 = local.end_of_code_1627 ? null : {
    code = substr(var.code, local.iter_1626.code_ptr, 1)
    input = substr(var.code, local.iter_1626.code_ptr, 1) == "," ? substr(local.iter_1626.input, 0, 1) : null
  }

  iter_1627 = local.end_of_code_1627 ? local.iter_1626 : {
    input = (local.curr_1627.code == ","
      ? substr(local.iter_1626.input, 1, -1)
      : local.iter_1626.input)

    output = (local.curr_1627.code == "."
      ? "${local.iter_1626.output}${jsondecode(format("\"\\u%04x\"", local.iter_1626.tape[local.iter_1626.tape_ptr]))}"
      : local.iter_1626.output)
    
    tape = (
      local.curr_1627.code == "+"
        ? [for i, b in local.iter_1626.tape : (i == local.iter_1626.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1627.code == "-"
        ? [for i, b in local.iter_1626.tape : (i == local.iter_1626.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1627.code == ","
        ? [for i, b in local.iter_1626.tape : (i == local.iter_1626.tape_ptr ? local.ascii_lookup[local.curr_1627.input] : b)]
        : local.iter_1626.tape)

    tape_ptr = (
      local.curr_1627.code == "<"
        ? local.iter_1626.tape_ptr == 0 ? length(local.iter_1626.tape) - 1 : local.iter_1626.tape_ptr - 1 :
      local.curr_1627.code == ">"
        ? local.iter_1626.tape_ptr == length(local.iter_1626.tape) - 1 ? 0 : local.iter_1626.tape_ptr + 1
        : local.iter_1626.tape_ptr)

    code_ptr = 1 + (
      local.curr_1627.code == "["
        ? local.iter_1626.tape[local.iter_1626.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1626.code_ptr)] : local.iter_1626.code_ptr :
      local.curr_1627.code == "]"
        ? local.iter_1626.tape[local.iter_1626.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1626.code_ptr)] : local.iter_1626.code_ptr
        : local.iter_1626.code_ptr)

    steps_taken = 1 + local.iter_1626.steps_taken
  }
}

locals {
  end_of_code_1628 = try(local.iter_1627.code_ptr >= length(var.code), true)

  curr_1628 = local.end_of_code_1628 ? null : {
    code = substr(var.code, local.iter_1627.code_ptr, 1)
    input = substr(var.code, local.iter_1627.code_ptr, 1) == "," ? substr(local.iter_1627.input, 0, 1) : null
  }

  iter_1628 = local.end_of_code_1628 ? local.iter_1627 : {
    input = (local.curr_1628.code == ","
      ? substr(local.iter_1627.input, 1, -1)
      : local.iter_1627.input)

    output = (local.curr_1628.code == "."
      ? "${local.iter_1627.output}${jsondecode(format("\"\\u%04x\"", local.iter_1627.tape[local.iter_1627.tape_ptr]))}"
      : local.iter_1627.output)
    
    tape = (
      local.curr_1628.code == "+"
        ? [for i, b in local.iter_1627.tape : (i == local.iter_1627.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1628.code == "-"
        ? [for i, b in local.iter_1627.tape : (i == local.iter_1627.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1628.code == ","
        ? [for i, b in local.iter_1627.tape : (i == local.iter_1627.tape_ptr ? local.ascii_lookup[local.curr_1628.input] : b)]
        : local.iter_1627.tape)

    tape_ptr = (
      local.curr_1628.code == "<"
        ? local.iter_1627.tape_ptr == 0 ? length(local.iter_1627.tape) - 1 : local.iter_1627.tape_ptr - 1 :
      local.curr_1628.code == ">"
        ? local.iter_1627.tape_ptr == length(local.iter_1627.tape) - 1 ? 0 : local.iter_1627.tape_ptr + 1
        : local.iter_1627.tape_ptr)

    code_ptr = 1 + (
      local.curr_1628.code == "["
        ? local.iter_1627.tape[local.iter_1627.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1627.code_ptr)] : local.iter_1627.code_ptr :
      local.curr_1628.code == "]"
        ? local.iter_1627.tape[local.iter_1627.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1627.code_ptr)] : local.iter_1627.code_ptr
        : local.iter_1627.code_ptr)

    steps_taken = 1 + local.iter_1627.steps_taken
  }
}

locals {
  end_of_code_1629 = try(local.iter_1628.code_ptr >= length(var.code), true)

  curr_1629 = local.end_of_code_1629 ? null : {
    code = substr(var.code, local.iter_1628.code_ptr, 1)
    input = substr(var.code, local.iter_1628.code_ptr, 1) == "," ? substr(local.iter_1628.input, 0, 1) : null
  }

  iter_1629 = local.end_of_code_1629 ? local.iter_1628 : {
    input = (local.curr_1629.code == ","
      ? substr(local.iter_1628.input, 1, -1)
      : local.iter_1628.input)

    output = (local.curr_1629.code == "."
      ? "${local.iter_1628.output}${jsondecode(format("\"\\u%04x\"", local.iter_1628.tape[local.iter_1628.tape_ptr]))}"
      : local.iter_1628.output)
    
    tape = (
      local.curr_1629.code == "+"
        ? [for i, b in local.iter_1628.tape : (i == local.iter_1628.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1629.code == "-"
        ? [for i, b in local.iter_1628.tape : (i == local.iter_1628.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1629.code == ","
        ? [for i, b in local.iter_1628.tape : (i == local.iter_1628.tape_ptr ? local.ascii_lookup[local.curr_1629.input] : b)]
        : local.iter_1628.tape)

    tape_ptr = (
      local.curr_1629.code == "<"
        ? local.iter_1628.tape_ptr == 0 ? length(local.iter_1628.tape) - 1 : local.iter_1628.tape_ptr - 1 :
      local.curr_1629.code == ">"
        ? local.iter_1628.tape_ptr == length(local.iter_1628.tape) - 1 ? 0 : local.iter_1628.tape_ptr + 1
        : local.iter_1628.tape_ptr)

    code_ptr = 1 + (
      local.curr_1629.code == "["
        ? local.iter_1628.tape[local.iter_1628.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1628.code_ptr)] : local.iter_1628.code_ptr :
      local.curr_1629.code == "]"
        ? local.iter_1628.tape[local.iter_1628.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1628.code_ptr)] : local.iter_1628.code_ptr
        : local.iter_1628.code_ptr)

    steps_taken = 1 + local.iter_1628.steps_taken
  }
}

locals {
  end_of_code_1630 = try(local.iter_1629.code_ptr >= length(var.code), true)

  curr_1630 = local.end_of_code_1630 ? null : {
    code = substr(var.code, local.iter_1629.code_ptr, 1)
    input = substr(var.code, local.iter_1629.code_ptr, 1) == "," ? substr(local.iter_1629.input, 0, 1) : null
  }

  iter_1630 = local.end_of_code_1630 ? local.iter_1629 : {
    input = (local.curr_1630.code == ","
      ? substr(local.iter_1629.input, 1, -1)
      : local.iter_1629.input)

    output = (local.curr_1630.code == "."
      ? "${local.iter_1629.output}${jsondecode(format("\"\\u%04x\"", local.iter_1629.tape[local.iter_1629.tape_ptr]))}"
      : local.iter_1629.output)
    
    tape = (
      local.curr_1630.code == "+"
        ? [for i, b in local.iter_1629.tape : (i == local.iter_1629.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1630.code == "-"
        ? [for i, b in local.iter_1629.tape : (i == local.iter_1629.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1630.code == ","
        ? [for i, b in local.iter_1629.tape : (i == local.iter_1629.tape_ptr ? local.ascii_lookup[local.curr_1630.input] : b)]
        : local.iter_1629.tape)

    tape_ptr = (
      local.curr_1630.code == "<"
        ? local.iter_1629.tape_ptr == 0 ? length(local.iter_1629.tape) - 1 : local.iter_1629.tape_ptr - 1 :
      local.curr_1630.code == ">"
        ? local.iter_1629.tape_ptr == length(local.iter_1629.tape) - 1 ? 0 : local.iter_1629.tape_ptr + 1
        : local.iter_1629.tape_ptr)

    code_ptr = 1 + (
      local.curr_1630.code == "["
        ? local.iter_1629.tape[local.iter_1629.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1629.code_ptr)] : local.iter_1629.code_ptr :
      local.curr_1630.code == "]"
        ? local.iter_1629.tape[local.iter_1629.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1629.code_ptr)] : local.iter_1629.code_ptr
        : local.iter_1629.code_ptr)

    steps_taken = 1 + local.iter_1629.steps_taken
  }
}

locals {
  end_of_code_1631 = try(local.iter_1630.code_ptr >= length(var.code), true)

  curr_1631 = local.end_of_code_1631 ? null : {
    code = substr(var.code, local.iter_1630.code_ptr, 1)
    input = substr(var.code, local.iter_1630.code_ptr, 1) == "," ? substr(local.iter_1630.input, 0, 1) : null
  }

  iter_1631 = local.end_of_code_1631 ? local.iter_1630 : {
    input = (local.curr_1631.code == ","
      ? substr(local.iter_1630.input, 1, -1)
      : local.iter_1630.input)

    output = (local.curr_1631.code == "."
      ? "${local.iter_1630.output}${jsondecode(format("\"\\u%04x\"", local.iter_1630.tape[local.iter_1630.tape_ptr]))}"
      : local.iter_1630.output)
    
    tape = (
      local.curr_1631.code == "+"
        ? [for i, b in local.iter_1630.tape : (i == local.iter_1630.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1631.code == "-"
        ? [for i, b in local.iter_1630.tape : (i == local.iter_1630.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1631.code == ","
        ? [for i, b in local.iter_1630.tape : (i == local.iter_1630.tape_ptr ? local.ascii_lookup[local.curr_1631.input] : b)]
        : local.iter_1630.tape)

    tape_ptr = (
      local.curr_1631.code == "<"
        ? local.iter_1630.tape_ptr == 0 ? length(local.iter_1630.tape) - 1 : local.iter_1630.tape_ptr - 1 :
      local.curr_1631.code == ">"
        ? local.iter_1630.tape_ptr == length(local.iter_1630.tape) - 1 ? 0 : local.iter_1630.tape_ptr + 1
        : local.iter_1630.tape_ptr)

    code_ptr = 1 + (
      local.curr_1631.code == "["
        ? local.iter_1630.tape[local.iter_1630.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1630.code_ptr)] : local.iter_1630.code_ptr :
      local.curr_1631.code == "]"
        ? local.iter_1630.tape[local.iter_1630.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1630.code_ptr)] : local.iter_1630.code_ptr
        : local.iter_1630.code_ptr)

    steps_taken = 1 + local.iter_1630.steps_taken
  }
}

locals {
  end_of_code_1632 = try(local.iter_1631.code_ptr >= length(var.code), true)

  curr_1632 = local.end_of_code_1632 ? null : {
    code = substr(var.code, local.iter_1631.code_ptr, 1)
    input = substr(var.code, local.iter_1631.code_ptr, 1) == "," ? substr(local.iter_1631.input, 0, 1) : null
  }

  iter_1632 = local.end_of_code_1632 ? local.iter_1631 : {
    input = (local.curr_1632.code == ","
      ? substr(local.iter_1631.input, 1, -1)
      : local.iter_1631.input)

    output = (local.curr_1632.code == "."
      ? "${local.iter_1631.output}${jsondecode(format("\"\\u%04x\"", local.iter_1631.tape[local.iter_1631.tape_ptr]))}"
      : local.iter_1631.output)
    
    tape = (
      local.curr_1632.code == "+"
        ? [for i, b in local.iter_1631.tape : (i == local.iter_1631.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1632.code == "-"
        ? [for i, b in local.iter_1631.tape : (i == local.iter_1631.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1632.code == ","
        ? [for i, b in local.iter_1631.tape : (i == local.iter_1631.tape_ptr ? local.ascii_lookup[local.curr_1632.input] : b)]
        : local.iter_1631.tape)

    tape_ptr = (
      local.curr_1632.code == "<"
        ? local.iter_1631.tape_ptr == 0 ? length(local.iter_1631.tape) - 1 : local.iter_1631.tape_ptr - 1 :
      local.curr_1632.code == ">"
        ? local.iter_1631.tape_ptr == length(local.iter_1631.tape) - 1 ? 0 : local.iter_1631.tape_ptr + 1
        : local.iter_1631.tape_ptr)

    code_ptr = 1 + (
      local.curr_1632.code == "["
        ? local.iter_1631.tape[local.iter_1631.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1631.code_ptr)] : local.iter_1631.code_ptr :
      local.curr_1632.code == "]"
        ? local.iter_1631.tape[local.iter_1631.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1631.code_ptr)] : local.iter_1631.code_ptr
        : local.iter_1631.code_ptr)

    steps_taken = 1 + local.iter_1631.steps_taken
  }
}

locals {
  end_of_code_1633 = try(local.iter_1632.code_ptr >= length(var.code), true)

  curr_1633 = local.end_of_code_1633 ? null : {
    code = substr(var.code, local.iter_1632.code_ptr, 1)
    input = substr(var.code, local.iter_1632.code_ptr, 1) == "," ? substr(local.iter_1632.input, 0, 1) : null
  }

  iter_1633 = local.end_of_code_1633 ? local.iter_1632 : {
    input = (local.curr_1633.code == ","
      ? substr(local.iter_1632.input, 1, -1)
      : local.iter_1632.input)

    output = (local.curr_1633.code == "."
      ? "${local.iter_1632.output}${jsondecode(format("\"\\u%04x\"", local.iter_1632.tape[local.iter_1632.tape_ptr]))}"
      : local.iter_1632.output)
    
    tape = (
      local.curr_1633.code == "+"
        ? [for i, b in local.iter_1632.tape : (i == local.iter_1632.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1633.code == "-"
        ? [for i, b in local.iter_1632.tape : (i == local.iter_1632.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1633.code == ","
        ? [for i, b in local.iter_1632.tape : (i == local.iter_1632.tape_ptr ? local.ascii_lookup[local.curr_1633.input] : b)]
        : local.iter_1632.tape)

    tape_ptr = (
      local.curr_1633.code == "<"
        ? local.iter_1632.tape_ptr == 0 ? length(local.iter_1632.tape) - 1 : local.iter_1632.tape_ptr - 1 :
      local.curr_1633.code == ">"
        ? local.iter_1632.tape_ptr == length(local.iter_1632.tape) - 1 ? 0 : local.iter_1632.tape_ptr + 1
        : local.iter_1632.tape_ptr)

    code_ptr = 1 + (
      local.curr_1633.code == "["
        ? local.iter_1632.tape[local.iter_1632.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1632.code_ptr)] : local.iter_1632.code_ptr :
      local.curr_1633.code == "]"
        ? local.iter_1632.tape[local.iter_1632.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1632.code_ptr)] : local.iter_1632.code_ptr
        : local.iter_1632.code_ptr)

    steps_taken = 1 + local.iter_1632.steps_taken
  }
}

locals {
  end_of_code_1634 = try(local.iter_1633.code_ptr >= length(var.code), true)

  curr_1634 = local.end_of_code_1634 ? null : {
    code = substr(var.code, local.iter_1633.code_ptr, 1)
    input = substr(var.code, local.iter_1633.code_ptr, 1) == "," ? substr(local.iter_1633.input, 0, 1) : null
  }

  iter_1634 = local.end_of_code_1634 ? local.iter_1633 : {
    input = (local.curr_1634.code == ","
      ? substr(local.iter_1633.input, 1, -1)
      : local.iter_1633.input)

    output = (local.curr_1634.code == "."
      ? "${local.iter_1633.output}${jsondecode(format("\"\\u%04x\"", local.iter_1633.tape[local.iter_1633.tape_ptr]))}"
      : local.iter_1633.output)
    
    tape = (
      local.curr_1634.code == "+"
        ? [for i, b in local.iter_1633.tape : (i == local.iter_1633.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1634.code == "-"
        ? [for i, b in local.iter_1633.tape : (i == local.iter_1633.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1634.code == ","
        ? [for i, b in local.iter_1633.tape : (i == local.iter_1633.tape_ptr ? local.ascii_lookup[local.curr_1634.input] : b)]
        : local.iter_1633.tape)

    tape_ptr = (
      local.curr_1634.code == "<"
        ? local.iter_1633.tape_ptr == 0 ? length(local.iter_1633.tape) - 1 : local.iter_1633.tape_ptr - 1 :
      local.curr_1634.code == ">"
        ? local.iter_1633.tape_ptr == length(local.iter_1633.tape) - 1 ? 0 : local.iter_1633.tape_ptr + 1
        : local.iter_1633.tape_ptr)

    code_ptr = 1 + (
      local.curr_1634.code == "["
        ? local.iter_1633.tape[local.iter_1633.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1633.code_ptr)] : local.iter_1633.code_ptr :
      local.curr_1634.code == "]"
        ? local.iter_1633.tape[local.iter_1633.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1633.code_ptr)] : local.iter_1633.code_ptr
        : local.iter_1633.code_ptr)

    steps_taken = 1 + local.iter_1633.steps_taken
  }
}

locals {
  end_of_code_1635 = try(local.iter_1634.code_ptr >= length(var.code), true)

  curr_1635 = local.end_of_code_1635 ? null : {
    code = substr(var.code, local.iter_1634.code_ptr, 1)
    input = substr(var.code, local.iter_1634.code_ptr, 1) == "," ? substr(local.iter_1634.input, 0, 1) : null
  }

  iter_1635 = local.end_of_code_1635 ? local.iter_1634 : {
    input = (local.curr_1635.code == ","
      ? substr(local.iter_1634.input, 1, -1)
      : local.iter_1634.input)

    output = (local.curr_1635.code == "."
      ? "${local.iter_1634.output}${jsondecode(format("\"\\u%04x\"", local.iter_1634.tape[local.iter_1634.tape_ptr]))}"
      : local.iter_1634.output)
    
    tape = (
      local.curr_1635.code == "+"
        ? [for i, b in local.iter_1634.tape : (i == local.iter_1634.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1635.code == "-"
        ? [for i, b in local.iter_1634.tape : (i == local.iter_1634.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1635.code == ","
        ? [for i, b in local.iter_1634.tape : (i == local.iter_1634.tape_ptr ? local.ascii_lookup[local.curr_1635.input] : b)]
        : local.iter_1634.tape)

    tape_ptr = (
      local.curr_1635.code == "<"
        ? local.iter_1634.tape_ptr == 0 ? length(local.iter_1634.tape) - 1 : local.iter_1634.tape_ptr - 1 :
      local.curr_1635.code == ">"
        ? local.iter_1634.tape_ptr == length(local.iter_1634.tape) - 1 ? 0 : local.iter_1634.tape_ptr + 1
        : local.iter_1634.tape_ptr)

    code_ptr = 1 + (
      local.curr_1635.code == "["
        ? local.iter_1634.tape[local.iter_1634.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1634.code_ptr)] : local.iter_1634.code_ptr :
      local.curr_1635.code == "]"
        ? local.iter_1634.tape[local.iter_1634.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1634.code_ptr)] : local.iter_1634.code_ptr
        : local.iter_1634.code_ptr)

    steps_taken = 1 + local.iter_1634.steps_taken
  }
}

locals {
  end_of_code_1636 = try(local.iter_1635.code_ptr >= length(var.code), true)

  curr_1636 = local.end_of_code_1636 ? null : {
    code = substr(var.code, local.iter_1635.code_ptr, 1)
    input = substr(var.code, local.iter_1635.code_ptr, 1) == "," ? substr(local.iter_1635.input, 0, 1) : null
  }

  iter_1636 = local.end_of_code_1636 ? local.iter_1635 : {
    input = (local.curr_1636.code == ","
      ? substr(local.iter_1635.input, 1, -1)
      : local.iter_1635.input)

    output = (local.curr_1636.code == "."
      ? "${local.iter_1635.output}${jsondecode(format("\"\\u%04x\"", local.iter_1635.tape[local.iter_1635.tape_ptr]))}"
      : local.iter_1635.output)
    
    tape = (
      local.curr_1636.code == "+"
        ? [for i, b in local.iter_1635.tape : (i == local.iter_1635.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1636.code == "-"
        ? [for i, b in local.iter_1635.tape : (i == local.iter_1635.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1636.code == ","
        ? [for i, b in local.iter_1635.tape : (i == local.iter_1635.tape_ptr ? local.ascii_lookup[local.curr_1636.input] : b)]
        : local.iter_1635.tape)

    tape_ptr = (
      local.curr_1636.code == "<"
        ? local.iter_1635.tape_ptr == 0 ? length(local.iter_1635.tape) - 1 : local.iter_1635.tape_ptr - 1 :
      local.curr_1636.code == ">"
        ? local.iter_1635.tape_ptr == length(local.iter_1635.tape) - 1 ? 0 : local.iter_1635.tape_ptr + 1
        : local.iter_1635.tape_ptr)

    code_ptr = 1 + (
      local.curr_1636.code == "["
        ? local.iter_1635.tape[local.iter_1635.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1635.code_ptr)] : local.iter_1635.code_ptr :
      local.curr_1636.code == "]"
        ? local.iter_1635.tape[local.iter_1635.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1635.code_ptr)] : local.iter_1635.code_ptr
        : local.iter_1635.code_ptr)

    steps_taken = 1 + local.iter_1635.steps_taken
  }
}

locals {
  end_of_code_1637 = try(local.iter_1636.code_ptr >= length(var.code), true)

  curr_1637 = local.end_of_code_1637 ? null : {
    code = substr(var.code, local.iter_1636.code_ptr, 1)
    input = substr(var.code, local.iter_1636.code_ptr, 1) == "," ? substr(local.iter_1636.input, 0, 1) : null
  }

  iter_1637 = local.end_of_code_1637 ? local.iter_1636 : {
    input = (local.curr_1637.code == ","
      ? substr(local.iter_1636.input, 1, -1)
      : local.iter_1636.input)

    output = (local.curr_1637.code == "."
      ? "${local.iter_1636.output}${jsondecode(format("\"\\u%04x\"", local.iter_1636.tape[local.iter_1636.tape_ptr]))}"
      : local.iter_1636.output)
    
    tape = (
      local.curr_1637.code == "+"
        ? [for i, b in local.iter_1636.tape : (i == local.iter_1636.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1637.code == "-"
        ? [for i, b in local.iter_1636.tape : (i == local.iter_1636.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1637.code == ","
        ? [for i, b in local.iter_1636.tape : (i == local.iter_1636.tape_ptr ? local.ascii_lookup[local.curr_1637.input] : b)]
        : local.iter_1636.tape)

    tape_ptr = (
      local.curr_1637.code == "<"
        ? local.iter_1636.tape_ptr == 0 ? length(local.iter_1636.tape) - 1 : local.iter_1636.tape_ptr - 1 :
      local.curr_1637.code == ">"
        ? local.iter_1636.tape_ptr == length(local.iter_1636.tape) - 1 ? 0 : local.iter_1636.tape_ptr + 1
        : local.iter_1636.tape_ptr)

    code_ptr = 1 + (
      local.curr_1637.code == "["
        ? local.iter_1636.tape[local.iter_1636.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1636.code_ptr)] : local.iter_1636.code_ptr :
      local.curr_1637.code == "]"
        ? local.iter_1636.tape[local.iter_1636.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1636.code_ptr)] : local.iter_1636.code_ptr
        : local.iter_1636.code_ptr)

    steps_taken = 1 + local.iter_1636.steps_taken
  }
}

locals {
  end_of_code_1638 = try(local.iter_1637.code_ptr >= length(var.code), true)

  curr_1638 = local.end_of_code_1638 ? null : {
    code = substr(var.code, local.iter_1637.code_ptr, 1)
    input = substr(var.code, local.iter_1637.code_ptr, 1) == "," ? substr(local.iter_1637.input, 0, 1) : null
  }

  iter_1638 = local.end_of_code_1638 ? local.iter_1637 : {
    input = (local.curr_1638.code == ","
      ? substr(local.iter_1637.input, 1, -1)
      : local.iter_1637.input)

    output = (local.curr_1638.code == "."
      ? "${local.iter_1637.output}${jsondecode(format("\"\\u%04x\"", local.iter_1637.tape[local.iter_1637.tape_ptr]))}"
      : local.iter_1637.output)
    
    tape = (
      local.curr_1638.code == "+"
        ? [for i, b in local.iter_1637.tape : (i == local.iter_1637.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1638.code == "-"
        ? [for i, b in local.iter_1637.tape : (i == local.iter_1637.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1638.code == ","
        ? [for i, b in local.iter_1637.tape : (i == local.iter_1637.tape_ptr ? local.ascii_lookup[local.curr_1638.input] : b)]
        : local.iter_1637.tape)

    tape_ptr = (
      local.curr_1638.code == "<"
        ? local.iter_1637.tape_ptr == 0 ? length(local.iter_1637.tape) - 1 : local.iter_1637.tape_ptr - 1 :
      local.curr_1638.code == ">"
        ? local.iter_1637.tape_ptr == length(local.iter_1637.tape) - 1 ? 0 : local.iter_1637.tape_ptr + 1
        : local.iter_1637.tape_ptr)

    code_ptr = 1 + (
      local.curr_1638.code == "["
        ? local.iter_1637.tape[local.iter_1637.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1637.code_ptr)] : local.iter_1637.code_ptr :
      local.curr_1638.code == "]"
        ? local.iter_1637.tape[local.iter_1637.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1637.code_ptr)] : local.iter_1637.code_ptr
        : local.iter_1637.code_ptr)

    steps_taken = 1 + local.iter_1637.steps_taken
  }
}

locals {
  end_of_code_1639 = try(local.iter_1638.code_ptr >= length(var.code), true)

  curr_1639 = local.end_of_code_1639 ? null : {
    code = substr(var.code, local.iter_1638.code_ptr, 1)
    input = substr(var.code, local.iter_1638.code_ptr, 1) == "," ? substr(local.iter_1638.input, 0, 1) : null
  }

  iter_1639 = local.end_of_code_1639 ? local.iter_1638 : {
    input = (local.curr_1639.code == ","
      ? substr(local.iter_1638.input, 1, -1)
      : local.iter_1638.input)

    output = (local.curr_1639.code == "."
      ? "${local.iter_1638.output}${jsondecode(format("\"\\u%04x\"", local.iter_1638.tape[local.iter_1638.tape_ptr]))}"
      : local.iter_1638.output)
    
    tape = (
      local.curr_1639.code == "+"
        ? [for i, b in local.iter_1638.tape : (i == local.iter_1638.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1639.code == "-"
        ? [for i, b in local.iter_1638.tape : (i == local.iter_1638.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1639.code == ","
        ? [for i, b in local.iter_1638.tape : (i == local.iter_1638.tape_ptr ? local.ascii_lookup[local.curr_1639.input] : b)]
        : local.iter_1638.tape)

    tape_ptr = (
      local.curr_1639.code == "<"
        ? local.iter_1638.tape_ptr == 0 ? length(local.iter_1638.tape) - 1 : local.iter_1638.tape_ptr - 1 :
      local.curr_1639.code == ">"
        ? local.iter_1638.tape_ptr == length(local.iter_1638.tape) - 1 ? 0 : local.iter_1638.tape_ptr + 1
        : local.iter_1638.tape_ptr)

    code_ptr = 1 + (
      local.curr_1639.code == "["
        ? local.iter_1638.tape[local.iter_1638.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1638.code_ptr)] : local.iter_1638.code_ptr :
      local.curr_1639.code == "]"
        ? local.iter_1638.tape[local.iter_1638.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1638.code_ptr)] : local.iter_1638.code_ptr
        : local.iter_1638.code_ptr)

    steps_taken = 1 + local.iter_1638.steps_taken
  }
}

locals {
  end_of_code_1640 = try(local.iter_1639.code_ptr >= length(var.code), true)

  curr_1640 = local.end_of_code_1640 ? null : {
    code = substr(var.code, local.iter_1639.code_ptr, 1)
    input = substr(var.code, local.iter_1639.code_ptr, 1) == "," ? substr(local.iter_1639.input, 0, 1) : null
  }

  iter_1640 = local.end_of_code_1640 ? local.iter_1639 : {
    input = (local.curr_1640.code == ","
      ? substr(local.iter_1639.input, 1, -1)
      : local.iter_1639.input)

    output = (local.curr_1640.code == "."
      ? "${local.iter_1639.output}${jsondecode(format("\"\\u%04x\"", local.iter_1639.tape[local.iter_1639.tape_ptr]))}"
      : local.iter_1639.output)
    
    tape = (
      local.curr_1640.code == "+"
        ? [for i, b in local.iter_1639.tape : (i == local.iter_1639.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1640.code == "-"
        ? [for i, b in local.iter_1639.tape : (i == local.iter_1639.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1640.code == ","
        ? [for i, b in local.iter_1639.tape : (i == local.iter_1639.tape_ptr ? local.ascii_lookup[local.curr_1640.input] : b)]
        : local.iter_1639.tape)

    tape_ptr = (
      local.curr_1640.code == "<"
        ? local.iter_1639.tape_ptr == 0 ? length(local.iter_1639.tape) - 1 : local.iter_1639.tape_ptr - 1 :
      local.curr_1640.code == ">"
        ? local.iter_1639.tape_ptr == length(local.iter_1639.tape) - 1 ? 0 : local.iter_1639.tape_ptr + 1
        : local.iter_1639.tape_ptr)

    code_ptr = 1 + (
      local.curr_1640.code == "["
        ? local.iter_1639.tape[local.iter_1639.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1639.code_ptr)] : local.iter_1639.code_ptr :
      local.curr_1640.code == "]"
        ? local.iter_1639.tape[local.iter_1639.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1639.code_ptr)] : local.iter_1639.code_ptr
        : local.iter_1639.code_ptr)

    steps_taken = 1 + local.iter_1639.steps_taken
  }
}

locals {
  end_of_code_1641 = try(local.iter_1640.code_ptr >= length(var.code), true)

  curr_1641 = local.end_of_code_1641 ? null : {
    code = substr(var.code, local.iter_1640.code_ptr, 1)
    input = substr(var.code, local.iter_1640.code_ptr, 1) == "," ? substr(local.iter_1640.input, 0, 1) : null
  }

  iter_1641 = local.end_of_code_1641 ? local.iter_1640 : {
    input = (local.curr_1641.code == ","
      ? substr(local.iter_1640.input, 1, -1)
      : local.iter_1640.input)

    output = (local.curr_1641.code == "."
      ? "${local.iter_1640.output}${jsondecode(format("\"\\u%04x\"", local.iter_1640.tape[local.iter_1640.tape_ptr]))}"
      : local.iter_1640.output)
    
    tape = (
      local.curr_1641.code == "+"
        ? [for i, b in local.iter_1640.tape : (i == local.iter_1640.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1641.code == "-"
        ? [for i, b in local.iter_1640.tape : (i == local.iter_1640.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1641.code == ","
        ? [for i, b in local.iter_1640.tape : (i == local.iter_1640.tape_ptr ? local.ascii_lookup[local.curr_1641.input] : b)]
        : local.iter_1640.tape)

    tape_ptr = (
      local.curr_1641.code == "<"
        ? local.iter_1640.tape_ptr == 0 ? length(local.iter_1640.tape) - 1 : local.iter_1640.tape_ptr - 1 :
      local.curr_1641.code == ">"
        ? local.iter_1640.tape_ptr == length(local.iter_1640.tape) - 1 ? 0 : local.iter_1640.tape_ptr + 1
        : local.iter_1640.tape_ptr)

    code_ptr = 1 + (
      local.curr_1641.code == "["
        ? local.iter_1640.tape[local.iter_1640.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1640.code_ptr)] : local.iter_1640.code_ptr :
      local.curr_1641.code == "]"
        ? local.iter_1640.tape[local.iter_1640.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1640.code_ptr)] : local.iter_1640.code_ptr
        : local.iter_1640.code_ptr)

    steps_taken = 1 + local.iter_1640.steps_taken
  }
}

locals {
  end_of_code_1642 = try(local.iter_1641.code_ptr >= length(var.code), true)

  curr_1642 = local.end_of_code_1642 ? null : {
    code = substr(var.code, local.iter_1641.code_ptr, 1)
    input = substr(var.code, local.iter_1641.code_ptr, 1) == "," ? substr(local.iter_1641.input, 0, 1) : null
  }

  iter_1642 = local.end_of_code_1642 ? local.iter_1641 : {
    input = (local.curr_1642.code == ","
      ? substr(local.iter_1641.input, 1, -1)
      : local.iter_1641.input)

    output = (local.curr_1642.code == "."
      ? "${local.iter_1641.output}${jsondecode(format("\"\\u%04x\"", local.iter_1641.tape[local.iter_1641.tape_ptr]))}"
      : local.iter_1641.output)
    
    tape = (
      local.curr_1642.code == "+"
        ? [for i, b in local.iter_1641.tape : (i == local.iter_1641.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1642.code == "-"
        ? [for i, b in local.iter_1641.tape : (i == local.iter_1641.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1642.code == ","
        ? [for i, b in local.iter_1641.tape : (i == local.iter_1641.tape_ptr ? local.ascii_lookup[local.curr_1642.input] : b)]
        : local.iter_1641.tape)

    tape_ptr = (
      local.curr_1642.code == "<"
        ? local.iter_1641.tape_ptr == 0 ? length(local.iter_1641.tape) - 1 : local.iter_1641.tape_ptr - 1 :
      local.curr_1642.code == ">"
        ? local.iter_1641.tape_ptr == length(local.iter_1641.tape) - 1 ? 0 : local.iter_1641.tape_ptr + 1
        : local.iter_1641.tape_ptr)

    code_ptr = 1 + (
      local.curr_1642.code == "["
        ? local.iter_1641.tape[local.iter_1641.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1641.code_ptr)] : local.iter_1641.code_ptr :
      local.curr_1642.code == "]"
        ? local.iter_1641.tape[local.iter_1641.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1641.code_ptr)] : local.iter_1641.code_ptr
        : local.iter_1641.code_ptr)

    steps_taken = 1 + local.iter_1641.steps_taken
  }
}

locals {
  end_of_code_1643 = try(local.iter_1642.code_ptr >= length(var.code), true)

  curr_1643 = local.end_of_code_1643 ? null : {
    code = substr(var.code, local.iter_1642.code_ptr, 1)
    input = substr(var.code, local.iter_1642.code_ptr, 1) == "," ? substr(local.iter_1642.input, 0, 1) : null
  }

  iter_1643 = local.end_of_code_1643 ? local.iter_1642 : {
    input = (local.curr_1643.code == ","
      ? substr(local.iter_1642.input, 1, -1)
      : local.iter_1642.input)

    output = (local.curr_1643.code == "."
      ? "${local.iter_1642.output}${jsondecode(format("\"\\u%04x\"", local.iter_1642.tape[local.iter_1642.tape_ptr]))}"
      : local.iter_1642.output)
    
    tape = (
      local.curr_1643.code == "+"
        ? [for i, b in local.iter_1642.tape : (i == local.iter_1642.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1643.code == "-"
        ? [for i, b in local.iter_1642.tape : (i == local.iter_1642.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1643.code == ","
        ? [for i, b in local.iter_1642.tape : (i == local.iter_1642.tape_ptr ? local.ascii_lookup[local.curr_1643.input] : b)]
        : local.iter_1642.tape)

    tape_ptr = (
      local.curr_1643.code == "<"
        ? local.iter_1642.tape_ptr == 0 ? length(local.iter_1642.tape) - 1 : local.iter_1642.tape_ptr - 1 :
      local.curr_1643.code == ">"
        ? local.iter_1642.tape_ptr == length(local.iter_1642.tape) - 1 ? 0 : local.iter_1642.tape_ptr + 1
        : local.iter_1642.tape_ptr)

    code_ptr = 1 + (
      local.curr_1643.code == "["
        ? local.iter_1642.tape[local.iter_1642.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1642.code_ptr)] : local.iter_1642.code_ptr :
      local.curr_1643.code == "]"
        ? local.iter_1642.tape[local.iter_1642.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1642.code_ptr)] : local.iter_1642.code_ptr
        : local.iter_1642.code_ptr)

    steps_taken = 1 + local.iter_1642.steps_taken
  }
}

locals {
  end_of_code_1644 = try(local.iter_1643.code_ptr >= length(var.code), true)

  curr_1644 = local.end_of_code_1644 ? null : {
    code = substr(var.code, local.iter_1643.code_ptr, 1)
    input = substr(var.code, local.iter_1643.code_ptr, 1) == "," ? substr(local.iter_1643.input, 0, 1) : null
  }

  iter_1644 = local.end_of_code_1644 ? local.iter_1643 : {
    input = (local.curr_1644.code == ","
      ? substr(local.iter_1643.input, 1, -1)
      : local.iter_1643.input)

    output = (local.curr_1644.code == "."
      ? "${local.iter_1643.output}${jsondecode(format("\"\\u%04x\"", local.iter_1643.tape[local.iter_1643.tape_ptr]))}"
      : local.iter_1643.output)
    
    tape = (
      local.curr_1644.code == "+"
        ? [for i, b in local.iter_1643.tape : (i == local.iter_1643.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1644.code == "-"
        ? [for i, b in local.iter_1643.tape : (i == local.iter_1643.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1644.code == ","
        ? [for i, b in local.iter_1643.tape : (i == local.iter_1643.tape_ptr ? local.ascii_lookup[local.curr_1644.input] : b)]
        : local.iter_1643.tape)

    tape_ptr = (
      local.curr_1644.code == "<"
        ? local.iter_1643.tape_ptr == 0 ? length(local.iter_1643.tape) - 1 : local.iter_1643.tape_ptr - 1 :
      local.curr_1644.code == ">"
        ? local.iter_1643.tape_ptr == length(local.iter_1643.tape) - 1 ? 0 : local.iter_1643.tape_ptr + 1
        : local.iter_1643.tape_ptr)

    code_ptr = 1 + (
      local.curr_1644.code == "["
        ? local.iter_1643.tape[local.iter_1643.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1643.code_ptr)] : local.iter_1643.code_ptr :
      local.curr_1644.code == "]"
        ? local.iter_1643.tape[local.iter_1643.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1643.code_ptr)] : local.iter_1643.code_ptr
        : local.iter_1643.code_ptr)

    steps_taken = 1 + local.iter_1643.steps_taken
  }
}

locals {
  end_of_code_1645 = try(local.iter_1644.code_ptr >= length(var.code), true)

  curr_1645 = local.end_of_code_1645 ? null : {
    code = substr(var.code, local.iter_1644.code_ptr, 1)
    input = substr(var.code, local.iter_1644.code_ptr, 1) == "," ? substr(local.iter_1644.input, 0, 1) : null
  }

  iter_1645 = local.end_of_code_1645 ? local.iter_1644 : {
    input = (local.curr_1645.code == ","
      ? substr(local.iter_1644.input, 1, -1)
      : local.iter_1644.input)

    output = (local.curr_1645.code == "."
      ? "${local.iter_1644.output}${jsondecode(format("\"\\u%04x\"", local.iter_1644.tape[local.iter_1644.tape_ptr]))}"
      : local.iter_1644.output)
    
    tape = (
      local.curr_1645.code == "+"
        ? [for i, b in local.iter_1644.tape : (i == local.iter_1644.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1645.code == "-"
        ? [for i, b in local.iter_1644.tape : (i == local.iter_1644.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1645.code == ","
        ? [for i, b in local.iter_1644.tape : (i == local.iter_1644.tape_ptr ? local.ascii_lookup[local.curr_1645.input] : b)]
        : local.iter_1644.tape)

    tape_ptr = (
      local.curr_1645.code == "<"
        ? local.iter_1644.tape_ptr == 0 ? length(local.iter_1644.tape) - 1 : local.iter_1644.tape_ptr - 1 :
      local.curr_1645.code == ">"
        ? local.iter_1644.tape_ptr == length(local.iter_1644.tape) - 1 ? 0 : local.iter_1644.tape_ptr + 1
        : local.iter_1644.tape_ptr)

    code_ptr = 1 + (
      local.curr_1645.code == "["
        ? local.iter_1644.tape[local.iter_1644.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1644.code_ptr)] : local.iter_1644.code_ptr :
      local.curr_1645.code == "]"
        ? local.iter_1644.tape[local.iter_1644.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1644.code_ptr)] : local.iter_1644.code_ptr
        : local.iter_1644.code_ptr)

    steps_taken = 1 + local.iter_1644.steps_taken
  }
}

locals {
  end_of_code_1646 = try(local.iter_1645.code_ptr >= length(var.code), true)

  curr_1646 = local.end_of_code_1646 ? null : {
    code = substr(var.code, local.iter_1645.code_ptr, 1)
    input = substr(var.code, local.iter_1645.code_ptr, 1) == "," ? substr(local.iter_1645.input, 0, 1) : null
  }

  iter_1646 = local.end_of_code_1646 ? local.iter_1645 : {
    input = (local.curr_1646.code == ","
      ? substr(local.iter_1645.input, 1, -1)
      : local.iter_1645.input)

    output = (local.curr_1646.code == "."
      ? "${local.iter_1645.output}${jsondecode(format("\"\\u%04x\"", local.iter_1645.tape[local.iter_1645.tape_ptr]))}"
      : local.iter_1645.output)
    
    tape = (
      local.curr_1646.code == "+"
        ? [for i, b in local.iter_1645.tape : (i == local.iter_1645.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1646.code == "-"
        ? [for i, b in local.iter_1645.tape : (i == local.iter_1645.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1646.code == ","
        ? [for i, b in local.iter_1645.tape : (i == local.iter_1645.tape_ptr ? local.ascii_lookup[local.curr_1646.input] : b)]
        : local.iter_1645.tape)

    tape_ptr = (
      local.curr_1646.code == "<"
        ? local.iter_1645.tape_ptr == 0 ? length(local.iter_1645.tape) - 1 : local.iter_1645.tape_ptr - 1 :
      local.curr_1646.code == ">"
        ? local.iter_1645.tape_ptr == length(local.iter_1645.tape) - 1 ? 0 : local.iter_1645.tape_ptr + 1
        : local.iter_1645.tape_ptr)

    code_ptr = 1 + (
      local.curr_1646.code == "["
        ? local.iter_1645.tape[local.iter_1645.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1645.code_ptr)] : local.iter_1645.code_ptr :
      local.curr_1646.code == "]"
        ? local.iter_1645.tape[local.iter_1645.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1645.code_ptr)] : local.iter_1645.code_ptr
        : local.iter_1645.code_ptr)

    steps_taken = 1 + local.iter_1645.steps_taken
  }
}

locals {
  end_of_code_1647 = try(local.iter_1646.code_ptr >= length(var.code), true)

  curr_1647 = local.end_of_code_1647 ? null : {
    code = substr(var.code, local.iter_1646.code_ptr, 1)
    input = substr(var.code, local.iter_1646.code_ptr, 1) == "," ? substr(local.iter_1646.input, 0, 1) : null
  }

  iter_1647 = local.end_of_code_1647 ? local.iter_1646 : {
    input = (local.curr_1647.code == ","
      ? substr(local.iter_1646.input, 1, -1)
      : local.iter_1646.input)

    output = (local.curr_1647.code == "."
      ? "${local.iter_1646.output}${jsondecode(format("\"\\u%04x\"", local.iter_1646.tape[local.iter_1646.tape_ptr]))}"
      : local.iter_1646.output)
    
    tape = (
      local.curr_1647.code == "+"
        ? [for i, b in local.iter_1646.tape : (i == local.iter_1646.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1647.code == "-"
        ? [for i, b in local.iter_1646.tape : (i == local.iter_1646.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1647.code == ","
        ? [for i, b in local.iter_1646.tape : (i == local.iter_1646.tape_ptr ? local.ascii_lookup[local.curr_1647.input] : b)]
        : local.iter_1646.tape)

    tape_ptr = (
      local.curr_1647.code == "<"
        ? local.iter_1646.tape_ptr == 0 ? length(local.iter_1646.tape) - 1 : local.iter_1646.tape_ptr - 1 :
      local.curr_1647.code == ">"
        ? local.iter_1646.tape_ptr == length(local.iter_1646.tape) - 1 ? 0 : local.iter_1646.tape_ptr + 1
        : local.iter_1646.tape_ptr)

    code_ptr = 1 + (
      local.curr_1647.code == "["
        ? local.iter_1646.tape[local.iter_1646.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1646.code_ptr)] : local.iter_1646.code_ptr :
      local.curr_1647.code == "]"
        ? local.iter_1646.tape[local.iter_1646.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1646.code_ptr)] : local.iter_1646.code_ptr
        : local.iter_1646.code_ptr)

    steps_taken = 1 + local.iter_1646.steps_taken
  }
}

locals {
  end_of_code_1648 = try(local.iter_1647.code_ptr >= length(var.code), true)

  curr_1648 = local.end_of_code_1648 ? null : {
    code = substr(var.code, local.iter_1647.code_ptr, 1)
    input = substr(var.code, local.iter_1647.code_ptr, 1) == "," ? substr(local.iter_1647.input, 0, 1) : null
  }

  iter_1648 = local.end_of_code_1648 ? local.iter_1647 : {
    input = (local.curr_1648.code == ","
      ? substr(local.iter_1647.input, 1, -1)
      : local.iter_1647.input)

    output = (local.curr_1648.code == "."
      ? "${local.iter_1647.output}${jsondecode(format("\"\\u%04x\"", local.iter_1647.tape[local.iter_1647.tape_ptr]))}"
      : local.iter_1647.output)
    
    tape = (
      local.curr_1648.code == "+"
        ? [for i, b in local.iter_1647.tape : (i == local.iter_1647.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1648.code == "-"
        ? [for i, b in local.iter_1647.tape : (i == local.iter_1647.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1648.code == ","
        ? [for i, b in local.iter_1647.tape : (i == local.iter_1647.tape_ptr ? local.ascii_lookup[local.curr_1648.input] : b)]
        : local.iter_1647.tape)

    tape_ptr = (
      local.curr_1648.code == "<"
        ? local.iter_1647.tape_ptr == 0 ? length(local.iter_1647.tape) - 1 : local.iter_1647.tape_ptr - 1 :
      local.curr_1648.code == ">"
        ? local.iter_1647.tape_ptr == length(local.iter_1647.tape) - 1 ? 0 : local.iter_1647.tape_ptr + 1
        : local.iter_1647.tape_ptr)

    code_ptr = 1 + (
      local.curr_1648.code == "["
        ? local.iter_1647.tape[local.iter_1647.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1647.code_ptr)] : local.iter_1647.code_ptr :
      local.curr_1648.code == "]"
        ? local.iter_1647.tape[local.iter_1647.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1647.code_ptr)] : local.iter_1647.code_ptr
        : local.iter_1647.code_ptr)

    steps_taken = 1 + local.iter_1647.steps_taken
  }
}

locals {
  end_of_code_1649 = try(local.iter_1648.code_ptr >= length(var.code), true)

  curr_1649 = local.end_of_code_1649 ? null : {
    code = substr(var.code, local.iter_1648.code_ptr, 1)
    input = substr(var.code, local.iter_1648.code_ptr, 1) == "," ? substr(local.iter_1648.input, 0, 1) : null
  }

  iter_1649 = local.end_of_code_1649 ? local.iter_1648 : {
    input = (local.curr_1649.code == ","
      ? substr(local.iter_1648.input, 1, -1)
      : local.iter_1648.input)

    output = (local.curr_1649.code == "."
      ? "${local.iter_1648.output}${jsondecode(format("\"\\u%04x\"", local.iter_1648.tape[local.iter_1648.tape_ptr]))}"
      : local.iter_1648.output)
    
    tape = (
      local.curr_1649.code == "+"
        ? [for i, b in local.iter_1648.tape : (i == local.iter_1648.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1649.code == "-"
        ? [for i, b in local.iter_1648.tape : (i == local.iter_1648.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1649.code == ","
        ? [for i, b in local.iter_1648.tape : (i == local.iter_1648.tape_ptr ? local.ascii_lookup[local.curr_1649.input] : b)]
        : local.iter_1648.tape)

    tape_ptr = (
      local.curr_1649.code == "<"
        ? local.iter_1648.tape_ptr == 0 ? length(local.iter_1648.tape) - 1 : local.iter_1648.tape_ptr - 1 :
      local.curr_1649.code == ">"
        ? local.iter_1648.tape_ptr == length(local.iter_1648.tape) - 1 ? 0 : local.iter_1648.tape_ptr + 1
        : local.iter_1648.tape_ptr)

    code_ptr = 1 + (
      local.curr_1649.code == "["
        ? local.iter_1648.tape[local.iter_1648.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1648.code_ptr)] : local.iter_1648.code_ptr :
      local.curr_1649.code == "]"
        ? local.iter_1648.tape[local.iter_1648.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1648.code_ptr)] : local.iter_1648.code_ptr
        : local.iter_1648.code_ptr)

    steps_taken = 1 + local.iter_1648.steps_taken
  }
}

locals {
  end_of_code_1650 = try(local.iter_1649.code_ptr >= length(var.code), true)

  curr_1650 = local.end_of_code_1650 ? null : {
    code = substr(var.code, local.iter_1649.code_ptr, 1)
    input = substr(var.code, local.iter_1649.code_ptr, 1) == "," ? substr(local.iter_1649.input, 0, 1) : null
  }

  iter_1650 = local.end_of_code_1650 ? local.iter_1649 : {
    input = (local.curr_1650.code == ","
      ? substr(local.iter_1649.input, 1, -1)
      : local.iter_1649.input)

    output = (local.curr_1650.code == "."
      ? "${local.iter_1649.output}${jsondecode(format("\"\\u%04x\"", local.iter_1649.tape[local.iter_1649.tape_ptr]))}"
      : local.iter_1649.output)
    
    tape = (
      local.curr_1650.code == "+"
        ? [for i, b in local.iter_1649.tape : (i == local.iter_1649.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1650.code == "-"
        ? [for i, b in local.iter_1649.tape : (i == local.iter_1649.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1650.code == ","
        ? [for i, b in local.iter_1649.tape : (i == local.iter_1649.tape_ptr ? local.ascii_lookup[local.curr_1650.input] : b)]
        : local.iter_1649.tape)

    tape_ptr = (
      local.curr_1650.code == "<"
        ? local.iter_1649.tape_ptr == 0 ? length(local.iter_1649.tape) - 1 : local.iter_1649.tape_ptr - 1 :
      local.curr_1650.code == ">"
        ? local.iter_1649.tape_ptr == length(local.iter_1649.tape) - 1 ? 0 : local.iter_1649.tape_ptr + 1
        : local.iter_1649.tape_ptr)

    code_ptr = 1 + (
      local.curr_1650.code == "["
        ? local.iter_1649.tape[local.iter_1649.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1649.code_ptr)] : local.iter_1649.code_ptr :
      local.curr_1650.code == "]"
        ? local.iter_1649.tape[local.iter_1649.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1649.code_ptr)] : local.iter_1649.code_ptr
        : local.iter_1649.code_ptr)

    steps_taken = 1 + local.iter_1649.steps_taken
  }
}

locals {
  end_of_code_1651 = try(local.iter_1650.code_ptr >= length(var.code), true)

  curr_1651 = local.end_of_code_1651 ? null : {
    code = substr(var.code, local.iter_1650.code_ptr, 1)
    input = substr(var.code, local.iter_1650.code_ptr, 1) == "," ? substr(local.iter_1650.input, 0, 1) : null
  }

  iter_1651 = local.end_of_code_1651 ? local.iter_1650 : {
    input = (local.curr_1651.code == ","
      ? substr(local.iter_1650.input, 1, -1)
      : local.iter_1650.input)

    output = (local.curr_1651.code == "."
      ? "${local.iter_1650.output}${jsondecode(format("\"\\u%04x\"", local.iter_1650.tape[local.iter_1650.tape_ptr]))}"
      : local.iter_1650.output)
    
    tape = (
      local.curr_1651.code == "+"
        ? [for i, b in local.iter_1650.tape : (i == local.iter_1650.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1651.code == "-"
        ? [for i, b in local.iter_1650.tape : (i == local.iter_1650.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1651.code == ","
        ? [for i, b in local.iter_1650.tape : (i == local.iter_1650.tape_ptr ? local.ascii_lookup[local.curr_1651.input] : b)]
        : local.iter_1650.tape)

    tape_ptr = (
      local.curr_1651.code == "<"
        ? local.iter_1650.tape_ptr == 0 ? length(local.iter_1650.tape) - 1 : local.iter_1650.tape_ptr - 1 :
      local.curr_1651.code == ">"
        ? local.iter_1650.tape_ptr == length(local.iter_1650.tape) - 1 ? 0 : local.iter_1650.tape_ptr + 1
        : local.iter_1650.tape_ptr)

    code_ptr = 1 + (
      local.curr_1651.code == "["
        ? local.iter_1650.tape[local.iter_1650.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1650.code_ptr)] : local.iter_1650.code_ptr :
      local.curr_1651.code == "]"
        ? local.iter_1650.tape[local.iter_1650.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1650.code_ptr)] : local.iter_1650.code_ptr
        : local.iter_1650.code_ptr)

    steps_taken = 1 + local.iter_1650.steps_taken
  }
}

locals {
  end_of_code_1652 = try(local.iter_1651.code_ptr >= length(var.code), true)

  curr_1652 = local.end_of_code_1652 ? null : {
    code = substr(var.code, local.iter_1651.code_ptr, 1)
    input = substr(var.code, local.iter_1651.code_ptr, 1) == "," ? substr(local.iter_1651.input, 0, 1) : null
  }

  iter_1652 = local.end_of_code_1652 ? local.iter_1651 : {
    input = (local.curr_1652.code == ","
      ? substr(local.iter_1651.input, 1, -1)
      : local.iter_1651.input)

    output = (local.curr_1652.code == "."
      ? "${local.iter_1651.output}${jsondecode(format("\"\\u%04x\"", local.iter_1651.tape[local.iter_1651.tape_ptr]))}"
      : local.iter_1651.output)
    
    tape = (
      local.curr_1652.code == "+"
        ? [for i, b in local.iter_1651.tape : (i == local.iter_1651.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1652.code == "-"
        ? [for i, b in local.iter_1651.tape : (i == local.iter_1651.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1652.code == ","
        ? [for i, b in local.iter_1651.tape : (i == local.iter_1651.tape_ptr ? local.ascii_lookup[local.curr_1652.input] : b)]
        : local.iter_1651.tape)

    tape_ptr = (
      local.curr_1652.code == "<"
        ? local.iter_1651.tape_ptr == 0 ? length(local.iter_1651.tape) - 1 : local.iter_1651.tape_ptr - 1 :
      local.curr_1652.code == ">"
        ? local.iter_1651.tape_ptr == length(local.iter_1651.tape) - 1 ? 0 : local.iter_1651.tape_ptr + 1
        : local.iter_1651.tape_ptr)

    code_ptr = 1 + (
      local.curr_1652.code == "["
        ? local.iter_1651.tape[local.iter_1651.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1651.code_ptr)] : local.iter_1651.code_ptr :
      local.curr_1652.code == "]"
        ? local.iter_1651.tape[local.iter_1651.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1651.code_ptr)] : local.iter_1651.code_ptr
        : local.iter_1651.code_ptr)

    steps_taken = 1 + local.iter_1651.steps_taken
  }
}

locals {
  end_of_code_1653 = try(local.iter_1652.code_ptr >= length(var.code), true)

  curr_1653 = local.end_of_code_1653 ? null : {
    code = substr(var.code, local.iter_1652.code_ptr, 1)
    input = substr(var.code, local.iter_1652.code_ptr, 1) == "," ? substr(local.iter_1652.input, 0, 1) : null
  }

  iter_1653 = local.end_of_code_1653 ? local.iter_1652 : {
    input = (local.curr_1653.code == ","
      ? substr(local.iter_1652.input, 1, -1)
      : local.iter_1652.input)

    output = (local.curr_1653.code == "."
      ? "${local.iter_1652.output}${jsondecode(format("\"\\u%04x\"", local.iter_1652.tape[local.iter_1652.tape_ptr]))}"
      : local.iter_1652.output)
    
    tape = (
      local.curr_1653.code == "+"
        ? [for i, b in local.iter_1652.tape : (i == local.iter_1652.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1653.code == "-"
        ? [for i, b in local.iter_1652.tape : (i == local.iter_1652.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1653.code == ","
        ? [for i, b in local.iter_1652.tape : (i == local.iter_1652.tape_ptr ? local.ascii_lookup[local.curr_1653.input] : b)]
        : local.iter_1652.tape)

    tape_ptr = (
      local.curr_1653.code == "<"
        ? local.iter_1652.tape_ptr == 0 ? length(local.iter_1652.tape) - 1 : local.iter_1652.tape_ptr - 1 :
      local.curr_1653.code == ">"
        ? local.iter_1652.tape_ptr == length(local.iter_1652.tape) - 1 ? 0 : local.iter_1652.tape_ptr + 1
        : local.iter_1652.tape_ptr)

    code_ptr = 1 + (
      local.curr_1653.code == "["
        ? local.iter_1652.tape[local.iter_1652.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1652.code_ptr)] : local.iter_1652.code_ptr :
      local.curr_1653.code == "]"
        ? local.iter_1652.tape[local.iter_1652.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1652.code_ptr)] : local.iter_1652.code_ptr
        : local.iter_1652.code_ptr)

    steps_taken = 1 + local.iter_1652.steps_taken
  }
}

locals {
  end_of_code_1654 = try(local.iter_1653.code_ptr >= length(var.code), true)

  curr_1654 = local.end_of_code_1654 ? null : {
    code = substr(var.code, local.iter_1653.code_ptr, 1)
    input = substr(var.code, local.iter_1653.code_ptr, 1) == "," ? substr(local.iter_1653.input, 0, 1) : null
  }

  iter_1654 = local.end_of_code_1654 ? local.iter_1653 : {
    input = (local.curr_1654.code == ","
      ? substr(local.iter_1653.input, 1, -1)
      : local.iter_1653.input)

    output = (local.curr_1654.code == "."
      ? "${local.iter_1653.output}${jsondecode(format("\"\\u%04x\"", local.iter_1653.tape[local.iter_1653.tape_ptr]))}"
      : local.iter_1653.output)
    
    tape = (
      local.curr_1654.code == "+"
        ? [for i, b in local.iter_1653.tape : (i == local.iter_1653.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1654.code == "-"
        ? [for i, b in local.iter_1653.tape : (i == local.iter_1653.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1654.code == ","
        ? [for i, b in local.iter_1653.tape : (i == local.iter_1653.tape_ptr ? local.ascii_lookup[local.curr_1654.input] : b)]
        : local.iter_1653.tape)

    tape_ptr = (
      local.curr_1654.code == "<"
        ? local.iter_1653.tape_ptr == 0 ? length(local.iter_1653.tape) - 1 : local.iter_1653.tape_ptr - 1 :
      local.curr_1654.code == ">"
        ? local.iter_1653.tape_ptr == length(local.iter_1653.tape) - 1 ? 0 : local.iter_1653.tape_ptr + 1
        : local.iter_1653.tape_ptr)

    code_ptr = 1 + (
      local.curr_1654.code == "["
        ? local.iter_1653.tape[local.iter_1653.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1653.code_ptr)] : local.iter_1653.code_ptr :
      local.curr_1654.code == "]"
        ? local.iter_1653.tape[local.iter_1653.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1653.code_ptr)] : local.iter_1653.code_ptr
        : local.iter_1653.code_ptr)

    steps_taken = 1 + local.iter_1653.steps_taken
  }
}

locals {
  end_of_code_1655 = try(local.iter_1654.code_ptr >= length(var.code), true)

  curr_1655 = local.end_of_code_1655 ? null : {
    code = substr(var.code, local.iter_1654.code_ptr, 1)
    input = substr(var.code, local.iter_1654.code_ptr, 1) == "," ? substr(local.iter_1654.input, 0, 1) : null
  }

  iter_1655 = local.end_of_code_1655 ? local.iter_1654 : {
    input = (local.curr_1655.code == ","
      ? substr(local.iter_1654.input, 1, -1)
      : local.iter_1654.input)

    output = (local.curr_1655.code == "."
      ? "${local.iter_1654.output}${jsondecode(format("\"\\u%04x\"", local.iter_1654.tape[local.iter_1654.tape_ptr]))}"
      : local.iter_1654.output)
    
    tape = (
      local.curr_1655.code == "+"
        ? [for i, b in local.iter_1654.tape : (i == local.iter_1654.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1655.code == "-"
        ? [for i, b in local.iter_1654.tape : (i == local.iter_1654.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1655.code == ","
        ? [for i, b in local.iter_1654.tape : (i == local.iter_1654.tape_ptr ? local.ascii_lookup[local.curr_1655.input] : b)]
        : local.iter_1654.tape)

    tape_ptr = (
      local.curr_1655.code == "<"
        ? local.iter_1654.tape_ptr == 0 ? length(local.iter_1654.tape) - 1 : local.iter_1654.tape_ptr - 1 :
      local.curr_1655.code == ">"
        ? local.iter_1654.tape_ptr == length(local.iter_1654.tape) - 1 ? 0 : local.iter_1654.tape_ptr + 1
        : local.iter_1654.tape_ptr)

    code_ptr = 1 + (
      local.curr_1655.code == "["
        ? local.iter_1654.tape[local.iter_1654.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1654.code_ptr)] : local.iter_1654.code_ptr :
      local.curr_1655.code == "]"
        ? local.iter_1654.tape[local.iter_1654.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1654.code_ptr)] : local.iter_1654.code_ptr
        : local.iter_1654.code_ptr)

    steps_taken = 1 + local.iter_1654.steps_taken
  }
}

locals {
  end_of_code_1656 = try(local.iter_1655.code_ptr >= length(var.code), true)

  curr_1656 = local.end_of_code_1656 ? null : {
    code = substr(var.code, local.iter_1655.code_ptr, 1)
    input = substr(var.code, local.iter_1655.code_ptr, 1) == "," ? substr(local.iter_1655.input, 0, 1) : null
  }

  iter_1656 = local.end_of_code_1656 ? local.iter_1655 : {
    input = (local.curr_1656.code == ","
      ? substr(local.iter_1655.input, 1, -1)
      : local.iter_1655.input)

    output = (local.curr_1656.code == "."
      ? "${local.iter_1655.output}${jsondecode(format("\"\\u%04x\"", local.iter_1655.tape[local.iter_1655.tape_ptr]))}"
      : local.iter_1655.output)
    
    tape = (
      local.curr_1656.code == "+"
        ? [for i, b in local.iter_1655.tape : (i == local.iter_1655.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1656.code == "-"
        ? [for i, b in local.iter_1655.tape : (i == local.iter_1655.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1656.code == ","
        ? [for i, b in local.iter_1655.tape : (i == local.iter_1655.tape_ptr ? local.ascii_lookup[local.curr_1656.input] : b)]
        : local.iter_1655.tape)

    tape_ptr = (
      local.curr_1656.code == "<"
        ? local.iter_1655.tape_ptr == 0 ? length(local.iter_1655.tape) - 1 : local.iter_1655.tape_ptr - 1 :
      local.curr_1656.code == ">"
        ? local.iter_1655.tape_ptr == length(local.iter_1655.tape) - 1 ? 0 : local.iter_1655.tape_ptr + 1
        : local.iter_1655.tape_ptr)

    code_ptr = 1 + (
      local.curr_1656.code == "["
        ? local.iter_1655.tape[local.iter_1655.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1655.code_ptr)] : local.iter_1655.code_ptr :
      local.curr_1656.code == "]"
        ? local.iter_1655.tape[local.iter_1655.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1655.code_ptr)] : local.iter_1655.code_ptr
        : local.iter_1655.code_ptr)

    steps_taken = 1 + local.iter_1655.steps_taken
  }
}

locals {
  end_of_code_1657 = try(local.iter_1656.code_ptr >= length(var.code), true)

  curr_1657 = local.end_of_code_1657 ? null : {
    code = substr(var.code, local.iter_1656.code_ptr, 1)
    input = substr(var.code, local.iter_1656.code_ptr, 1) == "," ? substr(local.iter_1656.input, 0, 1) : null
  }

  iter_1657 = local.end_of_code_1657 ? local.iter_1656 : {
    input = (local.curr_1657.code == ","
      ? substr(local.iter_1656.input, 1, -1)
      : local.iter_1656.input)

    output = (local.curr_1657.code == "."
      ? "${local.iter_1656.output}${jsondecode(format("\"\\u%04x\"", local.iter_1656.tape[local.iter_1656.tape_ptr]))}"
      : local.iter_1656.output)
    
    tape = (
      local.curr_1657.code == "+"
        ? [for i, b in local.iter_1656.tape : (i == local.iter_1656.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1657.code == "-"
        ? [for i, b in local.iter_1656.tape : (i == local.iter_1656.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1657.code == ","
        ? [for i, b in local.iter_1656.tape : (i == local.iter_1656.tape_ptr ? local.ascii_lookup[local.curr_1657.input] : b)]
        : local.iter_1656.tape)

    tape_ptr = (
      local.curr_1657.code == "<"
        ? local.iter_1656.tape_ptr == 0 ? length(local.iter_1656.tape) - 1 : local.iter_1656.tape_ptr - 1 :
      local.curr_1657.code == ">"
        ? local.iter_1656.tape_ptr == length(local.iter_1656.tape) - 1 ? 0 : local.iter_1656.tape_ptr + 1
        : local.iter_1656.tape_ptr)

    code_ptr = 1 + (
      local.curr_1657.code == "["
        ? local.iter_1656.tape[local.iter_1656.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1656.code_ptr)] : local.iter_1656.code_ptr :
      local.curr_1657.code == "]"
        ? local.iter_1656.tape[local.iter_1656.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1656.code_ptr)] : local.iter_1656.code_ptr
        : local.iter_1656.code_ptr)

    steps_taken = 1 + local.iter_1656.steps_taken
  }
}

locals {
  end_of_code_1658 = try(local.iter_1657.code_ptr >= length(var.code), true)

  curr_1658 = local.end_of_code_1658 ? null : {
    code = substr(var.code, local.iter_1657.code_ptr, 1)
    input = substr(var.code, local.iter_1657.code_ptr, 1) == "," ? substr(local.iter_1657.input, 0, 1) : null
  }

  iter_1658 = local.end_of_code_1658 ? local.iter_1657 : {
    input = (local.curr_1658.code == ","
      ? substr(local.iter_1657.input, 1, -1)
      : local.iter_1657.input)

    output = (local.curr_1658.code == "."
      ? "${local.iter_1657.output}${jsondecode(format("\"\\u%04x\"", local.iter_1657.tape[local.iter_1657.tape_ptr]))}"
      : local.iter_1657.output)
    
    tape = (
      local.curr_1658.code == "+"
        ? [for i, b in local.iter_1657.tape : (i == local.iter_1657.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1658.code == "-"
        ? [for i, b in local.iter_1657.tape : (i == local.iter_1657.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1658.code == ","
        ? [for i, b in local.iter_1657.tape : (i == local.iter_1657.tape_ptr ? local.ascii_lookup[local.curr_1658.input] : b)]
        : local.iter_1657.tape)

    tape_ptr = (
      local.curr_1658.code == "<"
        ? local.iter_1657.tape_ptr == 0 ? length(local.iter_1657.tape) - 1 : local.iter_1657.tape_ptr - 1 :
      local.curr_1658.code == ">"
        ? local.iter_1657.tape_ptr == length(local.iter_1657.tape) - 1 ? 0 : local.iter_1657.tape_ptr + 1
        : local.iter_1657.tape_ptr)

    code_ptr = 1 + (
      local.curr_1658.code == "["
        ? local.iter_1657.tape[local.iter_1657.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1657.code_ptr)] : local.iter_1657.code_ptr :
      local.curr_1658.code == "]"
        ? local.iter_1657.tape[local.iter_1657.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1657.code_ptr)] : local.iter_1657.code_ptr
        : local.iter_1657.code_ptr)

    steps_taken = 1 + local.iter_1657.steps_taken
  }
}

locals {
  end_of_code_1659 = try(local.iter_1658.code_ptr >= length(var.code), true)

  curr_1659 = local.end_of_code_1659 ? null : {
    code = substr(var.code, local.iter_1658.code_ptr, 1)
    input = substr(var.code, local.iter_1658.code_ptr, 1) == "," ? substr(local.iter_1658.input, 0, 1) : null
  }

  iter_1659 = local.end_of_code_1659 ? local.iter_1658 : {
    input = (local.curr_1659.code == ","
      ? substr(local.iter_1658.input, 1, -1)
      : local.iter_1658.input)

    output = (local.curr_1659.code == "."
      ? "${local.iter_1658.output}${jsondecode(format("\"\\u%04x\"", local.iter_1658.tape[local.iter_1658.tape_ptr]))}"
      : local.iter_1658.output)
    
    tape = (
      local.curr_1659.code == "+"
        ? [for i, b in local.iter_1658.tape : (i == local.iter_1658.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1659.code == "-"
        ? [for i, b in local.iter_1658.tape : (i == local.iter_1658.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1659.code == ","
        ? [for i, b in local.iter_1658.tape : (i == local.iter_1658.tape_ptr ? local.ascii_lookup[local.curr_1659.input] : b)]
        : local.iter_1658.tape)

    tape_ptr = (
      local.curr_1659.code == "<"
        ? local.iter_1658.tape_ptr == 0 ? length(local.iter_1658.tape) - 1 : local.iter_1658.tape_ptr - 1 :
      local.curr_1659.code == ">"
        ? local.iter_1658.tape_ptr == length(local.iter_1658.tape) - 1 ? 0 : local.iter_1658.tape_ptr + 1
        : local.iter_1658.tape_ptr)

    code_ptr = 1 + (
      local.curr_1659.code == "["
        ? local.iter_1658.tape[local.iter_1658.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1658.code_ptr)] : local.iter_1658.code_ptr :
      local.curr_1659.code == "]"
        ? local.iter_1658.tape[local.iter_1658.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1658.code_ptr)] : local.iter_1658.code_ptr
        : local.iter_1658.code_ptr)

    steps_taken = 1 + local.iter_1658.steps_taken
  }
}

locals {
  end_of_code_1660 = try(local.iter_1659.code_ptr >= length(var.code), true)

  curr_1660 = local.end_of_code_1660 ? null : {
    code = substr(var.code, local.iter_1659.code_ptr, 1)
    input = substr(var.code, local.iter_1659.code_ptr, 1) == "," ? substr(local.iter_1659.input, 0, 1) : null
  }

  iter_1660 = local.end_of_code_1660 ? local.iter_1659 : {
    input = (local.curr_1660.code == ","
      ? substr(local.iter_1659.input, 1, -1)
      : local.iter_1659.input)

    output = (local.curr_1660.code == "."
      ? "${local.iter_1659.output}${jsondecode(format("\"\\u%04x\"", local.iter_1659.tape[local.iter_1659.tape_ptr]))}"
      : local.iter_1659.output)
    
    tape = (
      local.curr_1660.code == "+"
        ? [for i, b in local.iter_1659.tape : (i == local.iter_1659.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1660.code == "-"
        ? [for i, b in local.iter_1659.tape : (i == local.iter_1659.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1660.code == ","
        ? [for i, b in local.iter_1659.tape : (i == local.iter_1659.tape_ptr ? local.ascii_lookup[local.curr_1660.input] : b)]
        : local.iter_1659.tape)

    tape_ptr = (
      local.curr_1660.code == "<"
        ? local.iter_1659.tape_ptr == 0 ? length(local.iter_1659.tape) - 1 : local.iter_1659.tape_ptr - 1 :
      local.curr_1660.code == ">"
        ? local.iter_1659.tape_ptr == length(local.iter_1659.tape) - 1 ? 0 : local.iter_1659.tape_ptr + 1
        : local.iter_1659.tape_ptr)

    code_ptr = 1 + (
      local.curr_1660.code == "["
        ? local.iter_1659.tape[local.iter_1659.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1659.code_ptr)] : local.iter_1659.code_ptr :
      local.curr_1660.code == "]"
        ? local.iter_1659.tape[local.iter_1659.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1659.code_ptr)] : local.iter_1659.code_ptr
        : local.iter_1659.code_ptr)

    steps_taken = 1 + local.iter_1659.steps_taken
  }
}

locals {
  end_of_code_1661 = try(local.iter_1660.code_ptr >= length(var.code), true)

  curr_1661 = local.end_of_code_1661 ? null : {
    code = substr(var.code, local.iter_1660.code_ptr, 1)
    input = substr(var.code, local.iter_1660.code_ptr, 1) == "," ? substr(local.iter_1660.input, 0, 1) : null
  }

  iter_1661 = local.end_of_code_1661 ? local.iter_1660 : {
    input = (local.curr_1661.code == ","
      ? substr(local.iter_1660.input, 1, -1)
      : local.iter_1660.input)

    output = (local.curr_1661.code == "."
      ? "${local.iter_1660.output}${jsondecode(format("\"\\u%04x\"", local.iter_1660.tape[local.iter_1660.tape_ptr]))}"
      : local.iter_1660.output)
    
    tape = (
      local.curr_1661.code == "+"
        ? [for i, b in local.iter_1660.tape : (i == local.iter_1660.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1661.code == "-"
        ? [for i, b in local.iter_1660.tape : (i == local.iter_1660.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1661.code == ","
        ? [for i, b in local.iter_1660.tape : (i == local.iter_1660.tape_ptr ? local.ascii_lookup[local.curr_1661.input] : b)]
        : local.iter_1660.tape)

    tape_ptr = (
      local.curr_1661.code == "<"
        ? local.iter_1660.tape_ptr == 0 ? length(local.iter_1660.tape) - 1 : local.iter_1660.tape_ptr - 1 :
      local.curr_1661.code == ">"
        ? local.iter_1660.tape_ptr == length(local.iter_1660.tape) - 1 ? 0 : local.iter_1660.tape_ptr + 1
        : local.iter_1660.tape_ptr)

    code_ptr = 1 + (
      local.curr_1661.code == "["
        ? local.iter_1660.tape[local.iter_1660.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1660.code_ptr)] : local.iter_1660.code_ptr :
      local.curr_1661.code == "]"
        ? local.iter_1660.tape[local.iter_1660.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1660.code_ptr)] : local.iter_1660.code_ptr
        : local.iter_1660.code_ptr)

    steps_taken = 1 + local.iter_1660.steps_taken
  }
}

locals {
  end_of_code_1662 = try(local.iter_1661.code_ptr >= length(var.code), true)

  curr_1662 = local.end_of_code_1662 ? null : {
    code = substr(var.code, local.iter_1661.code_ptr, 1)
    input = substr(var.code, local.iter_1661.code_ptr, 1) == "," ? substr(local.iter_1661.input, 0, 1) : null
  }

  iter_1662 = local.end_of_code_1662 ? local.iter_1661 : {
    input = (local.curr_1662.code == ","
      ? substr(local.iter_1661.input, 1, -1)
      : local.iter_1661.input)

    output = (local.curr_1662.code == "."
      ? "${local.iter_1661.output}${jsondecode(format("\"\\u%04x\"", local.iter_1661.tape[local.iter_1661.tape_ptr]))}"
      : local.iter_1661.output)
    
    tape = (
      local.curr_1662.code == "+"
        ? [for i, b in local.iter_1661.tape : (i == local.iter_1661.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1662.code == "-"
        ? [for i, b in local.iter_1661.tape : (i == local.iter_1661.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1662.code == ","
        ? [for i, b in local.iter_1661.tape : (i == local.iter_1661.tape_ptr ? local.ascii_lookup[local.curr_1662.input] : b)]
        : local.iter_1661.tape)

    tape_ptr = (
      local.curr_1662.code == "<"
        ? local.iter_1661.tape_ptr == 0 ? length(local.iter_1661.tape) - 1 : local.iter_1661.tape_ptr - 1 :
      local.curr_1662.code == ">"
        ? local.iter_1661.tape_ptr == length(local.iter_1661.tape) - 1 ? 0 : local.iter_1661.tape_ptr + 1
        : local.iter_1661.tape_ptr)

    code_ptr = 1 + (
      local.curr_1662.code == "["
        ? local.iter_1661.tape[local.iter_1661.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1661.code_ptr)] : local.iter_1661.code_ptr :
      local.curr_1662.code == "]"
        ? local.iter_1661.tape[local.iter_1661.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1661.code_ptr)] : local.iter_1661.code_ptr
        : local.iter_1661.code_ptr)

    steps_taken = 1 + local.iter_1661.steps_taken
  }
}

locals {
  end_of_code_1663 = try(local.iter_1662.code_ptr >= length(var.code), true)

  curr_1663 = local.end_of_code_1663 ? null : {
    code = substr(var.code, local.iter_1662.code_ptr, 1)
    input = substr(var.code, local.iter_1662.code_ptr, 1) == "," ? substr(local.iter_1662.input, 0, 1) : null
  }

  iter_1663 = local.end_of_code_1663 ? local.iter_1662 : {
    input = (local.curr_1663.code == ","
      ? substr(local.iter_1662.input, 1, -1)
      : local.iter_1662.input)

    output = (local.curr_1663.code == "."
      ? "${local.iter_1662.output}${jsondecode(format("\"\\u%04x\"", local.iter_1662.tape[local.iter_1662.tape_ptr]))}"
      : local.iter_1662.output)
    
    tape = (
      local.curr_1663.code == "+"
        ? [for i, b in local.iter_1662.tape : (i == local.iter_1662.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1663.code == "-"
        ? [for i, b in local.iter_1662.tape : (i == local.iter_1662.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1663.code == ","
        ? [for i, b in local.iter_1662.tape : (i == local.iter_1662.tape_ptr ? local.ascii_lookup[local.curr_1663.input] : b)]
        : local.iter_1662.tape)

    tape_ptr = (
      local.curr_1663.code == "<"
        ? local.iter_1662.tape_ptr == 0 ? length(local.iter_1662.tape) - 1 : local.iter_1662.tape_ptr - 1 :
      local.curr_1663.code == ">"
        ? local.iter_1662.tape_ptr == length(local.iter_1662.tape) - 1 ? 0 : local.iter_1662.tape_ptr + 1
        : local.iter_1662.tape_ptr)

    code_ptr = 1 + (
      local.curr_1663.code == "["
        ? local.iter_1662.tape[local.iter_1662.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1662.code_ptr)] : local.iter_1662.code_ptr :
      local.curr_1663.code == "]"
        ? local.iter_1662.tape[local.iter_1662.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1662.code_ptr)] : local.iter_1662.code_ptr
        : local.iter_1662.code_ptr)

    steps_taken = 1 + local.iter_1662.steps_taken
  }
}

locals {
  end_of_code_1664 = try(local.iter_1663.code_ptr >= length(var.code), true)

  curr_1664 = local.end_of_code_1664 ? null : {
    code = substr(var.code, local.iter_1663.code_ptr, 1)
    input = substr(var.code, local.iter_1663.code_ptr, 1) == "," ? substr(local.iter_1663.input, 0, 1) : null
  }

  iter_1664 = local.end_of_code_1664 ? local.iter_1663 : {
    input = (local.curr_1664.code == ","
      ? substr(local.iter_1663.input, 1, -1)
      : local.iter_1663.input)

    output = (local.curr_1664.code == "."
      ? "${local.iter_1663.output}${jsondecode(format("\"\\u%04x\"", local.iter_1663.tape[local.iter_1663.tape_ptr]))}"
      : local.iter_1663.output)
    
    tape = (
      local.curr_1664.code == "+"
        ? [for i, b in local.iter_1663.tape : (i == local.iter_1663.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1664.code == "-"
        ? [for i, b in local.iter_1663.tape : (i == local.iter_1663.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1664.code == ","
        ? [for i, b in local.iter_1663.tape : (i == local.iter_1663.tape_ptr ? local.ascii_lookup[local.curr_1664.input] : b)]
        : local.iter_1663.tape)

    tape_ptr = (
      local.curr_1664.code == "<"
        ? local.iter_1663.tape_ptr == 0 ? length(local.iter_1663.tape) - 1 : local.iter_1663.tape_ptr - 1 :
      local.curr_1664.code == ">"
        ? local.iter_1663.tape_ptr == length(local.iter_1663.tape) - 1 ? 0 : local.iter_1663.tape_ptr + 1
        : local.iter_1663.tape_ptr)

    code_ptr = 1 + (
      local.curr_1664.code == "["
        ? local.iter_1663.tape[local.iter_1663.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1663.code_ptr)] : local.iter_1663.code_ptr :
      local.curr_1664.code == "]"
        ? local.iter_1663.tape[local.iter_1663.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1663.code_ptr)] : local.iter_1663.code_ptr
        : local.iter_1663.code_ptr)

    steps_taken = 1 + local.iter_1663.steps_taken
  }
}

locals {
  end_of_code_1665 = try(local.iter_1664.code_ptr >= length(var.code), true)

  curr_1665 = local.end_of_code_1665 ? null : {
    code = substr(var.code, local.iter_1664.code_ptr, 1)
    input = substr(var.code, local.iter_1664.code_ptr, 1) == "," ? substr(local.iter_1664.input, 0, 1) : null
  }

  iter_1665 = local.end_of_code_1665 ? local.iter_1664 : {
    input = (local.curr_1665.code == ","
      ? substr(local.iter_1664.input, 1, -1)
      : local.iter_1664.input)

    output = (local.curr_1665.code == "."
      ? "${local.iter_1664.output}${jsondecode(format("\"\\u%04x\"", local.iter_1664.tape[local.iter_1664.tape_ptr]))}"
      : local.iter_1664.output)
    
    tape = (
      local.curr_1665.code == "+"
        ? [for i, b in local.iter_1664.tape : (i == local.iter_1664.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1665.code == "-"
        ? [for i, b in local.iter_1664.tape : (i == local.iter_1664.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1665.code == ","
        ? [for i, b in local.iter_1664.tape : (i == local.iter_1664.tape_ptr ? local.ascii_lookup[local.curr_1665.input] : b)]
        : local.iter_1664.tape)

    tape_ptr = (
      local.curr_1665.code == "<"
        ? local.iter_1664.tape_ptr == 0 ? length(local.iter_1664.tape) - 1 : local.iter_1664.tape_ptr - 1 :
      local.curr_1665.code == ">"
        ? local.iter_1664.tape_ptr == length(local.iter_1664.tape) - 1 ? 0 : local.iter_1664.tape_ptr + 1
        : local.iter_1664.tape_ptr)

    code_ptr = 1 + (
      local.curr_1665.code == "["
        ? local.iter_1664.tape[local.iter_1664.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1664.code_ptr)] : local.iter_1664.code_ptr :
      local.curr_1665.code == "]"
        ? local.iter_1664.tape[local.iter_1664.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1664.code_ptr)] : local.iter_1664.code_ptr
        : local.iter_1664.code_ptr)

    steps_taken = 1 + local.iter_1664.steps_taken
  }
}

locals {
  end_of_code_1666 = try(local.iter_1665.code_ptr >= length(var.code), true)

  curr_1666 = local.end_of_code_1666 ? null : {
    code = substr(var.code, local.iter_1665.code_ptr, 1)
    input = substr(var.code, local.iter_1665.code_ptr, 1) == "," ? substr(local.iter_1665.input, 0, 1) : null
  }

  iter_1666 = local.end_of_code_1666 ? local.iter_1665 : {
    input = (local.curr_1666.code == ","
      ? substr(local.iter_1665.input, 1, -1)
      : local.iter_1665.input)

    output = (local.curr_1666.code == "."
      ? "${local.iter_1665.output}${jsondecode(format("\"\\u%04x\"", local.iter_1665.tape[local.iter_1665.tape_ptr]))}"
      : local.iter_1665.output)
    
    tape = (
      local.curr_1666.code == "+"
        ? [for i, b in local.iter_1665.tape : (i == local.iter_1665.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1666.code == "-"
        ? [for i, b in local.iter_1665.tape : (i == local.iter_1665.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1666.code == ","
        ? [for i, b in local.iter_1665.tape : (i == local.iter_1665.tape_ptr ? local.ascii_lookup[local.curr_1666.input] : b)]
        : local.iter_1665.tape)

    tape_ptr = (
      local.curr_1666.code == "<"
        ? local.iter_1665.tape_ptr == 0 ? length(local.iter_1665.tape) - 1 : local.iter_1665.tape_ptr - 1 :
      local.curr_1666.code == ">"
        ? local.iter_1665.tape_ptr == length(local.iter_1665.tape) - 1 ? 0 : local.iter_1665.tape_ptr + 1
        : local.iter_1665.tape_ptr)

    code_ptr = 1 + (
      local.curr_1666.code == "["
        ? local.iter_1665.tape[local.iter_1665.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1665.code_ptr)] : local.iter_1665.code_ptr :
      local.curr_1666.code == "]"
        ? local.iter_1665.tape[local.iter_1665.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1665.code_ptr)] : local.iter_1665.code_ptr
        : local.iter_1665.code_ptr)

    steps_taken = 1 + local.iter_1665.steps_taken
  }
}

locals {
  end_of_code_1667 = try(local.iter_1666.code_ptr >= length(var.code), true)

  curr_1667 = local.end_of_code_1667 ? null : {
    code = substr(var.code, local.iter_1666.code_ptr, 1)
    input = substr(var.code, local.iter_1666.code_ptr, 1) == "," ? substr(local.iter_1666.input, 0, 1) : null
  }

  iter_1667 = local.end_of_code_1667 ? local.iter_1666 : {
    input = (local.curr_1667.code == ","
      ? substr(local.iter_1666.input, 1, -1)
      : local.iter_1666.input)

    output = (local.curr_1667.code == "."
      ? "${local.iter_1666.output}${jsondecode(format("\"\\u%04x\"", local.iter_1666.tape[local.iter_1666.tape_ptr]))}"
      : local.iter_1666.output)
    
    tape = (
      local.curr_1667.code == "+"
        ? [for i, b in local.iter_1666.tape : (i == local.iter_1666.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1667.code == "-"
        ? [for i, b in local.iter_1666.tape : (i == local.iter_1666.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1667.code == ","
        ? [for i, b in local.iter_1666.tape : (i == local.iter_1666.tape_ptr ? local.ascii_lookup[local.curr_1667.input] : b)]
        : local.iter_1666.tape)

    tape_ptr = (
      local.curr_1667.code == "<"
        ? local.iter_1666.tape_ptr == 0 ? length(local.iter_1666.tape) - 1 : local.iter_1666.tape_ptr - 1 :
      local.curr_1667.code == ">"
        ? local.iter_1666.tape_ptr == length(local.iter_1666.tape) - 1 ? 0 : local.iter_1666.tape_ptr + 1
        : local.iter_1666.tape_ptr)

    code_ptr = 1 + (
      local.curr_1667.code == "["
        ? local.iter_1666.tape[local.iter_1666.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1666.code_ptr)] : local.iter_1666.code_ptr :
      local.curr_1667.code == "]"
        ? local.iter_1666.tape[local.iter_1666.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1666.code_ptr)] : local.iter_1666.code_ptr
        : local.iter_1666.code_ptr)

    steps_taken = 1 + local.iter_1666.steps_taken
  }
}

locals {
  end_of_code_1668 = try(local.iter_1667.code_ptr >= length(var.code), true)

  curr_1668 = local.end_of_code_1668 ? null : {
    code = substr(var.code, local.iter_1667.code_ptr, 1)
    input = substr(var.code, local.iter_1667.code_ptr, 1) == "," ? substr(local.iter_1667.input, 0, 1) : null
  }

  iter_1668 = local.end_of_code_1668 ? local.iter_1667 : {
    input = (local.curr_1668.code == ","
      ? substr(local.iter_1667.input, 1, -1)
      : local.iter_1667.input)

    output = (local.curr_1668.code == "."
      ? "${local.iter_1667.output}${jsondecode(format("\"\\u%04x\"", local.iter_1667.tape[local.iter_1667.tape_ptr]))}"
      : local.iter_1667.output)
    
    tape = (
      local.curr_1668.code == "+"
        ? [for i, b in local.iter_1667.tape : (i == local.iter_1667.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1668.code == "-"
        ? [for i, b in local.iter_1667.tape : (i == local.iter_1667.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1668.code == ","
        ? [for i, b in local.iter_1667.tape : (i == local.iter_1667.tape_ptr ? local.ascii_lookup[local.curr_1668.input] : b)]
        : local.iter_1667.tape)

    tape_ptr = (
      local.curr_1668.code == "<"
        ? local.iter_1667.tape_ptr == 0 ? length(local.iter_1667.tape) - 1 : local.iter_1667.tape_ptr - 1 :
      local.curr_1668.code == ">"
        ? local.iter_1667.tape_ptr == length(local.iter_1667.tape) - 1 ? 0 : local.iter_1667.tape_ptr + 1
        : local.iter_1667.tape_ptr)

    code_ptr = 1 + (
      local.curr_1668.code == "["
        ? local.iter_1667.tape[local.iter_1667.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1667.code_ptr)] : local.iter_1667.code_ptr :
      local.curr_1668.code == "]"
        ? local.iter_1667.tape[local.iter_1667.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1667.code_ptr)] : local.iter_1667.code_ptr
        : local.iter_1667.code_ptr)

    steps_taken = 1 + local.iter_1667.steps_taken
  }
}

locals {
  end_of_code_1669 = try(local.iter_1668.code_ptr >= length(var.code), true)

  curr_1669 = local.end_of_code_1669 ? null : {
    code = substr(var.code, local.iter_1668.code_ptr, 1)
    input = substr(var.code, local.iter_1668.code_ptr, 1) == "," ? substr(local.iter_1668.input, 0, 1) : null
  }

  iter_1669 = local.end_of_code_1669 ? local.iter_1668 : {
    input = (local.curr_1669.code == ","
      ? substr(local.iter_1668.input, 1, -1)
      : local.iter_1668.input)

    output = (local.curr_1669.code == "."
      ? "${local.iter_1668.output}${jsondecode(format("\"\\u%04x\"", local.iter_1668.tape[local.iter_1668.tape_ptr]))}"
      : local.iter_1668.output)
    
    tape = (
      local.curr_1669.code == "+"
        ? [for i, b in local.iter_1668.tape : (i == local.iter_1668.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1669.code == "-"
        ? [for i, b in local.iter_1668.tape : (i == local.iter_1668.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1669.code == ","
        ? [for i, b in local.iter_1668.tape : (i == local.iter_1668.tape_ptr ? local.ascii_lookup[local.curr_1669.input] : b)]
        : local.iter_1668.tape)

    tape_ptr = (
      local.curr_1669.code == "<"
        ? local.iter_1668.tape_ptr == 0 ? length(local.iter_1668.tape) - 1 : local.iter_1668.tape_ptr - 1 :
      local.curr_1669.code == ">"
        ? local.iter_1668.tape_ptr == length(local.iter_1668.tape) - 1 ? 0 : local.iter_1668.tape_ptr + 1
        : local.iter_1668.tape_ptr)

    code_ptr = 1 + (
      local.curr_1669.code == "["
        ? local.iter_1668.tape[local.iter_1668.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1668.code_ptr)] : local.iter_1668.code_ptr :
      local.curr_1669.code == "]"
        ? local.iter_1668.tape[local.iter_1668.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1668.code_ptr)] : local.iter_1668.code_ptr
        : local.iter_1668.code_ptr)

    steps_taken = 1 + local.iter_1668.steps_taken
  }
}

locals {
  end_of_code_1670 = try(local.iter_1669.code_ptr >= length(var.code), true)

  curr_1670 = local.end_of_code_1670 ? null : {
    code = substr(var.code, local.iter_1669.code_ptr, 1)
    input = substr(var.code, local.iter_1669.code_ptr, 1) == "," ? substr(local.iter_1669.input, 0, 1) : null
  }

  iter_1670 = local.end_of_code_1670 ? local.iter_1669 : {
    input = (local.curr_1670.code == ","
      ? substr(local.iter_1669.input, 1, -1)
      : local.iter_1669.input)

    output = (local.curr_1670.code == "."
      ? "${local.iter_1669.output}${jsondecode(format("\"\\u%04x\"", local.iter_1669.tape[local.iter_1669.tape_ptr]))}"
      : local.iter_1669.output)
    
    tape = (
      local.curr_1670.code == "+"
        ? [for i, b in local.iter_1669.tape : (i == local.iter_1669.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1670.code == "-"
        ? [for i, b in local.iter_1669.tape : (i == local.iter_1669.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1670.code == ","
        ? [for i, b in local.iter_1669.tape : (i == local.iter_1669.tape_ptr ? local.ascii_lookup[local.curr_1670.input] : b)]
        : local.iter_1669.tape)

    tape_ptr = (
      local.curr_1670.code == "<"
        ? local.iter_1669.tape_ptr == 0 ? length(local.iter_1669.tape) - 1 : local.iter_1669.tape_ptr - 1 :
      local.curr_1670.code == ">"
        ? local.iter_1669.tape_ptr == length(local.iter_1669.tape) - 1 ? 0 : local.iter_1669.tape_ptr + 1
        : local.iter_1669.tape_ptr)

    code_ptr = 1 + (
      local.curr_1670.code == "["
        ? local.iter_1669.tape[local.iter_1669.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1669.code_ptr)] : local.iter_1669.code_ptr :
      local.curr_1670.code == "]"
        ? local.iter_1669.tape[local.iter_1669.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1669.code_ptr)] : local.iter_1669.code_ptr
        : local.iter_1669.code_ptr)

    steps_taken = 1 + local.iter_1669.steps_taken
  }
}

locals {
  end_of_code_1671 = try(local.iter_1670.code_ptr >= length(var.code), true)

  curr_1671 = local.end_of_code_1671 ? null : {
    code = substr(var.code, local.iter_1670.code_ptr, 1)
    input = substr(var.code, local.iter_1670.code_ptr, 1) == "," ? substr(local.iter_1670.input, 0, 1) : null
  }

  iter_1671 = local.end_of_code_1671 ? local.iter_1670 : {
    input = (local.curr_1671.code == ","
      ? substr(local.iter_1670.input, 1, -1)
      : local.iter_1670.input)

    output = (local.curr_1671.code == "."
      ? "${local.iter_1670.output}${jsondecode(format("\"\\u%04x\"", local.iter_1670.tape[local.iter_1670.tape_ptr]))}"
      : local.iter_1670.output)
    
    tape = (
      local.curr_1671.code == "+"
        ? [for i, b in local.iter_1670.tape : (i == local.iter_1670.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1671.code == "-"
        ? [for i, b in local.iter_1670.tape : (i == local.iter_1670.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1671.code == ","
        ? [for i, b in local.iter_1670.tape : (i == local.iter_1670.tape_ptr ? local.ascii_lookup[local.curr_1671.input] : b)]
        : local.iter_1670.tape)

    tape_ptr = (
      local.curr_1671.code == "<"
        ? local.iter_1670.tape_ptr == 0 ? length(local.iter_1670.tape) - 1 : local.iter_1670.tape_ptr - 1 :
      local.curr_1671.code == ">"
        ? local.iter_1670.tape_ptr == length(local.iter_1670.tape) - 1 ? 0 : local.iter_1670.tape_ptr + 1
        : local.iter_1670.tape_ptr)

    code_ptr = 1 + (
      local.curr_1671.code == "["
        ? local.iter_1670.tape[local.iter_1670.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1670.code_ptr)] : local.iter_1670.code_ptr :
      local.curr_1671.code == "]"
        ? local.iter_1670.tape[local.iter_1670.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1670.code_ptr)] : local.iter_1670.code_ptr
        : local.iter_1670.code_ptr)

    steps_taken = 1 + local.iter_1670.steps_taken
  }
}

locals {
  end_of_code_1672 = try(local.iter_1671.code_ptr >= length(var.code), true)

  curr_1672 = local.end_of_code_1672 ? null : {
    code = substr(var.code, local.iter_1671.code_ptr, 1)
    input = substr(var.code, local.iter_1671.code_ptr, 1) == "," ? substr(local.iter_1671.input, 0, 1) : null
  }

  iter_1672 = local.end_of_code_1672 ? local.iter_1671 : {
    input = (local.curr_1672.code == ","
      ? substr(local.iter_1671.input, 1, -1)
      : local.iter_1671.input)

    output = (local.curr_1672.code == "."
      ? "${local.iter_1671.output}${jsondecode(format("\"\\u%04x\"", local.iter_1671.tape[local.iter_1671.tape_ptr]))}"
      : local.iter_1671.output)
    
    tape = (
      local.curr_1672.code == "+"
        ? [for i, b in local.iter_1671.tape : (i == local.iter_1671.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1672.code == "-"
        ? [for i, b in local.iter_1671.tape : (i == local.iter_1671.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1672.code == ","
        ? [for i, b in local.iter_1671.tape : (i == local.iter_1671.tape_ptr ? local.ascii_lookup[local.curr_1672.input] : b)]
        : local.iter_1671.tape)

    tape_ptr = (
      local.curr_1672.code == "<"
        ? local.iter_1671.tape_ptr == 0 ? length(local.iter_1671.tape) - 1 : local.iter_1671.tape_ptr - 1 :
      local.curr_1672.code == ">"
        ? local.iter_1671.tape_ptr == length(local.iter_1671.tape) - 1 ? 0 : local.iter_1671.tape_ptr + 1
        : local.iter_1671.tape_ptr)

    code_ptr = 1 + (
      local.curr_1672.code == "["
        ? local.iter_1671.tape[local.iter_1671.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1671.code_ptr)] : local.iter_1671.code_ptr :
      local.curr_1672.code == "]"
        ? local.iter_1671.tape[local.iter_1671.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1671.code_ptr)] : local.iter_1671.code_ptr
        : local.iter_1671.code_ptr)

    steps_taken = 1 + local.iter_1671.steps_taken
  }
}

locals {
  end_of_code_1673 = try(local.iter_1672.code_ptr >= length(var.code), true)

  curr_1673 = local.end_of_code_1673 ? null : {
    code = substr(var.code, local.iter_1672.code_ptr, 1)
    input = substr(var.code, local.iter_1672.code_ptr, 1) == "," ? substr(local.iter_1672.input, 0, 1) : null
  }

  iter_1673 = local.end_of_code_1673 ? local.iter_1672 : {
    input = (local.curr_1673.code == ","
      ? substr(local.iter_1672.input, 1, -1)
      : local.iter_1672.input)

    output = (local.curr_1673.code == "."
      ? "${local.iter_1672.output}${jsondecode(format("\"\\u%04x\"", local.iter_1672.tape[local.iter_1672.tape_ptr]))}"
      : local.iter_1672.output)
    
    tape = (
      local.curr_1673.code == "+"
        ? [for i, b in local.iter_1672.tape : (i == local.iter_1672.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1673.code == "-"
        ? [for i, b in local.iter_1672.tape : (i == local.iter_1672.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1673.code == ","
        ? [for i, b in local.iter_1672.tape : (i == local.iter_1672.tape_ptr ? local.ascii_lookup[local.curr_1673.input] : b)]
        : local.iter_1672.tape)

    tape_ptr = (
      local.curr_1673.code == "<"
        ? local.iter_1672.tape_ptr == 0 ? length(local.iter_1672.tape) - 1 : local.iter_1672.tape_ptr - 1 :
      local.curr_1673.code == ">"
        ? local.iter_1672.tape_ptr == length(local.iter_1672.tape) - 1 ? 0 : local.iter_1672.tape_ptr + 1
        : local.iter_1672.tape_ptr)

    code_ptr = 1 + (
      local.curr_1673.code == "["
        ? local.iter_1672.tape[local.iter_1672.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1672.code_ptr)] : local.iter_1672.code_ptr :
      local.curr_1673.code == "]"
        ? local.iter_1672.tape[local.iter_1672.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1672.code_ptr)] : local.iter_1672.code_ptr
        : local.iter_1672.code_ptr)

    steps_taken = 1 + local.iter_1672.steps_taken
  }
}

locals {
  end_of_code_1674 = try(local.iter_1673.code_ptr >= length(var.code), true)

  curr_1674 = local.end_of_code_1674 ? null : {
    code = substr(var.code, local.iter_1673.code_ptr, 1)
    input = substr(var.code, local.iter_1673.code_ptr, 1) == "," ? substr(local.iter_1673.input, 0, 1) : null
  }

  iter_1674 = local.end_of_code_1674 ? local.iter_1673 : {
    input = (local.curr_1674.code == ","
      ? substr(local.iter_1673.input, 1, -1)
      : local.iter_1673.input)

    output = (local.curr_1674.code == "."
      ? "${local.iter_1673.output}${jsondecode(format("\"\\u%04x\"", local.iter_1673.tape[local.iter_1673.tape_ptr]))}"
      : local.iter_1673.output)
    
    tape = (
      local.curr_1674.code == "+"
        ? [for i, b in local.iter_1673.tape : (i == local.iter_1673.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1674.code == "-"
        ? [for i, b in local.iter_1673.tape : (i == local.iter_1673.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1674.code == ","
        ? [for i, b in local.iter_1673.tape : (i == local.iter_1673.tape_ptr ? local.ascii_lookup[local.curr_1674.input] : b)]
        : local.iter_1673.tape)

    tape_ptr = (
      local.curr_1674.code == "<"
        ? local.iter_1673.tape_ptr == 0 ? length(local.iter_1673.tape) - 1 : local.iter_1673.tape_ptr - 1 :
      local.curr_1674.code == ">"
        ? local.iter_1673.tape_ptr == length(local.iter_1673.tape) - 1 ? 0 : local.iter_1673.tape_ptr + 1
        : local.iter_1673.tape_ptr)

    code_ptr = 1 + (
      local.curr_1674.code == "["
        ? local.iter_1673.tape[local.iter_1673.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1673.code_ptr)] : local.iter_1673.code_ptr :
      local.curr_1674.code == "]"
        ? local.iter_1673.tape[local.iter_1673.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1673.code_ptr)] : local.iter_1673.code_ptr
        : local.iter_1673.code_ptr)

    steps_taken = 1 + local.iter_1673.steps_taken
  }
}

locals {
  end_of_code_1675 = try(local.iter_1674.code_ptr >= length(var.code), true)

  curr_1675 = local.end_of_code_1675 ? null : {
    code = substr(var.code, local.iter_1674.code_ptr, 1)
    input = substr(var.code, local.iter_1674.code_ptr, 1) == "," ? substr(local.iter_1674.input, 0, 1) : null
  }

  iter_1675 = local.end_of_code_1675 ? local.iter_1674 : {
    input = (local.curr_1675.code == ","
      ? substr(local.iter_1674.input, 1, -1)
      : local.iter_1674.input)

    output = (local.curr_1675.code == "."
      ? "${local.iter_1674.output}${jsondecode(format("\"\\u%04x\"", local.iter_1674.tape[local.iter_1674.tape_ptr]))}"
      : local.iter_1674.output)
    
    tape = (
      local.curr_1675.code == "+"
        ? [for i, b in local.iter_1674.tape : (i == local.iter_1674.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1675.code == "-"
        ? [for i, b in local.iter_1674.tape : (i == local.iter_1674.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1675.code == ","
        ? [for i, b in local.iter_1674.tape : (i == local.iter_1674.tape_ptr ? local.ascii_lookup[local.curr_1675.input] : b)]
        : local.iter_1674.tape)

    tape_ptr = (
      local.curr_1675.code == "<"
        ? local.iter_1674.tape_ptr == 0 ? length(local.iter_1674.tape) - 1 : local.iter_1674.tape_ptr - 1 :
      local.curr_1675.code == ">"
        ? local.iter_1674.tape_ptr == length(local.iter_1674.tape) - 1 ? 0 : local.iter_1674.tape_ptr + 1
        : local.iter_1674.tape_ptr)

    code_ptr = 1 + (
      local.curr_1675.code == "["
        ? local.iter_1674.tape[local.iter_1674.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1674.code_ptr)] : local.iter_1674.code_ptr :
      local.curr_1675.code == "]"
        ? local.iter_1674.tape[local.iter_1674.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1674.code_ptr)] : local.iter_1674.code_ptr
        : local.iter_1674.code_ptr)

    steps_taken = 1 + local.iter_1674.steps_taken
  }
}

locals {
  end_of_code_1676 = try(local.iter_1675.code_ptr >= length(var.code), true)

  curr_1676 = local.end_of_code_1676 ? null : {
    code = substr(var.code, local.iter_1675.code_ptr, 1)
    input = substr(var.code, local.iter_1675.code_ptr, 1) == "," ? substr(local.iter_1675.input, 0, 1) : null
  }

  iter_1676 = local.end_of_code_1676 ? local.iter_1675 : {
    input = (local.curr_1676.code == ","
      ? substr(local.iter_1675.input, 1, -1)
      : local.iter_1675.input)

    output = (local.curr_1676.code == "."
      ? "${local.iter_1675.output}${jsondecode(format("\"\\u%04x\"", local.iter_1675.tape[local.iter_1675.tape_ptr]))}"
      : local.iter_1675.output)
    
    tape = (
      local.curr_1676.code == "+"
        ? [for i, b in local.iter_1675.tape : (i == local.iter_1675.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1676.code == "-"
        ? [for i, b in local.iter_1675.tape : (i == local.iter_1675.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1676.code == ","
        ? [for i, b in local.iter_1675.tape : (i == local.iter_1675.tape_ptr ? local.ascii_lookup[local.curr_1676.input] : b)]
        : local.iter_1675.tape)

    tape_ptr = (
      local.curr_1676.code == "<"
        ? local.iter_1675.tape_ptr == 0 ? length(local.iter_1675.tape) - 1 : local.iter_1675.tape_ptr - 1 :
      local.curr_1676.code == ">"
        ? local.iter_1675.tape_ptr == length(local.iter_1675.tape) - 1 ? 0 : local.iter_1675.tape_ptr + 1
        : local.iter_1675.tape_ptr)

    code_ptr = 1 + (
      local.curr_1676.code == "["
        ? local.iter_1675.tape[local.iter_1675.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1675.code_ptr)] : local.iter_1675.code_ptr :
      local.curr_1676.code == "]"
        ? local.iter_1675.tape[local.iter_1675.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1675.code_ptr)] : local.iter_1675.code_ptr
        : local.iter_1675.code_ptr)

    steps_taken = 1 + local.iter_1675.steps_taken
  }
}

locals {
  end_of_code_1677 = try(local.iter_1676.code_ptr >= length(var.code), true)

  curr_1677 = local.end_of_code_1677 ? null : {
    code = substr(var.code, local.iter_1676.code_ptr, 1)
    input = substr(var.code, local.iter_1676.code_ptr, 1) == "," ? substr(local.iter_1676.input, 0, 1) : null
  }

  iter_1677 = local.end_of_code_1677 ? local.iter_1676 : {
    input = (local.curr_1677.code == ","
      ? substr(local.iter_1676.input, 1, -1)
      : local.iter_1676.input)

    output = (local.curr_1677.code == "."
      ? "${local.iter_1676.output}${jsondecode(format("\"\\u%04x\"", local.iter_1676.tape[local.iter_1676.tape_ptr]))}"
      : local.iter_1676.output)
    
    tape = (
      local.curr_1677.code == "+"
        ? [for i, b in local.iter_1676.tape : (i == local.iter_1676.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1677.code == "-"
        ? [for i, b in local.iter_1676.tape : (i == local.iter_1676.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1677.code == ","
        ? [for i, b in local.iter_1676.tape : (i == local.iter_1676.tape_ptr ? local.ascii_lookup[local.curr_1677.input] : b)]
        : local.iter_1676.tape)

    tape_ptr = (
      local.curr_1677.code == "<"
        ? local.iter_1676.tape_ptr == 0 ? length(local.iter_1676.tape) - 1 : local.iter_1676.tape_ptr - 1 :
      local.curr_1677.code == ">"
        ? local.iter_1676.tape_ptr == length(local.iter_1676.tape) - 1 ? 0 : local.iter_1676.tape_ptr + 1
        : local.iter_1676.tape_ptr)

    code_ptr = 1 + (
      local.curr_1677.code == "["
        ? local.iter_1676.tape[local.iter_1676.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1676.code_ptr)] : local.iter_1676.code_ptr :
      local.curr_1677.code == "]"
        ? local.iter_1676.tape[local.iter_1676.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1676.code_ptr)] : local.iter_1676.code_ptr
        : local.iter_1676.code_ptr)

    steps_taken = 1 + local.iter_1676.steps_taken
  }
}

locals {
  end_of_code_1678 = try(local.iter_1677.code_ptr >= length(var.code), true)

  curr_1678 = local.end_of_code_1678 ? null : {
    code = substr(var.code, local.iter_1677.code_ptr, 1)
    input = substr(var.code, local.iter_1677.code_ptr, 1) == "," ? substr(local.iter_1677.input, 0, 1) : null
  }

  iter_1678 = local.end_of_code_1678 ? local.iter_1677 : {
    input = (local.curr_1678.code == ","
      ? substr(local.iter_1677.input, 1, -1)
      : local.iter_1677.input)

    output = (local.curr_1678.code == "."
      ? "${local.iter_1677.output}${jsondecode(format("\"\\u%04x\"", local.iter_1677.tape[local.iter_1677.tape_ptr]))}"
      : local.iter_1677.output)
    
    tape = (
      local.curr_1678.code == "+"
        ? [for i, b in local.iter_1677.tape : (i == local.iter_1677.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1678.code == "-"
        ? [for i, b in local.iter_1677.tape : (i == local.iter_1677.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1678.code == ","
        ? [for i, b in local.iter_1677.tape : (i == local.iter_1677.tape_ptr ? local.ascii_lookup[local.curr_1678.input] : b)]
        : local.iter_1677.tape)

    tape_ptr = (
      local.curr_1678.code == "<"
        ? local.iter_1677.tape_ptr == 0 ? length(local.iter_1677.tape) - 1 : local.iter_1677.tape_ptr - 1 :
      local.curr_1678.code == ">"
        ? local.iter_1677.tape_ptr == length(local.iter_1677.tape) - 1 ? 0 : local.iter_1677.tape_ptr + 1
        : local.iter_1677.tape_ptr)

    code_ptr = 1 + (
      local.curr_1678.code == "["
        ? local.iter_1677.tape[local.iter_1677.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1677.code_ptr)] : local.iter_1677.code_ptr :
      local.curr_1678.code == "]"
        ? local.iter_1677.tape[local.iter_1677.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1677.code_ptr)] : local.iter_1677.code_ptr
        : local.iter_1677.code_ptr)

    steps_taken = 1 + local.iter_1677.steps_taken
  }
}

locals {
  end_of_code_1679 = try(local.iter_1678.code_ptr >= length(var.code), true)

  curr_1679 = local.end_of_code_1679 ? null : {
    code = substr(var.code, local.iter_1678.code_ptr, 1)
    input = substr(var.code, local.iter_1678.code_ptr, 1) == "," ? substr(local.iter_1678.input, 0, 1) : null
  }

  iter_1679 = local.end_of_code_1679 ? local.iter_1678 : {
    input = (local.curr_1679.code == ","
      ? substr(local.iter_1678.input, 1, -1)
      : local.iter_1678.input)

    output = (local.curr_1679.code == "."
      ? "${local.iter_1678.output}${jsondecode(format("\"\\u%04x\"", local.iter_1678.tape[local.iter_1678.tape_ptr]))}"
      : local.iter_1678.output)
    
    tape = (
      local.curr_1679.code == "+"
        ? [for i, b in local.iter_1678.tape : (i == local.iter_1678.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1679.code == "-"
        ? [for i, b in local.iter_1678.tape : (i == local.iter_1678.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1679.code == ","
        ? [for i, b in local.iter_1678.tape : (i == local.iter_1678.tape_ptr ? local.ascii_lookup[local.curr_1679.input] : b)]
        : local.iter_1678.tape)

    tape_ptr = (
      local.curr_1679.code == "<"
        ? local.iter_1678.tape_ptr == 0 ? length(local.iter_1678.tape) - 1 : local.iter_1678.tape_ptr - 1 :
      local.curr_1679.code == ">"
        ? local.iter_1678.tape_ptr == length(local.iter_1678.tape) - 1 ? 0 : local.iter_1678.tape_ptr + 1
        : local.iter_1678.tape_ptr)

    code_ptr = 1 + (
      local.curr_1679.code == "["
        ? local.iter_1678.tape[local.iter_1678.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1678.code_ptr)] : local.iter_1678.code_ptr :
      local.curr_1679.code == "]"
        ? local.iter_1678.tape[local.iter_1678.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1678.code_ptr)] : local.iter_1678.code_ptr
        : local.iter_1678.code_ptr)

    steps_taken = 1 + local.iter_1678.steps_taken
  }
}

locals {
  end_of_code_1680 = try(local.iter_1679.code_ptr >= length(var.code), true)

  curr_1680 = local.end_of_code_1680 ? null : {
    code = substr(var.code, local.iter_1679.code_ptr, 1)
    input = substr(var.code, local.iter_1679.code_ptr, 1) == "," ? substr(local.iter_1679.input, 0, 1) : null
  }

  iter_1680 = local.end_of_code_1680 ? local.iter_1679 : {
    input = (local.curr_1680.code == ","
      ? substr(local.iter_1679.input, 1, -1)
      : local.iter_1679.input)

    output = (local.curr_1680.code == "."
      ? "${local.iter_1679.output}${jsondecode(format("\"\\u%04x\"", local.iter_1679.tape[local.iter_1679.tape_ptr]))}"
      : local.iter_1679.output)
    
    tape = (
      local.curr_1680.code == "+"
        ? [for i, b in local.iter_1679.tape : (i == local.iter_1679.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1680.code == "-"
        ? [for i, b in local.iter_1679.tape : (i == local.iter_1679.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1680.code == ","
        ? [for i, b in local.iter_1679.tape : (i == local.iter_1679.tape_ptr ? local.ascii_lookup[local.curr_1680.input] : b)]
        : local.iter_1679.tape)

    tape_ptr = (
      local.curr_1680.code == "<"
        ? local.iter_1679.tape_ptr == 0 ? length(local.iter_1679.tape) - 1 : local.iter_1679.tape_ptr - 1 :
      local.curr_1680.code == ">"
        ? local.iter_1679.tape_ptr == length(local.iter_1679.tape) - 1 ? 0 : local.iter_1679.tape_ptr + 1
        : local.iter_1679.tape_ptr)

    code_ptr = 1 + (
      local.curr_1680.code == "["
        ? local.iter_1679.tape[local.iter_1679.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1679.code_ptr)] : local.iter_1679.code_ptr :
      local.curr_1680.code == "]"
        ? local.iter_1679.tape[local.iter_1679.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1679.code_ptr)] : local.iter_1679.code_ptr
        : local.iter_1679.code_ptr)

    steps_taken = 1 + local.iter_1679.steps_taken
  }
}

locals {
  end_of_code_1681 = try(local.iter_1680.code_ptr >= length(var.code), true)

  curr_1681 = local.end_of_code_1681 ? null : {
    code = substr(var.code, local.iter_1680.code_ptr, 1)
    input = substr(var.code, local.iter_1680.code_ptr, 1) == "," ? substr(local.iter_1680.input, 0, 1) : null
  }

  iter_1681 = local.end_of_code_1681 ? local.iter_1680 : {
    input = (local.curr_1681.code == ","
      ? substr(local.iter_1680.input, 1, -1)
      : local.iter_1680.input)

    output = (local.curr_1681.code == "."
      ? "${local.iter_1680.output}${jsondecode(format("\"\\u%04x\"", local.iter_1680.tape[local.iter_1680.tape_ptr]))}"
      : local.iter_1680.output)
    
    tape = (
      local.curr_1681.code == "+"
        ? [for i, b in local.iter_1680.tape : (i == local.iter_1680.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1681.code == "-"
        ? [for i, b in local.iter_1680.tape : (i == local.iter_1680.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1681.code == ","
        ? [for i, b in local.iter_1680.tape : (i == local.iter_1680.tape_ptr ? local.ascii_lookup[local.curr_1681.input] : b)]
        : local.iter_1680.tape)

    tape_ptr = (
      local.curr_1681.code == "<"
        ? local.iter_1680.tape_ptr == 0 ? length(local.iter_1680.tape) - 1 : local.iter_1680.tape_ptr - 1 :
      local.curr_1681.code == ">"
        ? local.iter_1680.tape_ptr == length(local.iter_1680.tape) - 1 ? 0 : local.iter_1680.tape_ptr + 1
        : local.iter_1680.tape_ptr)

    code_ptr = 1 + (
      local.curr_1681.code == "["
        ? local.iter_1680.tape[local.iter_1680.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1680.code_ptr)] : local.iter_1680.code_ptr :
      local.curr_1681.code == "]"
        ? local.iter_1680.tape[local.iter_1680.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1680.code_ptr)] : local.iter_1680.code_ptr
        : local.iter_1680.code_ptr)

    steps_taken = 1 + local.iter_1680.steps_taken
  }
}

locals {
  end_of_code_1682 = try(local.iter_1681.code_ptr >= length(var.code), true)

  curr_1682 = local.end_of_code_1682 ? null : {
    code = substr(var.code, local.iter_1681.code_ptr, 1)
    input = substr(var.code, local.iter_1681.code_ptr, 1) == "," ? substr(local.iter_1681.input, 0, 1) : null
  }

  iter_1682 = local.end_of_code_1682 ? local.iter_1681 : {
    input = (local.curr_1682.code == ","
      ? substr(local.iter_1681.input, 1, -1)
      : local.iter_1681.input)

    output = (local.curr_1682.code == "."
      ? "${local.iter_1681.output}${jsondecode(format("\"\\u%04x\"", local.iter_1681.tape[local.iter_1681.tape_ptr]))}"
      : local.iter_1681.output)
    
    tape = (
      local.curr_1682.code == "+"
        ? [for i, b in local.iter_1681.tape : (i == local.iter_1681.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1682.code == "-"
        ? [for i, b in local.iter_1681.tape : (i == local.iter_1681.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1682.code == ","
        ? [for i, b in local.iter_1681.tape : (i == local.iter_1681.tape_ptr ? local.ascii_lookup[local.curr_1682.input] : b)]
        : local.iter_1681.tape)

    tape_ptr = (
      local.curr_1682.code == "<"
        ? local.iter_1681.tape_ptr == 0 ? length(local.iter_1681.tape) - 1 : local.iter_1681.tape_ptr - 1 :
      local.curr_1682.code == ">"
        ? local.iter_1681.tape_ptr == length(local.iter_1681.tape) - 1 ? 0 : local.iter_1681.tape_ptr + 1
        : local.iter_1681.tape_ptr)

    code_ptr = 1 + (
      local.curr_1682.code == "["
        ? local.iter_1681.tape[local.iter_1681.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1681.code_ptr)] : local.iter_1681.code_ptr :
      local.curr_1682.code == "]"
        ? local.iter_1681.tape[local.iter_1681.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1681.code_ptr)] : local.iter_1681.code_ptr
        : local.iter_1681.code_ptr)

    steps_taken = 1 + local.iter_1681.steps_taken
  }
}

locals {
  end_of_code_1683 = try(local.iter_1682.code_ptr >= length(var.code), true)

  curr_1683 = local.end_of_code_1683 ? null : {
    code = substr(var.code, local.iter_1682.code_ptr, 1)
    input = substr(var.code, local.iter_1682.code_ptr, 1) == "," ? substr(local.iter_1682.input, 0, 1) : null
  }

  iter_1683 = local.end_of_code_1683 ? local.iter_1682 : {
    input = (local.curr_1683.code == ","
      ? substr(local.iter_1682.input, 1, -1)
      : local.iter_1682.input)

    output = (local.curr_1683.code == "."
      ? "${local.iter_1682.output}${jsondecode(format("\"\\u%04x\"", local.iter_1682.tape[local.iter_1682.tape_ptr]))}"
      : local.iter_1682.output)
    
    tape = (
      local.curr_1683.code == "+"
        ? [for i, b in local.iter_1682.tape : (i == local.iter_1682.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1683.code == "-"
        ? [for i, b in local.iter_1682.tape : (i == local.iter_1682.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1683.code == ","
        ? [for i, b in local.iter_1682.tape : (i == local.iter_1682.tape_ptr ? local.ascii_lookup[local.curr_1683.input] : b)]
        : local.iter_1682.tape)

    tape_ptr = (
      local.curr_1683.code == "<"
        ? local.iter_1682.tape_ptr == 0 ? length(local.iter_1682.tape) - 1 : local.iter_1682.tape_ptr - 1 :
      local.curr_1683.code == ">"
        ? local.iter_1682.tape_ptr == length(local.iter_1682.tape) - 1 ? 0 : local.iter_1682.tape_ptr + 1
        : local.iter_1682.tape_ptr)

    code_ptr = 1 + (
      local.curr_1683.code == "["
        ? local.iter_1682.tape[local.iter_1682.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1682.code_ptr)] : local.iter_1682.code_ptr :
      local.curr_1683.code == "]"
        ? local.iter_1682.tape[local.iter_1682.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1682.code_ptr)] : local.iter_1682.code_ptr
        : local.iter_1682.code_ptr)

    steps_taken = 1 + local.iter_1682.steps_taken
  }
}

locals {
  end_of_code_1684 = try(local.iter_1683.code_ptr >= length(var.code), true)

  curr_1684 = local.end_of_code_1684 ? null : {
    code = substr(var.code, local.iter_1683.code_ptr, 1)
    input = substr(var.code, local.iter_1683.code_ptr, 1) == "," ? substr(local.iter_1683.input, 0, 1) : null
  }

  iter_1684 = local.end_of_code_1684 ? local.iter_1683 : {
    input = (local.curr_1684.code == ","
      ? substr(local.iter_1683.input, 1, -1)
      : local.iter_1683.input)

    output = (local.curr_1684.code == "."
      ? "${local.iter_1683.output}${jsondecode(format("\"\\u%04x\"", local.iter_1683.tape[local.iter_1683.tape_ptr]))}"
      : local.iter_1683.output)
    
    tape = (
      local.curr_1684.code == "+"
        ? [for i, b in local.iter_1683.tape : (i == local.iter_1683.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1684.code == "-"
        ? [for i, b in local.iter_1683.tape : (i == local.iter_1683.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1684.code == ","
        ? [for i, b in local.iter_1683.tape : (i == local.iter_1683.tape_ptr ? local.ascii_lookup[local.curr_1684.input] : b)]
        : local.iter_1683.tape)

    tape_ptr = (
      local.curr_1684.code == "<"
        ? local.iter_1683.tape_ptr == 0 ? length(local.iter_1683.tape) - 1 : local.iter_1683.tape_ptr - 1 :
      local.curr_1684.code == ">"
        ? local.iter_1683.tape_ptr == length(local.iter_1683.tape) - 1 ? 0 : local.iter_1683.tape_ptr + 1
        : local.iter_1683.tape_ptr)

    code_ptr = 1 + (
      local.curr_1684.code == "["
        ? local.iter_1683.tape[local.iter_1683.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1683.code_ptr)] : local.iter_1683.code_ptr :
      local.curr_1684.code == "]"
        ? local.iter_1683.tape[local.iter_1683.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1683.code_ptr)] : local.iter_1683.code_ptr
        : local.iter_1683.code_ptr)

    steps_taken = 1 + local.iter_1683.steps_taken
  }
}

locals {
  end_of_code_1685 = try(local.iter_1684.code_ptr >= length(var.code), true)

  curr_1685 = local.end_of_code_1685 ? null : {
    code = substr(var.code, local.iter_1684.code_ptr, 1)
    input = substr(var.code, local.iter_1684.code_ptr, 1) == "," ? substr(local.iter_1684.input, 0, 1) : null
  }

  iter_1685 = local.end_of_code_1685 ? local.iter_1684 : {
    input = (local.curr_1685.code == ","
      ? substr(local.iter_1684.input, 1, -1)
      : local.iter_1684.input)

    output = (local.curr_1685.code == "."
      ? "${local.iter_1684.output}${jsondecode(format("\"\\u%04x\"", local.iter_1684.tape[local.iter_1684.tape_ptr]))}"
      : local.iter_1684.output)
    
    tape = (
      local.curr_1685.code == "+"
        ? [for i, b in local.iter_1684.tape : (i == local.iter_1684.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1685.code == "-"
        ? [for i, b in local.iter_1684.tape : (i == local.iter_1684.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1685.code == ","
        ? [for i, b in local.iter_1684.tape : (i == local.iter_1684.tape_ptr ? local.ascii_lookup[local.curr_1685.input] : b)]
        : local.iter_1684.tape)

    tape_ptr = (
      local.curr_1685.code == "<"
        ? local.iter_1684.tape_ptr == 0 ? length(local.iter_1684.tape) - 1 : local.iter_1684.tape_ptr - 1 :
      local.curr_1685.code == ">"
        ? local.iter_1684.tape_ptr == length(local.iter_1684.tape) - 1 ? 0 : local.iter_1684.tape_ptr + 1
        : local.iter_1684.tape_ptr)

    code_ptr = 1 + (
      local.curr_1685.code == "["
        ? local.iter_1684.tape[local.iter_1684.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1684.code_ptr)] : local.iter_1684.code_ptr :
      local.curr_1685.code == "]"
        ? local.iter_1684.tape[local.iter_1684.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1684.code_ptr)] : local.iter_1684.code_ptr
        : local.iter_1684.code_ptr)

    steps_taken = 1 + local.iter_1684.steps_taken
  }
}

locals {
  end_of_code_1686 = try(local.iter_1685.code_ptr >= length(var.code), true)

  curr_1686 = local.end_of_code_1686 ? null : {
    code = substr(var.code, local.iter_1685.code_ptr, 1)
    input = substr(var.code, local.iter_1685.code_ptr, 1) == "," ? substr(local.iter_1685.input, 0, 1) : null
  }

  iter_1686 = local.end_of_code_1686 ? local.iter_1685 : {
    input = (local.curr_1686.code == ","
      ? substr(local.iter_1685.input, 1, -1)
      : local.iter_1685.input)

    output = (local.curr_1686.code == "."
      ? "${local.iter_1685.output}${jsondecode(format("\"\\u%04x\"", local.iter_1685.tape[local.iter_1685.tape_ptr]))}"
      : local.iter_1685.output)
    
    tape = (
      local.curr_1686.code == "+"
        ? [for i, b in local.iter_1685.tape : (i == local.iter_1685.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1686.code == "-"
        ? [for i, b in local.iter_1685.tape : (i == local.iter_1685.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1686.code == ","
        ? [for i, b in local.iter_1685.tape : (i == local.iter_1685.tape_ptr ? local.ascii_lookup[local.curr_1686.input] : b)]
        : local.iter_1685.tape)

    tape_ptr = (
      local.curr_1686.code == "<"
        ? local.iter_1685.tape_ptr == 0 ? length(local.iter_1685.tape) - 1 : local.iter_1685.tape_ptr - 1 :
      local.curr_1686.code == ">"
        ? local.iter_1685.tape_ptr == length(local.iter_1685.tape) - 1 ? 0 : local.iter_1685.tape_ptr + 1
        : local.iter_1685.tape_ptr)

    code_ptr = 1 + (
      local.curr_1686.code == "["
        ? local.iter_1685.tape[local.iter_1685.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1685.code_ptr)] : local.iter_1685.code_ptr :
      local.curr_1686.code == "]"
        ? local.iter_1685.tape[local.iter_1685.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1685.code_ptr)] : local.iter_1685.code_ptr
        : local.iter_1685.code_ptr)

    steps_taken = 1 + local.iter_1685.steps_taken
  }
}

locals {
  end_of_code_1687 = try(local.iter_1686.code_ptr >= length(var.code), true)

  curr_1687 = local.end_of_code_1687 ? null : {
    code = substr(var.code, local.iter_1686.code_ptr, 1)
    input = substr(var.code, local.iter_1686.code_ptr, 1) == "," ? substr(local.iter_1686.input, 0, 1) : null
  }

  iter_1687 = local.end_of_code_1687 ? local.iter_1686 : {
    input = (local.curr_1687.code == ","
      ? substr(local.iter_1686.input, 1, -1)
      : local.iter_1686.input)

    output = (local.curr_1687.code == "."
      ? "${local.iter_1686.output}${jsondecode(format("\"\\u%04x\"", local.iter_1686.tape[local.iter_1686.tape_ptr]))}"
      : local.iter_1686.output)
    
    tape = (
      local.curr_1687.code == "+"
        ? [for i, b in local.iter_1686.tape : (i == local.iter_1686.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1687.code == "-"
        ? [for i, b in local.iter_1686.tape : (i == local.iter_1686.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1687.code == ","
        ? [for i, b in local.iter_1686.tape : (i == local.iter_1686.tape_ptr ? local.ascii_lookup[local.curr_1687.input] : b)]
        : local.iter_1686.tape)

    tape_ptr = (
      local.curr_1687.code == "<"
        ? local.iter_1686.tape_ptr == 0 ? length(local.iter_1686.tape) - 1 : local.iter_1686.tape_ptr - 1 :
      local.curr_1687.code == ">"
        ? local.iter_1686.tape_ptr == length(local.iter_1686.tape) - 1 ? 0 : local.iter_1686.tape_ptr + 1
        : local.iter_1686.tape_ptr)

    code_ptr = 1 + (
      local.curr_1687.code == "["
        ? local.iter_1686.tape[local.iter_1686.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1686.code_ptr)] : local.iter_1686.code_ptr :
      local.curr_1687.code == "]"
        ? local.iter_1686.tape[local.iter_1686.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1686.code_ptr)] : local.iter_1686.code_ptr
        : local.iter_1686.code_ptr)

    steps_taken = 1 + local.iter_1686.steps_taken
  }
}

locals {
  end_of_code_1688 = try(local.iter_1687.code_ptr >= length(var.code), true)

  curr_1688 = local.end_of_code_1688 ? null : {
    code = substr(var.code, local.iter_1687.code_ptr, 1)
    input = substr(var.code, local.iter_1687.code_ptr, 1) == "," ? substr(local.iter_1687.input, 0, 1) : null
  }

  iter_1688 = local.end_of_code_1688 ? local.iter_1687 : {
    input = (local.curr_1688.code == ","
      ? substr(local.iter_1687.input, 1, -1)
      : local.iter_1687.input)

    output = (local.curr_1688.code == "."
      ? "${local.iter_1687.output}${jsondecode(format("\"\\u%04x\"", local.iter_1687.tape[local.iter_1687.tape_ptr]))}"
      : local.iter_1687.output)
    
    tape = (
      local.curr_1688.code == "+"
        ? [for i, b in local.iter_1687.tape : (i == local.iter_1687.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1688.code == "-"
        ? [for i, b in local.iter_1687.tape : (i == local.iter_1687.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1688.code == ","
        ? [for i, b in local.iter_1687.tape : (i == local.iter_1687.tape_ptr ? local.ascii_lookup[local.curr_1688.input] : b)]
        : local.iter_1687.tape)

    tape_ptr = (
      local.curr_1688.code == "<"
        ? local.iter_1687.tape_ptr == 0 ? length(local.iter_1687.tape) - 1 : local.iter_1687.tape_ptr - 1 :
      local.curr_1688.code == ">"
        ? local.iter_1687.tape_ptr == length(local.iter_1687.tape) - 1 ? 0 : local.iter_1687.tape_ptr + 1
        : local.iter_1687.tape_ptr)

    code_ptr = 1 + (
      local.curr_1688.code == "["
        ? local.iter_1687.tape[local.iter_1687.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1687.code_ptr)] : local.iter_1687.code_ptr :
      local.curr_1688.code == "]"
        ? local.iter_1687.tape[local.iter_1687.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1687.code_ptr)] : local.iter_1687.code_ptr
        : local.iter_1687.code_ptr)

    steps_taken = 1 + local.iter_1687.steps_taken
  }
}

locals {
  end_of_code_1689 = try(local.iter_1688.code_ptr >= length(var.code), true)

  curr_1689 = local.end_of_code_1689 ? null : {
    code = substr(var.code, local.iter_1688.code_ptr, 1)
    input = substr(var.code, local.iter_1688.code_ptr, 1) == "," ? substr(local.iter_1688.input, 0, 1) : null
  }

  iter_1689 = local.end_of_code_1689 ? local.iter_1688 : {
    input = (local.curr_1689.code == ","
      ? substr(local.iter_1688.input, 1, -1)
      : local.iter_1688.input)

    output = (local.curr_1689.code == "."
      ? "${local.iter_1688.output}${jsondecode(format("\"\\u%04x\"", local.iter_1688.tape[local.iter_1688.tape_ptr]))}"
      : local.iter_1688.output)
    
    tape = (
      local.curr_1689.code == "+"
        ? [for i, b in local.iter_1688.tape : (i == local.iter_1688.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1689.code == "-"
        ? [for i, b in local.iter_1688.tape : (i == local.iter_1688.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1689.code == ","
        ? [for i, b in local.iter_1688.tape : (i == local.iter_1688.tape_ptr ? local.ascii_lookup[local.curr_1689.input] : b)]
        : local.iter_1688.tape)

    tape_ptr = (
      local.curr_1689.code == "<"
        ? local.iter_1688.tape_ptr == 0 ? length(local.iter_1688.tape) - 1 : local.iter_1688.tape_ptr - 1 :
      local.curr_1689.code == ">"
        ? local.iter_1688.tape_ptr == length(local.iter_1688.tape) - 1 ? 0 : local.iter_1688.tape_ptr + 1
        : local.iter_1688.tape_ptr)

    code_ptr = 1 + (
      local.curr_1689.code == "["
        ? local.iter_1688.tape[local.iter_1688.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1688.code_ptr)] : local.iter_1688.code_ptr :
      local.curr_1689.code == "]"
        ? local.iter_1688.tape[local.iter_1688.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1688.code_ptr)] : local.iter_1688.code_ptr
        : local.iter_1688.code_ptr)

    steps_taken = 1 + local.iter_1688.steps_taken
  }
}

locals {
  end_of_code_1690 = try(local.iter_1689.code_ptr >= length(var.code), true)

  curr_1690 = local.end_of_code_1690 ? null : {
    code = substr(var.code, local.iter_1689.code_ptr, 1)
    input = substr(var.code, local.iter_1689.code_ptr, 1) == "," ? substr(local.iter_1689.input, 0, 1) : null
  }

  iter_1690 = local.end_of_code_1690 ? local.iter_1689 : {
    input = (local.curr_1690.code == ","
      ? substr(local.iter_1689.input, 1, -1)
      : local.iter_1689.input)

    output = (local.curr_1690.code == "."
      ? "${local.iter_1689.output}${jsondecode(format("\"\\u%04x\"", local.iter_1689.tape[local.iter_1689.tape_ptr]))}"
      : local.iter_1689.output)
    
    tape = (
      local.curr_1690.code == "+"
        ? [for i, b in local.iter_1689.tape : (i == local.iter_1689.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1690.code == "-"
        ? [for i, b in local.iter_1689.tape : (i == local.iter_1689.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1690.code == ","
        ? [for i, b in local.iter_1689.tape : (i == local.iter_1689.tape_ptr ? local.ascii_lookup[local.curr_1690.input] : b)]
        : local.iter_1689.tape)

    tape_ptr = (
      local.curr_1690.code == "<"
        ? local.iter_1689.tape_ptr == 0 ? length(local.iter_1689.tape) - 1 : local.iter_1689.tape_ptr - 1 :
      local.curr_1690.code == ">"
        ? local.iter_1689.tape_ptr == length(local.iter_1689.tape) - 1 ? 0 : local.iter_1689.tape_ptr + 1
        : local.iter_1689.tape_ptr)

    code_ptr = 1 + (
      local.curr_1690.code == "["
        ? local.iter_1689.tape[local.iter_1689.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1689.code_ptr)] : local.iter_1689.code_ptr :
      local.curr_1690.code == "]"
        ? local.iter_1689.tape[local.iter_1689.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1689.code_ptr)] : local.iter_1689.code_ptr
        : local.iter_1689.code_ptr)

    steps_taken = 1 + local.iter_1689.steps_taken
  }
}

locals {
  end_of_code_1691 = try(local.iter_1690.code_ptr >= length(var.code), true)

  curr_1691 = local.end_of_code_1691 ? null : {
    code = substr(var.code, local.iter_1690.code_ptr, 1)
    input = substr(var.code, local.iter_1690.code_ptr, 1) == "," ? substr(local.iter_1690.input, 0, 1) : null
  }

  iter_1691 = local.end_of_code_1691 ? local.iter_1690 : {
    input = (local.curr_1691.code == ","
      ? substr(local.iter_1690.input, 1, -1)
      : local.iter_1690.input)

    output = (local.curr_1691.code == "."
      ? "${local.iter_1690.output}${jsondecode(format("\"\\u%04x\"", local.iter_1690.tape[local.iter_1690.tape_ptr]))}"
      : local.iter_1690.output)
    
    tape = (
      local.curr_1691.code == "+"
        ? [for i, b in local.iter_1690.tape : (i == local.iter_1690.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1691.code == "-"
        ? [for i, b in local.iter_1690.tape : (i == local.iter_1690.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1691.code == ","
        ? [for i, b in local.iter_1690.tape : (i == local.iter_1690.tape_ptr ? local.ascii_lookup[local.curr_1691.input] : b)]
        : local.iter_1690.tape)

    tape_ptr = (
      local.curr_1691.code == "<"
        ? local.iter_1690.tape_ptr == 0 ? length(local.iter_1690.tape) - 1 : local.iter_1690.tape_ptr - 1 :
      local.curr_1691.code == ">"
        ? local.iter_1690.tape_ptr == length(local.iter_1690.tape) - 1 ? 0 : local.iter_1690.tape_ptr + 1
        : local.iter_1690.tape_ptr)

    code_ptr = 1 + (
      local.curr_1691.code == "["
        ? local.iter_1690.tape[local.iter_1690.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1690.code_ptr)] : local.iter_1690.code_ptr :
      local.curr_1691.code == "]"
        ? local.iter_1690.tape[local.iter_1690.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1690.code_ptr)] : local.iter_1690.code_ptr
        : local.iter_1690.code_ptr)

    steps_taken = 1 + local.iter_1690.steps_taken
  }
}

locals {
  end_of_code_1692 = try(local.iter_1691.code_ptr >= length(var.code), true)

  curr_1692 = local.end_of_code_1692 ? null : {
    code = substr(var.code, local.iter_1691.code_ptr, 1)
    input = substr(var.code, local.iter_1691.code_ptr, 1) == "," ? substr(local.iter_1691.input, 0, 1) : null
  }

  iter_1692 = local.end_of_code_1692 ? local.iter_1691 : {
    input = (local.curr_1692.code == ","
      ? substr(local.iter_1691.input, 1, -1)
      : local.iter_1691.input)

    output = (local.curr_1692.code == "."
      ? "${local.iter_1691.output}${jsondecode(format("\"\\u%04x\"", local.iter_1691.tape[local.iter_1691.tape_ptr]))}"
      : local.iter_1691.output)
    
    tape = (
      local.curr_1692.code == "+"
        ? [for i, b in local.iter_1691.tape : (i == local.iter_1691.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1692.code == "-"
        ? [for i, b in local.iter_1691.tape : (i == local.iter_1691.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1692.code == ","
        ? [for i, b in local.iter_1691.tape : (i == local.iter_1691.tape_ptr ? local.ascii_lookup[local.curr_1692.input] : b)]
        : local.iter_1691.tape)

    tape_ptr = (
      local.curr_1692.code == "<"
        ? local.iter_1691.tape_ptr == 0 ? length(local.iter_1691.tape) - 1 : local.iter_1691.tape_ptr - 1 :
      local.curr_1692.code == ">"
        ? local.iter_1691.tape_ptr == length(local.iter_1691.tape) - 1 ? 0 : local.iter_1691.tape_ptr + 1
        : local.iter_1691.tape_ptr)

    code_ptr = 1 + (
      local.curr_1692.code == "["
        ? local.iter_1691.tape[local.iter_1691.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1691.code_ptr)] : local.iter_1691.code_ptr :
      local.curr_1692.code == "]"
        ? local.iter_1691.tape[local.iter_1691.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1691.code_ptr)] : local.iter_1691.code_ptr
        : local.iter_1691.code_ptr)

    steps_taken = 1 + local.iter_1691.steps_taken
  }
}

locals {
  end_of_code_1693 = try(local.iter_1692.code_ptr >= length(var.code), true)

  curr_1693 = local.end_of_code_1693 ? null : {
    code = substr(var.code, local.iter_1692.code_ptr, 1)
    input = substr(var.code, local.iter_1692.code_ptr, 1) == "," ? substr(local.iter_1692.input, 0, 1) : null
  }

  iter_1693 = local.end_of_code_1693 ? local.iter_1692 : {
    input = (local.curr_1693.code == ","
      ? substr(local.iter_1692.input, 1, -1)
      : local.iter_1692.input)

    output = (local.curr_1693.code == "."
      ? "${local.iter_1692.output}${jsondecode(format("\"\\u%04x\"", local.iter_1692.tape[local.iter_1692.tape_ptr]))}"
      : local.iter_1692.output)
    
    tape = (
      local.curr_1693.code == "+"
        ? [for i, b in local.iter_1692.tape : (i == local.iter_1692.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1693.code == "-"
        ? [for i, b in local.iter_1692.tape : (i == local.iter_1692.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1693.code == ","
        ? [for i, b in local.iter_1692.tape : (i == local.iter_1692.tape_ptr ? local.ascii_lookup[local.curr_1693.input] : b)]
        : local.iter_1692.tape)

    tape_ptr = (
      local.curr_1693.code == "<"
        ? local.iter_1692.tape_ptr == 0 ? length(local.iter_1692.tape) - 1 : local.iter_1692.tape_ptr - 1 :
      local.curr_1693.code == ">"
        ? local.iter_1692.tape_ptr == length(local.iter_1692.tape) - 1 ? 0 : local.iter_1692.tape_ptr + 1
        : local.iter_1692.tape_ptr)

    code_ptr = 1 + (
      local.curr_1693.code == "["
        ? local.iter_1692.tape[local.iter_1692.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1692.code_ptr)] : local.iter_1692.code_ptr :
      local.curr_1693.code == "]"
        ? local.iter_1692.tape[local.iter_1692.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1692.code_ptr)] : local.iter_1692.code_ptr
        : local.iter_1692.code_ptr)

    steps_taken = 1 + local.iter_1692.steps_taken
  }
}

locals {
  end_of_code_1694 = try(local.iter_1693.code_ptr >= length(var.code), true)

  curr_1694 = local.end_of_code_1694 ? null : {
    code = substr(var.code, local.iter_1693.code_ptr, 1)
    input = substr(var.code, local.iter_1693.code_ptr, 1) == "," ? substr(local.iter_1693.input, 0, 1) : null
  }

  iter_1694 = local.end_of_code_1694 ? local.iter_1693 : {
    input = (local.curr_1694.code == ","
      ? substr(local.iter_1693.input, 1, -1)
      : local.iter_1693.input)

    output = (local.curr_1694.code == "."
      ? "${local.iter_1693.output}${jsondecode(format("\"\\u%04x\"", local.iter_1693.tape[local.iter_1693.tape_ptr]))}"
      : local.iter_1693.output)
    
    tape = (
      local.curr_1694.code == "+"
        ? [for i, b in local.iter_1693.tape : (i == local.iter_1693.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1694.code == "-"
        ? [for i, b in local.iter_1693.tape : (i == local.iter_1693.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1694.code == ","
        ? [for i, b in local.iter_1693.tape : (i == local.iter_1693.tape_ptr ? local.ascii_lookup[local.curr_1694.input] : b)]
        : local.iter_1693.tape)

    tape_ptr = (
      local.curr_1694.code == "<"
        ? local.iter_1693.tape_ptr == 0 ? length(local.iter_1693.tape) - 1 : local.iter_1693.tape_ptr - 1 :
      local.curr_1694.code == ">"
        ? local.iter_1693.tape_ptr == length(local.iter_1693.tape) - 1 ? 0 : local.iter_1693.tape_ptr + 1
        : local.iter_1693.tape_ptr)

    code_ptr = 1 + (
      local.curr_1694.code == "["
        ? local.iter_1693.tape[local.iter_1693.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1693.code_ptr)] : local.iter_1693.code_ptr :
      local.curr_1694.code == "]"
        ? local.iter_1693.tape[local.iter_1693.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1693.code_ptr)] : local.iter_1693.code_ptr
        : local.iter_1693.code_ptr)

    steps_taken = 1 + local.iter_1693.steps_taken
  }
}

locals {
  end_of_code_1695 = try(local.iter_1694.code_ptr >= length(var.code), true)

  curr_1695 = local.end_of_code_1695 ? null : {
    code = substr(var.code, local.iter_1694.code_ptr, 1)
    input = substr(var.code, local.iter_1694.code_ptr, 1) == "," ? substr(local.iter_1694.input, 0, 1) : null
  }

  iter_1695 = local.end_of_code_1695 ? local.iter_1694 : {
    input = (local.curr_1695.code == ","
      ? substr(local.iter_1694.input, 1, -1)
      : local.iter_1694.input)

    output = (local.curr_1695.code == "."
      ? "${local.iter_1694.output}${jsondecode(format("\"\\u%04x\"", local.iter_1694.tape[local.iter_1694.tape_ptr]))}"
      : local.iter_1694.output)
    
    tape = (
      local.curr_1695.code == "+"
        ? [for i, b in local.iter_1694.tape : (i == local.iter_1694.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1695.code == "-"
        ? [for i, b in local.iter_1694.tape : (i == local.iter_1694.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1695.code == ","
        ? [for i, b in local.iter_1694.tape : (i == local.iter_1694.tape_ptr ? local.ascii_lookup[local.curr_1695.input] : b)]
        : local.iter_1694.tape)

    tape_ptr = (
      local.curr_1695.code == "<"
        ? local.iter_1694.tape_ptr == 0 ? length(local.iter_1694.tape) - 1 : local.iter_1694.tape_ptr - 1 :
      local.curr_1695.code == ">"
        ? local.iter_1694.tape_ptr == length(local.iter_1694.tape) - 1 ? 0 : local.iter_1694.tape_ptr + 1
        : local.iter_1694.tape_ptr)

    code_ptr = 1 + (
      local.curr_1695.code == "["
        ? local.iter_1694.tape[local.iter_1694.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1694.code_ptr)] : local.iter_1694.code_ptr :
      local.curr_1695.code == "]"
        ? local.iter_1694.tape[local.iter_1694.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1694.code_ptr)] : local.iter_1694.code_ptr
        : local.iter_1694.code_ptr)

    steps_taken = 1 + local.iter_1694.steps_taken
  }
}

locals {
  end_of_code_1696 = try(local.iter_1695.code_ptr >= length(var.code), true)

  curr_1696 = local.end_of_code_1696 ? null : {
    code = substr(var.code, local.iter_1695.code_ptr, 1)
    input = substr(var.code, local.iter_1695.code_ptr, 1) == "," ? substr(local.iter_1695.input, 0, 1) : null
  }

  iter_1696 = local.end_of_code_1696 ? local.iter_1695 : {
    input = (local.curr_1696.code == ","
      ? substr(local.iter_1695.input, 1, -1)
      : local.iter_1695.input)

    output = (local.curr_1696.code == "."
      ? "${local.iter_1695.output}${jsondecode(format("\"\\u%04x\"", local.iter_1695.tape[local.iter_1695.tape_ptr]))}"
      : local.iter_1695.output)
    
    tape = (
      local.curr_1696.code == "+"
        ? [for i, b in local.iter_1695.tape : (i == local.iter_1695.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1696.code == "-"
        ? [for i, b in local.iter_1695.tape : (i == local.iter_1695.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1696.code == ","
        ? [for i, b in local.iter_1695.tape : (i == local.iter_1695.tape_ptr ? local.ascii_lookup[local.curr_1696.input] : b)]
        : local.iter_1695.tape)

    tape_ptr = (
      local.curr_1696.code == "<"
        ? local.iter_1695.tape_ptr == 0 ? length(local.iter_1695.tape) - 1 : local.iter_1695.tape_ptr - 1 :
      local.curr_1696.code == ">"
        ? local.iter_1695.tape_ptr == length(local.iter_1695.tape) - 1 ? 0 : local.iter_1695.tape_ptr + 1
        : local.iter_1695.tape_ptr)

    code_ptr = 1 + (
      local.curr_1696.code == "["
        ? local.iter_1695.tape[local.iter_1695.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1695.code_ptr)] : local.iter_1695.code_ptr :
      local.curr_1696.code == "]"
        ? local.iter_1695.tape[local.iter_1695.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1695.code_ptr)] : local.iter_1695.code_ptr
        : local.iter_1695.code_ptr)

    steps_taken = 1 + local.iter_1695.steps_taken
  }
}

locals {
  end_of_code_1697 = try(local.iter_1696.code_ptr >= length(var.code), true)

  curr_1697 = local.end_of_code_1697 ? null : {
    code = substr(var.code, local.iter_1696.code_ptr, 1)
    input = substr(var.code, local.iter_1696.code_ptr, 1) == "," ? substr(local.iter_1696.input, 0, 1) : null
  }

  iter_1697 = local.end_of_code_1697 ? local.iter_1696 : {
    input = (local.curr_1697.code == ","
      ? substr(local.iter_1696.input, 1, -1)
      : local.iter_1696.input)

    output = (local.curr_1697.code == "."
      ? "${local.iter_1696.output}${jsondecode(format("\"\\u%04x\"", local.iter_1696.tape[local.iter_1696.tape_ptr]))}"
      : local.iter_1696.output)
    
    tape = (
      local.curr_1697.code == "+"
        ? [for i, b in local.iter_1696.tape : (i == local.iter_1696.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1697.code == "-"
        ? [for i, b in local.iter_1696.tape : (i == local.iter_1696.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1697.code == ","
        ? [for i, b in local.iter_1696.tape : (i == local.iter_1696.tape_ptr ? local.ascii_lookup[local.curr_1697.input] : b)]
        : local.iter_1696.tape)

    tape_ptr = (
      local.curr_1697.code == "<"
        ? local.iter_1696.tape_ptr == 0 ? length(local.iter_1696.tape) - 1 : local.iter_1696.tape_ptr - 1 :
      local.curr_1697.code == ">"
        ? local.iter_1696.tape_ptr == length(local.iter_1696.tape) - 1 ? 0 : local.iter_1696.tape_ptr + 1
        : local.iter_1696.tape_ptr)

    code_ptr = 1 + (
      local.curr_1697.code == "["
        ? local.iter_1696.tape[local.iter_1696.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1696.code_ptr)] : local.iter_1696.code_ptr :
      local.curr_1697.code == "]"
        ? local.iter_1696.tape[local.iter_1696.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1696.code_ptr)] : local.iter_1696.code_ptr
        : local.iter_1696.code_ptr)

    steps_taken = 1 + local.iter_1696.steps_taken
  }
}

locals {
  end_of_code_1698 = try(local.iter_1697.code_ptr >= length(var.code), true)

  curr_1698 = local.end_of_code_1698 ? null : {
    code = substr(var.code, local.iter_1697.code_ptr, 1)
    input = substr(var.code, local.iter_1697.code_ptr, 1) == "," ? substr(local.iter_1697.input, 0, 1) : null
  }

  iter_1698 = local.end_of_code_1698 ? local.iter_1697 : {
    input = (local.curr_1698.code == ","
      ? substr(local.iter_1697.input, 1, -1)
      : local.iter_1697.input)

    output = (local.curr_1698.code == "."
      ? "${local.iter_1697.output}${jsondecode(format("\"\\u%04x\"", local.iter_1697.tape[local.iter_1697.tape_ptr]))}"
      : local.iter_1697.output)
    
    tape = (
      local.curr_1698.code == "+"
        ? [for i, b in local.iter_1697.tape : (i == local.iter_1697.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1698.code == "-"
        ? [for i, b in local.iter_1697.tape : (i == local.iter_1697.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1698.code == ","
        ? [for i, b in local.iter_1697.tape : (i == local.iter_1697.tape_ptr ? local.ascii_lookup[local.curr_1698.input] : b)]
        : local.iter_1697.tape)

    tape_ptr = (
      local.curr_1698.code == "<"
        ? local.iter_1697.tape_ptr == 0 ? length(local.iter_1697.tape) - 1 : local.iter_1697.tape_ptr - 1 :
      local.curr_1698.code == ">"
        ? local.iter_1697.tape_ptr == length(local.iter_1697.tape) - 1 ? 0 : local.iter_1697.tape_ptr + 1
        : local.iter_1697.tape_ptr)

    code_ptr = 1 + (
      local.curr_1698.code == "["
        ? local.iter_1697.tape[local.iter_1697.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1697.code_ptr)] : local.iter_1697.code_ptr :
      local.curr_1698.code == "]"
        ? local.iter_1697.tape[local.iter_1697.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1697.code_ptr)] : local.iter_1697.code_ptr
        : local.iter_1697.code_ptr)

    steps_taken = 1 + local.iter_1697.steps_taken
  }
}

locals {
  end_of_code_1699 = try(local.iter_1698.code_ptr >= length(var.code), true)

  curr_1699 = local.end_of_code_1699 ? null : {
    code = substr(var.code, local.iter_1698.code_ptr, 1)
    input = substr(var.code, local.iter_1698.code_ptr, 1) == "," ? substr(local.iter_1698.input, 0, 1) : null
  }

  iter_1699 = local.end_of_code_1699 ? local.iter_1698 : {
    input = (local.curr_1699.code == ","
      ? substr(local.iter_1698.input, 1, -1)
      : local.iter_1698.input)

    output = (local.curr_1699.code == "."
      ? "${local.iter_1698.output}${jsondecode(format("\"\\u%04x\"", local.iter_1698.tape[local.iter_1698.tape_ptr]))}"
      : local.iter_1698.output)
    
    tape = (
      local.curr_1699.code == "+"
        ? [for i, b in local.iter_1698.tape : (i == local.iter_1698.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1699.code == "-"
        ? [for i, b in local.iter_1698.tape : (i == local.iter_1698.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1699.code == ","
        ? [for i, b in local.iter_1698.tape : (i == local.iter_1698.tape_ptr ? local.ascii_lookup[local.curr_1699.input] : b)]
        : local.iter_1698.tape)

    tape_ptr = (
      local.curr_1699.code == "<"
        ? local.iter_1698.tape_ptr == 0 ? length(local.iter_1698.tape) - 1 : local.iter_1698.tape_ptr - 1 :
      local.curr_1699.code == ">"
        ? local.iter_1698.tape_ptr == length(local.iter_1698.tape) - 1 ? 0 : local.iter_1698.tape_ptr + 1
        : local.iter_1698.tape_ptr)

    code_ptr = 1 + (
      local.curr_1699.code == "["
        ? local.iter_1698.tape[local.iter_1698.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1698.code_ptr)] : local.iter_1698.code_ptr :
      local.curr_1699.code == "]"
        ? local.iter_1698.tape[local.iter_1698.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1698.code_ptr)] : local.iter_1698.code_ptr
        : local.iter_1698.code_ptr)

    steps_taken = 1 + local.iter_1698.steps_taken
  }
}

locals {
  end_of_code_1700 = try(local.iter_1699.code_ptr >= length(var.code), true)

  curr_1700 = local.end_of_code_1700 ? null : {
    code = substr(var.code, local.iter_1699.code_ptr, 1)
    input = substr(var.code, local.iter_1699.code_ptr, 1) == "," ? substr(local.iter_1699.input, 0, 1) : null
  }

  iter_1700 = local.end_of_code_1700 ? local.iter_1699 : {
    input = (local.curr_1700.code == ","
      ? substr(local.iter_1699.input, 1, -1)
      : local.iter_1699.input)

    output = (local.curr_1700.code == "."
      ? "${local.iter_1699.output}${jsondecode(format("\"\\u%04x\"", local.iter_1699.tape[local.iter_1699.tape_ptr]))}"
      : local.iter_1699.output)
    
    tape = (
      local.curr_1700.code == "+"
        ? [for i, b in local.iter_1699.tape : (i == local.iter_1699.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1700.code == "-"
        ? [for i, b in local.iter_1699.tape : (i == local.iter_1699.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1700.code == ","
        ? [for i, b in local.iter_1699.tape : (i == local.iter_1699.tape_ptr ? local.ascii_lookup[local.curr_1700.input] : b)]
        : local.iter_1699.tape)

    tape_ptr = (
      local.curr_1700.code == "<"
        ? local.iter_1699.tape_ptr == 0 ? length(local.iter_1699.tape) - 1 : local.iter_1699.tape_ptr - 1 :
      local.curr_1700.code == ">"
        ? local.iter_1699.tape_ptr == length(local.iter_1699.tape) - 1 ? 0 : local.iter_1699.tape_ptr + 1
        : local.iter_1699.tape_ptr)

    code_ptr = 1 + (
      local.curr_1700.code == "["
        ? local.iter_1699.tape[local.iter_1699.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1699.code_ptr)] : local.iter_1699.code_ptr :
      local.curr_1700.code == "]"
        ? local.iter_1699.tape[local.iter_1699.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1699.code_ptr)] : local.iter_1699.code_ptr
        : local.iter_1699.code_ptr)

    steps_taken = 1 + local.iter_1699.steps_taken
  }
}

locals {
  end_of_code_1701 = try(local.iter_1700.code_ptr >= length(var.code), true)

  curr_1701 = local.end_of_code_1701 ? null : {
    code = substr(var.code, local.iter_1700.code_ptr, 1)
    input = substr(var.code, local.iter_1700.code_ptr, 1) == "," ? substr(local.iter_1700.input, 0, 1) : null
  }

  iter_1701 = local.end_of_code_1701 ? local.iter_1700 : {
    input = (local.curr_1701.code == ","
      ? substr(local.iter_1700.input, 1, -1)
      : local.iter_1700.input)

    output = (local.curr_1701.code == "."
      ? "${local.iter_1700.output}${jsondecode(format("\"\\u%04x\"", local.iter_1700.tape[local.iter_1700.tape_ptr]))}"
      : local.iter_1700.output)
    
    tape = (
      local.curr_1701.code == "+"
        ? [for i, b in local.iter_1700.tape : (i == local.iter_1700.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1701.code == "-"
        ? [for i, b in local.iter_1700.tape : (i == local.iter_1700.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1701.code == ","
        ? [for i, b in local.iter_1700.tape : (i == local.iter_1700.tape_ptr ? local.ascii_lookup[local.curr_1701.input] : b)]
        : local.iter_1700.tape)

    tape_ptr = (
      local.curr_1701.code == "<"
        ? local.iter_1700.tape_ptr == 0 ? length(local.iter_1700.tape) - 1 : local.iter_1700.tape_ptr - 1 :
      local.curr_1701.code == ">"
        ? local.iter_1700.tape_ptr == length(local.iter_1700.tape) - 1 ? 0 : local.iter_1700.tape_ptr + 1
        : local.iter_1700.tape_ptr)

    code_ptr = 1 + (
      local.curr_1701.code == "["
        ? local.iter_1700.tape[local.iter_1700.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1700.code_ptr)] : local.iter_1700.code_ptr :
      local.curr_1701.code == "]"
        ? local.iter_1700.tape[local.iter_1700.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1700.code_ptr)] : local.iter_1700.code_ptr
        : local.iter_1700.code_ptr)

    steps_taken = 1 + local.iter_1700.steps_taken
  }
}

locals {
  end_of_code_1702 = try(local.iter_1701.code_ptr >= length(var.code), true)

  curr_1702 = local.end_of_code_1702 ? null : {
    code = substr(var.code, local.iter_1701.code_ptr, 1)
    input = substr(var.code, local.iter_1701.code_ptr, 1) == "," ? substr(local.iter_1701.input, 0, 1) : null
  }

  iter_1702 = local.end_of_code_1702 ? local.iter_1701 : {
    input = (local.curr_1702.code == ","
      ? substr(local.iter_1701.input, 1, -1)
      : local.iter_1701.input)

    output = (local.curr_1702.code == "."
      ? "${local.iter_1701.output}${jsondecode(format("\"\\u%04x\"", local.iter_1701.tape[local.iter_1701.tape_ptr]))}"
      : local.iter_1701.output)
    
    tape = (
      local.curr_1702.code == "+"
        ? [for i, b in local.iter_1701.tape : (i == local.iter_1701.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1702.code == "-"
        ? [for i, b in local.iter_1701.tape : (i == local.iter_1701.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1702.code == ","
        ? [for i, b in local.iter_1701.tape : (i == local.iter_1701.tape_ptr ? local.ascii_lookup[local.curr_1702.input] : b)]
        : local.iter_1701.tape)

    tape_ptr = (
      local.curr_1702.code == "<"
        ? local.iter_1701.tape_ptr == 0 ? length(local.iter_1701.tape) - 1 : local.iter_1701.tape_ptr - 1 :
      local.curr_1702.code == ">"
        ? local.iter_1701.tape_ptr == length(local.iter_1701.tape) - 1 ? 0 : local.iter_1701.tape_ptr + 1
        : local.iter_1701.tape_ptr)

    code_ptr = 1 + (
      local.curr_1702.code == "["
        ? local.iter_1701.tape[local.iter_1701.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1701.code_ptr)] : local.iter_1701.code_ptr :
      local.curr_1702.code == "]"
        ? local.iter_1701.tape[local.iter_1701.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1701.code_ptr)] : local.iter_1701.code_ptr
        : local.iter_1701.code_ptr)

    steps_taken = 1 + local.iter_1701.steps_taken
  }
}

locals {
  end_of_code_1703 = try(local.iter_1702.code_ptr >= length(var.code), true)

  curr_1703 = local.end_of_code_1703 ? null : {
    code = substr(var.code, local.iter_1702.code_ptr, 1)
    input = substr(var.code, local.iter_1702.code_ptr, 1) == "," ? substr(local.iter_1702.input, 0, 1) : null
  }

  iter_1703 = local.end_of_code_1703 ? local.iter_1702 : {
    input = (local.curr_1703.code == ","
      ? substr(local.iter_1702.input, 1, -1)
      : local.iter_1702.input)

    output = (local.curr_1703.code == "."
      ? "${local.iter_1702.output}${jsondecode(format("\"\\u%04x\"", local.iter_1702.tape[local.iter_1702.tape_ptr]))}"
      : local.iter_1702.output)
    
    tape = (
      local.curr_1703.code == "+"
        ? [for i, b in local.iter_1702.tape : (i == local.iter_1702.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1703.code == "-"
        ? [for i, b in local.iter_1702.tape : (i == local.iter_1702.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1703.code == ","
        ? [for i, b in local.iter_1702.tape : (i == local.iter_1702.tape_ptr ? local.ascii_lookup[local.curr_1703.input] : b)]
        : local.iter_1702.tape)

    tape_ptr = (
      local.curr_1703.code == "<"
        ? local.iter_1702.tape_ptr == 0 ? length(local.iter_1702.tape) - 1 : local.iter_1702.tape_ptr - 1 :
      local.curr_1703.code == ">"
        ? local.iter_1702.tape_ptr == length(local.iter_1702.tape) - 1 ? 0 : local.iter_1702.tape_ptr + 1
        : local.iter_1702.tape_ptr)

    code_ptr = 1 + (
      local.curr_1703.code == "["
        ? local.iter_1702.tape[local.iter_1702.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1702.code_ptr)] : local.iter_1702.code_ptr :
      local.curr_1703.code == "]"
        ? local.iter_1702.tape[local.iter_1702.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1702.code_ptr)] : local.iter_1702.code_ptr
        : local.iter_1702.code_ptr)

    steps_taken = 1 + local.iter_1702.steps_taken
  }
}

locals {
  end_of_code_1704 = try(local.iter_1703.code_ptr >= length(var.code), true)

  curr_1704 = local.end_of_code_1704 ? null : {
    code = substr(var.code, local.iter_1703.code_ptr, 1)
    input = substr(var.code, local.iter_1703.code_ptr, 1) == "," ? substr(local.iter_1703.input, 0, 1) : null
  }

  iter_1704 = local.end_of_code_1704 ? local.iter_1703 : {
    input = (local.curr_1704.code == ","
      ? substr(local.iter_1703.input, 1, -1)
      : local.iter_1703.input)

    output = (local.curr_1704.code == "."
      ? "${local.iter_1703.output}${jsondecode(format("\"\\u%04x\"", local.iter_1703.tape[local.iter_1703.tape_ptr]))}"
      : local.iter_1703.output)
    
    tape = (
      local.curr_1704.code == "+"
        ? [for i, b in local.iter_1703.tape : (i == local.iter_1703.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1704.code == "-"
        ? [for i, b in local.iter_1703.tape : (i == local.iter_1703.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1704.code == ","
        ? [for i, b in local.iter_1703.tape : (i == local.iter_1703.tape_ptr ? local.ascii_lookup[local.curr_1704.input] : b)]
        : local.iter_1703.tape)

    tape_ptr = (
      local.curr_1704.code == "<"
        ? local.iter_1703.tape_ptr == 0 ? length(local.iter_1703.tape) - 1 : local.iter_1703.tape_ptr - 1 :
      local.curr_1704.code == ">"
        ? local.iter_1703.tape_ptr == length(local.iter_1703.tape) - 1 ? 0 : local.iter_1703.tape_ptr + 1
        : local.iter_1703.tape_ptr)

    code_ptr = 1 + (
      local.curr_1704.code == "["
        ? local.iter_1703.tape[local.iter_1703.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1703.code_ptr)] : local.iter_1703.code_ptr :
      local.curr_1704.code == "]"
        ? local.iter_1703.tape[local.iter_1703.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1703.code_ptr)] : local.iter_1703.code_ptr
        : local.iter_1703.code_ptr)

    steps_taken = 1 + local.iter_1703.steps_taken
  }
}

locals {
  end_of_code_1705 = try(local.iter_1704.code_ptr >= length(var.code), true)

  curr_1705 = local.end_of_code_1705 ? null : {
    code = substr(var.code, local.iter_1704.code_ptr, 1)
    input = substr(var.code, local.iter_1704.code_ptr, 1) == "," ? substr(local.iter_1704.input, 0, 1) : null
  }

  iter_1705 = local.end_of_code_1705 ? local.iter_1704 : {
    input = (local.curr_1705.code == ","
      ? substr(local.iter_1704.input, 1, -1)
      : local.iter_1704.input)

    output = (local.curr_1705.code == "."
      ? "${local.iter_1704.output}${jsondecode(format("\"\\u%04x\"", local.iter_1704.tape[local.iter_1704.tape_ptr]))}"
      : local.iter_1704.output)
    
    tape = (
      local.curr_1705.code == "+"
        ? [for i, b in local.iter_1704.tape : (i == local.iter_1704.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1705.code == "-"
        ? [for i, b in local.iter_1704.tape : (i == local.iter_1704.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1705.code == ","
        ? [for i, b in local.iter_1704.tape : (i == local.iter_1704.tape_ptr ? local.ascii_lookup[local.curr_1705.input] : b)]
        : local.iter_1704.tape)

    tape_ptr = (
      local.curr_1705.code == "<"
        ? local.iter_1704.tape_ptr == 0 ? length(local.iter_1704.tape) - 1 : local.iter_1704.tape_ptr - 1 :
      local.curr_1705.code == ">"
        ? local.iter_1704.tape_ptr == length(local.iter_1704.tape) - 1 ? 0 : local.iter_1704.tape_ptr + 1
        : local.iter_1704.tape_ptr)

    code_ptr = 1 + (
      local.curr_1705.code == "["
        ? local.iter_1704.tape[local.iter_1704.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1704.code_ptr)] : local.iter_1704.code_ptr :
      local.curr_1705.code == "]"
        ? local.iter_1704.tape[local.iter_1704.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1704.code_ptr)] : local.iter_1704.code_ptr
        : local.iter_1704.code_ptr)

    steps_taken = 1 + local.iter_1704.steps_taken
  }
}

locals {
  end_of_code_1706 = try(local.iter_1705.code_ptr >= length(var.code), true)

  curr_1706 = local.end_of_code_1706 ? null : {
    code = substr(var.code, local.iter_1705.code_ptr, 1)
    input = substr(var.code, local.iter_1705.code_ptr, 1) == "," ? substr(local.iter_1705.input, 0, 1) : null
  }

  iter_1706 = local.end_of_code_1706 ? local.iter_1705 : {
    input = (local.curr_1706.code == ","
      ? substr(local.iter_1705.input, 1, -1)
      : local.iter_1705.input)

    output = (local.curr_1706.code == "."
      ? "${local.iter_1705.output}${jsondecode(format("\"\\u%04x\"", local.iter_1705.tape[local.iter_1705.tape_ptr]))}"
      : local.iter_1705.output)
    
    tape = (
      local.curr_1706.code == "+"
        ? [for i, b in local.iter_1705.tape : (i == local.iter_1705.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1706.code == "-"
        ? [for i, b in local.iter_1705.tape : (i == local.iter_1705.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1706.code == ","
        ? [for i, b in local.iter_1705.tape : (i == local.iter_1705.tape_ptr ? local.ascii_lookup[local.curr_1706.input] : b)]
        : local.iter_1705.tape)

    tape_ptr = (
      local.curr_1706.code == "<"
        ? local.iter_1705.tape_ptr == 0 ? length(local.iter_1705.tape) - 1 : local.iter_1705.tape_ptr - 1 :
      local.curr_1706.code == ">"
        ? local.iter_1705.tape_ptr == length(local.iter_1705.tape) - 1 ? 0 : local.iter_1705.tape_ptr + 1
        : local.iter_1705.tape_ptr)

    code_ptr = 1 + (
      local.curr_1706.code == "["
        ? local.iter_1705.tape[local.iter_1705.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1705.code_ptr)] : local.iter_1705.code_ptr :
      local.curr_1706.code == "]"
        ? local.iter_1705.tape[local.iter_1705.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1705.code_ptr)] : local.iter_1705.code_ptr
        : local.iter_1705.code_ptr)

    steps_taken = 1 + local.iter_1705.steps_taken
  }
}

locals {
  end_of_code_1707 = try(local.iter_1706.code_ptr >= length(var.code), true)

  curr_1707 = local.end_of_code_1707 ? null : {
    code = substr(var.code, local.iter_1706.code_ptr, 1)
    input = substr(var.code, local.iter_1706.code_ptr, 1) == "," ? substr(local.iter_1706.input, 0, 1) : null
  }

  iter_1707 = local.end_of_code_1707 ? local.iter_1706 : {
    input = (local.curr_1707.code == ","
      ? substr(local.iter_1706.input, 1, -1)
      : local.iter_1706.input)

    output = (local.curr_1707.code == "."
      ? "${local.iter_1706.output}${jsondecode(format("\"\\u%04x\"", local.iter_1706.tape[local.iter_1706.tape_ptr]))}"
      : local.iter_1706.output)
    
    tape = (
      local.curr_1707.code == "+"
        ? [for i, b in local.iter_1706.tape : (i == local.iter_1706.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1707.code == "-"
        ? [for i, b in local.iter_1706.tape : (i == local.iter_1706.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1707.code == ","
        ? [for i, b in local.iter_1706.tape : (i == local.iter_1706.tape_ptr ? local.ascii_lookup[local.curr_1707.input] : b)]
        : local.iter_1706.tape)

    tape_ptr = (
      local.curr_1707.code == "<"
        ? local.iter_1706.tape_ptr == 0 ? length(local.iter_1706.tape) - 1 : local.iter_1706.tape_ptr - 1 :
      local.curr_1707.code == ">"
        ? local.iter_1706.tape_ptr == length(local.iter_1706.tape) - 1 ? 0 : local.iter_1706.tape_ptr + 1
        : local.iter_1706.tape_ptr)

    code_ptr = 1 + (
      local.curr_1707.code == "["
        ? local.iter_1706.tape[local.iter_1706.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1706.code_ptr)] : local.iter_1706.code_ptr :
      local.curr_1707.code == "]"
        ? local.iter_1706.tape[local.iter_1706.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1706.code_ptr)] : local.iter_1706.code_ptr
        : local.iter_1706.code_ptr)

    steps_taken = 1 + local.iter_1706.steps_taken
  }
}

locals {
  end_of_code_1708 = try(local.iter_1707.code_ptr >= length(var.code), true)

  curr_1708 = local.end_of_code_1708 ? null : {
    code = substr(var.code, local.iter_1707.code_ptr, 1)
    input = substr(var.code, local.iter_1707.code_ptr, 1) == "," ? substr(local.iter_1707.input, 0, 1) : null
  }

  iter_1708 = local.end_of_code_1708 ? local.iter_1707 : {
    input = (local.curr_1708.code == ","
      ? substr(local.iter_1707.input, 1, -1)
      : local.iter_1707.input)

    output = (local.curr_1708.code == "."
      ? "${local.iter_1707.output}${jsondecode(format("\"\\u%04x\"", local.iter_1707.tape[local.iter_1707.tape_ptr]))}"
      : local.iter_1707.output)
    
    tape = (
      local.curr_1708.code == "+"
        ? [for i, b in local.iter_1707.tape : (i == local.iter_1707.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1708.code == "-"
        ? [for i, b in local.iter_1707.tape : (i == local.iter_1707.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1708.code == ","
        ? [for i, b in local.iter_1707.tape : (i == local.iter_1707.tape_ptr ? local.ascii_lookup[local.curr_1708.input] : b)]
        : local.iter_1707.tape)

    tape_ptr = (
      local.curr_1708.code == "<"
        ? local.iter_1707.tape_ptr == 0 ? length(local.iter_1707.tape) - 1 : local.iter_1707.tape_ptr - 1 :
      local.curr_1708.code == ">"
        ? local.iter_1707.tape_ptr == length(local.iter_1707.tape) - 1 ? 0 : local.iter_1707.tape_ptr + 1
        : local.iter_1707.tape_ptr)

    code_ptr = 1 + (
      local.curr_1708.code == "["
        ? local.iter_1707.tape[local.iter_1707.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1707.code_ptr)] : local.iter_1707.code_ptr :
      local.curr_1708.code == "]"
        ? local.iter_1707.tape[local.iter_1707.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1707.code_ptr)] : local.iter_1707.code_ptr
        : local.iter_1707.code_ptr)

    steps_taken = 1 + local.iter_1707.steps_taken
  }
}

locals {
  end_of_code_1709 = try(local.iter_1708.code_ptr >= length(var.code), true)

  curr_1709 = local.end_of_code_1709 ? null : {
    code = substr(var.code, local.iter_1708.code_ptr, 1)
    input = substr(var.code, local.iter_1708.code_ptr, 1) == "," ? substr(local.iter_1708.input, 0, 1) : null
  }

  iter_1709 = local.end_of_code_1709 ? local.iter_1708 : {
    input = (local.curr_1709.code == ","
      ? substr(local.iter_1708.input, 1, -1)
      : local.iter_1708.input)

    output = (local.curr_1709.code == "."
      ? "${local.iter_1708.output}${jsondecode(format("\"\\u%04x\"", local.iter_1708.tape[local.iter_1708.tape_ptr]))}"
      : local.iter_1708.output)
    
    tape = (
      local.curr_1709.code == "+"
        ? [for i, b in local.iter_1708.tape : (i == local.iter_1708.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1709.code == "-"
        ? [for i, b in local.iter_1708.tape : (i == local.iter_1708.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1709.code == ","
        ? [for i, b in local.iter_1708.tape : (i == local.iter_1708.tape_ptr ? local.ascii_lookup[local.curr_1709.input] : b)]
        : local.iter_1708.tape)

    tape_ptr = (
      local.curr_1709.code == "<"
        ? local.iter_1708.tape_ptr == 0 ? length(local.iter_1708.tape) - 1 : local.iter_1708.tape_ptr - 1 :
      local.curr_1709.code == ">"
        ? local.iter_1708.tape_ptr == length(local.iter_1708.tape) - 1 ? 0 : local.iter_1708.tape_ptr + 1
        : local.iter_1708.tape_ptr)

    code_ptr = 1 + (
      local.curr_1709.code == "["
        ? local.iter_1708.tape[local.iter_1708.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1708.code_ptr)] : local.iter_1708.code_ptr :
      local.curr_1709.code == "]"
        ? local.iter_1708.tape[local.iter_1708.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1708.code_ptr)] : local.iter_1708.code_ptr
        : local.iter_1708.code_ptr)

    steps_taken = 1 + local.iter_1708.steps_taken
  }
}

locals {
  end_of_code_1710 = try(local.iter_1709.code_ptr >= length(var.code), true)

  curr_1710 = local.end_of_code_1710 ? null : {
    code = substr(var.code, local.iter_1709.code_ptr, 1)
    input = substr(var.code, local.iter_1709.code_ptr, 1) == "," ? substr(local.iter_1709.input, 0, 1) : null
  }

  iter_1710 = local.end_of_code_1710 ? local.iter_1709 : {
    input = (local.curr_1710.code == ","
      ? substr(local.iter_1709.input, 1, -1)
      : local.iter_1709.input)

    output = (local.curr_1710.code == "."
      ? "${local.iter_1709.output}${jsondecode(format("\"\\u%04x\"", local.iter_1709.tape[local.iter_1709.tape_ptr]))}"
      : local.iter_1709.output)
    
    tape = (
      local.curr_1710.code == "+"
        ? [for i, b in local.iter_1709.tape : (i == local.iter_1709.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1710.code == "-"
        ? [for i, b in local.iter_1709.tape : (i == local.iter_1709.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1710.code == ","
        ? [for i, b in local.iter_1709.tape : (i == local.iter_1709.tape_ptr ? local.ascii_lookup[local.curr_1710.input] : b)]
        : local.iter_1709.tape)

    tape_ptr = (
      local.curr_1710.code == "<"
        ? local.iter_1709.tape_ptr == 0 ? length(local.iter_1709.tape) - 1 : local.iter_1709.tape_ptr - 1 :
      local.curr_1710.code == ">"
        ? local.iter_1709.tape_ptr == length(local.iter_1709.tape) - 1 ? 0 : local.iter_1709.tape_ptr + 1
        : local.iter_1709.tape_ptr)

    code_ptr = 1 + (
      local.curr_1710.code == "["
        ? local.iter_1709.tape[local.iter_1709.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1709.code_ptr)] : local.iter_1709.code_ptr :
      local.curr_1710.code == "]"
        ? local.iter_1709.tape[local.iter_1709.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1709.code_ptr)] : local.iter_1709.code_ptr
        : local.iter_1709.code_ptr)

    steps_taken = 1 + local.iter_1709.steps_taken
  }
}

locals {
  end_of_code_1711 = try(local.iter_1710.code_ptr >= length(var.code), true)

  curr_1711 = local.end_of_code_1711 ? null : {
    code = substr(var.code, local.iter_1710.code_ptr, 1)
    input = substr(var.code, local.iter_1710.code_ptr, 1) == "," ? substr(local.iter_1710.input, 0, 1) : null
  }

  iter_1711 = local.end_of_code_1711 ? local.iter_1710 : {
    input = (local.curr_1711.code == ","
      ? substr(local.iter_1710.input, 1, -1)
      : local.iter_1710.input)

    output = (local.curr_1711.code == "."
      ? "${local.iter_1710.output}${jsondecode(format("\"\\u%04x\"", local.iter_1710.tape[local.iter_1710.tape_ptr]))}"
      : local.iter_1710.output)
    
    tape = (
      local.curr_1711.code == "+"
        ? [for i, b in local.iter_1710.tape : (i == local.iter_1710.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1711.code == "-"
        ? [for i, b in local.iter_1710.tape : (i == local.iter_1710.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1711.code == ","
        ? [for i, b in local.iter_1710.tape : (i == local.iter_1710.tape_ptr ? local.ascii_lookup[local.curr_1711.input] : b)]
        : local.iter_1710.tape)

    tape_ptr = (
      local.curr_1711.code == "<"
        ? local.iter_1710.tape_ptr == 0 ? length(local.iter_1710.tape) - 1 : local.iter_1710.tape_ptr - 1 :
      local.curr_1711.code == ">"
        ? local.iter_1710.tape_ptr == length(local.iter_1710.tape) - 1 ? 0 : local.iter_1710.tape_ptr + 1
        : local.iter_1710.tape_ptr)

    code_ptr = 1 + (
      local.curr_1711.code == "["
        ? local.iter_1710.tape[local.iter_1710.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1710.code_ptr)] : local.iter_1710.code_ptr :
      local.curr_1711.code == "]"
        ? local.iter_1710.tape[local.iter_1710.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1710.code_ptr)] : local.iter_1710.code_ptr
        : local.iter_1710.code_ptr)

    steps_taken = 1 + local.iter_1710.steps_taken
  }
}

locals {
  end_of_code_1712 = try(local.iter_1711.code_ptr >= length(var.code), true)

  curr_1712 = local.end_of_code_1712 ? null : {
    code = substr(var.code, local.iter_1711.code_ptr, 1)
    input = substr(var.code, local.iter_1711.code_ptr, 1) == "," ? substr(local.iter_1711.input, 0, 1) : null
  }

  iter_1712 = local.end_of_code_1712 ? local.iter_1711 : {
    input = (local.curr_1712.code == ","
      ? substr(local.iter_1711.input, 1, -1)
      : local.iter_1711.input)

    output = (local.curr_1712.code == "."
      ? "${local.iter_1711.output}${jsondecode(format("\"\\u%04x\"", local.iter_1711.tape[local.iter_1711.tape_ptr]))}"
      : local.iter_1711.output)
    
    tape = (
      local.curr_1712.code == "+"
        ? [for i, b in local.iter_1711.tape : (i == local.iter_1711.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1712.code == "-"
        ? [for i, b in local.iter_1711.tape : (i == local.iter_1711.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1712.code == ","
        ? [for i, b in local.iter_1711.tape : (i == local.iter_1711.tape_ptr ? local.ascii_lookup[local.curr_1712.input] : b)]
        : local.iter_1711.tape)

    tape_ptr = (
      local.curr_1712.code == "<"
        ? local.iter_1711.tape_ptr == 0 ? length(local.iter_1711.tape) - 1 : local.iter_1711.tape_ptr - 1 :
      local.curr_1712.code == ">"
        ? local.iter_1711.tape_ptr == length(local.iter_1711.tape) - 1 ? 0 : local.iter_1711.tape_ptr + 1
        : local.iter_1711.tape_ptr)

    code_ptr = 1 + (
      local.curr_1712.code == "["
        ? local.iter_1711.tape[local.iter_1711.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1711.code_ptr)] : local.iter_1711.code_ptr :
      local.curr_1712.code == "]"
        ? local.iter_1711.tape[local.iter_1711.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1711.code_ptr)] : local.iter_1711.code_ptr
        : local.iter_1711.code_ptr)

    steps_taken = 1 + local.iter_1711.steps_taken
  }
}

locals {
  end_of_code_1713 = try(local.iter_1712.code_ptr >= length(var.code), true)

  curr_1713 = local.end_of_code_1713 ? null : {
    code = substr(var.code, local.iter_1712.code_ptr, 1)
    input = substr(var.code, local.iter_1712.code_ptr, 1) == "," ? substr(local.iter_1712.input, 0, 1) : null
  }

  iter_1713 = local.end_of_code_1713 ? local.iter_1712 : {
    input = (local.curr_1713.code == ","
      ? substr(local.iter_1712.input, 1, -1)
      : local.iter_1712.input)

    output = (local.curr_1713.code == "."
      ? "${local.iter_1712.output}${jsondecode(format("\"\\u%04x\"", local.iter_1712.tape[local.iter_1712.tape_ptr]))}"
      : local.iter_1712.output)
    
    tape = (
      local.curr_1713.code == "+"
        ? [for i, b in local.iter_1712.tape : (i == local.iter_1712.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1713.code == "-"
        ? [for i, b in local.iter_1712.tape : (i == local.iter_1712.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1713.code == ","
        ? [for i, b in local.iter_1712.tape : (i == local.iter_1712.tape_ptr ? local.ascii_lookup[local.curr_1713.input] : b)]
        : local.iter_1712.tape)

    tape_ptr = (
      local.curr_1713.code == "<"
        ? local.iter_1712.tape_ptr == 0 ? length(local.iter_1712.tape) - 1 : local.iter_1712.tape_ptr - 1 :
      local.curr_1713.code == ">"
        ? local.iter_1712.tape_ptr == length(local.iter_1712.tape) - 1 ? 0 : local.iter_1712.tape_ptr + 1
        : local.iter_1712.tape_ptr)

    code_ptr = 1 + (
      local.curr_1713.code == "["
        ? local.iter_1712.tape[local.iter_1712.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1712.code_ptr)] : local.iter_1712.code_ptr :
      local.curr_1713.code == "]"
        ? local.iter_1712.tape[local.iter_1712.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1712.code_ptr)] : local.iter_1712.code_ptr
        : local.iter_1712.code_ptr)

    steps_taken = 1 + local.iter_1712.steps_taken
  }
}

locals {
  end_of_code_1714 = try(local.iter_1713.code_ptr >= length(var.code), true)

  curr_1714 = local.end_of_code_1714 ? null : {
    code = substr(var.code, local.iter_1713.code_ptr, 1)
    input = substr(var.code, local.iter_1713.code_ptr, 1) == "," ? substr(local.iter_1713.input, 0, 1) : null
  }

  iter_1714 = local.end_of_code_1714 ? local.iter_1713 : {
    input = (local.curr_1714.code == ","
      ? substr(local.iter_1713.input, 1, -1)
      : local.iter_1713.input)

    output = (local.curr_1714.code == "."
      ? "${local.iter_1713.output}${jsondecode(format("\"\\u%04x\"", local.iter_1713.tape[local.iter_1713.tape_ptr]))}"
      : local.iter_1713.output)
    
    tape = (
      local.curr_1714.code == "+"
        ? [for i, b in local.iter_1713.tape : (i == local.iter_1713.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1714.code == "-"
        ? [for i, b in local.iter_1713.tape : (i == local.iter_1713.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1714.code == ","
        ? [for i, b in local.iter_1713.tape : (i == local.iter_1713.tape_ptr ? local.ascii_lookup[local.curr_1714.input] : b)]
        : local.iter_1713.tape)

    tape_ptr = (
      local.curr_1714.code == "<"
        ? local.iter_1713.tape_ptr == 0 ? length(local.iter_1713.tape) - 1 : local.iter_1713.tape_ptr - 1 :
      local.curr_1714.code == ">"
        ? local.iter_1713.tape_ptr == length(local.iter_1713.tape) - 1 ? 0 : local.iter_1713.tape_ptr + 1
        : local.iter_1713.tape_ptr)

    code_ptr = 1 + (
      local.curr_1714.code == "["
        ? local.iter_1713.tape[local.iter_1713.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1713.code_ptr)] : local.iter_1713.code_ptr :
      local.curr_1714.code == "]"
        ? local.iter_1713.tape[local.iter_1713.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1713.code_ptr)] : local.iter_1713.code_ptr
        : local.iter_1713.code_ptr)

    steps_taken = 1 + local.iter_1713.steps_taken
  }
}

locals {
  end_of_code_1715 = try(local.iter_1714.code_ptr >= length(var.code), true)

  curr_1715 = local.end_of_code_1715 ? null : {
    code = substr(var.code, local.iter_1714.code_ptr, 1)
    input = substr(var.code, local.iter_1714.code_ptr, 1) == "," ? substr(local.iter_1714.input, 0, 1) : null
  }

  iter_1715 = local.end_of_code_1715 ? local.iter_1714 : {
    input = (local.curr_1715.code == ","
      ? substr(local.iter_1714.input, 1, -1)
      : local.iter_1714.input)

    output = (local.curr_1715.code == "."
      ? "${local.iter_1714.output}${jsondecode(format("\"\\u%04x\"", local.iter_1714.tape[local.iter_1714.tape_ptr]))}"
      : local.iter_1714.output)
    
    tape = (
      local.curr_1715.code == "+"
        ? [for i, b in local.iter_1714.tape : (i == local.iter_1714.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1715.code == "-"
        ? [for i, b in local.iter_1714.tape : (i == local.iter_1714.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1715.code == ","
        ? [for i, b in local.iter_1714.tape : (i == local.iter_1714.tape_ptr ? local.ascii_lookup[local.curr_1715.input] : b)]
        : local.iter_1714.tape)

    tape_ptr = (
      local.curr_1715.code == "<"
        ? local.iter_1714.tape_ptr == 0 ? length(local.iter_1714.tape) - 1 : local.iter_1714.tape_ptr - 1 :
      local.curr_1715.code == ">"
        ? local.iter_1714.tape_ptr == length(local.iter_1714.tape) - 1 ? 0 : local.iter_1714.tape_ptr + 1
        : local.iter_1714.tape_ptr)

    code_ptr = 1 + (
      local.curr_1715.code == "["
        ? local.iter_1714.tape[local.iter_1714.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1714.code_ptr)] : local.iter_1714.code_ptr :
      local.curr_1715.code == "]"
        ? local.iter_1714.tape[local.iter_1714.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1714.code_ptr)] : local.iter_1714.code_ptr
        : local.iter_1714.code_ptr)

    steps_taken = 1 + local.iter_1714.steps_taken
  }
}

locals {
  end_of_code_1716 = try(local.iter_1715.code_ptr >= length(var.code), true)

  curr_1716 = local.end_of_code_1716 ? null : {
    code = substr(var.code, local.iter_1715.code_ptr, 1)
    input = substr(var.code, local.iter_1715.code_ptr, 1) == "," ? substr(local.iter_1715.input, 0, 1) : null
  }

  iter_1716 = local.end_of_code_1716 ? local.iter_1715 : {
    input = (local.curr_1716.code == ","
      ? substr(local.iter_1715.input, 1, -1)
      : local.iter_1715.input)

    output = (local.curr_1716.code == "."
      ? "${local.iter_1715.output}${jsondecode(format("\"\\u%04x\"", local.iter_1715.tape[local.iter_1715.tape_ptr]))}"
      : local.iter_1715.output)
    
    tape = (
      local.curr_1716.code == "+"
        ? [for i, b in local.iter_1715.tape : (i == local.iter_1715.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1716.code == "-"
        ? [for i, b in local.iter_1715.tape : (i == local.iter_1715.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1716.code == ","
        ? [for i, b in local.iter_1715.tape : (i == local.iter_1715.tape_ptr ? local.ascii_lookup[local.curr_1716.input] : b)]
        : local.iter_1715.tape)

    tape_ptr = (
      local.curr_1716.code == "<"
        ? local.iter_1715.tape_ptr == 0 ? length(local.iter_1715.tape) - 1 : local.iter_1715.tape_ptr - 1 :
      local.curr_1716.code == ">"
        ? local.iter_1715.tape_ptr == length(local.iter_1715.tape) - 1 ? 0 : local.iter_1715.tape_ptr + 1
        : local.iter_1715.tape_ptr)

    code_ptr = 1 + (
      local.curr_1716.code == "["
        ? local.iter_1715.tape[local.iter_1715.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1715.code_ptr)] : local.iter_1715.code_ptr :
      local.curr_1716.code == "]"
        ? local.iter_1715.tape[local.iter_1715.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1715.code_ptr)] : local.iter_1715.code_ptr
        : local.iter_1715.code_ptr)

    steps_taken = 1 + local.iter_1715.steps_taken
  }
}

locals {
  end_of_code_1717 = try(local.iter_1716.code_ptr >= length(var.code), true)

  curr_1717 = local.end_of_code_1717 ? null : {
    code = substr(var.code, local.iter_1716.code_ptr, 1)
    input = substr(var.code, local.iter_1716.code_ptr, 1) == "," ? substr(local.iter_1716.input, 0, 1) : null
  }

  iter_1717 = local.end_of_code_1717 ? local.iter_1716 : {
    input = (local.curr_1717.code == ","
      ? substr(local.iter_1716.input, 1, -1)
      : local.iter_1716.input)

    output = (local.curr_1717.code == "."
      ? "${local.iter_1716.output}${jsondecode(format("\"\\u%04x\"", local.iter_1716.tape[local.iter_1716.tape_ptr]))}"
      : local.iter_1716.output)
    
    tape = (
      local.curr_1717.code == "+"
        ? [for i, b in local.iter_1716.tape : (i == local.iter_1716.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1717.code == "-"
        ? [for i, b in local.iter_1716.tape : (i == local.iter_1716.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1717.code == ","
        ? [for i, b in local.iter_1716.tape : (i == local.iter_1716.tape_ptr ? local.ascii_lookup[local.curr_1717.input] : b)]
        : local.iter_1716.tape)

    tape_ptr = (
      local.curr_1717.code == "<"
        ? local.iter_1716.tape_ptr == 0 ? length(local.iter_1716.tape) - 1 : local.iter_1716.tape_ptr - 1 :
      local.curr_1717.code == ">"
        ? local.iter_1716.tape_ptr == length(local.iter_1716.tape) - 1 ? 0 : local.iter_1716.tape_ptr + 1
        : local.iter_1716.tape_ptr)

    code_ptr = 1 + (
      local.curr_1717.code == "["
        ? local.iter_1716.tape[local.iter_1716.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1716.code_ptr)] : local.iter_1716.code_ptr :
      local.curr_1717.code == "]"
        ? local.iter_1716.tape[local.iter_1716.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1716.code_ptr)] : local.iter_1716.code_ptr
        : local.iter_1716.code_ptr)

    steps_taken = 1 + local.iter_1716.steps_taken
  }
}

locals {
  end_of_code_1718 = try(local.iter_1717.code_ptr >= length(var.code), true)

  curr_1718 = local.end_of_code_1718 ? null : {
    code = substr(var.code, local.iter_1717.code_ptr, 1)
    input = substr(var.code, local.iter_1717.code_ptr, 1) == "," ? substr(local.iter_1717.input, 0, 1) : null
  }

  iter_1718 = local.end_of_code_1718 ? local.iter_1717 : {
    input = (local.curr_1718.code == ","
      ? substr(local.iter_1717.input, 1, -1)
      : local.iter_1717.input)

    output = (local.curr_1718.code == "."
      ? "${local.iter_1717.output}${jsondecode(format("\"\\u%04x\"", local.iter_1717.tape[local.iter_1717.tape_ptr]))}"
      : local.iter_1717.output)
    
    tape = (
      local.curr_1718.code == "+"
        ? [for i, b in local.iter_1717.tape : (i == local.iter_1717.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1718.code == "-"
        ? [for i, b in local.iter_1717.tape : (i == local.iter_1717.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1718.code == ","
        ? [for i, b in local.iter_1717.tape : (i == local.iter_1717.tape_ptr ? local.ascii_lookup[local.curr_1718.input] : b)]
        : local.iter_1717.tape)

    tape_ptr = (
      local.curr_1718.code == "<"
        ? local.iter_1717.tape_ptr == 0 ? length(local.iter_1717.tape) - 1 : local.iter_1717.tape_ptr - 1 :
      local.curr_1718.code == ">"
        ? local.iter_1717.tape_ptr == length(local.iter_1717.tape) - 1 ? 0 : local.iter_1717.tape_ptr + 1
        : local.iter_1717.tape_ptr)

    code_ptr = 1 + (
      local.curr_1718.code == "["
        ? local.iter_1717.tape[local.iter_1717.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1717.code_ptr)] : local.iter_1717.code_ptr :
      local.curr_1718.code == "]"
        ? local.iter_1717.tape[local.iter_1717.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1717.code_ptr)] : local.iter_1717.code_ptr
        : local.iter_1717.code_ptr)

    steps_taken = 1 + local.iter_1717.steps_taken
  }
}

locals {
  end_of_code_1719 = try(local.iter_1718.code_ptr >= length(var.code), true)

  curr_1719 = local.end_of_code_1719 ? null : {
    code = substr(var.code, local.iter_1718.code_ptr, 1)
    input = substr(var.code, local.iter_1718.code_ptr, 1) == "," ? substr(local.iter_1718.input, 0, 1) : null
  }

  iter_1719 = local.end_of_code_1719 ? local.iter_1718 : {
    input = (local.curr_1719.code == ","
      ? substr(local.iter_1718.input, 1, -1)
      : local.iter_1718.input)

    output = (local.curr_1719.code == "."
      ? "${local.iter_1718.output}${jsondecode(format("\"\\u%04x\"", local.iter_1718.tape[local.iter_1718.tape_ptr]))}"
      : local.iter_1718.output)
    
    tape = (
      local.curr_1719.code == "+"
        ? [for i, b in local.iter_1718.tape : (i == local.iter_1718.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1719.code == "-"
        ? [for i, b in local.iter_1718.tape : (i == local.iter_1718.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1719.code == ","
        ? [for i, b in local.iter_1718.tape : (i == local.iter_1718.tape_ptr ? local.ascii_lookup[local.curr_1719.input] : b)]
        : local.iter_1718.tape)

    tape_ptr = (
      local.curr_1719.code == "<"
        ? local.iter_1718.tape_ptr == 0 ? length(local.iter_1718.tape) - 1 : local.iter_1718.tape_ptr - 1 :
      local.curr_1719.code == ">"
        ? local.iter_1718.tape_ptr == length(local.iter_1718.tape) - 1 ? 0 : local.iter_1718.tape_ptr + 1
        : local.iter_1718.tape_ptr)

    code_ptr = 1 + (
      local.curr_1719.code == "["
        ? local.iter_1718.tape[local.iter_1718.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1718.code_ptr)] : local.iter_1718.code_ptr :
      local.curr_1719.code == "]"
        ? local.iter_1718.tape[local.iter_1718.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1718.code_ptr)] : local.iter_1718.code_ptr
        : local.iter_1718.code_ptr)

    steps_taken = 1 + local.iter_1718.steps_taken
  }
}

locals {
  end_of_code_1720 = try(local.iter_1719.code_ptr >= length(var.code), true)

  curr_1720 = local.end_of_code_1720 ? null : {
    code = substr(var.code, local.iter_1719.code_ptr, 1)
    input = substr(var.code, local.iter_1719.code_ptr, 1) == "," ? substr(local.iter_1719.input, 0, 1) : null
  }

  iter_1720 = local.end_of_code_1720 ? local.iter_1719 : {
    input = (local.curr_1720.code == ","
      ? substr(local.iter_1719.input, 1, -1)
      : local.iter_1719.input)

    output = (local.curr_1720.code == "."
      ? "${local.iter_1719.output}${jsondecode(format("\"\\u%04x\"", local.iter_1719.tape[local.iter_1719.tape_ptr]))}"
      : local.iter_1719.output)
    
    tape = (
      local.curr_1720.code == "+"
        ? [for i, b in local.iter_1719.tape : (i == local.iter_1719.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1720.code == "-"
        ? [for i, b in local.iter_1719.tape : (i == local.iter_1719.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1720.code == ","
        ? [for i, b in local.iter_1719.tape : (i == local.iter_1719.tape_ptr ? local.ascii_lookup[local.curr_1720.input] : b)]
        : local.iter_1719.tape)

    tape_ptr = (
      local.curr_1720.code == "<"
        ? local.iter_1719.tape_ptr == 0 ? length(local.iter_1719.tape) - 1 : local.iter_1719.tape_ptr - 1 :
      local.curr_1720.code == ">"
        ? local.iter_1719.tape_ptr == length(local.iter_1719.tape) - 1 ? 0 : local.iter_1719.tape_ptr + 1
        : local.iter_1719.tape_ptr)

    code_ptr = 1 + (
      local.curr_1720.code == "["
        ? local.iter_1719.tape[local.iter_1719.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1719.code_ptr)] : local.iter_1719.code_ptr :
      local.curr_1720.code == "]"
        ? local.iter_1719.tape[local.iter_1719.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1719.code_ptr)] : local.iter_1719.code_ptr
        : local.iter_1719.code_ptr)

    steps_taken = 1 + local.iter_1719.steps_taken
  }
}

locals {
  end_of_code_1721 = try(local.iter_1720.code_ptr >= length(var.code), true)

  curr_1721 = local.end_of_code_1721 ? null : {
    code = substr(var.code, local.iter_1720.code_ptr, 1)
    input = substr(var.code, local.iter_1720.code_ptr, 1) == "," ? substr(local.iter_1720.input, 0, 1) : null
  }

  iter_1721 = local.end_of_code_1721 ? local.iter_1720 : {
    input = (local.curr_1721.code == ","
      ? substr(local.iter_1720.input, 1, -1)
      : local.iter_1720.input)

    output = (local.curr_1721.code == "."
      ? "${local.iter_1720.output}${jsondecode(format("\"\\u%04x\"", local.iter_1720.tape[local.iter_1720.tape_ptr]))}"
      : local.iter_1720.output)
    
    tape = (
      local.curr_1721.code == "+"
        ? [for i, b in local.iter_1720.tape : (i == local.iter_1720.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1721.code == "-"
        ? [for i, b in local.iter_1720.tape : (i == local.iter_1720.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1721.code == ","
        ? [for i, b in local.iter_1720.tape : (i == local.iter_1720.tape_ptr ? local.ascii_lookup[local.curr_1721.input] : b)]
        : local.iter_1720.tape)

    tape_ptr = (
      local.curr_1721.code == "<"
        ? local.iter_1720.tape_ptr == 0 ? length(local.iter_1720.tape) - 1 : local.iter_1720.tape_ptr - 1 :
      local.curr_1721.code == ">"
        ? local.iter_1720.tape_ptr == length(local.iter_1720.tape) - 1 ? 0 : local.iter_1720.tape_ptr + 1
        : local.iter_1720.tape_ptr)

    code_ptr = 1 + (
      local.curr_1721.code == "["
        ? local.iter_1720.tape[local.iter_1720.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1720.code_ptr)] : local.iter_1720.code_ptr :
      local.curr_1721.code == "]"
        ? local.iter_1720.tape[local.iter_1720.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1720.code_ptr)] : local.iter_1720.code_ptr
        : local.iter_1720.code_ptr)

    steps_taken = 1 + local.iter_1720.steps_taken
  }
}

locals {
  end_of_code_1722 = try(local.iter_1721.code_ptr >= length(var.code), true)

  curr_1722 = local.end_of_code_1722 ? null : {
    code = substr(var.code, local.iter_1721.code_ptr, 1)
    input = substr(var.code, local.iter_1721.code_ptr, 1) == "," ? substr(local.iter_1721.input, 0, 1) : null
  }

  iter_1722 = local.end_of_code_1722 ? local.iter_1721 : {
    input = (local.curr_1722.code == ","
      ? substr(local.iter_1721.input, 1, -1)
      : local.iter_1721.input)

    output = (local.curr_1722.code == "."
      ? "${local.iter_1721.output}${jsondecode(format("\"\\u%04x\"", local.iter_1721.tape[local.iter_1721.tape_ptr]))}"
      : local.iter_1721.output)
    
    tape = (
      local.curr_1722.code == "+"
        ? [for i, b in local.iter_1721.tape : (i == local.iter_1721.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1722.code == "-"
        ? [for i, b in local.iter_1721.tape : (i == local.iter_1721.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1722.code == ","
        ? [for i, b in local.iter_1721.tape : (i == local.iter_1721.tape_ptr ? local.ascii_lookup[local.curr_1722.input] : b)]
        : local.iter_1721.tape)

    tape_ptr = (
      local.curr_1722.code == "<"
        ? local.iter_1721.tape_ptr == 0 ? length(local.iter_1721.tape) - 1 : local.iter_1721.tape_ptr - 1 :
      local.curr_1722.code == ">"
        ? local.iter_1721.tape_ptr == length(local.iter_1721.tape) - 1 ? 0 : local.iter_1721.tape_ptr + 1
        : local.iter_1721.tape_ptr)

    code_ptr = 1 + (
      local.curr_1722.code == "["
        ? local.iter_1721.tape[local.iter_1721.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1721.code_ptr)] : local.iter_1721.code_ptr :
      local.curr_1722.code == "]"
        ? local.iter_1721.tape[local.iter_1721.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1721.code_ptr)] : local.iter_1721.code_ptr
        : local.iter_1721.code_ptr)

    steps_taken = 1 + local.iter_1721.steps_taken
  }
}

locals {
  end_of_code_1723 = try(local.iter_1722.code_ptr >= length(var.code), true)

  curr_1723 = local.end_of_code_1723 ? null : {
    code = substr(var.code, local.iter_1722.code_ptr, 1)
    input = substr(var.code, local.iter_1722.code_ptr, 1) == "," ? substr(local.iter_1722.input, 0, 1) : null
  }

  iter_1723 = local.end_of_code_1723 ? local.iter_1722 : {
    input = (local.curr_1723.code == ","
      ? substr(local.iter_1722.input, 1, -1)
      : local.iter_1722.input)

    output = (local.curr_1723.code == "."
      ? "${local.iter_1722.output}${jsondecode(format("\"\\u%04x\"", local.iter_1722.tape[local.iter_1722.tape_ptr]))}"
      : local.iter_1722.output)
    
    tape = (
      local.curr_1723.code == "+"
        ? [for i, b in local.iter_1722.tape : (i == local.iter_1722.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1723.code == "-"
        ? [for i, b in local.iter_1722.tape : (i == local.iter_1722.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1723.code == ","
        ? [for i, b in local.iter_1722.tape : (i == local.iter_1722.tape_ptr ? local.ascii_lookup[local.curr_1723.input] : b)]
        : local.iter_1722.tape)

    tape_ptr = (
      local.curr_1723.code == "<"
        ? local.iter_1722.tape_ptr == 0 ? length(local.iter_1722.tape) - 1 : local.iter_1722.tape_ptr - 1 :
      local.curr_1723.code == ">"
        ? local.iter_1722.tape_ptr == length(local.iter_1722.tape) - 1 ? 0 : local.iter_1722.tape_ptr + 1
        : local.iter_1722.tape_ptr)

    code_ptr = 1 + (
      local.curr_1723.code == "["
        ? local.iter_1722.tape[local.iter_1722.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1722.code_ptr)] : local.iter_1722.code_ptr :
      local.curr_1723.code == "]"
        ? local.iter_1722.tape[local.iter_1722.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1722.code_ptr)] : local.iter_1722.code_ptr
        : local.iter_1722.code_ptr)

    steps_taken = 1 + local.iter_1722.steps_taken
  }
}

locals {
  end_of_code_1724 = try(local.iter_1723.code_ptr >= length(var.code), true)

  curr_1724 = local.end_of_code_1724 ? null : {
    code = substr(var.code, local.iter_1723.code_ptr, 1)
    input = substr(var.code, local.iter_1723.code_ptr, 1) == "," ? substr(local.iter_1723.input, 0, 1) : null
  }

  iter_1724 = local.end_of_code_1724 ? local.iter_1723 : {
    input = (local.curr_1724.code == ","
      ? substr(local.iter_1723.input, 1, -1)
      : local.iter_1723.input)

    output = (local.curr_1724.code == "."
      ? "${local.iter_1723.output}${jsondecode(format("\"\\u%04x\"", local.iter_1723.tape[local.iter_1723.tape_ptr]))}"
      : local.iter_1723.output)
    
    tape = (
      local.curr_1724.code == "+"
        ? [for i, b in local.iter_1723.tape : (i == local.iter_1723.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1724.code == "-"
        ? [for i, b in local.iter_1723.tape : (i == local.iter_1723.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1724.code == ","
        ? [for i, b in local.iter_1723.tape : (i == local.iter_1723.tape_ptr ? local.ascii_lookup[local.curr_1724.input] : b)]
        : local.iter_1723.tape)

    tape_ptr = (
      local.curr_1724.code == "<"
        ? local.iter_1723.tape_ptr == 0 ? length(local.iter_1723.tape) - 1 : local.iter_1723.tape_ptr - 1 :
      local.curr_1724.code == ">"
        ? local.iter_1723.tape_ptr == length(local.iter_1723.tape) - 1 ? 0 : local.iter_1723.tape_ptr + 1
        : local.iter_1723.tape_ptr)

    code_ptr = 1 + (
      local.curr_1724.code == "["
        ? local.iter_1723.tape[local.iter_1723.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1723.code_ptr)] : local.iter_1723.code_ptr :
      local.curr_1724.code == "]"
        ? local.iter_1723.tape[local.iter_1723.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1723.code_ptr)] : local.iter_1723.code_ptr
        : local.iter_1723.code_ptr)

    steps_taken = 1 + local.iter_1723.steps_taken
  }
}

locals {
  end_of_code_1725 = try(local.iter_1724.code_ptr >= length(var.code), true)

  curr_1725 = local.end_of_code_1725 ? null : {
    code = substr(var.code, local.iter_1724.code_ptr, 1)
    input = substr(var.code, local.iter_1724.code_ptr, 1) == "," ? substr(local.iter_1724.input, 0, 1) : null
  }

  iter_1725 = local.end_of_code_1725 ? local.iter_1724 : {
    input = (local.curr_1725.code == ","
      ? substr(local.iter_1724.input, 1, -1)
      : local.iter_1724.input)

    output = (local.curr_1725.code == "."
      ? "${local.iter_1724.output}${jsondecode(format("\"\\u%04x\"", local.iter_1724.tape[local.iter_1724.tape_ptr]))}"
      : local.iter_1724.output)
    
    tape = (
      local.curr_1725.code == "+"
        ? [for i, b in local.iter_1724.tape : (i == local.iter_1724.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1725.code == "-"
        ? [for i, b in local.iter_1724.tape : (i == local.iter_1724.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1725.code == ","
        ? [for i, b in local.iter_1724.tape : (i == local.iter_1724.tape_ptr ? local.ascii_lookup[local.curr_1725.input] : b)]
        : local.iter_1724.tape)

    tape_ptr = (
      local.curr_1725.code == "<"
        ? local.iter_1724.tape_ptr == 0 ? length(local.iter_1724.tape) - 1 : local.iter_1724.tape_ptr - 1 :
      local.curr_1725.code == ">"
        ? local.iter_1724.tape_ptr == length(local.iter_1724.tape) - 1 ? 0 : local.iter_1724.tape_ptr + 1
        : local.iter_1724.tape_ptr)

    code_ptr = 1 + (
      local.curr_1725.code == "["
        ? local.iter_1724.tape[local.iter_1724.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1724.code_ptr)] : local.iter_1724.code_ptr :
      local.curr_1725.code == "]"
        ? local.iter_1724.tape[local.iter_1724.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1724.code_ptr)] : local.iter_1724.code_ptr
        : local.iter_1724.code_ptr)

    steps_taken = 1 + local.iter_1724.steps_taken
  }
}

locals {
  end_of_code_1726 = try(local.iter_1725.code_ptr >= length(var.code), true)

  curr_1726 = local.end_of_code_1726 ? null : {
    code = substr(var.code, local.iter_1725.code_ptr, 1)
    input = substr(var.code, local.iter_1725.code_ptr, 1) == "," ? substr(local.iter_1725.input, 0, 1) : null
  }

  iter_1726 = local.end_of_code_1726 ? local.iter_1725 : {
    input = (local.curr_1726.code == ","
      ? substr(local.iter_1725.input, 1, -1)
      : local.iter_1725.input)

    output = (local.curr_1726.code == "."
      ? "${local.iter_1725.output}${jsondecode(format("\"\\u%04x\"", local.iter_1725.tape[local.iter_1725.tape_ptr]))}"
      : local.iter_1725.output)
    
    tape = (
      local.curr_1726.code == "+"
        ? [for i, b in local.iter_1725.tape : (i == local.iter_1725.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1726.code == "-"
        ? [for i, b in local.iter_1725.tape : (i == local.iter_1725.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1726.code == ","
        ? [for i, b in local.iter_1725.tape : (i == local.iter_1725.tape_ptr ? local.ascii_lookup[local.curr_1726.input] : b)]
        : local.iter_1725.tape)

    tape_ptr = (
      local.curr_1726.code == "<"
        ? local.iter_1725.tape_ptr == 0 ? length(local.iter_1725.tape) - 1 : local.iter_1725.tape_ptr - 1 :
      local.curr_1726.code == ">"
        ? local.iter_1725.tape_ptr == length(local.iter_1725.tape) - 1 ? 0 : local.iter_1725.tape_ptr + 1
        : local.iter_1725.tape_ptr)

    code_ptr = 1 + (
      local.curr_1726.code == "["
        ? local.iter_1725.tape[local.iter_1725.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1725.code_ptr)] : local.iter_1725.code_ptr :
      local.curr_1726.code == "]"
        ? local.iter_1725.tape[local.iter_1725.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1725.code_ptr)] : local.iter_1725.code_ptr
        : local.iter_1725.code_ptr)

    steps_taken = 1 + local.iter_1725.steps_taken
  }
}

locals {
  end_of_code_1727 = try(local.iter_1726.code_ptr >= length(var.code), true)

  curr_1727 = local.end_of_code_1727 ? null : {
    code = substr(var.code, local.iter_1726.code_ptr, 1)
    input = substr(var.code, local.iter_1726.code_ptr, 1) == "," ? substr(local.iter_1726.input, 0, 1) : null
  }

  iter_1727 = local.end_of_code_1727 ? local.iter_1726 : {
    input = (local.curr_1727.code == ","
      ? substr(local.iter_1726.input, 1, -1)
      : local.iter_1726.input)

    output = (local.curr_1727.code == "."
      ? "${local.iter_1726.output}${jsondecode(format("\"\\u%04x\"", local.iter_1726.tape[local.iter_1726.tape_ptr]))}"
      : local.iter_1726.output)
    
    tape = (
      local.curr_1727.code == "+"
        ? [for i, b in local.iter_1726.tape : (i == local.iter_1726.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1727.code == "-"
        ? [for i, b in local.iter_1726.tape : (i == local.iter_1726.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1727.code == ","
        ? [for i, b in local.iter_1726.tape : (i == local.iter_1726.tape_ptr ? local.ascii_lookup[local.curr_1727.input] : b)]
        : local.iter_1726.tape)

    tape_ptr = (
      local.curr_1727.code == "<"
        ? local.iter_1726.tape_ptr == 0 ? length(local.iter_1726.tape) - 1 : local.iter_1726.tape_ptr - 1 :
      local.curr_1727.code == ">"
        ? local.iter_1726.tape_ptr == length(local.iter_1726.tape) - 1 ? 0 : local.iter_1726.tape_ptr + 1
        : local.iter_1726.tape_ptr)

    code_ptr = 1 + (
      local.curr_1727.code == "["
        ? local.iter_1726.tape[local.iter_1726.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1726.code_ptr)] : local.iter_1726.code_ptr :
      local.curr_1727.code == "]"
        ? local.iter_1726.tape[local.iter_1726.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1726.code_ptr)] : local.iter_1726.code_ptr
        : local.iter_1726.code_ptr)

    steps_taken = 1 + local.iter_1726.steps_taken
  }
}

locals {
  end_of_code_1728 = try(local.iter_1727.code_ptr >= length(var.code), true)

  curr_1728 = local.end_of_code_1728 ? null : {
    code = substr(var.code, local.iter_1727.code_ptr, 1)
    input = substr(var.code, local.iter_1727.code_ptr, 1) == "," ? substr(local.iter_1727.input, 0, 1) : null
  }

  iter_1728 = local.end_of_code_1728 ? local.iter_1727 : {
    input = (local.curr_1728.code == ","
      ? substr(local.iter_1727.input, 1, -1)
      : local.iter_1727.input)

    output = (local.curr_1728.code == "."
      ? "${local.iter_1727.output}${jsondecode(format("\"\\u%04x\"", local.iter_1727.tape[local.iter_1727.tape_ptr]))}"
      : local.iter_1727.output)
    
    tape = (
      local.curr_1728.code == "+"
        ? [for i, b in local.iter_1727.tape : (i == local.iter_1727.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1728.code == "-"
        ? [for i, b in local.iter_1727.tape : (i == local.iter_1727.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1728.code == ","
        ? [for i, b in local.iter_1727.tape : (i == local.iter_1727.tape_ptr ? local.ascii_lookup[local.curr_1728.input] : b)]
        : local.iter_1727.tape)

    tape_ptr = (
      local.curr_1728.code == "<"
        ? local.iter_1727.tape_ptr == 0 ? length(local.iter_1727.tape) - 1 : local.iter_1727.tape_ptr - 1 :
      local.curr_1728.code == ">"
        ? local.iter_1727.tape_ptr == length(local.iter_1727.tape) - 1 ? 0 : local.iter_1727.tape_ptr + 1
        : local.iter_1727.tape_ptr)

    code_ptr = 1 + (
      local.curr_1728.code == "["
        ? local.iter_1727.tape[local.iter_1727.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1727.code_ptr)] : local.iter_1727.code_ptr :
      local.curr_1728.code == "]"
        ? local.iter_1727.tape[local.iter_1727.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1727.code_ptr)] : local.iter_1727.code_ptr
        : local.iter_1727.code_ptr)

    steps_taken = 1 + local.iter_1727.steps_taken
  }
}

locals {
  end_of_code_1729 = try(local.iter_1728.code_ptr >= length(var.code), true)

  curr_1729 = local.end_of_code_1729 ? null : {
    code = substr(var.code, local.iter_1728.code_ptr, 1)
    input = substr(var.code, local.iter_1728.code_ptr, 1) == "," ? substr(local.iter_1728.input, 0, 1) : null
  }

  iter_1729 = local.end_of_code_1729 ? local.iter_1728 : {
    input = (local.curr_1729.code == ","
      ? substr(local.iter_1728.input, 1, -1)
      : local.iter_1728.input)

    output = (local.curr_1729.code == "."
      ? "${local.iter_1728.output}${jsondecode(format("\"\\u%04x\"", local.iter_1728.tape[local.iter_1728.tape_ptr]))}"
      : local.iter_1728.output)
    
    tape = (
      local.curr_1729.code == "+"
        ? [for i, b in local.iter_1728.tape : (i == local.iter_1728.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1729.code == "-"
        ? [for i, b in local.iter_1728.tape : (i == local.iter_1728.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1729.code == ","
        ? [for i, b in local.iter_1728.tape : (i == local.iter_1728.tape_ptr ? local.ascii_lookup[local.curr_1729.input] : b)]
        : local.iter_1728.tape)

    tape_ptr = (
      local.curr_1729.code == "<"
        ? local.iter_1728.tape_ptr == 0 ? length(local.iter_1728.tape) - 1 : local.iter_1728.tape_ptr - 1 :
      local.curr_1729.code == ">"
        ? local.iter_1728.tape_ptr == length(local.iter_1728.tape) - 1 ? 0 : local.iter_1728.tape_ptr + 1
        : local.iter_1728.tape_ptr)

    code_ptr = 1 + (
      local.curr_1729.code == "["
        ? local.iter_1728.tape[local.iter_1728.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1728.code_ptr)] : local.iter_1728.code_ptr :
      local.curr_1729.code == "]"
        ? local.iter_1728.tape[local.iter_1728.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1728.code_ptr)] : local.iter_1728.code_ptr
        : local.iter_1728.code_ptr)

    steps_taken = 1 + local.iter_1728.steps_taken
  }
}

locals {
  end_of_code_1730 = try(local.iter_1729.code_ptr >= length(var.code), true)

  curr_1730 = local.end_of_code_1730 ? null : {
    code = substr(var.code, local.iter_1729.code_ptr, 1)
    input = substr(var.code, local.iter_1729.code_ptr, 1) == "," ? substr(local.iter_1729.input, 0, 1) : null
  }

  iter_1730 = local.end_of_code_1730 ? local.iter_1729 : {
    input = (local.curr_1730.code == ","
      ? substr(local.iter_1729.input, 1, -1)
      : local.iter_1729.input)

    output = (local.curr_1730.code == "."
      ? "${local.iter_1729.output}${jsondecode(format("\"\\u%04x\"", local.iter_1729.tape[local.iter_1729.tape_ptr]))}"
      : local.iter_1729.output)
    
    tape = (
      local.curr_1730.code == "+"
        ? [for i, b in local.iter_1729.tape : (i == local.iter_1729.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1730.code == "-"
        ? [for i, b in local.iter_1729.tape : (i == local.iter_1729.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1730.code == ","
        ? [for i, b in local.iter_1729.tape : (i == local.iter_1729.tape_ptr ? local.ascii_lookup[local.curr_1730.input] : b)]
        : local.iter_1729.tape)

    tape_ptr = (
      local.curr_1730.code == "<"
        ? local.iter_1729.tape_ptr == 0 ? length(local.iter_1729.tape) - 1 : local.iter_1729.tape_ptr - 1 :
      local.curr_1730.code == ">"
        ? local.iter_1729.tape_ptr == length(local.iter_1729.tape) - 1 ? 0 : local.iter_1729.tape_ptr + 1
        : local.iter_1729.tape_ptr)

    code_ptr = 1 + (
      local.curr_1730.code == "["
        ? local.iter_1729.tape[local.iter_1729.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1729.code_ptr)] : local.iter_1729.code_ptr :
      local.curr_1730.code == "]"
        ? local.iter_1729.tape[local.iter_1729.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1729.code_ptr)] : local.iter_1729.code_ptr
        : local.iter_1729.code_ptr)

    steps_taken = 1 + local.iter_1729.steps_taken
  }
}

locals {
  end_of_code_1731 = try(local.iter_1730.code_ptr >= length(var.code), true)

  curr_1731 = local.end_of_code_1731 ? null : {
    code = substr(var.code, local.iter_1730.code_ptr, 1)
    input = substr(var.code, local.iter_1730.code_ptr, 1) == "," ? substr(local.iter_1730.input, 0, 1) : null
  }

  iter_1731 = local.end_of_code_1731 ? local.iter_1730 : {
    input = (local.curr_1731.code == ","
      ? substr(local.iter_1730.input, 1, -1)
      : local.iter_1730.input)

    output = (local.curr_1731.code == "."
      ? "${local.iter_1730.output}${jsondecode(format("\"\\u%04x\"", local.iter_1730.tape[local.iter_1730.tape_ptr]))}"
      : local.iter_1730.output)
    
    tape = (
      local.curr_1731.code == "+"
        ? [for i, b in local.iter_1730.tape : (i == local.iter_1730.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1731.code == "-"
        ? [for i, b in local.iter_1730.tape : (i == local.iter_1730.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1731.code == ","
        ? [for i, b in local.iter_1730.tape : (i == local.iter_1730.tape_ptr ? local.ascii_lookup[local.curr_1731.input] : b)]
        : local.iter_1730.tape)

    tape_ptr = (
      local.curr_1731.code == "<"
        ? local.iter_1730.tape_ptr == 0 ? length(local.iter_1730.tape) - 1 : local.iter_1730.tape_ptr - 1 :
      local.curr_1731.code == ">"
        ? local.iter_1730.tape_ptr == length(local.iter_1730.tape) - 1 ? 0 : local.iter_1730.tape_ptr + 1
        : local.iter_1730.tape_ptr)

    code_ptr = 1 + (
      local.curr_1731.code == "["
        ? local.iter_1730.tape[local.iter_1730.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1730.code_ptr)] : local.iter_1730.code_ptr :
      local.curr_1731.code == "]"
        ? local.iter_1730.tape[local.iter_1730.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1730.code_ptr)] : local.iter_1730.code_ptr
        : local.iter_1730.code_ptr)

    steps_taken = 1 + local.iter_1730.steps_taken
  }
}

locals {
  end_of_code_1732 = try(local.iter_1731.code_ptr >= length(var.code), true)

  curr_1732 = local.end_of_code_1732 ? null : {
    code = substr(var.code, local.iter_1731.code_ptr, 1)
    input = substr(var.code, local.iter_1731.code_ptr, 1) == "," ? substr(local.iter_1731.input, 0, 1) : null
  }

  iter_1732 = local.end_of_code_1732 ? local.iter_1731 : {
    input = (local.curr_1732.code == ","
      ? substr(local.iter_1731.input, 1, -1)
      : local.iter_1731.input)

    output = (local.curr_1732.code == "."
      ? "${local.iter_1731.output}${jsondecode(format("\"\\u%04x\"", local.iter_1731.tape[local.iter_1731.tape_ptr]))}"
      : local.iter_1731.output)
    
    tape = (
      local.curr_1732.code == "+"
        ? [for i, b in local.iter_1731.tape : (i == local.iter_1731.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1732.code == "-"
        ? [for i, b in local.iter_1731.tape : (i == local.iter_1731.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1732.code == ","
        ? [for i, b in local.iter_1731.tape : (i == local.iter_1731.tape_ptr ? local.ascii_lookup[local.curr_1732.input] : b)]
        : local.iter_1731.tape)

    tape_ptr = (
      local.curr_1732.code == "<"
        ? local.iter_1731.tape_ptr == 0 ? length(local.iter_1731.tape) - 1 : local.iter_1731.tape_ptr - 1 :
      local.curr_1732.code == ">"
        ? local.iter_1731.tape_ptr == length(local.iter_1731.tape) - 1 ? 0 : local.iter_1731.tape_ptr + 1
        : local.iter_1731.tape_ptr)

    code_ptr = 1 + (
      local.curr_1732.code == "["
        ? local.iter_1731.tape[local.iter_1731.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1731.code_ptr)] : local.iter_1731.code_ptr :
      local.curr_1732.code == "]"
        ? local.iter_1731.tape[local.iter_1731.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1731.code_ptr)] : local.iter_1731.code_ptr
        : local.iter_1731.code_ptr)

    steps_taken = 1 + local.iter_1731.steps_taken
  }
}

locals {
  end_of_code_1733 = try(local.iter_1732.code_ptr >= length(var.code), true)

  curr_1733 = local.end_of_code_1733 ? null : {
    code = substr(var.code, local.iter_1732.code_ptr, 1)
    input = substr(var.code, local.iter_1732.code_ptr, 1) == "," ? substr(local.iter_1732.input, 0, 1) : null
  }

  iter_1733 = local.end_of_code_1733 ? local.iter_1732 : {
    input = (local.curr_1733.code == ","
      ? substr(local.iter_1732.input, 1, -1)
      : local.iter_1732.input)

    output = (local.curr_1733.code == "."
      ? "${local.iter_1732.output}${jsondecode(format("\"\\u%04x\"", local.iter_1732.tape[local.iter_1732.tape_ptr]))}"
      : local.iter_1732.output)
    
    tape = (
      local.curr_1733.code == "+"
        ? [for i, b in local.iter_1732.tape : (i == local.iter_1732.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1733.code == "-"
        ? [for i, b in local.iter_1732.tape : (i == local.iter_1732.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1733.code == ","
        ? [for i, b in local.iter_1732.tape : (i == local.iter_1732.tape_ptr ? local.ascii_lookup[local.curr_1733.input] : b)]
        : local.iter_1732.tape)

    tape_ptr = (
      local.curr_1733.code == "<"
        ? local.iter_1732.tape_ptr == 0 ? length(local.iter_1732.tape) - 1 : local.iter_1732.tape_ptr - 1 :
      local.curr_1733.code == ">"
        ? local.iter_1732.tape_ptr == length(local.iter_1732.tape) - 1 ? 0 : local.iter_1732.tape_ptr + 1
        : local.iter_1732.tape_ptr)

    code_ptr = 1 + (
      local.curr_1733.code == "["
        ? local.iter_1732.tape[local.iter_1732.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1732.code_ptr)] : local.iter_1732.code_ptr :
      local.curr_1733.code == "]"
        ? local.iter_1732.tape[local.iter_1732.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1732.code_ptr)] : local.iter_1732.code_ptr
        : local.iter_1732.code_ptr)

    steps_taken = 1 + local.iter_1732.steps_taken
  }
}

locals {
  end_of_code_1734 = try(local.iter_1733.code_ptr >= length(var.code), true)

  curr_1734 = local.end_of_code_1734 ? null : {
    code = substr(var.code, local.iter_1733.code_ptr, 1)
    input = substr(var.code, local.iter_1733.code_ptr, 1) == "," ? substr(local.iter_1733.input, 0, 1) : null
  }

  iter_1734 = local.end_of_code_1734 ? local.iter_1733 : {
    input = (local.curr_1734.code == ","
      ? substr(local.iter_1733.input, 1, -1)
      : local.iter_1733.input)

    output = (local.curr_1734.code == "."
      ? "${local.iter_1733.output}${jsondecode(format("\"\\u%04x\"", local.iter_1733.tape[local.iter_1733.tape_ptr]))}"
      : local.iter_1733.output)
    
    tape = (
      local.curr_1734.code == "+"
        ? [for i, b in local.iter_1733.tape : (i == local.iter_1733.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1734.code == "-"
        ? [for i, b in local.iter_1733.tape : (i == local.iter_1733.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1734.code == ","
        ? [for i, b in local.iter_1733.tape : (i == local.iter_1733.tape_ptr ? local.ascii_lookup[local.curr_1734.input] : b)]
        : local.iter_1733.tape)

    tape_ptr = (
      local.curr_1734.code == "<"
        ? local.iter_1733.tape_ptr == 0 ? length(local.iter_1733.tape) - 1 : local.iter_1733.tape_ptr - 1 :
      local.curr_1734.code == ">"
        ? local.iter_1733.tape_ptr == length(local.iter_1733.tape) - 1 ? 0 : local.iter_1733.tape_ptr + 1
        : local.iter_1733.tape_ptr)

    code_ptr = 1 + (
      local.curr_1734.code == "["
        ? local.iter_1733.tape[local.iter_1733.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1733.code_ptr)] : local.iter_1733.code_ptr :
      local.curr_1734.code == "]"
        ? local.iter_1733.tape[local.iter_1733.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1733.code_ptr)] : local.iter_1733.code_ptr
        : local.iter_1733.code_ptr)

    steps_taken = 1 + local.iter_1733.steps_taken
  }
}

locals {
  end_of_code_1735 = try(local.iter_1734.code_ptr >= length(var.code), true)

  curr_1735 = local.end_of_code_1735 ? null : {
    code = substr(var.code, local.iter_1734.code_ptr, 1)
    input = substr(var.code, local.iter_1734.code_ptr, 1) == "," ? substr(local.iter_1734.input, 0, 1) : null
  }

  iter_1735 = local.end_of_code_1735 ? local.iter_1734 : {
    input = (local.curr_1735.code == ","
      ? substr(local.iter_1734.input, 1, -1)
      : local.iter_1734.input)

    output = (local.curr_1735.code == "."
      ? "${local.iter_1734.output}${jsondecode(format("\"\\u%04x\"", local.iter_1734.tape[local.iter_1734.tape_ptr]))}"
      : local.iter_1734.output)
    
    tape = (
      local.curr_1735.code == "+"
        ? [for i, b in local.iter_1734.tape : (i == local.iter_1734.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1735.code == "-"
        ? [for i, b in local.iter_1734.tape : (i == local.iter_1734.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1735.code == ","
        ? [for i, b in local.iter_1734.tape : (i == local.iter_1734.tape_ptr ? local.ascii_lookup[local.curr_1735.input] : b)]
        : local.iter_1734.tape)

    tape_ptr = (
      local.curr_1735.code == "<"
        ? local.iter_1734.tape_ptr == 0 ? length(local.iter_1734.tape) - 1 : local.iter_1734.tape_ptr - 1 :
      local.curr_1735.code == ">"
        ? local.iter_1734.tape_ptr == length(local.iter_1734.tape) - 1 ? 0 : local.iter_1734.tape_ptr + 1
        : local.iter_1734.tape_ptr)

    code_ptr = 1 + (
      local.curr_1735.code == "["
        ? local.iter_1734.tape[local.iter_1734.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1734.code_ptr)] : local.iter_1734.code_ptr :
      local.curr_1735.code == "]"
        ? local.iter_1734.tape[local.iter_1734.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1734.code_ptr)] : local.iter_1734.code_ptr
        : local.iter_1734.code_ptr)

    steps_taken = 1 + local.iter_1734.steps_taken
  }
}

locals {
  end_of_code_1736 = try(local.iter_1735.code_ptr >= length(var.code), true)

  curr_1736 = local.end_of_code_1736 ? null : {
    code = substr(var.code, local.iter_1735.code_ptr, 1)
    input = substr(var.code, local.iter_1735.code_ptr, 1) == "," ? substr(local.iter_1735.input, 0, 1) : null
  }

  iter_1736 = local.end_of_code_1736 ? local.iter_1735 : {
    input = (local.curr_1736.code == ","
      ? substr(local.iter_1735.input, 1, -1)
      : local.iter_1735.input)

    output = (local.curr_1736.code == "."
      ? "${local.iter_1735.output}${jsondecode(format("\"\\u%04x\"", local.iter_1735.tape[local.iter_1735.tape_ptr]))}"
      : local.iter_1735.output)
    
    tape = (
      local.curr_1736.code == "+"
        ? [for i, b in local.iter_1735.tape : (i == local.iter_1735.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1736.code == "-"
        ? [for i, b in local.iter_1735.tape : (i == local.iter_1735.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1736.code == ","
        ? [for i, b in local.iter_1735.tape : (i == local.iter_1735.tape_ptr ? local.ascii_lookup[local.curr_1736.input] : b)]
        : local.iter_1735.tape)

    tape_ptr = (
      local.curr_1736.code == "<"
        ? local.iter_1735.tape_ptr == 0 ? length(local.iter_1735.tape) - 1 : local.iter_1735.tape_ptr - 1 :
      local.curr_1736.code == ">"
        ? local.iter_1735.tape_ptr == length(local.iter_1735.tape) - 1 ? 0 : local.iter_1735.tape_ptr + 1
        : local.iter_1735.tape_ptr)

    code_ptr = 1 + (
      local.curr_1736.code == "["
        ? local.iter_1735.tape[local.iter_1735.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1735.code_ptr)] : local.iter_1735.code_ptr :
      local.curr_1736.code == "]"
        ? local.iter_1735.tape[local.iter_1735.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1735.code_ptr)] : local.iter_1735.code_ptr
        : local.iter_1735.code_ptr)

    steps_taken = 1 + local.iter_1735.steps_taken
  }
}

locals {
  end_of_code_1737 = try(local.iter_1736.code_ptr >= length(var.code), true)

  curr_1737 = local.end_of_code_1737 ? null : {
    code = substr(var.code, local.iter_1736.code_ptr, 1)
    input = substr(var.code, local.iter_1736.code_ptr, 1) == "," ? substr(local.iter_1736.input, 0, 1) : null
  }

  iter_1737 = local.end_of_code_1737 ? local.iter_1736 : {
    input = (local.curr_1737.code == ","
      ? substr(local.iter_1736.input, 1, -1)
      : local.iter_1736.input)

    output = (local.curr_1737.code == "."
      ? "${local.iter_1736.output}${jsondecode(format("\"\\u%04x\"", local.iter_1736.tape[local.iter_1736.tape_ptr]))}"
      : local.iter_1736.output)
    
    tape = (
      local.curr_1737.code == "+"
        ? [for i, b in local.iter_1736.tape : (i == local.iter_1736.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1737.code == "-"
        ? [for i, b in local.iter_1736.tape : (i == local.iter_1736.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1737.code == ","
        ? [for i, b in local.iter_1736.tape : (i == local.iter_1736.tape_ptr ? local.ascii_lookup[local.curr_1737.input] : b)]
        : local.iter_1736.tape)

    tape_ptr = (
      local.curr_1737.code == "<"
        ? local.iter_1736.tape_ptr == 0 ? length(local.iter_1736.tape) - 1 : local.iter_1736.tape_ptr - 1 :
      local.curr_1737.code == ">"
        ? local.iter_1736.tape_ptr == length(local.iter_1736.tape) - 1 ? 0 : local.iter_1736.tape_ptr + 1
        : local.iter_1736.tape_ptr)

    code_ptr = 1 + (
      local.curr_1737.code == "["
        ? local.iter_1736.tape[local.iter_1736.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1736.code_ptr)] : local.iter_1736.code_ptr :
      local.curr_1737.code == "]"
        ? local.iter_1736.tape[local.iter_1736.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1736.code_ptr)] : local.iter_1736.code_ptr
        : local.iter_1736.code_ptr)

    steps_taken = 1 + local.iter_1736.steps_taken
  }
}

locals {
  end_of_code_1738 = try(local.iter_1737.code_ptr >= length(var.code), true)

  curr_1738 = local.end_of_code_1738 ? null : {
    code = substr(var.code, local.iter_1737.code_ptr, 1)
    input = substr(var.code, local.iter_1737.code_ptr, 1) == "," ? substr(local.iter_1737.input, 0, 1) : null
  }

  iter_1738 = local.end_of_code_1738 ? local.iter_1737 : {
    input = (local.curr_1738.code == ","
      ? substr(local.iter_1737.input, 1, -1)
      : local.iter_1737.input)

    output = (local.curr_1738.code == "."
      ? "${local.iter_1737.output}${jsondecode(format("\"\\u%04x\"", local.iter_1737.tape[local.iter_1737.tape_ptr]))}"
      : local.iter_1737.output)
    
    tape = (
      local.curr_1738.code == "+"
        ? [for i, b in local.iter_1737.tape : (i == local.iter_1737.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1738.code == "-"
        ? [for i, b in local.iter_1737.tape : (i == local.iter_1737.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1738.code == ","
        ? [for i, b in local.iter_1737.tape : (i == local.iter_1737.tape_ptr ? local.ascii_lookup[local.curr_1738.input] : b)]
        : local.iter_1737.tape)

    tape_ptr = (
      local.curr_1738.code == "<"
        ? local.iter_1737.tape_ptr == 0 ? length(local.iter_1737.tape) - 1 : local.iter_1737.tape_ptr - 1 :
      local.curr_1738.code == ">"
        ? local.iter_1737.tape_ptr == length(local.iter_1737.tape) - 1 ? 0 : local.iter_1737.tape_ptr + 1
        : local.iter_1737.tape_ptr)

    code_ptr = 1 + (
      local.curr_1738.code == "["
        ? local.iter_1737.tape[local.iter_1737.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1737.code_ptr)] : local.iter_1737.code_ptr :
      local.curr_1738.code == "]"
        ? local.iter_1737.tape[local.iter_1737.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1737.code_ptr)] : local.iter_1737.code_ptr
        : local.iter_1737.code_ptr)

    steps_taken = 1 + local.iter_1737.steps_taken
  }
}

locals {
  end_of_code_1739 = try(local.iter_1738.code_ptr >= length(var.code), true)

  curr_1739 = local.end_of_code_1739 ? null : {
    code = substr(var.code, local.iter_1738.code_ptr, 1)
    input = substr(var.code, local.iter_1738.code_ptr, 1) == "," ? substr(local.iter_1738.input, 0, 1) : null
  }

  iter_1739 = local.end_of_code_1739 ? local.iter_1738 : {
    input = (local.curr_1739.code == ","
      ? substr(local.iter_1738.input, 1, -1)
      : local.iter_1738.input)

    output = (local.curr_1739.code == "."
      ? "${local.iter_1738.output}${jsondecode(format("\"\\u%04x\"", local.iter_1738.tape[local.iter_1738.tape_ptr]))}"
      : local.iter_1738.output)
    
    tape = (
      local.curr_1739.code == "+"
        ? [for i, b in local.iter_1738.tape : (i == local.iter_1738.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1739.code == "-"
        ? [for i, b in local.iter_1738.tape : (i == local.iter_1738.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1739.code == ","
        ? [for i, b in local.iter_1738.tape : (i == local.iter_1738.tape_ptr ? local.ascii_lookup[local.curr_1739.input] : b)]
        : local.iter_1738.tape)

    tape_ptr = (
      local.curr_1739.code == "<"
        ? local.iter_1738.tape_ptr == 0 ? length(local.iter_1738.tape) - 1 : local.iter_1738.tape_ptr - 1 :
      local.curr_1739.code == ">"
        ? local.iter_1738.tape_ptr == length(local.iter_1738.tape) - 1 ? 0 : local.iter_1738.tape_ptr + 1
        : local.iter_1738.tape_ptr)

    code_ptr = 1 + (
      local.curr_1739.code == "["
        ? local.iter_1738.tape[local.iter_1738.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1738.code_ptr)] : local.iter_1738.code_ptr :
      local.curr_1739.code == "]"
        ? local.iter_1738.tape[local.iter_1738.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1738.code_ptr)] : local.iter_1738.code_ptr
        : local.iter_1738.code_ptr)

    steps_taken = 1 + local.iter_1738.steps_taken
  }
}

locals {
  end_of_code_1740 = try(local.iter_1739.code_ptr >= length(var.code), true)

  curr_1740 = local.end_of_code_1740 ? null : {
    code = substr(var.code, local.iter_1739.code_ptr, 1)
    input = substr(var.code, local.iter_1739.code_ptr, 1) == "," ? substr(local.iter_1739.input, 0, 1) : null
  }

  iter_1740 = local.end_of_code_1740 ? local.iter_1739 : {
    input = (local.curr_1740.code == ","
      ? substr(local.iter_1739.input, 1, -1)
      : local.iter_1739.input)

    output = (local.curr_1740.code == "."
      ? "${local.iter_1739.output}${jsondecode(format("\"\\u%04x\"", local.iter_1739.tape[local.iter_1739.tape_ptr]))}"
      : local.iter_1739.output)
    
    tape = (
      local.curr_1740.code == "+"
        ? [for i, b in local.iter_1739.tape : (i == local.iter_1739.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1740.code == "-"
        ? [for i, b in local.iter_1739.tape : (i == local.iter_1739.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1740.code == ","
        ? [for i, b in local.iter_1739.tape : (i == local.iter_1739.tape_ptr ? local.ascii_lookup[local.curr_1740.input] : b)]
        : local.iter_1739.tape)

    tape_ptr = (
      local.curr_1740.code == "<"
        ? local.iter_1739.tape_ptr == 0 ? length(local.iter_1739.tape) - 1 : local.iter_1739.tape_ptr - 1 :
      local.curr_1740.code == ">"
        ? local.iter_1739.tape_ptr == length(local.iter_1739.tape) - 1 ? 0 : local.iter_1739.tape_ptr + 1
        : local.iter_1739.tape_ptr)

    code_ptr = 1 + (
      local.curr_1740.code == "["
        ? local.iter_1739.tape[local.iter_1739.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1739.code_ptr)] : local.iter_1739.code_ptr :
      local.curr_1740.code == "]"
        ? local.iter_1739.tape[local.iter_1739.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1739.code_ptr)] : local.iter_1739.code_ptr
        : local.iter_1739.code_ptr)

    steps_taken = 1 + local.iter_1739.steps_taken
  }
}

locals {
  end_of_code_1741 = try(local.iter_1740.code_ptr >= length(var.code), true)

  curr_1741 = local.end_of_code_1741 ? null : {
    code = substr(var.code, local.iter_1740.code_ptr, 1)
    input = substr(var.code, local.iter_1740.code_ptr, 1) == "," ? substr(local.iter_1740.input, 0, 1) : null
  }

  iter_1741 = local.end_of_code_1741 ? local.iter_1740 : {
    input = (local.curr_1741.code == ","
      ? substr(local.iter_1740.input, 1, -1)
      : local.iter_1740.input)

    output = (local.curr_1741.code == "."
      ? "${local.iter_1740.output}${jsondecode(format("\"\\u%04x\"", local.iter_1740.tape[local.iter_1740.tape_ptr]))}"
      : local.iter_1740.output)
    
    tape = (
      local.curr_1741.code == "+"
        ? [for i, b in local.iter_1740.tape : (i == local.iter_1740.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1741.code == "-"
        ? [for i, b in local.iter_1740.tape : (i == local.iter_1740.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1741.code == ","
        ? [for i, b in local.iter_1740.tape : (i == local.iter_1740.tape_ptr ? local.ascii_lookup[local.curr_1741.input] : b)]
        : local.iter_1740.tape)

    tape_ptr = (
      local.curr_1741.code == "<"
        ? local.iter_1740.tape_ptr == 0 ? length(local.iter_1740.tape) - 1 : local.iter_1740.tape_ptr - 1 :
      local.curr_1741.code == ">"
        ? local.iter_1740.tape_ptr == length(local.iter_1740.tape) - 1 ? 0 : local.iter_1740.tape_ptr + 1
        : local.iter_1740.tape_ptr)

    code_ptr = 1 + (
      local.curr_1741.code == "["
        ? local.iter_1740.tape[local.iter_1740.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1740.code_ptr)] : local.iter_1740.code_ptr :
      local.curr_1741.code == "]"
        ? local.iter_1740.tape[local.iter_1740.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1740.code_ptr)] : local.iter_1740.code_ptr
        : local.iter_1740.code_ptr)

    steps_taken = 1 + local.iter_1740.steps_taken
  }
}

locals {
  end_of_code_1742 = try(local.iter_1741.code_ptr >= length(var.code), true)

  curr_1742 = local.end_of_code_1742 ? null : {
    code = substr(var.code, local.iter_1741.code_ptr, 1)
    input = substr(var.code, local.iter_1741.code_ptr, 1) == "," ? substr(local.iter_1741.input, 0, 1) : null
  }

  iter_1742 = local.end_of_code_1742 ? local.iter_1741 : {
    input = (local.curr_1742.code == ","
      ? substr(local.iter_1741.input, 1, -1)
      : local.iter_1741.input)

    output = (local.curr_1742.code == "."
      ? "${local.iter_1741.output}${jsondecode(format("\"\\u%04x\"", local.iter_1741.tape[local.iter_1741.tape_ptr]))}"
      : local.iter_1741.output)
    
    tape = (
      local.curr_1742.code == "+"
        ? [for i, b in local.iter_1741.tape : (i == local.iter_1741.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1742.code == "-"
        ? [for i, b in local.iter_1741.tape : (i == local.iter_1741.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1742.code == ","
        ? [for i, b in local.iter_1741.tape : (i == local.iter_1741.tape_ptr ? local.ascii_lookup[local.curr_1742.input] : b)]
        : local.iter_1741.tape)

    tape_ptr = (
      local.curr_1742.code == "<"
        ? local.iter_1741.tape_ptr == 0 ? length(local.iter_1741.tape) - 1 : local.iter_1741.tape_ptr - 1 :
      local.curr_1742.code == ">"
        ? local.iter_1741.tape_ptr == length(local.iter_1741.tape) - 1 ? 0 : local.iter_1741.tape_ptr + 1
        : local.iter_1741.tape_ptr)

    code_ptr = 1 + (
      local.curr_1742.code == "["
        ? local.iter_1741.tape[local.iter_1741.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1741.code_ptr)] : local.iter_1741.code_ptr :
      local.curr_1742.code == "]"
        ? local.iter_1741.tape[local.iter_1741.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1741.code_ptr)] : local.iter_1741.code_ptr
        : local.iter_1741.code_ptr)

    steps_taken = 1 + local.iter_1741.steps_taken
  }
}

locals {
  end_of_code_1743 = try(local.iter_1742.code_ptr >= length(var.code), true)

  curr_1743 = local.end_of_code_1743 ? null : {
    code = substr(var.code, local.iter_1742.code_ptr, 1)
    input = substr(var.code, local.iter_1742.code_ptr, 1) == "," ? substr(local.iter_1742.input, 0, 1) : null
  }

  iter_1743 = local.end_of_code_1743 ? local.iter_1742 : {
    input = (local.curr_1743.code == ","
      ? substr(local.iter_1742.input, 1, -1)
      : local.iter_1742.input)

    output = (local.curr_1743.code == "."
      ? "${local.iter_1742.output}${jsondecode(format("\"\\u%04x\"", local.iter_1742.tape[local.iter_1742.tape_ptr]))}"
      : local.iter_1742.output)
    
    tape = (
      local.curr_1743.code == "+"
        ? [for i, b in local.iter_1742.tape : (i == local.iter_1742.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1743.code == "-"
        ? [for i, b in local.iter_1742.tape : (i == local.iter_1742.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1743.code == ","
        ? [for i, b in local.iter_1742.tape : (i == local.iter_1742.tape_ptr ? local.ascii_lookup[local.curr_1743.input] : b)]
        : local.iter_1742.tape)

    tape_ptr = (
      local.curr_1743.code == "<"
        ? local.iter_1742.tape_ptr == 0 ? length(local.iter_1742.tape) - 1 : local.iter_1742.tape_ptr - 1 :
      local.curr_1743.code == ">"
        ? local.iter_1742.tape_ptr == length(local.iter_1742.tape) - 1 ? 0 : local.iter_1742.tape_ptr + 1
        : local.iter_1742.tape_ptr)

    code_ptr = 1 + (
      local.curr_1743.code == "["
        ? local.iter_1742.tape[local.iter_1742.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1742.code_ptr)] : local.iter_1742.code_ptr :
      local.curr_1743.code == "]"
        ? local.iter_1742.tape[local.iter_1742.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1742.code_ptr)] : local.iter_1742.code_ptr
        : local.iter_1742.code_ptr)

    steps_taken = 1 + local.iter_1742.steps_taken
  }
}

locals {
  end_of_code_1744 = try(local.iter_1743.code_ptr >= length(var.code), true)

  curr_1744 = local.end_of_code_1744 ? null : {
    code = substr(var.code, local.iter_1743.code_ptr, 1)
    input = substr(var.code, local.iter_1743.code_ptr, 1) == "," ? substr(local.iter_1743.input, 0, 1) : null
  }

  iter_1744 = local.end_of_code_1744 ? local.iter_1743 : {
    input = (local.curr_1744.code == ","
      ? substr(local.iter_1743.input, 1, -1)
      : local.iter_1743.input)

    output = (local.curr_1744.code == "."
      ? "${local.iter_1743.output}${jsondecode(format("\"\\u%04x\"", local.iter_1743.tape[local.iter_1743.tape_ptr]))}"
      : local.iter_1743.output)
    
    tape = (
      local.curr_1744.code == "+"
        ? [for i, b in local.iter_1743.tape : (i == local.iter_1743.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1744.code == "-"
        ? [for i, b in local.iter_1743.tape : (i == local.iter_1743.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1744.code == ","
        ? [for i, b in local.iter_1743.tape : (i == local.iter_1743.tape_ptr ? local.ascii_lookup[local.curr_1744.input] : b)]
        : local.iter_1743.tape)

    tape_ptr = (
      local.curr_1744.code == "<"
        ? local.iter_1743.tape_ptr == 0 ? length(local.iter_1743.tape) - 1 : local.iter_1743.tape_ptr - 1 :
      local.curr_1744.code == ">"
        ? local.iter_1743.tape_ptr == length(local.iter_1743.tape) - 1 ? 0 : local.iter_1743.tape_ptr + 1
        : local.iter_1743.tape_ptr)

    code_ptr = 1 + (
      local.curr_1744.code == "["
        ? local.iter_1743.tape[local.iter_1743.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1743.code_ptr)] : local.iter_1743.code_ptr :
      local.curr_1744.code == "]"
        ? local.iter_1743.tape[local.iter_1743.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1743.code_ptr)] : local.iter_1743.code_ptr
        : local.iter_1743.code_ptr)

    steps_taken = 1 + local.iter_1743.steps_taken
  }
}

locals {
  end_of_code_1745 = try(local.iter_1744.code_ptr >= length(var.code), true)

  curr_1745 = local.end_of_code_1745 ? null : {
    code = substr(var.code, local.iter_1744.code_ptr, 1)
    input = substr(var.code, local.iter_1744.code_ptr, 1) == "," ? substr(local.iter_1744.input, 0, 1) : null
  }

  iter_1745 = local.end_of_code_1745 ? local.iter_1744 : {
    input = (local.curr_1745.code == ","
      ? substr(local.iter_1744.input, 1, -1)
      : local.iter_1744.input)

    output = (local.curr_1745.code == "."
      ? "${local.iter_1744.output}${jsondecode(format("\"\\u%04x\"", local.iter_1744.tape[local.iter_1744.tape_ptr]))}"
      : local.iter_1744.output)
    
    tape = (
      local.curr_1745.code == "+"
        ? [for i, b in local.iter_1744.tape : (i == local.iter_1744.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1745.code == "-"
        ? [for i, b in local.iter_1744.tape : (i == local.iter_1744.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1745.code == ","
        ? [for i, b in local.iter_1744.tape : (i == local.iter_1744.tape_ptr ? local.ascii_lookup[local.curr_1745.input] : b)]
        : local.iter_1744.tape)

    tape_ptr = (
      local.curr_1745.code == "<"
        ? local.iter_1744.tape_ptr == 0 ? length(local.iter_1744.tape) - 1 : local.iter_1744.tape_ptr - 1 :
      local.curr_1745.code == ">"
        ? local.iter_1744.tape_ptr == length(local.iter_1744.tape) - 1 ? 0 : local.iter_1744.tape_ptr + 1
        : local.iter_1744.tape_ptr)

    code_ptr = 1 + (
      local.curr_1745.code == "["
        ? local.iter_1744.tape[local.iter_1744.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1744.code_ptr)] : local.iter_1744.code_ptr :
      local.curr_1745.code == "]"
        ? local.iter_1744.tape[local.iter_1744.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1744.code_ptr)] : local.iter_1744.code_ptr
        : local.iter_1744.code_ptr)

    steps_taken = 1 + local.iter_1744.steps_taken
  }
}

locals {
  end_of_code_1746 = try(local.iter_1745.code_ptr >= length(var.code), true)

  curr_1746 = local.end_of_code_1746 ? null : {
    code = substr(var.code, local.iter_1745.code_ptr, 1)
    input = substr(var.code, local.iter_1745.code_ptr, 1) == "," ? substr(local.iter_1745.input, 0, 1) : null
  }

  iter_1746 = local.end_of_code_1746 ? local.iter_1745 : {
    input = (local.curr_1746.code == ","
      ? substr(local.iter_1745.input, 1, -1)
      : local.iter_1745.input)

    output = (local.curr_1746.code == "."
      ? "${local.iter_1745.output}${jsondecode(format("\"\\u%04x\"", local.iter_1745.tape[local.iter_1745.tape_ptr]))}"
      : local.iter_1745.output)
    
    tape = (
      local.curr_1746.code == "+"
        ? [for i, b in local.iter_1745.tape : (i == local.iter_1745.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1746.code == "-"
        ? [for i, b in local.iter_1745.tape : (i == local.iter_1745.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1746.code == ","
        ? [for i, b in local.iter_1745.tape : (i == local.iter_1745.tape_ptr ? local.ascii_lookup[local.curr_1746.input] : b)]
        : local.iter_1745.tape)

    tape_ptr = (
      local.curr_1746.code == "<"
        ? local.iter_1745.tape_ptr == 0 ? length(local.iter_1745.tape) - 1 : local.iter_1745.tape_ptr - 1 :
      local.curr_1746.code == ">"
        ? local.iter_1745.tape_ptr == length(local.iter_1745.tape) - 1 ? 0 : local.iter_1745.tape_ptr + 1
        : local.iter_1745.tape_ptr)

    code_ptr = 1 + (
      local.curr_1746.code == "["
        ? local.iter_1745.tape[local.iter_1745.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1745.code_ptr)] : local.iter_1745.code_ptr :
      local.curr_1746.code == "]"
        ? local.iter_1745.tape[local.iter_1745.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1745.code_ptr)] : local.iter_1745.code_ptr
        : local.iter_1745.code_ptr)

    steps_taken = 1 + local.iter_1745.steps_taken
  }
}

locals {
  end_of_code_1747 = try(local.iter_1746.code_ptr >= length(var.code), true)

  curr_1747 = local.end_of_code_1747 ? null : {
    code = substr(var.code, local.iter_1746.code_ptr, 1)
    input = substr(var.code, local.iter_1746.code_ptr, 1) == "," ? substr(local.iter_1746.input, 0, 1) : null
  }

  iter_1747 = local.end_of_code_1747 ? local.iter_1746 : {
    input = (local.curr_1747.code == ","
      ? substr(local.iter_1746.input, 1, -1)
      : local.iter_1746.input)

    output = (local.curr_1747.code == "."
      ? "${local.iter_1746.output}${jsondecode(format("\"\\u%04x\"", local.iter_1746.tape[local.iter_1746.tape_ptr]))}"
      : local.iter_1746.output)
    
    tape = (
      local.curr_1747.code == "+"
        ? [for i, b in local.iter_1746.tape : (i == local.iter_1746.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1747.code == "-"
        ? [for i, b in local.iter_1746.tape : (i == local.iter_1746.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1747.code == ","
        ? [for i, b in local.iter_1746.tape : (i == local.iter_1746.tape_ptr ? local.ascii_lookup[local.curr_1747.input] : b)]
        : local.iter_1746.tape)

    tape_ptr = (
      local.curr_1747.code == "<"
        ? local.iter_1746.tape_ptr == 0 ? length(local.iter_1746.tape) - 1 : local.iter_1746.tape_ptr - 1 :
      local.curr_1747.code == ">"
        ? local.iter_1746.tape_ptr == length(local.iter_1746.tape) - 1 ? 0 : local.iter_1746.tape_ptr + 1
        : local.iter_1746.tape_ptr)

    code_ptr = 1 + (
      local.curr_1747.code == "["
        ? local.iter_1746.tape[local.iter_1746.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1746.code_ptr)] : local.iter_1746.code_ptr :
      local.curr_1747.code == "]"
        ? local.iter_1746.tape[local.iter_1746.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1746.code_ptr)] : local.iter_1746.code_ptr
        : local.iter_1746.code_ptr)

    steps_taken = 1 + local.iter_1746.steps_taken
  }
}

locals {
  end_of_code_1748 = try(local.iter_1747.code_ptr >= length(var.code), true)

  curr_1748 = local.end_of_code_1748 ? null : {
    code = substr(var.code, local.iter_1747.code_ptr, 1)
    input = substr(var.code, local.iter_1747.code_ptr, 1) == "," ? substr(local.iter_1747.input, 0, 1) : null
  }

  iter_1748 = local.end_of_code_1748 ? local.iter_1747 : {
    input = (local.curr_1748.code == ","
      ? substr(local.iter_1747.input, 1, -1)
      : local.iter_1747.input)

    output = (local.curr_1748.code == "."
      ? "${local.iter_1747.output}${jsondecode(format("\"\\u%04x\"", local.iter_1747.tape[local.iter_1747.tape_ptr]))}"
      : local.iter_1747.output)
    
    tape = (
      local.curr_1748.code == "+"
        ? [for i, b in local.iter_1747.tape : (i == local.iter_1747.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1748.code == "-"
        ? [for i, b in local.iter_1747.tape : (i == local.iter_1747.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1748.code == ","
        ? [for i, b in local.iter_1747.tape : (i == local.iter_1747.tape_ptr ? local.ascii_lookup[local.curr_1748.input] : b)]
        : local.iter_1747.tape)

    tape_ptr = (
      local.curr_1748.code == "<"
        ? local.iter_1747.tape_ptr == 0 ? length(local.iter_1747.tape) - 1 : local.iter_1747.tape_ptr - 1 :
      local.curr_1748.code == ">"
        ? local.iter_1747.tape_ptr == length(local.iter_1747.tape) - 1 ? 0 : local.iter_1747.tape_ptr + 1
        : local.iter_1747.tape_ptr)

    code_ptr = 1 + (
      local.curr_1748.code == "["
        ? local.iter_1747.tape[local.iter_1747.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1747.code_ptr)] : local.iter_1747.code_ptr :
      local.curr_1748.code == "]"
        ? local.iter_1747.tape[local.iter_1747.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1747.code_ptr)] : local.iter_1747.code_ptr
        : local.iter_1747.code_ptr)

    steps_taken = 1 + local.iter_1747.steps_taken
  }
}

locals {
  end_of_code_1749 = try(local.iter_1748.code_ptr >= length(var.code), true)

  curr_1749 = local.end_of_code_1749 ? null : {
    code = substr(var.code, local.iter_1748.code_ptr, 1)
    input = substr(var.code, local.iter_1748.code_ptr, 1) == "," ? substr(local.iter_1748.input, 0, 1) : null
  }

  iter_1749 = local.end_of_code_1749 ? local.iter_1748 : {
    input = (local.curr_1749.code == ","
      ? substr(local.iter_1748.input, 1, -1)
      : local.iter_1748.input)

    output = (local.curr_1749.code == "."
      ? "${local.iter_1748.output}${jsondecode(format("\"\\u%04x\"", local.iter_1748.tape[local.iter_1748.tape_ptr]))}"
      : local.iter_1748.output)
    
    tape = (
      local.curr_1749.code == "+"
        ? [for i, b in local.iter_1748.tape : (i == local.iter_1748.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1749.code == "-"
        ? [for i, b in local.iter_1748.tape : (i == local.iter_1748.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1749.code == ","
        ? [for i, b in local.iter_1748.tape : (i == local.iter_1748.tape_ptr ? local.ascii_lookup[local.curr_1749.input] : b)]
        : local.iter_1748.tape)

    tape_ptr = (
      local.curr_1749.code == "<"
        ? local.iter_1748.tape_ptr == 0 ? length(local.iter_1748.tape) - 1 : local.iter_1748.tape_ptr - 1 :
      local.curr_1749.code == ">"
        ? local.iter_1748.tape_ptr == length(local.iter_1748.tape) - 1 ? 0 : local.iter_1748.tape_ptr + 1
        : local.iter_1748.tape_ptr)

    code_ptr = 1 + (
      local.curr_1749.code == "["
        ? local.iter_1748.tape[local.iter_1748.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1748.code_ptr)] : local.iter_1748.code_ptr :
      local.curr_1749.code == "]"
        ? local.iter_1748.tape[local.iter_1748.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1748.code_ptr)] : local.iter_1748.code_ptr
        : local.iter_1748.code_ptr)

    steps_taken = 1 + local.iter_1748.steps_taken
  }
}

locals {
  end_of_code_1750 = try(local.iter_1749.code_ptr >= length(var.code), true)

  curr_1750 = local.end_of_code_1750 ? null : {
    code = substr(var.code, local.iter_1749.code_ptr, 1)
    input = substr(var.code, local.iter_1749.code_ptr, 1) == "," ? substr(local.iter_1749.input, 0, 1) : null
  }

  iter_1750 = local.end_of_code_1750 ? local.iter_1749 : {
    input = (local.curr_1750.code == ","
      ? substr(local.iter_1749.input, 1, -1)
      : local.iter_1749.input)

    output = (local.curr_1750.code == "."
      ? "${local.iter_1749.output}${jsondecode(format("\"\\u%04x\"", local.iter_1749.tape[local.iter_1749.tape_ptr]))}"
      : local.iter_1749.output)
    
    tape = (
      local.curr_1750.code == "+"
        ? [for i, b in local.iter_1749.tape : (i == local.iter_1749.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1750.code == "-"
        ? [for i, b in local.iter_1749.tape : (i == local.iter_1749.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1750.code == ","
        ? [for i, b in local.iter_1749.tape : (i == local.iter_1749.tape_ptr ? local.ascii_lookup[local.curr_1750.input] : b)]
        : local.iter_1749.tape)

    tape_ptr = (
      local.curr_1750.code == "<"
        ? local.iter_1749.tape_ptr == 0 ? length(local.iter_1749.tape) - 1 : local.iter_1749.tape_ptr - 1 :
      local.curr_1750.code == ">"
        ? local.iter_1749.tape_ptr == length(local.iter_1749.tape) - 1 ? 0 : local.iter_1749.tape_ptr + 1
        : local.iter_1749.tape_ptr)

    code_ptr = 1 + (
      local.curr_1750.code == "["
        ? local.iter_1749.tape[local.iter_1749.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1749.code_ptr)] : local.iter_1749.code_ptr :
      local.curr_1750.code == "]"
        ? local.iter_1749.tape[local.iter_1749.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1749.code_ptr)] : local.iter_1749.code_ptr
        : local.iter_1749.code_ptr)

    steps_taken = 1 + local.iter_1749.steps_taken
  }
}

locals {
  end_of_code_1751 = try(local.iter_1750.code_ptr >= length(var.code), true)

  curr_1751 = local.end_of_code_1751 ? null : {
    code = substr(var.code, local.iter_1750.code_ptr, 1)
    input = substr(var.code, local.iter_1750.code_ptr, 1) == "," ? substr(local.iter_1750.input, 0, 1) : null
  }

  iter_1751 = local.end_of_code_1751 ? local.iter_1750 : {
    input = (local.curr_1751.code == ","
      ? substr(local.iter_1750.input, 1, -1)
      : local.iter_1750.input)

    output = (local.curr_1751.code == "."
      ? "${local.iter_1750.output}${jsondecode(format("\"\\u%04x\"", local.iter_1750.tape[local.iter_1750.tape_ptr]))}"
      : local.iter_1750.output)
    
    tape = (
      local.curr_1751.code == "+"
        ? [for i, b in local.iter_1750.tape : (i == local.iter_1750.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1751.code == "-"
        ? [for i, b in local.iter_1750.tape : (i == local.iter_1750.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1751.code == ","
        ? [for i, b in local.iter_1750.tape : (i == local.iter_1750.tape_ptr ? local.ascii_lookup[local.curr_1751.input] : b)]
        : local.iter_1750.tape)

    tape_ptr = (
      local.curr_1751.code == "<"
        ? local.iter_1750.tape_ptr == 0 ? length(local.iter_1750.tape) - 1 : local.iter_1750.tape_ptr - 1 :
      local.curr_1751.code == ">"
        ? local.iter_1750.tape_ptr == length(local.iter_1750.tape) - 1 ? 0 : local.iter_1750.tape_ptr + 1
        : local.iter_1750.tape_ptr)

    code_ptr = 1 + (
      local.curr_1751.code == "["
        ? local.iter_1750.tape[local.iter_1750.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1750.code_ptr)] : local.iter_1750.code_ptr :
      local.curr_1751.code == "]"
        ? local.iter_1750.tape[local.iter_1750.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1750.code_ptr)] : local.iter_1750.code_ptr
        : local.iter_1750.code_ptr)

    steps_taken = 1 + local.iter_1750.steps_taken
  }
}

locals {
  end_of_code_1752 = try(local.iter_1751.code_ptr >= length(var.code), true)

  curr_1752 = local.end_of_code_1752 ? null : {
    code = substr(var.code, local.iter_1751.code_ptr, 1)
    input = substr(var.code, local.iter_1751.code_ptr, 1) == "," ? substr(local.iter_1751.input, 0, 1) : null
  }

  iter_1752 = local.end_of_code_1752 ? local.iter_1751 : {
    input = (local.curr_1752.code == ","
      ? substr(local.iter_1751.input, 1, -1)
      : local.iter_1751.input)

    output = (local.curr_1752.code == "."
      ? "${local.iter_1751.output}${jsondecode(format("\"\\u%04x\"", local.iter_1751.tape[local.iter_1751.tape_ptr]))}"
      : local.iter_1751.output)
    
    tape = (
      local.curr_1752.code == "+"
        ? [for i, b in local.iter_1751.tape : (i == local.iter_1751.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1752.code == "-"
        ? [for i, b in local.iter_1751.tape : (i == local.iter_1751.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1752.code == ","
        ? [for i, b in local.iter_1751.tape : (i == local.iter_1751.tape_ptr ? local.ascii_lookup[local.curr_1752.input] : b)]
        : local.iter_1751.tape)

    tape_ptr = (
      local.curr_1752.code == "<"
        ? local.iter_1751.tape_ptr == 0 ? length(local.iter_1751.tape) - 1 : local.iter_1751.tape_ptr - 1 :
      local.curr_1752.code == ">"
        ? local.iter_1751.tape_ptr == length(local.iter_1751.tape) - 1 ? 0 : local.iter_1751.tape_ptr + 1
        : local.iter_1751.tape_ptr)

    code_ptr = 1 + (
      local.curr_1752.code == "["
        ? local.iter_1751.tape[local.iter_1751.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1751.code_ptr)] : local.iter_1751.code_ptr :
      local.curr_1752.code == "]"
        ? local.iter_1751.tape[local.iter_1751.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1751.code_ptr)] : local.iter_1751.code_ptr
        : local.iter_1751.code_ptr)

    steps_taken = 1 + local.iter_1751.steps_taken
  }
}

locals {
  end_of_code_1753 = try(local.iter_1752.code_ptr >= length(var.code), true)

  curr_1753 = local.end_of_code_1753 ? null : {
    code = substr(var.code, local.iter_1752.code_ptr, 1)
    input = substr(var.code, local.iter_1752.code_ptr, 1) == "," ? substr(local.iter_1752.input, 0, 1) : null
  }

  iter_1753 = local.end_of_code_1753 ? local.iter_1752 : {
    input = (local.curr_1753.code == ","
      ? substr(local.iter_1752.input, 1, -1)
      : local.iter_1752.input)

    output = (local.curr_1753.code == "."
      ? "${local.iter_1752.output}${jsondecode(format("\"\\u%04x\"", local.iter_1752.tape[local.iter_1752.tape_ptr]))}"
      : local.iter_1752.output)
    
    tape = (
      local.curr_1753.code == "+"
        ? [for i, b in local.iter_1752.tape : (i == local.iter_1752.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1753.code == "-"
        ? [for i, b in local.iter_1752.tape : (i == local.iter_1752.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1753.code == ","
        ? [for i, b in local.iter_1752.tape : (i == local.iter_1752.tape_ptr ? local.ascii_lookup[local.curr_1753.input] : b)]
        : local.iter_1752.tape)

    tape_ptr = (
      local.curr_1753.code == "<"
        ? local.iter_1752.tape_ptr == 0 ? length(local.iter_1752.tape) - 1 : local.iter_1752.tape_ptr - 1 :
      local.curr_1753.code == ">"
        ? local.iter_1752.tape_ptr == length(local.iter_1752.tape) - 1 ? 0 : local.iter_1752.tape_ptr + 1
        : local.iter_1752.tape_ptr)

    code_ptr = 1 + (
      local.curr_1753.code == "["
        ? local.iter_1752.tape[local.iter_1752.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1752.code_ptr)] : local.iter_1752.code_ptr :
      local.curr_1753.code == "]"
        ? local.iter_1752.tape[local.iter_1752.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1752.code_ptr)] : local.iter_1752.code_ptr
        : local.iter_1752.code_ptr)

    steps_taken = 1 + local.iter_1752.steps_taken
  }
}

locals {
  end_of_code_1754 = try(local.iter_1753.code_ptr >= length(var.code), true)

  curr_1754 = local.end_of_code_1754 ? null : {
    code = substr(var.code, local.iter_1753.code_ptr, 1)
    input = substr(var.code, local.iter_1753.code_ptr, 1) == "," ? substr(local.iter_1753.input, 0, 1) : null
  }

  iter_1754 = local.end_of_code_1754 ? local.iter_1753 : {
    input = (local.curr_1754.code == ","
      ? substr(local.iter_1753.input, 1, -1)
      : local.iter_1753.input)

    output = (local.curr_1754.code == "."
      ? "${local.iter_1753.output}${jsondecode(format("\"\\u%04x\"", local.iter_1753.tape[local.iter_1753.tape_ptr]))}"
      : local.iter_1753.output)
    
    tape = (
      local.curr_1754.code == "+"
        ? [for i, b in local.iter_1753.tape : (i == local.iter_1753.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1754.code == "-"
        ? [for i, b in local.iter_1753.tape : (i == local.iter_1753.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1754.code == ","
        ? [for i, b in local.iter_1753.tape : (i == local.iter_1753.tape_ptr ? local.ascii_lookup[local.curr_1754.input] : b)]
        : local.iter_1753.tape)

    tape_ptr = (
      local.curr_1754.code == "<"
        ? local.iter_1753.tape_ptr == 0 ? length(local.iter_1753.tape) - 1 : local.iter_1753.tape_ptr - 1 :
      local.curr_1754.code == ">"
        ? local.iter_1753.tape_ptr == length(local.iter_1753.tape) - 1 ? 0 : local.iter_1753.tape_ptr + 1
        : local.iter_1753.tape_ptr)

    code_ptr = 1 + (
      local.curr_1754.code == "["
        ? local.iter_1753.tape[local.iter_1753.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1753.code_ptr)] : local.iter_1753.code_ptr :
      local.curr_1754.code == "]"
        ? local.iter_1753.tape[local.iter_1753.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1753.code_ptr)] : local.iter_1753.code_ptr
        : local.iter_1753.code_ptr)

    steps_taken = 1 + local.iter_1753.steps_taken
  }
}

locals {
  end_of_code_1755 = try(local.iter_1754.code_ptr >= length(var.code), true)

  curr_1755 = local.end_of_code_1755 ? null : {
    code = substr(var.code, local.iter_1754.code_ptr, 1)
    input = substr(var.code, local.iter_1754.code_ptr, 1) == "," ? substr(local.iter_1754.input, 0, 1) : null
  }

  iter_1755 = local.end_of_code_1755 ? local.iter_1754 : {
    input = (local.curr_1755.code == ","
      ? substr(local.iter_1754.input, 1, -1)
      : local.iter_1754.input)

    output = (local.curr_1755.code == "."
      ? "${local.iter_1754.output}${jsondecode(format("\"\\u%04x\"", local.iter_1754.tape[local.iter_1754.tape_ptr]))}"
      : local.iter_1754.output)
    
    tape = (
      local.curr_1755.code == "+"
        ? [for i, b in local.iter_1754.tape : (i == local.iter_1754.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1755.code == "-"
        ? [for i, b in local.iter_1754.tape : (i == local.iter_1754.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1755.code == ","
        ? [for i, b in local.iter_1754.tape : (i == local.iter_1754.tape_ptr ? local.ascii_lookup[local.curr_1755.input] : b)]
        : local.iter_1754.tape)

    tape_ptr = (
      local.curr_1755.code == "<"
        ? local.iter_1754.tape_ptr == 0 ? length(local.iter_1754.tape) - 1 : local.iter_1754.tape_ptr - 1 :
      local.curr_1755.code == ">"
        ? local.iter_1754.tape_ptr == length(local.iter_1754.tape) - 1 ? 0 : local.iter_1754.tape_ptr + 1
        : local.iter_1754.tape_ptr)

    code_ptr = 1 + (
      local.curr_1755.code == "["
        ? local.iter_1754.tape[local.iter_1754.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1754.code_ptr)] : local.iter_1754.code_ptr :
      local.curr_1755.code == "]"
        ? local.iter_1754.tape[local.iter_1754.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1754.code_ptr)] : local.iter_1754.code_ptr
        : local.iter_1754.code_ptr)

    steps_taken = 1 + local.iter_1754.steps_taken
  }
}

locals {
  end_of_code_1756 = try(local.iter_1755.code_ptr >= length(var.code), true)

  curr_1756 = local.end_of_code_1756 ? null : {
    code = substr(var.code, local.iter_1755.code_ptr, 1)
    input = substr(var.code, local.iter_1755.code_ptr, 1) == "," ? substr(local.iter_1755.input, 0, 1) : null
  }

  iter_1756 = local.end_of_code_1756 ? local.iter_1755 : {
    input = (local.curr_1756.code == ","
      ? substr(local.iter_1755.input, 1, -1)
      : local.iter_1755.input)

    output = (local.curr_1756.code == "."
      ? "${local.iter_1755.output}${jsondecode(format("\"\\u%04x\"", local.iter_1755.tape[local.iter_1755.tape_ptr]))}"
      : local.iter_1755.output)
    
    tape = (
      local.curr_1756.code == "+"
        ? [for i, b in local.iter_1755.tape : (i == local.iter_1755.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1756.code == "-"
        ? [for i, b in local.iter_1755.tape : (i == local.iter_1755.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1756.code == ","
        ? [for i, b in local.iter_1755.tape : (i == local.iter_1755.tape_ptr ? local.ascii_lookup[local.curr_1756.input] : b)]
        : local.iter_1755.tape)

    tape_ptr = (
      local.curr_1756.code == "<"
        ? local.iter_1755.tape_ptr == 0 ? length(local.iter_1755.tape) - 1 : local.iter_1755.tape_ptr - 1 :
      local.curr_1756.code == ">"
        ? local.iter_1755.tape_ptr == length(local.iter_1755.tape) - 1 ? 0 : local.iter_1755.tape_ptr + 1
        : local.iter_1755.tape_ptr)

    code_ptr = 1 + (
      local.curr_1756.code == "["
        ? local.iter_1755.tape[local.iter_1755.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1755.code_ptr)] : local.iter_1755.code_ptr :
      local.curr_1756.code == "]"
        ? local.iter_1755.tape[local.iter_1755.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1755.code_ptr)] : local.iter_1755.code_ptr
        : local.iter_1755.code_ptr)

    steps_taken = 1 + local.iter_1755.steps_taken
  }
}

locals {
  end_of_code_1757 = try(local.iter_1756.code_ptr >= length(var.code), true)

  curr_1757 = local.end_of_code_1757 ? null : {
    code = substr(var.code, local.iter_1756.code_ptr, 1)
    input = substr(var.code, local.iter_1756.code_ptr, 1) == "," ? substr(local.iter_1756.input, 0, 1) : null
  }

  iter_1757 = local.end_of_code_1757 ? local.iter_1756 : {
    input = (local.curr_1757.code == ","
      ? substr(local.iter_1756.input, 1, -1)
      : local.iter_1756.input)

    output = (local.curr_1757.code == "."
      ? "${local.iter_1756.output}${jsondecode(format("\"\\u%04x\"", local.iter_1756.tape[local.iter_1756.tape_ptr]))}"
      : local.iter_1756.output)
    
    tape = (
      local.curr_1757.code == "+"
        ? [for i, b in local.iter_1756.tape : (i == local.iter_1756.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1757.code == "-"
        ? [for i, b in local.iter_1756.tape : (i == local.iter_1756.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1757.code == ","
        ? [for i, b in local.iter_1756.tape : (i == local.iter_1756.tape_ptr ? local.ascii_lookup[local.curr_1757.input] : b)]
        : local.iter_1756.tape)

    tape_ptr = (
      local.curr_1757.code == "<"
        ? local.iter_1756.tape_ptr == 0 ? length(local.iter_1756.tape) - 1 : local.iter_1756.tape_ptr - 1 :
      local.curr_1757.code == ">"
        ? local.iter_1756.tape_ptr == length(local.iter_1756.tape) - 1 ? 0 : local.iter_1756.tape_ptr + 1
        : local.iter_1756.tape_ptr)

    code_ptr = 1 + (
      local.curr_1757.code == "["
        ? local.iter_1756.tape[local.iter_1756.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1756.code_ptr)] : local.iter_1756.code_ptr :
      local.curr_1757.code == "]"
        ? local.iter_1756.tape[local.iter_1756.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1756.code_ptr)] : local.iter_1756.code_ptr
        : local.iter_1756.code_ptr)

    steps_taken = 1 + local.iter_1756.steps_taken
  }
}

locals {
  end_of_code_1758 = try(local.iter_1757.code_ptr >= length(var.code), true)

  curr_1758 = local.end_of_code_1758 ? null : {
    code = substr(var.code, local.iter_1757.code_ptr, 1)
    input = substr(var.code, local.iter_1757.code_ptr, 1) == "," ? substr(local.iter_1757.input, 0, 1) : null
  }

  iter_1758 = local.end_of_code_1758 ? local.iter_1757 : {
    input = (local.curr_1758.code == ","
      ? substr(local.iter_1757.input, 1, -1)
      : local.iter_1757.input)

    output = (local.curr_1758.code == "."
      ? "${local.iter_1757.output}${jsondecode(format("\"\\u%04x\"", local.iter_1757.tape[local.iter_1757.tape_ptr]))}"
      : local.iter_1757.output)
    
    tape = (
      local.curr_1758.code == "+"
        ? [for i, b in local.iter_1757.tape : (i == local.iter_1757.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1758.code == "-"
        ? [for i, b in local.iter_1757.tape : (i == local.iter_1757.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1758.code == ","
        ? [for i, b in local.iter_1757.tape : (i == local.iter_1757.tape_ptr ? local.ascii_lookup[local.curr_1758.input] : b)]
        : local.iter_1757.tape)

    tape_ptr = (
      local.curr_1758.code == "<"
        ? local.iter_1757.tape_ptr == 0 ? length(local.iter_1757.tape) - 1 : local.iter_1757.tape_ptr - 1 :
      local.curr_1758.code == ">"
        ? local.iter_1757.tape_ptr == length(local.iter_1757.tape) - 1 ? 0 : local.iter_1757.tape_ptr + 1
        : local.iter_1757.tape_ptr)

    code_ptr = 1 + (
      local.curr_1758.code == "["
        ? local.iter_1757.tape[local.iter_1757.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1757.code_ptr)] : local.iter_1757.code_ptr :
      local.curr_1758.code == "]"
        ? local.iter_1757.tape[local.iter_1757.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1757.code_ptr)] : local.iter_1757.code_ptr
        : local.iter_1757.code_ptr)

    steps_taken = 1 + local.iter_1757.steps_taken
  }
}

locals {
  end_of_code_1759 = try(local.iter_1758.code_ptr >= length(var.code), true)

  curr_1759 = local.end_of_code_1759 ? null : {
    code = substr(var.code, local.iter_1758.code_ptr, 1)
    input = substr(var.code, local.iter_1758.code_ptr, 1) == "," ? substr(local.iter_1758.input, 0, 1) : null
  }

  iter_1759 = local.end_of_code_1759 ? local.iter_1758 : {
    input = (local.curr_1759.code == ","
      ? substr(local.iter_1758.input, 1, -1)
      : local.iter_1758.input)

    output = (local.curr_1759.code == "."
      ? "${local.iter_1758.output}${jsondecode(format("\"\\u%04x\"", local.iter_1758.tape[local.iter_1758.tape_ptr]))}"
      : local.iter_1758.output)
    
    tape = (
      local.curr_1759.code == "+"
        ? [for i, b in local.iter_1758.tape : (i == local.iter_1758.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1759.code == "-"
        ? [for i, b in local.iter_1758.tape : (i == local.iter_1758.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1759.code == ","
        ? [for i, b in local.iter_1758.tape : (i == local.iter_1758.tape_ptr ? local.ascii_lookup[local.curr_1759.input] : b)]
        : local.iter_1758.tape)

    tape_ptr = (
      local.curr_1759.code == "<"
        ? local.iter_1758.tape_ptr == 0 ? length(local.iter_1758.tape) - 1 : local.iter_1758.tape_ptr - 1 :
      local.curr_1759.code == ">"
        ? local.iter_1758.tape_ptr == length(local.iter_1758.tape) - 1 ? 0 : local.iter_1758.tape_ptr + 1
        : local.iter_1758.tape_ptr)

    code_ptr = 1 + (
      local.curr_1759.code == "["
        ? local.iter_1758.tape[local.iter_1758.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1758.code_ptr)] : local.iter_1758.code_ptr :
      local.curr_1759.code == "]"
        ? local.iter_1758.tape[local.iter_1758.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1758.code_ptr)] : local.iter_1758.code_ptr
        : local.iter_1758.code_ptr)

    steps_taken = 1 + local.iter_1758.steps_taken
  }
}

locals {
  end_of_code_1760 = try(local.iter_1759.code_ptr >= length(var.code), true)

  curr_1760 = local.end_of_code_1760 ? null : {
    code = substr(var.code, local.iter_1759.code_ptr, 1)
    input = substr(var.code, local.iter_1759.code_ptr, 1) == "," ? substr(local.iter_1759.input, 0, 1) : null
  }

  iter_1760 = local.end_of_code_1760 ? local.iter_1759 : {
    input = (local.curr_1760.code == ","
      ? substr(local.iter_1759.input, 1, -1)
      : local.iter_1759.input)

    output = (local.curr_1760.code == "."
      ? "${local.iter_1759.output}${jsondecode(format("\"\\u%04x\"", local.iter_1759.tape[local.iter_1759.tape_ptr]))}"
      : local.iter_1759.output)
    
    tape = (
      local.curr_1760.code == "+"
        ? [for i, b in local.iter_1759.tape : (i == local.iter_1759.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1760.code == "-"
        ? [for i, b in local.iter_1759.tape : (i == local.iter_1759.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1760.code == ","
        ? [for i, b in local.iter_1759.tape : (i == local.iter_1759.tape_ptr ? local.ascii_lookup[local.curr_1760.input] : b)]
        : local.iter_1759.tape)

    tape_ptr = (
      local.curr_1760.code == "<"
        ? local.iter_1759.tape_ptr == 0 ? length(local.iter_1759.tape) - 1 : local.iter_1759.tape_ptr - 1 :
      local.curr_1760.code == ">"
        ? local.iter_1759.tape_ptr == length(local.iter_1759.tape) - 1 ? 0 : local.iter_1759.tape_ptr + 1
        : local.iter_1759.tape_ptr)

    code_ptr = 1 + (
      local.curr_1760.code == "["
        ? local.iter_1759.tape[local.iter_1759.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1759.code_ptr)] : local.iter_1759.code_ptr :
      local.curr_1760.code == "]"
        ? local.iter_1759.tape[local.iter_1759.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1759.code_ptr)] : local.iter_1759.code_ptr
        : local.iter_1759.code_ptr)

    steps_taken = 1 + local.iter_1759.steps_taken
  }
}

locals {
  end_of_code_1761 = try(local.iter_1760.code_ptr >= length(var.code), true)

  curr_1761 = local.end_of_code_1761 ? null : {
    code = substr(var.code, local.iter_1760.code_ptr, 1)
    input = substr(var.code, local.iter_1760.code_ptr, 1) == "," ? substr(local.iter_1760.input, 0, 1) : null
  }

  iter_1761 = local.end_of_code_1761 ? local.iter_1760 : {
    input = (local.curr_1761.code == ","
      ? substr(local.iter_1760.input, 1, -1)
      : local.iter_1760.input)

    output = (local.curr_1761.code == "."
      ? "${local.iter_1760.output}${jsondecode(format("\"\\u%04x\"", local.iter_1760.tape[local.iter_1760.tape_ptr]))}"
      : local.iter_1760.output)
    
    tape = (
      local.curr_1761.code == "+"
        ? [for i, b in local.iter_1760.tape : (i == local.iter_1760.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1761.code == "-"
        ? [for i, b in local.iter_1760.tape : (i == local.iter_1760.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1761.code == ","
        ? [for i, b in local.iter_1760.tape : (i == local.iter_1760.tape_ptr ? local.ascii_lookup[local.curr_1761.input] : b)]
        : local.iter_1760.tape)

    tape_ptr = (
      local.curr_1761.code == "<"
        ? local.iter_1760.tape_ptr == 0 ? length(local.iter_1760.tape) - 1 : local.iter_1760.tape_ptr - 1 :
      local.curr_1761.code == ">"
        ? local.iter_1760.tape_ptr == length(local.iter_1760.tape) - 1 ? 0 : local.iter_1760.tape_ptr + 1
        : local.iter_1760.tape_ptr)

    code_ptr = 1 + (
      local.curr_1761.code == "["
        ? local.iter_1760.tape[local.iter_1760.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1760.code_ptr)] : local.iter_1760.code_ptr :
      local.curr_1761.code == "]"
        ? local.iter_1760.tape[local.iter_1760.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1760.code_ptr)] : local.iter_1760.code_ptr
        : local.iter_1760.code_ptr)

    steps_taken = 1 + local.iter_1760.steps_taken
  }
}

locals {
  end_of_code_1762 = try(local.iter_1761.code_ptr >= length(var.code), true)

  curr_1762 = local.end_of_code_1762 ? null : {
    code = substr(var.code, local.iter_1761.code_ptr, 1)
    input = substr(var.code, local.iter_1761.code_ptr, 1) == "," ? substr(local.iter_1761.input, 0, 1) : null
  }

  iter_1762 = local.end_of_code_1762 ? local.iter_1761 : {
    input = (local.curr_1762.code == ","
      ? substr(local.iter_1761.input, 1, -1)
      : local.iter_1761.input)

    output = (local.curr_1762.code == "."
      ? "${local.iter_1761.output}${jsondecode(format("\"\\u%04x\"", local.iter_1761.tape[local.iter_1761.tape_ptr]))}"
      : local.iter_1761.output)
    
    tape = (
      local.curr_1762.code == "+"
        ? [for i, b in local.iter_1761.tape : (i == local.iter_1761.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1762.code == "-"
        ? [for i, b in local.iter_1761.tape : (i == local.iter_1761.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1762.code == ","
        ? [for i, b in local.iter_1761.tape : (i == local.iter_1761.tape_ptr ? local.ascii_lookup[local.curr_1762.input] : b)]
        : local.iter_1761.tape)

    tape_ptr = (
      local.curr_1762.code == "<"
        ? local.iter_1761.tape_ptr == 0 ? length(local.iter_1761.tape) - 1 : local.iter_1761.tape_ptr - 1 :
      local.curr_1762.code == ">"
        ? local.iter_1761.tape_ptr == length(local.iter_1761.tape) - 1 ? 0 : local.iter_1761.tape_ptr + 1
        : local.iter_1761.tape_ptr)

    code_ptr = 1 + (
      local.curr_1762.code == "["
        ? local.iter_1761.tape[local.iter_1761.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1761.code_ptr)] : local.iter_1761.code_ptr :
      local.curr_1762.code == "]"
        ? local.iter_1761.tape[local.iter_1761.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1761.code_ptr)] : local.iter_1761.code_ptr
        : local.iter_1761.code_ptr)

    steps_taken = 1 + local.iter_1761.steps_taken
  }
}

locals {
  end_of_code_1763 = try(local.iter_1762.code_ptr >= length(var.code), true)

  curr_1763 = local.end_of_code_1763 ? null : {
    code = substr(var.code, local.iter_1762.code_ptr, 1)
    input = substr(var.code, local.iter_1762.code_ptr, 1) == "," ? substr(local.iter_1762.input, 0, 1) : null
  }

  iter_1763 = local.end_of_code_1763 ? local.iter_1762 : {
    input = (local.curr_1763.code == ","
      ? substr(local.iter_1762.input, 1, -1)
      : local.iter_1762.input)

    output = (local.curr_1763.code == "."
      ? "${local.iter_1762.output}${jsondecode(format("\"\\u%04x\"", local.iter_1762.tape[local.iter_1762.tape_ptr]))}"
      : local.iter_1762.output)
    
    tape = (
      local.curr_1763.code == "+"
        ? [for i, b in local.iter_1762.tape : (i == local.iter_1762.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1763.code == "-"
        ? [for i, b in local.iter_1762.tape : (i == local.iter_1762.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1763.code == ","
        ? [for i, b in local.iter_1762.tape : (i == local.iter_1762.tape_ptr ? local.ascii_lookup[local.curr_1763.input] : b)]
        : local.iter_1762.tape)

    tape_ptr = (
      local.curr_1763.code == "<"
        ? local.iter_1762.tape_ptr == 0 ? length(local.iter_1762.tape) - 1 : local.iter_1762.tape_ptr - 1 :
      local.curr_1763.code == ">"
        ? local.iter_1762.tape_ptr == length(local.iter_1762.tape) - 1 ? 0 : local.iter_1762.tape_ptr + 1
        : local.iter_1762.tape_ptr)

    code_ptr = 1 + (
      local.curr_1763.code == "["
        ? local.iter_1762.tape[local.iter_1762.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1762.code_ptr)] : local.iter_1762.code_ptr :
      local.curr_1763.code == "]"
        ? local.iter_1762.tape[local.iter_1762.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1762.code_ptr)] : local.iter_1762.code_ptr
        : local.iter_1762.code_ptr)

    steps_taken = 1 + local.iter_1762.steps_taken
  }
}

locals {
  end_of_code_1764 = try(local.iter_1763.code_ptr >= length(var.code), true)

  curr_1764 = local.end_of_code_1764 ? null : {
    code = substr(var.code, local.iter_1763.code_ptr, 1)
    input = substr(var.code, local.iter_1763.code_ptr, 1) == "," ? substr(local.iter_1763.input, 0, 1) : null
  }

  iter_1764 = local.end_of_code_1764 ? local.iter_1763 : {
    input = (local.curr_1764.code == ","
      ? substr(local.iter_1763.input, 1, -1)
      : local.iter_1763.input)

    output = (local.curr_1764.code == "."
      ? "${local.iter_1763.output}${jsondecode(format("\"\\u%04x\"", local.iter_1763.tape[local.iter_1763.tape_ptr]))}"
      : local.iter_1763.output)
    
    tape = (
      local.curr_1764.code == "+"
        ? [for i, b in local.iter_1763.tape : (i == local.iter_1763.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1764.code == "-"
        ? [for i, b in local.iter_1763.tape : (i == local.iter_1763.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1764.code == ","
        ? [for i, b in local.iter_1763.tape : (i == local.iter_1763.tape_ptr ? local.ascii_lookup[local.curr_1764.input] : b)]
        : local.iter_1763.tape)

    tape_ptr = (
      local.curr_1764.code == "<"
        ? local.iter_1763.tape_ptr == 0 ? length(local.iter_1763.tape) - 1 : local.iter_1763.tape_ptr - 1 :
      local.curr_1764.code == ">"
        ? local.iter_1763.tape_ptr == length(local.iter_1763.tape) - 1 ? 0 : local.iter_1763.tape_ptr + 1
        : local.iter_1763.tape_ptr)

    code_ptr = 1 + (
      local.curr_1764.code == "["
        ? local.iter_1763.tape[local.iter_1763.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1763.code_ptr)] : local.iter_1763.code_ptr :
      local.curr_1764.code == "]"
        ? local.iter_1763.tape[local.iter_1763.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1763.code_ptr)] : local.iter_1763.code_ptr
        : local.iter_1763.code_ptr)

    steps_taken = 1 + local.iter_1763.steps_taken
  }
}

locals {
  end_of_code_1765 = try(local.iter_1764.code_ptr >= length(var.code), true)

  curr_1765 = local.end_of_code_1765 ? null : {
    code = substr(var.code, local.iter_1764.code_ptr, 1)
    input = substr(var.code, local.iter_1764.code_ptr, 1) == "," ? substr(local.iter_1764.input, 0, 1) : null
  }

  iter_1765 = local.end_of_code_1765 ? local.iter_1764 : {
    input = (local.curr_1765.code == ","
      ? substr(local.iter_1764.input, 1, -1)
      : local.iter_1764.input)

    output = (local.curr_1765.code == "."
      ? "${local.iter_1764.output}${jsondecode(format("\"\\u%04x\"", local.iter_1764.tape[local.iter_1764.tape_ptr]))}"
      : local.iter_1764.output)
    
    tape = (
      local.curr_1765.code == "+"
        ? [for i, b in local.iter_1764.tape : (i == local.iter_1764.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1765.code == "-"
        ? [for i, b in local.iter_1764.tape : (i == local.iter_1764.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1765.code == ","
        ? [for i, b in local.iter_1764.tape : (i == local.iter_1764.tape_ptr ? local.ascii_lookup[local.curr_1765.input] : b)]
        : local.iter_1764.tape)

    tape_ptr = (
      local.curr_1765.code == "<"
        ? local.iter_1764.tape_ptr == 0 ? length(local.iter_1764.tape) - 1 : local.iter_1764.tape_ptr - 1 :
      local.curr_1765.code == ">"
        ? local.iter_1764.tape_ptr == length(local.iter_1764.tape) - 1 ? 0 : local.iter_1764.tape_ptr + 1
        : local.iter_1764.tape_ptr)

    code_ptr = 1 + (
      local.curr_1765.code == "["
        ? local.iter_1764.tape[local.iter_1764.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1764.code_ptr)] : local.iter_1764.code_ptr :
      local.curr_1765.code == "]"
        ? local.iter_1764.tape[local.iter_1764.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1764.code_ptr)] : local.iter_1764.code_ptr
        : local.iter_1764.code_ptr)

    steps_taken = 1 + local.iter_1764.steps_taken
  }
}

locals {
  end_of_code_1766 = try(local.iter_1765.code_ptr >= length(var.code), true)

  curr_1766 = local.end_of_code_1766 ? null : {
    code = substr(var.code, local.iter_1765.code_ptr, 1)
    input = substr(var.code, local.iter_1765.code_ptr, 1) == "," ? substr(local.iter_1765.input, 0, 1) : null
  }

  iter_1766 = local.end_of_code_1766 ? local.iter_1765 : {
    input = (local.curr_1766.code == ","
      ? substr(local.iter_1765.input, 1, -1)
      : local.iter_1765.input)

    output = (local.curr_1766.code == "."
      ? "${local.iter_1765.output}${jsondecode(format("\"\\u%04x\"", local.iter_1765.tape[local.iter_1765.tape_ptr]))}"
      : local.iter_1765.output)
    
    tape = (
      local.curr_1766.code == "+"
        ? [for i, b in local.iter_1765.tape : (i == local.iter_1765.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1766.code == "-"
        ? [for i, b in local.iter_1765.tape : (i == local.iter_1765.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1766.code == ","
        ? [for i, b in local.iter_1765.tape : (i == local.iter_1765.tape_ptr ? local.ascii_lookup[local.curr_1766.input] : b)]
        : local.iter_1765.tape)

    tape_ptr = (
      local.curr_1766.code == "<"
        ? local.iter_1765.tape_ptr == 0 ? length(local.iter_1765.tape) - 1 : local.iter_1765.tape_ptr - 1 :
      local.curr_1766.code == ">"
        ? local.iter_1765.tape_ptr == length(local.iter_1765.tape) - 1 ? 0 : local.iter_1765.tape_ptr + 1
        : local.iter_1765.tape_ptr)

    code_ptr = 1 + (
      local.curr_1766.code == "["
        ? local.iter_1765.tape[local.iter_1765.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1765.code_ptr)] : local.iter_1765.code_ptr :
      local.curr_1766.code == "]"
        ? local.iter_1765.tape[local.iter_1765.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1765.code_ptr)] : local.iter_1765.code_ptr
        : local.iter_1765.code_ptr)

    steps_taken = 1 + local.iter_1765.steps_taken
  }
}

locals {
  end_of_code_1767 = try(local.iter_1766.code_ptr >= length(var.code), true)

  curr_1767 = local.end_of_code_1767 ? null : {
    code = substr(var.code, local.iter_1766.code_ptr, 1)
    input = substr(var.code, local.iter_1766.code_ptr, 1) == "," ? substr(local.iter_1766.input, 0, 1) : null
  }

  iter_1767 = local.end_of_code_1767 ? local.iter_1766 : {
    input = (local.curr_1767.code == ","
      ? substr(local.iter_1766.input, 1, -1)
      : local.iter_1766.input)

    output = (local.curr_1767.code == "."
      ? "${local.iter_1766.output}${jsondecode(format("\"\\u%04x\"", local.iter_1766.tape[local.iter_1766.tape_ptr]))}"
      : local.iter_1766.output)
    
    tape = (
      local.curr_1767.code == "+"
        ? [for i, b in local.iter_1766.tape : (i == local.iter_1766.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1767.code == "-"
        ? [for i, b in local.iter_1766.tape : (i == local.iter_1766.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1767.code == ","
        ? [for i, b in local.iter_1766.tape : (i == local.iter_1766.tape_ptr ? local.ascii_lookup[local.curr_1767.input] : b)]
        : local.iter_1766.tape)

    tape_ptr = (
      local.curr_1767.code == "<"
        ? local.iter_1766.tape_ptr == 0 ? length(local.iter_1766.tape) - 1 : local.iter_1766.tape_ptr - 1 :
      local.curr_1767.code == ">"
        ? local.iter_1766.tape_ptr == length(local.iter_1766.tape) - 1 ? 0 : local.iter_1766.tape_ptr + 1
        : local.iter_1766.tape_ptr)

    code_ptr = 1 + (
      local.curr_1767.code == "["
        ? local.iter_1766.tape[local.iter_1766.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1766.code_ptr)] : local.iter_1766.code_ptr :
      local.curr_1767.code == "]"
        ? local.iter_1766.tape[local.iter_1766.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1766.code_ptr)] : local.iter_1766.code_ptr
        : local.iter_1766.code_ptr)

    steps_taken = 1 + local.iter_1766.steps_taken
  }
}

locals {
  end_of_code_1768 = try(local.iter_1767.code_ptr >= length(var.code), true)

  curr_1768 = local.end_of_code_1768 ? null : {
    code = substr(var.code, local.iter_1767.code_ptr, 1)
    input = substr(var.code, local.iter_1767.code_ptr, 1) == "," ? substr(local.iter_1767.input, 0, 1) : null
  }

  iter_1768 = local.end_of_code_1768 ? local.iter_1767 : {
    input = (local.curr_1768.code == ","
      ? substr(local.iter_1767.input, 1, -1)
      : local.iter_1767.input)

    output = (local.curr_1768.code == "."
      ? "${local.iter_1767.output}${jsondecode(format("\"\\u%04x\"", local.iter_1767.tape[local.iter_1767.tape_ptr]))}"
      : local.iter_1767.output)
    
    tape = (
      local.curr_1768.code == "+"
        ? [for i, b in local.iter_1767.tape : (i == local.iter_1767.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1768.code == "-"
        ? [for i, b in local.iter_1767.tape : (i == local.iter_1767.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1768.code == ","
        ? [for i, b in local.iter_1767.tape : (i == local.iter_1767.tape_ptr ? local.ascii_lookup[local.curr_1768.input] : b)]
        : local.iter_1767.tape)

    tape_ptr = (
      local.curr_1768.code == "<"
        ? local.iter_1767.tape_ptr == 0 ? length(local.iter_1767.tape) - 1 : local.iter_1767.tape_ptr - 1 :
      local.curr_1768.code == ">"
        ? local.iter_1767.tape_ptr == length(local.iter_1767.tape) - 1 ? 0 : local.iter_1767.tape_ptr + 1
        : local.iter_1767.tape_ptr)

    code_ptr = 1 + (
      local.curr_1768.code == "["
        ? local.iter_1767.tape[local.iter_1767.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1767.code_ptr)] : local.iter_1767.code_ptr :
      local.curr_1768.code == "]"
        ? local.iter_1767.tape[local.iter_1767.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1767.code_ptr)] : local.iter_1767.code_ptr
        : local.iter_1767.code_ptr)

    steps_taken = 1 + local.iter_1767.steps_taken
  }
}

locals {
  end_of_code_1769 = try(local.iter_1768.code_ptr >= length(var.code), true)

  curr_1769 = local.end_of_code_1769 ? null : {
    code = substr(var.code, local.iter_1768.code_ptr, 1)
    input = substr(var.code, local.iter_1768.code_ptr, 1) == "," ? substr(local.iter_1768.input, 0, 1) : null
  }

  iter_1769 = local.end_of_code_1769 ? local.iter_1768 : {
    input = (local.curr_1769.code == ","
      ? substr(local.iter_1768.input, 1, -1)
      : local.iter_1768.input)

    output = (local.curr_1769.code == "."
      ? "${local.iter_1768.output}${jsondecode(format("\"\\u%04x\"", local.iter_1768.tape[local.iter_1768.tape_ptr]))}"
      : local.iter_1768.output)
    
    tape = (
      local.curr_1769.code == "+"
        ? [for i, b in local.iter_1768.tape : (i == local.iter_1768.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1769.code == "-"
        ? [for i, b in local.iter_1768.tape : (i == local.iter_1768.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1769.code == ","
        ? [for i, b in local.iter_1768.tape : (i == local.iter_1768.tape_ptr ? local.ascii_lookup[local.curr_1769.input] : b)]
        : local.iter_1768.tape)

    tape_ptr = (
      local.curr_1769.code == "<"
        ? local.iter_1768.tape_ptr == 0 ? length(local.iter_1768.tape) - 1 : local.iter_1768.tape_ptr - 1 :
      local.curr_1769.code == ">"
        ? local.iter_1768.tape_ptr == length(local.iter_1768.tape) - 1 ? 0 : local.iter_1768.tape_ptr + 1
        : local.iter_1768.tape_ptr)

    code_ptr = 1 + (
      local.curr_1769.code == "["
        ? local.iter_1768.tape[local.iter_1768.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1768.code_ptr)] : local.iter_1768.code_ptr :
      local.curr_1769.code == "]"
        ? local.iter_1768.tape[local.iter_1768.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1768.code_ptr)] : local.iter_1768.code_ptr
        : local.iter_1768.code_ptr)

    steps_taken = 1 + local.iter_1768.steps_taken
  }
}

locals {
  end_of_code_1770 = try(local.iter_1769.code_ptr >= length(var.code), true)

  curr_1770 = local.end_of_code_1770 ? null : {
    code = substr(var.code, local.iter_1769.code_ptr, 1)
    input = substr(var.code, local.iter_1769.code_ptr, 1) == "," ? substr(local.iter_1769.input, 0, 1) : null
  }

  iter_1770 = local.end_of_code_1770 ? local.iter_1769 : {
    input = (local.curr_1770.code == ","
      ? substr(local.iter_1769.input, 1, -1)
      : local.iter_1769.input)

    output = (local.curr_1770.code == "."
      ? "${local.iter_1769.output}${jsondecode(format("\"\\u%04x\"", local.iter_1769.tape[local.iter_1769.tape_ptr]))}"
      : local.iter_1769.output)
    
    tape = (
      local.curr_1770.code == "+"
        ? [for i, b in local.iter_1769.tape : (i == local.iter_1769.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1770.code == "-"
        ? [for i, b in local.iter_1769.tape : (i == local.iter_1769.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1770.code == ","
        ? [for i, b in local.iter_1769.tape : (i == local.iter_1769.tape_ptr ? local.ascii_lookup[local.curr_1770.input] : b)]
        : local.iter_1769.tape)

    tape_ptr = (
      local.curr_1770.code == "<"
        ? local.iter_1769.tape_ptr == 0 ? length(local.iter_1769.tape) - 1 : local.iter_1769.tape_ptr - 1 :
      local.curr_1770.code == ">"
        ? local.iter_1769.tape_ptr == length(local.iter_1769.tape) - 1 ? 0 : local.iter_1769.tape_ptr + 1
        : local.iter_1769.tape_ptr)

    code_ptr = 1 + (
      local.curr_1770.code == "["
        ? local.iter_1769.tape[local.iter_1769.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1769.code_ptr)] : local.iter_1769.code_ptr :
      local.curr_1770.code == "]"
        ? local.iter_1769.tape[local.iter_1769.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1769.code_ptr)] : local.iter_1769.code_ptr
        : local.iter_1769.code_ptr)

    steps_taken = 1 + local.iter_1769.steps_taken
  }
}

locals {
  end_of_code_1771 = try(local.iter_1770.code_ptr >= length(var.code), true)

  curr_1771 = local.end_of_code_1771 ? null : {
    code = substr(var.code, local.iter_1770.code_ptr, 1)
    input = substr(var.code, local.iter_1770.code_ptr, 1) == "," ? substr(local.iter_1770.input, 0, 1) : null
  }

  iter_1771 = local.end_of_code_1771 ? local.iter_1770 : {
    input = (local.curr_1771.code == ","
      ? substr(local.iter_1770.input, 1, -1)
      : local.iter_1770.input)

    output = (local.curr_1771.code == "."
      ? "${local.iter_1770.output}${jsondecode(format("\"\\u%04x\"", local.iter_1770.tape[local.iter_1770.tape_ptr]))}"
      : local.iter_1770.output)
    
    tape = (
      local.curr_1771.code == "+"
        ? [for i, b in local.iter_1770.tape : (i == local.iter_1770.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1771.code == "-"
        ? [for i, b in local.iter_1770.tape : (i == local.iter_1770.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1771.code == ","
        ? [for i, b in local.iter_1770.tape : (i == local.iter_1770.tape_ptr ? local.ascii_lookup[local.curr_1771.input] : b)]
        : local.iter_1770.tape)

    tape_ptr = (
      local.curr_1771.code == "<"
        ? local.iter_1770.tape_ptr == 0 ? length(local.iter_1770.tape) - 1 : local.iter_1770.tape_ptr - 1 :
      local.curr_1771.code == ">"
        ? local.iter_1770.tape_ptr == length(local.iter_1770.tape) - 1 ? 0 : local.iter_1770.tape_ptr + 1
        : local.iter_1770.tape_ptr)

    code_ptr = 1 + (
      local.curr_1771.code == "["
        ? local.iter_1770.tape[local.iter_1770.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1770.code_ptr)] : local.iter_1770.code_ptr :
      local.curr_1771.code == "]"
        ? local.iter_1770.tape[local.iter_1770.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1770.code_ptr)] : local.iter_1770.code_ptr
        : local.iter_1770.code_ptr)

    steps_taken = 1 + local.iter_1770.steps_taken
  }
}

locals {
  end_of_code_1772 = try(local.iter_1771.code_ptr >= length(var.code), true)

  curr_1772 = local.end_of_code_1772 ? null : {
    code = substr(var.code, local.iter_1771.code_ptr, 1)
    input = substr(var.code, local.iter_1771.code_ptr, 1) == "," ? substr(local.iter_1771.input, 0, 1) : null
  }

  iter_1772 = local.end_of_code_1772 ? local.iter_1771 : {
    input = (local.curr_1772.code == ","
      ? substr(local.iter_1771.input, 1, -1)
      : local.iter_1771.input)

    output = (local.curr_1772.code == "."
      ? "${local.iter_1771.output}${jsondecode(format("\"\\u%04x\"", local.iter_1771.tape[local.iter_1771.tape_ptr]))}"
      : local.iter_1771.output)
    
    tape = (
      local.curr_1772.code == "+"
        ? [for i, b in local.iter_1771.tape : (i == local.iter_1771.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1772.code == "-"
        ? [for i, b in local.iter_1771.tape : (i == local.iter_1771.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1772.code == ","
        ? [for i, b in local.iter_1771.tape : (i == local.iter_1771.tape_ptr ? local.ascii_lookup[local.curr_1772.input] : b)]
        : local.iter_1771.tape)

    tape_ptr = (
      local.curr_1772.code == "<"
        ? local.iter_1771.tape_ptr == 0 ? length(local.iter_1771.tape) - 1 : local.iter_1771.tape_ptr - 1 :
      local.curr_1772.code == ">"
        ? local.iter_1771.tape_ptr == length(local.iter_1771.tape) - 1 ? 0 : local.iter_1771.tape_ptr + 1
        : local.iter_1771.tape_ptr)

    code_ptr = 1 + (
      local.curr_1772.code == "["
        ? local.iter_1771.tape[local.iter_1771.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1771.code_ptr)] : local.iter_1771.code_ptr :
      local.curr_1772.code == "]"
        ? local.iter_1771.tape[local.iter_1771.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1771.code_ptr)] : local.iter_1771.code_ptr
        : local.iter_1771.code_ptr)

    steps_taken = 1 + local.iter_1771.steps_taken
  }
}

locals {
  end_of_code_1773 = try(local.iter_1772.code_ptr >= length(var.code), true)

  curr_1773 = local.end_of_code_1773 ? null : {
    code = substr(var.code, local.iter_1772.code_ptr, 1)
    input = substr(var.code, local.iter_1772.code_ptr, 1) == "," ? substr(local.iter_1772.input, 0, 1) : null
  }

  iter_1773 = local.end_of_code_1773 ? local.iter_1772 : {
    input = (local.curr_1773.code == ","
      ? substr(local.iter_1772.input, 1, -1)
      : local.iter_1772.input)

    output = (local.curr_1773.code == "."
      ? "${local.iter_1772.output}${jsondecode(format("\"\\u%04x\"", local.iter_1772.tape[local.iter_1772.tape_ptr]))}"
      : local.iter_1772.output)
    
    tape = (
      local.curr_1773.code == "+"
        ? [for i, b in local.iter_1772.tape : (i == local.iter_1772.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1773.code == "-"
        ? [for i, b in local.iter_1772.tape : (i == local.iter_1772.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1773.code == ","
        ? [for i, b in local.iter_1772.tape : (i == local.iter_1772.tape_ptr ? local.ascii_lookup[local.curr_1773.input] : b)]
        : local.iter_1772.tape)

    tape_ptr = (
      local.curr_1773.code == "<"
        ? local.iter_1772.tape_ptr == 0 ? length(local.iter_1772.tape) - 1 : local.iter_1772.tape_ptr - 1 :
      local.curr_1773.code == ">"
        ? local.iter_1772.tape_ptr == length(local.iter_1772.tape) - 1 ? 0 : local.iter_1772.tape_ptr + 1
        : local.iter_1772.tape_ptr)

    code_ptr = 1 + (
      local.curr_1773.code == "["
        ? local.iter_1772.tape[local.iter_1772.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1772.code_ptr)] : local.iter_1772.code_ptr :
      local.curr_1773.code == "]"
        ? local.iter_1772.tape[local.iter_1772.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1772.code_ptr)] : local.iter_1772.code_ptr
        : local.iter_1772.code_ptr)

    steps_taken = 1 + local.iter_1772.steps_taken
  }
}

locals {
  end_of_code_1774 = try(local.iter_1773.code_ptr >= length(var.code), true)

  curr_1774 = local.end_of_code_1774 ? null : {
    code = substr(var.code, local.iter_1773.code_ptr, 1)
    input = substr(var.code, local.iter_1773.code_ptr, 1) == "," ? substr(local.iter_1773.input, 0, 1) : null
  }

  iter_1774 = local.end_of_code_1774 ? local.iter_1773 : {
    input = (local.curr_1774.code == ","
      ? substr(local.iter_1773.input, 1, -1)
      : local.iter_1773.input)

    output = (local.curr_1774.code == "."
      ? "${local.iter_1773.output}${jsondecode(format("\"\\u%04x\"", local.iter_1773.tape[local.iter_1773.tape_ptr]))}"
      : local.iter_1773.output)
    
    tape = (
      local.curr_1774.code == "+"
        ? [for i, b in local.iter_1773.tape : (i == local.iter_1773.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1774.code == "-"
        ? [for i, b in local.iter_1773.tape : (i == local.iter_1773.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1774.code == ","
        ? [for i, b in local.iter_1773.tape : (i == local.iter_1773.tape_ptr ? local.ascii_lookup[local.curr_1774.input] : b)]
        : local.iter_1773.tape)

    tape_ptr = (
      local.curr_1774.code == "<"
        ? local.iter_1773.tape_ptr == 0 ? length(local.iter_1773.tape) - 1 : local.iter_1773.tape_ptr - 1 :
      local.curr_1774.code == ">"
        ? local.iter_1773.tape_ptr == length(local.iter_1773.tape) - 1 ? 0 : local.iter_1773.tape_ptr + 1
        : local.iter_1773.tape_ptr)

    code_ptr = 1 + (
      local.curr_1774.code == "["
        ? local.iter_1773.tape[local.iter_1773.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1773.code_ptr)] : local.iter_1773.code_ptr :
      local.curr_1774.code == "]"
        ? local.iter_1773.tape[local.iter_1773.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1773.code_ptr)] : local.iter_1773.code_ptr
        : local.iter_1773.code_ptr)

    steps_taken = 1 + local.iter_1773.steps_taken
  }
}

locals {
  end_of_code_1775 = try(local.iter_1774.code_ptr >= length(var.code), true)

  curr_1775 = local.end_of_code_1775 ? null : {
    code = substr(var.code, local.iter_1774.code_ptr, 1)
    input = substr(var.code, local.iter_1774.code_ptr, 1) == "," ? substr(local.iter_1774.input, 0, 1) : null
  }

  iter_1775 = local.end_of_code_1775 ? local.iter_1774 : {
    input = (local.curr_1775.code == ","
      ? substr(local.iter_1774.input, 1, -1)
      : local.iter_1774.input)

    output = (local.curr_1775.code == "."
      ? "${local.iter_1774.output}${jsondecode(format("\"\\u%04x\"", local.iter_1774.tape[local.iter_1774.tape_ptr]))}"
      : local.iter_1774.output)
    
    tape = (
      local.curr_1775.code == "+"
        ? [for i, b in local.iter_1774.tape : (i == local.iter_1774.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1775.code == "-"
        ? [for i, b in local.iter_1774.tape : (i == local.iter_1774.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1775.code == ","
        ? [for i, b in local.iter_1774.tape : (i == local.iter_1774.tape_ptr ? local.ascii_lookup[local.curr_1775.input] : b)]
        : local.iter_1774.tape)

    tape_ptr = (
      local.curr_1775.code == "<"
        ? local.iter_1774.tape_ptr == 0 ? length(local.iter_1774.tape) - 1 : local.iter_1774.tape_ptr - 1 :
      local.curr_1775.code == ">"
        ? local.iter_1774.tape_ptr == length(local.iter_1774.tape) - 1 ? 0 : local.iter_1774.tape_ptr + 1
        : local.iter_1774.tape_ptr)

    code_ptr = 1 + (
      local.curr_1775.code == "["
        ? local.iter_1774.tape[local.iter_1774.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1774.code_ptr)] : local.iter_1774.code_ptr :
      local.curr_1775.code == "]"
        ? local.iter_1774.tape[local.iter_1774.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1774.code_ptr)] : local.iter_1774.code_ptr
        : local.iter_1774.code_ptr)

    steps_taken = 1 + local.iter_1774.steps_taken
  }
}

locals {
  end_of_code_1776 = try(local.iter_1775.code_ptr >= length(var.code), true)

  curr_1776 = local.end_of_code_1776 ? null : {
    code = substr(var.code, local.iter_1775.code_ptr, 1)
    input = substr(var.code, local.iter_1775.code_ptr, 1) == "," ? substr(local.iter_1775.input, 0, 1) : null
  }

  iter_1776 = local.end_of_code_1776 ? local.iter_1775 : {
    input = (local.curr_1776.code == ","
      ? substr(local.iter_1775.input, 1, -1)
      : local.iter_1775.input)

    output = (local.curr_1776.code == "."
      ? "${local.iter_1775.output}${jsondecode(format("\"\\u%04x\"", local.iter_1775.tape[local.iter_1775.tape_ptr]))}"
      : local.iter_1775.output)
    
    tape = (
      local.curr_1776.code == "+"
        ? [for i, b in local.iter_1775.tape : (i == local.iter_1775.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1776.code == "-"
        ? [for i, b in local.iter_1775.tape : (i == local.iter_1775.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1776.code == ","
        ? [for i, b in local.iter_1775.tape : (i == local.iter_1775.tape_ptr ? local.ascii_lookup[local.curr_1776.input] : b)]
        : local.iter_1775.tape)

    tape_ptr = (
      local.curr_1776.code == "<"
        ? local.iter_1775.tape_ptr == 0 ? length(local.iter_1775.tape) - 1 : local.iter_1775.tape_ptr - 1 :
      local.curr_1776.code == ">"
        ? local.iter_1775.tape_ptr == length(local.iter_1775.tape) - 1 ? 0 : local.iter_1775.tape_ptr + 1
        : local.iter_1775.tape_ptr)

    code_ptr = 1 + (
      local.curr_1776.code == "["
        ? local.iter_1775.tape[local.iter_1775.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1775.code_ptr)] : local.iter_1775.code_ptr :
      local.curr_1776.code == "]"
        ? local.iter_1775.tape[local.iter_1775.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1775.code_ptr)] : local.iter_1775.code_ptr
        : local.iter_1775.code_ptr)

    steps_taken = 1 + local.iter_1775.steps_taken
  }
}

locals {
  end_of_code_1777 = try(local.iter_1776.code_ptr >= length(var.code), true)

  curr_1777 = local.end_of_code_1777 ? null : {
    code = substr(var.code, local.iter_1776.code_ptr, 1)
    input = substr(var.code, local.iter_1776.code_ptr, 1) == "," ? substr(local.iter_1776.input, 0, 1) : null
  }

  iter_1777 = local.end_of_code_1777 ? local.iter_1776 : {
    input = (local.curr_1777.code == ","
      ? substr(local.iter_1776.input, 1, -1)
      : local.iter_1776.input)

    output = (local.curr_1777.code == "."
      ? "${local.iter_1776.output}${jsondecode(format("\"\\u%04x\"", local.iter_1776.tape[local.iter_1776.tape_ptr]))}"
      : local.iter_1776.output)
    
    tape = (
      local.curr_1777.code == "+"
        ? [for i, b in local.iter_1776.tape : (i == local.iter_1776.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1777.code == "-"
        ? [for i, b in local.iter_1776.tape : (i == local.iter_1776.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1777.code == ","
        ? [for i, b in local.iter_1776.tape : (i == local.iter_1776.tape_ptr ? local.ascii_lookup[local.curr_1777.input] : b)]
        : local.iter_1776.tape)

    tape_ptr = (
      local.curr_1777.code == "<"
        ? local.iter_1776.tape_ptr == 0 ? length(local.iter_1776.tape) - 1 : local.iter_1776.tape_ptr - 1 :
      local.curr_1777.code == ">"
        ? local.iter_1776.tape_ptr == length(local.iter_1776.tape) - 1 ? 0 : local.iter_1776.tape_ptr + 1
        : local.iter_1776.tape_ptr)

    code_ptr = 1 + (
      local.curr_1777.code == "["
        ? local.iter_1776.tape[local.iter_1776.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1776.code_ptr)] : local.iter_1776.code_ptr :
      local.curr_1777.code == "]"
        ? local.iter_1776.tape[local.iter_1776.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1776.code_ptr)] : local.iter_1776.code_ptr
        : local.iter_1776.code_ptr)

    steps_taken = 1 + local.iter_1776.steps_taken
  }
}

locals {
  end_of_code_1778 = try(local.iter_1777.code_ptr >= length(var.code), true)

  curr_1778 = local.end_of_code_1778 ? null : {
    code = substr(var.code, local.iter_1777.code_ptr, 1)
    input = substr(var.code, local.iter_1777.code_ptr, 1) == "," ? substr(local.iter_1777.input, 0, 1) : null
  }

  iter_1778 = local.end_of_code_1778 ? local.iter_1777 : {
    input = (local.curr_1778.code == ","
      ? substr(local.iter_1777.input, 1, -1)
      : local.iter_1777.input)

    output = (local.curr_1778.code == "."
      ? "${local.iter_1777.output}${jsondecode(format("\"\\u%04x\"", local.iter_1777.tape[local.iter_1777.tape_ptr]))}"
      : local.iter_1777.output)
    
    tape = (
      local.curr_1778.code == "+"
        ? [for i, b in local.iter_1777.tape : (i == local.iter_1777.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1778.code == "-"
        ? [for i, b in local.iter_1777.tape : (i == local.iter_1777.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1778.code == ","
        ? [for i, b in local.iter_1777.tape : (i == local.iter_1777.tape_ptr ? local.ascii_lookup[local.curr_1778.input] : b)]
        : local.iter_1777.tape)

    tape_ptr = (
      local.curr_1778.code == "<"
        ? local.iter_1777.tape_ptr == 0 ? length(local.iter_1777.tape) - 1 : local.iter_1777.tape_ptr - 1 :
      local.curr_1778.code == ">"
        ? local.iter_1777.tape_ptr == length(local.iter_1777.tape) - 1 ? 0 : local.iter_1777.tape_ptr + 1
        : local.iter_1777.tape_ptr)

    code_ptr = 1 + (
      local.curr_1778.code == "["
        ? local.iter_1777.tape[local.iter_1777.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1777.code_ptr)] : local.iter_1777.code_ptr :
      local.curr_1778.code == "]"
        ? local.iter_1777.tape[local.iter_1777.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1777.code_ptr)] : local.iter_1777.code_ptr
        : local.iter_1777.code_ptr)

    steps_taken = 1 + local.iter_1777.steps_taken
  }
}

locals {
  end_of_code_1779 = try(local.iter_1778.code_ptr >= length(var.code), true)

  curr_1779 = local.end_of_code_1779 ? null : {
    code = substr(var.code, local.iter_1778.code_ptr, 1)
    input = substr(var.code, local.iter_1778.code_ptr, 1) == "," ? substr(local.iter_1778.input, 0, 1) : null
  }

  iter_1779 = local.end_of_code_1779 ? local.iter_1778 : {
    input = (local.curr_1779.code == ","
      ? substr(local.iter_1778.input, 1, -1)
      : local.iter_1778.input)

    output = (local.curr_1779.code == "."
      ? "${local.iter_1778.output}${jsondecode(format("\"\\u%04x\"", local.iter_1778.tape[local.iter_1778.tape_ptr]))}"
      : local.iter_1778.output)
    
    tape = (
      local.curr_1779.code == "+"
        ? [for i, b in local.iter_1778.tape : (i == local.iter_1778.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1779.code == "-"
        ? [for i, b in local.iter_1778.tape : (i == local.iter_1778.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1779.code == ","
        ? [for i, b in local.iter_1778.tape : (i == local.iter_1778.tape_ptr ? local.ascii_lookup[local.curr_1779.input] : b)]
        : local.iter_1778.tape)

    tape_ptr = (
      local.curr_1779.code == "<"
        ? local.iter_1778.tape_ptr == 0 ? length(local.iter_1778.tape) - 1 : local.iter_1778.tape_ptr - 1 :
      local.curr_1779.code == ">"
        ? local.iter_1778.tape_ptr == length(local.iter_1778.tape) - 1 ? 0 : local.iter_1778.tape_ptr + 1
        : local.iter_1778.tape_ptr)

    code_ptr = 1 + (
      local.curr_1779.code == "["
        ? local.iter_1778.tape[local.iter_1778.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1778.code_ptr)] : local.iter_1778.code_ptr :
      local.curr_1779.code == "]"
        ? local.iter_1778.tape[local.iter_1778.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1778.code_ptr)] : local.iter_1778.code_ptr
        : local.iter_1778.code_ptr)

    steps_taken = 1 + local.iter_1778.steps_taken
  }
}

locals {
  end_of_code_1780 = try(local.iter_1779.code_ptr >= length(var.code), true)

  curr_1780 = local.end_of_code_1780 ? null : {
    code = substr(var.code, local.iter_1779.code_ptr, 1)
    input = substr(var.code, local.iter_1779.code_ptr, 1) == "," ? substr(local.iter_1779.input, 0, 1) : null
  }

  iter_1780 = local.end_of_code_1780 ? local.iter_1779 : {
    input = (local.curr_1780.code == ","
      ? substr(local.iter_1779.input, 1, -1)
      : local.iter_1779.input)

    output = (local.curr_1780.code == "."
      ? "${local.iter_1779.output}${jsondecode(format("\"\\u%04x\"", local.iter_1779.tape[local.iter_1779.tape_ptr]))}"
      : local.iter_1779.output)
    
    tape = (
      local.curr_1780.code == "+"
        ? [for i, b in local.iter_1779.tape : (i == local.iter_1779.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1780.code == "-"
        ? [for i, b in local.iter_1779.tape : (i == local.iter_1779.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1780.code == ","
        ? [for i, b in local.iter_1779.tape : (i == local.iter_1779.tape_ptr ? local.ascii_lookup[local.curr_1780.input] : b)]
        : local.iter_1779.tape)

    tape_ptr = (
      local.curr_1780.code == "<"
        ? local.iter_1779.tape_ptr == 0 ? length(local.iter_1779.tape) - 1 : local.iter_1779.tape_ptr - 1 :
      local.curr_1780.code == ">"
        ? local.iter_1779.tape_ptr == length(local.iter_1779.tape) - 1 ? 0 : local.iter_1779.tape_ptr + 1
        : local.iter_1779.tape_ptr)

    code_ptr = 1 + (
      local.curr_1780.code == "["
        ? local.iter_1779.tape[local.iter_1779.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1779.code_ptr)] : local.iter_1779.code_ptr :
      local.curr_1780.code == "]"
        ? local.iter_1779.tape[local.iter_1779.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1779.code_ptr)] : local.iter_1779.code_ptr
        : local.iter_1779.code_ptr)

    steps_taken = 1 + local.iter_1779.steps_taken
  }
}

locals {
  end_of_code_1781 = try(local.iter_1780.code_ptr >= length(var.code), true)

  curr_1781 = local.end_of_code_1781 ? null : {
    code = substr(var.code, local.iter_1780.code_ptr, 1)
    input = substr(var.code, local.iter_1780.code_ptr, 1) == "," ? substr(local.iter_1780.input, 0, 1) : null
  }

  iter_1781 = local.end_of_code_1781 ? local.iter_1780 : {
    input = (local.curr_1781.code == ","
      ? substr(local.iter_1780.input, 1, -1)
      : local.iter_1780.input)

    output = (local.curr_1781.code == "."
      ? "${local.iter_1780.output}${jsondecode(format("\"\\u%04x\"", local.iter_1780.tape[local.iter_1780.tape_ptr]))}"
      : local.iter_1780.output)
    
    tape = (
      local.curr_1781.code == "+"
        ? [for i, b in local.iter_1780.tape : (i == local.iter_1780.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1781.code == "-"
        ? [for i, b in local.iter_1780.tape : (i == local.iter_1780.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1781.code == ","
        ? [for i, b in local.iter_1780.tape : (i == local.iter_1780.tape_ptr ? local.ascii_lookup[local.curr_1781.input] : b)]
        : local.iter_1780.tape)

    tape_ptr = (
      local.curr_1781.code == "<"
        ? local.iter_1780.tape_ptr == 0 ? length(local.iter_1780.tape) - 1 : local.iter_1780.tape_ptr - 1 :
      local.curr_1781.code == ">"
        ? local.iter_1780.tape_ptr == length(local.iter_1780.tape) - 1 ? 0 : local.iter_1780.tape_ptr + 1
        : local.iter_1780.tape_ptr)

    code_ptr = 1 + (
      local.curr_1781.code == "["
        ? local.iter_1780.tape[local.iter_1780.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1780.code_ptr)] : local.iter_1780.code_ptr :
      local.curr_1781.code == "]"
        ? local.iter_1780.tape[local.iter_1780.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1780.code_ptr)] : local.iter_1780.code_ptr
        : local.iter_1780.code_ptr)

    steps_taken = 1 + local.iter_1780.steps_taken
  }
}

locals {
  end_of_code_1782 = try(local.iter_1781.code_ptr >= length(var.code), true)

  curr_1782 = local.end_of_code_1782 ? null : {
    code = substr(var.code, local.iter_1781.code_ptr, 1)
    input = substr(var.code, local.iter_1781.code_ptr, 1) == "," ? substr(local.iter_1781.input, 0, 1) : null
  }

  iter_1782 = local.end_of_code_1782 ? local.iter_1781 : {
    input = (local.curr_1782.code == ","
      ? substr(local.iter_1781.input, 1, -1)
      : local.iter_1781.input)

    output = (local.curr_1782.code == "."
      ? "${local.iter_1781.output}${jsondecode(format("\"\\u%04x\"", local.iter_1781.tape[local.iter_1781.tape_ptr]))}"
      : local.iter_1781.output)
    
    tape = (
      local.curr_1782.code == "+"
        ? [for i, b in local.iter_1781.tape : (i == local.iter_1781.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1782.code == "-"
        ? [for i, b in local.iter_1781.tape : (i == local.iter_1781.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1782.code == ","
        ? [for i, b in local.iter_1781.tape : (i == local.iter_1781.tape_ptr ? local.ascii_lookup[local.curr_1782.input] : b)]
        : local.iter_1781.tape)

    tape_ptr = (
      local.curr_1782.code == "<"
        ? local.iter_1781.tape_ptr == 0 ? length(local.iter_1781.tape) - 1 : local.iter_1781.tape_ptr - 1 :
      local.curr_1782.code == ">"
        ? local.iter_1781.tape_ptr == length(local.iter_1781.tape) - 1 ? 0 : local.iter_1781.tape_ptr + 1
        : local.iter_1781.tape_ptr)

    code_ptr = 1 + (
      local.curr_1782.code == "["
        ? local.iter_1781.tape[local.iter_1781.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1781.code_ptr)] : local.iter_1781.code_ptr :
      local.curr_1782.code == "]"
        ? local.iter_1781.tape[local.iter_1781.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1781.code_ptr)] : local.iter_1781.code_ptr
        : local.iter_1781.code_ptr)

    steps_taken = 1 + local.iter_1781.steps_taken
  }
}

locals {
  end_of_code_1783 = try(local.iter_1782.code_ptr >= length(var.code), true)

  curr_1783 = local.end_of_code_1783 ? null : {
    code = substr(var.code, local.iter_1782.code_ptr, 1)
    input = substr(var.code, local.iter_1782.code_ptr, 1) == "," ? substr(local.iter_1782.input, 0, 1) : null
  }

  iter_1783 = local.end_of_code_1783 ? local.iter_1782 : {
    input = (local.curr_1783.code == ","
      ? substr(local.iter_1782.input, 1, -1)
      : local.iter_1782.input)

    output = (local.curr_1783.code == "."
      ? "${local.iter_1782.output}${jsondecode(format("\"\\u%04x\"", local.iter_1782.tape[local.iter_1782.tape_ptr]))}"
      : local.iter_1782.output)
    
    tape = (
      local.curr_1783.code == "+"
        ? [for i, b in local.iter_1782.tape : (i == local.iter_1782.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1783.code == "-"
        ? [for i, b in local.iter_1782.tape : (i == local.iter_1782.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1783.code == ","
        ? [for i, b in local.iter_1782.tape : (i == local.iter_1782.tape_ptr ? local.ascii_lookup[local.curr_1783.input] : b)]
        : local.iter_1782.tape)

    tape_ptr = (
      local.curr_1783.code == "<"
        ? local.iter_1782.tape_ptr == 0 ? length(local.iter_1782.tape) - 1 : local.iter_1782.tape_ptr - 1 :
      local.curr_1783.code == ">"
        ? local.iter_1782.tape_ptr == length(local.iter_1782.tape) - 1 ? 0 : local.iter_1782.tape_ptr + 1
        : local.iter_1782.tape_ptr)

    code_ptr = 1 + (
      local.curr_1783.code == "["
        ? local.iter_1782.tape[local.iter_1782.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1782.code_ptr)] : local.iter_1782.code_ptr :
      local.curr_1783.code == "]"
        ? local.iter_1782.tape[local.iter_1782.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1782.code_ptr)] : local.iter_1782.code_ptr
        : local.iter_1782.code_ptr)

    steps_taken = 1 + local.iter_1782.steps_taken
  }
}

locals {
  end_of_code_1784 = try(local.iter_1783.code_ptr >= length(var.code), true)

  curr_1784 = local.end_of_code_1784 ? null : {
    code = substr(var.code, local.iter_1783.code_ptr, 1)
    input = substr(var.code, local.iter_1783.code_ptr, 1) == "," ? substr(local.iter_1783.input, 0, 1) : null
  }

  iter_1784 = local.end_of_code_1784 ? local.iter_1783 : {
    input = (local.curr_1784.code == ","
      ? substr(local.iter_1783.input, 1, -1)
      : local.iter_1783.input)

    output = (local.curr_1784.code == "."
      ? "${local.iter_1783.output}${jsondecode(format("\"\\u%04x\"", local.iter_1783.tape[local.iter_1783.tape_ptr]))}"
      : local.iter_1783.output)
    
    tape = (
      local.curr_1784.code == "+"
        ? [for i, b in local.iter_1783.tape : (i == local.iter_1783.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1784.code == "-"
        ? [for i, b in local.iter_1783.tape : (i == local.iter_1783.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1784.code == ","
        ? [for i, b in local.iter_1783.tape : (i == local.iter_1783.tape_ptr ? local.ascii_lookup[local.curr_1784.input] : b)]
        : local.iter_1783.tape)

    tape_ptr = (
      local.curr_1784.code == "<"
        ? local.iter_1783.tape_ptr == 0 ? length(local.iter_1783.tape) - 1 : local.iter_1783.tape_ptr - 1 :
      local.curr_1784.code == ">"
        ? local.iter_1783.tape_ptr == length(local.iter_1783.tape) - 1 ? 0 : local.iter_1783.tape_ptr + 1
        : local.iter_1783.tape_ptr)

    code_ptr = 1 + (
      local.curr_1784.code == "["
        ? local.iter_1783.tape[local.iter_1783.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1783.code_ptr)] : local.iter_1783.code_ptr :
      local.curr_1784.code == "]"
        ? local.iter_1783.tape[local.iter_1783.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1783.code_ptr)] : local.iter_1783.code_ptr
        : local.iter_1783.code_ptr)

    steps_taken = 1 + local.iter_1783.steps_taken
  }
}

locals {
  end_of_code_1785 = try(local.iter_1784.code_ptr >= length(var.code), true)

  curr_1785 = local.end_of_code_1785 ? null : {
    code = substr(var.code, local.iter_1784.code_ptr, 1)
    input = substr(var.code, local.iter_1784.code_ptr, 1) == "," ? substr(local.iter_1784.input, 0, 1) : null
  }

  iter_1785 = local.end_of_code_1785 ? local.iter_1784 : {
    input = (local.curr_1785.code == ","
      ? substr(local.iter_1784.input, 1, -1)
      : local.iter_1784.input)

    output = (local.curr_1785.code == "."
      ? "${local.iter_1784.output}${jsondecode(format("\"\\u%04x\"", local.iter_1784.tape[local.iter_1784.tape_ptr]))}"
      : local.iter_1784.output)
    
    tape = (
      local.curr_1785.code == "+"
        ? [for i, b in local.iter_1784.tape : (i == local.iter_1784.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1785.code == "-"
        ? [for i, b in local.iter_1784.tape : (i == local.iter_1784.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1785.code == ","
        ? [for i, b in local.iter_1784.tape : (i == local.iter_1784.tape_ptr ? local.ascii_lookup[local.curr_1785.input] : b)]
        : local.iter_1784.tape)

    tape_ptr = (
      local.curr_1785.code == "<"
        ? local.iter_1784.tape_ptr == 0 ? length(local.iter_1784.tape) - 1 : local.iter_1784.tape_ptr - 1 :
      local.curr_1785.code == ">"
        ? local.iter_1784.tape_ptr == length(local.iter_1784.tape) - 1 ? 0 : local.iter_1784.tape_ptr + 1
        : local.iter_1784.tape_ptr)

    code_ptr = 1 + (
      local.curr_1785.code == "["
        ? local.iter_1784.tape[local.iter_1784.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1784.code_ptr)] : local.iter_1784.code_ptr :
      local.curr_1785.code == "]"
        ? local.iter_1784.tape[local.iter_1784.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1784.code_ptr)] : local.iter_1784.code_ptr
        : local.iter_1784.code_ptr)

    steps_taken = 1 + local.iter_1784.steps_taken
  }
}

locals {
  end_of_code_1786 = try(local.iter_1785.code_ptr >= length(var.code), true)

  curr_1786 = local.end_of_code_1786 ? null : {
    code = substr(var.code, local.iter_1785.code_ptr, 1)
    input = substr(var.code, local.iter_1785.code_ptr, 1) == "," ? substr(local.iter_1785.input, 0, 1) : null
  }

  iter_1786 = local.end_of_code_1786 ? local.iter_1785 : {
    input = (local.curr_1786.code == ","
      ? substr(local.iter_1785.input, 1, -1)
      : local.iter_1785.input)

    output = (local.curr_1786.code == "."
      ? "${local.iter_1785.output}${jsondecode(format("\"\\u%04x\"", local.iter_1785.tape[local.iter_1785.tape_ptr]))}"
      : local.iter_1785.output)
    
    tape = (
      local.curr_1786.code == "+"
        ? [for i, b in local.iter_1785.tape : (i == local.iter_1785.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1786.code == "-"
        ? [for i, b in local.iter_1785.tape : (i == local.iter_1785.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1786.code == ","
        ? [for i, b in local.iter_1785.tape : (i == local.iter_1785.tape_ptr ? local.ascii_lookup[local.curr_1786.input] : b)]
        : local.iter_1785.tape)

    tape_ptr = (
      local.curr_1786.code == "<"
        ? local.iter_1785.tape_ptr == 0 ? length(local.iter_1785.tape) - 1 : local.iter_1785.tape_ptr - 1 :
      local.curr_1786.code == ">"
        ? local.iter_1785.tape_ptr == length(local.iter_1785.tape) - 1 ? 0 : local.iter_1785.tape_ptr + 1
        : local.iter_1785.tape_ptr)

    code_ptr = 1 + (
      local.curr_1786.code == "["
        ? local.iter_1785.tape[local.iter_1785.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1785.code_ptr)] : local.iter_1785.code_ptr :
      local.curr_1786.code == "]"
        ? local.iter_1785.tape[local.iter_1785.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1785.code_ptr)] : local.iter_1785.code_ptr
        : local.iter_1785.code_ptr)

    steps_taken = 1 + local.iter_1785.steps_taken
  }
}

locals {
  end_of_code_1787 = try(local.iter_1786.code_ptr >= length(var.code), true)

  curr_1787 = local.end_of_code_1787 ? null : {
    code = substr(var.code, local.iter_1786.code_ptr, 1)
    input = substr(var.code, local.iter_1786.code_ptr, 1) == "," ? substr(local.iter_1786.input, 0, 1) : null
  }

  iter_1787 = local.end_of_code_1787 ? local.iter_1786 : {
    input = (local.curr_1787.code == ","
      ? substr(local.iter_1786.input, 1, -1)
      : local.iter_1786.input)

    output = (local.curr_1787.code == "."
      ? "${local.iter_1786.output}${jsondecode(format("\"\\u%04x\"", local.iter_1786.tape[local.iter_1786.tape_ptr]))}"
      : local.iter_1786.output)
    
    tape = (
      local.curr_1787.code == "+"
        ? [for i, b in local.iter_1786.tape : (i == local.iter_1786.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1787.code == "-"
        ? [for i, b in local.iter_1786.tape : (i == local.iter_1786.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1787.code == ","
        ? [for i, b in local.iter_1786.tape : (i == local.iter_1786.tape_ptr ? local.ascii_lookup[local.curr_1787.input] : b)]
        : local.iter_1786.tape)

    tape_ptr = (
      local.curr_1787.code == "<"
        ? local.iter_1786.tape_ptr == 0 ? length(local.iter_1786.tape) - 1 : local.iter_1786.tape_ptr - 1 :
      local.curr_1787.code == ">"
        ? local.iter_1786.tape_ptr == length(local.iter_1786.tape) - 1 ? 0 : local.iter_1786.tape_ptr + 1
        : local.iter_1786.tape_ptr)

    code_ptr = 1 + (
      local.curr_1787.code == "["
        ? local.iter_1786.tape[local.iter_1786.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1786.code_ptr)] : local.iter_1786.code_ptr :
      local.curr_1787.code == "]"
        ? local.iter_1786.tape[local.iter_1786.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1786.code_ptr)] : local.iter_1786.code_ptr
        : local.iter_1786.code_ptr)

    steps_taken = 1 + local.iter_1786.steps_taken
  }
}

locals {
  end_of_code_1788 = try(local.iter_1787.code_ptr >= length(var.code), true)

  curr_1788 = local.end_of_code_1788 ? null : {
    code = substr(var.code, local.iter_1787.code_ptr, 1)
    input = substr(var.code, local.iter_1787.code_ptr, 1) == "," ? substr(local.iter_1787.input, 0, 1) : null
  }

  iter_1788 = local.end_of_code_1788 ? local.iter_1787 : {
    input = (local.curr_1788.code == ","
      ? substr(local.iter_1787.input, 1, -1)
      : local.iter_1787.input)

    output = (local.curr_1788.code == "."
      ? "${local.iter_1787.output}${jsondecode(format("\"\\u%04x\"", local.iter_1787.tape[local.iter_1787.tape_ptr]))}"
      : local.iter_1787.output)
    
    tape = (
      local.curr_1788.code == "+"
        ? [for i, b in local.iter_1787.tape : (i == local.iter_1787.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1788.code == "-"
        ? [for i, b in local.iter_1787.tape : (i == local.iter_1787.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1788.code == ","
        ? [for i, b in local.iter_1787.tape : (i == local.iter_1787.tape_ptr ? local.ascii_lookup[local.curr_1788.input] : b)]
        : local.iter_1787.tape)

    tape_ptr = (
      local.curr_1788.code == "<"
        ? local.iter_1787.tape_ptr == 0 ? length(local.iter_1787.tape) - 1 : local.iter_1787.tape_ptr - 1 :
      local.curr_1788.code == ">"
        ? local.iter_1787.tape_ptr == length(local.iter_1787.tape) - 1 ? 0 : local.iter_1787.tape_ptr + 1
        : local.iter_1787.tape_ptr)

    code_ptr = 1 + (
      local.curr_1788.code == "["
        ? local.iter_1787.tape[local.iter_1787.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1787.code_ptr)] : local.iter_1787.code_ptr :
      local.curr_1788.code == "]"
        ? local.iter_1787.tape[local.iter_1787.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1787.code_ptr)] : local.iter_1787.code_ptr
        : local.iter_1787.code_ptr)

    steps_taken = 1 + local.iter_1787.steps_taken
  }
}

locals {
  end_of_code_1789 = try(local.iter_1788.code_ptr >= length(var.code), true)

  curr_1789 = local.end_of_code_1789 ? null : {
    code = substr(var.code, local.iter_1788.code_ptr, 1)
    input = substr(var.code, local.iter_1788.code_ptr, 1) == "," ? substr(local.iter_1788.input, 0, 1) : null
  }

  iter_1789 = local.end_of_code_1789 ? local.iter_1788 : {
    input = (local.curr_1789.code == ","
      ? substr(local.iter_1788.input, 1, -1)
      : local.iter_1788.input)

    output = (local.curr_1789.code == "."
      ? "${local.iter_1788.output}${jsondecode(format("\"\\u%04x\"", local.iter_1788.tape[local.iter_1788.tape_ptr]))}"
      : local.iter_1788.output)
    
    tape = (
      local.curr_1789.code == "+"
        ? [for i, b in local.iter_1788.tape : (i == local.iter_1788.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1789.code == "-"
        ? [for i, b in local.iter_1788.tape : (i == local.iter_1788.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1789.code == ","
        ? [for i, b in local.iter_1788.tape : (i == local.iter_1788.tape_ptr ? local.ascii_lookup[local.curr_1789.input] : b)]
        : local.iter_1788.tape)

    tape_ptr = (
      local.curr_1789.code == "<"
        ? local.iter_1788.tape_ptr == 0 ? length(local.iter_1788.tape) - 1 : local.iter_1788.tape_ptr - 1 :
      local.curr_1789.code == ">"
        ? local.iter_1788.tape_ptr == length(local.iter_1788.tape) - 1 ? 0 : local.iter_1788.tape_ptr + 1
        : local.iter_1788.tape_ptr)

    code_ptr = 1 + (
      local.curr_1789.code == "["
        ? local.iter_1788.tape[local.iter_1788.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1788.code_ptr)] : local.iter_1788.code_ptr :
      local.curr_1789.code == "]"
        ? local.iter_1788.tape[local.iter_1788.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1788.code_ptr)] : local.iter_1788.code_ptr
        : local.iter_1788.code_ptr)

    steps_taken = 1 + local.iter_1788.steps_taken
  }
}

locals {
  end_of_code_1790 = try(local.iter_1789.code_ptr >= length(var.code), true)

  curr_1790 = local.end_of_code_1790 ? null : {
    code = substr(var.code, local.iter_1789.code_ptr, 1)
    input = substr(var.code, local.iter_1789.code_ptr, 1) == "," ? substr(local.iter_1789.input, 0, 1) : null
  }

  iter_1790 = local.end_of_code_1790 ? local.iter_1789 : {
    input = (local.curr_1790.code == ","
      ? substr(local.iter_1789.input, 1, -1)
      : local.iter_1789.input)

    output = (local.curr_1790.code == "."
      ? "${local.iter_1789.output}${jsondecode(format("\"\\u%04x\"", local.iter_1789.tape[local.iter_1789.tape_ptr]))}"
      : local.iter_1789.output)
    
    tape = (
      local.curr_1790.code == "+"
        ? [for i, b in local.iter_1789.tape : (i == local.iter_1789.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1790.code == "-"
        ? [for i, b in local.iter_1789.tape : (i == local.iter_1789.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1790.code == ","
        ? [for i, b in local.iter_1789.tape : (i == local.iter_1789.tape_ptr ? local.ascii_lookup[local.curr_1790.input] : b)]
        : local.iter_1789.tape)

    tape_ptr = (
      local.curr_1790.code == "<"
        ? local.iter_1789.tape_ptr == 0 ? length(local.iter_1789.tape) - 1 : local.iter_1789.tape_ptr - 1 :
      local.curr_1790.code == ">"
        ? local.iter_1789.tape_ptr == length(local.iter_1789.tape) - 1 ? 0 : local.iter_1789.tape_ptr + 1
        : local.iter_1789.tape_ptr)

    code_ptr = 1 + (
      local.curr_1790.code == "["
        ? local.iter_1789.tape[local.iter_1789.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1789.code_ptr)] : local.iter_1789.code_ptr :
      local.curr_1790.code == "]"
        ? local.iter_1789.tape[local.iter_1789.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1789.code_ptr)] : local.iter_1789.code_ptr
        : local.iter_1789.code_ptr)

    steps_taken = 1 + local.iter_1789.steps_taken
  }
}

locals {
  end_of_code_1791 = try(local.iter_1790.code_ptr >= length(var.code), true)

  curr_1791 = local.end_of_code_1791 ? null : {
    code = substr(var.code, local.iter_1790.code_ptr, 1)
    input = substr(var.code, local.iter_1790.code_ptr, 1) == "," ? substr(local.iter_1790.input, 0, 1) : null
  }

  iter_1791 = local.end_of_code_1791 ? local.iter_1790 : {
    input = (local.curr_1791.code == ","
      ? substr(local.iter_1790.input, 1, -1)
      : local.iter_1790.input)

    output = (local.curr_1791.code == "."
      ? "${local.iter_1790.output}${jsondecode(format("\"\\u%04x\"", local.iter_1790.tape[local.iter_1790.tape_ptr]))}"
      : local.iter_1790.output)
    
    tape = (
      local.curr_1791.code == "+"
        ? [for i, b in local.iter_1790.tape : (i == local.iter_1790.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1791.code == "-"
        ? [for i, b in local.iter_1790.tape : (i == local.iter_1790.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1791.code == ","
        ? [for i, b in local.iter_1790.tape : (i == local.iter_1790.tape_ptr ? local.ascii_lookup[local.curr_1791.input] : b)]
        : local.iter_1790.tape)

    tape_ptr = (
      local.curr_1791.code == "<"
        ? local.iter_1790.tape_ptr == 0 ? length(local.iter_1790.tape) - 1 : local.iter_1790.tape_ptr - 1 :
      local.curr_1791.code == ">"
        ? local.iter_1790.tape_ptr == length(local.iter_1790.tape) - 1 ? 0 : local.iter_1790.tape_ptr + 1
        : local.iter_1790.tape_ptr)

    code_ptr = 1 + (
      local.curr_1791.code == "["
        ? local.iter_1790.tape[local.iter_1790.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1790.code_ptr)] : local.iter_1790.code_ptr :
      local.curr_1791.code == "]"
        ? local.iter_1790.tape[local.iter_1790.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1790.code_ptr)] : local.iter_1790.code_ptr
        : local.iter_1790.code_ptr)

    steps_taken = 1 + local.iter_1790.steps_taken
  }
}

locals {
  end_of_code_1792 = try(local.iter_1791.code_ptr >= length(var.code), true)

  curr_1792 = local.end_of_code_1792 ? null : {
    code = substr(var.code, local.iter_1791.code_ptr, 1)
    input = substr(var.code, local.iter_1791.code_ptr, 1) == "," ? substr(local.iter_1791.input, 0, 1) : null
  }

  iter_1792 = local.end_of_code_1792 ? local.iter_1791 : {
    input = (local.curr_1792.code == ","
      ? substr(local.iter_1791.input, 1, -1)
      : local.iter_1791.input)

    output = (local.curr_1792.code == "."
      ? "${local.iter_1791.output}${jsondecode(format("\"\\u%04x\"", local.iter_1791.tape[local.iter_1791.tape_ptr]))}"
      : local.iter_1791.output)
    
    tape = (
      local.curr_1792.code == "+"
        ? [for i, b in local.iter_1791.tape : (i == local.iter_1791.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1792.code == "-"
        ? [for i, b in local.iter_1791.tape : (i == local.iter_1791.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1792.code == ","
        ? [for i, b in local.iter_1791.tape : (i == local.iter_1791.tape_ptr ? local.ascii_lookup[local.curr_1792.input] : b)]
        : local.iter_1791.tape)

    tape_ptr = (
      local.curr_1792.code == "<"
        ? local.iter_1791.tape_ptr == 0 ? length(local.iter_1791.tape) - 1 : local.iter_1791.tape_ptr - 1 :
      local.curr_1792.code == ">"
        ? local.iter_1791.tape_ptr == length(local.iter_1791.tape) - 1 ? 0 : local.iter_1791.tape_ptr + 1
        : local.iter_1791.tape_ptr)

    code_ptr = 1 + (
      local.curr_1792.code == "["
        ? local.iter_1791.tape[local.iter_1791.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1791.code_ptr)] : local.iter_1791.code_ptr :
      local.curr_1792.code == "]"
        ? local.iter_1791.tape[local.iter_1791.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1791.code_ptr)] : local.iter_1791.code_ptr
        : local.iter_1791.code_ptr)

    steps_taken = 1 + local.iter_1791.steps_taken
  }
}

locals {
  end_of_code_1793 = try(local.iter_1792.code_ptr >= length(var.code), true)

  curr_1793 = local.end_of_code_1793 ? null : {
    code = substr(var.code, local.iter_1792.code_ptr, 1)
    input = substr(var.code, local.iter_1792.code_ptr, 1) == "," ? substr(local.iter_1792.input, 0, 1) : null
  }

  iter_1793 = local.end_of_code_1793 ? local.iter_1792 : {
    input = (local.curr_1793.code == ","
      ? substr(local.iter_1792.input, 1, -1)
      : local.iter_1792.input)

    output = (local.curr_1793.code == "."
      ? "${local.iter_1792.output}${jsondecode(format("\"\\u%04x\"", local.iter_1792.tape[local.iter_1792.tape_ptr]))}"
      : local.iter_1792.output)
    
    tape = (
      local.curr_1793.code == "+"
        ? [for i, b in local.iter_1792.tape : (i == local.iter_1792.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1793.code == "-"
        ? [for i, b in local.iter_1792.tape : (i == local.iter_1792.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1793.code == ","
        ? [for i, b in local.iter_1792.tape : (i == local.iter_1792.tape_ptr ? local.ascii_lookup[local.curr_1793.input] : b)]
        : local.iter_1792.tape)

    tape_ptr = (
      local.curr_1793.code == "<"
        ? local.iter_1792.tape_ptr == 0 ? length(local.iter_1792.tape) - 1 : local.iter_1792.tape_ptr - 1 :
      local.curr_1793.code == ">"
        ? local.iter_1792.tape_ptr == length(local.iter_1792.tape) - 1 ? 0 : local.iter_1792.tape_ptr + 1
        : local.iter_1792.tape_ptr)

    code_ptr = 1 + (
      local.curr_1793.code == "["
        ? local.iter_1792.tape[local.iter_1792.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1792.code_ptr)] : local.iter_1792.code_ptr :
      local.curr_1793.code == "]"
        ? local.iter_1792.tape[local.iter_1792.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1792.code_ptr)] : local.iter_1792.code_ptr
        : local.iter_1792.code_ptr)

    steps_taken = 1 + local.iter_1792.steps_taken
  }
}

locals {
  end_of_code_1794 = try(local.iter_1793.code_ptr >= length(var.code), true)

  curr_1794 = local.end_of_code_1794 ? null : {
    code = substr(var.code, local.iter_1793.code_ptr, 1)
    input = substr(var.code, local.iter_1793.code_ptr, 1) == "," ? substr(local.iter_1793.input, 0, 1) : null
  }

  iter_1794 = local.end_of_code_1794 ? local.iter_1793 : {
    input = (local.curr_1794.code == ","
      ? substr(local.iter_1793.input, 1, -1)
      : local.iter_1793.input)

    output = (local.curr_1794.code == "."
      ? "${local.iter_1793.output}${jsondecode(format("\"\\u%04x\"", local.iter_1793.tape[local.iter_1793.tape_ptr]))}"
      : local.iter_1793.output)
    
    tape = (
      local.curr_1794.code == "+"
        ? [for i, b in local.iter_1793.tape : (i == local.iter_1793.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1794.code == "-"
        ? [for i, b in local.iter_1793.tape : (i == local.iter_1793.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1794.code == ","
        ? [for i, b in local.iter_1793.tape : (i == local.iter_1793.tape_ptr ? local.ascii_lookup[local.curr_1794.input] : b)]
        : local.iter_1793.tape)

    tape_ptr = (
      local.curr_1794.code == "<"
        ? local.iter_1793.tape_ptr == 0 ? length(local.iter_1793.tape) - 1 : local.iter_1793.tape_ptr - 1 :
      local.curr_1794.code == ">"
        ? local.iter_1793.tape_ptr == length(local.iter_1793.tape) - 1 ? 0 : local.iter_1793.tape_ptr + 1
        : local.iter_1793.tape_ptr)

    code_ptr = 1 + (
      local.curr_1794.code == "["
        ? local.iter_1793.tape[local.iter_1793.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1793.code_ptr)] : local.iter_1793.code_ptr :
      local.curr_1794.code == "]"
        ? local.iter_1793.tape[local.iter_1793.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1793.code_ptr)] : local.iter_1793.code_ptr
        : local.iter_1793.code_ptr)

    steps_taken = 1 + local.iter_1793.steps_taken
  }
}

locals {
  end_of_code_1795 = try(local.iter_1794.code_ptr >= length(var.code), true)

  curr_1795 = local.end_of_code_1795 ? null : {
    code = substr(var.code, local.iter_1794.code_ptr, 1)
    input = substr(var.code, local.iter_1794.code_ptr, 1) == "," ? substr(local.iter_1794.input, 0, 1) : null
  }

  iter_1795 = local.end_of_code_1795 ? local.iter_1794 : {
    input = (local.curr_1795.code == ","
      ? substr(local.iter_1794.input, 1, -1)
      : local.iter_1794.input)

    output = (local.curr_1795.code == "."
      ? "${local.iter_1794.output}${jsondecode(format("\"\\u%04x\"", local.iter_1794.tape[local.iter_1794.tape_ptr]))}"
      : local.iter_1794.output)
    
    tape = (
      local.curr_1795.code == "+"
        ? [for i, b in local.iter_1794.tape : (i == local.iter_1794.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1795.code == "-"
        ? [for i, b in local.iter_1794.tape : (i == local.iter_1794.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1795.code == ","
        ? [for i, b in local.iter_1794.tape : (i == local.iter_1794.tape_ptr ? local.ascii_lookup[local.curr_1795.input] : b)]
        : local.iter_1794.tape)

    tape_ptr = (
      local.curr_1795.code == "<"
        ? local.iter_1794.tape_ptr == 0 ? length(local.iter_1794.tape) - 1 : local.iter_1794.tape_ptr - 1 :
      local.curr_1795.code == ">"
        ? local.iter_1794.tape_ptr == length(local.iter_1794.tape) - 1 ? 0 : local.iter_1794.tape_ptr + 1
        : local.iter_1794.tape_ptr)

    code_ptr = 1 + (
      local.curr_1795.code == "["
        ? local.iter_1794.tape[local.iter_1794.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1794.code_ptr)] : local.iter_1794.code_ptr :
      local.curr_1795.code == "]"
        ? local.iter_1794.tape[local.iter_1794.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1794.code_ptr)] : local.iter_1794.code_ptr
        : local.iter_1794.code_ptr)

    steps_taken = 1 + local.iter_1794.steps_taken
  }
}

locals {
  end_of_code_1796 = try(local.iter_1795.code_ptr >= length(var.code), true)

  curr_1796 = local.end_of_code_1796 ? null : {
    code = substr(var.code, local.iter_1795.code_ptr, 1)
    input = substr(var.code, local.iter_1795.code_ptr, 1) == "," ? substr(local.iter_1795.input, 0, 1) : null
  }

  iter_1796 = local.end_of_code_1796 ? local.iter_1795 : {
    input = (local.curr_1796.code == ","
      ? substr(local.iter_1795.input, 1, -1)
      : local.iter_1795.input)

    output = (local.curr_1796.code == "."
      ? "${local.iter_1795.output}${jsondecode(format("\"\\u%04x\"", local.iter_1795.tape[local.iter_1795.tape_ptr]))}"
      : local.iter_1795.output)
    
    tape = (
      local.curr_1796.code == "+"
        ? [for i, b in local.iter_1795.tape : (i == local.iter_1795.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1796.code == "-"
        ? [for i, b in local.iter_1795.tape : (i == local.iter_1795.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1796.code == ","
        ? [for i, b in local.iter_1795.tape : (i == local.iter_1795.tape_ptr ? local.ascii_lookup[local.curr_1796.input] : b)]
        : local.iter_1795.tape)

    tape_ptr = (
      local.curr_1796.code == "<"
        ? local.iter_1795.tape_ptr == 0 ? length(local.iter_1795.tape) - 1 : local.iter_1795.tape_ptr - 1 :
      local.curr_1796.code == ">"
        ? local.iter_1795.tape_ptr == length(local.iter_1795.tape) - 1 ? 0 : local.iter_1795.tape_ptr + 1
        : local.iter_1795.tape_ptr)

    code_ptr = 1 + (
      local.curr_1796.code == "["
        ? local.iter_1795.tape[local.iter_1795.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1795.code_ptr)] : local.iter_1795.code_ptr :
      local.curr_1796.code == "]"
        ? local.iter_1795.tape[local.iter_1795.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1795.code_ptr)] : local.iter_1795.code_ptr
        : local.iter_1795.code_ptr)

    steps_taken = 1 + local.iter_1795.steps_taken
  }
}

locals {
  end_of_code_1797 = try(local.iter_1796.code_ptr >= length(var.code), true)

  curr_1797 = local.end_of_code_1797 ? null : {
    code = substr(var.code, local.iter_1796.code_ptr, 1)
    input = substr(var.code, local.iter_1796.code_ptr, 1) == "," ? substr(local.iter_1796.input, 0, 1) : null
  }

  iter_1797 = local.end_of_code_1797 ? local.iter_1796 : {
    input = (local.curr_1797.code == ","
      ? substr(local.iter_1796.input, 1, -1)
      : local.iter_1796.input)

    output = (local.curr_1797.code == "."
      ? "${local.iter_1796.output}${jsondecode(format("\"\\u%04x\"", local.iter_1796.tape[local.iter_1796.tape_ptr]))}"
      : local.iter_1796.output)
    
    tape = (
      local.curr_1797.code == "+"
        ? [for i, b in local.iter_1796.tape : (i == local.iter_1796.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1797.code == "-"
        ? [for i, b in local.iter_1796.tape : (i == local.iter_1796.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1797.code == ","
        ? [for i, b in local.iter_1796.tape : (i == local.iter_1796.tape_ptr ? local.ascii_lookup[local.curr_1797.input] : b)]
        : local.iter_1796.tape)

    tape_ptr = (
      local.curr_1797.code == "<"
        ? local.iter_1796.tape_ptr == 0 ? length(local.iter_1796.tape) - 1 : local.iter_1796.tape_ptr - 1 :
      local.curr_1797.code == ">"
        ? local.iter_1796.tape_ptr == length(local.iter_1796.tape) - 1 ? 0 : local.iter_1796.tape_ptr + 1
        : local.iter_1796.tape_ptr)

    code_ptr = 1 + (
      local.curr_1797.code == "["
        ? local.iter_1796.tape[local.iter_1796.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1796.code_ptr)] : local.iter_1796.code_ptr :
      local.curr_1797.code == "]"
        ? local.iter_1796.tape[local.iter_1796.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1796.code_ptr)] : local.iter_1796.code_ptr
        : local.iter_1796.code_ptr)

    steps_taken = 1 + local.iter_1796.steps_taken
  }
}

locals {
  end_of_code_1798 = try(local.iter_1797.code_ptr >= length(var.code), true)

  curr_1798 = local.end_of_code_1798 ? null : {
    code = substr(var.code, local.iter_1797.code_ptr, 1)
    input = substr(var.code, local.iter_1797.code_ptr, 1) == "," ? substr(local.iter_1797.input, 0, 1) : null
  }

  iter_1798 = local.end_of_code_1798 ? local.iter_1797 : {
    input = (local.curr_1798.code == ","
      ? substr(local.iter_1797.input, 1, -1)
      : local.iter_1797.input)

    output = (local.curr_1798.code == "."
      ? "${local.iter_1797.output}${jsondecode(format("\"\\u%04x\"", local.iter_1797.tape[local.iter_1797.tape_ptr]))}"
      : local.iter_1797.output)
    
    tape = (
      local.curr_1798.code == "+"
        ? [for i, b in local.iter_1797.tape : (i == local.iter_1797.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1798.code == "-"
        ? [for i, b in local.iter_1797.tape : (i == local.iter_1797.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1798.code == ","
        ? [for i, b in local.iter_1797.tape : (i == local.iter_1797.tape_ptr ? local.ascii_lookup[local.curr_1798.input] : b)]
        : local.iter_1797.tape)

    tape_ptr = (
      local.curr_1798.code == "<"
        ? local.iter_1797.tape_ptr == 0 ? length(local.iter_1797.tape) - 1 : local.iter_1797.tape_ptr - 1 :
      local.curr_1798.code == ">"
        ? local.iter_1797.tape_ptr == length(local.iter_1797.tape) - 1 ? 0 : local.iter_1797.tape_ptr + 1
        : local.iter_1797.tape_ptr)

    code_ptr = 1 + (
      local.curr_1798.code == "["
        ? local.iter_1797.tape[local.iter_1797.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1797.code_ptr)] : local.iter_1797.code_ptr :
      local.curr_1798.code == "]"
        ? local.iter_1797.tape[local.iter_1797.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1797.code_ptr)] : local.iter_1797.code_ptr
        : local.iter_1797.code_ptr)

    steps_taken = 1 + local.iter_1797.steps_taken
  }
}

locals {
  end_of_code_1799 = try(local.iter_1798.code_ptr >= length(var.code), true)

  curr_1799 = local.end_of_code_1799 ? null : {
    code = substr(var.code, local.iter_1798.code_ptr, 1)
    input = substr(var.code, local.iter_1798.code_ptr, 1) == "," ? substr(local.iter_1798.input, 0, 1) : null
  }

  iter_1799 = local.end_of_code_1799 ? local.iter_1798 : {
    input = (local.curr_1799.code == ","
      ? substr(local.iter_1798.input, 1, -1)
      : local.iter_1798.input)

    output = (local.curr_1799.code == "."
      ? "${local.iter_1798.output}${jsondecode(format("\"\\u%04x\"", local.iter_1798.tape[local.iter_1798.tape_ptr]))}"
      : local.iter_1798.output)
    
    tape = (
      local.curr_1799.code == "+"
        ? [for i, b in local.iter_1798.tape : (i == local.iter_1798.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1799.code == "-"
        ? [for i, b in local.iter_1798.tape : (i == local.iter_1798.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1799.code == ","
        ? [for i, b in local.iter_1798.tape : (i == local.iter_1798.tape_ptr ? local.ascii_lookup[local.curr_1799.input] : b)]
        : local.iter_1798.tape)

    tape_ptr = (
      local.curr_1799.code == "<"
        ? local.iter_1798.tape_ptr == 0 ? length(local.iter_1798.tape) - 1 : local.iter_1798.tape_ptr - 1 :
      local.curr_1799.code == ">"
        ? local.iter_1798.tape_ptr == length(local.iter_1798.tape) - 1 ? 0 : local.iter_1798.tape_ptr + 1
        : local.iter_1798.tape_ptr)

    code_ptr = 1 + (
      local.curr_1799.code == "["
        ? local.iter_1798.tape[local.iter_1798.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1798.code_ptr)] : local.iter_1798.code_ptr :
      local.curr_1799.code == "]"
        ? local.iter_1798.tape[local.iter_1798.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1798.code_ptr)] : local.iter_1798.code_ptr
        : local.iter_1798.code_ptr)

    steps_taken = 1 + local.iter_1798.steps_taken
  }
}

locals {
  end_of_code_1800 = try(local.iter_1799.code_ptr >= length(var.code), true)

  curr_1800 = local.end_of_code_1800 ? null : {
    code = substr(var.code, local.iter_1799.code_ptr, 1)
    input = substr(var.code, local.iter_1799.code_ptr, 1) == "," ? substr(local.iter_1799.input, 0, 1) : null
  }

  iter_1800 = local.end_of_code_1800 ? local.iter_1799 : {
    input = (local.curr_1800.code == ","
      ? substr(local.iter_1799.input, 1, -1)
      : local.iter_1799.input)

    output = (local.curr_1800.code == "."
      ? "${local.iter_1799.output}${jsondecode(format("\"\\u%04x\"", local.iter_1799.tape[local.iter_1799.tape_ptr]))}"
      : local.iter_1799.output)
    
    tape = (
      local.curr_1800.code == "+"
        ? [for i, b in local.iter_1799.tape : (i == local.iter_1799.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1800.code == "-"
        ? [for i, b in local.iter_1799.tape : (i == local.iter_1799.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1800.code == ","
        ? [for i, b in local.iter_1799.tape : (i == local.iter_1799.tape_ptr ? local.ascii_lookup[local.curr_1800.input] : b)]
        : local.iter_1799.tape)

    tape_ptr = (
      local.curr_1800.code == "<"
        ? local.iter_1799.tape_ptr == 0 ? length(local.iter_1799.tape) - 1 : local.iter_1799.tape_ptr - 1 :
      local.curr_1800.code == ">"
        ? local.iter_1799.tape_ptr == length(local.iter_1799.tape) - 1 ? 0 : local.iter_1799.tape_ptr + 1
        : local.iter_1799.tape_ptr)

    code_ptr = 1 + (
      local.curr_1800.code == "["
        ? local.iter_1799.tape[local.iter_1799.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1799.code_ptr)] : local.iter_1799.code_ptr :
      local.curr_1800.code == "]"
        ? local.iter_1799.tape[local.iter_1799.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1799.code_ptr)] : local.iter_1799.code_ptr
        : local.iter_1799.code_ptr)

    steps_taken = 1 + local.iter_1799.steps_taken
  }
}

locals {
  end_of_code_1801 = try(local.iter_1800.code_ptr >= length(var.code), true)

  curr_1801 = local.end_of_code_1801 ? null : {
    code = substr(var.code, local.iter_1800.code_ptr, 1)
    input = substr(var.code, local.iter_1800.code_ptr, 1) == "," ? substr(local.iter_1800.input, 0, 1) : null
  }

  iter_1801 = local.end_of_code_1801 ? local.iter_1800 : {
    input = (local.curr_1801.code == ","
      ? substr(local.iter_1800.input, 1, -1)
      : local.iter_1800.input)

    output = (local.curr_1801.code == "."
      ? "${local.iter_1800.output}${jsondecode(format("\"\\u%04x\"", local.iter_1800.tape[local.iter_1800.tape_ptr]))}"
      : local.iter_1800.output)
    
    tape = (
      local.curr_1801.code == "+"
        ? [for i, b in local.iter_1800.tape : (i == local.iter_1800.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1801.code == "-"
        ? [for i, b in local.iter_1800.tape : (i == local.iter_1800.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1801.code == ","
        ? [for i, b in local.iter_1800.tape : (i == local.iter_1800.tape_ptr ? local.ascii_lookup[local.curr_1801.input] : b)]
        : local.iter_1800.tape)

    tape_ptr = (
      local.curr_1801.code == "<"
        ? local.iter_1800.tape_ptr == 0 ? length(local.iter_1800.tape) - 1 : local.iter_1800.tape_ptr - 1 :
      local.curr_1801.code == ">"
        ? local.iter_1800.tape_ptr == length(local.iter_1800.tape) - 1 ? 0 : local.iter_1800.tape_ptr + 1
        : local.iter_1800.tape_ptr)

    code_ptr = 1 + (
      local.curr_1801.code == "["
        ? local.iter_1800.tape[local.iter_1800.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1800.code_ptr)] : local.iter_1800.code_ptr :
      local.curr_1801.code == "]"
        ? local.iter_1800.tape[local.iter_1800.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1800.code_ptr)] : local.iter_1800.code_ptr
        : local.iter_1800.code_ptr)

    steps_taken = 1 + local.iter_1800.steps_taken
  }
}

locals {
  end_of_code_1802 = try(local.iter_1801.code_ptr >= length(var.code), true)

  curr_1802 = local.end_of_code_1802 ? null : {
    code = substr(var.code, local.iter_1801.code_ptr, 1)
    input = substr(var.code, local.iter_1801.code_ptr, 1) == "," ? substr(local.iter_1801.input, 0, 1) : null
  }

  iter_1802 = local.end_of_code_1802 ? local.iter_1801 : {
    input = (local.curr_1802.code == ","
      ? substr(local.iter_1801.input, 1, -1)
      : local.iter_1801.input)

    output = (local.curr_1802.code == "."
      ? "${local.iter_1801.output}${jsondecode(format("\"\\u%04x\"", local.iter_1801.tape[local.iter_1801.tape_ptr]))}"
      : local.iter_1801.output)
    
    tape = (
      local.curr_1802.code == "+"
        ? [for i, b in local.iter_1801.tape : (i == local.iter_1801.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1802.code == "-"
        ? [for i, b in local.iter_1801.tape : (i == local.iter_1801.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1802.code == ","
        ? [for i, b in local.iter_1801.tape : (i == local.iter_1801.tape_ptr ? local.ascii_lookup[local.curr_1802.input] : b)]
        : local.iter_1801.tape)

    tape_ptr = (
      local.curr_1802.code == "<"
        ? local.iter_1801.tape_ptr == 0 ? length(local.iter_1801.tape) - 1 : local.iter_1801.tape_ptr - 1 :
      local.curr_1802.code == ">"
        ? local.iter_1801.tape_ptr == length(local.iter_1801.tape) - 1 ? 0 : local.iter_1801.tape_ptr + 1
        : local.iter_1801.tape_ptr)

    code_ptr = 1 + (
      local.curr_1802.code == "["
        ? local.iter_1801.tape[local.iter_1801.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1801.code_ptr)] : local.iter_1801.code_ptr :
      local.curr_1802.code == "]"
        ? local.iter_1801.tape[local.iter_1801.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1801.code_ptr)] : local.iter_1801.code_ptr
        : local.iter_1801.code_ptr)

    steps_taken = 1 + local.iter_1801.steps_taken
  }
}

locals {
  end_of_code_1803 = try(local.iter_1802.code_ptr >= length(var.code), true)

  curr_1803 = local.end_of_code_1803 ? null : {
    code = substr(var.code, local.iter_1802.code_ptr, 1)
    input = substr(var.code, local.iter_1802.code_ptr, 1) == "," ? substr(local.iter_1802.input, 0, 1) : null
  }

  iter_1803 = local.end_of_code_1803 ? local.iter_1802 : {
    input = (local.curr_1803.code == ","
      ? substr(local.iter_1802.input, 1, -1)
      : local.iter_1802.input)

    output = (local.curr_1803.code == "."
      ? "${local.iter_1802.output}${jsondecode(format("\"\\u%04x\"", local.iter_1802.tape[local.iter_1802.tape_ptr]))}"
      : local.iter_1802.output)
    
    tape = (
      local.curr_1803.code == "+"
        ? [for i, b in local.iter_1802.tape : (i == local.iter_1802.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1803.code == "-"
        ? [for i, b in local.iter_1802.tape : (i == local.iter_1802.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1803.code == ","
        ? [for i, b in local.iter_1802.tape : (i == local.iter_1802.tape_ptr ? local.ascii_lookup[local.curr_1803.input] : b)]
        : local.iter_1802.tape)

    tape_ptr = (
      local.curr_1803.code == "<"
        ? local.iter_1802.tape_ptr == 0 ? length(local.iter_1802.tape) - 1 : local.iter_1802.tape_ptr - 1 :
      local.curr_1803.code == ">"
        ? local.iter_1802.tape_ptr == length(local.iter_1802.tape) - 1 ? 0 : local.iter_1802.tape_ptr + 1
        : local.iter_1802.tape_ptr)

    code_ptr = 1 + (
      local.curr_1803.code == "["
        ? local.iter_1802.tape[local.iter_1802.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1802.code_ptr)] : local.iter_1802.code_ptr :
      local.curr_1803.code == "]"
        ? local.iter_1802.tape[local.iter_1802.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1802.code_ptr)] : local.iter_1802.code_ptr
        : local.iter_1802.code_ptr)

    steps_taken = 1 + local.iter_1802.steps_taken
  }
}

locals {
  end_of_code_1804 = try(local.iter_1803.code_ptr >= length(var.code), true)

  curr_1804 = local.end_of_code_1804 ? null : {
    code = substr(var.code, local.iter_1803.code_ptr, 1)
    input = substr(var.code, local.iter_1803.code_ptr, 1) == "," ? substr(local.iter_1803.input, 0, 1) : null
  }

  iter_1804 = local.end_of_code_1804 ? local.iter_1803 : {
    input = (local.curr_1804.code == ","
      ? substr(local.iter_1803.input, 1, -1)
      : local.iter_1803.input)

    output = (local.curr_1804.code == "."
      ? "${local.iter_1803.output}${jsondecode(format("\"\\u%04x\"", local.iter_1803.tape[local.iter_1803.tape_ptr]))}"
      : local.iter_1803.output)
    
    tape = (
      local.curr_1804.code == "+"
        ? [for i, b in local.iter_1803.tape : (i == local.iter_1803.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1804.code == "-"
        ? [for i, b in local.iter_1803.tape : (i == local.iter_1803.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1804.code == ","
        ? [for i, b in local.iter_1803.tape : (i == local.iter_1803.tape_ptr ? local.ascii_lookup[local.curr_1804.input] : b)]
        : local.iter_1803.tape)

    tape_ptr = (
      local.curr_1804.code == "<"
        ? local.iter_1803.tape_ptr == 0 ? length(local.iter_1803.tape) - 1 : local.iter_1803.tape_ptr - 1 :
      local.curr_1804.code == ">"
        ? local.iter_1803.tape_ptr == length(local.iter_1803.tape) - 1 ? 0 : local.iter_1803.tape_ptr + 1
        : local.iter_1803.tape_ptr)

    code_ptr = 1 + (
      local.curr_1804.code == "["
        ? local.iter_1803.tape[local.iter_1803.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1803.code_ptr)] : local.iter_1803.code_ptr :
      local.curr_1804.code == "]"
        ? local.iter_1803.tape[local.iter_1803.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1803.code_ptr)] : local.iter_1803.code_ptr
        : local.iter_1803.code_ptr)

    steps_taken = 1 + local.iter_1803.steps_taken
  }
}

locals {
  end_of_code_1805 = try(local.iter_1804.code_ptr >= length(var.code), true)

  curr_1805 = local.end_of_code_1805 ? null : {
    code = substr(var.code, local.iter_1804.code_ptr, 1)
    input = substr(var.code, local.iter_1804.code_ptr, 1) == "," ? substr(local.iter_1804.input, 0, 1) : null
  }

  iter_1805 = local.end_of_code_1805 ? local.iter_1804 : {
    input = (local.curr_1805.code == ","
      ? substr(local.iter_1804.input, 1, -1)
      : local.iter_1804.input)

    output = (local.curr_1805.code == "."
      ? "${local.iter_1804.output}${jsondecode(format("\"\\u%04x\"", local.iter_1804.tape[local.iter_1804.tape_ptr]))}"
      : local.iter_1804.output)
    
    tape = (
      local.curr_1805.code == "+"
        ? [for i, b in local.iter_1804.tape : (i == local.iter_1804.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1805.code == "-"
        ? [for i, b in local.iter_1804.tape : (i == local.iter_1804.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1805.code == ","
        ? [for i, b in local.iter_1804.tape : (i == local.iter_1804.tape_ptr ? local.ascii_lookup[local.curr_1805.input] : b)]
        : local.iter_1804.tape)

    tape_ptr = (
      local.curr_1805.code == "<"
        ? local.iter_1804.tape_ptr == 0 ? length(local.iter_1804.tape) - 1 : local.iter_1804.tape_ptr - 1 :
      local.curr_1805.code == ">"
        ? local.iter_1804.tape_ptr == length(local.iter_1804.tape) - 1 ? 0 : local.iter_1804.tape_ptr + 1
        : local.iter_1804.tape_ptr)

    code_ptr = 1 + (
      local.curr_1805.code == "["
        ? local.iter_1804.tape[local.iter_1804.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1804.code_ptr)] : local.iter_1804.code_ptr :
      local.curr_1805.code == "]"
        ? local.iter_1804.tape[local.iter_1804.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1804.code_ptr)] : local.iter_1804.code_ptr
        : local.iter_1804.code_ptr)

    steps_taken = 1 + local.iter_1804.steps_taken
  }
}

locals {
  end_of_code_1806 = try(local.iter_1805.code_ptr >= length(var.code), true)

  curr_1806 = local.end_of_code_1806 ? null : {
    code = substr(var.code, local.iter_1805.code_ptr, 1)
    input = substr(var.code, local.iter_1805.code_ptr, 1) == "," ? substr(local.iter_1805.input, 0, 1) : null
  }

  iter_1806 = local.end_of_code_1806 ? local.iter_1805 : {
    input = (local.curr_1806.code == ","
      ? substr(local.iter_1805.input, 1, -1)
      : local.iter_1805.input)

    output = (local.curr_1806.code == "."
      ? "${local.iter_1805.output}${jsondecode(format("\"\\u%04x\"", local.iter_1805.tape[local.iter_1805.tape_ptr]))}"
      : local.iter_1805.output)
    
    tape = (
      local.curr_1806.code == "+"
        ? [for i, b in local.iter_1805.tape : (i == local.iter_1805.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1806.code == "-"
        ? [for i, b in local.iter_1805.tape : (i == local.iter_1805.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1806.code == ","
        ? [for i, b in local.iter_1805.tape : (i == local.iter_1805.tape_ptr ? local.ascii_lookup[local.curr_1806.input] : b)]
        : local.iter_1805.tape)

    tape_ptr = (
      local.curr_1806.code == "<"
        ? local.iter_1805.tape_ptr == 0 ? length(local.iter_1805.tape) - 1 : local.iter_1805.tape_ptr - 1 :
      local.curr_1806.code == ">"
        ? local.iter_1805.tape_ptr == length(local.iter_1805.tape) - 1 ? 0 : local.iter_1805.tape_ptr + 1
        : local.iter_1805.tape_ptr)

    code_ptr = 1 + (
      local.curr_1806.code == "["
        ? local.iter_1805.tape[local.iter_1805.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1805.code_ptr)] : local.iter_1805.code_ptr :
      local.curr_1806.code == "]"
        ? local.iter_1805.tape[local.iter_1805.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1805.code_ptr)] : local.iter_1805.code_ptr
        : local.iter_1805.code_ptr)

    steps_taken = 1 + local.iter_1805.steps_taken
  }
}

locals {
  end_of_code_1807 = try(local.iter_1806.code_ptr >= length(var.code), true)

  curr_1807 = local.end_of_code_1807 ? null : {
    code = substr(var.code, local.iter_1806.code_ptr, 1)
    input = substr(var.code, local.iter_1806.code_ptr, 1) == "," ? substr(local.iter_1806.input, 0, 1) : null
  }

  iter_1807 = local.end_of_code_1807 ? local.iter_1806 : {
    input = (local.curr_1807.code == ","
      ? substr(local.iter_1806.input, 1, -1)
      : local.iter_1806.input)

    output = (local.curr_1807.code == "."
      ? "${local.iter_1806.output}${jsondecode(format("\"\\u%04x\"", local.iter_1806.tape[local.iter_1806.tape_ptr]))}"
      : local.iter_1806.output)
    
    tape = (
      local.curr_1807.code == "+"
        ? [for i, b in local.iter_1806.tape : (i == local.iter_1806.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1807.code == "-"
        ? [for i, b in local.iter_1806.tape : (i == local.iter_1806.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1807.code == ","
        ? [for i, b in local.iter_1806.tape : (i == local.iter_1806.tape_ptr ? local.ascii_lookup[local.curr_1807.input] : b)]
        : local.iter_1806.tape)

    tape_ptr = (
      local.curr_1807.code == "<"
        ? local.iter_1806.tape_ptr == 0 ? length(local.iter_1806.tape) - 1 : local.iter_1806.tape_ptr - 1 :
      local.curr_1807.code == ">"
        ? local.iter_1806.tape_ptr == length(local.iter_1806.tape) - 1 ? 0 : local.iter_1806.tape_ptr + 1
        : local.iter_1806.tape_ptr)

    code_ptr = 1 + (
      local.curr_1807.code == "["
        ? local.iter_1806.tape[local.iter_1806.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1806.code_ptr)] : local.iter_1806.code_ptr :
      local.curr_1807.code == "]"
        ? local.iter_1806.tape[local.iter_1806.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1806.code_ptr)] : local.iter_1806.code_ptr
        : local.iter_1806.code_ptr)

    steps_taken = 1 + local.iter_1806.steps_taken
  }
}

locals {
  end_of_code_1808 = try(local.iter_1807.code_ptr >= length(var.code), true)

  curr_1808 = local.end_of_code_1808 ? null : {
    code = substr(var.code, local.iter_1807.code_ptr, 1)
    input = substr(var.code, local.iter_1807.code_ptr, 1) == "," ? substr(local.iter_1807.input, 0, 1) : null
  }

  iter_1808 = local.end_of_code_1808 ? local.iter_1807 : {
    input = (local.curr_1808.code == ","
      ? substr(local.iter_1807.input, 1, -1)
      : local.iter_1807.input)

    output = (local.curr_1808.code == "."
      ? "${local.iter_1807.output}${jsondecode(format("\"\\u%04x\"", local.iter_1807.tape[local.iter_1807.tape_ptr]))}"
      : local.iter_1807.output)
    
    tape = (
      local.curr_1808.code == "+"
        ? [for i, b in local.iter_1807.tape : (i == local.iter_1807.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1808.code == "-"
        ? [for i, b in local.iter_1807.tape : (i == local.iter_1807.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1808.code == ","
        ? [for i, b in local.iter_1807.tape : (i == local.iter_1807.tape_ptr ? local.ascii_lookup[local.curr_1808.input] : b)]
        : local.iter_1807.tape)

    tape_ptr = (
      local.curr_1808.code == "<"
        ? local.iter_1807.tape_ptr == 0 ? length(local.iter_1807.tape) - 1 : local.iter_1807.tape_ptr - 1 :
      local.curr_1808.code == ">"
        ? local.iter_1807.tape_ptr == length(local.iter_1807.tape) - 1 ? 0 : local.iter_1807.tape_ptr + 1
        : local.iter_1807.tape_ptr)

    code_ptr = 1 + (
      local.curr_1808.code == "["
        ? local.iter_1807.tape[local.iter_1807.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1807.code_ptr)] : local.iter_1807.code_ptr :
      local.curr_1808.code == "]"
        ? local.iter_1807.tape[local.iter_1807.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1807.code_ptr)] : local.iter_1807.code_ptr
        : local.iter_1807.code_ptr)

    steps_taken = 1 + local.iter_1807.steps_taken
  }
}

locals {
  end_of_code_1809 = try(local.iter_1808.code_ptr >= length(var.code), true)

  curr_1809 = local.end_of_code_1809 ? null : {
    code = substr(var.code, local.iter_1808.code_ptr, 1)
    input = substr(var.code, local.iter_1808.code_ptr, 1) == "," ? substr(local.iter_1808.input, 0, 1) : null
  }

  iter_1809 = local.end_of_code_1809 ? local.iter_1808 : {
    input = (local.curr_1809.code == ","
      ? substr(local.iter_1808.input, 1, -1)
      : local.iter_1808.input)

    output = (local.curr_1809.code == "."
      ? "${local.iter_1808.output}${jsondecode(format("\"\\u%04x\"", local.iter_1808.tape[local.iter_1808.tape_ptr]))}"
      : local.iter_1808.output)
    
    tape = (
      local.curr_1809.code == "+"
        ? [for i, b in local.iter_1808.tape : (i == local.iter_1808.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1809.code == "-"
        ? [for i, b in local.iter_1808.tape : (i == local.iter_1808.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1809.code == ","
        ? [for i, b in local.iter_1808.tape : (i == local.iter_1808.tape_ptr ? local.ascii_lookup[local.curr_1809.input] : b)]
        : local.iter_1808.tape)

    tape_ptr = (
      local.curr_1809.code == "<"
        ? local.iter_1808.tape_ptr == 0 ? length(local.iter_1808.tape) - 1 : local.iter_1808.tape_ptr - 1 :
      local.curr_1809.code == ">"
        ? local.iter_1808.tape_ptr == length(local.iter_1808.tape) - 1 ? 0 : local.iter_1808.tape_ptr + 1
        : local.iter_1808.tape_ptr)

    code_ptr = 1 + (
      local.curr_1809.code == "["
        ? local.iter_1808.tape[local.iter_1808.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1808.code_ptr)] : local.iter_1808.code_ptr :
      local.curr_1809.code == "]"
        ? local.iter_1808.tape[local.iter_1808.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1808.code_ptr)] : local.iter_1808.code_ptr
        : local.iter_1808.code_ptr)

    steps_taken = 1 + local.iter_1808.steps_taken
  }
}

locals {
  end_of_code_1810 = try(local.iter_1809.code_ptr >= length(var.code), true)

  curr_1810 = local.end_of_code_1810 ? null : {
    code = substr(var.code, local.iter_1809.code_ptr, 1)
    input = substr(var.code, local.iter_1809.code_ptr, 1) == "," ? substr(local.iter_1809.input, 0, 1) : null
  }

  iter_1810 = local.end_of_code_1810 ? local.iter_1809 : {
    input = (local.curr_1810.code == ","
      ? substr(local.iter_1809.input, 1, -1)
      : local.iter_1809.input)

    output = (local.curr_1810.code == "."
      ? "${local.iter_1809.output}${jsondecode(format("\"\\u%04x\"", local.iter_1809.tape[local.iter_1809.tape_ptr]))}"
      : local.iter_1809.output)
    
    tape = (
      local.curr_1810.code == "+"
        ? [for i, b in local.iter_1809.tape : (i == local.iter_1809.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1810.code == "-"
        ? [for i, b in local.iter_1809.tape : (i == local.iter_1809.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1810.code == ","
        ? [for i, b in local.iter_1809.tape : (i == local.iter_1809.tape_ptr ? local.ascii_lookup[local.curr_1810.input] : b)]
        : local.iter_1809.tape)

    tape_ptr = (
      local.curr_1810.code == "<"
        ? local.iter_1809.tape_ptr == 0 ? length(local.iter_1809.tape) - 1 : local.iter_1809.tape_ptr - 1 :
      local.curr_1810.code == ">"
        ? local.iter_1809.tape_ptr == length(local.iter_1809.tape) - 1 ? 0 : local.iter_1809.tape_ptr + 1
        : local.iter_1809.tape_ptr)

    code_ptr = 1 + (
      local.curr_1810.code == "["
        ? local.iter_1809.tape[local.iter_1809.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1809.code_ptr)] : local.iter_1809.code_ptr :
      local.curr_1810.code == "]"
        ? local.iter_1809.tape[local.iter_1809.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1809.code_ptr)] : local.iter_1809.code_ptr
        : local.iter_1809.code_ptr)

    steps_taken = 1 + local.iter_1809.steps_taken
  }
}

locals {
  end_of_code_1811 = try(local.iter_1810.code_ptr >= length(var.code), true)

  curr_1811 = local.end_of_code_1811 ? null : {
    code = substr(var.code, local.iter_1810.code_ptr, 1)
    input = substr(var.code, local.iter_1810.code_ptr, 1) == "," ? substr(local.iter_1810.input, 0, 1) : null
  }

  iter_1811 = local.end_of_code_1811 ? local.iter_1810 : {
    input = (local.curr_1811.code == ","
      ? substr(local.iter_1810.input, 1, -1)
      : local.iter_1810.input)

    output = (local.curr_1811.code == "."
      ? "${local.iter_1810.output}${jsondecode(format("\"\\u%04x\"", local.iter_1810.tape[local.iter_1810.tape_ptr]))}"
      : local.iter_1810.output)
    
    tape = (
      local.curr_1811.code == "+"
        ? [for i, b in local.iter_1810.tape : (i == local.iter_1810.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1811.code == "-"
        ? [for i, b in local.iter_1810.tape : (i == local.iter_1810.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1811.code == ","
        ? [for i, b in local.iter_1810.tape : (i == local.iter_1810.tape_ptr ? local.ascii_lookup[local.curr_1811.input] : b)]
        : local.iter_1810.tape)

    tape_ptr = (
      local.curr_1811.code == "<"
        ? local.iter_1810.tape_ptr == 0 ? length(local.iter_1810.tape) - 1 : local.iter_1810.tape_ptr - 1 :
      local.curr_1811.code == ">"
        ? local.iter_1810.tape_ptr == length(local.iter_1810.tape) - 1 ? 0 : local.iter_1810.tape_ptr + 1
        : local.iter_1810.tape_ptr)

    code_ptr = 1 + (
      local.curr_1811.code == "["
        ? local.iter_1810.tape[local.iter_1810.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1810.code_ptr)] : local.iter_1810.code_ptr :
      local.curr_1811.code == "]"
        ? local.iter_1810.tape[local.iter_1810.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1810.code_ptr)] : local.iter_1810.code_ptr
        : local.iter_1810.code_ptr)

    steps_taken = 1 + local.iter_1810.steps_taken
  }
}

locals {
  end_of_code_1812 = try(local.iter_1811.code_ptr >= length(var.code), true)

  curr_1812 = local.end_of_code_1812 ? null : {
    code = substr(var.code, local.iter_1811.code_ptr, 1)
    input = substr(var.code, local.iter_1811.code_ptr, 1) == "," ? substr(local.iter_1811.input, 0, 1) : null
  }

  iter_1812 = local.end_of_code_1812 ? local.iter_1811 : {
    input = (local.curr_1812.code == ","
      ? substr(local.iter_1811.input, 1, -1)
      : local.iter_1811.input)

    output = (local.curr_1812.code == "."
      ? "${local.iter_1811.output}${jsondecode(format("\"\\u%04x\"", local.iter_1811.tape[local.iter_1811.tape_ptr]))}"
      : local.iter_1811.output)
    
    tape = (
      local.curr_1812.code == "+"
        ? [for i, b in local.iter_1811.tape : (i == local.iter_1811.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1812.code == "-"
        ? [for i, b in local.iter_1811.tape : (i == local.iter_1811.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1812.code == ","
        ? [for i, b in local.iter_1811.tape : (i == local.iter_1811.tape_ptr ? local.ascii_lookup[local.curr_1812.input] : b)]
        : local.iter_1811.tape)

    tape_ptr = (
      local.curr_1812.code == "<"
        ? local.iter_1811.tape_ptr == 0 ? length(local.iter_1811.tape) - 1 : local.iter_1811.tape_ptr - 1 :
      local.curr_1812.code == ">"
        ? local.iter_1811.tape_ptr == length(local.iter_1811.tape) - 1 ? 0 : local.iter_1811.tape_ptr + 1
        : local.iter_1811.tape_ptr)

    code_ptr = 1 + (
      local.curr_1812.code == "["
        ? local.iter_1811.tape[local.iter_1811.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1811.code_ptr)] : local.iter_1811.code_ptr :
      local.curr_1812.code == "]"
        ? local.iter_1811.tape[local.iter_1811.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1811.code_ptr)] : local.iter_1811.code_ptr
        : local.iter_1811.code_ptr)

    steps_taken = 1 + local.iter_1811.steps_taken
  }
}

locals {
  end_of_code_1813 = try(local.iter_1812.code_ptr >= length(var.code), true)

  curr_1813 = local.end_of_code_1813 ? null : {
    code = substr(var.code, local.iter_1812.code_ptr, 1)
    input = substr(var.code, local.iter_1812.code_ptr, 1) == "," ? substr(local.iter_1812.input, 0, 1) : null
  }

  iter_1813 = local.end_of_code_1813 ? local.iter_1812 : {
    input = (local.curr_1813.code == ","
      ? substr(local.iter_1812.input, 1, -1)
      : local.iter_1812.input)

    output = (local.curr_1813.code == "."
      ? "${local.iter_1812.output}${jsondecode(format("\"\\u%04x\"", local.iter_1812.tape[local.iter_1812.tape_ptr]))}"
      : local.iter_1812.output)
    
    tape = (
      local.curr_1813.code == "+"
        ? [for i, b in local.iter_1812.tape : (i == local.iter_1812.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1813.code == "-"
        ? [for i, b in local.iter_1812.tape : (i == local.iter_1812.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1813.code == ","
        ? [for i, b in local.iter_1812.tape : (i == local.iter_1812.tape_ptr ? local.ascii_lookup[local.curr_1813.input] : b)]
        : local.iter_1812.tape)

    tape_ptr = (
      local.curr_1813.code == "<"
        ? local.iter_1812.tape_ptr == 0 ? length(local.iter_1812.tape) - 1 : local.iter_1812.tape_ptr - 1 :
      local.curr_1813.code == ">"
        ? local.iter_1812.tape_ptr == length(local.iter_1812.tape) - 1 ? 0 : local.iter_1812.tape_ptr + 1
        : local.iter_1812.tape_ptr)

    code_ptr = 1 + (
      local.curr_1813.code == "["
        ? local.iter_1812.tape[local.iter_1812.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1812.code_ptr)] : local.iter_1812.code_ptr :
      local.curr_1813.code == "]"
        ? local.iter_1812.tape[local.iter_1812.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1812.code_ptr)] : local.iter_1812.code_ptr
        : local.iter_1812.code_ptr)

    steps_taken = 1 + local.iter_1812.steps_taken
  }
}

locals {
  end_of_code_1814 = try(local.iter_1813.code_ptr >= length(var.code), true)

  curr_1814 = local.end_of_code_1814 ? null : {
    code = substr(var.code, local.iter_1813.code_ptr, 1)
    input = substr(var.code, local.iter_1813.code_ptr, 1) == "," ? substr(local.iter_1813.input, 0, 1) : null
  }

  iter_1814 = local.end_of_code_1814 ? local.iter_1813 : {
    input = (local.curr_1814.code == ","
      ? substr(local.iter_1813.input, 1, -1)
      : local.iter_1813.input)

    output = (local.curr_1814.code == "."
      ? "${local.iter_1813.output}${jsondecode(format("\"\\u%04x\"", local.iter_1813.tape[local.iter_1813.tape_ptr]))}"
      : local.iter_1813.output)
    
    tape = (
      local.curr_1814.code == "+"
        ? [for i, b in local.iter_1813.tape : (i == local.iter_1813.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1814.code == "-"
        ? [for i, b in local.iter_1813.tape : (i == local.iter_1813.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1814.code == ","
        ? [for i, b in local.iter_1813.tape : (i == local.iter_1813.tape_ptr ? local.ascii_lookup[local.curr_1814.input] : b)]
        : local.iter_1813.tape)

    tape_ptr = (
      local.curr_1814.code == "<"
        ? local.iter_1813.tape_ptr == 0 ? length(local.iter_1813.tape) - 1 : local.iter_1813.tape_ptr - 1 :
      local.curr_1814.code == ">"
        ? local.iter_1813.tape_ptr == length(local.iter_1813.tape) - 1 ? 0 : local.iter_1813.tape_ptr + 1
        : local.iter_1813.tape_ptr)

    code_ptr = 1 + (
      local.curr_1814.code == "["
        ? local.iter_1813.tape[local.iter_1813.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1813.code_ptr)] : local.iter_1813.code_ptr :
      local.curr_1814.code == "]"
        ? local.iter_1813.tape[local.iter_1813.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1813.code_ptr)] : local.iter_1813.code_ptr
        : local.iter_1813.code_ptr)

    steps_taken = 1 + local.iter_1813.steps_taken
  }
}

locals {
  end_of_code_1815 = try(local.iter_1814.code_ptr >= length(var.code), true)

  curr_1815 = local.end_of_code_1815 ? null : {
    code = substr(var.code, local.iter_1814.code_ptr, 1)
    input = substr(var.code, local.iter_1814.code_ptr, 1) == "," ? substr(local.iter_1814.input, 0, 1) : null
  }

  iter_1815 = local.end_of_code_1815 ? local.iter_1814 : {
    input = (local.curr_1815.code == ","
      ? substr(local.iter_1814.input, 1, -1)
      : local.iter_1814.input)

    output = (local.curr_1815.code == "."
      ? "${local.iter_1814.output}${jsondecode(format("\"\\u%04x\"", local.iter_1814.tape[local.iter_1814.tape_ptr]))}"
      : local.iter_1814.output)
    
    tape = (
      local.curr_1815.code == "+"
        ? [for i, b in local.iter_1814.tape : (i == local.iter_1814.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1815.code == "-"
        ? [for i, b in local.iter_1814.tape : (i == local.iter_1814.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1815.code == ","
        ? [for i, b in local.iter_1814.tape : (i == local.iter_1814.tape_ptr ? local.ascii_lookup[local.curr_1815.input] : b)]
        : local.iter_1814.tape)

    tape_ptr = (
      local.curr_1815.code == "<"
        ? local.iter_1814.tape_ptr == 0 ? length(local.iter_1814.tape) - 1 : local.iter_1814.tape_ptr - 1 :
      local.curr_1815.code == ">"
        ? local.iter_1814.tape_ptr == length(local.iter_1814.tape) - 1 ? 0 : local.iter_1814.tape_ptr + 1
        : local.iter_1814.tape_ptr)

    code_ptr = 1 + (
      local.curr_1815.code == "["
        ? local.iter_1814.tape[local.iter_1814.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1814.code_ptr)] : local.iter_1814.code_ptr :
      local.curr_1815.code == "]"
        ? local.iter_1814.tape[local.iter_1814.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1814.code_ptr)] : local.iter_1814.code_ptr
        : local.iter_1814.code_ptr)

    steps_taken = 1 + local.iter_1814.steps_taken
  }
}

locals {
  end_of_code_1816 = try(local.iter_1815.code_ptr >= length(var.code), true)

  curr_1816 = local.end_of_code_1816 ? null : {
    code = substr(var.code, local.iter_1815.code_ptr, 1)
    input = substr(var.code, local.iter_1815.code_ptr, 1) == "," ? substr(local.iter_1815.input, 0, 1) : null
  }

  iter_1816 = local.end_of_code_1816 ? local.iter_1815 : {
    input = (local.curr_1816.code == ","
      ? substr(local.iter_1815.input, 1, -1)
      : local.iter_1815.input)

    output = (local.curr_1816.code == "."
      ? "${local.iter_1815.output}${jsondecode(format("\"\\u%04x\"", local.iter_1815.tape[local.iter_1815.tape_ptr]))}"
      : local.iter_1815.output)
    
    tape = (
      local.curr_1816.code == "+"
        ? [for i, b in local.iter_1815.tape : (i == local.iter_1815.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1816.code == "-"
        ? [for i, b in local.iter_1815.tape : (i == local.iter_1815.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1816.code == ","
        ? [for i, b in local.iter_1815.tape : (i == local.iter_1815.tape_ptr ? local.ascii_lookup[local.curr_1816.input] : b)]
        : local.iter_1815.tape)

    tape_ptr = (
      local.curr_1816.code == "<"
        ? local.iter_1815.tape_ptr == 0 ? length(local.iter_1815.tape) - 1 : local.iter_1815.tape_ptr - 1 :
      local.curr_1816.code == ">"
        ? local.iter_1815.tape_ptr == length(local.iter_1815.tape) - 1 ? 0 : local.iter_1815.tape_ptr + 1
        : local.iter_1815.tape_ptr)

    code_ptr = 1 + (
      local.curr_1816.code == "["
        ? local.iter_1815.tape[local.iter_1815.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1815.code_ptr)] : local.iter_1815.code_ptr :
      local.curr_1816.code == "]"
        ? local.iter_1815.tape[local.iter_1815.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1815.code_ptr)] : local.iter_1815.code_ptr
        : local.iter_1815.code_ptr)

    steps_taken = 1 + local.iter_1815.steps_taken
  }
}

locals {
  end_of_code_1817 = try(local.iter_1816.code_ptr >= length(var.code), true)

  curr_1817 = local.end_of_code_1817 ? null : {
    code = substr(var.code, local.iter_1816.code_ptr, 1)
    input = substr(var.code, local.iter_1816.code_ptr, 1) == "," ? substr(local.iter_1816.input, 0, 1) : null
  }

  iter_1817 = local.end_of_code_1817 ? local.iter_1816 : {
    input = (local.curr_1817.code == ","
      ? substr(local.iter_1816.input, 1, -1)
      : local.iter_1816.input)

    output = (local.curr_1817.code == "."
      ? "${local.iter_1816.output}${jsondecode(format("\"\\u%04x\"", local.iter_1816.tape[local.iter_1816.tape_ptr]))}"
      : local.iter_1816.output)
    
    tape = (
      local.curr_1817.code == "+"
        ? [for i, b in local.iter_1816.tape : (i == local.iter_1816.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1817.code == "-"
        ? [for i, b in local.iter_1816.tape : (i == local.iter_1816.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1817.code == ","
        ? [for i, b in local.iter_1816.tape : (i == local.iter_1816.tape_ptr ? local.ascii_lookup[local.curr_1817.input] : b)]
        : local.iter_1816.tape)

    tape_ptr = (
      local.curr_1817.code == "<"
        ? local.iter_1816.tape_ptr == 0 ? length(local.iter_1816.tape) - 1 : local.iter_1816.tape_ptr - 1 :
      local.curr_1817.code == ">"
        ? local.iter_1816.tape_ptr == length(local.iter_1816.tape) - 1 ? 0 : local.iter_1816.tape_ptr + 1
        : local.iter_1816.tape_ptr)

    code_ptr = 1 + (
      local.curr_1817.code == "["
        ? local.iter_1816.tape[local.iter_1816.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1816.code_ptr)] : local.iter_1816.code_ptr :
      local.curr_1817.code == "]"
        ? local.iter_1816.tape[local.iter_1816.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1816.code_ptr)] : local.iter_1816.code_ptr
        : local.iter_1816.code_ptr)

    steps_taken = 1 + local.iter_1816.steps_taken
  }
}

locals {
  end_of_code_1818 = try(local.iter_1817.code_ptr >= length(var.code), true)

  curr_1818 = local.end_of_code_1818 ? null : {
    code = substr(var.code, local.iter_1817.code_ptr, 1)
    input = substr(var.code, local.iter_1817.code_ptr, 1) == "," ? substr(local.iter_1817.input, 0, 1) : null
  }

  iter_1818 = local.end_of_code_1818 ? local.iter_1817 : {
    input = (local.curr_1818.code == ","
      ? substr(local.iter_1817.input, 1, -1)
      : local.iter_1817.input)

    output = (local.curr_1818.code == "."
      ? "${local.iter_1817.output}${jsondecode(format("\"\\u%04x\"", local.iter_1817.tape[local.iter_1817.tape_ptr]))}"
      : local.iter_1817.output)
    
    tape = (
      local.curr_1818.code == "+"
        ? [for i, b in local.iter_1817.tape : (i == local.iter_1817.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1818.code == "-"
        ? [for i, b in local.iter_1817.tape : (i == local.iter_1817.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1818.code == ","
        ? [for i, b in local.iter_1817.tape : (i == local.iter_1817.tape_ptr ? local.ascii_lookup[local.curr_1818.input] : b)]
        : local.iter_1817.tape)

    tape_ptr = (
      local.curr_1818.code == "<"
        ? local.iter_1817.tape_ptr == 0 ? length(local.iter_1817.tape) - 1 : local.iter_1817.tape_ptr - 1 :
      local.curr_1818.code == ">"
        ? local.iter_1817.tape_ptr == length(local.iter_1817.tape) - 1 ? 0 : local.iter_1817.tape_ptr + 1
        : local.iter_1817.tape_ptr)

    code_ptr = 1 + (
      local.curr_1818.code == "["
        ? local.iter_1817.tape[local.iter_1817.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1817.code_ptr)] : local.iter_1817.code_ptr :
      local.curr_1818.code == "]"
        ? local.iter_1817.tape[local.iter_1817.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1817.code_ptr)] : local.iter_1817.code_ptr
        : local.iter_1817.code_ptr)

    steps_taken = 1 + local.iter_1817.steps_taken
  }
}

locals {
  end_of_code_1819 = try(local.iter_1818.code_ptr >= length(var.code), true)

  curr_1819 = local.end_of_code_1819 ? null : {
    code = substr(var.code, local.iter_1818.code_ptr, 1)
    input = substr(var.code, local.iter_1818.code_ptr, 1) == "," ? substr(local.iter_1818.input, 0, 1) : null
  }

  iter_1819 = local.end_of_code_1819 ? local.iter_1818 : {
    input = (local.curr_1819.code == ","
      ? substr(local.iter_1818.input, 1, -1)
      : local.iter_1818.input)

    output = (local.curr_1819.code == "."
      ? "${local.iter_1818.output}${jsondecode(format("\"\\u%04x\"", local.iter_1818.tape[local.iter_1818.tape_ptr]))}"
      : local.iter_1818.output)
    
    tape = (
      local.curr_1819.code == "+"
        ? [for i, b in local.iter_1818.tape : (i == local.iter_1818.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1819.code == "-"
        ? [for i, b in local.iter_1818.tape : (i == local.iter_1818.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1819.code == ","
        ? [for i, b in local.iter_1818.tape : (i == local.iter_1818.tape_ptr ? local.ascii_lookup[local.curr_1819.input] : b)]
        : local.iter_1818.tape)

    tape_ptr = (
      local.curr_1819.code == "<"
        ? local.iter_1818.tape_ptr == 0 ? length(local.iter_1818.tape) - 1 : local.iter_1818.tape_ptr - 1 :
      local.curr_1819.code == ">"
        ? local.iter_1818.tape_ptr == length(local.iter_1818.tape) - 1 ? 0 : local.iter_1818.tape_ptr + 1
        : local.iter_1818.tape_ptr)

    code_ptr = 1 + (
      local.curr_1819.code == "["
        ? local.iter_1818.tape[local.iter_1818.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1818.code_ptr)] : local.iter_1818.code_ptr :
      local.curr_1819.code == "]"
        ? local.iter_1818.tape[local.iter_1818.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1818.code_ptr)] : local.iter_1818.code_ptr
        : local.iter_1818.code_ptr)

    steps_taken = 1 + local.iter_1818.steps_taken
  }
}

locals {
  end_of_code_1820 = try(local.iter_1819.code_ptr >= length(var.code), true)

  curr_1820 = local.end_of_code_1820 ? null : {
    code = substr(var.code, local.iter_1819.code_ptr, 1)
    input = substr(var.code, local.iter_1819.code_ptr, 1) == "," ? substr(local.iter_1819.input, 0, 1) : null
  }

  iter_1820 = local.end_of_code_1820 ? local.iter_1819 : {
    input = (local.curr_1820.code == ","
      ? substr(local.iter_1819.input, 1, -1)
      : local.iter_1819.input)

    output = (local.curr_1820.code == "."
      ? "${local.iter_1819.output}${jsondecode(format("\"\\u%04x\"", local.iter_1819.tape[local.iter_1819.tape_ptr]))}"
      : local.iter_1819.output)
    
    tape = (
      local.curr_1820.code == "+"
        ? [for i, b in local.iter_1819.tape : (i == local.iter_1819.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1820.code == "-"
        ? [for i, b in local.iter_1819.tape : (i == local.iter_1819.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1820.code == ","
        ? [for i, b in local.iter_1819.tape : (i == local.iter_1819.tape_ptr ? local.ascii_lookup[local.curr_1820.input] : b)]
        : local.iter_1819.tape)

    tape_ptr = (
      local.curr_1820.code == "<"
        ? local.iter_1819.tape_ptr == 0 ? length(local.iter_1819.tape) - 1 : local.iter_1819.tape_ptr - 1 :
      local.curr_1820.code == ">"
        ? local.iter_1819.tape_ptr == length(local.iter_1819.tape) - 1 ? 0 : local.iter_1819.tape_ptr + 1
        : local.iter_1819.tape_ptr)

    code_ptr = 1 + (
      local.curr_1820.code == "["
        ? local.iter_1819.tape[local.iter_1819.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1819.code_ptr)] : local.iter_1819.code_ptr :
      local.curr_1820.code == "]"
        ? local.iter_1819.tape[local.iter_1819.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1819.code_ptr)] : local.iter_1819.code_ptr
        : local.iter_1819.code_ptr)

    steps_taken = 1 + local.iter_1819.steps_taken
  }
}

locals {
  end_of_code_1821 = try(local.iter_1820.code_ptr >= length(var.code), true)

  curr_1821 = local.end_of_code_1821 ? null : {
    code = substr(var.code, local.iter_1820.code_ptr, 1)
    input = substr(var.code, local.iter_1820.code_ptr, 1) == "," ? substr(local.iter_1820.input, 0, 1) : null
  }

  iter_1821 = local.end_of_code_1821 ? local.iter_1820 : {
    input = (local.curr_1821.code == ","
      ? substr(local.iter_1820.input, 1, -1)
      : local.iter_1820.input)

    output = (local.curr_1821.code == "."
      ? "${local.iter_1820.output}${jsondecode(format("\"\\u%04x\"", local.iter_1820.tape[local.iter_1820.tape_ptr]))}"
      : local.iter_1820.output)
    
    tape = (
      local.curr_1821.code == "+"
        ? [for i, b in local.iter_1820.tape : (i == local.iter_1820.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1821.code == "-"
        ? [for i, b in local.iter_1820.tape : (i == local.iter_1820.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1821.code == ","
        ? [for i, b in local.iter_1820.tape : (i == local.iter_1820.tape_ptr ? local.ascii_lookup[local.curr_1821.input] : b)]
        : local.iter_1820.tape)

    tape_ptr = (
      local.curr_1821.code == "<"
        ? local.iter_1820.tape_ptr == 0 ? length(local.iter_1820.tape) - 1 : local.iter_1820.tape_ptr - 1 :
      local.curr_1821.code == ">"
        ? local.iter_1820.tape_ptr == length(local.iter_1820.tape) - 1 ? 0 : local.iter_1820.tape_ptr + 1
        : local.iter_1820.tape_ptr)

    code_ptr = 1 + (
      local.curr_1821.code == "["
        ? local.iter_1820.tape[local.iter_1820.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1820.code_ptr)] : local.iter_1820.code_ptr :
      local.curr_1821.code == "]"
        ? local.iter_1820.tape[local.iter_1820.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1820.code_ptr)] : local.iter_1820.code_ptr
        : local.iter_1820.code_ptr)

    steps_taken = 1 + local.iter_1820.steps_taken
  }
}

locals {
  end_of_code_1822 = try(local.iter_1821.code_ptr >= length(var.code), true)

  curr_1822 = local.end_of_code_1822 ? null : {
    code = substr(var.code, local.iter_1821.code_ptr, 1)
    input = substr(var.code, local.iter_1821.code_ptr, 1) == "," ? substr(local.iter_1821.input, 0, 1) : null
  }

  iter_1822 = local.end_of_code_1822 ? local.iter_1821 : {
    input = (local.curr_1822.code == ","
      ? substr(local.iter_1821.input, 1, -1)
      : local.iter_1821.input)

    output = (local.curr_1822.code == "."
      ? "${local.iter_1821.output}${jsondecode(format("\"\\u%04x\"", local.iter_1821.tape[local.iter_1821.tape_ptr]))}"
      : local.iter_1821.output)
    
    tape = (
      local.curr_1822.code == "+"
        ? [for i, b in local.iter_1821.tape : (i == local.iter_1821.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1822.code == "-"
        ? [for i, b in local.iter_1821.tape : (i == local.iter_1821.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1822.code == ","
        ? [for i, b in local.iter_1821.tape : (i == local.iter_1821.tape_ptr ? local.ascii_lookup[local.curr_1822.input] : b)]
        : local.iter_1821.tape)

    tape_ptr = (
      local.curr_1822.code == "<"
        ? local.iter_1821.tape_ptr == 0 ? length(local.iter_1821.tape) - 1 : local.iter_1821.tape_ptr - 1 :
      local.curr_1822.code == ">"
        ? local.iter_1821.tape_ptr == length(local.iter_1821.tape) - 1 ? 0 : local.iter_1821.tape_ptr + 1
        : local.iter_1821.tape_ptr)

    code_ptr = 1 + (
      local.curr_1822.code == "["
        ? local.iter_1821.tape[local.iter_1821.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1821.code_ptr)] : local.iter_1821.code_ptr :
      local.curr_1822.code == "]"
        ? local.iter_1821.tape[local.iter_1821.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1821.code_ptr)] : local.iter_1821.code_ptr
        : local.iter_1821.code_ptr)

    steps_taken = 1 + local.iter_1821.steps_taken
  }
}

locals {
  end_of_code_1823 = try(local.iter_1822.code_ptr >= length(var.code), true)

  curr_1823 = local.end_of_code_1823 ? null : {
    code = substr(var.code, local.iter_1822.code_ptr, 1)
    input = substr(var.code, local.iter_1822.code_ptr, 1) == "," ? substr(local.iter_1822.input, 0, 1) : null
  }

  iter_1823 = local.end_of_code_1823 ? local.iter_1822 : {
    input = (local.curr_1823.code == ","
      ? substr(local.iter_1822.input, 1, -1)
      : local.iter_1822.input)

    output = (local.curr_1823.code == "."
      ? "${local.iter_1822.output}${jsondecode(format("\"\\u%04x\"", local.iter_1822.tape[local.iter_1822.tape_ptr]))}"
      : local.iter_1822.output)
    
    tape = (
      local.curr_1823.code == "+"
        ? [for i, b in local.iter_1822.tape : (i == local.iter_1822.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1823.code == "-"
        ? [for i, b in local.iter_1822.tape : (i == local.iter_1822.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1823.code == ","
        ? [for i, b in local.iter_1822.tape : (i == local.iter_1822.tape_ptr ? local.ascii_lookup[local.curr_1823.input] : b)]
        : local.iter_1822.tape)

    tape_ptr = (
      local.curr_1823.code == "<"
        ? local.iter_1822.tape_ptr == 0 ? length(local.iter_1822.tape) - 1 : local.iter_1822.tape_ptr - 1 :
      local.curr_1823.code == ">"
        ? local.iter_1822.tape_ptr == length(local.iter_1822.tape) - 1 ? 0 : local.iter_1822.tape_ptr + 1
        : local.iter_1822.tape_ptr)

    code_ptr = 1 + (
      local.curr_1823.code == "["
        ? local.iter_1822.tape[local.iter_1822.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1822.code_ptr)] : local.iter_1822.code_ptr :
      local.curr_1823.code == "]"
        ? local.iter_1822.tape[local.iter_1822.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1822.code_ptr)] : local.iter_1822.code_ptr
        : local.iter_1822.code_ptr)

    steps_taken = 1 + local.iter_1822.steps_taken
  }
}

locals {
  end_of_code_1824 = try(local.iter_1823.code_ptr >= length(var.code), true)

  curr_1824 = local.end_of_code_1824 ? null : {
    code = substr(var.code, local.iter_1823.code_ptr, 1)
    input = substr(var.code, local.iter_1823.code_ptr, 1) == "," ? substr(local.iter_1823.input, 0, 1) : null
  }

  iter_1824 = local.end_of_code_1824 ? local.iter_1823 : {
    input = (local.curr_1824.code == ","
      ? substr(local.iter_1823.input, 1, -1)
      : local.iter_1823.input)

    output = (local.curr_1824.code == "."
      ? "${local.iter_1823.output}${jsondecode(format("\"\\u%04x\"", local.iter_1823.tape[local.iter_1823.tape_ptr]))}"
      : local.iter_1823.output)
    
    tape = (
      local.curr_1824.code == "+"
        ? [for i, b in local.iter_1823.tape : (i == local.iter_1823.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1824.code == "-"
        ? [for i, b in local.iter_1823.tape : (i == local.iter_1823.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1824.code == ","
        ? [for i, b in local.iter_1823.tape : (i == local.iter_1823.tape_ptr ? local.ascii_lookup[local.curr_1824.input] : b)]
        : local.iter_1823.tape)

    tape_ptr = (
      local.curr_1824.code == "<"
        ? local.iter_1823.tape_ptr == 0 ? length(local.iter_1823.tape) - 1 : local.iter_1823.tape_ptr - 1 :
      local.curr_1824.code == ">"
        ? local.iter_1823.tape_ptr == length(local.iter_1823.tape) - 1 ? 0 : local.iter_1823.tape_ptr + 1
        : local.iter_1823.tape_ptr)

    code_ptr = 1 + (
      local.curr_1824.code == "["
        ? local.iter_1823.tape[local.iter_1823.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1823.code_ptr)] : local.iter_1823.code_ptr :
      local.curr_1824.code == "]"
        ? local.iter_1823.tape[local.iter_1823.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1823.code_ptr)] : local.iter_1823.code_ptr
        : local.iter_1823.code_ptr)

    steps_taken = 1 + local.iter_1823.steps_taken
  }
}

locals {
  end_of_code_1825 = try(local.iter_1824.code_ptr >= length(var.code), true)

  curr_1825 = local.end_of_code_1825 ? null : {
    code = substr(var.code, local.iter_1824.code_ptr, 1)
    input = substr(var.code, local.iter_1824.code_ptr, 1) == "," ? substr(local.iter_1824.input, 0, 1) : null
  }

  iter_1825 = local.end_of_code_1825 ? local.iter_1824 : {
    input = (local.curr_1825.code == ","
      ? substr(local.iter_1824.input, 1, -1)
      : local.iter_1824.input)

    output = (local.curr_1825.code == "."
      ? "${local.iter_1824.output}${jsondecode(format("\"\\u%04x\"", local.iter_1824.tape[local.iter_1824.tape_ptr]))}"
      : local.iter_1824.output)
    
    tape = (
      local.curr_1825.code == "+"
        ? [for i, b in local.iter_1824.tape : (i == local.iter_1824.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1825.code == "-"
        ? [for i, b in local.iter_1824.tape : (i == local.iter_1824.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1825.code == ","
        ? [for i, b in local.iter_1824.tape : (i == local.iter_1824.tape_ptr ? local.ascii_lookup[local.curr_1825.input] : b)]
        : local.iter_1824.tape)

    tape_ptr = (
      local.curr_1825.code == "<"
        ? local.iter_1824.tape_ptr == 0 ? length(local.iter_1824.tape) - 1 : local.iter_1824.tape_ptr - 1 :
      local.curr_1825.code == ">"
        ? local.iter_1824.tape_ptr == length(local.iter_1824.tape) - 1 ? 0 : local.iter_1824.tape_ptr + 1
        : local.iter_1824.tape_ptr)

    code_ptr = 1 + (
      local.curr_1825.code == "["
        ? local.iter_1824.tape[local.iter_1824.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1824.code_ptr)] : local.iter_1824.code_ptr :
      local.curr_1825.code == "]"
        ? local.iter_1824.tape[local.iter_1824.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1824.code_ptr)] : local.iter_1824.code_ptr
        : local.iter_1824.code_ptr)

    steps_taken = 1 + local.iter_1824.steps_taken
  }
}

locals {
  end_of_code_1826 = try(local.iter_1825.code_ptr >= length(var.code), true)

  curr_1826 = local.end_of_code_1826 ? null : {
    code = substr(var.code, local.iter_1825.code_ptr, 1)
    input = substr(var.code, local.iter_1825.code_ptr, 1) == "," ? substr(local.iter_1825.input, 0, 1) : null
  }

  iter_1826 = local.end_of_code_1826 ? local.iter_1825 : {
    input = (local.curr_1826.code == ","
      ? substr(local.iter_1825.input, 1, -1)
      : local.iter_1825.input)

    output = (local.curr_1826.code == "."
      ? "${local.iter_1825.output}${jsondecode(format("\"\\u%04x\"", local.iter_1825.tape[local.iter_1825.tape_ptr]))}"
      : local.iter_1825.output)
    
    tape = (
      local.curr_1826.code == "+"
        ? [for i, b in local.iter_1825.tape : (i == local.iter_1825.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1826.code == "-"
        ? [for i, b in local.iter_1825.tape : (i == local.iter_1825.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1826.code == ","
        ? [for i, b in local.iter_1825.tape : (i == local.iter_1825.tape_ptr ? local.ascii_lookup[local.curr_1826.input] : b)]
        : local.iter_1825.tape)

    tape_ptr = (
      local.curr_1826.code == "<"
        ? local.iter_1825.tape_ptr == 0 ? length(local.iter_1825.tape) - 1 : local.iter_1825.tape_ptr - 1 :
      local.curr_1826.code == ">"
        ? local.iter_1825.tape_ptr == length(local.iter_1825.tape) - 1 ? 0 : local.iter_1825.tape_ptr + 1
        : local.iter_1825.tape_ptr)

    code_ptr = 1 + (
      local.curr_1826.code == "["
        ? local.iter_1825.tape[local.iter_1825.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1825.code_ptr)] : local.iter_1825.code_ptr :
      local.curr_1826.code == "]"
        ? local.iter_1825.tape[local.iter_1825.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1825.code_ptr)] : local.iter_1825.code_ptr
        : local.iter_1825.code_ptr)

    steps_taken = 1 + local.iter_1825.steps_taken
  }
}

locals {
  end_of_code_1827 = try(local.iter_1826.code_ptr >= length(var.code), true)

  curr_1827 = local.end_of_code_1827 ? null : {
    code = substr(var.code, local.iter_1826.code_ptr, 1)
    input = substr(var.code, local.iter_1826.code_ptr, 1) == "," ? substr(local.iter_1826.input, 0, 1) : null
  }

  iter_1827 = local.end_of_code_1827 ? local.iter_1826 : {
    input = (local.curr_1827.code == ","
      ? substr(local.iter_1826.input, 1, -1)
      : local.iter_1826.input)

    output = (local.curr_1827.code == "."
      ? "${local.iter_1826.output}${jsondecode(format("\"\\u%04x\"", local.iter_1826.tape[local.iter_1826.tape_ptr]))}"
      : local.iter_1826.output)
    
    tape = (
      local.curr_1827.code == "+"
        ? [for i, b in local.iter_1826.tape : (i == local.iter_1826.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1827.code == "-"
        ? [for i, b in local.iter_1826.tape : (i == local.iter_1826.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1827.code == ","
        ? [for i, b in local.iter_1826.tape : (i == local.iter_1826.tape_ptr ? local.ascii_lookup[local.curr_1827.input] : b)]
        : local.iter_1826.tape)

    tape_ptr = (
      local.curr_1827.code == "<"
        ? local.iter_1826.tape_ptr == 0 ? length(local.iter_1826.tape) - 1 : local.iter_1826.tape_ptr - 1 :
      local.curr_1827.code == ">"
        ? local.iter_1826.tape_ptr == length(local.iter_1826.tape) - 1 ? 0 : local.iter_1826.tape_ptr + 1
        : local.iter_1826.tape_ptr)

    code_ptr = 1 + (
      local.curr_1827.code == "["
        ? local.iter_1826.tape[local.iter_1826.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1826.code_ptr)] : local.iter_1826.code_ptr :
      local.curr_1827.code == "]"
        ? local.iter_1826.tape[local.iter_1826.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1826.code_ptr)] : local.iter_1826.code_ptr
        : local.iter_1826.code_ptr)

    steps_taken = 1 + local.iter_1826.steps_taken
  }
}

locals {
  end_of_code_1828 = try(local.iter_1827.code_ptr >= length(var.code), true)

  curr_1828 = local.end_of_code_1828 ? null : {
    code = substr(var.code, local.iter_1827.code_ptr, 1)
    input = substr(var.code, local.iter_1827.code_ptr, 1) == "," ? substr(local.iter_1827.input, 0, 1) : null
  }

  iter_1828 = local.end_of_code_1828 ? local.iter_1827 : {
    input = (local.curr_1828.code == ","
      ? substr(local.iter_1827.input, 1, -1)
      : local.iter_1827.input)

    output = (local.curr_1828.code == "."
      ? "${local.iter_1827.output}${jsondecode(format("\"\\u%04x\"", local.iter_1827.tape[local.iter_1827.tape_ptr]))}"
      : local.iter_1827.output)
    
    tape = (
      local.curr_1828.code == "+"
        ? [for i, b in local.iter_1827.tape : (i == local.iter_1827.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1828.code == "-"
        ? [for i, b in local.iter_1827.tape : (i == local.iter_1827.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1828.code == ","
        ? [for i, b in local.iter_1827.tape : (i == local.iter_1827.tape_ptr ? local.ascii_lookup[local.curr_1828.input] : b)]
        : local.iter_1827.tape)

    tape_ptr = (
      local.curr_1828.code == "<"
        ? local.iter_1827.tape_ptr == 0 ? length(local.iter_1827.tape) - 1 : local.iter_1827.tape_ptr - 1 :
      local.curr_1828.code == ">"
        ? local.iter_1827.tape_ptr == length(local.iter_1827.tape) - 1 ? 0 : local.iter_1827.tape_ptr + 1
        : local.iter_1827.tape_ptr)

    code_ptr = 1 + (
      local.curr_1828.code == "["
        ? local.iter_1827.tape[local.iter_1827.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1827.code_ptr)] : local.iter_1827.code_ptr :
      local.curr_1828.code == "]"
        ? local.iter_1827.tape[local.iter_1827.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1827.code_ptr)] : local.iter_1827.code_ptr
        : local.iter_1827.code_ptr)

    steps_taken = 1 + local.iter_1827.steps_taken
  }
}

locals {
  end_of_code_1829 = try(local.iter_1828.code_ptr >= length(var.code), true)

  curr_1829 = local.end_of_code_1829 ? null : {
    code = substr(var.code, local.iter_1828.code_ptr, 1)
    input = substr(var.code, local.iter_1828.code_ptr, 1) == "," ? substr(local.iter_1828.input, 0, 1) : null
  }

  iter_1829 = local.end_of_code_1829 ? local.iter_1828 : {
    input = (local.curr_1829.code == ","
      ? substr(local.iter_1828.input, 1, -1)
      : local.iter_1828.input)

    output = (local.curr_1829.code == "."
      ? "${local.iter_1828.output}${jsondecode(format("\"\\u%04x\"", local.iter_1828.tape[local.iter_1828.tape_ptr]))}"
      : local.iter_1828.output)
    
    tape = (
      local.curr_1829.code == "+"
        ? [for i, b in local.iter_1828.tape : (i == local.iter_1828.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1829.code == "-"
        ? [for i, b in local.iter_1828.tape : (i == local.iter_1828.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1829.code == ","
        ? [for i, b in local.iter_1828.tape : (i == local.iter_1828.tape_ptr ? local.ascii_lookup[local.curr_1829.input] : b)]
        : local.iter_1828.tape)

    tape_ptr = (
      local.curr_1829.code == "<"
        ? local.iter_1828.tape_ptr == 0 ? length(local.iter_1828.tape) - 1 : local.iter_1828.tape_ptr - 1 :
      local.curr_1829.code == ">"
        ? local.iter_1828.tape_ptr == length(local.iter_1828.tape) - 1 ? 0 : local.iter_1828.tape_ptr + 1
        : local.iter_1828.tape_ptr)

    code_ptr = 1 + (
      local.curr_1829.code == "["
        ? local.iter_1828.tape[local.iter_1828.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1828.code_ptr)] : local.iter_1828.code_ptr :
      local.curr_1829.code == "]"
        ? local.iter_1828.tape[local.iter_1828.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1828.code_ptr)] : local.iter_1828.code_ptr
        : local.iter_1828.code_ptr)

    steps_taken = 1 + local.iter_1828.steps_taken
  }
}

locals {
  end_of_code_1830 = try(local.iter_1829.code_ptr >= length(var.code), true)

  curr_1830 = local.end_of_code_1830 ? null : {
    code = substr(var.code, local.iter_1829.code_ptr, 1)
    input = substr(var.code, local.iter_1829.code_ptr, 1) == "," ? substr(local.iter_1829.input, 0, 1) : null
  }

  iter_1830 = local.end_of_code_1830 ? local.iter_1829 : {
    input = (local.curr_1830.code == ","
      ? substr(local.iter_1829.input, 1, -1)
      : local.iter_1829.input)

    output = (local.curr_1830.code == "."
      ? "${local.iter_1829.output}${jsondecode(format("\"\\u%04x\"", local.iter_1829.tape[local.iter_1829.tape_ptr]))}"
      : local.iter_1829.output)
    
    tape = (
      local.curr_1830.code == "+"
        ? [for i, b in local.iter_1829.tape : (i == local.iter_1829.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1830.code == "-"
        ? [for i, b in local.iter_1829.tape : (i == local.iter_1829.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1830.code == ","
        ? [for i, b in local.iter_1829.tape : (i == local.iter_1829.tape_ptr ? local.ascii_lookup[local.curr_1830.input] : b)]
        : local.iter_1829.tape)

    tape_ptr = (
      local.curr_1830.code == "<"
        ? local.iter_1829.tape_ptr == 0 ? length(local.iter_1829.tape) - 1 : local.iter_1829.tape_ptr - 1 :
      local.curr_1830.code == ">"
        ? local.iter_1829.tape_ptr == length(local.iter_1829.tape) - 1 ? 0 : local.iter_1829.tape_ptr + 1
        : local.iter_1829.tape_ptr)

    code_ptr = 1 + (
      local.curr_1830.code == "["
        ? local.iter_1829.tape[local.iter_1829.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1829.code_ptr)] : local.iter_1829.code_ptr :
      local.curr_1830.code == "]"
        ? local.iter_1829.tape[local.iter_1829.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1829.code_ptr)] : local.iter_1829.code_ptr
        : local.iter_1829.code_ptr)

    steps_taken = 1 + local.iter_1829.steps_taken
  }
}

locals {
  end_of_code_1831 = try(local.iter_1830.code_ptr >= length(var.code), true)

  curr_1831 = local.end_of_code_1831 ? null : {
    code = substr(var.code, local.iter_1830.code_ptr, 1)
    input = substr(var.code, local.iter_1830.code_ptr, 1) == "," ? substr(local.iter_1830.input, 0, 1) : null
  }

  iter_1831 = local.end_of_code_1831 ? local.iter_1830 : {
    input = (local.curr_1831.code == ","
      ? substr(local.iter_1830.input, 1, -1)
      : local.iter_1830.input)

    output = (local.curr_1831.code == "."
      ? "${local.iter_1830.output}${jsondecode(format("\"\\u%04x\"", local.iter_1830.tape[local.iter_1830.tape_ptr]))}"
      : local.iter_1830.output)
    
    tape = (
      local.curr_1831.code == "+"
        ? [for i, b in local.iter_1830.tape : (i == local.iter_1830.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1831.code == "-"
        ? [for i, b in local.iter_1830.tape : (i == local.iter_1830.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1831.code == ","
        ? [for i, b in local.iter_1830.tape : (i == local.iter_1830.tape_ptr ? local.ascii_lookup[local.curr_1831.input] : b)]
        : local.iter_1830.tape)

    tape_ptr = (
      local.curr_1831.code == "<"
        ? local.iter_1830.tape_ptr == 0 ? length(local.iter_1830.tape) - 1 : local.iter_1830.tape_ptr - 1 :
      local.curr_1831.code == ">"
        ? local.iter_1830.tape_ptr == length(local.iter_1830.tape) - 1 ? 0 : local.iter_1830.tape_ptr + 1
        : local.iter_1830.tape_ptr)

    code_ptr = 1 + (
      local.curr_1831.code == "["
        ? local.iter_1830.tape[local.iter_1830.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1830.code_ptr)] : local.iter_1830.code_ptr :
      local.curr_1831.code == "]"
        ? local.iter_1830.tape[local.iter_1830.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1830.code_ptr)] : local.iter_1830.code_ptr
        : local.iter_1830.code_ptr)

    steps_taken = 1 + local.iter_1830.steps_taken
  }
}

locals {
  end_of_code_1832 = try(local.iter_1831.code_ptr >= length(var.code), true)

  curr_1832 = local.end_of_code_1832 ? null : {
    code = substr(var.code, local.iter_1831.code_ptr, 1)
    input = substr(var.code, local.iter_1831.code_ptr, 1) == "," ? substr(local.iter_1831.input, 0, 1) : null
  }

  iter_1832 = local.end_of_code_1832 ? local.iter_1831 : {
    input = (local.curr_1832.code == ","
      ? substr(local.iter_1831.input, 1, -1)
      : local.iter_1831.input)

    output = (local.curr_1832.code == "."
      ? "${local.iter_1831.output}${jsondecode(format("\"\\u%04x\"", local.iter_1831.tape[local.iter_1831.tape_ptr]))}"
      : local.iter_1831.output)
    
    tape = (
      local.curr_1832.code == "+"
        ? [for i, b in local.iter_1831.tape : (i == local.iter_1831.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1832.code == "-"
        ? [for i, b in local.iter_1831.tape : (i == local.iter_1831.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1832.code == ","
        ? [for i, b in local.iter_1831.tape : (i == local.iter_1831.tape_ptr ? local.ascii_lookup[local.curr_1832.input] : b)]
        : local.iter_1831.tape)

    tape_ptr = (
      local.curr_1832.code == "<"
        ? local.iter_1831.tape_ptr == 0 ? length(local.iter_1831.tape) - 1 : local.iter_1831.tape_ptr - 1 :
      local.curr_1832.code == ">"
        ? local.iter_1831.tape_ptr == length(local.iter_1831.tape) - 1 ? 0 : local.iter_1831.tape_ptr + 1
        : local.iter_1831.tape_ptr)

    code_ptr = 1 + (
      local.curr_1832.code == "["
        ? local.iter_1831.tape[local.iter_1831.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1831.code_ptr)] : local.iter_1831.code_ptr :
      local.curr_1832.code == "]"
        ? local.iter_1831.tape[local.iter_1831.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1831.code_ptr)] : local.iter_1831.code_ptr
        : local.iter_1831.code_ptr)

    steps_taken = 1 + local.iter_1831.steps_taken
  }
}

locals {
  end_of_code_1833 = try(local.iter_1832.code_ptr >= length(var.code), true)

  curr_1833 = local.end_of_code_1833 ? null : {
    code = substr(var.code, local.iter_1832.code_ptr, 1)
    input = substr(var.code, local.iter_1832.code_ptr, 1) == "," ? substr(local.iter_1832.input, 0, 1) : null
  }

  iter_1833 = local.end_of_code_1833 ? local.iter_1832 : {
    input = (local.curr_1833.code == ","
      ? substr(local.iter_1832.input, 1, -1)
      : local.iter_1832.input)

    output = (local.curr_1833.code == "."
      ? "${local.iter_1832.output}${jsondecode(format("\"\\u%04x\"", local.iter_1832.tape[local.iter_1832.tape_ptr]))}"
      : local.iter_1832.output)
    
    tape = (
      local.curr_1833.code == "+"
        ? [for i, b in local.iter_1832.tape : (i == local.iter_1832.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1833.code == "-"
        ? [for i, b in local.iter_1832.tape : (i == local.iter_1832.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1833.code == ","
        ? [for i, b in local.iter_1832.tape : (i == local.iter_1832.tape_ptr ? local.ascii_lookup[local.curr_1833.input] : b)]
        : local.iter_1832.tape)

    tape_ptr = (
      local.curr_1833.code == "<"
        ? local.iter_1832.tape_ptr == 0 ? length(local.iter_1832.tape) - 1 : local.iter_1832.tape_ptr - 1 :
      local.curr_1833.code == ">"
        ? local.iter_1832.tape_ptr == length(local.iter_1832.tape) - 1 ? 0 : local.iter_1832.tape_ptr + 1
        : local.iter_1832.tape_ptr)

    code_ptr = 1 + (
      local.curr_1833.code == "["
        ? local.iter_1832.tape[local.iter_1832.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1832.code_ptr)] : local.iter_1832.code_ptr :
      local.curr_1833.code == "]"
        ? local.iter_1832.tape[local.iter_1832.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1832.code_ptr)] : local.iter_1832.code_ptr
        : local.iter_1832.code_ptr)

    steps_taken = 1 + local.iter_1832.steps_taken
  }
}

locals {
  end_of_code_1834 = try(local.iter_1833.code_ptr >= length(var.code), true)

  curr_1834 = local.end_of_code_1834 ? null : {
    code = substr(var.code, local.iter_1833.code_ptr, 1)
    input = substr(var.code, local.iter_1833.code_ptr, 1) == "," ? substr(local.iter_1833.input, 0, 1) : null
  }

  iter_1834 = local.end_of_code_1834 ? local.iter_1833 : {
    input = (local.curr_1834.code == ","
      ? substr(local.iter_1833.input, 1, -1)
      : local.iter_1833.input)

    output = (local.curr_1834.code == "."
      ? "${local.iter_1833.output}${jsondecode(format("\"\\u%04x\"", local.iter_1833.tape[local.iter_1833.tape_ptr]))}"
      : local.iter_1833.output)
    
    tape = (
      local.curr_1834.code == "+"
        ? [for i, b in local.iter_1833.tape : (i == local.iter_1833.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1834.code == "-"
        ? [for i, b in local.iter_1833.tape : (i == local.iter_1833.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1834.code == ","
        ? [for i, b in local.iter_1833.tape : (i == local.iter_1833.tape_ptr ? local.ascii_lookup[local.curr_1834.input] : b)]
        : local.iter_1833.tape)

    tape_ptr = (
      local.curr_1834.code == "<"
        ? local.iter_1833.tape_ptr == 0 ? length(local.iter_1833.tape) - 1 : local.iter_1833.tape_ptr - 1 :
      local.curr_1834.code == ">"
        ? local.iter_1833.tape_ptr == length(local.iter_1833.tape) - 1 ? 0 : local.iter_1833.tape_ptr + 1
        : local.iter_1833.tape_ptr)

    code_ptr = 1 + (
      local.curr_1834.code == "["
        ? local.iter_1833.tape[local.iter_1833.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1833.code_ptr)] : local.iter_1833.code_ptr :
      local.curr_1834.code == "]"
        ? local.iter_1833.tape[local.iter_1833.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1833.code_ptr)] : local.iter_1833.code_ptr
        : local.iter_1833.code_ptr)

    steps_taken = 1 + local.iter_1833.steps_taken
  }
}

locals {
  end_of_code_1835 = try(local.iter_1834.code_ptr >= length(var.code), true)

  curr_1835 = local.end_of_code_1835 ? null : {
    code = substr(var.code, local.iter_1834.code_ptr, 1)
    input = substr(var.code, local.iter_1834.code_ptr, 1) == "," ? substr(local.iter_1834.input, 0, 1) : null
  }

  iter_1835 = local.end_of_code_1835 ? local.iter_1834 : {
    input = (local.curr_1835.code == ","
      ? substr(local.iter_1834.input, 1, -1)
      : local.iter_1834.input)

    output = (local.curr_1835.code == "."
      ? "${local.iter_1834.output}${jsondecode(format("\"\\u%04x\"", local.iter_1834.tape[local.iter_1834.tape_ptr]))}"
      : local.iter_1834.output)
    
    tape = (
      local.curr_1835.code == "+"
        ? [for i, b in local.iter_1834.tape : (i == local.iter_1834.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1835.code == "-"
        ? [for i, b in local.iter_1834.tape : (i == local.iter_1834.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1835.code == ","
        ? [for i, b in local.iter_1834.tape : (i == local.iter_1834.tape_ptr ? local.ascii_lookup[local.curr_1835.input] : b)]
        : local.iter_1834.tape)

    tape_ptr = (
      local.curr_1835.code == "<"
        ? local.iter_1834.tape_ptr == 0 ? length(local.iter_1834.tape) - 1 : local.iter_1834.tape_ptr - 1 :
      local.curr_1835.code == ">"
        ? local.iter_1834.tape_ptr == length(local.iter_1834.tape) - 1 ? 0 : local.iter_1834.tape_ptr + 1
        : local.iter_1834.tape_ptr)

    code_ptr = 1 + (
      local.curr_1835.code == "["
        ? local.iter_1834.tape[local.iter_1834.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1834.code_ptr)] : local.iter_1834.code_ptr :
      local.curr_1835.code == "]"
        ? local.iter_1834.tape[local.iter_1834.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1834.code_ptr)] : local.iter_1834.code_ptr
        : local.iter_1834.code_ptr)

    steps_taken = 1 + local.iter_1834.steps_taken
  }
}

locals {
  end_of_code_1836 = try(local.iter_1835.code_ptr >= length(var.code), true)

  curr_1836 = local.end_of_code_1836 ? null : {
    code = substr(var.code, local.iter_1835.code_ptr, 1)
    input = substr(var.code, local.iter_1835.code_ptr, 1) == "," ? substr(local.iter_1835.input, 0, 1) : null
  }

  iter_1836 = local.end_of_code_1836 ? local.iter_1835 : {
    input = (local.curr_1836.code == ","
      ? substr(local.iter_1835.input, 1, -1)
      : local.iter_1835.input)

    output = (local.curr_1836.code == "."
      ? "${local.iter_1835.output}${jsondecode(format("\"\\u%04x\"", local.iter_1835.tape[local.iter_1835.tape_ptr]))}"
      : local.iter_1835.output)
    
    tape = (
      local.curr_1836.code == "+"
        ? [for i, b in local.iter_1835.tape : (i == local.iter_1835.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1836.code == "-"
        ? [for i, b in local.iter_1835.tape : (i == local.iter_1835.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1836.code == ","
        ? [for i, b in local.iter_1835.tape : (i == local.iter_1835.tape_ptr ? local.ascii_lookup[local.curr_1836.input] : b)]
        : local.iter_1835.tape)

    tape_ptr = (
      local.curr_1836.code == "<"
        ? local.iter_1835.tape_ptr == 0 ? length(local.iter_1835.tape) - 1 : local.iter_1835.tape_ptr - 1 :
      local.curr_1836.code == ">"
        ? local.iter_1835.tape_ptr == length(local.iter_1835.tape) - 1 ? 0 : local.iter_1835.tape_ptr + 1
        : local.iter_1835.tape_ptr)

    code_ptr = 1 + (
      local.curr_1836.code == "["
        ? local.iter_1835.tape[local.iter_1835.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1835.code_ptr)] : local.iter_1835.code_ptr :
      local.curr_1836.code == "]"
        ? local.iter_1835.tape[local.iter_1835.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1835.code_ptr)] : local.iter_1835.code_ptr
        : local.iter_1835.code_ptr)

    steps_taken = 1 + local.iter_1835.steps_taken
  }
}

locals {
  end_of_code_1837 = try(local.iter_1836.code_ptr >= length(var.code), true)

  curr_1837 = local.end_of_code_1837 ? null : {
    code = substr(var.code, local.iter_1836.code_ptr, 1)
    input = substr(var.code, local.iter_1836.code_ptr, 1) == "," ? substr(local.iter_1836.input, 0, 1) : null
  }

  iter_1837 = local.end_of_code_1837 ? local.iter_1836 : {
    input = (local.curr_1837.code == ","
      ? substr(local.iter_1836.input, 1, -1)
      : local.iter_1836.input)

    output = (local.curr_1837.code == "."
      ? "${local.iter_1836.output}${jsondecode(format("\"\\u%04x\"", local.iter_1836.tape[local.iter_1836.tape_ptr]))}"
      : local.iter_1836.output)
    
    tape = (
      local.curr_1837.code == "+"
        ? [for i, b in local.iter_1836.tape : (i == local.iter_1836.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1837.code == "-"
        ? [for i, b in local.iter_1836.tape : (i == local.iter_1836.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1837.code == ","
        ? [for i, b in local.iter_1836.tape : (i == local.iter_1836.tape_ptr ? local.ascii_lookup[local.curr_1837.input] : b)]
        : local.iter_1836.tape)

    tape_ptr = (
      local.curr_1837.code == "<"
        ? local.iter_1836.tape_ptr == 0 ? length(local.iter_1836.tape) - 1 : local.iter_1836.tape_ptr - 1 :
      local.curr_1837.code == ">"
        ? local.iter_1836.tape_ptr == length(local.iter_1836.tape) - 1 ? 0 : local.iter_1836.tape_ptr + 1
        : local.iter_1836.tape_ptr)

    code_ptr = 1 + (
      local.curr_1837.code == "["
        ? local.iter_1836.tape[local.iter_1836.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1836.code_ptr)] : local.iter_1836.code_ptr :
      local.curr_1837.code == "]"
        ? local.iter_1836.tape[local.iter_1836.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1836.code_ptr)] : local.iter_1836.code_ptr
        : local.iter_1836.code_ptr)

    steps_taken = 1 + local.iter_1836.steps_taken
  }
}

locals {
  end_of_code_1838 = try(local.iter_1837.code_ptr >= length(var.code), true)

  curr_1838 = local.end_of_code_1838 ? null : {
    code = substr(var.code, local.iter_1837.code_ptr, 1)
    input = substr(var.code, local.iter_1837.code_ptr, 1) == "," ? substr(local.iter_1837.input, 0, 1) : null
  }

  iter_1838 = local.end_of_code_1838 ? local.iter_1837 : {
    input = (local.curr_1838.code == ","
      ? substr(local.iter_1837.input, 1, -1)
      : local.iter_1837.input)

    output = (local.curr_1838.code == "."
      ? "${local.iter_1837.output}${jsondecode(format("\"\\u%04x\"", local.iter_1837.tape[local.iter_1837.tape_ptr]))}"
      : local.iter_1837.output)
    
    tape = (
      local.curr_1838.code == "+"
        ? [for i, b in local.iter_1837.tape : (i == local.iter_1837.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1838.code == "-"
        ? [for i, b in local.iter_1837.tape : (i == local.iter_1837.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1838.code == ","
        ? [for i, b in local.iter_1837.tape : (i == local.iter_1837.tape_ptr ? local.ascii_lookup[local.curr_1838.input] : b)]
        : local.iter_1837.tape)

    tape_ptr = (
      local.curr_1838.code == "<"
        ? local.iter_1837.tape_ptr == 0 ? length(local.iter_1837.tape) - 1 : local.iter_1837.tape_ptr - 1 :
      local.curr_1838.code == ">"
        ? local.iter_1837.tape_ptr == length(local.iter_1837.tape) - 1 ? 0 : local.iter_1837.tape_ptr + 1
        : local.iter_1837.tape_ptr)

    code_ptr = 1 + (
      local.curr_1838.code == "["
        ? local.iter_1837.tape[local.iter_1837.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1837.code_ptr)] : local.iter_1837.code_ptr :
      local.curr_1838.code == "]"
        ? local.iter_1837.tape[local.iter_1837.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1837.code_ptr)] : local.iter_1837.code_ptr
        : local.iter_1837.code_ptr)

    steps_taken = 1 + local.iter_1837.steps_taken
  }
}

locals {
  end_of_code_1839 = try(local.iter_1838.code_ptr >= length(var.code), true)

  curr_1839 = local.end_of_code_1839 ? null : {
    code = substr(var.code, local.iter_1838.code_ptr, 1)
    input = substr(var.code, local.iter_1838.code_ptr, 1) == "," ? substr(local.iter_1838.input, 0, 1) : null
  }

  iter_1839 = local.end_of_code_1839 ? local.iter_1838 : {
    input = (local.curr_1839.code == ","
      ? substr(local.iter_1838.input, 1, -1)
      : local.iter_1838.input)

    output = (local.curr_1839.code == "."
      ? "${local.iter_1838.output}${jsondecode(format("\"\\u%04x\"", local.iter_1838.tape[local.iter_1838.tape_ptr]))}"
      : local.iter_1838.output)
    
    tape = (
      local.curr_1839.code == "+"
        ? [for i, b in local.iter_1838.tape : (i == local.iter_1838.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1839.code == "-"
        ? [for i, b in local.iter_1838.tape : (i == local.iter_1838.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1839.code == ","
        ? [for i, b in local.iter_1838.tape : (i == local.iter_1838.tape_ptr ? local.ascii_lookup[local.curr_1839.input] : b)]
        : local.iter_1838.tape)

    tape_ptr = (
      local.curr_1839.code == "<"
        ? local.iter_1838.tape_ptr == 0 ? length(local.iter_1838.tape) - 1 : local.iter_1838.tape_ptr - 1 :
      local.curr_1839.code == ">"
        ? local.iter_1838.tape_ptr == length(local.iter_1838.tape) - 1 ? 0 : local.iter_1838.tape_ptr + 1
        : local.iter_1838.tape_ptr)

    code_ptr = 1 + (
      local.curr_1839.code == "["
        ? local.iter_1838.tape[local.iter_1838.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1838.code_ptr)] : local.iter_1838.code_ptr :
      local.curr_1839.code == "]"
        ? local.iter_1838.tape[local.iter_1838.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1838.code_ptr)] : local.iter_1838.code_ptr
        : local.iter_1838.code_ptr)

    steps_taken = 1 + local.iter_1838.steps_taken
  }
}

locals {
  end_of_code_1840 = try(local.iter_1839.code_ptr >= length(var.code), true)

  curr_1840 = local.end_of_code_1840 ? null : {
    code = substr(var.code, local.iter_1839.code_ptr, 1)
    input = substr(var.code, local.iter_1839.code_ptr, 1) == "," ? substr(local.iter_1839.input, 0, 1) : null
  }

  iter_1840 = local.end_of_code_1840 ? local.iter_1839 : {
    input = (local.curr_1840.code == ","
      ? substr(local.iter_1839.input, 1, -1)
      : local.iter_1839.input)

    output = (local.curr_1840.code == "."
      ? "${local.iter_1839.output}${jsondecode(format("\"\\u%04x\"", local.iter_1839.tape[local.iter_1839.tape_ptr]))}"
      : local.iter_1839.output)
    
    tape = (
      local.curr_1840.code == "+"
        ? [for i, b in local.iter_1839.tape : (i == local.iter_1839.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1840.code == "-"
        ? [for i, b in local.iter_1839.tape : (i == local.iter_1839.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1840.code == ","
        ? [for i, b in local.iter_1839.tape : (i == local.iter_1839.tape_ptr ? local.ascii_lookup[local.curr_1840.input] : b)]
        : local.iter_1839.tape)

    tape_ptr = (
      local.curr_1840.code == "<"
        ? local.iter_1839.tape_ptr == 0 ? length(local.iter_1839.tape) - 1 : local.iter_1839.tape_ptr - 1 :
      local.curr_1840.code == ">"
        ? local.iter_1839.tape_ptr == length(local.iter_1839.tape) - 1 ? 0 : local.iter_1839.tape_ptr + 1
        : local.iter_1839.tape_ptr)

    code_ptr = 1 + (
      local.curr_1840.code == "["
        ? local.iter_1839.tape[local.iter_1839.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1839.code_ptr)] : local.iter_1839.code_ptr :
      local.curr_1840.code == "]"
        ? local.iter_1839.tape[local.iter_1839.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1839.code_ptr)] : local.iter_1839.code_ptr
        : local.iter_1839.code_ptr)

    steps_taken = 1 + local.iter_1839.steps_taken
  }
}

locals {
  end_of_code_1841 = try(local.iter_1840.code_ptr >= length(var.code), true)

  curr_1841 = local.end_of_code_1841 ? null : {
    code = substr(var.code, local.iter_1840.code_ptr, 1)
    input = substr(var.code, local.iter_1840.code_ptr, 1) == "," ? substr(local.iter_1840.input, 0, 1) : null
  }

  iter_1841 = local.end_of_code_1841 ? local.iter_1840 : {
    input = (local.curr_1841.code == ","
      ? substr(local.iter_1840.input, 1, -1)
      : local.iter_1840.input)

    output = (local.curr_1841.code == "."
      ? "${local.iter_1840.output}${jsondecode(format("\"\\u%04x\"", local.iter_1840.tape[local.iter_1840.tape_ptr]))}"
      : local.iter_1840.output)
    
    tape = (
      local.curr_1841.code == "+"
        ? [for i, b in local.iter_1840.tape : (i == local.iter_1840.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1841.code == "-"
        ? [for i, b in local.iter_1840.tape : (i == local.iter_1840.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1841.code == ","
        ? [for i, b in local.iter_1840.tape : (i == local.iter_1840.tape_ptr ? local.ascii_lookup[local.curr_1841.input] : b)]
        : local.iter_1840.tape)

    tape_ptr = (
      local.curr_1841.code == "<"
        ? local.iter_1840.tape_ptr == 0 ? length(local.iter_1840.tape) - 1 : local.iter_1840.tape_ptr - 1 :
      local.curr_1841.code == ">"
        ? local.iter_1840.tape_ptr == length(local.iter_1840.tape) - 1 ? 0 : local.iter_1840.tape_ptr + 1
        : local.iter_1840.tape_ptr)

    code_ptr = 1 + (
      local.curr_1841.code == "["
        ? local.iter_1840.tape[local.iter_1840.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1840.code_ptr)] : local.iter_1840.code_ptr :
      local.curr_1841.code == "]"
        ? local.iter_1840.tape[local.iter_1840.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1840.code_ptr)] : local.iter_1840.code_ptr
        : local.iter_1840.code_ptr)

    steps_taken = 1 + local.iter_1840.steps_taken
  }
}

locals {
  end_of_code_1842 = try(local.iter_1841.code_ptr >= length(var.code), true)

  curr_1842 = local.end_of_code_1842 ? null : {
    code = substr(var.code, local.iter_1841.code_ptr, 1)
    input = substr(var.code, local.iter_1841.code_ptr, 1) == "," ? substr(local.iter_1841.input, 0, 1) : null
  }

  iter_1842 = local.end_of_code_1842 ? local.iter_1841 : {
    input = (local.curr_1842.code == ","
      ? substr(local.iter_1841.input, 1, -1)
      : local.iter_1841.input)

    output = (local.curr_1842.code == "."
      ? "${local.iter_1841.output}${jsondecode(format("\"\\u%04x\"", local.iter_1841.tape[local.iter_1841.tape_ptr]))}"
      : local.iter_1841.output)
    
    tape = (
      local.curr_1842.code == "+"
        ? [for i, b in local.iter_1841.tape : (i == local.iter_1841.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1842.code == "-"
        ? [for i, b in local.iter_1841.tape : (i == local.iter_1841.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1842.code == ","
        ? [for i, b in local.iter_1841.tape : (i == local.iter_1841.tape_ptr ? local.ascii_lookup[local.curr_1842.input] : b)]
        : local.iter_1841.tape)

    tape_ptr = (
      local.curr_1842.code == "<"
        ? local.iter_1841.tape_ptr == 0 ? length(local.iter_1841.tape) - 1 : local.iter_1841.tape_ptr - 1 :
      local.curr_1842.code == ">"
        ? local.iter_1841.tape_ptr == length(local.iter_1841.tape) - 1 ? 0 : local.iter_1841.tape_ptr + 1
        : local.iter_1841.tape_ptr)

    code_ptr = 1 + (
      local.curr_1842.code == "["
        ? local.iter_1841.tape[local.iter_1841.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1841.code_ptr)] : local.iter_1841.code_ptr :
      local.curr_1842.code == "]"
        ? local.iter_1841.tape[local.iter_1841.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1841.code_ptr)] : local.iter_1841.code_ptr
        : local.iter_1841.code_ptr)

    steps_taken = 1 + local.iter_1841.steps_taken
  }
}

locals {
  end_of_code_1843 = try(local.iter_1842.code_ptr >= length(var.code), true)

  curr_1843 = local.end_of_code_1843 ? null : {
    code = substr(var.code, local.iter_1842.code_ptr, 1)
    input = substr(var.code, local.iter_1842.code_ptr, 1) == "," ? substr(local.iter_1842.input, 0, 1) : null
  }

  iter_1843 = local.end_of_code_1843 ? local.iter_1842 : {
    input = (local.curr_1843.code == ","
      ? substr(local.iter_1842.input, 1, -1)
      : local.iter_1842.input)

    output = (local.curr_1843.code == "."
      ? "${local.iter_1842.output}${jsondecode(format("\"\\u%04x\"", local.iter_1842.tape[local.iter_1842.tape_ptr]))}"
      : local.iter_1842.output)
    
    tape = (
      local.curr_1843.code == "+"
        ? [for i, b in local.iter_1842.tape : (i == local.iter_1842.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1843.code == "-"
        ? [for i, b in local.iter_1842.tape : (i == local.iter_1842.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1843.code == ","
        ? [for i, b in local.iter_1842.tape : (i == local.iter_1842.tape_ptr ? local.ascii_lookup[local.curr_1843.input] : b)]
        : local.iter_1842.tape)

    tape_ptr = (
      local.curr_1843.code == "<"
        ? local.iter_1842.tape_ptr == 0 ? length(local.iter_1842.tape) - 1 : local.iter_1842.tape_ptr - 1 :
      local.curr_1843.code == ">"
        ? local.iter_1842.tape_ptr == length(local.iter_1842.tape) - 1 ? 0 : local.iter_1842.tape_ptr + 1
        : local.iter_1842.tape_ptr)

    code_ptr = 1 + (
      local.curr_1843.code == "["
        ? local.iter_1842.tape[local.iter_1842.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1842.code_ptr)] : local.iter_1842.code_ptr :
      local.curr_1843.code == "]"
        ? local.iter_1842.tape[local.iter_1842.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1842.code_ptr)] : local.iter_1842.code_ptr
        : local.iter_1842.code_ptr)

    steps_taken = 1 + local.iter_1842.steps_taken
  }
}

locals {
  end_of_code_1844 = try(local.iter_1843.code_ptr >= length(var.code), true)

  curr_1844 = local.end_of_code_1844 ? null : {
    code = substr(var.code, local.iter_1843.code_ptr, 1)
    input = substr(var.code, local.iter_1843.code_ptr, 1) == "," ? substr(local.iter_1843.input, 0, 1) : null
  }

  iter_1844 = local.end_of_code_1844 ? local.iter_1843 : {
    input = (local.curr_1844.code == ","
      ? substr(local.iter_1843.input, 1, -1)
      : local.iter_1843.input)

    output = (local.curr_1844.code == "."
      ? "${local.iter_1843.output}${jsondecode(format("\"\\u%04x\"", local.iter_1843.tape[local.iter_1843.tape_ptr]))}"
      : local.iter_1843.output)
    
    tape = (
      local.curr_1844.code == "+"
        ? [for i, b in local.iter_1843.tape : (i == local.iter_1843.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1844.code == "-"
        ? [for i, b in local.iter_1843.tape : (i == local.iter_1843.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1844.code == ","
        ? [for i, b in local.iter_1843.tape : (i == local.iter_1843.tape_ptr ? local.ascii_lookup[local.curr_1844.input] : b)]
        : local.iter_1843.tape)

    tape_ptr = (
      local.curr_1844.code == "<"
        ? local.iter_1843.tape_ptr == 0 ? length(local.iter_1843.tape) - 1 : local.iter_1843.tape_ptr - 1 :
      local.curr_1844.code == ">"
        ? local.iter_1843.tape_ptr == length(local.iter_1843.tape) - 1 ? 0 : local.iter_1843.tape_ptr + 1
        : local.iter_1843.tape_ptr)

    code_ptr = 1 + (
      local.curr_1844.code == "["
        ? local.iter_1843.tape[local.iter_1843.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1843.code_ptr)] : local.iter_1843.code_ptr :
      local.curr_1844.code == "]"
        ? local.iter_1843.tape[local.iter_1843.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1843.code_ptr)] : local.iter_1843.code_ptr
        : local.iter_1843.code_ptr)

    steps_taken = 1 + local.iter_1843.steps_taken
  }
}

locals {
  end_of_code_1845 = try(local.iter_1844.code_ptr >= length(var.code), true)

  curr_1845 = local.end_of_code_1845 ? null : {
    code = substr(var.code, local.iter_1844.code_ptr, 1)
    input = substr(var.code, local.iter_1844.code_ptr, 1) == "," ? substr(local.iter_1844.input, 0, 1) : null
  }

  iter_1845 = local.end_of_code_1845 ? local.iter_1844 : {
    input = (local.curr_1845.code == ","
      ? substr(local.iter_1844.input, 1, -1)
      : local.iter_1844.input)

    output = (local.curr_1845.code == "."
      ? "${local.iter_1844.output}${jsondecode(format("\"\\u%04x\"", local.iter_1844.tape[local.iter_1844.tape_ptr]))}"
      : local.iter_1844.output)
    
    tape = (
      local.curr_1845.code == "+"
        ? [for i, b in local.iter_1844.tape : (i == local.iter_1844.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1845.code == "-"
        ? [for i, b in local.iter_1844.tape : (i == local.iter_1844.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1845.code == ","
        ? [for i, b in local.iter_1844.tape : (i == local.iter_1844.tape_ptr ? local.ascii_lookup[local.curr_1845.input] : b)]
        : local.iter_1844.tape)

    tape_ptr = (
      local.curr_1845.code == "<"
        ? local.iter_1844.tape_ptr == 0 ? length(local.iter_1844.tape) - 1 : local.iter_1844.tape_ptr - 1 :
      local.curr_1845.code == ">"
        ? local.iter_1844.tape_ptr == length(local.iter_1844.tape) - 1 ? 0 : local.iter_1844.tape_ptr + 1
        : local.iter_1844.tape_ptr)

    code_ptr = 1 + (
      local.curr_1845.code == "["
        ? local.iter_1844.tape[local.iter_1844.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1844.code_ptr)] : local.iter_1844.code_ptr :
      local.curr_1845.code == "]"
        ? local.iter_1844.tape[local.iter_1844.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1844.code_ptr)] : local.iter_1844.code_ptr
        : local.iter_1844.code_ptr)

    steps_taken = 1 + local.iter_1844.steps_taken
  }
}

locals {
  end_of_code_1846 = try(local.iter_1845.code_ptr >= length(var.code), true)

  curr_1846 = local.end_of_code_1846 ? null : {
    code = substr(var.code, local.iter_1845.code_ptr, 1)
    input = substr(var.code, local.iter_1845.code_ptr, 1) == "," ? substr(local.iter_1845.input, 0, 1) : null
  }

  iter_1846 = local.end_of_code_1846 ? local.iter_1845 : {
    input = (local.curr_1846.code == ","
      ? substr(local.iter_1845.input, 1, -1)
      : local.iter_1845.input)

    output = (local.curr_1846.code == "."
      ? "${local.iter_1845.output}${jsondecode(format("\"\\u%04x\"", local.iter_1845.tape[local.iter_1845.tape_ptr]))}"
      : local.iter_1845.output)
    
    tape = (
      local.curr_1846.code == "+"
        ? [for i, b in local.iter_1845.tape : (i == local.iter_1845.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1846.code == "-"
        ? [for i, b in local.iter_1845.tape : (i == local.iter_1845.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1846.code == ","
        ? [for i, b in local.iter_1845.tape : (i == local.iter_1845.tape_ptr ? local.ascii_lookup[local.curr_1846.input] : b)]
        : local.iter_1845.tape)

    tape_ptr = (
      local.curr_1846.code == "<"
        ? local.iter_1845.tape_ptr == 0 ? length(local.iter_1845.tape) - 1 : local.iter_1845.tape_ptr - 1 :
      local.curr_1846.code == ">"
        ? local.iter_1845.tape_ptr == length(local.iter_1845.tape) - 1 ? 0 : local.iter_1845.tape_ptr + 1
        : local.iter_1845.tape_ptr)

    code_ptr = 1 + (
      local.curr_1846.code == "["
        ? local.iter_1845.tape[local.iter_1845.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1845.code_ptr)] : local.iter_1845.code_ptr :
      local.curr_1846.code == "]"
        ? local.iter_1845.tape[local.iter_1845.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1845.code_ptr)] : local.iter_1845.code_ptr
        : local.iter_1845.code_ptr)

    steps_taken = 1 + local.iter_1845.steps_taken
  }
}

locals {
  end_of_code_1847 = try(local.iter_1846.code_ptr >= length(var.code), true)

  curr_1847 = local.end_of_code_1847 ? null : {
    code = substr(var.code, local.iter_1846.code_ptr, 1)
    input = substr(var.code, local.iter_1846.code_ptr, 1) == "," ? substr(local.iter_1846.input, 0, 1) : null
  }

  iter_1847 = local.end_of_code_1847 ? local.iter_1846 : {
    input = (local.curr_1847.code == ","
      ? substr(local.iter_1846.input, 1, -1)
      : local.iter_1846.input)

    output = (local.curr_1847.code == "."
      ? "${local.iter_1846.output}${jsondecode(format("\"\\u%04x\"", local.iter_1846.tape[local.iter_1846.tape_ptr]))}"
      : local.iter_1846.output)
    
    tape = (
      local.curr_1847.code == "+"
        ? [for i, b in local.iter_1846.tape : (i == local.iter_1846.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1847.code == "-"
        ? [for i, b in local.iter_1846.tape : (i == local.iter_1846.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1847.code == ","
        ? [for i, b in local.iter_1846.tape : (i == local.iter_1846.tape_ptr ? local.ascii_lookup[local.curr_1847.input] : b)]
        : local.iter_1846.tape)

    tape_ptr = (
      local.curr_1847.code == "<"
        ? local.iter_1846.tape_ptr == 0 ? length(local.iter_1846.tape) - 1 : local.iter_1846.tape_ptr - 1 :
      local.curr_1847.code == ">"
        ? local.iter_1846.tape_ptr == length(local.iter_1846.tape) - 1 ? 0 : local.iter_1846.tape_ptr + 1
        : local.iter_1846.tape_ptr)

    code_ptr = 1 + (
      local.curr_1847.code == "["
        ? local.iter_1846.tape[local.iter_1846.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1846.code_ptr)] : local.iter_1846.code_ptr :
      local.curr_1847.code == "]"
        ? local.iter_1846.tape[local.iter_1846.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1846.code_ptr)] : local.iter_1846.code_ptr
        : local.iter_1846.code_ptr)

    steps_taken = 1 + local.iter_1846.steps_taken
  }
}

locals {
  end_of_code_1848 = try(local.iter_1847.code_ptr >= length(var.code), true)

  curr_1848 = local.end_of_code_1848 ? null : {
    code = substr(var.code, local.iter_1847.code_ptr, 1)
    input = substr(var.code, local.iter_1847.code_ptr, 1) == "," ? substr(local.iter_1847.input, 0, 1) : null
  }

  iter_1848 = local.end_of_code_1848 ? local.iter_1847 : {
    input = (local.curr_1848.code == ","
      ? substr(local.iter_1847.input, 1, -1)
      : local.iter_1847.input)

    output = (local.curr_1848.code == "."
      ? "${local.iter_1847.output}${jsondecode(format("\"\\u%04x\"", local.iter_1847.tape[local.iter_1847.tape_ptr]))}"
      : local.iter_1847.output)
    
    tape = (
      local.curr_1848.code == "+"
        ? [for i, b in local.iter_1847.tape : (i == local.iter_1847.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1848.code == "-"
        ? [for i, b in local.iter_1847.tape : (i == local.iter_1847.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1848.code == ","
        ? [for i, b in local.iter_1847.tape : (i == local.iter_1847.tape_ptr ? local.ascii_lookup[local.curr_1848.input] : b)]
        : local.iter_1847.tape)

    tape_ptr = (
      local.curr_1848.code == "<"
        ? local.iter_1847.tape_ptr == 0 ? length(local.iter_1847.tape) - 1 : local.iter_1847.tape_ptr - 1 :
      local.curr_1848.code == ">"
        ? local.iter_1847.tape_ptr == length(local.iter_1847.tape) - 1 ? 0 : local.iter_1847.tape_ptr + 1
        : local.iter_1847.tape_ptr)

    code_ptr = 1 + (
      local.curr_1848.code == "["
        ? local.iter_1847.tape[local.iter_1847.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1847.code_ptr)] : local.iter_1847.code_ptr :
      local.curr_1848.code == "]"
        ? local.iter_1847.tape[local.iter_1847.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1847.code_ptr)] : local.iter_1847.code_ptr
        : local.iter_1847.code_ptr)

    steps_taken = 1 + local.iter_1847.steps_taken
  }
}

locals {
  end_of_code_1849 = try(local.iter_1848.code_ptr >= length(var.code), true)

  curr_1849 = local.end_of_code_1849 ? null : {
    code = substr(var.code, local.iter_1848.code_ptr, 1)
    input = substr(var.code, local.iter_1848.code_ptr, 1) == "," ? substr(local.iter_1848.input, 0, 1) : null
  }

  iter_1849 = local.end_of_code_1849 ? local.iter_1848 : {
    input = (local.curr_1849.code == ","
      ? substr(local.iter_1848.input, 1, -1)
      : local.iter_1848.input)

    output = (local.curr_1849.code == "."
      ? "${local.iter_1848.output}${jsondecode(format("\"\\u%04x\"", local.iter_1848.tape[local.iter_1848.tape_ptr]))}"
      : local.iter_1848.output)
    
    tape = (
      local.curr_1849.code == "+"
        ? [for i, b in local.iter_1848.tape : (i == local.iter_1848.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1849.code == "-"
        ? [for i, b in local.iter_1848.tape : (i == local.iter_1848.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1849.code == ","
        ? [for i, b in local.iter_1848.tape : (i == local.iter_1848.tape_ptr ? local.ascii_lookup[local.curr_1849.input] : b)]
        : local.iter_1848.tape)

    tape_ptr = (
      local.curr_1849.code == "<"
        ? local.iter_1848.tape_ptr == 0 ? length(local.iter_1848.tape) - 1 : local.iter_1848.tape_ptr - 1 :
      local.curr_1849.code == ">"
        ? local.iter_1848.tape_ptr == length(local.iter_1848.tape) - 1 ? 0 : local.iter_1848.tape_ptr + 1
        : local.iter_1848.tape_ptr)

    code_ptr = 1 + (
      local.curr_1849.code == "["
        ? local.iter_1848.tape[local.iter_1848.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1848.code_ptr)] : local.iter_1848.code_ptr :
      local.curr_1849.code == "]"
        ? local.iter_1848.tape[local.iter_1848.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1848.code_ptr)] : local.iter_1848.code_ptr
        : local.iter_1848.code_ptr)

    steps_taken = 1 + local.iter_1848.steps_taken
  }
}

locals {
  end_of_code_1850 = try(local.iter_1849.code_ptr >= length(var.code), true)

  curr_1850 = local.end_of_code_1850 ? null : {
    code = substr(var.code, local.iter_1849.code_ptr, 1)
    input = substr(var.code, local.iter_1849.code_ptr, 1) == "," ? substr(local.iter_1849.input, 0, 1) : null
  }

  iter_1850 = local.end_of_code_1850 ? local.iter_1849 : {
    input = (local.curr_1850.code == ","
      ? substr(local.iter_1849.input, 1, -1)
      : local.iter_1849.input)

    output = (local.curr_1850.code == "."
      ? "${local.iter_1849.output}${jsondecode(format("\"\\u%04x\"", local.iter_1849.tape[local.iter_1849.tape_ptr]))}"
      : local.iter_1849.output)
    
    tape = (
      local.curr_1850.code == "+"
        ? [for i, b in local.iter_1849.tape : (i == local.iter_1849.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1850.code == "-"
        ? [for i, b in local.iter_1849.tape : (i == local.iter_1849.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1850.code == ","
        ? [for i, b in local.iter_1849.tape : (i == local.iter_1849.tape_ptr ? local.ascii_lookup[local.curr_1850.input] : b)]
        : local.iter_1849.tape)

    tape_ptr = (
      local.curr_1850.code == "<"
        ? local.iter_1849.tape_ptr == 0 ? length(local.iter_1849.tape) - 1 : local.iter_1849.tape_ptr - 1 :
      local.curr_1850.code == ">"
        ? local.iter_1849.tape_ptr == length(local.iter_1849.tape) - 1 ? 0 : local.iter_1849.tape_ptr + 1
        : local.iter_1849.tape_ptr)

    code_ptr = 1 + (
      local.curr_1850.code == "["
        ? local.iter_1849.tape[local.iter_1849.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1849.code_ptr)] : local.iter_1849.code_ptr :
      local.curr_1850.code == "]"
        ? local.iter_1849.tape[local.iter_1849.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1849.code_ptr)] : local.iter_1849.code_ptr
        : local.iter_1849.code_ptr)

    steps_taken = 1 + local.iter_1849.steps_taken
  }
}

locals {
  end_of_code_1851 = try(local.iter_1850.code_ptr >= length(var.code), true)

  curr_1851 = local.end_of_code_1851 ? null : {
    code = substr(var.code, local.iter_1850.code_ptr, 1)
    input = substr(var.code, local.iter_1850.code_ptr, 1) == "," ? substr(local.iter_1850.input, 0, 1) : null
  }

  iter_1851 = local.end_of_code_1851 ? local.iter_1850 : {
    input = (local.curr_1851.code == ","
      ? substr(local.iter_1850.input, 1, -1)
      : local.iter_1850.input)

    output = (local.curr_1851.code == "."
      ? "${local.iter_1850.output}${jsondecode(format("\"\\u%04x\"", local.iter_1850.tape[local.iter_1850.tape_ptr]))}"
      : local.iter_1850.output)
    
    tape = (
      local.curr_1851.code == "+"
        ? [for i, b in local.iter_1850.tape : (i == local.iter_1850.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1851.code == "-"
        ? [for i, b in local.iter_1850.tape : (i == local.iter_1850.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1851.code == ","
        ? [for i, b in local.iter_1850.tape : (i == local.iter_1850.tape_ptr ? local.ascii_lookup[local.curr_1851.input] : b)]
        : local.iter_1850.tape)

    tape_ptr = (
      local.curr_1851.code == "<"
        ? local.iter_1850.tape_ptr == 0 ? length(local.iter_1850.tape) - 1 : local.iter_1850.tape_ptr - 1 :
      local.curr_1851.code == ">"
        ? local.iter_1850.tape_ptr == length(local.iter_1850.tape) - 1 ? 0 : local.iter_1850.tape_ptr + 1
        : local.iter_1850.tape_ptr)

    code_ptr = 1 + (
      local.curr_1851.code == "["
        ? local.iter_1850.tape[local.iter_1850.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1850.code_ptr)] : local.iter_1850.code_ptr :
      local.curr_1851.code == "]"
        ? local.iter_1850.tape[local.iter_1850.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1850.code_ptr)] : local.iter_1850.code_ptr
        : local.iter_1850.code_ptr)

    steps_taken = 1 + local.iter_1850.steps_taken
  }
}

locals {
  end_of_code_1852 = try(local.iter_1851.code_ptr >= length(var.code), true)

  curr_1852 = local.end_of_code_1852 ? null : {
    code = substr(var.code, local.iter_1851.code_ptr, 1)
    input = substr(var.code, local.iter_1851.code_ptr, 1) == "," ? substr(local.iter_1851.input, 0, 1) : null
  }

  iter_1852 = local.end_of_code_1852 ? local.iter_1851 : {
    input = (local.curr_1852.code == ","
      ? substr(local.iter_1851.input, 1, -1)
      : local.iter_1851.input)

    output = (local.curr_1852.code == "."
      ? "${local.iter_1851.output}${jsondecode(format("\"\\u%04x\"", local.iter_1851.tape[local.iter_1851.tape_ptr]))}"
      : local.iter_1851.output)
    
    tape = (
      local.curr_1852.code == "+"
        ? [for i, b in local.iter_1851.tape : (i == local.iter_1851.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1852.code == "-"
        ? [for i, b in local.iter_1851.tape : (i == local.iter_1851.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1852.code == ","
        ? [for i, b in local.iter_1851.tape : (i == local.iter_1851.tape_ptr ? local.ascii_lookup[local.curr_1852.input] : b)]
        : local.iter_1851.tape)

    tape_ptr = (
      local.curr_1852.code == "<"
        ? local.iter_1851.tape_ptr == 0 ? length(local.iter_1851.tape) - 1 : local.iter_1851.tape_ptr - 1 :
      local.curr_1852.code == ">"
        ? local.iter_1851.tape_ptr == length(local.iter_1851.tape) - 1 ? 0 : local.iter_1851.tape_ptr + 1
        : local.iter_1851.tape_ptr)

    code_ptr = 1 + (
      local.curr_1852.code == "["
        ? local.iter_1851.tape[local.iter_1851.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1851.code_ptr)] : local.iter_1851.code_ptr :
      local.curr_1852.code == "]"
        ? local.iter_1851.tape[local.iter_1851.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1851.code_ptr)] : local.iter_1851.code_ptr
        : local.iter_1851.code_ptr)

    steps_taken = 1 + local.iter_1851.steps_taken
  }
}

locals {
  end_of_code_1853 = try(local.iter_1852.code_ptr >= length(var.code), true)

  curr_1853 = local.end_of_code_1853 ? null : {
    code = substr(var.code, local.iter_1852.code_ptr, 1)
    input = substr(var.code, local.iter_1852.code_ptr, 1) == "," ? substr(local.iter_1852.input, 0, 1) : null
  }

  iter_1853 = local.end_of_code_1853 ? local.iter_1852 : {
    input = (local.curr_1853.code == ","
      ? substr(local.iter_1852.input, 1, -1)
      : local.iter_1852.input)

    output = (local.curr_1853.code == "."
      ? "${local.iter_1852.output}${jsondecode(format("\"\\u%04x\"", local.iter_1852.tape[local.iter_1852.tape_ptr]))}"
      : local.iter_1852.output)
    
    tape = (
      local.curr_1853.code == "+"
        ? [for i, b in local.iter_1852.tape : (i == local.iter_1852.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1853.code == "-"
        ? [for i, b in local.iter_1852.tape : (i == local.iter_1852.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1853.code == ","
        ? [for i, b in local.iter_1852.tape : (i == local.iter_1852.tape_ptr ? local.ascii_lookup[local.curr_1853.input] : b)]
        : local.iter_1852.tape)

    tape_ptr = (
      local.curr_1853.code == "<"
        ? local.iter_1852.tape_ptr == 0 ? length(local.iter_1852.tape) - 1 : local.iter_1852.tape_ptr - 1 :
      local.curr_1853.code == ">"
        ? local.iter_1852.tape_ptr == length(local.iter_1852.tape) - 1 ? 0 : local.iter_1852.tape_ptr + 1
        : local.iter_1852.tape_ptr)

    code_ptr = 1 + (
      local.curr_1853.code == "["
        ? local.iter_1852.tape[local.iter_1852.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1852.code_ptr)] : local.iter_1852.code_ptr :
      local.curr_1853.code == "]"
        ? local.iter_1852.tape[local.iter_1852.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1852.code_ptr)] : local.iter_1852.code_ptr
        : local.iter_1852.code_ptr)

    steps_taken = 1 + local.iter_1852.steps_taken
  }
}

locals {
  end_of_code_1854 = try(local.iter_1853.code_ptr >= length(var.code), true)

  curr_1854 = local.end_of_code_1854 ? null : {
    code = substr(var.code, local.iter_1853.code_ptr, 1)
    input = substr(var.code, local.iter_1853.code_ptr, 1) == "," ? substr(local.iter_1853.input, 0, 1) : null
  }

  iter_1854 = local.end_of_code_1854 ? local.iter_1853 : {
    input = (local.curr_1854.code == ","
      ? substr(local.iter_1853.input, 1, -1)
      : local.iter_1853.input)

    output = (local.curr_1854.code == "."
      ? "${local.iter_1853.output}${jsondecode(format("\"\\u%04x\"", local.iter_1853.tape[local.iter_1853.tape_ptr]))}"
      : local.iter_1853.output)
    
    tape = (
      local.curr_1854.code == "+"
        ? [for i, b in local.iter_1853.tape : (i == local.iter_1853.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1854.code == "-"
        ? [for i, b in local.iter_1853.tape : (i == local.iter_1853.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1854.code == ","
        ? [for i, b in local.iter_1853.tape : (i == local.iter_1853.tape_ptr ? local.ascii_lookup[local.curr_1854.input] : b)]
        : local.iter_1853.tape)

    tape_ptr = (
      local.curr_1854.code == "<"
        ? local.iter_1853.tape_ptr == 0 ? length(local.iter_1853.tape) - 1 : local.iter_1853.tape_ptr - 1 :
      local.curr_1854.code == ">"
        ? local.iter_1853.tape_ptr == length(local.iter_1853.tape) - 1 ? 0 : local.iter_1853.tape_ptr + 1
        : local.iter_1853.tape_ptr)

    code_ptr = 1 + (
      local.curr_1854.code == "["
        ? local.iter_1853.tape[local.iter_1853.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1853.code_ptr)] : local.iter_1853.code_ptr :
      local.curr_1854.code == "]"
        ? local.iter_1853.tape[local.iter_1853.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1853.code_ptr)] : local.iter_1853.code_ptr
        : local.iter_1853.code_ptr)

    steps_taken = 1 + local.iter_1853.steps_taken
  }
}

locals {
  end_of_code_1855 = try(local.iter_1854.code_ptr >= length(var.code), true)

  curr_1855 = local.end_of_code_1855 ? null : {
    code = substr(var.code, local.iter_1854.code_ptr, 1)
    input = substr(var.code, local.iter_1854.code_ptr, 1) == "," ? substr(local.iter_1854.input, 0, 1) : null
  }

  iter_1855 = local.end_of_code_1855 ? local.iter_1854 : {
    input = (local.curr_1855.code == ","
      ? substr(local.iter_1854.input, 1, -1)
      : local.iter_1854.input)

    output = (local.curr_1855.code == "."
      ? "${local.iter_1854.output}${jsondecode(format("\"\\u%04x\"", local.iter_1854.tape[local.iter_1854.tape_ptr]))}"
      : local.iter_1854.output)
    
    tape = (
      local.curr_1855.code == "+"
        ? [for i, b in local.iter_1854.tape : (i == local.iter_1854.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1855.code == "-"
        ? [for i, b in local.iter_1854.tape : (i == local.iter_1854.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1855.code == ","
        ? [for i, b in local.iter_1854.tape : (i == local.iter_1854.tape_ptr ? local.ascii_lookup[local.curr_1855.input] : b)]
        : local.iter_1854.tape)

    tape_ptr = (
      local.curr_1855.code == "<"
        ? local.iter_1854.tape_ptr == 0 ? length(local.iter_1854.tape) - 1 : local.iter_1854.tape_ptr - 1 :
      local.curr_1855.code == ">"
        ? local.iter_1854.tape_ptr == length(local.iter_1854.tape) - 1 ? 0 : local.iter_1854.tape_ptr + 1
        : local.iter_1854.tape_ptr)

    code_ptr = 1 + (
      local.curr_1855.code == "["
        ? local.iter_1854.tape[local.iter_1854.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1854.code_ptr)] : local.iter_1854.code_ptr :
      local.curr_1855.code == "]"
        ? local.iter_1854.tape[local.iter_1854.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1854.code_ptr)] : local.iter_1854.code_ptr
        : local.iter_1854.code_ptr)

    steps_taken = 1 + local.iter_1854.steps_taken
  }
}

locals {
  end_of_code_1856 = try(local.iter_1855.code_ptr >= length(var.code), true)

  curr_1856 = local.end_of_code_1856 ? null : {
    code = substr(var.code, local.iter_1855.code_ptr, 1)
    input = substr(var.code, local.iter_1855.code_ptr, 1) == "," ? substr(local.iter_1855.input, 0, 1) : null
  }

  iter_1856 = local.end_of_code_1856 ? local.iter_1855 : {
    input = (local.curr_1856.code == ","
      ? substr(local.iter_1855.input, 1, -1)
      : local.iter_1855.input)

    output = (local.curr_1856.code == "."
      ? "${local.iter_1855.output}${jsondecode(format("\"\\u%04x\"", local.iter_1855.tape[local.iter_1855.tape_ptr]))}"
      : local.iter_1855.output)
    
    tape = (
      local.curr_1856.code == "+"
        ? [for i, b in local.iter_1855.tape : (i == local.iter_1855.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1856.code == "-"
        ? [for i, b in local.iter_1855.tape : (i == local.iter_1855.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1856.code == ","
        ? [for i, b in local.iter_1855.tape : (i == local.iter_1855.tape_ptr ? local.ascii_lookup[local.curr_1856.input] : b)]
        : local.iter_1855.tape)

    tape_ptr = (
      local.curr_1856.code == "<"
        ? local.iter_1855.tape_ptr == 0 ? length(local.iter_1855.tape) - 1 : local.iter_1855.tape_ptr - 1 :
      local.curr_1856.code == ">"
        ? local.iter_1855.tape_ptr == length(local.iter_1855.tape) - 1 ? 0 : local.iter_1855.tape_ptr + 1
        : local.iter_1855.tape_ptr)

    code_ptr = 1 + (
      local.curr_1856.code == "["
        ? local.iter_1855.tape[local.iter_1855.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1855.code_ptr)] : local.iter_1855.code_ptr :
      local.curr_1856.code == "]"
        ? local.iter_1855.tape[local.iter_1855.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1855.code_ptr)] : local.iter_1855.code_ptr
        : local.iter_1855.code_ptr)

    steps_taken = 1 + local.iter_1855.steps_taken
  }
}

locals {
  end_of_code_1857 = try(local.iter_1856.code_ptr >= length(var.code), true)

  curr_1857 = local.end_of_code_1857 ? null : {
    code = substr(var.code, local.iter_1856.code_ptr, 1)
    input = substr(var.code, local.iter_1856.code_ptr, 1) == "," ? substr(local.iter_1856.input, 0, 1) : null
  }

  iter_1857 = local.end_of_code_1857 ? local.iter_1856 : {
    input = (local.curr_1857.code == ","
      ? substr(local.iter_1856.input, 1, -1)
      : local.iter_1856.input)

    output = (local.curr_1857.code == "."
      ? "${local.iter_1856.output}${jsondecode(format("\"\\u%04x\"", local.iter_1856.tape[local.iter_1856.tape_ptr]))}"
      : local.iter_1856.output)
    
    tape = (
      local.curr_1857.code == "+"
        ? [for i, b in local.iter_1856.tape : (i == local.iter_1856.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1857.code == "-"
        ? [for i, b in local.iter_1856.tape : (i == local.iter_1856.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1857.code == ","
        ? [for i, b in local.iter_1856.tape : (i == local.iter_1856.tape_ptr ? local.ascii_lookup[local.curr_1857.input] : b)]
        : local.iter_1856.tape)

    tape_ptr = (
      local.curr_1857.code == "<"
        ? local.iter_1856.tape_ptr == 0 ? length(local.iter_1856.tape) - 1 : local.iter_1856.tape_ptr - 1 :
      local.curr_1857.code == ">"
        ? local.iter_1856.tape_ptr == length(local.iter_1856.tape) - 1 ? 0 : local.iter_1856.tape_ptr + 1
        : local.iter_1856.tape_ptr)

    code_ptr = 1 + (
      local.curr_1857.code == "["
        ? local.iter_1856.tape[local.iter_1856.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1856.code_ptr)] : local.iter_1856.code_ptr :
      local.curr_1857.code == "]"
        ? local.iter_1856.tape[local.iter_1856.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1856.code_ptr)] : local.iter_1856.code_ptr
        : local.iter_1856.code_ptr)

    steps_taken = 1 + local.iter_1856.steps_taken
  }
}

locals {
  end_of_code_1858 = try(local.iter_1857.code_ptr >= length(var.code), true)

  curr_1858 = local.end_of_code_1858 ? null : {
    code = substr(var.code, local.iter_1857.code_ptr, 1)
    input = substr(var.code, local.iter_1857.code_ptr, 1) == "," ? substr(local.iter_1857.input, 0, 1) : null
  }

  iter_1858 = local.end_of_code_1858 ? local.iter_1857 : {
    input = (local.curr_1858.code == ","
      ? substr(local.iter_1857.input, 1, -1)
      : local.iter_1857.input)

    output = (local.curr_1858.code == "."
      ? "${local.iter_1857.output}${jsondecode(format("\"\\u%04x\"", local.iter_1857.tape[local.iter_1857.tape_ptr]))}"
      : local.iter_1857.output)
    
    tape = (
      local.curr_1858.code == "+"
        ? [for i, b in local.iter_1857.tape : (i == local.iter_1857.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1858.code == "-"
        ? [for i, b in local.iter_1857.tape : (i == local.iter_1857.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1858.code == ","
        ? [for i, b in local.iter_1857.tape : (i == local.iter_1857.tape_ptr ? local.ascii_lookup[local.curr_1858.input] : b)]
        : local.iter_1857.tape)

    tape_ptr = (
      local.curr_1858.code == "<"
        ? local.iter_1857.tape_ptr == 0 ? length(local.iter_1857.tape) - 1 : local.iter_1857.tape_ptr - 1 :
      local.curr_1858.code == ">"
        ? local.iter_1857.tape_ptr == length(local.iter_1857.tape) - 1 ? 0 : local.iter_1857.tape_ptr + 1
        : local.iter_1857.tape_ptr)

    code_ptr = 1 + (
      local.curr_1858.code == "["
        ? local.iter_1857.tape[local.iter_1857.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1857.code_ptr)] : local.iter_1857.code_ptr :
      local.curr_1858.code == "]"
        ? local.iter_1857.tape[local.iter_1857.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1857.code_ptr)] : local.iter_1857.code_ptr
        : local.iter_1857.code_ptr)

    steps_taken = 1 + local.iter_1857.steps_taken
  }
}

locals {
  end_of_code_1859 = try(local.iter_1858.code_ptr >= length(var.code), true)

  curr_1859 = local.end_of_code_1859 ? null : {
    code = substr(var.code, local.iter_1858.code_ptr, 1)
    input = substr(var.code, local.iter_1858.code_ptr, 1) == "," ? substr(local.iter_1858.input, 0, 1) : null
  }

  iter_1859 = local.end_of_code_1859 ? local.iter_1858 : {
    input = (local.curr_1859.code == ","
      ? substr(local.iter_1858.input, 1, -1)
      : local.iter_1858.input)

    output = (local.curr_1859.code == "."
      ? "${local.iter_1858.output}${jsondecode(format("\"\\u%04x\"", local.iter_1858.tape[local.iter_1858.tape_ptr]))}"
      : local.iter_1858.output)
    
    tape = (
      local.curr_1859.code == "+"
        ? [for i, b in local.iter_1858.tape : (i == local.iter_1858.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1859.code == "-"
        ? [for i, b in local.iter_1858.tape : (i == local.iter_1858.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1859.code == ","
        ? [for i, b in local.iter_1858.tape : (i == local.iter_1858.tape_ptr ? local.ascii_lookup[local.curr_1859.input] : b)]
        : local.iter_1858.tape)

    tape_ptr = (
      local.curr_1859.code == "<"
        ? local.iter_1858.tape_ptr == 0 ? length(local.iter_1858.tape) - 1 : local.iter_1858.tape_ptr - 1 :
      local.curr_1859.code == ">"
        ? local.iter_1858.tape_ptr == length(local.iter_1858.tape) - 1 ? 0 : local.iter_1858.tape_ptr + 1
        : local.iter_1858.tape_ptr)

    code_ptr = 1 + (
      local.curr_1859.code == "["
        ? local.iter_1858.tape[local.iter_1858.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1858.code_ptr)] : local.iter_1858.code_ptr :
      local.curr_1859.code == "]"
        ? local.iter_1858.tape[local.iter_1858.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1858.code_ptr)] : local.iter_1858.code_ptr
        : local.iter_1858.code_ptr)

    steps_taken = 1 + local.iter_1858.steps_taken
  }
}

locals {
  end_of_code_1860 = try(local.iter_1859.code_ptr >= length(var.code), true)

  curr_1860 = local.end_of_code_1860 ? null : {
    code = substr(var.code, local.iter_1859.code_ptr, 1)
    input = substr(var.code, local.iter_1859.code_ptr, 1) == "," ? substr(local.iter_1859.input, 0, 1) : null
  }

  iter_1860 = local.end_of_code_1860 ? local.iter_1859 : {
    input = (local.curr_1860.code == ","
      ? substr(local.iter_1859.input, 1, -1)
      : local.iter_1859.input)

    output = (local.curr_1860.code == "."
      ? "${local.iter_1859.output}${jsondecode(format("\"\\u%04x\"", local.iter_1859.tape[local.iter_1859.tape_ptr]))}"
      : local.iter_1859.output)
    
    tape = (
      local.curr_1860.code == "+"
        ? [for i, b in local.iter_1859.tape : (i == local.iter_1859.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1860.code == "-"
        ? [for i, b in local.iter_1859.tape : (i == local.iter_1859.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1860.code == ","
        ? [for i, b in local.iter_1859.tape : (i == local.iter_1859.tape_ptr ? local.ascii_lookup[local.curr_1860.input] : b)]
        : local.iter_1859.tape)

    tape_ptr = (
      local.curr_1860.code == "<"
        ? local.iter_1859.tape_ptr == 0 ? length(local.iter_1859.tape) - 1 : local.iter_1859.tape_ptr - 1 :
      local.curr_1860.code == ">"
        ? local.iter_1859.tape_ptr == length(local.iter_1859.tape) - 1 ? 0 : local.iter_1859.tape_ptr + 1
        : local.iter_1859.tape_ptr)

    code_ptr = 1 + (
      local.curr_1860.code == "["
        ? local.iter_1859.tape[local.iter_1859.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1859.code_ptr)] : local.iter_1859.code_ptr :
      local.curr_1860.code == "]"
        ? local.iter_1859.tape[local.iter_1859.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1859.code_ptr)] : local.iter_1859.code_ptr
        : local.iter_1859.code_ptr)

    steps_taken = 1 + local.iter_1859.steps_taken
  }
}

locals {
  end_of_code_1861 = try(local.iter_1860.code_ptr >= length(var.code), true)

  curr_1861 = local.end_of_code_1861 ? null : {
    code = substr(var.code, local.iter_1860.code_ptr, 1)
    input = substr(var.code, local.iter_1860.code_ptr, 1) == "," ? substr(local.iter_1860.input, 0, 1) : null
  }

  iter_1861 = local.end_of_code_1861 ? local.iter_1860 : {
    input = (local.curr_1861.code == ","
      ? substr(local.iter_1860.input, 1, -1)
      : local.iter_1860.input)

    output = (local.curr_1861.code == "."
      ? "${local.iter_1860.output}${jsondecode(format("\"\\u%04x\"", local.iter_1860.tape[local.iter_1860.tape_ptr]))}"
      : local.iter_1860.output)
    
    tape = (
      local.curr_1861.code == "+"
        ? [for i, b in local.iter_1860.tape : (i == local.iter_1860.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1861.code == "-"
        ? [for i, b in local.iter_1860.tape : (i == local.iter_1860.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1861.code == ","
        ? [for i, b in local.iter_1860.tape : (i == local.iter_1860.tape_ptr ? local.ascii_lookup[local.curr_1861.input] : b)]
        : local.iter_1860.tape)

    tape_ptr = (
      local.curr_1861.code == "<"
        ? local.iter_1860.tape_ptr == 0 ? length(local.iter_1860.tape) - 1 : local.iter_1860.tape_ptr - 1 :
      local.curr_1861.code == ">"
        ? local.iter_1860.tape_ptr == length(local.iter_1860.tape) - 1 ? 0 : local.iter_1860.tape_ptr + 1
        : local.iter_1860.tape_ptr)

    code_ptr = 1 + (
      local.curr_1861.code == "["
        ? local.iter_1860.tape[local.iter_1860.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1860.code_ptr)] : local.iter_1860.code_ptr :
      local.curr_1861.code == "]"
        ? local.iter_1860.tape[local.iter_1860.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1860.code_ptr)] : local.iter_1860.code_ptr
        : local.iter_1860.code_ptr)

    steps_taken = 1 + local.iter_1860.steps_taken
  }
}

locals {
  end_of_code_1862 = try(local.iter_1861.code_ptr >= length(var.code), true)

  curr_1862 = local.end_of_code_1862 ? null : {
    code = substr(var.code, local.iter_1861.code_ptr, 1)
    input = substr(var.code, local.iter_1861.code_ptr, 1) == "," ? substr(local.iter_1861.input, 0, 1) : null
  }

  iter_1862 = local.end_of_code_1862 ? local.iter_1861 : {
    input = (local.curr_1862.code == ","
      ? substr(local.iter_1861.input, 1, -1)
      : local.iter_1861.input)

    output = (local.curr_1862.code == "."
      ? "${local.iter_1861.output}${jsondecode(format("\"\\u%04x\"", local.iter_1861.tape[local.iter_1861.tape_ptr]))}"
      : local.iter_1861.output)
    
    tape = (
      local.curr_1862.code == "+"
        ? [for i, b in local.iter_1861.tape : (i == local.iter_1861.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1862.code == "-"
        ? [for i, b in local.iter_1861.tape : (i == local.iter_1861.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1862.code == ","
        ? [for i, b in local.iter_1861.tape : (i == local.iter_1861.tape_ptr ? local.ascii_lookup[local.curr_1862.input] : b)]
        : local.iter_1861.tape)

    tape_ptr = (
      local.curr_1862.code == "<"
        ? local.iter_1861.tape_ptr == 0 ? length(local.iter_1861.tape) - 1 : local.iter_1861.tape_ptr - 1 :
      local.curr_1862.code == ">"
        ? local.iter_1861.tape_ptr == length(local.iter_1861.tape) - 1 ? 0 : local.iter_1861.tape_ptr + 1
        : local.iter_1861.tape_ptr)

    code_ptr = 1 + (
      local.curr_1862.code == "["
        ? local.iter_1861.tape[local.iter_1861.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1861.code_ptr)] : local.iter_1861.code_ptr :
      local.curr_1862.code == "]"
        ? local.iter_1861.tape[local.iter_1861.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1861.code_ptr)] : local.iter_1861.code_ptr
        : local.iter_1861.code_ptr)

    steps_taken = 1 + local.iter_1861.steps_taken
  }
}

locals {
  end_of_code_1863 = try(local.iter_1862.code_ptr >= length(var.code), true)

  curr_1863 = local.end_of_code_1863 ? null : {
    code = substr(var.code, local.iter_1862.code_ptr, 1)
    input = substr(var.code, local.iter_1862.code_ptr, 1) == "," ? substr(local.iter_1862.input, 0, 1) : null
  }

  iter_1863 = local.end_of_code_1863 ? local.iter_1862 : {
    input = (local.curr_1863.code == ","
      ? substr(local.iter_1862.input, 1, -1)
      : local.iter_1862.input)

    output = (local.curr_1863.code == "."
      ? "${local.iter_1862.output}${jsondecode(format("\"\\u%04x\"", local.iter_1862.tape[local.iter_1862.tape_ptr]))}"
      : local.iter_1862.output)
    
    tape = (
      local.curr_1863.code == "+"
        ? [for i, b in local.iter_1862.tape : (i == local.iter_1862.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1863.code == "-"
        ? [for i, b in local.iter_1862.tape : (i == local.iter_1862.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1863.code == ","
        ? [for i, b in local.iter_1862.tape : (i == local.iter_1862.tape_ptr ? local.ascii_lookup[local.curr_1863.input] : b)]
        : local.iter_1862.tape)

    tape_ptr = (
      local.curr_1863.code == "<"
        ? local.iter_1862.tape_ptr == 0 ? length(local.iter_1862.tape) - 1 : local.iter_1862.tape_ptr - 1 :
      local.curr_1863.code == ">"
        ? local.iter_1862.tape_ptr == length(local.iter_1862.tape) - 1 ? 0 : local.iter_1862.tape_ptr + 1
        : local.iter_1862.tape_ptr)

    code_ptr = 1 + (
      local.curr_1863.code == "["
        ? local.iter_1862.tape[local.iter_1862.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1862.code_ptr)] : local.iter_1862.code_ptr :
      local.curr_1863.code == "]"
        ? local.iter_1862.tape[local.iter_1862.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1862.code_ptr)] : local.iter_1862.code_ptr
        : local.iter_1862.code_ptr)

    steps_taken = 1 + local.iter_1862.steps_taken
  }
}

locals {
  end_of_code_1864 = try(local.iter_1863.code_ptr >= length(var.code), true)

  curr_1864 = local.end_of_code_1864 ? null : {
    code = substr(var.code, local.iter_1863.code_ptr, 1)
    input = substr(var.code, local.iter_1863.code_ptr, 1) == "," ? substr(local.iter_1863.input, 0, 1) : null
  }

  iter_1864 = local.end_of_code_1864 ? local.iter_1863 : {
    input = (local.curr_1864.code == ","
      ? substr(local.iter_1863.input, 1, -1)
      : local.iter_1863.input)

    output = (local.curr_1864.code == "."
      ? "${local.iter_1863.output}${jsondecode(format("\"\\u%04x\"", local.iter_1863.tape[local.iter_1863.tape_ptr]))}"
      : local.iter_1863.output)
    
    tape = (
      local.curr_1864.code == "+"
        ? [for i, b in local.iter_1863.tape : (i == local.iter_1863.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1864.code == "-"
        ? [for i, b in local.iter_1863.tape : (i == local.iter_1863.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1864.code == ","
        ? [for i, b in local.iter_1863.tape : (i == local.iter_1863.tape_ptr ? local.ascii_lookup[local.curr_1864.input] : b)]
        : local.iter_1863.tape)

    tape_ptr = (
      local.curr_1864.code == "<"
        ? local.iter_1863.tape_ptr == 0 ? length(local.iter_1863.tape) - 1 : local.iter_1863.tape_ptr - 1 :
      local.curr_1864.code == ">"
        ? local.iter_1863.tape_ptr == length(local.iter_1863.tape) - 1 ? 0 : local.iter_1863.tape_ptr + 1
        : local.iter_1863.tape_ptr)

    code_ptr = 1 + (
      local.curr_1864.code == "["
        ? local.iter_1863.tape[local.iter_1863.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1863.code_ptr)] : local.iter_1863.code_ptr :
      local.curr_1864.code == "]"
        ? local.iter_1863.tape[local.iter_1863.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1863.code_ptr)] : local.iter_1863.code_ptr
        : local.iter_1863.code_ptr)

    steps_taken = 1 + local.iter_1863.steps_taken
  }
}

locals {
  end_of_code_1865 = try(local.iter_1864.code_ptr >= length(var.code), true)

  curr_1865 = local.end_of_code_1865 ? null : {
    code = substr(var.code, local.iter_1864.code_ptr, 1)
    input = substr(var.code, local.iter_1864.code_ptr, 1) == "," ? substr(local.iter_1864.input, 0, 1) : null
  }

  iter_1865 = local.end_of_code_1865 ? local.iter_1864 : {
    input = (local.curr_1865.code == ","
      ? substr(local.iter_1864.input, 1, -1)
      : local.iter_1864.input)

    output = (local.curr_1865.code == "."
      ? "${local.iter_1864.output}${jsondecode(format("\"\\u%04x\"", local.iter_1864.tape[local.iter_1864.tape_ptr]))}"
      : local.iter_1864.output)
    
    tape = (
      local.curr_1865.code == "+"
        ? [for i, b in local.iter_1864.tape : (i == local.iter_1864.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1865.code == "-"
        ? [for i, b in local.iter_1864.tape : (i == local.iter_1864.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1865.code == ","
        ? [for i, b in local.iter_1864.tape : (i == local.iter_1864.tape_ptr ? local.ascii_lookup[local.curr_1865.input] : b)]
        : local.iter_1864.tape)

    tape_ptr = (
      local.curr_1865.code == "<"
        ? local.iter_1864.tape_ptr == 0 ? length(local.iter_1864.tape) - 1 : local.iter_1864.tape_ptr - 1 :
      local.curr_1865.code == ">"
        ? local.iter_1864.tape_ptr == length(local.iter_1864.tape) - 1 ? 0 : local.iter_1864.tape_ptr + 1
        : local.iter_1864.tape_ptr)

    code_ptr = 1 + (
      local.curr_1865.code == "["
        ? local.iter_1864.tape[local.iter_1864.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1864.code_ptr)] : local.iter_1864.code_ptr :
      local.curr_1865.code == "]"
        ? local.iter_1864.tape[local.iter_1864.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1864.code_ptr)] : local.iter_1864.code_ptr
        : local.iter_1864.code_ptr)

    steps_taken = 1 + local.iter_1864.steps_taken
  }
}

locals {
  end_of_code_1866 = try(local.iter_1865.code_ptr >= length(var.code), true)

  curr_1866 = local.end_of_code_1866 ? null : {
    code = substr(var.code, local.iter_1865.code_ptr, 1)
    input = substr(var.code, local.iter_1865.code_ptr, 1) == "," ? substr(local.iter_1865.input, 0, 1) : null
  }

  iter_1866 = local.end_of_code_1866 ? local.iter_1865 : {
    input = (local.curr_1866.code == ","
      ? substr(local.iter_1865.input, 1, -1)
      : local.iter_1865.input)

    output = (local.curr_1866.code == "."
      ? "${local.iter_1865.output}${jsondecode(format("\"\\u%04x\"", local.iter_1865.tape[local.iter_1865.tape_ptr]))}"
      : local.iter_1865.output)
    
    tape = (
      local.curr_1866.code == "+"
        ? [for i, b in local.iter_1865.tape : (i == local.iter_1865.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1866.code == "-"
        ? [for i, b in local.iter_1865.tape : (i == local.iter_1865.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1866.code == ","
        ? [for i, b in local.iter_1865.tape : (i == local.iter_1865.tape_ptr ? local.ascii_lookup[local.curr_1866.input] : b)]
        : local.iter_1865.tape)

    tape_ptr = (
      local.curr_1866.code == "<"
        ? local.iter_1865.tape_ptr == 0 ? length(local.iter_1865.tape) - 1 : local.iter_1865.tape_ptr - 1 :
      local.curr_1866.code == ">"
        ? local.iter_1865.tape_ptr == length(local.iter_1865.tape) - 1 ? 0 : local.iter_1865.tape_ptr + 1
        : local.iter_1865.tape_ptr)

    code_ptr = 1 + (
      local.curr_1866.code == "["
        ? local.iter_1865.tape[local.iter_1865.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1865.code_ptr)] : local.iter_1865.code_ptr :
      local.curr_1866.code == "]"
        ? local.iter_1865.tape[local.iter_1865.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1865.code_ptr)] : local.iter_1865.code_ptr
        : local.iter_1865.code_ptr)

    steps_taken = 1 + local.iter_1865.steps_taken
  }
}

locals {
  end_of_code_1867 = try(local.iter_1866.code_ptr >= length(var.code), true)

  curr_1867 = local.end_of_code_1867 ? null : {
    code = substr(var.code, local.iter_1866.code_ptr, 1)
    input = substr(var.code, local.iter_1866.code_ptr, 1) == "," ? substr(local.iter_1866.input, 0, 1) : null
  }

  iter_1867 = local.end_of_code_1867 ? local.iter_1866 : {
    input = (local.curr_1867.code == ","
      ? substr(local.iter_1866.input, 1, -1)
      : local.iter_1866.input)

    output = (local.curr_1867.code == "."
      ? "${local.iter_1866.output}${jsondecode(format("\"\\u%04x\"", local.iter_1866.tape[local.iter_1866.tape_ptr]))}"
      : local.iter_1866.output)
    
    tape = (
      local.curr_1867.code == "+"
        ? [for i, b in local.iter_1866.tape : (i == local.iter_1866.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1867.code == "-"
        ? [for i, b in local.iter_1866.tape : (i == local.iter_1866.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1867.code == ","
        ? [for i, b in local.iter_1866.tape : (i == local.iter_1866.tape_ptr ? local.ascii_lookup[local.curr_1867.input] : b)]
        : local.iter_1866.tape)

    tape_ptr = (
      local.curr_1867.code == "<"
        ? local.iter_1866.tape_ptr == 0 ? length(local.iter_1866.tape) - 1 : local.iter_1866.tape_ptr - 1 :
      local.curr_1867.code == ">"
        ? local.iter_1866.tape_ptr == length(local.iter_1866.tape) - 1 ? 0 : local.iter_1866.tape_ptr + 1
        : local.iter_1866.tape_ptr)

    code_ptr = 1 + (
      local.curr_1867.code == "["
        ? local.iter_1866.tape[local.iter_1866.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1866.code_ptr)] : local.iter_1866.code_ptr :
      local.curr_1867.code == "]"
        ? local.iter_1866.tape[local.iter_1866.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1866.code_ptr)] : local.iter_1866.code_ptr
        : local.iter_1866.code_ptr)

    steps_taken = 1 + local.iter_1866.steps_taken
  }
}

locals {
  end_of_code_1868 = try(local.iter_1867.code_ptr >= length(var.code), true)

  curr_1868 = local.end_of_code_1868 ? null : {
    code = substr(var.code, local.iter_1867.code_ptr, 1)
    input = substr(var.code, local.iter_1867.code_ptr, 1) == "," ? substr(local.iter_1867.input, 0, 1) : null
  }

  iter_1868 = local.end_of_code_1868 ? local.iter_1867 : {
    input = (local.curr_1868.code == ","
      ? substr(local.iter_1867.input, 1, -1)
      : local.iter_1867.input)

    output = (local.curr_1868.code == "."
      ? "${local.iter_1867.output}${jsondecode(format("\"\\u%04x\"", local.iter_1867.tape[local.iter_1867.tape_ptr]))}"
      : local.iter_1867.output)
    
    tape = (
      local.curr_1868.code == "+"
        ? [for i, b in local.iter_1867.tape : (i == local.iter_1867.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1868.code == "-"
        ? [for i, b in local.iter_1867.tape : (i == local.iter_1867.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1868.code == ","
        ? [for i, b in local.iter_1867.tape : (i == local.iter_1867.tape_ptr ? local.ascii_lookup[local.curr_1868.input] : b)]
        : local.iter_1867.tape)

    tape_ptr = (
      local.curr_1868.code == "<"
        ? local.iter_1867.tape_ptr == 0 ? length(local.iter_1867.tape) - 1 : local.iter_1867.tape_ptr - 1 :
      local.curr_1868.code == ">"
        ? local.iter_1867.tape_ptr == length(local.iter_1867.tape) - 1 ? 0 : local.iter_1867.tape_ptr + 1
        : local.iter_1867.tape_ptr)

    code_ptr = 1 + (
      local.curr_1868.code == "["
        ? local.iter_1867.tape[local.iter_1867.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1867.code_ptr)] : local.iter_1867.code_ptr :
      local.curr_1868.code == "]"
        ? local.iter_1867.tape[local.iter_1867.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1867.code_ptr)] : local.iter_1867.code_ptr
        : local.iter_1867.code_ptr)

    steps_taken = 1 + local.iter_1867.steps_taken
  }
}

locals {
  end_of_code_1869 = try(local.iter_1868.code_ptr >= length(var.code), true)

  curr_1869 = local.end_of_code_1869 ? null : {
    code = substr(var.code, local.iter_1868.code_ptr, 1)
    input = substr(var.code, local.iter_1868.code_ptr, 1) == "," ? substr(local.iter_1868.input, 0, 1) : null
  }

  iter_1869 = local.end_of_code_1869 ? local.iter_1868 : {
    input = (local.curr_1869.code == ","
      ? substr(local.iter_1868.input, 1, -1)
      : local.iter_1868.input)

    output = (local.curr_1869.code == "."
      ? "${local.iter_1868.output}${jsondecode(format("\"\\u%04x\"", local.iter_1868.tape[local.iter_1868.tape_ptr]))}"
      : local.iter_1868.output)
    
    tape = (
      local.curr_1869.code == "+"
        ? [for i, b in local.iter_1868.tape : (i == local.iter_1868.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1869.code == "-"
        ? [for i, b in local.iter_1868.tape : (i == local.iter_1868.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1869.code == ","
        ? [for i, b in local.iter_1868.tape : (i == local.iter_1868.tape_ptr ? local.ascii_lookup[local.curr_1869.input] : b)]
        : local.iter_1868.tape)

    tape_ptr = (
      local.curr_1869.code == "<"
        ? local.iter_1868.tape_ptr == 0 ? length(local.iter_1868.tape) - 1 : local.iter_1868.tape_ptr - 1 :
      local.curr_1869.code == ">"
        ? local.iter_1868.tape_ptr == length(local.iter_1868.tape) - 1 ? 0 : local.iter_1868.tape_ptr + 1
        : local.iter_1868.tape_ptr)

    code_ptr = 1 + (
      local.curr_1869.code == "["
        ? local.iter_1868.tape[local.iter_1868.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1868.code_ptr)] : local.iter_1868.code_ptr :
      local.curr_1869.code == "]"
        ? local.iter_1868.tape[local.iter_1868.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1868.code_ptr)] : local.iter_1868.code_ptr
        : local.iter_1868.code_ptr)

    steps_taken = 1 + local.iter_1868.steps_taken
  }
}

locals {
  end_of_code_1870 = try(local.iter_1869.code_ptr >= length(var.code), true)

  curr_1870 = local.end_of_code_1870 ? null : {
    code = substr(var.code, local.iter_1869.code_ptr, 1)
    input = substr(var.code, local.iter_1869.code_ptr, 1) == "," ? substr(local.iter_1869.input, 0, 1) : null
  }

  iter_1870 = local.end_of_code_1870 ? local.iter_1869 : {
    input = (local.curr_1870.code == ","
      ? substr(local.iter_1869.input, 1, -1)
      : local.iter_1869.input)

    output = (local.curr_1870.code == "."
      ? "${local.iter_1869.output}${jsondecode(format("\"\\u%04x\"", local.iter_1869.tape[local.iter_1869.tape_ptr]))}"
      : local.iter_1869.output)
    
    tape = (
      local.curr_1870.code == "+"
        ? [for i, b in local.iter_1869.tape : (i == local.iter_1869.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1870.code == "-"
        ? [for i, b in local.iter_1869.tape : (i == local.iter_1869.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1870.code == ","
        ? [for i, b in local.iter_1869.tape : (i == local.iter_1869.tape_ptr ? local.ascii_lookup[local.curr_1870.input] : b)]
        : local.iter_1869.tape)

    tape_ptr = (
      local.curr_1870.code == "<"
        ? local.iter_1869.tape_ptr == 0 ? length(local.iter_1869.tape) - 1 : local.iter_1869.tape_ptr - 1 :
      local.curr_1870.code == ">"
        ? local.iter_1869.tape_ptr == length(local.iter_1869.tape) - 1 ? 0 : local.iter_1869.tape_ptr + 1
        : local.iter_1869.tape_ptr)

    code_ptr = 1 + (
      local.curr_1870.code == "["
        ? local.iter_1869.tape[local.iter_1869.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1869.code_ptr)] : local.iter_1869.code_ptr :
      local.curr_1870.code == "]"
        ? local.iter_1869.tape[local.iter_1869.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1869.code_ptr)] : local.iter_1869.code_ptr
        : local.iter_1869.code_ptr)

    steps_taken = 1 + local.iter_1869.steps_taken
  }
}

locals {
  end_of_code_1871 = try(local.iter_1870.code_ptr >= length(var.code), true)

  curr_1871 = local.end_of_code_1871 ? null : {
    code = substr(var.code, local.iter_1870.code_ptr, 1)
    input = substr(var.code, local.iter_1870.code_ptr, 1) == "," ? substr(local.iter_1870.input, 0, 1) : null
  }

  iter_1871 = local.end_of_code_1871 ? local.iter_1870 : {
    input = (local.curr_1871.code == ","
      ? substr(local.iter_1870.input, 1, -1)
      : local.iter_1870.input)

    output = (local.curr_1871.code == "."
      ? "${local.iter_1870.output}${jsondecode(format("\"\\u%04x\"", local.iter_1870.tape[local.iter_1870.tape_ptr]))}"
      : local.iter_1870.output)
    
    tape = (
      local.curr_1871.code == "+"
        ? [for i, b in local.iter_1870.tape : (i == local.iter_1870.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1871.code == "-"
        ? [for i, b in local.iter_1870.tape : (i == local.iter_1870.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1871.code == ","
        ? [for i, b in local.iter_1870.tape : (i == local.iter_1870.tape_ptr ? local.ascii_lookup[local.curr_1871.input] : b)]
        : local.iter_1870.tape)

    tape_ptr = (
      local.curr_1871.code == "<"
        ? local.iter_1870.tape_ptr == 0 ? length(local.iter_1870.tape) - 1 : local.iter_1870.tape_ptr - 1 :
      local.curr_1871.code == ">"
        ? local.iter_1870.tape_ptr == length(local.iter_1870.tape) - 1 ? 0 : local.iter_1870.tape_ptr + 1
        : local.iter_1870.tape_ptr)

    code_ptr = 1 + (
      local.curr_1871.code == "["
        ? local.iter_1870.tape[local.iter_1870.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1870.code_ptr)] : local.iter_1870.code_ptr :
      local.curr_1871.code == "]"
        ? local.iter_1870.tape[local.iter_1870.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1870.code_ptr)] : local.iter_1870.code_ptr
        : local.iter_1870.code_ptr)

    steps_taken = 1 + local.iter_1870.steps_taken
  }
}

locals {
  end_of_code_1872 = try(local.iter_1871.code_ptr >= length(var.code), true)

  curr_1872 = local.end_of_code_1872 ? null : {
    code = substr(var.code, local.iter_1871.code_ptr, 1)
    input = substr(var.code, local.iter_1871.code_ptr, 1) == "," ? substr(local.iter_1871.input, 0, 1) : null
  }

  iter_1872 = local.end_of_code_1872 ? local.iter_1871 : {
    input = (local.curr_1872.code == ","
      ? substr(local.iter_1871.input, 1, -1)
      : local.iter_1871.input)

    output = (local.curr_1872.code == "."
      ? "${local.iter_1871.output}${jsondecode(format("\"\\u%04x\"", local.iter_1871.tape[local.iter_1871.tape_ptr]))}"
      : local.iter_1871.output)
    
    tape = (
      local.curr_1872.code == "+"
        ? [for i, b in local.iter_1871.tape : (i == local.iter_1871.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1872.code == "-"
        ? [for i, b in local.iter_1871.tape : (i == local.iter_1871.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1872.code == ","
        ? [for i, b in local.iter_1871.tape : (i == local.iter_1871.tape_ptr ? local.ascii_lookup[local.curr_1872.input] : b)]
        : local.iter_1871.tape)

    tape_ptr = (
      local.curr_1872.code == "<"
        ? local.iter_1871.tape_ptr == 0 ? length(local.iter_1871.tape) - 1 : local.iter_1871.tape_ptr - 1 :
      local.curr_1872.code == ">"
        ? local.iter_1871.tape_ptr == length(local.iter_1871.tape) - 1 ? 0 : local.iter_1871.tape_ptr + 1
        : local.iter_1871.tape_ptr)

    code_ptr = 1 + (
      local.curr_1872.code == "["
        ? local.iter_1871.tape[local.iter_1871.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1871.code_ptr)] : local.iter_1871.code_ptr :
      local.curr_1872.code == "]"
        ? local.iter_1871.tape[local.iter_1871.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1871.code_ptr)] : local.iter_1871.code_ptr
        : local.iter_1871.code_ptr)

    steps_taken = 1 + local.iter_1871.steps_taken
  }
}

locals {
  end_of_code_1873 = try(local.iter_1872.code_ptr >= length(var.code), true)

  curr_1873 = local.end_of_code_1873 ? null : {
    code = substr(var.code, local.iter_1872.code_ptr, 1)
    input = substr(var.code, local.iter_1872.code_ptr, 1) == "," ? substr(local.iter_1872.input, 0, 1) : null
  }

  iter_1873 = local.end_of_code_1873 ? local.iter_1872 : {
    input = (local.curr_1873.code == ","
      ? substr(local.iter_1872.input, 1, -1)
      : local.iter_1872.input)

    output = (local.curr_1873.code == "."
      ? "${local.iter_1872.output}${jsondecode(format("\"\\u%04x\"", local.iter_1872.tape[local.iter_1872.tape_ptr]))}"
      : local.iter_1872.output)
    
    tape = (
      local.curr_1873.code == "+"
        ? [for i, b in local.iter_1872.tape : (i == local.iter_1872.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1873.code == "-"
        ? [for i, b in local.iter_1872.tape : (i == local.iter_1872.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1873.code == ","
        ? [for i, b in local.iter_1872.tape : (i == local.iter_1872.tape_ptr ? local.ascii_lookup[local.curr_1873.input] : b)]
        : local.iter_1872.tape)

    tape_ptr = (
      local.curr_1873.code == "<"
        ? local.iter_1872.tape_ptr == 0 ? length(local.iter_1872.tape) - 1 : local.iter_1872.tape_ptr - 1 :
      local.curr_1873.code == ">"
        ? local.iter_1872.tape_ptr == length(local.iter_1872.tape) - 1 ? 0 : local.iter_1872.tape_ptr + 1
        : local.iter_1872.tape_ptr)

    code_ptr = 1 + (
      local.curr_1873.code == "["
        ? local.iter_1872.tape[local.iter_1872.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1872.code_ptr)] : local.iter_1872.code_ptr :
      local.curr_1873.code == "]"
        ? local.iter_1872.tape[local.iter_1872.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1872.code_ptr)] : local.iter_1872.code_ptr
        : local.iter_1872.code_ptr)

    steps_taken = 1 + local.iter_1872.steps_taken
  }
}

locals {
  end_of_code_1874 = try(local.iter_1873.code_ptr >= length(var.code), true)

  curr_1874 = local.end_of_code_1874 ? null : {
    code = substr(var.code, local.iter_1873.code_ptr, 1)
    input = substr(var.code, local.iter_1873.code_ptr, 1) == "," ? substr(local.iter_1873.input, 0, 1) : null
  }

  iter_1874 = local.end_of_code_1874 ? local.iter_1873 : {
    input = (local.curr_1874.code == ","
      ? substr(local.iter_1873.input, 1, -1)
      : local.iter_1873.input)

    output = (local.curr_1874.code == "."
      ? "${local.iter_1873.output}${jsondecode(format("\"\\u%04x\"", local.iter_1873.tape[local.iter_1873.tape_ptr]))}"
      : local.iter_1873.output)
    
    tape = (
      local.curr_1874.code == "+"
        ? [for i, b in local.iter_1873.tape : (i == local.iter_1873.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1874.code == "-"
        ? [for i, b in local.iter_1873.tape : (i == local.iter_1873.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1874.code == ","
        ? [for i, b in local.iter_1873.tape : (i == local.iter_1873.tape_ptr ? local.ascii_lookup[local.curr_1874.input] : b)]
        : local.iter_1873.tape)

    tape_ptr = (
      local.curr_1874.code == "<"
        ? local.iter_1873.tape_ptr == 0 ? length(local.iter_1873.tape) - 1 : local.iter_1873.tape_ptr - 1 :
      local.curr_1874.code == ">"
        ? local.iter_1873.tape_ptr == length(local.iter_1873.tape) - 1 ? 0 : local.iter_1873.tape_ptr + 1
        : local.iter_1873.tape_ptr)

    code_ptr = 1 + (
      local.curr_1874.code == "["
        ? local.iter_1873.tape[local.iter_1873.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1873.code_ptr)] : local.iter_1873.code_ptr :
      local.curr_1874.code == "]"
        ? local.iter_1873.tape[local.iter_1873.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1873.code_ptr)] : local.iter_1873.code_ptr
        : local.iter_1873.code_ptr)

    steps_taken = 1 + local.iter_1873.steps_taken
  }
}

locals {
  end_of_code_1875 = try(local.iter_1874.code_ptr >= length(var.code), true)

  curr_1875 = local.end_of_code_1875 ? null : {
    code = substr(var.code, local.iter_1874.code_ptr, 1)
    input = substr(var.code, local.iter_1874.code_ptr, 1) == "," ? substr(local.iter_1874.input, 0, 1) : null
  }

  iter_1875 = local.end_of_code_1875 ? local.iter_1874 : {
    input = (local.curr_1875.code == ","
      ? substr(local.iter_1874.input, 1, -1)
      : local.iter_1874.input)

    output = (local.curr_1875.code == "."
      ? "${local.iter_1874.output}${jsondecode(format("\"\\u%04x\"", local.iter_1874.tape[local.iter_1874.tape_ptr]))}"
      : local.iter_1874.output)
    
    tape = (
      local.curr_1875.code == "+"
        ? [for i, b in local.iter_1874.tape : (i == local.iter_1874.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1875.code == "-"
        ? [for i, b in local.iter_1874.tape : (i == local.iter_1874.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1875.code == ","
        ? [for i, b in local.iter_1874.tape : (i == local.iter_1874.tape_ptr ? local.ascii_lookup[local.curr_1875.input] : b)]
        : local.iter_1874.tape)

    tape_ptr = (
      local.curr_1875.code == "<"
        ? local.iter_1874.tape_ptr == 0 ? length(local.iter_1874.tape) - 1 : local.iter_1874.tape_ptr - 1 :
      local.curr_1875.code == ">"
        ? local.iter_1874.tape_ptr == length(local.iter_1874.tape) - 1 ? 0 : local.iter_1874.tape_ptr + 1
        : local.iter_1874.tape_ptr)

    code_ptr = 1 + (
      local.curr_1875.code == "["
        ? local.iter_1874.tape[local.iter_1874.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1874.code_ptr)] : local.iter_1874.code_ptr :
      local.curr_1875.code == "]"
        ? local.iter_1874.tape[local.iter_1874.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1874.code_ptr)] : local.iter_1874.code_ptr
        : local.iter_1874.code_ptr)

    steps_taken = 1 + local.iter_1874.steps_taken
  }
}

locals {
  end_of_code_1876 = try(local.iter_1875.code_ptr >= length(var.code), true)

  curr_1876 = local.end_of_code_1876 ? null : {
    code = substr(var.code, local.iter_1875.code_ptr, 1)
    input = substr(var.code, local.iter_1875.code_ptr, 1) == "," ? substr(local.iter_1875.input, 0, 1) : null
  }

  iter_1876 = local.end_of_code_1876 ? local.iter_1875 : {
    input = (local.curr_1876.code == ","
      ? substr(local.iter_1875.input, 1, -1)
      : local.iter_1875.input)

    output = (local.curr_1876.code == "."
      ? "${local.iter_1875.output}${jsondecode(format("\"\\u%04x\"", local.iter_1875.tape[local.iter_1875.tape_ptr]))}"
      : local.iter_1875.output)
    
    tape = (
      local.curr_1876.code == "+"
        ? [for i, b in local.iter_1875.tape : (i == local.iter_1875.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1876.code == "-"
        ? [for i, b in local.iter_1875.tape : (i == local.iter_1875.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1876.code == ","
        ? [for i, b in local.iter_1875.tape : (i == local.iter_1875.tape_ptr ? local.ascii_lookup[local.curr_1876.input] : b)]
        : local.iter_1875.tape)

    tape_ptr = (
      local.curr_1876.code == "<"
        ? local.iter_1875.tape_ptr == 0 ? length(local.iter_1875.tape) - 1 : local.iter_1875.tape_ptr - 1 :
      local.curr_1876.code == ">"
        ? local.iter_1875.tape_ptr == length(local.iter_1875.tape) - 1 ? 0 : local.iter_1875.tape_ptr + 1
        : local.iter_1875.tape_ptr)

    code_ptr = 1 + (
      local.curr_1876.code == "["
        ? local.iter_1875.tape[local.iter_1875.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1875.code_ptr)] : local.iter_1875.code_ptr :
      local.curr_1876.code == "]"
        ? local.iter_1875.tape[local.iter_1875.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1875.code_ptr)] : local.iter_1875.code_ptr
        : local.iter_1875.code_ptr)

    steps_taken = 1 + local.iter_1875.steps_taken
  }
}

locals {
  end_of_code_1877 = try(local.iter_1876.code_ptr >= length(var.code), true)

  curr_1877 = local.end_of_code_1877 ? null : {
    code = substr(var.code, local.iter_1876.code_ptr, 1)
    input = substr(var.code, local.iter_1876.code_ptr, 1) == "," ? substr(local.iter_1876.input, 0, 1) : null
  }

  iter_1877 = local.end_of_code_1877 ? local.iter_1876 : {
    input = (local.curr_1877.code == ","
      ? substr(local.iter_1876.input, 1, -1)
      : local.iter_1876.input)

    output = (local.curr_1877.code == "."
      ? "${local.iter_1876.output}${jsondecode(format("\"\\u%04x\"", local.iter_1876.tape[local.iter_1876.tape_ptr]))}"
      : local.iter_1876.output)
    
    tape = (
      local.curr_1877.code == "+"
        ? [for i, b in local.iter_1876.tape : (i == local.iter_1876.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1877.code == "-"
        ? [for i, b in local.iter_1876.tape : (i == local.iter_1876.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1877.code == ","
        ? [for i, b in local.iter_1876.tape : (i == local.iter_1876.tape_ptr ? local.ascii_lookup[local.curr_1877.input] : b)]
        : local.iter_1876.tape)

    tape_ptr = (
      local.curr_1877.code == "<"
        ? local.iter_1876.tape_ptr == 0 ? length(local.iter_1876.tape) - 1 : local.iter_1876.tape_ptr - 1 :
      local.curr_1877.code == ">"
        ? local.iter_1876.tape_ptr == length(local.iter_1876.tape) - 1 ? 0 : local.iter_1876.tape_ptr + 1
        : local.iter_1876.tape_ptr)

    code_ptr = 1 + (
      local.curr_1877.code == "["
        ? local.iter_1876.tape[local.iter_1876.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1876.code_ptr)] : local.iter_1876.code_ptr :
      local.curr_1877.code == "]"
        ? local.iter_1876.tape[local.iter_1876.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1876.code_ptr)] : local.iter_1876.code_ptr
        : local.iter_1876.code_ptr)

    steps_taken = 1 + local.iter_1876.steps_taken
  }
}

locals {
  end_of_code_1878 = try(local.iter_1877.code_ptr >= length(var.code), true)

  curr_1878 = local.end_of_code_1878 ? null : {
    code = substr(var.code, local.iter_1877.code_ptr, 1)
    input = substr(var.code, local.iter_1877.code_ptr, 1) == "," ? substr(local.iter_1877.input, 0, 1) : null
  }

  iter_1878 = local.end_of_code_1878 ? local.iter_1877 : {
    input = (local.curr_1878.code == ","
      ? substr(local.iter_1877.input, 1, -1)
      : local.iter_1877.input)

    output = (local.curr_1878.code == "."
      ? "${local.iter_1877.output}${jsondecode(format("\"\\u%04x\"", local.iter_1877.tape[local.iter_1877.tape_ptr]))}"
      : local.iter_1877.output)
    
    tape = (
      local.curr_1878.code == "+"
        ? [for i, b in local.iter_1877.tape : (i == local.iter_1877.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1878.code == "-"
        ? [for i, b in local.iter_1877.tape : (i == local.iter_1877.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1878.code == ","
        ? [for i, b in local.iter_1877.tape : (i == local.iter_1877.tape_ptr ? local.ascii_lookup[local.curr_1878.input] : b)]
        : local.iter_1877.tape)

    tape_ptr = (
      local.curr_1878.code == "<"
        ? local.iter_1877.tape_ptr == 0 ? length(local.iter_1877.tape) - 1 : local.iter_1877.tape_ptr - 1 :
      local.curr_1878.code == ">"
        ? local.iter_1877.tape_ptr == length(local.iter_1877.tape) - 1 ? 0 : local.iter_1877.tape_ptr + 1
        : local.iter_1877.tape_ptr)

    code_ptr = 1 + (
      local.curr_1878.code == "["
        ? local.iter_1877.tape[local.iter_1877.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1877.code_ptr)] : local.iter_1877.code_ptr :
      local.curr_1878.code == "]"
        ? local.iter_1877.tape[local.iter_1877.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1877.code_ptr)] : local.iter_1877.code_ptr
        : local.iter_1877.code_ptr)

    steps_taken = 1 + local.iter_1877.steps_taken
  }
}

locals {
  end_of_code_1879 = try(local.iter_1878.code_ptr >= length(var.code), true)

  curr_1879 = local.end_of_code_1879 ? null : {
    code = substr(var.code, local.iter_1878.code_ptr, 1)
    input = substr(var.code, local.iter_1878.code_ptr, 1) == "," ? substr(local.iter_1878.input, 0, 1) : null
  }

  iter_1879 = local.end_of_code_1879 ? local.iter_1878 : {
    input = (local.curr_1879.code == ","
      ? substr(local.iter_1878.input, 1, -1)
      : local.iter_1878.input)

    output = (local.curr_1879.code == "."
      ? "${local.iter_1878.output}${jsondecode(format("\"\\u%04x\"", local.iter_1878.tape[local.iter_1878.tape_ptr]))}"
      : local.iter_1878.output)
    
    tape = (
      local.curr_1879.code == "+"
        ? [for i, b in local.iter_1878.tape : (i == local.iter_1878.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1879.code == "-"
        ? [for i, b in local.iter_1878.tape : (i == local.iter_1878.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1879.code == ","
        ? [for i, b in local.iter_1878.tape : (i == local.iter_1878.tape_ptr ? local.ascii_lookup[local.curr_1879.input] : b)]
        : local.iter_1878.tape)

    tape_ptr = (
      local.curr_1879.code == "<"
        ? local.iter_1878.tape_ptr == 0 ? length(local.iter_1878.tape) - 1 : local.iter_1878.tape_ptr - 1 :
      local.curr_1879.code == ">"
        ? local.iter_1878.tape_ptr == length(local.iter_1878.tape) - 1 ? 0 : local.iter_1878.tape_ptr + 1
        : local.iter_1878.tape_ptr)

    code_ptr = 1 + (
      local.curr_1879.code == "["
        ? local.iter_1878.tape[local.iter_1878.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1878.code_ptr)] : local.iter_1878.code_ptr :
      local.curr_1879.code == "]"
        ? local.iter_1878.tape[local.iter_1878.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1878.code_ptr)] : local.iter_1878.code_ptr
        : local.iter_1878.code_ptr)

    steps_taken = 1 + local.iter_1878.steps_taken
  }
}

locals {
  end_of_code_1880 = try(local.iter_1879.code_ptr >= length(var.code), true)

  curr_1880 = local.end_of_code_1880 ? null : {
    code = substr(var.code, local.iter_1879.code_ptr, 1)
    input = substr(var.code, local.iter_1879.code_ptr, 1) == "," ? substr(local.iter_1879.input, 0, 1) : null
  }

  iter_1880 = local.end_of_code_1880 ? local.iter_1879 : {
    input = (local.curr_1880.code == ","
      ? substr(local.iter_1879.input, 1, -1)
      : local.iter_1879.input)

    output = (local.curr_1880.code == "."
      ? "${local.iter_1879.output}${jsondecode(format("\"\\u%04x\"", local.iter_1879.tape[local.iter_1879.tape_ptr]))}"
      : local.iter_1879.output)
    
    tape = (
      local.curr_1880.code == "+"
        ? [for i, b in local.iter_1879.tape : (i == local.iter_1879.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1880.code == "-"
        ? [for i, b in local.iter_1879.tape : (i == local.iter_1879.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1880.code == ","
        ? [for i, b in local.iter_1879.tape : (i == local.iter_1879.tape_ptr ? local.ascii_lookup[local.curr_1880.input] : b)]
        : local.iter_1879.tape)

    tape_ptr = (
      local.curr_1880.code == "<"
        ? local.iter_1879.tape_ptr == 0 ? length(local.iter_1879.tape) - 1 : local.iter_1879.tape_ptr - 1 :
      local.curr_1880.code == ">"
        ? local.iter_1879.tape_ptr == length(local.iter_1879.tape) - 1 ? 0 : local.iter_1879.tape_ptr + 1
        : local.iter_1879.tape_ptr)

    code_ptr = 1 + (
      local.curr_1880.code == "["
        ? local.iter_1879.tape[local.iter_1879.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1879.code_ptr)] : local.iter_1879.code_ptr :
      local.curr_1880.code == "]"
        ? local.iter_1879.tape[local.iter_1879.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1879.code_ptr)] : local.iter_1879.code_ptr
        : local.iter_1879.code_ptr)

    steps_taken = 1 + local.iter_1879.steps_taken
  }
}

locals {
  end_of_code_1881 = try(local.iter_1880.code_ptr >= length(var.code), true)

  curr_1881 = local.end_of_code_1881 ? null : {
    code = substr(var.code, local.iter_1880.code_ptr, 1)
    input = substr(var.code, local.iter_1880.code_ptr, 1) == "," ? substr(local.iter_1880.input, 0, 1) : null
  }

  iter_1881 = local.end_of_code_1881 ? local.iter_1880 : {
    input = (local.curr_1881.code == ","
      ? substr(local.iter_1880.input, 1, -1)
      : local.iter_1880.input)

    output = (local.curr_1881.code == "."
      ? "${local.iter_1880.output}${jsondecode(format("\"\\u%04x\"", local.iter_1880.tape[local.iter_1880.tape_ptr]))}"
      : local.iter_1880.output)
    
    tape = (
      local.curr_1881.code == "+"
        ? [for i, b in local.iter_1880.tape : (i == local.iter_1880.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1881.code == "-"
        ? [for i, b in local.iter_1880.tape : (i == local.iter_1880.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1881.code == ","
        ? [for i, b in local.iter_1880.tape : (i == local.iter_1880.tape_ptr ? local.ascii_lookup[local.curr_1881.input] : b)]
        : local.iter_1880.tape)

    tape_ptr = (
      local.curr_1881.code == "<"
        ? local.iter_1880.tape_ptr == 0 ? length(local.iter_1880.tape) - 1 : local.iter_1880.tape_ptr - 1 :
      local.curr_1881.code == ">"
        ? local.iter_1880.tape_ptr == length(local.iter_1880.tape) - 1 ? 0 : local.iter_1880.tape_ptr + 1
        : local.iter_1880.tape_ptr)

    code_ptr = 1 + (
      local.curr_1881.code == "["
        ? local.iter_1880.tape[local.iter_1880.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1880.code_ptr)] : local.iter_1880.code_ptr :
      local.curr_1881.code == "]"
        ? local.iter_1880.tape[local.iter_1880.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1880.code_ptr)] : local.iter_1880.code_ptr
        : local.iter_1880.code_ptr)

    steps_taken = 1 + local.iter_1880.steps_taken
  }
}

locals {
  end_of_code_1882 = try(local.iter_1881.code_ptr >= length(var.code), true)

  curr_1882 = local.end_of_code_1882 ? null : {
    code = substr(var.code, local.iter_1881.code_ptr, 1)
    input = substr(var.code, local.iter_1881.code_ptr, 1) == "," ? substr(local.iter_1881.input, 0, 1) : null
  }

  iter_1882 = local.end_of_code_1882 ? local.iter_1881 : {
    input = (local.curr_1882.code == ","
      ? substr(local.iter_1881.input, 1, -1)
      : local.iter_1881.input)

    output = (local.curr_1882.code == "."
      ? "${local.iter_1881.output}${jsondecode(format("\"\\u%04x\"", local.iter_1881.tape[local.iter_1881.tape_ptr]))}"
      : local.iter_1881.output)
    
    tape = (
      local.curr_1882.code == "+"
        ? [for i, b in local.iter_1881.tape : (i == local.iter_1881.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1882.code == "-"
        ? [for i, b in local.iter_1881.tape : (i == local.iter_1881.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1882.code == ","
        ? [for i, b in local.iter_1881.tape : (i == local.iter_1881.tape_ptr ? local.ascii_lookup[local.curr_1882.input] : b)]
        : local.iter_1881.tape)

    tape_ptr = (
      local.curr_1882.code == "<"
        ? local.iter_1881.tape_ptr == 0 ? length(local.iter_1881.tape) - 1 : local.iter_1881.tape_ptr - 1 :
      local.curr_1882.code == ">"
        ? local.iter_1881.tape_ptr == length(local.iter_1881.tape) - 1 ? 0 : local.iter_1881.tape_ptr + 1
        : local.iter_1881.tape_ptr)

    code_ptr = 1 + (
      local.curr_1882.code == "["
        ? local.iter_1881.tape[local.iter_1881.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1881.code_ptr)] : local.iter_1881.code_ptr :
      local.curr_1882.code == "]"
        ? local.iter_1881.tape[local.iter_1881.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1881.code_ptr)] : local.iter_1881.code_ptr
        : local.iter_1881.code_ptr)

    steps_taken = 1 + local.iter_1881.steps_taken
  }
}

locals {
  end_of_code_1883 = try(local.iter_1882.code_ptr >= length(var.code), true)

  curr_1883 = local.end_of_code_1883 ? null : {
    code = substr(var.code, local.iter_1882.code_ptr, 1)
    input = substr(var.code, local.iter_1882.code_ptr, 1) == "," ? substr(local.iter_1882.input, 0, 1) : null
  }

  iter_1883 = local.end_of_code_1883 ? local.iter_1882 : {
    input = (local.curr_1883.code == ","
      ? substr(local.iter_1882.input, 1, -1)
      : local.iter_1882.input)

    output = (local.curr_1883.code == "."
      ? "${local.iter_1882.output}${jsondecode(format("\"\\u%04x\"", local.iter_1882.tape[local.iter_1882.tape_ptr]))}"
      : local.iter_1882.output)
    
    tape = (
      local.curr_1883.code == "+"
        ? [for i, b in local.iter_1882.tape : (i == local.iter_1882.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1883.code == "-"
        ? [for i, b in local.iter_1882.tape : (i == local.iter_1882.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1883.code == ","
        ? [for i, b in local.iter_1882.tape : (i == local.iter_1882.tape_ptr ? local.ascii_lookup[local.curr_1883.input] : b)]
        : local.iter_1882.tape)

    tape_ptr = (
      local.curr_1883.code == "<"
        ? local.iter_1882.tape_ptr == 0 ? length(local.iter_1882.tape) - 1 : local.iter_1882.tape_ptr - 1 :
      local.curr_1883.code == ">"
        ? local.iter_1882.tape_ptr == length(local.iter_1882.tape) - 1 ? 0 : local.iter_1882.tape_ptr + 1
        : local.iter_1882.tape_ptr)

    code_ptr = 1 + (
      local.curr_1883.code == "["
        ? local.iter_1882.tape[local.iter_1882.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1882.code_ptr)] : local.iter_1882.code_ptr :
      local.curr_1883.code == "]"
        ? local.iter_1882.tape[local.iter_1882.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1882.code_ptr)] : local.iter_1882.code_ptr
        : local.iter_1882.code_ptr)

    steps_taken = 1 + local.iter_1882.steps_taken
  }
}

locals {
  end_of_code_1884 = try(local.iter_1883.code_ptr >= length(var.code), true)

  curr_1884 = local.end_of_code_1884 ? null : {
    code = substr(var.code, local.iter_1883.code_ptr, 1)
    input = substr(var.code, local.iter_1883.code_ptr, 1) == "," ? substr(local.iter_1883.input, 0, 1) : null
  }

  iter_1884 = local.end_of_code_1884 ? local.iter_1883 : {
    input = (local.curr_1884.code == ","
      ? substr(local.iter_1883.input, 1, -1)
      : local.iter_1883.input)

    output = (local.curr_1884.code == "."
      ? "${local.iter_1883.output}${jsondecode(format("\"\\u%04x\"", local.iter_1883.tape[local.iter_1883.tape_ptr]))}"
      : local.iter_1883.output)
    
    tape = (
      local.curr_1884.code == "+"
        ? [for i, b in local.iter_1883.tape : (i == local.iter_1883.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1884.code == "-"
        ? [for i, b in local.iter_1883.tape : (i == local.iter_1883.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1884.code == ","
        ? [for i, b in local.iter_1883.tape : (i == local.iter_1883.tape_ptr ? local.ascii_lookup[local.curr_1884.input] : b)]
        : local.iter_1883.tape)

    tape_ptr = (
      local.curr_1884.code == "<"
        ? local.iter_1883.tape_ptr == 0 ? length(local.iter_1883.tape) - 1 : local.iter_1883.tape_ptr - 1 :
      local.curr_1884.code == ">"
        ? local.iter_1883.tape_ptr == length(local.iter_1883.tape) - 1 ? 0 : local.iter_1883.tape_ptr + 1
        : local.iter_1883.tape_ptr)

    code_ptr = 1 + (
      local.curr_1884.code == "["
        ? local.iter_1883.tape[local.iter_1883.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1883.code_ptr)] : local.iter_1883.code_ptr :
      local.curr_1884.code == "]"
        ? local.iter_1883.tape[local.iter_1883.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1883.code_ptr)] : local.iter_1883.code_ptr
        : local.iter_1883.code_ptr)

    steps_taken = 1 + local.iter_1883.steps_taken
  }
}

locals {
  end_of_code_1885 = try(local.iter_1884.code_ptr >= length(var.code), true)

  curr_1885 = local.end_of_code_1885 ? null : {
    code = substr(var.code, local.iter_1884.code_ptr, 1)
    input = substr(var.code, local.iter_1884.code_ptr, 1) == "," ? substr(local.iter_1884.input, 0, 1) : null
  }

  iter_1885 = local.end_of_code_1885 ? local.iter_1884 : {
    input = (local.curr_1885.code == ","
      ? substr(local.iter_1884.input, 1, -1)
      : local.iter_1884.input)

    output = (local.curr_1885.code == "."
      ? "${local.iter_1884.output}${jsondecode(format("\"\\u%04x\"", local.iter_1884.tape[local.iter_1884.tape_ptr]))}"
      : local.iter_1884.output)
    
    tape = (
      local.curr_1885.code == "+"
        ? [for i, b in local.iter_1884.tape : (i == local.iter_1884.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1885.code == "-"
        ? [for i, b in local.iter_1884.tape : (i == local.iter_1884.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1885.code == ","
        ? [for i, b in local.iter_1884.tape : (i == local.iter_1884.tape_ptr ? local.ascii_lookup[local.curr_1885.input] : b)]
        : local.iter_1884.tape)

    tape_ptr = (
      local.curr_1885.code == "<"
        ? local.iter_1884.tape_ptr == 0 ? length(local.iter_1884.tape) - 1 : local.iter_1884.tape_ptr - 1 :
      local.curr_1885.code == ">"
        ? local.iter_1884.tape_ptr == length(local.iter_1884.tape) - 1 ? 0 : local.iter_1884.tape_ptr + 1
        : local.iter_1884.tape_ptr)

    code_ptr = 1 + (
      local.curr_1885.code == "["
        ? local.iter_1884.tape[local.iter_1884.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1884.code_ptr)] : local.iter_1884.code_ptr :
      local.curr_1885.code == "]"
        ? local.iter_1884.tape[local.iter_1884.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1884.code_ptr)] : local.iter_1884.code_ptr
        : local.iter_1884.code_ptr)

    steps_taken = 1 + local.iter_1884.steps_taken
  }
}

locals {
  end_of_code_1886 = try(local.iter_1885.code_ptr >= length(var.code), true)

  curr_1886 = local.end_of_code_1886 ? null : {
    code = substr(var.code, local.iter_1885.code_ptr, 1)
    input = substr(var.code, local.iter_1885.code_ptr, 1) == "," ? substr(local.iter_1885.input, 0, 1) : null
  }

  iter_1886 = local.end_of_code_1886 ? local.iter_1885 : {
    input = (local.curr_1886.code == ","
      ? substr(local.iter_1885.input, 1, -1)
      : local.iter_1885.input)

    output = (local.curr_1886.code == "."
      ? "${local.iter_1885.output}${jsondecode(format("\"\\u%04x\"", local.iter_1885.tape[local.iter_1885.tape_ptr]))}"
      : local.iter_1885.output)
    
    tape = (
      local.curr_1886.code == "+"
        ? [for i, b in local.iter_1885.tape : (i == local.iter_1885.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1886.code == "-"
        ? [for i, b in local.iter_1885.tape : (i == local.iter_1885.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1886.code == ","
        ? [for i, b in local.iter_1885.tape : (i == local.iter_1885.tape_ptr ? local.ascii_lookup[local.curr_1886.input] : b)]
        : local.iter_1885.tape)

    tape_ptr = (
      local.curr_1886.code == "<"
        ? local.iter_1885.tape_ptr == 0 ? length(local.iter_1885.tape) - 1 : local.iter_1885.tape_ptr - 1 :
      local.curr_1886.code == ">"
        ? local.iter_1885.tape_ptr == length(local.iter_1885.tape) - 1 ? 0 : local.iter_1885.tape_ptr + 1
        : local.iter_1885.tape_ptr)

    code_ptr = 1 + (
      local.curr_1886.code == "["
        ? local.iter_1885.tape[local.iter_1885.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1885.code_ptr)] : local.iter_1885.code_ptr :
      local.curr_1886.code == "]"
        ? local.iter_1885.tape[local.iter_1885.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1885.code_ptr)] : local.iter_1885.code_ptr
        : local.iter_1885.code_ptr)

    steps_taken = 1 + local.iter_1885.steps_taken
  }
}

locals {
  end_of_code_1887 = try(local.iter_1886.code_ptr >= length(var.code), true)

  curr_1887 = local.end_of_code_1887 ? null : {
    code = substr(var.code, local.iter_1886.code_ptr, 1)
    input = substr(var.code, local.iter_1886.code_ptr, 1) == "," ? substr(local.iter_1886.input, 0, 1) : null
  }

  iter_1887 = local.end_of_code_1887 ? local.iter_1886 : {
    input = (local.curr_1887.code == ","
      ? substr(local.iter_1886.input, 1, -1)
      : local.iter_1886.input)

    output = (local.curr_1887.code == "."
      ? "${local.iter_1886.output}${jsondecode(format("\"\\u%04x\"", local.iter_1886.tape[local.iter_1886.tape_ptr]))}"
      : local.iter_1886.output)
    
    tape = (
      local.curr_1887.code == "+"
        ? [for i, b in local.iter_1886.tape : (i == local.iter_1886.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1887.code == "-"
        ? [for i, b in local.iter_1886.tape : (i == local.iter_1886.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1887.code == ","
        ? [for i, b in local.iter_1886.tape : (i == local.iter_1886.tape_ptr ? local.ascii_lookup[local.curr_1887.input] : b)]
        : local.iter_1886.tape)

    tape_ptr = (
      local.curr_1887.code == "<"
        ? local.iter_1886.tape_ptr == 0 ? length(local.iter_1886.tape) - 1 : local.iter_1886.tape_ptr - 1 :
      local.curr_1887.code == ">"
        ? local.iter_1886.tape_ptr == length(local.iter_1886.tape) - 1 ? 0 : local.iter_1886.tape_ptr + 1
        : local.iter_1886.tape_ptr)

    code_ptr = 1 + (
      local.curr_1887.code == "["
        ? local.iter_1886.tape[local.iter_1886.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1886.code_ptr)] : local.iter_1886.code_ptr :
      local.curr_1887.code == "]"
        ? local.iter_1886.tape[local.iter_1886.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1886.code_ptr)] : local.iter_1886.code_ptr
        : local.iter_1886.code_ptr)

    steps_taken = 1 + local.iter_1886.steps_taken
  }
}

locals {
  end_of_code_1888 = try(local.iter_1887.code_ptr >= length(var.code), true)

  curr_1888 = local.end_of_code_1888 ? null : {
    code = substr(var.code, local.iter_1887.code_ptr, 1)
    input = substr(var.code, local.iter_1887.code_ptr, 1) == "," ? substr(local.iter_1887.input, 0, 1) : null
  }

  iter_1888 = local.end_of_code_1888 ? local.iter_1887 : {
    input = (local.curr_1888.code == ","
      ? substr(local.iter_1887.input, 1, -1)
      : local.iter_1887.input)

    output = (local.curr_1888.code == "."
      ? "${local.iter_1887.output}${jsondecode(format("\"\\u%04x\"", local.iter_1887.tape[local.iter_1887.tape_ptr]))}"
      : local.iter_1887.output)
    
    tape = (
      local.curr_1888.code == "+"
        ? [for i, b in local.iter_1887.tape : (i == local.iter_1887.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1888.code == "-"
        ? [for i, b in local.iter_1887.tape : (i == local.iter_1887.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1888.code == ","
        ? [for i, b in local.iter_1887.tape : (i == local.iter_1887.tape_ptr ? local.ascii_lookup[local.curr_1888.input] : b)]
        : local.iter_1887.tape)

    tape_ptr = (
      local.curr_1888.code == "<"
        ? local.iter_1887.tape_ptr == 0 ? length(local.iter_1887.tape) - 1 : local.iter_1887.tape_ptr - 1 :
      local.curr_1888.code == ">"
        ? local.iter_1887.tape_ptr == length(local.iter_1887.tape) - 1 ? 0 : local.iter_1887.tape_ptr + 1
        : local.iter_1887.tape_ptr)

    code_ptr = 1 + (
      local.curr_1888.code == "["
        ? local.iter_1887.tape[local.iter_1887.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1887.code_ptr)] : local.iter_1887.code_ptr :
      local.curr_1888.code == "]"
        ? local.iter_1887.tape[local.iter_1887.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1887.code_ptr)] : local.iter_1887.code_ptr
        : local.iter_1887.code_ptr)

    steps_taken = 1 + local.iter_1887.steps_taken
  }
}

locals {
  end_of_code_1889 = try(local.iter_1888.code_ptr >= length(var.code), true)

  curr_1889 = local.end_of_code_1889 ? null : {
    code = substr(var.code, local.iter_1888.code_ptr, 1)
    input = substr(var.code, local.iter_1888.code_ptr, 1) == "," ? substr(local.iter_1888.input, 0, 1) : null
  }

  iter_1889 = local.end_of_code_1889 ? local.iter_1888 : {
    input = (local.curr_1889.code == ","
      ? substr(local.iter_1888.input, 1, -1)
      : local.iter_1888.input)

    output = (local.curr_1889.code == "."
      ? "${local.iter_1888.output}${jsondecode(format("\"\\u%04x\"", local.iter_1888.tape[local.iter_1888.tape_ptr]))}"
      : local.iter_1888.output)
    
    tape = (
      local.curr_1889.code == "+"
        ? [for i, b in local.iter_1888.tape : (i == local.iter_1888.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1889.code == "-"
        ? [for i, b in local.iter_1888.tape : (i == local.iter_1888.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1889.code == ","
        ? [for i, b in local.iter_1888.tape : (i == local.iter_1888.tape_ptr ? local.ascii_lookup[local.curr_1889.input] : b)]
        : local.iter_1888.tape)

    tape_ptr = (
      local.curr_1889.code == "<"
        ? local.iter_1888.tape_ptr == 0 ? length(local.iter_1888.tape) - 1 : local.iter_1888.tape_ptr - 1 :
      local.curr_1889.code == ">"
        ? local.iter_1888.tape_ptr == length(local.iter_1888.tape) - 1 ? 0 : local.iter_1888.tape_ptr + 1
        : local.iter_1888.tape_ptr)

    code_ptr = 1 + (
      local.curr_1889.code == "["
        ? local.iter_1888.tape[local.iter_1888.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1888.code_ptr)] : local.iter_1888.code_ptr :
      local.curr_1889.code == "]"
        ? local.iter_1888.tape[local.iter_1888.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1888.code_ptr)] : local.iter_1888.code_ptr
        : local.iter_1888.code_ptr)

    steps_taken = 1 + local.iter_1888.steps_taken
  }
}

locals {
  end_of_code_1890 = try(local.iter_1889.code_ptr >= length(var.code), true)

  curr_1890 = local.end_of_code_1890 ? null : {
    code = substr(var.code, local.iter_1889.code_ptr, 1)
    input = substr(var.code, local.iter_1889.code_ptr, 1) == "," ? substr(local.iter_1889.input, 0, 1) : null
  }

  iter_1890 = local.end_of_code_1890 ? local.iter_1889 : {
    input = (local.curr_1890.code == ","
      ? substr(local.iter_1889.input, 1, -1)
      : local.iter_1889.input)

    output = (local.curr_1890.code == "."
      ? "${local.iter_1889.output}${jsondecode(format("\"\\u%04x\"", local.iter_1889.tape[local.iter_1889.tape_ptr]))}"
      : local.iter_1889.output)
    
    tape = (
      local.curr_1890.code == "+"
        ? [for i, b in local.iter_1889.tape : (i == local.iter_1889.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1890.code == "-"
        ? [for i, b in local.iter_1889.tape : (i == local.iter_1889.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1890.code == ","
        ? [for i, b in local.iter_1889.tape : (i == local.iter_1889.tape_ptr ? local.ascii_lookup[local.curr_1890.input] : b)]
        : local.iter_1889.tape)

    tape_ptr = (
      local.curr_1890.code == "<"
        ? local.iter_1889.tape_ptr == 0 ? length(local.iter_1889.tape) - 1 : local.iter_1889.tape_ptr - 1 :
      local.curr_1890.code == ">"
        ? local.iter_1889.tape_ptr == length(local.iter_1889.tape) - 1 ? 0 : local.iter_1889.tape_ptr + 1
        : local.iter_1889.tape_ptr)

    code_ptr = 1 + (
      local.curr_1890.code == "["
        ? local.iter_1889.tape[local.iter_1889.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1889.code_ptr)] : local.iter_1889.code_ptr :
      local.curr_1890.code == "]"
        ? local.iter_1889.tape[local.iter_1889.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1889.code_ptr)] : local.iter_1889.code_ptr
        : local.iter_1889.code_ptr)

    steps_taken = 1 + local.iter_1889.steps_taken
  }
}

locals {
  end_of_code_1891 = try(local.iter_1890.code_ptr >= length(var.code), true)

  curr_1891 = local.end_of_code_1891 ? null : {
    code = substr(var.code, local.iter_1890.code_ptr, 1)
    input = substr(var.code, local.iter_1890.code_ptr, 1) == "," ? substr(local.iter_1890.input, 0, 1) : null
  }

  iter_1891 = local.end_of_code_1891 ? local.iter_1890 : {
    input = (local.curr_1891.code == ","
      ? substr(local.iter_1890.input, 1, -1)
      : local.iter_1890.input)

    output = (local.curr_1891.code == "."
      ? "${local.iter_1890.output}${jsondecode(format("\"\\u%04x\"", local.iter_1890.tape[local.iter_1890.tape_ptr]))}"
      : local.iter_1890.output)
    
    tape = (
      local.curr_1891.code == "+"
        ? [for i, b in local.iter_1890.tape : (i == local.iter_1890.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1891.code == "-"
        ? [for i, b in local.iter_1890.tape : (i == local.iter_1890.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1891.code == ","
        ? [for i, b in local.iter_1890.tape : (i == local.iter_1890.tape_ptr ? local.ascii_lookup[local.curr_1891.input] : b)]
        : local.iter_1890.tape)

    tape_ptr = (
      local.curr_1891.code == "<"
        ? local.iter_1890.tape_ptr == 0 ? length(local.iter_1890.tape) - 1 : local.iter_1890.tape_ptr - 1 :
      local.curr_1891.code == ">"
        ? local.iter_1890.tape_ptr == length(local.iter_1890.tape) - 1 ? 0 : local.iter_1890.tape_ptr + 1
        : local.iter_1890.tape_ptr)

    code_ptr = 1 + (
      local.curr_1891.code == "["
        ? local.iter_1890.tape[local.iter_1890.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1890.code_ptr)] : local.iter_1890.code_ptr :
      local.curr_1891.code == "]"
        ? local.iter_1890.tape[local.iter_1890.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1890.code_ptr)] : local.iter_1890.code_ptr
        : local.iter_1890.code_ptr)

    steps_taken = 1 + local.iter_1890.steps_taken
  }
}

locals {
  end_of_code_1892 = try(local.iter_1891.code_ptr >= length(var.code), true)

  curr_1892 = local.end_of_code_1892 ? null : {
    code = substr(var.code, local.iter_1891.code_ptr, 1)
    input = substr(var.code, local.iter_1891.code_ptr, 1) == "," ? substr(local.iter_1891.input, 0, 1) : null
  }

  iter_1892 = local.end_of_code_1892 ? local.iter_1891 : {
    input = (local.curr_1892.code == ","
      ? substr(local.iter_1891.input, 1, -1)
      : local.iter_1891.input)

    output = (local.curr_1892.code == "."
      ? "${local.iter_1891.output}${jsondecode(format("\"\\u%04x\"", local.iter_1891.tape[local.iter_1891.tape_ptr]))}"
      : local.iter_1891.output)
    
    tape = (
      local.curr_1892.code == "+"
        ? [for i, b in local.iter_1891.tape : (i == local.iter_1891.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1892.code == "-"
        ? [for i, b in local.iter_1891.tape : (i == local.iter_1891.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1892.code == ","
        ? [for i, b in local.iter_1891.tape : (i == local.iter_1891.tape_ptr ? local.ascii_lookup[local.curr_1892.input] : b)]
        : local.iter_1891.tape)

    tape_ptr = (
      local.curr_1892.code == "<"
        ? local.iter_1891.tape_ptr == 0 ? length(local.iter_1891.tape) - 1 : local.iter_1891.tape_ptr - 1 :
      local.curr_1892.code == ">"
        ? local.iter_1891.tape_ptr == length(local.iter_1891.tape) - 1 ? 0 : local.iter_1891.tape_ptr + 1
        : local.iter_1891.tape_ptr)

    code_ptr = 1 + (
      local.curr_1892.code == "["
        ? local.iter_1891.tape[local.iter_1891.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1891.code_ptr)] : local.iter_1891.code_ptr :
      local.curr_1892.code == "]"
        ? local.iter_1891.tape[local.iter_1891.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1891.code_ptr)] : local.iter_1891.code_ptr
        : local.iter_1891.code_ptr)

    steps_taken = 1 + local.iter_1891.steps_taken
  }
}

locals {
  end_of_code_1893 = try(local.iter_1892.code_ptr >= length(var.code), true)

  curr_1893 = local.end_of_code_1893 ? null : {
    code = substr(var.code, local.iter_1892.code_ptr, 1)
    input = substr(var.code, local.iter_1892.code_ptr, 1) == "," ? substr(local.iter_1892.input, 0, 1) : null
  }

  iter_1893 = local.end_of_code_1893 ? local.iter_1892 : {
    input = (local.curr_1893.code == ","
      ? substr(local.iter_1892.input, 1, -1)
      : local.iter_1892.input)

    output = (local.curr_1893.code == "."
      ? "${local.iter_1892.output}${jsondecode(format("\"\\u%04x\"", local.iter_1892.tape[local.iter_1892.tape_ptr]))}"
      : local.iter_1892.output)
    
    tape = (
      local.curr_1893.code == "+"
        ? [for i, b in local.iter_1892.tape : (i == local.iter_1892.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1893.code == "-"
        ? [for i, b in local.iter_1892.tape : (i == local.iter_1892.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1893.code == ","
        ? [for i, b in local.iter_1892.tape : (i == local.iter_1892.tape_ptr ? local.ascii_lookup[local.curr_1893.input] : b)]
        : local.iter_1892.tape)

    tape_ptr = (
      local.curr_1893.code == "<"
        ? local.iter_1892.tape_ptr == 0 ? length(local.iter_1892.tape) - 1 : local.iter_1892.tape_ptr - 1 :
      local.curr_1893.code == ">"
        ? local.iter_1892.tape_ptr == length(local.iter_1892.tape) - 1 ? 0 : local.iter_1892.tape_ptr + 1
        : local.iter_1892.tape_ptr)

    code_ptr = 1 + (
      local.curr_1893.code == "["
        ? local.iter_1892.tape[local.iter_1892.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1892.code_ptr)] : local.iter_1892.code_ptr :
      local.curr_1893.code == "]"
        ? local.iter_1892.tape[local.iter_1892.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1892.code_ptr)] : local.iter_1892.code_ptr
        : local.iter_1892.code_ptr)

    steps_taken = 1 + local.iter_1892.steps_taken
  }
}

locals {
  end_of_code_1894 = try(local.iter_1893.code_ptr >= length(var.code), true)

  curr_1894 = local.end_of_code_1894 ? null : {
    code = substr(var.code, local.iter_1893.code_ptr, 1)
    input = substr(var.code, local.iter_1893.code_ptr, 1) == "," ? substr(local.iter_1893.input, 0, 1) : null
  }

  iter_1894 = local.end_of_code_1894 ? local.iter_1893 : {
    input = (local.curr_1894.code == ","
      ? substr(local.iter_1893.input, 1, -1)
      : local.iter_1893.input)

    output = (local.curr_1894.code == "."
      ? "${local.iter_1893.output}${jsondecode(format("\"\\u%04x\"", local.iter_1893.tape[local.iter_1893.tape_ptr]))}"
      : local.iter_1893.output)
    
    tape = (
      local.curr_1894.code == "+"
        ? [for i, b in local.iter_1893.tape : (i == local.iter_1893.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1894.code == "-"
        ? [for i, b in local.iter_1893.tape : (i == local.iter_1893.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1894.code == ","
        ? [for i, b in local.iter_1893.tape : (i == local.iter_1893.tape_ptr ? local.ascii_lookup[local.curr_1894.input] : b)]
        : local.iter_1893.tape)

    tape_ptr = (
      local.curr_1894.code == "<"
        ? local.iter_1893.tape_ptr == 0 ? length(local.iter_1893.tape) - 1 : local.iter_1893.tape_ptr - 1 :
      local.curr_1894.code == ">"
        ? local.iter_1893.tape_ptr == length(local.iter_1893.tape) - 1 ? 0 : local.iter_1893.tape_ptr + 1
        : local.iter_1893.tape_ptr)

    code_ptr = 1 + (
      local.curr_1894.code == "["
        ? local.iter_1893.tape[local.iter_1893.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1893.code_ptr)] : local.iter_1893.code_ptr :
      local.curr_1894.code == "]"
        ? local.iter_1893.tape[local.iter_1893.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1893.code_ptr)] : local.iter_1893.code_ptr
        : local.iter_1893.code_ptr)

    steps_taken = 1 + local.iter_1893.steps_taken
  }
}

locals {
  end_of_code_1895 = try(local.iter_1894.code_ptr >= length(var.code), true)

  curr_1895 = local.end_of_code_1895 ? null : {
    code = substr(var.code, local.iter_1894.code_ptr, 1)
    input = substr(var.code, local.iter_1894.code_ptr, 1) == "," ? substr(local.iter_1894.input, 0, 1) : null
  }

  iter_1895 = local.end_of_code_1895 ? local.iter_1894 : {
    input = (local.curr_1895.code == ","
      ? substr(local.iter_1894.input, 1, -1)
      : local.iter_1894.input)

    output = (local.curr_1895.code == "."
      ? "${local.iter_1894.output}${jsondecode(format("\"\\u%04x\"", local.iter_1894.tape[local.iter_1894.tape_ptr]))}"
      : local.iter_1894.output)
    
    tape = (
      local.curr_1895.code == "+"
        ? [for i, b in local.iter_1894.tape : (i == local.iter_1894.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1895.code == "-"
        ? [for i, b in local.iter_1894.tape : (i == local.iter_1894.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1895.code == ","
        ? [for i, b in local.iter_1894.tape : (i == local.iter_1894.tape_ptr ? local.ascii_lookup[local.curr_1895.input] : b)]
        : local.iter_1894.tape)

    tape_ptr = (
      local.curr_1895.code == "<"
        ? local.iter_1894.tape_ptr == 0 ? length(local.iter_1894.tape) - 1 : local.iter_1894.tape_ptr - 1 :
      local.curr_1895.code == ">"
        ? local.iter_1894.tape_ptr == length(local.iter_1894.tape) - 1 ? 0 : local.iter_1894.tape_ptr + 1
        : local.iter_1894.tape_ptr)

    code_ptr = 1 + (
      local.curr_1895.code == "["
        ? local.iter_1894.tape[local.iter_1894.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1894.code_ptr)] : local.iter_1894.code_ptr :
      local.curr_1895.code == "]"
        ? local.iter_1894.tape[local.iter_1894.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1894.code_ptr)] : local.iter_1894.code_ptr
        : local.iter_1894.code_ptr)

    steps_taken = 1 + local.iter_1894.steps_taken
  }
}

locals {
  end_of_code_1896 = try(local.iter_1895.code_ptr >= length(var.code), true)

  curr_1896 = local.end_of_code_1896 ? null : {
    code = substr(var.code, local.iter_1895.code_ptr, 1)
    input = substr(var.code, local.iter_1895.code_ptr, 1) == "," ? substr(local.iter_1895.input, 0, 1) : null
  }

  iter_1896 = local.end_of_code_1896 ? local.iter_1895 : {
    input = (local.curr_1896.code == ","
      ? substr(local.iter_1895.input, 1, -1)
      : local.iter_1895.input)

    output = (local.curr_1896.code == "."
      ? "${local.iter_1895.output}${jsondecode(format("\"\\u%04x\"", local.iter_1895.tape[local.iter_1895.tape_ptr]))}"
      : local.iter_1895.output)
    
    tape = (
      local.curr_1896.code == "+"
        ? [for i, b in local.iter_1895.tape : (i == local.iter_1895.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1896.code == "-"
        ? [for i, b in local.iter_1895.tape : (i == local.iter_1895.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1896.code == ","
        ? [for i, b in local.iter_1895.tape : (i == local.iter_1895.tape_ptr ? local.ascii_lookup[local.curr_1896.input] : b)]
        : local.iter_1895.tape)

    tape_ptr = (
      local.curr_1896.code == "<"
        ? local.iter_1895.tape_ptr == 0 ? length(local.iter_1895.tape) - 1 : local.iter_1895.tape_ptr - 1 :
      local.curr_1896.code == ">"
        ? local.iter_1895.tape_ptr == length(local.iter_1895.tape) - 1 ? 0 : local.iter_1895.tape_ptr + 1
        : local.iter_1895.tape_ptr)

    code_ptr = 1 + (
      local.curr_1896.code == "["
        ? local.iter_1895.tape[local.iter_1895.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1895.code_ptr)] : local.iter_1895.code_ptr :
      local.curr_1896.code == "]"
        ? local.iter_1895.tape[local.iter_1895.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1895.code_ptr)] : local.iter_1895.code_ptr
        : local.iter_1895.code_ptr)

    steps_taken = 1 + local.iter_1895.steps_taken
  }
}

locals {
  end_of_code_1897 = try(local.iter_1896.code_ptr >= length(var.code), true)

  curr_1897 = local.end_of_code_1897 ? null : {
    code = substr(var.code, local.iter_1896.code_ptr, 1)
    input = substr(var.code, local.iter_1896.code_ptr, 1) == "," ? substr(local.iter_1896.input, 0, 1) : null
  }

  iter_1897 = local.end_of_code_1897 ? local.iter_1896 : {
    input = (local.curr_1897.code == ","
      ? substr(local.iter_1896.input, 1, -1)
      : local.iter_1896.input)

    output = (local.curr_1897.code == "."
      ? "${local.iter_1896.output}${jsondecode(format("\"\\u%04x\"", local.iter_1896.tape[local.iter_1896.tape_ptr]))}"
      : local.iter_1896.output)
    
    tape = (
      local.curr_1897.code == "+"
        ? [for i, b in local.iter_1896.tape : (i == local.iter_1896.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1897.code == "-"
        ? [for i, b in local.iter_1896.tape : (i == local.iter_1896.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1897.code == ","
        ? [for i, b in local.iter_1896.tape : (i == local.iter_1896.tape_ptr ? local.ascii_lookup[local.curr_1897.input] : b)]
        : local.iter_1896.tape)

    tape_ptr = (
      local.curr_1897.code == "<"
        ? local.iter_1896.tape_ptr == 0 ? length(local.iter_1896.tape) - 1 : local.iter_1896.tape_ptr - 1 :
      local.curr_1897.code == ">"
        ? local.iter_1896.tape_ptr == length(local.iter_1896.tape) - 1 ? 0 : local.iter_1896.tape_ptr + 1
        : local.iter_1896.tape_ptr)

    code_ptr = 1 + (
      local.curr_1897.code == "["
        ? local.iter_1896.tape[local.iter_1896.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1896.code_ptr)] : local.iter_1896.code_ptr :
      local.curr_1897.code == "]"
        ? local.iter_1896.tape[local.iter_1896.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1896.code_ptr)] : local.iter_1896.code_ptr
        : local.iter_1896.code_ptr)

    steps_taken = 1 + local.iter_1896.steps_taken
  }
}

locals {
  end_of_code_1898 = try(local.iter_1897.code_ptr >= length(var.code), true)

  curr_1898 = local.end_of_code_1898 ? null : {
    code = substr(var.code, local.iter_1897.code_ptr, 1)
    input = substr(var.code, local.iter_1897.code_ptr, 1) == "," ? substr(local.iter_1897.input, 0, 1) : null
  }

  iter_1898 = local.end_of_code_1898 ? local.iter_1897 : {
    input = (local.curr_1898.code == ","
      ? substr(local.iter_1897.input, 1, -1)
      : local.iter_1897.input)

    output = (local.curr_1898.code == "."
      ? "${local.iter_1897.output}${jsondecode(format("\"\\u%04x\"", local.iter_1897.tape[local.iter_1897.tape_ptr]))}"
      : local.iter_1897.output)
    
    tape = (
      local.curr_1898.code == "+"
        ? [for i, b in local.iter_1897.tape : (i == local.iter_1897.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1898.code == "-"
        ? [for i, b in local.iter_1897.tape : (i == local.iter_1897.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1898.code == ","
        ? [for i, b in local.iter_1897.tape : (i == local.iter_1897.tape_ptr ? local.ascii_lookup[local.curr_1898.input] : b)]
        : local.iter_1897.tape)

    tape_ptr = (
      local.curr_1898.code == "<"
        ? local.iter_1897.tape_ptr == 0 ? length(local.iter_1897.tape) - 1 : local.iter_1897.tape_ptr - 1 :
      local.curr_1898.code == ">"
        ? local.iter_1897.tape_ptr == length(local.iter_1897.tape) - 1 ? 0 : local.iter_1897.tape_ptr + 1
        : local.iter_1897.tape_ptr)

    code_ptr = 1 + (
      local.curr_1898.code == "["
        ? local.iter_1897.tape[local.iter_1897.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1897.code_ptr)] : local.iter_1897.code_ptr :
      local.curr_1898.code == "]"
        ? local.iter_1897.tape[local.iter_1897.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1897.code_ptr)] : local.iter_1897.code_ptr
        : local.iter_1897.code_ptr)

    steps_taken = 1 + local.iter_1897.steps_taken
  }
}

locals {
  end_of_code_1899 = try(local.iter_1898.code_ptr >= length(var.code), true)

  curr_1899 = local.end_of_code_1899 ? null : {
    code = substr(var.code, local.iter_1898.code_ptr, 1)
    input = substr(var.code, local.iter_1898.code_ptr, 1) == "," ? substr(local.iter_1898.input, 0, 1) : null
  }

  iter_1899 = local.end_of_code_1899 ? local.iter_1898 : {
    input = (local.curr_1899.code == ","
      ? substr(local.iter_1898.input, 1, -1)
      : local.iter_1898.input)

    output = (local.curr_1899.code == "."
      ? "${local.iter_1898.output}${jsondecode(format("\"\\u%04x\"", local.iter_1898.tape[local.iter_1898.tape_ptr]))}"
      : local.iter_1898.output)
    
    tape = (
      local.curr_1899.code == "+"
        ? [for i, b in local.iter_1898.tape : (i == local.iter_1898.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1899.code == "-"
        ? [for i, b in local.iter_1898.tape : (i == local.iter_1898.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1899.code == ","
        ? [for i, b in local.iter_1898.tape : (i == local.iter_1898.tape_ptr ? local.ascii_lookup[local.curr_1899.input] : b)]
        : local.iter_1898.tape)

    tape_ptr = (
      local.curr_1899.code == "<"
        ? local.iter_1898.tape_ptr == 0 ? length(local.iter_1898.tape) - 1 : local.iter_1898.tape_ptr - 1 :
      local.curr_1899.code == ">"
        ? local.iter_1898.tape_ptr == length(local.iter_1898.tape) - 1 ? 0 : local.iter_1898.tape_ptr + 1
        : local.iter_1898.tape_ptr)

    code_ptr = 1 + (
      local.curr_1899.code == "["
        ? local.iter_1898.tape[local.iter_1898.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1898.code_ptr)] : local.iter_1898.code_ptr :
      local.curr_1899.code == "]"
        ? local.iter_1898.tape[local.iter_1898.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1898.code_ptr)] : local.iter_1898.code_ptr
        : local.iter_1898.code_ptr)

    steps_taken = 1 + local.iter_1898.steps_taken
  }
}

locals {
  end_of_code_1900 = try(local.iter_1899.code_ptr >= length(var.code), true)

  curr_1900 = local.end_of_code_1900 ? null : {
    code = substr(var.code, local.iter_1899.code_ptr, 1)
    input = substr(var.code, local.iter_1899.code_ptr, 1) == "," ? substr(local.iter_1899.input, 0, 1) : null
  }

  iter_1900 = local.end_of_code_1900 ? local.iter_1899 : {
    input = (local.curr_1900.code == ","
      ? substr(local.iter_1899.input, 1, -1)
      : local.iter_1899.input)

    output = (local.curr_1900.code == "."
      ? "${local.iter_1899.output}${jsondecode(format("\"\\u%04x\"", local.iter_1899.tape[local.iter_1899.tape_ptr]))}"
      : local.iter_1899.output)
    
    tape = (
      local.curr_1900.code == "+"
        ? [for i, b in local.iter_1899.tape : (i == local.iter_1899.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1900.code == "-"
        ? [for i, b in local.iter_1899.tape : (i == local.iter_1899.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1900.code == ","
        ? [for i, b in local.iter_1899.tape : (i == local.iter_1899.tape_ptr ? local.ascii_lookup[local.curr_1900.input] : b)]
        : local.iter_1899.tape)

    tape_ptr = (
      local.curr_1900.code == "<"
        ? local.iter_1899.tape_ptr == 0 ? length(local.iter_1899.tape) - 1 : local.iter_1899.tape_ptr - 1 :
      local.curr_1900.code == ">"
        ? local.iter_1899.tape_ptr == length(local.iter_1899.tape) - 1 ? 0 : local.iter_1899.tape_ptr + 1
        : local.iter_1899.tape_ptr)

    code_ptr = 1 + (
      local.curr_1900.code == "["
        ? local.iter_1899.tape[local.iter_1899.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1899.code_ptr)] : local.iter_1899.code_ptr :
      local.curr_1900.code == "]"
        ? local.iter_1899.tape[local.iter_1899.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1899.code_ptr)] : local.iter_1899.code_ptr
        : local.iter_1899.code_ptr)

    steps_taken = 1 + local.iter_1899.steps_taken
  }
}

locals {
  end_of_code_1901 = try(local.iter_1900.code_ptr >= length(var.code), true)

  curr_1901 = local.end_of_code_1901 ? null : {
    code = substr(var.code, local.iter_1900.code_ptr, 1)
    input = substr(var.code, local.iter_1900.code_ptr, 1) == "," ? substr(local.iter_1900.input, 0, 1) : null
  }

  iter_1901 = local.end_of_code_1901 ? local.iter_1900 : {
    input = (local.curr_1901.code == ","
      ? substr(local.iter_1900.input, 1, -1)
      : local.iter_1900.input)

    output = (local.curr_1901.code == "."
      ? "${local.iter_1900.output}${jsondecode(format("\"\\u%04x\"", local.iter_1900.tape[local.iter_1900.tape_ptr]))}"
      : local.iter_1900.output)
    
    tape = (
      local.curr_1901.code == "+"
        ? [for i, b in local.iter_1900.tape : (i == local.iter_1900.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1901.code == "-"
        ? [for i, b in local.iter_1900.tape : (i == local.iter_1900.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1901.code == ","
        ? [for i, b in local.iter_1900.tape : (i == local.iter_1900.tape_ptr ? local.ascii_lookup[local.curr_1901.input] : b)]
        : local.iter_1900.tape)

    tape_ptr = (
      local.curr_1901.code == "<"
        ? local.iter_1900.tape_ptr == 0 ? length(local.iter_1900.tape) - 1 : local.iter_1900.tape_ptr - 1 :
      local.curr_1901.code == ">"
        ? local.iter_1900.tape_ptr == length(local.iter_1900.tape) - 1 ? 0 : local.iter_1900.tape_ptr + 1
        : local.iter_1900.tape_ptr)

    code_ptr = 1 + (
      local.curr_1901.code == "["
        ? local.iter_1900.tape[local.iter_1900.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1900.code_ptr)] : local.iter_1900.code_ptr :
      local.curr_1901.code == "]"
        ? local.iter_1900.tape[local.iter_1900.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1900.code_ptr)] : local.iter_1900.code_ptr
        : local.iter_1900.code_ptr)

    steps_taken = 1 + local.iter_1900.steps_taken
  }
}

locals {
  end_of_code_1902 = try(local.iter_1901.code_ptr >= length(var.code), true)

  curr_1902 = local.end_of_code_1902 ? null : {
    code = substr(var.code, local.iter_1901.code_ptr, 1)
    input = substr(var.code, local.iter_1901.code_ptr, 1) == "," ? substr(local.iter_1901.input, 0, 1) : null
  }

  iter_1902 = local.end_of_code_1902 ? local.iter_1901 : {
    input = (local.curr_1902.code == ","
      ? substr(local.iter_1901.input, 1, -1)
      : local.iter_1901.input)

    output = (local.curr_1902.code == "."
      ? "${local.iter_1901.output}${jsondecode(format("\"\\u%04x\"", local.iter_1901.tape[local.iter_1901.tape_ptr]))}"
      : local.iter_1901.output)
    
    tape = (
      local.curr_1902.code == "+"
        ? [for i, b in local.iter_1901.tape : (i == local.iter_1901.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1902.code == "-"
        ? [for i, b in local.iter_1901.tape : (i == local.iter_1901.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1902.code == ","
        ? [for i, b in local.iter_1901.tape : (i == local.iter_1901.tape_ptr ? local.ascii_lookup[local.curr_1902.input] : b)]
        : local.iter_1901.tape)

    tape_ptr = (
      local.curr_1902.code == "<"
        ? local.iter_1901.tape_ptr == 0 ? length(local.iter_1901.tape) - 1 : local.iter_1901.tape_ptr - 1 :
      local.curr_1902.code == ">"
        ? local.iter_1901.tape_ptr == length(local.iter_1901.tape) - 1 ? 0 : local.iter_1901.tape_ptr + 1
        : local.iter_1901.tape_ptr)

    code_ptr = 1 + (
      local.curr_1902.code == "["
        ? local.iter_1901.tape[local.iter_1901.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1901.code_ptr)] : local.iter_1901.code_ptr :
      local.curr_1902.code == "]"
        ? local.iter_1901.tape[local.iter_1901.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1901.code_ptr)] : local.iter_1901.code_ptr
        : local.iter_1901.code_ptr)

    steps_taken = 1 + local.iter_1901.steps_taken
  }
}

locals {
  end_of_code_1903 = try(local.iter_1902.code_ptr >= length(var.code), true)

  curr_1903 = local.end_of_code_1903 ? null : {
    code = substr(var.code, local.iter_1902.code_ptr, 1)
    input = substr(var.code, local.iter_1902.code_ptr, 1) == "," ? substr(local.iter_1902.input, 0, 1) : null
  }

  iter_1903 = local.end_of_code_1903 ? local.iter_1902 : {
    input = (local.curr_1903.code == ","
      ? substr(local.iter_1902.input, 1, -1)
      : local.iter_1902.input)

    output = (local.curr_1903.code == "."
      ? "${local.iter_1902.output}${jsondecode(format("\"\\u%04x\"", local.iter_1902.tape[local.iter_1902.tape_ptr]))}"
      : local.iter_1902.output)
    
    tape = (
      local.curr_1903.code == "+"
        ? [for i, b in local.iter_1902.tape : (i == local.iter_1902.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1903.code == "-"
        ? [for i, b in local.iter_1902.tape : (i == local.iter_1902.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1903.code == ","
        ? [for i, b in local.iter_1902.tape : (i == local.iter_1902.tape_ptr ? local.ascii_lookup[local.curr_1903.input] : b)]
        : local.iter_1902.tape)

    tape_ptr = (
      local.curr_1903.code == "<"
        ? local.iter_1902.tape_ptr == 0 ? length(local.iter_1902.tape) - 1 : local.iter_1902.tape_ptr - 1 :
      local.curr_1903.code == ">"
        ? local.iter_1902.tape_ptr == length(local.iter_1902.tape) - 1 ? 0 : local.iter_1902.tape_ptr + 1
        : local.iter_1902.tape_ptr)

    code_ptr = 1 + (
      local.curr_1903.code == "["
        ? local.iter_1902.tape[local.iter_1902.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1902.code_ptr)] : local.iter_1902.code_ptr :
      local.curr_1903.code == "]"
        ? local.iter_1902.tape[local.iter_1902.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1902.code_ptr)] : local.iter_1902.code_ptr
        : local.iter_1902.code_ptr)

    steps_taken = 1 + local.iter_1902.steps_taken
  }
}

locals {
  end_of_code_1904 = try(local.iter_1903.code_ptr >= length(var.code), true)

  curr_1904 = local.end_of_code_1904 ? null : {
    code = substr(var.code, local.iter_1903.code_ptr, 1)
    input = substr(var.code, local.iter_1903.code_ptr, 1) == "," ? substr(local.iter_1903.input, 0, 1) : null
  }

  iter_1904 = local.end_of_code_1904 ? local.iter_1903 : {
    input = (local.curr_1904.code == ","
      ? substr(local.iter_1903.input, 1, -1)
      : local.iter_1903.input)

    output = (local.curr_1904.code == "."
      ? "${local.iter_1903.output}${jsondecode(format("\"\\u%04x\"", local.iter_1903.tape[local.iter_1903.tape_ptr]))}"
      : local.iter_1903.output)
    
    tape = (
      local.curr_1904.code == "+"
        ? [for i, b in local.iter_1903.tape : (i == local.iter_1903.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1904.code == "-"
        ? [for i, b in local.iter_1903.tape : (i == local.iter_1903.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1904.code == ","
        ? [for i, b in local.iter_1903.tape : (i == local.iter_1903.tape_ptr ? local.ascii_lookup[local.curr_1904.input] : b)]
        : local.iter_1903.tape)

    tape_ptr = (
      local.curr_1904.code == "<"
        ? local.iter_1903.tape_ptr == 0 ? length(local.iter_1903.tape) - 1 : local.iter_1903.tape_ptr - 1 :
      local.curr_1904.code == ">"
        ? local.iter_1903.tape_ptr == length(local.iter_1903.tape) - 1 ? 0 : local.iter_1903.tape_ptr + 1
        : local.iter_1903.tape_ptr)

    code_ptr = 1 + (
      local.curr_1904.code == "["
        ? local.iter_1903.tape[local.iter_1903.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1903.code_ptr)] : local.iter_1903.code_ptr :
      local.curr_1904.code == "]"
        ? local.iter_1903.tape[local.iter_1903.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1903.code_ptr)] : local.iter_1903.code_ptr
        : local.iter_1903.code_ptr)

    steps_taken = 1 + local.iter_1903.steps_taken
  }
}

locals {
  end_of_code_1905 = try(local.iter_1904.code_ptr >= length(var.code), true)

  curr_1905 = local.end_of_code_1905 ? null : {
    code = substr(var.code, local.iter_1904.code_ptr, 1)
    input = substr(var.code, local.iter_1904.code_ptr, 1) == "," ? substr(local.iter_1904.input, 0, 1) : null
  }

  iter_1905 = local.end_of_code_1905 ? local.iter_1904 : {
    input = (local.curr_1905.code == ","
      ? substr(local.iter_1904.input, 1, -1)
      : local.iter_1904.input)

    output = (local.curr_1905.code == "."
      ? "${local.iter_1904.output}${jsondecode(format("\"\\u%04x\"", local.iter_1904.tape[local.iter_1904.tape_ptr]))}"
      : local.iter_1904.output)
    
    tape = (
      local.curr_1905.code == "+"
        ? [for i, b in local.iter_1904.tape : (i == local.iter_1904.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1905.code == "-"
        ? [for i, b in local.iter_1904.tape : (i == local.iter_1904.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1905.code == ","
        ? [for i, b in local.iter_1904.tape : (i == local.iter_1904.tape_ptr ? local.ascii_lookup[local.curr_1905.input] : b)]
        : local.iter_1904.tape)

    tape_ptr = (
      local.curr_1905.code == "<"
        ? local.iter_1904.tape_ptr == 0 ? length(local.iter_1904.tape) - 1 : local.iter_1904.tape_ptr - 1 :
      local.curr_1905.code == ">"
        ? local.iter_1904.tape_ptr == length(local.iter_1904.tape) - 1 ? 0 : local.iter_1904.tape_ptr + 1
        : local.iter_1904.tape_ptr)

    code_ptr = 1 + (
      local.curr_1905.code == "["
        ? local.iter_1904.tape[local.iter_1904.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1904.code_ptr)] : local.iter_1904.code_ptr :
      local.curr_1905.code == "]"
        ? local.iter_1904.tape[local.iter_1904.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1904.code_ptr)] : local.iter_1904.code_ptr
        : local.iter_1904.code_ptr)

    steps_taken = 1 + local.iter_1904.steps_taken
  }
}

locals {
  end_of_code_1906 = try(local.iter_1905.code_ptr >= length(var.code), true)

  curr_1906 = local.end_of_code_1906 ? null : {
    code = substr(var.code, local.iter_1905.code_ptr, 1)
    input = substr(var.code, local.iter_1905.code_ptr, 1) == "," ? substr(local.iter_1905.input, 0, 1) : null
  }

  iter_1906 = local.end_of_code_1906 ? local.iter_1905 : {
    input = (local.curr_1906.code == ","
      ? substr(local.iter_1905.input, 1, -1)
      : local.iter_1905.input)

    output = (local.curr_1906.code == "."
      ? "${local.iter_1905.output}${jsondecode(format("\"\\u%04x\"", local.iter_1905.tape[local.iter_1905.tape_ptr]))}"
      : local.iter_1905.output)
    
    tape = (
      local.curr_1906.code == "+"
        ? [for i, b in local.iter_1905.tape : (i == local.iter_1905.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1906.code == "-"
        ? [for i, b in local.iter_1905.tape : (i == local.iter_1905.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1906.code == ","
        ? [for i, b in local.iter_1905.tape : (i == local.iter_1905.tape_ptr ? local.ascii_lookup[local.curr_1906.input] : b)]
        : local.iter_1905.tape)

    tape_ptr = (
      local.curr_1906.code == "<"
        ? local.iter_1905.tape_ptr == 0 ? length(local.iter_1905.tape) - 1 : local.iter_1905.tape_ptr - 1 :
      local.curr_1906.code == ">"
        ? local.iter_1905.tape_ptr == length(local.iter_1905.tape) - 1 ? 0 : local.iter_1905.tape_ptr + 1
        : local.iter_1905.tape_ptr)

    code_ptr = 1 + (
      local.curr_1906.code == "["
        ? local.iter_1905.tape[local.iter_1905.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1905.code_ptr)] : local.iter_1905.code_ptr :
      local.curr_1906.code == "]"
        ? local.iter_1905.tape[local.iter_1905.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1905.code_ptr)] : local.iter_1905.code_ptr
        : local.iter_1905.code_ptr)

    steps_taken = 1 + local.iter_1905.steps_taken
  }
}

locals {
  end_of_code_1907 = try(local.iter_1906.code_ptr >= length(var.code), true)

  curr_1907 = local.end_of_code_1907 ? null : {
    code = substr(var.code, local.iter_1906.code_ptr, 1)
    input = substr(var.code, local.iter_1906.code_ptr, 1) == "," ? substr(local.iter_1906.input, 0, 1) : null
  }

  iter_1907 = local.end_of_code_1907 ? local.iter_1906 : {
    input = (local.curr_1907.code == ","
      ? substr(local.iter_1906.input, 1, -1)
      : local.iter_1906.input)

    output = (local.curr_1907.code == "."
      ? "${local.iter_1906.output}${jsondecode(format("\"\\u%04x\"", local.iter_1906.tape[local.iter_1906.tape_ptr]))}"
      : local.iter_1906.output)
    
    tape = (
      local.curr_1907.code == "+"
        ? [for i, b in local.iter_1906.tape : (i == local.iter_1906.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1907.code == "-"
        ? [for i, b in local.iter_1906.tape : (i == local.iter_1906.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1907.code == ","
        ? [for i, b in local.iter_1906.tape : (i == local.iter_1906.tape_ptr ? local.ascii_lookup[local.curr_1907.input] : b)]
        : local.iter_1906.tape)

    tape_ptr = (
      local.curr_1907.code == "<"
        ? local.iter_1906.tape_ptr == 0 ? length(local.iter_1906.tape) - 1 : local.iter_1906.tape_ptr - 1 :
      local.curr_1907.code == ">"
        ? local.iter_1906.tape_ptr == length(local.iter_1906.tape) - 1 ? 0 : local.iter_1906.tape_ptr + 1
        : local.iter_1906.tape_ptr)

    code_ptr = 1 + (
      local.curr_1907.code == "["
        ? local.iter_1906.tape[local.iter_1906.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1906.code_ptr)] : local.iter_1906.code_ptr :
      local.curr_1907.code == "]"
        ? local.iter_1906.tape[local.iter_1906.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1906.code_ptr)] : local.iter_1906.code_ptr
        : local.iter_1906.code_ptr)

    steps_taken = 1 + local.iter_1906.steps_taken
  }
}

locals {
  end_of_code_1908 = try(local.iter_1907.code_ptr >= length(var.code), true)

  curr_1908 = local.end_of_code_1908 ? null : {
    code = substr(var.code, local.iter_1907.code_ptr, 1)
    input = substr(var.code, local.iter_1907.code_ptr, 1) == "," ? substr(local.iter_1907.input, 0, 1) : null
  }

  iter_1908 = local.end_of_code_1908 ? local.iter_1907 : {
    input = (local.curr_1908.code == ","
      ? substr(local.iter_1907.input, 1, -1)
      : local.iter_1907.input)

    output = (local.curr_1908.code == "."
      ? "${local.iter_1907.output}${jsondecode(format("\"\\u%04x\"", local.iter_1907.tape[local.iter_1907.tape_ptr]))}"
      : local.iter_1907.output)
    
    tape = (
      local.curr_1908.code == "+"
        ? [for i, b in local.iter_1907.tape : (i == local.iter_1907.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1908.code == "-"
        ? [for i, b in local.iter_1907.tape : (i == local.iter_1907.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1908.code == ","
        ? [for i, b in local.iter_1907.tape : (i == local.iter_1907.tape_ptr ? local.ascii_lookup[local.curr_1908.input] : b)]
        : local.iter_1907.tape)

    tape_ptr = (
      local.curr_1908.code == "<"
        ? local.iter_1907.tape_ptr == 0 ? length(local.iter_1907.tape) - 1 : local.iter_1907.tape_ptr - 1 :
      local.curr_1908.code == ">"
        ? local.iter_1907.tape_ptr == length(local.iter_1907.tape) - 1 ? 0 : local.iter_1907.tape_ptr + 1
        : local.iter_1907.tape_ptr)

    code_ptr = 1 + (
      local.curr_1908.code == "["
        ? local.iter_1907.tape[local.iter_1907.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1907.code_ptr)] : local.iter_1907.code_ptr :
      local.curr_1908.code == "]"
        ? local.iter_1907.tape[local.iter_1907.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1907.code_ptr)] : local.iter_1907.code_ptr
        : local.iter_1907.code_ptr)

    steps_taken = 1 + local.iter_1907.steps_taken
  }
}

locals {
  end_of_code_1909 = try(local.iter_1908.code_ptr >= length(var.code), true)

  curr_1909 = local.end_of_code_1909 ? null : {
    code = substr(var.code, local.iter_1908.code_ptr, 1)
    input = substr(var.code, local.iter_1908.code_ptr, 1) == "," ? substr(local.iter_1908.input, 0, 1) : null
  }

  iter_1909 = local.end_of_code_1909 ? local.iter_1908 : {
    input = (local.curr_1909.code == ","
      ? substr(local.iter_1908.input, 1, -1)
      : local.iter_1908.input)

    output = (local.curr_1909.code == "."
      ? "${local.iter_1908.output}${jsondecode(format("\"\\u%04x\"", local.iter_1908.tape[local.iter_1908.tape_ptr]))}"
      : local.iter_1908.output)
    
    tape = (
      local.curr_1909.code == "+"
        ? [for i, b in local.iter_1908.tape : (i == local.iter_1908.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1909.code == "-"
        ? [for i, b in local.iter_1908.tape : (i == local.iter_1908.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1909.code == ","
        ? [for i, b in local.iter_1908.tape : (i == local.iter_1908.tape_ptr ? local.ascii_lookup[local.curr_1909.input] : b)]
        : local.iter_1908.tape)

    tape_ptr = (
      local.curr_1909.code == "<"
        ? local.iter_1908.tape_ptr == 0 ? length(local.iter_1908.tape) - 1 : local.iter_1908.tape_ptr - 1 :
      local.curr_1909.code == ">"
        ? local.iter_1908.tape_ptr == length(local.iter_1908.tape) - 1 ? 0 : local.iter_1908.tape_ptr + 1
        : local.iter_1908.tape_ptr)

    code_ptr = 1 + (
      local.curr_1909.code == "["
        ? local.iter_1908.tape[local.iter_1908.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1908.code_ptr)] : local.iter_1908.code_ptr :
      local.curr_1909.code == "]"
        ? local.iter_1908.tape[local.iter_1908.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1908.code_ptr)] : local.iter_1908.code_ptr
        : local.iter_1908.code_ptr)

    steps_taken = 1 + local.iter_1908.steps_taken
  }
}

locals {
  end_of_code_1910 = try(local.iter_1909.code_ptr >= length(var.code), true)

  curr_1910 = local.end_of_code_1910 ? null : {
    code = substr(var.code, local.iter_1909.code_ptr, 1)
    input = substr(var.code, local.iter_1909.code_ptr, 1) == "," ? substr(local.iter_1909.input, 0, 1) : null
  }

  iter_1910 = local.end_of_code_1910 ? local.iter_1909 : {
    input = (local.curr_1910.code == ","
      ? substr(local.iter_1909.input, 1, -1)
      : local.iter_1909.input)

    output = (local.curr_1910.code == "."
      ? "${local.iter_1909.output}${jsondecode(format("\"\\u%04x\"", local.iter_1909.tape[local.iter_1909.tape_ptr]))}"
      : local.iter_1909.output)
    
    tape = (
      local.curr_1910.code == "+"
        ? [for i, b in local.iter_1909.tape : (i == local.iter_1909.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1910.code == "-"
        ? [for i, b in local.iter_1909.tape : (i == local.iter_1909.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1910.code == ","
        ? [for i, b in local.iter_1909.tape : (i == local.iter_1909.tape_ptr ? local.ascii_lookup[local.curr_1910.input] : b)]
        : local.iter_1909.tape)

    tape_ptr = (
      local.curr_1910.code == "<"
        ? local.iter_1909.tape_ptr == 0 ? length(local.iter_1909.tape) - 1 : local.iter_1909.tape_ptr - 1 :
      local.curr_1910.code == ">"
        ? local.iter_1909.tape_ptr == length(local.iter_1909.tape) - 1 ? 0 : local.iter_1909.tape_ptr + 1
        : local.iter_1909.tape_ptr)

    code_ptr = 1 + (
      local.curr_1910.code == "["
        ? local.iter_1909.tape[local.iter_1909.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1909.code_ptr)] : local.iter_1909.code_ptr :
      local.curr_1910.code == "]"
        ? local.iter_1909.tape[local.iter_1909.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1909.code_ptr)] : local.iter_1909.code_ptr
        : local.iter_1909.code_ptr)

    steps_taken = 1 + local.iter_1909.steps_taken
  }
}

locals {
  end_of_code_1911 = try(local.iter_1910.code_ptr >= length(var.code), true)

  curr_1911 = local.end_of_code_1911 ? null : {
    code = substr(var.code, local.iter_1910.code_ptr, 1)
    input = substr(var.code, local.iter_1910.code_ptr, 1) == "," ? substr(local.iter_1910.input, 0, 1) : null
  }

  iter_1911 = local.end_of_code_1911 ? local.iter_1910 : {
    input = (local.curr_1911.code == ","
      ? substr(local.iter_1910.input, 1, -1)
      : local.iter_1910.input)

    output = (local.curr_1911.code == "."
      ? "${local.iter_1910.output}${jsondecode(format("\"\\u%04x\"", local.iter_1910.tape[local.iter_1910.tape_ptr]))}"
      : local.iter_1910.output)
    
    tape = (
      local.curr_1911.code == "+"
        ? [for i, b in local.iter_1910.tape : (i == local.iter_1910.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1911.code == "-"
        ? [for i, b in local.iter_1910.tape : (i == local.iter_1910.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1911.code == ","
        ? [for i, b in local.iter_1910.tape : (i == local.iter_1910.tape_ptr ? local.ascii_lookup[local.curr_1911.input] : b)]
        : local.iter_1910.tape)

    tape_ptr = (
      local.curr_1911.code == "<"
        ? local.iter_1910.tape_ptr == 0 ? length(local.iter_1910.tape) - 1 : local.iter_1910.tape_ptr - 1 :
      local.curr_1911.code == ">"
        ? local.iter_1910.tape_ptr == length(local.iter_1910.tape) - 1 ? 0 : local.iter_1910.tape_ptr + 1
        : local.iter_1910.tape_ptr)

    code_ptr = 1 + (
      local.curr_1911.code == "["
        ? local.iter_1910.tape[local.iter_1910.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1910.code_ptr)] : local.iter_1910.code_ptr :
      local.curr_1911.code == "]"
        ? local.iter_1910.tape[local.iter_1910.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1910.code_ptr)] : local.iter_1910.code_ptr
        : local.iter_1910.code_ptr)

    steps_taken = 1 + local.iter_1910.steps_taken
  }
}

locals {
  end_of_code_1912 = try(local.iter_1911.code_ptr >= length(var.code), true)

  curr_1912 = local.end_of_code_1912 ? null : {
    code = substr(var.code, local.iter_1911.code_ptr, 1)
    input = substr(var.code, local.iter_1911.code_ptr, 1) == "," ? substr(local.iter_1911.input, 0, 1) : null
  }

  iter_1912 = local.end_of_code_1912 ? local.iter_1911 : {
    input = (local.curr_1912.code == ","
      ? substr(local.iter_1911.input, 1, -1)
      : local.iter_1911.input)

    output = (local.curr_1912.code == "."
      ? "${local.iter_1911.output}${jsondecode(format("\"\\u%04x\"", local.iter_1911.tape[local.iter_1911.tape_ptr]))}"
      : local.iter_1911.output)
    
    tape = (
      local.curr_1912.code == "+"
        ? [for i, b in local.iter_1911.tape : (i == local.iter_1911.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1912.code == "-"
        ? [for i, b in local.iter_1911.tape : (i == local.iter_1911.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1912.code == ","
        ? [for i, b in local.iter_1911.tape : (i == local.iter_1911.tape_ptr ? local.ascii_lookup[local.curr_1912.input] : b)]
        : local.iter_1911.tape)

    tape_ptr = (
      local.curr_1912.code == "<"
        ? local.iter_1911.tape_ptr == 0 ? length(local.iter_1911.tape) - 1 : local.iter_1911.tape_ptr - 1 :
      local.curr_1912.code == ">"
        ? local.iter_1911.tape_ptr == length(local.iter_1911.tape) - 1 ? 0 : local.iter_1911.tape_ptr + 1
        : local.iter_1911.tape_ptr)

    code_ptr = 1 + (
      local.curr_1912.code == "["
        ? local.iter_1911.tape[local.iter_1911.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1911.code_ptr)] : local.iter_1911.code_ptr :
      local.curr_1912.code == "]"
        ? local.iter_1911.tape[local.iter_1911.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1911.code_ptr)] : local.iter_1911.code_ptr
        : local.iter_1911.code_ptr)

    steps_taken = 1 + local.iter_1911.steps_taken
  }
}

locals {
  end_of_code_1913 = try(local.iter_1912.code_ptr >= length(var.code), true)

  curr_1913 = local.end_of_code_1913 ? null : {
    code = substr(var.code, local.iter_1912.code_ptr, 1)
    input = substr(var.code, local.iter_1912.code_ptr, 1) == "," ? substr(local.iter_1912.input, 0, 1) : null
  }

  iter_1913 = local.end_of_code_1913 ? local.iter_1912 : {
    input = (local.curr_1913.code == ","
      ? substr(local.iter_1912.input, 1, -1)
      : local.iter_1912.input)

    output = (local.curr_1913.code == "."
      ? "${local.iter_1912.output}${jsondecode(format("\"\\u%04x\"", local.iter_1912.tape[local.iter_1912.tape_ptr]))}"
      : local.iter_1912.output)
    
    tape = (
      local.curr_1913.code == "+"
        ? [for i, b in local.iter_1912.tape : (i == local.iter_1912.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1913.code == "-"
        ? [for i, b in local.iter_1912.tape : (i == local.iter_1912.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1913.code == ","
        ? [for i, b in local.iter_1912.tape : (i == local.iter_1912.tape_ptr ? local.ascii_lookup[local.curr_1913.input] : b)]
        : local.iter_1912.tape)

    tape_ptr = (
      local.curr_1913.code == "<"
        ? local.iter_1912.tape_ptr == 0 ? length(local.iter_1912.tape) - 1 : local.iter_1912.tape_ptr - 1 :
      local.curr_1913.code == ">"
        ? local.iter_1912.tape_ptr == length(local.iter_1912.tape) - 1 ? 0 : local.iter_1912.tape_ptr + 1
        : local.iter_1912.tape_ptr)

    code_ptr = 1 + (
      local.curr_1913.code == "["
        ? local.iter_1912.tape[local.iter_1912.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1912.code_ptr)] : local.iter_1912.code_ptr :
      local.curr_1913.code == "]"
        ? local.iter_1912.tape[local.iter_1912.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1912.code_ptr)] : local.iter_1912.code_ptr
        : local.iter_1912.code_ptr)

    steps_taken = 1 + local.iter_1912.steps_taken
  }
}

locals {
  end_of_code_1914 = try(local.iter_1913.code_ptr >= length(var.code), true)

  curr_1914 = local.end_of_code_1914 ? null : {
    code = substr(var.code, local.iter_1913.code_ptr, 1)
    input = substr(var.code, local.iter_1913.code_ptr, 1) == "," ? substr(local.iter_1913.input, 0, 1) : null
  }

  iter_1914 = local.end_of_code_1914 ? local.iter_1913 : {
    input = (local.curr_1914.code == ","
      ? substr(local.iter_1913.input, 1, -1)
      : local.iter_1913.input)

    output = (local.curr_1914.code == "."
      ? "${local.iter_1913.output}${jsondecode(format("\"\\u%04x\"", local.iter_1913.tape[local.iter_1913.tape_ptr]))}"
      : local.iter_1913.output)
    
    tape = (
      local.curr_1914.code == "+"
        ? [for i, b in local.iter_1913.tape : (i == local.iter_1913.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1914.code == "-"
        ? [for i, b in local.iter_1913.tape : (i == local.iter_1913.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1914.code == ","
        ? [for i, b in local.iter_1913.tape : (i == local.iter_1913.tape_ptr ? local.ascii_lookup[local.curr_1914.input] : b)]
        : local.iter_1913.tape)

    tape_ptr = (
      local.curr_1914.code == "<"
        ? local.iter_1913.tape_ptr == 0 ? length(local.iter_1913.tape) - 1 : local.iter_1913.tape_ptr - 1 :
      local.curr_1914.code == ">"
        ? local.iter_1913.tape_ptr == length(local.iter_1913.tape) - 1 ? 0 : local.iter_1913.tape_ptr + 1
        : local.iter_1913.tape_ptr)

    code_ptr = 1 + (
      local.curr_1914.code == "["
        ? local.iter_1913.tape[local.iter_1913.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1913.code_ptr)] : local.iter_1913.code_ptr :
      local.curr_1914.code == "]"
        ? local.iter_1913.tape[local.iter_1913.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1913.code_ptr)] : local.iter_1913.code_ptr
        : local.iter_1913.code_ptr)

    steps_taken = 1 + local.iter_1913.steps_taken
  }
}

locals {
  end_of_code_1915 = try(local.iter_1914.code_ptr >= length(var.code), true)

  curr_1915 = local.end_of_code_1915 ? null : {
    code = substr(var.code, local.iter_1914.code_ptr, 1)
    input = substr(var.code, local.iter_1914.code_ptr, 1) == "," ? substr(local.iter_1914.input, 0, 1) : null
  }

  iter_1915 = local.end_of_code_1915 ? local.iter_1914 : {
    input = (local.curr_1915.code == ","
      ? substr(local.iter_1914.input, 1, -1)
      : local.iter_1914.input)

    output = (local.curr_1915.code == "."
      ? "${local.iter_1914.output}${jsondecode(format("\"\\u%04x\"", local.iter_1914.tape[local.iter_1914.tape_ptr]))}"
      : local.iter_1914.output)
    
    tape = (
      local.curr_1915.code == "+"
        ? [for i, b in local.iter_1914.tape : (i == local.iter_1914.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1915.code == "-"
        ? [for i, b in local.iter_1914.tape : (i == local.iter_1914.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1915.code == ","
        ? [for i, b in local.iter_1914.tape : (i == local.iter_1914.tape_ptr ? local.ascii_lookup[local.curr_1915.input] : b)]
        : local.iter_1914.tape)

    tape_ptr = (
      local.curr_1915.code == "<"
        ? local.iter_1914.tape_ptr == 0 ? length(local.iter_1914.tape) - 1 : local.iter_1914.tape_ptr - 1 :
      local.curr_1915.code == ">"
        ? local.iter_1914.tape_ptr == length(local.iter_1914.tape) - 1 ? 0 : local.iter_1914.tape_ptr + 1
        : local.iter_1914.tape_ptr)

    code_ptr = 1 + (
      local.curr_1915.code == "["
        ? local.iter_1914.tape[local.iter_1914.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1914.code_ptr)] : local.iter_1914.code_ptr :
      local.curr_1915.code == "]"
        ? local.iter_1914.tape[local.iter_1914.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1914.code_ptr)] : local.iter_1914.code_ptr
        : local.iter_1914.code_ptr)

    steps_taken = 1 + local.iter_1914.steps_taken
  }
}

locals {
  end_of_code_1916 = try(local.iter_1915.code_ptr >= length(var.code), true)

  curr_1916 = local.end_of_code_1916 ? null : {
    code = substr(var.code, local.iter_1915.code_ptr, 1)
    input = substr(var.code, local.iter_1915.code_ptr, 1) == "," ? substr(local.iter_1915.input, 0, 1) : null
  }

  iter_1916 = local.end_of_code_1916 ? local.iter_1915 : {
    input = (local.curr_1916.code == ","
      ? substr(local.iter_1915.input, 1, -1)
      : local.iter_1915.input)

    output = (local.curr_1916.code == "."
      ? "${local.iter_1915.output}${jsondecode(format("\"\\u%04x\"", local.iter_1915.tape[local.iter_1915.tape_ptr]))}"
      : local.iter_1915.output)
    
    tape = (
      local.curr_1916.code == "+"
        ? [for i, b in local.iter_1915.tape : (i == local.iter_1915.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1916.code == "-"
        ? [for i, b in local.iter_1915.tape : (i == local.iter_1915.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1916.code == ","
        ? [for i, b in local.iter_1915.tape : (i == local.iter_1915.tape_ptr ? local.ascii_lookup[local.curr_1916.input] : b)]
        : local.iter_1915.tape)

    tape_ptr = (
      local.curr_1916.code == "<"
        ? local.iter_1915.tape_ptr == 0 ? length(local.iter_1915.tape) - 1 : local.iter_1915.tape_ptr - 1 :
      local.curr_1916.code == ">"
        ? local.iter_1915.tape_ptr == length(local.iter_1915.tape) - 1 ? 0 : local.iter_1915.tape_ptr + 1
        : local.iter_1915.tape_ptr)

    code_ptr = 1 + (
      local.curr_1916.code == "["
        ? local.iter_1915.tape[local.iter_1915.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1915.code_ptr)] : local.iter_1915.code_ptr :
      local.curr_1916.code == "]"
        ? local.iter_1915.tape[local.iter_1915.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1915.code_ptr)] : local.iter_1915.code_ptr
        : local.iter_1915.code_ptr)

    steps_taken = 1 + local.iter_1915.steps_taken
  }
}

locals {
  end_of_code_1917 = try(local.iter_1916.code_ptr >= length(var.code), true)

  curr_1917 = local.end_of_code_1917 ? null : {
    code = substr(var.code, local.iter_1916.code_ptr, 1)
    input = substr(var.code, local.iter_1916.code_ptr, 1) == "," ? substr(local.iter_1916.input, 0, 1) : null
  }

  iter_1917 = local.end_of_code_1917 ? local.iter_1916 : {
    input = (local.curr_1917.code == ","
      ? substr(local.iter_1916.input, 1, -1)
      : local.iter_1916.input)

    output = (local.curr_1917.code == "."
      ? "${local.iter_1916.output}${jsondecode(format("\"\\u%04x\"", local.iter_1916.tape[local.iter_1916.tape_ptr]))}"
      : local.iter_1916.output)
    
    tape = (
      local.curr_1917.code == "+"
        ? [for i, b in local.iter_1916.tape : (i == local.iter_1916.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1917.code == "-"
        ? [for i, b in local.iter_1916.tape : (i == local.iter_1916.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1917.code == ","
        ? [for i, b in local.iter_1916.tape : (i == local.iter_1916.tape_ptr ? local.ascii_lookup[local.curr_1917.input] : b)]
        : local.iter_1916.tape)

    tape_ptr = (
      local.curr_1917.code == "<"
        ? local.iter_1916.tape_ptr == 0 ? length(local.iter_1916.tape) - 1 : local.iter_1916.tape_ptr - 1 :
      local.curr_1917.code == ">"
        ? local.iter_1916.tape_ptr == length(local.iter_1916.tape) - 1 ? 0 : local.iter_1916.tape_ptr + 1
        : local.iter_1916.tape_ptr)

    code_ptr = 1 + (
      local.curr_1917.code == "["
        ? local.iter_1916.tape[local.iter_1916.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1916.code_ptr)] : local.iter_1916.code_ptr :
      local.curr_1917.code == "]"
        ? local.iter_1916.tape[local.iter_1916.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1916.code_ptr)] : local.iter_1916.code_ptr
        : local.iter_1916.code_ptr)

    steps_taken = 1 + local.iter_1916.steps_taken
  }
}

locals {
  end_of_code_1918 = try(local.iter_1917.code_ptr >= length(var.code), true)

  curr_1918 = local.end_of_code_1918 ? null : {
    code = substr(var.code, local.iter_1917.code_ptr, 1)
    input = substr(var.code, local.iter_1917.code_ptr, 1) == "," ? substr(local.iter_1917.input, 0, 1) : null
  }

  iter_1918 = local.end_of_code_1918 ? local.iter_1917 : {
    input = (local.curr_1918.code == ","
      ? substr(local.iter_1917.input, 1, -1)
      : local.iter_1917.input)

    output = (local.curr_1918.code == "."
      ? "${local.iter_1917.output}${jsondecode(format("\"\\u%04x\"", local.iter_1917.tape[local.iter_1917.tape_ptr]))}"
      : local.iter_1917.output)
    
    tape = (
      local.curr_1918.code == "+"
        ? [for i, b in local.iter_1917.tape : (i == local.iter_1917.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1918.code == "-"
        ? [for i, b in local.iter_1917.tape : (i == local.iter_1917.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1918.code == ","
        ? [for i, b in local.iter_1917.tape : (i == local.iter_1917.tape_ptr ? local.ascii_lookup[local.curr_1918.input] : b)]
        : local.iter_1917.tape)

    tape_ptr = (
      local.curr_1918.code == "<"
        ? local.iter_1917.tape_ptr == 0 ? length(local.iter_1917.tape) - 1 : local.iter_1917.tape_ptr - 1 :
      local.curr_1918.code == ">"
        ? local.iter_1917.tape_ptr == length(local.iter_1917.tape) - 1 ? 0 : local.iter_1917.tape_ptr + 1
        : local.iter_1917.tape_ptr)

    code_ptr = 1 + (
      local.curr_1918.code == "["
        ? local.iter_1917.tape[local.iter_1917.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1917.code_ptr)] : local.iter_1917.code_ptr :
      local.curr_1918.code == "]"
        ? local.iter_1917.tape[local.iter_1917.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1917.code_ptr)] : local.iter_1917.code_ptr
        : local.iter_1917.code_ptr)

    steps_taken = 1 + local.iter_1917.steps_taken
  }
}

locals {
  end_of_code_1919 = try(local.iter_1918.code_ptr >= length(var.code), true)

  curr_1919 = local.end_of_code_1919 ? null : {
    code = substr(var.code, local.iter_1918.code_ptr, 1)
    input = substr(var.code, local.iter_1918.code_ptr, 1) == "," ? substr(local.iter_1918.input, 0, 1) : null
  }

  iter_1919 = local.end_of_code_1919 ? local.iter_1918 : {
    input = (local.curr_1919.code == ","
      ? substr(local.iter_1918.input, 1, -1)
      : local.iter_1918.input)

    output = (local.curr_1919.code == "."
      ? "${local.iter_1918.output}${jsondecode(format("\"\\u%04x\"", local.iter_1918.tape[local.iter_1918.tape_ptr]))}"
      : local.iter_1918.output)
    
    tape = (
      local.curr_1919.code == "+"
        ? [for i, b in local.iter_1918.tape : (i == local.iter_1918.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1919.code == "-"
        ? [for i, b in local.iter_1918.tape : (i == local.iter_1918.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1919.code == ","
        ? [for i, b in local.iter_1918.tape : (i == local.iter_1918.tape_ptr ? local.ascii_lookup[local.curr_1919.input] : b)]
        : local.iter_1918.tape)

    tape_ptr = (
      local.curr_1919.code == "<"
        ? local.iter_1918.tape_ptr == 0 ? length(local.iter_1918.tape) - 1 : local.iter_1918.tape_ptr - 1 :
      local.curr_1919.code == ">"
        ? local.iter_1918.tape_ptr == length(local.iter_1918.tape) - 1 ? 0 : local.iter_1918.tape_ptr + 1
        : local.iter_1918.tape_ptr)

    code_ptr = 1 + (
      local.curr_1919.code == "["
        ? local.iter_1918.tape[local.iter_1918.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1918.code_ptr)] : local.iter_1918.code_ptr :
      local.curr_1919.code == "]"
        ? local.iter_1918.tape[local.iter_1918.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1918.code_ptr)] : local.iter_1918.code_ptr
        : local.iter_1918.code_ptr)

    steps_taken = 1 + local.iter_1918.steps_taken
  }
}

locals {
  end_of_code_1920 = try(local.iter_1919.code_ptr >= length(var.code), true)

  curr_1920 = local.end_of_code_1920 ? null : {
    code = substr(var.code, local.iter_1919.code_ptr, 1)
    input = substr(var.code, local.iter_1919.code_ptr, 1) == "," ? substr(local.iter_1919.input, 0, 1) : null
  }

  iter_1920 = local.end_of_code_1920 ? local.iter_1919 : {
    input = (local.curr_1920.code == ","
      ? substr(local.iter_1919.input, 1, -1)
      : local.iter_1919.input)

    output = (local.curr_1920.code == "."
      ? "${local.iter_1919.output}${jsondecode(format("\"\\u%04x\"", local.iter_1919.tape[local.iter_1919.tape_ptr]))}"
      : local.iter_1919.output)
    
    tape = (
      local.curr_1920.code == "+"
        ? [for i, b in local.iter_1919.tape : (i == local.iter_1919.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1920.code == "-"
        ? [for i, b in local.iter_1919.tape : (i == local.iter_1919.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1920.code == ","
        ? [for i, b in local.iter_1919.tape : (i == local.iter_1919.tape_ptr ? local.ascii_lookup[local.curr_1920.input] : b)]
        : local.iter_1919.tape)

    tape_ptr = (
      local.curr_1920.code == "<"
        ? local.iter_1919.tape_ptr == 0 ? length(local.iter_1919.tape) - 1 : local.iter_1919.tape_ptr - 1 :
      local.curr_1920.code == ">"
        ? local.iter_1919.tape_ptr == length(local.iter_1919.tape) - 1 ? 0 : local.iter_1919.tape_ptr + 1
        : local.iter_1919.tape_ptr)

    code_ptr = 1 + (
      local.curr_1920.code == "["
        ? local.iter_1919.tape[local.iter_1919.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1919.code_ptr)] : local.iter_1919.code_ptr :
      local.curr_1920.code == "]"
        ? local.iter_1919.tape[local.iter_1919.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1919.code_ptr)] : local.iter_1919.code_ptr
        : local.iter_1919.code_ptr)

    steps_taken = 1 + local.iter_1919.steps_taken
  }
}

locals {
  end_of_code_1921 = try(local.iter_1920.code_ptr >= length(var.code), true)

  curr_1921 = local.end_of_code_1921 ? null : {
    code = substr(var.code, local.iter_1920.code_ptr, 1)
    input = substr(var.code, local.iter_1920.code_ptr, 1) == "," ? substr(local.iter_1920.input, 0, 1) : null
  }

  iter_1921 = local.end_of_code_1921 ? local.iter_1920 : {
    input = (local.curr_1921.code == ","
      ? substr(local.iter_1920.input, 1, -1)
      : local.iter_1920.input)

    output = (local.curr_1921.code == "."
      ? "${local.iter_1920.output}${jsondecode(format("\"\\u%04x\"", local.iter_1920.tape[local.iter_1920.tape_ptr]))}"
      : local.iter_1920.output)
    
    tape = (
      local.curr_1921.code == "+"
        ? [for i, b in local.iter_1920.tape : (i == local.iter_1920.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1921.code == "-"
        ? [for i, b in local.iter_1920.tape : (i == local.iter_1920.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1921.code == ","
        ? [for i, b in local.iter_1920.tape : (i == local.iter_1920.tape_ptr ? local.ascii_lookup[local.curr_1921.input] : b)]
        : local.iter_1920.tape)

    tape_ptr = (
      local.curr_1921.code == "<"
        ? local.iter_1920.tape_ptr == 0 ? length(local.iter_1920.tape) - 1 : local.iter_1920.tape_ptr - 1 :
      local.curr_1921.code == ">"
        ? local.iter_1920.tape_ptr == length(local.iter_1920.tape) - 1 ? 0 : local.iter_1920.tape_ptr + 1
        : local.iter_1920.tape_ptr)

    code_ptr = 1 + (
      local.curr_1921.code == "["
        ? local.iter_1920.tape[local.iter_1920.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1920.code_ptr)] : local.iter_1920.code_ptr :
      local.curr_1921.code == "]"
        ? local.iter_1920.tape[local.iter_1920.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1920.code_ptr)] : local.iter_1920.code_ptr
        : local.iter_1920.code_ptr)

    steps_taken = 1 + local.iter_1920.steps_taken
  }
}

locals {
  end_of_code_1922 = try(local.iter_1921.code_ptr >= length(var.code), true)

  curr_1922 = local.end_of_code_1922 ? null : {
    code = substr(var.code, local.iter_1921.code_ptr, 1)
    input = substr(var.code, local.iter_1921.code_ptr, 1) == "," ? substr(local.iter_1921.input, 0, 1) : null
  }

  iter_1922 = local.end_of_code_1922 ? local.iter_1921 : {
    input = (local.curr_1922.code == ","
      ? substr(local.iter_1921.input, 1, -1)
      : local.iter_1921.input)

    output = (local.curr_1922.code == "."
      ? "${local.iter_1921.output}${jsondecode(format("\"\\u%04x\"", local.iter_1921.tape[local.iter_1921.tape_ptr]))}"
      : local.iter_1921.output)
    
    tape = (
      local.curr_1922.code == "+"
        ? [for i, b in local.iter_1921.tape : (i == local.iter_1921.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1922.code == "-"
        ? [for i, b in local.iter_1921.tape : (i == local.iter_1921.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1922.code == ","
        ? [for i, b in local.iter_1921.tape : (i == local.iter_1921.tape_ptr ? local.ascii_lookup[local.curr_1922.input] : b)]
        : local.iter_1921.tape)

    tape_ptr = (
      local.curr_1922.code == "<"
        ? local.iter_1921.tape_ptr == 0 ? length(local.iter_1921.tape) - 1 : local.iter_1921.tape_ptr - 1 :
      local.curr_1922.code == ">"
        ? local.iter_1921.tape_ptr == length(local.iter_1921.tape) - 1 ? 0 : local.iter_1921.tape_ptr + 1
        : local.iter_1921.tape_ptr)

    code_ptr = 1 + (
      local.curr_1922.code == "["
        ? local.iter_1921.tape[local.iter_1921.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1921.code_ptr)] : local.iter_1921.code_ptr :
      local.curr_1922.code == "]"
        ? local.iter_1921.tape[local.iter_1921.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1921.code_ptr)] : local.iter_1921.code_ptr
        : local.iter_1921.code_ptr)

    steps_taken = 1 + local.iter_1921.steps_taken
  }
}

locals {
  end_of_code_1923 = try(local.iter_1922.code_ptr >= length(var.code), true)

  curr_1923 = local.end_of_code_1923 ? null : {
    code = substr(var.code, local.iter_1922.code_ptr, 1)
    input = substr(var.code, local.iter_1922.code_ptr, 1) == "," ? substr(local.iter_1922.input, 0, 1) : null
  }

  iter_1923 = local.end_of_code_1923 ? local.iter_1922 : {
    input = (local.curr_1923.code == ","
      ? substr(local.iter_1922.input, 1, -1)
      : local.iter_1922.input)

    output = (local.curr_1923.code == "."
      ? "${local.iter_1922.output}${jsondecode(format("\"\\u%04x\"", local.iter_1922.tape[local.iter_1922.tape_ptr]))}"
      : local.iter_1922.output)
    
    tape = (
      local.curr_1923.code == "+"
        ? [for i, b in local.iter_1922.tape : (i == local.iter_1922.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1923.code == "-"
        ? [for i, b in local.iter_1922.tape : (i == local.iter_1922.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1923.code == ","
        ? [for i, b in local.iter_1922.tape : (i == local.iter_1922.tape_ptr ? local.ascii_lookup[local.curr_1923.input] : b)]
        : local.iter_1922.tape)

    tape_ptr = (
      local.curr_1923.code == "<"
        ? local.iter_1922.tape_ptr == 0 ? length(local.iter_1922.tape) - 1 : local.iter_1922.tape_ptr - 1 :
      local.curr_1923.code == ">"
        ? local.iter_1922.tape_ptr == length(local.iter_1922.tape) - 1 ? 0 : local.iter_1922.tape_ptr + 1
        : local.iter_1922.tape_ptr)

    code_ptr = 1 + (
      local.curr_1923.code == "["
        ? local.iter_1922.tape[local.iter_1922.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1922.code_ptr)] : local.iter_1922.code_ptr :
      local.curr_1923.code == "]"
        ? local.iter_1922.tape[local.iter_1922.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1922.code_ptr)] : local.iter_1922.code_ptr
        : local.iter_1922.code_ptr)

    steps_taken = 1 + local.iter_1922.steps_taken
  }
}

locals {
  end_of_code_1924 = try(local.iter_1923.code_ptr >= length(var.code), true)

  curr_1924 = local.end_of_code_1924 ? null : {
    code = substr(var.code, local.iter_1923.code_ptr, 1)
    input = substr(var.code, local.iter_1923.code_ptr, 1) == "," ? substr(local.iter_1923.input, 0, 1) : null
  }

  iter_1924 = local.end_of_code_1924 ? local.iter_1923 : {
    input = (local.curr_1924.code == ","
      ? substr(local.iter_1923.input, 1, -1)
      : local.iter_1923.input)

    output = (local.curr_1924.code == "."
      ? "${local.iter_1923.output}${jsondecode(format("\"\\u%04x\"", local.iter_1923.tape[local.iter_1923.tape_ptr]))}"
      : local.iter_1923.output)
    
    tape = (
      local.curr_1924.code == "+"
        ? [for i, b in local.iter_1923.tape : (i == local.iter_1923.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1924.code == "-"
        ? [for i, b in local.iter_1923.tape : (i == local.iter_1923.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1924.code == ","
        ? [for i, b in local.iter_1923.tape : (i == local.iter_1923.tape_ptr ? local.ascii_lookup[local.curr_1924.input] : b)]
        : local.iter_1923.tape)

    tape_ptr = (
      local.curr_1924.code == "<"
        ? local.iter_1923.tape_ptr == 0 ? length(local.iter_1923.tape) - 1 : local.iter_1923.tape_ptr - 1 :
      local.curr_1924.code == ">"
        ? local.iter_1923.tape_ptr == length(local.iter_1923.tape) - 1 ? 0 : local.iter_1923.tape_ptr + 1
        : local.iter_1923.tape_ptr)

    code_ptr = 1 + (
      local.curr_1924.code == "["
        ? local.iter_1923.tape[local.iter_1923.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1923.code_ptr)] : local.iter_1923.code_ptr :
      local.curr_1924.code == "]"
        ? local.iter_1923.tape[local.iter_1923.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1923.code_ptr)] : local.iter_1923.code_ptr
        : local.iter_1923.code_ptr)

    steps_taken = 1 + local.iter_1923.steps_taken
  }
}

locals {
  end_of_code_1925 = try(local.iter_1924.code_ptr >= length(var.code), true)

  curr_1925 = local.end_of_code_1925 ? null : {
    code = substr(var.code, local.iter_1924.code_ptr, 1)
    input = substr(var.code, local.iter_1924.code_ptr, 1) == "," ? substr(local.iter_1924.input, 0, 1) : null
  }

  iter_1925 = local.end_of_code_1925 ? local.iter_1924 : {
    input = (local.curr_1925.code == ","
      ? substr(local.iter_1924.input, 1, -1)
      : local.iter_1924.input)

    output = (local.curr_1925.code == "."
      ? "${local.iter_1924.output}${jsondecode(format("\"\\u%04x\"", local.iter_1924.tape[local.iter_1924.tape_ptr]))}"
      : local.iter_1924.output)
    
    tape = (
      local.curr_1925.code == "+"
        ? [for i, b in local.iter_1924.tape : (i == local.iter_1924.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1925.code == "-"
        ? [for i, b in local.iter_1924.tape : (i == local.iter_1924.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1925.code == ","
        ? [for i, b in local.iter_1924.tape : (i == local.iter_1924.tape_ptr ? local.ascii_lookup[local.curr_1925.input] : b)]
        : local.iter_1924.tape)

    tape_ptr = (
      local.curr_1925.code == "<"
        ? local.iter_1924.tape_ptr == 0 ? length(local.iter_1924.tape) - 1 : local.iter_1924.tape_ptr - 1 :
      local.curr_1925.code == ">"
        ? local.iter_1924.tape_ptr == length(local.iter_1924.tape) - 1 ? 0 : local.iter_1924.tape_ptr + 1
        : local.iter_1924.tape_ptr)

    code_ptr = 1 + (
      local.curr_1925.code == "["
        ? local.iter_1924.tape[local.iter_1924.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1924.code_ptr)] : local.iter_1924.code_ptr :
      local.curr_1925.code == "]"
        ? local.iter_1924.tape[local.iter_1924.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1924.code_ptr)] : local.iter_1924.code_ptr
        : local.iter_1924.code_ptr)

    steps_taken = 1 + local.iter_1924.steps_taken
  }
}

locals {
  end_of_code_1926 = try(local.iter_1925.code_ptr >= length(var.code), true)

  curr_1926 = local.end_of_code_1926 ? null : {
    code = substr(var.code, local.iter_1925.code_ptr, 1)
    input = substr(var.code, local.iter_1925.code_ptr, 1) == "," ? substr(local.iter_1925.input, 0, 1) : null
  }

  iter_1926 = local.end_of_code_1926 ? local.iter_1925 : {
    input = (local.curr_1926.code == ","
      ? substr(local.iter_1925.input, 1, -1)
      : local.iter_1925.input)

    output = (local.curr_1926.code == "."
      ? "${local.iter_1925.output}${jsondecode(format("\"\\u%04x\"", local.iter_1925.tape[local.iter_1925.tape_ptr]))}"
      : local.iter_1925.output)
    
    tape = (
      local.curr_1926.code == "+"
        ? [for i, b in local.iter_1925.tape : (i == local.iter_1925.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1926.code == "-"
        ? [for i, b in local.iter_1925.tape : (i == local.iter_1925.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1926.code == ","
        ? [for i, b in local.iter_1925.tape : (i == local.iter_1925.tape_ptr ? local.ascii_lookup[local.curr_1926.input] : b)]
        : local.iter_1925.tape)

    tape_ptr = (
      local.curr_1926.code == "<"
        ? local.iter_1925.tape_ptr == 0 ? length(local.iter_1925.tape) - 1 : local.iter_1925.tape_ptr - 1 :
      local.curr_1926.code == ">"
        ? local.iter_1925.tape_ptr == length(local.iter_1925.tape) - 1 ? 0 : local.iter_1925.tape_ptr + 1
        : local.iter_1925.tape_ptr)

    code_ptr = 1 + (
      local.curr_1926.code == "["
        ? local.iter_1925.tape[local.iter_1925.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1925.code_ptr)] : local.iter_1925.code_ptr :
      local.curr_1926.code == "]"
        ? local.iter_1925.tape[local.iter_1925.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1925.code_ptr)] : local.iter_1925.code_ptr
        : local.iter_1925.code_ptr)

    steps_taken = 1 + local.iter_1925.steps_taken
  }
}

locals {
  end_of_code_1927 = try(local.iter_1926.code_ptr >= length(var.code), true)

  curr_1927 = local.end_of_code_1927 ? null : {
    code = substr(var.code, local.iter_1926.code_ptr, 1)
    input = substr(var.code, local.iter_1926.code_ptr, 1) == "," ? substr(local.iter_1926.input, 0, 1) : null
  }

  iter_1927 = local.end_of_code_1927 ? local.iter_1926 : {
    input = (local.curr_1927.code == ","
      ? substr(local.iter_1926.input, 1, -1)
      : local.iter_1926.input)

    output = (local.curr_1927.code == "."
      ? "${local.iter_1926.output}${jsondecode(format("\"\\u%04x\"", local.iter_1926.tape[local.iter_1926.tape_ptr]))}"
      : local.iter_1926.output)
    
    tape = (
      local.curr_1927.code == "+"
        ? [for i, b in local.iter_1926.tape : (i == local.iter_1926.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1927.code == "-"
        ? [for i, b in local.iter_1926.tape : (i == local.iter_1926.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1927.code == ","
        ? [for i, b in local.iter_1926.tape : (i == local.iter_1926.tape_ptr ? local.ascii_lookup[local.curr_1927.input] : b)]
        : local.iter_1926.tape)

    tape_ptr = (
      local.curr_1927.code == "<"
        ? local.iter_1926.tape_ptr == 0 ? length(local.iter_1926.tape) - 1 : local.iter_1926.tape_ptr - 1 :
      local.curr_1927.code == ">"
        ? local.iter_1926.tape_ptr == length(local.iter_1926.tape) - 1 ? 0 : local.iter_1926.tape_ptr + 1
        : local.iter_1926.tape_ptr)

    code_ptr = 1 + (
      local.curr_1927.code == "["
        ? local.iter_1926.tape[local.iter_1926.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1926.code_ptr)] : local.iter_1926.code_ptr :
      local.curr_1927.code == "]"
        ? local.iter_1926.tape[local.iter_1926.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1926.code_ptr)] : local.iter_1926.code_ptr
        : local.iter_1926.code_ptr)

    steps_taken = 1 + local.iter_1926.steps_taken
  }
}

locals {
  end_of_code_1928 = try(local.iter_1927.code_ptr >= length(var.code), true)

  curr_1928 = local.end_of_code_1928 ? null : {
    code = substr(var.code, local.iter_1927.code_ptr, 1)
    input = substr(var.code, local.iter_1927.code_ptr, 1) == "," ? substr(local.iter_1927.input, 0, 1) : null
  }

  iter_1928 = local.end_of_code_1928 ? local.iter_1927 : {
    input = (local.curr_1928.code == ","
      ? substr(local.iter_1927.input, 1, -1)
      : local.iter_1927.input)

    output = (local.curr_1928.code == "."
      ? "${local.iter_1927.output}${jsondecode(format("\"\\u%04x\"", local.iter_1927.tape[local.iter_1927.tape_ptr]))}"
      : local.iter_1927.output)
    
    tape = (
      local.curr_1928.code == "+"
        ? [for i, b in local.iter_1927.tape : (i == local.iter_1927.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1928.code == "-"
        ? [for i, b in local.iter_1927.tape : (i == local.iter_1927.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1928.code == ","
        ? [for i, b in local.iter_1927.tape : (i == local.iter_1927.tape_ptr ? local.ascii_lookup[local.curr_1928.input] : b)]
        : local.iter_1927.tape)

    tape_ptr = (
      local.curr_1928.code == "<"
        ? local.iter_1927.tape_ptr == 0 ? length(local.iter_1927.tape) - 1 : local.iter_1927.tape_ptr - 1 :
      local.curr_1928.code == ">"
        ? local.iter_1927.tape_ptr == length(local.iter_1927.tape) - 1 ? 0 : local.iter_1927.tape_ptr + 1
        : local.iter_1927.tape_ptr)

    code_ptr = 1 + (
      local.curr_1928.code == "["
        ? local.iter_1927.tape[local.iter_1927.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1927.code_ptr)] : local.iter_1927.code_ptr :
      local.curr_1928.code == "]"
        ? local.iter_1927.tape[local.iter_1927.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1927.code_ptr)] : local.iter_1927.code_ptr
        : local.iter_1927.code_ptr)

    steps_taken = 1 + local.iter_1927.steps_taken
  }
}

locals {
  end_of_code_1929 = try(local.iter_1928.code_ptr >= length(var.code), true)

  curr_1929 = local.end_of_code_1929 ? null : {
    code = substr(var.code, local.iter_1928.code_ptr, 1)
    input = substr(var.code, local.iter_1928.code_ptr, 1) == "," ? substr(local.iter_1928.input, 0, 1) : null
  }

  iter_1929 = local.end_of_code_1929 ? local.iter_1928 : {
    input = (local.curr_1929.code == ","
      ? substr(local.iter_1928.input, 1, -1)
      : local.iter_1928.input)

    output = (local.curr_1929.code == "."
      ? "${local.iter_1928.output}${jsondecode(format("\"\\u%04x\"", local.iter_1928.tape[local.iter_1928.tape_ptr]))}"
      : local.iter_1928.output)
    
    tape = (
      local.curr_1929.code == "+"
        ? [for i, b in local.iter_1928.tape : (i == local.iter_1928.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1929.code == "-"
        ? [for i, b in local.iter_1928.tape : (i == local.iter_1928.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1929.code == ","
        ? [for i, b in local.iter_1928.tape : (i == local.iter_1928.tape_ptr ? local.ascii_lookup[local.curr_1929.input] : b)]
        : local.iter_1928.tape)

    tape_ptr = (
      local.curr_1929.code == "<"
        ? local.iter_1928.tape_ptr == 0 ? length(local.iter_1928.tape) - 1 : local.iter_1928.tape_ptr - 1 :
      local.curr_1929.code == ">"
        ? local.iter_1928.tape_ptr == length(local.iter_1928.tape) - 1 ? 0 : local.iter_1928.tape_ptr + 1
        : local.iter_1928.tape_ptr)

    code_ptr = 1 + (
      local.curr_1929.code == "["
        ? local.iter_1928.tape[local.iter_1928.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1928.code_ptr)] : local.iter_1928.code_ptr :
      local.curr_1929.code == "]"
        ? local.iter_1928.tape[local.iter_1928.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1928.code_ptr)] : local.iter_1928.code_ptr
        : local.iter_1928.code_ptr)

    steps_taken = 1 + local.iter_1928.steps_taken
  }
}

locals {
  end_of_code_1930 = try(local.iter_1929.code_ptr >= length(var.code), true)

  curr_1930 = local.end_of_code_1930 ? null : {
    code = substr(var.code, local.iter_1929.code_ptr, 1)
    input = substr(var.code, local.iter_1929.code_ptr, 1) == "," ? substr(local.iter_1929.input, 0, 1) : null
  }

  iter_1930 = local.end_of_code_1930 ? local.iter_1929 : {
    input = (local.curr_1930.code == ","
      ? substr(local.iter_1929.input, 1, -1)
      : local.iter_1929.input)

    output = (local.curr_1930.code == "."
      ? "${local.iter_1929.output}${jsondecode(format("\"\\u%04x\"", local.iter_1929.tape[local.iter_1929.tape_ptr]))}"
      : local.iter_1929.output)
    
    tape = (
      local.curr_1930.code == "+"
        ? [for i, b in local.iter_1929.tape : (i == local.iter_1929.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1930.code == "-"
        ? [for i, b in local.iter_1929.tape : (i == local.iter_1929.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1930.code == ","
        ? [for i, b in local.iter_1929.tape : (i == local.iter_1929.tape_ptr ? local.ascii_lookup[local.curr_1930.input] : b)]
        : local.iter_1929.tape)

    tape_ptr = (
      local.curr_1930.code == "<"
        ? local.iter_1929.tape_ptr == 0 ? length(local.iter_1929.tape) - 1 : local.iter_1929.tape_ptr - 1 :
      local.curr_1930.code == ">"
        ? local.iter_1929.tape_ptr == length(local.iter_1929.tape) - 1 ? 0 : local.iter_1929.tape_ptr + 1
        : local.iter_1929.tape_ptr)

    code_ptr = 1 + (
      local.curr_1930.code == "["
        ? local.iter_1929.tape[local.iter_1929.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1929.code_ptr)] : local.iter_1929.code_ptr :
      local.curr_1930.code == "]"
        ? local.iter_1929.tape[local.iter_1929.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1929.code_ptr)] : local.iter_1929.code_ptr
        : local.iter_1929.code_ptr)

    steps_taken = 1 + local.iter_1929.steps_taken
  }
}

locals {
  end_of_code_1931 = try(local.iter_1930.code_ptr >= length(var.code), true)

  curr_1931 = local.end_of_code_1931 ? null : {
    code = substr(var.code, local.iter_1930.code_ptr, 1)
    input = substr(var.code, local.iter_1930.code_ptr, 1) == "," ? substr(local.iter_1930.input, 0, 1) : null
  }

  iter_1931 = local.end_of_code_1931 ? local.iter_1930 : {
    input = (local.curr_1931.code == ","
      ? substr(local.iter_1930.input, 1, -1)
      : local.iter_1930.input)

    output = (local.curr_1931.code == "."
      ? "${local.iter_1930.output}${jsondecode(format("\"\\u%04x\"", local.iter_1930.tape[local.iter_1930.tape_ptr]))}"
      : local.iter_1930.output)
    
    tape = (
      local.curr_1931.code == "+"
        ? [for i, b in local.iter_1930.tape : (i == local.iter_1930.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1931.code == "-"
        ? [for i, b in local.iter_1930.tape : (i == local.iter_1930.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1931.code == ","
        ? [for i, b in local.iter_1930.tape : (i == local.iter_1930.tape_ptr ? local.ascii_lookup[local.curr_1931.input] : b)]
        : local.iter_1930.tape)

    tape_ptr = (
      local.curr_1931.code == "<"
        ? local.iter_1930.tape_ptr == 0 ? length(local.iter_1930.tape) - 1 : local.iter_1930.tape_ptr - 1 :
      local.curr_1931.code == ">"
        ? local.iter_1930.tape_ptr == length(local.iter_1930.tape) - 1 ? 0 : local.iter_1930.tape_ptr + 1
        : local.iter_1930.tape_ptr)

    code_ptr = 1 + (
      local.curr_1931.code == "["
        ? local.iter_1930.tape[local.iter_1930.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1930.code_ptr)] : local.iter_1930.code_ptr :
      local.curr_1931.code == "]"
        ? local.iter_1930.tape[local.iter_1930.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1930.code_ptr)] : local.iter_1930.code_ptr
        : local.iter_1930.code_ptr)

    steps_taken = 1 + local.iter_1930.steps_taken
  }
}

locals {
  end_of_code_1932 = try(local.iter_1931.code_ptr >= length(var.code), true)

  curr_1932 = local.end_of_code_1932 ? null : {
    code = substr(var.code, local.iter_1931.code_ptr, 1)
    input = substr(var.code, local.iter_1931.code_ptr, 1) == "," ? substr(local.iter_1931.input, 0, 1) : null
  }

  iter_1932 = local.end_of_code_1932 ? local.iter_1931 : {
    input = (local.curr_1932.code == ","
      ? substr(local.iter_1931.input, 1, -1)
      : local.iter_1931.input)

    output = (local.curr_1932.code == "."
      ? "${local.iter_1931.output}${jsondecode(format("\"\\u%04x\"", local.iter_1931.tape[local.iter_1931.tape_ptr]))}"
      : local.iter_1931.output)
    
    tape = (
      local.curr_1932.code == "+"
        ? [for i, b in local.iter_1931.tape : (i == local.iter_1931.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1932.code == "-"
        ? [for i, b in local.iter_1931.tape : (i == local.iter_1931.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1932.code == ","
        ? [for i, b in local.iter_1931.tape : (i == local.iter_1931.tape_ptr ? local.ascii_lookup[local.curr_1932.input] : b)]
        : local.iter_1931.tape)

    tape_ptr = (
      local.curr_1932.code == "<"
        ? local.iter_1931.tape_ptr == 0 ? length(local.iter_1931.tape) - 1 : local.iter_1931.tape_ptr - 1 :
      local.curr_1932.code == ">"
        ? local.iter_1931.tape_ptr == length(local.iter_1931.tape) - 1 ? 0 : local.iter_1931.tape_ptr + 1
        : local.iter_1931.tape_ptr)

    code_ptr = 1 + (
      local.curr_1932.code == "["
        ? local.iter_1931.tape[local.iter_1931.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1931.code_ptr)] : local.iter_1931.code_ptr :
      local.curr_1932.code == "]"
        ? local.iter_1931.tape[local.iter_1931.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1931.code_ptr)] : local.iter_1931.code_ptr
        : local.iter_1931.code_ptr)

    steps_taken = 1 + local.iter_1931.steps_taken
  }
}

locals {
  end_of_code_1933 = try(local.iter_1932.code_ptr >= length(var.code), true)

  curr_1933 = local.end_of_code_1933 ? null : {
    code = substr(var.code, local.iter_1932.code_ptr, 1)
    input = substr(var.code, local.iter_1932.code_ptr, 1) == "," ? substr(local.iter_1932.input, 0, 1) : null
  }

  iter_1933 = local.end_of_code_1933 ? local.iter_1932 : {
    input = (local.curr_1933.code == ","
      ? substr(local.iter_1932.input, 1, -1)
      : local.iter_1932.input)

    output = (local.curr_1933.code == "."
      ? "${local.iter_1932.output}${jsondecode(format("\"\\u%04x\"", local.iter_1932.tape[local.iter_1932.tape_ptr]))}"
      : local.iter_1932.output)
    
    tape = (
      local.curr_1933.code == "+"
        ? [for i, b in local.iter_1932.tape : (i == local.iter_1932.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1933.code == "-"
        ? [for i, b in local.iter_1932.tape : (i == local.iter_1932.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1933.code == ","
        ? [for i, b in local.iter_1932.tape : (i == local.iter_1932.tape_ptr ? local.ascii_lookup[local.curr_1933.input] : b)]
        : local.iter_1932.tape)

    tape_ptr = (
      local.curr_1933.code == "<"
        ? local.iter_1932.tape_ptr == 0 ? length(local.iter_1932.tape) - 1 : local.iter_1932.tape_ptr - 1 :
      local.curr_1933.code == ">"
        ? local.iter_1932.tape_ptr == length(local.iter_1932.tape) - 1 ? 0 : local.iter_1932.tape_ptr + 1
        : local.iter_1932.tape_ptr)

    code_ptr = 1 + (
      local.curr_1933.code == "["
        ? local.iter_1932.tape[local.iter_1932.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1932.code_ptr)] : local.iter_1932.code_ptr :
      local.curr_1933.code == "]"
        ? local.iter_1932.tape[local.iter_1932.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1932.code_ptr)] : local.iter_1932.code_ptr
        : local.iter_1932.code_ptr)

    steps_taken = 1 + local.iter_1932.steps_taken
  }
}

locals {
  end_of_code_1934 = try(local.iter_1933.code_ptr >= length(var.code), true)

  curr_1934 = local.end_of_code_1934 ? null : {
    code = substr(var.code, local.iter_1933.code_ptr, 1)
    input = substr(var.code, local.iter_1933.code_ptr, 1) == "," ? substr(local.iter_1933.input, 0, 1) : null
  }

  iter_1934 = local.end_of_code_1934 ? local.iter_1933 : {
    input = (local.curr_1934.code == ","
      ? substr(local.iter_1933.input, 1, -1)
      : local.iter_1933.input)

    output = (local.curr_1934.code == "."
      ? "${local.iter_1933.output}${jsondecode(format("\"\\u%04x\"", local.iter_1933.tape[local.iter_1933.tape_ptr]))}"
      : local.iter_1933.output)
    
    tape = (
      local.curr_1934.code == "+"
        ? [for i, b in local.iter_1933.tape : (i == local.iter_1933.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1934.code == "-"
        ? [for i, b in local.iter_1933.tape : (i == local.iter_1933.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1934.code == ","
        ? [for i, b in local.iter_1933.tape : (i == local.iter_1933.tape_ptr ? local.ascii_lookup[local.curr_1934.input] : b)]
        : local.iter_1933.tape)

    tape_ptr = (
      local.curr_1934.code == "<"
        ? local.iter_1933.tape_ptr == 0 ? length(local.iter_1933.tape) - 1 : local.iter_1933.tape_ptr - 1 :
      local.curr_1934.code == ">"
        ? local.iter_1933.tape_ptr == length(local.iter_1933.tape) - 1 ? 0 : local.iter_1933.tape_ptr + 1
        : local.iter_1933.tape_ptr)

    code_ptr = 1 + (
      local.curr_1934.code == "["
        ? local.iter_1933.tape[local.iter_1933.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1933.code_ptr)] : local.iter_1933.code_ptr :
      local.curr_1934.code == "]"
        ? local.iter_1933.tape[local.iter_1933.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1933.code_ptr)] : local.iter_1933.code_ptr
        : local.iter_1933.code_ptr)

    steps_taken = 1 + local.iter_1933.steps_taken
  }
}

locals {
  end_of_code_1935 = try(local.iter_1934.code_ptr >= length(var.code), true)

  curr_1935 = local.end_of_code_1935 ? null : {
    code = substr(var.code, local.iter_1934.code_ptr, 1)
    input = substr(var.code, local.iter_1934.code_ptr, 1) == "," ? substr(local.iter_1934.input, 0, 1) : null
  }

  iter_1935 = local.end_of_code_1935 ? local.iter_1934 : {
    input = (local.curr_1935.code == ","
      ? substr(local.iter_1934.input, 1, -1)
      : local.iter_1934.input)

    output = (local.curr_1935.code == "."
      ? "${local.iter_1934.output}${jsondecode(format("\"\\u%04x\"", local.iter_1934.tape[local.iter_1934.tape_ptr]))}"
      : local.iter_1934.output)
    
    tape = (
      local.curr_1935.code == "+"
        ? [for i, b in local.iter_1934.tape : (i == local.iter_1934.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1935.code == "-"
        ? [for i, b in local.iter_1934.tape : (i == local.iter_1934.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1935.code == ","
        ? [for i, b in local.iter_1934.tape : (i == local.iter_1934.tape_ptr ? local.ascii_lookup[local.curr_1935.input] : b)]
        : local.iter_1934.tape)

    tape_ptr = (
      local.curr_1935.code == "<"
        ? local.iter_1934.tape_ptr == 0 ? length(local.iter_1934.tape) - 1 : local.iter_1934.tape_ptr - 1 :
      local.curr_1935.code == ">"
        ? local.iter_1934.tape_ptr == length(local.iter_1934.tape) - 1 ? 0 : local.iter_1934.tape_ptr + 1
        : local.iter_1934.tape_ptr)

    code_ptr = 1 + (
      local.curr_1935.code == "["
        ? local.iter_1934.tape[local.iter_1934.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1934.code_ptr)] : local.iter_1934.code_ptr :
      local.curr_1935.code == "]"
        ? local.iter_1934.tape[local.iter_1934.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1934.code_ptr)] : local.iter_1934.code_ptr
        : local.iter_1934.code_ptr)

    steps_taken = 1 + local.iter_1934.steps_taken
  }
}

locals {
  end_of_code_1936 = try(local.iter_1935.code_ptr >= length(var.code), true)

  curr_1936 = local.end_of_code_1936 ? null : {
    code = substr(var.code, local.iter_1935.code_ptr, 1)
    input = substr(var.code, local.iter_1935.code_ptr, 1) == "," ? substr(local.iter_1935.input, 0, 1) : null
  }

  iter_1936 = local.end_of_code_1936 ? local.iter_1935 : {
    input = (local.curr_1936.code == ","
      ? substr(local.iter_1935.input, 1, -1)
      : local.iter_1935.input)

    output = (local.curr_1936.code == "."
      ? "${local.iter_1935.output}${jsondecode(format("\"\\u%04x\"", local.iter_1935.tape[local.iter_1935.tape_ptr]))}"
      : local.iter_1935.output)
    
    tape = (
      local.curr_1936.code == "+"
        ? [for i, b in local.iter_1935.tape : (i == local.iter_1935.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1936.code == "-"
        ? [for i, b in local.iter_1935.tape : (i == local.iter_1935.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1936.code == ","
        ? [for i, b in local.iter_1935.tape : (i == local.iter_1935.tape_ptr ? local.ascii_lookup[local.curr_1936.input] : b)]
        : local.iter_1935.tape)

    tape_ptr = (
      local.curr_1936.code == "<"
        ? local.iter_1935.tape_ptr == 0 ? length(local.iter_1935.tape) - 1 : local.iter_1935.tape_ptr - 1 :
      local.curr_1936.code == ">"
        ? local.iter_1935.tape_ptr == length(local.iter_1935.tape) - 1 ? 0 : local.iter_1935.tape_ptr + 1
        : local.iter_1935.tape_ptr)

    code_ptr = 1 + (
      local.curr_1936.code == "["
        ? local.iter_1935.tape[local.iter_1935.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1935.code_ptr)] : local.iter_1935.code_ptr :
      local.curr_1936.code == "]"
        ? local.iter_1935.tape[local.iter_1935.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1935.code_ptr)] : local.iter_1935.code_ptr
        : local.iter_1935.code_ptr)

    steps_taken = 1 + local.iter_1935.steps_taken
  }
}

locals {
  end_of_code_1937 = try(local.iter_1936.code_ptr >= length(var.code), true)

  curr_1937 = local.end_of_code_1937 ? null : {
    code = substr(var.code, local.iter_1936.code_ptr, 1)
    input = substr(var.code, local.iter_1936.code_ptr, 1) == "," ? substr(local.iter_1936.input, 0, 1) : null
  }

  iter_1937 = local.end_of_code_1937 ? local.iter_1936 : {
    input = (local.curr_1937.code == ","
      ? substr(local.iter_1936.input, 1, -1)
      : local.iter_1936.input)

    output = (local.curr_1937.code == "."
      ? "${local.iter_1936.output}${jsondecode(format("\"\\u%04x\"", local.iter_1936.tape[local.iter_1936.tape_ptr]))}"
      : local.iter_1936.output)
    
    tape = (
      local.curr_1937.code == "+"
        ? [for i, b in local.iter_1936.tape : (i == local.iter_1936.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1937.code == "-"
        ? [for i, b in local.iter_1936.tape : (i == local.iter_1936.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1937.code == ","
        ? [for i, b in local.iter_1936.tape : (i == local.iter_1936.tape_ptr ? local.ascii_lookup[local.curr_1937.input] : b)]
        : local.iter_1936.tape)

    tape_ptr = (
      local.curr_1937.code == "<"
        ? local.iter_1936.tape_ptr == 0 ? length(local.iter_1936.tape) - 1 : local.iter_1936.tape_ptr - 1 :
      local.curr_1937.code == ">"
        ? local.iter_1936.tape_ptr == length(local.iter_1936.tape) - 1 ? 0 : local.iter_1936.tape_ptr + 1
        : local.iter_1936.tape_ptr)

    code_ptr = 1 + (
      local.curr_1937.code == "["
        ? local.iter_1936.tape[local.iter_1936.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1936.code_ptr)] : local.iter_1936.code_ptr :
      local.curr_1937.code == "]"
        ? local.iter_1936.tape[local.iter_1936.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1936.code_ptr)] : local.iter_1936.code_ptr
        : local.iter_1936.code_ptr)

    steps_taken = 1 + local.iter_1936.steps_taken
  }
}

locals {
  end_of_code_1938 = try(local.iter_1937.code_ptr >= length(var.code), true)

  curr_1938 = local.end_of_code_1938 ? null : {
    code = substr(var.code, local.iter_1937.code_ptr, 1)
    input = substr(var.code, local.iter_1937.code_ptr, 1) == "," ? substr(local.iter_1937.input, 0, 1) : null
  }

  iter_1938 = local.end_of_code_1938 ? local.iter_1937 : {
    input = (local.curr_1938.code == ","
      ? substr(local.iter_1937.input, 1, -1)
      : local.iter_1937.input)

    output = (local.curr_1938.code == "."
      ? "${local.iter_1937.output}${jsondecode(format("\"\\u%04x\"", local.iter_1937.tape[local.iter_1937.tape_ptr]))}"
      : local.iter_1937.output)
    
    tape = (
      local.curr_1938.code == "+"
        ? [for i, b in local.iter_1937.tape : (i == local.iter_1937.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1938.code == "-"
        ? [for i, b in local.iter_1937.tape : (i == local.iter_1937.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1938.code == ","
        ? [for i, b in local.iter_1937.tape : (i == local.iter_1937.tape_ptr ? local.ascii_lookup[local.curr_1938.input] : b)]
        : local.iter_1937.tape)

    tape_ptr = (
      local.curr_1938.code == "<"
        ? local.iter_1937.tape_ptr == 0 ? length(local.iter_1937.tape) - 1 : local.iter_1937.tape_ptr - 1 :
      local.curr_1938.code == ">"
        ? local.iter_1937.tape_ptr == length(local.iter_1937.tape) - 1 ? 0 : local.iter_1937.tape_ptr + 1
        : local.iter_1937.tape_ptr)

    code_ptr = 1 + (
      local.curr_1938.code == "["
        ? local.iter_1937.tape[local.iter_1937.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1937.code_ptr)] : local.iter_1937.code_ptr :
      local.curr_1938.code == "]"
        ? local.iter_1937.tape[local.iter_1937.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1937.code_ptr)] : local.iter_1937.code_ptr
        : local.iter_1937.code_ptr)

    steps_taken = 1 + local.iter_1937.steps_taken
  }
}

locals {
  end_of_code_1939 = try(local.iter_1938.code_ptr >= length(var.code), true)

  curr_1939 = local.end_of_code_1939 ? null : {
    code = substr(var.code, local.iter_1938.code_ptr, 1)
    input = substr(var.code, local.iter_1938.code_ptr, 1) == "," ? substr(local.iter_1938.input, 0, 1) : null
  }

  iter_1939 = local.end_of_code_1939 ? local.iter_1938 : {
    input = (local.curr_1939.code == ","
      ? substr(local.iter_1938.input, 1, -1)
      : local.iter_1938.input)

    output = (local.curr_1939.code == "."
      ? "${local.iter_1938.output}${jsondecode(format("\"\\u%04x\"", local.iter_1938.tape[local.iter_1938.tape_ptr]))}"
      : local.iter_1938.output)
    
    tape = (
      local.curr_1939.code == "+"
        ? [for i, b in local.iter_1938.tape : (i == local.iter_1938.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1939.code == "-"
        ? [for i, b in local.iter_1938.tape : (i == local.iter_1938.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1939.code == ","
        ? [for i, b in local.iter_1938.tape : (i == local.iter_1938.tape_ptr ? local.ascii_lookup[local.curr_1939.input] : b)]
        : local.iter_1938.tape)

    tape_ptr = (
      local.curr_1939.code == "<"
        ? local.iter_1938.tape_ptr == 0 ? length(local.iter_1938.tape) - 1 : local.iter_1938.tape_ptr - 1 :
      local.curr_1939.code == ">"
        ? local.iter_1938.tape_ptr == length(local.iter_1938.tape) - 1 ? 0 : local.iter_1938.tape_ptr + 1
        : local.iter_1938.tape_ptr)

    code_ptr = 1 + (
      local.curr_1939.code == "["
        ? local.iter_1938.tape[local.iter_1938.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1938.code_ptr)] : local.iter_1938.code_ptr :
      local.curr_1939.code == "]"
        ? local.iter_1938.tape[local.iter_1938.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1938.code_ptr)] : local.iter_1938.code_ptr
        : local.iter_1938.code_ptr)

    steps_taken = 1 + local.iter_1938.steps_taken
  }
}

locals {
  end_of_code_1940 = try(local.iter_1939.code_ptr >= length(var.code), true)

  curr_1940 = local.end_of_code_1940 ? null : {
    code = substr(var.code, local.iter_1939.code_ptr, 1)
    input = substr(var.code, local.iter_1939.code_ptr, 1) == "," ? substr(local.iter_1939.input, 0, 1) : null
  }

  iter_1940 = local.end_of_code_1940 ? local.iter_1939 : {
    input = (local.curr_1940.code == ","
      ? substr(local.iter_1939.input, 1, -1)
      : local.iter_1939.input)

    output = (local.curr_1940.code == "."
      ? "${local.iter_1939.output}${jsondecode(format("\"\\u%04x\"", local.iter_1939.tape[local.iter_1939.tape_ptr]))}"
      : local.iter_1939.output)
    
    tape = (
      local.curr_1940.code == "+"
        ? [for i, b in local.iter_1939.tape : (i == local.iter_1939.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1940.code == "-"
        ? [for i, b in local.iter_1939.tape : (i == local.iter_1939.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1940.code == ","
        ? [for i, b in local.iter_1939.tape : (i == local.iter_1939.tape_ptr ? local.ascii_lookup[local.curr_1940.input] : b)]
        : local.iter_1939.tape)

    tape_ptr = (
      local.curr_1940.code == "<"
        ? local.iter_1939.tape_ptr == 0 ? length(local.iter_1939.tape) - 1 : local.iter_1939.tape_ptr - 1 :
      local.curr_1940.code == ">"
        ? local.iter_1939.tape_ptr == length(local.iter_1939.tape) - 1 ? 0 : local.iter_1939.tape_ptr + 1
        : local.iter_1939.tape_ptr)

    code_ptr = 1 + (
      local.curr_1940.code == "["
        ? local.iter_1939.tape[local.iter_1939.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1939.code_ptr)] : local.iter_1939.code_ptr :
      local.curr_1940.code == "]"
        ? local.iter_1939.tape[local.iter_1939.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1939.code_ptr)] : local.iter_1939.code_ptr
        : local.iter_1939.code_ptr)

    steps_taken = 1 + local.iter_1939.steps_taken
  }
}

locals {
  end_of_code_1941 = try(local.iter_1940.code_ptr >= length(var.code), true)

  curr_1941 = local.end_of_code_1941 ? null : {
    code = substr(var.code, local.iter_1940.code_ptr, 1)
    input = substr(var.code, local.iter_1940.code_ptr, 1) == "," ? substr(local.iter_1940.input, 0, 1) : null
  }

  iter_1941 = local.end_of_code_1941 ? local.iter_1940 : {
    input = (local.curr_1941.code == ","
      ? substr(local.iter_1940.input, 1, -1)
      : local.iter_1940.input)

    output = (local.curr_1941.code == "."
      ? "${local.iter_1940.output}${jsondecode(format("\"\\u%04x\"", local.iter_1940.tape[local.iter_1940.tape_ptr]))}"
      : local.iter_1940.output)
    
    tape = (
      local.curr_1941.code == "+"
        ? [for i, b in local.iter_1940.tape : (i == local.iter_1940.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1941.code == "-"
        ? [for i, b in local.iter_1940.tape : (i == local.iter_1940.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1941.code == ","
        ? [for i, b in local.iter_1940.tape : (i == local.iter_1940.tape_ptr ? local.ascii_lookup[local.curr_1941.input] : b)]
        : local.iter_1940.tape)

    tape_ptr = (
      local.curr_1941.code == "<"
        ? local.iter_1940.tape_ptr == 0 ? length(local.iter_1940.tape) - 1 : local.iter_1940.tape_ptr - 1 :
      local.curr_1941.code == ">"
        ? local.iter_1940.tape_ptr == length(local.iter_1940.tape) - 1 ? 0 : local.iter_1940.tape_ptr + 1
        : local.iter_1940.tape_ptr)

    code_ptr = 1 + (
      local.curr_1941.code == "["
        ? local.iter_1940.tape[local.iter_1940.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1940.code_ptr)] : local.iter_1940.code_ptr :
      local.curr_1941.code == "]"
        ? local.iter_1940.tape[local.iter_1940.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1940.code_ptr)] : local.iter_1940.code_ptr
        : local.iter_1940.code_ptr)

    steps_taken = 1 + local.iter_1940.steps_taken
  }
}

locals {
  end_of_code_1942 = try(local.iter_1941.code_ptr >= length(var.code), true)

  curr_1942 = local.end_of_code_1942 ? null : {
    code = substr(var.code, local.iter_1941.code_ptr, 1)
    input = substr(var.code, local.iter_1941.code_ptr, 1) == "," ? substr(local.iter_1941.input, 0, 1) : null
  }

  iter_1942 = local.end_of_code_1942 ? local.iter_1941 : {
    input = (local.curr_1942.code == ","
      ? substr(local.iter_1941.input, 1, -1)
      : local.iter_1941.input)

    output = (local.curr_1942.code == "."
      ? "${local.iter_1941.output}${jsondecode(format("\"\\u%04x\"", local.iter_1941.tape[local.iter_1941.tape_ptr]))}"
      : local.iter_1941.output)
    
    tape = (
      local.curr_1942.code == "+"
        ? [for i, b in local.iter_1941.tape : (i == local.iter_1941.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1942.code == "-"
        ? [for i, b in local.iter_1941.tape : (i == local.iter_1941.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1942.code == ","
        ? [for i, b in local.iter_1941.tape : (i == local.iter_1941.tape_ptr ? local.ascii_lookup[local.curr_1942.input] : b)]
        : local.iter_1941.tape)

    tape_ptr = (
      local.curr_1942.code == "<"
        ? local.iter_1941.tape_ptr == 0 ? length(local.iter_1941.tape) - 1 : local.iter_1941.tape_ptr - 1 :
      local.curr_1942.code == ">"
        ? local.iter_1941.tape_ptr == length(local.iter_1941.tape) - 1 ? 0 : local.iter_1941.tape_ptr + 1
        : local.iter_1941.tape_ptr)

    code_ptr = 1 + (
      local.curr_1942.code == "["
        ? local.iter_1941.tape[local.iter_1941.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1941.code_ptr)] : local.iter_1941.code_ptr :
      local.curr_1942.code == "]"
        ? local.iter_1941.tape[local.iter_1941.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1941.code_ptr)] : local.iter_1941.code_ptr
        : local.iter_1941.code_ptr)

    steps_taken = 1 + local.iter_1941.steps_taken
  }
}

locals {
  end_of_code_1943 = try(local.iter_1942.code_ptr >= length(var.code), true)

  curr_1943 = local.end_of_code_1943 ? null : {
    code = substr(var.code, local.iter_1942.code_ptr, 1)
    input = substr(var.code, local.iter_1942.code_ptr, 1) == "," ? substr(local.iter_1942.input, 0, 1) : null
  }

  iter_1943 = local.end_of_code_1943 ? local.iter_1942 : {
    input = (local.curr_1943.code == ","
      ? substr(local.iter_1942.input, 1, -1)
      : local.iter_1942.input)

    output = (local.curr_1943.code == "."
      ? "${local.iter_1942.output}${jsondecode(format("\"\\u%04x\"", local.iter_1942.tape[local.iter_1942.tape_ptr]))}"
      : local.iter_1942.output)
    
    tape = (
      local.curr_1943.code == "+"
        ? [for i, b in local.iter_1942.tape : (i == local.iter_1942.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1943.code == "-"
        ? [for i, b in local.iter_1942.tape : (i == local.iter_1942.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1943.code == ","
        ? [for i, b in local.iter_1942.tape : (i == local.iter_1942.tape_ptr ? local.ascii_lookup[local.curr_1943.input] : b)]
        : local.iter_1942.tape)

    tape_ptr = (
      local.curr_1943.code == "<"
        ? local.iter_1942.tape_ptr == 0 ? length(local.iter_1942.tape) - 1 : local.iter_1942.tape_ptr - 1 :
      local.curr_1943.code == ">"
        ? local.iter_1942.tape_ptr == length(local.iter_1942.tape) - 1 ? 0 : local.iter_1942.tape_ptr + 1
        : local.iter_1942.tape_ptr)

    code_ptr = 1 + (
      local.curr_1943.code == "["
        ? local.iter_1942.tape[local.iter_1942.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1942.code_ptr)] : local.iter_1942.code_ptr :
      local.curr_1943.code == "]"
        ? local.iter_1942.tape[local.iter_1942.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1942.code_ptr)] : local.iter_1942.code_ptr
        : local.iter_1942.code_ptr)

    steps_taken = 1 + local.iter_1942.steps_taken
  }
}

locals {
  end_of_code_1944 = try(local.iter_1943.code_ptr >= length(var.code), true)

  curr_1944 = local.end_of_code_1944 ? null : {
    code = substr(var.code, local.iter_1943.code_ptr, 1)
    input = substr(var.code, local.iter_1943.code_ptr, 1) == "," ? substr(local.iter_1943.input, 0, 1) : null
  }

  iter_1944 = local.end_of_code_1944 ? local.iter_1943 : {
    input = (local.curr_1944.code == ","
      ? substr(local.iter_1943.input, 1, -1)
      : local.iter_1943.input)

    output = (local.curr_1944.code == "."
      ? "${local.iter_1943.output}${jsondecode(format("\"\\u%04x\"", local.iter_1943.tape[local.iter_1943.tape_ptr]))}"
      : local.iter_1943.output)
    
    tape = (
      local.curr_1944.code == "+"
        ? [for i, b in local.iter_1943.tape : (i == local.iter_1943.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1944.code == "-"
        ? [for i, b in local.iter_1943.tape : (i == local.iter_1943.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1944.code == ","
        ? [for i, b in local.iter_1943.tape : (i == local.iter_1943.tape_ptr ? local.ascii_lookup[local.curr_1944.input] : b)]
        : local.iter_1943.tape)

    tape_ptr = (
      local.curr_1944.code == "<"
        ? local.iter_1943.tape_ptr == 0 ? length(local.iter_1943.tape) - 1 : local.iter_1943.tape_ptr - 1 :
      local.curr_1944.code == ">"
        ? local.iter_1943.tape_ptr == length(local.iter_1943.tape) - 1 ? 0 : local.iter_1943.tape_ptr + 1
        : local.iter_1943.tape_ptr)

    code_ptr = 1 + (
      local.curr_1944.code == "["
        ? local.iter_1943.tape[local.iter_1943.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1943.code_ptr)] : local.iter_1943.code_ptr :
      local.curr_1944.code == "]"
        ? local.iter_1943.tape[local.iter_1943.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1943.code_ptr)] : local.iter_1943.code_ptr
        : local.iter_1943.code_ptr)

    steps_taken = 1 + local.iter_1943.steps_taken
  }
}

locals {
  end_of_code_1945 = try(local.iter_1944.code_ptr >= length(var.code), true)

  curr_1945 = local.end_of_code_1945 ? null : {
    code = substr(var.code, local.iter_1944.code_ptr, 1)
    input = substr(var.code, local.iter_1944.code_ptr, 1) == "," ? substr(local.iter_1944.input, 0, 1) : null
  }

  iter_1945 = local.end_of_code_1945 ? local.iter_1944 : {
    input = (local.curr_1945.code == ","
      ? substr(local.iter_1944.input, 1, -1)
      : local.iter_1944.input)

    output = (local.curr_1945.code == "."
      ? "${local.iter_1944.output}${jsondecode(format("\"\\u%04x\"", local.iter_1944.tape[local.iter_1944.tape_ptr]))}"
      : local.iter_1944.output)
    
    tape = (
      local.curr_1945.code == "+"
        ? [for i, b in local.iter_1944.tape : (i == local.iter_1944.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1945.code == "-"
        ? [for i, b in local.iter_1944.tape : (i == local.iter_1944.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1945.code == ","
        ? [for i, b in local.iter_1944.tape : (i == local.iter_1944.tape_ptr ? local.ascii_lookup[local.curr_1945.input] : b)]
        : local.iter_1944.tape)

    tape_ptr = (
      local.curr_1945.code == "<"
        ? local.iter_1944.tape_ptr == 0 ? length(local.iter_1944.tape) - 1 : local.iter_1944.tape_ptr - 1 :
      local.curr_1945.code == ">"
        ? local.iter_1944.tape_ptr == length(local.iter_1944.tape) - 1 ? 0 : local.iter_1944.tape_ptr + 1
        : local.iter_1944.tape_ptr)

    code_ptr = 1 + (
      local.curr_1945.code == "["
        ? local.iter_1944.tape[local.iter_1944.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1944.code_ptr)] : local.iter_1944.code_ptr :
      local.curr_1945.code == "]"
        ? local.iter_1944.tape[local.iter_1944.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1944.code_ptr)] : local.iter_1944.code_ptr
        : local.iter_1944.code_ptr)

    steps_taken = 1 + local.iter_1944.steps_taken
  }
}

locals {
  end_of_code_1946 = try(local.iter_1945.code_ptr >= length(var.code), true)

  curr_1946 = local.end_of_code_1946 ? null : {
    code = substr(var.code, local.iter_1945.code_ptr, 1)
    input = substr(var.code, local.iter_1945.code_ptr, 1) == "," ? substr(local.iter_1945.input, 0, 1) : null
  }

  iter_1946 = local.end_of_code_1946 ? local.iter_1945 : {
    input = (local.curr_1946.code == ","
      ? substr(local.iter_1945.input, 1, -1)
      : local.iter_1945.input)

    output = (local.curr_1946.code == "."
      ? "${local.iter_1945.output}${jsondecode(format("\"\\u%04x\"", local.iter_1945.tape[local.iter_1945.tape_ptr]))}"
      : local.iter_1945.output)
    
    tape = (
      local.curr_1946.code == "+"
        ? [for i, b in local.iter_1945.tape : (i == local.iter_1945.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1946.code == "-"
        ? [for i, b in local.iter_1945.tape : (i == local.iter_1945.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1946.code == ","
        ? [for i, b in local.iter_1945.tape : (i == local.iter_1945.tape_ptr ? local.ascii_lookup[local.curr_1946.input] : b)]
        : local.iter_1945.tape)

    tape_ptr = (
      local.curr_1946.code == "<"
        ? local.iter_1945.tape_ptr == 0 ? length(local.iter_1945.tape) - 1 : local.iter_1945.tape_ptr - 1 :
      local.curr_1946.code == ">"
        ? local.iter_1945.tape_ptr == length(local.iter_1945.tape) - 1 ? 0 : local.iter_1945.tape_ptr + 1
        : local.iter_1945.tape_ptr)

    code_ptr = 1 + (
      local.curr_1946.code == "["
        ? local.iter_1945.tape[local.iter_1945.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1945.code_ptr)] : local.iter_1945.code_ptr :
      local.curr_1946.code == "]"
        ? local.iter_1945.tape[local.iter_1945.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1945.code_ptr)] : local.iter_1945.code_ptr
        : local.iter_1945.code_ptr)

    steps_taken = 1 + local.iter_1945.steps_taken
  }
}

locals {
  end_of_code_1947 = try(local.iter_1946.code_ptr >= length(var.code), true)

  curr_1947 = local.end_of_code_1947 ? null : {
    code = substr(var.code, local.iter_1946.code_ptr, 1)
    input = substr(var.code, local.iter_1946.code_ptr, 1) == "," ? substr(local.iter_1946.input, 0, 1) : null
  }

  iter_1947 = local.end_of_code_1947 ? local.iter_1946 : {
    input = (local.curr_1947.code == ","
      ? substr(local.iter_1946.input, 1, -1)
      : local.iter_1946.input)

    output = (local.curr_1947.code == "."
      ? "${local.iter_1946.output}${jsondecode(format("\"\\u%04x\"", local.iter_1946.tape[local.iter_1946.tape_ptr]))}"
      : local.iter_1946.output)
    
    tape = (
      local.curr_1947.code == "+"
        ? [for i, b in local.iter_1946.tape : (i == local.iter_1946.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1947.code == "-"
        ? [for i, b in local.iter_1946.tape : (i == local.iter_1946.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1947.code == ","
        ? [for i, b in local.iter_1946.tape : (i == local.iter_1946.tape_ptr ? local.ascii_lookup[local.curr_1947.input] : b)]
        : local.iter_1946.tape)

    tape_ptr = (
      local.curr_1947.code == "<"
        ? local.iter_1946.tape_ptr == 0 ? length(local.iter_1946.tape) - 1 : local.iter_1946.tape_ptr - 1 :
      local.curr_1947.code == ">"
        ? local.iter_1946.tape_ptr == length(local.iter_1946.tape) - 1 ? 0 : local.iter_1946.tape_ptr + 1
        : local.iter_1946.tape_ptr)

    code_ptr = 1 + (
      local.curr_1947.code == "["
        ? local.iter_1946.tape[local.iter_1946.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1946.code_ptr)] : local.iter_1946.code_ptr :
      local.curr_1947.code == "]"
        ? local.iter_1946.tape[local.iter_1946.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1946.code_ptr)] : local.iter_1946.code_ptr
        : local.iter_1946.code_ptr)

    steps_taken = 1 + local.iter_1946.steps_taken
  }
}

locals {
  end_of_code_1948 = try(local.iter_1947.code_ptr >= length(var.code), true)

  curr_1948 = local.end_of_code_1948 ? null : {
    code = substr(var.code, local.iter_1947.code_ptr, 1)
    input = substr(var.code, local.iter_1947.code_ptr, 1) == "," ? substr(local.iter_1947.input, 0, 1) : null
  }

  iter_1948 = local.end_of_code_1948 ? local.iter_1947 : {
    input = (local.curr_1948.code == ","
      ? substr(local.iter_1947.input, 1, -1)
      : local.iter_1947.input)

    output = (local.curr_1948.code == "."
      ? "${local.iter_1947.output}${jsondecode(format("\"\\u%04x\"", local.iter_1947.tape[local.iter_1947.tape_ptr]))}"
      : local.iter_1947.output)
    
    tape = (
      local.curr_1948.code == "+"
        ? [for i, b in local.iter_1947.tape : (i == local.iter_1947.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1948.code == "-"
        ? [for i, b in local.iter_1947.tape : (i == local.iter_1947.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1948.code == ","
        ? [for i, b in local.iter_1947.tape : (i == local.iter_1947.tape_ptr ? local.ascii_lookup[local.curr_1948.input] : b)]
        : local.iter_1947.tape)

    tape_ptr = (
      local.curr_1948.code == "<"
        ? local.iter_1947.tape_ptr == 0 ? length(local.iter_1947.tape) - 1 : local.iter_1947.tape_ptr - 1 :
      local.curr_1948.code == ">"
        ? local.iter_1947.tape_ptr == length(local.iter_1947.tape) - 1 ? 0 : local.iter_1947.tape_ptr + 1
        : local.iter_1947.tape_ptr)

    code_ptr = 1 + (
      local.curr_1948.code == "["
        ? local.iter_1947.tape[local.iter_1947.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1947.code_ptr)] : local.iter_1947.code_ptr :
      local.curr_1948.code == "]"
        ? local.iter_1947.tape[local.iter_1947.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1947.code_ptr)] : local.iter_1947.code_ptr
        : local.iter_1947.code_ptr)

    steps_taken = 1 + local.iter_1947.steps_taken
  }
}

locals {
  end_of_code_1949 = try(local.iter_1948.code_ptr >= length(var.code), true)

  curr_1949 = local.end_of_code_1949 ? null : {
    code = substr(var.code, local.iter_1948.code_ptr, 1)
    input = substr(var.code, local.iter_1948.code_ptr, 1) == "," ? substr(local.iter_1948.input, 0, 1) : null
  }

  iter_1949 = local.end_of_code_1949 ? local.iter_1948 : {
    input = (local.curr_1949.code == ","
      ? substr(local.iter_1948.input, 1, -1)
      : local.iter_1948.input)

    output = (local.curr_1949.code == "."
      ? "${local.iter_1948.output}${jsondecode(format("\"\\u%04x\"", local.iter_1948.tape[local.iter_1948.tape_ptr]))}"
      : local.iter_1948.output)
    
    tape = (
      local.curr_1949.code == "+"
        ? [for i, b in local.iter_1948.tape : (i == local.iter_1948.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1949.code == "-"
        ? [for i, b in local.iter_1948.tape : (i == local.iter_1948.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1949.code == ","
        ? [for i, b in local.iter_1948.tape : (i == local.iter_1948.tape_ptr ? local.ascii_lookup[local.curr_1949.input] : b)]
        : local.iter_1948.tape)

    tape_ptr = (
      local.curr_1949.code == "<"
        ? local.iter_1948.tape_ptr == 0 ? length(local.iter_1948.tape) - 1 : local.iter_1948.tape_ptr - 1 :
      local.curr_1949.code == ">"
        ? local.iter_1948.tape_ptr == length(local.iter_1948.tape) - 1 ? 0 : local.iter_1948.tape_ptr + 1
        : local.iter_1948.tape_ptr)

    code_ptr = 1 + (
      local.curr_1949.code == "["
        ? local.iter_1948.tape[local.iter_1948.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1948.code_ptr)] : local.iter_1948.code_ptr :
      local.curr_1949.code == "]"
        ? local.iter_1948.tape[local.iter_1948.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1948.code_ptr)] : local.iter_1948.code_ptr
        : local.iter_1948.code_ptr)

    steps_taken = 1 + local.iter_1948.steps_taken
  }
}

locals {
  end_of_code_1950 = try(local.iter_1949.code_ptr >= length(var.code), true)

  curr_1950 = local.end_of_code_1950 ? null : {
    code = substr(var.code, local.iter_1949.code_ptr, 1)
    input = substr(var.code, local.iter_1949.code_ptr, 1) == "," ? substr(local.iter_1949.input, 0, 1) : null
  }

  iter_1950 = local.end_of_code_1950 ? local.iter_1949 : {
    input = (local.curr_1950.code == ","
      ? substr(local.iter_1949.input, 1, -1)
      : local.iter_1949.input)

    output = (local.curr_1950.code == "."
      ? "${local.iter_1949.output}${jsondecode(format("\"\\u%04x\"", local.iter_1949.tape[local.iter_1949.tape_ptr]))}"
      : local.iter_1949.output)
    
    tape = (
      local.curr_1950.code == "+"
        ? [for i, b in local.iter_1949.tape : (i == local.iter_1949.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1950.code == "-"
        ? [for i, b in local.iter_1949.tape : (i == local.iter_1949.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1950.code == ","
        ? [for i, b in local.iter_1949.tape : (i == local.iter_1949.tape_ptr ? local.ascii_lookup[local.curr_1950.input] : b)]
        : local.iter_1949.tape)

    tape_ptr = (
      local.curr_1950.code == "<"
        ? local.iter_1949.tape_ptr == 0 ? length(local.iter_1949.tape) - 1 : local.iter_1949.tape_ptr - 1 :
      local.curr_1950.code == ">"
        ? local.iter_1949.tape_ptr == length(local.iter_1949.tape) - 1 ? 0 : local.iter_1949.tape_ptr + 1
        : local.iter_1949.tape_ptr)

    code_ptr = 1 + (
      local.curr_1950.code == "["
        ? local.iter_1949.tape[local.iter_1949.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1949.code_ptr)] : local.iter_1949.code_ptr :
      local.curr_1950.code == "]"
        ? local.iter_1949.tape[local.iter_1949.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1949.code_ptr)] : local.iter_1949.code_ptr
        : local.iter_1949.code_ptr)

    steps_taken = 1 + local.iter_1949.steps_taken
  }
}

locals {
  end_of_code_1951 = try(local.iter_1950.code_ptr >= length(var.code), true)

  curr_1951 = local.end_of_code_1951 ? null : {
    code = substr(var.code, local.iter_1950.code_ptr, 1)
    input = substr(var.code, local.iter_1950.code_ptr, 1) == "," ? substr(local.iter_1950.input, 0, 1) : null
  }

  iter_1951 = local.end_of_code_1951 ? local.iter_1950 : {
    input = (local.curr_1951.code == ","
      ? substr(local.iter_1950.input, 1, -1)
      : local.iter_1950.input)

    output = (local.curr_1951.code == "."
      ? "${local.iter_1950.output}${jsondecode(format("\"\\u%04x\"", local.iter_1950.tape[local.iter_1950.tape_ptr]))}"
      : local.iter_1950.output)
    
    tape = (
      local.curr_1951.code == "+"
        ? [for i, b in local.iter_1950.tape : (i == local.iter_1950.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1951.code == "-"
        ? [for i, b in local.iter_1950.tape : (i == local.iter_1950.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1951.code == ","
        ? [for i, b in local.iter_1950.tape : (i == local.iter_1950.tape_ptr ? local.ascii_lookup[local.curr_1951.input] : b)]
        : local.iter_1950.tape)

    tape_ptr = (
      local.curr_1951.code == "<"
        ? local.iter_1950.tape_ptr == 0 ? length(local.iter_1950.tape) - 1 : local.iter_1950.tape_ptr - 1 :
      local.curr_1951.code == ">"
        ? local.iter_1950.tape_ptr == length(local.iter_1950.tape) - 1 ? 0 : local.iter_1950.tape_ptr + 1
        : local.iter_1950.tape_ptr)

    code_ptr = 1 + (
      local.curr_1951.code == "["
        ? local.iter_1950.tape[local.iter_1950.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1950.code_ptr)] : local.iter_1950.code_ptr :
      local.curr_1951.code == "]"
        ? local.iter_1950.tape[local.iter_1950.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1950.code_ptr)] : local.iter_1950.code_ptr
        : local.iter_1950.code_ptr)

    steps_taken = 1 + local.iter_1950.steps_taken
  }
}

locals {
  end_of_code_1952 = try(local.iter_1951.code_ptr >= length(var.code), true)

  curr_1952 = local.end_of_code_1952 ? null : {
    code = substr(var.code, local.iter_1951.code_ptr, 1)
    input = substr(var.code, local.iter_1951.code_ptr, 1) == "," ? substr(local.iter_1951.input, 0, 1) : null
  }

  iter_1952 = local.end_of_code_1952 ? local.iter_1951 : {
    input = (local.curr_1952.code == ","
      ? substr(local.iter_1951.input, 1, -1)
      : local.iter_1951.input)

    output = (local.curr_1952.code == "."
      ? "${local.iter_1951.output}${jsondecode(format("\"\\u%04x\"", local.iter_1951.tape[local.iter_1951.tape_ptr]))}"
      : local.iter_1951.output)
    
    tape = (
      local.curr_1952.code == "+"
        ? [for i, b in local.iter_1951.tape : (i == local.iter_1951.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1952.code == "-"
        ? [for i, b in local.iter_1951.tape : (i == local.iter_1951.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1952.code == ","
        ? [for i, b in local.iter_1951.tape : (i == local.iter_1951.tape_ptr ? local.ascii_lookup[local.curr_1952.input] : b)]
        : local.iter_1951.tape)

    tape_ptr = (
      local.curr_1952.code == "<"
        ? local.iter_1951.tape_ptr == 0 ? length(local.iter_1951.tape) - 1 : local.iter_1951.tape_ptr - 1 :
      local.curr_1952.code == ">"
        ? local.iter_1951.tape_ptr == length(local.iter_1951.tape) - 1 ? 0 : local.iter_1951.tape_ptr + 1
        : local.iter_1951.tape_ptr)

    code_ptr = 1 + (
      local.curr_1952.code == "["
        ? local.iter_1951.tape[local.iter_1951.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1951.code_ptr)] : local.iter_1951.code_ptr :
      local.curr_1952.code == "]"
        ? local.iter_1951.tape[local.iter_1951.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1951.code_ptr)] : local.iter_1951.code_ptr
        : local.iter_1951.code_ptr)

    steps_taken = 1 + local.iter_1951.steps_taken
  }
}

locals {
  end_of_code_1953 = try(local.iter_1952.code_ptr >= length(var.code), true)

  curr_1953 = local.end_of_code_1953 ? null : {
    code = substr(var.code, local.iter_1952.code_ptr, 1)
    input = substr(var.code, local.iter_1952.code_ptr, 1) == "," ? substr(local.iter_1952.input, 0, 1) : null
  }

  iter_1953 = local.end_of_code_1953 ? local.iter_1952 : {
    input = (local.curr_1953.code == ","
      ? substr(local.iter_1952.input, 1, -1)
      : local.iter_1952.input)

    output = (local.curr_1953.code == "."
      ? "${local.iter_1952.output}${jsondecode(format("\"\\u%04x\"", local.iter_1952.tape[local.iter_1952.tape_ptr]))}"
      : local.iter_1952.output)
    
    tape = (
      local.curr_1953.code == "+"
        ? [for i, b in local.iter_1952.tape : (i == local.iter_1952.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1953.code == "-"
        ? [for i, b in local.iter_1952.tape : (i == local.iter_1952.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1953.code == ","
        ? [for i, b in local.iter_1952.tape : (i == local.iter_1952.tape_ptr ? local.ascii_lookup[local.curr_1953.input] : b)]
        : local.iter_1952.tape)

    tape_ptr = (
      local.curr_1953.code == "<"
        ? local.iter_1952.tape_ptr == 0 ? length(local.iter_1952.tape) - 1 : local.iter_1952.tape_ptr - 1 :
      local.curr_1953.code == ">"
        ? local.iter_1952.tape_ptr == length(local.iter_1952.tape) - 1 ? 0 : local.iter_1952.tape_ptr + 1
        : local.iter_1952.tape_ptr)

    code_ptr = 1 + (
      local.curr_1953.code == "["
        ? local.iter_1952.tape[local.iter_1952.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1952.code_ptr)] : local.iter_1952.code_ptr :
      local.curr_1953.code == "]"
        ? local.iter_1952.tape[local.iter_1952.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1952.code_ptr)] : local.iter_1952.code_ptr
        : local.iter_1952.code_ptr)

    steps_taken = 1 + local.iter_1952.steps_taken
  }
}

locals {
  end_of_code_1954 = try(local.iter_1953.code_ptr >= length(var.code), true)

  curr_1954 = local.end_of_code_1954 ? null : {
    code = substr(var.code, local.iter_1953.code_ptr, 1)
    input = substr(var.code, local.iter_1953.code_ptr, 1) == "," ? substr(local.iter_1953.input, 0, 1) : null
  }

  iter_1954 = local.end_of_code_1954 ? local.iter_1953 : {
    input = (local.curr_1954.code == ","
      ? substr(local.iter_1953.input, 1, -1)
      : local.iter_1953.input)

    output = (local.curr_1954.code == "."
      ? "${local.iter_1953.output}${jsondecode(format("\"\\u%04x\"", local.iter_1953.tape[local.iter_1953.tape_ptr]))}"
      : local.iter_1953.output)
    
    tape = (
      local.curr_1954.code == "+"
        ? [for i, b in local.iter_1953.tape : (i == local.iter_1953.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1954.code == "-"
        ? [for i, b in local.iter_1953.tape : (i == local.iter_1953.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1954.code == ","
        ? [for i, b in local.iter_1953.tape : (i == local.iter_1953.tape_ptr ? local.ascii_lookup[local.curr_1954.input] : b)]
        : local.iter_1953.tape)

    tape_ptr = (
      local.curr_1954.code == "<"
        ? local.iter_1953.tape_ptr == 0 ? length(local.iter_1953.tape) - 1 : local.iter_1953.tape_ptr - 1 :
      local.curr_1954.code == ">"
        ? local.iter_1953.tape_ptr == length(local.iter_1953.tape) - 1 ? 0 : local.iter_1953.tape_ptr + 1
        : local.iter_1953.tape_ptr)

    code_ptr = 1 + (
      local.curr_1954.code == "["
        ? local.iter_1953.tape[local.iter_1953.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1953.code_ptr)] : local.iter_1953.code_ptr :
      local.curr_1954.code == "]"
        ? local.iter_1953.tape[local.iter_1953.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1953.code_ptr)] : local.iter_1953.code_ptr
        : local.iter_1953.code_ptr)

    steps_taken = 1 + local.iter_1953.steps_taken
  }
}

locals {
  end_of_code_1955 = try(local.iter_1954.code_ptr >= length(var.code), true)

  curr_1955 = local.end_of_code_1955 ? null : {
    code = substr(var.code, local.iter_1954.code_ptr, 1)
    input = substr(var.code, local.iter_1954.code_ptr, 1) == "," ? substr(local.iter_1954.input, 0, 1) : null
  }

  iter_1955 = local.end_of_code_1955 ? local.iter_1954 : {
    input = (local.curr_1955.code == ","
      ? substr(local.iter_1954.input, 1, -1)
      : local.iter_1954.input)

    output = (local.curr_1955.code == "."
      ? "${local.iter_1954.output}${jsondecode(format("\"\\u%04x\"", local.iter_1954.tape[local.iter_1954.tape_ptr]))}"
      : local.iter_1954.output)
    
    tape = (
      local.curr_1955.code == "+"
        ? [for i, b in local.iter_1954.tape : (i == local.iter_1954.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1955.code == "-"
        ? [for i, b in local.iter_1954.tape : (i == local.iter_1954.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1955.code == ","
        ? [for i, b in local.iter_1954.tape : (i == local.iter_1954.tape_ptr ? local.ascii_lookup[local.curr_1955.input] : b)]
        : local.iter_1954.tape)

    tape_ptr = (
      local.curr_1955.code == "<"
        ? local.iter_1954.tape_ptr == 0 ? length(local.iter_1954.tape) - 1 : local.iter_1954.tape_ptr - 1 :
      local.curr_1955.code == ">"
        ? local.iter_1954.tape_ptr == length(local.iter_1954.tape) - 1 ? 0 : local.iter_1954.tape_ptr + 1
        : local.iter_1954.tape_ptr)

    code_ptr = 1 + (
      local.curr_1955.code == "["
        ? local.iter_1954.tape[local.iter_1954.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1954.code_ptr)] : local.iter_1954.code_ptr :
      local.curr_1955.code == "]"
        ? local.iter_1954.tape[local.iter_1954.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1954.code_ptr)] : local.iter_1954.code_ptr
        : local.iter_1954.code_ptr)

    steps_taken = 1 + local.iter_1954.steps_taken
  }
}

locals {
  end_of_code_1956 = try(local.iter_1955.code_ptr >= length(var.code), true)

  curr_1956 = local.end_of_code_1956 ? null : {
    code = substr(var.code, local.iter_1955.code_ptr, 1)
    input = substr(var.code, local.iter_1955.code_ptr, 1) == "," ? substr(local.iter_1955.input, 0, 1) : null
  }

  iter_1956 = local.end_of_code_1956 ? local.iter_1955 : {
    input = (local.curr_1956.code == ","
      ? substr(local.iter_1955.input, 1, -1)
      : local.iter_1955.input)

    output = (local.curr_1956.code == "."
      ? "${local.iter_1955.output}${jsondecode(format("\"\\u%04x\"", local.iter_1955.tape[local.iter_1955.tape_ptr]))}"
      : local.iter_1955.output)
    
    tape = (
      local.curr_1956.code == "+"
        ? [for i, b in local.iter_1955.tape : (i == local.iter_1955.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1956.code == "-"
        ? [for i, b in local.iter_1955.tape : (i == local.iter_1955.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1956.code == ","
        ? [for i, b in local.iter_1955.tape : (i == local.iter_1955.tape_ptr ? local.ascii_lookup[local.curr_1956.input] : b)]
        : local.iter_1955.tape)

    tape_ptr = (
      local.curr_1956.code == "<"
        ? local.iter_1955.tape_ptr == 0 ? length(local.iter_1955.tape) - 1 : local.iter_1955.tape_ptr - 1 :
      local.curr_1956.code == ">"
        ? local.iter_1955.tape_ptr == length(local.iter_1955.tape) - 1 ? 0 : local.iter_1955.tape_ptr + 1
        : local.iter_1955.tape_ptr)

    code_ptr = 1 + (
      local.curr_1956.code == "["
        ? local.iter_1955.tape[local.iter_1955.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1955.code_ptr)] : local.iter_1955.code_ptr :
      local.curr_1956.code == "]"
        ? local.iter_1955.tape[local.iter_1955.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1955.code_ptr)] : local.iter_1955.code_ptr
        : local.iter_1955.code_ptr)

    steps_taken = 1 + local.iter_1955.steps_taken
  }
}

locals {
  end_of_code_1957 = try(local.iter_1956.code_ptr >= length(var.code), true)

  curr_1957 = local.end_of_code_1957 ? null : {
    code = substr(var.code, local.iter_1956.code_ptr, 1)
    input = substr(var.code, local.iter_1956.code_ptr, 1) == "," ? substr(local.iter_1956.input, 0, 1) : null
  }

  iter_1957 = local.end_of_code_1957 ? local.iter_1956 : {
    input = (local.curr_1957.code == ","
      ? substr(local.iter_1956.input, 1, -1)
      : local.iter_1956.input)

    output = (local.curr_1957.code == "."
      ? "${local.iter_1956.output}${jsondecode(format("\"\\u%04x\"", local.iter_1956.tape[local.iter_1956.tape_ptr]))}"
      : local.iter_1956.output)
    
    tape = (
      local.curr_1957.code == "+"
        ? [for i, b in local.iter_1956.tape : (i == local.iter_1956.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1957.code == "-"
        ? [for i, b in local.iter_1956.tape : (i == local.iter_1956.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1957.code == ","
        ? [for i, b in local.iter_1956.tape : (i == local.iter_1956.tape_ptr ? local.ascii_lookup[local.curr_1957.input] : b)]
        : local.iter_1956.tape)

    tape_ptr = (
      local.curr_1957.code == "<"
        ? local.iter_1956.tape_ptr == 0 ? length(local.iter_1956.tape) - 1 : local.iter_1956.tape_ptr - 1 :
      local.curr_1957.code == ">"
        ? local.iter_1956.tape_ptr == length(local.iter_1956.tape) - 1 ? 0 : local.iter_1956.tape_ptr + 1
        : local.iter_1956.tape_ptr)

    code_ptr = 1 + (
      local.curr_1957.code == "["
        ? local.iter_1956.tape[local.iter_1956.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1956.code_ptr)] : local.iter_1956.code_ptr :
      local.curr_1957.code == "]"
        ? local.iter_1956.tape[local.iter_1956.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1956.code_ptr)] : local.iter_1956.code_ptr
        : local.iter_1956.code_ptr)

    steps_taken = 1 + local.iter_1956.steps_taken
  }
}

locals {
  end_of_code_1958 = try(local.iter_1957.code_ptr >= length(var.code), true)

  curr_1958 = local.end_of_code_1958 ? null : {
    code = substr(var.code, local.iter_1957.code_ptr, 1)
    input = substr(var.code, local.iter_1957.code_ptr, 1) == "," ? substr(local.iter_1957.input, 0, 1) : null
  }

  iter_1958 = local.end_of_code_1958 ? local.iter_1957 : {
    input = (local.curr_1958.code == ","
      ? substr(local.iter_1957.input, 1, -1)
      : local.iter_1957.input)

    output = (local.curr_1958.code == "."
      ? "${local.iter_1957.output}${jsondecode(format("\"\\u%04x\"", local.iter_1957.tape[local.iter_1957.tape_ptr]))}"
      : local.iter_1957.output)
    
    tape = (
      local.curr_1958.code == "+"
        ? [for i, b in local.iter_1957.tape : (i == local.iter_1957.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1958.code == "-"
        ? [for i, b in local.iter_1957.tape : (i == local.iter_1957.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1958.code == ","
        ? [for i, b in local.iter_1957.tape : (i == local.iter_1957.tape_ptr ? local.ascii_lookup[local.curr_1958.input] : b)]
        : local.iter_1957.tape)

    tape_ptr = (
      local.curr_1958.code == "<"
        ? local.iter_1957.tape_ptr == 0 ? length(local.iter_1957.tape) - 1 : local.iter_1957.tape_ptr - 1 :
      local.curr_1958.code == ">"
        ? local.iter_1957.tape_ptr == length(local.iter_1957.tape) - 1 ? 0 : local.iter_1957.tape_ptr + 1
        : local.iter_1957.tape_ptr)

    code_ptr = 1 + (
      local.curr_1958.code == "["
        ? local.iter_1957.tape[local.iter_1957.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1957.code_ptr)] : local.iter_1957.code_ptr :
      local.curr_1958.code == "]"
        ? local.iter_1957.tape[local.iter_1957.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1957.code_ptr)] : local.iter_1957.code_ptr
        : local.iter_1957.code_ptr)

    steps_taken = 1 + local.iter_1957.steps_taken
  }
}

locals {
  end_of_code_1959 = try(local.iter_1958.code_ptr >= length(var.code), true)

  curr_1959 = local.end_of_code_1959 ? null : {
    code = substr(var.code, local.iter_1958.code_ptr, 1)
    input = substr(var.code, local.iter_1958.code_ptr, 1) == "," ? substr(local.iter_1958.input, 0, 1) : null
  }

  iter_1959 = local.end_of_code_1959 ? local.iter_1958 : {
    input = (local.curr_1959.code == ","
      ? substr(local.iter_1958.input, 1, -1)
      : local.iter_1958.input)

    output = (local.curr_1959.code == "."
      ? "${local.iter_1958.output}${jsondecode(format("\"\\u%04x\"", local.iter_1958.tape[local.iter_1958.tape_ptr]))}"
      : local.iter_1958.output)
    
    tape = (
      local.curr_1959.code == "+"
        ? [for i, b in local.iter_1958.tape : (i == local.iter_1958.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1959.code == "-"
        ? [for i, b in local.iter_1958.tape : (i == local.iter_1958.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1959.code == ","
        ? [for i, b in local.iter_1958.tape : (i == local.iter_1958.tape_ptr ? local.ascii_lookup[local.curr_1959.input] : b)]
        : local.iter_1958.tape)

    tape_ptr = (
      local.curr_1959.code == "<"
        ? local.iter_1958.tape_ptr == 0 ? length(local.iter_1958.tape) - 1 : local.iter_1958.tape_ptr - 1 :
      local.curr_1959.code == ">"
        ? local.iter_1958.tape_ptr == length(local.iter_1958.tape) - 1 ? 0 : local.iter_1958.tape_ptr + 1
        : local.iter_1958.tape_ptr)

    code_ptr = 1 + (
      local.curr_1959.code == "["
        ? local.iter_1958.tape[local.iter_1958.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1958.code_ptr)] : local.iter_1958.code_ptr :
      local.curr_1959.code == "]"
        ? local.iter_1958.tape[local.iter_1958.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1958.code_ptr)] : local.iter_1958.code_ptr
        : local.iter_1958.code_ptr)

    steps_taken = 1 + local.iter_1958.steps_taken
  }
}

locals {
  end_of_code_1960 = try(local.iter_1959.code_ptr >= length(var.code), true)

  curr_1960 = local.end_of_code_1960 ? null : {
    code = substr(var.code, local.iter_1959.code_ptr, 1)
    input = substr(var.code, local.iter_1959.code_ptr, 1) == "," ? substr(local.iter_1959.input, 0, 1) : null
  }

  iter_1960 = local.end_of_code_1960 ? local.iter_1959 : {
    input = (local.curr_1960.code == ","
      ? substr(local.iter_1959.input, 1, -1)
      : local.iter_1959.input)

    output = (local.curr_1960.code == "."
      ? "${local.iter_1959.output}${jsondecode(format("\"\\u%04x\"", local.iter_1959.tape[local.iter_1959.tape_ptr]))}"
      : local.iter_1959.output)
    
    tape = (
      local.curr_1960.code == "+"
        ? [for i, b in local.iter_1959.tape : (i == local.iter_1959.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1960.code == "-"
        ? [for i, b in local.iter_1959.tape : (i == local.iter_1959.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1960.code == ","
        ? [for i, b in local.iter_1959.tape : (i == local.iter_1959.tape_ptr ? local.ascii_lookup[local.curr_1960.input] : b)]
        : local.iter_1959.tape)

    tape_ptr = (
      local.curr_1960.code == "<"
        ? local.iter_1959.tape_ptr == 0 ? length(local.iter_1959.tape) - 1 : local.iter_1959.tape_ptr - 1 :
      local.curr_1960.code == ">"
        ? local.iter_1959.tape_ptr == length(local.iter_1959.tape) - 1 ? 0 : local.iter_1959.tape_ptr + 1
        : local.iter_1959.tape_ptr)

    code_ptr = 1 + (
      local.curr_1960.code == "["
        ? local.iter_1959.tape[local.iter_1959.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1959.code_ptr)] : local.iter_1959.code_ptr :
      local.curr_1960.code == "]"
        ? local.iter_1959.tape[local.iter_1959.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1959.code_ptr)] : local.iter_1959.code_ptr
        : local.iter_1959.code_ptr)

    steps_taken = 1 + local.iter_1959.steps_taken
  }
}

locals {
  end_of_code_1961 = try(local.iter_1960.code_ptr >= length(var.code), true)

  curr_1961 = local.end_of_code_1961 ? null : {
    code = substr(var.code, local.iter_1960.code_ptr, 1)
    input = substr(var.code, local.iter_1960.code_ptr, 1) == "," ? substr(local.iter_1960.input, 0, 1) : null
  }

  iter_1961 = local.end_of_code_1961 ? local.iter_1960 : {
    input = (local.curr_1961.code == ","
      ? substr(local.iter_1960.input, 1, -1)
      : local.iter_1960.input)

    output = (local.curr_1961.code == "."
      ? "${local.iter_1960.output}${jsondecode(format("\"\\u%04x\"", local.iter_1960.tape[local.iter_1960.tape_ptr]))}"
      : local.iter_1960.output)
    
    tape = (
      local.curr_1961.code == "+"
        ? [for i, b in local.iter_1960.tape : (i == local.iter_1960.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1961.code == "-"
        ? [for i, b in local.iter_1960.tape : (i == local.iter_1960.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1961.code == ","
        ? [for i, b in local.iter_1960.tape : (i == local.iter_1960.tape_ptr ? local.ascii_lookup[local.curr_1961.input] : b)]
        : local.iter_1960.tape)

    tape_ptr = (
      local.curr_1961.code == "<"
        ? local.iter_1960.tape_ptr == 0 ? length(local.iter_1960.tape) - 1 : local.iter_1960.tape_ptr - 1 :
      local.curr_1961.code == ">"
        ? local.iter_1960.tape_ptr == length(local.iter_1960.tape) - 1 ? 0 : local.iter_1960.tape_ptr + 1
        : local.iter_1960.tape_ptr)

    code_ptr = 1 + (
      local.curr_1961.code == "["
        ? local.iter_1960.tape[local.iter_1960.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1960.code_ptr)] : local.iter_1960.code_ptr :
      local.curr_1961.code == "]"
        ? local.iter_1960.tape[local.iter_1960.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1960.code_ptr)] : local.iter_1960.code_ptr
        : local.iter_1960.code_ptr)

    steps_taken = 1 + local.iter_1960.steps_taken
  }
}

locals {
  end_of_code_1962 = try(local.iter_1961.code_ptr >= length(var.code), true)

  curr_1962 = local.end_of_code_1962 ? null : {
    code = substr(var.code, local.iter_1961.code_ptr, 1)
    input = substr(var.code, local.iter_1961.code_ptr, 1) == "," ? substr(local.iter_1961.input, 0, 1) : null
  }

  iter_1962 = local.end_of_code_1962 ? local.iter_1961 : {
    input = (local.curr_1962.code == ","
      ? substr(local.iter_1961.input, 1, -1)
      : local.iter_1961.input)

    output = (local.curr_1962.code == "."
      ? "${local.iter_1961.output}${jsondecode(format("\"\\u%04x\"", local.iter_1961.tape[local.iter_1961.tape_ptr]))}"
      : local.iter_1961.output)
    
    tape = (
      local.curr_1962.code == "+"
        ? [for i, b in local.iter_1961.tape : (i == local.iter_1961.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1962.code == "-"
        ? [for i, b in local.iter_1961.tape : (i == local.iter_1961.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1962.code == ","
        ? [for i, b in local.iter_1961.tape : (i == local.iter_1961.tape_ptr ? local.ascii_lookup[local.curr_1962.input] : b)]
        : local.iter_1961.tape)

    tape_ptr = (
      local.curr_1962.code == "<"
        ? local.iter_1961.tape_ptr == 0 ? length(local.iter_1961.tape) - 1 : local.iter_1961.tape_ptr - 1 :
      local.curr_1962.code == ">"
        ? local.iter_1961.tape_ptr == length(local.iter_1961.tape) - 1 ? 0 : local.iter_1961.tape_ptr + 1
        : local.iter_1961.tape_ptr)

    code_ptr = 1 + (
      local.curr_1962.code == "["
        ? local.iter_1961.tape[local.iter_1961.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1961.code_ptr)] : local.iter_1961.code_ptr :
      local.curr_1962.code == "]"
        ? local.iter_1961.tape[local.iter_1961.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1961.code_ptr)] : local.iter_1961.code_ptr
        : local.iter_1961.code_ptr)

    steps_taken = 1 + local.iter_1961.steps_taken
  }
}

locals {
  end_of_code_1963 = try(local.iter_1962.code_ptr >= length(var.code), true)

  curr_1963 = local.end_of_code_1963 ? null : {
    code = substr(var.code, local.iter_1962.code_ptr, 1)
    input = substr(var.code, local.iter_1962.code_ptr, 1) == "," ? substr(local.iter_1962.input, 0, 1) : null
  }

  iter_1963 = local.end_of_code_1963 ? local.iter_1962 : {
    input = (local.curr_1963.code == ","
      ? substr(local.iter_1962.input, 1, -1)
      : local.iter_1962.input)

    output = (local.curr_1963.code == "."
      ? "${local.iter_1962.output}${jsondecode(format("\"\\u%04x\"", local.iter_1962.tape[local.iter_1962.tape_ptr]))}"
      : local.iter_1962.output)
    
    tape = (
      local.curr_1963.code == "+"
        ? [for i, b in local.iter_1962.tape : (i == local.iter_1962.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1963.code == "-"
        ? [for i, b in local.iter_1962.tape : (i == local.iter_1962.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1963.code == ","
        ? [for i, b in local.iter_1962.tape : (i == local.iter_1962.tape_ptr ? local.ascii_lookup[local.curr_1963.input] : b)]
        : local.iter_1962.tape)

    tape_ptr = (
      local.curr_1963.code == "<"
        ? local.iter_1962.tape_ptr == 0 ? length(local.iter_1962.tape) - 1 : local.iter_1962.tape_ptr - 1 :
      local.curr_1963.code == ">"
        ? local.iter_1962.tape_ptr == length(local.iter_1962.tape) - 1 ? 0 : local.iter_1962.tape_ptr + 1
        : local.iter_1962.tape_ptr)

    code_ptr = 1 + (
      local.curr_1963.code == "["
        ? local.iter_1962.tape[local.iter_1962.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1962.code_ptr)] : local.iter_1962.code_ptr :
      local.curr_1963.code == "]"
        ? local.iter_1962.tape[local.iter_1962.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1962.code_ptr)] : local.iter_1962.code_ptr
        : local.iter_1962.code_ptr)

    steps_taken = 1 + local.iter_1962.steps_taken
  }
}

locals {
  end_of_code_1964 = try(local.iter_1963.code_ptr >= length(var.code), true)

  curr_1964 = local.end_of_code_1964 ? null : {
    code = substr(var.code, local.iter_1963.code_ptr, 1)
    input = substr(var.code, local.iter_1963.code_ptr, 1) == "," ? substr(local.iter_1963.input, 0, 1) : null
  }

  iter_1964 = local.end_of_code_1964 ? local.iter_1963 : {
    input = (local.curr_1964.code == ","
      ? substr(local.iter_1963.input, 1, -1)
      : local.iter_1963.input)

    output = (local.curr_1964.code == "."
      ? "${local.iter_1963.output}${jsondecode(format("\"\\u%04x\"", local.iter_1963.tape[local.iter_1963.tape_ptr]))}"
      : local.iter_1963.output)
    
    tape = (
      local.curr_1964.code == "+"
        ? [for i, b in local.iter_1963.tape : (i == local.iter_1963.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1964.code == "-"
        ? [for i, b in local.iter_1963.tape : (i == local.iter_1963.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1964.code == ","
        ? [for i, b in local.iter_1963.tape : (i == local.iter_1963.tape_ptr ? local.ascii_lookup[local.curr_1964.input] : b)]
        : local.iter_1963.tape)

    tape_ptr = (
      local.curr_1964.code == "<"
        ? local.iter_1963.tape_ptr == 0 ? length(local.iter_1963.tape) - 1 : local.iter_1963.tape_ptr - 1 :
      local.curr_1964.code == ">"
        ? local.iter_1963.tape_ptr == length(local.iter_1963.tape) - 1 ? 0 : local.iter_1963.tape_ptr + 1
        : local.iter_1963.tape_ptr)

    code_ptr = 1 + (
      local.curr_1964.code == "["
        ? local.iter_1963.tape[local.iter_1963.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1963.code_ptr)] : local.iter_1963.code_ptr :
      local.curr_1964.code == "]"
        ? local.iter_1963.tape[local.iter_1963.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1963.code_ptr)] : local.iter_1963.code_ptr
        : local.iter_1963.code_ptr)

    steps_taken = 1 + local.iter_1963.steps_taken
  }
}

locals {
  end_of_code_1965 = try(local.iter_1964.code_ptr >= length(var.code), true)

  curr_1965 = local.end_of_code_1965 ? null : {
    code = substr(var.code, local.iter_1964.code_ptr, 1)
    input = substr(var.code, local.iter_1964.code_ptr, 1) == "," ? substr(local.iter_1964.input, 0, 1) : null
  }

  iter_1965 = local.end_of_code_1965 ? local.iter_1964 : {
    input = (local.curr_1965.code == ","
      ? substr(local.iter_1964.input, 1, -1)
      : local.iter_1964.input)

    output = (local.curr_1965.code == "."
      ? "${local.iter_1964.output}${jsondecode(format("\"\\u%04x\"", local.iter_1964.tape[local.iter_1964.tape_ptr]))}"
      : local.iter_1964.output)
    
    tape = (
      local.curr_1965.code == "+"
        ? [for i, b in local.iter_1964.tape : (i == local.iter_1964.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1965.code == "-"
        ? [for i, b in local.iter_1964.tape : (i == local.iter_1964.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1965.code == ","
        ? [for i, b in local.iter_1964.tape : (i == local.iter_1964.tape_ptr ? local.ascii_lookup[local.curr_1965.input] : b)]
        : local.iter_1964.tape)

    tape_ptr = (
      local.curr_1965.code == "<"
        ? local.iter_1964.tape_ptr == 0 ? length(local.iter_1964.tape) - 1 : local.iter_1964.tape_ptr - 1 :
      local.curr_1965.code == ">"
        ? local.iter_1964.tape_ptr == length(local.iter_1964.tape) - 1 ? 0 : local.iter_1964.tape_ptr + 1
        : local.iter_1964.tape_ptr)

    code_ptr = 1 + (
      local.curr_1965.code == "["
        ? local.iter_1964.tape[local.iter_1964.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1964.code_ptr)] : local.iter_1964.code_ptr :
      local.curr_1965.code == "]"
        ? local.iter_1964.tape[local.iter_1964.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1964.code_ptr)] : local.iter_1964.code_ptr
        : local.iter_1964.code_ptr)

    steps_taken = 1 + local.iter_1964.steps_taken
  }
}

locals {
  end_of_code_1966 = try(local.iter_1965.code_ptr >= length(var.code), true)

  curr_1966 = local.end_of_code_1966 ? null : {
    code = substr(var.code, local.iter_1965.code_ptr, 1)
    input = substr(var.code, local.iter_1965.code_ptr, 1) == "," ? substr(local.iter_1965.input, 0, 1) : null
  }

  iter_1966 = local.end_of_code_1966 ? local.iter_1965 : {
    input = (local.curr_1966.code == ","
      ? substr(local.iter_1965.input, 1, -1)
      : local.iter_1965.input)

    output = (local.curr_1966.code == "."
      ? "${local.iter_1965.output}${jsondecode(format("\"\\u%04x\"", local.iter_1965.tape[local.iter_1965.tape_ptr]))}"
      : local.iter_1965.output)
    
    tape = (
      local.curr_1966.code == "+"
        ? [for i, b in local.iter_1965.tape : (i == local.iter_1965.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1966.code == "-"
        ? [for i, b in local.iter_1965.tape : (i == local.iter_1965.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1966.code == ","
        ? [for i, b in local.iter_1965.tape : (i == local.iter_1965.tape_ptr ? local.ascii_lookup[local.curr_1966.input] : b)]
        : local.iter_1965.tape)

    tape_ptr = (
      local.curr_1966.code == "<"
        ? local.iter_1965.tape_ptr == 0 ? length(local.iter_1965.tape) - 1 : local.iter_1965.tape_ptr - 1 :
      local.curr_1966.code == ">"
        ? local.iter_1965.tape_ptr == length(local.iter_1965.tape) - 1 ? 0 : local.iter_1965.tape_ptr + 1
        : local.iter_1965.tape_ptr)

    code_ptr = 1 + (
      local.curr_1966.code == "["
        ? local.iter_1965.tape[local.iter_1965.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1965.code_ptr)] : local.iter_1965.code_ptr :
      local.curr_1966.code == "]"
        ? local.iter_1965.tape[local.iter_1965.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1965.code_ptr)] : local.iter_1965.code_ptr
        : local.iter_1965.code_ptr)

    steps_taken = 1 + local.iter_1965.steps_taken
  }
}

locals {
  end_of_code_1967 = try(local.iter_1966.code_ptr >= length(var.code), true)

  curr_1967 = local.end_of_code_1967 ? null : {
    code = substr(var.code, local.iter_1966.code_ptr, 1)
    input = substr(var.code, local.iter_1966.code_ptr, 1) == "," ? substr(local.iter_1966.input, 0, 1) : null
  }

  iter_1967 = local.end_of_code_1967 ? local.iter_1966 : {
    input = (local.curr_1967.code == ","
      ? substr(local.iter_1966.input, 1, -1)
      : local.iter_1966.input)

    output = (local.curr_1967.code == "."
      ? "${local.iter_1966.output}${jsondecode(format("\"\\u%04x\"", local.iter_1966.tape[local.iter_1966.tape_ptr]))}"
      : local.iter_1966.output)
    
    tape = (
      local.curr_1967.code == "+"
        ? [for i, b in local.iter_1966.tape : (i == local.iter_1966.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1967.code == "-"
        ? [for i, b in local.iter_1966.tape : (i == local.iter_1966.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1967.code == ","
        ? [for i, b in local.iter_1966.tape : (i == local.iter_1966.tape_ptr ? local.ascii_lookup[local.curr_1967.input] : b)]
        : local.iter_1966.tape)

    tape_ptr = (
      local.curr_1967.code == "<"
        ? local.iter_1966.tape_ptr == 0 ? length(local.iter_1966.tape) - 1 : local.iter_1966.tape_ptr - 1 :
      local.curr_1967.code == ">"
        ? local.iter_1966.tape_ptr == length(local.iter_1966.tape) - 1 ? 0 : local.iter_1966.tape_ptr + 1
        : local.iter_1966.tape_ptr)

    code_ptr = 1 + (
      local.curr_1967.code == "["
        ? local.iter_1966.tape[local.iter_1966.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1966.code_ptr)] : local.iter_1966.code_ptr :
      local.curr_1967.code == "]"
        ? local.iter_1966.tape[local.iter_1966.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1966.code_ptr)] : local.iter_1966.code_ptr
        : local.iter_1966.code_ptr)

    steps_taken = 1 + local.iter_1966.steps_taken
  }
}

locals {
  end_of_code_1968 = try(local.iter_1967.code_ptr >= length(var.code), true)

  curr_1968 = local.end_of_code_1968 ? null : {
    code = substr(var.code, local.iter_1967.code_ptr, 1)
    input = substr(var.code, local.iter_1967.code_ptr, 1) == "," ? substr(local.iter_1967.input, 0, 1) : null
  }

  iter_1968 = local.end_of_code_1968 ? local.iter_1967 : {
    input = (local.curr_1968.code == ","
      ? substr(local.iter_1967.input, 1, -1)
      : local.iter_1967.input)

    output = (local.curr_1968.code == "."
      ? "${local.iter_1967.output}${jsondecode(format("\"\\u%04x\"", local.iter_1967.tape[local.iter_1967.tape_ptr]))}"
      : local.iter_1967.output)
    
    tape = (
      local.curr_1968.code == "+"
        ? [for i, b in local.iter_1967.tape : (i == local.iter_1967.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1968.code == "-"
        ? [for i, b in local.iter_1967.tape : (i == local.iter_1967.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1968.code == ","
        ? [for i, b in local.iter_1967.tape : (i == local.iter_1967.tape_ptr ? local.ascii_lookup[local.curr_1968.input] : b)]
        : local.iter_1967.tape)

    tape_ptr = (
      local.curr_1968.code == "<"
        ? local.iter_1967.tape_ptr == 0 ? length(local.iter_1967.tape) - 1 : local.iter_1967.tape_ptr - 1 :
      local.curr_1968.code == ">"
        ? local.iter_1967.tape_ptr == length(local.iter_1967.tape) - 1 ? 0 : local.iter_1967.tape_ptr + 1
        : local.iter_1967.tape_ptr)

    code_ptr = 1 + (
      local.curr_1968.code == "["
        ? local.iter_1967.tape[local.iter_1967.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1967.code_ptr)] : local.iter_1967.code_ptr :
      local.curr_1968.code == "]"
        ? local.iter_1967.tape[local.iter_1967.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1967.code_ptr)] : local.iter_1967.code_ptr
        : local.iter_1967.code_ptr)

    steps_taken = 1 + local.iter_1967.steps_taken
  }
}

locals {
  end_of_code_1969 = try(local.iter_1968.code_ptr >= length(var.code), true)

  curr_1969 = local.end_of_code_1969 ? null : {
    code = substr(var.code, local.iter_1968.code_ptr, 1)
    input = substr(var.code, local.iter_1968.code_ptr, 1) == "," ? substr(local.iter_1968.input, 0, 1) : null
  }

  iter_1969 = local.end_of_code_1969 ? local.iter_1968 : {
    input = (local.curr_1969.code == ","
      ? substr(local.iter_1968.input, 1, -1)
      : local.iter_1968.input)

    output = (local.curr_1969.code == "."
      ? "${local.iter_1968.output}${jsondecode(format("\"\\u%04x\"", local.iter_1968.tape[local.iter_1968.tape_ptr]))}"
      : local.iter_1968.output)
    
    tape = (
      local.curr_1969.code == "+"
        ? [for i, b in local.iter_1968.tape : (i == local.iter_1968.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1969.code == "-"
        ? [for i, b in local.iter_1968.tape : (i == local.iter_1968.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1969.code == ","
        ? [for i, b in local.iter_1968.tape : (i == local.iter_1968.tape_ptr ? local.ascii_lookup[local.curr_1969.input] : b)]
        : local.iter_1968.tape)

    tape_ptr = (
      local.curr_1969.code == "<"
        ? local.iter_1968.tape_ptr == 0 ? length(local.iter_1968.tape) - 1 : local.iter_1968.tape_ptr - 1 :
      local.curr_1969.code == ">"
        ? local.iter_1968.tape_ptr == length(local.iter_1968.tape) - 1 ? 0 : local.iter_1968.tape_ptr + 1
        : local.iter_1968.tape_ptr)

    code_ptr = 1 + (
      local.curr_1969.code == "["
        ? local.iter_1968.tape[local.iter_1968.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1968.code_ptr)] : local.iter_1968.code_ptr :
      local.curr_1969.code == "]"
        ? local.iter_1968.tape[local.iter_1968.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1968.code_ptr)] : local.iter_1968.code_ptr
        : local.iter_1968.code_ptr)

    steps_taken = 1 + local.iter_1968.steps_taken
  }
}

locals {
  end_of_code_1970 = try(local.iter_1969.code_ptr >= length(var.code), true)

  curr_1970 = local.end_of_code_1970 ? null : {
    code = substr(var.code, local.iter_1969.code_ptr, 1)
    input = substr(var.code, local.iter_1969.code_ptr, 1) == "," ? substr(local.iter_1969.input, 0, 1) : null
  }

  iter_1970 = local.end_of_code_1970 ? local.iter_1969 : {
    input = (local.curr_1970.code == ","
      ? substr(local.iter_1969.input, 1, -1)
      : local.iter_1969.input)

    output = (local.curr_1970.code == "."
      ? "${local.iter_1969.output}${jsondecode(format("\"\\u%04x\"", local.iter_1969.tape[local.iter_1969.tape_ptr]))}"
      : local.iter_1969.output)
    
    tape = (
      local.curr_1970.code == "+"
        ? [for i, b in local.iter_1969.tape : (i == local.iter_1969.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1970.code == "-"
        ? [for i, b in local.iter_1969.tape : (i == local.iter_1969.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1970.code == ","
        ? [for i, b in local.iter_1969.tape : (i == local.iter_1969.tape_ptr ? local.ascii_lookup[local.curr_1970.input] : b)]
        : local.iter_1969.tape)

    tape_ptr = (
      local.curr_1970.code == "<"
        ? local.iter_1969.tape_ptr == 0 ? length(local.iter_1969.tape) - 1 : local.iter_1969.tape_ptr - 1 :
      local.curr_1970.code == ">"
        ? local.iter_1969.tape_ptr == length(local.iter_1969.tape) - 1 ? 0 : local.iter_1969.tape_ptr + 1
        : local.iter_1969.tape_ptr)

    code_ptr = 1 + (
      local.curr_1970.code == "["
        ? local.iter_1969.tape[local.iter_1969.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1969.code_ptr)] : local.iter_1969.code_ptr :
      local.curr_1970.code == "]"
        ? local.iter_1969.tape[local.iter_1969.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1969.code_ptr)] : local.iter_1969.code_ptr
        : local.iter_1969.code_ptr)

    steps_taken = 1 + local.iter_1969.steps_taken
  }
}

locals {
  end_of_code_1971 = try(local.iter_1970.code_ptr >= length(var.code), true)

  curr_1971 = local.end_of_code_1971 ? null : {
    code = substr(var.code, local.iter_1970.code_ptr, 1)
    input = substr(var.code, local.iter_1970.code_ptr, 1) == "," ? substr(local.iter_1970.input, 0, 1) : null
  }

  iter_1971 = local.end_of_code_1971 ? local.iter_1970 : {
    input = (local.curr_1971.code == ","
      ? substr(local.iter_1970.input, 1, -1)
      : local.iter_1970.input)

    output = (local.curr_1971.code == "."
      ? "${local.iter_1970.output}${jsondecode(format("\"\\u%04x\"", local.iter_1970.tape[local.iter_1970.tape_ptr]))}"
      : local.iter_1970.output)
    
    tape = (
      local.curr_1971.code == "+"
        ? [for i, b in local.iter_1970.tape : (i == local.iter_1970.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1971.code == "-"
        ? [for i, b in local.iter_1970.tape : (i == local.iter_1970.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1971.code == ","
        ? [for i, b in local.iter_1970.tape : (i == local.iter_1970.tape_ptr ? local.ascii_lookup[local.curr_1971.input] : b)]
        : local.iter_1970.tape)

    tape_ptr = (
      local.curr_1971.code == "<"
        ? local.iter_1970.tape_ptr == 0 ? length(local.iter_1970.tape) - 1 : local.iter_1970.tape_ptr - 1 :
      local.curr_1971.code == ">"
        ? local.iter_1970.tape_ptr == length(local.iter_1970.tape) - 1 ? 0 : local.iter_1970.tape_ptr + 1
        : local.iter_1970.tape_ptr)

    code_ptr = 1 + (
      local.curr_1971.code == "["
        ? local.iter_1970.tape[local.iter_1970.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1970.code_ptr)] : local.iter_1970.code_ptr :
      local.curr_1971.code == "]"
        ? local.iter_1970.tape[local.iter_1970.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1970.code_ptr)] : local.iter_1970.code_ptr
        : local.iter_1970.code_ptr)

    steps_taken = 1 + local.iter_1970.steps_taken
  }
}

locals {
  end_of_code_1972 = try(local.iter_1971.code_ptr >= length(var.code), true)

  curr_1972 = local.end_of_code_1972 ? null : {
    code = substr(var.code, local.iter_1971.code_ptr, 1)
    input = substr(var.code, local.iter_1971.code_ptr, 1) == "," ? substr(local.iter_1971.input, 0, 1) : null
  }

  iter_1972 = local.end_of_code_1972 ? local.iter_1971 : {
    input = (local.curr_1972.code == ","
      ? substr(local.iter_1971.input, 1, -1)
      : local.iter_1971.input)

    output = (local.curr_1972.code == "."
      ? "${local.iter_1971.output}${jsondecode(format("\"\\u%04x\"", local.iter_1971.tape[local.iter_1971.tape_ptr]))}"
      : local.iter_1971.output)
    
    tape = (
      local.curr_1972.code == "+"
        ? [for i, b in local.iter_1971.tape : (i == local.iter_1971.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1972.code == "-"
        ? [for i, b in local.iter_1971.tape : (i == local.iter_1971.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1972.code == ","
        ? [for i, b in local.iter_1971.tape : (i == local.iter_1971.tape_ptr ? local.ascii_lookup[local.curr_1972.input] : b)]
        : local.iter_1971.tape)

    tape_ptr = (
      local.curr_1972.code == "<"
        ? local.iter_1971.tape_ptr == 0 ? length(local.iter_1971.tape) - 1 : local.iter_1971.tape_ptr - 1 :
      local.curr_1972.code == ">"
        ? local.iter_1971.tape_ptr == length(local.iter_1971.tape) - 1 ? 0 : local.iter_1971.tape_ptr + 1
        : local.iter_1971.tape_ptr)

    code_ptr = 1 + (
      local.curr_1972.code == "["
        ? local.iter_1971.tape[local.iter_1971.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1971.code_ptr)] : local.iter_1971.code_ptr :
      local.curr_1972.code == "]"
        ? local.iter_1971.tape[local.iter_1971.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1971.code_ptr)] : local.iter_1971.code_ptr
        : local.iter_1971.code_ptr)

    steps_taken = 1 + local.iter_1971.steps_taken
  }
}

locals {
  end_of_code_1973 = try(local.iter_1972.code_ptr >= length(var.code), true)

  curr_1973 = local.end_of_code_1973 ? null : {
    code = substr(var.code, local.iter_1972.code_ptr, 1)
    input = substr(var.code, local.iter_1972.code_ptr, 1) == "," ? substr(local.iter_1972.input, 0, 1) : null
  }

  iter_1973 = local.end_of_code_1973 ? local.iter_1972 : {
    input = (local.curr_1973.code == ","
      ? substr(local.iter_1972.input, 1, -1)
      : local.iter_1972.input)

    output = (local.curr_1973.code == "."
      ? "${local.iter_1972.output}${jsondecode(format("\"\\u%04x\"", local.iter_1972.tape[local.iter_1972.tape_ptr]))}"
      : local.iter_1972.output)
    
    tape = (
      local.curr_1973.code == "+"
        ? [for i, b in local.iter_1972.tape : (i == local.iter_1972.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1973.code == "-"
        ? [for i, b in local.iter_1972.tape : (i == local.iter_1972.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1973.code == ","
        ? [for i, b in local.iter_1972.tape : (i == local.iter_1972.tape_ptr ? local.ascii_lookup[local.curr_1973.input] : b)]
        : local.iter_1972.tape)

    tape_ptr = (
      local.curr_1973.code == "<"
        ? local.iter_1972.tape_ptr == 0 ? length(local.iter_1972.tape) - 1 : local.iter_1972.tape_ptr - 1 :
      local.curr_1973.code == ">"
        ? local.iter_1972.tape_ptr == length(local.iter_1972.tape) - 1 ? 0 : local.iter_1972.tape_ptr + 1
        : local.iter_1972.tape_ptr)

    code_ptr = 1 + (
      local.curr_1973.code == "["
        ? local.iter_1972.tape[local.iter_1972.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1972.code_ptr)] : local.iter_1972.code_ptr :
      local.curr_1973.code == "]"
        ? local.iter_1972.tape[local.iter_1972.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1972.code_ptr)] : local.iter_1972.code_ptr
        : local.iter_1972.code_ptr)

    steps_taken = 1 + local.iter_1972.steps_taken
  }
}

locals {
  end_of_code_1974 = try(local.iter_1973.code_ptr >= length(var.code), true)

  curr_1974 = local.end_of_code_1974 ? null : {
    code = substr(var.code, local.iter_1973.code_ptr, 1)
    input = substr(var.code, local.iter_1973.code_ptr, 1) == "," ? substr(local.iter_1973.input, 0, 1) : null
  }

  iter_1974 = local.end_of_code_1974 ? local.iter_1973 : {
    input = (local.curr_1974.code == ","
      ? substr(local.iter_1973.input, 1, -1)
      : local.iter_1973.input)

    output = (local.curr_1974.code == "."
      ? "${local.iter_1973.output}${jsondecode(format("\"\\u%04x\"", local.iter_1973.tape[local.iter_1973.tape_ptr]))}"
      : local.iter_1973.output)
    
    tape = (
      local.curr_1974.code == "+"
        ? [for i, b in local.iter_1973.tape : (i == local.iter_1973.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1974.code == "-"
        ? [for i, b in local.iter_1973.tape : (i == local.iter_1973.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1974.code == ","
        ? [for i, b in local.iter_1973.tape : (i == local.iter_1973.tape_ptr ? local.ascii_lookup[local.curr_1974.input] : b)]
        : local.iter_1973.tape)

    tape_ptr = (
      local.curr_1974.code == "<"
        ? local.iter_1973.tape_ptr == 0 ? length(local.iter_1973.tape) - 1 : local.iter_1973.tape_ptr - 1 :
      local.curr_1974.code == ">"
        ? local.iter_1973.tape_ptr == length(local.iter_1973.tape) - 1 ? 0 : local.iter_1973.tape_ptr + 1
        : local.iter_1973.tape_ptr)

    code_ptr = 1 + (
      local.curr_1974.code == "["
        ? local.iter_1973.tape[local.iter_1973.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1973.code_ptr)] : local.iter_1973.code_ptr :
      local.curr_1974.code == "]"
        ? local.iter_1973.tape[local.iter_1973.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1973.code_ptr)] : local.iter_1973.code_ptr
        : local.iter_1973.code_ptr)

    steps_taken = 1 + local.iter_1973.steps_taken
  }
}

locals {
  end_of_code_1975 = try(local.iter_1974.code_ptr >= length(var.code), true)

  curr_1975 = local.end_of_code_1975 ? null : {
    code = substr(var.code, local.iter_1974.code_ptr, 1)
    input = substr(var.code, local.iter_1974.code_ptr, 1) == "," ? substr(local.iter_1974.input, 0, 1) : null
  }

  iter_1975 = local.end_of_code_1975 ? local.iter_1974 : {
    input = (local.curr_1975.code == ","
      ? substr(local.iter_1974.input, 1, -1)
      : local.iter_1974.input)

    output = (local.curr_1975.code == "."
      ? "${local.iter_1974.output}${jsondecode(format("\"\\u%04x\"", local.iter_1974.tape[local.iter_1974.tape_ptr]))}"
      : local.iter_1974.output)
    
    tape = (
      local.curr_1975.code == "+"
        ? [for i, b in local.iter_1974.tape : (i == local.iter_1974.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1975.code == "-"
        ? [for i, b in local.iter_1974.tape : (i == local.iter_1974.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1975.code == ","
        ? [for i, b in local.iter_1974.tape : (i == local.iter_1974.tape_ptr ? local.ascii_lookup[local.curr_1975.input] : b)]
        : local.iter_1974.tape)

    tape_ptr = (
      local.curr_1975.code == "<"
        ? local.iter_1974.tape_ptr == 0 ? length(local.iter_1974.tape) - 1 : local.iter_1974.tape_ptr - 1 :
      local.curr_1975.code == ">"
        ? local.iter_1974.tape_ptr == length(local.iter_1974.tape) - 1 ? 0 : local.iter_1974.tape_ptr + 1
        : local.iter_1974.tape_ptr)

    code_ptr = 1 + (
      local.curr_1975.code == "["
        ? local.iter_1974.tape[local.iter_1974.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1974.code_ptr)] : local.iter_1974.code_ptr :
      local.curr_1975.code == "]"
        ? local.iter_1974.tape[local.iter_1974.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1974.code_ptr)] : local.iter_1974.code_ptr
        : local.iter_1974.code_ptr)

    steps_taken = 1 + local.iter_1974.steps_taken
  }
}

locals {
  end_of_code_1976 = try(local.iter_1975.code_ptr >= length(var.code), true)

  curr_1976 = local.end_of_code_1976 ? null : {
    code = substr(var.code, local.iter_1975.code_ptr, 1)
    input = substr(var.code, local.iter_1975.code_ptr, 1) == "," ? substr(local.iter_1975.input, 0, 1) : null
  }

  iter_1976 = local.end_of_code_1976 ? local.iter_1975 : {
    input = (local.curr_1976.code == ","
      ? substr(local.iter_1975.input, 1, -1)
      : local.iter_1975.input)

    output = (local.curr_1976.code == "."
      ? "${local.iter_1975.output}${jsondecode(format("\"\\u%04x\"", local.iter_1975.tape[local.iter_1975.tape_ptr]))}"
      : local.iter_1975.output)
    
    tape = (
      local.curr_1976.code == "+"
        ? [for i, b in local.iter_1975.tape : (i == local.iter_1975.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1976.code == "-"
        ? [for i, b in local.iter_1975.tape : (i == local.iter_1975.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1976.code == ","
        ? [for i, b in local.iter_1975.tape : (i == local.iter_1975.tape_ptr ? local.ascii_lookup[local.curr_1976.input] : b)]
        : local.iter_1975.tape)

    tape_ptr = (
      local.curr_1976.code == "<"
        ? local.iter_1975.tape_ptr == 0 ? length(local.iter_1975.tape) - 1 : local.iter_1975.tape_ptr - 1 :
      local.curr_1976.code == ">"
        ? local.iter_1975.tape_ptr == length(local.iter_1975.tape) - 1 ? 0 : local.iter_1975.tape_ptr + 1
        : local.iter_1975.tape_ptr)

    code_ptr = 1 + (
      local.curr_1976.code == "["
        ? local.iter_1975.tape[local.iter_1975.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1975.code_ptr)] : local.iter_1975.code_ptr :
      local.curr_1976.code == "]"
        ? local.iter_1975.tape[local.iter_1975.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1975.code_ptr)] : local.iter_1975.code_ptr
        : local.iter_1975.code_ptr)

    steps_taken = 1 + local.iter_1975.steps_taken
  }
}

locals {
  end_of_code_1977 = try(local.iter_1976.code_ptr >= length(var.code), true)

  curr_1977 = local.end_of_code_1977 ? null : {
    code = substr(var.code, local.iter_1976.code_ptr, 1)
    input = substr(var.code, local.iter_1976.code_ptr, 1) == "," ? substr(local.iter_1976.input, 0, 1) : null
  }

  iter_1977 = local.end_of_code_1977 ? local.iter_1976 : {
    input = (local.curr_1977.code == ","
      ? substr(local.iter_1976.input, 1, -1)
      : local.iter_1976.input)

    output = (local.curr_1977.code == "."
      ? "${local.iter_1976.output}${jsondecode(format("\"\\u%04x\"", local.iter_1976.tape[local.iter_1976.tape_ptr]))}"
      : local.iter_1976.output)
    
    tape = (
      local.curr_1977.code == "+"
        ? [for i, b in local.iter_1976.tape : (i == local.iter_1976.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1977.code == "-"
        ? [for i, b in local.iter_1976.tape : (i == local.iter_1976.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1977.code == ","
        ? [for i, b in local.iter_1976.tape : (i == local.iter_1976.tape_ptr ? local.ascii_lookup[local.curr_1977.input] : b)]
        : local.iter_1976.tape)

    tape_ptr = (
      local.curr_1977.code == "<"
        ? local.iter_1976.tape_ptr == 0 ? length(local.iter_1976.tape) - 1 : local.iter_1976.tape_ptr - 1 :
      local.curr_1977.code == ">"
        ? local.iter_1976.tape_ptr == length(local.iter_1976.tape) - 1 ? 0 : local.iter_1976.tape_ptr + 1
        : local.iter_1976.tape_ptr)

    code_ptr = 1 + (
      local.curr_1977.code == "["
        ? local.iter_1976.tape[local.iter_1976.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1976.code_ptr)] : local.iter_1976.code_ptr :
      local.curr_1977.code == "]"
        ? local.iter_1976.tape[local.iter_1976.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1976.code_ptr)] : local.iter_1976.code_ptr
        : local.iter_1976.code_ptr)

    steps_taken = 1 + local.iter_1976.steps_taken
  }
}

locals {
  end_of_code_1978 = try(local.iter_1977.code_ptr >= length(var.code), true)

  curr_1978 = local.end_of_code_1978 ? null : {
    code = substr(var.code, local.iter_1977.code_ptr, 1)
    input = substr(var.code, local.iter_1977.code_ptr, 1) == "," ? substr(local.iter_1977.input, 0, 1) : null
  }

  iter_1978 = local.end_of_code_1978 ? local.iter_1977 : {
    input = (local.curr_1978.code == ","
      ? substr(local.iter_1977.input, 1, -1)
      : local.iter_1977.input)

    output = (local.curr_1978.code == "."
      ? "${local.iter_1977.output}${jsondecode(format("\"\\u%04x\"", local.iter_1977.tape[local.iter_1977.tape_ptr]))}"
      : local.iter_1977.output)
    
    tape = (
      local.curr_1978.code == "+"
        ? [for i, b in local.iter_1977.tape : (i == local.iter_1977.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1978.code == "-"
        ? [for i, b in local.iter_1977.tape : (i == local.iter_1977.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1978.code == ","
        ? [for i, b in local.iter_1977.tape : (i == local.iter_1977.tape_ptr ? local.ascii_lookup[local.curr_1978.input] : b)]
        : local.iter_1977.tape)

    tape_ptr = (
      local.curr_1978.code == "<"
        ? local.iter_1977.tape_ptr == 0 ? length(local.iter_1977.tape) - 1 : local.iter_1977.tape_ptr - 1 :
      local.curr_1978.code == ">"
        ? local.iter_1977.tape_ptr == length(local.iter_1977.tape) - 1 ? 0 : local.iter_1977.tape_ptr + 1
        : local.iter_1977.tape_ptr)

    code_ptr = 1 + (
      local.curr_1978.code == "["
        ? local.iter_1977.tape[local.iter_1977.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1977.code_ptr)] : local.iter_1977.code_ptr :
      local.curr_1978.code == "]"
        ? local.iter_1977.tape[local.iter_1977.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1977.code_ptr)] : local.iter_1977.code_ptr
        : local.iter_1977.code_ptr)

    steps_taken = 1 + local.iter_1977.steps_taken
  }
}

locals {
  end_of_code_1979 = try(local.iter_1978.code_ptr >= length(var.code), true)

  curr_1979 = local.end_of_code_1979 ? null : {
    code = substr(var.code, local.iter_1978.code_ptr, 1)
    input = substr(var.code, local.iter_1978.code_ptr, 1) == "," ? substr(local.iter_1978.input, 0, 1) : null
  }

  iter_1979 = local.end_of_code_1979 ? local.iter_1978 : {
    input = (local.curr_1979.code == ","
      ? substr(local.iter_1978.input, 1, -1)
      : local.iter_1978.input)

    output = (local.curr_1979.code == "."
      ? "${local.iter_1978.output}${jsondecode(format("\"\\u%04x\"", local.iter_1978.tape[local.iter_1978.tape_ptr]))}"
      : local.iter_1978.output)
    
    tape = (
      local.curr_1979.code == "+"
        ? [for i, b in local.iter_1978.tape : (i == local.iter_1978.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1979.code == "-"
        ? [for i, b in local.iter_1978.tape : (i == local.iter_1978.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1979.code == ","
        ? [for i, b in local.iter_1978.tape : (i == local.iter_1978.tape_ptr ? local.ascii_lookup[local.curr_1979.input] : b)]
        : local.iter_1978.tape)

    tape_ptr = (
      local.curr_1979.code == "<"
        ? local.iter_1978.tape_ptr == 0 ? length(local.iter_1978.tape) - 1 : local.iter_1978.tape_ptr - 1 :
      local.curr_1979.code == ">"
        ? local.iter_1978.tape_ptr == length(local.iter_1978.tape) - 1 ? 0 : local.iter_1978.tape_ptr + 1
        : local.iter_1978.tape_ptr)

    code_ptr = 1 + (
      local.curr_1979.code == "["
        ? local.iter_1978.tape[local.iter_1978.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1978.code_ptr)] : local.iter_1978.code_ptr :
      local.curr_1979.code == "]"
        ? local.iter_1978.tape[local.iter_1978.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1978.code_ptr)] : local.iter_1978.code_ptr
        : local.iter_1978.code_ptr)

    steps_taken = 1 + local.iter_1978.steps_taken
  }
}

locals {
  end_of_code_1980 = try(local.iter_1979.code_ptr >= length(var.code), true)

  curr_1980 = local.end_of_code_1980 ? null : {
    code = substr(var.code, local.iter_1979.code_ptr, 1)
    input = substr(var.code, local.iter_1979.code_ptr, 1) == "," ? substr(local.iter_1979.input, 0, 1) : null
  }

  iter_1980 = local.end_of_code_1980 ? local.iter_1979 : {
    input = (local.curr_1980.code == ","
      ? substr(local.iter_1979.input, 1, -1)
      : local.iter_1979.input)

    output = (local.curr_1980.code == "."
      ? "${local.iter_1979.output}${jsondecode(format("\"\\u%04x\"", local.iter_1979.tape[local.iter_1979.tape_ptr]))}"
      : local.iter_1979.output)
    
    tape = (
      local.curr_1980.code == "+"
        ? [for i, b in local.iter_1979.tape : (i == local.iter_1979.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1980.code == "-"
        ? [for i, b in local.iter_1979.tape : (i == local.iter_1979.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1980.code == ","
        ? [for i, b in local.iter_1979.tape : (i == local.iter_1979.tape_ptr ? local.ascii_lookup[local.curr_1980.input] : b)]
        : local.iter_1979.tape)

    tape_ptr = (
      local.curr_1980.code == "<"
        ? local.iter_1979.tape_ptr == 0 ? length(local.iter_1979.tape) - 1 : local.iter_1979.tape_ptr - 1 :
      local.curr_1980.code == ">"
        ? local.iter_1979.tape_ptr == length(local.iter_1979.tape) - 1 ? 0 : local.iter_1979.tape_ptr + 1
        : local.iter_1979.tape_ptr)

    code_ptr = 1 + (
      local.curr_1980.code == "["
        ? local.iter_1979.tape[local.iter_1979.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1979.code_ptr)] : local.iter_1979.code_ptr :
      local.curr_1980.code == "]"
        ? local.iter_1979.tape[local.iter_1979.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1979.code_ptr)] : local.iter_1979.code_ptr
        : local.iter_1979.code_ptr)

    steps_taken = 1 + local.iter_1979.steps_taken
  }
}

locals {
  end_of_code_1981 = try(local.iter_1980.code_ptr >= length(var.code), true)

  curr_1981 = local.end_of_code_1981 ? null : {
    code = substr(var.code, local.iter_1980.code_ptr, 1)
    input = substr(var.code, local.iter_1980.code_ptr, 1) == "," ? substr(local.iter_1980.input, 0, 1) : null
  }

  iter_1981 = local.end_of_code_1981 ? local.iter_1980 : {
    input = (local.curr_1981.code == ","
      ? substr(local.iter_1980.input, 1, -1)
      : local.iter_1980.input)

    output = (local.curr_1981.code == "."
      ? "${local.iter_1980.output}${jsondecode(format("\"\\u%04x\"", local.iter_1980.tape[local.iter_1980.tape_ptr]))}"
      : local.iter_1980.output)
    
    tape = (
      local.curr_1981.code == "+"
        ? [for i, b in local.iter_1980.tape : (i == local.iter_1980.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1981.code == "-"
        ? [for i, b in local.iter_1980.tape : (i == local.iter_1980.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1981.code == ","
        ? [for i, b in local.iter_1980.tape : (i == local.iter_1980.tape_ptr ? local.ascii_lookup[local.curr_1981.input] : b)]
        : local.iter_1980.tape)

    tape_ptr = (
      local.curr_1981.code == "<"
        ? local.iter_1980.tape_ptr == 0 ? length(local.iter_1980.tape) - 1 : local.iter_1980.tape_ptr - 1 :
      local.curr_1981.code == ">"
        ? local.iter_1980.tape_ptr == length(local.iter_1980.tape) - 1 ? 0 : local.iter_1980.tape_ptr + 1
        : local.iter_1980.tape_ptr)

    code_ptr = 1 + (
      local.curr_1981.code == "["
        ? local.iter_1980.tape[local.iter_1980.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1980.code_ptr)] : local.iter_1980.code_ptr :
      local.curr_1981.code == "]"
        ? local.iter_1980.tape[local.iter_1980.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1980.code_ptr)] : local.iter_1980.code_ptr
        : local.iter_1980.code_ptr)

    steps_taken = 1 + local.iter_1980.steps_taken
  }
}

locals {
  end_of_code_1982 = try(local.iter_1981.code_ptr >= length(var.code), true)

  curr_1982 = local.end_of_code_1982 ? null : {
    code = substr(var.code, local.iter_1981.code_ptr, 1)
    input = substr(var.code, local.iter_1981.code_ptr, 1) == "," ? substr(local.iter_1981.input, 0, 1) : null
  }

  iter_1982 = local.end_of_code_1982 ? local.iter_1981 : {
    input = (local.curr_1982.code == ","
      ? substr(local.iter_1981.input, 1, -1)
      : local.iter_1981.input)

    output = (local.curr_1982.code == "."
      ? "${local.iter_1981.output}${jsondecode(format("\"\\u%04x\"", local.iter_1981.tape[local.iter_1981.tape_ptr]))}"
      : local.iter_1981.output)
    
    tape = (
      local.curr_1982.code == "+"
        ? [for i, b in local.iter_1981.tape : (i == local.iter_1981.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1982.code == "-"
        ? [for i, b in local.iter_1981.tape : (i == local.iter_1981.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1982.code == ","
        ? [for i, b in local.iter_1981.tape : (i == local.iter_1981.tape_ptr ? local.ascii_lookup[local.curr_1982.input] : b)]
        : local.iter_1981.tape)

    tape_ptr = (
      local.curr_1982.code == "<"
        ? local.iter_1981.tape_ptr == 0 ? length(local.iter_1981.tape) - 1 : local.iter_1981.tape_ptr - 1 :
      local.curr_1982.code == ">"
        ? local.iter_1981.tape_ptr == length(local.iter_1981.tape) - 1 ? 0 : local.iter_1981.tape_ptr + 1
        : local.iter_1981.tape_ptr)

    code_ptr = 1 + (
      local.curr_1982.code == "["
        ? local.iter_1981.tape[local.iter_1981.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1981.code_ptr)] : local.iter_1981.code_ptr :
      local.curr_1982.code == "]"
        ? local.iter_1981.tape[local.iter_1981.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1981.code_ptr)] : local.iter_1981.code_ptr
        : local.iter_1981.code_ptr)

    steps_taken = 1 + local.iter_1981.steps_taken
  }
}

locals {
  end_of_code_1983 = try(local.iter_1982.code_ptr >= length(var.code), true)

  curr_1983 = local.end_of_code_1983 ? null : {
    code = substr(var.code, local.iter_1982.code_ptr, 1)
    input = substr(var.code, local.iter_1982.code_ptr, 1) == "," ? substr(local.iter_1982.input, 0, 1) : null
  }

  iter_1983 = local.end_of_code_1983 ? local.iter_1982 : {
    input = (local.curr_1983.code == ","
      ? substr(local.iter_1982.input, 1, -1)
      : local.iter_1982.input)

    output = (local.curr_1983.code == "."
      ? "${local.iter_1982.output}${jsondecode(format("\"\\u%04x\"", local.iter_1982.tape[local.iter_1982.tape_ptr]))}"
      : local.iter_1982.output)
    
    tape = (
      local.curr_1983.code == "+"
        ? [for i, b in local.iter_1982.tape : (i == local.iter_1982.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1983.code == "-"
        ? [for i, b in local.iter_1982.tape : (i == local.iter_1982.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1983.code == ","
        ? [for i, b in local.iter_1982.tape : (i == local.iter_1982.tape_ptr ? local.ascii_lookup[local.curr_1983.input] : b)]
        : local.iter_1982.tape)

    tape_ptr = (
      local.curr_1983.code == "<"
        ? local.iter_1982.tape_ptr == 0 ? length(local.iter_1982.tape) - 1 : local.iter_1982.tape_ptr - 1 :
      local.curr_1983.code == ">"
        ? local.iter_1982.tape_ptr == length(local.iter_1982.tape) - 1 ? 0 : local.iter_1982.tape_ptr + 1
        : local.iter_1982.tape_ptr)

    code_ptr = 1 + (
      local.curr_1983.code == "["
        ? local.iter_1982.tape[local.iter_1982.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1982.code_ptr)] : local.iter_1982.code_ptr :
      local.curr_1983.code == "]"
        ? local.iter_1982.tape[local.iter_1982.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1982.code_ptr)] : local.iter_1982.code_ptr
        : local.iter_1982.code_ptr)

    steps_taken = 1 + local.iter_1982.steps_taken
  }
}

locals {
  end_of_code_1984 = try(local.iter_1983.code_ptr >= length(var.code), true)

  curr_1984 = local.end_of_code_1984 ? null : {
    code = substr(var.code, local.iter_1983.code_ptr, 1)
    input = substr(var.code, local.iter_1983.code_ptr, 1) == "," ? substr(local.iter_1983.input, 0, 1) : null
  }

  iter_1984 = local.end_of_code_1984 ? local.iter_1983 : {
    input = (local.curr_1984.code == ","
      ? substr(local.iter_1983.input, 1, -1)
      : local.iter_1983.input)

    output = (local.curr_1984.code == "."
      ? "${local.iter_1983.output}${jsondecode(format("\"\\u%04x\"", local.iter_1983.tape[local.iter_1983.tape_ptr]))}"
      : local.iter_1983.output)
    
    tape = (
      local.curr_1984.code == "+"
        ? [for i, b in local.iter_1983.tape : (i == local.iter_1983.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1984.code == "-"
        ? [for i, b in local.iter_1983.tape : (i == local.iter_1983.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1984.code == ","
        ? [for i, b in local.iter_1983.tape : (i == local.iter_1983.tape_ptr ? local.ascii_lookup[local.curr_1984.input] : b)]
        : local.iter_1983.tape)

    tape_ptr = (
      local.curr_1984.code == "<"
        ? local.iter_1983.tape_ptr == 0 ? length(local.iter_1983.tape) - 1 : local.iter_1983.tape_ptr - 1 :
      local.curr_1984.code == ">"
        ? local.iter_1983.tape_ptr == length(local.iter_1983.tape) - 1 ? 0 : local.iter_1983.tape_ptr + 1
        : local.iter_1983.tape_ptr)

    code_ptr = 1 + (
      local.curr_1984.code == "["
        ? local.iter_1983.tape[local.iter_1983.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1983.code_ptr)] : local.iter_1983.code_ptr :
      local.curr_1984.code == "]"
        ? local.iter_1983.tape[local.iter_1983.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1983.code_ptr)] : local.iter_1983.code_ptr
        : local.iter_1983.code_ptr)

    steps_taken = 1 + local.iter_1983.steps_taken
  }
}

locals {
  end_of_code_1985 = try(local.iter_1984.code_ptr >= length(var.code), true)

  curr_1985 = local.end_of_code_1985 ? null : {
    code = substr(var.code, local.iter_1984.code_ptr, 1)
    input = substr(var.code, local.iter_1984.code_ptr, 1) == "," ? substr(local.iter_1984.input, 0, 1) : null
  }

  iter_1985 = local.end_of_code_1985 ? local.iter_1984 : {
    input = (local.curr_1985.code == ","
      ? substr(local.iter_1984.input, 1, -1)
      : local.iter_1984.input)

    output = (local.curr_1985.code == "."
      ? "${local.iter_1984.output}${jsondecode(format("\"\\u%04x\"", local.iter_1984.tape[local.iter_1984.tape_ptr]))}"
      : local.iter_1984.output)
    
    tape = (
      local.curr_1985.code == "+"
        ? [for i, b in local.iter_1984.tape : (i == local.iter_1984.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1985.code == "-"
        ? [for i, b in local.iter_1984.tape : (i == local.iter_1984.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1985.code == ","
        ? [for i, b in local.iter_1984.tape : (i == local.iter_1984.tape_ptr ? local.ascii_lookup[local.curr_1985.input] : b)]
        : local.iter_1984.tape)

    tape_ptr = (
      local.curr_1985.code == "<"
        ? local.iter_1984.tape_ptr == 0 ? length(local.iter_1984.tape) - 1 : local.iter_1984.tape_ptr - 1 :
      local.curr_1985.code == ">"
        ? local.iter_1984.tape_ptr == length(local.iter_1984.tape) - 1 ? 0 : local.iter_1984.tape_ptr + 1
        : local.iter_1984.tape_ptr)

    code_ptr = 1 + (
      local.curr_1985.code == "["
        ? local.iter_1984.tape[local.iter_1984.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1984.code_ptr)] : local.iter_1984.code_ptr :
      local.curr_1985.code == "]"
        ? local.iter_1984.tape[local.iter_1984.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1984.code_ptr)] : local.iter_1984.code_ptr
        : local.iter_1984.code_ptr)

    steps_taken = 1 + local.iter_1984.steps_taken
  }
}

locals {
  end_of_code_1986 = try(local.iter_1985.code_ptr >= length(var.code), true)

  curr_1986 = local.end_of_code_1986 ? null : {
    code = substr(var.code, local.iter_1985.code_ptr, 1)
    input = substr(var.code, local.iter_1985.code_ptr, 1) == "," ? substr(local.iter_1985.input, 0, 1) : null
  }

  iter_1986 = local.end_of_code_1986 ? local.iter_1985 : {
    input = (local.curr_1986.code == ","
      ? substr(local.iter_1985.input, 1, -1)
      : local.iter_1985.input)

    output = (local.curr_1986.code == "."
      ? "${local.iter_1985.output}${jsondecode(format("\"\\u%04x\"", local.iter_1985.tape[local.iter_1985.tape_ptr]))}"
      : local.iter_1985.output)
    
    tape = (
      local.curr_1986.code == "+"
        ? [for i, b in local.iter_1985.tape : (i == local.iter_1985.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1986.code == "-"
        ? [for i, b in local.iter_1985.tape : (i == local.iter_1985.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1986.code == ","
        ? [for i, b in local.iter_1985.tape : (i == local.iter_1985.tape_ptr ? local.ascii_lookup[local.curr_1986.input] : b)]
        : local.iter_1985.tape)

    tape_ptr = (
      local.curr_1986.code == "<"
        ? local.iter_1985.tape_ptr == 0 ? length(local.iter_1985.tape) - 1 : local.iter_1985.tape_ptr - 1 :
      local.curr_1986.code == ">"
        ? local.iter_1985.tape_ptr == length(local.iter_1985.tape) - 1 ? 0 : local.iter_1985.tape_ptr + 1
        : local.iter_1985.tape_ptr)

    code_ptr = 1 + (
      local.curr_1986.code == "["
        ? local.iter_1985.tape[local.iter_1985.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1985.code_ptr)] : local.iter_1985.code_ptr :
      local.curr_1986.code == "]"
        ? local.iter_1985.tape[local.iter_1985.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1985.code_ptr)] : local.iter_1985.code_ptr
        : local.iter_1985.code_ptr)

    steps_taken = 1 + local.iter_1985.steps_taken
  }
}

locals {
  end_of_code_1987 = try(local.iter_1986.code_ptr >= length(var.code), true)

  curr_1987 = local.end_of_code_1987 ? null : {
    code = substr(var.code, local.iter_1986.code_ptr, 1)
    input = substr(var.code, local.iter_1986.code_ptr, 1) == "," ? substr(local.iter_1986.input, 0, 1) : null
  }

  iter_1987 = local.end_of_code_1987 ? local.iter_1986 : {
    input = (local.curr_1987.code == ","
      ? substr(local.iter_1986.input, 1, -1)
      : local.iter_1986.input)

    output = (local.curr_1987.code == "."
      ? "${local.iter_1986.output}${jsondecode(format("\"\\u%04x\"", local.iter_1986.tape[local.iter_1986.tape_ptr]))}"
      : local.iter_1986.output)
    
    tape = (
      local.curr_1987.code == "+"
        ? [for i, b in local.iter_1986.tape : (i == local.iter_1986.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1987.code == "-"
        ? [for i, b in local.iter_1986.tape : (i == local.iter_1986.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1987.code == ","
        ? [for i, b in local.iter_1986.tape : (i == local.iter_1986.tape_ptr ? local.ascii_lookup[local.curr_1987.input] : b)]
        : local.iter_1986.tape)

    tape_ptr = (
      local.curr_1987.code == "<"
        ? local.iter_1986.tape_ptr == 0 ? length(local.iter_1986.tape) - 1 : local.iter_1986.tape_ptr - 1 :
      local.curr_1987.code == ">"
        ? local.iter_1986.tape_ptr == length(local.iter_1986.tape) - 1 ? 0 : local.iter_1986.tape_ptr + 1
        : local.iter_1986.tape_ptr)

    code_ptr = 1 + (
      local.curr_1987.code == "["
        ? local.iter_1986.tape[local.iter_1986.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1986.code_ptr)] : local.iter_1986.code_ptr :
      local.curr_1987.code == "]"
        ? local.iter_1986.tape[local.iter_1986.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1986.code_ptr)] : local.iter_1986.code_ptr
        : local.iter_1986.code_ptr)

    steps_taken = 1 + local.iter_1986.steps_taken
  }
}

locals {
  end_of_code_1988 = try(local.iter_1987.code_ptr >= length(var.code), true)

  curr_1988 = local.end_of_code_1988 ? null : {
    code = substr(var.code, local.iter_1987.code_ptr, 1)
    input = substr(var.code, local.iter_1987.code_ptr, 1) == "," ? substr(local.iter_1987.input, 0, 1) : null
  }

  iter_1988 = local.end_of_code_1988 ? local.iter_1987 : {
    input = (local.curr_1988.code == ","
      ? substr(local.iter_1987.input, 1, -1)
      : local.iter_1987.input)

    output = (local.curr_1988.code == "."
      ? "${local.iter_1987.output}${jsondecode(format("\"\\u%04x\"", local.iter_1987.tape[local.iter_1987.tape_ptr]))}"
      : local.iter_1987.output)
    
    tape = (
      local.curr_1988.code == "+"
        ? [for i, b in local.iter_1987.tape : (i == local.iter_1987.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1988.code == "-"
        ? [for i, b in local.iter_1987.tape : (i == local.iter_1987.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1988.code == ","
        ? [for i, b in local.iter_1987.tape : (i == local.iter_1987.tape_ptr ? local.ascii_lookup[local.curr_1988.input] : b)]
        : local.iter_1987.tape)

    tape_ptr = (
      local.curr_1988.code == "<"
        ? local.iter_1987.tape_ptr == 0 ? length(local.iter_1987.tape) - 1 : local.iter_1987.tape_ptr - 1 :
      local.curr_1988.code == ">"
        ? local.iter_1987.tape_ptr == length(local.iter_1987.tape) - 1 ? 0 : local.iter_1987.tape_ptr + 1
        : local.iter_1987.tape_ptr)

    code_ptr = 1 + (
      local.curr_1988.code == "["
        ? local.iter_1987.tape[local.iter_1987.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1987.code_ptr)] : local.iter_1987.code_ptr :
      local.curr_1988.code == "]"
        ? local.iter_1987.tape[local.iter_1987.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1987.code_ptr)] : local.iter_1987.code_ptr
        : local.iter_1987.code_ptr)

    steps_taken = 1 + local.iter_1987.steps_taken
  }
}

locals {
  end_of_code_1989 = try(local.iter_1988.code_ptr >= length(var.code), true)

  curr_1989 = local.end_of_code_1989 ? null : {
    code = substr(var.code, local.iter_1988.code_ptr, 1)
    input = substr(var.code, local.iter_1988.code_ptr, 1) == "," ? substr(local.iter_1988.input, 0, 1) : null
  }

  iter_1989 = local.end_of_code_1989 ? local.iter_1988 : {
    input = (local.curr_1989.code == ","
      ? substr(local.iter_1988.input, 1, -1)
      : local.iter_1988.input)

    output = (local.curr_1989.code == "."
      ? "${local.iter_1988.output}${jsondecode(format("\"\\u%04x\"", local.iter_1988.tape[local.iter_1988.tape_ptr]))}"
      : local.iter_1988.output)
    
    tape = (
      local.curr_1989.code == "+"
        ? [for i, b in local.iter_1988.tape : (i == local.iter_1988.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1989.code == "-"
        ? [for i, b in local.iter_1988.tape : (i == local.iter_1988.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1989.code == ","
        ? [for i, b in local.iter_1988.tape : (i == local.iter_1988.tape_ptr ? local.ascii_lookup[local.curr_1989.input] : b)]
        : local.iter_1988.tape)

    tape_ptr = (
      local.curr_1989.code == "<"
        ? local.iter_1988.tape_ptr == 0 ? length(local.iter_1988.tape) - 1 : local.iter_1988.tape_ptr - 1 :
      local.curr_1989.code == ">"
        ? local.iter_1988.tape_ptr == length(local.iter_1988.tape) - 1 ? 0 : local.iter_1988.tape_ptr + 1
        : local.iter_1988.tape_ptr)

    code_ptr = 1 + (
      local.curr_1989.code == "["
        ? local.iter_1988.tape[local.iter_1988.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1988.code_ptr)] : local.iter_1988.code_ptr :
      local.curr_1989.code == "]"
        ? local.iter_1988.tape[local.iter_1988.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1988.code_ptr)] : local.iter_1988.code_ptr
        : local.iter_1988.code_ptr)

    steps_taken = 1 + local.iter_1988.steps_taken
  }
}

locals {
  end_of_code_1990 = try(local.iter_1989.code_ptr >= length(var.code), true)

  curr_1990 = local.end_of_code_1990 ? null : {
    code = substr(var.code, local.iter_1989.code_ptr, 1)
    input = substr(var.code, local.iter_1989.code_ptr, 1) == "," ? substr(local.iter_1989.input, 0, 1) : null
  }

  iter_1990 = local.end_of_code_1990 ? local.iter_1989 : {
    input = (local.curr_1990.code == ","
      ? substr(local.iter_1989.input, 1, -1)
      : local.iter_1989.input)

    output = (local.curr_1990.code == "."
      ? "${local.iter_1989.output}${jsondecode(format("\"\\u%04x\"", local.iter_1989.tape[local.iter_1989.tape_ptr]))}"
      : local.iter_1989.output)
    
    tape = (
      local.curr_1990.code == "+"
        ? [for i, b in local.iter_1989.tape : (i == local.iter_1989.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1990.code == "-"
        ? [for i, b in local.iter_1989.tape : (i == local.iter_1989.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1990.code == ","
        ? [for i, b in local.iter_1989.tape : (i == local.iter_1989.tape_ptr ? local.ascii_lookup[local.curr_1990.input] : b)]
        : local.iter_1989.tape)

    tape_ptr = (
      local.curr_1990.code == "<"
        ? local.iter_1989.tape_ptr == 0 ? length(local.iter_1989.tape) - 1 : local.iter_1989.tape_ptr - 1 :
      local.curr_1990.code == ">"
        ? local.iter_1989.tape_ptr == length(local.iter_1989.tape) - 1 ? 0 : local.iter_1989.tape_ptr + 1
        : local.iter_1989.tape_ptr)

    code_ptr = 1 + (
      local.curr_1990.code == "["
        ? local.iter_1989.tape[local.iter_1989.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1989.code_ptr)] : local.iter_1989.code_ptr :
      local.curr_1990.code == "]"
        ? local.iter_1989.tape[local.iter_1989.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1989.code_ptr)] : local.iter_1989.code_ptr
        : local.iter_1989.code_ptr)

    steps_taken = 1 + local.iter_1989.steps_taken
  }
}

locals {
  end_of_code_1991 = try(local.iter_1990.code_ptr >= length(var.code), true)

  curr_1991 = local.end_of_code_1991 ? null : {
    code = substr(var.code, local.iter_1990.code_ptr, 1)
    input = substr(var.code, local.iter_1990.code_ptr, 1) == "," ? substr(local.iter_1990.input, 0, 1) : null
  }

  iter_1991 = local.end_of_code_1991 ? local.iter_1990 : {
    input = (local.curr_1991.code == ","
      ? substr(local.iter_1990.input, 1, -1)
      : local.iter_1990.input)

    output = (local.curr_1991.code == "."
      ? "${local.iter_1990.output}${jsondecode(format("\"\\u%04x\"", local.iter_1990.tape[local.iter_1990.tape_ptr]))}"
      : local.iter_1990.output)
    
    tape = (
      local.curr_1991.code == "+"
        ? [for i, b in local.iter_1990.tape : (i == local.iter_1990.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1991.code == "-"
        ? [for i, b in local.iter_1990.tape : (i == local.iter_1990.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1991.code == ","
        ? [for i, b in local.iter_1990.tape : (i == local.iter_1990.tape_ptr ? local.ascii_lookup[local.curr_1991.input] : b)]
        : local.iter_1990.tape)

    tape_ptr = (
      local.curr_1991.code == "<"
        ? local.iter_1990.tape_ptr == 0 ? length(local.iter_1990.tape) - 1 : local.iter_1990.tape_ptr - 1 :
      local.curr_1991.code == ">"
        ? local.iter_1990.tape_ptr == length(local.iter_1990.tape) - 1 ? 0 : local.iter_1990.tape_ptr + 1
        : local.iter_1990.tape_ptr)

    code_ptr = 1 + (
      local.curr_1991.code == "["
        ? local.iter_1990.tape[local.iter_1990.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1990.code_ptr)] : local.iter_1990.code_ptr :
      local.curr_1991.code == "]"
        ? local.iter_1990.tape[local.iter_1990.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1990.code_ptr)] : local.iter_1990.code_ptr
        : local.iter_1990.code_ptr)

    steps_taken = 1 + local.iter_1990.steps_taken
  }
}

locals {
  end_of_code_1992 = try(local.iter_1991.code_ptr >= length(var.code), true)

  curr_1992 = local.end_of_code_1992 ? null : {
    code = substr(var.code, local.iter_1991.code_ptr, 1)
    input = substr(var.code, local.iter_1991.code_ptr, 1) == "," ? substr(local.iter_1991.input, 0, 1) : null
  }

  iter_1992 = local.end_of_code_1992 ? local.iter_1991 : {
    input = (local.curr_1992.code == ","
      ? substr(local.iter_1991.input, 1, -1)
      : local.iter_1991.input)

    output = (local.curr_1992.code == "."
      ? "${local.iter_1991.output}${jsondecode(format("\"\\u%04x\"", local.iter_1991.tape[local.iter_1991.tape_ptr]))}"
      : local.iter_1991.output)
    
    tape = (
      local.curr_1992.code == "+"
        ? [for i, b in local.iter_1991.tape : (i == local.iter_1991.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1992.code == "-"
        ? [for i, b in local.iter_1991.tape : (i == local.iter_1991.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1992.code == ","
        ? [for i, b in local.iter_1991.tape : (i == local.iter_1991.tape_ptr ? local.ascii_lookup[local.curr_1992.input] : b)]
        : local.iter_1991.tape)

    tape_ptr = (
      local.curr_1992.code == "<"
        ? local.iter_1991.tape_ptr == 0 ? length(local.iter_1991.tape) - 1 : local.iter_1991.tape_ptr - 1 :
      local.curr_1992.code == ">"
        ? local.iter_1991.tape_ptr == length(local.iter_1991.tape) - 1 ? 0 : local.iter_1991.tape_ptr + 1
        : local.iter_1991.tape_ptr)

    code_ptr = 1 + (
      local.curr_1992.code == "["
        ? local.iter_1991.tape[local.iter_1991.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1991.code_ptr)] : local.iter_1991.code_ptr :
      local.curr_1992.code == "]"
        ? local.iter_1991.tape[local.iter_1991.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1991.code_ptr)] : local.iter_1991.code_ptr
        : local.iter_1991.code_ptr)

    steps_taken = 1 + local.iter_1991.steps_taken
  }
}

locals {
  end_of_code_1993 = try(local.iter_1992.code_ptr >= length(var.code), true)

  curr_1993 = local.end_of_code_1993 ? null : {
    code = substr(var.code, local.iter_1992.code_ptr, 1)
    input = substr(var.code, local.iter_1992.code_ptr, 1) == "," ? substr(local.iter_1992.input, 0, 1) : null
  }

  iter_1993 = local.end_of_code_1993 ? local.iter_1992 : {
    input = (local.curr_1993.code == ","
      ? substr(local.iter_1992.input, 1, -1)
      : local.iter_1992.input)

    output = (local.curr_1993.code == "."
      ? "${local.iter_1992.output}${jsondecode(format("\"\\u%04x\"", local.iter_1992.tape[local.iter_1992.tape_ptr]))}"
      : local.iter_1992.output)
    
    tape = (
      local.curr_1993.code == "+"
        ? [for i, b in local.iter_1992.tape : (i == local.iter_1992.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1993.code == "-"
        ? [for i, b in local.iter_1992.tape : (i == local.iter_1992.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1993.code == ","
        ? [for i, b in local.iter_1992.tape : (i == local.iter_1992.tape_ptr ? local.ascii_lookup[local.curr_1993.input] : b)]
        : local.iter_1992.tape)

    tape_ptr = (
      local.curr_1993.code == "<"
        ? local.iter_1992.tape_ptr == 0 ? length(local.iter_1992.tape) - 1 : local.iter_1992.tape_ptr - 1 :
      local.curr_1993.code == ">"
        ? local.iter_1992.tape_ptr == length(local.iter_1992.tape) - 1 ? 0 : local.iter_1992.tape_ptr + 1
        : local.iter_1992.tape_ptr)

    code_ptr = 1 + (
      local.curr_1993.code == "["
        ? local.iter_1992.tape[local.iter_1992.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1992.code_ptr)] : local.iter_1992.code_ptr :
      local.curr_1993.code == "]"
        ? local.iter_1992.tape[local.iter_1992.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1992.code_ptr)] : local.iter_1992.code_ptr
        : local.iter_1992.code_ptr)

    steps_taken = 1 + local.iter_1992.steps_taken
  }
}

locals {
  end_of_code_1994 = try(local.iter_1993.code_ptr >= length(var.code), true)

  curr_1994 = local.end_of_code_1994 ? null : {
    code = substr(var.code, local.iter_1993.code_ptr, 1)
    input = substr(var.code, local.iter_1993.code_ptr, 1) == "," ? substr(local.iter_1993.input, 0, 1) : null
  }

  iter_1994 = local.end_of_code_1994 ? local.iter_1993 : {
    input = (local.curr_1994.code == ","
      ? substr(local.iter_1993.input, 1, -1)
      : local.iter_1993.input)

    output = (local.curr_1994.code == "."
      ? "${local.iter_1993.output}${jsondecode(format("\"\\u%04x\"", local.iter_1993.tape[local.iter_1993.tape_ptr]))}"
      : local.iter_1993.output)
    
    tape = (
      local.curr_1994.code == "+"
        ? [for i, b in local.iter_1993.tape : (i == local.iter_1993.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1994.code == "-"
        ? [for i, b in local.iter_1993.tape : (i == local.iter_1993.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1994.code == ","
        ? [for i, b in local.iter_1993.tape : (i == local.iter_1993.tape_ptr ? local.ascii_lookup[local.curr_1994.input] : b)]
        : local.iter_1993.tape)

    tape_ptr = (
      local.curr_1994.code == "<"
        ? local.iter_1993.tape_ptr == 0 ? length(local.iter_1993.tape) - 1 : local.iter_1993.tape_ptr - 1 :
      local.curr_1994.code == ">"
        ? local.iter_1993.tape_ptr == length(local.iter_1993.tape) - 1 ? 0 : local.iter_1993.tape_ptr + 1
        : local.iter_1993.tape_ptr)

    code_ptr = 1 + (
      local.curr_1994.code == "["
        ? local.iter_1993.tape[local.iter_1993.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1993.code_ptr)] : local.iter_1993.code_ptr :
      local.curr_1994.code == "]"
        ? local.iter_1993.tape[local.iter_1993.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1993.code_ptr)] : local.iter_1993.code_ptr
        : local.iter_1993.code_ptr)

    steps_taken = 1 + local.iter_1993.steps_taken
  }
}

locals {
  end_of_code_1995 = try(local.iter_1994.code_ptr >= length(var.code), true)

  curr_1995 = local.end_of_code_1995 ? null : {
    code = substr(var.code, local.iter_1994.code_ptr, 1)
    input = substr(var.code, local.iter_1994.code_ptr, 1) == "," ? substr(local.iter_1994.input, 0, 1) : null
  }

  iter_1995 = local.end_of_code_1995 ? local.iter_1994 : {
    input = (local.curr_1995.code == ","
      ? substr(local.iter_1994.input, 1, -1)
      : local.iter_1994.input)

    output = (local.curr_1995.code == "."
      ? "${local.iter_1994.output}${jsondecode(format("\"\\u%04x\"", local.iter_1994.tape[local.iter_1994.tape_ptr]))}"
      : local.iter_1994.output)
    
    tape = (
      local.curr_1995.code == "+"
        ? [for i, b in local.iter_1994.tape : (i == local.iter_1994.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1995.code == "-"
        ? [for i, b in local.iter_1994.tape : (i == local.iter_1994.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1995.code == ","
        ? [for i, b in local.iter_1994.tape : (i == local.iter_1994.tape_ptr ? local.ascii_lookup[local.curr_1995.input] : b)]
        : local.iter_1994.tape)

    tape_ptr = (
      local.curr_1995.code == "<"
        ? local.iter_1994.tape_ptr == 0 ? length(local.iter_1994.tape) - 1 : local.iter_1994.tape_ptr - 1 :
      local.curr_1995.code == ">"
        ? local.iter_1994.tape_ptr == length(local.iter_1994.tape) - 1 ? 0 : local.iter_1994.tape_ptr + 1
        : local.iter_1994.tape_ptr)

    code_ptr = 1 + (
      local.curr_1995.code == "["
        ? local.iter_1994.tape[local.iter_1994.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1994.code_ptr)] : local.iter_1994.code_ptr :
      local.curr_1995.code == "]"
        ? local.iter_1994.tape[local.iter_1994.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1994.code_ptr)] : local.iter_1994.code_ptr
        : local.iter_1994.code_ptr)

    steps_taken = 1 + local.iter_1994.steps_taken
  }
}

locals {
  end_of_code_1996 = try(local.iter_1995.code_ptr >= length(var.code), true)

  curr_1996 = local.end_of_code_1996 ? null : {
    code = substr(var.code, local.iter_1995.code_ptr, 1)
    input = substr(var.code, local.iter_1995.code_ptr, 1) == "," ? substr(local.iter_1995.input, 0, 1) : null
  }

  iter_1996 = local.end_of_code_1996 ? local.iter_1995 : {
    input = (local.curr_1996.code == ","
      ? substr(local.iter_1995.input, 1, -1)
      : local.iter_1995.input)

    output = (local.curr_1996.code == "."
      ? "${local.iter_1995.output}${jsondecode(format("\"\\u%04x\"", local.iter_1995.tape[local.iter_1995.tape_ptr]))}"
      : local.iter_1995.output)
    
    tape = (
      local.curr_1996.code == "+"
        ? [for i, b in local.iter_1995.tape : (i == local.iter_1995.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1996.code == "-"
        ? [for i, b in local.iter_1995.tape : (i == local.iter_1995.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1996.code == ","
        ? [for i, b in local.iter_1995.tape : (i == local.iter_1995.tape_ptr ? local.ascii_lookup[local.curr_1996.input] : b)]
        : local.iter_1995.tape)

    tape_ptr = (
      local.curr_1996.code == "<"
        ? local.iter_1995.tape_ptr == 0 ? length(local.iter_1995.tape) - 1 : local.iter_1995.tape_ptr - 1 :
      local.curr_1996.code == ">"
        ? local.iter_1995.tape_ptr == length(local.iter_1995.tape) - 1 ? 0 : local.iter_1995.tape_ptr + 1
        : local.iter_1995.tape_ptr)

    code_ptr = 1 + (
      local.curr_1996.code == "["
        ? local.iter_1995.tape[local.iter_1995.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1995.code_ptr)] : local.iter_1995.code_ptr :
      local.curr_1996.code == "]"
        ? local.iter_1995.tape[local.iter_1995.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1995.code_ptr)] : local.iter_1995.code_ptr
        : local.iter_1995.code_ptr)

    steps_taken = 1 + local.iter_1995.steps_taken
  }
}

locals {
  end_of_code_1997 = try(local.iter_1996.code_ptr >= length(var.code), true)

  curr_1997 = local.end_of_code_1997 ? null : {
    code = substr(var.code, local.iter_1996.code_ptr, 1)
    input = substr(var.code, local.iter_1996.code_ptr, 1) == "," ? substr(local.iter_1996.input, 0, 1) : null
  }

  iter_1997 = local.end_of_code_1997 ? local.iter_1996 : {
    input = (local.curr_1997.code == ","
      ? substr(local.iter_1996.input, 1, -1)
      : local.iter_1996.input)

    output = (local.curr_1997.code == "."
      ? "${local.iter_1996.output}${jsondecode(format("\"\\u%04x\"", local.iter_1996.tape[local.iter_1996.tape_ptr]))}"
      : local.iter_1996.output)
    
    tape = (
      local.curr_1997.code == "+"
        ? [for i, b in local.iter_1996.tape : (i == local.iter_1996.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1997.code == "-"
        ? [for i, b in local.iter_1996.tape : (i == local.iter_1996.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1997.code == ","
        ? [for i, b in local.iter_1996.tape : (i == local.iter_1996.tape_ptr ? local.ascii_lookup[local.curr_1997.input] : b)]
        : local.iter_1996.tape)

    tape_ptr = (
      local.curr_1997.code == "<"
        ? local.iter_1996.tape_ptr == 0 ? length(local.iter_1996.tape) - 1 : local.iter_1996.tape_ptr - 1 :
      local.curr_1997.code == ">"
        ? local.iter_1996.tape_ptr == length(local.iter_1996.tape) - 1 ? 0 : local.iter_1996.tape_ptr + 1
        : local.iter_1996.tape_ptr)

    code_ptr = 1 + (
      local.curr_1997.code == "["
        ? local.iter_1996.tape[local.iter_1996.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1996.code_ptr)] : local.iter_1996.code_ptr :
      local.curr_1997.code == "]"
        ? local.iter_1996.tape[local.iter_1996.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1996.code_ptr)] : local.iter_1996.code_ptr
        : local.iter_1996.code_ptr)

    steps_taken = 1 + local.iter_1996.steps_taken
  }
}

locals {
  end_of_code_1998 = try(local.iter_1997.code_ptr >= length(var.code), true)

  curr_1998 = local.end_of_code_1998 ? null : {
    code = substr(var.code, local.iter_1997.code_ptr, 1)
    input = substr(var.code, local.iter_1997.code_ptr, 1) == "," ? substr(local.iter_1997.input, 0, 1) : null
  }

  iter_1998 = local.end_of_code_1998 ? local.iter_1997 : {
    input = (local.curr_1998.code == ","
      ? substr(local.iter_1997.input, 1, -1)
      : local.iter_1997.input)

    output = (local.curr_1998.code == "."
      ? "${local.iter_1997.output}${jsondecode(format("\"\\u%04x\"", local.iter_1997.tape[local.iter_1997.tape_ptr]))}"
      : local.iter_1997.output)
    
    tape = (
      local.curr_1998.code == "+"
        ? [for i, b in local.iter_1997.tape : (i == local.iter_1997.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1998.code == "-"
        ? [for i, b in local.iter_1997.tape : (i == local.iter_1997.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1998.code == ","
        ? [for i, b in local.iter_1997.tape : (i == local.iter_1997.tape_ptr ? local.ascii_lookup[local.curr_1998.input] : b)]
        : local.iter_1997.tape)

    tape_ptr = (
      local.curr_1998.code == "<"
        ? local.iter_1997.tape_ptr == 0 ? length(local.iter_1997.tape) - 1 : local.iter_1997.tape_ptr - 1 :
      local.curr_1998.code == ">"
        ? local.iter_1997.tape_ptr == length(local.iter_1997.tape) - 1 ? 0 : local.iter_1997.tape_ptr + 1
        : local.iter_1997.tape_ptr)

    code_ptr = 1 + (
      local.curr_1998.code == "["
        ? local.iter_1997.tape[local.iter_1997.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1997.code_ptr)] : local.iter_1997.code_ptr :
      local.curr_1998.code == "]"
        ? local.iter_1997.tape[local.iter_1997.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1997.code_ptr)] : local.iter_1997.code_ptr
        : local.iter_1997.code_ptr)

    steps_taken = 1 + local.iter_1997.steps_taken
  }
}

locals {
  end_of_code_1999 = try(local.iter_1998.code_ptr >= length(var.code), true)

  curr_1999 = local.end_of_code_1999 ? null : {
    code = substr(var.code, local.iter_1998.code_ptr, 1)
    input = substr(var.code, local.iter_1998.code_ptr, 1) == "," ? substr(local.iter_1998.input, 0, 1) : null
  }

  iter_1999 = local.end_of_code_1999 ? local.iter_1998 : {
    input = (local.curr_1999.code == ","
      ? substr(local.iter_1998.input, 1, -1)
      : local.iter_1998.input)

    output = (local.curr_1999.code == "."
      ? "${local.iter_1998.output}${jsondecode(format("\"\\u%04x\"", local.iter_1998.tape[local.iter_1998.tape_ptr]))}"
      : local.iter_1998.output)
    
    tape = (
      local.curr_1999.code == "+"
        ? [for i, b in local.iter_1998.tape : (i == local.iter_1998.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_1999.code == "-"
        ? [for i, b in local.iter_1998.tape : (i == local.iter_1998.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_1999.code == ","
        ? [for i, b in local.iter_1998.tape : (i == local.iter_1998.tape_ptr ? local.ascii_lookup[local.curr_1999.input] : b)]
        : local.iter_1998.tape)

    tape_ptr = (
      local.curr_1999.code == "<"
        ? local.iter_1998.tape_ptr == 0 ? length(local.iter_1998.tape) - 1 : local.iter_1998.tape_ptr - 1 :
      local.curr_1999.code == ">"
        ? local.iter_1998.tape_ptr == length(local.iter_1998.tape) - 1 ? 0 : local.iter_1998.tape_ptr + 1
        : local.iter_1998.tape_ptr)

    code_ptr = 1 + (
      local.curr_1999.code == "["
        ? local.iter_1998.tape[local.iter_1998.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1998.code_ptr)] : local.iter_1998.code_ptr :
      local.curr_1999.code == "]"
        ? local.iter_1998.tape[local.iter_1998.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1998.code_ptr)] : local.iter_1998.code_ptr
        : local.iter_1998.code_ptr)

    steps_taken = 1 + local.iter_1998.steps_taken
  }
}

locals {
  end_of_code_2000 = try(local.iter_1999.code_ptr >= length(var.code), true)

  curr_2000 = local.end_of_code_2000 ? null : {
    code = substr(var.code, local.iter_1999.code_ptr, 1)
    input = substr(var.code, local.iter_1999.code_ptr, 1) == "," ? substr(local.iter_1999.input, 0, 1) : null
  }

  iter_2000 = local.end_of_code_2000 ? local.iter_1999 : {
    input = (local.curr_2000.code == ","
      ? substr(local.iter_1999.input, 1, -1)
      : local.iter_1999.input)

    output = (local.curr_2000.code == "."
      ? "${local.iter_1999.output}${jsondecode(format("\"\\u%04x\"", local.iter_1999.tape[local.iter_1999.tape_ptr]))}"
      : local.iter_1999.output)
    
    tape = (
      local.curr_2000.code == "+"
        ? [for i, b in local.iter_1999.tape : (i == local.iter_1999.tape_ptr ? (b + 1) % 256 : b)] :
      local.curr_2000.code == "-"
        ? [for i, b in local.iter_1999.tape : (i == local.iter_1999.tape_ptr ? (b == 0 ? 255 : b - 1) : b)] :
      local.curr_2000.code == ","
        ? [for i, b in local.iter_1999.tape : (i == local.iter_1999.tape_ptr ? local.ascii_lookup[local.curr_2000.input] : b)]
        : local.iter_1999.tape)

    tape_ptr = (
      local.curr_2000.code == "<"
        ? local.iter_1999.tape_ptr == 0 ? length(local.iter_1999.tape) - 1 : local.iter_1999.tape_ptr - 1 :
      local.curr_2000.code == ">"
        ? local.iter_1999.tape_ptr == length(local.iter_1999.tape) - 1 ? 0 : local.iter_1999.tape_ptr + 1
        : local.iter_1999.tape_ptr)

    code_ptr = 1 + (
      local.curr_2000.code == "["
        ? local.iter_1999.tape[local.iter_1999.tape_ptr] == 0 ? var.bracket_lut[tostring(local.iter_1999.code_ptr)] : local.iter_1999.code_ptr :
      local.curr_2000.code == "]"
        ? local.iter_1999.tape[local.iter_1999.tape_ptr] != 0 ? var.bracket_lut[tostring(local.iter_1999.code_ptr)] : local.iter_1999.code_ptr
        : local.iter_1999.code_ptr)

    steps_taken = 1 + local.iter_1999.steps_taken
  }
}

output "tape" {
  value = local.iter_2000.tape
}

output "output" {
  value = local.iter_2000.output
}

output "final_iteration" {
  value = local.iter_2000
}
